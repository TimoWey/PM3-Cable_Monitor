
STM32F429I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0002e8b8  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000171e8  0802ea68  0802ea68  0003ea68  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 00003cf6  08045c50  08045c50  00055c50  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 0000024c  08049948  08049948  00059948  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 00000734  08049b94  08049b94  00059b94  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 000850f0  0804a2c8  0804a2c8  0005a2c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  080cf3b8  080cf3b8  000e016c  2**0
                  CONTENTS
  8 .ARM          00000008  080cf3b8  080cf3b8  000df3b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  080cf3c0  080cf3c0  000e016c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  080cf3c0  080cf3c0  000df3c0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000004  080cf3d4  080cf3d4  000df3d4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         0000016c  20000000  080cf3d8  000e0000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          00014304  20000170  080cf544  000e0170  2**3
                  ALLOC
 14 ._user_heap_stack 00001404  20014474  080cf544  000e4474  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  000e016c  2**0
                  CONTENTS, READONLY
 16 TouchGFX_Framebuffer 00070800  d0000000  d0000000  000f0000  2**2
                  ALLOC
 17 .comment      00000132  00000000  00000000  000e019c  2**0
                  CONTENTS, READONLY
 18 .debug_line   00097393  00000000  00000000  000e02ce  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line_str 00000093  00000000  00000000  00177661  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_info   00251061  00000000  00000000  001776f4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_abbrev 0002cb0c  00000000  00000000  003c8755  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_aranges 00004498  00000000  00000000  003f5268  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_str    00120a32  00000000  00000000  003f9700  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_rnglists 00008804  00000000  00000000  0051a132  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_loclists 000359d3  00000000  00000000  00522936  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_macro  0003b885  00000000  00000000  00558309  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_frame  0000cdc8  00000000  00000000  00593b90  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 28 .debug_loc    0000350f  00000000  00000000  005a0958  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 29 .debug_ranges 00000150  00000000  00000000  005a3e67  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000170 	.word	0x20000170
 80001cc:	00000000 	.word	0x00000000
 80001d0:	0802ea50 	.word	0x0802ea50

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000174 	.word	0x20000174
 80001ec:	0802ea50 	.word	0x0802ea50

080001f0 <arm_bitreversal_32>:
 80001f0:	1c4b      	adds	r3, r1, #1
 80001f2:	2b01      	cmp	r3, #1
 80001f4:	bf98      	it	ls
 80001f6:	4770      	bxls	lr
 80001f8:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
 80001fc:	1c91      	adds	r1, r2, #2
 80001fe:	089b      	lsrs	r3, r3, #2

08000200 <arm_bitreversal_32_0>:
 8000200:	f8b1 8004 	ldrh.w	r8, [r1, #4]
 8000204:	f8b1 9002 	ldrh.w	r9, [r1, #2]
 8000208:	880a      	ldrh	r2, [r1, #0]
 800020a:	f831 cc02 	ldrh.w	ip, [r1, #-2]
 800020e:	4480      	add	r8, r0
 8000210:	4481      	add	r9, r0
 8000212:	4402      	add	r2, r0
 8000214:	4484      	add	ip, r0
 8000216:	f8d9 7000 	ldr.w	r7, [r9]
 800021a:	f8d8 6000 	ldr.w	r6, [r8]
 800021e:	6815      	ldr	r5, [r2, #0]
 8000220:	f8dc 4000 	ldr.w	r4, [ip]
 8000224:	f8c9 6000 	str.w	r6, [r9]
 8000228:	f8c8 7000 	str.w	r7, [r8]
 800022c:	f8cc 5000 	str.w	r5, [ip]
 8000230:	6014      	str	r4, [r2, #0]
 8000232:	f8d9 7004 	ldr.w	r7, [r9, #4]
 8000236:	f8d8 6004 	ldr.w	r6, [r8, #4]
 800023a:	6855      	ldr	r5, [r2, #4]
 800023c:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8000240:	f8c9 6004 	str.w	r6, [r9, #4]
 8000244:	f8c8 7004 	str.w	r7, [r8, #4]
 8000248:	f8cc 5004 	str.w	r5, [ip, #4]
 800024c:	6054      	str	r4, [r2, #4]
 800024e:	3108      	adds	r1, #8
 8000250:	3b01      	subs	r3, #1
 8000252:	d1d5      	bne.n	8000200 <arm_bitreversal_32_0>
 8000254:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
 8000258:	4770      	bx	lr

0800025a <arm_bitreversal_16>:
 800025a:	1c4b      	adds	r3, r1, #1
 800025c:	2b01      	cmp	r3, #1
 800025e:	bf98      	it	ls
 8000260:	4770      	bxls	lr
 8000262:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
 8000266:	1c91      	adds	r1, r2, #2
 8000268:	089b      	lsrs	r3, r3, #2

0800026a <arm_bitreversal_16_0>:
 800026a:	f8b1 8004 	ldrh.w	r8, [r1, #4]
 800026e:	f8b1 9002 	ldrh.w	r9, [r1, #2]
 8000272:	880a      	ldrh	r2, [r1, #0]
 8000274:	f831 cc02 	ldrh.w	ip, [r1, #-2]
 8000278:	eb00 0858 	add.w	r8, r0, r8, lsr #1
 800027c:	eb00 0959 	add.w	r9, r0, r9, lsr #1
 8000280:	eb00 0252 	add.w	r2, r0, r2, lsr #1
 8000284:	eb00 0c5c 	add.w	ip, r0, ip, lsr #1
 8000288:	f8d9 7000 	ldr.w	r7, [r9]
 800028c:	f8d8 6000 	ldr.w	r6, [r8]
 8000290:	6815      	ldr	r5, [r2, #0]
 8000292:	f8dc 4000 	ldr.w	r4, [ip]
 8000296:	f8c9 6000 	str.w	r6, [r9]
 800029a:	f8c8 7000 	str.w	r7, [r8]
 800029e:	f8cc 5000 	str.w	r5, [ip]
 80002a2:	6014      	str	r4, [r2, #0]
 80002a4:	3108      	adds	r1, #8
 80002a6:	3b01      	subs	r3, #1
 80002a8:	d1df      	bne.n	800026a <arm_bitreversal_16_0>
 80002aa:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
 80002ae:	4770      	bx	lr

080002b0 <memchr>:
 80002b0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80002b4:	2a10      	cmp	r2, #16
 80002b6:	db2b      	blt.n	8000310 <memchr+0x60>
 80002b8:	f010 0f07 	tst.w	r0, #7
 80002bc:	d008      	beq.n	80002d0 <memchr+0x20>
 80002be:	f810 3b01 	ldrb.w	r3, [r0], #1
 80002c2:	3a01      	subs	r2, #1
 80002c4:	428b      	cmp	r3, r1
 80002c6:	d02d      	beq.n	8000324 <memchr+0x74>
 80002c8:	f010 0f07 	tst.w	r0, #7
 80002cc:	b342      	cbz	r2, 8000320 <memchr+0x70>
 80002ce:	d1f6      	bne.n	80002be <memchr+0xe>
 80002d0:	b4f0      	push	{r4, r5, r6, r7}
 80002d2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80002d6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80002da:	f022 0407 	bic.w	r4, r2, #7
 80002de:	f07f 0700 	mvns.w	r7, #0
 80002e2:	2300      	movs	r3, #0
 80002e4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 80002e8:	3c08      	subs	r4, #8
 80002ea:	ea85 0501 	eor.w	r5, r5, r1
 80002ee:	ea86 0601 	eor.w	r6, r6, r1
 80002f2:	fa85 f547 	uadd8	r5, r5, r7
 80002f6:	faa3 f587 	sel	r5, r3, r7
 80002fa:	fa86 f647 	uadd8	r6, r6, r7
 80002fe:	faa5 f687 	sel	r6, r5, r7
 8000302:	b98e      	cbnz	r6, 8000328 <memchr+0x78>
 8000304:	d1ee      	bne.n	80002e4 <memchr+0x34>
 8000306:	bcf0      	pop	{r4, r5, r6, r7}
 8000308:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800030c:	f002 0207 	and.w	r2, r2, #7
 8000310:	b132      	cbz	r2, 8000320 <memchr+0x70>
 8000312:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000316:	3a01      	subs	r2, #1
 8000318:	ea83 0301 	eor.w	r3, r3, r1
 800031c:	b113      	cbz	r3, 8000324 <memchr+0x74>
 800031e:	d1f8      	bne.n	8000312 <memchr+0x62>
 8000320:	2000      	movs	r0, #0
 8000322:	4770      	bx	lr
 8000324:	3801      	subs	r0, #1
 8000326:	4770      	bx	lr
 8000328:	2d00      	cmp	r5, #0
 800032a:	bf06      	itte	eq
 800032c:	4635      	moveq	r5, r6
 800032e:	3803      	subeq	r0, #3
 8000330:	3807      	subne	r0, #7
 8000332:	f015 0f01 	tst.w	r5, #1
 8000336:	d107      	bne.n	8000348 <memchr+0x98>
 8000338:	3001      	adds	r0, #1
 800033a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800033e:	bf02      	ittt	eq
 8000340:	3001      	addeq	r0, #1
 8000342:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000346:	3001      	addeq	r0, #1
 8000348:	bcf0      	pop	{r4, r5, r6, r7}
 800034a:	3801      	subs	r0, #1
 800034c:	4770      	bx	lr
 800034e:	bf00      	nop

08000350 <__aeabi_dmul>:
 8000350:	b570      	push	{r4, r5, r6, lr}
 8000352:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000356:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 800035a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800035e:	bf1d      	ittte	ne
 8000360:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000364:	ea94 0f0c 	teqne	r4, ip
 8000368:	ea95 0f0c 	teqne	r5, ip
 800036c:	f000 f8de 	bleq	800052c <__aeabi_dmul+0x1dc>
 8000370:	442c      	add	r4, r5
 8000372:	ea81 0603 	eor.w	r6, r1, r3
 8000376:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 800037a:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 800037e:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 8000382:	bf18      	it	ne
 8000384:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000388:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 800038c:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000390:	d038      	beq.n	8000404 <__aeabi_dmul+0xb4>
 8000392:	fba0 ce02 	umull	ip, lr, r0, r2
 8000396:	f04f 0500 	mov.w	r5, #0
 800039a:	fbe1 e502 	umlal	lr, r5, r1, r2
 800039e:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 80003a2:	fbe0 e503 	umlal	lr, r5, r0, r3
 80003a6:	f04f 0600 	mov.w	r6, #0
 80003aa:	fbe1 5603 	umlal	r5, r6, r1, r3
 80003ae:	f09c 0f00 	teq	ip, #0
 80003b2:	bf18      	it	ne
 80003b4:	f04e 0e01 	orrne.w	lr, lr, #1
 80003b8:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 80003bc:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 80003c0:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 80003c4:	d204      	bcs.n	80003d0 <__aeabi_dmul+0x80>
 80003c6:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80003ca:	416d      	adcs	r5, r5
 80003cc:	eb46 0606 	adc.w	r6, r6, r6
 80003d0:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80003d4:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80003d8:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80003dc:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80003e0:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80003e4:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80003e8:	bf88      	it	hi
 80003ea:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80003ee:	d81e      	bhi.n	800042e <__aeabi_dmul+0xde>
 80003f0:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80003f4:	bf08      	it	eq
 80003f6:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80003fa:	f150 0000 	adcs.w	r0, r0, #0
 80003fe:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000402:	bd70      	pop	{r4, r5, r6, pc}
 8000404:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 8000408:	ea46 0101 	orr.w	r1, r6, r1
 800040c:	ea40 0002 	orr.w	r0, r0, r2
 8000410:	ea81 0103 	eor.w	r1, r1, r3
 8000414:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000418:	bfc2      	ittt	gt
 800041a:	ebd4 050c 	rsbsgt	r5, r4, ip
 800041e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000422:	bd70      	popgt	{r4, r5, r6, pc}
 8000424:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000428:	f04f 0e00 	mov.w	lr, #0
 800042c:	3c01      	subs	r4, #1
 800042e:	f300 80ab 	bgt.w	8000588 <__aeabi_dmul+0x238>
 8000432:	f114 0f36 	cmn.w	r4, #54	; 0x36
 8000436:	bfde      	ittt	le
 8000438:	2000      	movle	r0, #0
 800043a:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 800043e:	bd70      	pople	{r4, r5, r6, pc}
 8000440:	f1c4 0400 	rsb	r4, r4, #0
 8000444:	3c20      	subs	r4, #32
 8000446:	da35      	bge.n	80004b4 <__aeabi_dmul+0x164>
 8000448:	340c      	adds	r4, #12
 800044a:	dc1b      	bgt.n	8000484 <__aeabi_dmul+0x134>
 800044c:	f104 0414 	add.w	r4, r4, #20
 8000450:	f1c4 0520 	rsb	r5, r4, #32
 8000454:	fa00 f305 	lsl.w	r3, r0, r5
 8000458:	fa20 f004 	lsr.w	r0, r0, r4
 800045c:	fa01 f205 	lsl.w	r2, r1, r5
 8000460:	ea40 0002 	orr.w	r0, r0, r2
 8000464:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000468:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 800046c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000470:	fa21 f604 	lsr.w	r6, r1, r4
 8000474:	eb42 0106 	adc.w	r1, r2, r6
 8000478:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800047c:	bf08      	it	eq
 800047e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000482:	bd70      	pop	{r4, r5, r6, pc}
 8000484:	f1c4 040c 	rsb	r4, r4, #12
 8000488:	f1c4 0520 	rsb	r5, r4, #32
 800048c:	fa00 f304 	lsl.w	r3, r0, r4
 8000490:	fa20 f005 	lsr.w	r0, r0, r5
 8000494:	fa01 f204 	lsl.w	r2, r1, r4
 8000498:	ea40 0002 	orr.w	r0, r0, r2
 800049c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80004a0:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80004a4:	f141 0100 	adc.w	r1, r1, #0
 80004a8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80004ac:	bf08      	it	eq
 80004ae:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80004b2:	bd70      	pop	{r4, r5, r6, pc}
 80004b4:	f1c4 0520 	rsb	r5, r4, #32
 80004b8:	fa00 f205 	lsl.w	r2, r0, r5
 80004bc:	ea4e 0e02 	orr.w	lr, lr, r2
 80004c0:	fa20 f304 	lsr.w	r3, r0, r4
 80004c4:	fa01 f205 	lsl.w	r2, r1, r5
 80004c8:	ea43 0302 	orr.w	r3, r3, r2
 80004cc:	fa21 f004 	lsr.w	r0, r1, r4
 80004d0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80004d4:	fa21 f204 	lsr.w	r2, r1, r4
 80004d8:	ea20 0002 	bic.w	r0, r0, r2
 80004dc:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80004e0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80004e4:	bf08      	it	eq
 80004e6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80004ea:	bd70      	pop	{r4, r5, r6, pc}
 80004ec:	f094 0f00 	teq	r4, #0
 80004f0:	d10f      	bne.n	8000512 <__aeabi_dmul+0x1c2>
 80004f2:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80004f6:	0040      	lsls	r0, r0, #1
 80004f8:	eb41 0101 	adc.w	r1, r1, r1
 80004fc:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000500:	bf08      	it	eq
 8000502:	3c01      	subeq	r4, #1
 8000504:	d0f7      	beq.n	80004f6 <__aeabi_dmul+0x1a6>
 8000506:	ea41 0106 	orr.w	r1, r1, r6
 800050a:	f095 0f00 	teq	r5, #0
 800050e:	bf18      	it	ne
 8000510:	4770      	bxne	lr
 8000512:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 8000516:	0052      	lsls	r2, r2, #1
 8000518:	eb43 0303 	adc.w	r3, r3, r3
 800051c:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000520:	bf08      	it	eq
 8000522:	3d01      	subeq	r5, #1
 8000524:	d0f7      	beq.n	8000516 <__aeabi_dmul+0x1c6>
 8000526:	ea43 0306 	orr.w	r3, r3, r6
 800052a:	4770      	bx	lr
 800052c:	ea94 0f0c 	teq	r4, ip
 8000530:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000534:	bf18      	it	ne
 8000536:	ea95 0f0c 	teqne	r5, ip
 800053a:	d00c      	beq.n	8000556 <__aeabi_dmul+0x206>
 800053c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000540:	bf18      	it	ne
 8000542:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000546:	d1d1      	bne.n	80004ec <__aeabi_dmul+0x19c>
 8000548:	ea81 0103 	eor.w	r1, r1, r3
 800054c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000550:	f04f 0000 	mov.w	r0, #0
 8000554:	bd70      	pop	{r4, r5, r6, pc}
 8000556:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 800055a:	bf06      	itte	eq
 800055c:	4610      	moveq	r0, r2
 800055e:	4619      	moveq	r1, r3
 8000560:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000564:	d019      	beq.n	800059a <__aeabi_dmul+0x24a>
 8000566:	ea94 0f0c 	teq	r4, ip
 800056a:	d102      	bne.n	8000572 <__aeabi_dmul+0x222>
 800056c:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000570:	d113      	bne.n	800059a <__aeabi_dmul+0x24a>
 8000572:	ea95 0f0c 	teq	r5, ip
 8000576:	d105      	bne.n	8000584 <__aeabi_dmul+0x234>
 8000578:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 800057c:	bf1c      	itt	ne
 800057e:	4610      	movne	r0, r2
 8000580:	4619      	movne	r1, r3
 8000582:	d10a      	bne.n	800059a <__aeabi_dmul+0x24a>
 8000584:	ea81 0103 	eor.w	r1, r1, r3
 8000588:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800058c:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000590:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000594:	f04f 0000 	mov.w	r0, #0
 8000598:	bd70      	pop	{r4, r5, r6, pc}
 800059a:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 800059e:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 80005a2:	bd70      	pop	{r4, r5, r6, pc}

080005a4 <__aeabi_drsub>:
 80005a4:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80005a8:	e002      	b.n	80005b0 <__adddf3>
 80005aa:	bf00      	nop

080005ac <__aeabi_dsub>:
 80005ac:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080005b0 <__adddf3>:
 80005b0:	b530      	push	{r4, r5, lr}
 80005b2:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80005b6:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80005ba:	ea94 0f05 	teq	r4, r5
 80005be:	bf08      	it	eq
 80005c0:	ea90 0f02 	teqeq	r0, r2
 80005c4:	bf1f      	itttt	ne
 80005c6:	ea54 0c00 	orrsne.w	ip, r4, r0
 80005ca:	ea55 0c02 	orrsne.w	ip, r5, r2
 80005ce:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80005d2:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80005d6:	f000 80e2 	beq.w	800079e <__adddf3+0x1ee>
 80005da:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80005de:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80005e2:	bfb8      	it	lt
 80005e4:	426d      	neglt	r5, r5
 80005e6:	dd0c      	ble.n	8000602 <__adddf3+0x52>
 80005e8:	442c      	add	r4, r5
 80005ea:	ea80 0202 	eor.w	r2, r0, r2
 80005ee:	ea81 0303 	eor.w	r3, r1, r3
 80005f2:	ea82 0000 	eor.w	r0, r2, r0
 80005f6:	ea83 0101 	eor.w	r1, r3, r1
 80005fa:	ea80 0202 	eor.w	r2, r0, r2
 80005fe:	ea81 0303 	eor.w	r3, r1, r3
 8000602:	2d36      	cmp	r5, #54	; 0x36
 8000604:	bf88      	it	hi
 8000606:	bd30      	pophi	{r4, r5, pc}
 8000608:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 800060c:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000610:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000614:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000618:	d002      	beq.n	8000620 <__adddf3+0x70>
 800061a:	4240      	negs	r0, r0
 800061c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000620:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000624:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000628:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 800062c:	d002      	beq.n	8000634 <__adddf3+0x84>
 800062e:	4252      	negs	r2, r2
 8000630:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000634:	ea94 0f05 	teq	r4, r5
 8000638:	f000 80a7 	beq.w	800078a <__adddf3+0x1da>
 800063c:	f1a4 0401 	sub.w	r4, r4, #1
 8000640:	f1d5 0e20 	rsbs	lr, r5, #32
 8000644:	db0d      	blt.n	8000662 <__adddf3+0xb2>
 8000646:	fa02 fc0e 	lsl.w	ip, r2, lr
 800064a:	fa22 f205 	lsr.w	r2, r2, r5
 800064e:	1880      	adds	r0, r0, r2
 8000650:	f141 0100 	adc.w	r1, r1, #0
 8000654:	fa03 f20e 	lsl.w	r2, r3, lr
 8000658:	1880      	adds	r0, r0, r2
 800065a:	fa43 f305 	asr.w	r3, r3, r5
 800065e:	4159      	adcs	r1, r3
 8000660:	e00e      	b.n	8000680 <__adddf3+0xd0>
 8000662:	f1a5 0520 	sub.w	r5, r5, #32
 8000666:	f10e 0e20 	add.w	lr, lr, #32
 800066a:	2a01      	cmp	r2, #1
 800066c:	fa03 fc0e 	lsl.w	ip, r3, lr
 8000670:	bf28      	it	cs
 8000672:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000676:	fa43 f305 	asr.w	r3, r3, r5
 800067a:	18c0      	adds	r0, r0, r3
 800067c:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 8000680:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000684:	d507      	bpl.n	8000696 <__adddf3+0xe6>
 8000686:	f04f 0e00 	mov.w	lr, #0
 800068a:	f1dc 0c00 	rsbs	ip, ip, #0
 800068e:	eb7e 0000 	sbcs.w	r0, lr, r0
 8000692:	eb6e 0101 	sbc.w	r1, lr, r1
 8000696:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 800069a:	d31b      	bcc.n	80006d4 <__adddf3+0x124>
 800069c:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80006a0:	d30c      	bcc.n	80006bc <__adddf3+0x10c>
 80006a2:	0849      	lsrs	r1, r1, #1
 80006a4:	ea5f 0030 	movs.w	r0, r0, rrx
 80006a8:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80006ac:	f104 0401 	add.w	r4, r4, #1
 80006b0:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80006b4:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80006b8:	f080 809a 	bcs.w	80007f0 <__adddf3+0x240>
 80006bc:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80006c0:	bf08      	it	eq
 80006c2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80006c6:	f150 0000 	adcs.w	r0, r0, #0
 80006ca:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ce:	ea41 0105 	orr.w	r1, r1, r5
 80006d2:	bd30      	pop	{r4, r5, pc}
 80006d4:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80006d8:	4140      	adcs	r0, r0
 80006da:	eb41 0101 	adc.w	r1, r1, r1
 80006de:	3c01      	subs	r4, #1
 80006e0:	bf28      	it	cs
 80006e2:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80006e6:	d2e9      	bcs.n	80006bc <__adddf3+0x10c>
 80006e8:	f091 0f00 	teq	r1, #0
 80006ec:	bf04      	itt	eq
 80006ee:	4601      	moveq	r1, r0
 80006f0:	2000      	moveq	r0, #0
 80006f2:	fab1 f381 	clz	r3, r1
 80006f6:	bf08      	it	eq
 80006f8:	3320      	addeq	r3, #32
 80006fa:	f1a3 030b 	sub.w	r3, r3, #11
 80006fe:	f1b3 0220 	subs.w	r2, r3, #32
 8000702:	da0c      	bge.n	800071e <__adddf3+0x16e>
 8000704:	320c      	adds	r2, #12
 8000706:	dd08      	ble.n	800071a <__adddf3+0x16a>
 8000708:	f102 0c14 	add.w	ip, r2, #20
 800070c:	f1c2 020c 	rsb	r2, r2, #12
 8000710:	fa01 f00c 	lsl.w	r0, r1, ip
 8000714:	fa21 f102 	lsr.w	r1, r1, r2
 8000718:	e00c      	b.n	8000734 <__adddf3+0x184>
 800071a:	f102 0214 	add.w	r2, r2, #20
 800071e:	bfd8      	it	le
 8000720:	f1c2 0c20 	rsble	ip, r2, #32
 8000724:	fa01 f102 	lsl.w	r1, r1, r2
 8000728:	fa20 fc0c 	lsr.w	ip, r0, ip
 800072c:	bfdc      	itt	le
 800072e:	ea41 010c 	orrle.w	r1, r1, ip
 8000732:	4090      	lslle	r0, r2
 8000734:	1ae4      	subs	r4, r4, r3
 8000736:	bfa2      	ittt	ge
 8000738:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 800073c:	4329      	orrge	r1, r5
 800073e:	bd30      	popge	{r4, r5, pc}
 8000740:	ea6f 0404 	mvn.w	r4, r4
 8000744:	3c1f      	subs	r4, #31
 8000746:	da1c      	bge.n	8000782 <__adddf3+0x1d2>
 8000748:	340c      	adds	r4, #12
 800074a:	dc0e      	bgt.n	800076a <__adddf3+0x1ba>
 800074c:	f104 0414 	add.w	r4, r4, #20
 8000750:	f1c4 0220 	rsb	r2, r4, #32
 8000754:	fa20 f004 	lsr.w	r0, r0, r4
 8000758:	fa01 f302 	lsl.w	r3, r1, r2
 800075c:	ea40 0003 	orr.w	r0, r0, r3
 8000760:	fa21 f304 	lsr.w	r3, r1, r4
 8000764:	ea45 0103 	orr.w	r1, r5, r3
 8000768:	bd30      	pop	{r4, r5, pc}
 800076a:	f1c4 040c 	rsb	r4, r4, #12
 800076e:	f1c4 0220 	rsb	r2, r4, #32
 8000772:	fa20 f002 	lsr.w	r0, r0, r2
 8000776:	fa01 f304 	lsl.w	r3, r1, r4
 800077a:	ea40 0003 	orr.w	r0, r0, r3
 800077e:	4629      	mov	r1, r5
 8000780:	bd30      	pop	{r4, r5, pc}
 8000782:	fa21 f004 	lsr.w	r0, r1, r4
 8000786:	4629      	mov	r1, r5
 8000788:	bd30      	pop	{r4, r5, pc}
 800078a:	f094 0f00 	teq	r4, #0
 800078e:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 8000792:	bf06      	itte	eq
 8000794:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000798:	3401      	addeq	r4, #1
 800079a:	3d01      	subne	r5, #1
 800079c:	e74e      	b.n	800063c <__adddf3+0x8c>
 800079e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80007a2:	bf18      	it	ne
 80007a4:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80007a8:	d029      	beq.n	80007fe <__adddf3+0x24e>
 80007aa:	ea94 0f05 	teq	r4, r5
 80007ae:	bf08      	it	eq
 80007b0:	ea90 0f02 	teqeq	r0, r2
 80007b4:	d005      	beq.n	80007c2 <__adddf3+0x212>
 80007b6:	ea54 0c00 	orrs.w	ip, r4, r0
 80007ba:	bf04      	itt	eq
 80007bc:	4619      	moveq	r1, r3
 80007be:	4610      	moveq	r0, r2
 80007c0:	bd30      	pop	{r4, r5, pc}
 80007c2:	ea91 0f03 	teq	r1, r3
 80007c6:	bf1e      	ittt	ne
 80007c8:	2100      	movne	r1, #0
 80007ca:	2000      	movne	r0, #0
 80007cc:	bd30      	popne	{r4, r5, pc}
 80007ce:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80007d2:	d105      	bne.n	80007e0 <__adddf3+0x230>
 80007d4:	0040      	lsls	r0, r0, #1
 80007d6:	4149      	adcs	r1, r1
 80007d8:	bf28      	it	cs
 80007da:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80007de:	bd30      	pop	{r4, r5, pc}
 80007e0:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80007e4:	bf3c      	itt	cc
 80007e6:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80007ea:	bd30      	popcc	{r4, r5, pc}
 80007ec:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80007f0:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80007f4:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80007f8:	f04f 0000 	mov.w	r0, #0
 80007fc:	bd30      	pop	{r4, r5, pc}
 80007fe:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000802:	bf1a      	itte	ne
 8000804:	4619      	movne	r1, r3
 8000806:	4610      	movne	r0, r2
 8000808:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 800080c:	bf1c      	itt	ne
 800080e:	460b      	movne	r3, r1
 8000810:	4602      	movne	r2, r0
 8000812:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000816:	bf06      	itte	eq
 8000818:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 800081c:	ea91 0f03 	teqeq	r1, r3
 8000820:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000824:	bd30      	pop	{r4, r5, pc}
 8000826:	bf00      	nop

08000828 <__aeabi_ui2d>:
 8000828:	f090 0f00 	teq	r0, #0
 800082c:	bf04      	itt	eq
 800082e:	2100      	moveq	r1, #0
 8000830:	4770      	bxeq	lr
 8000832:	b530      	push	{r4, r5, lr}
 8000834:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000838:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800083c:	f04f 0500 	mov.w	r5, #0
 8000840:	f04f 0100 	mov.w	r1, #0
 8000844:	e750      	b.n	80006e8 <__adddf3+0x138>
 8000846:	bf00      	nop

08000848 <__aeabi_i2d>:
 8000848:	f090 0f00 	teq	r0, #0
 800084c:	bf04      	itt	eq
 800084e:	2100      	moveq	r1, #0
 8000850:	4770      	bxeq	lr
 8000852:	b530      	push	{r4, r5, lr}
 8000854:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000858:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800085c:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 8000860:	bf48      	it	mi
 8000862:	4240      	negmi	r0, r0
 8000864:	f04f 0100 	mov.w	r1, #0
 8000868:	e73e      	b.n	80006e8 <__adddf3+0x138>
 800086a:	bf00      	nop

0800086c <__aeabi_f2d>:
 800086c:	0042      	lsls	r2, r0, #1
 800086e:	ea4f 01e2 	mov.w	r1, r2, asr #3
 8000872:	ea4f 0131 	mov.w	r1, r1, rrx
 8000876:	ea4f 7002 	mov.w	r0, r2, lsl #28
 800087a:	bf1f      	itttt	ne
 800087c:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 8000880:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000884:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000888:	4770      	bxne	lr
 800088a:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800088e:	bf08      	it	eq
 8000890:	4770      	bxeq	lr
 8000892:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000896:	bf04      	itt	eq
 8000898:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 800089c:	4770      	bxeq	lr
 800089e:	b530      	push	{r4, r5, lr}
 80008a0:	f44f 7460 	mov.w	r4, #896	; 0x380
 80008a4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80008a8:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80008ac:	e71c      	b.n	80006e8 <__adddf3+0x138>
 80008ae:	bf00      	nop

080008b0 <__aeabi_ul2d>:
 80008b0:	ea50 0201 	orrs.w	r2, r0, r1
 80008b4:	bf08      	it	eq
 80008b6:	4770      	bxeq	lr
 80008b8:	b530      	push	{r4, r5, lr}
 80008ba:	f04f 0500 	mov.w	r5, #0
 80008be:	e00a      	b.n	80008d6 <__aeabi_l2d+0x16>

080008c0 <__aeabi_l2d>:
 80008c0:	ea50 0201 	orrs.w	r2, r0, r1
 80008c4:	bf08      	it	eq
 80008c6:	4770      	bxeq	lr
 80008c8:	b530      	push	{r4, r5, lr}
 80008ca:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80008ce:	d502      	bpl.n	80008d6 <__aeabi_l2d+0x16>
 80008d0:	4240      	negs	r0, r0
 80008d2:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80008d6:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80008da:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80008de:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80008e2:	f43f aed8 	beq.w	8000696 <__adddf3+0xe6>
 80008e6:	f04f 0203 	mov.w	r2, #3
 80008ea:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80008ee:	bf18      	it	ne
 80008f0:	3203      	addne	r2, #3
 80008f2:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80008f6:	bf18      	it	ne
 80008f8:	3203      	addne	r2, #3
 80008fa:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80008fe:	f1c2 0320 	rsb	r3, r2, #32
 8000902:	fa00 fc03 	lsl.w	ip, r0, r3
 8000906:	fa20 f002 	lsr.w	r0, r0, r2
 800090a:	fa01 fe03 	lsl.w	lr, r1, r3
 800090e:	ea40 000e 	orr.w	r0, r0, lr
 8000912:	fa21 f102 	lsr.w	r1, r1, r2
 8000916:	4414      	add	r4, r2
 8000918:	e6bd      	b.n	8000696 <__adddf3+0xe6>
 800091a:	bf00      	nop

0800091c <__aeabi_d2f>:
 800091c:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000920:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000924:	bf24      	itt	cs
 8000926:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 800092a:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 800092e:	d90d      	bls.n	800094c <__aeabi_d2f+0x30>
 8000930:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000934:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000938:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 800093c:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000940:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000944:	bf08      	it	eq
 8000946:	f020 0001 	biceq.w	r0, r0, #1
 800094a:	4770      	bx	lr
 800094c:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000950:	d121      	bne.n	8000996 <__aeabi_d2f+0x7a>
 8000952:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000956:	bfbc      	itt	lt
 8000958:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 800095c:	4770      	bxlt	lr
 800095e:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000962:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000966:	f1c2 0218 	rsb	r2, r2, #24
 800096a:	f1c2 0c20 	rsb	ip, r2, #32
 800096e:	fa10 f30c 	lsls.w	r3, r0, ip
 8000972:	fa20 f002 	lsr.w	r0, r0, r2
 8000976:	bf18      	it	ne
 8000978:	f040 0001 	orrne.w	r0, r0, #1
 800097c:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000980:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000984:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000988:	ea40 000c 	orr.w	r0, r0, ip
 800098c:	fa23 f302 	lsr.w	r3, r3, r2
 8000990:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000994:	e7cc      	b.n	8000930 <__aeabi_d2f+0x14>
 8000996:	ea7f 5362 	mvns.w	r3, r2, asr #21
 800099a:	d107      	bne.n	80009ac <__aeabi_d2f+0x90>
 800099c:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 80009a0:	bf1e      	ittt	ne
 80009a2:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 80009a6:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 80009aa:	4770      	bxne	lr
 80009ac:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 80009b0:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 80009b4:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 80009b8:	4770      	bx	lr
 80009ba:	bf00      	nop

080009bc <__aeabi_uldivmod>:
 80009bc:	b953      	cbnz	r3, 80009d4 <__aeabi_uldivmod+0x18>
 80009be:	b94a      	cbnz	r2, 80009d4 <__aeabi_uldivmod+0x18>
 80009c0:	2900      	cmp	r1, #0
 80009c2:	bf08      	it	eq
 80009c4:	2800      	cmpeq	r0, #0
 80009c6:	bf1c      	itt	ne
 80009c8:	f04f 31ff 	movne.w	r1, #4294967295
 80009cc:	f04f 30ff 	movne.w	r0, #4294967295
 80009d0:	f000 b970 	b.w	8000cb4 <__aeabi_idiv0>
 80009d4:	f1ad 0c08 	sub.w	ip, sp, #8
 80009d8:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80009dc:	f000 f806 	bl	80009ec <__udivmoddi4>
 80009e0:	f8dd e004 	ldr.w	lr, [sp, #4]
 80009e4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80009e8:	b004      	add	sp, #16
 80009ea:	4770      	bx	lr

080009ec <__udivmoddi4>:
 80009ec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80009f0:	9e08      	ldr	r6, [sp, #32]
 80009f2:	460d      	mov	r5, r1
 80009f4:	4604      	mov	r4, r0
 80009f6:	460f      	mov	r7, r1
 80009f8:	2b00      	cmp	r3, #0
 80009fa:	d14a      	bne.n	8000a92 <__udivmoddi4+0xa6>
 80009fc:	428a      	cmp	r2, r1
 80009fe:	4694      	mov	ip, r2
 8000a00:	d965      	bls.n	8000ace <__udivmoddi4+0xe2>
 8000a02:	fab2 f382 	clz	r3, r2
 8000a06:	b143      	cbz	r3, 8000a1a <__udivmoddi4+0x2e>
 8000a08:	fa02 fc03 	lsl.w	ip, r2, r3
 8000a0c:	f1c3 0220 	rsb	r2, r3, #32
 8000a10:	409f      	lsls	r7, r3
 8000a12:	fa20 f202 	lsr.w	r2, r0, r2
 8000a16:	4317      	orrs	r7, r2
 8000a18:	409c      	lsls	r4, r3
 8000a1a:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 8000a1e:	fa1f f58c 	uxth.w	r5, ip
 8000a22:	fbb7 f1fe 	udiv	r1, r7, lr
 8000a26:	0c22      	lsrs	r2, r4, #16
 8000a28:	fb0e 7711 	mls	r7, lr, r1, r7
 8000a2c:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 8000a30:	fb01 f005 	mul.w	r0, r1, r5
 8000a34:	4290      	cmp	r0, r2
 8000a36:	d90a      	bls.n	8000a4e <__udivmoddi4+0x62>
 8000a38:	eb1c 0202 	adds.w	r2, ip, r2
 8000a3c:	f101 37ff 	add.w	r7, r1, #4294967295
 8000a40:	f080 811c 	bcs.w	8000c7c <__udivmoddi4+0x290>
 8000a44:	4290      	cmp	r0, r2
 8000a46:	f240 8119 	bls.w	8000c7c <__udivmoddi4+0x290>
 8000a4a:	3902      	subs	r1, #2
 8000a4c:	4462      	add	r2, ip
 8000a4e:	1a12      	subs	r2, r2, r0
 8000a50:	b2a4      	uxth	r4, r4
 8000a52:	fbb2 f0fe 	udiv	r0, r2, lr
 8000a56:	fb0e 2210 	mls	r2, lr, r0, r2
 8000a5a:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000a5e:	fb00 f505 	mul.w	r5, r0, r5
 8000a62:	42a5      	cmp	r5, r4
 8000a64:	d90a      	bls.n	8000a7c <__udivmoddi4+0x90>
 8000a66:	eb1c 0404 	adds.w	r4, ip, r4
 8000a6a:	f100 32ff 	add.w	r2, r0, #4294967295
 8000a6e:	f080 8107 	bcs.w	8000c80 <__udivmoddi4+0x294>
 8000a72:	42a5      	cmp	r5, r4
 8000a74:	f240 8104 	bls.w	8000c80 <__udivmoddi4+0x294>
 8000a78:	4464      	add	r4, ip
 8000a7a:	3802      	subs	r0, #2
 8000a7c:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000a80:	1b64      	subs	r4, r4, r5
 8000a82:	2100      	movs	r1, #0
 8000a84:	b11e      	cbz	r6, 8000a8e <__udivmoddi4+0xa2>
 8000a86:	40dc      	lsrs	r4, r3
 8000a88:	2300      	movs	r3, #0
 8000a8a:	e9c6 4300 	strd	r4, r3, [r6]
 8000a8e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000a92:	428b      	cmp	r3, r1
 8000a94:	d908      	bls.n	8000aa8 <__udivmoddi4+0xbc>
 8000a96:	2e00      	cmp	r6, #0
 8000a98:	f000 80ed 	beq.w	8000c76 <__udivmoddi4+0x28a>
 8000a9c:	2100      	movs	r1, #0
 8000a9e:	e9c6 0500 	strd	r0, r5, [r6]
 8000aa2:	4608      	mov	r0, r1
 8000aa4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000aa8:	fab3 f183 	clz	r1, r3
 8000aac:	2900      	cmp	r1, #0
 8000aae:	d149      	bne.n	8000b44 <__udivmoddi4+0x158>
 8000ab0:	42ab      	cmp	r3, r5
 8000ab2:	d302      	bcc.n	8000aba <__udivmoddi4+0xce>
 8000ab4:	4282      	cmp	r2, r0
 8000ab6:	f200 80f8 	bhi.w	8000caa <__udivmoddi4+0x2be>
 8000aba:	1a84      	subs	r4, r0, r2
 8000abc:	eb65 0203 	sbc.w	r2, r5, r3
 8000ac0:	2001      	movs	r0, #1
 8000ac2:	4617      	mov	r7, r2
 8000ac4:	2e00      	cmp	r6, #0
 8000ac6:	d0e2      	beq.n	8000a8e <__udivmoddi4+0xa2>
 8000ac8:	e9c6 4700 	strd	r4, r7, [r6]
 8000acc:	e7df      	b.n	8000a8e <__udivmoddi4+0xa2>
 8000ace:	b902      	cbnz	r2, 8000ad2 <__udivmoddi4+0xe6>
 8000ad0:	deff      	udf	#255	; 0xff
 8000ad2:	fab2 f382 	clz	r3, r2
 8000ad6:	2b00      	cmp	r3, #0
 8000ad8:	f040 8090 	bne.w	8000bfc <__udivmoddi4+0x210>
 8000adc:	1a8a      	subs	r2, r1, r2
 8000ade:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000ae2:	fa1f fe8c 	uxth.w	lr, ip
 8000ae6:	2101      	movs	r1, #1
 8000ae8:	fbb2 f5f7 	udiv	r5, r2, r7
 8000aec:	fb07 2015 	mls	r0, r7, r5, r2
 8000af0:	0c22      	lsrs	r2, r4, #16
 8000af2:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8000af6:	fb0e f005 	mul.w	r0, lr, r5
 8000afa:	4290      	cmp	r0, r2
 8000afc:	d908      	bls.n	8000b10 <__udivmoddi4+0x124>
 8000afe:	eb1c 0202 	adds.w	r2, ip, r2
 8000b02:	f105 38ff 	add.w	r8, r5, #4294967295
 8000b06:	d202      	bcs.n	8000b0e <__udivmoddi4+0x122>
 8000b08:	4290      	cmp	r0, r2
 8000b0a:	f200 80cb 	bhi.w	8000ca4 <__udivmoddi4+0x2b8>
 8000b0e:	4645      	mov	r5, r8
 8000b10:	1a12      	subs	r2, r2, r0
 8000b12:	b2a4      	uxth	r4, r4
 8000b14:	fbb2 f0f7 	udiv	r0, r2, r7
 8000b18:	fb07 2210 	mls	r2, r7, r0, r2
 8000b1c:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000b20:	fb0e fe00 	mul.w	lr, lr, r0
 8000b24:	45a6      	cmp	lr, r4
 8000b26:	d908      	bls.n	8000b3a <__udivmoddi4+0x14e>
 8000b28:	eb1c 0404 	adds.w	r4, ip, r4
 8000b2c:	f100 32ff 	add.w	r2, r0, #4294967295
 8000b30:	d202      	bcs.n	8000b38 <__udivmoddi4+0x14c>
 8000b32:	45a6      	cmp	lr, r4
 8000b34:	f200 80bb 	bhi.w	8000cae <__udivmoddi4+0x2c2>
 8000b38:	4610      	mov	r0, r2
 8000b3a:	eba4 040e 	sub.w	r4, r4, lr
 8000b3e:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8000b42:	e79f      	b.n	8000a84 <__udivmoddi4+0x98>
 8000b44:	f1c1 0720 	rsb	r7, r1, #32
 8000b48:	408b      	lsls	r3, r1
 8000b4a:	fa22 fc07 	lsr.w	ip, r2, r7
 8000b4e:	ea4c 0c03 	orr.w	ip, ip, r3
 8000b52:	fa05 f401 	lsl.w	r4, r5, r1
 8000b56:	fa20 f307 	lsr.w	r3, r0, r7
 8000b5a:	40fd      	lsrs	r5, r7
 8000b5c:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000b60:	4323      	orrs	r3, r4
 8000b62:	fbb5 f8f9 	udiv	r8, r5, r9
 8000b66:	fa1f fe8c 	uxth.w	lr, ip
 8000b6a:	fb09 5518 	mls	r5, r9, r8, r5
 8000b6e:	0c1c      	lsrs	r4, r3, #16
 8000b70:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8000b74:	fb08 f50e 	mul.w	r5, r8, lr
 8000b78:	42a5      	cmp	r5, r4
 8000b7a:	fa02 f201 	lsl.w	r2, r2, r1
 8000b7e:	fa00 f001 	lsl.w	r0, r0, r1
 8000b82:	d90b      	bls.n	8000b9c <__udivmoddi4+0x1b0>
 8000b84:	eb1c 0404 	adds.w	r4, ip, r4
 8000b88:	f108 3aff 	add.w	sl, r8, #4294967295
 8000b8c:	f080 8088 	bcs.w	8000ca0 <__udivmoddi4+0x2b4>
 8000b90:	42a5      	cmp	r5, r4
 8000b92:	f240 8085 	bls.w	8000ca0 <__udivmoddi4+0x2b4>
 8000b96:	f1a8 0802 	sub.w	r8, r8, #2
 8000b9a:	4464      	add	r4, ip
 8000b9c:	1b64      	subs	r4, r4, r5
 8000b9e:	b29d      	uxth	r5, r3
 8000ba0:	fbb4 f3f9 	udiv	r3, r4, r9
 8000ba4:	fb09 4413 	mls	r4, r9, r3, r4
 8000ba8:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8000bac:	fb03 fe0e 	mul.w	lr, r3, lr
 8000bb0:	45a6      	cmp	lr, r4
 8000bb2:	d908      	bls.n	8000bc6 <__udivmoddi4+0x1da>
 8000bb4:	eb1c 0404 	adds.w	r4, ip, r4
 8000bb8:	f103 35ff 	add.w	r5, r3, #4294967295
 8000bbc:	d26c      	bcs.n	8000c98 <__udivmoddi4+0x2ac>
 8000bbe:	45a6      	cmp	lr, r4
 8000bc0:	d96a      	bls.n	8000c98 <__udivmoddi4+0x2ac>
 8000bc2:	3b02      	subs	r3, #2
 8000bc4:	4464      	add	r4, ip
 8000bc6:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000bca:	fba3 9502 	umull	r9, r5, r3, r2
 8000bce:	eba4 040e 	sub.w	r4, r4, lr
 8000bd2:	42ac      	cmp	r4, r5
 8000bd4:	46c8      	mov	r8, r9
 8000bd6:	46ae      	mov	lr, r5
 8000bd8:	d356      	bcc.n	8000c88 <__udivmoddi4+0x29c>
 8000bda:	d053      	beq.n	8000c84 <__udivmoddi4+0x298>
 8000bdc:	b156      	cbz	r6, 8000bf4 <__udivmoddi4+0x208>
 8000bde:	ebb0 0208 	subs.w	r2, r0, r8
 8000be2:	eb64 040e 	sbc.w	r4, r4, lr
 8000be6:	fa04 f707 	lsl.w	r7, r4, r7
 8000bea:	40ca      	lsrs	r2, r1
 8000bec:	40cc      	lsrs	r4, r1
 8000bee:	4317      	orrs	r7, r2
 8000bf0:	e9c6 7400 	strd	r7, r4, [r6]
 8000bf4:	4618      	mov	r0, r3
 8000bf6:	2100      	movs	r1, #0
 8000bf8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000bfc:	f1c3 0120 	rsb	r1, r3, #32
 8000c00:	fa02 fc03 	lsl.w	ip, r2, r3
 8000c04:	fa20 f201 	lsr.w	r2, r0, r1
 8000c08:	fa25 f101 	lsr.w	r1, r5, r1
 8000c0c:	409d      	lsls	r5, r3
 8000c0e:	432a      	orrs	r2, r5
 8000c10:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000c14:	fa1f fe8c 	uxth.w	lr, ip
 8000c18:	fbb1 f0f7 	udiv	r0, r1, r7
 8000c1c:	fb07 1510 	mls	r5, r7, r0, r1
 8000c20:	0c11      	lsrs	r1, r2, #16
 8000c22:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 8000c26:	fb00 f50e 	mul.w	r5, r0, lr
 8000c2a:	428d      	cmp	r5, r1
 8000c2c:	fa04 f403 	lsl.w	r4, r4, r3
 8000c30:	d908      	bls.n	8000c44 <__udivmoddi4+0x258>
 8000c32:	eb1c 0101 	adds.w	r1, ip, r1
 8000c36:	f100 38ff 	add.w	r8, r0, #4294967295
 8000c3a:	d22f      	bcs.n	8000c9c <__udivmoddi4+0x2b0>
 8000c3c:	428d      	cmp	r5, r1
 8000c3e:	d92d      	bls.n	8000c9c <__udivmoddi4+0x2b0>
 8000c40:	3802      	subs	r0, #2
 8000c42:	4461      	add	r1, ip
 8000c44:	1b49      	subs	r1, r1, r5
 8000c46:	b292      	uxth	r2, r2
 8000c48:	fbb1 f5f7 	udiv	r5, r1, r7
 8000c4c:	fb07 1115 	mls	r1, r7, r5, r1
 8000c50:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000c54:	fb05 f10e 	mul.w	r1, r5, lr
 8000c58:	4291      	cmp	r1, r2
 8000c5a:	d908      	bls.n	8000c6e <__udivmoddi4+0x282>
 8000c5c:	eb1c 0202 	adds.w	r2, ip, r2
 8000c60:	f105 38ff 	add.w	r8, r5, #4294967295
 8000c64:	d216      	bcs.n	8000c94 <__udivmoddi4+0x2a8>
 8000c66:	4291      	cmp	r1, r2
 8000c68:	d914      	bls.n	8000c94 <__udivmoddi4+0x2a8>
 8000c6a:	3d02      	subs	r5, #2
 8000c6c:	4462      	add	r2, ip
 8000c6e:	1a52      	subs	r2, r2, r1
 8000c70:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 8000c74:	e738      	b.n	8000ae8 <__udivmoddi4+0xfc>
 8000c76:	4631      	mov	r1, r6
 8000c78:	4630      	mov	r0, r6
 8000c7a:	e708      	b.n	8000a8e <__udivmoddi4+0xa2>
 8000c7c:	4639      	mov	r1, r7
 8000c7e:	e6e6      	b.n	8000a4e <__udivmoddi4+0x62>
 8000c80:	4610      	mov	r0, r2
 8000c82:	e6fb      	b.n	8000a7c <__udivmoddi4+0x90>
 8000c84:	4548      	cmp	r0, r9
 8000c86:	d2a9      	bcs.n	8000bdc <__udivmoddi4+0x1f0>
 8000c88:	ebb9 0802 	subs.w	r8, r9, r2
 8000c8c:	eb65 0e0c 	sbc.w	lr, r5, ip
 8000c90:	3b01      	subs	r3, #1
 8000c92:	e7a3      	b.n	8000bdc <__udivmoddi4+0x1f0>
 8000c94:	4645      	mov	r5, r8
 8000c96:	e7ea      	b.n	8000c6e <__udivmoddi4+0x282>
 8000c98:	462b      	mov	r3, r5
 8000c9a:	e794      	b.n	8000bc6 <__udivmoddi4+0x1da>
 8000c9c:	4640      	mov	r0, r8
 8000c9e:	e7d1      	b.n	8000c44 <__udivmoddi4+0x258>
 8000ca0:	46d0      	mov	r8, sl
 8000ca2:	e77b      	b.n	8000b9c <__udivmoddi4+0x1b0>
 8000ca4:	3d02      	subs	r5, #2
 8000ca6:	4462      	add	r2, ip
 8000ca8:	e732      	b.n	8000b10 <__udivmoddi4+0x124>
 8000caa:	4608      	mov	r0, r1
 8000cac:	e70a      	b.n	8000ac4 <__udivmoddi4+0xd8>
 8000cae:	4464      	add	r4, ip
 8000cb0:	3802      	subs	r0, #2
 8000cb2:	e742      	b.n	8000b3a <__udivmoddi4+0x14e>

08000cb4 <__aeabi_idiv0>:
 8000cb4:	4770      	bx	lr
 8000cb6:	bf00      	nop

08000cb8 <Reset_Handler>:
    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 

  ldr   sp, =_estack       /* set stack pointer */
 8000cb8:	f8df d034 	ldr.w	sp, [pc, #52]	; 8000cf0 <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000cbc:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000cbe:	e003      	b.n	8000cc8 <LoopCopyDataInit>

08000cc0 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000cc0:	4b0c      	ldr	r3, [pc, #48]	; (8000cf4 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8000cc2:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8000cc4:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 8000cc6:	3104      	adds	r1, #4

08000cc8 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 8000cc8:	480b      	ldr	r0, [pc, #44]	; (8000cf8 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 8000cca:	4b0c      	ldr	r3, [pc, #48]	; (8000cfc <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8000ccc:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8000cce:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8000cd0:	d3f6      	bcc.n	8000cc0 <CopyDataInit>
  ldr  r2, =_sbss
 8000cd2:	4a0b      	ldr	r2, [pc, #44]	; (8000d00 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8000cd4:	e002      	b.n	8000cdc <LoopFillZerobss>

08000cd6 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 8000cd6:	2300      	movs	r3, #0
  str  r3, [r2], #4
 8000cd8:	f842 3b04 	str.w	r3, [r2], #4

08000cdc <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8000cdc:	4b09      	ldr	r3, [pc, #36]	; (8000d04 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 8000cde:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8000ce0:	d3f9      	bcc.n	8000cd6 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8000ce2:	f00a fc3b 	bl	800b55c <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8000ce6:	f02d f937 	bl	802df58 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8000cea:	f000 fd09 	bl	8001700 <main>
  bx  lr    
 8000cee:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 8000cf0:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 8000cf4:	080cf3d8 	.word	0x080cf3d8
  ldr  r0, =_sdata
 8000cf8:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 8000cfc:	2000016c 	.word	0x2000016c
  ldr  r2, =_sbss
 8000d00:	20000170 	.word	0x20000170
  ldr  r3, = _ebss
 8000d04:	20014474 	.word	0x20014474

08000d08 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8000d08:	e7fe      	b.n	8000d08 <ADC_IRQHandler>
	...

08000d0c <GetSector>:

static uint32_t GetSector(uint32_t Address)
{
  uint32_t sector = 0;

  if((Address < 0x08003FFF) && (Address >= 0x08000000))
 8000d0c:	f100 4378 	add.w	r3, r0, #4160749568	; 0xf8000000
 8000d10:	f643 72fe 	movw	r2, #16382	; 0x3ffe
 8000d14:	4293      	cmp	r3, r2
 8000d16:	d905      	bls.n	8000d24 <GetSector+0x18>
  {
    sector = FLASH_SECTOR_0;
  }
  else if((Address < 0x08007FFF) && (Address >= 0x08004000))
 8000d18:	f5a3 4180 	sub.w	r1, r3, #16384	; 0x4000
 8000d1c:	4291      	cmp	r1, r2
 8000d1e:	d803      	bhi.n	8000d28 <GetSector+0x1c>
  {
    sector = FLASH_SECTOR_1;
 8000d20:	2001      	movs	r0, #1
 8000d22:	4770      	bx	lr
    sector = FLASH_SECTOR_0;
 8000d24:	2000      	movs	r0, #0
 8000d26:	4770      	bx	lr
  }
  else if((Address < 0x0800BFFF) && (Address >= 0x08008000))
 8000d28:	f5a3 4100 	sub.w	r1, r3, #32768	; 0x8000
 8000d2c:	4291      	cmp	r1, r2
 8000d2e:	d960      	bls.n	8000df2 <GetSector+0xe6>
  {
    sector = FLASH_SECTOR_2;
  }
  else if((Address < 0x0800FFFF) && (Address >= 0x0800C000))
 8000d30:	f5a3 4340 	sub.w	r3, r3, #49152	; 0xc000
 8000d34:	4293      	cmp	r3, r2
 8000d36:	d95e      	bls.n	8000df6 <GetSector+0xea>
  {
    sector = FLASH_SECTOR_3;
  }
  else if((Address < 0x0801FFFF) && (Address >= 0x08010000))
 8000d38:	f100 4377 	add.w	r3, r0, #4143972352	; 0xf7000000
 8000d3c:	f503 017f 	add.w	r1, r3, #16711680	; 0xff0000
 8000d40:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8000d44:	4291      	cmp	r1, r2
 8000d46:	d95a      	bls.n	8000dfe <GetSector+0xf2>
  {
    sector = FLASH_SECTOR_4;
  }
  else if((Address < 0x0803FFFF) && (Address >= 0x08020000))
 8000d48:	f502 3280 	add.w	r2, r2, #65536	; 0x10000
 8000d4c:	f503 017e 	add.w	r1, r3, #16646144	; 0xfe0000
 8000d50:	4291      	cmp	r1, r2
 8000d52:	d952      	bls.n	8000dfa <GetSector+0xee>
  {
    sector = FLASH_SECTOR_5;
  }
  else if((Address < 0x0805FFFF) && (Address >= 0x08040000))
 8000d54:	f503 017c 	add.w	r1, r3, #16515072	; 0xfc0000
 8000d58:	4291      	cmp	r1, r2
 8000d5a:	d952      	bls.n	8000e02 <GetSector+0xf6>
  {
    sector = FLASH_SECTOR_6;
  }
  else if((Address < 0x0807FFFF) && (Address >= 0x08060000))
 8000d5c:	f503 017a 	add.w	r1, r3, #16384000	; 0xfa0000
 8000d60:	4291      	cmp	r1, r2
 8000d62:	d950      	bls.n	8000e06 <GetSector+0xfa>
  {
    sector = FLASH_SECTOR_7;
  }
  else if((Address < 0x0809FFFF) && (Address >= 0x08080000))
 8000d64:	f503 0178 	add.w	r1, r3, #16252928	; 0xf80000
 8000d68:	4291      	cmp	r1, r2
 8000d6a:	d94e      	bls.n	8000e0a <GetSector+0xfe>
  {
    sector = FLASH_SECTOR_8;
  }
  else if((Address < 0x080BFFFF) && (Address >= 0x080A0000))
 8000d6c:	f503 0176 	add.w	r1, r3, #16121856	; 0xf60000
 8000d70:	4291      	cmp	r1, r2
 8000d72:	d94c      	bls.n	8000e0e <GetSector+0x102>
  {
    sector = FLASH_SECTOR_9;
  }
  else if((Address < 0x080DFFFF) && (Address >= 0x080C0000))
 8000d74:	f503 0174 	add.w	r1, r3, #15990784	; 0xf40000
 8000d78:	4291      	cmp	r1, r2
 8000d7a:	d94a      	bls.n	8000e12 <GetSector+0x106>
  {
    sector = FLASH_SECTOR_10;
  }
  else if((Address < 0x080FFFFF) && (Address >= 0x080E0000))
 8000d7c:	f503 0172 	add.w	r1, r3, #15859712	; 0xf20000
 8000d80:	4291      	cmp	r1, r2
 8000d82:	d948      	bls.n	8000e16 <GetSector+0x10a>
  {
    sector = FLASH_SECTOR_11;
  }
  else if((Address < 0x08103FFF) && (Address >= 0x08100000))
 8000d84:	f1a0 6001 	sub.w	r0, r0, #135266304	; 0x8100000
 8000d88:	f643 71fe 	movw	r1, #16382	; 0x3ffe
 8000d8c:	4288      	cmp	r0, r1
 8000d8e:	d944      	bls.n	8000e1a <GetSector+0x10e>
  {
    sector = FLASH_SECTOR_12;
  }
  else if((Address < 0x08107FFF) && (Address >= 0x08104000))
 8000d90:	f5a0 4c80 	sub.w	ip, r0, #16384	; 0x4000
 8000d94:	458c      	cmp	ip, r1
 8000d96:	d942      	bls.n	8000e1e <GetSector+0x112>
  {
    sector = FLASH_SECTOR_13;
  }
  else if((Address < 0x0810BFFF) && (Address >= 0x08108000))
 8000d98:	f5a0 4c00 	sub.w	ip, r0, #32768	; 0x8000
 8000d9c:	458c      	cmp	ip, r1
 8000d9e:	d940      	bls.n	8000e22 <GetSector+0x116>
  {
    sector = FLASH_SECTOR_14;
  }
  else if((Address < 0x0810FFFF) && (Address >= 0x0810C000))
 8000da0:	f5a0 4040 	sub.w	r0, r0, #49152	; 0xc000
 8000da4:	4288      	cmp	r0, r1
 8000da6:	d93e      	bls.n	8000e26 <GetSector+0x11a>
  {
    sector = FLASH_SECTOR_15;
  }
  else if((Address < 0x0811FFFF) && (Address >= 0x08110000))
 8000da8:	f503 006f 	add.w	r0, r3, #15663104	; 0xef0000
 8000dac:	f64f 71fe 	movw	r1, #65534	; 0xfffe
 8000db0:	4288      	cmp	r0, r1
 8000db2:	d93a      	bls.n	8000e2a <GetSector+0x11e>
  {
    sector = FLASH_SECTOR_16;
  }
  else if((Address < 0x0813FFFF) && (Address >= 0x08120000))
 8000db4:	f503 016e 	add.w	r1, r3, #15597568	; 0xee0000
 8000db8:	4291      	cmp	r1, r2
 8000dba:	d938      	bls.n	8000e2e <GetSector+0x122>
  {
    sector = FLASH_SECTOR_17;
  }
  else if((Address < 0x0815FFFF) && (Address >= 0x08140000))
 8000dbc:	f503 016c 	add.w	r1, r3, #15466496	; 0xec0000
 8000dc0:	4291      	cmp	r1, r2
 8000dc2:	d938      	bls.n	8000e36 <GetSector+0x12a>
  {
    sector = FLASH_SECTOR_18;
  }
  else if((Address < 0x0817FFFF) && (Address >= 0x08160000))
 8000dc4:	f503 016a 	add.w	r1, r3, #15335424	; 0xea0000
 8000dc8:	4291      	cmp	r1, r2
 8000dca:	d932      	bls.n	8000e32 <GetSector+0x126>
  {
    sector = FLASH_SECTOR_19;
  }
  else if((Address < 0x0819FFFF) && (Address >= 0x08180000))
 8000dcc:	f503 0168 	add.w	r1, r3, #15204352	; 0xe80000
 8000dd0:	4291      	cmp	r1, r2
 8000dd2:	d936      	bls.n	8000e42 <GetSector+0x136>
  {
    sector = FLASH_SECTOR_20;
  }
  else if((Address < 0x081BFFFF) && (Address >= 0x081A0000))
 8000dd4:	f503 0166 	add.w	r1, r3, #15073280	; 0xe60000
 8000dd8:	4291      	cmp	r1, r2
 8000dda:	d930      	bls.n	8000e3e <GetSector+0x132>
  {
    sector = FLASH_SECTOR_21;
  }
  else if((Address < 0x081DFFFF) && (Address >= 0x081C0000))
 8000ddc:	f503 0164 	add.w	r1, r3, #14942208	; 0xe40000
 8000de0:	4291      	cmp	r1, r2
 8000de2:	d92a      	bls.n	8000e3a <GetSector+0x12e>
  {
    sector = FLASH_SECTOR_22;
  }
  else if((Address < 0x081FFFFF) && (Address >= 0x081E0000))
 8000de4:	f503 0362 	add.w	r3, r3, #14811136	; 0xe20000
  {
    sector = FLASH_SECTOR_23;
 8000de8:	4293      	cmp	r3, r2
 8000dea:	bf94      	ite	ls
 8000dec:	2017      	movls	r0, #23
 8000dee:	2000      	movhi	r0, #0
 8000df0:	4770      	bx	lr
    sector = FLASH_SECTOR_2;
 8000df2:	2002      	movs	r0, #2
 8000df4:	4770      	bx	lr
    sector = FLASH_SECTOR_3;
 8000df6:	2003      	movs	r0, #3
 8000df8:	4770      	bx	lr
    sector = FLASH_SECTOR_5;
 8000dfa:	2005      	movs	r0, #5
 8000dfc:	4770      	bx	lr
    sector = FLASH_SECTOR_4;
 8000dfe:	2004      	movs	r0, #4
 8000e00:	4770      	bx	lr
    sector = FLASH_SECTOR_6;
 8000e02:	2006      	movs	r0, #6
 8000e04:	4770      	bx	lr
    sector = FLASH_SECTOR_7;
 8000e06:	2007      	movs	r0, #7
 8000e08:	4770      	bx	lr
    sector = FLASH_SECTOR_8;
 8000e0a:	2008      	movs	r0, #8
 8000e0c:	4770      	bx	lr
    sector = FLASH_SECTOR_9;
 8000e0e:	2009      	movs	r0, #9
 8000e10:	4770      	bx	lr
    sector = FLASH_SECTOR_10;
 8000e12:	200a      	movs	r0, #10
 8000e14:	4770      	bx	lr
    sector = FLASH_SECTOR_11;
 8000e16:	200b      	movs	r0, #11
 8000e18:	4770      	bx	lr
    sector = FLASH_SECTOR_12;
 8000e1a:	200c      	movs	r0, #12
 8000e1c:	4770      	bx	lr
    sector = FLASH_SECTOR_13;
 8000e1e:	200d      	movs	r0, #13
 8000e20:	4770      	bx	lr
    sector = FLASH_SECTOR_14;
 8000e22:	200e      	movs	r0, #14
 8000e24:	4770      	bx	lr
    sector = FLASH_SECTOR_15;
 8000e26:	200f      	movs	r0, #15
 8000e28:	4770      	bx	lr
    sector = FLASH_SECTOR_16;
 8000e2a:	2010      	movs	r0, #16
 8000e2c:	4770      	bx	lr
    sector = FLASH_SECTOR_17;
 8000e2e:	2011      	movs	r0, #17
 8000e30:	4770      	bx	lr
    sector = FLASH_SECTOR_19;
 8000e32:	2013      	movs	r0, #19
 8000e34:	4770      	bx	lr
    sector = FLASH_SECTOR_18;
 8000e36:	2012      	movs	r0, #18
 8000e38:	4770      	bx	lr
    sector = FLASH_SECTOR_22;
 8000e3a:	2016      	movs	r0, #22
  }
  return sector;
}
 8000e3c:	4770      	bx	lr
    sector = FLASH_SECTOR_21;
 8000e3e:	2015      	movs	r0, #21
 8000e40:	4770      	bx	lr
    sector = FLASH_SECTOR_20;
 8000e42:	2014      	movs	r0, #20
 8000e44:	4770      	bx	lr
 8000e46:	bf00      	nop

08000e48 <Flash_Write_Data>:
   return float_variable;
}


uint32_t Flash_Write_Data (uint32_t StartSectorAddress, uint32_t *Data, uint16_t numberofwords)
{
 8000e48:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000e4a:	4607      	mov	r7, r0
 8000e4c:	b083      	sub	sp, #12
 8000e4e:	4616      	mov	r6, r2
 8000e50:	460d      	mov	r5, r1
	uint32_t SECTORError;
	int sofar=0;


	 /* Unlock the Flash to enable the flash control register access *************/
	  HAL_FLASH_Unlock();
 8000e52:	f00a fd41 	bl	800b8d8 <HAL_FLASH_Unlock>

	  /* Erase the user Flash area */

	  /* Get the number of sector to erase from 1st sector */

	  uint32_t StartSector = GetSector(StartSectorAddress);
 8000e56:	4638      	mov	r0, r7
 8000e58:	f7ff ff58 	bl	8000d0c <GetSector>
 8000e5c:	4604      	mov	r4, r0
	  uint32_t EndSectorAddress = StartSectorAddress + numberofwords*4;
	  uint32_t EndSector = GetSector(EndSectorAddress);
 8000e5e:	eb07 0086 	add.w	r0, r7, r6, lsl #2
 8000e62:	f7ff ff53 	bl	8000d0c <GetSector>

	  /* Fill EraseInit structure*/
	  EraseInitStruct.TypeErase     = FLASH_TYPEERASE_SECTORS;
	  EraseInitStruct.VoltageRange  = FLASH_VOLTAGE_RANGE_3;
	  EraseInitStruct.Sector        = StartSector;
	  EraseInitStruct.NbSectors     = (EndSector - StartSector) + 1;
 8000e66:	1c43      	adds	r3, r0, #1
	  EraseInitStruct.TypeErase     = FLASH_TYPEERASE_SECTORS;
 8000e68:	4813      	ldr	r0, [pc, #76]	; (8000eb8 <Flash_Write_Data+0x70>)
	  EraseInitStruct.NbSectors     = (EndSector - StartSector) + 1;
 8000e6a:	1b1b      	subs	r3, r3, r4
 8000e6c:	e9c0 4302 	strd	r4, r3, [r0, #8]
	  EraseInitStruct.TypeErase     = FLASH_TYPEERASE_SECTORS;
 8000e70:	2300      	movs	r3, #0
 8000e72:	6003      	str	r3, [r0, #0]

	  /* Note: If an erase operation in Flash memory also concerns data in the data or instruction cache,
	     you have to make sure that these data are rewritten before they are accessed during code
	     execution. If this cannot be done safely, it is recommended to flush the caches by setting the
	     DCRST and ICRST bits in the FLASH_CR register. */
	  if (HAL_FLASHEx_Erase(&EraseInitStruct, &SECTORError) != HAL_OK)
 8000e74:	a901      	add	r1, sp, #4
	  EraseInitStruct.VoltageRange  = FLASH_VOLTAGE_RANGE_3;
 8000e76:	2302      	movs	r3, #2
 8000e78:	6103      	str	r3, [r0, #16]
	  if (HAL_FLASHEx_Erase(&EraseInitStruct, &SECTORError) != HAL_OK)
 8000e7a:	f00a fdab 	bl	800b9d4 <HAL_FLASHEx_Erase>
 8000e7e:	b988      	cbnz	r0, 8000ea4 <Flash_Write_Data+0x5c>
	  }

	  /* Program the user Flash area word by word
	    (area defined by FLASH_USER_START_ADDR and FLASH_USER_END_ADDR) ***********/

	   while (sofar<numberofwords)
 8000e80:	b1a6      	cbz	r6, 8000eac <Flash_Write_Data+0x64>
 8000e82:	1b7f      	subs	r7, r7, r5
 8000e84:	4604      	mov	r4, r0
 8000e86:	3d04      	subs	r5, #4
 8000e88:	3704      	adds	r7, #4
 8000e8a:	e001      	b.n	8000e90 <Flash_Write_Data+0x48>
 8000e8c:	42a6      	cmp	r6, r4
 8000e8e:	d00d      	beq.n	8000eac <Flash_Write_Data+0x64>
 8000e90:	1979      	adds	r1, r7, r5
	   {
	     if (HAL_FLASH_Program(FLASH_TYPEPROGRAM_WORD, StartSectorAddress, Data[sofar]) == HAL_OK)
 8000e92:	2300      	movs	r3, #0
 8000e94:	f855 2f04 	ldr.w	r2, [r5, #4]!
 8000e98:	2002      	movs	r0, #2
	     {
	    	 StartSectorAddress += 4;  // use StartPageAddress += 2 for half word and 8 for double word
	    	 sofar++;
 8000e9a:	3401      	adds	r4, #1
	     if (HAL_FLASH_Program(FLASH_TYPEPROGRAM_WORD, StartSectorAddress, Data[sofar]) == HAL_OK)
 8000e9c:	f00a fc7a 	bl	800b794 <HAL_FLASH_Program>
 8000ea0:	2800      	cmp	r0, #0
 8000ea2:	d0f3      	beq.n	8000e8c <Flash_Write_Data+0x44>
	     }
	     else
	     {
	       /* Error occurred while writing data in Flash memory*/
	    	 return HAL_FLASH_GetError ();
 8000ea4:	f00a fd36 	bl	800b914 <HAL_FLASH_GetError>
	  /* Lock the Flash to disable the flash control register access (recommended
	     to protect the FLASH memory against possible unwanted operation) *********/
	  HAL_FLASH_Lock();

	   return 0;
}
 8000ea8:	b003      	add	sp, #12
 8000eaa:	bdf0      	pop	{r4, r5, r6, r7, pc}
	  HAL_FLASH_Lock();
 8000eac:	f00a fd28 	bl	800b900 <HAL_FLASH_Lock>
	   return 0;
 8000eb0:	2000      	movs	r0, #0
}
 8000eb2:	b003      	add	sp, #12
 8000eb4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000eb6:	bf00      	nop
 8000eb8:	2000018c 	.word	0x2000018c

08000ebc <Flash_Read_Data>:


void Flash_Read_Data (uint32_t StartSectorAddress, uint32_t *RxBuf, uint16_t numberofwords)
{
 8000ebc:	460b      	mov	r3, r1
 8000ebe:	3201      	adds	r2, #1
 8000ec0:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8000ec4:	1ac0      	subs	r0, r0, r3
	while (1)
	{

		*RxBuf = *(__IO uint32_t *)StartSectorAddress;
 8000ec6:	581a      	ldr	r2, [r3, r0]
 8000ec8:	f843 2b04 	str.w	r2, [r3], #4
		StartSectorAddress += 4;
		RxBuf++;
		if (!(numberofwords--)) break;
 8000ecc:	428b      	cmp	r3, r1
 8000ece:	d1fa      	bne.n	8000ec6 <Flash_Read_Data+0xa>
	}
}
 8000ed0:	4770      	bx	lr
 8000ed2:	bf00      	nop

08000ed4 <calculate_freq_and_signalstrength>:
 *are calculated.
 * @param samples Pointer to the array of input samples.
 * @return FFT structure containing the calculated main frequency and signal
 *strength.
 **/
FFT calculate_freq_and_signalstrength(float32_t input_samples[]) {
 8000ed4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000ed8:	ed2d 8b02 	vpush	{d8}
 8000edc:	b088      	sub	sp, #32
 8000ede:	af00      	add	r7, sp, #0
 8000ee0:	4605      	mov	r5, r0
 8000ee2:	460e      	mov	r6, r1
    // Perform FFT using CMSIS-DSP library
    const uint8_t fft_size = MEAS_get_num_of_samples();
 8000ee4:	f001 f96e 	bl	80021c4 <MEAS_get_num_of_samples>
    // remove DC component
    for (uint32_t i = 0; i < fft_size; i++) {
 8000ee8:	4604      	mov	r4, r0
 8000eea:	2800      	cmp	r0, #0
 8000eec:	f000 8089 	beq.w	8001002 <calculate_freq_and_signalstrength+0x12e>
 8000ef0:	2204      	movs	r2, #4
        input_samples[i] -= 2047.5;
 8000ef2:	ed9f 7a45 	vldr	s14, [pc, #276]	; 8001008 <calculate_freq_and_signalstrength+0x134>
 8000ef6:	4633      	mov	r3, r6
 8000ef8:	fb12 6200 	smlabb	r2, r2, r0, r6
 8000efc:	edd3 7a00 	vldr	s15, [r3]
 8000f00:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8000f04:	ece3 7a01 	vstmia	r3!, {s15}
    for (uint32_t i = 0; i < fft_size; i++) {
 8000f08:	429a      	cmp	r2, r3
 8000f0a:	d1f7      	bne.n	8000efc <calculate_freq_and_signalstrength+0x28>
    }
    // Create an array for the FFT output
    float32_t fft_complex_output[2 * fft_size];
 8000f0c:	b223      	sxth	r3, r4
 8000f0e:	00db      	lsls	r3, r3, #3
 8000f10:	ebad 0d03 	sub.w	sp, sp, r3
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
    // Create an instance of the FFT structure
    FFT fft;
    // Calculate the main frequency
    float main_frequency =
        (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 8000f14:	ee07 4a90 	vmov	s15, r4
    float32_t fft_complex_output[2 * fft_size];
 8000f18:	46e8      	mov	r8, sp
    arm_rfft_fast_init_f32(&fft_struct, fft_size);
 8000f1a:	b2a1      	uxth	r1, r4
 8000f1c:	f107 0008 	add.w	r0, r7, #8
        (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 8000f20:	eef8 8ae7 	vcvt.f32.s32	s17, s15
    arm_rfft_fast_init_f32(&fft_struct, fft_size);
 8000f24:	f02a fd6c 	bl	802ba00 <arm_rfft_fast_init_f32>
    arm_rfft_fast_f32(&fft_struct, input_samples, fft_complex_output, 0);
 8000f28:	2300      	movs	r3, #0
 8000f2a:	4631      	mov	r1, r6
 8000f2c:	f107 0008 	add.w	r0, r7, #8
 8000f30:	4642      	mov	r2, r8
    arm_cmplx_mag_f32(fft_complex_output, fft_complex_output, fft_size / 2);
 8000f32:	f3c4 0647 	ubfx	r6, r4, #1, #8
    arm_rfft_fast_f32(&fft_struct, input_samples, fft_complex_output, 0);
 8000f36:	f02a fde7 	bl	802bb08 <arm_rfft_fast_f32>
    arm_cmplx_mag_f32(fft_complex_output, fft_complex_output, fft_size / 2);
 8000f3a:	4632      	mov	r2, r6
 8000f3c:	4641      	mov	r1, r8
 8000f3e:	4640      	mov	r0, r8
 8000f40:	f02b fa50 	bl	802c3e4 <arm_cmplx_mag_f32>
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
 8000f44:	463b      	mov	r3, r7
 8000f46:	1d3a      	adds	r2, r7, #4
 8000f48:	4631      	mov	r1, r6
 8000f4a:	4640      	mov	r0, r8
 8000f4c:	f02a fcf0 	bl	802b930 <arm_max_f32>
        (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 8000f50:	edd7 7a00 	vldr	s15, [r7]
 8000f54:	eeb8 8a67 	vcvt.f32.u32	s16, s15
 8000f58:	f001 f936 	bl	80021c8 <MEAS_get_samp_freq>
 8000f5c:	ee07 0a90 	vmov	s15, r0
 8000f60:	eef8 7a67 	vcvt.f32.u32	s15, s15
    uint8_t given_frequency = 0;
    // Check if the main frequency is in the range of 45-55 Hz
    if (main_frequency <= 55 && main_frequency >= 45) {
 8000f64:	ed9f 7a29 	vldr	s14, [pc, #164]	; 800100c <calculate_freq_and_signalstrength+0x138>
        (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 8000f68:	ee67 7a88 	vmul.f32	s15, s15, s16
    float main_frequency =
 8000f6c:	ee87 8aa8 	vdiv.f32	s16, s15, s17
    if (main_frequency <= 55 && main_frequency >= 45) {
 8000f70:	eeb4 8ac7 	vcmpe.f32	s16, s14
 8000f74:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000f78:	d817      	bhi.n	8000faa <calculate_freq_and_signalstrength+0xd6>
 8000f7a:	eddf 7a25 	vldr	s15, [pc, #148]	; 8001010 <calculate_freq_and_signalstrength+0x13c>
 8000f7e:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8000f82:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000f86:	db28      	blt.n	8000fda <calculate_freq_and_signalstrength+0x106>
    } else if (main_frequency <= 65 && main_frequency >= 55) {
        // If yes, round the given frequency to 60 Hz
        given_frequency = 60;
    } else given_frequency = 0;
    // calculate the index of the given frequency
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 8000f88:	f001 f91e 	bl	80021c8 <MEAS_get_samp_freq>
 8000f8c:	2332      	movs	r3, #50	; 0x32
 8000f8e:	fb04 f303 	mul.w	r3, r4, r3
 8000f92:	fbb3 f0f0 	udiv	r0, r3, r0
    // set the signal strength to 0
    float signal_strength = 0;
    // check if the given frequency is 50 or 60 Hz
    if (given_frequency != 0) {
        // calculate the signal strength
        signal_strength = 2 * fft_complex_output[index] / fft_size;
 8000f96:	eb08 0080 	add.w	r0, r8, r0, lsl #2
 8000f9a:	edd0 7a00 	vldr	s15, [r0]
 8000f9e:	ee77 7aa7 	vadd.f32	s15, s15, s15
        fft.error = CALC_ERROR_NONE;
 8000fa2:	2301      	movs	r3, #1
        signal_strength = 2 * fft_complex_output[index] / fft_size;
 8000fa4:	ee87 7aa8 	vdiv.f32	s14, s15, s17
        fft.error = CALC_ERROR_NONE;
 8000fa8:	e00b      	b.n	8000fc2 <calculate_freq_and_signalstrength+0xee>
    } else if (main_frequency <= 65 && main_frequency >= 55) {
 8000faa:	eddf 7a1a 	vldr	s15, [pc, #104]	; 8001014 <calculate_freq_and_signalstrength+0x140>
 8000fae:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8000fb2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000fb6:	d91c      	bls.n	8000ff2 <calculate_freq_and_signalstrength+0x11e>
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 8000fb8:	f001 f906 	bl	80021c8 <MEAS_get_samp_freq>
    float signal_strength = 0;
 8000fbc:	ed9f 7a16 	vldr	s14, [pc, #88]	; 8001018 <calculate_freq_and_signalstrength+0x144>
    } else fft.error = CALC_ERROR_FREQUENCY;  // if the given frequency is not 50 or 60 Hz
 8000fc0:	2300      	movs	r3, #0
    // return the calculated values
    fft.main_freq = main_frequency;
    fft.signal_strength = signal_strength;
    return fft;
}
 8000fc2:	4628      	mov	r0, r5
 8000fc4:	3720      	adds	r7, #32
    return fft;
 8000fc6:	ed85 8a00 	vstr	s16, [r5]
 8000fca:	ed85 7a01 	vstr	s14, [r5, #4]
 8000fce:	722b      	strb	r3, [r5, #8]
}
 8000fd0:	46bd      	mov	sp, r7
 8000fd2:	ecbd 8b02 	vpop	{d8}
 8000fd6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    } else if (main_frequency <= 65 && main_frequency >= 55) {
 8000fda:	eddf 7a0e 	vldr	s15, [pc, #56]	; 8001014 <calculate_freq_and_signalstrength+0x140>
 8000fde:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8000fe2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000fe6:	d8e7      	bhi.n	8000fb8 <calculate_freq_and_signalstrength+0xe4>
 8000fe8:	eeb4 8a47 	vcmp.f32	s16, s14
 8000fec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000ff0:	d1e2      	bne.n	8000fb8 <calculate_freq_and_signalstrength+0xe4>
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 8000ff2:	f001 f8e9 	bl	80021c8 <MEAS_get_samp_freq>
 8000ff6:	ebc4 1304 	rsb	r3, r4, r4, lsl #4
 8000ffa:	009b      	lsls	r3, r3, #2
 8000ffc:	fbb3 f0f0 	udiv	r0, r3, r0
    if (given_frequency != 0) {
 8001000:	e7c9      	b.n	8000f96 <calculate_freq_and_signalstrength+0xc2>
    for (uint32_t i = 0; i < fft_size; i++) {
 8001002:	4603      	mov	r3, r0
 8001004:	e784      	b.n	8000f10 <calculate_freq_and_signalstrength+0x3c>
 8001006:	bf00      	nop
 8001008:	44fff000 	.word	0x44fff000
 800100c:	425c0000 	.word	0x425c0000
 8001010:	42340000 	.word	0x42340000
 8001014:	42820000 	.word	0x42820000
 8001018:	00000000 	.word	0x00000000

0800101c <accurate_FFT>:
 * to obtain accurate results and returns the calculated values in an instance of the
 * ACCU_FFT structure.
 *
 * @return The calculated signal strength and main frequency for each channel.
 */
ACCU_FFT accurate_FFT(void){
 800101c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001020:	ed2d 8b04 	vpush	{d8-d9}
 8001024:	b0a7      	sub	sp, #156	; 0x9c
 8001026:	af00      	add	r7, sp, #0
 8001028:	6078      	str	r0, [r7, #4]
    float32_t accu_strength_HSR[ACCURATE_MEASUREMENT_LOOPS];
    float32_t accu_strength_HSL[ACCURATE_MEASUREMENT_LOOPS];

    uint32_t* samples;

    uint8_t buffer_size = MEAS_get_num_of_samples();
 800102a:	f001 f8cb 	bl	80021c4 <MEAS_get_num_of_samples>
    float32_t samples_PR[buffer_size];
 800102e:	b203      	sxth	r3, r0
 8001030:	009b      	lsls	r3, r3, #2
 8001032:	3307      	adds	r3, #7
 8001034:	f023 0307 	bic.w	r3, r3, #7
 8001038:	ebad 0d03 	sub.w	sp, sp, r3
 800103c:	466a      	mov	r2, sp
    float32_t samples_PL[buffer_size];
 800103e:	ebad 0d03 	sub.w	sp, sp, r3
    float32_t samples_PR[buffer_size];
 8001042:	ee08 2a10 	vmov	s16, r2
    float32_t samples_PL[buffer_size];
 8001046:	466a      	mov	r2, sp
    float32_t samples_HSR[buffer_size];
 8001048:	ebad 0d03 	sub.w	sp, sp, r3
    float32_t samples_PL[buffer_size];
 800104c:	ee08 2a90 	vmov	s17, r2
    float32_t samples_HSR[buffer_size];
 8001050:	466a      	mov	r2, sp
    float32_t samples_HSL[buffer_size];
 8001052:	ebad 0d03 	sub.w	sp, sp, r3
 8001056:	466b      	mov	r3, sp
 8001058:	ee09 3a90 	vmov	s19, r3
 800105c:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8001060:	613b      	str	r3, [r7, #16]
 8001062:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8001066:	617b      	str	r3, [r7, #20]
 8001068:	f107 0350 	add.w	r3, r7, #80	; 0x50
 800106c:	60fb      	str	r3, [r7, #12]
    float32_t samples_HSR[buffer_size];
 800106e:	ee09 2a10 	vmov	s18, r2
 8001072:	f107 0364 	add.w	r3, r7, #100	; 0x64
    uint8_t buffer_size = MEAS_get_num_of_samples();
 8001076:	4682      	mov	sl, r0

    for(uint8_t i = 0; i < ACCURATE_MEASUREMENT_LOOPS; i++){
 8001078:	60bb      	str	r3, [r7, #8]
        // Start the measurement
        samples = MEAS_start_measure();
 800107a:	f001 f875 	bl	8002168 <MEAS_start_measure>
 800107e:	4605      	mov	r5, r0

        // Convert the samples to the specific channel
        for (uint32_t j = 0; j < buffer_size; j++) {
 8001080:	f1ba 0f00 	cmp.w	sl, #0
 8001084:	d03e      	beq.n	8001104 <accurate_FFT+0xe8>
 8001086:	ee18 9a10 	vmov	r9, s16
 800108a:	ee18 8a90 	vmov	r8, s17
 800108e:	ee19 6a10 	vmov	r6, s18
 8001092:	ee19 ba90 	vmov	fp, s19
 8001096:	2400      	movs	r4, #0
            samples_PR[j] = (float32_t)samples[j * MEAS_get_num_of_chan()];
 8001098:	f001 f892 	bl	80021c0 <MEAS_get_num_of_chan>
 800109c:	fb04 f000 	mul.w	r0, r4, r0
 80010a0:	eb05 0380 	add.w	r3, r5, r0, lsl #2
 80010a4:	edd3 7a00 	vldr	s15, [r3]
 80010a8:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80010ac:	ece9 7a01 	vstmia	r9!, {s15}
            samples_PL[j] = (float32_t)samples[j * MEAS_get_num_of_chan() + 1];
 80010b0:	f001 f886 	bl	80021c0 <MEAS_get_num_of_chan>
 80010b4:	fb04 f000 	mul.w	r0, r4, r0
 80010b8:	3001      	adds	r0, #1
 80010ba:	eb05 0380 	add.w	r3, r5, r0, lsl #2
 80010be:	edd3 7a00 	vldr	s15, [r3]
 80010c2:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80010c6:	ece8 7a01 	vstmia	r8!, {s15}
            samples_HSR[j] = (float32_t)samples[j * MEAS_get_num_of_chan() + 2];
 80010ca:	f001 f879 	bl	80021c0 <MEAS_get_num_of_chan>
 80010ce:	fb04 f000 	mul.w	r0, r4, r0
 80010d2:	3002      	adds	r0, #2
 80010d4:	eb05 0380 	add.w	r3, r5, r0, lsl #2
 80010d8:	edd3 7a00 	vldr	s15, [r3]
 80010dc:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80010e0:	ece6 7a01 	vstmia	r6!, {s15}
            samples_HSL[j] = (float32_t)samples[j * MEAS_get_num_of_chan() + 3];
 80010e4:	f001 f86c 	bl	80021c0 <MEAS_get_num_of_chan>
 80010e8:	fb04 f000 	mul.w	r0, r4, r0
 80010ec:	3003      	adds	r0, #3
 80010ee:	eb05 0380 	add.w	r3, r5, r0, lsl #2
 80010f2:	edd3 7a00 	vldr	s15, [r3]
        for (uint32_t j = 0; j < buffer_size; j++) {
 80010f6:	3401      	adds	r4, #1
            samples_HSL[j] = (float32_t)samples[j * MEAS_get_num_of_chan() + 3];
 80010f8:	eef8 7a67 	vcvt.f32.u32	s15, s15
        for (uint32_t j = 0; j < buffer_size; j++) {
 80010fc:	45a2      	cmp	sl, r4
            samples_HSL[j] = (float32_t)samples[j * MEAS_get_num_of_chan() + 3];
 80010fe:	eceb 7a01 	vstmia	fp!, {s15}
        for (uint32_t j = 0; j < buffer_size; j++) {
 8001102:	d1c9      	bne.n	8001098 <accurate_FFT+0x7c>
        }
        // Calculate the Signal Strength and the main frequency for each channel using FFT

        fft = calculate_freq_and_signalstrength(samples_PR);
 8001104:	ee18 1a10 	vmov	r1, s16
 8001108:	f107 001c 	add.w	r0, r7, #28
 800110c:	f7ff fee2 	bl	8000ed4 <calculate_freq_and_signalstrength>
        accu_strength_PR[i] = fft.signal_strength;
 8001110:	697c      	ldr	r4, [r7, #20]
 8001112:	6a3b      	ldr	r3, [r7, #32]
 8001114:	f844 3b04 	str.w	r3, [r4], #4
        fft = calculate_freq_and_signalstrength(samples_PL);
 8001118:	ee18 1a90 	vmov	r1, s17
 800111c:	f107 001c 	add.w	r0, r7, #28
        accu_strength_PR[i] = fft.signal_strength;
 8001120:	617c      	str	r4, [r7, #20]
        fft = calculate_freq_and_signalstrength(samples_PL);
 8001122:	f7ff fed7 	bl	8000ed4 <calculate_freq_and_signalstrength>
        accu_strength_PL[i] = fft.signal_strength;
 8001126:	693a      	ldr	r2, [r7, #16]
 8001128:	6a3b      	ldr	r3, [r7, #32]
 800112a:	f842 3b04 	str.w	r3, [r2], #4
        fft = calculate_freq_and_signalstrength(samples_HSR);
 800112e:	ee19 1a10 	vmov	r1, s18
 8001132:	f107 001c 	add.w	r0, r7, #28
        accu_strength_PL[i] = fft.signal_strength;
 8001136:	613a      	str	r2, [r7, #16]
        fft = calculate_freq_and_signalstrength(samples_HSR);
 8001138:	f7ff fecc 	bl	8000ed4 <calculate_freq_and_signalstrength>
        accu_strength_HSR[i] = fft.signal_strength;
 800113c:	68fa      	ldr	r2, [r7, #12]
 800113e:	6a3b      	ldr	r3, [r7, #32]
 8001140:	f842 3b04 	str.w	r3, [r2], #4
        fft = calculate_freq_and_signalstrength(samples_HSL);
 8001144:	ee19 1a90 	vmov	r1, s19
 8001148:	f107 001c 	add.w	r0, r7, #28
        accu_strength_HSR[i] = fft.signal_strength;
 800114c:	60fa      	str	r2, [r7, #12]
        fft = calculate_freq_and_signalstrength(samples_HSL);
 800114e:	f7ff fec1 	bl	8000ed4 <calculate_freq_and_signalstrength>
        accu_strength_HSL[i] = fft.signal_strength;
 8001152:	68ba      	ldr	r2, [r7, #8]
 8001154:	6a3b      	ldr	r3, [r7, #32]
 8001156:	f842 3b04 	str.w	r3, [r2], #4
    for(uint8_t i = 0; i < ACCURATE_MEASUREMENT_LOOPS; i++){
 800115a:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800115e:	429c      	cmp	r4, r3
        accu_strength_HSL[i] = fft.signal_strength;
 8001160:	60ba      	str	r2, [r7, #8]
    for(uint8_t i = 0; i < ACCURATE_MEASUREMENT_LOOPS; i++){
 8001162:	d18a      	bne.n	800107a <accurate_FFT+0x5e>
        //current[i] = single_meas.current;
    }
    arm_mean_f32(accu_strength_PR, ACCURATE_MEASUREMENT_LOOPS, &accu_fft.signal_strength_pr);
 8001164:	f107 0028 	add.w	r0, r7, #40	; 0x28
 8001168:	f107 0278 	add.w	r2, r7, #120	; 0x78
 800116c:	2105      	movs	r1, #5
 800116e:	f02a fbab 	bl	802b8c8 <arm_mean_f32>
    //arm_std_f32(accu_strength_PR, ACCURATE_MEASUREMENT_LOOPS, &accu_fft.signal_strength_pr_std_dev);
    arm_mean_f32(accu_strength_PL, ACCURATE_MEASUREMENT_LOOPS, &accu_fft.signal_strength_pl);
 8001172:	f107 0280 	add.w	r2, r7, #128	; 0x80
 8001176:	f107 003c 	add.w	r0, r7, #60	; 0x3c
 800117a:	2105      	movs	r1, #5
 800117c:	f02a fba4 	bl	802b8c8 <arm_mean_f32>
    //arm_std_f32(accu_strength_PL, ACCURATE_MEASUREMENT_LOOPS, &accu_fft.signal_strength_pl_std_dev);
    arm_mean_f32(accu_strength_HSR, ACCURATE_MEASUREMENT_LOOPS, &accu_fft.signal_strength_hsr);
 8001180:	f107 0288 	add.w	r2, r7, #136	; 0x88
 8001184:	f107 0050 	add.w	r0, r7, #80	; 0x50
 8001188:	2105      	movs	r1, #5
 800118a:	f02a fb9d 	bl	802b8c8 <arm_mean_f32>
    //arm_std_f32(accu_strength_HSR, ACCURATE_MEASUREMENT_LOOPS, &accu_fft.signal_strength_hsr_std_dev);
    arm_mean_f32(accu_strength_HSL, ACCURATE_MEASUREMENT_LOOPS, &accu_fft.signal_strength_hsl);
    //arm_std_f32(accu_strength_HSL, ACCURATE_MEASUREMENT_LOOPS, &accu_fft.signal_strength_hsl_std_dev);

    return accu_fft;
 800118e:	f107 0478 	add.w	r4, r7, #120	; 0x78
    arm_mean_f32(accu_strength_HSL, ACCURATE_MEASUREMENT_LOOPS, &accu_fft.signal_strength_hsl);
 8001192:	f107 0290 	add.w	r2, r7, #144	; 0x90
 8001196:	f107 0064 	add.w	r0, r7, #100	; 0x64
 800119a:	2105      	movs	r1, #5
 800119c:	f02a fb94 	bl	802b8c8 <arm_mean_f32>
    return accu_fft;
 80011a0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80011a2:	687e      	ldr	r6, [r7, #4]
 80011a4:	4635      	mov	r5, r6
 80011a6:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 80011a8:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
}
 80011ac:	379c      	adds	r7, #156	; 0x9c
    return accu_fft;
 80011ae:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
}
 80011b2:	4630      	mov	r0, r6
 80011b4:	46bd      	mov	sp, r7
 80011b6:	ecbd 8b04 	vpop	{d8-d9}
 80011ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80011be:	bf00      	nop

080011c0 <calculate_coefficients_single_pad>:
    // s = x_0, x_1, x_2 d= y_0, y_1, y_2
    // Calculate the coefficients for the distance approximation from an approximation based on a second degree polynomial
    // a=((x_0^(2)*(x_1-x_2)*y_0-x_0*(x_1^(2)*y_1-x_2^(2)*y_2)+x_1*(x_1*y_1-x_2*y_2)*x_2)/((x_0^(2)-x_0*(x_1+x_2)+x_1*x_2)*(x_1-x_2)))
    // -> Result of Nspire CAS

    *a = (POW2(s[0]) * (s[1] - s[2]) * d[0] - s[0] * (POW2(s[1]) * d[1] - POW2(s[2]) * d[2]) + s[1] * (s[1] * d[1] - s[2] * d[2]) * s[2])
 80011c0:	ed90 6a02 	vldr	s12, [r0, #8]
 80011c4:	edd0 7a01 	vldr	s15, [r0, #4]
 80011c8:	ed90 5a00 	vldr	s10, [r0]
 80011cc:	ed91 7a02 	vldr	s14, [r1, #8]
 80011d0:	edd1 4a00 	vldr	s9, [r1]
 80011d4:	ed91 4a01 	vldr	s8, [r1, #4]
 80011d8:	ee66 6a06 	vmul.f32	s13, s12, s12
 80011dc:	ee77 5ac6 	vsub.f32	s11, s15, s12
 80011e0:	ee65 4a24 	vmul.f32	s9, s10, s9
 80011e4:	ee66 6a87 	vmul.f32	s13, s13, s14
 80011e8:	ee27 7a46 	vnmul.f32	s14, s14, s12
 80011ec:	eee5 6aa4 	vfma.f32	s13, s11, s9
 80011f0:	eea7 7a84 	vfma.f32	s14, s15, s8
 80011f4:	ee67 3aa7 	vmul.f32	s7, s15, s15
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 80011f8:	ee77 4a86 	vadd.f32	s9, s15, s12
 80011fc:	eee4 6a63 	vfms.f32	s13, s8, s7
 8001200:	ee67 7a86 	vmul.f32	s15, s15, s12
 8001204:	ee35 6a64 	vsub.f32	s12, s10, s9
    *a = (POW2(s[0]) * (s[1] - s[2]) * d[0] - s[0] * (POW2(s[1]) * d[1] - POW2(s[2]) * d[2]) + s[1] * (s[1] * d[1] - s[2] * d[2]) * s[2])
 8001208:	ee27 7a27 	vmul.f32	s14, s14, s15
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 800120c:	eee5 7a06 	vfma.f32	s15, s10, s12
    *a = (POW2(s[0]) * (s[1] - s[2]) * d[0] - s[0] * (POW2(s[1]) * d[1] - POW2(s[2]) * d[2]) + s[1] * (s[1] * d[1] - s[2] * d[2]) * s[2])
 8001210:	eea5 7a26 	vfma.f32	s14, s10, s13
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 8001214:	ee65 5aa7 	vmul.f32	s11, s11, s15
 8001218:	eec7 7a25 	vdiv.f32	s15, s14, s11
    *a = (POW2(s[0]) * (s[1] - s[2]) * d[0] - s[0] * (POW2(s[1]) * d[1] - POW2(s[2]) * d[2]) + s[1] * (s[1] * d[1] - s[2] * d[2]) * s[2])
 800121c:	edc2 7a00 	vstr	s15, [r2]
    // b = ((−(x_0^(2)*(x_1^(2)*(y_0-y_1)-x_2^(2)*(y_0-y_2))+x_1^(2)*x_2^(2)*(y_1-y_2)))/((x_0^(2)-x_0*(x_1+x_2)+x_1*x_2)*(x_1-x_2)))
    // -> Result of Nspire CAS

    *b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 8001220:	edd0 7a01 	vldr	s15, [r0, #4]
 8001224:	ed91 3a01 	vldr	s6, [r1, #4]
 8001228:	ed91 7a00 	vldr	s14, [r1]
 800122c:	edd0 6a02 	vldr	s13, [r0, #8]
 8001230:	edd1 5a02 	vldr	s11, [r1, #8]
 8001234:	edd0 4a00 	vldr	s9, [r0]
 8001238:	ee67 2aa7 	vmul.f32	s5, s15, s15
 800123c:	ee33 6a47 	vsub.f32	s12, s6, s14
 8001240:	ee26 5aa6 	vmul.f32	s10, s13, s13
 8001244:	ee37 7a65 	vsub.f32	s14, s14, s11
 8001248:	ee26 6a22 	vmul.f32	s12, s12, s5
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 800124c:	ee77 3aa6 	vadd.f32	s7, s15, s13
    *b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 8001250:	eea7 6a05 	vfma.f32	s12, s14, s10
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 8001254:	ee27 4aa6 	vmul.f32	s8, s15, s13
    *b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 8001258:	ee24 7aa4 	vmul.f32	s14, s9, s9
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 800125c:	ee74 3ae3 	vsub.f32	s7, s9, s7
    *b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 8001260:	ee25 5a22 	vmul.f32	s10, s10, s5
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 8001264:	eea4 4aa3 	vfma.f32	s8, s9, s7
    *b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 8001268:	ee75 5ac3 	vsub.f32	s11, s11, s6
 800126c:	ee27 7a06 	vmul.f32	s14, s14, s12
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 8001270:	ee77 7ae6 	vsub.f32	s15, s15, s13
    *b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 8001274:	eea5 7a25 	vfma.f32	s14, s10, s11
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 8001278:	ee67 7a84 	vmul.f32	s15, s15, s8
 800127c:	eec7 6a27 	vdiv.f32	s13, s14, s15
    *b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 8001280:	edc3 6a00 	vstr	s13, [r3]

    // c=((x_0*(x_0*(x_1*(y_0-y_1)-x_2*(y_0-y_2))+x_1*x_2*(y_1-y_2))*x_1*x_2)/((x_0^(2)-x_0*(x_1+x_2)+x_1*x_2)*(x_1-x_2)))
    // -> Result of Nspire CAS
    *c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 8001284:	edd1 7a00 	vldr	s15, [r1]
 8001288:	ed91 4a02 	vldr	s8, [r1, #8]
 800128c:	ed90 6a02 	vldr	s12, [r0, #8]
 8001290:	edd1 6a01 	vldr	s13, [r1, #4]
 8001294:	ed90 7a01 	vldr	s14, [r0, #4]
 8001298:	9b00      	ldr	r3, [sp, #0]
 800129a:	ee74 5a67 	vsub.f32	s11, s8, s15
 800129e:	ee77 4ae6 	vsub.f32	s9, s15, s13
 80012a2:	ee65 5a86 	vmul.f32	s11, s11, s12
 80012a6:	edd0 7a00 	vldr	s15, [r0]
 80012aa:	eee7 5a24 	vfma.f32	s11, s14, s9
 80012ae:	ee27 5a06 	vmul.f32	s10, s14, s12
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 80012b2:	ee77 4a06 	vadd.f32	s9, s14, s12
    *c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 80012b6:	ee76 6ac4 	vsub.f32	s13, s13, s8
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 80012ba:	ee77 4ae4 	vsub.f32	s9, s15, s9
    *c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 80012be:	ee66 6a85 	vmul.f32	s13, s13, s10
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 80012c2:	eea7 5aa4 	vfma.f32	s10, s15, s9
    *c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 80012c6:	eee7 6aa5 	vfma.f32	s13, s15, s11
 80012ca:	ee67 7a87 	vmul.f32	s15, s15, s14
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 80012ce:	ee37 7a46 	vsub.f32	s14, s14, s12
    *c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 80012d2:	ee67 7a86 	vmul.f32	s15, s15, s12
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 80012d6:	ee27 7a05 	vmul.f32	s14, s14, s10
    *c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 80012da:	ee67 7aa6 	vmul.f32	s15, s15, s13
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 80012de:	eec7 6a87 	vdiv.f32	s13, s15, s14
    *c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 80012e2:	edc3 6a00 	vstr	s13, [r3]
}
 80012e6:	4770      	bx	lr

080012e8 <calculate_distance_and_angle>:
DISTANCE_ANGLE calculate_distance_and_angle(float32_t signal_strength_r, float32_t signal_strength_l){
 80012e8:	b530      	push	{r4, r5, lr}
    float32_t distance[3] = {10, 50, 100};
 80012ea:	4b37      	ldr	r3, [pc, #220]	; (80013c8 <calculate_distance_and_angle+0xe0>)
DISTANCE_ANGLE calculate_distance_and_angle(float32_t signal_strength_r, float32_t signal_strength_l){
 80012ec:	ed2d 8b02 	vpush	{d8}
    float32_t distance[3] = {10, 50, 100};
 80012f0:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
DISTANCE_ANGLE calculate_distance_and_angle(float32_t signal_strength_r, float32_t signal_strength_l){
 80012f4:	b097      	sub	sp, #92	; 0x5c
    float32_t distance[3] = {10, 50, 100};
 80012f6:	f10d 0e1c 	add.w	lr, sp, #28
 80012fa:	e88e 0007 	stmia.w	lr, {r0, r1, r2}
    float32_t signal_r[3] = {1030, 717, 543};
 80012fe:	f103 020c 	add.w	r2, r3, #12
 8001302:	ca07      	ldmia	r2, {r0, r1, r2}
 8001304:	f10d 0c28 	add.w	ip, sp, #40	; 0x28
 8001308:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
    float32_t signal_l[3] = {920, 655, 553};
 800130c:	f103 0218 	add.w	r2, r3, #24
 8001310:	ca07      	ldmia	r2, {r0, r1, r2}
 8001312:	ac0d      	add	r4, sp, #52	; 0x34
    calculate_coefficients_single_pad(signal_pr, distance, &calibration.a_r, &calibration.b_r, &calibration.c_r);
 8001314:	ab12      	add	r3, sp, #72	; 0x48
 8001316:	9300      	str	r3, [sp, #0]
    calculate_coefficients_single_pad(signal_pl, distance, &calibration.a_l, &calibration.b_l, &calibration.c_l);
 8001318:	ad15      	add	r5, sp, #84	; 0x54
    float32_t signal_l[3] = {920, 655, 553};
 800131a:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    calculate_coefficients_single_pad(signal_pr, distance, &calibration.a_r, &calibration.b_r, &calibration.c_r);
 800131e:	ab11      	add	r3, sp, #68	; 0x44
 8001320:	4660      	mov	r0, ip
 8001322:	4671      	mov	r1, lr
 8001324:	aa10      	add	r2, sp, #64	; 0x40
 8001326:	f7ff ff4b 	bl	80011c0 <calculate_coefficients_single_pad>
    calculate_coefficients_single_pad(signal_pl, distance, &calibration.a_l, &calibration.b_l, &calibration.c_l);
 800132a:	ab14      	add	r3, sp, #80	; 0x50
 800132c:	aa13      	add	r2, sp, #76	; 0x4c
 800132e:	4620      	mov	r0, r4
 8001330:	9500      	str	r5, [sp, #0]
 8001332:	f7ff ff45 	bl	80011c0 <calculate_coefficients_single_pad>
    return calibration;
 8001336:	ed9d 7a11 	vldr	s14, [sp, #68]	; 0x44
 800133a:	eddd 7a14 	vldr	s15, [sp, #80]	; 0x50
 800133e:	eddd 6a15 	vldr	s13, [sp, #84]	; 0x54
 8001342:	ed9d 6a10 	vldr	s12, [sp, #64]	; 0x40
    float32_t calc_distance = calibration.a_r + (calibration.b_r / signal_strength_r) + (calibration.c_r / POW2(signal_strength_r));
 8001346:	ee87 8a00 	vdiv.f32	s16, s14, s0
    calc_distance = calibration.a_l + (calibration.b_l / signal_strength_l) + (calibration.c_l / POW2(signal_strength_l));
 800134a:	eec7 8aa0 	vdiv.f32	s17, s15, s1
    float32_t calc_distance = calibration.a_r + (calibration.b_r / signal_strength_r) + (calibration.c_r / POW2(signal_strength_r));
 800134e:	ee20 0a00 	vmul.f32	s0, s0, s0
    calc_distance = calibration.a_l + (calibration.b_l / signal_strength_l) + (calibration.c_l / POW2(signal_strength_l));
 8001352:	ee60 0aa0 	vmul.f32	s1, s1, s1
    return calibration;
 8001356:	eddd 7a12 	vldr	s15, [sp, #72]	; 0x48
    float32_t calc_distance = calibration.a_r + (calibration.b_r / signal_strength_r) + (calibration.c_r / POW2(signal_strength_r));
 800135a:	ee87 7a80 	vdiv.f32	s14, s15, s0
    calc_distance = calibration.a_l + (calibration.b_l / signal_strength_l) + (calibration.c_l / POW2(signal_strength_l));
 800135e:	eec6 7aa0 	vdiv.f32	s15, s13, s1
    return calibration;
 8001362:	eddd 6a13 	vldr	s13, [sp, #76]	; 0x4c
    float32_t calc_distance = calibration.a_r + (calibration.b_r / signal_strength_r) + (calibration.c_r / POW2(signal_strength_r));
 8001366:	ee38 8a06 	vadd.f32	s16, s16, s12
    calc_distance = calibration.a_l + (calibration.b_l / signal_strength_l) + (calibration.c_l / POW2(signal_strength_l));
 800136a:	ee78 8aa6 	vadd.f32	s17, s17, s13
    float32_t calc_distance = calibration.a_r + (calibration.b_r / signal_strength_r) + (calibration.c_r / POW2(signal_strength_r));
 800136e:	ee38 8a07 	vadd.f32	s16, s16, s14
    calc_distance = calibration.a_l + (calibration.b_l / signal_strength_l) + (calibration.c_l / POW2(signal_strength_l));
 8001372:	ee78 8aa7 	vadd.f32	s17, s17, s15
    dist_angle.angle = atanf((dist_angle.distance_l - dist_angle.distance_r) / (2 * D_P)) * (180 / PI);
 8001376:	ee78 7ac8 	vsub.f32	s15, s17, s16
 800137a:	ee17 0a90 	vmov	r0, s15
 800137e:	f7ff fa75 	bl	800086c <__aeabi_f2d>
 8001382:	a30f      	add	r3, pc, #60	; (adr r3, 80013c0 <calculate_distance_and_angle+0xd8>)
 8001384:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001388:	f7fe ffe2 	bl	8000350 <__aeabi_dmul>
 800138c:	f7ff fac6 	bl	800091c <__aeabi_d2f>
 8001390:	ee00 0a10 	vmov	s0, r0
 8001394:	f02b fc3c 	bl	802cc10 <atanf>
    dist_angle.distance = (dist_angle.distance_l + dist_angle.distance_r) / 2;
 8001398:	ee38 1a28 	vadd.f32	s2, s16, s17
    dist_angle.angle = atanf((dist_angle.distance_l - dist_angle.distance_r) / (2 * D_P)) * (180 / PI);
 800139c:	eddf 1a0b 	vldr	s3, [pc, #44]	; 80013cc <calculate_distance_and_angle+0xe4>
    dist_angle.distance = (dist_angle.distance_l + dist_angle.distance_r) / 2;
 80013a0:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
}
 80013a4:	ee60 1a21 	vmul.f32	s3, s0, s3
 80013a8:	ee21 1a07 	vmul.f32	s2, s2, s14
 80013ac:	eef0 0a68 	vmov.f32	s1, s17
 80013b0:	eeb0 0a48 	vmov.f32	s0, s16
 80013b4:	b017      	add	sp, #92	; 0x5c
 80013b6:	ecbd 8b02 	vpop	{d8}
 80013ba:	bd30      	pop	{r4, r5, pc}
 80013bc:	f3af 8000 	nop.w
 80013c0:	a8ef1b4a 	.word	0xa8ef1b4a
 80013c4:	3f99fd66 	.word	0x3f99fd66
 80013c8:	0802ea68 	.word	0x0802ea68
 80013cc:	42652ee0 	.word	0x42652ee0

080013d0 <single_measurement>:
SINGLE_MEAS single_measurement(uint32_t* samples) {
 80013d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80013d4:	ed2d 8b04 	vpush	{d8-d9}
 80013d8:	b093      	sub	sp, #76	; 0x4c
 80013da:	af00      	add	r7, sp, #0
 80013dc:	4605      	mov	r5, r0
    uint8_t buffer_size = MEAS_get_num_of_samples();
 80013de:	f000 fef1 	bl	80021c4 <MEAS_get_num_of_samples>
    float32_t samples_PR[buffer_size];
 80013e2:	b203      	sxth	r3, r0
 80013e4:	009b      	lsls	r3, r3, #2
 80013e6:	3307      	adds	r3, #7
 80013e8:	f023 0307 	bic.w	r3, r3, #7
 80013ec:	ebad 0d03 	sub.w	sp, sp, r3
 80013f0:	46e9      	mov	r9, sp
    float32_t samples_PL[buffer_size];
 80013f2:	ebad 0d03 	sub.w	sp, sp, r3
 80013f6:	46e8      	mov	r8, sp
    float32_t samples_HSR[buffer_size];
 80013f8:	ebad 0d03 	sub.w	sp, sp, r3
 80013fc:	466e      	mov	r6, sp
    float32_t samples_HSL[buffer_size];
 80013fe:	ebad 0d03 	sub.w	sp, sp, r3
 8001402:	46eb      	mov	fp, sp
    float32_t samples_PR[buffer_size];
 8001404:	ee08 9a10 	vmov	s16, r9
    float32_t samples_PL[buffer_size];
 8001408:	ee08 8a90 	vmov	s17, r8
    float32_t samples_HSR[buffer_size];
 800140c:	ee09 6a10 	vmov	s18, r6
    float32_t samples_HSL[buffer_size];
 8001410:	ee09 ba90 	vmov	s19, fp
    for (uint32_t i = 0; i < buffer_size; i++) {
 8001414:	b3b8      	cbz	r0, 8001486 <single_measurement+0xb6>
 8001416:	4682      	mov	sl, r0
 8001418:	2400      	movs	r4, #0
        samples_PR[i] = (float32_t)samples[i * MEAS_get_num_of_chan()];
 800141a:	f000 fed1 	bl	80021c0 <MEAS_get_num_of_chan>
 800141e:	fb04 f000 	mul.w	r0, r4, r0
 8001422:	eb05 0380 	add.w	r3, r5, r0, lsl #2
 8001426:	edd3 7a00 	vldr	s15, [r3]
 800142a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800142e:	ece9 7a01 	vstmia	r9!, {s15}
        samples_PL[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + 1];
 8001432:	f000 fec5 	bl	80021c0 <MEAS_get_num_of_chan>
 8001436:	fb04 f000 	mul.w	r0, r4, r0
 800143a:	3001      	adds	r0, #1
 800143c:	eb05 0380 	add.w	r3, r5, r0, lsl #2
 8001440:	edd3 7a00 	vldr	s15, [r3]
 8001444:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8001448:	ece8 7a01 	vstmia	r8!, {s15}
        samples_HSR[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + 2];
 800144c:	f000 feb8 	bl	80021c0 <MEAS_get_num_of_chan>
 8001450:	fb04 f000 	mul.w	r0, r4, r0
 8001454:	3002      	adds	r0, #2
 8001456:	eb05 0380 	add.w	r3, r5, r0, lsl #2
 800145a:	edd3 7a00 	vldr	s15, [r3]
 800145e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8001462:	ece6 7a01 	vstmia	r6!, {s15}
        samples_HSL[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + 3];
 8001466:	f000 feab 	bl	80021c0 <MEAS_get_num_of_chan>
 800146a:	fb04 f000 	mul.w	r0, r4, r0
 800146e:	3003      	adds	r0, #3
 8001470:	eb05 0380 	add.w	r3, r5, r0, lsl #2
 8001474:	edd3 7a00 	vldr	s15, [r3]
    for (uint32_t i = 0; i < buffer_size; i++) {
 8001478:	3401      	adds	r4, #1
        samples_HSL[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + 3];
 800147a:	eef8 7a67 	vcvt.f32.u32	s15, s15
    for (uint32_t i = 0; i < buffer_size; i++) {
 800147e:	45a2      	cmp	sl, r4
        samples_HSL[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + 3];
 8001480:	eceb 7a01 	vstmia	fp!, {s15}
    for (uint32_t i = 0; i < buffer_size; i++) {
 8001484:	d1c9      	bne.n	800141a <single_measurement+0x4a>
    fft = calculate_freq_and_signalstrength(samples_PR);
 8001486:	ee18 1a10 	vmov	r1, s16
 800148a:	f107 001c 	add.w	r0, r7, #28
 800148e:	f7ff fd21 	bl	8000ed4 <calculate_freq_and_signalstrength>
 8001492:	ed97 0a08 	vldr	s0, [r7, #32]
 8001496:	ed97 8a07 	vldr	s16, [r7, #28]
 800149a:	ed87 0a00 	vstr	s0, [r7]
    fft = calculate_freq_and_signalstrength(samples_PL);
 800149e:	ee18 1a90 	vmov	r1, s17
 80014a2:	f107 001c 	add.w	r0, r7, #28
 80014a6:	f7ff fd15 	bl	8000ed4 <calculate_freq_and_signalstrength>
 80014aa:	edd7 0a08 	vldr	s1, [r7, #32]
 80014ae:	edd7 8a07 	vldr	s17, [r7, #28]
 80014b2:	edc7 0a01 	vstr	s1, [r7, #4]
    fft = calculate_freq_and_signalstrength(samples_HSR);
 80014b6:	ee19 1a10 	vmov	r1, s18
 80014ba:	f107 001c 	add.w	r0, r7, #28
 80014be:	f7ff fd09 	bl	8000ed4 <calculate_freq_and_signalstrength>
    fft = calculate_freq_and_signalstrength(samples_HSL);
 80014c2:	f107 001c 	add.w	r0, r7, #28
 80014c6:	ee19 1a90 	vmov	r1, s19
 80014ca:	f7ff fd03 	bl	8000ed4 <calculate_freq_and_signalstrength>
    DISTANCE_ANGLE dist_angle = calculate_distance_and_angle(signal_strength_PR, signal_strength_PL);
 80014ce:	edd7 0a01 	vldr	s1, [r7, #4]
 80014d2:	ed97 0a00 	vldr	s0, [r7]
 80014d6:	f7ff ff07 	bl	80012e8 <calculate_distance_and_angle>
    single_meas.frequency = (main_frequency_PR + main_frequency_PL) / 2;
 80014da:	ee38 8a28 	vadd.f32	s16, s16, s17
    DISTANCE_ANGLE dist_angle = calculate_distance_and_angle(signal_strength_PR, signal_strength_PL);
 80014de:	eeb0 0a41 	vmov.f32	s0, s2
    single_meas.frequency = (main_frequency_PR + main_frequency_PL) / 2;
 80014e2:	eeb6 1a00 	vmov.f32	s2, #96	; 0x3f000000  0.5
}
 80014e6:	eef0 0a61 	vmov.f32	s1, s3
 80014ea:	ee28 1a01 	vmul.f32	s2, s16, s2
 80014ee:	eddf 1a04 	vldr	s3, [pc, #16]	; 8001500 <single_measurement+0x130>
 80014f2:	374c      	adds	r7, #76	; 0x4c
 80014f4:	46bd      	mov	sp, r7
 80014f6:	ecbd 8b04 	vpop	{d8-d9}
 80014fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80014fe:	bf00      	nop
 8001500:	00000000 	.word	0x00000000

08001504 <calculate_coeff>:

void calculate_coeff()
{
	int i = 0;
	i = 1 + 2;
}
 8001504:	4770      	bx	lr
 8001506:	bf00      	nop

08001508 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 8001508:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
 800150a:	2064      	movs	r0, #100	; 0x64
 800150c:	f00e fa0c 	bl	800f928 <osDelay>
  for(;;)
 8001510:	e7fb      	b.n	800150a <StartDefaultTask+0x2>
 8001512:	bf00      	nop

08001514 <StartTimeoutTask>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartTimeoutTask */
void StartTimeoutTask(void *argument)
{
 8001514:	b580      	push	{r7, lr}
 8001516:	4c19      	ldr	r4, [pc, #100]	; (800157c <StartTimeoutTask+0x68>)
 8001518:	f8df 8074 	ldr.w	r8, [pc, #116]	; 8001590 <StartTimeoutTask+0x7c>
 800151c:	4e18      	ldr	r6, [pc, #96]	; (8001580 <StartTimeoutTask+0x6c>)
 800151e:	4d19      	ldr	r5, [pc, #100]	; (8001584 <StartTimeoutTask+0x70>)
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);

	  if(sleep_timeout_value == 0)
	  {
		  sleep_timeout_value = 60;
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 8001520:	4f19      	ldr	r7, [pc, #100]	; (8001588 <StartTimeoutTask+0x74>)
	  sleep_timeout_value--;
 8001522:	6820      	ldr	r0, [r4, #0]
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 8001524:	4915      	ldr	r1, [pc, #84]	; (800157c <StartTimeoutTask+0x68>)
 8001526:	2300      	movs	r3, #0
 8001528:	461a      	mov	r2, r3
	  sleep_timeout_value--;
 800152a:	f100 3cff 	add.w	ip, r0, #4294967295
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 800152e:	f8d8 0000 	ldr.w	r0, [r8]
	  sleep_timeout_value--;
 8001532:	f8c4 c000 	str.w	ip, [r4]
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 8001536:	f00e faf3 	bl	800fb20 <osMessageQueuePut>
	  if(sleep_timeout_value == 0)
 800153a:	6822      	ldr	r2, [r4, #0]
		  sleep_timeout_value = 60;
 800153c:	233c      	movs	r3, #60	; 0x3c
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 800153e:	4638      	mov	r0, r7
 8001540:	2120      	movs	r1, #32
	  if(sleep_timeout_value == 0)
 8001542:	b912      	cbnz	r2, 800154a <StartTimeoutTask+0x36>
		  sleep_timeout_value = 60;
 8001544:	6023      	str	r3, [r4, #0]
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 8001546:	f00a fc19 	bl	800bd7c <HAL_GPIO_WritePin>
	  }
	  if(sleep_timeout_value > 60 && sleep_timeout_value < 0)
		  sleep_timeout_value = 60;

	  // Toggle onboard LED as heartbeat visual feedback
	  HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 800154a:	4810      	ldr	r0, [pc, #64]	; (800158c <StartTimeoutTask+0x78>)
 800154c:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001550:	f00a fc18 	bl	800bd84 <HAL_GPIO_TogglePin>

	  //pwm test
	  static uint8_t prescaler = 140;
	  HAL_TIM_PWM_Stop(&htim14, TIM_CHANNEL_1);
 8001554:	2100      	movs	r1, #0
 8001556:	4630      	mov	r0, r6
 8001558:	f00d fd0e 	bl	800ef78 <HAL_TIM_PWM_Stop>
	  htim14.Init.Prescaler = prescaler-1;
 800155c:	782b      	ldrb	r3, [r5, #0]
	  HAL_TIM_PWM_Start(&htim14, TIM_CHANNEL_1);
 800155e:	2100      	movs	r1, #0
	  htim14.Init.Prescaler = prescaler-1;
 8001560:	3b01      	subs	r3, #1
	  HAL_TIM_PWM_Start(&htim14, TIM_CHANNEL_1);
 8001562:	4630      	mov	r0, r6
	  htim14.Init.Prescaler = prescaler-1;
 8001564:	6073      	str	r3, [r6, #4]
	  HAL_TIM_PWM_Start(&htim14, TIM_CHANNEL_1);
 8001566:	f00d fc97 	bl	800ee98 <HAL_TIM_PWM_Start>
	  prescaler = prescaler + 10;
 800156a:	782b      	ldrb	r3, [r5, #0]
	  if(prescaler > 420)
	  {
		  prescaler = 140;
	  }

	  osDelay(1000);
 800156c:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
	  prescaler = prescaler + 10;
 8001570:	330a      	adds	r3, #10
 8001572:	702b      	strb	r3, [r5, #0]
	  osDelay(1000);
 8001574:	f00e f9d8 	bl	800f928 <osDelay>
  {
 8001578:	e7d3      	b.n	8001522 <StartTimeoutTask+0xe>
 800157a:	bf00      	nop
 800157c:	20000010 	.word	0x20000010
 8001580:	20000374 	.word	0x20000374
 8001584:	2000000c 	.word	0x2000000c
 8001588:	40021000 	.word	0x40021000
 800158c:	40021800 	.word	0x40021800
 8001590:	200001d8 	.word	0x200001d8

08001594 <gyro_disable>:
{
 8001594:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001596:	b083      	sub	sp, #12
	__HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 8001598:	4e1f      	ldr	r6, [pc, #124]	; (8001618 <gyro_disable+0x84>)
	GPIOC->MODER &= ~GPIO_MODER_MODER1_Msk;        // Reset mode for PC1
 800159a:	4d20      	ldr	r5, [pc, #128]	; (800161c <gyro_disable+0x88>)
	GPIOF->OSPEEDR &= ~GPIO_OSPEEDR_OSPEED8_Msk;  // Reset speed of PF8
 800159c:	4c20      	ldr	r4, [pc, #128]	; (8001620 <gyro_disable+0x8c>)
	__HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 800159e:	2700      	movs	r7, #0
 80015a0:	9700      	str	r7, [sp, #0]
 80015a2:	6b33      	ldr	r3, [r6, #48]	; 0x30
 80015a4:	f043 0304 	orr.w	r3, r3, #4
 80015a8:	6333      	str	r3, [r6, #48]	; 0x30
 80015aa:	6b33      	ldr	r3, [r6, #48]	; 0x30
 80015ac:	f003 0304 	and.w	r3, r3, #4
 80015b0:	9300      	str	r3, [sp, #0]
 80015b2:	9b00      	ldr	r3, [sp, #0]
	GPIOC->MODER &= ~GPIO_MODER_MODER1_Msk;        // Reset mode for PC1
 80015b4:	682b      	ldr	r3, [r5, #0]
 80015b6:	f023 030c 	bic.w	r3, r3, #12
 80015ba:	602b      	str	r3, [r5, #0]
	GPIOC->MODER |= 1UL << GPIO_MODER_MODER1_Pos;  // Set PC1 as output
 80015bc:	682b      	ldr	r3, [r5, #0]
 80015be:	f043 0304 	orr.w	r3, r3, #4
 80015c2:	602b      	str	r3, [r5, #0]
	GPIOC->BSRR |= GPIO_BSRR_BR1;  // Set GYRO (CS) to 0 for a short time
 80015c4:	69ab      	ldr	r3, [r5, #24]
 80015c6:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80015ca:	61ab      	str	r3, [r5, #24]
	HAL_Delay(10);                 // Wait some time
 80015cc:	200a      	movs	r0, #10
 80015ce:	f009 ffff 	bl	800b5d0 <HAL_Delay>
	GPIOC->MODER |= 3UL << GPIO_MODER_MODER1_Pos;  // Analog PC1 = ADC123_IN11
 80015d2:	682b      	ldr	r3, [r5, #0]
 80015d4:	f043 030c 	orr.w	r3, r3, #12
 80015d8:	602b      	str	r3, [r5, #0]
	__HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 80015da:	9701      	str	r7, [sp, #4]
 80015dc:	6b33      	ldr	r3, [r6, #48]	; 0x30
 80015de:	f043 0320 	orr.w	r3, r3, #32
 80015e2:	6333      	str	r3, [r6, #48]	; 0x30
 80015e4:	6b33      	ldr	r3, [r6, #48]	; 0x30
 80015e6:	f003 0320 	and.w	r3, r3, #32
 80015ea:	9301      	str	r3, [sp, #4]
 80015ec:	9b01      	ldr	r3, [sp, #4]
	GPIOF->OSPEEDR &= ~GPIO_OSPEEDR_OSPEED8_Msk;  // Reset speed of PF8
 80015ee:	68a3      	ldr	r3, [r4, #8]
 80015f0:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 80015f4:	60a3      	str	r3, [r4, #8]
	GPIOF->AFR[1] &= ~GPIO_AFRH_AFSEL8_Msk;  // Reset alternate function of PF8
 80015f6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80015f8:	f023 030f 	bic.w	r3, r3, #15
 80015fc:	6263      	str	r3, [r4, #36]	; 0x24
	GPIOF->PUPDR &= ~GPIO_PUPDR_PUPD8_Msk;   // Reset pulup/down of PF8
 80015fe:	68e3      	ldr	r3, [r4, #12]
 8001600:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8001604:	60e3      	str	r3, [r4, #12]
	HAL_Delay(10);                           // Wait some time
 8001606:	200a      	movs	r0, #10
 8001608:	f009 ffe2 	bl	800b5d0 <HAL_Delay>
	GPIOF->MODER |= 3UL << GPIO_MODER_MODER8_Pos;  // Analog mode PF8 = ADC3_IN4
 800160c:	6823      	ldr	r3, [r4, #0]
 800160e:	f443 3340 	orr.w	r3, r3, #196608	; 0x30000
 8001612:	6023      	str	r3, [r4, #0]
}
 8001614:	b003      	add	sp, #12
 8001616:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001618:	40023800 	.word	0x40023800
 800161c:	40020800 	.word	0x40020800
 8001620:	40021400 	.word	0x40021400

08001624 <setCalibrationFlashValues>:
{
 8001624:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8001628:	461c      	mov	r4, r3
	uint32_t Rx_Data[numberofwords];
 800162a:	009b      	lsls	r3, r3, #2
 800162c:	3307      	adds	r3, #7
 800162e:	466d      	mov	r5, sp
 8001630:	08db      	lsrs	r3, r3, #3
 8001632:	eba5 03c3 	sub.w	r3, r5, r3, lsl #3
{
 8001636:	af00      	add	r7, sp, #0
	uint32_t Rx_Data[numberofwords];
 8001638:	469d      	mov	sp, r3
 800163a:	46e8      	mov	r8, sp
{
 800163c:	4615      	mov	r5, r2
 800163e:	460e      	mov	r6, r1
 8001640:	4681      	mov	r9, r0
	Flash_Read_Data(StartSectorAddress, Rx_Data, numberofwords);
 8001642:	4622      	mov	r2, r4
 8001644:	4641      	mov	r1, r8
 8001646:	f7ff fc39 	bl	8000ebc <Flash_Read_Data>
	Rx_Data[index] = value;
 800164a:	f848 6025 	str.w	r6, [r8, r5, lsl #2]
	Flash_Write_Data(StartSectorAddress, data_addr, numberofwords);
 800164e:	4622      	mov	r2, r4
 8001650:	4641      	mov	r1, r8
 8001652:	4648      	mov	r0, r9
 8001654:	f7ff fbf8 	bl	8000e48 <Flash_Write_Data>
	Calibration_Data[index] = value;
 8001658:	4b02      	ldr	r3, [pc, #8]	; (8001664 <setCalibrationFlashValues+0x40>)
 800165a:	f843 6025 	str.w	r6, [r3, r5, lsl #2]
}
 800165e:	46bd      	mov	sp, r7
 8001660:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8001664:	200001a0 	.word	0x200001a0

08001668 <SystemClock_Config>:
{
 8001668:	b530      	push	{r4, r5, lr}
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800166a:	2400      	movs	r4, #0
{
 800166c:	b095      	sub	sp, #84	; 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800166e:	e9cd 440a 	strd	r4, r4, [sp, #40]	; 0x28
 8001672:	e9cd 440c 	strd	r4, r4, [sp, #48]	; 0x30
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001676:	e9cd 4403 	strd	r4, r4, [sp, #12]
 800167a:	e9cd 4405 	strd	r4, r4, [sp, #20]
  __HAL_RCC_PWR_CLK_ENABLE();
 800167e:	4a1e      	ldr	r2, [pc, #120]	; (80016f8 <SystemClock_Config+0x90>)
 8001680:	9401      	str	r4, [sp, #4]
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001682:	9407      	str	r4, [sp, #28]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001684:	6c11      	ldr	r1, [r2, #64]	; 0x40
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001686:	4b1d      	ldr	r3, [pc, #116]	; (80016fc <SystemClock_Config+0x94>)
  __HAL_RCC_PWR_CLK_ENABLE();
 8001688:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 800168c:	6411      	str	r1, [r2, #64]	; 0x40
 800168e:	6c12      	ldr	r2, [r2, #64]	; 0x40
 8001690:	f002 5280 	and.w	r2, r2, #268435456	; 0x10000000
 8001694:	9201      	str	r2, [sp, #4]
 8001696:	9a01      	ldr	r2, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001698:	9402      	str	r4, [sp, #8]
 800169a:	681a      	ldr	r2, [r3, #0]
 800169c:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 80016a0:	601a      	str	r2, [r3, #0]
 80016a2:	681b      	ldr	r3, [r3, #0]
 80016a4:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 80016a8:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 80016aa:	2201      	movs	r2, #1
 80016ac:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80016b0:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLM = 8;
 80016b4:	2308      	movs	r3, #8
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80016b6:	2502      	movs	r5, #2
  RCC_OscInitStruct.PLL.PLLM = 8;
 80016b8:	9310      	str	r3, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80016ba:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  RCC_OscInitStruct.PLL.PLLN = 336;
 80016be:	f44f 73a8 	mov.w	r3, #336	; 0x150
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80016c2:	e9cd 520e 	strd	r5, r2, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLN = 336;
 80016c6:	9311      	str	r3, [sp, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 80016c8:	2202      	movs	r2, #2
 80016ca:	2304      	movs	r3, #4
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80016cc:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 80016ce:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80016d2:	9902      	ldr	r1, [sp, #8]
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80016d4:	f00c f990 	bl	800d9f8 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80016d8:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80016da:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 80016de:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80016e2:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 80016e6:	a803      	add	r0, sp, #12
 80016e8:	2105      	movs	r1, #5
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 80016ea:	e9cd 4205 	strd	r4, r2, [sp, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80016ee:	9307      	str	r3, [sp, #28]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 80016f0:	f00c fb9a 	bl	800de28 <HAL_RCC_ClockConfig>
}
 80016f4:	b015      	add	sp, #84	; 0x54
 80016f6:	bd30      	pop	{r4, r5, pc}
 80016f8:	40023800 	.word	0x40023800
 80016fc:	40007000 	.word	0x40007000

08001700 <main>:
{
 8001700:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001704:	2400      	movs	r4, #0
{
 8001706:	b09d      	sub	sp, #116	; 0x74
  HAL_Init();
 8001708:	f009 ff36 	bl	800b578 <HAL_Init>
  SystemClock_Config();
 800170c:	f7ff ffac 	bl	8001668 <SystemClock_Config>
  gyro_disable();
 8001710:	f7ff ff40 	bl	8001594 <gyro_disable>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001714:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8001718:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  __HAL_RCC_GPIOE_CLK_ENABLE();
 800171c:	4bc3      	ldr	r3, [pc, #780]	; (8001a2c <main+0x32c>)
 800171e:	9400      	str	r4, [sp, #0]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001720:	9413      	str	r4, [sp, #76]	; 0x4c
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001722:	6b19      	ldr	r1, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8001724:	48c2      	ldr	r0, [pc, #776]	; (8001a30 <main+0x330>)
  hi2c3.Instance = I2C3;
 8001726:	f8df a33c 	ldr.w	sl, [pc, #828]	; 8001a64 <main+0x364>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 800172a:	f041 0110 	orr.w	r1, r1, #16
 800172e:	6319      	str	r1, [r3, #48]	; 0x30
 8001730:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001732:	f001 0110 	and.w	r1, r1, #16
 8001736:	9100      	str	r1, [sp, #0]
 8001738:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 800173a:	9401      	str	r4, [sp, #4]
 800173c:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800173e:	f041 0120 	orr.w	r1, r1, #32
 8001742:	6319      	str	r1, [r3, #48]	; 0x30
 8001744:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001746:	f001 0120 	and.w	r1, r1, #32
 800174a:	9101      	str	r1, [sp, #4]
 800174c:	9901      	ldr	r1, [sp, #4]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 800174e:	9402      	str	r4, [sp, #8]
 8001750:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001752:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 8001756:	6319      	str	r1, [r3, #48]	; 0x30
 8001758:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800175a:	f001 0180 	and.w	r1, r1, #128	; 0x80
 800175e:	9102      	str	r1, [sp, #8]
 8001760:	9902      	ldr	r1, [sp, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001762:	9403      	str	r4, [sp, #12]
 8001764:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001766:	f041 0104 	orr.w	r1, r1, #4
 800176a:	6319      	str	r1, [r3, #48]	; 0x30
 800176c:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800176e:	f001 0104 	and.w	r1, r1, #4
 8001772:	9103      	str	r1, [sp, #12]
 8001774:	9903      	ldr	r1, [sp, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001776:	9404      	str	r4, [sp, #16]
 8001778:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800177a:	f041 0101 	orr.w	r1, r1, #1
 800177e:	6319      	str	r1, [r3, #48]	; 0x30
 8001780:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001782:	f001 0101 	and.w	r1, r1, #1
 8001786:	9104      	str	r1, [sp, #16]
 8001788:	9904      	ldr	r1, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 800178a:	9405      	str	r4, [sp, #20]
 800178c:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800178e:	f041 0102 	orr.w	r1, r1, #2
 8001792:	6319      	str	r1, [r3, #48]	; 0x30
 8001794:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001796:	f001 0102 	and.w	r1, r1, #2
 800179a:	9105      	str	r1, [sp, #20]
 800179c:	9905      	ldr	r1, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 800179e:	9406      	str	r4, [sp, #24]
 80017a0:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80017a2:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 80017a6:	6319      	str	r1, [r3, #48]	; 0x30
 80017a8:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80017aa:	f001 0140 	and.w	r1, r1, #64	; 0x40
 80017ae:	9106      	str	r1, [sp, #24]
 80017b0:	9906      	ldr	r1, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80017b2:	9407      	str	r4, [sp, #28]
 80017b4:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80017b6:	f041 0108 	orr.w	r1, r1, #8
 80017ba:	6319      	str	r1, [r3, #48]	; 0x30
 80017bc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80017be:	f003 0308 	and.w	r3, r3, #8
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 80017c2:	4622      	mov	r2, r4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80017c4:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 80017c6:	2114      	movs	r1, #20
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80017c8:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 80017ca:	f00a fad7 	bl	800bd7c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(POWER_ON_DEVICE_GPIO_Port, POWER_ON_DEVICE_Pin, GPIO_PIN_SET);
 80017ce:	4898      	ldr	r0, [pc, #608]	; (8001a30 <main+0x330>)
 80017d0:	2120      	movs	r1, #32
 80017d2:	2201      	movs	r2, #1
 80017d4:	f00a fad2 	bl	800bd7c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2|DEBUG_GPIO_Pin, GPIO_PIN_RESET);
 80017d8:	4896      	ldr	r0, [pc, #600]	; (8001a34 <main+0x334>)
 80017da:	4622      	mov	r2, r4
 80017dc:	2114      	movs	r1, #20
 80017de:	f00a facd 	bl	800bd7c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_12, GPIO_PIN_RESET);
 80017e2:	4895      	ldr	r0, [pc, #596]	; (8001a38 <main+0x338>)
 80017e4:	4622      	mov	r2, r4
 80017e6:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 80017ea:	f00a fac7 	bl	800bd7c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 80017ee:	4893      	ldr	r0, [pc, #588]	; (8001a3c <main+0x33c>)
 80017f0:	4622      	mov	r2, r4
 80017f2:	f44f 5140 	mov.w	r1, #12288	; 0x3000
 80017f6:	f00a fac1 	bl	800bd7c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOG, GPIO_PIN_2, GPIO_PIN_RESET);
 80017fa:	4891      	ldr	r0, [pc, #580]	; (8001a40 <main+0x340>)
 80017fc:	4622      	mov	r2, r4
 80017fe:	2104      	movs	r1, #4
 8001800:	f00a fabc 	bl	800bd7c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(DEVICE_ON_GPIO_Port, DEVICE_ON_Pin, GPIO_PIN_SET);
 8001804:	2201      	movs	r2, #1
 8001806:	488e      	ldr	r0, [pc, #568]	; (8001a40 <main+0x340>)
 8001808:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800180c:	f00a fab6 	bl	800bd7c <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001810:	f04f 0801 	mov.w	r8, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001814:	f04f 0b03 	mov.w	fp, #3
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin|FRAME_RATE_Pin;
 8001818:	2314      	movs	r3, #20
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800181a:	4885      	ldr	r0, [pc, #532]	; (8001a30 <main+0x330>)
 800181c:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pin = DEVICE_ON_OFF_TRIGGER_Pin;
 800181e:	2608      	movs	r6, #8
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001820:	e9cd 380f 	strd	r3, r8, [sp, #60]	; 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001824:	e9cd 4b11 	strd	r4, fp, [sp, #68]	; 0x44
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001828:	f00a f964 	bl	800baf4 <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 800182c:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8001830:	487f      	ldr	r0, [pc, #508]	; (8001a30 <main+0x330>)
  GPIO_InitStruct.Pin = DEVICE_ON_OFF_TRIGGER_Pin;
 8001832:	960f      	str	r6, [sp, #60]	; 0x3c
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8001834:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8001836:	9310      	str	r3, [sp, #64]	; 0x40
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001838:	9411      	str	r4, [sp, #68]	; 0x44
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 800183a:	f00a f95b 	bl	800baf4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = POWER_ON_DEVICE_Pin;
 800183e:	2320      	movs	r3, #32
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 8001840:	487b      	ldr	r0, [pc, #492]	; (8001a30 <main+0x330>)
  GPIO_InitStruct.Pin = POWER_ON_DEVICE_Pin;
 8001842:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 8001844:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001846:	2502      	movs	r5, #2
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 8001848:	2704      	movs	r7, #4
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800184a:	e9cd 8410 	strd	r8, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800184e:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 8001850:	f00a f950 	bl	800baf4 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001854:	4877      	ldr	r0, [pc, #476]	; (8001a34 <main+0x334>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001856:	9512      	str	r5, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001858:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pin = DEBUG_GPIO_Pin;
 800185a:	f04f 0910 	mov.w	r9, #16
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800185e:	e9cd 8410 	strd	r8, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 8001862:	970f      	str	r7, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001864:	f00a f946 	bl	800baf4 <HAL_GPIO_Init>
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 8001868:	4872      	ldr	r0, [pc, #456]	; (8001a34 <main+0x334>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800186a:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 800186c:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800186e:	e9cd 8410 	strd	r8, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Pin = DEBUG_GPIO_Pin;
 8001872:	f8cd 903c 	str.w	r9, [sp, #60]	; 0x3c
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 8001876:	f00a f93d 	bl	800baf4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12;
 800187a:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800187e:	486e      	ldr	r0, [pc, #440]	; (8001a38 <main+0x338>)
  GPIO_InitStruct.Pin = GPIO_PIN_12;
 8001880:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001882:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001884:	e9cd 8410 	strd	r8, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001888:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800188a:	f00a f933 	bl	800baf4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 800188e:	f44f 5340 	mov.w	r3, #12288	; 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001892:	486a      	ldr	r0, [pc, #424]	; (8001a3c <main+0x33c>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001894:	9512      	str	r5, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001896:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001898:	e9cd 8410 	strd	r8, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 800189c:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800189e:	f00a f929 	bl	800baf4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_2|DEVICE_ON_Pin;
 80018a2:	f242 0304 	movw	r3, #8196	; 0x2004
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80018a6:	4866      	ldr	r0, [pc, #408]	; (8001a40 <main+0x340>)
  GPIO_InitStruct.Pin = GPIO_PIN_2|DEVICE_ON_Pin;
 80018a8:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80018aa:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80018ac:	e9cd 8410 	strd	r8, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80018b0:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80018b2:	f00a f91f 	bl	800baf4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 80018b6:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80018ba:	4862      	ldr	r0, [pc, #392]	; (8001a44 <main+0x344>)
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 80018bc:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80018be:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Alternate = GPIO_AF15_EVENTOUT;
 80018c0:	230f      	movs	r3, #15
 80018c2:	9313      	str	r3, [sp, #76]	; 0x4c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80018c4:	e9cd 5410 	strd	r5, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80018c8:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80018ca:	f00a f913 	bl	800baf4 <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(EXTI3_IRQn, 5, 0);
 80018ce:	2105      	movs	r1, #5
 80018d0:	4622      	mov	r2, r4
 80018d2:	2009      	movs	r0, #9
 80018d4:	f009 fea0 	bl	800b618 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI3_IRQn);
 80018d8:	2009      	movs	r0, #9
 80018da:	f009 fedb 	bl	800b694 <HAL_NVIC_EnableIRQ>
  hcrc.Instance = CRC;
 80018de:	485a      	ldr	r0, [pc, #360]	; (8001a48 <main+0x348>)
 80018e0:	4a5a      	ldr	r2, [pc, #360]	; (8001a4c <main+0x34c>)
 80018e2:	6002      	str	r2, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 80018e4:	f009 fee4 	bl	800b6b0 <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 80018e8:	4959      	ldr	r1, [pc, #356]	; (8001a50 <main+0x350>)
 80018ea:	4a5a      	ldr	r2, [pc, #360]	; (8001a54 <main+0x354>)
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 80018ec:	4650      	mov	r0, sl
  hi2c3.Init.ClockSpeed = 100000;
 80018ee:	e9ca 1200 	strd	r1, r2, [sl]
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 80018f2:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 80018f6:	f8ca 2010 	str.w	r2, [sl, #16]
  hi2c3.Init.OwnAddress1 = 0;
 80018fa:	e9ca 4402 	strd	r4, r4, [sl, #8]
  hi2c3.Init.OwnAddress2 = 0;
 80018fe:	e9ca 4405 	strd	r4, r4, [sl, #20]
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8001902:	e9ca 4407 	strd	r4, r4, [sl, #28]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001906:	f00a fc9f 	bl	800c248 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 800190a:	4649      	mov	r1, r9
 800190c:	4650      	mov	r0, sl
 800190e:	f00b fe67 	bl	800d5e0 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8001912:	4621      	mov	r1, r4
 8001914:	4650      	mov	r0, sl
 8001916:	f00b fe83 	bl	800d620 <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Init.Mode = SPI_MODE_MASTER;
 800191a:	f8df c14c 	ldr.w	ip, [pc, #332]	; 8001a68 <main+0x368>
  hspi5.Instance = SPI5;
 800191e:	484e      	ldr	r0, [pc, #312]	; (8001a58 <main+0x358>)
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001920:	f8df a148 	ldr.w	sl, [pc, #328]	; 8001a6c <main+0x36c>
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8001924:	6284      	str	r4, [r0, #40]	; 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001926:	f44f 7282 	mov.w	r2, #260	; 0x104
 800192a:	e9c0 c200 	strd	ip, r2, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 800192e:	f44f 7e00 	mov.w	lr, #512	; 0x200
 8001932:	2218      	movs	r2, #24
 8001934:	e9c0 e206 	strd	lr, r2, [r0, #24]
  hspi5.Init.CRCPolynomial = 10;
 8001938:	220a      	movs	r2, #10
 800193a:	62c2      	str	r2, [r0, #44]	; 0x2c
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 800193c:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 8001940:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 8001944:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8001948:	f00c fd5c 	bl	800e404 <HAL_SPI_Init>
  SdramTiming.ExitSelfRefreshDelay = 7;
 800194c:	2207      	movs	r2, #7
 800194e:	9210      	str	r2, [sp, #64]	; 0x40
  SdramTiming.RowCycleDelay = 7;
 8001950:	9212      	str	r2, [sp, #72]	; 0x48
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001952:	4a42      	ldr	r2, [pc, #264]	; (8001a5c <main+0x35c>)
 8001954:	f8ca 2000 	str.w	r2, [sl]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 8001958:	2040      	movs	r0, #64	; 0x40
 800195a:	f44f 72c0 	mov.w	r2, #384	; 0x180
 800195e:	e9ca 0205 	strd	r0, r2, [sl, #20]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 8001962:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8001966:	f8ca 2020 	str.w	r2, [sl, #32]
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 800196a:	a90f      	add	r1, sp, #60	; 0x3c
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 800196c:	f44f 5200 	mov.w	r2, #8192	; 0x2000
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001970:	4650      	mov	r0, sl
  hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
 8001972:	e9ca 8401 	strd	r8, r4, [sl, #4]
  hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 8001976:	e9ca 7903 	strd	r7, r9, [sl, #12]
  SdramTiming.RPDelay = 2;
 800197a:	e9cd b513 	strd	fp, r5, [sp, #76]	; 0x4c
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 800197e:	f8ca 2028 	str.w	r2, [sl, #40]	; 0x28
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8001982:	f8ca 401c 	str.w	r4, [sl, #28]
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 8001986:	f8ca 4024 	str.w	r4, [sl, #36]	; 0x24
  SdramTiming.LoadToActiveDelay = 2;
 800198a:	950f      	str	r5, [sp, #60]	; 0x3c
  SdramTiming.SelfRefreshTime = 4;
 800198c:	9711      	str	r7, [sp, #68]	; 0x44
  SdramTiming.RCDDelay = 2;
 800198e:	9515      	str	r5, [sp, #84]	; 0x54
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001990:	f00c fc46 	bl	800e220 <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001994:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001998:	a90b      	add	r1, sp, #44	; 0x2c
 800199a:	4650      	mov	r0, sl
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 800199c:	e9cd 860b 	strd	r8, r6, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 80019a0:	e9cd 840d 	strd	r8, r4, [sp, #52]	; 0x34
 __IO uint32_t tmpmrd =0;
 80019a4:	9408      	str	r4, [sp, #32]
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80019a6:	f00c fc5d 	bl	800e264 <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 80019aa:	4640      	mov	r0, r8
 80019ac:	f009 fe10 	bl	800b5d0 <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80019b0:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80019b4:	a90b      	add	r1, sp, #44	; 0x2c
 80019b6:	4650      	mov	r0, sl
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80019b8:	e9cd 560b 	strd	r5, r6, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 80019bc:	e9cd 840d 	strd	r8, r4, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80019c0:	f00c fc50 	bl	800e264 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80019c4:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80019c8:	a90b      	add	r1, sp, #44	; 0x2c
 80019ca:	4650      	mov	r0, sl
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80019cc:	e9cd b60b 	strd	fp, r6, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 80019d0:	e9cd 740d 	strd	r7, r4, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80019d4:	f00c fc46 	bl	800e264 <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 80019d8:	f44f 720c 	mov.w	r2, #560	; 0x230
 80019dc:	9208      	str	r2, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 80019de:	9908      	ldr	r1, [sp, #32]
 80019e0:	910e      	str	r1, [sp, #56]	; 0x38
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80019e2:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80019e6:	a90b      	add	r1, sp, #44	; 0x2c
 80019e8:	4650      	mov	r0, sl
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80019ea:	e9cd 760b 	strd	r7, r6, [sp, #44]	; 0x2c
  Command->AutoRefreshNumber       = 1;
 80019ee:	f8cd 8034 	str.w	r8, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80019f2:	f00c fc37 	bl	800e264 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 80019f6:	4650      	mov	r0, sl
 80019f8:	f240 516a 	movw	r1, #1386	; 0x56a
 80019fc:	f00c fc50 	bl	800e2a0 <HAL_SDRAM_ProgramRefreshRate>
  hltdc.Instance = LTDC;
 8001a00:	f8df a06c 	ldr.w	sl, [pc, #108]	; 8001a70 <main+0x370>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8001a04:	2234      	movs	r2, #52	; 0x34
 8001a06:	4621      	mov	r1, r4
 8001a08:	a80f      	add	r0, sp, #60	; 0x3c
 8001a0a:	f02c f9a6 	bl	802dd5a <memset>
  hltdc.Instance = LTDC;
 8001a0e:	4a14      	ldr	r2, [pc, #80]	; (8001a60 <main+0x360>)
 8001a10:	f8ca 2000 	str.w	r2, [sl]
  hltdc.Init.HorizontalSync = 9;
 8001a14:	2209      	movs	r2, #9
 8001a16:	f8ca 2014 	str.w	r2, [sl, #20]
  hltdc.Init.AccumulatedHBP = 29;
 8001a1a:	221d      	movs	r2, #29
 8001a1c:	f8ca 201c 	str.w	r2, [sl, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 8001a20:	f240 130d 	movw	r3, #269	; 0x10d
 8001a24:	f240 1243 	movw	r2, #323	; 0x143
 8001a28:	e024      	b.n	8001a74 <main+0x374>
 8001a2a:	bf00      	nop
 8001a2c:	40023800 	.word	0x40023800
 8001a30:	40021000 	.word	0x40021000
 8001a34:	40020800 	.word	0x40020800
 8001a38:	40020400 	.word	0x40020400
 8001a3c:	40020c00 	.word	0x40020c00
 8001a40:	40021800 	.word	0x40021800
 8001a44:	40020000 	.word	0x40020000
 8001a48:	200001e4 	.word	0x200001e4
 8001a4c:	40023000 	.word	0x40023000
 8001a50:	40005c00 	.word	0x40005c00
 8001a54:	000186a0 	.word	0x000186a0
 8001a58:	2000031c 	.word	0x2000031c
 8001a5c:	a0000140 	.word	0xa0000140
 8001a60:	40016800 	.word	0x40016800
 8001a64:	200001ec 	.word	0x200001ec
 8001a68:	40015000 	.word	0x40015000
 8001a6c:	200002e8 	.word	0x200002e8
 8001a70:	20000240 	.word	0x20000240
 8001a74:	e9ca 3209 	strd	r3, r2, [sl, #36]	; 0x24
  hltdc.Init.TotalHeigh = 327;
 8001a78:	f240 1117 	movw	r1, #279	; 0x117
 8001a7c:	f240 1247 	movw	r2, #327	; 0x147
  hltdc.Init.Backcolor.Blue = 0;
 8001a80:	f8aa 4034 	strh.w	r4, [sl, #52]	; 0x34
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001a84:	4650      	mov	r0, sl
  hltdc.Init.TotalHeigh = 327;
 8001a86:	e9ca 120b 	strd	r1, r2, [sl, #44]	; 0x2c
  hltdc.Init.VerticalSync = 1;
 8001a8a:	f8ca 8018 	str.w	r8, [sl, #24]
  hltdc.Init.AccumulatedVBP = 3;
 8001a8e:	f8ca b020 	str.w	fp, [sl, #32]
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 8001a92:	e9ca 4401 	strd	r4, r4, [sl, #4]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 8001a96:	e9ca 4403 	strd	r4, r4, [sl, #12]
  hltdc.Init.Backcolor.Red = 0;
 8001a9a:	f88a 4036 	strb.w	r4, [sl, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001a9e:	f00b fde3 	bl	800d668 <HAL_LTDC_Init>
  pLayerCfg.WindowX1 = 240;
 8001aa2:	23f0      	movs	r3, #240	; 0xf0
 8001aa4:	9310      	str	r3, [sp, #64]	; 0x40
  pLayerCfg.ImageWidth = 240;
 8001aa6:	9319      	str	r3, [sp, #100]	; 0x64
  pLayerCfg.WindowY1 = 320;
 8001aa8:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8001aac:	9312      	str	r3, [sp, #72]	; 0x48
  pLayerCfg.ImageHeight = 320;
 8001aae:	931a      	str	r3, [sp, #104]	; 0x68
  pLayerCfg.Alpha = 255;
 8001ab0:	23ff      	movs	r3, #255	; 0xff
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8001ab2:	f44f 6e80 	mov.w	lr, #1024	; 0x400
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001ab6:	4622      	mov	r2, r4
 8001ab8:	a90f      	add	r1, sp, #60	; 0x3c
 8001aba:	4650      	mov	r0, sl
  pLayerCfg.Alpha = 255;
 8001abc:	9314      	str	r3, [sp, #80]	; 0x50
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8001abe:	2305      	movs	r3, #5
 8001ac0:	e9cd e316 	strd	lr, r3, [sp, #88]	; 0x58
  LcdDrv = &ili9341_drv;
 8001ac4:	f8df 826c 	ldr.w	r8, [pc, #620]	; 8001d34 <main+0x634>
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8001ac8:	9513      	str	r5, [sp, #76]	; 0x4c
  pLayerCfg.WindowX0 = 0;
 8001aca:	940f      	str	r4, [sp, #60]	; 0x3c
  pLayerCfg.WindowY0 = 0;
 8001acc:	9411      	str	r4, [sp, #68]	; 0x44
  pLayerCfg.Alpha0 = 0;
 8001ace:	9415      	str	r4, [sp, #84]	; 0x54
  pLayerCfg.FBStartAdress = 0;
 8001ad0:	9418      	str	r4, [sp, #96]	; 0x60
  pLayerCfg.Backcolor.Blue = 0;
 8001ad2:	f8ad 406c 	strh.w	r4, [sp, #108]	; 0x6c
  pLayerCfg.Backcolor.Red = 0;
 8001ad6:	f88d 406e 	strb.w	r4, [sp, #110]	; 0x6e
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001ada:	f00b fe9b 	bl	800d814 <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 8001ade:	4b82      	ldr	r3, [pc, #520]	; (8001ce8 <main+0x5e8>)
 8001ae0:	f8c8 3000 	str.w	r3, [r8]
  LcdDrv->Init();
 8001ae4:	681b      	ldr	r3, [r3, #0]
  htim2.Instance = TIM2;
 8001ae6:	f8df a250 	ldr.w	sl, [pc, #592]	; 8001d38 <main+0x638>
  LcdDrv->Init();
 8001aea:	4798      	blx	r3
  LcdDrv->DisplayOff();
 8001aec:	f8d8 3000 	ldr.w	r3, [r8]
  htim3.Instance = TIM3;
 8001af0:	f8df 8248 	ldr.w	r8, [pc, #584]	; 8001d3c <main+0x63c>
  LcdDrv->DisplayOff();
 8001af4:	68db      	ldr	r3, [r3, #12]
 8001af6:	4798      	blx	r3
  htim3.Instance = TIM3;
 8001af8:	4b7c      	ldr	r3, [pc, #496]	; (8001cec <main+0x5ec>)
 8001afa:	f8c8 3000 	str.w	r3, [r8]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8001afe:	4640      	mov	r0, r8
  htim3.Init.Period = 65535;
 8001b00:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8001b04:	f8c8 300c 	str.w	r3, [r8, #12]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001b08:	e9c8 4401 	strd	r4, r4, [r8, #4]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001b0c:	f8c8 4010 	str.w	r4, [r8, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001b10:	f8c8 4018 	str.w	r4, [r8, #24]
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001b14:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8001b18:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 8001b1c:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8001b20:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001b24:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 8001b28:	9413      	str	r4, [sp, #76]	; 0x4c
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8001b2a:	f00d f85b 	bl	800ebe4 <HAL_TIM_Base_Init>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001b2e:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8001b32:	a90b      	add	r1, sp, #44	; 0x2c
 8001b34:	4640      	mov	r0, r8
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001b36:	930b      	str	r3, [sp, #44]	; 0x2c
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8001b38:	f00d fb7e 	bl	800f238 <HAL_TIM_ConfigClockSource>
  if (HAL_TIM_SlaveConfigSynchro(&htim3, &sSlaveConfig) != HAL_OK)
 8001b3c:	a90f      	add	r1, sp, #60	; 0x3c
 8001b3e:	4640      	mov	r0, r8
  sSlaveConfig.InputTrigger = TIM_TS_ITR0;
 8001b40:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  if (HAL_TIM_SlaveConfigSynchro(&htim3, &sSlaveConfig) != HAL_OK)
 8001b44:	f00d fc28 	bl	800f398 <HAL_TIM_SlaveConfigSynchro>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8001b48:	a909      	add	r1, sp, #36	; 0x24
 8001b4a:	4640      	mov	r0, r8
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001b4c:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8001b50:	f00d fd60 	bl	800f614 <HAL_TIMEx_MasterConfigSynchronization>
  htim2.Init.Period = 100-1;
 8001b54:	2363      	movs	r3, #99	; 0x63
  htim2.Instance = TIM2;
 8001b56:	f04f 4b80 	mov.w	fp, #1073741824	; 0x40000000
  htim2.Init.Prescaler = 168-1;
 8001b5a:	21a7      	movs	r1, #167	; 0xa7
  htim2.Init.Period = 100-1;
 8001b5c:	f8ca 300c 	str.w	r3, [sl, #12]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8001b60:	4650      	mov	r0, sl
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8001b62:	2380      	movs	r3, #128	; 0x80
  htim2.Instance = TIM2;
 8001b64:	f8ca b000 	str.w	fp, [sl]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8001b68:	f8ca 3018 	str.w	r3, [sl, #24]
  htim2.Init.Prescaler = 168-1;
 8001b6c:	f8ca 1004 	str.w	r1, [sl, #4]
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001b70:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8001b74:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001b78:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001b7c:	f8ca 4008 	str.w	r4, [sl, #8]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001b80:	f8ca 4010 	str.w	r4, [sl, #16]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8001b84:	f00d f82e 	bl	800ebe4 <HAL_TIM_Base_Init>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001b88:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8001b8c:	a90f      	add	r1, sp, #60	; 0x3c
 8001b8e:	4650      	mov	r0, sl
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001b90:	930f      	str	r3, [sp, #60]	; 0x3c
  TIM2->CCR1 = 50;
 8001b92:	f04f 0832 	mov.w	r8, #50	; 0x32
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8001b96:	f00d fb4f 	bl	800f238 <HAL_TIM_ConfigClockSource>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8001b9a:	a90b      	add	r1, sp, #44	; 0x2c
 8001b9c:	4650      	mov	r0, sl
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001b9e:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8001ba2:	f00d fd37 	bl	800f614 <HAL_TIMEx_MasterConfigSynchronization>
  TIM2->CCR1 = 50;
 8001ba6:	f8cb 8034 	str.w	r8, [fp, #52]	; 0x34
  HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_1);
 8001baa:	4621      	mov	r1, r4
 8001bac:	4650      	mov	r0, sl
 8001bae:	f00d f973 	bl	800ee98 <HAL_TIM_PWM_Start>
  HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_2);
 8001bb2:	4639      	mov	r1, r7
  TIM2->CCR2 = 50;
 8001bb4:	f8cb 8038 	str.w	r8, [fp, #56]	; 0x38
  HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_2);
 8001bb8:	4650      	mov	r0, sl
 8001bba:	f00d f96d 	bl	800ee98 <HAL_TIM_PWM_Start>
  htim14.Instance = TIM14;
 8001bbe:	4f4c      	ldr	r7, [pc, #304]	; (8001cf0 <main+0x5f0>)
  TIM2->CCR3 = 50;
 8001bc0:	f8cb 803c 	str.w	r8, [fp, #60]	; 0x3c
  HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_3);
 8001bc4:	4631      	mov	r1, r6
 8001bc6:	4650      	mov	r0, sl
 8001bc8:	f00d f966 	bl	800ee98 <HAL_TIM_PWM_Start>
  htim14.Init.Prescaler = 210-1;
 8001bcc:	4949      	ldr	r1, [pc, #292]	; (8001cf4 <main+0x5f4>)
  htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001bce:	60bc      	str	r4, [r7, #8]
  htim14.Init.Period = 100-1;
 8001bd0:	2363      	movs	r3, #99	; 0x63
  htim14.Init.Prescaler = 210-1;
 8001bd2:	22d1      	movs	r2, #209	; 0xd1
  htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001bd4:	e9c7 3403 	strd	r3, r4, [r7, #12]
  if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 8001bd8:	4638      	mov	r0, r7
  htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8001bda:	2380      	movs	r3, #128	; 0x80
 8001bdc:	61bb      	str	r3, [r7, #24]
  htim14.Init.Prescaler = 210-1;
 8001bde:	e9c7 1200 	strd	r1, r2, [r7]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001be2:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8001be6:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
 8001bea:	e9cd 4413 	strd	r4, r4, [sp, #76]	; 0x4c
 8001bee:	9415      	str	r4, [sp, #84]	; 0x54
  if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 8001bf0:	f00c fff8 	bl	800ebe4 <HAL_TIM_Base_Init>
  if (HAL_TIM_PWM_Init(&htim14) != HAL_OK)
 8001bf4:	4638      	mov	r0, r7
 8001bf6:	f00d f8c1 	bl	800ed7c <HAL_TIM_PWM_Init>
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001bfa:	f04f 0b60 	mov.w	fp, #96	; 0x60
  if (HAL_TIM_PWM_ConfigChannel(&htim14, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001bfe:	4622      	mov	r2, r4
 8001c00:	a90f      	add	r1, sp, #60	; 0x3c
 8001c02:	4638      	mov	r0, r7
  htim9.Instance = TIM9;
 8001c04:	4e3c      	ldr	r6, [pc, #240]	; (8001cf8 <main+0x5f8>)
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001c06:	9413      	str	r4, [sp, #76]	; 0x4c
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001c08:	e9cd 4410 	strd	r4, r4, [sp, #64]	; 0x40
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001c0c:	f8cd b03c 	str.w	fp, [sp, #60]	; 0x3c
  if (HAL_TIM_PWM_ConfigChannel(&htim14, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001c10:	f00d fa02 	bl	800f018 <HAL_TIM_PWM_ConfigChannel>
  HAL_TIM_MspPostInit(&htim14);
 8001c14:	4638      	mov	r0, r7
 8001c16:	f000 fcfb 	bl	8002610 <HAL_TIM_MspPostInit>
  htim9.Init.Period = 100-1;
 8001c1a:	2363      	movs	r3, #99	; 0x63
  htim9.Init.Prescaler = 84-1;
 8001c1c:	4f37      	ldr	r7, [pc, #220]	; (8001cfc <main+0x5fc>)
  htim9.Init.Period = 100-1;
 8001c1e:	60f3      	str	r3, [r6, #12]
  htim9.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8001c20:	2380      	movs	r3, #128	; 0x80
 8001c22:	61b3      	str	r3, [r6, #24]
  if (HAL_TIM_Base_Init(&htim9) != HAL_OK)
 8001c24:	4630      	mov	r0, r6
  htim9.Init.Prescaler = 84-1;
 8001c26:	2353      	movs	r3, #83	; 0x53
 8001c28:	e9c6 7300 	strd	r7, r3, [r6]
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001c2c:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8001c30:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001c34:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8001c38:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
 8001c3c:	e9cd 4413 	strd	r4, r4, [sp, #76]	; 0x4c
 8001c40:	9415      	str	r4, [sp, #84]	; 0x54
  htim9.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001c42:	60b4      	str	r4, [r6, #8]
  htim9.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001c44:	6134      	str	r4, [r6, #16]
  if (HAL_TIM_Base_Init(&htim9) != HAL_OK)
 8001c46:	f00c ffcd 	bl	800ebe4 <HAL_TIM_Base_Init>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001c4a:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_TIM_ConfigClockSource(&htim9, &sClockSourceConfig) != HAL_OK)
 8001c4e:	a90b      	add	r1, sp, #44	; 0x2c
 8001c50:	4630      	mov	r0, r6
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001c52:	930b      	str	r3, [sp, #44]	; 0x2c
  if (HAL_TIM_ConfigClockSource(&htim9, &sClockSourceConfig) != HAL_OK)
 8001c54:	f00d faf0 	bl	800f238 <HAL_TIM_ConfigClockSource>
  if (HAL_TIM_PWM_Init(&htim9) != HAL_OK)
 8001c58:	4630      	mov	r0, r6
 8001c5a:	f00d f88f 	bl	800ed7c <HAL_TIM_PWM_Init>
  if (HAL_TIM_PWM_ConfigChannel(&htim9, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001c5e:	4622      	mov	r2, r4
 8001c60:	a90f      	add	r1, sp, #60	; 0x3c
 8001c62:	4630      	mov	r0, r6
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001c64:	e9cd 8410 	strd	r8, r4, [sp, #64]	; 0x40
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001c68:	f8cd b03c 	str.w	fp, [sp, #60]	; 0x3c
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001c6c:	9413      	str	r4, [sp, #76]	; 0x4c
  if (HAL_TIM_PWM_ConfigChannel(&htim9, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001c6e:	f00d f9d3 	bl	800f018 <HAL_TIM_PWM_ConfigChannel>
  HAL_TIM_PWM_Start(&htim9, TIM_CHANNEL_1);
 8001c72:	4621      	mov	r1, r4
  TIM9->CCR1 = 50;
 8001c74:	f8c7 8034 	str.w	r8, [r7, #52]	; 0x34
  HAL_TIM_PWM_Start(&htim9, TIM_CHANNEL_1);
 8001c78:	4630      	mov	r0, r6
 8001c7a:	f00d f90d 	bl	800ee98 <HAL_TIM_PWM_Start>
  HAL_TIM_MspPostInit(&htim9);
 8001c7e:	4630      	mov	r0, r6
 8001c80:	f000 fcc6 	bl	8002610 <HAL_TIM_MspPostInit>
  MX_TouchGFX_Init();
 8001c84:	f000 fe5a 	bl	800293c <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
 8001c88:	f000 fe56 	bl	8002938 <MX_TouchGFX_PreOSInit>
  gyro_disable();
 8001c8c:	f7ff fc82 	bl	8001594 <gyro_disable>
  MEAS_GPIO_analog_init();         // Configure GPIOs in analog mode
 8001c90:	f000 f958 	bl	8001f44 <MEAS_GPIO_analog_init>
  MEAS_timer_init();               // Configure the timer
 8001c94:	f000 f98a 	bl	8001fac <MEAS_timer_init>
  Flash_Read_Data(SECTOR_23_ADDR, Calibration_Data, 12);
 8001c98:	4919      	ldr	r1, [pc, #100]	; (8001d00 <main+0x600>)
 8001c9a:	481a      	ldr	r0, [pc, #104]	; (8001d04 <main+0x604>)
 8001c9c:	220c      	movs	r2, #12
 8001c9e:	f7ff f90d 	bl	8000ebc <Flash_Read_Data>
  osKernelInitialize();
 8001ca2:	f00d fdc9 	bl	800f838 <osKernelInitialize>
  TimeoutQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &TimeoutQueue_attributes);
 8001ca6:	4629      	mov	r1, r5
 8001ca8:	4a17      	ldr	r2, [pc, #92]	; (8001d08 <main+0x608>)
 8001caa:	4648      	mov	r0, r9
 8001cac:	f00d fefe 	bl	800faac <osMessageQueueNew>
 8001cb0:	4b16      	ldr	r3, [pc, #88]	; (8001d0c <main+0x60c>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001cb2:	4a17      	ldr	r2, [pc, #92]	; (8001d10 <main+0x610>)
  TimeoutQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &TimeoutQueue_attributes);
 8001cb4:	6018      	str	r0, [r3, #0]
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001cb6:	4621      	mov	r1, r4
 8001cb8:	4816      	ldr	r0, [pc, #88]	; (8001d14 <main+0x614>)
 8001cba:	f00d fde9 	bl	800f890 <osThreadNew>
 8001cbe:	4b16      	ldr	r3, [pc, #88]	; (8001d18 <main+0x618>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001cc0:	4a16      	ldr	r2, [pc, #88]	; (8001d1c <main+0x61c>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001cc2:	6018      	str	r0, [r3, #0]
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001cc4:	4621      	mov	r1, r4
 8001cc6:	4816      	ldr	r0, [pc, #88]	; (8001d20 <main+0x620>)
 8001cc8:	f00d fde2 	bl	800f890 <osThreadNew>
 8001ccc:	4b15      	ldr	r3, [pc, #84]	; (8001d24 <main+0x624>)
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 8001cce:	4a16      	ldr	r2, [pc, #88]	; (8001d28 <main+0x628>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001cd0:	4605      	mov	r5, r0
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 8001cd2:	4621      	mov	r1, r4
 8001cd4:	4815      	ldr	r0, [pc, #84]	; (8001d2c <main+0x62c>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001cd6:	601d      	str	r5, [r3, #0]
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 8001cd8:	f00d fdda 	bl	800f890 <osThreadNew>
 8001cdc:	4b14      	ldr	r3, [pc, #80]	; (8001d30 <main+0x630>)
 8001cde:	6018      	str	r0, [r3, #0]
  osKernelStart();
 8001ce0:	f00d fdbc 	bl	800f85c <osKernelStart>
  while (1)
 8001ce4:	e7fe      	b.n	8001ce4 <main+0x5e4>
 8001ce6:	bf00      	nop
 8001ce8:	2000001c 	.word	0x2000001c
 8001cec:	40000400 	.word	0x40000400
 8001cf0:	20000374 	.word	0x20000374
 8001cf4:	40002000 	.word	0x40002000
 8001cf8:	2000044c 	.word	0x2000044c
 8001cfc:	40014000 	.word	0x40014000
 8001d00:	200001a0 	.word	0x200001a0
 8001d04:	081e0000 	.word	0x081e0000
 8001d08:	0802eb24 	.word	0x0802eb24
 8001d0c:	200001d8 	.word	0x200001d8
 8001d10:	0802eb60 	.word	0x0802eb60
 8001d14:	08001509 	.word	0x08001509
 8001d18:	200001e0 	.word	0x200001e0
 8001d1c:	0802eb00 	.word	0x0802eb00
 8001d20:	0800294d 	.word	0x0800294d
 8001d24:	200001d0 	.word	0x200001d0
 8001d28:	0802eb3c 	.word	0x0802eb3c
 8001d2c:	08001515 	.word	0x08001515
 8001d30:	200001dc 	.word	0x200001dc
 8001d34:	200001d4 	.word	0x200001d4
 8001d38:	200003bc 	.word	0x200003bc
 8001d3c:	20000404 	.word	0x20000404

08001d40 <IOE_Init>:
 8001d40:	4770      	bx	lr
 8001d42:	bf00      	nop

08001d44 <IOE_ITConfig>:
 8001d44:	4770      	bx	lr
 8001d46:	bf00      	nop

08001d48 <IOE_Write>:
{
 8001d48:	b510      	push	{r4, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 8001d4a:	4c09      	ldr	r4, [pc, #36]	; (8001d70 <IOE_Write+0x28>)
{
 8001d4c:	b086      	sub	sp, #24
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 8001d4e:	6824      	ldr	r4, [r4, #0]
 8001d50:	9402      	str	r4, [sp, #8]
{
 8001d52:	4614      	mov	r4, r2
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 8001d54:	2301      	movs	r3, #1
 8001d56:	f88d 4017 	strb.w	r4, [sp, #23]
 8001d5a:	f10d 0417 	add.w	r4, sp, #23
 8001d5e:	460a      	mov	r2, r1
 8001d60:	9301      	str	r3, [sp, #4]
 8001d62:	4601      	mov	r1, r0
 8001d64:	9400      	str	r4, [sp, #0]
 8001d66:	4803      	ldr	r0, [pc, #12]	; (8001d74 <IOE_Write+0x2c>)
 8001d68:	f00a fb36 	bl	800c3d8 <HAL_I2C_Mem_Write>
}
 8001d6c:	b006      	add	sp, #24
 8001d6e:	bd10      	pop	{r4, pc}
 8001d70:	20000004 	.word	0x20000004
 8001d74:	200001ec 	.word	0x200001ec

08001d78 <IOE_Read>:
{
 8001d78:	b500      	push	{lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001d7a:	4b0b      	ldr	r3, [pc, #44]	; (8001da8 <IOE_Read+0x30>)
{
 8001d7c:	b087      	sub	sp, #28
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001d7e:	681b      	ldr	r3, [r3, #0]
 8001d80:	9302      	str	r3, [sp, #8]
{
 8001d82:	4684      	mov	ip, r0
 8001d84:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001d86:	2301      	movs	r3, #1
 8001d88:	f10d 0117 	add.w	r1, sp, #23
  uint8_t value = 0;
 8001d8c:	2000      	movs	r0, #0
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001d8e:	e9cd 1300 	strd	r1, r3, [sp]
  uint8_t value = 0;
 8001d92:	f88d 0017 	strb.w	r0, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001d96:	4661      	mov	r1, ip
 8001d98:	4804      	ldr	r0, [pc, #16]	; (8001dac <IOE_Read+0x34>)
 8001d9a:	f00a fc0f 	bl	800c5bc <HAL_I2C_Mem_Read>
}
 8001d9e:	f89d 0017 	ldrb.w	r0, [sp, #23]
 8001da2:	b007      	add	sp, #28
 8001da4:	f85d fb04 	ldr.w	pc, [sp], #4
 8001da8:	20000004 	.word	0x20000004
 8001dac:	200001ec 	.word	0x200001ec

08001db0 <IOE_ReadMultiple>:
{
 8001db0:	b510      	push	{r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 8001db2:	4c09      	ldr	r4, [pc, #36]	; (8001dd8 <IOE_ReadMultiple+0x28>)
{
 8001db4:	b084      	sub	sp, #16
 8001db6:	4684      	mov	ip, r0
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 8001db8:	6820      	ldr	r0, [r4, #0]
 8001dba:	9002      	str	r0, [sp, #8]
 8001dbc:	e9cd 2300 	strd	r2, r3, [sp]
 8001dc0:	4806      	ldr	r0, [pc, #24]	; (8001ddc <IOE_ReadMultiple+0x2c>)
 8001dc2:	460a      	mov	r2, r1
 8001dc4:	2301      	movs	r3, #1
 8001dc6:	4661      	mov	r1, ip
 8001dc8:	f00a fbf8 	bl	800c5bc <HAL_I2C_Mem_Read>
}
 8001dcc:	3800      	subs	r0, #0
 8001dce:	bf18      	it	ne
 8001dd0:	2001      	movne	r0, #1
 8001dd2:	b004      	add	sp, #16
 8001dd4:	bd10      	pop	{r4, pc}
 8001dd6:	bf00      	nop
 8001dd8:	20000004 	.word	0x20000004
 8001ddc:	200001ec 	.word	0x200001ec

08001de0 <IOE_Delay>:
 8001de0:	f009 bbf6 	b.w	800b5d0 <HAL_Delay>

08001de4 <LCD_IO_Init>:
{
 8001de4:	b508      	push	{r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001de6:	4806      	ldr	r0, [pc, #24]	; (8001e00 <LCD_IO_Init+0x1c>)
 8001de8:	2200      	movs	r2, #0
 8001dea:	2104      	movs	r1, #4
 8001dec:	f009 ffc6 	bl	800bd7c <HAL_GPIO_WritePin>
}
 8001df0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001df4:	4802      	ldr	r0, [pc, #8]	; (8001e00 <LCD_IO_Init+0x1c>)
 8001df6:	2201      	movs	r2, #1
 8001df8:	2104      	movs	r1, #4
 8001dfa:	f009 bfbf 	b.w	800bd7c <HAL_GPIO_WritePin>
 8001dfe:	bf00      	nop
 8001e00:	40020800 	.word	0x40020800

08001e04 <LCD_IO_WriteData>:
{
 8001e04:	b530      	push	{r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001e06:	4d10      	ldr	r5, [pc, #64]	; (8001e48 <LCD_IO_WriteData+0x44>)
{
 8001e08:	b083      	sub	sp, #12
 8001e0a:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001e0c:	2201      	movs	r2, #1
 8001e0e:	480f      	ldr	r0, [pc, #60]	; (8001e4c <LCD_IO_WriteData+0x48>)
 8001e10:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001e14:	f009 ffb2 	bl	800bd7c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001e18:	4628      	mov	r0, r5
 8001e1a:	2200      	movs	r2, #0
 8001e1c:	2104      	movs	r1, #4
 8001e1e:	f009 ffad 	bl	800bd7c <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001e22:	4b0b      	ldr	r3, [pc, #44]	; (8001e50 <LCD_IO_WriteData+0x4c>)
 8001e24:	480b      	ldr	r0, [pc, #44]	; (8001e54 <LCD_IO_WriteData+0x50>)
 8001e26:	681b      	ldr	r3, [r3, #0]
 8001e28:	f8ad 4006 	strh.w	r4, [sp, #6]
 8001e2c:	f10d 0106 	add.w	r1, sp, #6
 8001e30:	2201      	movs	r2, #1
 8001e32:	f00c fb49 	bl	800e4c8 <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001e36:	2201      	movs	r2, #1
 8001e38:	2104      	movs	r1, #4
 8001e3a:	4628      	mov	r0, r5
}
 8001e3c:	b003      	add	sp, #12
 8001e3e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001e42:	f009 bf9b 	b.w	800bd7c <HAL_GPIO_WritePin>
 8001e46:	bf00      	nop
 8001e48:	40020800 	.word	0x40020800
 8001e4c:	40020c00 	.word	0x40020c00
 8001e50:	20000008 	.word	0x20000008
 8001e54:	2000031c 	.word	0x2000031c

08001e58 <LCD_IO_WriteReg>:
{
 8001e58:	b530      	push	{r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001e5a:	4d10      	ldr	r5, [pc, #64]	; (8001e9c <LCD_IO_WriteReg+0x44>)
{
 8001e5c:	b083      	sub	sp, #12
 8001e5e:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001e60:	2200      	movs	r2, #0
 8001e62:	480f      	ldr	r0, [pc, #60]	; (8001ea0 <LCD_IO_WriteReg+0x48>)
 8001e64:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001e68:	f009 ff88 	bl	800bd7c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001e6c:	4628      	mov	r0, r5
 8001e6e:	2200      	movs	r2, #0
 8001e70:	2104      	movs	r1, #4
 8001e72:	f009 ff83 	bl	800bd7c <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001e76:	4b0b      	ldr	r3, [pc, #44]	; (8001ea4 <LCD_IO_WriteReg+0x4c>)
 8001e78:	480b      	ldr	r0, [pc, #44]	; (8001ea8 <LCD_IO_WriteReg+0x50>)
 8001e7a:	681b      	ldr	r3, [r3, #0]
  SPI5_Write(Reg);
 8001e7c:	f8ad 4006 	strh.w	r4, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001e80:	f10d 0106 	add.w	r1, sp, #6
 8001e84:	2201      	movs	r2, #1
 8001e86:	f00c fb1f 	bl	800e4c8 <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001e8a:	2201      	movs	r2, #1
 8001e8c:	2104      	movs	r1, #4
 8001e8e:	4628      	mov	r0, r5
}
 8001e90:	b003      	add	sp, #12
 8001e92:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001e96:	f009 bf71 	b.w	800bd7c <HAL_GPIO_WritePin>
 8001e9a:	bf00      	nop
 8001e9c:	40020800 	.word	0x40020800
 8001ea0:	40020c00 	.word	0x40020c00
 8001ea4:	20000008 	.word	0x20000008
 8001ea8:	2000031c 	.word	0x2000031c

08001eac <LCD_IO_ReadData>:
{
 8001eac:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001eb0:	4e19      	ldr	r6, [pc, #100]	; (8001f18 <LCD_IO_ReadData+0x6c>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001eb2:	4f1a      	ldr	r7, [pc, #104]	; (8001f1c <LCD_IO_ReadData+0x70>)
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001eb4:	f8df 9068 	ldr.w	r9, [pc, #104]	; 8001f20 <LCD_IO_ReadData+0x74>
 8001eb8:	f8df 8068 	ldr.w	r8, [pc, #104]	; 8001f24 <LCD_IO_ReadData+0x78>
{
 8001ebc:	b083      	sub	sp, #12
 8001ebe:	460c      	mov	r4, r1
 8001ec0:	4605      	mov	r5, r0
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001ec2:	2200      	movs	r2, #0
 8001ec4:	4630      	mov	r0, r6
 8001ec6:	2104      	movs	r1, #4
 8001ec8:	f009 ff58 	bl	800bd7c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001ecc:	4638      	mov	r0, r7
 8001ece:	2200      	movs	r2, #0
 8001ed0:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001ed4:	f009 ff52 	bl	800bd7c <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001ed8:	f8d9 3000 	ldr.w	r3, [r9]
 8001edc:	f8ad 5004 	strh.w	r5, [sp, #4]
 8001ee0:	a901      	add	r1, sp, #4
 8001ee2:	2201      	movs	r2, #1
 8001ee4:	4640      	mov	r0, r8
 8001ee6:	f00c faef 	bl	800e4c8 <HAL_SPI_Transmit>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 8001eea:	f8d9 3000 	ldr.w	r3, [r9]
 8001eee:	4622      	mov	r2, r4
 8001ef0:	a901      	add	r1, sp, #4
 8001ef2:	4640      	mov	r0, r8
 8001ef4:	f00c fd90 	bl	800ea18 <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001ef8:	4638      	mov	r0, r7
 8001efa:	2201      	movs	r2, #1
 8001efc:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  return readvalue;
 8001f00:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001f02:	f009 ff3b 	bl	800bd7c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001f06:	4630      	mov	r0, r6
 8001f08:	2201      	movs	r2, #1
 8001f0a:	2104      	movs	r1, #4
 8001f0c:	f009 ff36 	bl	800bd7c <HAL_GPIO_WritePin>
}
 8001f10:	4620      	mov	r0, r4
 8001f12:	b003      	add	sp, #12
 8001f14:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001f18:	40020800 	.word	0x40020800
 8001f1c:	40020c00 	.word	0x40020c00
 8001f20:	20000008 	.word	0x20000008
 8001f24:	2000031c 	.word	0x2000031c

08001f28 <LCD_Delay>:
  HAL_Delay(Delay);
 8001f28:	f009 bb52 	b.w	800b5d0 <HAL_Delay>

08001f2c <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 8001f2c:	4b03      	ldr	r3, [pc, #12]	; (8001f3c <HAL_TIM_PeriodElapsedCallback+0x10>)
 8001f2e:	6802      	ldr	r2, [r0, #0]
 8001f30:	429a      	cmp	r2, r3
 8001f32:	d000      	beq.n	8001f36 <HAL_TIM_PeriodElapsedCallback+0xa>
    HAL_IncTick();
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8001f34:	4770      	bx	lr
    HAL_IncTick();
 8001f36:	f009 bb39 	b.w	800b5ac <HAL_IncTick>
 8001f3a:	bf00      	nop
 8001f3c:	40001000 	.word	0x40001000

08001f40 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8001f40:	4770      	bx	lr
 8001f42:	bf00      	nop

08001f44 <MEAS_GPIO_analog_init>:
 * - ADC123_IN13 = GPIO PC3 (Pad right)
 * - ADC3_IN6 = GPIO PF8 (Hall sensor Left)
 * - ADC123_IN11 = GPIO PC1 (Hall sensor Right)
 *****************************************************************************/
void MEAS_GPIO_analog_init(void)
{
 8001f44:	b410      	push	{r4}
 8001f46:	b083      	sub	sp, #12
    __HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 8001f48:	4b15      	ldr	r3, [pc, #84]	; (8001fa0 <MEAS_GPIO_analog_init+0x5c>)
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 8001f4a:	4916      	ldr	r1, [pc, #88]	; (8001fa4 <MEAS_GPIO_analog_init+0x60>)
    __HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 8001f4c:	2400      	movs	r4, #0
 8001f4e:	9400      	str	r4, [sp, #0]
 8001f50:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001f52:	f042 0220 	orr.w	r2, r2, #32
 8001f56:	631a      	str	r2, [r3, #48]	; 0x30
 8001f58:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001f5a:	f002 0220 	and.w	r2, r2, #32
 8001f5e:	9200      	str	r2, [sp, #0]
 8001f60:	9a00      	ldr	r2, [sp, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 8001f62:	6808      	ldr	r0, [r1, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER8_Pos);  // Analog PF8 = ADC3_IN6
    __HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER3_Pos);  // Analog PC3 = ADC3_IN13
 8001f64:	4a10      	ldr	r2, [pc, #64]	; (8001fa8 <MEAS_GPIO_analog_init+0x64>)
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 8001f66:	f440 5040 	orr.w	r0, r0, #12288	; 0x3000
 8001f6a:	6008      	str	r0, [r1, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER8_Pos);  // Analog PF8 = ADC3_IN6
 8001f6c:	6808      	ldr	r0, [r1, #0]
 8001f6e:	f440 3040 	orr.w	r0, r0, #196608	; 0x30000
 8001f72:	6008      	str	r0, [r1, #0]
    __HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 8001f74:	9401      	str	r4, [sp, #4]
 8001f76:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001f78:	f041 0104 	orr.w	r1, r1, #4
 8001f7c:	6319      	str	r1, [r3, #48]	; 0x30
 8001f7e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001f80:	f003 0304 	and.w	r3, r3, #4
 8001f84:	9301      	str	r3, [sp, #4]
 8001f86:	9b01      	ldr	r3, [sp, #4]
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER3_Pos);  // Analog PC3 = ADC3_IN13
 8001f88:	6813      	ldr	r3, [r2, #0]
 8001f8a:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 8001f8e:	6013      	str	r3, [r2, #0]
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER1_Pos);  // Analog PC1 = ADC3_IN11
 8001f90:	6813      	ldr	r3, [r2, #0]
 8001f92:	f043 030c 	orr.w	r3, r3, #12
 8001f96:	6013      	str	r3, [r2, #0]
}
 8001f98:	b003      	add	sp, #12
 8001f9a:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001f9e:	4770      	bx	lr
 8001fa0:	40023800 	.word	0x40023800
 8001fa4:	40021400 	.word	0x40021400
 8001fa8:	40020800 	.word	0x40020800

08001fac <MEAS_timer_init>:
 * @brief Configure the timer to trigger the ADC(s)
 *
 * @note For debugging purposes the timer interrupt might be useful.
 *****************************************************************************/
void MEAS_timer_init(void)
{
 8001fac:	b410      	push	{r4}
 8001fae:	b083      	sub	sp, #12
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8001fb0:	4a0e      	ldr	r2, [pc, #56]	; (8001fec <MEAS_timer_init+0x40>)
 8001fb2:	2000      	movs	r0, #0
 8001fb4:	9001      	str	r0, [sp, #4]
 8001fb6:	6c11      	ldr	r1, [r2, #64]	; 0x40
 8001fb8:	f041 0101 	orr.w	r1, r1, #1
 8001fbc:	6411      	str	r1, [r2, #64]	; 0x40
 8001fbe:	6c12      	ldr	r2, [r2, #64]	; 0x40
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 8001fc0:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8001fc4:	f002 0201 	and.w	r2, r2, #1
 8001fc8:	9201      	str	r2, [sp, #4]
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 8001fca:	f243 3144 	movw	r1, #13124	; 0x3344
    TIM2->ARR = TIM_TOP;          // Auto reload = counter top value
 8001fce:	2209      	movs	r2, #9
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8001fd0:	9c01      	ldr	r4, [sp, #4]
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 8001fd2:	6299      	str	r1, [r3, #40]	; 0x28
    TIM2->ARR = TIM_TOP;          // Auto reload = counter top value
 8001fd4:	62da      	str	r2, [r3, #44]	; 0x2c
    TIM2->CR2 |= TIM_CR2_MMS_1;   // TRGO on update
 8001fd6:	685a      	ldr	r2, [r3, #4]
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001fd8:	4905      	ldr	r1, [pc, #20]	; (8001ff0 <MEAS_timer_init+0x44>)
 8001fda:	f042 0220 	orr.w	r2, r2, #32
 8001fde:	605a      	str	r2, [r3, #4]
 8001fe0:	f881 031c 	strb.w	r0, [r1, #796]	; 0x31c

    // set timer to highest priority
    NVIC_SetPriority(TIM2_IRQn, 0);
}
 8001fe4:	b003      	add	sp, #12
 8001fe6:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001fea:	4770      	bx	lr
 8001fec:	40023800 	.word	0x40023800
 8001ff0:	e000e100 	.word	0xe000e100

08001ff4 <MEAS_ADC3_scan_init>:
 * @n The DMA triggers the transfer complete interrupt when all data is ready.
 * @n The inputs used are ADC3_IN4 = GPIO PF6 (Pad Right), ADC3_IN13 = GPIO PC3
 *(Pad Left), ADC_IN6 = GPIO PF8 (HS-Right), ADC3_IN11 = GPIO PC1 (HS-Left)
 *****************************************************************************/
void MEAS_ADC3_scan_init(void)
{
 8001ff4:	b410      	push	{r4}
 8001ff6:	b083      	sub	sp, #12
    __HAL_RCC_ADC3_CLK_ENABLE();               // Enable Clock for ADC3
 8001ff8:	4a36      	ldr	r2, [pc, #216]	; (80020d4 <MEAS_ADC3_scan_init+0xe0>)
    ADC3->SQR1 |= (3UL << ADC_SQR1_L_Pos);     // Convert 4 inputs (4-1)
 8001ffa:	4b37      	ldr	r3, [pc, #220]	; (80020d8 <MEAS_ADC3_scan_init+0xe4>)
 8001ffc:	4c37      	ldr	r4, [pc, #220]	; (80020dc <MEAS_ADC3_scan_init+0xe8>)
    __HAL_RCC_ADC3_CLK_ENABLE();               // Enable Clock for ADC3
 8001ffe:	2100      	movs	r1, #0
 8002000:	9100      	str	r1, [sp, #0]
 8002002:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8002004:	f440 6080 	orr.w	r0, r0, #1024	; 0x400
 8002008:	6450      	str	r0, [r2, #68]	; 0x44
 800200a:	6c50      	ldr	r0, [r2, #68]	; 0x44
 800200c:	f400 6080 	and.w	r0, r0, #1024	; 0x400
 8002010:	9000      	str	r0, [sp, #0]
 8002012:	9800      	ldr	r0, [sp, #0]
    ADC3->SQR1 |= (3UL << ADC_SQR1_L_Pos);     // Convert 4 inputs (4-1)
 8002014:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 8002016:	f440 1040 	orr.w	r0, r0, #3145728	; 0x300000
 800201a:	62d8      	str	r0, [r3, #44]	; 0x2c
    ADC3->SQR3 |= (4UL << ADC_SQR3_SQ1_Pos);   // Input 4 = first conversion
 800201c:	6b58      	ldr	r0, [r3, #52]	; 0x34
 800201e:	f040 0004 	orr.w	r0, r0, #4
 8002022:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->SQR3 |= (13UL << ADC_SQR3_SQ2_Pos);  // Input 13 = second conversion
 8002024:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8002026:	f440 70d0 	orr.w	r0, r0, #416	; 0x1a0
 800202a:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->SQR3 |= (6UL << ADC_SQR3_SQ3_Pos);   // Input 6 = third conversion
 800202c:	6b58      	ldr	r0, [r3, #52]	; 0x34
 800202e:	f440 50c0 	orr.w	r0, r0, #6144	; 0x1800
 8002032:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->SQR3 |= (11UL << ADC_SQR3_SQ4_Pos);  // Input 11 = fourth conversion
 8002034:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8002036:	f440 20b0 	orr.w	r0, r0, #360448	; 0x58000
 800203a:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->CR1 |= ADC_CR1_SCAN;                 // Enable scan mode
 800203c:	6858      	ldr	r0, [r3, #4]
 800203e:	f440 7080 	orr.w	r0, r0, #256	; 0x100
 8002042:	6058      	str	r0, [r3, #4]
    ADC3->CR2 |= (1UL << ADC_CR2_EXTEN_Pos);   // En. ext. trigger on rising e.
 8002044:	6898      	ldr	r0, [r3, #8]
 8002046:	f040 5080 	orr.w	r0, r0, #268435456	; 0x10000000
 800204a:	6098      	str	r0, [r3, #8]
    ADC3->CR2 |= (6UL << ADC_CR2_EXTSEL_Pos);  // Timer 2 TRGO event
 800204c:	6898      	ldr	r0, [r3, #8]
 800204e:	f040 60c0 	orr.w	r0, r0, #100663296	; 0x6000000
 8002052:	6098      	str	r0, [r3, #8]
    ADC3->CR2 |= ADC_CR2_DMA;                  // Enable DMA mode
 8002054:	6898      	ldr	r0, [r3, #8]
 8002056:	f440 7080 	orr.w	r0, r0, #256	; 0x100
 800205a:	6098      	str	r0, [r3, #8]
    __HAL_RCC_DMA2_CLK_ENABLE();               // Enable Clock for DMA2
 800205c:	9101      	str	r1, [sp, #4]
 800205e:	6b10      	ldr	r0, [r2, #48]	; 0x30
 8002060:	f440 0080 	orr.w	r0, r0, #4194304	; 0x400000
 8002064:	6310      	str	r0, [r2, #48]	; 0x30
 8002066:	6b12      	ldr	r2, [r2, #48]	; 0x30
 8002068:	f402 0280 	and.w	r2, r2, #4194304	; 0x400000
 800206c:	9201      	str	r2, [sp, #4]
    // set DMA to highest priority
    NVIC_SetPriority(DMA2_Stream1_IRQn, 0);
    DMA2_Stream1->CR &= ~DMA_SxCR_EN;          // Disable the DMA stream 1
 800206e:	f503 33a1 	add.w	r3, r3, #82432	; 0x14200
    __HAL_RCC_DMA2_CLK_ENABLE();               // Enable Clock for DMA2
 8002072:	9a01      	ldr	r2, [sp, #4]
 8002074:	f884 1339 	strb.w	r1, [r4, #825]	; 0x339
    DMA2_Stream1->CR &= ~DMA_SxCR_EN;          // Disable the DMA stream 1
 8002078:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800207a:	f022 0201 	bic.w	r2, r2, #1
 800207e:	629a      	str	r2, [r3, #40]	; 0x28
    while (DMA2_Stream1->CR & DMA_SxCR_EN)
 8002080:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8002082:	07d2      	lsls	r2, r2, #31
 8002084:	d4fc      	bmi.n	8002080 <MEAS_ADC3_scan_init+0x8c>
    {

    }  // Wait for DMA to finish
    DMA2->LIFCR |= DMA_LIFCR_CTCIF1;  // Clear transfer complete interrupt fl.
 8002086:	689a      	ldr	r2, [r3, #8]
    DMA2_Stream1->CR |= DMA_SxCR_PSIZE_1;  // Peripheral data size = 32 bit
    DMA2_Stream1->CR |= DMA_SxCR_MINC;     // Increment memory address pointer
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
    // Number of data items to transfer
    DMA2_Stream1->NDTR = INPUT_COUNT * ADC_NUMS;
    DMA2_Stream1->PAR = (uint32_t)&ADC3->DR;     // Peripheral register address
 8002088:	4815      	ldr	r0, [pc, #84]	; (80020e0 <MEAS_ADC3_scan_init+0xec>)
    DMA2_Stream1->M0AR = (uint32_t)ADC_samples;  // Buffer memory loc. address
 800208a:	4916      	ldr	r1, [pc, #88]	; (80020e4 <MEAS_ADC3_scan_init+0xf0>)
    DMA2->LIFCR |= DMA_LIFCR_CTCIF1;  // Clear transfer complete interrupt fl.
 800208c:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8002090:	609a      	str	r2, [r3, #8]
    DMA2_Stream1->CR |= (2UL << DMA_SxCR_CHSEL_Pos);  // Select channel 2
 8002092:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8002094:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8002098:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_PL_0;                // Priority high
 800209a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800209c:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 80020a0:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_MSIZE_1;  // Memory data size = 32 bit
 80020a2:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80020a4:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 80020a8:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_PSIZE_1;  // Peripheral data size = 32 bit
 80020aa:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80020ac:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 80020b0:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_MINC;     // Increment memory address pointer
 80020b2:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80020b4:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 80020b8:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
 80020ba:	6a9a      	ldr	r2, [r3, #40]	; 0x28
    DMA2_Stream1->NDTR = INPUT_COUNT * ADC_NUMS;
 80020bc:	f44f 7480 	mov.w	r4, #256	; 0x100
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
 80020c0:	f042 0210 	orr.w	r2, r2, #16
 80020c4:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->NDTR = INPUT_COUNT * ADC_NUMS;
 80020c6:	62dc      	str	r4, [r3, #44]	; 0x2c
    DMA2_Stream1->PAR = (uint32_t)&ADC3->DR;     // Peripheral register address
 80020c8:	6318      	str	r0, [r3, #48]	; 0x30
    DMA2_Stream1->M0AR = (uint32_t)ADC_samples;  // Buffer memory loc. address
 80020ca:	6359      	str	r1, [r3, #52]	; 0x34
}
 80020cc:	b003      	add	sp, #12
 80020ce:	f85d 4b04 	ldr.w	r4, [sp], #4
 80020d2:	4770      	bx	lr
 80020d4:	40023800 	.word	0x40023800
 80020d8:	40012200 	.word	0x40012200
 80020dc:	e000e100 	.word	0xe000e100
 80020e0:	4001224c 	.word	0x4001224c
 80020e4:	20000494 	.word	0x20000494

080020e8 <DMA2_Stream1_IRQHandler>:
 * The samples from the ADC3 have been transfered to memory by the DMA2 Stream1
 * and are ready for processing.
 *****************************************************************************/
void DMA2_Stream1_IRQHandler(void)
{
	if (DMA2->LISR & DMA_LISR_TCIF1) // Stream1 transfer compl. interrupt f.
 80020e8:	4b1b      	ldr	r3, [pc, #108]	; (8002158 <DMA2_Stream1_IRQHandler+0x70>)
 80020ea:	681a      	ldr	r2, [r3, #0]
 80020ec:	0511      	lsls	r1, r2, #20
 80020ee:	d400      	bmi.n	80020f2 <DMA2_Stream1_IRQHandler+0xa>
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
        ADC3->CR2 &= ~ADC_CR2_DMA;   // Disable DMA mode

        MEAS_ADC_reset();
    }
}
 80020f0:	4770      	bx	lr
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80020f2:	4a1a      	ldr	r2, [pc, #104]	; (800215c <DMA2_Stream1_IRQHandler+0x74>)
 80020f4:	f04f 7100 	mov.w	r1, #33554432	; 0x2000000
 80020f8:	f8c2 1084 	str.w	r1, [r2, #132]	; 0x84
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 80020fc:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8002100:	f3bf 8f6f 	isb	sy
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8002104:	f8c2 1184 	str.w	r1, [r2, #388]	; 0x184
        DMA2_Stream1->CR &= ~DMA_SxCR_EN;         // Disable the DMA
 8002108:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800210a:	f022 0201 	bic.w	r2, r2, #1
 800210e:	629a      	str	r2, [r3, #40]	; 0x28
        while (DMA2_Stream1->CR & DMA_SxCR_EN)	  // Wait for DMA to finish
 8002110:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8002112:	07d2      	lsls	r2, r2, #31
 8002114:	d4fc      	bmi.n	8002110 <DMA2_Stream1_IRQHandler+0x28>
        DMA2->LIFCR |= DMA_LIFCR_CTCIF1;// clr transfer complete interrupt fl.
 8002116:	6899      	ldr	r1, [r3, #8]
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 8002118:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
        DMA2->LIFCR |= DMA_LIFCR_CTCIF1;// clr transfer complete interrupt fl.
 800211c:	f441 6100 	orr.w	r1, r1, #2048	; 0x800
 8002120:	6099      	str	r1, [r3, #8]
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 8002122:	6813      	ldr	r3, [r2, #0]
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 8002124:	490e      	ldr	r1, [pc, #56]	; (8002160 <DMA2_Stream1_IRQHandler+0x78>)
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 8002126:	f023 0301 	bic.w	r3, r3, #1
 800212a:	6013      	str	r3, [r2, #0]
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 800212c:	6888      	ldr	r0, [r1, #8]
    RCC->APB2RSTR |= RCC_APB2RSTR_ADCRST;   // Reset ADCs
 800212e:	4b0d      	ldr	r3, [pc, #52]	; (8002164 <DMA2_Stream1_IRQHandler+0x7c>)
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 8002130:	f020 0001 	bic.w	r0, r0, #1
 8002134:	6088      	str	r0, [r1, #8]
        ADC3->CR2 &= ~ADC_CR2_DMA;   // Disable DMA mode
 8002136:	6888      	ldr	r0, [r1, #8]
 8002138:	f420 7080 	bic.w	r0, r0, #256	; 0x100
 800213c:	6088      	str	r0, [r1, #8]
    RCC->APB2RSTR |= RCC_APB2RSTR_ADCRST;   // Reset ADCs
 800213e:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8002140:	f441 7180 	orr.w	r1, r1, #256	; 0x100
 8002144:	6259      	str	r1, [r3, #36]	; 0x24
    RCC->APB2RSTR &= ~RCC_APB2RSTR_ADCRST;  // Release reset of ADCs
 8002146:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8002148:	f421 7180 	bic.w	r1, r1, #256	; 0x100
 800214c:	6259      	str	r1, [r3, #36]	; 0x24
    TIM2->CR1 &= ~TIM_CR1_CEN;              // Disable timer
 800214e:	6813      	ldr	r3, [r2, #0]
 8002150:	f023 0301 	bic.w	r3, r3, #1
 8002154:	6013      	str	r3, [r2, #0]
}
 8002156:	4770      	bx	lr
 8002158:	40026400 	.word	0x40026400
 800215c:	e000e100 	.word	0xe000e100
 8002160:	40012200 	.word	0x40012200
 8002164:	40023800 	.word	0x40023800

08002168 <MEAS_start_measure>:
 *
 * @note The result is stored alternated e.g. every 4th is together.
 *****************************************************************************/
// Start the measurement procedure
uint32_t* MEAS_start_measure(void)
{
 8002168:	b510      	push	{r4, lr}
        buffer[i] = 0;
 800216a:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800216e:	2100      	movs	r1, #0
 8002170:	480f      	ldr	r0, [pc, #60]	; (80021b0 <MEAS_start_measure+0x48>)
 8002172:	f02b fdf2 	bl	802dd5a <memset>
	MEAS_Buffer_reset(INPUT_COUNT, ADC_samples);
	MEAS_ADC3_scan_init();
 8002176:	f7ff ff3d 	bl	8001ff4 <MEAS_ADC3_scan_init>
    DMA2_Stream1->CR |= DMA_SxCR_EN;          // Enable DMA
 800217a:	4a0e      	ldr	r2, [pc, #56]	; (80021b4 <MEAS_start_measure+0x4c>)
 800217c:	490e      	ldr	r1, [pc, #56]	; (80021b8 <MEAS_start_measure+0x50>)
 800217e:	6a93      	ldr	r3, [r2, #40]	; 0x28
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 8002180:	480e      	ldr	r0, [pc, #56]	; (80021bc <MEAS_start_measure+0x54>)
 8002182:	f04f 7400 	mov.w	r4, #33554432	; 0x2000000
    DMA2_Stream1->CR |= DMA_SxCR_EN;          // Enable DMA
 8002186:	f043 0301 	orr.w	r3, r3, #1
 800218a:	6293      	str	r3, [r2, #40]	; 0x28
 800218c:	f8c1 4184 	str.w	r4, [r1, #388]	; 0x184
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8002190:	604c      	str	r4, [r1, #4]
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 8002192:	6883      	ldr	r3, [r0, #8]
    TIM2->CR1 |= TIM_CR1_CEN;           // Enable timer
 8002194:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 8002198:	f043 0301 	orr.w	r3, r3, #1
 800219c:	6083      	str	r3, [r0, #8]
    TIM2->CR1 |= TIM_CR1_CEN;           // Enable timer
 800219e:	680b      	ldr	r3, [r1, #0]
 80021a0:	f043 0301 	orr.w	r3, r3, #1
 80021a4:	600b      	str	r3, [r1, #0]
    MEAS_ADC3_scan_start();

    while (DMA2_Stream1->CR & DMA_SxCR_EN)	  // Wait for DMA to finish
 80021a6:	6a93      	ldr	r3, [r2, #40]	; 0x28
 80021a8:	07db      	lsls	r3, r3, #31
 80021aa:	d4fc      	bmi.n	80021a6 <MEAS_start_measure+0x3e>
	{

	}

     return ADC_samples;
}
 80021ac:	4800      	ldr	r0, [pc, #0]	; (80021b0 <MEAS_start_measure+0x48>)
 80021ae:	bd10      	pop	{r4, pc}
 80021b0:	20000494 	.word	0x20000494
 80021b4:	40026400 	.word	0x40026400
 80021b8:	e000e100 	.word	0xe000e100
 80021bc:	40012200 	.word	0x40012200

080021c0 <MEAS_get_num_of_chan>:
 * @return Number of channels
 *****************************************************************************/
uint8_t MEAS_get_num_of_chan(void)
{
	return INPUT_COUNT;
}
 80021c0:	2004      	movs	r0, #4
 80021c2:	4770      	bx	lr

080021c4 <MEAS_get_num_of_samples>:
 * @return Number of samples
 *****************************************************************************/
uint8_t MEAS_get_num_of_samples(void)
{
	return ADC_NUMS;
}
 80021c4:	2040      	movs	r0, #64	; 0x40
 80021c6:	4770      	bx	lr

080021c8 <MEAS_get_samp_freq>:
 * @return Sampling frequency
 *****************************************************************************/
uint16_t MEAS_get_samp_freq(void)
{
	return ADC_FS;
}
 80021c8:	f44f 7020 	mov.w	r0, #640	; 0x280
 80021cc:	4770      	bx	lr
 80021ce:	bf00      	nop

080021d0 <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                                        /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 80021d0:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80021d2:	4b0e      	ldr	r3, [pc, #56]	; (800220c <HAL_MspInit+0x3c>)
 80021d4:	2200      	movs	r2, #0
 80021d6:	9200      	str	r2, [sp, #0]
 80021d8:	6c59      	ldr	r1, [r3, #68]	; 0x44
 80021da:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 80021de:	6459      	str	r1, [r3, #68]	; 0x44
 80021e0:	6c58      	ldr	r0, [r3, #68]	; 0x44
 80021e2:	f400 4080 	and.w	r0, r0, #16384	; 0x4000
 80021e6:	9000      	str	r0, [sp, #0]
 80021e8:	9800      	ldr	r0, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 80021ea:	9201      	str	r2, [sp, #4]
 80021ec:	6c18      	ldr	r0, [r3, #64]	; 0x40
 80021ee:	f040 5080 	orr.w	r0, r0, #268435456	; 0x10000000
 80021f2:	6418      	str	r0, [r3, #64]	; 0x40
 80021f4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80021f6:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80021fa:	9301      	str	r3, [sp, #4]
 80021fc:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80021fe:	210f      	movs	r1, #15
 8002200:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8002204:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8002206:	f009 ba07 	b.w	800b618 <HAL_NVIC_SetPriority>
 800220a:	bf00      	nop
 800220c:	40023800 	.word	0x40023800

08002210 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8002210:	4b0b      	ldr	r3, [pc, #44]	; (8002240 <HAL_CRC_MspInit+0x30>)
 8002212:	6802      	ldr	r2, [r0, #0]
 8002214:	429a      	cmp	r2, r3
 8002216:	d000      	beq.n	800221a <HAL_CRC_MspInit+0xa>
 8002218:	4770      	bx	lr
{
 800221a:	b082      	sub	sp, #8
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 800221c:	2200      	movs	r2, #0
 800221e:	9201      	str	r2, [sp, #4]
 8002220:	f8d3 2830 	ldr.w	r2, [r3, #2096]	; 0x830
 8002224:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8002228:	f8c3 2830 	str.w	r2, [r3, #2096]	; 0x830
 800222c:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8002230:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002232:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8002236:	9301      	str	r3, [sp, #4]
 8002238:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 800223a:	b002      	add	sp, #8
 800223c:	4770      	bx	lr
 800223e:	bf00      	nop
 8002240:	40023000 	.word	0x40023000

08002244 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8002244:	e92d 4370 	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hi2c->Instance==I2C3)
 8002248:	4b2e      	ldr	r3, [pc, #184]	; (8002304 <HAL_I2C_MspInit+0xc0>)
 800224a:	6802      	ldr	r2, [r0, #0]
{
 800224c:	b08a      	sub	sp, #40	; 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800224e:	2400      	movs	r4, #0
  if(hi2c->Instance==I2C3)
 8002250:	429a      	cmp	r2, r3
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002252:	e9cd 4404 	strd	r4, r4, [sp, #16]
 8002256:	e9cd 4406 	strd	r4, r4, [sp, #24]
 800225a:	9408      	str	r4, [sp, #32]
  if(hi2c->Instance==I2C3)
 800225c:	d002      	beq.n	8002264 <HAL_I2C_MspInit+0x20>
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
  /* USER CODE END I2C3_MspInit 1 */
  }

}
 800225e:	b00a      	add	sp, #40	; 0x28
 8002260:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8002264:	4d28      	ldr	r5, [pc, #160]	; (8002308 <HAL_I2C_MspInit+0xc4>)
 8002266:	9401      	str	r4, [sp, #4]
 8002268:	6b2b      	ldr	r3, [r5, #48]	; 0x30
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800226a:	4828      	ldr	r0, [pc, #160]	; (800230c <HAL_I2C_MspInit+0xc8>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 800226c:	f043 0304 	orr.w	r3, r3, #4
 8002270:	632b      	str	r3, [r5, #48]	; 0x30
 8002272:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8002274:	f003 0304 	and.w	r3, r3, #4
 8002278:	9301      	str	r3, [sp, #4]
 800227a:	9b01      	ldr	r3, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800227c:	9402      	str	r4, [sp, #8]
 800227e:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8002280:	f043 0301 	orr.w	r3, r3, #1
 8002284:	632b      	str	r3, [r5, #48]	; 0x30
 8002286:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8002288:	f003 0301 	and.w	r3, r3, #1
 800228c:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 800228e:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002292:	f04f 0801 	mov.w	r8, #1
 8002296:	f04f 0903 	mov.w	r9, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 800229a:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800229c:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 800229e:	2312      	movs	r3, #18
 80022a0:	e9cd 2304 	strd	r2, r3, [sp, #16]
 80022a4:	e9cd 8906 	strd	r8, r9, [sp, #24]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80022a8:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 80022aa:	9608      	str	r6, [sp, #32]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80022ac:	f009 fc22 	bl	800baf4 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80022b0:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 80022b2:	f44f 7280 	mov.w	r2, #256	; 0x100
 80022b6:	2312      	movs	r3, #18
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80022b8:	4815      	ldr	r0, [pc, #84]	; (8002310 <HAL_I2C_MspInit+0xcc>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 80022ba:	9608      	str	r6, [sp, #32]
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 80022bc:	e9cd 2304 	strd	r2, r3, [sp, #16]
 80022c0:	e9cd 8906 	strd	r8, r9, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80022c4:	f009 fc16 	bl	800baf4 <HAL_GPIO_Init>
    __HAL_RCC_I2C3_CLK_ENABLE();
 80022c8:	9403      	str	r4, [sp, #12]
 80022ca:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 80022cc:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 80022d0:	642b      	str	r3, [r5, #64]	; 0x40
 80022d2:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 80022d4:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 80022d8:	4622      	mov	r2, r4
 80022da:	2105      	movs	r1, #5
    __HAL_RCC_I2C3_CLK_ENABLE();
 80022dc:	9303      	str	r3, [sp, #12]
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 80022de:	2048      	movs	r0, #72	; 0x48
    __HAL_RCC_I2C3_CLK_ENABLE();
 80022e0:	9b03      	ldr	r3, [sp, #12]
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 80022e2:	f009 f999 	bl	800b618 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(I2C3_EV_IRQn);
 80022e6:	2048      	movs	r0, #72	; 0x48
 80022e8:	f009 f9d4 	bl	800b694 <HAL_NVIC_EnableIRQ>
    __HAL_RCC_I2C3_FORCE_RESET();
 80022ec:	6a2b      	ldr	r3, [r5, #32]
 80022ee:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 80022f2:	622b      	str	r3, [r5, #32]
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 80022f4:	6a2b      	ldr	r3, [r5, #32]
 80022f6:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 80022fa:	622b      	str	r3, [r5, #32]
}
 80022fc:	b00a      	add	sp, #40	; 0x28
 80022fe:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
 8002302:	bf00      	nop
 8002304:	40005c00 	.word	0x40005c00
 8002308:	40023800 	.word	0x40023800
 800230c:	40020800 	.word	0x40020800
 8002310:	40020000 	.word	0x40020000

08002314 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8002314:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002318:	4604      	mov	r4, r0
 800231a:	b09a      	sub	sp, #104	; 0x68
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800231c:	2100      	movs	r1, #0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 800231e:	2230      	movs	r2, #48	; 0x30
 8002320:	a80e      	add	r0, sp, #56	; 0x38
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002322:	e9cd 1108 	strd	r1, r1, [sp, #32]
 8002326:	e9cd 110a 	strd	r1, r1, [sp, #40]	; 0x28
 800232a:	910c      	str	r1, [sp, #48]	; 0x30
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 800232c:	f02b fd15 	bl	802dd5a <memset>
  if(hltdc->Instance==LTDC)
 8002330:	4b67      	ldr	r3, [pc, #412]	; (80024d0 <HAL_LTDC_MspInit+0x1bc>)
 8002332:	6822      	ldr	r2, [r4, #0]
 8002334:	429a      	cmp	r2, r3
 8002336:	d002      	beq.n	800233e <HAL_LTDC_MspInit+0x2a>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8002338:	b01a      	add	sp, #104	; 0x68
 800233a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 800233e:	23c0      	movs	r3, #192	; 0xc0
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8002340:	2108      	movs	r1, #8
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 8002342:	2204      	movs	r2, #4
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 8002344:	9312      	str	r3, [sp, #72]	; 0x48
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8002346:	a80e      	add	r0, sp, #56	; 0x38
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8002348:	f44f 3300 	mov.w	r3, #131072	; 0x20000
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 800234c:	910e      	str	r1, [sp, #56]	; 0x38
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 800234e:	9214      	str	r2, [sp, #80]	; 0x50
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8002350:	9317      	str	r3, [sp, #92]	; 0x5c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8002352:	f00b fe39 	bl	800dfc8 <HAL_RCCEx_PeriphCLKConfig>
 8002356:	2800      	cmp	r0, #0
 8002358:	f040 80b7 	bne.w	80024ca <HAL_LTDC_MspInit+0x1b6>
    __HAL_RCC_LTDC_CLK_ENABLE();
 800235c:	4b5d      	ldr	r3, [pc, #372]	; (80024d4 <HAL_LTDC_MspInit+0x1c0>)
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800235e:	485e      	ldr	r0, [pc, #376]	; (80024d8 <HAL_LTDC_MspInit+0x1c4>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 8002360:	2400      	movs	r4, #0
 8002362:	9401      	str	r4, [sp, #4]
 8002364:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8002366:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 800236a:	645a      	str	r2, [r3, #68]	; 0x44
 800236c:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800236e:	f002 6280 	and.w	r2, r2, #67108864	; 0x4000000
 8002372:	9201      	str	r2, [sp, #4]
 8002374:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8002376:	9402      	str	r4, [sp, #8]
 8002378:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800237a:	f042 0220 	orr.w	r2, r2, #32
 800237e:	631a      	str	r2, [r3, #48]	; 0x30
 8002380:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002382:	f002 0220 	and.w	r2, r2, #32
 8002386:	9202      	str	r2, [sp, #8]
 8002388:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800238a:	9403      	str	r4, [sp, #12]
 800238c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800238e:	f042 0201 	orr.w	r2, r2, #1
 8002392:	631a      	str	r2, [r3, #48]	; 0x30
 8002394:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002396:	f002 0201 	and.w	r2, r2, #1
 800239a:	9203      	str	r2, [sp, #12]
 800239c:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 800239e:	9404      	str	r4, [sp, #16]
 80023a0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80023a2:	f042 0202 	orr.w	r2, r2, #2
 80023a6:	631a      	str	r2, [r3, #48]	; 0x30
 80023a8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80023aa:	f002 0202 	and.w	r2, r2, #2
 80023ae:	9204      	str	r2, [sp, #16]
 80023b0:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 80023b2:	9405      	str	r4, [sp, #20]
 80023b4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80023b6:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80023ba:	631a      	str	r2, [r3, #48]	; 0x30
 80023bc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80023be:	f002 0240 	and.w	r2, r2, #64	; 0x40
 80023c2:	9205      	str	r2, [sp, #20]
 80023c4:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80023c6:	9406      	str	r4, [sp, #24]
 80023c8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80023ca:	f042 0204 	orr.w	r2, r2, #4
 80023ce:	631a      	str	r2, [r3, #48]	; 0x30
 80023d0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80023d2:	f002 0204 	and.w	r2, r2, #4
 80023d6:	9206      	str	r2, [sp, #24]
 80023d8:	9a06      	ldr	r2, [sp, #24]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 80023da:	9407      	str	r4, [sp, #28]
 80023dc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80023de:	f042 0208 	orr.w	r2, r2, #8
 80023e2:	631a      	str	r2, [r3, #48]	; 0x30
 80023e4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80023e6:	f003 0308 	and.w	r3, r3, #8
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 80023ea:	2600      	movs	r6, #0
 80023ec:	2702      	movs	r7, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80023ee:	250e      	movs	r5, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 80023f0:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80023f2:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 80023f4:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80023f8:	2302      	movs	r3, #2
 80023fa:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80023fe:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8002402:	9b07      	ldr	r3, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002404:	950c      	str	r5, [sp, #48]	; 0x30
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002406:	f009 fb75 	bl	800baf4 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800240a:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 800240c:	f641 0258 	movw	r2, #6232	; 0x1858
 8002410:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002412:	4832      	ldr	r0, [pc, #200]	; (80024dc <HAL_LTDC_MspInit+0x1c8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002414:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8002416:	e9cd 2308 	strd	r2, r3, [sp, #32]
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 800241a:	f04f 0809 	mov.w	r8, #9
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 800241e:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002422:	f009 fb67 	bl	800baf4 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002426:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8002428:	2203      	movs	r2, #3
 800242a:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800242c:	482c      	ldr	r0, [pc, #176]	; (80024e0 <HAL_LTDC_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 800242e:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8002432:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8002436:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800243a:	f009 fb5b 	bl	800baf4 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800243e:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8002440:	f44f 6270 	mov.w	r2, #3840	; 0xf00
 8002444:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002446:	4826      	ldr	r0, [pc, #152]	; (80024e0 <HAL_LTDC_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002448:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 800244a:	e9cd 2308 	strd	r2, r3, [sp, #32]
 800244e:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002452:	f009 fb4f 	bl	800baf4 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002456:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8002458:	f44f 620c 	mov.w	r2, #2240	; 0x8c0
 800245c:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800245e:	4821      	ldr	r0, [pc, #132]	; (80024e4 <HAL_LTDC_MspInit+0x1d0>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002460:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8002462:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8002466:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800246a:	f009 fb43 	bl	800baf4 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800246e:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8002470:	22c0      	movs	r2, #192	; 0xc0
 8002472:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002474:	481c      	ldr	r0, [pc, #112]	; (80024e8 <HAL_LTDC_MspInit+0x1d4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002476:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8002478:	e9cd 2308 	strd	r2, r3, [sp, #32]
 800247c:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002480:	f009 fb38 	bl	800baf4 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002484:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8002486:	2208      	movs	r2, #8
 8002488:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800248a:	4818      	ldr	r0, [pc, #96]	; (80024ec <HAL_LTDC_MspInit+0x1d8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800248c:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 800248e:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8002492:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002496:	f009 fb2d 	bl	800baf4 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 800249a:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800249c:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 800249e:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80024a2:	4810      	ldr	r0, [pc, #64]	; (80024e4 <HAL_LTDC_MspInit+0x1d0>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 80024a4:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 80024a8:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80024ac:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80024b0:	f009 fb20 	bl	800baf4 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 80024b4:	4622      	mov	r2, r4
 80024b6:	2105      	movs	r1, #5
 80024b8:	2058      	movs	r0, #88	; 0x58
 80024ba:	f009 f8ad 	bl	800b618 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 80024be:	2058      	movs	r0, #88	; 0x58
 80024c0:	f009 f8e8 	bl	800b694 <HAL_NVIC_EnableIRQ>
}
 80024c4:	b01a      	add	sp, #104	; 0x68
 80024c6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      Error_Handler();
 80024ca:	f7ff fd39 	bl	8001f40 <Error_Handler>
 80024ce:	e745      	b.n	800235c <HAL_LTDC_MspInit+0x48>
 80024d0:	40016800 	.word	0x40016800
 80024d4:	40023800 	.word	0x40023800
 80024d8:	40021400 	.word	0x40021400
 80024dc:	40020000 	.word	0x40020000
 80024e0:	40020400 	.word	0x40020400
 80024e4:	40021800 	.word	0x40021800
 80024e8:	40020800 	.word	0x40020800
 80024ec:	40020c00 	.word	0x40020c00

080024f0 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 80024f0:	b510      	push	{r4, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hspi->Instance==SPI5)
 80024f2:	4a1b      	ldr	r2, [pc, #108]	; (8002560 <HAL_SPI_MspInit+0x70>)
 80024f4:	6801      	ldr	r1, [r0, #0]
{
 80024f6:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80024f8:	2300      	movs	r3, #0
  if(hspi->Instance==SPI5)
 80024fa:	4291      	cmp	r1, r2
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80024fc:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8002500:	e9cd 3304 	strd	r3, r3, [sp, #16]
 8002504:	9306      	str	r3, [sp, #24]
  if(hspi->Instance==SPI5)
 8002506:	d001      	beq.n	800250c <HAL_SPI_MspInit+0x1c>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 8002508:	b008      	add	sp, #32
 800250a:	bd10      	pop	{r4, pc}
    __HAL_RCC_SPI5_CLK_ENABLE();
 800250c:	f502 4268 	add.w	r2, r2, #59392	; 0xe800
 8002510:	9300      	str	r3, [sp, #0]
 8002512:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8002514:	f440 1080 	orr.w	r0, r0, #1048576	; 0x100000
 8002518:	6450      	str	r0, [r2, #68]	; 0x44
 800251a:	6c50      	ldr	r0, [r2, #68]	; 0x44
 800251c:	f400 1080 	and.w	r0, r0, #1048576	; 0x100000
 8002520:	9000      	str	r0, [sp, #0]
 8002522:	9800      	ldr	r0, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8002524:	9301      	str	r3, [sp, #4]
 8002526:	6b13      	ldr	r3, [r2, #48]	; 0x30
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002528:	480e      	ldr	r0, [pc, #56]	; (8002564 <HAL_SPI_MspInit+0x74>)
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800252a:	f043 0320 	orr.w	r3, r3, #32
 800252e:	6313      	str	r3, [r2, #48]	; 0x30
 8002530:	6b13      	ldr	r3, [r2, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 8002532:	ed9f 7b09 	vldr	d7, [pc, #36]	; 8002558 <HAL_SPI_MspInit+0x68>
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8002536:	f003 0320 	and.w	r3, r3, #32
 800253a:	9301      	str	r3, [sp, #4]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800253c:	2203      	movs	r2, #3
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 800253e:	2305      	movs	r3, #5
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002540:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 8002542:	ed8d 7b02 	vstr	d7, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8002546:	e9cd 2305 	strd	r2, r3, [sp, #20]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800254a:	9c01      	ldr	r4, [sp, #4]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800254c:	f009 fad2 	bl	800baf4 <HAL_GPIO_Init>
}
 8002550:	b008      	add	sp, #32
 8002552:	bd10      	pop	{r4, pc}
 8002554:	f3af 8000 	nop.w
 8002558:	00000380 	.word	0x00000380
 800255c:	00000002 	.word	0x00000002
 8002560:	40015000 	.word	0x40015000
 8002564:	40021400 	.word	0x40021400

08002568 <HAL_TIM_Base_MspInit>:
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
  if(htim_base->Instance==TIM2)
 8002568:	6803      	ldr	r3, [r0, #0]
 800256a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
{
 800256e:	b084      	sub	sp, #16
  if(htim_base->Instance==TIM2)
 8002570:	d018      	beq.n	80025a4 <HAL_TIM_Base_MspInit+0x3c>
    __HAL_RCC_TIM2_CLK_ENABLE();
  /* USER CODE BEGIN TIM2_MspInit 1 */

  /* USER CODE END TIM2_MspInit 1 */
  }
  else if(htim_base->Instance==TIM3)
 8002572:	4a22      	ldr	r2, [pc, #136]	; (80025fc <HAL_TIM_Base_MspInit+0x94>)
 8002574:	4293      	cmp	r3, r2
 8002576:	d007      	beq.n	8002588 <HAL_TIM_Base_MspInit+0x20>
    __HAL_RCC_TIM3_CLK_ENABLE();
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }
  else if(htim_base->Instance==TIM9)
 8002578:	4a21      	ldr	r2, [pc, #132]	; (8002600 <HAL_TIM_Base_MspInit+0x98>)
 800257a:	4293      	cmp	r3, r2
 800257c:	d021      	beq.n	80025c2 <HAL_TIM_Base_MspInit+0x5a>
    __HAL_RCC_TIM9_CLK_ENABLE();
  /* USER CODE BEGIN TIM9_MspInit 1 */

  /* USER CODE END TIM9_MspInit 1 */
  }
  else if(htim_base->Instance==TIM14)
 800257e:	4a21      	ldr	r2, [pc, #132]	; (8002604 <HAL_TIM_Base_MspInit+0x9c>)
 8002580:	4293      	cmp	r3, r2
 8002582:	d02c      	beq.n	80025de <HAL_TIM_Base_MspInit+0x76>
  /* USER CODE BEGIN TIM14_MspInit 1 */

  /* USER CODE END TIM14_MspInit 1 */
  }

}
 8002584:	b004      	add	sp, #16
 8002586:	4770      	bx	lr
    __HAL_RCC_TIM3_CLK_ENABLE();
 8002588:	4b1f      	ldr	r3, [pc, #124]	; (8002608 <HAL_TIM_Base_MspInit+0xa0>)
 800258a:	2200      	movs	r2, #0
 800258c:	9201      	str	r2, [sp, #4]
 800258e:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8002590:	f042 0202 	orr.w	r2, r2, #2
 8002594:	641a      	str	r2, [r3, #64]	; 0x40
 8002596:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002598:	f003 0302 	and.w	r3, r3, #2
 800259c:	9301      	str	r3, [sp, #4]
 800259e:	9b01      	ldr	r3, [sp, #4]
}
 80025a0:	b004      	add	sp, #16
 80025a2:	4770      	bx	lr
    __HAL_RCC_TIM2_CLK_ENABLE();
 80025a4:	f503 330e 	add.w	r3, r3, #145408	; 0x23800
 80025a8:	2200      	movs	r2, #0
 80025aa:	9200      	str	r2, [sp, #0]
 80025ac:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80025ae:	f042 0201 	orr.w	r2, r2, #1
 80025b2:	641a      	str	r2, [r3, #64]	; 0x40
 80025b4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80025b6:	f003 0301 	and.w	r3, r3, #1
 80025ba:	9300      	str	r3, [sp, #0]
 80025bc:	9b00      	ldr	r3, [sp, #0]
}
 80025be:	b004      	add	sp, #16
 80025c0:	4770      	bx	lr
    __HAL_RCC_TIM9_CLK_ENABLE();
 80025c2:	4b11      	ldr	r3, [pc, #68]	; (8002608 <HAL_TIM_Base_MspInit+0xa0>)
 80025c4:	2200      	movs	r2, #0
 80025c6:	9202      	str	r2, [sp, #8]
 80025c8:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80025ca:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 80025ce:	645a      	str	r2, [r3, #68]	; 0x44
 80025d0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80025d2:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80025d6:	9302      	str	r3, [sp, #8]
 80025d8:	9b02      	ldr	r3, [sp, #8]
}
 80025da:	b004      	add	sp, #16
 80025dc:	4770      	bx	lr
    __HAL_RCC_TIM14_CLK_ENABLE();
 80025de:	4b0a      	ldr	r3, [pc, #40]	; (8002608 <HAL_TIM_Base_MspInit+0xa0>)
 80025e0:	2200      	movs	r2, #0
 80025e2:	9203      	str	r2, [sp, #12]
 80025e4:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80025e6:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80025ea:	641a      	str	r2, [r3, #64]	; 0x40
 80025ec:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80025ee:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80025f2:	9303      	str	r3, [sp, #12]
 80025f4:	9b03      	ldr	r3, [sp, #12]
}
 80025f6:	b004      	add	sp, #16
 80025f8:	4770      	bx	lr
 80025fa:	bf00      	nop
 80025fc:	40000400 	.word	0x40000400
 8002600:	40014000 	.word	0x40014000
 8002604:	40002000 	.word	0x40002000
 8002608:	40023800 	.word	0x40023800
 800260c:	00000000 	.word	0x00000000

08002610 <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 8002610:	b500      	push	{lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(htim->Instance==TIM9)
 8002612:	6802      	ldr	r2, [r0, #0]
 8002614:	4924      	ldr	r1, [pc, #144]	; (80026a8 <HAL_TIM_MspPostInit+0x98>)
{
 8002616:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002618:	2300      	movs	r3, #0
  if(htim->Instance==TIM9)
 800261a:	428a      	cmp	r2, r1
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800261c:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8002620:	e9cd 3304 	strd	r3, r3, [sp, #16]
 8002624:	9306      	str	r3, [sp, #24]
  if(htim->Instance==TIM9)
 8002626:	d005      	beq.n	8002634 <HAL_TIM_MspPostInit+0x24>

  /* USER CODE BEGIN TIM9_MspPostInit 1 */

  /* USER CODE END TIM9_MspPostInit 1 */
  }
  else if(htim->Instance==TIM14)
 8002628:	4920      	ldr	r1, [pc, #128]	; (80026ac <HAL_TIM_MspPostInit+0x9c>)
 800262a:	428a      	cmp	r2, r1
 800262c:	d01a      	beq.n	8002664 <HAL_TIM_MspPostInit+0x54>
  /* USER CODE BEGIN TIM14_MspPostInit 1 */

  /* USER CODE END TIM14_MspPostInit 1 */
  }

}
 800262e:	b009      	add	sp, #36	; 0x24
 8002630:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002634:	4a1e      	ldr	r2, [pc, #120]	; (80026b0 <HAL_TIM_MspPostInit+0xa0>)
 8002636:	9300      	str	r3, [sp, #0]
 8002638:	6b13      	ldr	r3, [r2, #48]	; 0x30
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800263a:	481e      	ldr	r0, [pc, #120]	; (80026b4 <HAL_TIM_MspPostInit+0xa4>)
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800263c:	f043 0301 	orr.w	r3, r3, #1
 8002640:	6313      	str	r3, [r2, #48]	; 0x30
 8002642:	6b13      	ldr	r3, [r2, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_2;
 8002644:	ed9f 7b14 	vldr	d7, [pc, #80]	; 8002698 <HAL_TIM_MspPostInit+0x88>
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002648:	f003 0301 	and.w	r3, r3, #1
 800264c:	9300      	str	r3, [sp, #0]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800264e:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Alternate = GPIO_AF3_TIM9;
 8002650:	2303      	movs	r3, #3
    GPIO_InitStruct.Pin = GPIO_PIN_2;
 8002652:	ed8d 7b02 	vstr	d7, [sp, #8]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002656:	9a00      	ldr	r2, [sp, #0]
    GPIO_InitStruct.Alternate = GPIO_AF3_TIM9;
 8002658:	9306      	str	r3, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800265a:	f009 fa4b 	bl	800baf4 <HAL_GPIO_Init>
}
 800265e:	b009      	add	sp, #36	; 0x24
 8002660:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002664:	4a12      	ldr	r2, [pc, #72]	; (80026b0 <HAL_TIM_MspPostInit+0xa0>)
 8002666:	9301      	str	r3, [sp, #4]
 8002668:	6b13      	ldr	r3, [r2, #48]	; 0x30
 800266a:	f043 0301 	orr.w	r3, r3, #1
 800266e:	6313      	str	r3, [r2, #48]	; 0x30
 8002670:	6b13      	ldr	r3, [r2, #48]	; 0x30
    GPIO_InitStruct.Pin = BUZZER_PWM_Pin;
 8002672:	ed9f 7b0b 	vldr	d7, [pc, #44]	; 80026a0 <HAL_TIM_MspPostInit+0x90>
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002676:	f003 0301 	and.w	r3, r3, #1
 800267a:	9301      	str	r3, [sp, #4]
 800267c:	9801      	ldr	r0, [sp, #4]
    HAL_GPIO_Init(BUZZER_PWM_GPIO_Port, &GPIO_InitStruct);
 800267e:	480d      	ldr	r0, [pc, #52]	; (80026b4 <HAL_TIM_MspPostInit+0xa4>)
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002680:	2202      	movs	r2, #2
    GPIO_InitStruct.Alternate = GPIO_AF9_TIM14;
 8002682:	2309      	movs	r3, #9
    HAL_GPIO_Init(BUZZER_PWM_GPIO_Port, &GPIO_InitStruct);
 8002684:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Pin = BUZZER_PWM_Pin;
 8002686:	ed8d 7b02 	vstr	d7, [sp, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800268a:	9205      	str	r2, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF9_TIM14;
 800268c:	9306      	str	r3, [sp, #24]
    HAL_GPIO_Init(BUZZER_PWM_GPIO_Port, &GPIO_InitStruct);
 800268e:	f009 fa31 	bl	800baf4 <HAL_GPIO_Init>
}
 8002692:	b009      	add	sp, #36	; 0x24
 8002694:	f85d fb04 	ldr.w	pc, [sp], #4
 8002698:	00000004 	.word	0x00000004
 800269c:	00000002 	.word	0x00000002
 80026a0:	00000080 	.word	0x00000080
 80026a4:	00000002 	.word	0x00000002
 80026a8:	40014000 	.word	0x40014000
 80026ac:	40002000 	.word	0x40002000
 80026b0:	40023800 	.word	0x40023800
 80026b4:	40020000 	.word	0x40020000

080026b8 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 80026b8:	b5f0      	push	{r4, r5, r6, r7, lr}
  if (FMC_Initialized) {
 80026ba:	4b2b      	ldr	r3, [pc, #172]	; (8002768 <HAL_SDRAM_MspInit+0xb0>)
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 80026bc:	b089      	sub	sp, #36	; 0x24
  if (FMC_Initialized) {
 80026be:	681c      	ldr	r4, [r3, #0]
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 80026c0:	2200      	movs	r2, #0
 80026c2:	9204      	str	r2, [sp, #16]
  if (FMC_Initialized) {
 80026c4:	2c00      	cmp	r4, #0
 80026c6:	d14c      	bne.n	8002762 <HAL_SDRAM_MspInit+0xaa>
  FMC_Initialized = 1;
 80026c8:	2701      	movs	r7, #1
  __HAL_RCC_FMC_CLK_ENABLE();
 80026ca:	4a28      	ldr	r2, [pc, #160]	; (800276c <HAL_SDRAM_MspInit+0xb4>)
 80026cc:	9401      	str	r4, [sp, #4]
  FMC_Initialized = 1;
 80026ce:	601f      	str	r7, [r3, #0]
  __HAL_RCC_FMC_CLK_ENABLE();
 80026d0:	6b93      	ldr	r3, [r2, #56]	; 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80026d2:	4827      	ldr	r0, [pc, #156]	; (8002770 <HAL_SDRAM_MspInit+0xb8>)
  __HAL_RCC_FMC_CLK_ENABLE();
 80026d4:	433b      	orrs	r3, r7
 80026d6:	6393      	str	r3, [r2, #56]	; 0x38
 80026d8:	6b93      	ldr	r3, [r2, #56]	; 0x38
 80026da:	403b      	ands	r3, r7
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80026dc:	2603      	movs	r6, #3
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80026de:	250c      	movs	r5, #12
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 80026e0:	f64f 023f 	movw	r2, #63551	; 0xf83f
  __HAL_RCC_FMC_CLK_ENABLE();
 80026e4:	9301      	str	r3, [sp, #4]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80026e6:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 80026e8:	2302      	movs	r3, #2
 80026ea:	e9cd 2302 	strd	r2, r3, [sp, #8]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80026ee:	e9cd 6505 	strd	r6, r5, [sp, #20]
  __HAL_RCC_FMC_CLK_ENABLE();
 80026f2:	9b01      	ldr	r3, [sp, #4]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80026f4:	f009 f9fe 	bl	800baf4 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80026f8:	481e      	ldr	r0, [pc, #120]	; (8002774 <HAL_SDRAM_MspInit+0xbc>)
  GPIO_InitStruct.Pin = GPIO_PIN_0;
 80026fa:	9702      	str	r7, [sp, #8]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80026fc:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80026fe:	2702      	movs	r7, #2
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002700:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002704:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002708:	f009 f9f4 	bl	800baf4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 800270c:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002710:	4819      	ldr	r0, [pc, #100]	; (8002778 <HAL_SDRAM_MspInit+0xc0>)
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8002712:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002714:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002716:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800271a:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800271e:	f009 f9e9 	bl	800baf4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8002722:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002726:	4815      	ldr	r0, [pc, #84]	; (800277c <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8002728:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800272a:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800272c:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002730:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002734:	f009 f9de 	bl	800baf4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8002738:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800273c:	4810      	ldr	r0, [pc, #64]	; (8002780 <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 800273e:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002740:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002742:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002746:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800274a:	f009 f9d3 	bl	800baf4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 800274e:	2360      	movs	r3, #96	; 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002750:	480c      	ldr	r0, [pc, #48]	; (8002784 <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002752:	9703      	str	r7, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002754:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002756:	e9cd 4604 	strd	r4, r6, [sp, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800275a:	9506      	str	r5, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 800275c:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800275e:	f009 f9c9 	bl	800baf4 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8002762:	b009      	add	sp, #36	; 0x24
 8002764:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002766:	bf00      	nop
 8002768:	20000894 	.word	0x20000894
 800276c:	40023800 	.word	0x40023800
 8002770:	40021400 	.word	0x40021400
 8002774:	40020800 	.word	0x40020800
 8002778:	40021800 	.word	0x40021800
 800277c:	40021000 	.word	0x40021000
 8002780:	40020c00 	.word	0x40020c00
 8002784:	40020400 	.word	0x40020400

08002788 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8002788:	b570      	push	{r4, r5, r6, lr}
 800278a:	b088      	sub	sp, #32
  uint32_t              uwPrescalerValue = 0U;
  uint32_t              pFLatency;
  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 800278c:	4b23      	ldr	r3, [pc, #140]	; (800281c <HAL_InitTick+0x94>)
 800278e:	2200      	movs	r2, #0
 8002790:	9202      	str	r2, [sp, #8]
 8002792:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8002794:	f042 0210 	orr.w	r2, r2, #16
 8002798:	641a      	str	r2, [r3, #64]	; 0x40
 800279a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800279c:	f003 0310 	and.w	r3, r3, #16
 80027a0:	9302      	str	r3, [sp, #8]
{
 80027a2:	4605      	mov	r5, r0

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 80027a4:	a901      	add	r1, sp, #4
 80027a6:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 80027a8:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 80027aa:	f00b fbeb 	bl	800df84 <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  /* Compute TIM6 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 80027ae:	9b06      	ldr	r3, [sp, #24]
 80027b0:	b9d3      	cbnz	r3, 80027e8 <HAL_InitTick+0x60>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 80027b2:	f00b fbd7 	bl	800df64 <HAL_RCC_GetPCLK1Freq>
 80027b6:	4603      	mov	r3, r0
  {
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
  }

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 80027b8:	4a19      	ldr	r2, [pc, #100]	; (8002820 <HAL_InitTick+0x98>)

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 80027ba:	4c1a      	ldr	r4, [pc, #104]	; (8002824 <HAL_InitTick+0x9c>)
 80027bc:	491a      	ldr	r1, [pc, #104]	; (8002828 <HAL_InitTick+0xa0>)
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 80027be:	fba2 2303 	umull	r2, r3, r2, r3
 80027c2:	0c9b      	lsrs	r3, r3, #18
 80027c4:	3b01      	subs	r3, #1
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
  htim6.Init.Prescaler = uwPrescalerValue;
  htim6.Init.ClockDivision = 0;
 80027c6:	2200      	movs	r2, #0
  htim6.Init.Prescaler = uwPrescalerValue;
 80027c8:	e9c4 1300 	strd	r1, r3, [r4]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

  status = HAL_TIM_Base_Init(&htim6);
 80027cc:	4620      	mov	r0, r4
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 80027ce:	f240 33e7 	movw	r3, #999	; 0x3e7
  htim6.Init.ClockDivision = 0;
 80027d2:	6122      	str	r2, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 80027d4:	60a2      	str	r2, [r4, #8]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80027d6:	61a2      	str	r2, [r4, #24]
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 80027d8:	60e3      	str	r3, [r4, #12]
  status = HAL_TIM_Base_Init(&htim6);
 80027da:	f00c fa03 	bl	800ebe4 <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 80027de:	4606      	mov	r6, r0
 80027e0:	b130      	cbz	r0, 80027f0 <HAL_InitTick+0x68>
    }
  }

 /* Return function status */
  return status;
}
 80027e2:	4630      	mov	r0, r6
 80027e4:	b008      	add	sp, #32
 80027e6:	bd70      	pop	{r4, r5, r6, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 80027e8:	f00b fbbc 	bl	800df64 <HAL_RCC_GetPCLK1Freq>
 80027ec:	0043      	lsls	r3, r0, #1
 80027ee:	e7e3      	b.n	80027b8 <HAL_InitTick+0x30>
    status = HAL_TIM_Base_Start_IT(&htim6);
 80027f0:	4620      	mov	r0, r4
 80027f2:	f00c fa85 	bl	800ed00 <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 80027f6:	4606      	mov	r6, r0
 80027f8:	2800      	cmp	r0, #0
 80027fa:	d1f2      	bne.n	80027e2 <HAL_InitTick+0x5a>
        HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 80027fc:	2036      	movs	r0, #54	; 0x36
 80027fe:	f008 ff49 	bl	800b694 <HAL_NVIC_EnableIRQ>
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8002802:	2d0f      	cmp	r5, #15
 8002804:	d901      	bls.n	800280a <HAL_InitTick+0x82>
        status = HAL_ERROR;
 8002806:	2601      	movs	r6, #1
 8002808:	e7eb      	b.n	80027e2 <HAL_InitTick+0x5a>
        HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority, 0U);
 800280a:	4632      	mov	r2, r6
 800280c:	4629      	mov	r1, r5
 800280e:	2036      	movs	r0, #54	; 0x36
 8002810:	f008 ff02 	bl	800b618 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 8002814:	4b05      	ldr	r3, [pc, #20]	; (800282c <HAL_InitTick+0xa4>)
 8002816:	601d      	str	r5, [r3, #0]
 8002818:	e7e3      	b.n	80027e2 <HAL_InitTick+0x5a>
 800281a:	bf00      	nop
 800281c:	40023800 	.word	0x40023800
 8002820:	431bde83 	.word	0x431bde83
 8002824:	20000898 	.word	0x20000898
 8002828:	40001000 	.word	0x40001000
 800282c:	20000084 	.word	0x20000084

08002830 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8002830:	4770      	bx	lr
 8002832:	bf00      	nop

08002834 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8002834:	e7fe      	b.n	8002834 <HardFault_Handler>
 8002836:	bf00      	nop

08002838 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8002838:	e7fe      	b.n	8002838 <MemManage_Handler>
 800283a:	bf00      	nop

0800283c <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 800283c:	e7fe      	b.n	800283c <BusFault_Handler>
 800283e:	bf00      	nop

08002840 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8002840:	e7fe      	b.n	8002840 <UsageFault_Handler>
 8002842:	bf00      	nop

08002844 <DebugMon_Handler>:
 8002844:	4770      	bx	lr
 8002846:	bf00      	nop

08002848 <EXTI3_IRQHandler>:

/**
  * @brief This function handles EXTI line3 interrupt.
  */
void EXTI3_IRQHandler(void)
{
 8002848:	b508      	push	{r3, lr}
  /* USER CODE BEGIN EXTI3_IRQn 0 */

  HAL_Delay(200);
 800284a:	20c8      	movs	r0, #200	; 0xc8
 800284c:	f008 fec0 	bl	800b5d0 <HAL_Delay>
  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 8002850:	4804      	ldr	r0, [pc, #16]	; (8002864 <EXTI3_IRQHandler+0x1c>)
 8002852:	2200      	movs	r2, #0
 8002854:	2120      	movs	r1, #32
 8002856:	f009 fa91 	bl	800bd7c <HAL_GPIO_WritePin>
  /* USER CODE END EXTI3_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(DEVICE_ON_OFF_TRIGGER_Pin);
  /* USER CODE BEGIN EXTI3_IRQn 1 */

  /* USER CODE END EXTI3_IRQn 1 */
}
 800285a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_EXTI_IRQHandler(DEVICE_ON_OFF_TRIGGER_Pin);
 800285e:	2008      	movs	r0, #8
 8002860:	f009 ba9c 	b.w	800bd9c <HAL_GPIO_EXTI_IRQHandler>
 8002864:	40021000 	.word	0x40021000

08002868 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8002868:	4801      	ldr	r0, [pc, #4]	; (8002870 <TIM6_DAC_IRQHandler+0x8>)
 800286a:	f00c be29 	b.w	800f4c0 <HAL_TIM_IRQHandler>
 800286e:	bf00      	nop
 8002870:	20000898 	.word	0x20000898

08002874 <I2C3_EV_IRQHandler>:
void I2C3_EV_IRQHandler(void)
{
  /* USER CODE BEGIN I2C3_EV_IRQn 0 */

  /* USER CODE END I2C3_EV_IRQn 0 */
  HAL_I2C_EV_IRQHandler(&hi2c3);
 8002874:	4801      	ldr	r0, [pc, #4]	; (800287c <I2C3_EV_IRQHandler+0x8>)
 8002876:	f00a b9f1 	b.w	800cc5c <HAL_I2C_EV_IRQHandler>
 800287a:	bf00      	nop
 800287c:	200001ec 	.word	0x200001ec

08002880 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8002880:	4801      	ldr	r0, [pc, #4]	; (8002888 <LTDC_IRQHandler+0x8>)
 8002882:	f00a bf65 	b.w	800d750 <HAL_LTDC_IRQHandler>
 8002886:	bf00      	nop
 8002888:	20000240 	.word	0x20000240

0800288c <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 800288c:	2001      	movs	r0, #1
 800288e:	4770      	bx	lr

08002890 <_kill>:

int _kill(int pid, int sig)
{
 8002890:	b508      	push	{r3, lr}
	errno = EINVAL;
 8002892:	f02b fb5b 	bl	802df4c <__errno>
 8002896:	2316      	movs	r3, #22
 8002898:	6003      	str	r3, [r0, #0]
	return -1;
}
 800289a:	f04f 30ff 	mov.w	r0, #4294967295
 800289e:	bd08      	pop	{r3, pc}

080028a0 <_exit>:

void _exit (int status)
{
 80028a0:	b508      	push	{r3, lr}
	errno = EINVAL;
 80028a2:	f02b fb53 	bl	802df4c <__errno>
 80028a6:	2316      	movs	r3, #22
 80028a8:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 80028aa:	e7fe      	b.n	80028aa <_exit+0xa>

080028ac <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80028ac:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80028ae:	1e16      	subs	r6, r2, #0
 80028b0:	dd07      	ble.n	80028c2 <_read+0x16>
 80028b2:	460c      	mov	r4, r1
 80028b4:	198d      	adds	r5, r1, r6
	{
		*ptr++ = __io_getchar();
 80028b6:	f3af 8000 	nop.w
 80028ba:	f804 0b01 	strb.w	r0, [r4], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80028be:	42a5      	cmp	r5, r4
 80028c0:	d1f9      	bne.n	80028b6 <_read+0xa>
	}

return len;
}
 80028c2:	4630      	mov	r0, r6
 80028c4:	bd70      	pop	{r4, r5, r6, pc}
 80028c6:	bf00      	nop

080028c8 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80028c8:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80028ca:	1e16      	subs	r6, r2, #0
 80028cc:	dd07      	ble.n	80028de <_write+0x16>
 80028ce:	460c      	mov	r4, r1
 80028d0:	198d      	adds	r5, r1, r6
	{
		__io_putchar(*ptr++);
 80028d2:	f814 0b01 	ldrb.w	r0, [r4], #1
 80028d6:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80028da:	42ac      	cmp	r4, r5
 80028dc:	d1f9      	bne.n	80028d2 <_write+0xa>
	}
	return len;
}
 80028de:	4630      	mov	r0, r6
 80028e0:	bd70      	pop	{r4, r5, r6, pc}
 80028e2:	bf00      	nop

080028e4 <_close>:

int _close(int file)
{
	return -1;
}
 80028e4:	f04f 30ff 	mov.w	r0, #4294967295
 80028e8:	4770      	bx	lr
 80028ea:	bf00      	nop

080028ec <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 80028ec:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80028f0:	604b      	str	r3, [r1, #4]
	return 0;
}
 80028f2:	2000      	movs	r0, #0
 80028f4:	4770      	bx	lr
 80028f6:	bf00      	nop

080028f8 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 80028f8:	2001      	movs	r0, #1
 80028fa:	4770      	bx	lr

080028fc <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 80028fc:	2000      	movs	r0, #0
 80028fe:	4770      	bx	lr

08002900 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8002900:	4a0b      	ldr	r2, [pc, #44]	; (8002930 <_sbrk+0x30>)
{
 8002902:	b508      	push	{r3, lr}
 8002904:	4603      	mov	r3, r0
	if (heap_end == 0)
 8002906:	6810      	ldr	r0, [r2, #0]
 8002908:	b128      	cbz	r0, 8002916 <_sbrk+0x16>
		heap_end = &end;

	prev_heap_end = heap_end;
	if (heap_end + incr > stack_ptr)
 800290a:	4403      	add	r3, r0
 800290c:	4669      	mov	r1, sp
 800290e:	428b      	cmp	r3, r1
 8002910:	d807      	bhi.n	8002922 <_sbrk+0x22>
	{
		errno = ENOMEM;
		return (caddr_t) -1;
	}

	heap_end += incr;
 8002912:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
}
 8002914:	bd08      	pop	{r3, pc}
		heap_end = &end;
 8002916:	4807      	ldr	r0, [pc, #28]	; (8002934 <_sbrk+0x34>)
 8002918:	6010      	str	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 800291a:	4403      	add	r3, r0
 800291c:	4669      	mov	r1, sp
 800291e:	428b      	cmp	r3, r1
 8002920:	d9f7      	bls.n	8002912 <_sbrk+0x12>
		errno = ENOMEM;
 8002922:	f02b fb13 	bl	802df4c <__errno>
 8002926:	230c      	movs	r3, #12
 8002928:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 800292a:	f04f 30ff 	mov.w	r0, #4294967295
}
 800292e:	bd08      	pop	{r3, pc}
 8002930:	200008e0 	.word	0x200008e0
 8002934:	20014478 	.word	0x20014478

08002938 <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 8002938:	4770      	bx	lr
 800293a:	bf00      	nop

0800293c <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 800293c:	b508      	push	{r3, lr}
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_components_init();
 800293e:	f000 fbab 	bl	8003098 <touchgfx_components_init>
  touchgfx_init();
}
 8002942:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  touchgfx_init();
 8002946:	f000 bb33 	b.w	8002fb0 <touchgfx_init>
 800294a:	bf00      	nop

0800294c <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 800294c:	f000 bba6 	b.w	800309c <touchgfx_taskEntry>

08002950 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 8002950:	4770      	bx	lr

08002952 <_ZN20STM32TouchControllerD0Ev>:
 8002952:	b510      	push	{r4, lr}
 8002954:	2104      	movs	r1, #4
 8002956:	4604      	mov	r4, r0
 8002958:	f02a f913 	bl	802cb82 <_ZdlPvj>
 800295c:	4620      	mov	r0, r4
 800295e:	bd10      	pop	{r4, pc}

08002960 <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 8002960:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 8002962:	4b0c      	ldr	r3, [pc, #48]	; (8002994 <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8002964:	4c0c      	ldr	r4, [pc, #48]	; (8002998 <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 8002966:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 8002968:	4b0c      	ldr	r3, [pc, #48]	; (800299c <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 800296a:	2082      	movs	r0, #130	; 0x82
    TsYBoundary = YSize;
 800296c:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 800296e:	6863      	ldr	r3, [r4, #4]
 8002970:	4798      	blx	r3
 8002972:	f640 0311 	movw	r3, #2065	; 0x811
 8002976:	4298      	cmp	r0, r3
 8002978:	d10a      	bne.n	8002990 <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 800297a:	4d09      	ldr	r5, [pc, #36]	; (80029a0 <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 800297c:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 800297e:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 8002980:	2082      	movs	r0, #130	; 0x82
 8002982:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 8002984:	682b      	ldr	r3, [r5, #0]
 8002986:	2082      	movs	r0, #130	; 0x82
 8002988:	68db      	ldr	r3, [r3, #12]
 800298a:	4798      	blx	r3
 800298c:	2000      	movs	r0, #0
    }

    return ret;
}
 800298e:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 8002990:	2001      	movs	r0, #1
 8002992:	e7fc      	b.n	800298e <_Z11BSP_TS_Inittt+0x2e>
 8002994:	200008e4 	.word	0x200008e4
 8002998:	20000054 	.word	0x20000054
 800299c:	200008e6 	.word	0x200008e6
 80029a0:	200008e8 	.word	0x200008e8

080029a4 <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 80029a4:	f44f 71a0 	mov.w	r1, #320	; 0x140
 80029a8:	20f0      	movs	r0, #240	; 0xf0
 80029aa:	f7ff bfd9 	b.w	8002960 <_Z11BSP_TS_Inittt>
	...

080029b0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 80029b0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 80029b2:	4d33      	ldr	r5, [pc, #204]	; (8002a80 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd0>)
 80029b4:	682b      	ldr	r3, [r5, #0]
{
 80029b6:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 80029b8:	691b      	ldr	r3, [r3, #16]
 80029ba:	2082      	movs	r0, #130	; 0x82
 80029bc:	4798      	blx	r3
 80029be:	b280      	uxth	r0, r0
 80029c0:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 80029c2:	2800      	cmp	r0, #0
 80029c4:	d04a      	beq.n	8002a5c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xac>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 80029c6:	682b      	ldr	r3, [r5, #0]
 80029c8:	f10d 0206 	add.w	r2, sp, #6
 80029cc:	695b      	ldr	r3, [r3, #20]
 80029ce:	a901      	add	r1, sp, #4
 80029d0:	2082      	movs	r0, #130	; 0x82
 80029d2:	4798      	blx	r3

        //Ensures the coordinates is within the screen
        if (y > 3700)
 80029d4:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80029d8:	f640 6274 	movw	r2, #3700	; 0xe74
 80029dc:	4293      	cmp	r3, r2
 80029de:	d93f      	bls.n	8002a60 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb0>
        {
            y = 3700;
 80029e0:	f8ad 2006 	strh.w	r2, [sp, #6]

        /* Y value first correction */
        y -= 180;

        /* Y value second correction */
        y = 3520 - y;
 80029e4:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80029e8:	1ad2      	subs	r2, r2, r3
 80029ea:	b292      	uxth	r2, r2

        /* Y value third correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 80029ec:	2a0a      	cmp	r2, #10
 80029ee:	d93d      	bls.n	8002a6c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xbc>
        yr = y / 11;
 80029f0:	230b      	movs	r3, #11
 80029f2:	fbb2 f2f3 	udiv	r2, r2, r3
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 80029f6:	4b23      	ldr	r3, [pc, #140]	; (8002a84 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd4>)
 80029f8:	881b      	ldrh	r3, [r3, #0]
 80029fa:	429a      	cmp	r2, r3
 80029fc:	d901      	bls.n	8002a02 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
        {
            yr = TsYBoundary - 1;
 80029fe:	3b01      	subs	r3, #1
 8002a00:	b29a      	uxth	r2, r3
        {
        }
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 8002a02:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8002a06:	f640 31b8 	movw	r1, #3000	; 0xbb8
 8002a0a:	428b      	cmp	r3, r1
 8002a0c:	d830      	bhi.n	8002a70 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc0>
        {
            x = 3870 - x;
 8002a0e:	f5c3 6371 	rsb	r3, r3, #3856	; 0xf10
 8002a12:	330e      	adds	r3, #14
 8002a14:	b29b      	uxth	r3, r3
        {
            x = 3800 - x;
        }

        /* X value second correction */
        xr = x / 15;
 8002a16:	210f      	movs	r1, #15
 8002a18:	fbb3 f3f1 	udiv	r3, r3, r1
        /* Return X position value */
        if (xr <= 0)
        {
            xr = 0;
        }
        else if (xr > TsXBoundary)
 8002a1c:	491a      	ldr	r1, [pc, #104]	; (8002a88 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd8>)
 8002a1e:	8809      	ldrh	r1, [r1, #0]
 8002a20:	428b      	cmp	r3, r1
 8002a22:	d901      	bls.n	8002a28 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
        {
            xr = TsXBoundary - 1;
 8002a24:	3901      	subs	r1, #1
 8002a26:	b28b      	uxth	r3, r1
        else
        {
        }

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 8002a28:	4e18      	ldr	r6, [pc, #96]	; (8002a8c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xdc>)
        yDiff = y > _y ? (y - _y) : (_y - y);
 8002a2a:	4d19      	ldr	r5, [pc, #100]	; (8002a90 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe0>)
        xDiff = x > _x ? (x - _x) : (_x - x);
 8002a2c:	6830      	ldr	r0, [r6, #0]
        yDiff = y > _y ? (y - _y) : (_y - y);
 8002a2e:	682f      	ldr	r7, [r5, #0]
        xDiff = x > _x ? (x - _x) : (_x - x);
 8002a30:	4283      	cmp	r3, r0
 8002a32:	b281      	uxth	r1, r0
 8002a34:	bf8c      	ite	hi
 8002a36:	1a59      	subhi	r1, r3, r1
 8002a38:	1ac9      	subls	r1, r1, r3
        yDiff = y > _y ? (y - _y) : (_y - y);
 8002a3a:	b2b8      	uxth	r0, r7
 8002a3c:	42ba      	cmp	r2, r7
 8002a3e:	bf8c      	ite	hi
 8002a40:	1a10      	subhi	r0, r2, r0
 8002a42:	1a80      	subls	r0, r0, r2
        xDiff = x > _x ? (x - _x) : (_x - x);
 8002a44:	b289      	uxth	r1, r1
        yDiff = y > _y ? (y - _y) : (_y - y);
 8002a46:	b280      	uxth	r0, r0

        if (xDiff + yDiff > 5)
 8002a48:	4401      	add	r1, r0
 8002a4a:	2905      	cmp	r1, #5
        {
            _x = x;
 8002a4c:	bfc8      	it	gt
 8002a4e:	6033      	strgt	r3, [r6, #0]
            _y = y;
        }

        /* Update the X position */
        TsState->X = _x;
 8002a50:	6833      	ldr	r3, [r6, #0]
            _y = y;
 8002a52:	bfc8      	it	gt
 8002a54:	602a      	strgt	r2, [r5, #0]
        TsState->X = _x;
 8002a56:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 8002a58:	682b      	ldr	r3, [r5, #0]
 8002a5a:	80a3      	strh	r3, [r4, #4]
    }
}
 8002a5c:	b003      	add	sp, #12
 8002a5e:	bdf0      	pop	{r4, r5, r6, r7, pc}
        else if (y < 180)
 8002a60:	2bb3      	cmp	r3, #179	; 0xb3
            y = 180;
 8002a62:	bf9c      	itt	ls
 8002a64:	23b4      	movls	r3, #180	; 0xb4
 8002a66:	f8ad 3006 	strhls.w	r3, [sp, #6]
 8002a6a:	e7bb      	b.n	80029e4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x34>
            yr = 0;
 8002a6c:	2200      	movs	r2, #0
 8002a6e:	e7c8      	b.n	8002a02 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
            x = 3800 - x;
 8002a70:	f5c3 636d 	rsb	r3, r3, #3792	; 0xed0
 8002a74:	3308      	adds	r3, #8
 8002a76:	b29b      	uxth	r3, r3
        if (xr <= 0)
 8002a78:	2b0e      	cmp	r3, #14
 8002a7a:	d8cc      	bhi.n	8002a16 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x66>
            xr = 0;
 8002a7c:	2300      	movs	r3, #0
 8002a7e:	e7d3      	b.n	8002a28 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
 8002a80:	200008e8 	.word	0x200008e8
 8002a84:	200008e6 	.word	0x200008e6
 8002a88:	200008e4 	.word	0x200008e4
 8002a8c:	200008ec 	.word	0x200008ec
 8002a90:	200008f0 	.word	0x200008f0

08002a94 <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 8002a94:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 8002a96:	4668      	mov	r0, sp
{
 8002a98:	460d      	mov	r5, r1
 8002a9a:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 8002a9c:	f7ff ff88 	bl	80029b0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8002aa0:	f8bd 0000 	ldrh.w	r0, [sp]
 8002aa4:	b148      	cbz	r0, 8002aba <_ZN20STM32TouchController11sampleTouchERlS0_+0x26>
        x = state.X;
 8002aa6:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8002aaa:	602b      	str	r3, [r5, #0]
        y = state.Y;
 8002aac:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8002ab0:	6023      	str	r3, [r4, #0]
        sleep_timeout_value = 60;
 8002ab2:	4b03      	ldr	r3, [pc, #12]	; (8002ac0 <_ZN20STM32TouchController11sampleTouchERlS0_+0x2c>)
 8002ab4:	223c      	movs	r2, #60	; 0x3c
 8002ab6:	601a      	str	r2, [r3, #0]
        return true;
 8002ab8:	2001      	movs	r0, #1
}
 8002aba:	b003      	add	sp, #12
 8002abc:	bd30      	pop	{r4, r5, pc}
 8002abe:	bf00      	nop
 8002ac0:	20000010 	.word	0x20000010

08002ac4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 8002ac4:	b110      	cbz	r0, 8002acc <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x8>
 8002ac6:	2802      	cmp	r0, #2
 8002ac8:	d009      	beq.n	8002ade <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1a>
 8002aca:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 8002acc:	4b07      	ldr	r3, [pc, #28]	; (8002aec <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>)
 8002ace:	681a      	ldr	r2, [r3, #0]
 8002ad0:	fab2 f282 	clz	r2, r2
 8002ad4:	0952      	lsrs	r2, r2, #5
 8002ad6:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 8002ad8:	4805      	ldr	r0, [pc, #20]	; (8002af0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2c>)
 8002ada:	f009 b94f 	b.w	800bd7c <HAL_GPIO_WritePin>
 8002ade:	4b03      	ldr	r3, [pc, #12]	; (8002aec <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>)
 8002ae0:	689a      	ldr	r2, [r3, #8]
 8002ae2:	fab2 f282 	clz	r2, r2
 8002ae6:	0952      	lsrs	r2, r2, #5
 8002ae8:	2110      	movs	r1, #16
 8002aea:	e7f5      	b.n	8002ad8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x14>
 8002aec:	200008f4 	.word	0x200008f4
 8002af0:	40021000 	.word	0x40021000

08002af4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 8002af4:	b110      	cbz	r0, 8002afc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x8>
 8002af6:	2802      	cmp	r0, #2
 8002af8:	d009      	beq.n	8002b0e <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1a>
 8002afa:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 8002afc:	4b07      	ldr	r3, [pc, #28]	; (8002b1c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>)
 8002afe:	681a      	ldr	r2, [r3, #0]
 8002b00:	3a00      	subs	r2, #0
 8002b02:	bf18      	it	ne
 8002b04:	2201      	movne	r2, #1
 8002b06:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 8002b08:	4805      	ldr	r0, [pc, #20]	; (8002b20 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2c>)
 8002b0a:	f009 b937 	b.w	800bd7c <HAL_GPIO_WritePin>
 8002b0e:	4b03      	ldr	r3, [pc, #12]	; (8002b1c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>)
 8002b10:	689a      	ldr	r2, [r3, #8]
 8002b12:	3a00      	subs	r2, #0
 8002b14:	bf18      	it	ne
 8002b16:	2201      	movne	r2, #1
 8002b18:	2110      	movs	r1, #16
 8002b1a:	e7f5      	b.n	8002b08 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x14>
 8002b1c:	200008f4 	.word	0x200008f4
 8002b20:	40021000 	.word	0x40021000

08002b24 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 8002b24:	b110      	cbz	r0, 8002b2c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x8>
 8002b26:	2802      	cmp	r0, #2
 8002b28:	d004      	beq.n	8002b34 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x10>
 8002b2a:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8002b2c:	2104      	movs	r1, #4
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8002b2e:	4802      	ldr	r0, [pc, #8]	; (8002b38 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x14>)
 8002b30:	f009 b928 	b.w	800bd84 <HAL_GPIO_TogglePin>
 8002b34:	2110      	movs	r1, #16
 8002b36:	e7fa      	b.n	8002b2e <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xa>
 8002b38:	40021000 	.word	0x40021000

08002b3c <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 8002b3c:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 8002b3e:	b130      	cbz	r0, 8002b4e <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x12>
 8002b40:	2802      	cmp	r0, #2
 8002b42:	d009      	beq.n	8002b58 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x1c>
 8002b44:	2000      	movs	r0, #0
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 8002b46:	1e43      	subs	r3, r0, #1
 8002b48:	4258      	negs	r0, r3
 8002b4a:	4158      	adcs	r0, r3
 8002b4c:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8002b4e:	2104      	movs	r1, #4
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8002b50:	4802      	ldr	r0, [pc, #8]	; (8002b5c <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x20>)
 8002b52:	f009 f90d 	bl	800bd70 <HAL_GPIO_ReadPin>
        break;
 8002b56:	e7f6      	b.n	8002b46 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0xa>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8002b58:	2110      	movs	r1, #16
 8002b5a:	e7f9      	b.n	8002b50 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x14>
 8002b5c:	40021000 	.word	0x40021000

08002b60 <_ZN8touchgfx4GPIO4initEv>:
{
 8002b60:	b570      	push	{r4, r5, r6, lr}
 8002b62:	4d08      	ldr	r5, [pc, #32]	; (8002b84 <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 8002b64:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 8002b66:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 8002b68:	b2e0      	uxtb	r0, r4
 8002b6a:	f7ff ffe7 	bl	8002b3c <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 8002b6e:	b118      	cbz	r0, 8002b78 <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 8002b70:	682b      	ldr	r3, [r5, #0]
 8002b72:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 8002b74:	bf18      	it	ne
 8002b76:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 8002b78:	3401      	adds	r4, #1
 8002b7a:	2c05      	cmp	r4, #5
 8002b7c:	f105 0504 	add.w	r5, r5, #4
 8002b80:	d1f2      	bne.n	8002b68 <_ZN8touchgfx4GPIO4initEv+0x8>
}
 8002b82:	bd70      	pop	{r4, r5, r6, pc}
 8002b84:	200008f4 	.word	0x200008f4

08002b88 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8002b88:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8002b8a:	f880 1078 	strb.w	r1, [r0, #120]	; 0x78
        displayOrientationChangeRequested = true;
 8002b8e:	f880 3079 	strb.w	r3, [r0, #121]	; 0x79
    }
 8002b92:	4770      	bx	lr

08002b94 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 8002b94:	2000      	movs	r0, #0
 8002b96:	4770      	bx	lr

08002b98 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8002b98:	4b03      	ldr	r3, [pc, #12]	; (8002ba8 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 8002b9a:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8002b9c:	3900      	subs	r1, #0
 8002b9e:	bf18      	it	ne
 8002ba0:	2101      	movne	r1, #1
 8002ba2:	7019      	strb	r1, [r3, #0]
    }
 8002ba4:	4770      	bx	lr
 8002ba6:	bf00      	nop
 8002ba8:	2001383b 	.word	0x2001383b

08002bac <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8002bac:	2000      	movs	r0, #0
 8002bae:	4770      	bx	lr

08002bb0 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8002bb0:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8002bb2:	b10b      	cbz	r3, 8002bb8 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8002bb4:	4608      	mov	r0, r1
 8002bb6:	4718      	bx	r3
        }
    }
 8002bb8:	4770      	bx	lr

08002bba <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 8002bba:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8002bbe:	4770      	bx	lr

08002bc0 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8002bc0:	6840      	ldr	r0, [r0, #4]
 8002bc2:	6803      	ldr	r3, [r0, #0]
 8002bc4:	699b      	ldr	r3, [r3, #24]
 8002bc6:	4718      	bx	r3

08002bc8 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8002bc8:	4770      	bx	lr

08002bca <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 8002bca:	4770      	bx	lr

08002bcc <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8002bcc:	4770      	bx	lr
	...

08002bd0 <_ZN11TouchGFXHAL10initializeEv>:
LOCATION_PRAGMA("TouchGFX_Framebuffer")
uint32_t animationStorage[(240 * 320 * 2 + 3) / 4] LOCATION_ATTRIBUTE("TouchGFX_Framebuffer");
}

void TouchGFXHAL::initialize()
{
 8002bd0:	b510      	push	{r4, lr}
 8002bd2:	4604      	mov	r4, r0
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 8002bd4:	f000 fb4e 	bl	8003274 <_ZN20TouchGFXGeneratedHAL10initializeEv>

    // Add animation storage
    setAnimationStorage((void*)animationStorage);
 8002bd8:	6823      	ldr	r3, [r4, #0]
 8002bda:	4903      	ldr	r1, [pc, #12]	; (8002be8 <_ZN11TouchGFXHAL10initializeEv+0x18>)
 8002bdc:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8002be0:	4620      	mov	r0, r4
}
 8002be2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    setAnimationStorage((void*)animationStorage);
 8002be6:	4718      	bx	r3
 8002be8:	d0000000 	.word	0xd0000000

08002bec <_ZN11TouchGFXHAL9taskEntryEv>:

void TouchGFXHAL::taskEntry()
{
 8002bec:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 8002bee:	6803      	ldr	r3, [r0, #0]
{
 8002bf0:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 8002bf2:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8002bf6:	4798      	blx	r3
    enableInterrupts();
 8002bf8:	6823      	ldr	r3, [r4, #0]
 8002bfa:	4620      	mov	r0, r4
 8002bfc:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8002bfe:	4798      	blx	r3

    OSWrappers::waitForVSync();
 8002c00:	f000 f8ec 	bl	8002ddc <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 8002c04:	6823      	ldr	r3, [r4, #0]
 8002c06:	4620      	mov	r0, r4
 8002c08:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002c0a:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 8002c0c:	2029      	movs	r0, #41	; 0x29
 8002c0e:	f7ff f923 	bl	8001e58 <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 8002c12:	f000 f8e3 	bl	8002ddc <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 8002c16:	6823      	ldr	r3, [r4, #0]
 8002c18:	4620      	mov	r0, r4
 8002c1a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002c1c:	4798      	blx	r3
    for (;;)
 8002c1e:	e7f8      	b.n	8002c12 <_ZN11TouchGFXHAL9taskEntryEv+0x26>

08002c20 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 8002c20:	b510      	push	{r4, lr}
 8002c22:	4604      	mov	r4, r0
        swapFrameBuffers();
 8002c24:	f011 fa8a 	bl	801413c <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8002c28:	6823      	ldr	r3, [r4, #0]
 8002c2a:	4620      	mov	r0, r4
 8002c2c:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 8002c30:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 8002c34:	4718      	bx	r3

08002c36 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 8002c36:	f000 bb0f 	b.w	8003258 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

08002c3a <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 8002c3a:	f000 bb13 	b.w	8003264 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

08002c3e <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 8002c3e:	f000 bb37 	b.w	80032b0 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

08002c42 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 8002c42:	f000 badf 	b.w	8003204 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

08002c46 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 8002c46:	f000 bae5 	b.w	8003214 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

08002c4a <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 8002c4a:	f000 bb3d 	b.w	80032c8 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

08002c4e <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8002c4e:	f000 bae9 	b.w	8003224 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

08002c52 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 8002c52:	f010 bcde 	b.w	8013612 <_ZN8touchgfx3HAL16flushFrameBufferEv>

08002c56 <_ZN11TouchGFXHALD0Ev>:
 8002c56:	b510      	push	{r4, lr}
 8002c58:	217c      	movs	r1, #124	; 0x7c
 8002c5a:	4604      	mov	r4, r0
 8002c5c:	f029 ff91 	bl	802cb82 <_ZdlPvj>
 8002c60:	4620      	mov	r0, r4
 8002c62:	bd10      	pop	{r4, pc}

08002c64 <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 8002c64:	f890 307a 	ldrb.w	r3, [r0, #122]	; 0x7a
 8002c68:	b11b      	cbz	r3, 8002c72 <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 8002c6a:	6840      	ldr	r0, [r0, #4]
 8002c6c:	6803      	ldr	r3, [r0, #0]
 8002c6e:	681b      	ldr	r3, [r3, #0]
 8002c70:	4718      	bx	r3
    }
 8002c72:	4618      	mov	r0, r3
 8002c74:	4770      	bx	lr
	...

08002c78 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 8002c78:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 8002c7a:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 8002c7e:	f890 4078 	ldrb.w	r4, [r0, #120]	; 0x78
            if (DISPLAY_ROTATION == rotate0)
 8002c82:	4b0c      	ldr	r3, [pc, #48]	; (8002cb4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 8002c84:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 8002c86:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 8002c88:	d009      	beq.n	8002c9e <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 8002c8a:	b93a      	cbnz	r2, 8002c9c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8002c8c:	4a0a      	ldr	r2, [pc, #40]	; (8002cb8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 8002c8e:	490b      	ldr	r1, [pc, #44]	; (8002cbc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8002c90:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 8002c92:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 8002c94:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8002c96:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 8002c98:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 8002c9a:	701a      	strb	r2, [r3, #0]
    }
 8002c9c:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8002c9e:	2a00      	cmp	r2, #0
 8002ca0:	d0fc      	beq.n	8002c9c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8002ca2:	4a05      	ldr	r2, [pc, #20]	; (8002cb8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 8002ca4:	4905      	ldr	r1, [pc, #20]	; (8002cbc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8002ca6:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 8002ca8:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 8002caa:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8002cac:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 8002cae:	2200      	movs	r2, #0
 8002cb0:	e7f3      	b.n	8002c9a <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 8002cb2:	bf00      	nop
 8002cb4:	20013834 	.word	0x20013834
 8002cb8:	20013830 	.word	0x20013830
 8002cbc:	20013832 	.word	0x20013832

08002cc0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8002cc0:	b570      	push	{r4, r5, r6, lr}
 8002cc2:	460d      	mov	r5, r1
 8002cc4:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 8002cc6:	b935      	cbnz	r5, 8002cd6 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 8002cc8:	4b09      	ldr	r3, [pc, #36]	; (8002cf0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 8002cca:	4a0a      	ldr	r2, [pc, #40]	; (8002cf4 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8002ccc:	480a      	ldr	r0, [pc, #40]	; (8002cf8 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 8002cce:	f240 21d2 	movw	r1, #722	; 0x2d2
 8002cd2:	f02a fe3d 	bl	802d950 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 8002cd6:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8002cda:	4b08      	ldr	r3, [pc, #32]	; (8002cfc <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 8002cdc:	3a00      	subs	r2, #0
 8002cde:	bf18      	it	ne
 8002ce0:	2201      	movne	r2, #1
 8002ce2:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8002ce4:	6803      	ldr	r3, [r0, #0]
    }
 8002ce6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 8002cea:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8002cee:	4718      	bx	r3
 8002cf0:	0802eb9c 	.word	0x0802eb9c
 8002cf4:	0802ebd4 	.word	0x0802ebd4
 8002cf8:	0802ec22 	.word	0x0802ec22
 8002cfc:	2001383a 	.word	0x2001383a

08002d00 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 8002d00:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 8002d02:	4b09      	ldr	r3, [pc, #36]	; (8002d28 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 8002d04:	881b      	ldrh	r3, [r3, #0]
 8002d06:	428b      	cmp	r3, r1
 8002d08:	d803      	bhi.n	8002d12 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 8002d0a:	4b08      	ldr	r3, [pc, #32]	; (8002d2c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 8002d0c:	881b      	ldrh	r3, [r3, #0]
 8002d0e:	4293      	cmp	r3, r2
 8002d10:	d905      	bls.n	8002d1e <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 8002d12:	4b07      	ldr	r3, [pc, #28]	; (8002d30 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 8002d14:	4a07      	ldr	r2, [pc, #28]	; (8002d34 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 8002d16:	4808      	ldr	r0, [pc, #32]	; (8002d38 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 8002d18:	219e      	movs	r1, #158	; 0x9e
 8002d1a:	f02a fe19 	bl	802d950 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 8002d1e:	4b07      	ldr	r3, [pc, #28]	; (8002d3c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 8002d20:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 8002d22:	4b07      	ldr	r3, [pc, #28]	; (8002d40 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 8002d24:	801a      	strh	r2, [r3, #0]
    }
 8002d26:	bd08      	pop	{r3, pc}
 8002d28:	20013830 	.word	0x20013830
 8002d2c:	20013832 	.word	0x20013832
 8002d30:	0802ec67 	.word	0x0802ec67
 8002d34:	0802ecca 	.word	0x0802ecca
 8002d38:	0802ec22 	.word	0x0802ec22
 8002d3c:	20013836 	.word	0x20013836
 8002d40:	20013838 	.word	0x20013838

08002d44 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8002d44:	2101      	movs	r1, #1
{
 8002d46:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8002d48:	2200      	movs	r2, #0
 8002d4a:	4608      	mov	r0, r1
 8002d4c:	f00c fdfa 	bl	800f944 <osSemaphoreNew>
 8002d50:	4b0a      	ldr	r3, [pc, #40]	; (8002d7c <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 8002d52:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8002d54:	b928      	cbnz	r0, 8002d62 <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 8002d56:	4b0a      	ldr	r3, [pc, #40]	; (8002d80 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8002d58:	4a0a      	ldr	r2, [pc, #40]	; (8002d84 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8002d5a:	2128      	movs	r1, #40	; 0x28

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8002d5c:	480a      	ldr	r0, [pc, #40]	; (8002d88 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8002d5e:	f02a fdf7 	bl	802d950 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8002d62:	2200      	movs	r2, #0
 8002d64:	2104      	movs	r1, #4
 8002d66:	2001      	movs	r0, #1
 8002d68:	f00c fea0 	bl	800faac <osMessageQueueNew>
 8002d6c:	4b07      	ldr	r3, [pc, #28]	; (8002d8c <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8002d6e:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8002d70:	b918      	cbnz	r0, 8002d7a <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8002d72:	4b07      	ldr	r3, [pc, #28]	; (8002d90 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8002d74:	4a03      	ldr	r2, [pc, #12]	; (8002d84 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8002d76:	212c      	movs	r1, #44	; 0x2c
 8002d78:	e7f0      	b.n	8002d5c <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8002d7a:	bd08      	pop	{r3, pc}
 8002d7c:	20000908 	.word	0x20000908
 8002d80:	0802ede8 	.word	0x0802ede8
 8002d84:	0802ee31 	.word	0x0802ee31
 8002d88:	0802ee60 	.word	0x0802ee60
 8002d8c:	20000904 	.word	0x20000904
 8002d90:	0802eeda 	.word	0x0802eeda

08002d94 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8002d94:	4b02      	ldr	r3, [pc, #8]	; (8002da0 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8002d96:	f04f 31ff 	mov.w	r1, #4294967295
 8002d9a:	6818      	ldr	r0, [r3, #0]
 8002d9c:	f00c be26 	b.w	800f9ec <osSemaphoreAcquire>
 8002da0:	20000908 	.word	0x20000908

08002da4 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8002da4:	4b01      	ldr	r3, [pc, #4]	; (8002dac <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8002da6:	6818      	ldr	r0, [r3, #0]
 8002da8:	f00c be54 	b.w	800fa54 <osSemaphoreRelease>
 8002dac:	20000908 	.word	0x20000908

08002db0 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8002db0:	4b02      	ldr	r3, [pc, #8]	; (8002dbc <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8002db2:	2100      	movs	r1, #0
 8002db4:	6818      	ldr	r0, [r3, #0]
 8002db6:	f00c be19 	b.w	800f9ec <osSemaphoreAcquire>
 8002dba:	bf00      	nop
 8002dbc:	20000908 	.word	0x20000908

08002dc0 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8002dc0:	f7ff bff0 	b.w	8002da4 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08002dc4 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8002dc4:	4803      	ldr	r0, [pc, #12]	; (8002dd4 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8002dc6:	4904      	ldr	r1, [pc, #16]	; (8002dd8 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8002dc8:	6800      	ldr	r0, [r0, #0]
 8002dca:	2300      	movs	r3, #0
 8002dcc:	461a      	mov	r2, r3
 8002dce:	f00c bea7 	b.w	800fb20 <osMessageQueuePut>
 8002dd2:	bf00      	nop
 8002dd4:	20000904 	.word	0x20000904
 8002dd8:	20000014 	.word	0x20000014

08002ddc <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8002ddc:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8002dde:	4c08      	ldr	r4, [pc, #32]	; (8002e00 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8002de0:	2300      	movs	r3, #0
 8002de2:	461a      	mov	r2, r3
 8002de4:	a901      	add	r1, sp, #4
 8002de6:	6820      	ldr	r0, [r4, #0]
 8002de8:	f00c fed0 	bl	800fb8c <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8002dec:	6820      	ldr	r0, [r4, #0]
 8002dee:	f04f 33ff 	mov.w	r3, #4294967295
 8002df2:	2200      	movs	r2, #0
 8002df4:	a901      	add	r1, sp, #4
 8002df6:	f00c fec9 	bl	800fb8c <osMessageQueueGet>
}
 8002dfa:	b002      	add	sp, #8
 8002dfc:	bd10      	pop	{r4, pc}
 8002dfe:	bf00      	nop
 8002e00:	20000904 	.word	0x20000904

08002e04 <_ZN8touchgfx13DMA_Interface10initializeEv>:
    }

    /** Perform initialization. Does nothing in this base class. */
    virtual void initialize()
    {
    }
 8002e04:	4770      	bx	lr

08002e06 <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType()
    {
        return DMA_TYPE_GENERIC;
    }
 8002e06:	2000      	movs	r0, #0
 8002e08:	4770      	bx	lr

08002e0a <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     * @brief Does nothing.
     */
    virtual void signalDMAInterrupt()
    {
    }
 8002e0a:	4770      	bx	lr

08002e0c <_ZN8STM32DMA5flushEv>:
     * @brief Block until all DMA transfers are complete. Since this particular DMA does not do
     * anything, return immediately.
     */
    virtual void flush()
    {
    }
 8002e0c:	4770      	bx	lr

08002e0e <_ZN8STM32DMA11getBlitCapsEv>:
}

touchgfx::BlitOperations STM32DMA::getBlitCaps()
{
    return static_cast<touchgfx::BlitOperations>(0);
}
 8002e0e:	2000      	movs	r0, #0
 8002e10:	4770      	bx	lr

08002e12 <_ZN8STM32DMAD1Ev>:
class STM32DMA : public touchgfx::DMA_Interface
 8002e12:	4770      	bx	lr

08002e14 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:

void STM32DMA::setupDataCopy(const touchgfx::BlitOp& blitOp)
{
 8002e14:	b508      	push	{r3, lr}
    assert(0 && "DMA operation not supported");
 8002e16:	4a03      	ldr	r2, [pc, #12]	; (8002e24 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x10>)
 8002e18:	4b03      	ldr	r3, [pc, #12]	; (8002e28 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14>)
 8002e1a:	4804      	ldr	r0, [pc, #16]	; (8002e2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18>)
 8002e1c:	2122      	movs	r1, #34	; 0x22
 8002e1e:	f02a fd97 	bl	802d950 <__assert_func>
 8002e22:	bf00      	nop
 8002e24:	0802ef3f 	.word	0x0802ef3f
 8002e28:	0802ef1c 	.word	0x0802ef1c
 8002e2c:	0802ef7d 	.word	0x0802ef7d

08002e30 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
}

void STM32DMA::setupDataFill(const touchgfx::BlitOp& blitOp)
{
 8002e30:	b508      	push	{r3, lr}
    assert(0 && "DMA operation not supported");
 8002e32:	4a03      	ldr	r2, [pc, #12]	; (8002e40 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x10>)
 8002e34:	4b03      	ldr	r3, [pc, #12]	; (8002e44 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x14>)
 8002e36:	4804      	ldr	r0, [pc, #16]	; (8002e48 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x18>)
 8002e38:	2127      	movs	r1, #39	; 0x27
 8002e3a:	f02a fd89 	bl	802d950 <__assert_func>
 8002e3e:	bf00      	nop
 8002e40:	0802eff5 	.word	0x0802eff5
 8002e44:	0802ef1c 	.word	0x0802ef1c
 8002e48:	0802ef7d 	.word	0x0802ef7d

08002e4c <_ZN8STM32DMAD0Ev>:
 8002e4c:	b510      	push	{r4, lr}
 8002e4e:	2144      	movs	r1, #68	; 0x44
 8002e50:	4604      	mov	r4, r0
 8002e52:	f029 fe96 	bl	802cb82 <_ZdlPvj>
 8002e56:	4620      	mov	r0, r4
 8002e58:	bd10      	pop	{r4, pc}
	...

08002e5c <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8002e5c:	b538      	push	{r3, r4, r5, lr}
 8002e5e:	4604      	mov	r4, r0
    : DMA_Interface(q), q(&b, 1)
 8002e60:	4621      	mov	r1, r4
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8002e62:	2500      	movs	r5, #0
 8002e64:	4b06      	ldr	r3, [pc, #24]	; (8002e80 <_ZN8STM32DMAC1Ev+0x24>)
 8002e66:	7225      	strb	r5, [r4, #8]
 8002e68:	300c      	adds	r0, #12
 8002e6a:	6060      	str	r0, [r4, #4]
 8002e6c:	7265      	strb	r5, [r4, #9]
 8002e6e:	2201      	movs	r2, #1
 8002e70:	f841 3b20 	str.w	r3, [r1], #32
 8002e74:	f011 faba 	bl	80143ec <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 8002e78:	62e5      	str	r5, [r4, #44]	; 0x2c
}
 8002e7a:	4620      	mov	r0, r4
 8002e7c:	bd38      	pop	{r3, r4, r5, pc}
 8002e7e:	bf00      	nop
 8002e80:	0802f03c 	.word	0x0802f03c

08002e84 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8002e84:	2001      	movs	r0, #1
 8002e86:	4770      	bx	lr

08002e88 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8002e88:	2038      	movs	r0, #56	; 0x38
 8002e8a:	4770      	bx	lr

08002e8c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8002e8c:	2338      	movs	r3, #56	; 0x38
 8002e8e:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8002e92:	3008      	adds	r0, #8
 8002e94:	4770      	bx	lr

08002e96 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8002e96:	2338      	movs	r3, #56	; 0x38
 8002e98:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8002e9c:	3008      	adds	r0, #8
 8002e9e:	4770      	bx	lr

08002ea0 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8002ea0:	2001      	movs	r0, #1
 8002ea2:	4770      	bx	lr

08002ea4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8002ea4:	f641 5004 	movw	r0, #7428	; 0x1d04
 8002ea8:	4770      	bx	lr

08002eaa <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8002eaa:	f641 5304 	movw	r3, #7428	; 0x1d04
 8002eae:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8002eb2:	3008      	adds	r0, #8
 8002eb4:	4770      	bx	lr

08002eb6 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8002eb6:	f641 5304 	movw	r3, #7428	; 0x1d04
 8002eba:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8002ebe:	3008      	adds	r0, #8
 8002ec0:	4770      	bx	lr

08002ec2 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8002ec2:	2001      	movs	r0, #1
 8002ec4:	4770      	bx	lr

08002ec6 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8002ec6:	2010      	movs	r0, #16
 8002ec8:	4770      	bx	lr

08002eca <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8002eca:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8002ece:	3008      	adds	r0, #8
 8002ed0:	4770      	bx	lr

08002ed2 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8002ed2:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8002ed6:	3008      	adds	r0, #8
 8002ed8:	4770      	bx	lr

08002eda <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoMain_MenuScreenNoTransition();
 8002eda:	4608      	mov	r0, r1
 8002edc:	f002 bb40 	b.w	8005560 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>

08002ee0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8002ee0:	b510      	push	{r4, lr}
 8002ee2:	4b03      	ldr	r3, [pc, #12]	; (8002ef0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 8002ee4:	6003      	str	r3, [r0, #0]
 8002ee6:	4604      	mov	r4, r0
 8002ee8:	f00f faa9 	bl	801243e <_ZN8touchgfx17AbstractPartitionD1Ev>
 8002eec:	4620      	mov	r0, r4
 8002eee:	bd10      	pop	{r4, pc}
 8002ef0:	0802f0f4 	.word	0x0802f0f4

08002ef4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 8002ef4:	b510      	push	{r4, lr}
 8002ef6:	4604      	mov	r4, r0
 8002ef8:	f7ff fff2 	bl	8002ee0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8002efc:	4620      	mov	r0, r4
 8002efe:	2140      	movs	r1, #64	; 0x40
 8002f00:	f029 fe3f 	bl	802cb82 <_ZdlPvj>
 8002f04:	4620      	mov	r0, r4
 8002f06:	bd10      	pop	{r4, pc}

08002f08 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8002f08:	b510      	push	{r4, lr}
 8002f0a:	4b03      	ldr	r3, [pc, #12]	; (8002f18 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8002f0c:	6003      	str	r3, [r0, #0]
 8002f0e:	4604      	mov	r4, r0
 8002f10:	f00f fa95 	bl	801243e <_ZN8touchgfx17AbstractPartitionD1Ev>
 8002f14:	4620      	mov	r0, r4
 8002f16:	bd10      	pop	{r4, pc}
 8002f18:	0802f0c0 	.word	0x0802f0c0

08002f1c <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8002f1c:	b510      	push	{r4, lr}
 8002f1e:	4604      	mov	r4, r0
 8002f20:	f7ff fff2 	bl	8002f08 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8002f24:	4620      	mov	r0, r4
 8002f26:	f641 510c 	movw	r1, #7436	; 0x1d0c
 8002f2a:	f029 fe2a 	bl	802cb82 <_ZdlPvj>
 8002f2e:	4620      	mov	r0, r4
 8002f30:	bd10      	pop	{r4, pc}
	...

08002f34 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8002f34:	b510      	push	{r4, lr}
 8002f36:	4b03      	ldr	r3, [pc, #12]	; (8002f44 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8002f38:	6003      	str	r3, [r0, #0]
 8002f3a:	4604      	mov	r4, r0
 8002f3c:	f00f fa7f 	bl	801243e <_ZN8touchgfx17AbstractPartitionD1Ev>
 8002f40:	4620      	mov	r0, r4
 8002f42:	bd10      	pop	{r4, pc}
 8002f44:	0802f08c 	.word	0x0802f08c

08002f48 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8002f48:	b510      	push	{r4, lr}
 8002f4a:	4604      	mov	r4, r0
 8002f4c:	f7ff fff2 	bl	8002f34 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8002f50:	4620      	mov	r0, r4
 8002f52:	2118      	movs	r1, #24
 8002f54:	f029 fe15 	bl	802cb82 <_ZdlPvj>
 8002f58:	4620      	mov	r0, r4
 8002f5a:	bd10      	pop	{r4, pc}

08002f5c <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8002f5c:	b510      	push	{r4, lr}
 8002f5e:	4b09      	ldr	r3, [pc, #36]	; (8002f84 <_ZN12FrontendHeapD1Ev+0x28>)
 8002f60:	6003      	str	r3, [r0, #0]
 8002f62:	4604      	mov	r4, r0
 8002f64:	f500 50e9 	add.w	r0, r0, #7456	; 0x1d20
 8002f68:	3018      	adds	r0, #24
 8002f6a:	f7ff ffb9 	bl	8002ee0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8002f6e:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8002f72:	f7ff ffc9 	bl	8002f08 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8002f76:	f104 0014 	add.w	r0, r4, #20
 8002f7a:	f7ff ffdb 	bl	8002f34 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8002f7e:	4620      	mov	r0, r4
 8002f80:	bd10      	pop	{r4, pc}
 8002f82:	bf00      	nop
 8002f84:	0802f128 	.word	0x0802f128

08002f88 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8002f88:	b508      	push	{r3, lr}
 8002f8a:	4802      	ldr	r0, [pc, #8]	; (8002f94 <__tcf_0+0xc>)
 8002f8c:	f7ff ffe6 	bl	8002f5c <_ZN12FrontendHeapD1Ev>
 8002f90:	bd08      	pop	{r3, pc}
 8002f92:	bf00      	nop
 8002f94:	20000910 	.word	0x20000910

08002f98 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8002f98:	b510      	push	{r4, lr}
 8002f9a:	4604      	mov	r4, r0
 8002f9c:	f7ff ffde 	bl	8002f5c <_ZN12FrontendHeapD1Ev>
 8002fa0:	4620      	mov	r0, r4
 8002fa2:	f641 61dc 	movw	r1, #7900	; 0x1edc
 8002fa6:	f029 fdec 	bl	802cb82 <_ZdlPvj>
 8002faa:	4620      	mov	r0, r4
 8002fac:	bd10      	pop	{r4, pc}
	...

08002fb0 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 8002fb0:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8002fb4:	f000 fa5c 	bl	8003470 <_ZN14BitmapDatabase11getInstanceEv>
 8002fb8:	4605      	mov	r5, r0
 8002fba:	f000 fa5d 	bl	8003478 <_ZN14BitmapDatabase15getInstanceSizeEv>
 8002fbe:	2400      	movs	r4, #0
 8002fc0:	4601      	mov	r1, r0
 8002fc2:	4623      	mov	r3, r4
 8002fc4:	4628      	mov	r0, r5
 8002fc6:	4622      	mov	r2, r4
 8002fc8:	9400      	str	r4, [sp, #0]
 8002fca:	f019 f92d 	bl	801c228 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8002fce:	4b26      	ldr	r3, [pc, #152]	; (8003068 <touchgfx_init+0xb8>)
 8002fd0:	4a26      	ldr	r2, [pc, #152]	; (800306c <touchgfx_init+0xbc>)
        static FrontendHeap instance;
 8002fd2:	4d27      	ldr	r5, [pc, #156]	; (8003070 <touchgfx_init+0xc0>)
 8002fd4:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8002fd6:	4620      	mov	r0, r4
 8002fd8:	f007 fb22 	bl	800a620 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8002fdc:	4825      	ldr	r0, [pc, #148]	; (8003074 <touchgfx_init+0xc4>)
 8002fde:	f019 f88b 	bl	801c0f8 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8002fe2:	682b      	ldr	r3, [r5, #0]
 8002fe4:	f3bf 8f5b 	dmb	ish
 8002fe8:	07db      	lsls	r3, r3, #31
 8002fea:	d436      	bmi.n	800305a <touchgfx_init+0xaa>
 8002fec:	4628      	mov	r0, r5
 8002fee:	f029 fdca 	bl	802cb86 <__cxa_guard_acquire>
 8002ff2:	b390      	cbz	r0, 800305a <touchgfx_init+0xaa>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
 8002ff4:	4c20      	ldr	r4, [pc, #128]	; (8003078 <touchgfx_init+0xc8>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8002ff6:	4b21      	ldr	r3, [pc, #132]	; (800307c <touchgfx_init+0xcc>)
          screenStorage(scr),
          transitionStorage(tra),
 8002ff8:	4f21      	ldr	r7, [pc, #132]	; (8003080 <touchgfx_init+0xd0>)
 8002ffa:	6023      	str	r3, [r4, #0]
          frontendApplication(app)
 8002ffc:	f504 56ec 	add.w	r6, r4, #7552	; 0x1d80
        : presenterStorage(pres),
 8003000:	f104 0014 	add.w	r0, r4, #20
          screenStorage(scr),
 8003004:	f104 082c 	add.w	r8, r4, #44	; 0x2c
        : presenterStorage(pres),
 8003008:	6060      	str	r0, [r4, #4]
          screenStorage(scr),
 800300a:	f8c4 8008 	str.w	r8, [r4, #8]
          transitionStorage(tra),
 800300e:	60e7      	str	r7, [r4, #12]
          frontendApplication(app)
 8003010:	6126      	str	r6, [r4, #16]
 8003012:	f00f fa15 	bl	8012440 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8003016:	4b1b      	ldr	r3, [pc, #108]	; (8003084 <touchgfx_init+0xd4>)
 8003018:	6163      	str	r3, [r4, #20]
 800301a:	4640      	mov	r0, r8
 800301c:	f00f fa10 	bl	8012440 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8003020:	4b19      	ldr	r3, [pc, #100]	; (8003088 <touchgfx_init+0xd8>)
 8003022:	62e3      	str	r3, [r4, #44]	; 0x2c
 8003024:	4638      	mov	r0, r7
 8003026:	f00f fa0b 	bl	8012440 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800302a:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 800302e:	4a17      	ldr	r2, [pc, #92]	; (800308c <touchgfx_init+0xdc>)
 8003030:	f8c3 2d38 	str.w	r2, [r3, #3384]	; 0xd38
 8003034:	f603 5078 	addw	r0, r3, #3448	; 0xd78
 8003038:	f007 ff50 	bl	800aedc <_ZN5ModelC1Ev>
 800303c:	4622      	mov	r2, r4
 800303e:	f1a6 0108 	sub.w	r1, r6, #8
 8003042:	4630      	mov	r0, r6
 8003044:	f007 fc72 	bl	800a92c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8003048:	4630      	mov	r0, r6
 800304a:	f002 fa89 	bl	8005560 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>
        static FrontendHeap instance;
 800304e:	4810      	ldr	r0, [pc, #64]	; (8003090 <touchgfx_init+0xe0>)
 8003050:	f02a fc9c 	bl	802d98c <atexit>
 8003054:	4628      	mov	r0, r5
 8003056:	f029 fda2 	bl	802cb9e <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 800305a:	480e      	ldr	r0, [pc, #56]	; (8003094 <touchgfx_init+0xe4>)
}
 800305c:	b002      	add	sp, #8
 800305e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8003062:	f7ff bdb5 	b.w	8002bd0 <_ZN11TouchGFXHAL10initializeEv>
 8003066:	bf00      	nop
 8003068:	200138a0 	.word	0x200138a0
 800306c:	200028b0 	.word	0x200028b0
 8003070:	2000090c 	.word	0x2000090c
 8003074:	20000018 	.word	0x20000018
 8003078:	20000910 	.word	0x20000910
 800307c:	0802f128 	.word	0x0802f128
 8003080:	20002648 	.word	0x20002648
 8003084:	0802f08c 	.word	0x0802f08c
 8003088:	0802f0c0 	.word	0x0802f0c0
 800308c:	0802f0f4 	.word	0x0802f0f4
 8003090:	08002f89 	.word	0x08002f89
 8003094:	20002834 	.word	0x20002834

08003098 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
 8003098:	4770      	bx	lr
	...

0800309c <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 800309c:	4801      	ldr	r0, [pc, #4]	; (80030a4 <touchgfx_taskEntry+0x8>)
 800309e:	f7ff bda5 	b.w	8002bec <_ZN11TouchGFXHAL9taskEntryEv>
 80030a2:	bf00      	nop
 80030a4:	20002834 	.word	0x20002834

080030a8 <_GLOBAL__sub_I_touchgfx_init>:
}
 80030a8:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 80030aa:	4e22      	ldr	r6, [pc, #136]	; (8003134 <_GLOBAL__sub_I_touchgfx_init+0x8c>)
{
public:

    STM32TouchController() {}
 80030ac:	4c22      	ldr	r4, [pc, #136]	; (8003138 <_GLOBAL__sub_I_touchgfx_init+0x90>)
static LCD16bpp display;
 80030ae:	4d23      	ldr	r5, [pc, #140]	; (800313c <_GLOBAL__sub_I_touchgfx_init+0x94>)
 80030b0:	4b23      	ldr	r3, [pc, #140]	; (8003140 <_GLOBAL__sub_I_touchgfx_init+0x98>)
 80030b2:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 80030b4:	4630      	mov	r0, r6
 80030b6:	f7ff fed1 	bl	8002e5c <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 80030ba:	4628      	mov	r0, r5
 80030bc:	f01d fb80 	bl	80207c0 <_ZN8touchgfx8LCD16bppC1Ev>
        : dma(dmaInterface),
 80030c0:	4b20      	ldr	r3, [pc, #128]	; (8003144 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80030c2:	4821      	ldr	r0, [pc, #132]	; (8003148 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
          touchController(touchCtrl),
 80030c4:	60dc      	str	r4, [r3, #12]
          mcuInstrumentation(0),
 80030c6:	2200      	movs	r2, #0
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 80030c8:	f44f 7180 	mov.w	r1, #256	; 0x100
          auxiliaryLCD(0),
 80030cc:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
          touchSampleRate(1),
 80030d0:	491e      	ldr	r1, [pc, #120]	; (800314c <_GLOBAL__sub_I_touchgfx_init+0xa4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 80030d2:	861a      	strh	r2, [r3, #48]	; 0x30
          vSyncCompensationEnabled(false),
 80030d4:	e9c3 121a 	strd	r1, r2, [r3, #104]	; 0x68
          requestedOrientation(ORIENTATION_LANDSCAPE),
 80030d8:	491d      	ldr	r1, [pc, #116]	; (8003150 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
 80030da:	6799      	str	r1, [r3, #120]	; 0x78
        instance = this;
 80030dc:	491d      	ldr	r1, [pc, #116]	; (8003154 <_GLOBAL__sub_I_touchgfx_init+0xac>)
          useAuxiliaryLCD(false),
 80030de:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
        instance = this;
 80030e2:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80030e4:	21f0      	movs	r1, #240	; 0xf0
 80030e6:	8001      	strh	r1, [r0, #0]
 80030e8:	481b      	ldr	r0, [pc, #108]	; (8003158 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
          lastY(0),
 80030ea:	665a      	str	r2, [r3, #100]	; 0x64
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80030ec:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80030ee:	481b      	ldr	r0, [pc, #108]	; (800315c <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          updateMCULoad(0),
 80030f0:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80030f4:	f44f 71a0 	mov.w	r1, #320	; 0x140
          buttonController(0),
 80030f8:	e9c3 2204 	strd	r2, r2, [r3, #16]
 80030fc:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8003100:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8003104:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
          frameBuffer0(0),
 8003108:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
          frameBuffer2(0),
 800310c:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 8003110:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
          lastX(0),
 8003114:	e9c3 2217 	strd	r2, r2, [r3, #92]	; 0x5c
          cc_begin(0),
 8003118:	675a      	str	r2, [r3, #116]	; 0x74
          lcdRef(display),
 800311a:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 800311e:	8001      	strh	r1, [r0, #0]
 8003120:	480f      	ldr	r0, [pc, #60]	; (8003160 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
 8003122:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 8003124:	490f      	ldr	r1, [pc, #60]	; (8003164 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 8003126:	700a      	strb	r2, [r1, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8003128:	2201      	movs	r2, #1
 800312a:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 800312e:	4a0e      	ldr	r2, [pc, #56]	; (8003168 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 8003130:	601a      	str	r2, [r3, #0]
}
 8003132:	bd70      	pop	{r4, r5, r6, pc}
 8003134:	200027f0 	.word	0x200027f0
 8003138:	200027ec 	.word	0x200027ec
 800313c:	200028b4 	.word	0x200028b4
 8003140:	0802eb8c 	.word	0x0802eb8c
 8003144:	20002834 	.word	0x20002834
 8003148:	20013830 	.word	0x20013830
 800314c:	01000001 	.word	0x01000001
 8003150:	01010000 	.word	0x01010000
 8003154:	2001383c 	.word	0x2001383c
 8003158:	20013836 	.word	0x20013836
 800315c:	20013832 	.word	0x20013832
 8003160:	20013838 	.word	0x20013838
 8003164:	20013834 	.word	0x20013834
 8003168:	0802ed18 	.word	0x0802ed18

0800316c <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 800316c:	2000      	movs	r0, #0
 800316e:	4770      	bx	lr

08003170 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8003170:	8081      	strh	r1, [r0, #4]
    }
 8003172:	4770      	bx	lr

08003174 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8003174:	80c1      	strh	r1, [r0, #6]
    }
 8003176:	4770      	bx	lr

08003178 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8003178:	8101      	strh	r1, [r0, #8]
    }
 800317a:	4770      	bx	lr

0800317c <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 800317c:	8141      	strh	r1, [r0, #10]
    }
 800317e:	4770      	bx	lr

08003180 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8003180:	4770      	bx	lr

08003182 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 8003182:	4770      	bx	lr

08003184 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 8003184:	4770      	bx	lr

08003186 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 8003186:	4770      	bx	lr

08003188 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8003188:	4770      	bx	lr

0800318a <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 800318a:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 800318c:	88c4      	ldrh	r4, [r0, #6]
 800318e:	6803      	ldr	r3, [r0, #0]
 8003190:	1b12      	subs	r2, r2, r4
 8003192:	8884      	ldrh	r4, [r0, #4]
 8003194:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8003196:	1b09      	subs	r1, r1, r4
 8003198:	b212      	sxth	r2, r2
    }
 800319a:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 800319e:	b209      	sxth	r1, r1
 80031a0:	4718      	bx	r3

080031a2 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 80031a2:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80031a6:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 80031a8:	f04f 33ff 	mov.w	r3, #4294967295
 80031ac:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 80031ae:	6813      	ldr	r3, [r2, #0]
 80031b0:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 80031b2:	6010      	str	r0, [r2, #0]
    }
 80031b4:	4770      	bx	lr

080031b6 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 80031b6:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80031ba:	b11a      	cbz	r2, 80031c4 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 80031bc:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 80031c0:	b102      	cbz	r2, 80031c4 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 80031c2:	6018      	str	r0, [r3, #0]
        }
    }
 80031c4:	4770      	bx	lr

080031c6 <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 80031c6:	2000      	movs	r0, #0
 80031c8:	4770      	bx	lr

080031ca <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 80031ca:	888b      	ldrh	r3, [r1, #4]
 80031cc:	8083      	strh	r3, [r0, #4]
        return true;
    }
 80031ce:	2001      	movs	r0, #1
 80031d0:	4770      	bx	lr

080031d2 <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 80031d2:	4770      	bx	lr

080031d4 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 80031d4:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
    }
 80031d8:	4770      	bx	lr

080031da <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 80031da:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
 80031de:	4770      	bx	lr

080031e0 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 80031e0:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80031e2:	2200      	movs	r2, #0
        return rect.width;
 80031e4:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 80031e8:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 80031ec:	8002      	strh	r2, [r0, #0]
 80031ee:	8042      	strh	r2, [r0, #2]
 80031f0:	8084      	strh	r4, [r0, #4]
 80031f2:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 80031f4:	bd10      	pop	{r4, pc}

080031f6 <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 80031f6:	2200      	movs	r2, #0
 80031f8:	8002      	strh	r2, [r0, #0]
 80031fa:	8042      	strh	r2, [r0, #2]
 80031fc:	8082      	strh	r2, [r0, #4]
 80031fe:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8003200:	4770      	bx	lr
	...

08003204 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003204:	4b02      	ldr	r3, [pc, #8]	; (8003210 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0xc>)
 8003206:	2290      	movs	r2, #144	; 0x90
 8003208:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358
}

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 800320c:	4770      	bx	lr
 800320e:	bf00      	nop
 8003210:	e000e100 	.word	0xe000e100

08003214 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8003214:	4b02      	ldr	r3, [pc, #8]	; (8003220 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0xc>)
 8003216:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 800321a:	609a      	str	r2, [r3, #8]

void TouchGFXGeneratedHAL::enableInterrupts()
{
    NVIC_EnableIRQ(LTDC_IRQn);
}
 800321c:	4770      	bx	lr
 800321e:	bf00      	nop
 8003220:	e000e100 	.word	0xe000e100

08003224 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8003224:	4a09      	ldr	r2, [pc, #36]	; (800324c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 8003226:	490a      	ldr	r1, [pc, #40]	; (8003250 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 8003228:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 800322a:	480a      	ldr	r0, [pc, #40]	; (8003254 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 800322c:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8003230:	3b01      	subs	r3, #1
 8003232:	b29b      	uxth	r3, r3
 8003234:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8003236:	6911      	ldr	r1, [r2, #16]
 8003238:	f3c1 010a 	ubfx	r1, r1, #0, #11
 800323c:	3901      	subs	r1, #1
 800323e:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 8003240:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 8003242:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8003244:	f043 0301 	orr.w	r3, r3, #1
 8003248:	6353      	str	r3, [r2, #52]	; 0x34
}
 800324a:	4770      	bx	lr
 800324c:	40016800 	.word	0x40016800
 8003250:	2000293a 	.word	0x2000293a
 8003254:	20002938 	.word	0x20002938

08003258 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8003258:	4b01      	ldr	r3, [pc, #4]	; (8003260 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 800325a:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
 800325e:	4770      	bx	lr
 8003260:	40016800 	.word	0x40016800

08003264 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8003264:	4b02      	ldr	r3, [pc, #8]	; (8003270 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8003266:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8003268:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 800326c:	625a      	str	r2, [r3, #36]	; 0x24
}
 800326e:	4770      	bx	lr
 8003270:	40016800 	.word	0x40016800

08003274 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8003274:	b570      	push	{r4, r5, r6, lr}
 8003276:	4604      	mov	r4, r0
    HAL::initialize();
 8003278:	f010 fa21 	bl	80136be <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 800327c:	6823      	ldr	r3, [r4, #0]
 800327e:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 8003280:	f015 fb96 	bl	80189b0 <_ZN8touchgfx11Application11getInstanceEv>
 8003284:	4601      	mov	r1, r0
 8003286:	4620      	mov	r0, r4
 8003288:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 800328a:	6823      	ldr	r3, [r4, #0]
 800328c:	4a05      	ldr	r2, [pc, #20]	; (80032a4 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 800328e:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 8003292:	4620      	mov	r0, r4
 8003294:	46ac      	mov	ip, r5
 8003296:	2300      	movs	r3, #0
}
 8003298:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 800329c:	f5a2 3116 	sub.w	r1, r2, #153600	; 0x25800
 80032a0:	4760      	bx	ip
 80032a2:	bf00      	nop
 80032a4:	d004b000 	.word	0xd004b000

080032a8 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 80032a8:	f010 b9f0 	b.w	801368c <_ZN8touchgfx3HAL10beginFrameEv>

080032ac <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
 80032ac:	f010 b9fa 	b.w	80136a4 <_ZN8touchgfx3HAL8endFrameEv>

080032b0 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 80032b0:	f010 b9b5 	b.w	801361e <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

080032b4 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 80032b4:	f010 bb17 	b.w	80138e6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

080032b8 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 80032b8:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80032bc:	b112      	cbz	r2, 80032c4 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 80032be:	6803      	ldr	r3, [r0, #0]
 80032c0:	695b      	ldr	r3, [r3, #20]
 80032c2:	4718      	bx	r3
    }
 80032c4:	4770      	bx	lr
	...

080032c8 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80032c8:	4b04      	ldr	r3, [pc, #16]	; (80032dc <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x14>)
 80032ca:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 80032ce:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80032d2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80032d6:	f3bf 8f6f 	isb	sy
}
 80032da:	4770      	bx	lr
 80032dc:	e000e100 	.word	0xe000e100

080032e0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 80032e0:	b570      	push	{r4, r5, r6, lr}
        : widgetWidth(0)
 80032e2:	2300      	movs	r3, #0
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80032e4:	4e12      	ldr	r6, [pc, #72]	; (8003330 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 80032e6:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 80032e8:	4b12      	ldr	r3, [pc, #72]	; (8003334 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 80032ea:	6003      	str	r3, [r0, #0]
 80032ec:	6833      	ldr	r3, [r6, #0]
 80032ee:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
    AbstractPainterRGB565()
 80032f2:	4605      	mov	r5, r0
 80032f4:	b10a      	cbz	r2, 80032fa <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 80032f6:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80032f8:	b900      	cbnz	r0, 80032fc <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 80032fa:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 80032fc:	6803      	ldr	r3, [r0, #0]
 80032fe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003300:	4798      	blx	r3
        return auxiliaryLCD;
 8003302:	6833      	ldr	r3, [r6, #0]
 8003304:	fab0 f480 	clz	r4, r0
 8003308:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800330a:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 800330c:	b130      	cbz	r0, 800331c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 800330e:	6803      	ldr	r3, [r0, #0]
 8003310:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003312:	4798      	blx	r3
 8003314:	2800      	cmp	r0, #0
 8003316:	bf08      	it	eq
 8003318:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 800331c:	b92c      	cbnz	r4, 800332a <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 800331e:	4b06      	ldr	r3, [pc, #24]	; (8003338 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 8003320:	4a06      	ldr	r2, [pc, #24]	; (800333c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 8003322:	4807      	ldr	r0, [pc, #28]	; (8003340 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 8003324:	212c      	movs	r1, #44	; 0x2c
 8003326:	f02a fb13 	bl	802d950 <__assert_func>
    }
 800332a:	4628      	mov	r0, r5
 800332c:	bd70      	pop	{r4, r5, r6, pc}
 800332e:	bf00      	nop
 8003330:	2001383c 	.word	0x2001383c
 8003334:	0802f238 	.word	0x0802f238
 8003338:	0802f134 	.word	0x0802f134
 800333c:	0802f192 	.word	0x0802f192
 8003340:	0802f1cb 	.word	0x0802f1cb

08003344 <_ZN8touchgfx5paint8tearDownEv>:
    blendL8CLUT = data;
}

void tearDown()
{
}
 8003344:	4770      	bx	lr
	...

08003348 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
{
    return ((color >> 8) & 0xF800) | ((color >> 5) & 0x07E0) | ((color >> 3) & 0x001F);
}

void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
 8003348:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    uint16_t* framebuffer = ptr;
    const uint16_t* const lineEnd = framebuffer + count;
    if (alpha == 0xFF)
 800334c:	2bff      	cmp	r3, #255	; 0xff
    {
        do
        {
            *framebuffer = color565;
 800334e:	f8bd 4018 	ldrh.w	r4, [sp, #24]
    const uint16_t* const lineEnd = framebuffer + count;
 8003352:	eb00 0141 	add.w	r1, r0, r1, lsl #1
    if (alpha == 0xFF)
 8003356:	d105      	bne.n	8003364 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x1c>
            *framebuffer = color565;
 8003358:	f820 4b02 	strh.w	r4, [r0], #2
        } while (++framebuffer < lineEnd);
 800335c:	4281      	cmp	r1, r0
 800335e:	d8fb      	bhi.n	8003358 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x10>
        do
        {
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
        } while (++framebuffer < lineEnd);
    }
}
 8003360:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    return alphaBlend(newpix & RMASK, newpix & GMASK, newpix & BMASK, bufpix, alpha);
 8003364:	4f17      	ldr	r7, [pc, #92]	; (80033c4 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x7c>)
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8003366:	f404 66fc 	and.w	r6, r4, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 800336a:	ea04 0c07 	and.w	ip, r4, r7
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 800336e:	f004 041f 	and.w	r4, r4, #31
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8003372:	fb03 fc0c 	mul.w	ip, r3, ip
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8003376:	435e      	muls	r6, r3
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 8003378:	435c      	muls	r4, r3
    const uint8_t ialpha = 0xFF - alpha;
 800337a:	43db      	mvns	r3, r3
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 800337c:	b2db      	uxtb	r3, r3
 800337e:	25ff      	movs	r5, #255	; 0xff
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
 8003380:	f8b0 e000 	ldrh.w	lr, [r0]
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8003384:	ea0e 0207 	and.w	r2, lr, r7
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8003388:	f40e 68fc 	and.w	r8, lr, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 800338c:	fb03 c202 	mla	r2, r3, r2, ip
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8003390:	fb03 6808 	mla	r8, r3, r8, r6
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 8003394:	f00e 0e1f 	and.w	lr, lr, #31
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8003398:	fbb2 f2f5 	udiv	r2, r2, r5
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 800339c:	fbb8 f8f5 	udiv	r8, r8, r5
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80033a0:	403a      	ands	r2, r7
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 80033a2:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80033a6:	ea42 0208 	orr.w	r2, r2, r8
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 80033aa:	fb03 4e0e 	mla	lr, r3, lr, r4
 80033ae:	fbbe fef5 	udiv	lr, lr, r5
 80033b2:	f00e 0e1f 	and.w	lr, lr, #31
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 80033b6:	ea42 020e 	orr.w	r2, r2, lr
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
 80033ba:	f820 2b02 	strh.w	r2, [r0], #2
        } while (++framebuffer < lineEnd);
 80033be:	4281      	cmp	r1, r0
 80033c0:	d8de      	bhi.n	8003380 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x38>
 80033c2:	e7cd      	b.n	8003360 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x18>
 80033c4:	fffff800 	.word	0xfffff800

080033c8 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 80033c8:	b510      	push	{r4, lr}
        return instance;
 80033ca:	4c14      	ldr	r4, [pc, #80]	; (800341c <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 80033cc:	6823      	ldr	r3, [r4, #0]
 80033ce:	b323      	cbz	r3, 800341a <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 80033d0:	4b13      	ldr	r3, [pc, #76]	; (8003420 <HAL_LTDC_LineEventCallback+0x58>)
 80033d2:	4a14      	ldr	r2, [pc, #80]	; (8003424 <HAL_LTDC_LineEventCallback+0x5c>)
 80033d4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80033d6:	8811      	ldrh	r1, [r2, #0]
 80033d8:	428b      	cmp	r3, r1
 80033da:	d113      	bne.n	8003404 <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 80033dc:	4b12      	ldr	r3, [pc, #72]	; (8003428 <HAL_LTDC_LineEventCallback+0x60>)
 80033de:	8819      	ldrh	r1, [r3, #0]
 80033e0:	f00a fae8 	bl	800d9b4 <HAL_LTDC_ProgramLineEvent>
 80033e4:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 80033e6:	f892 306a 	ldrb.w	r3, [r2, #106]	; 0x6a
 80033ea:	3301      	adds	r3, #1
 80033ec:	f882 306a 	strb.w	r3, [r2, #106]	; 0x6a
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 80033f0:	f7ff fce8 	bl	8002dc4 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 80033f4:	6820      	ldr	r0, [r4, #0]
 80033f6:	f010 fea1 	bl	801413c <_ZN8touchgfx3HAL16swapFrameBuffersEv>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 80033fa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 80033fe:	2000      	movs	r0, #0
 8003400:	f7ff bb60 	b.w	8002ac4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 8003404:	f00a fad6 	bl	800d9b4 <HAL_LTDC_ProgramLineEvent>
        return instance;
 8003408:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 800340a:	6803      	ldr	r3, [r0, #0]
 800340c:	6a1b      	ldr	r3, [r3, #32]
 800340e:	4798      	blx	r3
    }
 8003410:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8003414:	2000      	movs	r0, #0
 8003416:	f7ff bb6d 	b.w	8002af4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 800341a:	bd10      	pop	{r4, pc}
 800341c:	2001383c 	.word	0x2001383c
 8003420:	40016800 	.word	0x40016800
 8003424:	2000293a 	.word	0x2000293a
 8003428:	20002938 	.word	0x20002938

0800342c <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId SMALL = 2;     // verdana_10_4bpp
    static const touchgfx::FontId NORMAL_12 = 3; // verdana_12_4bpp
    static const uint16_t NUMBER_OF_FONTS = 4;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 800342c:	4770      	bx	lr

0800342e <_ZN23ApplicationFontProviderD0Ev>:
 800342e:	b510      	push	{r4, lr}
 8003430:	2104      	movs	r1, #4
 8003432:	4604      	mov	r4, r0
 8003434:	f029 fba5 	bl	802cb82 <_ZdlPvj>
 8003438:	4620      	mov	r0, r4
 800343a:	bd10      	pop	{r4, pc}

0800343c <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 800343c:	b508      	push	{r3, lr}
    switch (typography)
 800343e:	2903      	cmp	r1, #3
 8003440:	d813      	bhi.n	800346a <_ZN23ApplicationFontProvider7getFontEt+0x2e>
 8003442:	e8df f001 	tbb	[pc, r1]
 8003446:	0602      	.short	0x0602
 8003448:	0e0a      	.short	0x0e0a
    {
    case Typography::DEFAULT:
        // verdana_19_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 800344a:	f007 f935 	bl	800a6b8 <_ZN17TypedTextDatabase8getFontsEv>
 800344e:	6800      	ldr	r0, [r0, #0]
        // verdana_12_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
    default:
        return 0;
    }
}
 8003450:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8003452:	f007 f931 	bl	800a6b8 <_ZN17TypedTextDatabase8getFontsEv>
 8003456:	6840      	ldr	r0, [r0, #4]
 8003458:	e7fa      	b.n	8003450 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 800345a:	f007 f92d 	bl	800a6b8 <_ZN17TypedTextDatabase8getFontsEv>
 800345e:	6880      	ldr	r0, [r0, #8]
 8003460:	e7f6      	b.n	8003450 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
 8003462:	f007 f929 	bl	800a6b8 <_ZN17TypedTextDatabase8getFontsEv>
 8003466:	68c0      	ldr	r0, [r0, #12]
 8003468:	e7f2      	b.n	8003450 <_ZN23ApplicationFontProvider7getFontEt+0x14>
    switch (typography)
 800346a:	2000      	movs	r0, #0
 800346c:	e7f0      	b.n	8003450 <_ZN23ApplicationFontProvider7getFontEt+0x14>
	...

08003470 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8003470:	4800      	ldr	r0, [pc, #0]	; (8003474 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 8003472:	4770      	bx	lr
 8003474:	0802f264 	.word	0x0802f264

08003478 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8003478:	200c      	movs	r0, #12
 800347a:	4770      	bx	lr

0800347c <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 800347c:	b513      	push	{r0, r1, r4, lr}
 800347e:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8003480:	b151      	cbz	r1, 8003498 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8003482:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 8003484:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8003486:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800348a:	aa01      	add	r2, sp, #4
 800348c:	689c      	ldr	r4, [r3, #8]
 800348e:	f10d 0303 	add.w	r3, sp, #3
 8003492:	47a0      	blx	r4
        return glyph;
    }
 8003494:	b002      	add	sp, #8
 8003496:	bd10      	pop	{r4, pc}
            return 0;
 8003498:	4608      	mov	r0, r1
 800349a:	e7fb      	b.n	8003494 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

0800349c <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 800349c:	89c0      	ldrh	r0, [r0, #14]
 800349e:	4770      	bx	lr

080034a0 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 80034a0:	8a00      	ldrh	r0, [r0, #16]
 80034a2:	4770      	bx	lr

080034a4 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 80034a4:	88c0      	ldrh	r0, [r0, #6]
 80034a6:	4770      	bx	lr

080034a8 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 80034a8:	8880      	ldrh	r0, [r0, #4]
 80034aa:	4770      	bx	lr

080034ac <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 80034ac:	7a80      	ldrb	r0, [r0, #10]
    }
 80034ae:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 80034b2:	4770      	bx	lr

080034b4 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 80034b4:	7a80      	ldrb	r0, [r0, #10]
    }
 80034b6:	09c0      	lsrs	r0, r0, #7
 80034b8:	4770      	bx	lr

080034ba <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 80034ba:	6a80      	ldr	r0, [r0, #40]	; 0x28
 80034bc:	4770      	bx	lr

080034be <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 80034be:	4770      	bx	lr

080034c0 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 80034c0:	4770      	bx	lr

080034c2 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 80034c2:	4770      	bx	lr

080034c4 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 80034c4:	4770      	bx	lr

080034c6 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 80034c6:	4770      	bx	lr

080034c8 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 80034c8:	4770      	bx	lr

080034ca <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 80034ca:	b530      	push	{r4, r5, lr}
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 80034cc:	6803      	ldr	r3, [r0, #0]
        rect.width = width;
 80034ce:	8101      	strh	r1, [r0, #8]
    virtual void setWidth(int16_t width)
 80034d0:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 80034d2:	466d      	mov	r5, sp
 80034d4:	4601      	mov	r1, r0
 80034d6:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setWidth(int16_t width)
 80034da:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 80034dc:	4628      	mov	r0, r5
 80034de:	4798      	blx	r3
 80034e0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80034e4:	343c      	adds	r4, #60	; 0x3c
 80034e6:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 80034ea:	b005      	add	sp, #20
 80034ec:	bd30      	pop	{r4, r5, pc}

080034ee <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 80034ee:	b530      	push	{r4, r5, lr}
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 80034f0:	6803      	ldr	r3, [r0, #0]
        rect.height = height;
 80034f2:	8141      	strh	r1, [r0, #10]
    virtual void setHeight(int16_t height)
 80034f4:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 80034f6:	466d      	mov	r5, sp
 80034f8:	4601      	mov	r1, r0
 80034fa:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setHeight(int16_t height)
 80034fe:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8003500:	4628      	mov	r0, r5
 8003502:	4798      	blx	r3
 8003504:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003508:	343c      	adds	r4, #60	; 0x3c
 800350a:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 800350e:	b005      	add	sp, #20
 8003510:	bd30      	pop	{r4, r5, pc}

08003512 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 8003512:	2200      	movs	r2, #0
 8003514:	8002      	strh	r2, [r0, #0]
 8003516:	8042      	strh	r2, [r0, #2]
 8003518:	8082      	strh	r2, [r0, #4]
 800351a:	80c2      	strh	r2, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 800351c:	4770      	bx	lr

0800351e <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 800351e:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
 8003522:	4770      	bx	lr

08003524 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8003524:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 8003526:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8003528:	4604      	mov	r4, r0
        setX(x);
 800352a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 800352c:	4615      	mov	r5, r2
        setX(x);
 800352e:	4798      	blx	r3
        setBaselineY(baselineY);
 8003530:	6823      	ldr	r3, [r4, #0]
 8003532:	4629      	mov	r1, r5
 8003534:	4620      	mov	r0, r4
 8003536:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    }
 8003538:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 800353c:	4718      	bx	r3

0800353e <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 800353e:	2000      	movs	r0, #0
 8003540:	4770      	bx	lr

08003542 <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 8003542:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8003544:	4770      	bx	lr

08003546 <_ZN23Calibration_PadViewBase17Load_FLASH_ValuesEv>:
     * Virtual Action Handlers
     */
    virtual void Load_FLASH_Values()
    {
        // Override and implement this function in Calibration_Pad
    }
 8003546:	4770      	bx	lr

08003548 <_ZN23Calibration_PadViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Calibration_PadViewBase::setupScreen()
{
    transitionBegins();
 8003548:	6803      	ldr	r3, [r0, #0]
 800354a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800354c:	4718      	bx	r3

0800354e <_ZN23Calibration_PadViewBase16transitionBeginsEv>:
void Calibration_PadViewBase::transitionBegins()
{
    //Interaction_begin
    //When screen transition begins call virtual function
    //Call Load_FLASH_Values
    Load_FLASH_Values();
 800354e:	6803      	ldr	r3, [r0, #0]
 8003550:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003552:	4718      	bx	r3

08003554 <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type, typename T1>
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003554:	4770      	bx	lr

08003556 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 8003556:	4770      	bx	lr

08003558 <_ZN8touchgfx14SwipeContainer13PageIndicatorD1Ev>:
    void animateSwipeCancelledLeft();
    void animateSwipeCancelledRight();
    void animateLeft();
    void animateRight();

    class PageIndicator : public Container
 8003558:	4770      	bx	lr

0800355a <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
     *
     * @param  t1 This value will be passed as the first argument in the function call.
     *
     * @see isValid
     */
    virtual void execute(T1 t1)
 800355a:	b430      	push	{r4, r5}
    {
        (pobject->*pmemfun)(t1);
 800355c:	68c2      	ldr	r2, [r0, #12]
 800355e:	6844      	ldr	r4, [r0, #4]
 8003560:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8003562:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8003564:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8003568:	07d2      	lsls	r2, r2, #31
 800356a:	bf48      	it	mi
 800356c:	5962      	ldrmi	r2, [r4, r5]
 800356e:	689b      	ldr	r3, [r3, #8]
    }
 8003570:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003572:	bf48      	it	mi
 8003574:	58d3      	ldrmi	r3, [r2, r3]
 8003576:	4718      	bx	r3

08003578 <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
     *
     * @return true if valid, false if not.
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 8003578:	6843      	ldr	r3, [r0, #4]
 800357a:	b12b      	cbz	r3, 8003588 <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800357c:	6883      	ldr	r3, [r0, #8]
 800357e:	b92b      	cbnz	r3, 800358c <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8003580:	68c0      	ldr	r0, [r0, #12]
 8003582:	f000 0001 	and.w	r0, r0, #1
 8003586:	4770      	bx	lr
 8003588:	4618      	mov	r0, r3
 800358a:	4770      	bx	lr
 800358c:	2001      	movs	r0, #1
    }
 800358e:	4770      	bx	lr

08003590 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 8003590:	b510      	push	{r4, lr}
    }
 8003592:	2108      	movs	r1, #8
    virtual ~TypedText()
 8003594:	4604      	mov	r4, r0
    }
 8003596:	f029 faf4 	bl	802cb82 <_ZdlPvj>
 800359a:	4620      	mov	r0, r4
 800359c:	bd10      	pop	{r4, pc}

0800359e <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 800359e:	b510      	push	{r4, lr}
 80035a0:	214c      	movs	r1, #76	; 0x4c
 80035a2:	4604      	mov	r4, r0
 80035a4:	f029 faed 	bl	802cb82 <_ZdlPvj>
 80035a8:	4620      	mov	r0, r4
 80035aa:	bd10      	pop	{r4, pc}

080035ac <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80035ac:	b510      	push	{r4, lr}
 80035ae:	2110      	movs	r1, #16
 80035b0:	4604      	mov	r4, r0
 80035b2:	f029 fae6 	bl	802cb82 <_ZdlPvj>
 80035b6:	4620      	mov	r0, r4
 80035b8:	bd10      	pop	{r4, pc}

080035ba <_ZN8touchgfx14SwipeContainer13PageIndicatorD0Ev>:
 80035ba:	b510      	push	{r4, lr}
 80035bc:	218c      	movs	r1, #140	; 0x8c
 80035be:	4604      	mov	r4, r0
 80035c0:	f029 fadf 	bl	802cb82 <_ZdlPvj>
 80035c4:	4620      	mov	r0, r4
 80035c6:	bd10      	pop	{r4, pc}

080035c8 <_ZN23Calibration_PadViewBaseD1Ev>:
Calibration_PadViewBase::~Calibration_PadViewBase()
 80035c8:	b538      	push	{r3, r4, r5, lr}
 80035ca:	4605      	mov	r5, r0
 80035cc:	4b05      	ldr	r3, [pc, #20]	; (80035e4 <_ZN23Calibration_PadViewBaseD1Ev+0x1c>)
 80035ce:	f845 3be0 	str.w	r3, [r5], #224
 80035d2:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80035d4:	f013 fcea 	bl	8016fac <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
Calibration_PadViewBase::~Calibration_PadViewBase()
 80035d8:	4628      	mov	r0, r5
 80035da:	f00f fb9f 	bl	8012d1c <_ZN8touchgfx14SwipeContainerD1Ev>
}
 80035de:	4620      	mov	r0, r4
 80035e0:	bd38      	pop	{r3, r4, r5, pc}
 80035e2:	bf00      	nop
 80035e4:	0802f64c 	.word	0x0802f64c

080035e8 <_ZN23Calibration_PadViewBaseD0Ev>:
Calibration_PadViewBase::~Calibration_PadViewBase()
 80035e8:	b510      	push	{r4, lr}
 80035ea:	4604      	mov	r4, r0
}
 80035ec:	f7ff ffec 	bl	80035c8 <_ZN23Calibration_PadViewBaseD1Ev>
 80035f0:	4620      	mov	r0, r4
 80035f2:	f641 5104 	movw	r1, #7428	; 0x1d04
 80035f6:	f029 fac4 	bl	802cb82 <_ZdlPvj>
 80035fa:	4620      	mov	r0, r4
 80035fc:	bd10      	pop	{r4, pc}

080035fe <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
    virtual void invalidateContent() const
 80035fe:	b508      	push	{r3, lr}
        Widget::invalidateContent();
 8003600:	f7ff fe5a 	bl	80032b8 <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 8003604:	bd08      	pop	{r3, pc}
	...

08003608 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8003608:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 800360a:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 800360c:	6b5e      	ldr	r6, [r3, #52]	; 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800360e:	4b12      	ldr	r3, [pc, #72]	; (8003658 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 8003610:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 8003612:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8003614:	b28d      	uxth	r5, r1
 8003616:	b92b      	cbnz	r3, 8003624 <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 8003618:	4b10      	ldr	r3, [pc, #64]	; (800365c <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 800361a:	4a11      	ldr	r2, [pc, #68]	; (8003660 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 800361c:	216c      	movs	r1, #108	; 0x6c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800361e:	4811      	ldr	r0, [pc, #68]	; (8003664 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 8003620:	f02a f996 	bl	802d950 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8003624:	4910      	ldr	r1, [pc, #64]	; (8003668 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 8003626:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003628:	8809      	ldrh	r1, [r1, #0]
 800362a:	4291      	cmp	r1, r2
 800362c:	d803      	bhi.n	8003636 <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 800362e:	4b0f      	ldr	r3, [pc, #60]	; (800366c <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 8003630:	4a0b      	ldr	r2, [pc, #44]	; (8003660 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8003632:	216d      	movs	r1, #109	; 0x6d
 8003634:	e7f3      	b.n	800361e <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 8003636:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800363a:	4b0d      	ldr	r3, [pc, #52]	; (8003670 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 800363c:	681b      	ldr	r3, [r3, #0]
 800363e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8003642:	6803      	ldr	r3, [r0, #0]
 8003644:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003646:	4798      	blx	r3
 8003648:	1a28      	subs	r0, r5, r0
 800364a:	b201      	sxth	r1, r0
 800364c:	4633      	mov	r3, r6
 800364e:	4620      	mov	r0, r4
    }
 8003650:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8003654:	4718      	bx	r3
 8003656:	bf00      	nop
 8003658:	20013894 	.word	0x20013894
 800365c:	0802f354 	.word	0x0802f354
 8003660:	0802f396 	.word	0x0802f396
 8003664:	0802f3d1 	.word	0x0802f3d1
 8003668:	20013898 	.word	0x20013898
 800366c:	0802f418 	.word	0x0802f418
 8003670:	2001389c 	.word	0x2001389c

08003674 <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 8003674:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 8003676:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 8003678:	4604      	mov	r4, r0
        setX(x);
 800367a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 800367c:	4615      	mov	r5, r2
        setX(x);
 800367e:	4798      	blx	r3
        setY(y);
 8003680:	6823      	ldr	r3, [r4, #0]
 8003682:	4629      	mov	r1, r5
 8003684:	4620      	mov	r0, r4
 8003686:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 8003688:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 800368c:	4718      	bx	r3

0800368e <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 800368e:	b570      	push	{r4, r5, r6, lr}
 8003690:	4604      	mov	r4, r0
 8003692:	461d      	mov	r5, r3
 8003694:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 8003698:	f7ff ffec 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 800369c:	6823      	ldr	r3, [r4, #0]
 800369e:	4629      	mov	r1, r5
 80036a0:	4620      	mov	r0, r4
 80036a2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80036a4:	4798      	blx	r3
        setHeight(height);
 80036a6:	6823      	ldr	r3, [r4, #0]
 80036a8:	4631      	mov	r1, r6
 80036aa:	4620      	mov	r0, r4
 80036ac:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 80036ae:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 80036b2:	4718      	bx	r3

080036b4 <_ZN8touchgfx9ContainerC1Ev>:
          touchable(false),
 80036b4:	f44f 7180 	mov.w	r1, #256	; 0x100
 80036b8:	2200      	movs	r2, #0
 80036ba:	8481      	strh	r1, [r0, #36]	; 0x24
          firstChild(0)
 80036bc:	4905      	ldr	r1, [pc, #20]	; (80036d4 <_ZN8touchgfx9ContainerC1Ev+0x20>)
 80036be:	6001      	str	r1, [r0, #0]
 80036c0:	e9c0 2201 	strd	r2, r2, [r0, #4]
 80036c4:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 80036c8:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 80036cc:	e9c0 2207 	strd	r2, r2, [r0, #28]
 80036d0:	6282      	str	r2, [r0, #40]	; 0x28
    }
 80036d2:	4770      	bx	lr
 80036d4:	08031570 	.word	0x08031570

080036d8 <_ZN8touchgfx6WidgetC1Ev>:
 80036d8:	2200      	movs	r2, #0
 80036da:	e9c0 2201 	strd	r2, r2, [r0, #4]
 80036de:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 80036e2:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 80036e6:	e9c0 2207 	strd	r2, r2, [r0, #28]
          touchable(false),
 80036ea:	f44f 7280 	mov.w	r2, #256	; 0x100
 80036ee:	8482      	strh	r2, [r0, #36]	; 0x24
class Widget : public Drawable
 80036f0:	4a01      	ldr	r2, [pc, #4]	; (80036f8 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 80036f2:	6002      	str	r2, [r0, #0]
 80036f4:	4770      	bx	lr
 80036f6:	bf00      	nop
 80036f8:	0802f49c 	.word	0x0802f49c

080036fc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
        return typedTextId < numberOfTypedTexts;
 80036fc:	4b1a      	ldr	r3, [pc, #104]	; (8003768 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x6c>)
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 80036fe:	b573      	push	{r0, r1, r4, r5, r6, lr}
    {
        if (typedText.hasValidId())
 8003700:	881b      	ldrh	r3, [r3, #0]
 8003702:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 8003704:	428b      	cmp	r3, r1
    void updateTextPosition()
 8003706:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 8003708:	d92b      	bls.n	8003762 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x66>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800370a:	4b18      	ldr	r3, [pc, #96]	; (800376c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x70>)
 800370c:	681b      	ldr	r3, [r3, #0]
 800370e:	b92b      	cbnz	r3, 800371c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 8003710:	4b17      	ldr	r3, [pc, #92]	; (8003770 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>)
 8003712:	4a18      	ldr	r2, [pc, #96]	; (8003774 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x78>)
 8003714:	4818      	ldr	r0, [pc, #96]	; (8003778 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 8003716:	216c      	movs	r1, #108	; 0x6c
 8003718:	f02a f91a 	bl	802d950 <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 800371c:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8003720:	4b16      	ldr	r3, [pc, #88]	; (800377c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 8003722:	681b      	ldr	r3, [r3, #0]
 8003724:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 8003728:	4b15      	ldr	r3, [pc, #84]	; (8003780 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x84>)
 800372a:	6818      	ldr	r0, [r3, #0]
 800372c:	f006 ffb4 	bl	800a698 <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8003730:	682b      	ldr	r3, [r5, #0]
 8003732:	9001      	str	r0, [sp, #4]
 8003734:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003736:	4628      	mov	r0, r5
 8003738:	4798      	blx	r3
 800373a:	682b      	ldr	r3, [r5, #0]
 800373c:	9901      	ldr	r1, [sp, #4]
 800373e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8003740:	4604      	mov	r4, r0
 8003742:	4628      	mov	r0, r5
 8003744:	4798      	blx	r3
 8003746:	682b      	ldr	r3, [r5, #0]
 8003748:	9901      	ldr	r1, [sp, #4]
 800374a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800374c:	fb14 f400 	smulbb	r4, r4, r0
 8003750:	4628      	mov	r0, r5
 8003752:	4798      	blx	r3
 8003754:	b2a4      	uxth	r4, r4
 8003756:	1823      	adds	r3, r4, r0
 8003758:	b21b      	sxth	r3, r3
 800375a:	f8a6 3046 	strh.w	r3, [r6, #70]	; 0x46
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 800375e:	b002      	add	sp, #8
 8003760:	bd70      	pop	{r4, r5, r6, pc}
 8003762:	2300      	movs	r3, #0
 8003764:	e7f9      	b.n	800375a <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x5e>
 8003766:	bf00      	nop
 8003768:	20013898 	.word	0x20013898
 800376c:	20013894 	.word	0x20013894
 8003770:	0802f354 	.word	0x0802f354
 8003774:	0802f396 	.word	0x0802f396
 8003778:	0802f3d1 	.word	0x0802f3d1
 800377c:	2001389c 	.word	0x2001389c
 8003780:	200138a0 	.word	0x200138a0

08003784 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>:
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8003784:	2200      	movs	r2, #0
 8003786:	f04f 31ff 	mov.w	r1, #4294967295
 800378a:	e9c0 2100 	strd	r2, r1, [r0]
        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
              text(0)
 800378e:	6082      	str	r2, [r0, #8]
        {
        }
 8003790:	4770      	bx	lr

08003792 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:
    virtual TextArea::BoundingArea calculateBoundingArea() const
 8003792:	b510      	push	{r4, lr}
 8003794:	4604      	mov	r4, r0
        return TextArea::BoundingArea();
 8003796:	f7ff fff5 	bl	8003784 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
    }
 800379a:	4620      	mov	r0, r4
 800379c:	bd10      	pop	{r4, pc}
	...

080037a0 <_ZN8touchgfx8TextAreaC1Ev>:
    TextArea()
 80037a0:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80037a2:	2100      	movs	r1, #0
    TextArea()
 80037a4:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80037a6:	2226      	movs	r2, #38	; 0x26
 80037a8:	f02a fad7 	bl	802dd5a <memset>
 80037ac:	4620      	mov	r0, r4
 80037ae:	f7ff ff93 	bl	80036d8 <_ZN8touchgfx6WidgetC1Ev>
 80037b2:	4b09      	ldr	r3, [pc, #36]	; (80037d8 <_ZN8touchgfx8TextAreaC1Ev+0x38>)
 80037b4:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 80037b6:	4b09      	ldr	r3, [pc, #36]	; (80037dc <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 80037b8:	62a3      	str	r3, [r4, #40]	; 0x28
 80037ba:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80037be:	85a3      	strh	r3, [r4, #44]	; 0x2c
 80037c0:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 80037c4:	2300      	movs	r3, #0
 80037c6:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
 80037ca:	8723      	strh	r3, [r4, #56]	; 0x38
 80037cc:	f104 003c 	add.w	r0, r4, #60	; 0x3c
 80037d0:	f7ff ffd8 	bl	8003784 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
    }
 80037d4:	4620      	mov	r0, r4
 80037d6:	bd10      	pop	{r4, pc}
 80037d8:	080319c8 	.word	0x080319c8
 80037dc:	0802f504 	.word	0x0802f504

080037e0 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>:
    TextAreaWithOneWildcard()
 80037e0:	b510      	push	{r4, lr}
 80037e2:	4604      	mov	r4, r0
        : TextArea()
 80037e4:	f7ff ffdc 	bl	80037a0 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 80037e8:	4b02      	ldr	r3, [pc, #8]	; (80037f4 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x14>)
 80037ea:	6023      	str	r3, [r4, #0]
 80037ec:	2300      	movs	r3, #0
 80037ee:	64a3      	str	r3, [r4, #72]	; 0x48
    }
 80037f0:	4620      	mov	r0, r4
 80037f2:	bd10      	pop	{r4, pc}
 80037f4:	0802f5a4 	.word	0x0802f5a4

080037f8 <_ZN8touchgfx8DrawableC1ERKS0_>:
class Drawable
 80037f8:	b510      	push	{r4, lr}
 80037fa:	4604      	mov	r4, r0
 80037fc:	460b      	mov	r3, r1
 80037fe:	490d      	ldr	r1, [pc, #52]	; (8003834 <_ZN8touchgfx8DrawableC1ERKS0_+0x3c>)
 8003800:	f844 1b04 	str.w	r1, [r4], #4
 8003804:	4602      	mov	r2, r0
 8003806:	e9d3 0101 	ldrd	r0, r1, [r3, #4]
 800380a:	e884 0003 	stmia.w	r4, {r0, r1}
 800380e:	e9d3 0103 	ldrd	r0, r1, [r3, #12]
 8003812:	f102 040c 	add.w	r4, r2, #12
 8003816:	e884 0003 	stmia.w	r4, {r0, r1}
 800381a:	e9d3 0106 	ldrd	r0, r1, [r3, #24]
 800381e:	695c      	ldr	r4, [r3, #20]
 8003820:	61d1      	str	r1, [r2, #28]
 8003822:	6a19      	ldr	r1, [r3, #32]
 8003824:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 8003826:	6211      	str	r1, [r2, #32]
 8003828:	e9c2 4005 	strd	r4, r0, [r2, #20]
 800382c:	8493      	strh	r3, [r2, #36]	; 0x24
 800382e:	4610      	mov	r0, r2
 8003830:	bd10      	pop	{r4, pc}
 8003832:	bf00      	nop
 8003834:	08031de8 	.word	0x08031de8

08003838 <_ZN8touchgfx14SwipeContainerC1ERKS0_>:
class SwipeContainer : public Container
 8003838:	b538      	push	{r3, r4, r5, lr}
 800383a:	460d      	mov	r5, r1
 800383c:	4604      	mov	r4, r0
class Container : public Drawable
 800383e:	f7ff ffdb 	bl	80037f8 <_ZN8touchgfx8DrawableC1ERKS0_>
 8003842:	6aab      	ldr	r3, [r5, #40]	; 0x28
 8003844:	62a3      	str	r3, [r4, #40]	; 0x28
 8003846:	4b2b      	ldr	r3, [pc, #172]	; (80038f4 <_ZN8touchgfx14SwipeContainerC1ERKS0_+0xbc>)
 8003848:	6023      	str	r3, [r4, #0]
 800384a:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 800384c:	62e3      	str	r3, [r4, #44]	; 0x2c
 800384e:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8003850:	6323      	str	r3, [r4, #48]	; 0x30
 8003852:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 8003854:	6363      	str	r3, [r4, #52]	; 0x34
 8003856:	f105 0138 	add.w	r1, r5, #56	; 0x38
 800385a:	f104 0038 	add.w	r0, r4, #56	; 0x38
 800385e:	f7ff ffcb 	bl	80037f8 <_ZN8touchgfx8DrawableC1ERKS0_>
 8003862:	6e2b      	ldr	r3, [r5, #96]	; 0x60
 8003864:	6623      	str	r3, [r4, #96]	; 0x60
 * dimensions of the physical screen. Place the ListLayout inside e.g. a
 * ScrollableContainer to allow all the children to be viewed.
 *
 * @see ScrollableContainer
 */
class ListLayout : public Container
 8003866:	4b24      	ldr	r3, [pc, #144]	; (80038f8 <_ZN8touchgfx14SwipeContainerC1ERKS0_+0xc0>)
 8003868:	63a3      	str	r3, [r4, #56]	; 0x38
 800386a:	f895 3064 	ldrb.w	r3, [r5, #100]	; 0x64
 800386e:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 8003872:	f8b5 3066 	ldrh.w	r3, [r5, #102]	; 0x66
 8003876:	f8a4 3066 	strh.w	r3, [r4, #102]	; 0x66
 800387a:	f105 0168 	add.w	r1, r5, #104	; 0x68
 800387e:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8003882:	f7ff ffb9 	bl	80037f8 <_ZN8touchgfx8DrawableC1ERKS0_>
 8003886:	f8d5 3090 	ldr.w	r3, [r5, #144]	; 0x90
 800388a:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
    class PageIndicator : public Container
 800388e:	4b1b      	ldr	r3, [pc, #108]	; (80038fc <_ZN8touchgfx14SwipeContainerC1ERKS0_+0xc4>)
 8003890:	66a3      	str	r3, [r4, #104]	; 0x68
 8003892:	f105 0194 	add.w	r1, r5, #148	; 0x94
 8003896:	f104 0094 	add.w	r0, r4, #148	; 0x94
 800389a:	f7ff ffad 	bl	80037f8 <_ZN8touchgfx8DrawableC1ERKS0_>
 * is handled by the Image Converter as part of compiling the project. Each image is
 * assigned a unique BITMAP identifier which.
 *
 * @see Bitmap
 */
class Image : public Widget
 800389e:	f8b5 30ba 	ldrh.w	r3, [r5, #186]	; 0xba
 80038a2:	f8a4 30ba 	strh.w	r3, [r4, #186]	; 0xba
 80038a6:	f895 30bc 	ldrb.w	r3, [r5, #188]	; 0xbc
 80038aa:	f884 30bc 	strb.w	r3, [r4, #188]	; 0xbc
 * Simple widget capable of showing a bitmap tiled indefinitely horizontally and vertically.
 * This means that when the TiledImage Widget is larger than the provided Bitmap, the
 * Bitmap is repeated over and over horizontally and vertically. The bitmap can be alpha-
 * blended with the background and have areas of transparency.
 */
class TiledImage : public Image
 80038ae:	4b14      	ldr	r3, [pc, #80]	; (8003900 <_ZN8touchgfx14SwipeContainerC1ERKS0_+0xc8>)
 80038b0:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 80038b4:	f8b5 30be 	ldrh.w	r3, [r5, #190]	; 0xbe
 80038b8:	f8a4 30be 	strh.w	r3, [r4, #190]	; 0xbe
 80038bc:	f8b5 30c0 	ldrh.w	r3, [r5, #192]	; 0xc0
 80038c0:	f8a4 30c0 	strh.w	r3, [r4, #192]	; 0xc0
 80038c4:	f105 01c4 	add.w	r1, r5, #196	; 0xc4
 80038c8:	f104 00c4 	add.w	r0, r4, #196	; 0xc4
 80038cc:	f7ff ff94 	bl	80037f8 <_ZN8touchgfx8DrawableC1ERKS0_>
 80038d0:	4b0c      	ldr	r3, [pc, #48]	; (8003904 <_ZN8touchgfx14SwipeContainerC1ERKS0_+0xcc>)
 80038d2:	f8c4 30c4 	str.w	r3, [r4, #196]	; 0xc4
 80038d6:	f8b5 30ea 	ldrh.w	r3, [r5, #234]	; 0xea
 80038da:	f8a4 30ea 	strh.w	r3, [r4, #234]	; 0xea
 80038de:	f895 30ec 	ldrb.w	r3, [r5, #236]	; 0xec
 80038e2:	f884 30ec 	strb.w	r3, [r4, #236]	; 0xec
 80038e6:	f8b5 30f0 	ldrh.w	r3, [r5, #240]	; 0xf0
 80038ea:	f8a4 30f0 	strh.w	r3, [r4, #240]	; 0xf0
class SwipeContainer : public Container
 80038ee:	4620      	mov	r0, r4
 80038f0:	bd38      	pop	{r3, r4, r5, pc}
 80038f2:	bf00      	nop
 80038f4:	08031600 	.word	0x08031600
 80038f8:	080316c4 	.word	0x080316c4
 80038fc:	0802f514 	.word	0x0802f514
 8003900:	08031ac0 	.word	0x08031ac0
 8003904:	08031ca4 	.word	0x08031ca4

08003908 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
{
 8003908:	b5f0      	push	{r4, r5, r6, r7, lr}
    if (&src == &buttonWithIcon_LP1)
 800390a:	f500 731e 	add.w	r3, r0, #632	; 0x278
 800390e:	4299      	cmp	r1, r3
{
 8003910:	b0c7      	sub	sp, #284	; 0x11c
 8003912:	4604      	mov	r4, r0
 8003914:	460d      	mov	r5, r1
    if (&src == &buttonWithIcon_LP1)
 8003916:	d122      	bne.n	800395e <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x56>
        SwipeContainer swipeContainer = swipeContainer1;
 8003918:	f100 06e0 	add.w	r6, r0, #224	; 0xe0
 800391c:	4631      	mov	r1, r6
 800391e:	a809      	add	r0, sp, #36	; 0x24
 8003920:	f7ff ff8a 	bl	8003838 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        ACCU_FFT accu_fft = accurate_FFT();
 8003924:	a801      	add	r0, sp, #4
 8003926:	f7fd fb79 	bl	800101c <accurate_FFT>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)accu_fft.signal_strength_pl, 0, 12);
 800392a:	eddd 7a03 	vldr	s15, [sp, #12]
 800392e:	48cf      	ldr	r0, [pc, #828]	; (8003c6c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x364>)
 8003930:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003934:	230c      	movs	r3, #12
 8003936:	ee17 7a90 	vmov	r7, s15
 800393a:	ee17 1a90 	vmov	r1, s15
 800393e:	2200      	movs	r2, #0
 8003940:	f7fd fe70 	bl	8001624 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LP1Buffer, TEXTAREACAL_LP1_SIZE, "%d", (uint32_t)accu_fft.signal_strength_pl);
 8003944:	4aca      	ldr	r2, [pc, #808]	; (8003c70 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x368>)
 8003946:	463b      	mov	r3, r7
 8003948:	210a      	movs	r1, #10
 800394a:	f604 601c 	addw	r0, r4, #3612	; 0xe1c
 800394e:	f018 f9dd 	bl	801bd0c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8003952:	4630      	mov	r0, r6
 8003954:	f016 f914 	bl	8019b80 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8003958:	a809      	add	r0, sp, #36	; 0x24
 800395a:	f00f f9df 	bl	8012d1c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_LP2)
 800395e:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 8003962:	429d      	cmp	r5, r3
 8003964:	d122      	bne.n	80039ac <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xa4>
        SwipeContainer swipeContainer = swipeContainer1;
 8003966:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 800396a:	4631      	mov	r1, r6
 800396c:	a809      	add	r0, sp, #36	; 0x24
 800396e:	f7ff ff63 	bl	8003838 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        ACCU_FFT accu_fft = accurate_FFT();
 8003972:	a801      	add	r0, sp, #4
 8003974:	f7fd fb52 	bl	800101c <accurate_FFT>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)accu_fft.signal_strength_pl, 1, 12);
 8003978:	eddd 7a03 	vldr	s15, [sp, #12]
 800397c:	48bb      	ldr	r0, [pc, #748]	; (8003c6c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x364>)
 800397e:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003982:	230c      	movs	r3, #12
 8003984:	ee17 7a90 	vmov	r7, s15
 8003988:	ee17 1a90 	vmov	r1, s15
 800398c:	2201      	movs	r2, #1
 800398e:	f7fd fe49 	bl	8001624 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LP2Buffer, TEXTAREACAL_LP2_SIZE, "%d", (uint32_t)accu_fft.signal_strength_pl);
 8003992:	4ab7      	ldr	r2, [pc, #732]	; (8003c70 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x368>)
 8003994:	463b      	mov	r3, r7
 8003996:	210a      	movs	r1, #10
 8003998:	f604 6008 	addw	r0, r4, #3592	; 0xe08
 800399c:	f018 f9b6 	bl	801bd0c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 80039a0:	4630      	mov	r0, r6
 80039a2:	f016 f8ed 	bl	8019b80 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 80039a6:	a809      	add	r0, sp, #36	; 0x24
 80039a8:	f00f f9b8 	bl	8012d1c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_LP3)
 80039ac:	f504 7300 	add.w	r3, r4, #512	; 0x200
 80039b0:	429d      	cmp	r5, r3
 80039b2:	d122      	bne.n	80039fa <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xf2>
        SwipeContainer swipeContainer = swipeContainer1;
 80039b4:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 80039b8:	4631      	mov	r1, r6
 80039ba:	a809      	add	r0, sp, #36	; 0x24
 80039bc:	f7ff ff3c 	bl	8003838 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        ACCU_FFT accu_fft = accurate_FFT();
 80039c0:	a801      	add	r0, sp, #4
 80039c2:	f7fd fb2b 	bl	800101c <accurate_FFT>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)accu_fft.signal_strength_pl, 2, 12);
 80039c6:	eddd 7a03 	vldr	s15, [sp, #12]
 80039ca:	48a8      	ldr	r0, [pc, #672]	; (8003c6c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x364>)
 80039cc:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80039d0:	230c      	movs	r3, #12
 80039d2:	ee17 7a90 	vmov	r7, s15
 80039d6:	ee17 1a90 	vmov	r1, s15
 80039da:	2202      	movs	r2, #2
 80039dc:	f7fd fe22 	bl	8001624 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LP3Buffer, TEXTAREACAL_LP3_SIZE, "%d", (uint32_t)accu_fft.signal_strength_pl);
 80039e0:	4aa3      	ldr	r2, [pc, #652]	; (8003c70 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x368>)
 80039e2:	463b      	mov	r3, r7
 80039e4:	210a      	movs	r1, #10
 80039e6:	f604 50f4 	addw	r0, r4, #3572	; 0xdf4
 80039ea:	f018 f98f 	bl	801bd0c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 80039ee:	4630      	mov	r0, r6
 80039f0:	f016 f8c6 	bl	8019b80 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 80039f4:	a809      	add	r0, sp, #36	; 0x24
 80039f6:	f00f f991 	bl	8012d1c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_RP1)
 80039fa:	f504 63a1 	add.w	r3, r4, #1288	; 0x508
 80039fe:	429d      	cmp	r5, r3
 8003a00:	d122      	bne.n	8003a48 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x140>
        SwipeContainer swipeContainer = swipeContainer1;
 8003a02:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 8003a06:	4631      	mov	r1, r6
 8003a08:	a809      	add	r0, sp, #36	; 0x24
 8003a0a:	f7ff ff15 	bl	8003838 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        ACCU_FFT accu_fft = accurate_FFT();
 8003a0e:	a801      	add	r0, sp, #4
 8003a10:	f7fd fb04 	bl	800101c <accurate_FFT>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)accu_fft.signal_strength_pr, 3, 12);
 8003a14:	eddd 7a01 	vldr	s15, [sp, #4]
 8003a18:	4894      	ldr	r0, [pc, #592]	; (8003c6c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x364>)
 8003a1a:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003a1e:	230c      	movs	r3, #12
 8003a20:	ee17 7a90 	vmov	r7, s15
 8003a24:	ee17 1a90 	vmov	r1, s15
 8003a28:	2203      	movs	r2, #3
 8003a2a:	f7fd fdfb 	bl	8001624 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_RP1Buffer, TEXTAREACAL_RP1_SIZE, "%d", (uint32_t)accu_fft.signal_strength_pr);
 8003a2e:	4a90      	ldr	r2, [pc, #576]	; (8003c70 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x368>)
 8003a30:	463b      	mov	r3, r7
 8003a32:	210a      	movs	r1, #10
 8003a34:	f604 6058 	addw	r0, r4, #3672	; 0xe58
 8003a38:	f018 f968 	bl	801bd0c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8003a3c:	4630      	mov	r0, r6
 8003a3e:	f016 f89f 	bl	8019b80 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8003a42:	a809      	add	r0, sp, #36	; 0x24
 8003a44:	f00f f96a 	bl	8012d1c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_RP2)
 8003a48:	f204 43cc 	addw	r3, r4, #1228	; 0x4cc
 8003a4c:	429d      	cmp	r5, r3
 8003a4e:	d122      	bne.n	8003a96 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x18e>
        SwipeContainer swipeContainer = swipeContainer1;
 8003a50:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 8003a54:	4631      	mov	r1, r6
 8003a56:	a809      	add	r0, sp, #36	; 0x24
 8003a58:	f7ff feee 	bl	8003838 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        ACCU_FFT accu_fft = accurate_FFT();
 8003a5c:	a801      	add	r0, sp, #4
 8003a5e:	f7fd fadd 	bl	800101c <accurate_FFT>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)accu_fft.signal_strength_pr, 4, 12);
 8003a62:	eddd 7a01 	vldr	s15, [sp, #4]
 8003a66:	4881      	ldr	r0, [pc, #516]	; (8003c6c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x364>)
 8003a68:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003a6c:	230c      	movs	r3, #12
 8003a6e:	ee17 7a90 	vmov	r7, s15
 8003a72:	ee17 1a90 	vmov	r1, s15
 8003a76:	2204      	movs	r2, #4
 8003a78:	f7fd fdd4 	bl	8001624 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_RP2Buffer, TEXTAREACAL_RP2_SIZE, "%d", (uint32_t)accu_fft.signal_strength_pr);
 8003a7c:	4a7c      	ldr	r2, [pc, #496]	; (8003c70 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x368>)
 8003a7e:	463b      	mov	r3, r7
 8003a80:	210a      	movs	r1, #10
 8003a82:	f604 6044 	addw	r0, r4, #3652	; 0xe44
 8003a86:	f018 f941 	bl	801bd0c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8003a8a:	4630      	mov	r0, r6
 8003a8c:	f016 f878 	bl	8019b80 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8003a90:	a809      	add	r0, sp, #36	; 0x24
 8003a92:	f00f f943 	bl	8012d1c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_RP3)
 8003a96:	f504 6392 	add.w	r3, r4, #1168	; 0x490
 8003a9a:	429d      	cmp	r5, r3
 8003a9c:	d122      	bne.n	8003ae4 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x1dc>
        SwipeContainer swipeContainer = swipeContainer1;
 8003a9e:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 8003aa2:	4631      	mov	r1, r6
 8003aa4:	a809      	add	r0, sp, #36	; 0x24
 8003aa6:	f7ff fec7 	bl	8003838 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        ACCU_FFT accu_fft = accurate_FFT();
 8003aaa:	a801      	add	r0, sp, #4
 8003aac:	f7fd fab6 	bl	800101c <accurate_FFT>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)accu_fft.signal_strength_pr, 5, 12);
 8003ab0:	eddd 7a01 	vldr	s15, [sp, #4]
 8003ab4:	486d      	ldr	r0, [pc, #436]	; (8003c6c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x364>)
 8003ab6:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003aba:	230c      	movs	r3, #12
 8003abc:	ee17 7a90 	vmov	r7, s15
 8003ac0:	ee17 1a90 	vmov	r1, s15
 8003ac4:	2205      	movs	r2, #5
 8003ac6:	f7fd fdad 	bl	8001624 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_RP3Buffer, TEXTAREACAL_RP3_SIZE, "%d", (uint32_t)accu_fft.signal_strength_pr);
 8003aca:	4a69      	ldr	r2, [pc, #420]	; (8003c70 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x368>)
 8003acc:	463b      	mov	r3, r7
 8003ace:	210a      	movs	r1, #10
 8003ad0:	f504 6063 	add.w	r0, r4, #3632	; 0xe30
 8003ad4:	f018 f91a 	bl	801bd0c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8003ad8:	4630      	mov	r0, r6
 8003ada:	f016 f851 	bl	8019b80 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8003ade:	a809      	add	r0, sp, #36	; 0x24
 8003ae0:	f00f f91c 	bl	8012d1c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_LH1)
 8003ae4:	f504 63f3 	add.w	r3, r4, #1944	; 0x798
 8003ae8:	429d      	cmp	r5, r3
 8003aea:	d122      	bne.n	8003b32 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x22a>
        SwipeContainer swipeContainer = swipeContainer1;
 8003aec:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 8003af0:	4631      	mov	r1, r6
 8003af2:	a809      	add	r0, sp, #36	; 0x24
 8003af4:	f7ff fea0 	bl	8003838 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        ACCU_FFT accu_fft = accurate_FFT();
 8003af8:	a801      	add	r0, sp, #4
 8003afa:	f7fd fa8f 	bl	800101c <accurate_FFT>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)accu_fft.signal_strength_hsl, 6, 12);
 8003afe:	eddd 7a07 	vldr	s15, [sp, #28]
 8003b02:	485a      	ldr	r0, [pc, #360]	; (8003c6c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x364>)
 8003b04:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003b08:	230c      	movs	r3, #12
 8003b0a:	ee17 7a90 	vmov	r7, s15
 8003b0e:	ee17 1a90 	vmov	r1, s15
 8003b12:	2206      	movs	r2, #6
 8003b14:	f7fd fd86 	bl	8001624 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LH1Buffer, TEXTAREACAL_LH1_SIZE, "%d", (uint32_t)accu_fft.signal_strength_hsl);
 8003b18:	4a55      	ldr	r2, [pc, #340]	; (8003c70 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x368>)
 8003b1a:	463b      	mov	r3, r7
 8003b1c:	210a      	movs	r1, #10
 8003b1e:	f604 6094 	addw	r0, r4, #3732	; 0xe94
 8003b22:	f018 f8f3 	bl	801bd0c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8003b26:	4630      	mov	r0, r6
 8003b28:	f016 f82a 	bl	8019b80 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8003b2c:	a809      	add	r0, sp, #36	; 0x24
 8003b2e:	f00f f8f5 	bl	8012d1c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_LH2)
 8003b32:	f204 735c 	addw	r3, r4, #1884	; 0x75c
 8003b36:	429d      	cmp	r5, r3
 8003b38:	d122      	bne.n	8003b80 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x278>
        SwipeContainer swipeContainer = swipeContainer1;
 8003b3a:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 8003b3e:	4631      	mov	r1, r6
 8003b40:	a809      	add	r0, sp, #36	; 0x24
 8003b42:	f7ff fe79 	bl	8003838 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        ACCU_FFT accu_fft = accurate_FFT();
 8003b46:	a801      	add	r0, sp, #4
 8003b48:	f7fd fa68 	bl	800101c <accurate_FFT>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)accu_fft.signal_strength_hsl, 7, 12);
 8003b4c:	eddd 7a07 	vldr	s15, [sp, #28]
 8003b50:	4846      	ldr	r0, [pc, #280]	; (8003c6c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x364>)
 8003b52:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003b56:	230c      	movs	r3, #12
 8003b58:	ee17 7a90 	vmov	r7, s15
 8003b5c:	ee17 1a90 	vmov	r1, s15
 8003b60:	2207      	movs	r2, #7
 8003b62:	f7fd fd5f 	bl	8001624 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LH2Buffer, TEXTAREACAL_LH2_SIZE, "%d", (uint32_t)accu_fft.signal_strength_hsl);
 8003b66:	4a42      	ldr	r2, [pc, #264]	; (8003c70 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x368>)
 8003b68:	463b      	mov	r3, r7
 8003b6a:	210a      	movs	r1, #10
 8003b6c:	f504 6068 	add.w	r0, r4, #3712	; 0xe80
 8003b70:	f018 f8cc 	bl	801bd0c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8003b74:	4630      	mov	r0, r6
 8003b76:	f016 f803 	bl	8019b80 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8003b7a:	a809      	add	r0, sp, #36	; 0x24
 8003b7c:	f00f f8ce 	bl	8012d1c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_LH3)
 8003b80:	f504 63e4 	add.w	r3, r4, #1824	; 0x720
 8003b84:	429d      	cmp	r5, r3
 8003b86:	d122      	bne.n	8003bce <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x2c6>
        SwipeContainer swipeContainer = swipeContainer1;
 8003b88:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 8003b8c:	4631      	mov	r1, r6
 8003b8e:	a809      	add	r0, sp, #36	; 0x24
 8003b90:	f7ff fe52 	bl	8003838 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        ACCU_FFT accu_fft = accurate_FFT();
 8003b94:	a801      	add	r0, sp, #4
 8003b96:	f7fd fa41 	bl	800101c <accurate_FFT>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)accu_fft.signal_strength_hsl, 8, 12);
 8003b9a:	eddd 7a07 	vldr	s15, [sp, #28]
 8003b9e:	4833      	ldr	r0, [pc, #204]	; (8003c6c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x364>)
 8003ba0:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003ba4:	230c      	movs	r3, #12
 8003ba6:	ee17 7a90 	vmov	r7, s15
 8003baa:	ee17 1a90 	vmov	r1, s15
 8003bae:	2208      	movs	r2, #8
 8003bb0:	f7fd fd38 	bl	8001624 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LH3Buffer, TEXTAREACAL_LH3_SIZE, "%d", (uint32_t)accu_fft.signal_strength_hsl);
 8003bb4:	4a2e      	ldr	r2, [pc, #184]	; (8003c70 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x368>)
 8003bb6:	463b      	mov	r3, r7
 8003bb8:	210a      	movs	r1, #10
 8003bba:	f604 606c 	addw	r0, r4, #3692	; 0xe6c
 8003bbe:	f018 f8a5 	bl	801bd0c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8003bc2:	4630      	mov	r0, r6
 8003bc4:	f015 ffdc 	bl	8019b80 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8003bc8:	a809      	add	r0, sp, #36	; 0x24
 8003bca:	f00f f8a7 	bl	8012d1c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_RH1)
 8003bce:	f604 2328 	addw	r3, r4, #2600	; 0xa28
 8003bd2:	429d      	cmp	r5, r3
 8003bd4:	d122      	bne.n	8003c1c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x314>
        SwipeContainer swipeContainer = swipeContainer1;
 8003bd6:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 8003bda:	4631      	mov	r1, r6
 8003bdc:	a809      	add	r0, sp, #36	; 0x24
 8003bde:	f7ff fe2b 	bl	8003838 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        ACCU_FFT accu_fft = accurate_FFT();
 8003be2:	a801      	add	r0, sp, #4
 8003be4:	f7fd fa1a 	bl	800101c <accurate_FFT>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)accu_fft.signal_strength_hsr, 9, 12);
 8003be8:	eddd 7a05 	vldr	s15, [sp, #20]
 8003bec:	481f      	ldr	r0, [pc, #124]	; (8003c6c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x364>)
 8003bee:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003bf2:	230c      	movs	r3, #12
 8003bf4:	ee17 7a90 	vmov	r7, s15
 8003bf8:	ee17 1a90 	vmov	r1, s15
 8003bfc:	2209      	movs	r2, #9
 8003bfe:	f7fd fd11 	bl	8001624 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_RH1Buffer, TEXTAREACAL_RH1_SIZE, "%d", (uint32_t)accu_fft.signal_strength_hsr);
 8003c02:	4a1b      	ldr	r2, [pc, #108]	; (8003c70 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x368>)
 8003c04:	463b      	mov	r3, r7
 8003c06:	210a      	movs	r1, #10
 8003c08:	f504 606d 	add.w	r0, r4, #3792	; 0xed0
 8003c0c:	f018 f87e 	bl	801bd0c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8003c10:	4630      	mov	r0, r6
 8003c12:	f015 ffb5 	bl	8019b80 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8003c16:	a809      	add	r0, sp, #36	; 0x24
 8003c18:	f00f f880 	bl	8012d1c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_RH2)
 8003c1c:	f604 13ec 	addw	r3, r4, #2540	; 0x9ec
 8003c20:	429d      	cmp	r5, r3
 8003c22:	d127      	bne.n	8003c74 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x36c>
        SwipeContainer swipeContainer = swipeContainer1;
 8003c24:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 8003c28:	4631      	mov	r1, r6
 8003c2a:	a809      	add	r0, sp, #36	; 0x24
 8003c2c:	f7ff fe04 	bl	8003838 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        ACCU_FFT accu_fft = accurate_FFT();
 8003c30:	a801      	add	r0, sp, #4
 8003c32:	f7fd f9f3 	bl	800101c <accurate_FFT>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)accu_fft.signal_strength_hsr, 10, 12);
 8003c36:	eddd 7a05 	vldr	s15, [sp, #20]
 8003c3a:	480c      	ldr	r0, [pc, #48]	; (8003c6c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x364>)
 8003c3c:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003c40:	230c      	movs	r3, #12
 8003c42:	ee17 7a90 	vmov	r7, s15
 8003c46:	ee17 1a90 	vmov	r1, s15
 8003c4a:	220a      	movs	r2, #10
 8003c4c:	f7fd fcea 	bl	8001624 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_RH2Buffer, TEXTAREACAL_RH2_SIZE, "%d", (uint32_t)accu_fft.signal_strength_hsr);
 8003c50:	4a07      	ldr	r2, [pc, #28]	; (8003c70 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x368>)
 8003c52:	463b      	mov	r3, r7
 8003c54:	210a      	movs	r1, #10
 8003c56:	f604 60bc 	addw	r0, r4, #3772	; 0xebc
 8003c5a:	f018 f857 	bl	801bd0c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8003c5e:	4630      	mov	r0, r6
 8003c60:	f015 ff8e 	bl	8019b80 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8003c64:	a809      	add	r0, sp, #36	; 0x24
 8003c66:	f00f f859 	bl	8012d1c <_ZN8touchgfx14SwipeContainerD1Ev>
 8003c6a:	e003      	b.n	8003c74 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x36c>
 8003c6c:	081e0000 	.word	0x081e0000
 8003c70:	0802f456 	.word	0x0802f456
    if (&src == &buttonWithIcon_RH3)
 8003c74:	f504 631b 	add.w	r3, r4, #2480	; 0x9b0
 8003c78:	429d      	cmp	r5, r3
 8003c7a:	d122      	bne.n	8003cc2 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3ba>
        SwipeContainer swipeContainer = swipeContainer1;
 8003c7c:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 8003c80:	4631      	mov	r1, r6
 8003c82:	a809      	add	r0, sp, #36	; 0x24
 8003c84:	f7ff fdd8 	bl	8003838 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        ACCU_FFT accu_fft = accurate_FFT();
 8003c88:	a801      	add	r0, sp, #4
 8003c8a:	f7fd f9c7 	bl	800101c <accurate_FFT>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)accu_fft.signal_strength_hsr, 11, 12);
 8003c8e:	eddd 7a05 	vldr	s15, [sp, #20]
 8003c92:	4813      	ldr	r0, [pc, #76]	; (8003ce0 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3d8>)
 8003c94:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003c98:	230c      	movs	r3, #12
 8003c9a:	ee17 7a90 	vmov	r7, s15
 8003c9e:	ee17 1a90 	vmov	r1, s15
 8003ca2:	220b      	movs	r2, #11
 8003ca4:	f7fd fcbe 	bl	8001624 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_RH3Buffer, TEXTAREACAL_RH3_SIZE, "%d", (uint32_t)accu_fft.signal_strength_hsr);
 8003ca8:	4a0e      	ldr	r2, [pc, #56]	; (8003ce4 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3dc>)
 8003caa:	463b      	mov	r3, r7
 8003cac:	210a      	movs	r1, #10
 8003cae:	f604 60a8 	addw	r0, r4, #3752	; 0xea8
 8003cb2:	f018 f82b 	bl	801bd0c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8003cb6:	4630      	mov	r0, r6
 8003cb8:	f015 ff62 	bl	8019b80 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8003cbc:	a809      	add	r0, sp, #36	; 0x24
 8003cbe:	f00f f82d 	bl	8012d1c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithLabel3)
 8003cc2:	3498      	adds	r4, #152	; 0x98
 8003cc4:	42a5      	cmp	r5, r4
 8003cc6:	d108      	bne.n	8003cda <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3d2>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8003cc8:	f014 fe72 	bl	80189b0 <_ZN8touchgfx11Application11getInstanceEv>
        application().gotoMain_MenuScreenWipeTransitionWest();
 8003ccc:	f001 fc58 	bl	8005580 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
}
 8003cd0:	b047      	add	sp, #284	; 0x11c
 8003cd2:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
        calculate_coeff();
 8003cd6:	f7fd bc15 	b.w	8001504 <calculate_coeff>
}
 8003cda:	b047      	add	sp, #284	; 0x11c
 8003cdc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003cde:	bf00      	nop
 8003ce0:	081e0000 	.word	0x081e0000
 8003ce4:	0802f456 	.word	0x0802f456

08003ce8 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>:
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setStart(T x, T y)
    {
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8003ce8:	0152      	lsls	r2, r2, #5
 8003cea:	0149      	lsls	r1, r1, #5
 8003cec:	f010 bf6a 	b.w	8014bc4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>

08003cf0 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>:
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setEnd(T x, T y)
    {
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8003cf0:	0152      	lsls	r2, r2, #5
 8003cf2:	0149      	lsls	r1, r1, #5
 8003cf4:	f010 bf71 	b.w	8014bda <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>

08003cf8 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>:
     * @see updateLineWidth
     *
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setLineWidth(T width)
 8003cf8:	b410      	push	{r4}
     *
     * @note The area containing the Line is not invalidated.
     */
    void setLineWidth(CWRUtil::Q5 widthQ5)
    {
        if (lineWidthQ5 == widthQ5)
 8003cfa:	6bc4      	ldr	r4, [r0, #60]	; 0x3c
 8003cfc:	ebb4 1f41 	cmp.w	r4, r1, lsl #5
    template <typename T>
    FORCE_INLINE_FUNCTION
#endif
    static Q5 toQ5(T value)
    {
        return Q5((int)(value * Rasterizer::POLY_BASE_SIZE));
 8003d00:	ea4f 1241 	mov.w	r2, r1, lsl #5
 8003d04:	d004      	beq.n	8003d10 <_ZN8touchgfx4Line12setLineWidthIiEEvT_+0x18>
    }
 8003d06:	f85d 4b04 	ldr.w	r4, [sp], #4
        {
            return;
        }

        lineWidthQ5 = widthQ5;
 8003d0a:	63c2      	str	r2, [r0, #60]	; 0x3c

        updateCachedShape();
 8003d0c:	f010 be64 	b.w	80149d8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    }
 8003d10:	f85d 4b04 	ldr.w	r4, [sp], #4
 8003d14:	4770      	bx	lr
	...

08003d18 <_ZN23Calibration_PadViewBaseC1Ev>:
Calibration_PadViewBase::Calibration_PadViewBase() :
 8003d18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003d1c:	ed2d 8b10 	vpush	{d8-d15}
 8003d20:	4604      	mov	r4, r0
 8003d22:	b0ad      	sub	sp, #180	; 0xb4
    buttonCallback(this, &Calibration_PadViewBase::buttonCallbackHandler)
 8003d24:	46a1      	mov	r9, r4
template <class T>
class View : public Screen
{
public:
    View()
        : presenter(0)
 8003d26:	2500      	movs	r5, #0
 8003d28:	f016 fac2 	bl	801a2b0 <_ZN8touchgfx6ScreenC1Ev>
 8003d2c:	4be5      	ldr	r3, [pc, #916]	; (80040c4 <_ZN23Calibration_PadViewBaseC1Ev+0x3ac>)
 8003d2e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8003d30:	f849 3b40 	str.w	r3, [r9], #64
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 8003d34:	2226      	movs	r2, #38	; 0x26
 8003d36:	4629      	mov	r1, r5
 8003d38:	4648      	mov	r0, r9
 8003d3a:	f02a f80e 	bl	802dd5a <memset>
 8003d3e:	4648      	mov	r0, r9
 8003d40:	f7ff fcca 	bl	80036d8 <_ZN8touchgfx6WidgetC1Ev>
 8003d44:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8003d48:	26ff      	movs	r6, #255	; 0xff
 8003d4a:	4bdf      	ldr	r3, [pc, #892]	; (80040c8 <_ZN23Calibration_PadViewBaseC1Ev+0x3b0>)
 8003d4c:	6423      	str	r3, [r4, #64]	; 0x40
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
        : Widget(), bitmap(bmp), alpha(255)
 8003d4e:	2226      	movs	r2, #38	; 0x26
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 8003d50:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8003d54:	4629      	mov	r1, r5
 8003d56:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8003d5a:	4640      	mov	r0, r8
        : color(col)
 8003d5c:	66a5      	str	r5, [r4, #104]	; 0x68
 8003d5e:	f8ad 30a4 	strh.w	r3, [sp, #164]	; 0xa4
 8003d62:	f029 fffa 	bl	802dd5a <memset>
 8003d66:	4640      	mov	r0, r8
 8003d68:	f7ff fcb6 	bl	80036d8 <_ZN8touchgfx6WidgetC1Ev>
 8003d6c:	4bd7      	ldr	r3, [pc, #860]	; (80040cc <_ZN23Calibration_PadViewBaseC1Ev+0x3b4>)
 8003d6e:	66e3      	str	r3, [r4, #108]	; 0x6c
 8003d70:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
 8003d74:	f8bd 30a4 	ldrh.w	r3, [sp, #164]	; 0xa4
 8003d78:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
    {
        Image::setBitmap(bmp);
 8003d7c:	ae29      	add	r6, sp, #164	; 0xa4
 8003d7e:	4631      	mov	r1, r6
 8003d80:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8003d84:	4640      	mov	r0, r8
 8003d86:	f012 f914 	bl	8015fb2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003d8a:	4658      	mov	r0, fp
 8003d8c:	f012 fa48 	bl	8016220 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8003d90:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 8003d94:	4618      	mov	r0, r3
 8003d96:	ee08 3a10 	vmov	s16, r3
 8003d9a:	f00f f8ed 	bl	8012f78 <_ZN8touchgfx14SwipeContainerC1Ev>
 8003d9e:	f504 73ea 	add.w	r3, r4, #468	; 0x1d4
 8003da2:	4618      	mov	r0, r3
 8003da4:	ee08 3a90 	vmov	s17, r3
 8003da8:	f7ff fc84 	bl	80036b4 <_ZN8touchgfx9ContainerC1Ev>
 8003dac:	f504 7300 	add.w	r3, r4, #512	; 0x200
 8003db0:	4618      	mov	r0, r3
 8003db2:	9311      	str	r3, [sp, #68]	; 0x44
 8003db4:	f012 f8d6 	bl	8015f64 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003db8:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 8003dbc:	f504 771e 	add.w	r7, r4, #632	; 0x278
 8003dc0:	4618      	mov	r0, r3
 8003dc2:	9312      	str	r3, [sp, #72]	; 0x48
 8003dc4:	f012 f8ce 	bl	8015f64 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003dc8:	4638      	mov	r0, r7
 8003dca:	f012 f8cb 	bl	8015f64 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003dce:	f504 732d 	add.w	r3, r4, #692	; 0x2b4
 8003dd2:	4618      	mov	r0, r3
 8003dd4:	ee0d 3a90 	vmov	s27, r3
 8003dd8:	f7ff fd02 	bl	80037e0 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003ddc:	f504 7340 	add.w	r3, r4, #768	; 0x300
 8003de0:	4618      	mov	r0, r3
 8003de2:	ee0e 3a10 	vmov	s28, r3
 8003de6:	f7ff fcfb 	bl	80037e0 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003dea:	f504 7353 	add.w	r3, r4, #844	; 0x34c
 8003dee:	4618      	mov	r0, r3
 8003df0:	ee0e 3a90 	vmov	s29, r3
 8003df4:	f7ff fcf4 	bl	80037e0 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003df8:	f504 7366 	add.w	r3, r4, #920	; 0x398
 8003dfc:	4618      	mov	r0, r3
 8003dfe:	ee0a 3a90 	vmov	s21, r3
 8003e02:	f010 fdc9 	bl	8014998 <_ZN8touchgfx4LineC1Ev>
 8003e06:	f504 6381 	add.w	r3, r4, #1032	; 0x408
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8003e0a:	4618      	mov	r0, r3
 8003e0c:	931c      	str	r3, [sp, #112]	; 0x70
 8003e0e:	f7ff fa67 	bl	80032e0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003e12:	4baf      	ldr	r3, [pc, #700]	; (80040d0 <_ZN23Calibration_PadViewBaseC1Ev+0x3b8>)
 8003e14:	f8c4 3408 	str.w	r3, [r4, #1032]	; 0x408
 8003e18:	f103 0224 	add.w	r2, r3, #36	; 0x24
 8003e1c:	f204 411c 	addw	r1, r4, #1052	; 0x41c
 8003e20:	f8c4 2410 	str.w	r2, [r4, #1040]	; 0x410
 8003e24:	4608      	mov	r0, r1
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 8003e26:	f8c4 5414 	str.w	r5, [r4, #1044]	; 0x414
 8003e2a:	f204 4a64 	addw	sl, r4, #1124	; 0x464
 8003e2e:	9107      	str	r1, [sp, #28]
 8003e30:	f7ff fcb6 	bl	80037a0 <_ZN8touchgfx8TextAreaC1Ev>
 8003e34:	4650      	mov	r0, sl
 8003e36:	f7ff fc3d 	bl	80036b4 <_ZN8touchgfx9ContainerC1Ev>
 8003e3a:	f504 6192 	add.w	r1, r4, #1168	; 0x490
 8003e3e:	4608      	mov	r0, r1
 8003e40:	9113      	str	r1, [sp, #76]	; 0x4c
 8003e42:	f012 f88f 	bl	8015f64 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003e46:	f204 41cc 	addw	r1, r4, #1228	; 0x4cc
 8003e4a:	4608      	mov	r0, r1
 8003e4c:	9114      	str	r1, [sp, #80]	; 0x50
 8003e4e:	f012 f889 	bl	8015f64 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003e52:	f504 61a1 	add.w	r1, r4, #1288	; 0x508
 8003e56:	4608      	mov	r0, r1
 8003e58:	9115      	str	r1, [sp, #84]	; 0x54
 8003e5a:	f012 f883 	bl	8015f64 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003e5e:	f204 5144 	addw	r1, r4, #1348	; 0x544
 8003e62:	4608      	mov	r0, r1
 8003e64:	9108      	str	r1, [sp, #32]
 8003e66:	f7ff fcbb 	bl	80037e0 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003e6a:	f504 61b2 	add.w	r1, r4, #1424	; 0x590
 8003e6e:	4608      	mov	r0, r1
 8003e70:	9109      	str	r1, [sp, #36]	; 0x24
 8003e72:	f7ff fcb5 	bl	80037e0 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003e76:	f204 51dc 	addw	r1, r4, #1500	; 0x5dc
 8003e7a:	4608      	mov	r0, r1
 8003e7c:	910a      	str	r1, [sp, #40]	; 0x28
 8003e7e:	f7ff fcaf 	bl	80037e0 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003e82:	f504 61c5 	add.w	r1, r4, #1576	; 0x628
 8003e86:	4608      	mov	r0, r1
 8003e88:	ee0b 1a10 	vmov	s22, r1
 8003e8c:	f010 fd84 	bl	8014998 <_ZN8touchgfx4LineC1Ev>
 8003e90:	f504 61d3 	add.w	r1, r4, #1688	; 0x698
 8003e94:	4608      	mov	r0, r1
 8003e96:	911d      	str	r1, [sp, #116]	; 0x74
 8003e98:	f7ff fa22 	bl	80032e0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003e9c:	4b8c      	ldr	r3, [pc, #560]	; (80040d0 <_ZN23Calibration_PadViewBaseC1Ev+0x3b8>)
 8003e9e:	f8c4 3698 	str.w	r3, [r4, #1688]	; 0x698
 8003ea2:	f103 0224 	add.w	r2, r3, #36	; 0x24
 8003ea6:	f204 61ac 	addw	r1, r4, #1708	; 0x6ac
 8003eaa:	f8c4 26a0 	str.w	r2, [r4, #1696]	; 0x6a0
 8003eae:	4608      	mov	r0, r1
 8003eb0:	f8c4 56a4 	str.w	r5, [r4, #1700]	; 0x6a4
 8003eb4:	ee0f 1a10 	vmov	s30, r1
 8003eb8:	f7ff fc72 	bl	80037a0 <_ZN8touchgfx8TextAreaC1Ev>
 8003ebc:	f204 61f4 	addw	r1, r4, #1780	; 0x6f4
 8003ec0:	4608      	mov	r0, r1
 8003ec2:	ee09 1a10 	vmov	s18, r1
 8003ec6:	f7ff fbf5 	bl	80036b4 <_ZN8touchgfx9ContainerC1Ev>
 8003eca:	f504 61e4 	add.w	r1, r4, #1824	; 0x720
 8003ece:	4608      	mov	r0, r1
 8003ed0:	9116      	str	r1, [sp, #88]	; 0x58
 8003ed2:	f012 f847 	bl	8015f64 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003ed6:	f204 715c 	addw	r1, r4, #1884	; 0x75c
 8003eda:	4608      	mov	r0, r1
 8003edc:	9117      	str	r1, [sp, #92]	; 0x5c
 8003ede:	f012 f841 	bl	8015f64 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003ee2:	f504 61f3 	add.w	r1, r4, #1944	; 0x798
 8003ee6:	4608      	mov	r0, r1
 8003ee8:	9118      	str	r1, [sp, #96]	; 0x60
 8003eea:	f012 f83b 	bl	8015f64 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003eee:	f204 71d4 	addw	r1, r4, #2004	; 0x7d4
 8003ef2:	4608      	mov	r0, r1
 8003ef4:	910b      	str	r1, [sp, #44]	; 0x2c
 8003ef6:	f7ff fc73 	bl	80037e0 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003efa:	f504 6102 	add.w	r1, r4, #2080	; 0x820
 8003efe:	4608      	mov	r0, r1
 8003f00:	910c      	str	r1, [sp, #48]	; 0x30
 8003f02:	f7ff fc6d 	bl	80037e0 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003f06:	f604 016c 	addw	r1, r4, #2156	; 0x86c
 8003f0a:	4608      	mov	r0, r1
 8003f0c:	910d      	str	r1, [sp, #52]	; 0x34
 8003f0e:	f7ff fc67 	bl	80037e0 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003f12:	f604 01b8 	addw	r1, r4, #2232	; 0x8b8
 8003f16:	4608      	mov	r0, r1
 8003f18:	ee0b 1a90 	vmov	s23, r1
 8003f1c:	f010 fd3c 	bl	8014998 <_ZN8touchgfx4LineC1Ev>
 8003f20:	f604 1128 	addw	r1, r4, #2344	; 0x928
 8003f24:	4608      	mov	r0, r1
 8003f26:	911e      	str	r1, [sp, #120]	; 0x78
 8003f28:	f7ff f9da 	bl	80032e0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003f2c:	4b68      	ldr	r3, [pc, #416]	; (80040d0 <_ZN23Calibration_PadViewBaseC1Ev+0x3b8>)
 8003f2e:	f8c4 3928 	str.w	r3, [r4, #2344]	; 0x928
 8003f32:	f103 0224 	add.w	r2, r3, #36	; 0x24
 8003f36:	f604 113c 	addw	r1, r4, #2364	; 0x93c
 8003f3a:	f8c4 2930 	str.w	r2, [r4, #2352]	; 0x930
 8003f3e:	4608      	mov	r0, r1
 8003f40:	f8c4 5934 	str.w	r5, [r4, #2356]	; 0x934
 8003f44:	ee0f 1a90 	vmov	s31, r1
 8003f48:	f7ff fc2a 	bl	80037a0 <_ZN8touchgfx8TextAreaC1Ev>
 8003f4c:	f604 1184 	addw	r1, r4, #2436	; 0x984
 8003f50:	4608      	mov	r0, r1
 8003f52:	ee09 1a90 	vmov	s19, r1
 8003f56:	f7ff fbad 	bl	80036b4 <_ZN8touchgfx9ContainerC1Ev>
 8003f5a:	f504 611b 	add.w	r1, r4, #2480	; 0x9b0
 8003f5e:	4608      	mov	r0, r1
 8003f60:	9119      	str	r1, [sp, #100]	; 0x64
 8003f62:	f011 ffff 	bl	8015f64 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003f66:	f604 11ec 	addw	r1, r4, #2540	; 0x9ec
 8003f6a:	4608      	mov	r0, r1
 8003f6c:	911a      	str	r1, [sp, #104]	; 0x68
 8003f6e:	f011 fff9 	bl	8015f64 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003f72:	f604 2128 	addw	r1, r4, #2600	; 0xa28
 8003f76:	4608      	mov	r0, r1
 8003f78:	911b      	str	r1, [sp, #108]	; 0x6c
 8003f7a:	f011 fff3 	bl	8015f64 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003f7e:	f604 2164 	addw	r1, r4, #2660	; 0xa64
 8003f82:	4608      	mov	r0, r1
 8003f84:	910e      	str	r1, [sp, #56]	; 0x38
 8003f86:	f7ff fc2b 	bl	80037e0 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003f8a:	f504 612b 	add.w	r1, r4, #2736	; 0xab0
 8003f8e:	4608      	mov	r0, r1
 8003f90:	910f      	str	r1, [sp, #60]	; 0x3c
 8003f92:	f7ff fc25 	bl	80037e0 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003f96:	f604 21fc 	addw	r1, r4, #2812	; 0xafc
 8003f9a:	4608      	mov	r0, r1
 8003f9c:	9110      	str	r1, [sp, #64]	; 0x40
 8003f9e:	f7ff fc1f 	bl	80037e0 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003fa2:	f604 3148 	addw	r1, r4, #2888	; 0xb48
 8003fa6:	4608      	mov	r0, r1
 8003fa8:	ee0c 1a10 	vmov	s24, r1
 8003fac:	f010 fcf4 	bl	8014998 <_ZN8touchgfx4LineC1Ev>
 8003fb0:	f604 31b8 	addw	r1, r4, #3000	; 0xbb8
 8003fb4:	4608      	mov	r0, r1
 8003fb6:	911f      	str	r1, [sp, #124]	; 0x7c
 8003fb8:	f7ff f992 	bl	80032e0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003fbc:	4b44      	ldr	r3, [pc, #272]	; (80040d0 <_ZN23Calibration_PadViewBaseC1Ev+0x3b8>)
 8003fbe:	f8c4 3bb8 	str.w	r3, [r4, #3000]	; 0xbb8
 8003fc2:	f103 0224 	add.w	r2, r3, #36	; 0x24
 8003fc6:	f604 31cc 	addw	r1, r4, #3020	; 0xbcc
 8003fca:	f8c4 2bc0 	str.w	r2, [r4, #3008]	; 0xbc0
 8003fce:	4608      	mov	r0, r1
 8003fd0:	f8c4 5bc4 	str.w	r5, [r4, #3012]	; 0xbc4
 8003fd4:	9103      	str	r1, [sp, #12]
 8003fd6:	f7ff fbe3 	bl	80037a0 <_ZN8touchgfx8TextAreaC1Ev>
 8003fda:	f604 4114 	addw	r1, r4, #3092	; 0xc14
 8003fde:	4608      	mov	r0, r1
 8003fe0:	ee0c 1a90 	vmov	s25, r1
 8003fe4:	f010 fcd8 	bl	8014998 <_ZN8touchgfx4LineC1Ev>
 8003fe8:	f604 4184 	addw	r1, r4, #3204	; 0xc84
 8003fec:	4608      	mov	r0, r1
 8003fee:	9120      	str	r1, [sp, #128]	; 0x80
 8003ff0:	f7ff f976 	bl	80032e0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003ff4:	4b36      	ldr	r3, [pc, #216]	; (80040d0 <_ZN23Calibration_PadViewBaseC1Ev+0x3b8>)
 8003ff6:	f8c4 3c84 	str.w	r3, [r4, #3204]	; 0xc84
 8003ffa:	f103 0224 	add.w	r2, r3, #36	; 0x24
 8003ffe:	f604 4198 	addw	r1, r4, #3224	; 0xc98
 8004002:	f8c4 2c8c 	str.w	r2, [r4, #3212]	; 0xc8c
 8004006:	4608      	mov	r0, r1
 8004008:	f8c4 5c90 	str.w	r5, [r4, #3216]	; 0xc90
 800400c:	9104      	str	r1, [sp, #16]
 800400e:	f7ff fbc7 	bl	80037a0 <_ZN8touchgfx8TextAreaC1Ev>
 8004012:	f504 614e 	add.w	r1, r4, #3296	; 0xce0
 8004016:	4608      	mov	r0, r1
 8004018:	ee0d 1a10 	vmov	s26, r1
 800401c:	f010 fcbc 	bl	8014998 <_ZN8touchgfx4LineC1Ev>
 8004020:	f504 6155 	add.w	r1, r4, #3408	; 0xd50
 8004024:	4608      	mov	r0, r1
 8004026:	9121      	str	r1, [sp, #132]	; 0x84
 8004028:	f7ff f95a 	bl	80032e0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800402c:	4b28      	ldr	r3, [pc, #160]	; (80040d0 <_ZN23Calibration_PadViewBaseC1Ev+0x3b8>)
 800402e:	f8c4 3d50 	str.w	r3, [r4, #3408]	; 0xd50
 8004032:	f103 0224 	add.w	r2, r3, #36	; 0x24
 8004036:	f604 5364 	addw	r3, r4, #3428	; 0xd64
 800403a:	f8c4 2d58 	str.w	r2, [r4, #3416]	; 0xd58
 800403e:	4618      	mov	r0, r3
 8004040:	f8c4 5d5c 	str.w	r5, [r4, #3420]	; 0xd5c
 8004044:	9305      	str	r3, [sp, #20]
 8004046:	f7ff fbab 	bl	80037a0 <_ZN8touchgfx8TextAreaC1Ev>
 800404a:	f604 53ac 	addw	r3, r4, #3500	; 0xdac
 800404e:	4618      	mov	r0, r3
 8004050:	9306      	str	r3, [sp, #24]
 8004052:	f7ff fba5 	bl	80037a0 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8004056:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 800405a:	4a1e      	ldr	r2, [pc, #120]	; (80040d4 <_ZN23Calibration_PadViewBaseC1Ev+0x3bc>)
 800405c:	f8c3 2cf4 	str.w	r2, [r3, #3316]	; 0xcf4
 8004060:	4a1d      	ldr	r2, [pc, #116]	; (80040d8 <_ZN23Calibration_PadViewBaseC1Ev+0x3c0>)
 8004062:	f8c3 2cfc 	str.w	r2, [r3, #3324]	; 0xcfc
 8004066:	f8c3 4cf8 	str.w	r4, [r3, #3320]	; 0xcf8
 800406a:	f8c3 5d00 	str.w	r5, [r3, #3328]	; 0xd00
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800406e:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8004072:	f604 60e4 	addw	r0, r4, #3812	; 0xee4
 8004076:	f012 ff8f 	bl	8016f98 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 800407a:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800407e:	462a      	mov	r2, r5
 8004080:	4648      	mov	r0, r9
 8004082:	9300      	str	r3, [sp, #0]
 8004084:	4629      	mov	r1, r5
 8004086:	23f0      	movs	r3, #240	; 0xf0
 8004088:	f7ff fb01 	bl	800368e <_ZN8touchgfx8Drawable11setPositionEssss>
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 800408c:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8004090:	66a3      	str	r3, [r4, #104]	; 0x68
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8004092:	1d23      	adds	r3, r4, #4
 8004094:	4618      	mov	r0, r3
 8004096:	4649      	mov	r1, r9
 8004098:	ee0a 3a10 	vmov	s20, r3
 800409c:	f00e fbb0 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80040a0:	462a      	mov	r2, r5
 80040a2:	4640      	mov	r0, r8
 80040a4:	4629      	mov	r1, r5
 80040a6:	f7ff fae5 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
 80040aa:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80040ac:	4640      	mov	r0, r8
 80040ae:	4631      	mov	r1, r6
 80040b0:	f8ad 30a4 	strh.w	r3, [sp, #164]	; 0xa4
 80040b4:	f011 ff7d 	bl	8015fb2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80040b8:	4641      	mov	r1, r8
 80040ba:	ee1a 0a10 	vmov	r0, s20
 80040be:	f00e fb9f 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80040c2:	e00b      	b.n	80040dc <_ZN23Calibration_PadViewBaseC1Ev+0x3c4>
 80040c4:	0802f64c 	.word	0x0802f64c
 80040c8:	08031a58 	.word	0x08031a58
 80040cc:	08031ca4 	.word	0x08031ca4
 80040d0:	0803178c 	.word	0x0803178c
 80040d4:	0802f634 	.word	0x0802f634
 80040d8:	08003909 	.word	0x08003909
    buttonWithLabel3.setXY(33, 257);
 80040dc:	4658      	mov	r0, fp
 80040de:	f240 1201 	movw	r2, #257	; 0x101
 80040e2:	2121      	movs	r1, #33	; 0x21
 80040e4:	f7ff fac6 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
 80040e8:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80040ea:	4632      	mov	r2, r6
 80040ec:	a928      	add	r1, sp, #160	; 0xa0
 80040ee:	4658      	mov	r0, fp
 80040f0:	f8ad 30a0 	strh.w	r3, [sp, #160]	; 0xa0
 80040f4:	2302      	movs	r3, #2
 80040f6:	f8ad 30a4 	strh.w	r3, [sp, #164]	; 0xa4
 80040fa:	f011 fd64 	bl	8015bc6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80040fe:	233b      	movs	r3, #59	; 0x3b
        updateTextPosition();
 8004100:	4658      	mov	r0, fp
 8004102:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 8004106:	f7ff faf9 	bl	80036fc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 800410a:	f04f 33ff 	mov.w	r3, #4294967295
        colorPressed = col;
 800410e:	e9c4 3335 	strd	r3, r3, [r4, #212]	; 0xd4
    buttonWithLabel3.setAction(buttonCallback);
 8004112:	f504 53e7 	add.w	r3, r4, #7392	; 0x1ce0
 8004116:	3314      	adds	r3, #20
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 8004118:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 800411c:	4659      	mov	r1, fp
 800411e:	ee1a 0a10 	vmov	r0, s20
 8004122:	9302      	str	r3, [sp, #8]
 8004124:	f00e fb6c 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    swipeContainer1.setXY(0, 85);
 8004128:	ee18 0a10 	vmov	r0, s16
 800412c:	2255      	movs	r2, #85	; 0x55
 800412e:	4629      	mov	r1, r5
 8004130:	f7ff faa0 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
 8004134:	2306      	movs	r3, #6
    swipeContainer1.setPageIndicatorBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SWIPECONTAINER_MEDIUM_OFF_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SWIPECONTAINER_MEDIUM_ON_ACTIVE_ID));
 8004136:	ee18 0a10 	vmov	r0, s16
 800413a:	f8ad 30a0 	strh.w	r3, [sp, #160]	; 0xa0
 800413e:	4632      	mov	r2, r6
 8004140:	2307      	movs	r3, #7
 8004142:	a928      	add	r1, sp, #160	; 0xa0
 8004144:	f8ad 30a4 	strh.w	r3, [sp, #164]	; 0xa4
 8004148:	f00e ffb4 	bl	80130b4 <_ZN8touchgfx14SwipeContainer23setPageIndicatorBitmapsERKNS_6BitmapES3_>
    swipeContainer1.setPageIndicatorXY(80, 140);
 800414c:	228c      	movs	r2, #140	; 0x8c
 800414e:	ee18 0a10 	vmov	r0, s16
 8004152:	2150      	movs	r1, #80	; 0x50
 8004154:	f00e fe5c 	bl	8012e10 <_ZN8touchgfx14SwipeContainer18setPageIndicatorXYEss>
    swipeContainer1.setSwipeCutoff(50);
 8004158:	ee18 0a10 	vmov	r0, s16
 800415c:	2132      	movs	r1, #50	; 0x32
 800415e:	f00e fdda 	bl	8012d16 <_ZN8touchgfx14SwipeContainer14setSwipeCutoffEt>
    swipeContainer1.setEndSwipeElasticWidth(50);
 8004162:	ee18 0a10 	vmov	r0, s16
 8004166:	2132      	movs	r1, #50	; 0x32
 8004168:	f00e fe50 	bl	8012e0c <_ZN8touchgfx14SwipeContainer23setEndSwipeElasticWidthEt>
        rect.width = width;
 800416c:	4b47      	ldr	r3, [pc, #284]	; (800428c <_ZN23Calibration_PadViewBaseC1Ev+0x574>)
    buttonWithIcon_LP3.setXY(194, 97);
 800416e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8004170:	f8c4 31dc 	str.w	r3, [r4, #476]	; 0x1dc
 8004174:	2261      	movs	r2, #97	; 0x61
 8004176:	21c2      	movs	r1, #194	; 0xc2
 8004178:	f7ff fa7c 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
 800417c:	f04f 0809 	mov.w	r8, #9
 8004180:	f04f 0b01 	mov.w	fp, #1
    buttonWithIcon_LP3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8004184:	aa27      	add	r2, sp, #156	; 0x9c
 8004186:	9811      	ldr	r0, [sp, #68]	; 0x44
 8004188:	9600      	str	r6, [sp, #0]
 800418a:	ab28      	add	r3, sp, #160	; 0xa0
 800418c:	a926      	add	r1, sp, #152	; 0x98
 800418e:	f8ad 5098 	strh.w	r5, [sp, #152]	; 0x98
 8004192:	f8ad b09c 	strh.w	fp, [sp, #156]	; 0x9c
 8004196:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
 800419a:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 800419e:	f011 fe4c 	bl	8015e3a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 80041a2:	9b02      	ldr	r3, [sp, #8]
 80041a4:	f8c4 3228 	str.w	r3, [r4, #552]	; 0x228
    swipeContainerPadLeft.add(buttonWithIcon_LP3);
 80041a8:	9911      	ldr	r1, [sp, #68]	; 0x44
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconX(int16_t x)
    {
        iconX = x;
 80041aa:	f8c4 5238 	str.w	r5, [r4, #568]	; 0x238
 80041ae:	ee18 0a90 	vmov	r0, s17
 80041b2:	f00e fb25 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_LP2.setXY(194, 61);
 80041b6:	9812      	ldr	r0, [sp, #72]	; 0x48
 80041b8:	223d      	movs	r2, #61	; 0x3d
 80041ba:	21c2      	movs	r1, #194	; 0xc2
 80041bc:	f7ff fa5a 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_LP2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 80041c0:	aa27      	add	r2, sp, #156	; 0x9c
 80041c2:	9812      	ldr	r0, [sp, #72]	; 0x48
 80041c4:	9600      	str	r6, [sp, #0]
 80041c6:	ab28      	add	r3, sp, #160	; 0xa0
 80041c8:	a926      	add	r1, sp, #152	; 0x98
 80041ca:	f8ad 5098 	strh.w	r5, [sp, #152]	; 0x98
 80041ce:	f8ad b09c 	strh.w	fp, [sp, #156]	; 0x9c
 80041d2:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
 80041d6:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 80041da:	f011 fe2e 	bl	8015e3a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 80041de:	9b02      	ldr	r3, [sp, #8]
 80041e0:	f8c4 3264 	str.w	r3, [r4, #612]	; 0x264
    swipeContainerPadLeft.add(buttonWithIcon_LP2);
 80041e4:	9912      	ldr	r1, [sp, #72]	; 0x48
 80041e6:	f8c4 5274 	str.w	r5, [r4, #628]	; 0x274
 80041ea:	ee18 0a90 	vmov	r0, s17
 80041ee:	f00e fb07 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_LP1.setXY(194, 25);
 80041f2:	4638      	mov	r0, r7
 80041f4:	2219      	movs	r2, #25
 80041f6:	21c2      	movs	r1, #194	; 0xc2
 80041f8:	f7ff fa3c 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_LP1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 80041fc:	aa27      	add	r2, sp, #156	; 0x9c
 80041fe:	4638      	mov	r0, r7
 8004200:	ab28      	add	r3, sp, #160	; 0xa0
 8004202:	a926      	add	r1, sp, #152	; 0x98
 8004204:	9600      	str	r6, [sp, #0]
 8004206:	f8ad 5098 	strh.w	r5, [sp, #152]	; 0x98
 800420a:	f8ad b09c 	strh.w	fp, [sp, #156]	; 0x9c
 800420e:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
 8004212:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 8004216:	f011 fe10 	bl	8015e3a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 800421a:	9b02      	ldr	r3, [sp, #8]
 800421c:	f8c4 32a0 	str.w	r3, [r4, #672]	; 0x2a0
    swipeContainerPadLeft.add(buttonWithIcon_LP1);
 8004220:	4639      	mov	r1, r7
 8004222:	ee18 0a90 	vmov	r0, s17
 8004226:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 800422a:	f00e fae9 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LP3.setXY(10, 104);
 800422e:	2268      	movs	r2, #104	; 0x68
 8004230:	ee1d 0a90 	vmov	r0, s27
 8004234:	210a      	movs	r1, #10
 8004236:	f7ff fa1d 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800423a:	f04f 33ff 	mov.w	r3, #4294967295
 800423e:	f8c4 32e4 	str.w	r3, [r4, #740]	; 0x2e4
        boundingArea = calculateBoundingArea();
 8004242:	f8d4 32b4 	ldr.w	r3, [r4, #692]	; 0x2b4
        linespace = space;
 8004246:	f8a4 52e8 	strh.w	r5, [r4, #744]	; 0x2e8
        boundingArea = calculateBoundingArea();
 800424a:	af22      	add	r7, sp, #136	; 0x88
 800424c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8004250:	ee1d 1a90 	vmov	r1, s27
 8004254:	4638      	mov	r0, r7
 8004256:	4798      	blx	r3
 8004258:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 800425c:	f504 733c 	add.w	r3, r4, #752	; 0x2f0
 8004260:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004264:	4b0a      	ldr	r3, [pc, #40]	; (8004290 <_ZN23Calibration_PadViewBaseC1Ev+0x578>)
 8004266:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textAreaCal_LP3Buffer, TEXTAREACAL_LP3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_12P5).getText());
 8004268:	f604 59f4 	addw	r9, r4, #3572	; 0xdf4
 800426c:	b92b      	cbnz	r3, 800427a <_ZN23Calibration_PadViewBaseC1Ev+0x562>
 800426e:	4b09      	ldr	r3, [pc, #36]	; (8004294 <_ZN23Calibration_PadViewBaseC1Ev+0x57c>)
 8004270:	4a09      	ldr	r2, [pc, #36]	; (8004298 <_ZN23Calibration_PadViewBaseC1Ev+0x580>)
 8004272:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004274:	4809      	ldr	r0, [pc, #36]	; (800429c <_ZN23Calibration_PadViewBaseC1Ev+0x584>)
 8004276:	f029 fb6b 	bl	802d950 <__assert_func>
 800427a:	4b09      	ldr	r3, [pc, #36]	; (80042a0 <_ZN23Calibration_PadViewBaseC1Ev+0x588>)
 800427c:	881b      	ldrh	r3, [r3, #0]
 800427e:	2b26      	cmp	r3, #38	; 0x26
 8004280:	d812      	bhi.n	80042a8 <_ZN23Calibration_PadViewBaseC1Ev+0x590>
 8004282:	4b08      	ldr	r3, [pc, #32]	; (80042a4 <_ZN23Calibration_PadViewBaseC1Ev+0x58c>)
 8004284:	4a04      	ldr	r2, [pc, #16]	; (8004298 <_ZN23Calibration_PadViewBaseC1Ev+0x580>)
 8004286:	2161      	movs	r1, #97	; 0x61
 8004288:	e7f4      	b.n	8004274 <_ZN23Calibration_PadViewBaseC1Ev+0x55c>
 800428a:	bf00      	nop
 800428c:	00ac00f0 	.word	0x00ac00f0
 8004290:	20013894 	.word	0x20013894
 8004294:	0802f354 	.word	0x0802f354
 8004298:	0802f459 	.word	0x0802f459
 800429c:	0802f3d1 	.word	0x0802f3d1
 80042a0:	20013898 	.word	0x20013898
 80042a4:	0802f418 	.word	0x0802f418
        return texts->getText(typedTextId);
 80042a8:	4bdb      	ldr	r3, [pc, #876]	; (8004618 <_ZN23Calibration_PadViewBaseC1Ev+0x900>)
 80042aa:	2126      	movs	r1, #38	; 0x26
 80042ac:	6818      	ldr	r0, [r3, #0]
 80042ae:	f006 f9f3 	bl	800a698 <_ZNK8touchgfx5Texts7getTextEt>
 80042b2:	4ada      	ldr	r2, [pc, #872]	; (800461c <_ZN23Calibration_PadViewBaseC1Ev+0x904>)
 80042b4:	4603      	mov	r3, r0
 80042b6:	210a      	movs	r1, #10
 80042b8:	4648      	mov	r0, r9
 80042ba:	f017 fd27 	bl	801bd0c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_LP3.resizeToCurrentText();
 80042be:	ee1d 0a90 	vmov	r0, s27
        wc1 = value;
 80042c2:	f8c4 92fc 	str.w	r9, [r4, #764]	; 0x2fc
 80042c6:	f011 f8a3 	bl	8015410 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80042ca:	4bd5      	ldr	r3, [pc, #852]	; (8004620 <_ZN23Calibration_PadViewBaseC1Ev+0x908>)
 80042cc:	9329      	str	r3, [sp, #164]	; 0xa4
    textAreaCal_LP3.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH3));
 80042ce:	ee1d 0a90 	vmov	r0, s27
 80042d2:	2327      	movs	r3, #39	; 0x27
 80042d4:	4631      	mov	r1, r6
 80042d6:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 80042da:	f011 f8b9 	bl	8015450 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadLeft.add(textAreaCal_LP3);
 80042de:	ee1d 1a90 	vmov	r1, s27
 80042e2:	ee18 0a90 	vmov	r0, s17
 80042e6:	f00e fa8b 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LP2.setXY(22, 68);
 80042ea:	ee1e 0a10 	vmov	r0, s28
 80042ee:	2244      	movs	r2, #68	; 0x44
 80042f0:	2116      	movs	r1, #22
 80042f2:	f7ff f9bf 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
 80042f6:	f8d4 3300 	ldr.w	r3, [r4, #768]	; 0x300
        linespace = space;
 80042fa:	f8a4 5334 	strh.w	r5, [r4, #820]	; 0x334
        color = newColor;
 80042fe:	f04f 32ff 	mov.w	r2, #4294967295
        boundingArea = calculateBoundingArea();
 8004302:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8004306:	f8c4 2330 	str.w	r2, [r4, #816]	; 0x330
        boundingArea = calculateBoundingArea();
 800430a:	ee1e 1a10 	vmov	r1, s28
 800430e:	4638      	mov	r0, r7
 8004310:	4798      	blx	r3
 8004312:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8004316:	f504 734f 	add.w	r3, r4, #828	; 0x33c
 800431a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800431e:	4ac1      	ldr	r2, [pc, #772]	; (8004624 <_ZN23Calibration_PadViewBaseC1Ev+0x90c>)
 8004320:	6813      	ldr	r3, [r2, #0]
    Unicode::snprintf(textAreaCal_LP2Buffer, TEXTAREACAL_LP2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_01G5).getText());
 8004322:	f604 6908 	addw	r9, r4, #3592	; 0xe08
 8004326:	2b00      	cmp	r3, #0
 8004328:	d0a1      	beq.n	800426e <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800432a:	4abf      	ldr	r2, [pc, #764]	; (8004628 <_ZN23Calibration_PadViewBaseC1Ev+0x910>)
 800432c:	8813      	ldrh	r3, [r2, #0]
 800432e:	2b28      	cmp	r3, #40	; 0x28
 8004330:	d9a7      	bls.n	8004282 <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 8004332:	48b9      	ldr	r0, [pc, #740]	; (8004618 <_ZN23Calibration_PadViewBaseC1Ev+0x900>)
 8004334:	2128      	movs	r1, #40	; 0x28
 8004336:	6800      	ldr	r0, [r0, #0]
 8004338:	f006 f9ae 	bl	800a698 <_ZNK8touchgfx5Texts7getTextEt>
 800433c:	4ab7      	ldr	r2, [pc, #732]	; (800461c <_ZN23Calibration_PadViewBaseC1Ev+0x904>)
 800433e:	4603      	mov	r3, r0
 8004340:	210a      	movs	r1, #10
 8004342:	4648      	mov	r0, r9
 8004344:	f017 fce2 	bl	801bd0c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_LP2.resizeToCurrentText();
 8004348:	ee1e 0a10 	vmov	r0, s28
 800434c:	f8c4 9348 	str.w	r9, [r4, #840]	; 0x348
 8004350:	f011 f85e 	bl	8015410 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8004354:	4bb2      	ldr	r3, [pc, #712]	; (8004620 <_ZN23Calibration_PadViewBaseC1Ev+0x908>)
 8004356:	9329      	str	r3, [sp, #164]	; 0xa4
    textAreaCal_LP2.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH2));
 8004358:	ee1e 0a10 	vmov	r0, s28
 800435c:	2329      	movs	r3, #41	; 0x29
 800435e:	4631      	mov	r1, r6
 8004360:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004364:	f011 f874 	bl	8015450 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadLeft.add(textAreaCal_LP2);
 8004368:	ee1e 1a10 	vmov	r1, s28
 800436c:	ee18 0a90 	vmov	r0, s17
 8004370:	f00e fa46 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LP1.setXY(22, 32);
 8004374:	2220      	movs	r2, #32
 8004376:	ee1e 0a90 	vmov	r0, s29
 800437a:	2116      	movs	r1, #22
 800437c:	f7ff f97a 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
 8004380:	f8d4 334c 	ldr.w	r3, [r4, #844]	; 0x34c
        linespace = space;
 8004384:	f8a4 5380 	strh.w	r5, [r4, #896]	; 0x380
        color = newColor;
 8004388:	f04f 31ff 	mov.w	r1, #4294967295
        boundingArea = calculateBoundingArea();
 800438c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8004390:	f8c4 137c 	str.w	r1, [r4, #892]	; 0x37c
        boundingArea = calculateBoundingArea();
 8004394:	4638      	mov	r0, r7
 8004396:	ee1e 1a90 	vmov	r1, s29
 800439a:	4798      	blx	r3
 800439c:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80043a0:	f504 7362 	add.w	r3, r4, #904	; 0x388
 80043a4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80043a8:	499e      	ldr	r1, [pc, #632]	; (8004624 <_ZN23Calibration_PadViewBaseC1Ev+0x90c>)
 80043aa:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(textAreaCal_LP1Buffer, TEXTAREACAL_LP1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_TG06).getText());
 80043ac:	f604 691c 	addw	r9, r4, #3612	; 0xe1c
 80043b0:	2b00      	cmp	r3, #0
 80043b2:	f43f af5c 	beq.w	800426e <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80043b6:	4a9c      	ldr	r2, [pc, #624]	; (8004628 <_ZN23Calibration_PadViewBaseC1Ev+0x910>)
 80043b8:	8813      	ldrh	r3, [r2, #0]
 80043ba:	2b2a      	cmp	r3, #42	; 0x2a
 80043bc:	f67f af61 	bls.w	8004282 <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 80043c0:	4895      	ldr	r0, [pc, #596]	; (8004618 <_ZN23Calibration_PadViewBaseC1Ev+0x900>)
 80043c2:	212a      	movs	r1, #42	; 0x2a
 80043c4:	6800      	ldr	r0, [r0, #0]
 80043c6:	f006 f967 	bl	800a698 <_ZNK8touchgfx5Texts7getTextEt>
 80043ca:	4a94      	ldr	r2, [pc, #592]	; (800461c <_ZN23Calibration_PadViewBaseC1Ev+0x904>)
 80043cc:	4603      	mov	r3, r0
 80043ce:	210a      	movs	r1, #10
 80043d0:	4648      	mov	r0, r9
 80043d2:	f017 fc9b 	bl	801bd0c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_LP1.resizeToCurrentText();
 80043d6:	ee1e 0a90 	vmov	r0, s29
 80043da:	f8c4 9394 	str.w	r9, [r4, #916]	; 0x394
 80043de:	f011 f817 	bl	8015410 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80043e2:	4b8f      	ldr	r3, [pc, #572]	; (8004620 <_ZN23Calibration_PadViewBaseC1Ev+0x908>)
 80043e4:	9329      	str	r3, [sp, #164]	; 0xa4
    textAreaCal_LP1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH1));
 80043e6:	ee1e 0a90 	vmov	r0, s29
 80043ea:	2331      	movs	r3, #49	; 0x31
 80043ec:	4631      	mov	r1, r6
 80043ee:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
    line1_LP.setPosition(0, 15, 240, 10);
 80043f2:	f04f 090a 	mov.w	r9, #10
    textAreaCal_LP1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH1));
 80043f6:	f011 f82b 	bl	8015450 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadLeft.add(textAreaCal_LP1);
 80043fa:	ee1e 1a90 	vmov	r1, s29
 80043fe:	ee18 0a90 	vmov	r0, s17
 8004402:	f00e f9fd 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_LP.setPosition(0, 15, 240, 10);
 8004406:	23f0      	movs	r3, #240	; 0xf0
 8004408:	ee1a 0a90 	vmov	r0, s21
 800440c:	220f      	movs	r2, #15
 800440e:	4629      	mov	r1, r5
 8004410:	f8cd 9000 	str.w	r9, [sp]
 8004414:	f7ff f93b 	bl	800368e <_ZN8touchgfx8Drawable11setPositionEssss>
 8004418:	f04f 3cff 	mov.w	ip, #4294967295
        canvasPainter = &painter;
 800441c:	991c      	ldr	r1, [sp, #112]	; 0x70
 800441e:	f8c4 c414 	str.w	ip, [r4, #1044]	; 0x414
    line1_LP.setStart(5, 5);
 8004422:	2205      	movs	r2, #5
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
 8004424:	f8a4 c418 	strh.w	ip, [r4, #1048]	; 0x418
 8004428:	ee1a 0a90 	vmov	r0, s21
 800442c:	f8c4 13c0 	str.w	r1, [r4, #960]	; 0x3c0
 8004430:	4611      	mov	r1, r2
 8004432:	f7ff fc59 	bl	8003ce8 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_LP.setEnd(235, 5);
 8004436:	2205      	movs	r2, #5
 8004438:	ee1a 0a90 	vmov	r0, s21
 800443c:	21eb      	movs	r1, #235	; 0xeb
 800443e:	f7ff fc57 	bl	8003cf0 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_LP.setLineWidth(1);
 8004442:	ee1a 0a90 	vmov	r0, s21
 8004446:	4659      	mov	r1, fp
 8004448:	f7ff fc56 	bl	8003cf8 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_LP.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800444c:	ee1a 0a90 	vmov	r0, s21
 8004450:	4659      	mov	r1, fp
 8004452:	f010 fbcd 	bl	8014bf0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    swipeContainerPadLeft.add(line1_LP);
 8004456:	ee1a 1a90 	vmov	r1, s21
 800445a:	ee18 0a90 	vmov	r0, s17
 800445e:	f00e f9cf 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1_LP.setXY(96, 0);
 8004462:	462a      	mov	r2, r5
 8004464:	9807      	ldr	r0, [sp, #28]
 8004466:	2160      	movs	r1, #96	; 0x60
 8004468:	f7ff f904 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800446c:	f04f 3eff 	mov.w	lr, #4294967295
 8004470:	f8c4 e44c 	str.w	lr, [r4, #1100]	; 0x44c
        boundingArea = calculateBoundingArea();
 8004474:	4638      	mov	r0, r7
 8004476:	9907      	ldr	r1, [sp, #28]
        linespace = space;
 8004478:	f8a4 5450 	strh.w	r5, [r4, #1104]	; 0x450
        boundingArea = calculateBoundingArea();
 800447c:	f010 fd4e 	bl	8014f1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004480:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8004484:	f504 638b 	add.w	r3, r4, #1112	; 0x458
 8004488:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800448c:	4b64      	ldr	r3, [pc, #400]	; (8004620 <_ZN23Calibration_PadViewBaseC1Ev+0x908>)
    textArea1_LP.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q2TU));
 800448e:	9807      	ldr	r0, [sp, #28]
 8004490:	9329      	str	r3, [sp, #164]	; 0xa4
 8004492:	4631      	mov	r1, r6
 8004494:	2325      	movs	r3, #37	; 0x25
 8004496:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 800449a:	f010 ffd9 	bl	8015450 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadLeft.add(textArea1_LP);
 800449e:	9907      	ldr	r1, [sp, #28]
 80044a0:	ee18 0a90 	vmov	r0, s17
 80044a4:	f00e f9ac 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    swipeContainer1.add(swipeContainerPadLeft);
 80044a8:	ee18 1a90 	vmov	r1, s17
 80044ac:	ee18 0a10 	vmov	r0, s16
 80044b0:	f00e fe89 	bl	80131c6 <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>
 80044b4:	4b5d      	ldr	r3, [pc, #372]	; (800462c <_ZN23Calibration_PadViewBaseC1Ev+0x914>)
    buttonWithIcon_RP3.setXY(194, 97);
 80044b6:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80044b8:	f8c4 346c 	str.w	r3, [r4, #1132]	; 0x46c
 80044bc:	2261      	movs	r2, #97	; 0x61
 80044be:	21c2      	movs	r1, #194	; 0xc2
 80044c0:	f7ff f8d8 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RP3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 80044c4:	f10d 0ea0 	add.w	lr, sp, #160	; 0xa0
 80044c8:	4673      	mov	r3, lr
 80044ca:	f10d 0e9c 	add.w	lr, sp, #156	; 0x9c
 80044ce:	4672      	mov	r2, lr
 80044d0:	f10d 0e98 	add.w	lr, sp, #152	; 0x98
 80044d4:	4671      	mov	r1, lr
 80044d6:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80044d8:	9600      	str	r6, [sp, #0]
 80044da:	f8ad 5098 	strh.w	r5, [sp, #152]	; 0x98
 80044de:	f8ad b09c 	strh.w	fp, [sp, #156]	; 0x9c
 80044e2:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
 80044e6:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 80044ea:	f011 fca6 	bl	8015e3a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 80044ee:	9f02      	ldr	r7, [sp, #8]
    swipeContainerPadRight.add(buttonWithIcon_RP3);
 80044f0:	9913      	ldr	r1, [sp, #76]	; 0x4c
 80044f2:	f8c4 74b8 	str.w	r7, [r4, #1208]	; 0x4b8
 80044f6:	4650      	mov	r0, sl
 80044f8:	f8c4 54c8 	str.w	r5, [r4, #1224]	; 0x4c8
 80044fc:	f00e f980 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_RP2.setXY(194, 61);
 8004500:	9814      	ldr	r0, [sp, #80]	; 0x50
 8004502:	223d      	movs	r2, #61	; 0x3d
 8004504:	21c2      	movs	r1, #194	; 0xc2
 8004506:	f7ff f8b5 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RP2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 800450a:	f10d 0ea0 	add.w	lr, sp, #160	; 0xa0
 800450e:	4673      	mov	r3, lr
 8004510:	f10d 0e9c 	add.w	lr, sp, #156	; 0x9c
 8004514:	4672      	mov	r2, lr
 8004516:	f10d 0e98 	add.w	lr, sp, #152	; 0x98
 800451a:	4671      	mov	r1, lr
 800451c:	9814      	ldr	r0, [sp, #80]	; 0x50
 800451e:	9600      	str	r6, [sp, #0]
 8004520:	f8ad 5098 	strh.w	r5, [sp, #152]	; 0x98
 8004524:	f8ad b09c 	strh.w	fp, [sp, #156]	; 0x9c
 8004528:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
 800452c:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 8004530:	f011 fc83 	bl	8015e3a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8004534:	9f02      	ldr	r7, [sp, #8]
    swipeContainerPadRight.add(buttonWithIcon_RP2);
 8004536:	9914      	ldr	r1, [sp, #80]	; 0x50
 8004538:	f8c4 74f4 	str.w	r7, [r4, #1268]	; 0x4f4
 800453c:	4650      	mov	r0, sl
 800453e:	f8c4 5504 	str.w	r5, [r4, #1284]	; 0x504
 8004542:	f00e f95d 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_RP1.setXY(194, 25);
 8004546:	9815      	ldr	r0, [sp, #84]	; 0x54
 8004548:	2219      	movs	r2, #25
 800454a:	21c2      	movs	r1, #194	; 0xc2
 800454c:	f7ff f892 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RP1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8004550:	f10d 0ea0 	add.w	lr, sp, #160	; 0xa0
 8004554:	4673      	mov	r3, lr
 8004556:	f10d 0e9c 	add.w	lr, sp, #156	; 0x9c
 800455a:	4672      	mov	r2, lr
 800455c:	f10d 0e98 	add.w	lr, sp, #152	; 0x98
 8004560:	4671      	mov	r1, lr
 8004562:	9815      	ldr	r0, [sp, #84]	; 0x54
 8004564:	9600      	str	r6, [sp, #0]
 8004566:	f8ad 5098 	strh.w	r5, [sp, #152]	; 0x98
 800456a:	f8ad b09c 	strh.w	fp, [sp, #156]	; 0x9c
 800456e:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
 8004572:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 8004576:	f011 fc60 	bl	8015e3a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 800457a:	9f02      	ldr	r7, [sp, #8]
    swipeContainerPadRight.add(buttonWithIcon_RP1);
 800457c:	9915      	ldr	r1, [sp, #84]	; 0x54
 800457e:	f8c4 7530 	str.w	r7, [r4, #1328]	; 0x530
 8004582:	4650      	mov	r0, sl
 8004584:	f8c4 5540 	str.w	r5, [r4, #1344]	; 0x540
 8004588:	f00e f93a 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_RP3.setXY(10, 104);
 800458c:	2268      	movs	r2, #104	; 0x68
 800458e:	4649      	mov	r1, r9
 8004590:	9808      	ldr	r0, [sp, #32]
 8004592:	f7ff f86f 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004596:	f04f 3eff 	mov.w	lr, #4294967295
 800459a:	f8c4 e574 	str.w	lr, [r4, #1396]	; 0x574
        linespace = space;
 800459e:	f8a4 5578 	strh.w	r5, [r4, #1400]	; 0x578
        return TextArea::BoundingArea();
 80045a2:	4630      	mov	r0, r6
 80045a4:	f7ff f8ee 	bl	8003784 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 80045a8:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80045ac:	f504 63b0 	add.w	r3, r4, #1408	; 0x580
 80045b0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80045b4:	491b      	ldr	r1, [pc, #108]	; (8004624 <_ZN23Calibration_PadViewBaseC1Ev+0x90c>)
 80045b6:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(textAreaCal_RP3Buffer, TEXTAREACAL_RP3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_8T3Q).getText());
 80045b8:	f504 6763 	add.w	r7, r4, #3632	; 0xe30
 80045bc:	2b00      	cmp	r3, #0
 80045be:	f43f ae56 	beq.w	800426e <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80045c2:	4a19      	ldr	r2, [pc, #100]	; (8004628 <_ZN23Calibration_PadViewBaseC1Ev+0x910>)
 80045c4:	8813      	ldrh	r3, [r2, #0]
 80045c6:	2b2f      	cmp	r3, #47	; 0x2f
 80045c8:	f67f ae5b 	bls.w	8004282 <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 80045cc:	4812      	ldr	r0, [pc, #72]	; (8004618 <_ZN23Calibration_PadViewBaseC1Ev+0x900>)
 80045ce:	212f      	movs	r1, #47	; 0x2f
 80045d0:	6800      	ldr	r0, [r0, #0]
 80045d2:	f006 f861 	bl	800a698 <_ZNK8touchgfx5Texts7getTextEt>
 80045d6:	4a11      	ldr	r2, [pc, #68]	; (800461c <_ZN23Calibration_PadViewBaseC1Ev+0x904>)
 80045d8:	4603      	mov	r3, r0
 80045da:	4649      	mov	r1, r9
 80045dc:	4638      	mov	r0, r7
 80045de:	f017 fb95 	bl	801bd0c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RP3.resizeToCurrentText();
 80045e2:	9808      	ldr	r0, [sp, #32]
        wc1 = value;
 80045e4:	f8c4 758c 	str.w	r7, [r4, #1420]	; 0x58c
 80045e8:	f010 ff12 	bl	8015410 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80045ec:	4f0c      	ldr	r7, [pc, #48]	; (8004620 <_ZN23Calibration_PadViewBaseC1Ev+0x908>)
    textAreaCal_RP3.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_RH3));
 80045ee:	9808      	ldr	r0, [sp, #32]
 80045f0:	9729      	str	r7, [sp, #164]	; 0xa4
 80045f2:	2330      	movs	r3, #48	; 0x30
 80045f4:	4631      	mov	r1, r6
 80045f6:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 80045fa:	f010 ff29 	bl	8015450 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadRight.add(textAreaCal_RP3);
 80045fe:	9908      	ldr	r1, [sp, #32]
 8004600:	4650      	mov	r0, sl
 8004602:	f00e f8fd 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_RP2.setXY(22, 68);
 8004606:	2244      	movs	r2, #68	; 0x44
 8004608:	2116      	movs	r1, #22
 800460a:	9809      	ldr	r0, [sp, #36]	; 0x24
 800460c:	f7ff f832 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004610:	f04f 33ff 	mov.w	r3, #4294967295
 8004614:	e00c      	b.n	8004630 <_ZN23Calibration_PadViewBaseC1Ev+0x918>
 8004616:	bf00      	nop
 8004618:	200138a0 	.word	0x200138a0
 800461c:	0802f491 	.word	0x0802f491
 8004620:	0802f504 	.word	0x0802f504
 8004624:	20013894 	.word	0x20013894
 8004628:	20013898 	.word	0x20013898
 800462c:	00ac00f0 	.word	0x00ac00f0
 8004630:	f8c4 35c0 	str.w	r3, [r4, #1472]	; 0x5c0
        linespace = space;
 8004634:	f8a4 55c4 	strh.w	r5, [r4, #1476]	; 0x5c4
        return TextArea::BoundingArea();
 8004638:	4630      	mov	r0, r6
 800463a:	f7ff f8a3 	bl	8003784 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 800463e:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8004642:	f204 53cc 	addw	r3, r4, #1484	; 0x5cc
 8004646:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800464a:	49da      	ldr	r1, [pc, #872]	; (80049b4 <_ZN23Calibration_PadViewBaseC1Ev+0xc9c>)
 800464c:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(textAreaCal_RP2Buffer, TEXTAREACAL_RP2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_NZZI).getText());
 800464e:	f604 6544 	addw	r5, r4, #3652	; 0xe44
 8004652:	2b00      	cmp	r3, #0
 8004654:	f43f ae0b 	beq.w	800426e <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004658:	4ad7      	ldr	r2, [pc, #860]	; (80049b8 <_ZN23Calibration_PadViewBaseC1Ev+0xca0>)
 800465a:	8813      	ldrh	r3, [r2, #0]
 800465c:	2b2d      	cmp	r3, #45	; 0x2d
 800465e:	f67f ae10 	bls.w	8004282 <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 8004662:	48d6      	ldr	r0, [pc, #856]	; (80049bc <_ZN23Calibration_PadViewBaseC1Ev+0xca4>)
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004664:	f8df b34c 	ldr.w	fp, [pc, #844]	; 80049b4 <_ZN23Calibration_PadViewBaseC1Ev+0xc9c>
        return texts->getText(typedTextId);
 8004668:	6800      	ldr	r0, [r0, #0]
 800466a:	212d      	movs	r1, #45	; 0x2d
 800466c:	f006 f814 	bl	800a698 <_ZNK8touchgfx5Texts7getTextEt>
 8004670:	4ad3      	ldr	r2, [pc, #844]	; (80049c0 <_ZN23Calibration_PadViewBaseC1Ev+0xca8>)
 8004672:	4603      	mov	r3, r0
 8004674:	4649      	mov	r1, r9
 8004676:	4628      	mov	r0, r5
 8004678:	f017 fb48 	bl	801bd0c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RP2.resizeToCurrentText();
 800467c:	9809      	ldr	r0, [sp, #36]	; 0x24
        wc1 = value;
 800467e:	f8c4 55d8 	str.w	r5, [r4, #1496]	; 0x5d8
    textAreaCal_RP2.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_RH2));
 8004682:	ad29      	add	r5, sp, #164	; 0xa4
    textAreaCal_RP2.resizeToCurrentText();
 8004684:	f010 fec4 	bl	8015410 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8004688:	232e      	movs	r3, #46	; 0x2e
    textAreaCal_RP2.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_RH2));
 800468a:	9809      	ldr	r0, [sp, #36]	; 0x24
 800468c:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004690:	4629      	mov	r1, r5
 8004692:	9729      	str	r7, [sp, #164]	; 0xa4
 8004694:	f010 fedc 	bl	8015450 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadRight.add(textAreaCal_RP2);
 8004698:	9909      	ldr	r1, [sp, #36]	; 0x24
 800469a:	4650      	mov	r0, sl
 800469c:	f00e f8b0 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 80046a0:	f04f 36ff 	mov.w	r6, #4294967295
    textAreaCal_RP1.setXY(22, 32);
 80046a4:	2220      	movs	r2, #32
 80046a6:	2116      	movs	r1, #22
 80046a8:	980a      	ldr	r0, [sp, #40]	; 0x28
 80046aa:	f7fe ffe3 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
 80046ae:	f8c4 660c 	str.w	r6, [r4, #1548]	; 0x60c
        linespace = space;
 80046b2:	2600      	movs	r6, #0
 80046b4:	f8a4 6610 	strh.w	r6, [r4, #1552]	; 0x610
        return TextArea::BoundingArea();
 80046b8:	4628      	mov	r0, r5
 80046ba:	f7ff f863 	bl	8003784 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 80046be:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80046c2:	f504 63c3 	add.w	r3, r4, #1560	; 0x618
 80046c6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80046ca:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_RP1Buffer, TEXTAREACAL_RP1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_XVN8).getText());
 80046ce:	f604 6758 	addw	r7, r4, #3672	; 0xe58
 80046d2:	2b00      	cmp	r3, #0
 80046d4:	f43f adcb 	beq.w	800426e <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80046d8:	4ab7      	ldr	r2, [pc, #732]	; (80049b8 <_ZN23Calibration_PadViewBaseC1Ev+0xca0>)
 80046da:	8813      	ldrh	r3, [r2, #0]
 80046dc:	2b2c      	cmp	r3, #44	; 0x2c
 80046de:	f67f add0 	bls.w	8004282 <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 80046e2:	48b6      	ldr	r0, [pc, #728]	; (80049bc <_ZN23Calibration_PadViewBaseC1Ev+0xca4>)
 80046e4:	212c      	movs	r1, #44	; 0x2c
 80046e6:	6800      	ldr	r0, [r0, #0]
 80046e8:	f005 ffd6 	bl	800a698 <_ZNK8touchgfx5Texts7getTextEt>
 80046ec:	4ab4      	ldr	r2, [pc, #720]	; (80049c0 <_ZN23Calibration_PadViewBaseC1Ev+0xca8>)
 80046ee:	4603      	mov	r3, r0
 80046f0:	4649      	mov	r1, r9
 80046f2:	4638      	mov	r0, r7
 80046f4:	f017 fb0a 	bl	801bd0c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RP1.resizeToCurrentText();
 80046f8:	980a      	ldr	r0, [sp, #40]	; 0x28
        wc1 = value;
 80046fa:	f8c4 7624 	str.w	r7, [r4, #1572]	; 0x624
 80046fe:	f010 fe87 	bl	8015410 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8004702:	4fb0      	ldr	r7, [pc, #704]	; (80049c4 <_ZN23Calibration_PadViewBaseC1Ev+0xcac>)
    textAreaCal_RP1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH1));
 8004704:	980a      	ldr	r0, [sp, #40]	; 0x28
 8004706:	9729      	str	r7, [sp, #164]	; 0xa4
 8004708:	f04f 0e31 	mov.w	lr, #49	; 0x31
 800470c:	4629      	mov	r1, r5
 800470e:	f8ad e0a8 	strh.w	lr, [sp, #168]	; 0xa8
 8004712:	f010 fe9d 	bl	8015450 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadRight.add(textAreaCal_RP1);
 8004716:	4650      	mov	r0, sl
 8004718:	990a      	ldr	r1, [sp, #40]	; 0x28
 800471a:	f00e f871 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_RP.setPosition(0, 15, 240, 10);
 800471e:	ee1b 0a10 	vmov	r0, s22
 8004722:	23f0      	movs	r3, #240	; 0xf0
 8004724:	220f      	movs	r2, #15
 8004726:	4631      	mov	r1, r6
 8004728:	f8cd 9000 	str.w	r9, [sp]
 800472c:	f7fe ffaf 	bl	800368e <_ZN8touchgfx8Drawable11setPositionEssss>
 8004730:	f04f 33ff 	mov.w	r3, #4294967295
 8004734:	f04f 3cff 	mov.w	ip, #4294967295
    line1_RP.setStart(5, 5);
 8004738:	2205      	movs	r2, #5
 800473a:	f8c4 36a4 	str.w	r3, [r4, #1700]	; 0x6a4
 800473e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8004740:	f8a4 c6a8 	strh.w	ip, [r4, #1704]	; 0x6a8
 8004744:	f8c4 3650 	str.w	r3, [r4, #1616]	; 0x650
 8004748:	4611      	mov	r1, r2
 800474a:	ee1b 0a10 	vmov	r0, s22
 800474e:	f7ff facb 	bl	8003ce8 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_RP.setEnd(235, 5);
 8004752:	2205      	movs	r2, #5
 8004754:	ee1b 0a10 	vmov	r0, s22
 8004758:	21eb      	movs	r1, #235	; 0xeb
 800475a:	f7ff fac9 	bl	8003cf0 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_RP.setLineWidth(1);
 800475e:	ee1b 0a10 	vmov	r0, s22
 8004762:	2101      	movs	r1, #1
 8004764:	f7ff fac8 	bl	8003cf8 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_RP.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8004768:	ee1b 0a10 	vmov	r0, s22
 800476c:	2101      	movs	r1, #1
 800476e:	f010 fa3f 	bl	8014bf0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    swipeContainerPadRight.add(line1_RP);
 8004772:	4650      	mov	r0, sl
 8004774:	ee1b 1a10 	vmov	r1, s22
 8004778:	f00e f842 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1_RP.setXY(92, 0);
 800477c:	4632      	mov	r2, r6
 800477e:	ee1f 0a10 	vmov	r0, s30
 8004782:	215c      	movs	r1, #92	; 0x5c
 8004784:	f7fe ff76 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004788:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 800478c:	f10d 0c88 	add.w	ip, sp, #136	; 0x88
 8004790:	4660      	mov	r0, ip
 8004792:	ee1f 1a10 	vmov	r1, s30
        color = newColor;
 8004796:	f8c4 36dc 	str.w	r3, [r4, #1756]	; 0x6dc
        linespace = space;
 800479a:	f8a4 66e0 	strh.w	r6, [r4, #1760]	; 0x6e0
        boundingArea = calculateBoundingArea();
 800479e:	f010 fbbd 	bl	8014f1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80047a2:	f10d 0c88 	add.w	ip, sp, #136	; 0x88
 80047a6:	e89c 0007 	ldmia.w	ip, {r0, r1, r2}
 80047aa:	ee1f 3a10 	vmov	r3, s30
 80047ae:	333c      	adds	r3, #60	; 0x3c
 80047b0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80047b4:	232b      	movs	r3, #43	; 0x2b
    textArea1_RP.setTypedText(touchgfx::TypedText(T___SINGLEUSE_L8ZM));
 80047b6:	ee1f 0a10 	vmov	r0, s30
 80047ba:	4629      	mov	r1, r5
 80047bc:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 80047c0:	9729      	str	r7, [sp, #164]	; 0xa4
 80047c2:	f010 fe45 	bl	8015450 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadRight.add(textArea1_RP);
 80047c6:	4650      	mov	r0, sl
 80047c8:	ee1f 1a10 	vmov	r1, s30
 80047cc:	f00e f818 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    swipeContainer1.add(swipeContainerPadRight);
 80047d0:	4651      	mov	r1, sl
 80047d2:	ee18 0a10 	vmov	r0, s16
 80047d6:	f00e fcf6 	bl	80131c6 <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>
 80047da:	497b      	ldr	r1, [pc, #492]	; (80049c8 <_ZN23Calibration_PadViewBaseC1Ev+0xcb0>)
    buttonWithIcon_LH3.setXY(194, 97);
 80047dc:	9816      	ldr	r0, [sp, #88]	; 0x58
 80047de:	f8c4 16fc 	str.w	r1, [r4, #1788]	; 0x6fc
 80047e2:	2261      	movs	r2, #97	; 0x61
 80047e4:	21c2      	movs	r1, #194	; 0xc2
 80047e6:	f7fe ff45 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_LH3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 80047ea:	f10d 0ca0 	add.w	ip, sp, #160	; 0xa0
 80047ee:	4663      	mov	r3, ip
 80047f0:	f10d 0c9c 	add.w	ip, sp, #156	; 0x9c
 80047f4:	4662      	mov	r2, ip
 80047f6:	f10d 0c98 	add.w	ip, sp, #152	; 0x98
 80047fa:	2709      	movs	r7, #9
 80047fc:	4661      	mov	r1, ip
 80047fe:	f04f 0801 	mov.w	r8, #1
 8004802:	9816      	ldr	r0, [sp, #88]	; 0x58
 8004804:	9500      	str	r5, [sp, #0]
 8004806:	f8ad 6098 	strh.w	r6, [sp, #152]	; 0x98
 800480a:	f8ad 809c 	strh.w	r8, [sp, #156]	; 0x9c
 800480e:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
 8004812:	f8ad 70a4 	strh.w	r7, [sp, #164]	; 0xa4
 8004816:	f011 fb10 	bl	8015e3a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 800481a:	9b02      	ldr	r3, [sp, #8]
 800481c:	f8c4 3748 	str.w	r3, [r4, #1864]	; 0x748
    swipeContainerHallLeft.add(buttonWithIcon_LH3);
 8004820:	9916      	ldr	r1, [sp, #88]	; 0x58
 8004822:	f8c4 6758 	str.w	r6, [r4, #1880]	; 0x758
 8004826:	ee19 0a10 	vmov	r0, s18
 800482a:	f00d ffe9 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_LH2.setXY(194, 61);
 800482e:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8004830:	223d      	movs	r2, #61	; 0x3d
 8004832:	21c2      	movs	r1, #194	; 0xc2
 8004834:	f7fe ff1e 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_LH2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8004838:	f10d 0ca0 	add.w	ip, sp, #160	; 0xa0
 800483c:	4663      	mov	r3, ip
 800483e:	f10d 0c9c 	add.w	ip, sp, #156	; 0x9c
 8004842:	4662      	mov	r2, ip
 8004844:	f10d 0c98 	add.w	ip, sp, #152	; 0x98
 8004848:	4661      	mov	r1, ip
 800484a:	9817      	ldr	r0, [sp, #92]	; 0x5c
 800484c:	9500      	str	r5, [sp, #0]
 800484e:	f8ad 6098 	strh.w	r6, [sp, #152]	; 0x98
 8004852:	f8ad 809c 	strh.w	r8, [sp, #156]	; 0x9c
 8004856:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
 800485a:	f8ad 70a4 	strh.w	r7, [sp, #164]	; 0xa4
 800485e:	f011 faec 	bl	8015e3a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8004862:	9b02      	ldr	r3, [sp, #8]
 8004864:	f8c4 3784 	str.w	r3, [r4, #1924]	; 0x784
    swipeContainerHallLeft.add(buttonWithIcon_LH2);
 8004868:	9917      	ldr	r1, [sp, #92]	; 0x5c
 800486a:	f8c4 6794 	str.w	r6, [r4, #1940]	; 0x794
 800486e:	ee19 0a10 	vmov	r0, s18
 8004872:	f00d ffc5 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_LH1.setXY(194, 25);
 8004876:	9818      	ldr	r0, [sp, #96]	; 0x60
 8004878:	2219      	movs	r2, #25
 800487a:	21c2      	movs	r1, #194	; 0xc2
 800487c:	f7fe fefa 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_LH1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8004880:	f10d 0ca0 	add.w	ip, sp, #160	; 0xa0
 8004884:	4663      	mov	r3, ip
 8004886:	f10d 0c9c 	add.w	ip, sp, #156	; 0x9c
 800488a:	4662      	mov	r2, ip
 800488c:	f10d 0c98 	add.w	ip, sp, #152	; 0x98
 8004890:	4661      	mov	r1, ip
 8004892:	9818      	ldr	r0, [sp, #96]	; 0x60
 8004894:	9500      	str	r5, [sp, #0]
 8004896:	f8ad 6098 	strh.w	r6, [sp, #152]	; 0x98
 800489a:	f8ad 809c 	strh.w	r8, [sp, #156]	; 0x9c
 800489e:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
 80048a2:	f8ad 70a4 	strh.w	r7, [sp, #164]	; 0xa4
 80048a6:	f011 fac8 	bl	8015e3a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 80048aa:	9b02      	ldr	r3, [sp, #8]
 80048ac:	f8c4 37c0 	str.w	r3, [r4, #1984]	; 0x7c0
    swipeContainerHallLeft.add(buttonWithIcon_LH1);
 80048b0:	9918      	ldr	r1, [sp, #96]	; 0x60
 80048b2:	f8c4 67d0 	str.w	r6, [r4, #2000]	; 0x7d0
 80048b6:	ee19 0a10 	vmov	r0, s18
 80048ba:	f00d ffa1 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LH3.setXY(10, 104);
 80048be:	2268      	movs	r2, #104	; 0x68
 80048c0:	4649      	mov	r1, r9
 80048c2:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80048c4:	f7fe fed6 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80048c8:	f04f 3cff 	mov.w	ip, #4294967295
 80048cc:	f8c4 c804 	str.w	ip, [r4, #2052]	; 0x804
        linespace = space;
 80048d0:	f8a4 6808 	strh.w	r6, [r4, #2056]	; 0x808
        return TextArea::BoundingArea();
 80048d4:	4628      	mov	r0, r5
 80048d6:	f7fe ff55 	bl	8003784 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 80048da:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80048de:	f504 6301 	add.w	r3, r4, #2064	; 0x810
 80048e2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80048e6:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_LH3Buffer, TEXTAREACAL_LH3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_4NSV).getText());
 80048ea:	f604 6a6c 	addw	sl, r4, #3692	; 0xe6c
 80048ee:	2b00      	cmp	r3, #0
 80048f0:	f43f acbd 	beq.w	800426e <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80048f4:	4a30      	ldr	r2, [pc, #192]	; (80049b8 <_ZN23Calibration_PadViewBaseC1Ev+0xca0>)
 80048f6:	8813      	ldrh	r3, [r2, #0]
 80048f8:	2b24      	cmp	r3, #36	; 0x24
 80048fa:	f67f acc2 	bls.w	8004282 <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 80048fe:	482f      	ldr	r0, [pc, #188]	; (80049bc <_ZN23Calibration_PadViewBaseC1Ev+0xca4>)
 8004900:	2124      	movs	r1, #36	; 0x24
 8004902:	6800      	ldr	r0, [r0, #0]
 8004904:	f005 fec8 	bl	800a698 <_ZNK8touchgfx5Texts7getTextEt>
 8004908:	4a2d      	ldr	r2, [pc, #180]	; (80049c0 <_ZN23Calibration_PadViewBaseC1Ev+0xca8>)
 800490a:	4603      	mov	r3, r0
 800490c:	4649      	mov	r1, r9
 800490e:	4650      	mov	r0, sl
 8004910:	f017 f9fc 	bl	801bd0c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_LH3.resizeToCurrentText();
 8004914:	980b      	ldr	r0, [sp, #44]	; 0x2c
        wc1 = value;
 8004916:	f8c4 a81c 	str.w	sl, [r4, #2076]	; 0x81c
 800491a:	f010 fd79 	bl	8015410 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 800491e:	4b29      	ldr	r3, [pc, #164]	; (80049c4 <_ZN23Calibration_PadViewBaseC1Ev+0xcac>)
    textAreaCal_LH3.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH3));
 8004920:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8004922:	9329      	str	r3, [sp, #164]	; 0xa4
 8004924:	4629      	mov	r1, r5
 8004926:	2327      	movs	r3, #39	; 0x27
 8004928:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 800492c:	f010 fd90 	bl	8015450 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallLeft.add(textAreaCal_LH3);
 8004930:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8004932:	ee19 0a10 	vmov	r0, s18
 8004936:	f00d ff63 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LH2.setXY(22, 68);
 800493a:	2244      	movs	r2, #68	; 0x44
 800493c:	2116      	movs	r1, #22
 800493e:	980c      	ldr	r0, [sp, #48]	; 0x30
 8004940:	f7fe fe98 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004944:	f04f 3cff 	mov.w	ip, #4294967295
 8004948:	f8c4 c850 	str.w	ip, [r4, #2128]	; 0x850
        linespace = space;
 800494c:	f8a4 6854 	strh.w	r6, [r4, #2132]	; 0x854
        return TextArea::BoundingArea();
 8004950:	4628      	mov	r0, r5
 8004952:	f7fe ff17 	bl	8003784 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8004956:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800495a:	f604 035c 	addw	r3, r4, #2140	; 0x85c
 800495e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004962:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_LH2Buffer, TEXTAREACAL_LH2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_M8NH).getText());
 8004966:	f504 6a68 	add.w	sl, r4, #3712	; 0xe80
 800496a:	2b00      	cmp	r3, #0
 800496c:	f43f ac7f 	beq.w	800426e <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004970:	4a11      	ldr	r2, [pc, #68]	; (80049b8 <_ZN23Calibration_PadViewBaseC1Ev+0xca0>)
 8004972:	8813      	ldrh	r3, [r2, #0]
 8004974:	2b23      	cmp	r3, #35	; 0x23
 8004976:	f67f ac84 	bls.w	8004282 <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 800497a:	4810      	ldr	r0, [pc, #64]	; (80049bc <_ZN23Calibration_PadViewBaseC1Ev+0xca4>)
 800497c:	2123      	movs	r1, #35	; 0x23
 800497e:	6800      	ldr	r0, [r0, #0]
 8004980:	f005 fe8a 	bl	800a698 <_ZNK8touchgfx5Texts7getTextEt>
 8004984:	4a0e      	ldr	r2, [pc, #56]	; (80049c0 <_ZN23Calibration_PadViewBaseC1Ev+0xca8>)
 8004986:	4603      	mov	r3, r0
 8004988:	4649      	mov	r1, r9
 800498a:	4650      	mov	r0, sl
 800498c:	f017 f9be 	bl	801bd0c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_LH2.resizeToCurrentText();
 8004990:	980c      	ldr	r0, [sp, #48]	; 0x30
        wc1 = value;
 8004992:	f8c4 a868 	str.w	sl, [r4, #2152]	; 0x868
 8004996:	f010 fd3b 	bl	8015410 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 800499a:	4b0a      	ldr	r3, [pc, #40]	; (80049c4 <_ZN23Calibration_PadViewBaseC1Ev+0xcac>)
    textAreaCal_LH2.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH2));
 800499c:	980c      	ldr	r0, [sp, #48]	; 0x30
 800499e:	9329      	str	r3, [sp, #164]	; 0xa4
 80049a0:	4629      	mov	r1, r5
 80049a2:	2329      	movs	r3, #41	; 0x29
 80049a4:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 80049a8:	f010 fd52 	bl	8015450 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallLeft.add(textAreaCal_LH2);
 80049ac:	990c      	ldr	r1, [sp, #48]	; 0x30
 80049ae:	ee19 0a10 	vmov	r0, s18
 80049b2:	e00b      	b.n	80049cc <_ZN23Calibration_PadViewBaseC1Ev+0xcb4>
 80049b4:	20013894 	.word	0x20013894
 80049b8:	20013898 	.word	0x20013898
 80049bc:	200138a0 	.word	0x200138a0
 80049c0:	0802f491 	.word	0x0802f491
 80049c4:	0802f504 	.word	0x0802f504
 80049c8:	00ac00f0 	.word	0x00ac00f0
 80049cc:	f00d ff18 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LH1.setXY(22, 32);
 80049d0:	2220      	movs	r2, #32
 80049d2:	2116      	movs	r1, #22
 80049d4:	980d      	ldr	r0, [sp, #52]	; 0x34
 80049d6:	f7fe fe4d 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80049da:	f04f 3cff 	mov.w	ip, #4294967295
 80049de:	f8c4 c89c 	str.w	ip, [r4, #2204]	; 0x89c
        linespace = space;
 80049e2:	f8a4 68a0 	strh.w	r6, [r4, #2208]	; 0x8a0
        return TextArea::BoundingArea();
 80049e6:	4628      	mov	r0, r5
 80049e8:	f7fe fecc 	bl	8003784 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 80049ec:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80049f0:	f604 03a8 	addw	r3, r4, #2216	; 0x8a8
 80049f4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80049f8:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_LH1Buffer, TEXTAREACAL_LH1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_I3S7).getText());
 80049fc:	f604 6a94 	addw	sl, r4, #3732	; 0xe94
 8004a00:	2b00      	cmp	r3, #0
 8004a02:	f43f ac34 	beq.w	800426e <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004a06:	4ada      	ldr	r2, [pc, #872]	; (8004d70 <_ZN23Calibration_PadViewBaseC1Ev+0x1058>)
 8004a08:	8813      	ldrh	r3, [r2, #0]
 8004a0a:	2b22      	cmp	r3, #34	; 0x22
 8004a0c:	f67f ac39 	bls.w	8004282 <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 8004a10:	48d8      	ldr	r0, [pc, #864]	; (8004d74 <_ZN23Calibration_PadViewBaseC1Ev+0x105c>)
 8004a12:	2122      	movs	r1, #34	; 0x22
 8004a14:	6800      	ldr	r0, [r0, #0]
 8004a16:	f005 fe3f 	bl	800a698 <_ZNK8touchgfx5Texts7getTextEt>
 8004a1a:	4ad7      	ldr	r2, [pc, #860]	; (8004d78 <_ZN23Calibration_PadViewBaseC1Ev+0x1060>)
 8004a1c:	4603      	mov	r3, r0
 8004a1e:	4649      	mov	r1, r9
 8004a20:	4650      	mov	r0, sl
 8004a22:	f017 f973 	bl	801bd0c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_LH1.resizeToCurrentText();
 8004a26:	980d      	ldr	r0, [sp, #52]	; 0x34
        wc1 = value;
 8004a28:	f8c4 a8b4 	str.w	sl, [r4, #2228]	; 0x8b4
 8004a2c:	f010 fcf0 	bl	8015410 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8004a30:	f04f 0e31 	mov.w	lr, #49	; 0x31
 8004a34:	4bd1      	ldr	r3, [pc, #836]	; (8004d7c <_ZN23Calibration_PadViewBaseC1Ev+0x1064>)
    textAreaCal_LH1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH1));
 8004a36:	980d      	ldr	r0, [sp, #52]	; 0x34
 8004a38:	f8ad e0a8 	strh.w	lr, [sp, #168]	; 0xa8
 8004a3c:	4629      	mov	r1, r5
 8004a3e:	9329      	str	r3, [sp, #164]	; 0xa4
 8004a40:	f010 fd06 	bl	8015450 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallLeft.add(textAreaCal_LH1);
 8004a44:	990d      	ldr	r1, [sp, #52]	; 0x34
 8004a46:	ee19 0a10 	vmov	r0, s18
 8004a4a:	f00d fed9 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_LH.setPosition(0, 15, 240, 10);
 8004a4e:	ee1b 0a90 	vmov	r0, s23
 8004a52:	23f0      	movs	r3, #240	; 0xf0
 8004a54:	220f      	movs	r2, #15
 8004a56:	4631      	mov	r1, r6
 8004a58:	f8cd 9000 	str.w	r9, [sp]
 8004a5c:	f7fe fe17 	bl	800368e <_ZN8touchgfx8Drawable11setPositionEssss>
 8004a60:	f04f 30ff 	mov.w	r0, #4294967295
 8004a64:	f64f 73ff 	movw	r3, #65535	; 0xffff
    line1_LH.setStart(5, 5);
 8004a68:	2205      	movs	r2, #5
 8004a6a:	f8c4 0934 	str.w	r0, [r4, #2356]	; 0x934
 8004a6e:	981e      	ldr	r0, [sp, #120]	; 0x78
 8004a70:	f8a4 3938 	strh.w	r3, [r4, #2360]	; 0x938
 8004a74:	4611      	mov	r1, r2
 8004a76:	f8c4 08e0 	str.w	r0, [r4, #2272]	; 0x8e0
 8004a7a:	ee1b 0a90 	vmov	r0, s23
 8004a7e:	f7ff f933 	bl	8003ce8 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_LH.setEnd(235, 5);
 8004a82:	2205      	movs	r2, #5
 8004a84:	ee1b 0a90 	vmov	r0, s23
 8004a88:	21eb      	movs	r1, #235	; 0xeb
 8004a8a:	f7ff f931 	bl	8003cf0 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_LH.setLineWidth(1);
 8004a8e:	ee1b 0a90 	vmov	r0, s23
 8004a92:	4641      	mov	r1, r8
 8004a94:	f7ff f930 	bl	8003cf8 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_LH.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8004a98:	ee1b 0a90 	vmov	r0, s23
 8004a9c:	4641      	mov	r1, r8
 8004a9e:	f010 f8a7 	bl	8014bf0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    swipeContainerHallLeft.add(line1_LH);
 8004aa2:	ee1b 1a90 	vmov	r1, s23
 8004aa6:	ee19 0a10 	vmov	r0, s18
 8004aaa:	f00d fea9 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1_LH.setXY(73, 0);
 8004aae:	4632      	mov	r2, r6
 8004ab0:	ee1f 0a90 	vmov	r0, s31
 8004ab4:	2149      	movs	r1, #73	; 0x49
 8004ab6:	f7fe fddd 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004aba:	f04f 30ff 	mov.w	r0, #4294967295
        boundingArea = calculateBoundingArea();
 8004abe:	ee1f 1a90 	vmov	r1, s31
        color = newColor;
 8004ac2:	f8c4 096c 	str.w	r0, [r4, #2412]	; 0x96c
        linespace = space;
 8004ac6:	f8a4 6970 	strh.w	r6, [r4, #2416]	; 0x970
        boundingArea = calculateBoundingArea();
 8004aca:	a822      	add	r0, sp, #136	; 0x88
 8004acc:	f010 fa26 	bl	8014f1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004ad0:	ee1f 0a90 	vmov	r0, s31
 8004ad4:	f100 033c 	add.w	r3, r0, #60	; 0x3c
 8004ad8:	a822      	add	r0, sp, #136	; 0x88
 8004ada:	c807      	ldmia	r0, {r0, r1, r2}
 8004adc:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004ae0:	4ba6      	ldr	r3, [pc, #664]	; (8004d7c <_ZN23Calibration_PadViewBaseC1Ev+0x1064>)
 8004ae2:	9329      	str	r3, [sp, #164]	; 0xa4
    textArea1_LH.setTypedText(touchgfx::TypedText(T___SINGLEUSE_F9FQ));
 8004ae4:	4629      	mov	r1, r5
 8004ae6:	2321      	movs	r3, #33	; 0x21
 8004ae8:	ee1f 0a90 	vmov	r0, s31
 8004aec:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004af0:	f010 fcae 	bl	8015450 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallLeft.add(textArea1_LH);
 8004af4:	ee1f 1a90 	vmov	r1, s31
 8004af8:	ee19 0a10 	vmov	r0, s18
 8004afc:	f00d fe80 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    swipeContainer1.add(swipeContainerHallLeft);
 8004b00:	ee19 1a10 	vmov	r1, s18
 8004b04:	ee18 0a10 	vmov	r0, s16
 8004b08:	f00e fb5d 	bl	80131c6 <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>
 8004b0c:	499c      	ldr	r1, [pc, #624]	; (8004d80 <_ZN23Calibration_PadViewBaseC1Ev+0x1068>)
    buttonWithIcon_RH3.setXY(194, 97);
 8004b0e:	9819      	ldr	r0, [sp, #100]	; 0x64
 8004b10:	f8c4 198c 	str.w	r1, [r4, #2444]	; 0x98c
 8004b14:	2261      	movs	r2, #97	; 0x61
 8004b16:	21c2      	movs	r1, #194	; 0xc2
 8004b18:	f7fe fdac 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RH3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8004b1c:	a927      	add	r1, sp, #156	; 0x9c
 8004b1e:	460a      	mov	r2, r1
 8004b20:	9819      	ldr	r0, [sp, #100]	; 0x64
 8004b22:	9500      	str	r5, [sp, #0]
 8004b24:	ab28      	add	r3, sp, #160	; 0xa0
 8004b26:	a926      	add	r1, sp, #152	; 0x98
 8004b28:	f8ad 6098 	strh.w	r6, [sp, #152]	; 0x98
 8004b2c:	f8ad 809c 	strh.w	r8, [sp, #156]	; 0x9c
 8004b30:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
 8004b34:	f8ad 70a4 	strh.w	r7, [sp, #164]	; 0xa4
 8004b38:	f011 f97f 	bl	8015e3a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8004b3c:	9b02      	ldr	r3, [sp, #8]
 8004b3e:	f8c4 39d8 	str.w	r3, [r4, #2520]	; 0x9d8
    swipeContainerHallRight.add(buttonWithIcon_RH3);
 8004b42:	9919      	ldr	r1, [sp, #100]	; 0x64
 8004b44:	f8c4 69e8 	str.w	r6, [r4, #2536]	; 0x9e8
 8004b48:	ee19 0a90 	vmov	r0, s19
 8004b4c:	f00d fe58 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_RH2.setXY(194, 61);
 8004b50:	981a      	ldr	r0, [sp, #104]	; 0x68
 8004b52:	223d      	movs	r2, #61	; 0x3d
 8004b54:	21c2      	movs	r1, #194	; 0xc2
 8004b56:	f7fe fd8d 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RH2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8004b5a:	a927      	add	r1, sp, #156	; 0x9c
 8004b5c:	460a      	mov	r2, r1
 8004b5e:	981a      	ldr	r0, [sp, #104]	; 0x68
 8004b60:	9500      	str	r5, [sp, #0]
 8004b62:	ab28      	add	r3, sp, #160	; 0xa0
 8004b64:	a926      	add	r1, sp, #152	; 0x98
 8004b66:	f8ad 6098 	strh.w	r6, [sp, #152]	; 0x98
 8004b6a:	f8ad 809c 	strh.w	r8, [sp, #156]	; 0x9c
 8004b6e:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
 8004b72:	f8ad 70a4 	strh.w	r7, [sp, #164]	; 0xa4
 8004b76:	f011 f960 	bl	8015e3a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8004b7a:	9b02      	ldr	r3, [sp, #8]
 8004b7c:	f8c4 3a14 	str.w	r3, [r4, #2580]	; 0xa14
    swipeContainerHallRight.add(buttonWithIcon_RH2);
 8004b80:	991a      	ldr	r1, [sp, #104]	; 0x68
 8004b82:	f8c4 6a24 	str.w	r6, [r4, #2596]	; 0xa24
 8004b86:	ee19 0a90 	vmov	r0, s19
 8004b8a:	f00d fe39 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_RH1.setXY(194, 25);
 8004b8e:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8004b90:	2219      	movs	r2, #25
 8004b92:	21c2      	movs	r1, #194	; 0xc2
 8004b94:	f7fe fd6e 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RH1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8004b98:	a927      	add	r1, sp, #156	; 0x9c
 8004b9a:	460a      	mov	r2, r1
 8004b9c:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8004b9e:	9500      	str	r5, [sp, #0]
 8004ba0:	ab28      	add	r3, sp, #160	; 0xa0
 8004ba2:	a926      	add	r1, sp, #152	; 0x98
 8004ba4:	f8ad 6098 	strh.w	r6, [sp, #152]	; 0x98
 8004ba8:	f8ad 809c 	strh.w	r8, [sp, #156]	; 0x9c
 8004bac:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
 8004bb0:	f8ad 70a4 	strh.w	r7, [sp, #164]	; 0xa4
 8004bb4:	f011 f941 	bl	8015e3a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8004bb8:	9b02      	ldr	r3, [sp, #8]
 8004bba:	f8c4 3a50 	str.w	r3, [r4, #2640]	; 0xa50
    swipeContainerHallRight.add(buttonWithIcon_RH1);
 8004bbe:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8004bc0:	f8c4 6a60 	str.w	r6, [r4, #2656]	; 0xa60
 8004bc4:	ee19 0a90 	vmov	r0, s19
 8004bc8:	f00d fe1a 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_RH3.setXY(10, 104);
 8004bcc:	2268      	movs	r2, #104	; 0x68
 8004bce:	4649      	mov	r1, r9
 8004bd0:	980e      	ldr	r0, [sp, #56]	; 0x38
 8004bd2:	f7fe fd4f 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004bd6:	f04f 33ff 	mov.w	r3, #4294967295
 8004bda:	f8c4 3a94 	str.w	r3, [r4, #2708]	; 0xa94
        return TextArea::BoundingArea();
 8004bde:	4628      	mov	r0, r5
        linespace = space;
 8004be0:	f8a4 6a98 	strh.w	r6, [r4, #2712]	; 0xa98
 8004be4:	f7fe fdce 	bl	8003784 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8004be8:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004bec:	f504 632a 	add.w	r3, r4, #2720	; 0xaa0
 8004bf0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004bf4:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_RH3Buffer, TEXTAREACAL_RH3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_4PQQ).getText());
 8004bf8:	f604 65a8 	addw	r5, r4, #3752	; 0xea8
 8004bfc:	2b00      	cmp	r3, #0
 8004bfe:	f43f ab36 	beq.w	800426e <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004c02:	4a5b      	ldr	r2, [pc, #364]	; (8004d70 <_ZN23Calibration_PadViewBaseC1Ev+0x1058>)
 8004c04:	8813      	ldrh	r3, [r2, #0]
 8004c06:	2b20      	cmp	r3, #32
 8004c08:	f67f ab3b 	bls.w	8004282 <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 8004c0c:	f8df 8164 	ldr.w	r8, [pc, #356]	; 8004d74 <_ZN23Calibration_PadViewBaseC1Ev+0x105c>
        : typedTextId(id)
 8004c10:	f8df a168 	ldr.w	sl, [pc, #360]	; 8004d7c <_ZN23Calibration_PadViewBaseC1Ev+0x1064>
        return texts->getText(typedTextId);
 8004c14:	f8d8 0000 	ldr.w	r0, [r8]
 8004c18:	2120      	movs	r1, #32
 8004c1a:	f005 fd3d 	bl	800a698 <_ZNK8touchgfx5Texts7getTextEt>
 8004c1e:	4a56      	ldr	r2, [pc, #344]	; (8004d78 <_ZN23Calibration_PadViewBaseC1Ev+0x1060>)
 8004c20:	4603      	mov	r3, r0
 8004c22:	4649      	mov	r1, r9
 8004c24:	4628      	mov	r0, r5
 8004c26:	f017 f871 	bl	801bd0c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RH3.resizeToCurrentText();
 8004c2a:	980e      	ldr	r0, [sp, #56]	; 0x38
        wc1 = value;
 8004c2c:	f8c4 5aac 	str.w	r5, [r4, #2732]	; 0xaac
    textAreaCal_RH3.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH3));
 8004c30:	ad29      	add	r5, sp, #164	; 0xa4
    textAreaCal_RH3.resizeToCurrentText();
 8004c32:	f010 fbed 	bl	8015410 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8004c36:	2327      	movs	r3, #39	; 0x27
    textAreaCal_RH3.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH3));
 8004c38:	980e      	ldr	r0, [sp, #56]	; 0x38
 8004c3a:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004c3e:	4629      	mov	r1, r5
 8004c40:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
 8004c44:	f010 fc04 	bl	8015450 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallRight.add(textAreaCal_RH3);
 8004c48:	990e      	ldr	r1, [sp, #56]	; 0x38
 8004c4a:	ee19 0a90 	vmov	r0, s19
 8004c4e:	f00d fdd7 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8004c52:	f04f 37ff 	mov.w	r7, #4294967295
    textAreaCal_RH2.setXY(22, 68);
 8004c56:	2244      	movs	r2, #68	; 0x44
 8004c58:	2116      	movs	r1, #22
 8004c5a:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8004c5c:	f7fe fd0a 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
 8004c60:	f8c4 7ae0 	str.w	r7, [r4, #2784]	; 0xae0
        linespace = space;
 8004c64:	f8a4 6ae4 	strh.w	r6, [r4, #2788]	; 0xae4
        return TextArea::BoundingArea();
 8004c68:	4628      	mov	r0, r5
 8004c6a:	f7fe fd8b 	bl	8003784 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8004c6e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004c72:	f604 23ec 	addw	r3, r4, #2796	; 0xaec
 8004c76:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004c7a:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_RH2Buffer, TEXTAREACAL_RH2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_YVQL).getText());
 8004c7e:	f604 69bc 	addw	r9, r4, #3772	; 0xebc
 8004c82:	2b00      	cmp	r3, #0
 8004c84:	f43f aaf3 	beq.w	800426e <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004c88:	4a39      	ldr	r2, [pc, #228]	; (8004d70 <_ZN23Calibration_PadViewBaseC1Ev+0x1058>)
 8004c8a:	8813      	ldrh	r3, [r2, #0]
 8004c8c:	2b1f      	cmp	r3, #31
 8004c8e:	f67f aaf8 	bls.w	8004282 <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 8004c92:	211f      	movs	r1, #31
 8004c94:	f8d8 0000 	ldr.w	r0, [r8]
 8004c98:	f005 fcfe 	bl	800a698 <_ZNK8touchgfx5Texts7getTextEt>
 8004c9c:	4a36      	ldr	r2, [pc, #216]	; (8004d78 <_ZN23Calibration_PadViewBaseC1Ev+0x1060>)
 8004c9e:	4603      	mov	r3, r0
 8004ca0:	210a      	movs	r1, #10
 8004ca2:	4648      	mov	r0, r9
 8004ca4:	f017 f832 	bl	801bd0c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RH2.resizeToCurrentText();
 8004ca8:	980f      	ldr	r0, [sp, #60]	; 0x3c
        wc1 = value;
 8004caa:	f8c4 9af8 	str.w	r9, [r4, #2808]	; 0xaf8
 8004cae:	f010 fbaf 	bl	8015410 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8004cb2:	2329      	movs	r3, #41	; 0x29
    textAreaCal_RH2.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH2));
 8004cb4:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8004cb6:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004cba:	4629      	mov	r1, r5
 8004cbc:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
 8004cc0:	f010 fbc6 	bl	8015450 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallRight.add(textAreaCal_RH2);
 8004cc4:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8004cc6:	ee19 0a90 	vmov	r0, s19
 8004cca:	f00d fd99 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_RH1.setXY(22, 32);
 8004cce:	2220      	movs	r2, #32
 8004cd0:	2116      	movs	r1, #22
 8004cd2:	9810      	ldr	r0, [sp, #64]	; 0x40
 8004cd4:	f7fe fcce 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004cd8:	f8c4 7b2c 	str.w	r7, [r4, #2860]	; 0xb2c
        linespace = space;
 8004cdc:	f8a4 6b30 	strh.w	r6, [r4, #2864]	; 0xb30
        return TextArea::BoundingArea();
 8004ce0:	4628      	mov	r0, r5
 8004ce2:	f7fe fd4f 	bl	8003784 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8004ce6:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004cea:	f604 3338 	addw	r3, r4, #2872	; 0xb38
 8004cee:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004cf2:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_RH1Buffer, TEXTAREACAL_RH1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_TIGW).getText());
 8004cf6:	f504 696d 	add.w	r9, r4, #3792	; 0xed0
 8004cfa:	2b00      	cmp	r3, #0
 8004cfc:	f43f aab7 	beq.w	800426e <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004d00:	4a1b      	ldr	r2, [pc, #108]	; (8004d70 <_ZN23Calibration_PadViewBaseC1Ev+0x1058>)
 8004d02:	8813      	ldrh	r3, [r2, #0]
 8004d04:	2b1e      	cmp	r3, #30
 8004d06:	f67f aabc 	bls.w	8004282 <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 8004d0a:	f8d8 0000 	ldr.w	r0, [r8]
 8004d0e:	211e      	movs	r1, #30
 8004d10:	f005 fcc2 	bl	800a698 <_ZNK8touchgfx5Texts7getTextEt>
 8004d14:	4a18      	ldr	r2, [pc, #96]	; (8004d78 <_ZN23Calibration_PadViewBaseC1Ev+0x1060>)
 8004d16:	4603      	mov	r3, r0
 8004d18:	210a      	movs	r1, #10
 8004d1a:	4648      	mov	r0, r9
 8004d1c:	f016 fff6 	bl	801bd0c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RH1.resizeToCurrentText();
 8004d20:	9810      	ldr	r0, [sp, #64]	; 0x40
        wc1 = value;
 8004d22:	f8c4 9b44 	str.w	r9, [r4, #2884]	; 0xb44
 8004d26:	f010 fb73 	bl	8015410 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8004d2a:	2331      	movs	r3, #49	; 0x31
    textAreaCal_RH1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH1));
 8004d2c:	9810      	ldr	r0, [sp, #64]	; 0x40
 8004d2e:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004d32:	4629      	mov	r1, r5
    line1_RH_1.setPosition(0, 15, 240, 10);
 8004d34:	f04f 090a 	mov.w	r9, #10
 8004d38:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
    textAreaCal_RH1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH1));
 8004d3c:	f010 fb88 	bl	8015450 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallRight.add(textAreaCal_RH1);
 8004d40:	9910      	ldr	r1, [sp, #64]	; 0x40
 8004d42:	ee19 0a90 	vmov	r0, s19
 8004d46:	f00d fd5b 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_RH_1.setPosition(0, 15, 240, 10);
 8004d4a:	ee1c 0a10 	vmov	r0, s24
 8004d4e:	4631      	mov	r1, r6
 8004d50:	f8cd 9000 	str.w	r9, [sp]
 8004d54:	23f0      	movs	r3, #240	; 0xf0
 8004d56:	220f      	movs	r2, #15
 8004d58:	f7fe fc99 	bl	800368e <_ZN8touchgfx8Drawable11setPositionEssss>
 8004d5c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8004d5e:	f8c4 3b70 	str.w	r3, [r4, #2928]	; 0xb70
    line1_RH_1.setStart(5, 5);
 8004d62:	2205      	movs	r2, #5
 8004d64:	ee1c 0a10 	vmov	r0, s24
 8004d68:	4611      	mov	r1, r2
 8004d6a:	f8c4 7bc4 	str.w	r7, [r4, #3012]	; 0xbc4
 8004d6e:	e009      	b.n	8004d84 <_ZN23Calibration_PadViewBaseC1Ev+0x106c>
 8004d70:	20013898 	.word	0x20013898
 8004d74:	200138a0 	.word	0x200138a0
 8004d78:	0802f491 	.word	0x0802f491
 8004d7c:	0802f504 	.word	0x0802f504
 8004d80:	00ac00f0 	.word	0x00ac00f0
 8004d84:	f8a4 7bc8 	strh.w	r7, [r4, #3016]	; 0xbc8
 8004d88:	f7fe ffae 	bl	8003ce8 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_RH_1.setEnd(235, 5);
 8004d8c:	2205      	movs	r2, #5
 8004d8e:	ee1c 0a10 	vmov	r0, s24
 8004d92:	21eb      	movs	r1, #235	; 0xeb
 8004d94:	f7fe ffac 	bl	8003cf0 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_RH_1.setLineWidth(1);
 8004d98:	ee1c 0a10 	vmov	r0, s24
 8004d9c:	2101      	movs	r1, #1
 8004d9e:	f7fe ffab 	bl	8003cf8 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_RH_1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8004da2:	ee1c 0a10 	vmov	r0, s24
 8004da6:	2101      	movs	r1, #1
 8004da8:	f00f ff22 	bl	8014bf0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    swipeContainerHallRight.add(line1_RH_1);
 8004dac:	ee1c 1a10 	vmov	r1, s24
 8004db0:	ee19 0a90 	vmov	r0, s19
 8004db4:	f10d 0888 	add.w	r8, sp, #136	; 0x88
 8004db8:	f00d fd22 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1_RH_1.setXY(73, 0);
 8004dbc:	4632      	mov	r2, r6
 8004dbe:	9803      	ldr	r0, [sp, #12]
 8004dc0:	2149      	movs	r1, #73	; 0x49
 8004dc2:	f7fe fc57 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
 8004dc6:	9903      	ldr	r1, [sp, #12]
        color = newColor;
 8004dc8:	f8c4 7bfc 	str.w	r7, [r4, #3068]	; 0xbfc
        boundingArea = calculateBoundingArea();
 8004dcc:	4640      	mov	r0, r8
        linespace = space;
 8004dce:	f8a4 6c00 	strh.w	r6, [r4, #3072]	; 0xc00
        boundingArea = calculateBoundingArea();
 8004dd2:	f010 f8a3 	bl	8014f1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004dd6:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8004dda:	9b03      	ldr	r3, [sp, #12]
 8004ddc:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
 8004de0:	333c      	adds	r3, #60	; 0x3c
 8004de2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004de6:	231d      	movs	r3, #29
    textArea1_RH_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IZSY));
 8004de8:	9803      	ldr	r0, [sp, #12]
 8004dea:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004dee:	4629      	mov	r1, r5
 8004df0:	f010 fb2e 	bl	8015450 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallRight.add(textArea1_RH_1);
 8004df4:	9903      	ldr	r1, [sp, #12]
 8004df6:	ee19 0a90 	vmov	r0, s19
 8004dfa:	f00d fd01 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    swipeContainer1.add(swipeContainerHallRight);
 8004dfe:	ee19 1a90 	vmov	r1, s19
 8004e02:	ee18 0a10 	vmov	r0, s16
 8004e06:	f00e f9de 	bl	80131c6 <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>
    swipeContainer1.setSelectedPage(0);
 8004e0a:	ee18 0a10 	vmov	r0, s16
 8004e0e:	4631      	mov	r1, r6
 8004e10:	f00e f9ca 	bl	80131a8 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh>
 8004e14:	ee18 1a10 	vmov	r1, s16
 8004e18:	ee1a 0a10 	vmov	r0, s20
 8004e1c:	f00d fcf0 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_1.setPosition(0, 75, 240, 10);
 8004e20:	ee1c 0a90 	vmov	r0, s25
 8004e24:	4631      	mov	r1, r6
 8004e26:	f8cd 9000 	str.w	r9, [sp]
 8004e2a:	23f0      	movs	r3, #240	; 0xf0
 8004e2c:	224b      	movs	r2, #75	; 0x4b
 8004e2e:	f7fe fc2e 	bl	800368e <_ZN8touchgfx8Drawable11setPositionEssss>
 8004e32:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8004e36:	f8a4 3c94 	strh.w	r3, [r4, #3220]	; 0xc94
    line1_1.setStart(5, 5);
 8004e3a:	2205      	movs	r2, #5
 8004e3c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8004e3e:	f8c4 3c3c 	str.w	r3, [r4, #3132]	; 0xc3c
 8004e42:	ee1c 0a90 	vmov	r0, s25
 8004e46:	4611      	mov	r1, r2
 8004e48:	f8c4 7c90 	str.w	r7, [r4, #3216]	; 0xc90
 8004e4c:	f7fe ff4c 	bl	8003ce8 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_1.setEnd(235, 5);
 8004e50:	2205      	movs	r2, #5
 8004e52:	ee1c 0a90 	vmov	r0, s25
 8004e56:	21eb      	movs	r1, #235	; 0xeb
 8004e58:	f7fe ff4a 	bl	8003cf0 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_1.setLineWidth(1);
 8004e5c:	ee1c 0a90 	vmov	r0, s25
 8004e60:	2101      	movs	r1, #1
 8004e62:	f7fe ff49 	bl	8003cf8 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8004e66:	ee1c 0a90 	vmov	r0, s25
 8004e6a:	2101      	movs	r1, #1
 8004e6c:	f00f fec0 	bl	8014bf0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8004e70:	ee1c 1a90 	vmov	r1, s25
 8004e74:	ee1a 0a10 	vmov	r0, s20
 8004e78:	f00d fcc2 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(70, 60);
 8004e7c:	9804      	ldr	r0, [sp, #16]
 8004e7e:	223c      	movs	r2, #60	; 0x3c
 8004e80:	2146      	movs	r1, #70	; 0x46
 8004e82:	f7fe fbf7 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
 8004e86:	9904      	ldr	r1, [sp, #16]
        color = newColor;
 8004e88:	f8c4 7cc8 	str.w	r7, [r4, #3272]	; 0xcc8
        boundingArea = calculateBoundingArea();
 8004e8c:	4640      	mov	r0, r8
        linespace = space;
 8004e8e:	f8a4 6ccc 	strh.w	r6, [r4, #3276]	; 0xccc
        boundingArea = calculateBoundingArea();
 8004e92:	f010 f843 	bl	8014f1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004e96:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8004e9a:	9b04      	ldr	r3, [sp, #16]
 8004e9c:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
 8004ea0:	333c      	adds	r3, #60	; 0x3c
 8004ea2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004ea6:	233a      	movs	r3, #58	; 0x3a
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_X786));
 8004ea8:	9804      	ldr	r0, [sp, #16]
 8004eaa:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004eae:	4629      	mov	r1, r5
 8004eb0:	f010 face 	bl	8015450 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004eb4:	9904      	ldr	r1, [sp, #16]
 8004eb6:	ee1a 0a10 	vmov	r0, s20
 8004eba:	f00d fca1 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8004ebe:	ee1d 0a10 	vmov	r0, s26
 8004ec2:	4631      	mov	r1, r6
 8004ec4:	f8cd 9000 	str.w	r9, [sp]
 8004ec8:	23f0      	movs	r3, #240	; 0xf0
 8004eca:	2232      	movs	r2, #50	; 0x32
 8004ecc:	f7fe fbdf 	bl	800368e <_ZN8touchgfx8Drawable11setPositionEssss>
 8004ed0:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8004ed2:	f8c4 3d08 	str.w	r3, [r4, #3336]	; 0xd08
    line1.setStart(5, 5);
 8004ed6:	2205      	movs	r2, #5
 8004ed8:	ee1d 0a10 	vmov	r0, s26
 8004edc:	4611      	mov	r1, r2
 8004ede:	f8c4 7d5c 	str.w	r7, [r4, #3420]	; 0xd5c
 8004ee2:	f8a4 7d60 	strh.w	r7, [r4, #3424]	; 0xd60
 8004ee6:	f7fe feff 	bl	8003ce8 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1.setEnd(235, 5);
 8004eea:	2205      	movs	r2, #5
 8004eec:	ee1d 0a10 	vmov	r0, s26
 8004ef0:	21eb      	movs	r1, #235	; 0xeb
 8004ef2:	f7fe fefd 	bl	8003cf0 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1.setLineWidth(1);
 8004ef6:	ee1d 0a10 	vmov	r0, s26
 8004efa:	2101      	movs	r1, #1
 8004efc:	f7fe fefc 	bl	8003cf8 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8004f00:	ee1d 0a10 	vmov	r0, s26
 8004f04:	2101      	movs	r1, #1
 8004f06:	f00f fe73 	bl	8014bf0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8004f0a:	ee1d 1a10 	vmov	r1, s26
 8004f0e:	ee1a 0a10 	vmov	r0, s20
 8004f12:	f00d fc75 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(69, 35);
 8004f16:	9805      	ldr	r0, [sp, #20]
 8004f18:	2223      	movs	r2, #35	; 0x23
 8004f1a:	2145      	movs	r1, #69	; 0x45
 8004f1c:	f7fe fbaa 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
 8004f20:	9905      	ldr	r1, [sp, #20]
        color = newColor;
 8004f22:	f8c4 7d94 	str.w	r7, [r4, #3476]	; 0xd94
        boundingArea = calculateBoundingArea();
 8004f26:	4640      	mov	r0, r8
        linespace = space;
 8004f28:	f8a4 6d98 	strh.w	r6, [r4, #3480]	; 0xd98
        boundingArea = calculateBoundingArea();
 8004f2c:	f00f fff6 	bl	8014f1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004f30:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8004f34:	9b05      	ldr	r3, [sp, #20]
 8004f36:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
 8004f3a:	333c      	adds	r3, #60	; 0x3c
 8004f3c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004f40:	233c      	movs	r3, #60	; 0x3c
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FJID));
 8004f42:	9805      	ldr	r0, [sp, #20]
 8004f44:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004f48:	4629      	mov	r1, r5
 8004f4a:	f010 fa81 	bl	8015450 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004f4e:	9905      	ldr	r1, [sp, #20]
 8004f50:	ee1a 0a10 	vmov	r0, s20
 8004f54:	f00d fc54 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8004f58:	9806      	ldr	r0, [sp, #24]
 8004f5a:	220c      	movs	r2, #12
 8004f5c:	2136      	movs	r1, #54	; 0x36
 8004f5e:	f7fe fb89 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
 8004f62:	9906      	ldr	r1, [sp, #24]
        color = newColor;
 8004f64:	f8c4 7ddc 	str.w	r7, [r4, #3548]	; 0xddc
        boundingArea = calculateBoundingArea();
 8004f68:	4640      	mov	r0, r8
        linespace = space;
 8004f6a:	f8a4 6de0 	strh.w	r6, [r4, #3552]	; 0xde0
        boundingArea = calculateBoundingArea();
 8004f6e:	f00f ffd5 	bl	8014f1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004f72:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8004f76:	9b06      	ldr	r3, [sp, #24]
 8004f78:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
 8004f7c:	333c      	adds	r3, #60	; 0x3c
 8004f7e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004f82:	233d      	movs	r3, #61	; 0x3d
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_EAAK));
 8004f84:	9806      	ldr	r0, [sp, #24]
 8004f86:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004f8a:	4629      	mov	r1, r5
 8004f8c:	f010 fa60 	bl	8015450 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004f90:	ee1a 0a10 	vmov	r0, s20
 8004f94:	9906      	ldr	r1, [sp, #24]
 8004f96:	f00d fc33 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8004f9a:	4620      	mov	r0, r4
 8004f9c:	b02d      	add	sp, #180	; 0xb4
 8004f9e:	ecbd 8b10 	vpop	{d8-d15}
 8004fa2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004fa6:	bf00      	nop

08004fa8 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 8004fa8:	4770      	bx	lr

08004faa <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 8004faa:	4770      	bx	lr

08004fac <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 8004fac:	f500 7398 	add.w	r3, r0, #304	; 0x130
 8004fb0:	6808      	ldr	r0, [r1, #0]
 8004fb2:	6849      	ldr	r1, [r1, #4]
 8004fb4:	c303      	stmia	r3!, {r0, r1}
    }
 8004fb6:	4770      	bx	lr

08004fb8 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 8004fb8:	4770      	bx	lr

08004fba <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 8004fba:	4770      	bx	lr

08004fbc <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 8004fbc:	6041      	str	r1, [r0, #4]
    }
 8004fbe:	4770      	bx	lr

08004fc0 <_ZNK8touchgfx10Transition13FullSolidRect12getSolidRectEv>:
     * A Widget that reports solid and but does not draw anything.
     */
    class FullSolidRect : public Widget
    {
    public:
        virtual Rect getSolidRect() const
 8004fc0:	b510      	push	{r4, lr}
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8004fc2:	2200      	movs	r2, #0
        {
            return Rect(0, 0, rect.width, rect.height);
 8004fc4:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 8004fc8:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 8004fcc:	8002      	strh	r2, [r0, #0]
 8004fce:	8042      	strh	r2, [r0, #2]
 8004fd0:	8084      	strh	r4, [r0, #4]
 8004fd2:	80c1      	strh	r1, [r0, #6]
        }
 8004fd4:	bd10      	pop	{r4, pc}

08004fd6 <_ZNK8touchgfx10Transition13FullSolidRect4drawERKNS_4RectE>:

        virtual void draw(const Rect& area) const
        {
        }
 8004fd6:	4770      	bx	lr

08004fd8 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8004fd8:	4770      	bx	lr
	...

08004fdc <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8004fdc:	4b06      	ldr	r3, [pc, #24]	; (8004ff8 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 8004fde:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004fe2:	2300      	movs	r3, #0
 8004fe4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
// Main_Menu

void FrontendApplicationBase::gotoMain_MenuScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMain_MenuScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8004fe8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004fec:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004ff0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140

    virtual void changeToStartScreen()
    {
        gotoMain_MenuScreenNoTransition();
    }
 8004ff4:	4770      	bx	lr
 8004ff6:	bf00      	nop
 8004ff8:	08005399 	.word	0x08005399

08004ffc <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8004ffc:	2301      	movs	r3, #1
 8004ffe:	7203      	strb	r3, [r0, #8]
    }
 8005000:	4770      	bx	lr

08005002 <_ZN8touchgfx10Transition13FullSolidRectD1Ev>:
    class FullSolidRect : public Widget
 8005002:	4770      	bx	lr

08005004 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED1Ev>:
 * the given direction.  This transition only draws the pixels in the
 * framebuffer once, and never moves any pixels. It is therefore very
 * useful on MCUs with limited performance.
 */
template <Direction templateDirection>
class WipeTransition : public Transition
 8005004:	4770      	bx	lr

08005006 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED1Ev>:
 8005006:	4770      	bx	lr

08005008 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8005008:	4770      	bx	lr

0800500a <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 800500a:	4770      	bx	lr

0800500c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE8tearDownEv>:
            // Synchronize framebuffers
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
        }
    }

    virtual void tearDown()
 800500c:	4601      	mov	r1, r0
    {
        screenContainer->remove(solid);
 800500e:	6840      	ldr	r0, [r0, #4]
 8005010:	6803      	ldr	r3, [r0, #0]
 8005012:	3110      	adds	r1, #16
 8005014:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8005016:	4718      	bx	r3

08005018 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE4initEv>:
    }

    virtual void init()
 8005018:	4601      	mov	r1, r0
    {
        Transition::init();
        // Add the solid (and not-drawing-anything) widget on top to cover the other widgets
        screenContainer->add(solid);
 800501a:	6840      	ldr	r0, [r0, #4]
 800501c:	6803      	ldr	r3, [r0, #0]
 800501e:	3110      	adds	r1, #16
 8005020:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8005022:	4718      	bx	r3

08005024 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE10invalidateEv>:
     * Wipe transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
    }
 8005024:	4770      	bx	lr

08005026 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE8tearDownEv>:
    virtual void tearDown()
 8005026:	4601      	mov	r1, r0
        screenContainer->remove(solid);
 8005028:	6840      	ldr	r0, [r0, #4]
 800502a:	6803      	ldr	r3, [r0, #0]
 800502c:	3110      	adds	r1, #16
 800502e:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8005030:	4718      	bx	r3

08005032 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE4initEv>:
    virtual void init()
 8005032:	4601      	mov	r1, r0
        screenContainer->add(solid);
 8005034:	6840      	ldr	r0, [r0, #4]
 8005036:	6803      	ldr	r3, [r0, #0]
 8005038:	3110      	adds	r1, #16
 800503a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800503c:	4718      	bx	r3

0800503e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE10invalidateEv>:
    }
 800503e:	4770      	bx	lr

08005040 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8005040:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 8005042:	68c2      	ldr	r2, [r0, #12]
 8005044:	6841      	ldr	r1, [r0, #4]
 8005046:	1054      	asrs	r4, r2, #1
    virtual void execute()
 8005048:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 800504a:	eb01 0062 	add.w	r0, r1, r2, asr #1
 800504e:	07d2      	lsls	r2, r2, #31
 8005050:	bf48      	it	mi
 8005052:	590a      	ldrmi	r2, [r1, r4]
 8005054:	689b      	ldr	r3, [r3, #8]
    }
 8005056:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 800505a:	bf48      	it	mi
 800505c:	58d3      	ldrmi	r3, [r2, r3]
 800505e:	4718      	bx	r3

08005060 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 8005060:	6843      	ldr	r3, [r0, #4]
 8005062:	b12b      	cbz	r3, 8005070 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 8005064:	6883      	ldr	r3, [r0, #8]
 8005066:	b92b      	cbnz	r3, 8005074 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8005068:	68c0      	ldr	r0, [r0, #12]
 800506a:	f000 0001 	and.w	r0, r0, #1
 800506e:	4770      	bx	lr
 8005070:	4618      	mov	r0, r3
 8005072:	4770      	bx	lr
 8005074:	2001      	movs	r0, #1
    }
 8005076:	4770      	bx	lr

08005078 <_ZN8touchgfx12NoTransitionD0Ev>:
 8005078:	b510      	push	{r4, lr}
 800507a:	210c      	movs	r1, #12
 800507c:	4604      	mov	r4, r0
 800507e:	f027 fd80 	bl	802cb82 <_ZdlPvj>
 8005082:	4620      	mov	r0, r4
 8005084:	bd10      	pop	{r4, pc}

08005086 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8005086:	b510      	push	{r4, lr}
 8005088:	2110      	movs	r1, #16
 800508a:	4604      	mov	r4, r0
 800508c:	f027 fd79 	bl	802cb82 <_ZdlPvj>
 8005090:	4620      	mov	r0, r4
 8005092:	bd10      	pop	{r4, pc}

08005094 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 8005094:	b510      	push	{r4, lr}
 8005096:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 800509a:	4604      	mov	r4, r0
 800509c:	f027 fd71 	bl	802cb82 <_ZdlPvj>
 80050a0:	4620      	mov	r0, r4
 80050a2:	bd10      	pop	{r4, pc}

080050a4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED0Ev>:
class WipeTransition : public Transition
 80050a4:	b510      	push	{r4, lr}
 80050a6:	2138      	movs	r1, #56	; 0x38
 80050a8:	4604      	mov	r4, r0
 80050aa:	f027 fd6a 	bl	802cb82 <_ZdlPvj>
 80050ae:	4620      	mov	r0, r4
 80050b0:	bd10      	pop	{r4, pc}

080050b2 <_ZN8touchgfx10Transition13FullSolidRectD0Ev>:
 80050b2:	b510      	push	{r4, lr}
 80050b4:	2128      	movs	r1, #40	; 0x28
 80050b6:	4604      	mov	r4, r0
 80050b8:	f027 fd63 	bl	802cb82 <_ZdlPvj>
 80050bc:	4620      	mov	r0, r4
 80050be:	bd10      	pop	{r4, pc}

080050c0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED0Ev>:
 80050c0:	b510      	push	{r4, lr}
 80050c2:	2138      	movs	r1, #56	; 0x38
 80050c4:	4604      	mov	r4, r0
 80050c6:	f027 fd5c 	bl	802cb82 <_ZdlPvj>
 80050ca:	4620      	mov	r0, r4
 80050cc:	bd10      	pop	{r4, pc}

080050ce <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 80050ce:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 80050d0:	f013 fc6e 	bl	80189b0 <_ZN8touchgfx11Application11getInstanceEv>
 80050d4:	6803      	ldr	r3, [r0, #0]
    }
 80050d6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 80050da:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80050dc:	4718      	bx	r3
	...

080050e0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv>:
    virtual void handleTickEvent()
 80050e0:	b513      	push	{r0, r1, r4, lr}
 80050e2:	4604      	mov	r4, r0
        animationCounter++;
 80050e4:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 80050e6:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 80050e8:	3001      	adds	r0, #1
 80050ea:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 80050ec:	4298      	cmp	r0, r3
        animationCounter++;
 80050ee:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 80050f0:	d905      	bls.n	80050fe <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1e>
            done = true;
 80050f2:	2301      	movs	r3, #1
 80050f4:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 80050f6:	2300      	movs	r3, #0
 80050f8:	72a3      	strb	r3, [r4, #10]
    }
 80050fa:	b002      	add	sp, #8
 80050fc:	bd10      	pop	{r4, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 80050fe:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8005102:	2100      	movs	r1, #0
 8005104:	f015 fac4 	bl	801a690 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 8005108:	f010 0201 	ands.w	r2, r0, #1
 800510c:	b283      	uxth	r3, r0
 800510e:	d12a      	bne.n	8005166 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x86>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8005110:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8005112:	4a19      	ldr	r2, [pc, #100]	; (8005178 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x98>)
 8005114:	f9b4 000e 	ldrsh.w	r0, [r4, #14]
 8005118:	89e3      	ldrh	r3, [r4, #14]
 800511a:	8812      	ldrh	r2, [r2, #0]
        return rect.x;
 800511c:	f9b4 1014 	ldrsh.w	r1, [r4, #20]
        rect.x = x;
 8005120:	82a0      	strh	r0, [r4, #20]
 8005122:	2000      	movs	r0, #0
 8005124:	1ad2      	subs	r2, r2, r3
 8005126:	f8ad 0002 	strh.w	r0, [sp, #2]
                screenContainer->invalidateRect(r);
 800512a:	6860      	ldr	r0, [r4, #4]
        rect.width = width;
 800512c:	8322      	strh	r2, [r4, #24]
                const uint16_t delta = calculatedValue - prevSolidPos;
 800512e:	1a5b      	subs	r3, r3, r1
                Rect r(prevSolidPos, 0, delta, HAL::DISPLAY_HEIGHT);
 8005130:	4a12      	ldr	r2, [pc, #72]	; (800517c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x9c>)
 8005132:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 8005136:	6803      	ldr	r3, [r0, #0]
                Rect r(prevSolidPos, 0, delta, HAL::DISPLAY_HEIGHT);
 8005138:	f9b2 2000 	ldrsh.w	r2, [r2]
                screenContainer->invalidateRect(r);
 800513c:	691b      	ldr	r3, [r3, #16]
 800513e:	f8ad 1000 	strh.w	r1, [sp]
 8005142:	f8ad 2006 	strh.w	r2, [sp, #6]
 8005146:	4669      	mov	r1, sp
 8005148:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 800514a:	7aa3      	ldrb	r3, [r4, #10]
 800514c:	2b01      	cmp	r3, #1
 800514e:	d1d4      	bne.n	80050fa <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
 8005150:	4b0b      	ldr	r3, [pc, #44]	; (8005180 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0xa0>)
 8005152:	781b      	ldrb	r3, [r3, #0]
 8005154:	2b00      	cmp	r3, #0
 8005156:	d0d0      	beq.n	80050fa <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8005158:	f013 fc2a 	bl	80189b0 <_ZN8touchgfx11Application11getInstanceEv>
    }
 800515c:	b002      	add	sp, #8
 800515e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8005162:	f013 bc2b 	b.w	80189bc <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 8005166:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800516a:	2800      	cmp	r0, #0
 800516c:	bfd8      	it	le
 800516e:	460a      	movle	r2, r1
 8005170:	4413      	add	r3, r2
 8005172:	81e3      	strh	r3, [r4, #14]
 8005174:	e7cd      	b.n	8005112 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x32>
 8005176:	bf00      	nop
 8005178:	20013830 	.word	0x20013830
 800517c:	20013832 	.word	0x20013832
 8005180:	2001383a 	.word	0x2001383a

08005184 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8005184:	b510      	push	{r4, lr}
 8005186:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8005188:	f8d0 0140 	ldr.w	r0, [r0, #320]	; 0x140
 800518c:	b158      	cbz	r0, 80051a6 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 800518e:	6803      	ldr	r3, [r0, #0]
 8005190:	68db      	ldr	r3, [r3, #12]
 8005192:	4798      	blx	r3
 8005194:	b138      	cbz	r0, 80051a6 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 8005196:	f8d4 0140 	ldr.w	r0, [r4, #320]	; 0x140
 800519a:	6803      	ldr	r3, [r0, #0]
 800519c:	689b      	ldr	r3, [r3, #8]
 800519e:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 80051a0:	2300      	movs	r3, #0
 80051a2:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
    }
 80051a6:	bd10      	pop	{r4, pc}

080051a8 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoShutting_OffScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoShutting_OffScreenNoTransitionImpl()
{
 80051a8:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Shutting_OffView, Shutting_OffPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80051ac:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 80051b0:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80051b2:	68a8      	ldr	r0, [r5, #8]
 80051b4:	6803      	ldr	r3, [r0, #0]
 80051b6:	6a1b      	ldr	r3, [r3, #32]
 80051b8:	4798      	blx	r3
 80051ba:	2897      	cmp	r0, #151	; 0x97
 80051bc:	d805      	bhi.n	80051ca <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x22>
 80051be:	4b46      	ldr	r3, [pc, #280]	; (80052d8 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x130>)
 80051c0:	4a46      	ldr	r2, [pc, #280]	; (80052dc <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 80051c2:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80051c4:	4846      	ldr	r0, [pc, #280]	; (80052e0 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x138>)
 80051c6:	f028 fbc3 	bl	802d950 <__assert_func>
 80051ca:	6868      	ldr	r0, [r5, #4]
 80051cc:	6803      	ldr	r3, [r0, #0]
 80051ce:	6a1b      	ldr	r3, [r3, #32]
 80051d0:	4798      	blx	r3
 80051d2:	280f      	cmp	r0, #15
 80051d4:	d803      	bhi.n	80051de <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x36>
 80051d6:	4b43      	ldr	r3, [pc, #268]	; (80052e4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x13c>)
 80051d8:	4a40      	ldr	r2, [pc, #256]	; (80052dc <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 80051da:	21a4      	movs	r1, #164	; 0xa4
 80051dc:	e7f2      	b.n	80051c4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x1c>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80051de:	68e8      	ldr	r0, [r5, #12]
 80051e0:	6803      	ldr	r3, [r0, #0]
 80051e2:	6a1b      	ldr	r3, [r3, #32]
 80051e4:	4798      	blx	r3
 80051e6:	280b      	cmp	r0, #11
 80051e8:	d803      	bhi.n	80051f2 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x4a>
 80051ea:	4b3f      	ldr	r3, [pc, #252]	; (80052e8 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x140>)
 80051ec:	4a3b      	ldr	r2, [pc, #236]	; (80052dc <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 80051ee:	21a5      	movs	r1, #165	; 0xa5
 80051f0:	e7e8      	b.n	80051c4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x1c>
    Application::getInstance()->clearAllTimerWidgets();
 80051f2:	f013 fbdd 	bl	80189b0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80051f6:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 80052f0 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x148>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 80051fa:	3004      	adds	r0, #4
 80051fc:	f013 fc3e 	bl	8018a7c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005200:	f8d9 0000 	ldr.w	r0, [r9]
 8005204:	b110      	cbz	r0, 800520c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 8005206:	6803      	ldr	r3, [r0, #0]
 8005208:	68db      	ldr	r3, [r3, #12]
 800520a:	4798      	blx	r3
    if (*currentTrans)
 800520c:	f8d9 0000 	ldr.w	r0, [r9]
 8005210:	b110      	cbz	r0, 8005218 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 8005212:	6803      	ldr	r3, [r0, #0]
 8005214:	681b      	ldr	r3, [r3, #0]
 8005216:	4798      	blx	r3
    if (*currentScreen)
 8005218:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 80052f4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x14c>
 800521c:	f8d8 0000 	ldr.w	r0, [r8]
 8005220:	b110      	cbz	r0, 8005228 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 8005222:	6803      	ldr	r3, [r0, #0]
 8005224:	695b      	ldr	r3, [r3, #20]
 8005226:	4798      	blx	r3
    if (*currentPresenter)
 8005228:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800522c:	b110      	cbz	r0, 8005234 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 800522e:	6803      	ldr	r3, [r0, #0]
 8005230:	685b      	ldr	r3, [r3, #4]
 8005232:	4798      	blx	r3
    if (*currentScreen)
 8005234:	f8d8 0000 	ldr.w	r0, [r8]
 8005238:	b110      	cbz	r0, 8005240 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 800523a:	6803      	ldr	r3, [r0, #0]
 800523c:	681b      	ldr	r3, [r3, #0]
 800523e:	4798      	blx	r3
    if (*currentPresenter)
 8005240:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005244:	b110      	cbz	r0, 800524c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 8005246:	6803      	ldr	r3, [r0, #0]
 8005248:	689b      	ldr	r3, [r3, #8]
 800524a:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800524c:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 800524e:	6803      	ldr	r3, [r0, #0]
 8005250:	2100      	movs	r1, #0
 8005252:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005254:	4798      	blx	r3
        : screenContainer(0), done(false)
 8005256:	f04f 0b00 	mov.w	fp, #0
 800525a:	4b24      	ldr	r3, [pc, #144]	; (80052ec <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x144>)
 800525c:	6003      	str	r3, [r0, #0]
 800525e:	4604      	mov	r4, r0
 8005260:	f8c0 b004 	str.w	fp, [r0, #4]
 8005264:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005268:	68a8      	ldr	r0, [r5, #8]
 800526a:	6803      	ldr	r3, [r0, #0]
 800526c:	4659      	mov	r1, fp
 800526e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005270:	4798      	blx	r3
 8005272:	4606      	mov	r6, r0
 8005274:	f005 fee4 	bl	800b040 <_ZN16Shutting_OffViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005278:	6868      	ldr	r0, [r5, #4]
 800527a:	6803      	ldr	r3, [r0, #0]
 800527c:	4659      	mov	r1, fp
 800527e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005280:	4798      	blx	r3
 8005282:	4631      	mov	r1, r6
 8005284:	4605      	mov	r5, r0
 8005286:	f005 feb7 	bl	800aff8 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView>
    *currentTrans = newTransition;
 800528a:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 800528e:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005292:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005296:	b1e5      	cbz	r5, 80052d2 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x12a>
 8005298:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 800529a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800529e:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 80052a0:	f8c5 a008 	str.w	sl, [r5, #8]
 80052a4:	4630      	mov	r0, r6
 80052a6:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 80052a8:	63f5      	str	r5, [r6, #60]	; 0x3c
 80052aa:	4798      	blx	r3
    newPresenter->activate();
 80052ac:	682b      	ldr	r3, [r5, #0]
 80052ae:	4628      	mov	r0, r5
 80052b0:	681b      	ldr	r3, [r3, #0]
 80052b2:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80052b4:	4621      	mov	r1, r4
 80052b6:	4630      	mov	r0, r6
 80052b8:	f015 f9a6 	bl	801a608 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80052bc:	6823      	ldr	r3, [r4, #0]
 80052be:	4620      	mov	r0, r4
 80052c0:	691b      	ldr	r3, [r3, #16]
 80052c2:	4798      	blx	r3
    newTransition->invalidate();
 80052c4:	6823      	ldr	r3, [r4, #0]
 80052c6:	695b      	ldr	r3, [r3, #20]
 80052c8:	4620      	mov	r0, r4
}
 80052ca:	b001      	add	sp, #4
 80052cc:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80052d0:	4718      	bx	r3
    model->bind(newPresenter);
 80052d2:	462b      	mov	r3, r5
 80052d4:	e7e1      	b.n	800529a <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0xf2>
 80052d6:	bf00      	nop
 80052d8:	0802f680 	.word	0x0802f680
 80052dc:	0802f70e 	.word	0x0802f70e
 80052e0:	0802f81c 	.word	0x0802f81c
 80052e4:	0802f863 	.word	0x0802f863
 80052e8:	0802f906 	.word	0x0802f906
 80052ec:	080309c0 	.word	0x080309c0
 80052f0:	20013884 	.word	0x20013884
 80052f4:	20013880 	.word	0x20013880

080052f8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 80052f8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80052fa:	4604      	mov	r4, r0
        animationCounter++;
 80052fc:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 80052fe:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 8005300:	3001      	adds	r0, #1
 8005302:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 8005304:	4298      	cmp	r0, r3
        animationCounter++;
 8005306:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 8005308:	d905      	bls.n	8005316 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1e>
            done = true;
 800530a:	2301      	movs	r3, #1
 800530c:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 800530e:	2300      	movs	r3, #0
 8005310:	72a3      	strb	r3, [r4, #10]
    }
 8005312:	b003      	add	sp, #12
 8005314:	bd30      	pop	{r4, r5, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8005316:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800531a:	2100      	movs	r1, #0
 800531c:	f015 f9b8 	bl	801a690 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 8005320:	f010 0201 	ands.w	r2, r0, #1
 8005324:	b283      	uxth	r3, r0
 8005326:	d128      	bne.n	800537a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x82>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8005328:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800532a:	4b18      	ldr	r3, [pc, #96]	; (800538c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x94>)
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 800532c:	4818      	ldr	r0, [pc, #96]	; (8005390 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x98>)
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800532e:	8819      	ldrh	r1, [r3, #0]
                const uint16_t prevSolidWidth = solid.getWidth();
 8005330:	8b25      	ldrh	r5, [r4, #24]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8005332:	89e3      	ldrh	r3, [r4, #14]
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 8005334:	f9b0 0000 	ldrsh.w	r0, [r0]
 8005338:	f8ad 0006 	strh.w	r0, [sp, #6]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800533c:	1aca      	subs	r2, r1, r3
                screenContainer->invalidateRect(r);
 800533e:	6860      	ldr	r0, [r4, #4]
                const uint16_t delta = prevSolidWidth - solid.getWidth();
 8005340:	442b      	add	r3, r5
 8005342:	1a5b      	subs	r3, r3, r1
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8005344:	b212      	sxth	r2, r2
 8005346:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 800534a:	6803      	ldr	r3, [r0, #0]
 800534c:	8322      	strh	r2, [r4, #24]
 800534e:	f8ad 2000 	strh.w	r2, [sp]
 8005352:	2200      	movs	r2, #0
 8005354:	691b      	ldr	r3, [r3, #16]
 8005356:	f8ad 2002 	strh.w	r2, [sp, #2]
 800535a:	4669      	mov	r1, sp
 800535c:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 800535e:	7aa3      	ldrb	r3, [r4, #10]
 8005360:	2b01      	cmp	r3, #1
 8005362:	d1d6      	bne.n	8005312 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
 8005364:	4b0b      	ldr	r3, [pc, #44]	; (8005394 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x9c>)
 8005366:	781b      	ldrb	r3, [r3, #0]
 8005368:	2b00      	cmp	r3, #0
 800536a:	d0d2      	beq.n	8005312 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 800536c:	f013 fb20 	bl	80189b0 <_ZN8touchgfx11Application11getInstanceEv>
    }
 8005370:	b003      	add	sp, #12
 8005372:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8005376:	f013 bb21 	b.w	80189bc <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 800537a:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800537e:	2800      	cmp	r0, #0
 8005380:	bfd8      	it	le
 8005382:	460a      	movle	r2, r1
 8005384:	4413      	add	r3, r2
 8005386:	81e3      	strh	r3, [r4, #14]
 8005388:	e7cf      	b.n	800532a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x32>
 800538a:	bf00      	nop
 800538c:	20013830 	.word	0x20013830
 8005390:	20013832 	.word	0x20013832
 8005394:	2001383a 	.word	0x2001383a

08005398 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv>:
{
 8005398:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Main_MenuView, Main_MenuPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800539c:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 80053a0:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80053a2:	68a8      	ldr	r0, [r5, #8]
 80053a4:	6803      	ldr	r3, [r0, #0]
 80053a6:	6a1b      	ldr	r3, [r3, #32]
 80053a8:	4798      	blx	r3
 80053aa:	f5b0 5f90 	cmp.w	r0, #4608	; 0x1200
 80053ae:	d205      	bcs.n	80053bc <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x24>
 80053b0:	4b45      	ldr	r3, [pc, #276]	; (80054c8 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x130>)
 80053b2:	4a46      	ldr	r2, [pc, #280]	; (80054cc <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x134>)
 80053b4:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80053b6:	4846      	ldr	r0, [pc, #280]	; (80054d0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 80053b8:	f028 faca 	bl	802d950 <__assert_func>
 80053bc:	6868      	ldr	r0, [r5, #4]
 80053be:	6803      	ldr	r3, [r0, #0]
 80053c0:	6a1b      	ldr	r3, [r3, #32]
 80053c2:	4798      	blx	r3
 80053c4:	280f      	cmp	r0, #15
 80053c6:	d803      	bhi.n	80053d0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x38>
 80053c8:	4b42      	ldr	r3, [pc, #264]	; (80054d4 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x13c>)
 80053ca:	4a40      	ldr	r2, [pc, #256]	; (80054cc <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x134>)
 80053cc:	21a4      	movs	r1, #164	; 0xa4
 80053ce:	e7f2      	b.n	80053b6 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80053d0:	68e8      	ldr	r0, [r5, #12]
 80053d2:	6803      	ldr	r3, [r0, #0]
 80053d4:	6a1b      	ldr	r3, [r3, #32]
 80053d6:	4798      	blx	r3
 80053d8:	280b      	cmp	r0, #11
 80053da:	d803      	bhi.n	80053e4 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x4c>
 80053dc:	4b3e      	ldr	r3, [pc, #248]	; (80054d8 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x140>)
 80053de:	4a3b      	ldr	r2, [pc, #236]	; (80054cc <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x134>)
 80053e0:	21a5      	movs	r1, #165	; 0xa5
 80053e2:	e7e8      	b.n	80053b6 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 80053e4:	f013 fae4 	bl	80189b0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80053e8:	f8df 90f4 	ldr.w	r9, [pc, #244]	; 80054e0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x148>
 80053ec:	3004      	adds	r0, #4
 80053ee:	f013 fb45 	bl	8018a7c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80053f2:	f8d9 0000 	ldr.w	r0, [r9]
 80053f6:	b110      	cbz	r0, 80053fe <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x66>
        (*currentTrans)->tearDown();
 80053f8:	6803      	ldr	r3, [r0, #0]
 80053fa:	68db      	ldr	r3, [r3, #12]
 80053fc:	4798      	blx	r3
    if (*currentTrans)
 80053fe:	f8d9 0000 	ldr.w	r0, [r9]
 8005402:	b110      	cbz	r0, 800540a <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x72>
        (*currentTrans)->~Transition();
 8005404:	6803      	ldr	r3, [r0, #0]
 8005406:	681b      	ldr	r3, [r3, #0]
 8005408:	4798      	blx	r3
    if (*currentScreen)
 800540a:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 80054e4 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x14c>
 800540e:	f8d8 0000 	ldr.w	r0, [r8]
 8005412:	b110      	cbz	r0, 800541a <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8005414:	6803      	ldr	r3, [r0, #0]
 8005416:	695b      	ldr	r3, [r3, #20]
 8005418:	4798      	blx	r3
    if (*currentPresenter)
 800541a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800541e:	b110      	cbz	r0, 8005426 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8005420:	6803      	ldr	r3, [r0, #0]
 8005422:	685b      	ldr	r3, [r3, #4]
 8005424:	4798      	blx	r3
    if (*currentScreen)
 8005426:	f8d8 0000 	ldr.w	r0, [r8]
 800542a:	b110      	cbz	r0, 8005432 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x9a>
        (*currentScreen)->~Screen();
 800542c:	6803      	ldr	r3, [r0, #0]
 800542e:	681b      	ldr	r3, [r3, #0]
 8005430:	4798      	blx	r3
    if (*currentPresenter)
 8005432:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005436:	b110      	cbz	r0, 800543e <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8005438:	6803      	ldr	r3, [r0, #0]
 800543a:	689b      	ldr	r3, [r3, #8]
 800543c:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800543e:	68e8      	ldr	r0, [r5, #12]
 8005440:	6803      	ldr	r3, [r0, #0]
 8005442:	2100      	movs	r1, #0
 8005444:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005446:	4798      	blx	r3
 8005448:	f04f 0b00 	mov.w	fp, #0
 800544c:	4b23      	ldr	r3, [pc, #140]	; (80054dc <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x144>)
 800544e:	6003      	str	r3, [r0, #0]
 8005450:	4604      	mov	r4, r0
 8005452:	f8c0 b004 	str.w	fp, [r0, #4]
 8005456:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800545a:	68a8      	ldr	r0, [r5, #8]
 800545c:	6803      	ldr	r3, [r0, #0]
 800545e:	4659      	mov	r1, fp
 8005460:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005462:	4798      	blx	r3
 8005464:	4606      	mov	r6, r0
 8005466:	f005 faa7 	bl	800a9b8 <_ZN13Main_MenuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800546a:	6868      	ldr	r0, [r5, #4]
 800546c:	6803      	ldr	r3, [r0, #0]
 800546e:	4659      	mov	r1, fp
 8005470:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005472:	4798      	blx	r3
 8005474:	4631      	mov	r1, r6
 8005476:	4605      	mov	r5, r0
 8005478:	f005 fa78 	bl	800a96c <_ZN18Main_MenuPresenterC1ER13Main_MenuView>
    *currentTrans = newTransition;
 800547c:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8005480:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005484:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005488:	b1e5      	cbz	r5, 80054c4 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x12c>
 800548a:	1d2b      	adds	r3, r5, #4
 800548c:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005490:	6833      	ldr	r3, [r6, #0]
 8005492:	f8c5 a008 	str.w	sl, [r5, #8]
 8005496:	4630      	mov	r0, r6
 8005498:	68db      	ldr	r3, [r3, #12]
 800549a:	63f5      	str	r5, [r6, #60]	; 0x3c
 800549c:	4798      	blx	r3
    newPresenter->activate();
 800549e:	682b      	ldr	r3, [r5, #0]
 80054a0:	4628      	mov	r0, r5
 80054a2:	681b      	ldr	r3, [r3, #0]
 80054a4:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80054a6:	4621      	mov	r1, r4
 80054a8:	4630      	mov	r0, r6
 80054aa:	f015 f8ad 	bl	801a608 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80054ae:	6823      	ldr	r3, [r4, #0]
 80054b0:	4620      	mov	r0, r4
 80054b2:	691b      	ldr	r3, [r3, #16]
 80054b4:	4798      	blx	r3
    newTransition->invalidate();
 80054b6:	6823      	ldr	r3, [r4, #0]
 80054b8:	695b      	ldr	r3, [r3, #20]
 80054ba:	4620      	mov	r0, r4
}
 80054bc:	b001      	add	sp, #4
 80054be:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80054c2:	4718      	bx	r3
    model->bind(newPresenter);
 80054c4:	462b      	mov	r3, r5
 80054c6:	e7e1      	b.n	800548c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0xf4>
 80054c8:	0802f680 	.word	0x0802f680
 80054cc:	0802f9a9 	.word	0x0802f9a9
 80054d0:	0802f81c 	.word	0x0802f81c
 80054d4:	0802f863 	.word	0x0802f863
 80054d8:	0802f906 	.word	0x0802f906
 80054dc:	080309c0 	.word	0x080309c0
 80054e0:	20013884 	.word	0x20013884
 80054e4:	20013880 	.word	0x20013880

080054e8 <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80054e8:	4b04      	ldr	r3, [pc, #16]	; (80054fc <_ZN8touchgfx3HAL3lcdEv+0x14>)
 80054ea:	681b      	ldr	r3, [r3, #0]
 80054ec:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80054f0:	b10a      	cbz	r2, 80054f6 <_ZN8touchgfx3HAL3lcdEv+0xe>
 80054f2:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80054f4:	b900      	cbnz	r0, 80054f8 <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 80054f6:	6898      	ldr	r0, [r3, #8]
    }
 80054f8:	4770      	bx	lr
 80054fa:	bf00      	nop
 80054fc:	2001383c 	.word	0x2001383c

08005500 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8005500:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005502:	4604      	mov	r4, r0
 8005504:	4617      	mov	r7, r2
 8005506:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 8005508:	f013 fb86 	bl	8018c18 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 800550c:	4b10      	ldr	r3, [pc, #64]	; (8005550 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
 800550e:	601c      	str	r4, [r3, #0]
      model(m)
 8005510:	4b10      	ldr	r3, [pc, #64]	; (8005554 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 8005512:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 8005514:	4b10      	ldr	r3, [pc, #64]	; (8005558 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
        : currentPresenter(0),
 8005516:	2500      	movs	r5, #0
 8005518:	e9c4 3551 	strd	r3, r5, [r4, #324]	; 0x144
        return instance;
 800551c:	4b0f      	ldr	r3, [pc, #60]	; (800555c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 800551e:	e9c4 5553 	strd	r5, r5, [r4, #332]	; 0x14c
 8005522:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8005524:	6803      	ldr	r3, [r0, #0]
 8005526:	2101      	movs	r1, #1
 8005528:	689b      	ldr	r3, [r3, #8]
          pendingScreenTransitionCallback(0)
 800552a:	e9c4 554f 	strd	r5, r5, [r4, #316]	; 0x13c
      model(m)
 800552e:	e9c4 7655 	strd	r7, r6, [r4, #340]	; 0x154
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8005532:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 8005534:	4628      	mov	r0, r5
 8005536:	f005 f873 	bl	800a620 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 800553a:	f7ff ffd5 	bl	80054e8 <_ZN8touchgfx3HAL3lcdEv>
 800553e:	f01c ff6e 	bl	802241e <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 8005542:	f7ff ffd1 	bl	80054e8 <_ZN8touchgfx3HAL3lcdEv>
 8005546:	f01c ffe5 	bl	8022514 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
 800554a:	4620      	mov	r0, r4
 800554c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800554e:	bf00      	nop
 8005550:	20013890 	.word	0x20013890
 8005554:	0803096c 	.word	0x0803096c
 8005558:	08030954 	.word	0x08030954
 800555c:	2001383c 	.word	0x2001383c

08005560 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8005560:	4b06      	ldr	r3, [pc, #24]	; (800557c <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv+0x1c>)
 8005562:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8005566:	2300      	movs	r3, #0
 8005568:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 800556c:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8005570:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8005574:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8005578:	4770      	bx	lr
 800557a:	bf00      	nop
 800557c:	08005399 	.word	0x08005399

08005580 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>:
 8005580:	4b06      	ldr	r3, [pc, #24]	; (800559c <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv+0x1c>)
 8005582:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8005586:	2300      	movs	r3, #0
 8005588:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 800558c:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8005590:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8005594:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8005598:	4770      	bx	lr
 800559a:	bf00      	nop
 800559c:	08005a05 	.word	0x08005a05

080055a0 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv>:
 80055a0:	4b06      	ldr	r3, [pc, #24]	; (80055bc <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv+0x1c>)
 80055a2:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80055a6:	2300      	movs	r3, #0
 80055a8:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80055ac:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80055b0:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80055b4:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80055b8:	4770      	bx	lr
 80055ba:	bf00      	nop
 80055bc:	080065a9 	.word	0x080065a9

080055c0 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>:
 80055c0:	4b06      	ldr	r3, [pc, #24]	; (80055dc <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv+0x1c>)
 80055c2:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80055c6:	2300      	movs	r3, #0
 80055c8:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80055cc:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80055d0:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80055d4:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80055d8:	4770      	bx	lr
 80055da:	bf00      	nop
 80055dc:	080058c5 	.word	0x080058c5

080055e0 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>:
 80055e0:	4b06      	ldr	r3, [pc, #24]	; (80055fc <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv+0x1c>)
 80055e2:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80055e6:	2300      	movs	r3, #0
 80055e8:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80055ec:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80055f0:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80055f4:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80055f8:	4770      	bx	lr
 80055fa:	bf00      	nop
 80055fc:	08006469 	.word	0x08006469

08005600 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv>:
 8005600:	4b06      	ldr	r3, [pc, #24]	; (800561c <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv+0x1c>)
 8005602:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8005606:	2300      	movs	r3, #0
 8005608:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 800560c:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8005610:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8005614:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8005618:	4770      	bx	lr
 800561a:	bf00      	nop
 800561c:	08006329 	.word	0x08006329

08005620 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv>:
 8005620:	4b06      	ldr	r3, [pc, #24]	; (800563c <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv+0x1c>)
 8005622:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8005626:	2300      	movs	r3, #0
 8005628:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 800562c:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8005630:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8005634:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8005638:	4770      	bx	lr
 800563a:	bf00      	nop
 800563c:	080061e9 	.word	0x080061e9

08005640 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv>:
 8005640:	4b06      	ldr	r3, [pc, #24]	; (800565c <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv+0x1c>)
 8005642:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8005646:	2300      	movs	r3, #0
 8005648:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 800564c:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8005650:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8005654:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8005658:	4770      	bx	lr
 800565a:	bf00      	nop
 800565c:	080060a9 	.word	0x080060a9

08005660 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>:
 8005660:	4b06      	ldr	r3, [pc, #24]	; (800567c <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv+0x1c>)
 8005662:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8005666:	2300      	movs	r3, #0
 8005668:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 800566c:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8005670:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8005674:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8005678:	4770      	bx	lr
 800567a:	bf00      	nop
 800567c:	08005785 	.word	0x08005785

08005680 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv>:
 8005680:	4b06      	ldr	r3, [pc, #24]	; (800569c <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv+0x1c>)
 8005682:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8005686:	2300      	movs	r3, #0
 8005688:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 800568c:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8005690:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8005694:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8005698:	4770      	bx	lr
 800569a:	bf00      	nop
 800569c:	08005f69 	.word	0x08005f69

080056a0 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv>:
 80056a0:	4b06      	ldr	r3, [pc, #24]	; (80056bc <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv+0x1c>)
 80056a2:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80056a6:	2300      	movs	r3, #0
 80056a8:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80056ac:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80056b0:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80056b4:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80056b8:	4770      	bx	lr
 80056ba:	bf00      	nop
 80056bc:	08005e29 	.word	0x08005e29

080056c0 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv>:
 80056c0:	4b06      	ldr	r3, [pc, #24]	; (80056dc <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv+0x1c>)
 80056c2:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80056c6:	2300      	movs	r3, #0
 80056c8:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80056cc:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80056d0:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80056d4:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80056d8:	4770      	bx	lr
 80056da:	bf00      	nop
 80056dc:	08005ce9 	.word	0x08005ce9

080056e0 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv>:
 80056e0:	4b06      	ldr	r3, [pc, #24]	; (80056fc <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv+0x1c>)
 80056e2:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80056e6:	2300      	movs	r3, #0
 80056e8:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80056ec:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80056f0:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80056f4:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80056f8:	4770      	bx	lr
 80056fa:	bf00      	nop
 80056fc:	08005ba9 	.word	0x08005ba9

08005700 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>:
 8005700:	4b06      	ldr	r3, [pc, #24]	; (800571c <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv+0x1c>)
 8005702:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8005706:	2300      	movs	r3, #0
 8005708:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 800570c:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8005710:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8005714:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8005718:	4770      	bx	lr
 800571a:	bf00      	nop
 800571c:	080051a9 	.word	0x080051a9

08005720 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>:
 8005720:	6803      	ldr	r3, [r0, #0]
 8005722:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005724:	4718      	bx	r3
	...

08005728 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>:
          solid()
 8005728:	4b12      	ldr	r3, [pc, #72]	; (8005774 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 800572a:	b513      	push	{r0, r1, r4, lr}
          solid()
 800572c:	6003      	str	r3, [r0, #0]
 800572e:	f44f 7380 	mov.w	r3, #256	; 0x100
 8005732:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 8005734:	4b10      	ldr	r3, [pc, #64]	; (8005778 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x50>)
          animationSteps(transitionSteps),
 8005736:	7241      	strb	r1, [r0, #9]
 8005738:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 800573a:	4910      	ldr	r1, [pc, #64]	; (800577c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 800573c:	4b10      	ldr	r3, [pc, #64]	; (8005780 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 800573e:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 8005742:	f9b3 3000 	ldrsh.w	r3, [r3]
 8005746:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 8005748:	2200      	movs	r2, #0
 800574a:	6042      	str	r2, [r0, #4]
 800574c:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 800574e:	7282      	strb	r2, [r0, #10]
          calculatedValue(0),
 8005750:	81c2      	strh	r2, [r0, #14]
          solid()
 8005752:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8005756:	e9c0 2207 	strd	r2, r2, [r0, #28]
 800575a:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 800575e:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 8005762:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8005764:	9100      	str	r1, [sp, #0]
 8005766:	3010      	adds	r0, #16
 8005768:	4611      	mov	r1, r2
 800576a:	f7fd ff90 	bl	800368e <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 800576e:	4620      	mov	r0, r4
 8005770:	b002      	add	sp, #8
 8005772:	bd10      	pop	{r4, pc}
 8005774:	08030a08 	.word	0x08030a08
 8005778:	080308ec 	.word	0x080308ec
 800577c:	20013832 	.word	0x20013832
 8005780:	20013830 	.word	0x20013830

08005784 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv>:
{
 8005784:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_AccurateView, Measurement_AccuratePresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005788:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 800578c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800578e:	68a0      	ldr	r0, [r4, #8]
 8005790:	6803      	ldr	r3, [r0, #0]
 8005792:	6a1b      	ldr	r3, [r3, #32]
 8005794:	4798      	blx	r3
 8005796:	f241 13c3 	movw	r3, #4547	; 0x11c3
 800579a:	4298      	cmp	r0, r3
 800579c:	d805      	bhi.n	80057aa <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x26>
 800579e:	4b42      	ldr	r3, [pc, #264]	; (80058a8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x124>)
 80057a0:	4a42      	ldr	r2, [pc, #264]	; (80058ac <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 80057a2:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80057a4:	4842      	ldr	r0, [pc, #264]	; (80058b0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x12c>)
 80057a6:	f028 f8d3 	bl	802d950 <__assert_func>
 80057aa:	6860      	ldr	r0, [r4, #4]
 80057ac:	6803      	ldr	r3, [r0, #0]
 80057ae:	6a1b      	ldr	r3, [r3, #32]
 80057b0:	4798      	blx	r3
 80057b2:	280f      	cmp	r0, #15
 80057b4:	d803      	bhi.n	80057be <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x3a>
 80057b6:	4b3f      	ldr	r3, [pc, #252]	; (80058b4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x130>)
 80057b8:	4a3c      	ldr	r2, [pc, #240]	; (80058ac <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 80057ba:	21a4      	movs	r1, #164	; 0xa4
 80057bc:	e7f2      	b.n	80057a4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80057be:	68e0      	ldr	r0, [r4, #12]
 80057c0:	6803      	ldr	r3, [r0, #0]
 80057c2:	6a1b      	ldr	r3, [r3, #32]
 80057c4:	4798      	blx	r3
 80057c6:	2837      	cmp	r0, #55	; 0x37
 80057c8:	d803      	bhi.n	80057d2 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x4e>
 80057ca:	4b3b      	ldr	r3, [pc, #236]	; (80058b8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x134>)
 80057cc:	4a37      	ldr	r2, [pc, #220]	; (80058ac <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 80057ce:	21a5      	movs	r1, #165	; 0xa5
 80057d0:	e7e8      	b.n	80057a4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80057d2:	f013 f8ed 	bl	80189b0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80057d6:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80058bc <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x138>
 80057da:	3004      	adds	r0, #4
 80057dc:	f013 f94e 	bl	8018a7c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80057e0:	f8d9 0000 	ldr.w	r0, [r9]
 80057e4:	b110      	cbz	r0, 80057ec <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x68>
        (*currentTrans)->tearDown();
 80057e6:	6803      	ldr	r3, [r0, #0]
 80057e8:	68db      	ldr	r3, [r3, #12]
 80057ea:	4798      	blx	r3
    if (*currentTrans)
 80057ec:	f8d9 0000 	ldr.w	r0, [r9]
 80057f0:	b110      	cbz	r0, 80057f8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x74>
        (*currentTrans)->~Transition();
 80057f2:	6803      	ldr	r3, [r0, #0]
 80057f4:	681b      	ldr	r3, [r3, #0]
 80057f6:	4798      	blx	r3
    if (*currentScreen)
 80057f8:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80058c0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x13c>
 80057fc:	f8d8 0000 	ldr.w	r0, [r8]
 8005800:	b110      	cbz	r0, 8005808 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8005802:	6803      	ldr	r3, [r0, #0]
 8005804:	695b      	ldr	r3, [r3, #20]
 8005806:	4798      	blx	r3
    if (*currentPresenter)
 8005808:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800580c:	b110      	cbz	r0, 8005814 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x90>
        (*currentPresenter)->deactivate();
 800580e:	6803      	ldr	r3, [r0, #0]
 8005810:	685b      	ldr	r3, [r3, #4]
 8005812:	4798      	blx	r3
    if (*currentScreen)
 8005814:	f8d8 0000 	ldr.w	r0, [r8]
 8005818:	b110      	cbz	r0, 8005820 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x9c>
        (*currentScreen)->~Screen();
 800581a:	6803      	ldr	r3, [r0, #0]
 800581c:	681b      	ldr	r3, [r3, #0]
 800581e:	4798      	blx	r3
    if (*currentPresenter)
 8005820:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005824:	b110      	cbz	r0, 800582c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8005826:	6803      	ldr	r3, [r0, #0]
 8005828:	689b      	ldr	r3, [r3, #8]
 800582a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800582c:	68e0      	ldr	r0, [r4, #12]
 800582e:	2100      	movs	r1, #0
 8005830:	f7ff ff76 	bl	8005720 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8005834:	2114      	movs	r1, #20
 8005836:	4605      	mov	r5, r0
 8005838:	f7ff ff76 	bl	8005728 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800583c:	68a0      	ldr	r0, [r4, #8]
 800583e:	6803      	ldr	r3, [r0, #0]
 8005840:	2100      	movs	r1, #0
 8005842:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005844:	4798      	blx	r3
 8005846:	4606      	mov	r6, r0
 8005848:	f005 f976 	bl	800ab38 <_ZN24Measurement_AccurateViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800584c:	6860      	ldr	r0, [r4, #4]
 800584e:	6803      	ldr	r3, [r0, #0]
 8005850:	2100      	movs	r1, #0
 8005852:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005854:	4798      	blx	r3
 8005856:	4631      	mov	r1, r6
 8005858:	4604      	mov	r4, r0
 800585a:	f005 f947 	bl	800aaec <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>
    *currentTrans = newTransition;
 800585e:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005862:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005866:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800586a:	b1dc      	cbz	r4, 80058a4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x120>
 800586c:	1d23      	adds	r3, r4, #4
 800586e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005872:	6833      	ldr	r3, [r6, #0]
 8005874:	f8c4 a008 	str.w	sl, [r4, #8]
 8005878:	4630      	mov	r0, r6
 800587a:	68db      	ldr	r3, [r3, #12]
 800587c:	63f4      	str	r4, [r6, #60]	; 0x3c
 800587e:	4798      	blx	r3
    newPresenter->activate();
 8005880:	6823      	ldr	r3, [r4, #0]
 8005882:	4620      	mov	r0, r4
 8005884:	681b      	ldr	r3, [r3, #0]
 8005886:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005888:	4629      	mov	r1, r5
 800588a:	4630      	mov	r0, r6
 800588c:	f014 febc 	bl	801a608 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005890:	682b      	ldr	r3, [r5, #0]
 8005892:	4628      	mov	r0, r5
 8005894:	691b      	ldr	r3, [r3, #16]
 8005896:	4798      	blx	r3
    newTransition->invalidate();
 8005898:	682b      	ldr	r3, [r5, #0]
 800589a:	4628      	mov	r0, r5
 800589c:	695b      	ldr	r3, [r3, #20]
}
 800589e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80058a2:	4718      	bx	r3
    model->bind(newPresenter);
 80058a4:	4623      	mov	r3, r4
 80058a6:	e7e2      	b.n	800586e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0xea>
 80058a8:	0802f680 	.word	0x0802f680
 80058ac:	0802fab1 	.word	0x0802fab1
 80058b0:	0802f81c 	.word	0x0802f81c
 80058b4:	0802f863 	.word	0x0802f863
 80058b8:	0802f906 	.word	0x0802f906
 80058bc:	20013884 	.word	0x20013884
 80058c0:	20013880 	.word	0x20013880

080058c4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv>:
{
 80058c4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MeasurementView, MeasurementPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80058c8:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80058cc:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80058ce:	68a0      	ldr	r0, [r4, #8]
 80058d0:	6803      	ldr	r3, [r0, #0]
 80058d2:	6a1b      	ldr	r3, [r3, #32]
 80058d4:	4798      	blx	r3
 80058d6:	f241 13c3 	movw	r3, #4547	; 0x11c3
 80058da:	4298      	cmp	r0, r3
 80058dc:	d805      	bhi.n	80058ea <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x26>
 80058de:	4b42      	ldr	r3, [pc, #264]	; (80059e8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x124>)
 80058e0:	4a42      	ldr	r2, [pc, #264]	; (80059ec <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 80058e2:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80058e4:	4842      	ldr	r0, [pc, #264]	; (80059f0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x12c>)
 80058e6:	f028 f833 	bl	802d950 <__assert_func>
 80058ea:	6860      	ldr	r0, [r4, #4]
 80058ec:	6803      	ldr	r3, [r0, #0]
 80058ee:	6a1b      	ldr	r3, [r3, #32]
 80058f0:	4798      	blx	r3
 80058f2:	280f      	cmp	r0, #15
 80058f4:	d803      	bhi.n	80058fe <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x3a>
 80058f6:	4b3f      	ldr	r3, [pc, #252]	; (80059f4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x130>)
 80058f8:	4a3c      	ldr	r2, [pc, #240]	; (80059ec <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 80058fa:	21a4      	movs	r1, #164	; 0xa4
 80058fc:	e7f2      	b.n	80058e4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80058fe:	68e0      	ldr	r0, [r4, #12]
 8005900:	6803      	ldr	r3, [r0, #0]
 8005902:	6a1b      	ldr	r3, [r3, #32]
 8005904:	4798      	blx	r3
 8005906:	2837      	cmp	r0, #55	; 0x37
 8005908:	d803      	bhi.n	8005912 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x4e>
 800590a:	4b3b      	ldr	r3, [pc, #236]	; (80059f8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x134>)
 800590c:	4a37      	ldr	r2, [pc, #220]	; (80059ec <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 800590e:	21a5      	movs	r1, #165	; 0xa5
 8005910:	e7e8      	b.n	80058e4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8005912:	f013 f84d 	bl	80189b0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005916:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80059fc <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x138>
 800591a:	3004      	adds	r0, #4
 800591c:	f013 f8ae 	bl	8018a7c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005920:	f8d9 0000 	ldr.w	r0, [r9]
 8005924:	b110      	cbz	r0, 800592c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x68>
        (*currentTrans)->tearDown();
 8005926:	6803      	ldr	r3, [r0, #0]
 8005928:	68db      	ldr	r3, [r3, #12]
 800592a:	4798      	blx	r3
    if (*currentTrans)
 800592c:	f8d9 0000 	ldr.w	r0, [r9]
 8005930:	b110      	cbz	r0, 8005938 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x74>
        (*currentTrans)->~Transition();
 8005932:	6803      	ldr	r3, [r0, #0]
 8005934:	681b      	ldr	r3, [r3, #0]
 8005936:	4798      	blx	r3
    if (*currentScreen)
 8005938:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8005a00 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x13c>
 800593c:	f8d8 0000 	ldr.w	r0, [r8]
 8005940:	b110      	cbz	r0, 8005948 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8005942:	6803      	ldr	r3, [r0, #0]
 8005944:	695b      	ldr	r3, [r3, #20]
 8005946:	4798      	blx	r3
    if (*currentPresenter)
 8005948:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800594c:	b110      	cbz	r0, 8005954 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x90>
        (*currentPresenter)->deactivate();
 800594e:	6803      	ldr	r3, [r0, #0]
 8005950:	685b      	ldr	r3, [r3, #4]
 8005952:	4798      	blx	r3
    if (*currentScreen)
 8005954:	f8d8 0000 	ldr.w	r0, [r8]
 8005958:	b110      	cbz	r0, 8005960 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x9c>
        (*currentScreen)->~Screen();
 800595a:	6803      	ldr	r3, [r0, #0]
 800595c:	681b      	ldr	r3, [r3, #0]
 800595e:	4798      	blx	r3
    if (*currentPresenter)
 8005960:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005964:	b110      	cbz	r0, 800596c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8005966:	6803      	ldr	r3, [r0, #0]
 8005968:	689b      	ldr	r3, [r3, #8]
 800596a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800596c:	68e0      	ldr	r0, [r4, #12]
 800596e:	2100      	movs	r1, #0
 8005970:	f7ff fed6 	bl	8005720 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8005974:	2114      	movs	r1, #20
 8005976:	4605      	mov	r5, r0
 8005978:	f7ff fed6 	bl	8005728 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800597c:	68a0      	ldr	r0, [r4, #8]
 800597e:	6803      	ldr	r3, [r0, #0]
 8005980:	2100      	movs	r1, #0
 8005982:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005984:	4798      	blx	r3
 8005986:	4606      	mov	r6, r0
 8005988:	f005 f876 	bl	800aa78 <_ZN15MeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800598c:	6860      	ldr	r0, [r4, #4]
 800598e:	6803      	ldr	r3, [r0, #0]
 8005990:	2100      	movs	r1, #0
 8005992:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005994:	4798      	blx	r3
 8005996:	4631      	mov	r1, r6
 8005998:	4604      	mov	r4, r0
 800599a:	f005 f847 	bl	800aa2c <_ZN20MeasurementPresenterC1ER15MeasurementView>
    *currentTrans = newTransition;
 800599e:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80059a2:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80059a6:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80059aa:	b1dc      	cbz	r4, 80059e4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x120>
 80059ac:	1d23      	adds	r3, r4, #4
 80059ae:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80059b2:	6833      	ldr	r3, [r6, #0]
 80059b4:	f8c4 a008 	str.w	sl, [r4, #8]
 80059b8:	4630      	mov	r0, r6
 80059ba:	68db      	ldr	r3, [r3, #12]
 80059bc:	63f4      	str	r4, [r6, #60]	; 0x3c
 80059be:	4798      	blx	r3
    newPresenter->activate();
 80059c0:	6823      	ldr	r3, [r4, #0]
 80059c2:	4620      	mov	r0, r4
 80059c4:	681b      	ldr	r3, [r3, #0]
 80059c6:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80059c8:	4629      	mov	r1, r5
 80059ca:	4630      	mov	r0, r6
 80059cc:	f014 fe1c 	bl	801a608 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80059d0:	682b      	ldr	r3, [r5, #0]
 80059d2:	4628      	mov	r0, r5
 80059d4:	691b      	ldr	r3, [r3, #16]
 80059d6:	4798      	blx	r3
    newTransition->invalidate();
 80059d8:	682b      	ldr	r3, [r5, #0]
 80059da:	4628      	mov	r0, r5
 80059dc:	695b      	ldr	r3, [r3, #20]
}
 80059de:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80059e2:	4718      	bx	r3
    model->bind(newPresenter);
 80059e4:	4623      	mov	r3, r4
 80059e6:	e7e2      	b.n	80059ae <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0xea>
 80059e8:	0802f680 	.word	0x0802f680
 80059ec:	0802fbe1 	.word	0x0802fbe1
 80059f0:	0802f81c 	.word	0x0802f81c
 80059f4:	0802f863 	.word	0x0802f863
 80059f8:	0802f906 	.word	0x0802f906
 80059fc:	20013884 	.word	0x20013884
 8005a00:	20013880 	.word	0x20013880

08005a04 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv>:
{
 8005a04:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Main_MenuView, Main_MenuPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005a08:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005a0c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005a0e:	68a0      	ldr	r0, [r4, #8]
 8005a10:	6803      	ldr	r3, [r0, #0]
 8005a12:	6a1b      	ldr	r3, [r3, #32]
 8005a14:	4798      	blx	r3
 8005a16:	f5b0 5f90 	cmp.w	r0, #4608	; 0x1200
 8005a1a:	d205      	bcs.n	8005a28 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x24>
 8005a1c:	4b42      	ldr	r3, [pc, #264]	; (8005b28 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x124>)
 8005a1e:	4a43      	ldr	r2, [pc, #268]	; (8005b2c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8005a20:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005a22:	4843      	ldr	r0, [pc, #268]	; (8005b30 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x12c>)
 8005a24:	f027 ff94 	bl	802d950 <__assert_func>
 8005a28:	6860      	ldr	r0, [r4, #4]
 8005a2a:	6803      	ldr	r3, [r0, #0]
 8005a2c:	6a1b      	ldr	r3, [r3, #32]
 8005a2e:	4798      	blx	r3
 8005a30:	280f      	cmp	r0, #15
 8005a32:	d803      	bhi.n	8005a3c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x38>
 8005a34:	4b3f      	ldr	r3, [pc, #252]	; (8005b34 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x130>)
 8005a36:	4a3d      	ldr	r2, [pc, #244]	; (8005b2c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8005a38:	21a4      	movs	r1, #164	; 0xa4
 8005a3a:	e7f2      	b.n	8005a22 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005a3c:	68e0      	ldr	r0, [r4, #12]
 8005a3e:	6803      	ldr	r3, [r0, #0]
 8005a40:	6a1b      	ldr	r3, [r3, #32]
 8005a42:	4798      	blx	r3
 8005a44:	2837      	cmp	r0, #55	; 0x37
 8005a46:	d803      	bhi.n	8005a50 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x4c>
 8005a48:	4b3b      	ldr	r3, [pc, #236]	; (8005b38 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x134>)
 8005a4a:	4a38      	ldr	r2, [pc, #224]	; (8005b2c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8005a4c:	21a5      	movs	r1, #165	; 0xa5
 8005a4e:	e7e8      	b.n	8005a22 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8005a50:	f012 ffae 	bl	80189b0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005a54:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005b3c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x138>
 8005a58:	3004      	adds	r0, #4
 8005a5a:	f013 f80f 	bl	8018a7c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005a5e:	f8d9 0000 	ldr.w	r0, [r9]
 8005a62:	b110      	cbz	r0, 8005a6a <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8005a64:	6803      	ldr	r3, [r0, #0]
 8005a66:	68db      	ldr	r3, [r3, #12]
 8005a68:	4798      	blx	r3
    if (*currentTrans)
 8005a6a:	f8d9 0000 	ldr.w	r0, [r9]
 8005a6e:	b110      	cbz	r0, 8005a76 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8005a70:	6803      	ldr	r3, [r0, #0]
 8005a72:	681b      	ldr	r3, [r3, #0]
 8005a74:	4798      	blx	r3
    if (*currentScreen)
 8005a76:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8005b40 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x13c>
 8005a7a:	f8d8 0000 	ldr.w	r0, [r8]
 8005a7e:	b110      	cbz	r0, 8005a86 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8005a80:	6803      	ldr	r3, [r0, #0]
 8005a82:	695b      	ldr	r3, [r3, #20]
 8005a84:	4798      	blx	r3
    if (*currentPresenter)
 8005a86:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005a8a:	b110      	cbz	r0, 8005a92 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8005a8c:	6803      	ldr	r3, [r0, #0]
 8005a8e:	685b      	ldr	r3, [r3, #4]
 8005a90:	4798      	blx	r3
    if (*currentScreen)
 8005a92:	f8d8 0000 	ldr.w	r0, [r8]
 8005a96:	b110      	cbz	r0, 8005a9e <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8005a98:	6803      	ldr	r3, [r0, #0]
 8005a9a:	681b      	ldr	r3, [r3, #0]
 8005a9c:	4798      	blx	r3
    if (*currentPresenter)
 8005a9e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005aa2:	b110      	cbz	r0, 8005aaa <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8005aa4:	6803      	ldr	r3, [r0, #0]
 8005aa6:	689b      	ldr	r3, [r3, #8]
 8005aa8:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005aaa:	68e0      	ldr	r0, [r4, #12]
 8005aac:	2100      	movs	r1, #0
 8005aae:	f7ff fe37 	bl	8005720 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8005ab2:	2114      	movs	r1, #20
 8005ab4:	4605      	mov	r5, r0
 8005ab6:	f7ff fe37 	bl	8005728 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005aba:	68a0      	ldr	r0, [r4, #8]
 8005abc:	6803      	ldr	r3, [r0, #0]
 8005abe:	2100      	movs	r1, #0
 8005ac0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005ac2:	4798      	blx	r3
 8005ac4:	4606      	mov	r6, r0
 8005ac6:	f004 ff77 	bl	800a9b8 <_ZN13Main_MenuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005aca:	6860      	ldr	r0, [r4, #4]
 8005acc:	6803      	ldr	r3, [r0, #0]
 8005ace:	2100      	movs	r1, #0
 8005ad0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005ad2:	4798      	blx	r3
 8005ad4:	4631      	mov	r1, r6
 8005ad6:	4604      	mov	r4, r0
 8005ad8:	f004 ff48 	bl	800a96c <_ZN18Main_MenuPresenterC1ER13Main_MenuView>
    *currentTrans = newTransition;
 8005adc:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005ae0:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005ae4:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005ae8:	b1dc      	cbz	r4, 8005b22 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x11e>
 8005aea:	1d23      	adds	r3, r4, #4
 8005aec:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005af0:	6833      	ldr	r3, [r6, #0]
 8005af2:	f8c4 a008 	str.w	sl, [r4, #8]
 8005af6:	4630      	mov	r0, r6
 8005af8:	68db      	ldr	r3, [r3, #12]
 8005afa:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005afc:	4798      	blx	r3
    newPresenter->activate();
 8005afe:	6823      	ldr	r3, [r4, #0]
 8005b00:	4620      	mov	r0, r4
 8005b02:	681b      	ldr	r3, [r3, #0]
 8005b04:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005b06:	4629      	mov	r1, r5
 8005b08:	4630      	mov	r0, r6
 8005b0a:	f014 fd7d 	bl	801a608 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005b0e:	682b      	ldr	r3, [r5, #0]
 8005b10:	4628      	mov	r0, r5
 8005b12:	691b      	ldr	r3, [r3, #16]
 8005b14:	4798      	blx	r3
    newTransition->invalidate();
 8005b16:	682b      	ldr	r3, [r5, #0]
 8005b18:	4628      	mov	r0, r5
 8005b1a:	695b      	ldr	r3, [r3, #20]
}
 8005b1c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005b20:	4718      	bx	r3
    model->bind(newPresenter);
 8005b22:	4623      	mov	r3, r4
 8005b24:	e7e2      	b.n	8005aec <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0xe8>
 8005b26:	bf00      	nop
 8005b28:	0802f680 	.word	0x0802f680
 8005b2c:	0802fcff 	.word	0x0802fcff
 8005b30:	0802f81c 	.word	0x0802f81c
 8005b34:	0802f863 	.word	0x0802f863
 8005b38:	0802f906 	.word	0x0802f906
 8005b3c:	20013884 	.word	0x20013884
 8005b40:	20013880 	.word	0x20013880

08005b44 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>:
 8005b44:	6803      	ldr	r3, [r0, #0]
 8005b46:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005b48:	4718      	bx	r3
	...

08005b4c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>:
          solid()
 8005b4c:	4b12      	ldr	r3, [pc, #72]	; (8005b98 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 8005b4e:	b513      	push	{r0, r1, r4, lr}
          solid()
 8005b50:	6003      	str	r3, [r0, #0]
 8005b52:	f44f 7380 	mov.w	r3, #256	; 0x100
 8005b56:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 8005b58:	4b10      	ldr	r3, [pc, #64]	; (8005b9c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x50>)
          animationSteps(transitionSteps),
 8005b5a:	7241      	strb	r1, [r0, #9]
 8005b5c:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8005b5e:	4910      	ldr	r1, [pc, #64]	; (8005ba0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 8005b60:	4b10      	ldr	r3, [pc, #64]	; (8005ba4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8005b62:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 8005b66:	f9b3 3000 	ldrsh.w	r3, [r3]
 8005b6a:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 8005b6c:	2200      	movs	r2, #0
 8005b6e:	6042      	str	r2, [r0, #4]
 8005b70:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 8005b72:	7282      	strb	r2, [r0, #10]
          calculatedValue(0),
 8005b74:	81c2      	strh	r2, [r0, #14]
          solid()
 8005b76:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8005b7a:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8005b7e:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 8005b82:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 8005b86:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8005b88:	9100      	str	r1, [sp, #0]
 8005b8a:	3010      	adds	r0, #16
 8005b8c:	4611      	mov	r1, r2
 8005b8e:	f7fd fd7e 	bl	800368e <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 8005b92:	4620      	mov	r0, r4
 8005b94:	b002      	add	sp, #8
 8005b96:	bd10      	pop	{r4, pc}
 8005b98:	080309e4 	.word	0x080309e4
 8005b9c:	080308ec 	.word	0x080308ec
 8005ba0:	20013832 	.word	0x20013832
 8005ba4:	20013830 	.word	0x20013830

08005ba8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv>:
{
 8005ba8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Project_InfoView, Project_InfoPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005bac:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005bb0:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005bb2:	68a0      	ldr	r0, [r4, #8]
 8005bb4:	6803      	ldr	r3, [r0, #0]
 8005bb6:	6a1b      	ldr	r3, [r3, #32]
 8005bb8:	4798      	blx	r3
 8005bba:	f241 137b 	movw	r3, #4475	; 0x117b
 8005bbe:	4298      	cmp	r0, r3
 8005bc0:	d805      	bhi.n	8005bce <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x26>
 8005bc2:	4b42      	ldr	r3, [pc, #264]	; (8005ccc <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x124>)
 8005bc4:	4a42      	ldr	r2, [pc, #264]	; (8005cd0 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 8005bc6:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005bc8:	4842      	ldr	r0, [pc, #264]	; (8005cd4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x12c>)
 8005bca:	f027 fec1 	bl	802d950 <__assert_func>
 8005bce:	6860      	ldr	r0, [r4, #4]
 8005bd0:	6803      	ldr	r3, [r0, #0]
 8005bd2:	6a1b      	ldr	r3, [r3, #32]
 8005bd4:	4798      	blx	r3
 8005bd6:	280f      	cmp	r0, #15
 8005bd8:	d803      	bhi.n	8005be2 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x3a>
 8005bda:	4b3f      	ldr	r3, [pc, #252]	; (8005cd8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x130>)
 8005bdc:	4a3c      	ldr	r2, [pc, #240]	; (8005cd0 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 8005bde:	21a4      	movs	r1, #164	; 0xa4
 8005be0:	e7f2      	b.n	8005bc8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005be2:	68e0      	ldr	r0, [r4, #12]
 8005be4:	6803      	ldr	r3, [r0, #0]
 8005be6:	6a1b      	ldr	r3, [r3, #32]
 8005be8:	4798      	blx	r3
 8005bea:	2837      	cmp	r0, #55	; 0x37
 8005bec:	d803      	bhi.n	8005bf6 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x4e>
 8005bee:	4b3b      	ldr	r3, [pc, #236]	; (8005cdc <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x134>)
 8005bf0:	4a37      	ldr	r2, [pc, #220]	; (8005cd0 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 8005bf2:	21a5      	movs	r1, #165	; 0xa5
 8005bf4:	e7e8      	b.n	8005bc8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8005bf6:	f012 fedb 	bl	80189b0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005bfa:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005ce0 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x138>
 8005bfe:	3004      	adds	r0, #4
 8005c00:	f012 ff3c 	bl	8018a7c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005c04:	f8d9 0000 	ldr.w	r0, [r9]
 8005c08:	b110      	cbz	r0, 8005c10 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8005c0a:	6803      	ldr	r3, [r0, #0]
 8005c0c:	68db      	ldr	r3, [r3, #12]
 8005c0e:	4798      	blx	r3
    if (*currentTrans)
 8005c10:	f8d9 0000 	ldr.w	r0, [r9]
 8005c14:	b110      	cbz	r0, 8005c1c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8005c16:	6803      	ldr	r3, [r0, #0]
 8005c18:	681b      	ldr	r3, [r3, #0]
 8005c1a:	4798      	blx	r3
    if (*currentScreen)
 8005c1c:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8005ce4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x13c>
 8005c20:	f8d8 0000 	ldr.w	r0, [r8]
 8005c24:	b110      	cbz	r0, 8005c2c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8005c26:	6803      	ldr	r3, [r0, #0]
 8005c28:	695b      	ldr	r3, [r3, #20]
 8005c2a:	4798      	blx	r3
    if (*currentPresenter)
 8005c2c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005c30:	b110      	cbz	r0, 8005c38 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8005c32:	6803      	ldr	r3, [r0, #0]
 8005c34:	685b      	ldr	r3, [r3, #4]
 8005c36:	4798      	blx	r3
    if (*currentScreen)
 8005c38:	f8d8 0000 	ldr.w	r0, [r8]
 8005c3c:	b110      	cbz	r0, 8005c44 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8005c3e:	6803      	ldr	r3, [r0, #0]
 8005c40:	681b      	ldr	r3, [r3, #0]
 8005c42:	4798      	blx	r3
    if (*currentPresenter)
 8005c44:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005c48:	b110      	cbz	r0, 8005c50 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8005c4a:	6803      	ldr	r3, [r0, #0]
 8005c4c:	689b      	ldr	r3, [r3, #8]
 8005c4e:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005c50:	68e0      	ldr	r0, [r4, #12]
 8005c52:	2100      	movs	r1, #0
 8005c54:	f7ff ff76 	bl	8005b44 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005c58:	2114      	movs	r1, #20
 8005c5a:	4605      	mov	r5, r0
 8005c5c:	f7ff ff76 	bl	8005b4c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005c60:	68a0      	ldr	r0, [r4, #8]
 8005c62:	6803      	ldr	r3, [r0, #0]
 8005c64:	2100      	movs	r1, #0
 8005c66:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005c68:	4798      	blx	r3
 8005c6a:	4606      	mov	r6, r0
 8005c6c:	f005 f990 	bl	800af90 <_ZN16Project_InfoViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005c70:	6860      	ldr	r0, [r4, #4]
 8005c72:	6803      	ldr	r3, [r0, #0]
 8005c74:	2100      	movs	r1, #0
 8005c76:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005c78:	4798      	blx	r3
 8005c7a:	4631      	mov	r1, r6
 8005c7c:	4604      	mov	r4, r0
 8005c7e:	f005 f961 	bl	800af44 <_ZN21Project_InfoPresenterC1ER16Project_InfoView>
    *currentTrans = newTransition;
 8005c82:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005c86:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005c8a:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005c8e:	b1dc      	cbz	r4, 8005cc8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x120>
 8005c90:	1d23      	adds	r3, r4, #4
 8005c92:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005c96:	6833      	ldr	r3, [r6, #0]
 8005c98:	f8c4 a008 	str.w	sl, [r4, #8]
 8005c9c:	4630      	mov	r0, r6
 8005c9e:	68db      	ldr	r3, [r3, #12]
 8005ca0:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005ca2:	4798      	blx	r3
    newPresenter->activate();
 8005ca4:	6823      	ldr	r3, [r4, #0]
 8005ca6:	4620      	mov	r0, r4
 8005ca8:	681b      	ldr	r3, [r3, #0]
 8005caa:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005cac:	4629      	mov	r1, r5
 8005cae:	4630      	mov	r0, r6
 8005cb0:	f014 fcaa 	bl	801a608 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005cb4:	682b      	ldr	r3, [r5, #0]
 8005cb6:	4628      	mov	r0, r5
 8005cb8:	691b      	ldr	r3, [r3, #16]
 8005cba:	4798      	blx	r3
    newTransition->invalidate();
 8005cbc:	682b      	ldr	r3, [r5, #0]
 8005cbe:	4628      	mov	r0, r5
 8005cc0:	695b      	ldr	r3, [r3, #20]
}
 8005cc2:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005cc6:	4718      	bx	r3
    model->bind(newPresenter);
 8005cc8:	4623      	mov	r3, r4
 8005cca:	e7e2      	b.n	8005c92 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0xea>
 8005ccc:	0802f680 	.word	0x0802f680
 8005cd0:	0802fe19 	.word	0x0802fe19
 8005cd4:	0802f81c 	.word	0x0802f81c
 8005cd8:	0802f863 	.word	0x0802f863
 8005cdc:	0802f906 	.word	0x0802f906
 8005ce0:	20013884 	.word	0x20013884
 8005ce4:	20013880 	.word	0x20013880

08005ce8 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv>:
{
 8005ce8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Calibration_PadView, Calibration_PadPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005cec:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005cf0:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005cf2:	68a0      	ldr	r0, [r4, #8]
 8005cf4:	6803      	ldr	r3, [r0, #0]
 8005cf6:	6a1b      	ldr	r3, [r3, #32]
 8005cf8:	4798      	blx	r3
 8005cfa:	f641 5303 	movw	r3, #7427	; 0x1d03
 8005cfe:	4298      	cmp	r0, r3
 8005d00:	d805      	bhi.n	8005d0e <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x26>
 8005d02:	4b42      	ldr	r3, [pc, #264]	; (8005e0c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x124>)
 8005d04:	4a42      	ldr	r2, [pc, #264]	; (8005e10 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 8005d06:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005d08:	4842      	ldr	r0, [pc, #264]	; (8005e14 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x12c>)
 8005d0a:	f027 fe21 	bl	802d950 <__assert_func>
 8005d0e:	6860      	ldr	r0, [r4, #4]
 8005d10:	6803      	ldr	r3, [r0, #0]
 8005d12:	6a1b      	ldr	r3, [r3, #32]
 8005d14:	4798      	blx	r3
 8005d16:	280f      	cmp	r0, #15
 8005d18:	d803      	bhi.n	8005d22 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x3a>
 8005d1a:	4b3f      	ldr	r3, [pc, #252]	; (8005e18 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x130>)
 8005d1c:	4a3c      	ldr	r2, [pc, #240]	; (8005e10 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 8005d1e:	21a4      	movs	r1, #164	; 0xa4
 8005d20:	e7f2      	b.n	8005d08 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005d22:	68e0      	ldr	r0, [r4, #12]
 8005d24:	6803      	ldr	r3, [r0, #0]
 8005d26:	6a1b      	ldr	r3, [r3, #32]
 8005d28:	4798      	blx	r3
 8005d2a:	2837      	cmp	r0, #55	; 0x37
 8005d2c:	d803      	bhi.n	8005d36 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x4e>
 8005d2e:	4b3b      	ldr	r3, [pc, #236]	; (8005e1c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x134>)
 8005d30:	4a37      	ldr	r2, [pc, #220]	; (8005e10 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 8005d32:	21a5      	movs	r1, #165	; 0xa5
 8005d34:	e7e8      	b.n	8005d08 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8005d36:	f012 fe3b 	bl	80189b0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005d3a:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005e20 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x138>
 8005d3e:	3004      	adds	r0, #4
 8005d40:	f012 fe9c 	bl	8018a7c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005d44:	f8d9 0000 	ldr.w	r0, [r9]
 8005d48:	b110      	cbz	r0, 8005d50 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8005d4a:	6803      	ldr	r3, [r0, #0]
 8005d4c:	68db      	ldr	r3, [r3, #12]
 8005d4e:	4798      	blx	r3
    if (*currentTrans)
 8005d50:	f8d9 0000 	ldr.w	r0, [r9]
 8005d54:	b110      	cbz	r0, 8005d5c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8005d56:	6803      	ldr	r3, [r0, #0]
 8005d58:	681b      	ldr	r3, [r3, #0]
 8005d5a:	4798      	blx	r3
    if (*currentScreen)
 8005d5c:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8005e24 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x13c>
 8005d60:	f8d8 0000 	ldr.w	r0, [r8]
 8005d64:	b110      	cbz	r0, 8005d6c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8005d66:	6803      	ldr	r3, [r0, #0]
 8005d68:	695b      	ldr	r3, [r3, #20]
 8005d6a:	4798      	blx	r3
    if (*currentPresenter)
 8005d6c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005d70:	b110      	cbz	r0, 8005d78 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8005d72:	6803      	ldr	r3, [r0, #0]
 8005d74:	685b      	ldr	r3, [r3, #4]
 8005d76:	4798      	blx	r3
    if (*currentScreen)
 8005d78:	f8d8 0000 	ldr.w	r0, [r8]
 8005d7c:	b110      	cbz	r0, 8005d84 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8005d7e:	6803      	ldr	r3, [r0, #0]
 8005d80:	681b      	ldr	r3, [r3, #0]
 8005d82:	4798      	blx	r3
    if (*currentPresenter)
 8005d84:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005d88:	b110      	cbz	r0, 8005d90 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8005d8a:	6803      	ldr	r3, [r0, #0]
 8005d8c:	689b      	ldr	r3, [r3, #8]
 8005d8e:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005d90:	68e0      	ldr	r0, [r4, #12]
 8005d92:	2100      	movs	r1, #0
 8005d94:	f7ff fed6 	bl	8005b44 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005d98:	2114      	movs	r1, #20
 8005d9a:	4605      	mov	r5, r0
 8005d9c:	f7ff fed6 	bl	8005b4c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005da0:	68a0      	ldr	r0, [r4, #8]
 8005da2:	6803      	ldr	r3, [r0, #0]
 8005da4:	2100      	movs	r1, #0
 8005da6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005da8:	4798      	blx	r3
 8005daa:	4606      	mov	r6, r0
 8005dac:	f004 fcd0 	bl	800a750 <_ZN19Calibration_PadViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005db0:	6860      	ldr	r0, [r4, #4]
 8005db2:	6803      	ldr	r3, [r0, #0]
 8005db4:	2100      	movs	r1, #0
 8005db6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005db8:	4798      	blx	r3
 8005dba:	4631      	mov	r1, r6
 8005dbc:	4604      	mov	r4, r0
 8005dbe:	f004 fca1 	bl	800a704 <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView>
    *currentTrans = newTransition;
 8005dc2:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005dc6:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005dca:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005dce:	b1dc      	cbz	r4, 8005e08 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x120>
 8005dd0:	1d23      	adds	r3, r4, #4
 8005dd2:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005dd6:	6833      	ldr	r3, [r6, #0]
 8005dd8:	f8c4 a008 	str.w	sl, [r4, #8]
 8005ddc:	4630      	mov	r0, r6
 8005dde:	68db      	ldr	r3, [r3, #12]
 8005de0:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005de2:	4798      	blx	r3
    newPresenter->activate();
 8005de4:	6823      	ldr	r3, [r4, #0]
 8005de6:	4620      	mov	r0, r4
 8005de8:	681b      	ldr	r3, [r3, #0]
 8005dea:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005dec:	4629      	mov	r1, r5
 8005dee:	4630      	mov	r0, r6
 8005df0:	f014 fc0a 	bl	801a608 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005df4:	682b      	ldr	r3, [r5, #0]
 8005df6:	4628      	mov	r0, r5
 8005df8:	691b      	ldr	r3, [r3, #16]
 8005dfa:	4798      	blx	r3
    newTransition->invalidate();
 8005dfc:	682b      	ldr	r3, [r5, #0]
 8005dfe:	4628      	mov	r0, r5
 8005e00:	695b      	ldr	r3, [r3, #20]
}
 8005e02:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005e06:	4718      	bx	r3
    model->bind(newPresenter);
 8005e08:	4623      	mov	r3, r4
 8005e0a:	e7e2      	b.n	8005dd2 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0xea>
 8005e0c:	0802f680 	.word	0x0802f680
 8005e10:	0802ff39 	.word	0x0802ff39
 8005e14:	0802f81c 	.word	0x0802f81c
 8005e18:	0802f863 	.word	0x0802f863
 8005e1c:	0802f906 	.word	0x0802f906
 8005e20:	20013884 	.word	0x20013884
 8005e24:	20013880 	.word	0x20013880

08005e28 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv>:
{
 8005e28:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Accurate_Display_2View, Measurement_Accurate_Display_2Presenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005e2c:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005e30:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005e32:	68a0      	ldr	r0, [r4, #8]
 8005e34:	6803      	ldr	r3, [r0, #0]
 8005e36:	6a1b      	ldr	r3, [r3, #32]
 8005e38:	4798      	blx	r3
 8005e3a:	f241 4377 	movw	r3, #5239	; 0x1477
 8005e3e:	4298      	cmp	r0, r3
 8005e40:	d805      	bhi.n	8005e4e <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x26>
 8005e42:	4b42      	ldr	r3, [pc, #264]	; (8005f4c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x124>)
 8005e44:	4a42      	ldr	r2, [pc, #264]	; (8005f50 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 8005e46:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005e48:	4842      	ldr	r0, [pc, #264]	; (8005f54 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x12c>)
 8005e4a:	f027 fd81 	bl	802d950 <__assert_func>
 8005e4e:	6860      	ldr	r0, [r4, #4]
 8005e50:	6803      	ldr	r3, [r0, #0]
 8005e52:	6a1b      	ldr	r3, [r3, #32]
 8005e54:	4798      	blx	r3
 8005e56:	280f      	cmp	r0, #15
 8005e58:	d803      	bhi.n	8005e62 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x3a>
 8005e5a:	4b3f      	ldr	r3, [pc, #252]	; (8005f58 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x130>)
 8005e5c:	4a3c      	ldr	r2, [pc, #240]	; (8005f50 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 8005e5e:	21a4      	movs	r1, #164	; 0xa4
 8005e60:	e7f2      	b.n	8005e48 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005e62:	68e0      	ldr	r0, [r4, #12]
 8005e64:	6803      	ldr	r3, [r0, #0]
 8005e66:	6a1b      	ldr	r3, [r3, #32]
 8005e68:	4798      	blx	r3
 8005e6a:	2837      	cmp	r0, #55	; 0x37
 8005e6c:	d803      	bhi.n	8005e76 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x4e>
 8005e6e:	4b3b      	ldr	r3, [pc, #236]	; (8005f5c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x134>)
 8005e70:	4a37      	ldr	r2, [pc, #220]	; (8005f50 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 8005e72:	21a5      	movs	r1, #165	; 0xa5
 8005e74:	e7e8      	b.n	8005e48 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8005e76:	f012 fd9b 	bl	80189b0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005e7a:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005f60 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x138>
 8005e7e:	3004      	adds	r0, #4
 8005e80:	f012 fdfc 	bl	8018a7c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005e84:	f8d9 0000 	ldr.w	r0, [r9]
 8005e88:	b110      	cbz	r0, 8005e90 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8005e8a:	6803      	ldr	r3, [r0, #0]
 8005e8c:	68db      	ldr	r3, [r3, #12]
 8005e8e:	4798      	blx	r3
    if (*currentTrans)
 8005e90:	f8d9 0000 	ldr.w	r0, [r9]
 8005e94:	b110      	cbz	r0, 8005e9c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8005e96:	6803      	ldr	r3, [r0, #0]
 8005e98:	681b      	ldr	r3, [r3, #0]
 8005e9a:	4798      	blx	r3
    if (*currentScreen)
 8005e9c:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8005f64 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x13c>
 8005ea0:	f8d8 0000 	ldr.w	r0, [r8]
 8005ea4:	b110      	cbz	r0, 8005eac <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8005ea6:	6803      	ldr	r3, [r0, #0]
 8005ea8:	695b      	ldr	r3, [r3, #20]
 8005eaa:	4798      	blx	r3
    if (*currentPresenter)
 8005eac:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005eb0:	b110      	cbz	r0, 8005eb8 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8005eb2:	6803      	ldr	r3, [r0, #0]
 8005eb4:	685b      	ldr	r3, [r3, #4]
 8005eb6:	4798      	blx	r3
    if (*currentScreen)
 8005eb8:	f8d8 0000 	ldr.w	r0, [r8]
 8005ebc:	b110      	cbz	r0, 8005ec4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8005ebe:	6803      	ldr	r3, [r0, #0]
 8005ec0:	681b      	ldr	r3, [r3, #0]
 8005ec2:	4798      	blx	r3
    if (*currentPresenter)
 8005ec4:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005ec8:	b110      	cbz	r0, 8005ed0 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8005eca:	6803      	ldr	r3, [r0, #0]
 8005ecc:	689b      	ldr	r3, [r3, #8]
 8005ece:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005ed0:	68e0      	ldr	r0, [r4, #12]
 8005ed2:	2100      	movs	r1, #0
 8005ed4:	f7ff fe36 	bl	8005b44 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005ed8:	2114      	movs	r1, #20
 8005eda:	4605      	mov	r5, r0
 8005edc:	f7ff fe36 	bl	8005b4c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005ee0:	68a0      	ldr	r0, [r4, #8]
 8005ee2:	6803      	ldr	r3, [r0, #0]
 8005ee4:	2100      	movs	r1, #0
 8005ee6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005ee8:	4798      	blx	r3
 8005eea:	4606      	mov	r6, r0
 8005eec:	f004 fec0 	bl	800ac70 <_ZN34Measurement_Accurate_Display_2ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005ef0:	6860      	ldr	r0, [r4, #4]
 8005ef2:	6803      	ldr	r3, [r0, #0]
 8005ef4:	2100      	movs	r1, #0
 8005ef6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005ef8:	4798      	blx	r3
 8005efa:	4631      	mov	r1, r6
 8005efc:	4604      	mov	r4, r0
 8005efe:	f004 fe91 	bl	800ac24 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View>
    *currentTrans = newTransition;
 8005f02:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005f06:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005f0a:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005f0e:	b1dc      	cbz	r4, 8005f48 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x120>
 8005f10:	1d23      	adds	r3, r4, #4
 8005f12:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005f16:	6833      	ldr	r3, [r6, #0]
 8005f18:	f8c4 a008 	str.w	sl, [r4, #8]
 8005f1c:	4630      	mov	r0, r6
 8005f1e:	68db      	ldr	r3, [r3, #12]
 8005f20:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005f22:	4798      	blx	r3
    newPresenter->activate();
 8005f24:	6823      	ldr	r3, [r4, #0]
 8005f26:	4620      	mov	r0, r4
 8005f28:	681b      	ldr	r3, [r3, #0]
 8005f2a:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005f2c:	4629      	mov	r1, r5
 8005f2e:	4630      	mov	r0, r6
 8005f30:	f014 fb6a 	bl	801a608 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005f34:	682b      	ldr	r3, [r5, #0]
 8005f36:	4628      	mov	r0, r5
 8005f38:	691b      	ldr	r3, [r3, #16]
 8005f3a:	4798      	blx	r3
    newTransition->invalidate();
 8005f3c:	682b      	ldr	r3, [r5, #0]
 8005f3e:	4628      	mov	r0, r5
 8005f40:	695b      	ldr	r3, [r3, #20]
}
 8005f42:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005f46:	4718      	bx	r3
    model->bind(newPresenter);
 8005f48:	4623      	mov	r3, r4
 8005f4a:	e7e2      	b.n	8005f12 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0xea>
 8005f4c:	0802f680 	.word	0x0802f680
 8005f50:	0803005f 	.word	0x0803005f
 8005f54:	0802f81c 	.word	0x0802f81c
 8005f58:	0802f863 	.word	0x0802f863
 8005f5c:	0802f906 	.word	0x0802f906
 8005f60:	20013884 	.word	0x20013884
 8005f64:	20013880 	.word	0x20013880

08005f68 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv>:
{
 8005f68:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Accurate_DisplayView, Measurement_Accurate_DisplayPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005f6c:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005f70:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005f72:	68a0      	ldr	r0, [r4, #8]
 8005f74:	6803      	ldr	r3, [r0, #0]
 8005f76:	6a1b      	ldr	r3, [r3, #32]
 8005f78:	4798      	blx	r3
 8005f7a:	f241 4377 	movw	r3, #5239	; 0x1477
 8005f7e:	4298      	cmp	r0, r3
 8005f80:	d805      	bhi.n	8005f8e <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x26>
 8005f82:	4b42      	ldr	r3, [pc, #264]	; (800608c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x124>)
 8005f84:	4a42      	ldr	r2, [pc, #264]	; (8006090 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 8005f86:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005f88:	4842      	ldr	r0, [pc, #264]	; (8006094 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x12c>)
 8005f8a:	f027 fce1 	bl	802d950 <__assert_func>
 8005f8e:	6860      	ldr	r0, [r4, #4]
 8005f90:	6803      	ldr	r3, [r0, #0]
 8005f92:	6a1b      	ldr	r3, [r3, #32]
 8005f94:	4798      	blx	r3
 8005f96:	280f      	cmp	r0, #15
 8005f98:	d803      	bhi.n	8005fa2 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x3a>
 8005f9a:	4b3f      	ldr	r3, [pc, #252]	; (8006098 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x130>)
 8005f9c:	4a3c      	ldr	r2, [pc, #240]	; (8006090 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 8005f9e:	21a4      	movs	r1, #164	; 0xa4
 8005fa0:	e7f2      	b.n	8005f88 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005fa2:	68e0      	ldr	r0, [r4, #12]
 8005fa4:	6803      	ldr	r3, [r0, #0]
 8005fa6:	6a1b      	ldr	r3, [r3, #32]
 8005fa8:	4798      	blx	r3
 8005faa:	2837      	cmp	r0, #55	; 0x37
 8005fac:	d803      	bhi.n	8005fb6 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x4e>
 8005fae:	4b3b      	ldr	r3, [pc, #236]	; (800609c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x134>)
 8005fb0:	4a37      	ldr	r2, [pc, #220]	; (8006090 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 8005fb2:	21a5      	movs	r1, #165	; 0xa5
 8005fb4:	e7e8      	b.n	8005f88 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8005fb6:	f012 fcfb 	bl	80189b0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005fba:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80060a0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x138>
 8005fbe:	3004      	adds	r0, #4
 8005fc0:	f012 fd5c 	bl	8018a7c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005fc4:	f8d9 0000 	ldr.w	r0, [r9]
 8005fc8:	b110      	cbz	r0, 8005fd0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8005fca:	6803      	ldr	r3, [r0, #0]
 8005fcc:	68db      	ldr	r3, [r3, #12]
 8005fce:	4798      	blx	r3
    if (*currentTrans)
 8005fd0:	f8d9 0000 	ldr.w	r0, [r9]
 8005fd4:	b110      	cbz	r0, 8005fdc <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8005fd6:	6803      	ldr	r3, [r0, #0]
 8005fd8:	681b      	ldr	r3, [r3, #0]
 8005fda:	4798      	blx	r3
    if (*currentScreen)
 8005fdc:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80060a4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x13c>
 8005fe0:	f8d8 0000 	ldr.w	r0, [r8]
 8005fe4:	b110      	cbz	r0, 8005fec <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8005fe6:	6803      	ldr	r3, [r0, #0]
 8005fe8:	695b      	ldr	r3, [r3, #20]
 8005fea:	4798      	blx	r3
    if (*currentPresenter)
 8005fec:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005ff0:	b110      	cbz	r0, 8005ff8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8005ff2:	6803      	ldr	r3, [r0, #0]
 8005ff4:	685b      	ldr	r3, [r3, #4]
 8005ff6:	4798      	blx	r3
    if (*currentScreen)
 8005ff8:	f8d8 0000 	ldr.w	r0, [r8]
 8005ffc:	b110      	cbz	r0, 8006004 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8005ffe:	6803      	ldr	r3, [r0, #0]
 8006000:	681b      	ldr	r3, [r3, #0]
 8006002:	4798      	blx	r3
    if (*currentPresenter)
 8006004:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8006008:	b110      	cbz	r0, 8006010 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800600a:	6803      	ldr	r3, [r0, #0]
 800600c:	689b      	ldr	r3, [r3, #8]
 800600e:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8006010:	68e0      	ldr	r0, [r4, #12]
 8006012:	2100      	movs	r1, #0
 8006014:	f7ff fd96 	bl	8005b44 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8006018:	2114      	movs	r1, #20
 800601a:	4605      	mov	r5, r0
 800601c:	f7ff fd96 	bl	8005b4c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8006020:	68a0      	ldr	r0, [r4, #8]
 8006022:	6803      	ldr	r3, [r0, #0]
 8006024:	2100      	movs	r1, #0
 8006026:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006028:	4798      	blx	r3
 800602a:	4606      	mov	r6, r0
 800602c:	f004 fdde 	bl	800abec <_ZN32Measurement_Accurate_DisplayViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8006030:	6860      	ldr	r0, [r4, #4]
 8006032:	6803      	ldr	r3, [r0, #0]
 8006034:	2100      	movs	r1, #0
 8006036:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006038:	4798      	blx	r3
 800603a:	4631      	mov	r1, r6
 800603c:	4604      	mov	r4, r0
 800603e:	f004 fdaf 	bl	800aba0 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView>
    *currentTrans = newTransition;
 8006042:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8006046:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800604a:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800604e:	b1dc      	cbz	r4, 8006088 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x120>
 8006050:	1d23      	adds	r3, r4, #4
 8006052:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8006056:	6833      	ldr	r3, [r6, #0]
 8006058:	f8c4 a008 	str.w	sl, [r4, #8]
 800605c:	4630      	mov	r0, r6
 800605e:	68db      	ldr	r3, [r3, #12]
 8006060:	63f4      	str	r4, [r6, #60]	; 0x3c
 8006062:	4798      	blx	r3
    newPresenter->activate();
 8006064:	6823      	ldr	r3, [r4, #0]
 8006066:	4620      	mov	r0, r4
 8006068:	681b      	ldr	r3, [r3, #0]
 800606a:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800606c:	4629      	mov	r1, r5
 800606e:	4630      	mov	r0, r6
 8006070:	f014 faca 	bl	801a608 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8006074:	682b      	ldr	r3, [r5, #0]
 8006076:	4628      	mov	r0, r5
 8006078:	691b      	ldr	r3, [r3, #16]
 800607a:	4798      	blx	r3
    newTransition->invalidate();
 800607c:	682b      	ldr	r3, [r5, #0]
 800607e:	4628      	mov	r0, r5
 8006080:	695b      	ldr	r3, [r3, #20]
}
 8006082:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006086:	4718      	bx	r3
    model->bind(newPresenter);
 8006088:	4623      	mov	r3, r4
 800608a:	e7e2      	b.n	8006052 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0xea>
 800608c:	0802f680 	.word	0x0802f680
 8006090:	080301a3 	.word	0x080301a3
 8006094:	0802f81c 	.word	0x0802f81c
 8006098:	0802f863 	.word	0x0802f863
 800609c:	0802f906 	.word	0x0802f906
 80060a0:	20013884 	.word	0x20013884
 80060a4:	20013880 	.word	0x20013880

080060a8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv>:
{
 80060a8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_AccurateView, Measurement_AccuratePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80060ac:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80060b0:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80060b2:	68a0      	ldr	r0, [r4, #8]
 80060b4:	6803      	ldr	r3, [r0, #0]
 80060b6:	6a1b      	ldr	r3, [r3, #32]
 80060b8:	4798      	blx	r3
 80060ba:	f241 13c3 	movw	r3, #4547	; 0x11c3
 80060be:	4298      	cmp	r0, r3
 80060c0:	d805      	bhi.n	80060ce <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x26>
 80060c2:	4b42      	ldr	r3, [pc, #264]	; (80061cc <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x124>)
 80060c4:	4a42      	ldr	r2, [pc, #264]	; (80061d0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 80060c6:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80060c8:	4842      	ldr	r0, [pc, #264]	; (80061d4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x12c>)
 80060ca:	f027 fc41 	bl	802d950 <__assert_func>
 80060ce:	6860      	ldr	r0, [r4, #4]
 80060d0:	6803      	ldr	r3, [r0, #0]
 80060d2:	6a1b      	ldr	r3, [r3, #32]
 80060d4:	4798      	blx	r3
 80060d6:	280f      	cmp	r0, #15
 80060d8:	d803      	bhi.n	80060e2 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x3a>
 80060da:	4b3f      	ldr	r3, [pc, #252]	; (80061d8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x130>)
 80060dc:	4a3c      	ldr	r2, [pc, #240]	; (80061d0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 80060de:	21a4      	movs	r1, #164	; 0xa4
 80060e0:	e7f2      	b.n	80060c8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80060e2:	68e0      	ldr	r0, [r4, #12]
 80060e4:	6803      	ldr	r3, [r0, #0]
 80060e6:	6a1b      	ldr	r3, [r3, #32]
 80060e8:	4798      	blx	r3
 80060ea:	2837      	cmp	r0, #55	; 0x37
 80060ec:	d803      	bhi.n	80060f6 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x4e>
 80060ee:	4b3b      	ldr	r3, [pc, #236]	; (80061dc <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x134>)
 80060f0:	4a37      	ldr	r2, [pc, #220]	; (80061d0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 80060f2:	21a5      	movs	r1, #165	; 0xa5
 80060f4:	e7e8      	b.n	80060c8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80060f6:	f012 fc5b 	bl	80189b0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80060fa:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80061e0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x138>
 80060fe:	3004      	adds	r0, #4
 8006100:	f012 fcbc 	bl	8018a7c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8006104:	f8d9 0000 	ldr.w	r0, [r9]
 8006108:	b110      	cbz	r0, 8006110 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 800610a:	6803      	ldr	r3, [r0, #0]
 800610c:	68db      	ldr	r3, [r3, #12]
 800610e:	4798      	blx	r3
    if (*currentTrans)
 8006110:	f8d9 0000 	ldr.w	r0, [r9]
 8006114:	b110      	cbz	r0, 800611c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8006116:	6803      	ldr	r3, [r0, #0]
 8006118:	681b      	ldr	r3, [r3, #0]
 800611a:	4798      	blx	r3
    if (*currentScreen)
 800611c:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80061e4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x13c>
 8006120:	f8d8 0000 	ldr.w	r0, [r8]
 8006124:	b110      	cbz	r0, 800612c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8006126:	6803      	ldr	r3, [r0, #0]
 8006128:	695b      	ldr	r3, [r3, #20]
 800612a:	4798      	blx	r3
    if (*currentPresenter)
 800612c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8006130:	b110      	cbz	r0, 8006138 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8006132:	6803      	ldr	r3, [r0, #0]
 8006134:	685b      	ldr	r3, [r3, #4]
 8006136:	4798      	blx	r3
    if (*currentScreen)
 8006138:	f8d8 0000 	ldr.w	r0, [r8]
 800613c:	b110      	cbz	r0, 8006144 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 800613e:	6803      	ldr	r3, [r0, #0]
 8006140:	681b      	ldr	r3, [r3, #0]
 8006142:	4798      	blx	r3
    if (*currentPresenter)
 8006144:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8006148:	b110      	cbz	r0, 8006150 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800614a:	6803      	ldr	r3, [r0, #0]
 800614c:	689b      	ldr	r3, [r3, #8]
 800614e:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8006150:	68e0      	ldr	r0, [r4, #12]
 8006152:	2100      	movs	r1, #0
 8006154:	f7ff fcf6 	bl	8005b44 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8006158:	2114      	movs	r1, #20
 800615a:	4605      	mov	r5, r0
 800615c:	f7ff fcf6 	bl	8005b4c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8006160:	68a0      	ldr	r0, [r4, #8]
 8006162:	6803      	ldr	r3, [r0, #0]
 8006164:	2100      	movs	r1, #0
 8006166:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006168:	4798      	blx	r3
 800616a:	4606      	mov	r6, r0
 800616c:	f004 fce4 	bl	800ab38 <_ZN24Measurement_AccurateViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8006170:	6860      	ldr	r0, [r4, #4]
 8006172:	6803      	ldr	r3, [r0, #0]
 8006174:	2100      	movs	r1, #0
 8006176:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006178:	4798      	blx	r3
 800617a:	4631      	mov	r1, r6
 800617c:	4604      	mov	r4, r0
 800617e:	f004 fcb5 	bl	800aaec <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>
    *currentTrans = newTransition;
 8006182:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8006186:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800618a:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800618e:	b1dc      	cbz	r4, 80061c8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x120>
 8006190:	1d23      	adds	r3, r4, #4
 8006192:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8006196:	6833      	ldr	r3, [r6, #0]
 8006198:	f8c4 a008 	str.w	sl, [r4, #8]
 800619c:	4630      	mov	r0, r6
 800619e:	68db      	ldr	r3, [r3, #12]
 80061a0:	63f4      	str	r4, [r6, #60]	; 0x3c
 80061a2:	4798      	blx	r3
    newPresenter->activate();
 80061a4:	6823      	ldr	r3, [r4, #0]
 80061a6:	4620      	mov	r0, r4
 80061a8:	681b      	ldr	r3, [r3, #0]
 80061aa:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80061ac:	4629      	mov	r1, r5
 80061ae:	4630      	mov	r0, r6
 80061b0:	f014 fa2a 	bl	801a608 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80061b4:	682b      	ldr	r3, [r5, #0]
 80061b6:	4628      	mov	r0, r5
 80061b8:	691b      	ldr	r3, [r3, #16]
 80061ba:	4798      	blx	r3
    newTransition->invalidate();
 80061bc:	682b      	ldr	r3, [r5, #0]
 80061be:	4628      	mov	r0, r5
 80061c0:	695b      	ldr	r3, [r3, #20]
}
 80061c2:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80061c6:	4718      	bx	r3
    model->bind(newPresenter);
 80061c8:	4623      	mov	r3, r4
 80061ca:	e7e2      	b.n	8006192 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0xea>
 80061cc:	0802f680 	.word	0x0802f680
 80061d0:	080302e3 	.word	0x080302e3
 80061d4:	0802f81c 	.word	0x0802f81c
 80061d8:	0802f863 	.word	0x0802f863
 80061dc:	0802f906 	.word	0x0802f906
 80061e0:	20013884 	.word	0x20013884
 80061e4:	20013880 	.word	0x20013880

080061e8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv>:
{
 80061e8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Single_Display_3PView, Measurement_Single_Display_3PPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80061ec:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80061f0:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80061f2:	68a0      	ldr	r0, [r4, #8]
 80061f4:	6803      	ldr	r3, [r0, #0]
 80061f6:	6a1b      	ldr	r3, [r3, #32]
 80061f8:	4798      	blx	r3
 80061fa:	f241 4377 	movw	r3, #5239	; 0x1477
 80061fe:	4298      	cmp	r0, r3
 8006200:	d805      	bhi.n	800620e <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x26>
 8006202:	4b42      	ldr	r3, [pc, #264]	; (800630c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x124>)
 8006204:	4a42      	ldr	r2, [pc, #264]	; (8006310 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 8006206:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8006208:	4842      	ldr	r0, [pc, #264]	; (8006314 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x12c>)
 800620a:	f027 fba1 	bl	802d950 <__assert_func>
 800620e:	6860      	ldr	r0, [r4, #4]
 8006210:	6803      	ldr	r3, [r0, #0]
 8006212:	6a1b      	ldr	r3, [r3, #32]
 8006214:	4798      	blx	r3
 8006216:	280f      	cmp	r0, #15
 8006218:	d803      	bhi.n	8006222 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x3a>
 800621a:	4b3f      	ldr	r3, [pc, #252]	; (8006318 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x130>)
 800621c:	4a3c      	ldr	r2, [pc, #240]	; (8006310 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 800621e:	21a4      	movs	r1, #164	; 0xa4
 8006220:	e7f2      	b.n	8006208 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8006222:	68e0      	ldr	r0, [r4, #12]
 8006224:	6803      	ldr	r3, [r0, #0]
 8006226:	6a1b      	ldr	r3, [r3, #32]
 8006228:	4798      	blx	r3
 800622a:	2837      	cmp	r0, #55	; 0x37
 800622c:	d803      	bhi.n	8006236 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x4e>
 800622e:	4b3b      	ldr	r3, [pc, #236]	; (800631c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x134>)
 8006230:	4a37      	ldr	r2, [pc, #220]	; (8006310 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 8006232:	21a5      	movs	r1, #165	; 0xa5
 8006234:	e7e8      	b.n	8006208 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8006236:	f012 fbbb 	bl	80189b0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800623a:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8006320 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x138>
 800623e:	3004      	adds	r0, #4
 8006240:	f012 fc1c 	bl	8018a7c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8006244:	f8d9 0000 	ldr.w	r0, [r9]
 8006248:	b110      	cbz	r0, 8006250 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 800624a:	6803      	ldr	r3, [r0, #0]
 800624c:	68db      	ldr	r3, [r3, #12]
 800624e:	4798      	blx	r3
    if (*currentTrans)
 8006250:	f8d9 0000 	ldr.w	r0, [r9]
 8006254:	b110      	cbz	r0, 800625c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8006256:	6803      	ldr	r3, [r0, #0]
 8006258:	681b      	ldr	r3, [r3, #0]
 800625a:	4798      	blx	r3
    if (*currentScreen)
 800625c:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8006324 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x13c>
 8006260:	f8d8 0000 	ldr.w	r0, [r8]
 8006264:	b110      	cbz	r0, 800626c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8006266:	6803      	ldr	r3, [r0, #0]
 8006268:	695b      	ldr	r3, [r3, #20]
 800626a:	4798      	blx	r3
    if (*currentPresenter)
 800626c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8006270:	b110      	cbz	r0, 8006278 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8006272:	6803      	ldr	r3, [r0, #0]
 8006274:	685b      	ldr	r3, [r3, #4]
 8006276:	4798      	blx	r3
    if (*currentScreen)
 8006278:	f8d8 0000 	ldr.w	r0, [r8]
 800627c:	b110      	cbz	r0, 8006284 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 800627e:	6803      	ldr	r3, [r0, #0]
 8006280:	681b      	ldr	r3, [r3, #0]
 8006282:	4798      	blx	r3
    if (*currentPresenter)
 8006284:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8006288:	b110      	cbz	r0, 8006290 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800628a:	6803      	ldr	r3, [r0, #0]
 800628c:	689b      	ldr	r3, [r3, #8]
 800628e:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8006290:	68e0      	ldr	r0, [r4, #12]
 8006292:	2100      	movs	r1, #0
 8006294:	f7ff fc56 	bl	8005b44 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8006298:	2114      	movs	r1, #20
 800629a:	4605      	mov	r5, r0
 800629c:	f7ff fc56 	bl	8005b4c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80062a0:	68a0      	ldr	r0, [r4, #8]
 80062a2:	6803      	ldr	r3, [r0, #0]
 80062a4:	2100      	movs	r1, #0
 80062a6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80062a8:	4798      	blx	r3
 80062aa:	4606      	mov	r6, r0
 80062ac:	f004 fe0a 	bl	800aec4 <_ZN33Measurement_Single_Display_3PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80062b0:	6860      	ldr	r0, [r4, #4]
 80062b2:	6803      	ldr	r3, [r0, #0]
 80062b4:	2100      	movs	r1, #0
 80062b6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80062b8:	4798      	blx	r3
 80062ba:	4631      	mov	r1, r6
 80062bc:	4604      	mov	r4, r0
 80062be:	f004 fddb 	bl	800ae78 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView>
    *currentTrans = newTransition;
 80062c2:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80062c6:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80062ca:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80062ce:	b1dc      	cbz	r4, 8006308 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x120>
 80062d0:	1d23      	adds	r3, r4, #4
 80062d2:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80062d6:	6833      	ldr	r3, [r6, #0]
 80062d8:	f8c4 a008 	str.w	sl, [r4, #8]
 80062dc:	4630      	mov	r0, r6
 80062de:	68db      	ldr	r3, [r3, #12]
 80062e0:	63f4      	str	r4, [r6, #60]	; 0x3c
 80062e2:	4798      	blx	r3
    newPresenter->activate();
 80062e4:	6823      	ldr	r3, [r4, #0]
 80062e6:	4620      	mov	r0, r4
 80062e8:	681b      	ldr	r3, [r3, #0]
 80062ea:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80062ec:	4629      	mov	r1, r5
 80062ee:	4630      	mov	r0, r6
 80062f0:	f014 f98a 	bl	801a608 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80062f4:	682b      	ldr	r3, [r5, #0]
 80062f6:	4628      	mov	r0, r5
 80062f8:	691b      	ldr	r3, [r3, #16]
 80062fa:	4798      	blx	r3
    newTransition->invalidate();
 80062fc:	682b      	ldr	r3, [r5, #0]
 80062fe:	4628      	mov	r0, r5
 8006300:	695b      	ldr	r3, [r3, #20]
}
 8006302:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006306:	4718      	bx	r3
    model->bind(newPresenter);
 8006308:	4623      	mov	r3, r4
 800630a:	e7e2      	b.n	80062d2 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0xea>
 800630c:	0802f680 	.word	0x0802f680
 8006310:	08030413 	.word	0x08030413
 8006314:	0802f81c 	.word	0x0802f81c
 8006318:	0802f863 	.word	0x0802f863
 800631c:	0802f906 	.word	0x0802f906
 8006320:	20013884 	.word	0x20013884
 8006324:	20013880 	.word	0x20013880

08006328 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv>:
{
 8006328:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Single_Display_1PView, Measurement_Single_Display_1PPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800632c:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8006330:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8006332:	68a0      	ldr	r0, [r4, #8]
 8006334:	6803      	ldr	r3, [r0, #0]
 8006336:	6a1b      	ldr	r3, [r3, #32]
 8006338:	4798      	blx	r3
 800633a:	f241 437b 	movw	r3, #5243	; 0x147b
 800633e:	4298      	cmp	r0, r3
 8006340:	d805      	bhi.n	800634e <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x26>
 8006342:	4b42      	ldr	r3, [pc, #264]	; (800644c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x124>)
 8006344:	4a42      	ldr	r2, [pc, #264]	; (8006450 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 8006346:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8006348:	4842      	ldr	r0, [pc, #264]	; (8006454 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x12c>)
 800634a:	f027 fb01 	bl	802d950 <__assert_func>
 800634e:	6860      	ldr	r0, [r4, #4]
 8006350:	6803      	ldr	r3, [r0, #0]
 8006352:	6a1b      	ldr	r3, [r3, #32]
 8006354:	4798      	blx	r3
 8006356:	280f      	cmp	r0, #15
 8006358:	d803      	bhi.n	8006362 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x3a>
 800635a:	4b3f      	ldr	r3, [pc, #252]	; (8006458 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x130>)
 800635c:	4a3c      	ldr	r2, [pc, #240]	; (8006450 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 800635e:	21a4      	movs	r1, #164	; 0xa4
 8006360:	e7f2      	b.n	8006348 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8006362:	68e0      	ldr	r0, [r4, #12]
 8006364:	6803      	ldr	r3, [r0, #0]
 8006366:	6a1b      	ldr	r3, [r3, #32]
 8006368:	4798      	blx	r3
 800636a:	2837      	cmp	r0, #55	; 0x37
 800636c:	d803      	bhi.n	8006376 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x4e>
 800636e:	4b3b      	ldr	r3, [pc, #236]	; (800645c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x134>)
 8006370:	4a37      	ldr	r2, [pc, #220]	; (8006450 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 8006372:	21a5      	movs	r1, #165	; 0xa5
 8006374:	e7e8      	b.n	8006348 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8006376:	f012 fb1b 	bl	80189b0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800637a:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8006460 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x138>
 800637e:	3004      	adds	r0, #4
 8006380:	f012 fb7c 	bl	8018a7c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8006384:	f8d9 0000 	ldr.w	r0, [r9]
 8006388:	b110      	cbz	r0, 8006390 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 800638a:	6803      	ldr	r3, [r0, #0]
 800638c:	68db      	ldr	r3, [r3, #12]
 800638e:	4798      	blx	r3
    if (*currentTrans)
 8006390:	f8d9 0000 	ldr.w	r0, [r9]
 8006394:	b110      	cbz	r0, 800639c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8006396:	6803      	ldr	r3, [r0, #0]
 8006398:	681b      	ldr	r3, [r3, #0]
 800639a:	4798      	blx	r3
    if (*currentScreen)
 800639c:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8006464 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x13c>
 80063a0:	f8d8 0000 	ldr.w	r0, [r8]
 80063a4:	b110      	cbz	r0, 80063ac <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80063a6:	6803      	ldr	r3, [r0, #0]
 80063a8:	695b      	ldr	r3, [r3, #20]
 80063aa:	4798      	blx	r3
    if (*currentPresenter)
 80063ac:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80063b0:	b110      	cbz	r0, 80063b8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 80063b2:	6803      	ldr	r3, [r0, #0]
 80063b4:	685b      	ldr	r3, [r3, #4]
 80063b6:	4798      	blx	r3
    if (*currentScreen)
 80063b8:	f8d8 0000 	ldr.w	r0, [r8]
 80063bc:	b110      	cbz	r0, 80063c4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 80063be:	6803      	ldr	r3, [r0, #0]
 80063c0:	681b      	ldr	r3, [r3, #0]
 80063c2:	4798      	blx	r3
    if (*currentPresenter)
 80063c4:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80063c8:	b110      	cbz	r0, 80063d0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80063ca:	6803      	ldr	r3, [r0, #0]
 80063cc:	689b      	ldr	r3, [r3, #8]
 80063ce:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80063d0:	68e0      	ldr	r0, [r4, #12]
 80063d2:	2100      	movs	r1, #0
 80063d4:	f7ff fbb6 	bl	8005b44 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80063d8:	2114      	movs	r1, #20
 80063da:	4605      	mov	r5, r0
 80063dc:	f7ff fbb6 	bl	8005b4c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80063e0:	68a0      	ldr	r0, [r4, #8]
 80063e2:	6803      	ldr	r3, [r0, #0]
 80063e4:	2100      	movs	r1, #0
 80063e6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80063e8:	4798      	blx	r3
 80063ea:	4606      	mov	r6, r0
 80063ec:	f004 fce2 	bl	800adb4 <_ZN33Measurement_Single_Display_1PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80063f0:	6860      	ldr	r0, [r4, #4]
 80063f2:	6803      	ldr	r3, [r0, #0]
 80063f4:	2100      	movs	r1, #0
 80063f6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80063f8:	4798      	blx	r3
 80063fa:	4631      	mov	r1, r6
 80063fc:	4604      	mov	r4, r0
 80063fe:	f004 fcb3 	bl	800ad68 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>
    *currentTrans = newTransition;
 8006402:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8006406:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800640a:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800640e:	b1dc      	cbz	r4, 8006448 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x120>
 8006410:	1d23      	adds	r3, r4, #4
 8006412:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8006416:	6833      	ldr	r3, [r6, #0]
 8006418:	f8c4 a008 	str.w	sl, [r4, #8]
 800641c:	4630      	mov	r0, r6
 800641e:	68db      	ldr	r3, [r3, #12]
 8006420:	63f4      	str	r4, [r6, #60]	; 0x3c
 8006422:	4798      	blx	r3
    newPresenter->activate();
 8006424:	6823      	ldr	r3, [r4, #0]
 8006426:	4620      	mov	r0, r4
 8006428:	681b      	ldr	r3, [r3, #0]
 800642a:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800642c:	4629      	mov	r1, r5
 800642e:	4630      	mov	r0, r6
 8006430:	f014 f8ea 	bl	801a608 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8006434:	682b      	ldr	r3, [r5, #0]
 8006436:	4628      	mov	r0, r5
 8006438:	691b      	ldr	r3, [r3, #16]
 800643a:	4798      	blx	r3
    newTransition->invalidate();
 800643c:	682b      	ldr	r3, [r5, #0]
 800643e:	4628      	mov	r0, r5
 8006440:	695b      	ldr	r3, [r3, #20]
}
 8006442:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006446:	4718      	bx	r3
    model->bind(newPresenter);
 8006448:	4623      	mov	r3, r4
 800644a:	e7e2      	b.n	8006412 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0xea>
 800644c:	0802f680 	.word	0x0802f680
 8006450:	08030555 	.word	0x08030555
 8006454:	0802f81c 	.word	0x0802f81c
 8006458:	0802f863 	.word	0x0802f863
 800645c:	0802f906 	.word	0x0802f906
 8006460:	20013884 	.word	0x20013884
 8006464:	20013880 	.word	0x20013880

08006468 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv>:
{
 8006468:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_SingleView, Measurement_SinglePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800646c:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8006470:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8006472:	68a0      	ldr	r0, [r4, #8]
 8006474:	6803      	ldr	r3, [r0, #0]
 8006476:	6a1b      	ldr	r3, [r3, #32]
 8006478:	4798      	blx	r3
 800647a:	f241 13c3 	movw	r3, #4547	; 0x11c3
 800647e:	4298      	cmp	r0, r3
 8006480:	d805      	bhi.n	800648e <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x26>
 8006482:	4b42      	ldr	r3, [pc, #264]	; (800658c <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x124>)
 8006484:	4a42      	ldr	r2, [pc, #264]	; (8006590 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 8006486:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8006488:	4842      	ldr	r0, [pc, #264]	; (8006594 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x12c>)
 800648a:	f027 fa61 	bl	802d950 <__assert_func>
 800648e:	6860      	ldr	r0, [r4, #4]
 8006490:	6803      	ldr	r3, [r0, #0]
 8006492:	6a1b      	ldr	r3, [r3, #32]
 8006494:	4798      	blx	r3
 8006496:	280f      	cmp	r0, #15
 8006498:	d803      	bhi.n	80064a2 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x3a>
 800649a:	4b3f      	ldr	r3, [pc, #252]	; (8006598 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x130>)
 800649c:	4a3c      	ldr	r2, [pc, #240]	; (8006590 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 800649e:	21a4      	movs	r1, #164	; 0xa4
 80064a0:	e7f2      	b.n	8006488 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80064a2:	68e0      	ldr	r0, [r4, #12]
 80064a4:	6803      	ldr	r3, [r0, #0]
 80064a6:	6a1b      	ldr	r3, [r3, #32]
 80064a8:	4798      	blx	r3
 80064aa:	2837      	cmp	r0, #55	; 0x37
 80064ac:	d803      	bhi.n	80064b6 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x4e>
 80064ae:	4b3b      	ldr	r3, [pc, #236]	; (800659c <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x134>)
 80064b0:	4a37      	ldr	r2, [pc, #220]	; (8006590 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 80064b2:	21a5      	movs	r1, #165	; 0xa5
 80064b4:	e7e8      	b.n	8006488 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80064b6:	f012 fa7b 	bl	80189b0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80064ba:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80065a0 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x138>
 80064be:	3004      	adds	r0, #4
 80064c0:	f012 fadc 	bl	8018a7c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80064c4:	f8d9 0000 	ldr.w	r0, [r9]
 80064c8:	b110      	cbz	r0, 80064d0 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80064ca:	6803      	ldr	r3, [r0, #0]
 80064cc:	68db      	ldr	r3, [r3, #12]
 80064ce:	4798      	blx	r3
    if (*currentTrans)
 80064d0:	f8d9 0000 	ldr.w	r0, [r9]
 80064d4:	b110      	cbz	r0, 80064dc <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80064d6:	6803      	ldr	r3, [r0, #0]
 80064d8:	681b      	ldr	r3, [r3, #0]
 80064da:	4798      	blx	r3
    if (*currentScreen)
 80064dc:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80065a4 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x13c>
 80064e0:	f8d8 0000 	ldr.w	r0, [r8]
 80064e4:	b110      	cbz	r0, 80064ec <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80064e6:	6803      	ldr	r3, [r0, #0]
 80064e8:	695b      	ldr	r3, [r3, #20]
 80064ea:	4798      	blx	r3
    if (*currentPresenter)
 80064ec:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80064f0:	b110      	cbz	r0, 80064f8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 80064f2:	6803      	ldr	r3, [r0, #0]
 80064f4:	685b      	ldr	r3, [r3, #4]
 80064f6:	4798      	blx	r3
    if (*currentScreen)
 80064f8:	f8d8 0000 	ldr.w	r0, [r8]
 80064fc:	b110      	cbz	r0, 8006504 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 80064fe:	6803      	ldr	r3, [r0, #0]
 8006500:	681b      	ldr	r3, [r3, #0]
 8006502:	4798      	blx	r3
    if (*currentPresenter)
 8006504:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8006508:	b110      	cbz	r0, 8006510 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800650a:	6803      	ldr	r3, [r0, #0]
 800650c:	689b      	ldr	r3, [r3, #8]
 800650e:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8006510:	68e0      	ldr	r0, [r4, #12]
 8006512:	2100      	movs	r1, #0
 8006514:	f7ff fb16 	bl	8005b44 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8006518:	2114      	movs	r1, #20
 800651a:	4605      	mov	r5, r0
 800651c:	f7ff fb16 	bl	8005b4c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8006520:	68a0      	ldr	r0, [r4, #8]
 8006522:	6803      	ldr	r3, [r0, #0]
 8006524:	2100      	movs	r1, #0
 8006526:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006528:	4798      	blx	r3
 800652a:	4606      	mov	r6, r0
 800652c:	f004 fbe8 	bl	800ad00 <_ZN22Measurement_SingleViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8006530:	6860      	ldr	r0, [r4, #4]
 8006532:	6803      	ldr	r3, [r0, #0]
 8006534:	2100      	movs	r1, #0
 8006536:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006538:	4798      	blx	r3
 800653a:	4631      	mov	r1, r6
 800653c:	4604      	mov	r4, r0
 800653e:	f004 fbb9 	bl	800acb4 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView>
    *currentTrans = newTransition;
 8006542:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8006546:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800654a:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800654e:	b1dc      	cbz	r4, 8006588 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x120>
 8006550:	1d23      	adds	r3, r4, #4
 8006552:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8006556:	6833      	ldr	r3, [r6, #0]
 8006558:	f8c4 a008 	str.w	sl, [r4, #8]
 800655c:	4630      	mov	r0, r6
 800655e:	68db      	ldr	r3, [r3, #12]
 8006560:	63f4      	str	r4, [r6, #60]	; 0x3c
 8006562:	4798      	blx	r3
    newPresenter->activate();
 8006564:	6823      	ldr	r3, [r4, #0]
 8006566:	4620      	mov	r0, r4
 8006568:	681b      	ldr	r3, [r3, #0]
 800656a:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800656c:	4629      	mov	r1, r5
 800656e:	4630      	mov	r0, r6
 8006570:	f014 f84a 	bl	801a608 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8006574:	682b      	ldr	r3, [r5, #0]
 8006576:	4628      	mov	r0, r5
 8006578:	691b      	ldr	r3, [r3, #16]
 800657a:	4798      	blx	r3
    newTransition->invalidate();
 800657c:	682b      	ldr	r3, [r5, #0]
 800657e:	4628      	mov	r0, r5
 8006580:	695b      	ldr	r3, [r3, #20]
}
 8006582:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006586:	4718      	bx	r3
    model->bind(newPresenter);
 8006588:	4623      	mov	r3, r4
 800658a:	e7e2      	b.n	8006552 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0xea>
 800658c:	0802f680 	.word	0x0802f680
 8006590:	08030697 	.word	0x08030697
 8006594:	0802f81c 	.word	0x0802f81c
 8006598:	0802f863 	.word	0x0802f863
 800659c:	0802f906 	.word	0x0802f906
 80065a0:	20013884 	.word	0x20013884
 80065a4:	20013880 	.word	0x20013880

080065a8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv>:
{
 80065a8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MeasurementView, MeasurementPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80065ac:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80065b0:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80065b2:	68a0      	ldr	r0, [r4, #8]
 80065b4:	6803      	ldr	r3, [r0, #0]
 80065b6:	6a1b      	ldr	r3, [r3, #32]
 80065b8:	4798      	blx	r3
 80065ba:	f241 13c3 	movw	r3, #4547	; 0x11c3
 80065be:	4298      	cmp	r0, r3
 80065c0:	d805      	bhi.n	80065ce <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x26>
 80065c2:	4b42      	ldr	r3, [pc, #264]	; (80066cc <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x124>)
 80065c4:	4a42      	ldr	r2, [pc, #264]	; (80066d0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 80065c6:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80065c8:	4842      	ldr	r0, [pc, #264]	; (80066d4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x12c>)
 80065ca:	f027 f9c1 	bl	802d950 <__assert_func>
 80065ce:	6860      	ldr	r0, [r4, #4]
 80065d0:	6803      	ldr	r3, [r0, #0]
 80065d2:	6a1b      	ldr	r3, [r3, #32]
 80065d4:	4798      	blx	r3
 80065d6:	280f      	cmp	r0, #15
 80065d8:	d803      	bhi.n	80065e2 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x3a>
 80065da:	4b3f      	ldr	r3, [pc, #252]	; (80066d8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x130>)
 80065dc:	4a3c      	ldr	r2, [pc, #240]	; (80066d0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 80065de:	21a4      	movs	r1, #164	; 0xa4
 80065e0:	e7f2      	b.n	80065c8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80065e2:	68e0      	ldr	r0, [r4, #12]
 80065e4:	6803      	ldr	r3, [r0, #0]
 80065e6:	6a1b      	ldr	r3, [r3, #32]
 80065e8:	4798      	blx	r3
 80065ea:	2837      	cmp	r0, #55	; 0x37
 80065ec:	d803      	bhi.n	80065f6 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x4e>
 80065ee:	4b3b      	ldr	r3, [pc, #236]	; (80066dc <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x134>)
 80065f0:	4a37      	ldr	r2, [pc, #220]	; (80066d0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 80065f2:	21a5      	movs	r1, #165	; 0xa5
 80065f4:	e7e8      	b.n	80065c8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80065f6:	f012 f9db 	bl	80189b0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80065fa:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80066e0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x138>
 80065fe:	3004      	adds	r0, #4
 8006600:	f012 fa3c 	bl	8018a7c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8006604:	f8d9 0000 	ldr.w	r0, [r9]
 8006608:	b110      	cbz	r0, 8006610 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 800660a:	6803      	ldr	r3, [r0, #0]
 800660c:	68db      	ldr	r3, [r3, #12]
 800660e:	4798      	blx	r3
    if (*currentTrans)
 8006610:	f8d9 0000 	ldr.w	r0, [r9]
 8006614:	b110      	cbz	r0, 800661c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8006616:	6803      	ldr	r3, [r0, #0]
 8006618:	681b      	ldr	r3, [r3, #0]
 800661a:	4798      	blx	r3
    if (*currentScreen)
 800661c:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80066e4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x13c>
 8006620:	f8d8 0000 	ldr.w	r0, [r8]
 8006624:	b110      	cbz	r0, 800662c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8006626:	6803      	ldr	r3, [r0, #0]
 8006628:	695b      	ldr	r3, [r3, #20]
 800662a:	4798      	blx	r3
    if (*currentPresenter)
 800662c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8006630:	b110      	cbz	r0, 8006638 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8006632:	6803      	ldr	r3, [r0, #0]
 8006634:	685b      	ldr	r3, [r3, #4]
 8006636:	4798      	blx	r3
    if (*currentScreen)
 8006638:	f8d8 0000 	ldr.w	r0, [r8]
 800663c:	b110      	cbz	r0, 8006644 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 800663e:	6803      	ldr	r3, [r0, #0]
 8006640:	681b      	ldr	r3, [r3, #0]
 8006642:	4798      	blx	r3
    if (*currentPresenter)
 8006644:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8006648:	b110      	cbz	r0, 8006650 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800664a:	6803      	ldr	r3, [r0, #0]
 800664c:	689b      	ldr	r3, [r3, #8]
 800664e:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8006650:	68e0      	ldr	r0, [r4, #12]
 8006652:	2100      	movs	r1, #0
 8006654:	f7ff fa76 	bl	8005b44 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8006658:	2114      	movs	r1, #20
 800665a:	4605      	mov	r5, r0
 800665c:	f7ff fa76 	bl	8005b4c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8006660:	68a0      	ldr	r0, [r4, #8]
 8006662:	6803      	ldr	r3, [r0, #0]
 8006664:	2100      	movs	r1, #0
 8006666:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006668:	4798      	blx	r3
 800666a:	4606      	mov	r6, r0
 800666c:	f004 fa04 	bl	800aa78 <_ZN15MeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8006670:	6860      	ldr	r0, [r4, #4]
 8006672:	6803      	ldr	r3, [r0, #0]
 8006674:	2100      	movs	r1, #0
 8006676:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006678:	4798      	blx	r3
 800667a:	4631      	mov	r1, r6
 800667c:	4604      	mov	r4, r0
 800667e:	f004 f9d5 	bl	800aa2c <_ZN20MeasurementPresenterC1ER15MeasurementView>
    *currentTrans = newTransition;
 8006682:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8006686:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800668a:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800668e:	b1dc      	cbz	r4, 80066c8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x120>
 8006690:	1d23      	adds	r3, r4, #4
 8006692:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8006696:	6833      	ldr	r3, [r6, #0]
 8006698:	f8c4 a008 	str.w	sl, [r4, #8]
 800669c:	4630      	mov	r0, r6
 800669e:	68db      	ldr	r3, [r3, #12]
 80066a0:	63f4      	str	r4, [r6, #60]	; 0x3c
 80066a2:	4798      	blx	r3
    newPresenter->activate();
 80066a4:	6823      	ldr	r3, [r4, #0]
 80066a6:	4620      	mov	r0, r4
 80066a8:	681b      	ldr	r3, [r3, #0]
 80066aa:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80066ac:	4629      	mov	r1, r5
 80066ae:	4630      	mov	r0, r6
 80066b0:	f013 ffaa 	bl	801a608 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80066b4:	682b      	ldr	r3, [r5, #0]
 80066b6:	4628      	mov	r0, r5
 80066b8:	691b      	ldr	r3, [r3, #16]
 80066ba:	4798      	blx	r3
    newTransition->invalidate();
 80066bc:	682b      	ldr	r3, [r5, #0]
 80066be:	4628      	mov	r0, r5
 80066c0:	695b      	ldr	r3, [r3, #20]
}
 80066c2:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80066c6:	4718      	bx	r3
    model->bind(newPresenter);
 80066c8:	4623      	mov	r3, r4
 80066ca:	e7e2      	b.n	8006692 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0xea>
 80066cc:	0802f680 	.word	0x0802f680
 80066d0:	080307c3 	.word	0x080307c3
 80066d4:	0802f81c 	.word	0x0802f81c
 80066d8:	0802f863 	.word	0x0802f863
 80066dc:	0802f906 	.word	0x0802f906
 80066e0:	20013884 	.word	0x20013884
 80066e4:	20013880 	.word	0x20013880

080066e8 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 80066e8:	6a40      	ldr	r0, [r0, #36]	; 0x24
 80066ea:	4770      	bx	lr

080066ec <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 80066ec:	6a80      	ldr	r0, [r0, #40]	; 0x28
 80066ee:	4770      	bx	lr

080066f0 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 80066f0:	4770      	bx	lr

080066f2 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 80066f2:	888b      	ldrh	r3, [r1, #4]
 80066f4:	69c0      	ldr	r0, [r0, #28]
 80066f6:	680a      	ldr	r2, [r1, #0]
 80066f8:	0adb      	lsrs	r3, r3, #11
 80066fa:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 80066fe:	4410      	add	r0, r2
 8006700:	4770      	bx	lr

08006702 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8006702:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 8006704:	b1c2      	cbz	r2, 8006738 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 8006706:	7b13      	ldrb	r3, [r2, #12]
 8006708:	b1b3      	cbz	r3, 8006738 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 800670a:	7b54      	ldrb	r4, [r2, #13]
 800670c:	7ad2      	ldrb	r2, [r2, #11]
 800670e:	0224      	lsls	r4, r4, #8
 8006710:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8006714:	4314      	orrs	r4, r2
 8006716:	6a02      	ldr	r2, [r0, #32]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8006718:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 800671a:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 800671e:	8813      	ldrh	r3, [r2, #0]
 8006720:	428b      	cmp	r3, r1
 8006722:	d102      	bne.n	800672a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8006724:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 8006728:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 800672a:	d805      	bhi.n	8006738 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 800672c:	3801      	subs	r0, #1
 800672e:	b280      	uxth	r0, r0
 8006730:	3204      	adds	r2, #4
 8006732:	2800      	cmp	r0, #0
 8006734:	d1f3      	bne.n	800671e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8006736:	e7f7      	b.n	8006728 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8006738:	2000      	movs	r0, #0
 800673a:	e7f5      	b.n	8006728 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

0800673c <_ZN8touchgfx13GeneratedFontD0Ev>:
 800673c:	b510      	push	{r4, lr}
 800673e:	212c      	movs	r1, #44	; 0x2c
 8006740:	4604      	mov	r4, r0
 8006742:	f026 fa1e 	bl	802cb82 <_ZdlPvj>
 8006746:	4620      	mov	r0, r4
 8006748:	bd10      	pop	{r4, pc}
	...

0800674c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 800674c:	b530      	push	{r4, r5, lr}
 800674e:	b08b      	sub	sp, #44	; 0x2c
 8006750:	4604      	mov	r4, r0
      arabicTable(formsTable)
 8006752:	f8bd 5060 	ldrh.w	r5, [sp, #96]	; 0x60
 8006756:	9508      	str	r5, [sp, #32]
 8006758:	f8bd 505c 	ldrh.w	r5, [sp, #92]	; 0x5c
 800675c:	9507      	str	r5, [sp, #28]
 800675e:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8006762:	9506      	str	r5, [sp, #24]
 8006764:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
 8006768:	9505      	str	r5, [sp, #20]
 800676a:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 800676e:	9504      	str	r5, [sp, #16]
 8006770:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8006774:	9503      	str	r5, [sp, #12]
 8006776:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 800677a:	9502      	str	r5, [sp, #8]
 800677c:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 8006780:	9501      	str	r5, [sp, #4]
 8006782:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 8006786:	9500      	str	r5, [sp, #0]
 8006788:	f013 faa8 	bl	8019cdc <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 800678c:	4b06      	ldr	r3, [pc, #24]	; (80067a8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
 800678e:	6023      	str	r3, [r4, #0]
      glyphData(glyphDataInternalFlash),
 8006790:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8006792:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
 8006794:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8006796:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
 8006798:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800679a:	6263      	str	r3, [r4, #36]	; 0x24
      arabicTable(formsTable)
 800679c:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 800679e:	62a3      	str	r3, [r4, #40]	; 0x28
}
 80067a0:	4620      	mov	r0, r4
 80067a2:	b00b      	add	sp, #44	; 0x2c
 80067a4:	bd30      	pop	{r4, r5, pc}
 80067a6:	bf00      	nop
 80067a8:	08030a2c 	.word	0x08030a2c

080067ac <_ZN17Main_MenuViewBase11setupScreenEv>:
}

void Main_MenuViewBase::setupScreen()
{

}
 80067ac:	4770      	bx	lr

080067ae <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80067ae:	4770      	bx	lr

080067b0 <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80067b0:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80067b2:	68c2      	ldr	r2, [r0, #12]
 80067b4:	6844      	ldr	r4, [r0, #4]
 80067b6:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80067b8:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80067ba:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80067be:	07d2      	lsls	r2, r2, #31
 80067c0:	bf48      	it	mi
 80067c2:	5962      	ldrmi	r2, [r4, r5]
 80067c4:	689b      	ldr	r3, [r3, #8]
    }
 80067c6:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80067c8:	bf48      	it	mi
 80067ca:	58d3      	ldrmi	r3, [r2, r3]
 80067cc:	4718      	bx	r3

080067ce <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80067ce:	6843      	ldr	r3, [r0, #4]
 80067d0:	b12b      	cbz	r3, 80067de <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80067d2:	6883      	ldr	r3, [r0, #8]
 80067d4:	b92b      	cbnz	r3, 80067e2 <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80067d6:	68c0      	ldr	r0, [r0, #12]
 80067d8:	f000 0001 	and.w	r0, r0, #1
 80067dc:	4770      	bx	lr
 80067de:	4618      	mov	r0, r3
 80067e0:	4770      	bx	lr
 80067e2:	2001      	movs	r0, #1
    }
 80067e4:	4770      	bx	lr

080067e6 <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80067e6:	b510      	push	{r4, lr}
 80067e8:	2110      	movs	r1, #16
 80067ea:	4604      	mov	r4, r0
 80067ec:	f026 f9c9 	bl	802cb82 <_ZdlPvj>
 80067f0:	4620      	mov	r0, r4
 80067f2:	bd10      	pop	{r4, pc}

080067f4 <_ZN17Main_MenuViewBaseD1Ev>:
Main_MenuViewBase::~Main_MenuViewBase()
 80067f4:	b510      	push	{r4, lr}
 80067f6:	4b03      	ldr	r3, [pc, #12]	; (8006804 <_ZN17Main_MenuViewBaseD1Ev+0x10>)
 80067f8:	6003      	str	r3, [r0, #0]
 80067fa:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80067fc:	f010 fbd6 	bl	8016fac <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006800:	4620      	mov	r0, r4
 8006802:	bd10      	pop	{r4, pc}
 8006804:	08030aa4 	.word	0x08030aa4

08006808 <_ZN17Main_MenuViewBaseD0Ev>:
Main_MenuViewBase::~Main_MenuViewBase()
 8006808:	b507      	push	{r0, r1, r2, lr}
 800680a:	4b07      	ldr	r3, [pc, #28]	; (8006828 <_ZN17Main_MenuViewBaseD0Ev+0x20>)
 800680c:	6003      	str	r3, [r0, #0]
 800680e:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006810:	f010 fbcc 	bl	8016fac <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006814:	9801      	ldr	r0, [sp, #4]
 8006816:	f44f 5190 	mov.w	r1, #4608	; 0x1200
 800681a:	f026 f9b2 	bl	802cb82 <_ZdlPvj>
 800681e:	9801      	ldr	r0, [sp, #4]
 8006820:	b003      	add	sp, #12
 8006822:	f85d fb04 	ldr.w	pc, [sp], #4
 8006826:	bf00      	nop
 8006828:	08030aa4 	.word	0x08030aa4

0800682c <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Main_MenuViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 800682c:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel_Measure)
 800682e:	f500 73ba 	add.w	r3, r0, #372	; 0x174
 8006832:	4299      	cmp	r1, r3
{
 8006834:	4604      	mov	r4, r0
 8006836:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel_Measure)
 8006838:	d103      	bne.n	8006842 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Main_MenuViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800683a:	f012 f8b9 	bl	80189b0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel_Measure clicked change screen to Measurement
        //Go to Measurement with screen transition towards East
        application().gotoMeasurementScreenWipeTransitionEast();
 800683e:	f7fe feaf 	bl	80055a0 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel_Calibration)
 8006842:	f504 7396 	add.w	r3, r4, #300	; 0x12c
 8006846:	429d      	cmp	r5, r3
 8006848:	d103      	bne.n	8006852 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 800684a:	f012 f8b1 	bl	80189b0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel_Calibration clicked change screen to Calibration_Pad
        //Go to Calibration_Pad with screen transition towards East
        application().gotoCalibration_PadScreenWipeTransitionEast();
 800684e:	f7fe ff37 	bl	80056c0 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel_ProjectInfo)
 8006852:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 8006856:	429d      	cmp	r5, r3
 8006858:	d103      	bne.n	8006862 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x36>
 800685a:	f012 f8a9 	bl	80189b0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction3
        //When buttonWithLabel_ProjectInfo clicked change screen to Project_Info
        //Go to Project_Info with screen transition towards East
        application().gotoProject_InfoScreenWipeTransitionEast();
 800685e:	f7fe ff3f 	bl	80056e0 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithIcon_turn_off)
 8006862:	f504 7467 	add.w	r4, r4, #924	; 0x39c
 8006866:	42a5      	cmp	r5, r4
 8006868:	d10a      	bne.n	8006880 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x54>
    {
        //Interaction4
        //When buttonWithIcon_turn_off clicked execute C++ code
        //Execute C++ code
        #ifndef SIMULATOR
        HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 800686a:	4806      	ldr	r0, [pc, #24]	; (8006884 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x58>)
 800686c:	2200      	movs	r2, #0
 800686e:	2120      	movs	r1, #32
 8006870:	f005 fa84 	bl	800bd7c <HAL_GPIO_WritePin>
 8006874:	f012 f89c 	bl	80189b0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction5
        //When buttonWithIcon_turn_off clicked change screen to Shutting_Off
        //Go to Shutting_Off with no screen transition
        application().gotoShutting_OffScreenNoTransition();
    }
}
 8006878:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoShutting_OffScreenNoTransition();
 800687c:	f7fe bf40 	b.w	8005700 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8006880:	bd38      	pop	{r3, r4, r5, pc}
 8006882:	bf00      	nop
 8006884:	40021000 	.word	0x40021000

08006888 <_ZN17Main_MenuViewBaseC1Ev>:
Main_MenuViewBase::Main_MenuViewBase() :
 8006888:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800688c:	ed2d 8b08 	vpush	{d8-d11}
 8006890:	4604      	mov	r4, r0
 8006892:	b091      	sub	sp, #68	; 0x44
    buttonCallback(this, &Main_MenuViewBase::buttonCallbackHandler)
 8006894:	46a2      	mov	sl, r4
        : presenter(0)
 8006896:	2500      	movs	r5, #0
 8006898:	f013 fd0a 	bl	801a2b0 <_ZN8touchgfx6ScreenC1Ev>
 800689c:	4b75      	ldr	r3, [pc, #468]	; (8006a74 <_ZN17Main_MenuViewBaseC1Ev+0x1ec>)
 800689e:	63e5      	str	r5, [r4, #60]	; 0x3c
 80068a0:	f84a 3b40 	str.w	r3, [sl], #64
        : Widget(), alpha(255), color(0)
 80068a4:	2226      	movs	r2, #38	; 0x26
 80068a6:	4629      	mov	r1, r5
 80068a8:	4650      	mov	r0, sl
 80068aa:	f027 fa56 	bl	802dd5a <memset>
 80068ae:	4650      	mov	r0, sl
 80068b0:	f7fc ff12 	bl	80036d8 <_ZN8touchgfx6WidgetC1Ev>
 80068b4:	f104 096c 	add.w	r9, r4, #108	; 0x6c
 80068b8:	26ff      	movs	r6, #255	; 0xff
 80068ba:	4b6f      	ldr	r3, [pc, #444]	; (8006a78 <_ZN17Main_MenuViewBaseC1Ev+0x1f0>)
 80068bc:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 80068be:	2226      	movs	r2, #38	; 0x26
 80068c0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80068c4:	4629      	mov	r1, r5
 80068c6:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80068ca:	4648      	mov	r0, r9
        : color(col)
 80068cc:	66a5      	str	r5, [r4, #104]	; 0x68
 80068ce:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 80068d2:	f027 fa42 	bl	802dd5a <memset>
 80068d6:	4648      	mov	r0, r9
 80068d8:	f7fc fefe 	bl	80036d8 <_ZN8touchgfx6WidgetC1Ev>
 80068dc:	4b67      	ldr	r3, [pc, #412]	; (8006a7c <_ZN17Main_MenuViewBaseC1Ev+0x1f4>)
 80068de:	66e3      	str	r3, [r4, #108]	; 0x6c
 80068e0:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80068e4:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80068e8:	a90e      	add	r1, sp, #56	; 0x38
 80068ea:	4648      	mov	r0, r9
 80068ec:	f104 0898 	add.w	r8, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 80068f0:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80068f4:	f00f fb5d 	bl	8015fb2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 80068f8:	4640      	mov	r0, r8
 80068fa:	f7fc ff51 	bl	80037a0 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 80068fe:	4b60      	ldr	r3, [pc, #384]	; (8006a80 <_ZN17Main_MenuViewBaseC1Ev+0x1f8>)
 8006900:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8006904:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 8006908:	4618      	mov	r0, r3
 800690a:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 800690e:	ee09 3a90 	vmov	s19, r3
 8006912:	f00f fc85 	bl	8016220 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006916:	f504 7396 	add.w	r3, r4, #300	; 0x12c
 800691a:	4618      	mov	r0, r3
 800691c:	ee0a 3a10 	vmov	s20, r3
 8006920:	f00f fc7e 	bl	8016220 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006924:	f504 73ba 	add.w	r3, r4, #372	; 0x174
 8006928:	4618      	mov	r0, r3
 800692a:	f504 77de 	add.w	r7, r4, #444	; 0x1bc
 800692e:	ee0a 3a90 	vmov	s21, r3
 8006932:	f00f fc75 	bl	8016220 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006936:	4638      	mov	r0, r7
 8006938:	f00e f82e 	bl	8014998 <_ZN8touchgfx4LineC1Ev>
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800693c:	4e51      	ldr	r6, [pc, #324]	; (8006a84 <_ZN17Main_MenuViewBaseC1Ev+0x1fc>)
 800693e:	f504 730b 	add.w	r3, r4, #556	; 0x22c
 8006942:	4618      	mov	r0, r3
 8006944:	9304      	str	r3, [sp, #16]
 8006946:	f7fc fccb 	bl	80032e0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800694a:	f106 0324 	add.w	r3, r6, #36	; 0x24
 800694e:	f8c4 3234 	str.w	r3, [r4, #564]	; 0x234
 8006952:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8006956:	4618      	mov	r0, r3
 8006958:	f8c4 622c 	str.w	r6, [r4, #556]	; 0x22c
 800695c:	f8c4 5238 	str.w	r5, [r4, #568]	; 0x238
 8006960:	f504 7b22 	add.w	fp, r4, #648	; 0x288
 8006964:	ee08 3a10 	vmov	s16, r3
 8006968:	f7fc ff1a 	bl	80037a0 <_ZN8touchgfx8TextAreaC1Ev>
 800696c:	4658      	mov	r0, fp
 800696e:	f00e f813 	bl	8014998 <_ZN8touchgfx4LineC1Ev>
 8006972:	f504 733e 	add.w	r3, r4, #760	; 0x2f8
 8006976:	4618      	mov	r0, r3
 8006978:	9305      	str	r3, [sp, #20]
 800697a:	f7fc fcb1 	bl	80032e0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800697e:	f106 0324 	add.w	r3, r6, #36	; 0x24
 8006982:	f8c4 3300 	str.w	r3, [r4, #768]	; 0x300
 8006986:	f504 7343 	add.w	r3, r4, #780	; 0x30c
 800698a:	f8c4 62f8 	str.w	r6, [r4, #760]	; 0x2f8
 800698e:	4618      	mov	r0, r3
 8006990:	f8c4 5304 	str.w	r5, [r4, #772]	; 0x304
 8006994:	ee08 3a90 	vmov	s17, r3
 8006998:	f7fc ff02 	bl	80037a0 <_ZN8touchgfx8TextAreaC1Ev>
 800699c:	f504 7355 	add.w	r3, r4, #852	; 0x354
 80069a0:	4618      	mov	r0, r3
 80069a2:	ee09 3a10 	vmov	s18, r3
 80069a6:	f7fc fefb 	bl	80037a0 <_ZN8touchgfx8TextAreaC1Ev>
 80069aa:	f504 7367 	add.w	r3, r4, #924	; 0x39c
 80069ae:	4618      	mov	r0, r3
 80069b0:	ee0b 3a10 	vmov	s22, r3
 80069b4:	f00f fad6 	bl	8015f64 <_ZN8touchgfx14ButtonWithIconC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80069b8:	4a33      	ldr	r2, [pc, #204]	; (8006a88 <_ZN17Main_MenuViewBaseC1Ev+0x200>)
 80069ba:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80069be:	e9c3 247c 	strd	r2, r4, [r3, #496]	; 0x1f0
 80069c2:	4a32      	ldr	r2, [pc, #200]	; (8006a8c <_ZN17Main_MenuViewBaseC1Ev+0x204>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80069c4:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80069c8:	e9c3 257e 	strd	r2, r5, [r3, #504]	; 0x1f8
 80069cc:	f504 7078 	add.w	r0, r4, #992	; 0x3e0
 80069d0:	f010 fae2 	bl	8016f98 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80069d4:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80069d8:	462a      	mov	r2, r5
 80069da:	4650      	mov	r0, sl
 80069dc:	9300      	str	r3, [sp, #0]
 80069de:	4629      	mov	r1, r5
 80069e0:	23f0      	movs	r3, #240	; 0xf0
 80069e2:	f7fc fe54 	bl	800368e <_ZN8touchgfx8Drawable11setPositionEssss>
 80069e6:	1d26      	adds	r6, r4, #4
        color = newColor;
 80069e8:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80069ec:	66a3      	str	r3, [r4, #104]	; 0x68
 80069ee:	4651      	mov	r1, sl
 80069f0:	4630      	mov	r0, r6
 80069f2:	f00b ff05 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image_background.setXY(0, 0);
 80069f6:	462a      	mov	r2, r5
 80069f8:	4648      	mov	r0, r9
 80069fa:	4629      	mov	r1, r5
 80069fc:	f7fc fe3a 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
 8006a00:	2308      	movs	r3, #8
    image_background.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8006a02:	4648      	mov	r0, r9
 8006a04:	a90e      	add	r1, sp, #56	; 0x38
 8006a06:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8006a0a:	f00f fad2 	bl	8015fb2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006a0e:	4649      	mov	r1, r9
 8006a10:	4630      	mov	r0, r6
 8006a12:	f00b fef5 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_auto_off.setXY(86, 308);
 8006a16:	f44f 729a 	mov.w	r2, #308	; 0x134
 8006a1a:	2156      	movs	r1, #86	; 0x56
 8006a1c:	4640      	mov	r0, r8
 8006a1e:	f7fc fe29 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
 8006a22:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8006a26:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8006a2a:	f10d 0918 	add.w	r9, sp, #24
        color = newColor;
 8006a2e:	f04f 3aff 	mov.w	sl, #4294967295
        boundingArea = calculateBoundingArea();
 8006a32:	4648      	mov	r0, r9
 8006a34:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8006a38:	f8c4 a0c8 	str.w	sl, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8006a3c:	4641      	mov	r1, r8
 8006a3e:	4798      	blx	r3
 8006a40:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 8006a44:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8006a48:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006a4c:	4b10      	ldr	r3, [pc, #64]	; (8006a90 <_ZN17Main_MenuViewBaseC1Ev+0x208>)
 8006a4e:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_UQO1).getText());
 8006a50:	f504 7976 	add.w	r9, r4, #984	; 0x3d8
 8006a54:	b92b      	cbnz	r3, 8006a62 <_ZN17Main_MenuViewBaseC1Ev+0x1da>
 8006a56:	4b0f      	ldr	r3, [pc, #60]	; (8006a94 <_ZN17Main_MenuViewBaseC1Ev+0x20c>)
 8006a58:	4a0f      	ldr	r2, [pc, #60]	; (8006a98 <_ZN17Main_MenuViewBaseC1Ev+0x210>)
 8006a5a:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006a5c:	480f      	ldr	r0, [pc, #60]	; (8006a9c <_ZN17Main_MenuViewBaseC1Ev+0x214>)
 8006a5e:	f026 ff77 	bl	802d950 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8006a62:	4b0f      	ldr	r3, [pc, #60]	; (8006aa0 <_ZN17Main_MenuViewBaseC1Ev+0x218>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006a64:	881b      	ldrh	r3, [r3, #0]
 8006a66:	2b54      	cmp	r3, #84	; 0x54
 8006a68:	d81e      	bhi.n	8006aa8 <_ZN17Main_MenuViewBaseC1Ev+0x220>
 8006a6a:	4b0e      	ldr	r3, [pc, #56]	; (8006aa4 <_ZN17Main_MenuViewBaseC1Ev+0x21c>)
 8006a6c:	4a0a      	ldr	r2, [pc, #40]	; (8006a98 <_ZN17Main_MenuViewBaseC1Ev+0x210>)
 8006a6e:	2161      	movs	r1, #97	; 0x61
 8006a70:	e7f4      	b.n	8006a5c <_ZN17Main_MenuViewBaseC1Ev+0x1d4>
 8006a72:	bf00      	nop
 8006a74:	08030aa4 	.word	0x08030aa4
 8006a78:	08031a58 	.word	0x08031a58
 8006a7c:	08031ca4 	.word	0x08031ca4
 8006a80:	0802f5a4 	.word	0x0802f5a4
 8006a84:	0803178c 	.word	0x0803178c
 8006a88:	08030a8c 	.word	0x08030a8c
 8006a8c:	0800682d 	.word	0x0800682d
 8006a90:	20013894 	.word	0x20013894
 8006a94:	0802f354 	.word	0x0802f354
 8006a98:	0802f459 	.word	0x0802f459
 8006a9c:	0802f3d1 	.word	0x0802f3d1
 8006aa0:	20013898 	.word	0x20013898
 8006aa4:	0802f418 	.word	0x0802f418
        return texts->getText(typedTextId);
 8006aa8:	4bc1      	ldr	r3, [pc, #772]	; (8006db0 <_ZN17Main_MenuViewBaseC1Ev+0x528>)
 8006aaa:	2154      	movs	r1, #84	; 0x54
 8006aac:	6818      	ldr	r0, [r3, #0]
 8006aae:	f003 fdf3 	bl	800a698 <_ZNK8touchgfx5Texts7getTextEt>
 8006ab2:	4ac0      	ldr	r2, [pc, #768]	; (8006db4 <_ZN17Main_MenuViewBaseC1Ev+0x52c>)
 8006ab4:	4603      	mov	r3, r0
 8006ab6:	2104      	movs	r1, #4
 8006ab8:	4648      	mov	r0, r9
 8006aba:	f015 f927 	bl	801bd0c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea_auto_off.resizeToCurrentText();
 8006abe:	4640      	mov	r0, r8
        wc1 = value;
 8006ac0:	f8c4 90e0 	str.w	r9, [r4, #224]	; 0xe0
 8006ac4:	f00e fca4 	bl	8015410 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8006ac8:	4bbb      	ldr	r3, [pc, #748]	; (8006db8 <_ZN17Main_MenuViewBaseC1Ev+0x530>)
 8006aca:	930e      	str	r3, [sp, #56]	; 0x38
    textArea_auto_off.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2SIJ));
 8006acc:	4640      	mov	r0, r8
 8006ace:	2355      	movs	r3, #85	; 0x55
 8006ad0:	a90e      	add	r1, sp, #56	; 0x38
 8006ad2:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
 8006ad6:	f00e fcbb 	bl	8015450 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006ada:	4641      	mov	r1, r8
 8006adc:	4630      	mov	r0, r6
 8006ade:	f00b fe8f 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_ProjectInfo.setXY(33, 240);
 8006ae2:	ee19 0a90 	vmov	r0, s19
 8006ae6:	22f0      	movs	r2, #240	; 0xf0
 8006ae8:	2121      	movs	r1, #33	; 0x21
 8006aea:	f7fc fdc3 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
 8006aee:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel_ProjectInfo.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006af2:	aa0e      	add	r2, sp, #56	; 0x38
 8006af4:	f04f 0802 	mov.w	r8, #2
 8006af8:	a90d      	add	r1, sp, #52	; 0x34
 8006afa:	ee19 0a90 	vmov	r0, s19
 8006afe:	f8ad 9034 	strh.w	r9, [sp, #52]	; 0x34
 8006b02:	f8ad 8038 	strh.w	r8, [sp, #56]	; 0x38
 8006b06:	f00f f85e 	bl	8015bc6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8006b0a:	236f      	movs	r3, #111	; 0x6f
        updateTextPosition();
 8006b0c:	ee19 0a90 	vmov	r0, s19
 8006b10:	f8a4 311c 	strh.w	r3, [r4, #284]	; 0x11c
 8006b14:	f7fc fdf2 	bl	80036fc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel_ProjectInfo.setAction(buttonCallback);
 8006b18:	f504 538f 	add.w	r3, r4, #4576	; 0x11e0
 8006b1c:	3310      	adds	r3, #16
 8006b1e:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
 8006b22:	ee19 1a90 	vmov	r1, s19
 8006b26:	4630      	mov	r0, r6
        colorPressed = col;
 8006b28:	e9c4 aa48 	strd	sl, sl, [r4, #288]	; 0x120
 8006b2c:	9303      	str	r3, [sp, #12]
 8006b2e:	f00b fe67 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_Calibration.setXY(33, 170);
 8006b32:	ee1a 0a10 	vmov	r0, s20
 8006b36:	22aa      	movs	r2, #170	; 0xaa
 8006b38:	2121      	movs	r1, #33	; 0x21
 8006b3a:	f7fc fd9b 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel_Calibration.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006b3e:	aa0e      	add	r2, sp, #56	; 0x38
 8006b40:	a90d      	add	r1, sp, #52	; 0x34
 8006b42:	ee1a 0a10 	vmov	r0, s20
 8006b46:	f8ad 9034 	strh.w	r9, [sp, #52]	; 0x34
 8006b4a:	f8ad 8038 	strh.w	r8, [sp, #56]	; 0x38
 8006b4e:	f00f f83a 	bl	8015bc6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006b52:	2370      	movs	r3, #112	; 0x70
        updateTextPosition();
 8006b54:	ee1a 0a10 	vmov	r0, s20
 8006b58:	f8a4 3164 	strh.w	r3, [r4, #356]	; 0x164
 8006b5c:	f7fc fdce 	bl	80036fc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006b60:	9b03      	ldr	r3, [sp, #12]
 8006b62:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8006b66:	ee1a 1a10 	vmov	r1, s20
 8006b6a:	4630      	mov	r0, r6
        colorPressed = col;
 8006b6c:	e9c4 aa5a 	strd	sl, sl, [r4, #360]	; 0x168
 8006b70:	f00b fe46 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_Measure.setXY(33, 100);
 8006b74:	ee1a 0a90 	vmov	r0, s21
 8006b78:	2264      	movs	r2, #100	; 0x64
 8006b7a:	2121      	movs	r1, #33	; 0x21
 8006b7c:	f7fc fd7a 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel_Measure.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006b80:	aa0e      	add	r2, sp, #56	; 0x38
 8006b82:	a90d      	add	r1, sp, #52	; 0x34
 8006b84:	ee1a 0a90 	vmov	r0, s21
 8006b88:	f8ad 9034 	strh.w	r9, [sp, #52]	; 0x34
 8006b8c:	f8ad 8038 	strh.w	r8, [sp, #56]	; 0x38
 8006b90:	f00f f819 	bl	8015bc6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006b94:	2371      	movs	r3, #113	; 0x71
        updateTextPosition();
 8006b96:	ee1a 0a90 	vmov	r0, s21
 8006b9a:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
 8006b9e:	f7fc fdad 	bl	80036fc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006ba2:	9b03      	ldr	r3, [sp, #12]
 8006ba4:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 8006ba8:	ee1a 1a90 	vmov	r1, s21
 8006bac:	4630      	mov	r0, r6
        colorPressed = col;
 8006bae:	e9c4 aa6c 	strd	sl, sl, [r4, #432]	; 0x1b0
 8006bb2:	f00b fe25 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line2.setPosition(0, 75, 240, 10);
 8006bb6:	230a      	movs	r3, #10
 8006bb8:	9300      	str	r3, [sp, #0]
 8006bba:	224b      	movs	r2, #75	; 0x4b
 8006bbc:	23f0      	movs	r3, #240	; 0xf0
 8006bbe:	4629      	mov	r1, r5
 8006bc0:	4638      	mov	r0, r7
 8006bc2:	f7fc fd64 	bl	800368e <_ZN8touchgfx8Drawable11setPositionEssss>
 8006bc6:	9b04      	ldr	r3, [sp, #16]
 8006bc8:	f8c4 31e4 	str.w	r3, [r4, #484]	; 0x1e4
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006bcc:	22a0      	movs	r2, #160	; 0xa0
 8006bce:	4611      	mov	r1, r2
 8006bd0:	4638      	mov	r0, r7
 8006bd2:	f8c4 a238 	str.w	sl, [r4, #568]	; 0x238
        color565 = LCD16bpp::getNativeColor(painterColor);
 8006bd6:	f8a4 a23c 	strh.w	sl, [r4, #572]	; 0x23c
 8006bda:	f00d fff3 	bl	8014bc4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006bde:	22a0      	movs	r2, #160	; 0xa0
 8006be0:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006be4:	4638      	mov	r0, r7
 8006be6:	f00d fff8 	bl	8014bda <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8006bea:	f8d4 31f8 	ldr.w	r3, [r4, #504]	; 0x1f8
 8006bee:	2b20      	cmp	r3, #32
 8006bf0:	d005      	beq.n	8006bfe <_ZN17Main_MenuViewBaseC1Ev+0x376>
        lineWidthQ5 = widthQ5;
 8006bf2:	2320      	movs	r3, #32
 8006bf4:	f8c4 31f8 	str.w	r3, [r4, #504]	; 0x1f8
        updateCachedShape();
 8006bf8:	4638      	mov	r0, r7
 8006bfa:	f00d feed 	bl	80149d8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8006bfe:	4638      	mov	r0, r7
 8006c00:	2101      	movs	r1, #1
 8006c02:	f00d fff5 	bl	8014bf0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8006c06:	4639      	mov	r1, r7
 8006c08:	4630      	mov	r0, r6
 8006c0a:	f00b fdf9 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8006c0e:	f04f 35ff 	mov.w	r5, #4294967295
    textArea_menu.setXY(88, 60);
 8006c12:	223c      	movs	r2, #60	; 0x3c
 8006c14:	ee18 0a10 	vmov	r0, s16
 8006c18:	2158      	movs	r1, #88	; 0x58
        linespace = space;
 8006c1a:	2700      	movs	r7, #0
        boundingArea = calculateBoundingArea();
 8006c1c:	f10d 0818 	add.w	r8, sp, #24
 8006c20:	f7fc fd28 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
 8006c24:	ee18 1a10 	vmov	r1, s16
 8006c28:	4640      	mov	r0, r8
        color = newColor;
 8006c2a:	f8c4 5270 	str.w	r5, [r4, #624]	; 0x270
        linespace = space;
 8006c2e:	f8a4 7274 	strh.w	r7, [r4, #628]	; 0x274
        boundingArea = calculateBoundingArea();
 8006c32:	f00e f973 	bl	8014f1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006c36:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006c3a:	ee18 3a10 	vmov	r3, s16
 8006c3e:	333c      	adds	r3, #60	; 0x3c
 8006c40:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8006c44:	4b5c      	ldr	r3, [pc, #368]	; (8006db8 <_ZN17Main_MenuViewBaseC1Ev+0x530>)
 8006c46:	930e      	str	r3, [sp, #56]	; 0x38
    textArea_menu.setTypedText(touchgfx::TypedText(T___SINGLEUSE_L4HV));
 8006c48:	ee18 0a10 	vmov	r0, s16
 8006c4c:	2344      	movs	r3, #68	; 0x44
 8006c4e:	a90e      	add	r1, sp, #56	; 0x38
 8006c50:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
 8006c54:	f00e fbfc 	bl	8015450 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006c58:	ee18 1a10 	vmov	r1, s16
 8006c5c:	4630      	mov	r0, r6
 8006c5e:	f00b fdcf 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8006c62:	230a      	movs	r3, #10
 8006c64:	9300      	str	r3, [sp, #0]
 8006c66:	2232      	movs	r2, #50	; 0x32
 8006c68:	23f0      	movs	r3, #240	; 0xf0
 8006c6a:	4639      	mov	r1, r7
 8006c6c:	4658      	mov	r0, fp
 8006c6e:	f7fc fd0e 	bl	800368e <_ZN8touchgfx8Drawable11setPositionEssss>
 8006c72:	9b05      	ldr	r3, [sp, #20]
 8006c74:	f8c4 32b0 	str.w	r3, [r4, #688]	; 0x2b0
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006c78:	22a0      	movs	r2, #160	; 0xa0
 8006c7a:	4611      	mov	r1, r2
 8006c7c:	4658      	mov	r0, fp
 8006c7e:	f8c4 5304 	str.w	r5, [r4, #772]	; 0x304
 8006c82:	f8a4 5308 	strh.w	r5, [r4, #776]	; 0x308
 8006c86:	f00d ff9d 	bl	8014bc4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006c8a:	22a0      	movs	r2, #160	; 0xa0
 8006c8c:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006c90:	4658      	mov	r0, fp
 8006c92:	f00d ffa2 	bl	8014bda <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8006c96:	f8d4 32c4 	ldr.w	r3, [r4, #708]	; 0x2c4
 8006c9a:	2b20      	cmp	r3, #32
 8006c9c:	d005      	beq.n	8006caa <_ZN17Main_MenuViewBaseC1Ev+0x422>
        lineWidthQ5 = widthQ5;
 8006c9e:	2320      	movs	r3, #32
 8006ca0:	f8c4 32c4 	str.w	r3, [r4, #708]	; 0x2c4
        updateCachedShape();
 8006ca4:	4658      	mov	r0, fp
 8006ca6:	f00d fe97 	bl	80149d8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8006caa:	4658      	mov	r0, fp
 8006cac:	2101      	movs	r1, #1
 8006cae:	f00d ff9f 	bl	8014bf0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8006cb2:	4659      	mov	r1, fp
 8006cb4:	4630      	mov	r0, r6
 8006cb6:	f00b fda3 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8006cba:	2700      	movs	r7, #0
        boundingArea = calculateBoundingArea();
 8006cbc:	ad06      	add	r5, sp, #24
    textArea_name.setXY(69, 35);
 8006cbe:	ee18 0a90 	vmov	r0, s17
 8006cc2:	2223      	movs	r2, #35	; 0x23
        color = newColor;
 8006cc4:	f04f 39ff 	mov.w	r9, #4294967295
 8006cc8:	2145      	movs	r1, #69	; 0x45
 8006cca:	f7fc fcd3 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006cce:	ee18 1a90 	vmov	r1, s17
 8006cd2:	4628      	mov	r0, r5
        color = newColor;
 8006cd4:	f8c4 933c 	str.w	r9, [r4, #828]	; 0x33c
        linespace = space;
 8006cd8:	f8a4 7340 	strh.w	r7, [r4, #832]	; 0x340
        boundingArea = calculateBoundingArea();
 8006cdc:	f00e f91e 	bl	8014f1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006ce0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006ce4:	ee18 3a90 	vmov	r3, s17
 8006ce8:	333c      	adds	r3, #60	; 0x3c
 8006cea:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    textArea_name.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6D7Z));
 8006cee:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 8006cf2:	4b31      	ldr	r3, [pc, #196]	; (8006db8 <_ZN17Main_MenuViewBaseC1Ev+0x530>)
 8006cf4:	930e      	str	r3, [sp, #56]	; 0x38
 8006cf6:	ee18 0a90 	vmov	r0, s17
 8006cfa:	236d      	movs	r3, #109	; 0x6d
 8006cfc:	4641      	mov	r1, r8
 8006cfe:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
 8006d02:	f00e fba5 	bl	8015450 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006d06:	ee18 1a90 	vmov	r1, s17
 8006d0a:	4630      	mov	r0, r6
 8006d0c:	f00b fd78 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_title.setXY(54, 12);
 8006d10:	ee19 0a10 	vmov	r0, s18
 8006d14:	220c      	movs	r2, #12
 8006d16:	2136      	movs	r1, #54	; 0x36
 8006d18:	f7fc fcac 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
 8006d1c:	ee19 1a10 	vmov	r1, s18
 8006d20:	4628      	mov	r0, r5
        color = newColor;
 8006d22:	f8c4 9384 	str.w	r9, [r4, #900]	; 0x384
        linespace = space;
 8006d26:	f8a4 7388 	strh.w	r7, [r4, #904]	; 0x388
        boundingArea = calculateBoundingArea();
 8006d2a:	f00e f8f7 	bl	8014f1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006d2e:	ee19 2a10 	vmov	r2, s18
 8006d32:	f102 033c 	add.w	r3, r2, #60	; 0x3c
 8006d36:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006d3a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006d3e:	4b1e      	ldr	r3, [pc, #120]	; (8006db8 <_ZN17Main_MenuViewBaseC1Ev+0x530>)
 8006d40:	930e      	str	r3, [sp, #56]	; 0x38
    textArea_title.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9K1W));
 8006d42:	ee19 0a10 	vmov	r0, s18
 8006d46:	236e      	movs	r3, #110	; 0x6e
 8006d48:	4641      	mov	r1, r8
 8006d4a:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
 8006d4e:	f00e fb7f 	bl	8015450 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006d52:	ee19 1a10 	vmov	r1, s18
 8006d56:	4630      	mov	r0, r6
 8006d58:	f00b fd52 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_turn_off.setXY(198, 5);
 8006d5c:	ee1b 0a10 	vmov	r0, s22
 8006d60:	2205      	movs	r2, #5
 8006d62:	21c6      	movs	r1, #198	; 0xc6
 8006d64:	f7fc fc86 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
 8006d68:	2301      	movs	r3, #1
 8006d6a:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8006d6e:	230a      	movs	r3, #10
    buttonWithIcon_turn_off.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_POWER_OFF_36X36_ID), touchgfx::Bitmap(BITMAP_POWER_OFF_36X36_ID));
 8006d70:	ee1b 0a10 	vmov	r0, s22
 8006d74:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8006d78:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8006d7c:	aa0c      	add	r2, sp, #48	; 0x30
 8006d7e:	ab0d      	add	r3, sp, #52	; 0x34
 8006d80:	a90b      	add	r1, sp, #44	; 0x2c
 8006d82:	f8cd 8000 	str.w	r8, [sp]
 8006d86:	f8ad 702c 	strh.w	r7, [sp, #44]	; 0x2c
 8006d8a:	f00f f856 	bl	8015e3a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8006d8e:	9b03      	ldr	r3, [sp, #12]
 8006d90:	f8c4 73d4 	str.w	r7, [r4, #980]	; 0x3d4
 8006d94:	4630      	mov	r0, r6
 8006d96:	ee1b 1a10 	vmov	r1, s22
 8006d9a:	f8c4 33c4 	str.w	r3, [r4, #964]	; 0x3c4
 8006d9e:	f00b fd2f 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006da2:	4620      	mov	r0, r4
 8006da4:	b011      	add	sp, #68	; 0x44
 8006da6:	ecbd 8b08 	vpop	{d8-d11}
 8006daa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006dae:	bf00      	nop
 8006db0:	200138a0 	.word	0x200138a0
 8006db4:	0802f491 	.word	0x0802f491
 8006db8:	0802f504 	.word	0x0802f504

08006dbc <_ZN19MeasurementViewBase11setupScreenEv>:
}

void MeasurementViewBase::setupScreen()
{

}
 8006dbc:	4770      	bx	lr

08006dbe <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006dbe:	4770      	bx	lr

08006dc0 <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006dc0:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006dc2:	68c2      	ldr	r2, [r0, #12]
 8006dc4:	6844      	ldr	r4, [r0, #4]
 8006dc6:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006dc8:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006dca:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006dce:	07d2      	lsls	r2, r2, #31
 8006dd0:	bf48      	it	mi
 8006dd2:	5962      	ldrmi	r2, [r4, r5]
 8006dd4:	689b      	ldr	r3, [r3, #8]
    }
 8006dd6:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006dd8:	bf48      	it	mi
 8006dda:	58d3      	ldrmi	r3, [r2, r3]
 8006ddc:	4718      	bx	r3

08006dde <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006dde:	6843      	ldr	r3, [r0, #4]
 8006de0:	b12b      	cbz	r3, 8006dee <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006de2:	6883      	ldr	r3, [r0, #8]
 8006de4:	b92b      	cbnz	r3, 8006df2 <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006de6:	68c0      	ldr	r0, [r0, #12]
 8006de8:	f000 0001 	and.w	r0, r0, #1
 8006dec:	4770      	bx	lr
 8006dee:	4618      	mov	r0, r3
 8006df0:	4770      	bx	lr
 8006df2:	2001      	movs	r0, #1
    }
 8006df4:	4770      	bx	lr

08006df6 <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006df6:	b510      	push	{r4, lr}
 8006df8:	2110      	movs	r1, #16
 8006dfa:	4604      	mov	r4, r0
 8006dfc:	f025 fec1 	bl	802cb82 <_ZdlPvj>
 8006e00:	4620      	mov	r0, r4
 8006e02:	bd10      	pop	{r4, pc}

08006e04 <_ZN19MeasurementViewBaseD1Ev>:
MeasurementViewBase::~MeasurementViewBase()
 8006e04:	b510      	push	{r4, lr}
 8006e06:	4b03      	ldr	r3, [pc, #12]	; (8006e14 <_ZN19MeasurementViewBaseD1Ev+0x10>)
 8006e08:	6003      	str	r3, [r0, #0]
 8006e0a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006e0c:	f010 f8ce 	bl	8016fac <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006e10:	4620      	mov	r0, r4
 8006e12:	bd10      	pop	{r4, pc}
 8006e14:	08030af0 	.word	0x08030af0

08006e18 <_ZN19MeasurementViewBaseD0Ev>:
MeasurementViewBase::~MeasurementViewBase()
 8006e18:	b507      	push	{r0, r1, r2, lr}
 8006e1a:	4b07      	ldr	r3, [pc, #28]	; (8006e38 <_ZN19MeasurementViewBaseD0Ev+0x20>)
 8006e1c:	6003      	str	r3, [r0, #0]
 8006e1e:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006e20:	f010 f8c4 	bl	8016fac <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006e24:	9801      	ldr	r0, [sp, #4]
 8006e26:	f241 11c4 	movw	r1, #4548	; 0x11c4
 8006e2a:	f025 feaa 	bl	802cb82 <_ZdlPvj>
 8006e2e:	9801      	ldr	r0, [sp, #4]
 8006e30:	b003      	add	sp, #12
 8006e32:	f85d fb04 	ldr.w	pc, [sp], #4
 8006e36:	bf00      	nop
 8006e38:	08030af0 	.word	0x08030af0

08006e3c <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void MeasurementViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8006e3c:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel_Return)
 8006e3e:	f100 03e4 	add.w	r3, r0, #228	; 0xe4
 8006e42:	4299      	cmp	r1, r3
{
 8006e44:	4604      	mov	r4, r0
 8006e46:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel_Return)
 8006e48:	d103      	bne.n	8006e52 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~MeasurementViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006e4a:	f011 fdb1 	bl	80189b0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel_Return clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
 8006e4e:	f7fe fb97 	bl	8005580 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel_Single)
 8006e52:	f504 73ba 	add.w	r3, r4, #372	; 0x174
 8006e56:	429d      	cmp	r5, r3
 8006e58:	d103      	bne.n	8006e62 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8006e5a:	f011 fda9 	bl	80189b0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel_Single clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8006e5e:	f7fe fbbf 	bl	80055e0 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel_Accurate)
 8006e62:	f504 7496 	add.w	r4, r4, #300	; 0x12c
 8006e66:	42a5      	cmp	r5, r4
 8006e68:	d105      	bne.n	8006e76 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 8006e6a:	f011 fda1 	bl	80189b0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel_Accurate clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards East
        application().gotoMeasurement_AccurateScreenWipeTransitionEast();
    }
}
 8006e6e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionEast();
 8006e72:	f7fe bbe5 	b.w	8005640 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv>
}
 8006e76:	bd38      	pop	{r3, r4, r5, pc}

08006e78 <_ZN19MeasurementViewBaseC1Ev>:
MeasurementViewBase::MeasurementViewBase() :
 8006e78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006e7c:	ed2d 8b06 	vpush	{d8-d10}
 8006e80:	4604      	mov	r4, r0
 8006e82:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &MeasurementViewBase::buttonCallbackHandler)
 8006e84:	46a2      	mov	sl, r4
 8006e86:	2500      	movs	r5, #0
 8006e88:	f013 fa12 	bl	801a2b0 <_ZN8touchgfx6ScreenC1Ev>
 8006e8c:	4b71      	ldr	r3, [pc, #452]	; (8007054 <_ZN19MeasurementViewBaseC1Ev+0x1dc>)
 8006e8e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006e90:	f84a 3b40 	str.w	r3, [sl], #64
        : Widget(), alpha(255), color(0)
 8006e94:	2226      	movs	r2, #38	; 0x26
 8006e96:	4629      	mov	r1, r5
 8006e98:	4650      	mov	r0, sl
 8006e9a:	f026 ff5e 	bl	802dd5a <memset>
 8006e9e:	4650      	mov	r0, sl
 8006ea0:	f7fc fc1a 	bl	80036d8 <_ZN8touchgfx6WidgetC1Ev>
 8006ea4:	f104 096c 	add.w	r9, r4, #108	; 0x6c
 8006ea8:	26ff      	movs	r6, #255	; 0xff
 8006eaa:	4b6b      	ldr	r3, [pc, #428]	; (8007058 <_ZN19MeasurementViewBaseC1Ev+0x1e0>)
 8006eac:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8006eae:	2226      	movs	r2, #38	; 0x26
 8006eb0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006eb4:	4629      	mov	r1, r5
 8006eb6:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8006eba:	4648      	mov	r0, r9
 8006ebc:	66a5      	str	r5, [r4, #104]	; 0x68
 8006ebe:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006ec2:	f026 ff4a 	bl	802dd5a <memset>
 8006ec6:	4648      	mov	r0, r9
 8006ec8:	f7fc fc06 	bl	80036d8 <_ZN8touchgfx6WidgetC1Ev>
 8006ecc:	4b63      	ldr	r3, [pc, #396]	; (800705c <_ZN19MeasurementViewBaseC1Ev+0x1e4>)
 8006ece:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006ed0:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006ed4:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006ed8:	a90a      	add	r1, sp, #40	; 0x28
 8006eda:	4648      	mov	r0, r9
 8006edc:	f104 0898 	add.w	r8, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8006ee0:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006ee4:	f00f f865 	bl	8015fb2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8006ee8:	4640      	mov	r0, r8
 8006eea:	f7fc fc59 	bl	80037a0 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8006eee:	4b5c      	ldr	r3, [pc, #368]	; (8007060 <_ZN19MeasurementViewBaseC1Ev+0x1e8>)
 8006ef0:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8006ef4:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 8006ef8:	4618      	mov	r0, r3
 8006efa:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8006efe:	ee09 3a90 	vmov	s19, r3
 8006f02:	f00f f98d 	bl	8016220 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006f06:	f504 7396 	add.w	r3, r4, #300	; 0x12c
 8006f0a:	4618      	mov	r0, r3
 8006f0c:	ee0a 3a10 	vmov	s20, r3
 8006f10:	f00f f986 	bl	8016220 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006f14:	f504 73ba 	add.w	r3, r4, #372	; 0x174
 8006f18:	4618      	mov	r0, r3
 8006f1a:	f504 77de 	add.w	r7, r4, #444	; 0x1bc
 8006f1e:	ee0a 3a90 	vmov	s21, r3
 8006f22:	f00f f97d 	bl	8016220 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006f26:	4638      	mov	r0, r7
 8006f28:	f00d fd36 	bl	8014998 <_ZN8touchgfx4LineC1Ev>
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8006f2c:	4e4d      	ldr	r6, [pc, #308]	; (8007064 <_ZN19MeasurementViewBaseC1Ev+0x1ec>)
 8006f2e:	f504 730b 	add.w	r3, r4, #556	; 0x22c
 8006f32:	4618      	mov	r0, r3
 8006f34:	9302      	str	r3, [sp, #8]
 8006f36:	f7fc f9d3 	bl	80032e0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006f3a:	f106 0324 	add.w	r3, r6, #36	; 0x24
 8006f3e:	f8c4 3234 	str.w	r3, [r4, #564]	; 0x234
 8006f42:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8006f46:	4618      	mov	r0, r3
 8006f48:	f8c4 622c 	str.w	r6, [r4, #556]	; 0x22c
 8006f4c:	f8c4 5238 	str.w	r5, [r4, #568]	; 0x238
 8006f50:	f504 7b22 	add.w	fp, r4, #648	; 0x288
 8006f54:	ee08 3a10 	vmov	s16, r3
 8006f58:	f7fc fc22 	bl	80037a0 <_ZN8touchgfx8TextAreaC1Ev>
 8006f5c:	4658      	mov	r0, fp
 8006f5e:	f00d fd1b 	bl	8014998 <_ZN8touchgfx4LineC1Ev>
 8006f62:	f504 733e 	add.w	r3, r4, #760	; 0x2f8
 8006f66:	4618      	mov	r0, r3
 8006f68:	9303      	str	r3, [sp, #12]
 8006f6a:	f7fc f9b9 	bl	80032e0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006f6e:	f106 0324 	add.w	r3, r6, #36	; 0x24
 8006f72:	f8c4 3300 	str.w	r3, [r4, #768]	; 0x300
 8006f76:	f504 7343 	add.w	r3, r4, #780	; 0x30c
 8006f7a:	f8c4 62f8 	str.w	r6, [r4, #760]	; 0x2f8
 8006f7e:	4618      	mov	r0, r3
 8006f80:	f8c4 5304 	str.w	r5, [r4, #772]	; 0x304
 8006f84:	ee08 3a90 	vmov	s17, r3
 8006f88:	f7fc fc0a 	bl	80037a0 <_ZN8touchgfx8TextAreaC1Ev>
 8006f8c:	f504 7355 	add.w	r3, r4, #852	; 0x354
 8006f90:	4618      	mov	r0, r3
 8006f92:	ee09 3a10 	vmov	s18, r3
 8006f96:	f7fc fc03 	bl	80037a0 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8006f9a:	4a33      	ldr	r2, [pc, #204]	; (8007068 <_ZN19MeasurementViewBaseC1Ev+0x1f0>)
 8006f9c:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8006fa0:	e9c3 246d 	strd	r2, r4, [r3, #436]	; 0x1b4
 8006fa4:	4a31      	ldr	r2, [pc, #196]	; (800706c <_ZN19MeasurementViewBaseC1Ev+0x1f4>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006fa6:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8006faa:	e9c3 256f 	strd	r2, r5, [r3, #444]	; 0x1bc
 8006fae:	f504 7069 	add.w	r0, r4, #932	; 0x3a4
 8006fb2:	f00f fff1 	bl	8016f98 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8006fb6:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8006fba:	462a      	mov	r2, r5
 8006fbc:	4650      	mov	r0, sl
 8006fbe:	9300      	str	r3, [sp, #0]
 8006fc0:	4629      	mov	r1, r5
 8006fc2:	23f0      	movs	r3, #240	; 0xf0
 8006fc4:	f7fc fb63 	bl	800368e <_ZN8touchgfx8Drawable11setPositionEssss>
 8006fc8:	1d26      	adds	r6, r4, #4
        color = newColor;
 8006fca:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006fce:	66a3      	str	r3, [r4, #104]	; 0x68
 8006fd0:	4651      	mov	r1, sl
 8006fd2:	4630      	mov	r0, r6
 8006fd4:	f00b fc14 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image_background.setXY(0, 0);
 8006fd8:	462a      	mov	r2, r5
 8006fda:	4648      	mov	r0, r9
 8006fdc:	4629      	mov	r1, r5
 8006fde:	f7fc fb49 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
 8006fe2:	2308      	movs	r3, #8
    image_background.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8006fe4:	4648      	mov	r0, r9
 8006fe6:	a90a      	add	r1, sp, #40	; 0x28
 8006fe8:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006fec:	f00e ffe1 	bl	8015fb2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006ff0:	4649      	mov	r1, r9
 8006ff2:	4630      	mov	r0, r6
 8006ff4:	f00b fc04 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_auto_off.setXY(86, 308);
 8006ff8:	f44f 729a 	mov.w	r2, #308	; 0x134
 8006ffc:	2156      	movs	r1, #86	; 0x56
 8006ffe:	4640      	mov	r0, r8
 8007000:	f7fc fb38 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
 8007004:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8007008:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 800700c:	f10d 0910 	add.w	r9, sp, #16
        color = newColor;
 8007010:	f04f 3aff 	mov.w	sl, #4294967295
        boundingArea = calculateBoundingArea();
 8007014:	4648      	mov	r0, r9
 8007016:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 800701a:	f8c4 a0c8 	str.w	sl, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 800701e:	4641      	mov	r1, r8
 8007020:	4798      	blx	r3
 8007022:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 8007026:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 800702a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800702e:	4b10      	ldr	r3, [pc, #64]	; (8007070 <_ZN19MeasurementViewBaseC1Ev+0x1f8>)
 8007030:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_0CQH).getText());
 8007032:	f504 7967 	add.w	r9, r4, #924	; 0x39c
 8007036:	b92b      	cbnz	r3, 8007044 <_ZN19MeasurementViewBaseC1Ev+0x1cc>
 8007038:	4b0e      	ldr	r3, [pc, #56]	; (8007074 <_ZN19MeasurementViewBaseC1Ev+0x1fc>)
 800703a:	4a0f      	ldr	r2, [pc, #60]	; (8007078 <_ZN19MeasurementViewBaseC1Ev+0x200>)
 800703c:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800703e:	480f      	ldr	r0, [pc, #60]	; (800707c <_ZN19MeasurementViewBaseC1Ev+0x204>)
 8007040:	f026 fc86 	bl	802d950 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8007044:	4b0e      	ldr	r3, [pc, #56]	; (8007080 <_ZN19MeasurementViewBaseC1Ev+0x208>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007046:	881b      	ldrh	r3, [r3, #0]
 8007048:	2b45      	cmp	r3, #69	; 0x45
 800704a:	d81d      	bhi.n	8007088 <_ZN19MeasurementViewBaseC1Ev+0x210>
 800704c:	4b0d      	ldr	r3, [pc, #52]	; (8007084 <_ZN19MeasurementViewBaseC1Ev+0x20c>)
 800704e:	4a0a      	ldr	r2, [pc, #40]	; (8007078 <_ZN19MeasurementViewBaseC1Ev+0x200>)
 8007050:	2161      	movs	r1, #97	; 0x61
 8007052:	e7f4      	b.n	800703e <_ZN19MeasurementViewBaseC1Ev+0x1c6>
 8007054:	08030af0 	.word	0x08030af0
 8007058:	08031a58 	.word	0x08031a58
 800705c:	08031ca4 	.word	0x08031ca4
 8007060:	0802f5a4 	.word	0x0802f5a4
 8007064:	0803178c 	.word	0x0803178c
 8007068:	08030ad8 	.word	0x08030ad8
 800706c:	08006e3d 	.word	0x08006e3d
 8007070:	20013894 	.word	0x20013894
 8007074:	0802f354 	.word	0x0802f354
 8007078:	0802f459 	.word	0x0802f459
 800707c:	0802f3d1 	.word	0x0802f3d1
 8007080:	20013898 	.word	0x20013898
 8007084:	0802f418 	.word	0x0802f418
        return texts->getText(typedTextId);
 8007088:	4bad      	ldr	r3, [pc, #692]	; (8007340 <_ZN19MeasurementViewBaseC1Ev+0x4c8>)
 800708a:	2145      	movs	r1, #69	; 0x45
 800708c:	6818      	ldr	r0, [r3, #0]
 800708e:	f003 fb03 	bl	800a698 <_ZNK8touchgfx5Texts7getTextEt>
 8007092:	4aac      	ldr	r2, [pc, #688]	; (8007344 <_ZN19MeasurementViewBaseC1Ev+0x4cc>)
 8007094:	4603      	mov	r3, r0
 8007096:	2104      	movs	r1, #4
 8007098:	4648      	mov	r0, r9
 800709a:	f014 fe37 	bl	801bd0c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea_auto_off.resizeToCurrentText();
 800709e:	4640      	mov	r0, r8
        wc1 = value;
 80070a0:	f8c4 90e0 	str.w	r9, [r4, #224]	; 0xe0
 80070a4:	f00e f9b4 	bl	8015410 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80070a8:	4ba7      	ldr	r3, [pc, #668]	; (8007348 <_ZN19MeasurementViewBaseC1Ev+0x4d0>)
 80070aa:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_auto_off.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TOET));
 80070ac:	4640      	mov	r0, r8
 80070ae:	2346      	movs	r3, #70	; 0x46
 80070b0:	a90a      	add	r1, sp, #40	; 0x28
 80070b2:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80070b6:	f00e f9cb 	bl	8015450 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80070ba:	4641      	mov	r1, r8
 80070bc:	4630      	mov	r0, r6
 80070be:	f00b fb9f 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_Return.setXY(33, 240);
 80070c2:	ee19 0a90 	vmov	r0, s19
 80070c6:	22f0      	movs	r2, #240	; 0xf0
 80070c8:	2121      	movs	r1, #33	; 0x21
 80070ca:	f7fc fad3 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
 80070ce:	f04f 0802 	mov.w	r8, #2
 80070d2:	2303      	movs	r3, #3
    buttonWithLabel_Return.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80070d4:	a909      	add	r1, sp, #36	; 0x24
 80070d6:	ee19 0a90 	vmov	r0, s19
 80070da:	aa0a      	add	r2, sp, #40	; 0x28
 80070dc:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80070e0:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel_Return.setAction(buttonCallback);
 80070e4:	f504 598d 	add.w	r9, r4, #4512	; 0x11a0
    buttonWithLabel_Return.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80070e8:	f00e fd6d 	bl	8015bc6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80070ec:	226a      	movs	r2, #106	; 0x6a
 80070ee:	f8a4 211c 	strh.w	r2, [r4, #284]	; 0x11c
    buttonWithLabel_Return.setAction(buttonCallback);
 80070f2:	f109 0914 	add.w	r9, r9, #20
        updateTextPosition();
 80070f6:	ee19 0a90 	vmov	r0, s19
 80070fa:	f7fc faff 	bl	80036fc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80070fe:	ee19 1a90 	vmov	r1, s19
 8007102:	4630      	mov	r0, r6
        colorPressed = col;
 8007104:	e9c4 aa48 	strd	sl, sl, [r4, #288]	; 0x120
 8007108:	f8c4 910c 	str.w	r9, [r4, #268]	; 0x10c
 800710c:	f00b fb78 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_Accurate.setXY(33, 170);
 8007110:	ee1a 0a10 	vmov	r0, s20
 8007114:	22aa      	movs	r2, #170	; 0xaa
 8007116:	2121      	movs	r1, #33	; 0x21
 8007118:	f7fc faac 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
 800711c:	2303      	movs	r3, #3
    buttonWithLabel_Accurate.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800711e:	a909      	add	r1, sp, #36	; 0x24
 8007120:	ee1a 0a10 	vmov	r0, s20
 8007124:	aa0a      	add	r2, sp, #40	; 0x28
 8007126:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800712a:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 800712e:	f00e fd4a 	bl	8015bc6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8007132:	2269      	movs	r2, #105	; 0x69
 8007134:	f8a4 2164 	strh.w	r2, [r4, #356]	; 0x164
        updateTextPosition();
 8007138:	ee1a 0a10 	vmov	r0, s20
 800713c:	f7fc fade 	bl	80036fc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8007140:	ee1a 1a10 	vmov	r1, s20
 8007144:	4630      	mov	r0, r6
        colorPressed = col;
 8007146:	e9c4 aa5a 	strd	sl, sl, [r4, #360]	; 0x168
 800714a:	f8c4 9154 	str.w	r9, [r4, #340]	; 0x154
 800714e:	f00b fb57 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_Single.setXY(33, 100);
 8007152:	ee1a 0a90 	vmov	r0, s21
 8007156:	2264      	movs	r2, #100	; 0x64
 8007158:	2121      	movs	r1, #33	; 0x21
 800715a:	f7fc fa8b 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel_Single.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800715e:	aa0a      	add	r2, sp, #40	; 0x28
 8007160:	2303      	movs	r3, #3
 8007162:	a909      	add	r1, sp, #36	; 0x24
 8007164:	ee1a 0a90 	vmov	r0, s21
 8007168:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800716c:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8007170:	f00e fd29 	bl	8015bc6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8007174:	2368      	movs	r3, #104	; 0x68
 8007176:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
        updateTextPosition();
 800717a:	ee1a 0a90 	vmov	r0, s21
 800717e:	f7fc fabd 	bl	80036fc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8007182:	ee1a 1a90 	vmov	r1, s21
 8007186:	4630      	mov	r0, r6
        colorPressed = col;
 8007188:	e9c4 aa6c 	strd	sl, sl, [r4, #432]	; 0x1b0
 800718c:	f8c4 919c 	str.w	r9, [r4, #412]	; 0x19c
 8007190:	f00b fb36 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line2.setPosition(0, 75, 240, 10);
 8007194:	230a      	movs	r3, #10
 8007196:	9300      	str	r3, [sp, #0]
 8007198:	224b      	movs	r2, #75	; 0x4b
 800719a:	23f0      	movs	r3, #240	; 0xf0
 800719c:	4629      	mov	r1, r5
 800719e:	4638      	mov	r0, r7
 80071a0:	f7fc fa75 	bl	800368e <_ZN8touchgfx8Drawable11setPositionEssss>
 80071a4:	9b02      	ldr	r3, [sp, #8]
 80071a6:	f8c4 31e4 	str.w	r3, [r4, #484]	; 0x1e4
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80071aa:	22a0      	movs	r2, #160	; 0xa0
 80071ac:	4611      	mov	r1, r2
 80071ae:	4638      	mov	r0, r7
 80071b0:	f8c4 a238 	str.w	sl, [r4, #568]	; 0x238
        color565 = LCD16bpp::getNativeColor(painterColor);
 80071b4:	f8a4 a23c 	strh.w	sl, [r4, #572]	; 0x23c
 80071b8:	f00d fd04 	bl	8014bc4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80071bc:	22a0      	movs	r2, #160	; 0xa0
 80071be:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80071c2:	4638      	mov	r0, r7
 80071c4:	f00d fd09 	bl	8014bda <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80071c8:	f8d4 31f8 	ldr.w	r3, [r4, #504]	; 0x1f8
 80071cc:	2b20      	cmp	r3, #32
 80071ce:	d005      	beq.n	80071dc <_ZN19MeasurementViewBaseC1Ev+0x364>
        lineWidthQ5 = widthQ5;
 80071d0:	2320      	movs	r3, #32
 80071d2:	f8c4 31f8 	str.w	r3, [r4, #504]	; 0x1f8
        updateCachedShape();
 80071d6:	4638      	mov	r0, r7
 80071d8:	f00d fbfe 	bl	80149d8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80071dc:	4638      	mov	r0, r7
 80071de:	2101      	movs	r1, #1
 80071e0:	f00d fd06 	bl	8014bf0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80071e4:	4639      	mov	r1, r7
 80071e6:	4630      	mov	r0, r6
 80071e8:	f00b fb0a 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 80071ec:	f04f 37ff 	mov.w	r7, #4294967295
    textArea_menu.setXY(61, 60);
 80071f0:	223c      	movs	r2, #60	; 0x3c
 80071f2:	ee18 0a10 	vmov	r0, s16
 80071f6:	213d      	movs	r1, #61	; 0x3d
        linespace = space;
 80071f8:	f04f 0800 	mov.w	r8, #0
        boundingArea = calculateBoundingArea();
 80071fc:	ad04      	add	r5, sp, #16
 80071fe:	f7fc fa39 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
 8007202:	ee18 1a10 	vmov	r1, s16
 8007206:	4628      	mov	r0, r5
        color = newColor;
 8007208:	f8c4 7270 	str.w	r7, [r4, #624]	; 0x270
        linespace = space;
 800720c:	f8a4 8274 	strh.w	r8, [r4, #628]	; 0x274
        boundingArea = calculateBoundingArea();
 8007210:	f00d fe84 	bl	8014f1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007214:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007218:	ee18 3a10 	vmov	r3, s16
 800721c:	333c      	adds	r3, #60	; 0x3c
 800721e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8007222:	4b49      	ldr	r3, [pc, #292]	; (8007348 <_ZN19MeasurementViewBaseC1Ev+0x4d0>)
 8007224:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_menu.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q8CP));
 8007226:	ee18 0a10 	vmov	r0, s16
 800722a:	2353      	movs	r3, #83	; 0x53
 800722c:	a90a      	add	r1, sp, #40	; 0x28
 800722e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007232:	f00e f90d 	bl	8015450 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007236:	ee18 1a10 	vmov	r1, s16
 800723a:	4630      	mov	r0, r6
 800723c:	f00b fae0 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8007240:	230a      	movs	r3, #10
 8007242:	9300      	str	r3, [sp, #0]
 8007244:	2232      	movs	r2, #50	; 0x32
 8007246:	23f0      	movs	r3, #240	; 0xf0
 8007248:	4641      	mov	r1, r8
 800724a:	4658      	mov	r0, fp
 800724c:	f7fc fa1f 	bl	800368e <_ZN8touchgfx8Drawable11setPositionEssss>
 8007250:	9b03      	ldr	r3, [sp, #12]
 8007252:	f8c4 32b0 	str.w	r3, [r4, #688]	; 0x2b0
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007256:	22a0      	movs	r2, #160	; 0xa0
 8007258:	4611      	mov	r1, r2
 800725a:	4658      	mov	r0, fp
 800725c:	f8c4 7304 	str.w	r7, [r4, #772]	; 0x304
 8007260:	f8a4 7308 	strh.w	r7, [r4, #776]	; 0x308
 8007264:	f00d fcae 	bl	8014bc4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007268:	22a0      	movs	r2, #160	; 0xa0
 800726a:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 800726e:	4658      	mov	r0, fp
 8007270:	f00d fcb3 	bl	8014bda <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8007274:	f8d4 32c4 	ldr.w	r3, [r4, #708]	; 0x2c4
 8007278:	2b20      	cmp	r3, #32
 800727a:	d005      	beq.n	8007288 <_ZN19MeasurementViewBaseC1Ev+0x410>
        lineWidthQ5 = widthQ5;
 800727c:	2320      	movs	r3, #32
 800727e:	f8c4 32c4 	str.w	r3, [r4, #708]	; 0x2c4
        updateCachedShape();
 8007282:	4658      	mov	r0, fp
 8007284:	f00d fba8 	bl	80149d8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8007288:	4658      	mov	r0, fp
 800728a:	2101      	movs	r1, #1
 800728c:	f00d fcb0 	bl	8014bf0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007290:	4659      	mov	r1, fp
 8007292:	4630      	mov	r0, r6
 8007294:	f00b fab4 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8007298:	f04f 38ff 	mov.w	r8, #4294967295
    textArea_name.setXY(69, 35);
 800729c:	ee18 0a90 	vmov	r0, s17
 80072a0:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 80072a2:	2700      	movs	r7, #0
 80072a4:	2145      	movs	r1, #69	; 0x45
 80072a6:	f7fc f9e5 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80072aa:	ee18 1a90 	vmov	r1, s17
 80072ae:	4628      	mov	r0, r5
        color = newColor;
 80072b0:	f8c4 833c 	str.w	r8, [r4, #828]	; 0x33c
        linespace = space;
 80072b4:	f8a4 7340 	strh.w	r7, [r4, #832]	; 0x340
        boundingArea = calculateBoundingArea();
 80072b8:	f00d fe30 	bl	8014f1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80072bc:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80072c0:	ee18 3a90 	vmov	r3, s17
 80072c4:	333c      	adds	r3, #60	; 0x3c
 80072c6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80072ca:	4b1f      	ldr	r3, [pc, #124]	; (8007348 <_ZN19MeasurementViewBaseC1Ev+0x4d0>)
 80072cc:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_name.setTypedText(touchgfx::TypedText(T___SINGLEUSE_V2L5));
 80072ce:	ee18 0a90 	vmov	r0, s17
 80072d2:	236b      	movs	r3, #107	; 0x6b
 80072d4:	a90a      	add	r1, sp, #40	; 0x28
 80072d6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80072da:	f00e f8b9 	bl	8015450 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80072de:	ee18 1a90 	vmov	r1, s17
 80072e2:	4630      	mov	r0, r6
 80072e4:	f00b fa8c 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_title.setXY(54, 12);
 80072e8:	ee19 0a10 	vmov	r0, s18
 80072ec:	220c      	movs	r2, #12
 80072ee:	2136      	movs	r1, #54	; 0x36
 80072f0:	f7fc f9c0 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
 80072f4:	ee19 1a10 	vmov	r1, s18
 80072f8:	4628      	mov	r0, r5
        color = newColor;
 80072fa:	f8c4 8384 	str.w	r8, [r4, #900]	; 0x384
        linespace = space;
 80072fe:	f8a4 7388 	strh.w	r7, [r4, #904]	; 0x388
        boundingArea = calculateBoundingArea();
 8007302:	f00d fe0b 	bl	8014f1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007306:	ee19 2a10 	vmov	r2, s18
 800730a:	f102 033c 	add.w	r3, r2, #60	; 0x3c
 800730e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007312:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007316:	4b0c      	ldr	r3, [pc, #48]	; (8007348 <_ZN19MeasurementViewBaseC1Ev+0x4d0>)
 8007318:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_title.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FIV6));
 800731a:	ee19 0a10 	vmov	r0, s18
 800731e:	236c      	movs	r3, #108	; 0x6c
 8007320:	a90a      	add	r1, sp, #40	; 0x28
 8007322:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007326:	f00e f893 	bl	8015450 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800732a:	4630      	mov	r0, r6
 800732c:	ee19 1a10 	vmov	r1, s18
 8007330:	f00b fa66 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007334:	4620      	mov	r0, r4
 8007336:	b00d      	add	sp, #52	; 0x34
 8007338:	ecbd 8b06 	vpop	{d8-d10}
 800733c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007340:	200138a0 	.word	0x200138a0
 8007344:	0802f491 	.word	0x0802f491
 8007348:	0802f504 	.word	0x0802f504

0800734c <_ZN28Measurement_AccurateViewBase11setupScreenEv>:
}

void Measurement_AccurateViewBase::setupScreen()
{

}
 800734c:	4770      	bx	lr

0800734e <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800734e:	4770      	bx	lr

08007350 <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8007350:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007352:	68c2      	ldr	r2, [r0, #12]
 8007354:	6844      	ldr	r4, [r0, #4]
 8007356:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8007358:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800735a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800735e:	07d2      	lsls	r2, r2, #31
 8007360:	bf48      	it	mi
 8007362:	5962      	ldrmi	r2, [r4, r5]
 8007364:	689b      	ldr	r3, [r3, #8]
    }
 8007366:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007368:	bf48      	it	mi
 800736a:	58d3      	ldrmi	r3, [r2, r3]
 800736c:	4718      	bx	r3

0800736e <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 800736e:	6843      	ldr	r3, [r0, #4]
 8007370:	b12b      	cbz	r3, 800737e <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8007372:	6883      	ldr	r3, [r0, #8]
 8007374:	b92b      	cbnz	r3, 8007382 <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8007376:	68c0      	ldr	r0, [r0, #12]
 8007378:	f000 0001 	and.w	r0, r0, #1
 800737c:	4770      	bx	lr
 800737e:	4618      	mov	r0, r3
 8007380:	4770      	bx	lr
 8007382:	2001      	movs	r0, #1
    }
 8007384:	4770      	bx	lr

08007386 <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007386:	b510      	push	{r4, lr}
 8007388:	2110      	movs	r1, #16
 800738a:	4604      	mov	r4, r0
 800738c:	f025 fbf9 	bl	802cb82 <_ZdlPvj>
 8007390:	4620      	mov	r0, r4
 8007392:	bd10      	pop	{r4, pc}

08007394 <_ZN28Measurement_AccurateViewBaseD1Ev>:
Measurement_AccurateViewBase::~Measurement_AccurateViewBase()
 8007394:	b510      	push	{r4, lr}
 8007396:	4b03      	ldr	r3, [pc, #12]	; (80073a4 <_ZN28Measurement_AccurateViewBaseD1Ev+0x10>)
 8007398:	6003      	str	r3, [r0, #0]
 800739a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800739c:	f00f fe06 	bl	8016fac <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80073a0:	4620      	mov	r0, r4
 80073a2:	bd10      	pop	{r4, pc}
 80073a4:	08030b3c 	.word	0x08030b3c

080073a8 <_ZN28Measurement_AccurateViewBaseD0Ev>:
Measurement_AccurateViewBase::~Measurement_AccurateViewBase()
 80073a8:	b507      	push	{r0, r1, r2, lr}
 80073aa:	4b07      	ldr	r3, [pc, #28]	; (80073c8 <_ZN28Measurement_AccurateViewBaseD0Ev+0x20>)
 80073ac:	6003      	str	r3, [r0, #0]
 80073ae:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80073b0:	f00f fdfc 	bl	8016fac <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80073b4:	9801      	ldr	r0, [sp, #4]
 80073b6:	f241 11c4 	movw	r1, #4548	; 0x11c4
 80073ba:	f025 fbe2 	bl	802cb82 <_ZdlPvj>
 80073be:	9801      	ldr	r0, [sp, #4]
 80073c0:	b003      	add	sp, #12
 80073c2:	f85d fb04 	ldr.w	pc, [sp], #4
 80073c6:	bf00      	nop
 80073c8:	08030b3c 	.word	0x08030b3c

080073cc <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_AccurateViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 80073cc:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel_Return)
 80073ce:	f100 03e4 	add.w	r3, r0, #228	; 0xe4
 80073d2:	4299      	cmp	r1, r3
{
 80073d4:	4604      	mov	r4, r0
 80073d6:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel_Return)
 80073d8:	d103      	bne.n	80073e2 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_AccurateViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80073da:	f011 fae9 	bl	80189b0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel_Return clicked change screen to Measurement
        //Go to Measurement with screen transition towards West
        application().gotoMeasurementScreenWipeTransitionWest();
 80073de:	f7fe f8ef 	bl	80055c0 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel_3Phase)
 80073e2:	f504 7396 	add.w	r3, r4, #300	; 0x12c
 80073e6:	429d      	cmp	r5, r3
 80073e8:	d103      	bne.n	80073f2 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 80073ea:	f011 fae1 	bl	80189b0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel_3Phase clicked change screen to Measurement_Accurate_Display_2
        //Go to Measurement_Accurate_Display_2 with screen transition towards East
        application().gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEast();
 80073ee:	f7fe f957 	bl	80056a0 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel_1Phase)
 80073f2:	f504 74ba 	add.w	r4, r4, #372	; 0x174
 80073f6:	42a5      	cmp	r5, r4
 80073f8:	d105      	bne.n	8007406 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 80073fa:	f011 fad9 	bl	80189b0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel_1Phase clicked change screen to Measurement_Accurate_Display
        //Go to Measurement_Accurate_Display with screen transition towards East
        application().gotoMeasurement_Accurate_DisplayScreenWipeTransitionEast();
    }
}
 80073fe:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_Accurate_DisplayScreenWipeTransitionEast();
 8007402:	f7fe b93d 	b.w	8005680 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv>
}
 8007406:	bd38      	pop	{r3, r4, r5, pc}

08007408 <_ZN28Measurement_AccurateViewBaseC1Ev>:
Measurement_AccurateViewBase::Measurement_AccurateViewBase() :
 8007408:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800740c:	ed2d 8b06 	vpush	{d8-d10}
 8007410:	4604      	mov	r4, r0
 8007412:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_AccurateViewBase::buttonCallbackHandler)
 8007414:	46a2      	mov	sl, r4
 8007416:	2500      	movs	r5, #0
 8007418:	f012 ff4a 	bl	801a2b0 <_ZN8touchgfx6ScreenC1Ev>
 800741c:	4b71      	ldr	r3, [pc, #452]	; (80075e4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1dc>)
 800741e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8007420:	f84a 3b40 	str.w	r3, [sl], #64
        : Widget(), alpha(255), color(0)
 8007424:	2226      	movs	r2, #38	; 0x26
 8007426:	4629      	mov	r1, r5
 8007428:	4650      	mov	r0, sl
 800742a:	f026 fc96 	bl	802dd5a <memset>
 800742e:	4650      	mov	r0, sl
 8007430:	f7fc f952 	bl	80036d8 <_ZN8touchgfx6WidgetC1Ev>
 8007434:	f104 096c 	add.w	r9, r4, #108	; 0x6c
 8007438:	26ff      	movs	r6, #255	; 0xff
 800743a:	4b6b      	ldr	r3, [pc, #428]	; (80075e8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e0>)
 800743c:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800743e:	2226      	movs	r2, #38	; 0x26
 8007440:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8007444:	4629      	mov	r1, r5
 8007446:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800744a:	4648      	mov	r0, r9
 800744c:	66a5      	str	r5, [r4, #104]	; 0x68
 800744e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007452:	f026 fc82 	bl	802dd5a <memset>
 8007456:	4648      	mov	r0, r9
 8007458:	f7fc f93e 	bl	80036d8 <_ZN8touchgfx6WidgetC1Ev>
 800745c:	4b63      	ldr	r3, [pc, #396]	; (80075ec <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e4>)
 800745e:	66e3      	str	r3, [r4, #108]	; 0x6c
 8007460:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8007464:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8007468:	a90a      	add	r1, sp, #40	; 0x28
 800746a:	4648      	mov	r0, r9
 800746c:	f104 0898 	add.w	r8, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8007470:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8007474:	f00e fd9d 	bl	8015fb2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8007478:	4640      	mov	r0, r8
 800747a:	f7fc f991 	bl	80037a0 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 800747e:	4b5c      	ldr	r3, [pc, #368]	; (80075f0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e8>)
 8007480:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8007484:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 8007488:	4618      	mov	r0, r3
 800748a:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 800748e:	ee09 3a90 	vmov	s19, r3
 8007492:	f00e fec5 	bl	8016220 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8007496:	f504 7396 	add.w	r3, r4, #300	; 0x12c
 800749a:	4618      	mov	r0, r3
 800749c:	ee0a 3a10 	vmov	s20, r3
 80074a0:	f00e febe 	bl	8016220 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80074a4:	f504 73ba 	add.w	r3, r4, #372	; 0x174
 80074a8:	4618      	mov	r0, r3
 80074aa:	f504 77de 	add.w	r7, r4, #444	; 0x1bc
 80074ae:	ee0a 3a90 	vmov	s21, r3
 80074b2:	f00e feb5 	bl	8016220 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80074b6:	4638      	mov	r0, r7
 80074b8:	f00d fa6e 	bl	8014998 <_ZN8touchgfx4LineC1Ev>
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80074bc:	4e4d      	ldr	r6, [pc, #308]	; (80075f4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1ec>)
 80074be:	f504 730b 	add.w	r3, r4, #556	; 0x22c
 80074c2:	4618      	mov	r0, r3
 80074c4:	9302      	str	r3, [sp, #8]
 80074c6:	f7fb ff0b 	bl	80032e0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80074ca:	f106 0324 	add.w	r3, r6, #36	; 0x24
 80074ce:	f8c4 3234 	str.w	r3, [r4, #564]	; 0x234
 80074d2:	f504 7310 	add.w	r3, r4, #576	; 0x240
 80074d6:	4618      	mov	r0, r3
 80074d8:	f8c4 622c 	str.w	r6, [r4, #556]	; 0x22c
 80074dc:	f8c4 5238 	str.w	r5, [r4, #568]	; 0x238
 80074e0:	f504 7b22 	add.w	fp, r4, #648	; 0x288
 80074e4:	ee08 3a10 	vmov	s16, r3
 80074e8:	f7fc f95a 	bl	80037a0 <_ZN8touchgfx8TextAreaC1Ev>
 80074ec:	4658      	mov	r0, fp
 80074ee:	f00d fa53 	bl	8014998 <_ZN8touchgfx4LineC1Ev>
 80074f2:	f504 733e 	add.w	r3, r4, #760	; 0x2f8
 80074f6:	4618      	mov	r0, r3
 80074f8:	9303      	str	r3, [sp, #12]
 80074fa:	f7fb fef1 	bl	80032e0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80074fe:	f106 0324 	add.w	r3, r6, #36	; 0x24
 8007502:	f8c4 3300 	str.w	r3, [r4, #768]	; 0x300
 8007506:	f504 7343 	add.w	r3, r4, #780	; 0x30c
 800750a:	f8c4 62f8 	str.w	r6, [r4, #760]	; 0x2f8
 800750e:	4618      	mov	r0, r3
 8007510:	f8c4 5304 	str.w	r5, [r4, #772]	; 0x304
 8007514:	ee08 3a90 	vmov	s17, r3
 8007518:	f7fc f942 	bl	80037a0 <_ZN8touchgfx8TextAreaC1Ev>
 800751c:	f504 7355 	add.w	r3, r4, #852	; 0x354
 8007520:	4618      	mov	r0, r3
 8007522:	ee09 3a10 	vmov	s18, r3
 8007526:	f7fc f93b 	bl	80037a0 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800752a:	4a33      	ldr	r2, [pc, #204]	; (80075f8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1f0>)
 800752c:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8007530:	e9c3 246d 	strd	r2, r4, [r3, #436]	; 0x1b4
 8007534:	4a31      	ldr	r2, [pc, #196]	; (80075fc <_ZN28Measurement_AccurateViewBaseC1Ev+0x1f4>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8007536:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800753a:	e9c3 256f 	strd	r2, r5, [r3, #444]	; 0x1bc
 800753e:	f504 7069 	add.w	r0, r4, #932	; 0x3a4
 8007542:	f00f fd29 	bl	8016f98 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8007546:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800754a:	462a      	mov	r2, r5
 800754c:	4650      	mov	r0, sl
 800754e:	9300      	str	r3, [sp, #0]
 8007550:	4629      	mov	r1, r5
 8007552:	23f0      	movs	r3, #240	; 0xf0
 8007554:	f7fc f89b 	bl	800368e <_ZN8touchgfx8Drawable11setPositionEssss>
 8007558:	1d26      	adds	r6, r4, #4
        color = newColor;
 800755a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800755e:	66a3      	str	r3, [r4, #104]	; 0x68
 8007560:	4651      	mov	r1, sl
 8007562:	4630      	mov	r0, r6
 8007564:	f00b f94c 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image_return.setXY(0, 0);
 8007568:	462a      	mov	r2, r5
 800756a:	4648      	mov	r0, r9
 800756c:	4629      	mov	r1, r5
 800756e:	f7fc f881 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
 8007572:	2308      	movs	r3, #8
    image_return.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8007574:	4648      	mov	r0, r9
 8007576:	a90a      	add	r1, sp, #40	; 0x28
 8007578:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800757c:	f00e fd19 	bl	8015fb2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007580:	4649      	mov	r1, r9
 8007582:	4630      	mov	r0, r6
 8007584:	f00b f93c 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_auto_off.setXY(86, 308);
 8007588:	f44f 729a 	mov.w	r2, #308	; 0x134
 800758c:	2156      	movs	r1, #86	; 0x56
 800758e:	4640      	mov	r0, r8
 8007590:	f7fc f870 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
 8007594:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8007598:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 800759c:	f10d 0910 	add.w	r9, sp, #16
        color = newColor;
 80075a0:	f04f 3aff 	mov.w	sl, #4294967295
        boundingArea = calculateBoundingArea();
 80075a4:	4648      	mov	r0, r9
 80075a6:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 80075aa:	f8c4 a0c8 	str.w	sl, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 80075ae:	4641      	mov	r1, r8
 80075b0:	4798      	blx	r3
 80075b2:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 80075b6:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 80075ba:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80075be:	4b10      	ldr	r3, [pc, #64]	; (8007600 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1f8>)
 80075c0:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_CUW4).getText());
 80075c2:	f504 7967 	add.w	r9, r4, #924	; 0x39c
 80075c6:	b92b      	cbnz	r3, 80075d4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1cc>
 80075c8:	4b0e      	ldr	r3, [pc, #56]	; (8007604 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1fc>)
 80075ca:	4a0f      	ldr	r2, [pc, #60]	; (8007608 <_ZN28Measurement_AccurateViewBaseC1Ev+0x200>)
 80075cc:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80075ce:	480f      	ldr	r0, [pc, #60]	; (800760c <_ZN28Measurement_AccurateViewBaseC1Ev+0x204>)
 80075d0:	f026 f9be 	bl	802d950 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80075d4:	4b0e      	ldr	r3, [pc, #56]	; (8007610 <_ZN28Measurement_AccurateViewBaseC1Ev+0x208>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80075d6:	881b      	ldrh	r3, [r3, #0]
 80075d8:	2b40      	cmp	r3, #64	; 0x40
 80075da:	d81d      	bhi.n	8007618 <_ZN28Measurement_AccurateViewBaseC1Ev+0x210>
 80075dc:	4b0d      	ldr	r3, [pc, #52]	; (8007614 <_ZN28Measurement_AccurateViewBaseC1Ev+0x20c>)
 80075de:	4a0a      	ldr	r2, [pc, #40]	; (8007608 <_ZN28Measurement_AccurateViewBaseC1Ev+0x200>)
 80075e0:	2161      	movs	r1, #97	; 0x61
 80075e2:	e7f4      	b.n	80075ce <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c6>
 80075e4:	08030b3c 	.word	0x08030b3c
 80075e8:	08031a58 	.word	0x08031a58
 80075ec:	08031ca4 	.word	0x08031ca4
 80075f0:	0802f5a4 	.word	0x0802f5a4
 80075f4:	0803178c 	.word	0x0803178c
 80075f8:	08030b24 	.word	0x08030b24
 80075fc:	080073cd 	.word	0x080073cd
 8007600:	20013894 	.word	0x20013894
 8007604:	0802f354 	.word	0x0802f354
 8007608:	0802f459 	.word	0x0802f459
 800760c:	0802f3d1 	.word	0x0802f3d1
 8007610:	20013898 	.word	0x20013898
 8007614:	0802f418 	.word	0x0802f418
        return texts->getText(typedTextId);
 8007618:	4bad      	ldr	r3, [pc, #692]	; (80078d0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x4c8>)
 800761a:	2140      	movs	r1, #64	; 0x40
 800761c:	6818      	ldr	r0, [r3, #0]
 800761e:	f003 f83b 	bl	800a698 <_ZNK8touchgfx5Texts7getTextEt>
 8007622:	4aac      	ldr	r2, [pc, #688]	; (80078d4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x4cc>)
 8007624:	4603      	mov	r3, r0
 8007626:	2104      	movs	r1, #4
 8007628:	4648      	mov	r0, r9
 800762a:	f014 fb6f 	bl	801bd0c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea_auto_off.resizeToCurrentText();
 800762e:	4640      	mov	r0, r8
        wc1 = value;
 8007630:	f8c4 90e0 	str.w	r9, [r4, #224]	; 0xe0
 8007634:	f00d feec 	bl	8015410 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8007638:	4ba7      	ldr	r3, [pc, #668]	; (80078d8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x4d0>)
 800763a:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_auto_off.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SQC7));
 800763c:	4640      	mov	r0, r8
 800763e:	2341      	movs	r3, #65	; 0x41
 8007640:	a90a      	add	r1, sp, #40	; 0x28
 8007642:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007646:	f00d ff03 	bl	8015450 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800764a:	4641      	mov	r1, r8
 800764c:	4630      	mov	r0, r6
 800764e:	f00b f8d7 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_Return.setXY(33, 240);
 8007652:	ee19 0a90 	vmov	r0, s19
 8007656:	22f0      	movs	r2, #240	; 0xf0
 8007658:	2121      	movs	r1, #33	; 0x21
 800765a:	f7fc f80b 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
 800765e:	f04f 0802 	mov.w	r8, #2
 8007662:	2303      	movs	r3, #3
    buttonWithLabel_Return.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007664:	a909      	add	r1, sp, #36	; 0x24
 8007666:	ee19 0a90 	vmov	r0, s19
 800766a:	aa0a      	add	r2, sp, #40	; 0x28
 800766c:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8007670:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel_Return.setAction(buttonCallback);
 8007674:	f504 598d 	add.w	r9, r4, #4512	; 0x11a0
    buttonWithLabel_Return.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007678:	f00e faa5 	bl	8015bc6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 800767c:	225e      	movs	r2, #94	; 0x5e
 800767e:	f8a4 211c 	strh.w	r2, [r4, #284]	; 0x11c
    buttonWithLabel_Return.setAction(buttonCallback);
 8007682:	f109 0914 	add.w	r9, r9, #20
        updateTextPosition();
 8007686:	ee19 0a90 	vmov	r0, s19
 800768a:	f7fc f837 	bl	80036fc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 800768e:	ee19 1a90 	vmov	r1, s19
 8007692:	4630      	mov	r0, r6
        colorPressed = col;
 8007694:	e9c4 aa48 	strd	sl, sl, [r4, #288]	; 0x120
 8007698:	f8c4 910c 	str.w	r9, [r4, #268]	; 0x10c
 800769c:	f00b f8b0 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_3Phase.setXY(33, 170);
 80076a0:	ee1a 0a10 	vmov	r0, s20
 80076a4:	22aa      	movs	r2, #170	; 0xaa
 80076a6:	2121      	movs	r1, #33	; 0x21
 80076a8:	f7fb ffe4 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
 80076ac:	2303      	movs	r3, #3
    buttonWithLabel_3Phase.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80076ae:	a909      	add	r1, sp, #36	; 0x24
 80076b0:	ee1a 0a10 	vmov	r0, s20
 80076b4:	aa0a      	add	r2, sp, #40	; 0x28
 80076b6:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80076ba:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 80076be:	f00e fa82 	bl	8015bc6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80076c2:	225d      	movs	r2, #93	; 0x5d
 80076c4:	f8a4 2164 	strh.w	r2, [r4, #356]	; 0x164
        updateTextPosition();
 80076c8:	ee1a 0a10 	vmov	r0, s20
 80076cc:	f7fc f816 	bl	80036fc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80076d0:	ee1a 1a10 	vmov	r1, s20
 80076d4:	4630      	mov	r0, r6
        colorPressed = col;
 80076d6:	e9c4 aa5a 	strd	sl, sl, [r4, #360]	; 0x168
 80076da:	f8c4 9154 	str.w	r9, [r4, #340]	; 0x154
 80076de:	f00b f88f 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_1Phase.setXY(33, 100);
 80076e2:	ee1a 0a90 	vmov	r0, s21
 80076e6:	2264      	movs	r2, #100	; 0x64
 80076e8:	2121      	movs	r1, #33	; 0x21
 80076ea:	f7fb ffc3 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel_1Phase.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80076ee:	aa0a      	add	r2, sp, #40	; 0x28
 80076f0:	2303      	movs	r3, #3
 80076f2:	a909      	add	r1, sp, #36	; 0x24
 80076f4:	ee1a 0a90 	vmov	r0, s21
 80076f8:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80076fc:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8007700:	f00e fa61 	bl	8015bc6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8007704:	235c      	movs	r3, #92	; 0x5c
 8007706:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
        updateTextPosition();
 800770a:	ee1a 0a90 	vmov	r0, s21
 800770e:	f7fb fff5 	bl	80036fc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8007712:	ee1a 1a90 	vmov	r1, s21
 8007716:	4630      	mov	r0, r6
        colorPressed = col;
 8007718:	e9c4 aa6c 	strd	sl, sl, [r4, #432]	; 0x1b0
 800771c:	f8c4 919c 	str.w	r9, [r4, #412]	; 0x19c
 8007720:	f00b f86e 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line2.setPosition(0, 75, 240, 10);
 8007724:	230a      	movs	r3, #10
 8007726:	9300      	str	r3, [sp, #0]
 8007728:	224b      	movs	r2, #75	; 0x4b
 800772a:	23f0      	movs	r3, #240	; 0xf0
 800772c:	4629      	mov	r1, r5
 800772e:	4638      	mov	r0, r7
 8007730:	f7fb ffad 	bl	800368e <_ZN8touchgfx8Drawable11setPositionEssss>
 8007734:	9b02      	ldr	r3, [sp, #8]
 8007736:	f8c4 31e4 	str.w	r3, [r4, #484]	; 0x1e4
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800773a:	22a0      	movs	r2, #160	; 0xa0
 800773c:	4611      	mov	r1, r2
 800773e:	4638      	mov	r0, r7
 8007740:	f8c4 a238 	str.w	sl, [r4, #568]	; 0x238
        color565 = LCD16bpp::getNativeColor(painterColor);
 8007744:	f8a4 a23c 	strh.w	sl, [r4, #572]	; 0x23c
 8007748:	f00d fa3c 	bl	8014bc4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800774c:	22a0      	movs	r2, #160	; 0xa0
 800774e:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8007752:	4638      	mov	r0, r7
 8007754:	f00d fa41 	bl	8014bda <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8007758:	f8d4 31f8 	ldr.w	r3, [r4, #504]	; 0x1f8
 800775c:	2b20      	cmp	r3, #32
 800775e:	d005      	beq.n	800776c <_ZN28Measurement_AccurateViewBaseC1Ev+0x364>
        lineWidthQ5 = widthQ5;
 8007760:	2320      	movs	r3, #32
 8007762:	f8c4 31f8 	str.w	r3, [r4, #504]	; 0x1f8
        updateCachedShape();
 8007766:	4638      	mov	r0, r7
 8007768:	f00d f936 	bl	80149d8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800776c:	4638      	mov	r0, r7
 800776e:	2101      	movs	r1, #1
 8007770:	f00d fa3e 	bl	8014bf0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007774:	4639      	mov	r1, r7
 8007776:	4630      	mov	r0, r6
 8007778:	f00b f842 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 800777c:	f04f 37ff 	mov.w	r7, #4294967295
    textArea_menu.setXY(33, 60);
 8007780:	223c      	movs	r2, #60	; 0x3c
 8007782:	ee18 0a10 	vmov	r0, s16
 8007786:	2121      	movs	r1, #33	; 0x21
        linespace = space;
 8007788:	f04f 0800 	mov.w	r8, #0
        boundingArea = calculateBoundingArea();
 800778c:	ad04      	add	r5, sp, #16
 800778e:	f7fb ff71 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
 8007792:	ee18 1a10 	vmov	r1, s16
 8007796:	4628      	mov	r0, r5
        color = newColor;
 8007798:	f8c4 7270 	str.w	r7, [r4, #624]	; 0x270
        linespace = space;
 800779c:	f8a4 8274 	strh.w	r8, [r4, #628]	; 0x274
        boundingArea = calculateBoundingArea();
 80077a0:	f00d fbbc 	bl	8014f1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80077a4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80077a8:	ee18 3a10 	vmov	r3, s16
 80077ac:	333c      	adds	r3, #60	; 0x3c
 80077ae:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80077b2:	4b49      	ldr	r3, [pc, #292]	; (80078d8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x4d0>)
 80077b4:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_menu.setTypedText(touchgfx::TypedText(T___SINGLEUSE_D7H9));
 80077b6:	ee18 0a10 	vmov	r0, s16
 80077ba:	234f      	movs	r3, #79	; 0x4f
 80077bc:	a90a      	add	r1, sp, #40	; 0x28
 80077be:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80077c2:	f00d fe45 	bl	8015450 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80077c6:	ee18 1a10 	vmov	r1, s16
 80077ca:	4630      	mov	r0, r6
 80077cc:	f00b f818 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80077d0:	230a      	movs	r3, #10
 80077d2:	9300      	str	r3, [sp, #0]
 80077d4:	2232      	movs	r2, #50	; 0x32
 80077d6:	23f0      	movs	r3, #240	; 0xf0
 80077d8:	4641      	mov	r1, r8
 80077da:	4658      	mov	r0, fp
 80077dc:	f7fb ff57 	bl	800368e <_ZN8touchgfx8Drawable11setPositionEssss>
 80077e0:	9b03      	ldr	r3, [sp, #12]
 80077e2:	f8c4 32b0 	str.w	r3, [r4, #688]	; 0x2b0
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80077e6:	22a0      	movs	r2, #160	; 0xa0
 80077e8:	4611      	mov	r1, r2
 80077ea:	4658      	mov	r0, fp
 80077ec:	f8c4 7304 	str.w	r7, [r4, #772]	; 0x304
 80077f0:	f8a4 7308 	strh.w	r7, [r4, #776]	; 0x308
 80077f4:	f00d f9e6 	bl	8014bc4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80077f8:	22a0      	movs	r2, #160	; 0xa0
 80077fa:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80077fe:	4658      	mov	r0, fp
 8007800:	f00d f9eb 	bl	8014bda <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8007804:	f8d4 32c4 	ldr.w	r3, [r4, #708]	; 0x2c4
 8007808:	2b20      	cmp	r3, #32
 800780a:	d005      	beq.n	8007818 <_ZN28Measurement_AccurateViewBaseC1Ev+0x410>
        lineWidthQ5 = widthQ5;
 800780c:	2320      	movs	r3, #32
 800780e:	f8c4 32c4 	str.w	r3, [r4, #708]	; 0x2c4
        updateCachedShape();
 8007812:	4658      	mov	r0, fp
 8007814:	f00d f8e0 	bl	80149d8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8007818:	4658      	mov	r0, fp
 800781a:	2101      	movs	r1, #1
 800781c:	f00d f9e8 	bl	8014bf0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007820:	4659      	mov	r1, fp
 8007822:	4630      	mov	r0, r6
 8007824:	f00a ffec 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8007828:	f04f 38ff 	mov.w	r8, #4294967295
    textArea_name.setXY(69, 35);
 800782c:	ee18 0a90 	vmov	r0, s17
 8007830:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 8007832:	2700      	movs	r7, #0
 8007834:	2145      	movs	r1, #69	; 0x45
 8007836:	f7fb ff1d 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800783a:	ee18 1a90 	vmov	r1, s17
 800783e:	4628      	mov	r0, r5
        color = newColor;
 8007840:	f8c4 833c 	str.w	r8, [r4, #828]	; 0x33c
        linespace = space;
 8007844:	f8a4 7340 	strh.w	r7, [r4, #832]	; 0x340
        boundingArea = calculateBoundingArea();
 8007848:	f00d fb68 	bl	8014f1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800784c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007850:	ee18 3a90 	vmov	r3, s17
 8007854:	333c      	adds	r3, #60	; 0x3c
 8007856:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800785a:	4b1f      	ldr	r3, [pc, #124]	; (80078d8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x4d0>)
 800785c:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_name.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UWMX));
 800785e:	ee18 0a90 	vmov	r0, s17
 8007862:	2360      	movs	r3, #96	; 0x60
 8007864:	a90a      	add	r1, sp, #40	; 0x28
 8007866:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800786a:	f00d fdf1 	bl	8015450 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800786e:	ee18 1a90 	vmov	r1, s17
 8007872:	4630      	mov	r0, r6
 8007874:	f00a ffc4 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_title.setXY(54, 12);
 8007878:	ee19 0a10 	vmov	r0, s18
 800787c:	220c      	movs	r2, #12
 800787e:	2136      	movs	r1, #54	; 0x36
 8007880:	f7fb fef8 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
 8007884:	ee19 1a10 	vmov	r1, s18
 8007888:	4628      	mov	r0, r5
        color = newColor;
 800788a:	f8c4 8384 	str.w	r8, [r4, #900]	; 0x384
        linespace = space;
 800788e:	f8a4 7388 	strh.w	r7, [r4, #904]	; 0x388
        boundingArea = calculateBoundingArea();
 8007892:	f00d fb43 	bl	8014f1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007896:	ee19 2a10 	vmov	r2, s18
 800789a:	f102 033c 	add.w	r3, r2, #60	; 0x3c
 800789e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80078a2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80078a6:	4b0c      	ldr	r3, [pc, #48]	; (80078d8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x4d0>)
 80078a8:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_title.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1X41));
 80078aa:	ee19 0a10 	vmov	r0, s18
 80078ae:	235f      	movs	r3, #95	; 0x5f
 80078b0:	a90a      	add	r1, sp, #40	; 0x28
 80078b2:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80078b6:	f00d fdcb 	bl	8015450 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80078ba:	4630      	mov	r0, r6
 80078bc:	ee19 1a10 	vmov	r1, s18
 80078c0:	f00a ff9e 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80078c4:	4620      	mov	r0, r4
 80078c6:	b00d      	add	sp, #52	; 0x34
 80078c8:	ecbd 8b06 	vpop	{d8-d10}
 80078cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80078d0:	200138a0 	.word	0x200138a0
 80078d4:	0802f491 	.word	0x0802f491
 80078d8:	0802f504 	.word	0x0802f504

080078dc <_ZN36Measurement_Accurate_DisplayViewBase11setupScreenEv>:
}

void Measurement_Accurate_DisplayViewBase::setupScreen()
{

}
 80078dc:	4770      	bx	lr

080078de <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80078de:	4770      	bx	lr

080078e0 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80078e0:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80078e2:	68c2      	ldr	r2, [r0, #12]
 80078e4:	6844      	ldr	r4, [r0, #4]
 80078e6:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80078e8:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80078ea:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80078ee:	07d2      	lsls	r2, r2, #31
 80078f0:	bf48      	it	mi
 80078f2:	5962      	ldrmi	r2, [r4, r5]
 80078f4:	689b      	ldr	r3, [r3, #8]
    }
 80078f6:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80078f8:	bf48      	it	mi
 80078fa:	58d3      	ldrmi	r3, [r2, r3]
 80078fc:	4718      	bx	r3

080078fe <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80078fe:	6843      	ldr	r3, [r0, #4]
 8007900:	b12b      	cbz	r3, 800790e <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8007902:	6883      	ldr	r3, [r0, #8]
 8007904:	b92b      	cbnz	r3, 8007912 <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8007906:	68c0      	ldr	r0, [r0, #12]
 8007908:	f000 0001 	and.w	r0, r0, #1
 800790c:	4770      	bx	lr
 800790e:	4618      	mov	r0, r3
 8007910:	4770      	bx	lr
 8007912:	2001      	movs	r0, #1
    }
 8007914:	4770      	bx	lr

08007916 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007916:	b510      	push	{r4, lr}
 8007918:	2110      	movs	r1, #16
 800791a:	4604      	mov	r4, r0
 800791c:	f025 f931 	bl	802cb82 <_ZdlPvj>
 8007920:	4620      	mov	r0, r4
 8007922:	bd10      	pop	{r4, pc}

08007924 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>:
Measurement_Accurate_DisplayViewBase::~Measurement_Accurate_DisplayViewBase()
 8007924:	b510      	push	{r4, lr}
 8007926:	4b03      	ldr	r3, [pc, #12]	; (8007934 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev+0x10>)
 8007928:	6003      	str	r3, [r0, #0]
 800792a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800792c:	f00f fb3e 	bl	8016fac <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007930:	4620      	mov	r0, r4
 8007932:	bd10      	pop	{r4, pc}
 8007934:	08030b88 	.word	0x08030b88

08007938 <_ZN36Measurement_Accurate_DisplayViewBaseD0Ev>:
Measurement_Accurate_DisplayViewBase::~Measurement_Accurate_DisplayViewBase()
 8007938:	b507      	push	{r0, r1, r2, lr}
 800793a:	4b07      	ldr	r3, [pc, #28]	; (8007958 <_ZN36Measurement_Accurate_DisplayViewBaseD0Ev+0x20>)
 800793c:	6003      	str	r3, [r0, #0]
 800793e:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007940:	f00f fb34 	bl	8016fac <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007944:	9801      	ldr	r0, [sp, #4]
 8007946:	f241 4178 	movw	r1, #5240	; 0x1478
 800794a:	f025 f91a 	bl	802cb82 <_ZdlPvj>
 800794e:	9801      	ldr	r0, [sp, #4]
 8007950:	b003      	add	sp, #12
 8007952:	f85d fb04 	ldr.w	pc, [sp], #4
 8007956:	bf00      	nop
 8007958:	08030b88 	.word	0x08030b88

0800795c <_ZN36Measurement_Accurate_DisplayViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_Accurate_DisplayViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel_Return)
 800795c:	3098      	adds	r0, #152	; 0x98
 800795e:	4288      	cmp	r0, r1
{
 8007960:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel_Return)
 8007962:	d105      	bne.n	8007970 <_ZN36Measurement_Accurate_DisplayViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Accurate_DisplayViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8007964:	f011 f824 	bl	80189b0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel_Return clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards West
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
    }
}
 8007968:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
 800796c:	f7fd be78 	b.w	8005660 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>
}
 8007970:	bd08      	pop	{r3, pc}
	...

08007974 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev>:
Measurement_Accurate_DisplayViewBase::Measurement_Accurate_DisplayViewBase() :
 8007974:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007978:	ed2d 8b0a 	vpush	{d8-d12}
 800797c:	4604      	mov	r4, r0
 800797e:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Accurate_DisplayViewBase::buttonCallbackHandler)
 8007980:	46a0      	mov	r8, r4
 8007982:	2500      	movs	r5, #0
 8007984:	f012 fc94 	bl	801a2b0 <_ZN8touchgfx6ScreenC1Ev>
 8007988:	4bce      	ldr	r3, [pc, #824]	; (8007cc4 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x350>)
 800798a:	63e5      	str	r5, [r4, #60]	; 0x3c
 800798c:	f848 3b40 	str.w	r3, [r8], #64
        : Widget(), alpha(255), color(0)
 8007990:	2226      	movs	r2, #38	; 0x26
 8007992:	4629      	mov	r1, r5
 8007994:	4640      	mov	r0, r8
 8007996:	f026 f9e0 	bl	802dd5a <memset>
 800799a:	4640      	mov	r0, r8
 800799c:	f7fb fe9c 	bl	80036d8 <_ZN8touchgfx6WidgetC1Ev>
 80079a0:	f104 076c 	add.w	r7, r4, #108	; 0x6c
 80079a4:	26ff      	movs	r6, #255	; 0xff
 80079a6:	4bc8      	ldr	r3, [pc, #800]	; (8007cc8 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x354>)
 80079a8:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 80079aa:	2226      	movs	r2, #38	; 0x26
 80079ac:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80079b0:	4629      	mov	r1, r5
 80079b2:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80079b6:	4638      	mov	r0, r7
 80079b8:	66a5      	str	r5, [r4, #104]	; 0x68
 80079ba:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80079be:	f026 f9cc 	bl	802dd5a <memset>
 80079c2:	4638      	mov	r0, r7
 80079c4:	f7fb fe88 	bl	80036d8 <_ZN8touchgfx6WidgetC1Ev>
 80079c8:	4bc0      	ldr	r3, [pc, #768]	; (8007ccc <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x358>)
 80079ca:	66e3      	str	r3, [r4, #108]	; 0x6c
 80079cc:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80079d0:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80079d4:	a90a      	add	r1, sp, #40	; 0x28
 80079d6:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 80079da:	4638      	mov	r0, r7
        : Widget(), bitmap(bmp), alpha(255)
 80079dc:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80079e0:	f00e fae7 	bl	8015fb2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80079e4:	4658      	mov	r0, fp
 80079e6:	f00e fc1b 	bl	8016220 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80079ea:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 80079ee:	f504 7994 	add.w	r9, r4, #296	; 0x128
 80079f2:	4618      	mov	r0, r3
 80079f4:	ee0a 3a90 	vmov	s21, r3
 80079f8:	f7fb fed2 	bl	80037a0 <_ZN8touchgfx8TextAreaC1Ev>
 80079fc:	4648      	mov	r0, r9
 80079fe:	f7fb fecf 	bl	80037a0 <_ZN8touchgfx8TextAreaC1Ev>
 8007a02:	f504 73b8 	add.w	r3, r4, #368	; 0x170
 8007a06:	4618      	mov	r0, r3
 8007a08:	ee0b 3a10 	vmov	s22, r3
 8007a0c:	f7fb fec8 	bl	80037a0 <_ZN8touchgfx8TextAreaC1Ev>
 8007a10:	f504 73dc 	add.w	r3, r4, #440	; 0x1b8
        : TextArea()
 8007a14:	4618      	mov	r0, r3
 8007a16:	ee0b 3a90 	vmov	s23, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8007a1a:	4ead      	ldr	r6, [pc, #692]	; (8007cd0 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x35c>)
        : TextArea()
 8007a1c:	f7fb fec0 	bl	80037a0 <_ZN8touchgfx8TextAreaC1Ev>
 8007a20:	f504 7301 	add.w	r3, r4, #516	; 0x204
        : TextAreaWithWildcardBase(), wc1(0)
 8007a24:	f8c4 61b8 	str.w	r6, [r4, #440]	; 0x1b8
        : TextArea()
 8007a28:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8007a2a:	f8c4 5200 	str.w	r5, [r4, #512]	; 0x200
 8007a2e:	ee0c 3a10 	vmov	s24, r3
        : TextArea()
 8007a32:	f7fb feb5 	bl	80037a0 <_ZN8touchgfx8TextAreaC1Ev>
 8007a36:	f504 7314 	add.w	r3, r4, #592	; 0x250
 8007a3a:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8007a3c:	f8c4 6204 	str.w	r6, [r4, #516]	; 0x204
 8007a40:	f8c4 524c 	str.w	r5, [r4, #588]	; 0x24c
 8007a44:	f504 7a27 	add.w	sl, r4, #668	; 0x29c
 8007a48:	ee0c 3a90 	vmov	s25, r3
        : TextArea()
 8007a4c:	f7fb fea8 	bl	80037a0 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8007a50:	f8c4 6250 	str.w	r6, [r4, #592]	; 0x250
 8007a54:	f8c4 5298 	str.w	r5, [r4, #664]	; 0x298
 8007a58:	4650      	mov	r0, sl
 8007a5a:	f00d ff6d 	bl	8015938 <_ZN8touchgfx5GaugeC1Ev>
 8007a5e:	f204 433c 	addw	r3, r4, #1084	; 0x43c
 8007a62:	4618      	mov	r0, r3
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8007a64:	4e9b      	ldr	r6, [pc, #620]	; (8007cd4 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x360>)
 8007a66:	ee08 3a10 	vmov	s16, r3
 8007a6a:	f00c ff95 	bl	8014998 <_ZN8touchgfx4LineC1Ev>
 8007a6e:	f204 43ac 	addw	r3, r4, #1196	; 0x4ac
 8007a72:	4618      	mov	r0, r3
 8007a74:	9302      	str	r3, [sp, #8]
 8007a76:	f7fb fc33 	bl	80032e0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8007a7a:	f106 0324 	add.w	r3, r6, #36	; 0x24
 8007a7e:	f8c4 34b4 	str.w	r3, [r4, #1204]	; 0x4b4
 8007a82:	f504 6398 	add.w	r3, r4, #1216	; 0x4c0
 8007a86:	f8c4 64ac 	str.w	r6, [r4, #1196]	; 0x4ac
 8007a8a:	4618      	mov	r0, r3
 8007a8c:	f8c4 54b8 	str.w	r5, [r4, #1208]	; 0x4b8
 8007a90:	ee09 3a10 	vmov	s18, r3
 8007a94:	f7fb fe84 	bl	80037a0 <_ZN8touchgfx8TextAreaC1Ev>
 8007a98:	f504 63a1 	add.w	r3, r4, #1288	; 0x508
 8007a9c:	4618      	mov	r0, r3
 8007a9e:	ee08 3a90 	vmov	s17, r3
 8007aa2:	f00c ff79 	bl	8014998 <_ZN8touchgfx4LineC1Ev>
 8007aa6:	f504 63af 	add.w	r3, r4, #1400	; 0x578
 8007aaa:	4618      	mov	r0, r3
 8007aac:	9303      	str	r3, [sp, #12]
 8007aae:	f7fb fc17 	bl	80032e0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8007ab2:	f106 0324 	add.w	r3, r6, #36	; 0x24
 8007ab6:	f8c4 3580 	str.w	r3, [r4, #1408]	; 0x580
 8007aba:	f204 538c 	addw	r3, r4, #1420	; 0x58c
 8007abe:	f8c4 6578 	str.w	r6, [r4, #1400]	; 0x578
 8007ac2:	4618      	mov	r0, r3
 8007ac4:	f8c4 5584 	str.w	r5, [r4, #1412]	; 0x584
 8007ac8:	ee09 3a90 	vmov	s19, r3
 8007acc:	f7fb fe68 	bl	80037a0 <_ZN8touchgfx8TextAreaC1Ev>
 8007ad0:	f204 53d4 	addw	r3, r4, #1492	; 0x5d4
 8007ad4:	4618      	mov	r0, r3
 8007ad6:	ee0a 3a10 	vmov	s20, r3
 8007ada:	f7fb fe61 	bl	80037a0 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8007ade:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8007ae2:	4a7d      	ldr	r2, [pc, #500]	; (8007cd8 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x364>)
 8007ae4:	f8c3 2468 	str.w	r2, [r3, #1128]	; 0x468
 8007ae8:	4a7c      	ldr	r2, [pc, #496]	; (8007cdc <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x368>)
 8007aea:	f8c3 2470 	str.w	r2, [r3, #1136]	; 0x470
 8007aee:	f8c3 446c 	str.w	r4, [r3, #1132]	; 0x46c
 8007af2:	f8c3 5474 	str.w	r5, [r3, #1140]	; 0x474
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8007af6:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8007afa:	f504 60cb 	add.w	r0, r4, #1624	; 0x658
 8007afe:	f00f fa4b 	bl	8016f98 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8007b02:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8007b06:	462a      	mov	r2, r5
 8007b08:	4640      	mov	r0, r8
 8007b0a:	9300      	str	r3, [sp, #0]
 8007b0c:	4629      	mov	r1, r5
 8007b0e:	23f0      	movs	r3, #240	; 0xf0
 8007b10:	f7fb fdbd 	bl	800368e <_ZN8touchgfx8Drawable11setPositionEssss>
 8007b14:	1d26      	adds	r6, r4, #4
        color = newColor;
 8007b16:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8007b1a:	66a3      	str	r3, [r4, #104]	; 0x68
 8007b1c:	4641      	mov	r1, r8
 8007b1e:	4630      	mov	r0, r6
 8007b20:	f00a fe6e 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image_background.setXY(0, 0);
 8007b24:	462a      	mov	r2, r5
 8007b26:	4638      	mov	r0, r7
 8007b28:	4629      	mov	r1, r5
 8007b2a:	f7fb fda3 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
 8007b2e:	f04f 0308 	mov.w	r3, #8
    image_background.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8007b32:	4638      	mov	r0, r7
 8007b34:	a90a      	add	r1, sp, #40	; 0x28
 8007b36:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007b3a:	f00e fa3a 	bl	8015fb2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007b3e:	4639      	mov	r1, r7
 8007b40:	4630      	mov	r0, r6
 8007b42:	f00a fe5d 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_Return.setXY(33, 257);
 8007b46:	4658      	mov	r0, fp
 8007b48:	f240 1201 	movw	r2, #257	; 0x101
 8007b4c:	2121      	movs	r1, #33	; 0x21
 8007b4e:	f7fb fd91 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
 8007b52:	2303      	movs	r3, #3
    buttonWithLabel_Return.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007b54:	a909      	add	r1, sp, #36	; 0x24
 8007b56:	4658      	mov	r0, fp
 8007b58:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8007b5c:	aa0a      	add	r2, sp, #40	; 0x28
 8007b5e:	2302      	movs	r3, #2
 8007b60:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007b64:	f00e f82f 	bl	8015bc6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8007b68:	f04f 024b 	mov.w	r2, #75	; 0x4b
 8007b6c:	f8a4 20d0 	strh.w	r2, [r4, #208]	; 0xd0
        updateTextPosition();
 8007b70:	4658      	mov	r0, fp
 8007b72:	f7fb fdc3 	bl	80036fc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel_Return.setAction(buttonCallback);
 8007b76:	f504 53a3 	add.w	r3, r4, #5216	; 0x1460
        color = col;
 8007b7a:	f04f 38ff 	mov.w	r8, #4294967295
 8007b7e:	3308      	adds	r3, #8
 8007b80:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8007b84:	4659      	mov	r1, fp
 8007b86:	4630      	mov	r0, r6
        colorPressed = col;
 8007b88:	e9c4 8835 	strd	r8, r8, [r4, #212]	; 0xd4
 8007b8c:	af04      	add	r7, sp, #16
 8007b8e:	f00a fe37 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_n90C.setXY(0, 194);
 8007b92:	22c2      	movs	r2, #194	; 0xc2
 8007b94:	ee1a 0a90 	vmov	r0, s21
 8007b98:	4629      	mov	r1, r5
 8007b9a:	f7fb fd6b 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
 8007b9e:	ee1a 1a90 	vmov	r1, s21
 8007ba2:	4638      	mov	r0, r7
        color = newColor;
 8007ba4:	f8c4 8110 	str.w	r8, [r4, #272]	; 0x110
        linespace = space;
 8007ba8:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8007bac:	f00d f9b6 	bl	8014f1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007bb0:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8007bb4:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 8007bb8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8007bbc:	f04f 0b0a 	mov.w	fp, #10
 8007bc0:	4b47      	ldr	r3, [pc, #284]	; (8007ce0 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x36c>)
 8007bc2:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_n90C.setTypedText(touchgfx::TypedText(T___SINGLEUSE_HYQ8));
 8007bc4:	ee1a 0a90 	vmov	r0, s21
 8007bc8:	a90a      	add	r1, sp, #40	; 0x28
 8007bca:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 8007bce:	f00d fc3f 	bl	8015450 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007bd2:	ee1a 1a90 	vmov	r1, s21
 8007bd6:	4630      	mov	r0, r6
 8007bd8:	f00a fe12 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_p90C.setXY(217, 194);
 8007bdc:	22c2      	movs	r2, #194	; 0xc2
 8007bde:	4648      	mov	r0, r9
 8007be0:	21d9      	movs	r1, #217	; 0xd9
 8007be2:	f7fb fd47 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
 8007be6:	4649      	mov	r1, r9
 8007be8:	4638      	mov	r0, r7
        color = newColor;
 8007bea:	f8c4 8158 	str.w	r8, [r4, #344]	; 0x158
        linespace = space;
 8007bee:	f8a4 515c 	strh.w	r5, [r4, #348]	; 0x15c
        boundingArea = calculateBoundingArea();
 8007bf2:	f00d f993 	bl	8014f1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007bf6:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8007bfa:	f504 73b2 	add.w	r3, r4, #356	; 0x164
 8007bfe:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007c02:	4b37      	ldr	r3, [pc, #220]	; (8007ce0 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x36c>)
 8007c04:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_p90C.setTypedText(touchgfx::TypedText(T___SINGLEUSE_MW1V));
 8007c06:	4648      	mov	r0, r9
 8007c08:	2309      	movs	r3, #9
 8007c0a:	a90a      	add	r1, sp, #40	; 0x28
 8007c0c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007c10:	f00d fc1e 	bl	8015450 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007c14:	4649      	mov	r1, r9
 8007c16:	4630      	mov	r0, r6
 8007c18:	f00a fdf2 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_0C.setXY(113, 85);
 8007c1c:	2255      	movs	r2, #85	; 0x55
 8007c1e:	ee1b 0a10 	vmov	r0, s22
 8007c22:	2171      	movs	r1, #113	; 0x71
 8007c24:	f7fb fd26 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
 8007c28:	ee1b 1a10 	vmov	r1, s22
 8007c2c:	4638      	mov	r0, r7
        color = newColor;
 8007c2e:	f8c4 81a0 	str.w	r8, [r4, #416]	; 0x1a0
        linespace = space;
 8007c32:	f8a4 51a4 	strh.w	r5, [r4, #420]	; 0x1a4
        boundingArea = calculateBoundingArea();
 8007c36:	f00d f971 	bl	8014f1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007c3a:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8007c3e:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 8007c42:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007c46:	4b26      	ldr	r3, [pc, #152]	; (8007ce0 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x36c>)
 8007c48:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_0C.setTypedText(touchgfx::TypedText(T___SINGLEUSE_H3VA));
 8007c4a:	ee1b 0a10 	vmov	r0, s22
 8007c4e:	f04f 0308 	mov.w	r3, #8
 8007c52:	a90a      	add	r1, sp, #40	; 0x28
 8007c54:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007c58:	f00d fbfa 	bl	8015450 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007c5c:	ee1b 1a10 	vmov	r1, s22
 8007c60:	4630      	mov	r0, r6
 8007c62:	f00a fdcd 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    AMD1_Current.setPosition(0, 239, 240, 15);
 8007c66:	230f      	movs	r3, #15
 8007c68:	22ef      	movs	r2, #239	; 0xef
 8007c6a:	ee1b 0a90 	vmov	r0, s23
 8007c6e:	9300      	str	r3, [sp, #0]
 8007c70:	4629      	mov	r1, r5
 8007c72:	23f0      	movs	r3, #240	; 0xf0
 8007c74:	f7fb fd0b 	bl	800368e <_ZN8touchgfx8Drawable11setPositionEssss>
 8007c78:	f8d4 31b8 	ldr.w	r3, [r4, #440]	; 0x1b8
        color = newColor;
 8007c7c:	f8c4 81e8 	str.w	r8, [r4, #488]	; 0x1e8
        boundingArea = calculateBoundingArea();
 8007c80:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8007c84:	f8a4 51ec 	strh.w	r5, [r4, #492]	; 0x1ec
        boundingArea = calculateBoundingArea();
 8007c88:	ee1b 1a90 	vmov	r1, s23
 8007c8c:	4638      	mov	r0, r7
 8007c8e:	4798      	blx	r3
 8007c90:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8007c94:	f504 73fa 	add.w	r3, r4, #500	; 0x1f4
 8007c98:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007c9c:	4b11      	ldr	r3, [pc, #68]	; (8007ce4 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x370>)
 8007c9e:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(AMD1_CurrentBuffer, AMD1_CURRENT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_DKHH).getText());
 8007ca0:	f204 691c 	addw	r9, r4, #1564	; 0x61c
 8007ca4:	b92b      	cbnz	r3, 8007cb2 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x33e>
 8007ca6:	4b10      	ldr	r3, [pc, #64]	; (8007ce8 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x374>)
 8007ca8:	4a10      	ldr	r2, [pc, #64]	; (8007cec <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x378>)
 8007caa:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007cac:	4810      	ldr	r0, [pc, #64]	; (8007cf0 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x37c>)
 8007cae:	f025 fe4f 	bl	802d950 <__assert_func>
 8007cb2:	4b10      	ldr	r3, [pc, #64]	; (8007cf4 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x380>)
 8007cb4:	881b      	ldrh	r3, [r3, #0]
 8007cb6:	2b0e      	cmp	r3, #14
 8007cb8:	d820      	bhi.n	8007cfc <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x388>
 8007cba:	4b0f      	ldr	r3, [pc, #60]	; (8007cf8 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x384>)
 8007cbc:	4a0b      	ldr	r2, [pc, #44]	; (8007cec <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x378>)
 8007cbe:	2161      	movs	r1, #97	; 0x61
 8007cc0:	e7f4      	b.n	8007cac <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x338>
 8007cc2:	bf00      	nop
 8007cc4:	08030b88 	.word	0x08030b88
 8007cc8:	08031a58 	.word	0x08031a58
 8007ccc:	08031ca4 	.word	0x08031ca4
 8007cd0:	0802f5a4 	.word	0x0802f5a4
 8007cd4:	0803178c 	.word	0x0803178c
 8007cd8:	08030b70 	.word	0x08030b70
 8007cdc:	0800795d 	.word	0x0800795d
 8007ce0:	0802f504 	.word	0x0802f504
 8007ce4:	20013894 	.word	0x20013894
 8007ce8:	0802f354 	.word	0x0802f354
 8007cec:	0802f459 	.word	0x0802f459
 8007cf0:	0802f3d1 	.word	0x0802f3d1
 8007cf4:	20013898 	.word	0x20013898
 8007cf8:	0802f418 	.word	0x0802f418
        return texts->getText(typedTextId);
 8007cfc:	4bde      	ldr	r3, [pc, #888]	; (8008078 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x704>)
 8007cfe:	210e      	movs	r1, #14
 8007d00:	6818      	ldr	r0, [r3, #0]
 8007d02:	f002 fcc9 	bl	800a698 <_ZNK8touchgfx5Texts7getTextEt>
 8007d06:	4add      	ldr	r2, [pc, #884]	; (800807c <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x708>)
 8007d08:	4603      	mov	r3, r0
 8007d0a:	4659      	mov	r1, fp
 8007d0c:	4648      	mov	r0, r9
 8007d0e:	f013 fffd 	bl	801bd0c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8007d12:	f04f 010f 	mov.w	r1, #15
 8007d16:	4ada      	ldr	r2, [pc, #872]	; (8008080 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x70c>)
        wc1 = value;
 8007d18:	f8c4 9200 	str.w	r9, [r4, #512]	; 0x200
    AMD1_Current.setTypedText(touchgfx::TypedText(T_AMD3_CURRENTAMD1_CURRENT));
 8007d1c:	ee1b 0a90 	vmov	r0, s23
 8007d20:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 8007d24:	a90a      	add	r1, sp, #40	; 0x28
 8007d26:	920a      	str	r2, [sp, #40]	; 0x28
 8007d28:	f00d fb92 	bl	8015450 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007d2c:	ee1b 1a90 	vmov	r1, s23
 8007d30:	4630      	mov	r0, r6
 8007d32:	f00a fd65 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    AMD1_Frequency.setPosition(0, 224, 240, 15);
 8007d36:	210f      	movs	r1, #15
 8007d38:	22e0      	movs	r2, #224	; 0xe0
 8007d3a:	ee1c 0a10 	vmov	r0, s24
 8007d3e:	9100      	str	r1, [sp, #0]
 8007d40:	23f0      	movs	r3, #240	; 0xf0
 8007d42:	4629      	mov	r1, r5
 8007d44:	f7fb fca3 	bl	800368e <_ZN8touchgfx8Drawable11setPositionEssss>
 8007d48:	f8d4 3204 	ldr.w	r3, [r4, #516]	; 0x204
        color = newColor;
 8007d4c:	f8c4 8234 	str.w	r8, [r4, #564]	; 0x234
        boundingArea = calculateBoundingArea();
 8007d50:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8007d54:	f8a4 5238 	strh.w	r5, [r4, #568]	; 0x238
        boundingArea = calculateBoundingArea();
 8007d58:	ee1c 1a10 	vmov	r1, s24
 8007d5c:	4638      	mov	r0, r7
 8007d5e:	4798      	blx	r3
 8007d60:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8007d64:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8007d68:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007d6c:	49c5      	ldr	r1, [pc, #788]	; (8008084 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x710>)
 8007d6e:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(AMD1_FrequencyBuffer, AMD1_FREQUENCY_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_23ZO).getText());
 8007d70:	f504 69c6 	add.w	r9, r4, #1584	; 0x630
 8007d74:	2b00      	cmp	r3, #0
 8007d76:	d096      	beq.n	8007ca6 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x332>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007d78:	48c3      	ldr	r0, [pc, #780]	; (8008088 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x714>)
 8007d7a:	8803      	ldrh	r3, [r0, #0]
 8007d7c:	2b0c      	cmp	r3, #12
 8007d7e:	d99c      	bls.n	8007cba <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x346>
        return texts->getText(typedTextId);
 8007d80:	4bbd      	ldr	r3, [pc, #756]	; (8008078 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x704>)
 8007d82:	210c      	movs	r1, #12
 8007d84:	6818      	ldr	r0, [r3, #0]
 8007d86:	f002 fc87 	bl	800a698 <_ZNK8touchgfx5Texts7getTextEt>
 8007d8a:	4abc      	ldr	r2, [pc, #752]	; (800807c <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x708>)
 8007d8c:	4603      	mov	r3, r0
 8007d8e:	4659      	mov	r1, fp
 8007d90:	4648      	mov	r0, r9
 8007d92:	f013 ffbb 	bl	801bd0c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    AMD1_Frequency.setTypedText(touchgfx::TypedText(T_AMD3_FREQUENCY));
 8007d96:	f10d 0c28 	add.w	ip, sp, #40	; 0x28
        : typedTextId(id)
 8007d9a:	4ab9      	ldr	r2, [pc, #740]	; (8008080 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x70c>)
 8007d9c:	f8c4 924c 	str.w	r9, [r4, #588]	; 0x24c
 8007da0:	230d      	movs	r3, #13
 8007da2:	4661      	mov	r1, ip
 8007da4:	ee1c 0a10 	vmov	r0, s24
 8007da8:	920a      	str	r2, [sp, #40]	; 0x28
 8007daa:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007dae:	f00d fb4f 	bl	8015450 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007db2:	ee1c 1a10 	vmov	r1, s24
 8007db6:	4630      	mov	r0, r6
 8007db8:	f00a fd22 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    AMD1_Distance.setPosition(0, 209, 240, 15);
 8007dbc:	f04f 0c0f 	mov.w	ip, #15
 8007dc0:	22d1      	movs	r2, #209	; 0xd1
 8007dc2:	ee1c 0a90 	vmov	r0, s25
 8007dc6:	f8cd c000 	str.w	ip, [sp]
 8007dca:	23f0      	movs	r3, #240	; 0xf0
 8007dcc:	4629      	mov	r1, r5
 8007dce:	f7fb fc5e 	bl	800368e <_ZN8touchgfx8Drawable11setPositionEssss>
 8007dd2:	f8d4 3250 	ldr.w	r3, [r4, #592]	; 0x250
        color = newColor;
 8007dd6:	f8c4 8280 	str.w	r8, [r4, #640]	; 0x280
        boundingArea = calculateBoundingArea();
 8007dda:	4638      	mov	r0, r7
 8007ddc:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8007de0:	f8a4 5284 	strh.w	r5, [r4, #644]	; 0x284
        boundingArea = calculateBoundingArea();
 8007de4:	ee1c 1a90 	vmov	r1, s25
 8007de8:	4798      	blx	r3
 8007dea:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8007dee:	f504 7323 	add.w	r3, r4, #652	; 0x28c
 8007df2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007df6:	49a3      	ldr	r1, [pc, #652]	; (8008084 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x710>)
 8007df8:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(AMD1_DistanceBuffer, AMD1_DISTANCE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_7DZL).getText());
 8007dfa:	f204 6744 	addw	r7, r4, #1604	; 0x644
 8007dfe:	2b00      	cmp	r3, #0
 8007e00:	f43f af51 	beq.w	8007ca6 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x332>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007e04:	48a0      	ldr	r0, [pc, #640]	; (8008088 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x714>)
 8007e06:	8803      	ldrh	r3, [r0, #0]
 8007e08:	2b0b      	cmp	r3, #11
 8007e0a:	f67f af56 	bls.w	8007cba <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x346>
        return texts->getText(typedTextId);
 8007e0e:	4b9a      	ldr	r3, [pc, #616]	; (8008078 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x704>)
 8007e10:	210b      	movs	r1, #11
 8007e12:	6818      	ldr	r0, [r3, #0]
 8007e14:	f002 fc40 	bl	800a698 <_ZNK8touchgfx5Texts7getTextEt>
 8007e18:	4a98      	ldr	r2, [pc, #608]	; (800807c <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x708>)
 8007e1a:	4603      	mov	r3, r0
 8007e1c:	4659      	mov	r1, fp
 8007e1e:	4638      	mov	r0, r7
 8007e20:	f013 ff74 	bl	801bd0c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8007e24:	4a96      	ldr	r2, [pc, #600]	; (8008080 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x70c>)
 8007e26:	f8c4 7298 	str.w	r7, [r4, #664]	; 0x298
 8007e2a:	2336      	movs	r3, #54	; 0x36
    AMD1_Distance.setTypedText(touchgfx::TypedText(T_AMD3_DISTANCE));
 8007e2c:	ee1c 0a90 	vmov	r0, s25
 8007e30:	a90a      	add	r1, sp, #40	; 0x28
 8007e32:	920a      	str	r2, [sp, #40]	; 0x28
 8007e34:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007e38:	f00d fb0a 	bl	8015450 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007e3c:	ee1c 1a90 	vmov	r1, s25
 8007e40:	4630      	mov	r0, r6
 8007e42:	f00a fcdd 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007e46:	2304      	movs	r3, #4
    AMD1_Gauge.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_BACKGROUNDS_LIGHT_PRECISION_ID));
 8007e48:	a90a      	add	r1, sp, #40	; 0x28
 8007e4a:	4650      	mov	r0, sl
 8007e4c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007e50:	f00a fc68 	bl	8012724 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    AMD1_Gauge.setPosition(28, 103, 184, 106);
 8007e54:	236a      	movs	r3, #106	; 0x6a
 8007e56:	9300      	str	r3, [sp, #0]
 8007e58:	2267      	movs	r2, #103	; 0x67
 8007e5a:	23b8      	movs	r3, #184	; 0xb8
 8007e5c:	211c      	movs	r1, #28
 8007e5e:	4650      	mov	r0, sl
 8007e60:	f7fb fc15 	bl	800368e <_ZN8touchgfx8Drawable11setPositionEssss>
    AMD1_Gauge.setCenter(92, 92);
 8007e64:	225c      	movs	r2, #92	; 0x5c
 8007e66:	4611      	mov	r1, r2
 8007e68:	4650      	mov	r0, sl
 8007e6a:	f00d fe10 	bl	8015a8e <_ZN8touchgfx5Gauge9setCenterEii>
    AMD1_Gauge.setStartEndAngle(-90, 90);
 8007e6e:	225a      	movs	r2, #90	; 0x5a
 8007e70:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8007e74:	4650      	mov	r0, sl
 8007e76:	f00d fe8f 	bl	8015b98 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    AMD1_Gauge.setRange(-90, 90);
 8007e7a:	462b      	mov	r3, r5
 8007e7c:	225a      	movs	r2, #90	; 0x5a
 8007e7e:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8007e82:	4650      	mov	r0, sl
 8007e84:	9500      	str	r5, [sp, #0]
 8007e86:	f00a fafa 	bl	801247e <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    AMD1_Gauge.setValue(0);
 8007e8a:	4629      	mov	r1, r5
 8007e8c:	4650      	mov	r0, sl
 8007e8e:	f00d fe2d 	bl	8015aec <_ZN8touchgfx5Gauge8setValueEi>
    AMD1_Gauge.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_NEEDLES_ROUGH_ID, 8, 53);
 8007e92:	2335      	movs	r3, #53	; 0x35
 8007e94:	2208      	movs	r2, #8
 8007e96:	2105      	movs	r1, #5
 8007e98:	4650      	mov	r0, sl
 8007e9a:	f00d fde3 	bl	8015a64 <_ZN8touchgfx5Gauge9setNeedleEtss>
    AMD1_Gauge.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8007e9e:	2101      	movs	r1, #1
 8007ea0:	4650      	mov	r0, sl
 8007ea2:	f00d fd81 	bl	80159a8 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    AMD1_Gauge.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8007ea6:	2101      	movs	r1, #1
 8007ea8:	4650      	mov	r0, sl
 8007eaa:	f00d fd80 	bl	80159ae <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
 8007eae:	4651      	mov	r1, sl
 8007eb0:	4630      	mov	r0, r6
 8007eb2:	f00a fca5 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line2.setPosition(0, 75, 240, 10);
 8007eb6:	ee18 0a10 	vmov	r0, s16
 8007eba:	23f0      	movs	r3, #240	; 0xf0
 8007ebc:	224b      	movs	r2, #75	; 0x4b
 8007ebe:	4629      	mov	r1, r5
 8007ec0:	f8cd b000 	str.w	fp, [sp]
 8007ec4:	f7fb fbe3 	bl	800368e <_ZN8touchgfx8Drawable11setPositionEssss>
 8007ec8:	9b02      	ldr	r3, [sp, #8]
 8007eca:	f8c4 3464 	str.w	r3, [r4, #1124]	; 0x464
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007ece:	22a0      	movs	r2, #160	; 0xa0
 8007ed0:	4611      	mov	r1, r2
 8007ed2:	ee18 0a10 	vmov	r0, s16
 8007ed6:	f8c4 84b8 	str.w	r8, [r4, #1208]	; 0x4b8
        color565 = LCD16bpp::getNativeColor(painterColor);
 8007eda:	f8a4 84bc 	strh.w	r8, [r4, #1212]	; 0x4bc
 8007ede:	f00c fe71 	bl	8014bc4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007ee2:	ee18 0a10 	vmov	r0, s16
 8007ee6:	22a0      	movs	r2, #160	; 0xa0
 8007ee8:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8007eec:	f00c fe75 	bl	8014bda <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8007ef0:	f8d4 3478 	ldr.w	r3, [r4, #1144]	; 0x478
 8007ef4:	2b20      	cmp	r3, #32
 8007ef6:	d006      	beq.n	8007f06 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x592>
        lineWidthQ5 = widthQ5;
 8007ef8:	2320      	movs	r3, #32
        updateCachedShape();
 8007efa:	ee18 0a10 	vmov	r0, s16
        lineWidthQ5 = widthQ5;
 8007efe:	f8c4 3478 	str.w	r3, [r4, #1144]	; 0x478
        updateCachedShape();
 8007f02:	f00c fd69 	bl	80149d8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8007f06:	ee18 0a10 	vmov	r0, s16
 8007f0a:	2101      	movs	r1, #1
 8007f0c:	f00c fe70 	bl	8014bf0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007f10:	ee18 1a10 	vmov	r1, s16
 8007f14:	4630      	mov	r0, r6
 8007f16:	f00a fc73 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8007f1a:	f04f 38ff 	mov.w	r8, #4294967295
    textArea_menu.setXY(23, 60);
 8007f1e:	223c      	movs	r2, #60	; 0x3c
 8007f20:	ee19 0a10 	vmov	r0, s18
 8007f24:	2117      	movs	r1, #23
        linespace = space;
 8007f26:	f04f 0900 	mov.w	r9, #0
        boundingArea = calculateBoundingArea();
 8007f2a:	ad04      	add	r5, sp, #16
 8007f2c:	f7fb fba2 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
 8007f30:	ee19 1a10 	vmov	r1, s18
 8007f34:	4628      	mov	r0, r5
        color = newColor;
 8007f36:	f8c4 84f0 	str.w	r8, [r4, #1264]	; 0x4f0
        linespace = space;
 8007f3a:	f8a4 94f4 	strh.w	r9, [r4, #1268]	; 0x4f4
        boundingArea = calculateBoundingArea();
 8007f3e:	f00c ffed 	bl	8014f1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007f42:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007f46:	ee19 3a10 	vmov	r3, s18
 8007f4a:	333c      	adds	r3, #60	; 0x3c
 8007f4c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007f50:	4f4b      	ldr	r7, [pc, #300]	; (8008080 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x70c>)
 8007f52:	970a      	str	r7, [sp, #40]	; 0x28
 8007f54:	234c      	movs	r3, #76	; 0x4c
    textArea_menu.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZR32));
 8007f56:	ee19 0a10 	vmov	r0, s18
 8007f5a:	a90a      	add	r1, sp, #40	; 0x28
 8007f5c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007f60:	f00d fa76 	bl	8015450 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007f64:	ee19 1a10 	vmov	r1, s18
 8007f68:	4630      	mov	r0, r6
 8007f6a:	f00a fc49 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8007f6e:	230a      	movs	r3, #10
 8007f70:	ee18 0a90 	vmov	r0, s17
 8007f74:	9300      	str	r3, [sp, #0]
 8007f76:	2232      	movs	r2, #50	; 0x32
 8007f78:	23f0      	movs	r3, #240	; 0xf0
 8007f7a:	4649      	mov	r1, r9
 8007f7c:	f7fb fb87 	bl	800368e <_ZN8touchgfx8Drawable11setPositionEssss>
 8007f80:	9b03      	ldr	r3, [sp, #12]
 8007f82:	f8c4 3530 	str.w	r3, [r4, #1328]	; 0x530
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007f86:	22a0      	movs	r2, #160	; 0xa0
 8007f88:	4611      	mov	r1, r2
 8007f8a:	ee18 0a90 	vmov	r0, s17
 8007f8e:	f8c4 8584 	str.w	r8, [r4, #1412]	; 0x584
 8007f92:	f8a4 8588 	strh.w	r8, [r4, #1416]	; 0x588
 8007f96:	f00c fe15 	bl	8014bc4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007f9a:	ee18 0a90 	vmov	r0, s17
 8007f9e:	22a0      	movs	r2, #160	; 0xa0
 8007fa0:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8007fa4:	f00c fe19 	bl	8014bda <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8007fa8:	f8d4 3544 	ldr.w	r3, [r4, #1348]	; 0x544
 8007fac:	2b20      	cmp	r3, #32
 8007fae:	d006      	beq.n	8007fbe <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x64a>
        lineWidthQ5 = widthQ5;
 8007fb0:	2320      	movs	r3, #32
        updateCachedShape();
 8007fb2:	ee18 0a90 	vmov	r0, s17
        lineWidthQ5 = widthQ5;
 8007fb6:	f8c4 3544 	str.w	r3, [r4, #1348]	; 0x544
        updateCachedShape();
 8007fba:	f00c fd0d 	bl	80149d8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8007fbe:	ee18 0a90 	vmov	r0, s17
 8007fc2:	2101      	movs	r1, #1
 8007fc4:	f00c fe14 	bl	8014bf0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007fc8:	ee18 1a90 	vmov	r1, s17
 8007fcc:	4630      	mov	r0, r6
 8007fce:	f00a fc17 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8007fd2:	f04f 39ff 	mov.w	r9, #4294967295
    textArea_name.setXY(69, 35);
 8007fd6:	ee19 0a90 	vmov	r0, s19
 8007fda:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 8007fdc:	f04f 0800 	mov.w	r8, #0
 8007fe0:	2145      	movs	r1, #69	; 0x45
 8007fe2:	f7fb fb47 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8007fe6:	ee19 1a90 	vmov	r1, s19
 8007fea:	4628      	mov	r0, r5
        color = newColor;
 8007fec:	f8c4 95bc 	str.w	r9, [r4, #1468]	; 0x5bc
        linespace = space;
 8007ff0:	f8a4 85c0 	strh.w	r8, [r4, #1472]	; 0x5c0
        boundingArea = calculateBoundingArea();
 8007ff4:	f00c ff92 	bl	8014f1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007ff8:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007ffc:	ee19 3a90 	vmov	r3, s19
 8008000:	333c      	adds	r3, #60	; 0x3c
 8008002:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008006:	234d      	movs	r3, #77	; 0x4d
    textArea_name.setTypedText(touchgfx::TypedText(T___SINGLEUSE_K7UP));
 8008008:	ee19 0a90 	vmov	r0, s19
 800800c:	a90a      	add	r1, sp, #40	; 0x28
 800800e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008012:	970a      	str	r7, [sp, #40]	; 0x28
 8008014:	f00d fa1c 	bl	8015450 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008018:	ee19 1a90 	vmov	r1, s19
 800801c:	4630      	mov	r0, r6
 800801e:	f00a fbef 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_title.setXY(54, 12);
 8008022:	ee1a 0a10 	vmov	r0, s20
 8008026:	220c      	movs	r2, #12
 8008028:	2136      	movs	r1, #54	; 0x36
 800802a:	f7fb fb23 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
 800802e:	ee1a 1a10 	vmov	r1, s20
 8008032:	4628      	mov	r0, r5
        color = newColor;
 8008034:	f8c4 9604 	str.w	r9, [r4, #1540]	; 0x604
        linespace = space;
 8008038:	f8a4 8608 	strh.w	r8, [r4, #1544]	; 0x608
        boundingArea = calculateBoundingArea();
 800803c:	f00c ff6e 	bl	8014f1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008040:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008044:	ee1a 3a10 	vmov	r3, s20
 8008048:	333c      	adds	r3, #60	; 0x3c
 800804a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800804e:	234e      	movs	r3, #78	; 0x4e
    textArea_title.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0GAY));
 8008050:	ee1a 0a10 	vmov	r0, s20
 8008054:	a90a      	add	r1, sp, #40	; 0x28
 8008056:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800805a:	970a      	str	r7, [sp, #40]	; 0x28
 800805c:	f00d f9f8 	bl	8015450 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008060:	4630      	mov	r0, r6
 8008062:	ee1a 1a10 	vmov	r1, s20
 8008066:	f00a fbcb 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800806a:	4620      	mov	r0, r4
 800806c:	b00d      	add	sp, #52	; 0x34
 800806e:	ecbd 8b0a 	vpop	{d8-d12}
 8008072:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008076:	bf00      	nop
 8008078:	200138a0 	.word	0x200138a0
 800807c:	0802f491 	.word	0x0802f491
 8008080:	0802f504 	.word	0x0802f504
 8008084:	20013894 	.word	0x20013894
 8008088:	20013898 	.word	0x20013898

0800808c <_ZN38Measurement_Accurate_Display_2ViewBase11setupScreenEv>:
}

void Measurement_Accurate_Display_2ViewBase::setupScreen()
{

}
 800808c:	4770      	bx	lr

0800808e <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800808e:	4770      	bx	lr

08008090 <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8008090:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8008092:	68c2      	ldr	r2, [r0, #12]
 8008094:	6844      	ldr	r4, [r0, #4]
 8008096:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8008098:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800809a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800809e:	07d2      	lsls	r2, r2, #31
 80080a0:	bf48      	it	mi
 80080a2:	5962      	ldrmi	r2, [r4, r5]
 80080a4:	689b      	ldr	r3, [r3, #8]
    }
 80080a6:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80080a8:	bf48      	it	mi
 80080aa:	58d3      	ldrmi	r3, [r2, r3]
 80080ac:	4718      	bx	r3

080080ae <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80080ae:	6843      	ldr	r3, [r0, #4]
 80080b0:	b12b      	cbz	r3, 80080be <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80080b2:	6883      	ldr	r3, [r0, #8]
 80080b4:	b92b      	cbnz	r3, 80080c2 <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80080b6:	68c0      	ldr	r0, [r0, #12]
 80080b8:	f000 0001 	and.w	r0, r0, #1
 80080bc:	4770      	bx	lr
 80080be:	4618      	mov	r0, r3
 80080c0:	4770      	bx	lr
 80080c2:	2001      	movs	r0, #1
    }
 80080c4:	4770      	bx	lr

080080c6 <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80080c6:	b510      	push	{r4, lr}
 80080c8:	2110      	movs	r1, #16
 80080ca:	4604      	mov	r4, r0
 80080cc:	f024 fd59 	bl	802cb82 <_ZdlPvj>
 80080d0:	4620      	mov	r0, r4
 80080d2:	bd10      	pop	{r4, pc}

080080d4 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>:
Measurement_Accurate_Display_2ViewBase::~Measurement_Accurate_Display_2ViewBase()
 80080d4:	b510      	push	{r4, lr}
 80080d6:	4b03      	ldr	r3, [pc, #12]	; (80080e4 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev+0x10>)
 80080d8:	6003      	str	r3, [r0, #0]
 80080da:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80080dc:	f00e ff66 	bl	8016fac <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80080e0:	4620      	mov	r0, r4
 80080e2:	bd10      	pop	{r4, pc}
 80080e4:	08030bd4 	.word	0x08030bd4

080080e8 <_ZN38Measurement_Accurate_Display_2ViewBaseD0Ev>:
Measurement_Accurate_Display_2ViewBase::~Measurement_Accurate_Display_2ViewBase()
 80080e8:	b507      	push	{r0, r1, r2, lr}
 80080ea:	4b07      	ldr	r3, [pc, #28]	; (8008108 <_ZN38Measurement_Accurate_Display_2ViewBaseD0Ev+0x20>)
 80080ec:	6003      	str	r3, [r0, #0]
 80080ee:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80080f0:	f00e ff5c 	bl	8016fac <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80080f4:	9801      	ldr	r0, [sp, #4]
 80080f6:	f241 4178 	movw	r1, #5240	; 0x1478
 80080fa:	f024 fd42 	bl	802cb82 <_ZdlPvj>
 80080fe:	9801      	ldr	r0, [sp, #4]
 8008100:	b003      	add	sp, #12
 8008102:	f85d fb04 	ldr.w	pc, [sp], #4
 8008106:	bf00      	nop
 8008108:	08030bd4 	.word	0x08030bd4

0800810c <_ZN38Measurement_Accurate_Display_2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_Accurate_Display_2ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel_Return)
 800810c:	3098      	adds	r0, #152	; 0x98
 800810e:	4288      	cmp	r0, r1
{
 8008110:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel_Return)
 8008112:	d105      	bne.n	8008120 <_ZN38Measurement_Accurate_Display_2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Accurate_Display_2ViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8008114:	f010 fc4c 	bl	80189b0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel_Return clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards West
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
    }
}
 8008118:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
 800811c:	f7fd baa0 	b.w	8005660 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>
}
 8008120:	bd08      	pop	{r3, pc}
	...

08008124 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev>:
Measurement_Accurate_Display_2ViewBase::Measurement_Accurate_Display_2ViewBase() :
 8008124:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008128:	ed2d 8b0a 	vpush	{d8-d12}
 800812c:	4604      	mov	r4, r0
 800812e:	b08f      	sub	sp, #60	; 0x3c
    buttonCallback(this, &Measurement_Accurate_Display_2ViewBase::buttonCallbackHandler)
 8008130:	46a0      	mov	r8, r4
 8008132:	2500      	movs	r5, #0
 8008134:	f012 f8bc 	bl	801a2b0 <_ZN8touchgfx6ScreenC1Ev>
 8008138:	4bcf      	ldr	r3, [pc, #828]	; (8008478 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x354>)
 800813a:	63e5      	str	r5, [r4, #60]	; 0x3c
 800813c:	f848 3b40 	str.w	r3, [r8], #64
        : Widget(), alpha(255), color(0)
 8008140:	2226      	movs	r2, #38	; 0x26
 8008142:	4629      	mov	r1, r5
 8008144:	4640      	mov	r0, r8
 8008146:	f025 fe08 	bl	802dd5a <memset>
 800814a:	4640      	mov	r0, r8
 800814c:	f7fb fac4 	bl	80036d8 <_ZN8touchgfx6WidgetC1Ev>
 8008150:	f104 076c 	add.w	r7, r4, #108	; 0x6c
 8008154:	26ff      	movs	r6, #255	; 0xff
 8008156:	4bc9      	ldr	r3, [pc, #804]	; (800847c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x358>)
 8008158:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800815a:	2226      	movs	r2, #38	; 0x26
 800815c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8008160:	4629      	mov	r1, r5
 8008162:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8008166:	4638      	mov	r0, r7
 8008168:	66a5      	str	r5, [r4, #104]	; 0x68
 800816a:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 800816e:	f025 fdf4 	bl	802dd5a <memset>
 8008172:	4638      	mov	r0, r7
 8008174:	f7fb fab0 	bl	80036d8 <_ZN8touchgfx6WidgetC1Ev>
 8008178:	4bc1      	ldr	r3, [pc, #772]	; (8008480 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x35c>)
 800817a:	66e3      	str	r3, [r4, #108]	; 0x6c
 800817c:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 8008180:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8008184:	a90c      	add	r1, sp, #48	; 0x30
 8008186:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 800818a:	4638      	mov	r0, r7
        : Widget(), bitmap(bmp), alpha(255)
 800818c:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8008190:	f00d ff0f 	bl	8015fb2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8008194:	4658      	mov	r0, fp
 8008196:	f00e f843 	bl	8016220 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800819a:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 800819e:	f504 7994 	add.w	r9, r4, #296	; 0x128
 80081a2:	4618      	mov	r0, r3
 80081a4:	ee0a 3a90 	vmov	s21, r3
 80081a8:	f7fb fafa 	bl	80037a0 <_ZN8touchgfx8TextAreaC1Ev>
 80081ac:	4648      	mov	r0, r9
 80081ae:	f7fb faf7 	bl	80037a0 <_ZN8touchgfx8TextAreaC1Ev>
 80081b2:	f504 73b8 	add.w	r3, r4, #368	; 0x170
 80081b6:	4618      	mov	r0, r3
 80081b8:	ee0b 3a10 	vmov	s22, r3
 80081bc:	f7fb faf0 	bl	80037a0 <_ZN8touchgfx8TextAreaC1Ev>
 80081c0:	f504 73dc 	add.w	r3, r4, #440	; 0x1b8
        : TextArea()
 80081c4:	4618      	mov	r0, r3
 80081c6:	ee0b 3a90 	vmov	s23, r3
        : TextAreaWithWildcardBase(), wc1(0)
 80081ca:	4eae      	ldr	r6, [pc, #696]	; (8008484 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x360>)
        : TextArea()
 80081cc:	f7fb fae8 	bl	80037a0 <_ZN8touchgfx8TextAreaC1Ev>
 80081d0:	f504 7301 	add.w	r3, r4, #516	; 0x204
        : TextAreaWithWildcardBase(), wc1(0)
 80081d4:	f8c4 61b8 	str.w	r6, [r4, #440]	; 0x1b8
        : TextArea()
 80081d8:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 80081da:	f8c4 5200 	str.w	r5, [r4, #512]	; 0x200
 80081de:	ee0c 3a10 	vmov	s24, r3
        : TextArea()
 80081e2:	f7fb fadd 	bl	80037a0 <_ZN8touchgfx8TextAreaC1Ev>
 80081e6:	f504 7314 	add.w	r3, r4, #592	; 0x250
 80081ea:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 80081ec:	f8c4 6204 	str.w	r6, [r4, #516]	; 0x204
 80081f0:	f8c4 524c 	str.w	r5, [r4, #588]	; 0x24c
 80081f4:	f504 7a27 	add.w	sl, r4, #668	; 0x29c
 80081f8:	ee0c 3a90 	vmov	s25, r3
        : TextArea()
 80081fc:	f7fb fad0 	bl	80037a0 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8008200:	f8c4 6250 	str.w	r6, [r4, #592]	; 0x250
 8008204:	f8c4 5298 	str.w	r5, [r4, #664]	; 0x298
 8008208:	4650      	mov	r0, sl
 800820a:	f00d fb95 	bl	8015938 <_ZN8touchgfx5GaugeC1Ev>
 800820e:	f204 433c 	addw	r3, r4, #1084	; 0x43c
 8008212:	4618      	mov	r0, r3
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8008214:	4e9c      	ldr	r6, [pc, #624]	; (8008488 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x364>)
 8008216:	ee08 3a10 	vmov	s16, r3
 800821a:	f00c fbbd 	bl	8014998 <_ZN8touchgfx4LineC1Ev>
 800821e:	f204 43ac 	addw	r3, r4, #1196	; 0x4ac
 8008222:	4618      	mov	r0, r3
 8008224:	9303      	str	r3, [sp, #12]
 8008226:	f7fb f85b 	bl	80032e0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800822a:	f106 0324 	add.w	r3, r6, #36	; 0x24
 800822e:	f8c4 34b4 	str.w	r3, [r4, #1204]	; 0x4b4
 8008232:	f504 6398 	add.w	r3, r4, #1216	; 0x4c0
 8008236:	f8c4 64ac 	str.w	r6, [r4, #1196]	; 0x4ac
 800823a:	4618      	mov	r0, r3
 800823c:	f8c4 54b8 	str.w	r5, [r4, #1208]	; 0x4b8
 8008240:	ee09 3a10 	vmov	s18, r3
 8008244:	f7fb faac 	bl	80037a0 <_ZN8touchgfx8TextAreaC1Ev>
 8008248:	f504 63a1 	add.w	r3, r4, #1288	; 0x508
 800824c:	4618      	mov	r0, r3
 800824e:	ee08 3a90 	vmov	s17, r3
 8008252:	f00c fba1 	bl	8014998 <_ZN8touchgfx4LineC1Ev>
 8008256:	f504 63af 	add.w	r3, r4, #1400	; 0x578
 800825a:	4618      	mov	r0, r3
 800825c:	9304      	str	r3, [sp, #16]
 800825e:	f7fb f83f 	bl	80032e0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8008262:	f106 0324 	add.w	r3, r6, #36	; 0x24
 8008266:	f8c4 3580 	str.w	r3, [r4, #1408]	; 0x580
 800826a:	f204 538c 	addw	r3, r4, #1420	; 0x58c
 800826e:	f8c4 6578 	str.w	r6, [r4, #1400]	; 0x578
 8008272:	4618      	mov	r0, r3
 8008274:	f8c4 5584 	str.w	r5, [r4, #1412]	; 0x584
 8008278:	ee09 3a90 	vmov	s19, r3
 800827c:	f7fb fa90 	bl	80037a0 <_ZN8touchgfx8TextAreaC1Ev>
 8008280:	f204 53d4 	addw	r3, r4, #1492	; 0x5d4
 8008284:	4618      	mov	r0, r3
 8008286:	ee0a 3a10 	vmov	s20, r3
 800828a:	f7fb fa89 	bl	80037a0 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800828e:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8008292:	4a7e      	ldr	r2, [pc, #504]	; (800848c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x368>)
 8008294:	f8c3 2468 	str.w	r2, [r3, #1128]	; 0x468
 8008298:	4a7d      	ldr	r2, [pc, #500]	; (8008490 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x36c>)
 800829a:	f8c3 2470 	str.w	r2, [r3, #1136]	; 0x470
 800829e:	f8c3 446c 	str.w	r4, [r3, #1132]	; 0x46c
 80082a2:	f8c3 5474 	str.w	r5, [r3, #1140]	; 0x474
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80082a6:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80082aa:	f504 60cb 	add.w	r0, r4, #1624	; 0x658
 80082ae:	f00e fe73 	bl	8016f98 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80082b2:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80082b6:	462a      	mov	r2, r5
 80082b8:	4640      	mov	r0, r8
 80082ba:	9300      	str	r3, [sp, #0]
 80082bc:	4629      	mov	r1, r5
 80082be:	23f0      	movs	r3, #240	; 0xf0
 80082c0:	f7fb f9e5 	bl	800368e <_ZN8touchgfx8Drawable11setPositionEssss>
 80082c4:	1d26      	adds	r6, r4, #4
        color = newColor;
 80082c6:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80082ca:	66a3      	str	r3, [r4, #104]	; 0x68
 80082cc:	4641      	mov	r1, r8
 80082ce:	4630      	mov	r0, r6
 80082d0:	f00a fa96 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image_background.setXY(0, 0);
 80082d4:	462a      	mov	r2, r5
 80082d6:	4638      	mov	r0, r7
 80082d8:	4629      	mov	r1, r5
 80082da:	f7fb f9cb 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
 80082de:	f04f 0308 	mov.w	r3, #8
    image_background.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80082e2:	4638      	mov	r0, r7
 80082e4:	a90c      	add	r1, sp, #48	; 0x30
 80082e6:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 80082ea:	f00d fe62 	bl	8015fb2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80082ee:	4639      	mov	r1, r7
 80082f0:	4630      	mov	r0, r6
 80082f2:	f00a fa85 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_Return.setXY(33, 257);
 80082f6:	4658      	mov	r0, fp
 80082f8:	f240 1201 	movw	r2, #257	; 0x101
 80082fc:	2121      	movs	r1, #33	; 0x21
 80082fe:	f7fb f9b9 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
 8008302:	f04f 0303 	mov.w	r3, #3
    buttonWithLabel_Return.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8008306:	aa0c      	add	r2, sp, #48	; 0x30
 8008308:	a90b      	add	r1, sp, #44	; 0x2c
 800830a:	4658      	mov	r0, fp
 800830c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008310:	f04f 0302 	mov.w	r3, #2
 8008314:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8008318:	f00d fc55 	bl	8015bc6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 800831c:	2347      	movs	r3, #71	; 0x47
        updateTextPosition();
 800831e:	4658      	mov	r0, fp
 8008320:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 8008324:	f7fb f9ea 	bl	80036fc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel_Return.setAction(buttonCallback);
 8008328:	f504 53a3 	add.w	r3, r4, #5216	; 0x1460
        color = col;
 800832c:	f04f 38ff 	mov.w	r8, #4294967295
 8008330:	3308      	adds	r3, #8
 8008332:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8008336:	4659      	mov	r1, fp
 8008338:	4630      	mov	r0, r6
        colorPressed = col;
 800833a:	e9c4 8835 	strd	r8, r8, [r4, #212]	; 0xd4
 800833e:	af06      	add	r7, sp, #24
 8008340:	f00a fa5e 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_n90C.setXY(0, 194);
 8008344:	22c2      	movs	r2, #194	; 0xc2
 8008346:	ee1a 0a90 	vmov	r0, s21
 800834a:	4629      	mov	r1, r5
 800834c:	f7fb f992 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
 8008350:	ee1a 1a90 	vmov	r1, s21
 8008354:	4638      	mov	r0, r7
        color = newColor;
 8008356:	f8c4 8110 	str.w	r8, [r4, #272]	; 0x110
        linespace = space;
 800835a:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 800835e:	f00c fddd 	bl	8014f1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008362:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8008366:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 800836a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 800836e:	4b49      	ldr	r3, [pc, #292]	; (8008494 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x370>)
 8008370:	930c      	str	r3, [sp, #48]	; 0x30
    textArea_n90C.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TIF0));
 8008372:	ee1a 0a90 	vmov	r0, s21
 8008376:	2307      	movs	r3, #7
 8008378:	a90c      	add	r1, sp, #48	; 0x30
 800837a:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 800837e:	f00d f867 	bl	8015450 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008382:	ee1a 1a90 	vmov	r1, s21
 8008386:	4630      	mov	r0, r6
 8008388:	f00a fa3a 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_p90C.setXY(217, 194);
 800838c:	22c2      	movs	r2, #194	; 0xc2
 800838e:	4648      	mov	r0, r9
 8008390:	21d9      	movs	r1, #217	; 0xd9
 8008392:	f7fb f96f 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
 8008396:	4649      	mov	r1, r9
 8008398:	4638      	mov	r0, r7
        color = newColor;
 800839a:	f8c4 8158 	str.w	r8, [r4, #344]	; 0x158
        linespace = space;
 800839e:	f8a4 515c 	strh.w	r5, [r4, #348]	; 0x15c
        boundingArea = calculateBoundingArea();
 80083a2:	f00c fdbb 	bl	8014f1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80083a6:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80083aa:	f504 73b2 	add.w	r3, r4, #356	; 0x164
 80083ae:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80083b2:	4b38      	ldr	r3, [pc, #224]	; (8008494 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x370>)
 80083b4:	930c      	str	r3, [sp, #48]	; 0x30
    textArea_p90C.setTypedText(touchgfx::TypedText(T___SINGLEUSE_H7OA));
 80083b6:	4648      	mov	r0, r9
 80083b8:	2306      	movs	r3, #6
 80083ba:	a90c      	add	r1, sp, #48	; 0x30
 80083bc:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80083c0:	f00d f846 	bl	8015450 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80083c4:	4649      	mov	r1, r9
 80083c6:	4630      	mov	r0, r6
 80083c8:	f00a fa1a 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_0C.setXY(113, 85);
 80083cc:	2255      	movs	r2, #85	; 0x55
 80083ce:	ee1b 0a10 	vmov	r0, s22
 80083d2:	2171      	movs	r1, #113	; 0x71
 80083d4:	f7fb f94e 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
 80083d8:	ee1b 1a10 	vmov	r1, s22
 80083dc:	4638      	mov	r0, r7
        color = newColor;
 80083de:	f8c4 81a0 	str.w	r8, [r4, #416]	; 0x1a0
        linespace = space;
 80083e2:	f8a4 51a4 	strh.w	r5, [r4, #420]	; 0x1a4
        boundingArea = calculateBoundingArea();
 80083e6:	f00c fd99 	bl	8014f1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80083ea:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80083ee:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 80083f2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80083f6:	4b27      	ldr	r3, [pc, #156]	; (8008494 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x370>)
 80083f8:	930c      	str	r3, [sp, #48]	; 0x30
    textArea_0C.setTypedText(touchgfx::TypedText(T___SINGLEUSE_61VS));
 80083fa:	ee1b 0a10 	vmov	r0, s22
 80083fe:	f04f 0305 	mov.w	r3, #5
 8008402:	a90c      	add	r1, sp, #48	; 0x30
 8008404:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8008408:	f00d f822 	bl	8015450 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800840c:	ee1b 1a10 	vmov	r1, s22
 8008410:	4630      	mov	r0, r6
 8008412:	f00a f9f5 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    AMD3_Current.setPosition(0, 239, 240, 15);
 8008416:	230f      	movs	r3, #15
 8008418:	22ef      	movs	r2, #239	; 0xef
 800841a:	ee1b 0a90 	vmov	r0, s23
 800841e:	9300      	str	r3, [sp, #0]
 8008420:	4629      	mov	r1, r5
 8008422:	23f0      	movs	r3, #240	; 0xf0
 8008424:	f7fb f933 	bl	800368e <_ZN8touchgfx8Drawable11setPositionEssss>
 8008428:	f8d4 31b8 	ldr.w	r3, [r4, #440]	; 0x1b8
        color = newColor;
 800842c:	f8c4 81e8 	str.w	r8, [r4, #488]	; 0x1e8
        boundingArea = calculateBoundingArea();
 8008430:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8008434:	f8a4 51ec 	strh.w	r5, [r4, #492]	; 0x1ec
        boundingArea = calculateBoundingArea();
 8008438:	ee1b 1a90 	vmov	r1, s23
 800843c:	4638      	mov	r0, r7
 800843e:	4798      	blx	r3
 8008440:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8008444:	f8df 9064 	ldr.w	r9, [pc, #100]	; 80084ac <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x388>
 8008448:	f504 73fa 	add.w	r3, r4, #500	; 0x1f4
 800844c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008450:	f8d9 3000 	ldr.w	r3, [r9]
    Unicode::snprintf(AMD3_CurrentBuffer, AMD3_CURRENT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_VDGC).getText());
 8008454:	f204 6b1c 	addw	fp, r4, #1564	; 0x61c
 8008458:	b92b      	cbnz	r3, 8008466 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x342>
 800845a:	4b0f      	ldr	r3, [pc, #60]	; (8008498 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x374>)
 800845c:	4a0f      	ldr	r2, [pc, #60]	; (800849c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x378>)
 800845e:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8008460:	480f      	ldr	r0, [pc, #60]	; (80084a0 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x37c>)
 8008462:	f025 fa75 	bl	802d950 <__assert_func>
 8008466:	4b0f      	ldr	r3, [pc, #60]	; (80084a4 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x380>)
 8008468:	881b      	ldrh	r3, [r3, #0]
 800846a:	2b04      	cmp	r3, #4
 800846c:	d820      	bhi.n	80084b0 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x38c>
 800846e:	4b0e      	ldr	r3, [pc, #56]	; (80084a8 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x384>)
 8008470:	4a0a      	ldr	r2, [pc, #40]	; (800849c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x378>)
 8008472:	2161      	movs	r1, #97	; 0x61
 8008474:	e7f4      	b.n	8008460 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x33c>
 8008476:	bf00      	nop
 8008478:	08030bd4 	.word	0x08030bd4
 800847c:	08031a58 	.word	0x08031a58
 8008480:	08031ca4 	.word	0x08031ca4
 8008484:	0802f5a4 	.word	0x0802f5a4
 8008488:	0803178c 	.word	0x0803178c
 800848c:	08030bbc 	.word	0x08030bbc
 8008490:	0800810d 	.word	0x0800810d
 8008494:	0802f504 	.word	0x0802f504
 8008498:	0802f354 	.word	0x0802f354
 800849c:	0802f459 	.word	0x0802f459
 80084a0:	0802f3d1 	.word	0x0802f3d1
 80084a4:	20013898 	.word	0x20013898
 80084a8:	0802f418 	.word	0x0802f418
 80084ac:	20013894 	.word	0x20013894
        return texts->getText(typedTextId);
 80084b0:	4bdd      	ldr	r3, [pc, #884]	; (8008828 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x704>)
 80084b2:	2104      	movs	r1, #4
 80084b4:	6818      	ldr	r0, [r3, #0]
 80084b6:	f002 f8ef 	bl	800a698 <_ZNK8touchgfx5Texts7getTextEt>
 80084ba:	4adc      	ldr	r2, [pc, #880]	; (800882c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x708>)
 80084bc:	4603      	mov	r3, r0
 80084be:	210a      	movs	r1, #10
 80084c0:	4658      	mov	r0, fp
 80084c2:	f013 fc23 	bl	801bd0c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 80084c6:	4ada      	ldr	r2, [pc, #872]	; (8008830 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x70c>)
        wc1 = value;
 80084c8:	f8c4 b200 	str.w	fp, [r4, #512]	; 0x200
    AMD3_Current.setTypedText(touchgfx::TypedText(T_AMD3_CURRENT));
 80084cc:	ee1b 0a90 	vmov	r0, s23
 80084d0:	a90c      	add	r1, sp, #48	; 0x30
 80084d2:	f04f 0b01 	mov.w	fp, #1
 80084d6:	920c      	str	r2, [sp, #48]	; 0x30
 80084d8:	f8ad b034 	strh.w	fp, [sp, #52]	; 0x34
 80084dc:	f00c ffb8 	bl	8015450 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80084e0:	ee1b 1a90 	vmov	r1, s23
 80084e4:	4630      	mov	r0, r6
 80084e6:	f00a f98b 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    AMD3_Frequency.setPosition(0, 224, 240, 15);
 80084ea:	210f      	movs	r1, #15
 80084ec:	22e0      	movs	r2, #224	; 0xe0
 80084ee:	ee1c 0a10 	vmov	r0, s24
 80084f2:	9100      	str	r1, [sp, #0]
 80084f4:	23f0      	movs	r3, #240	; 0xf0
 80084f6:	4629      	mov	r1, r5
 80084f8:	f7fb f8c9 	bl	800368e <_ZN8touchgfx8Drawable11setPositionEssss>
 80084fc:	f8d4 3204 	ldr.w	r3, [r4, #516]	; 0x204
        color = newColor;
 8008500:	f8c4 8234 	str.w	r8, [r4, #564]	; 0x234
        boundingArea = calculateBoundingArea();
 8008504:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8008508:	f8a4 5238 	strh.w	r5, [r4, #568]	; 0x238
        boundingArea = calculateBoundingArea();
 800850c:	ee1c 1a10 	vmov	r1, s24
 8008510:	4638      	mov	r0, r7
 8008512:	4798      	blx	r3
 8008514:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8008518:	f504 7310 	add.w	r3, r4, #576	; 0x240
 800851c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8008520:	f8d9 3000 	ldr.w	r3, [r9]
    Unicode::snprintf(AMD3_FrequencyBuffer, AMD3_FREQUENCY_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_RCRP).getText());
 8008524:	f504 61c6 	add.w	r1, r4, #1584	; 0x630
 8008528:	9105      	str	r1, [sp, #20]
 800852a:	2b00      	cmp	r3, #0
 800852c:	d095      	beq.n	800845a <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x336>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800852e:	49c1      	ldr	r1, [pc, #772]	; (8008834 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x710>)
 8008530:	880b      	ldrh	r3, [r1, #0]
 8008532:	2b03      	cmp	r3, #3
 8008534:	d99b      	bls.n	800846e <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x34a>
        return texts->getText(typedTextId);
 8008536:	4bbc      	ldr	r3, [pc, #752]	; (8008828 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x704>)
 8008538:	2103      	movs	r1, #3
 800853a:	6818      	ldr	r0, [r3, #0]
 800853c:	f002 f8ac 	bl	800a698 <_ZNK8touchgfx5Texts7getTextEt>
 8008540:	4aba      	ldr	r2, [pc, #744]	; (800882c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x708>)
 8008542:	4603      	mov	r3, r0
 8008544:	210a      	movs	r1, #10
 8008546:	9805      	ldr	r0, [sp, #20]
 8008548:	f013 fbe0 	bl	801bd0c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800854c:	9805      	ldr	r0, [sp, #20]
 800854e:	f8c4 024c 	str.w	r0, [r4, #588]	; 0x24c
    AMD3_Frequency.setTypedText(touchgfx::TypedText(T_AMD3_FREQUENCY));
 8008552:	a80c      	add	r0, sp, #48	; 0x30
        : typedTextId(id)
 8008554:	4ab6      	ldr	r2, [pc, #728]	; (8008830 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x70c>)
 8008556:	920c      	str	r2, [sp, #48]	; 0x30
 8008558:	230d      	movs	r3, #13
 800855a:	4601      	mov	r1, r0
 800855c:	ee1c 0a10 	vmov	r0, s24
 8008560:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8008564:	f00c ff74 	bl	8015450 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008568:	ee1c 1a10 	vmov	r1, s24
 800856c:	4630      	mov	r0, r6
 800856e:	f00a f947 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    AMD3_Distance.setPosition(0, 209, 240, 15);
 8008572:	200f      	movs	r0, #15
 8008574:	22d1      	movs	r2, #209	; 0xd1
 8008576:	9000      	str	r0, [sp, #0]
 8008578:	23f0      	movs	r3, #240	; 0xf0
 800857a:	ee1c 0a90 	vmov	r0, s25
 800857e:	4629      	mov	r1, r5
 8008580:	f7fb f885 	bl	800368e <_ZN8touchgfx8Drawable11setPositionEssss>
 8008584:	f8d4 3250 	ldr.w	r3, [r4, #592]	; 0x250
        color = newColor;
 8008588:	f8c4 8280 	str.w	r8, [r4, #640]	; 0x280
        boundingArea = calculateBoundingArea();
 800858c:	4638      	mov	r0, r7
 800858e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8008592:	f8a4 5284 	strh.w	r5, [r4, #644]	; 0x284
        boundingArea = calculateBoundingArea();
 8008596:	ee1c 1a90 	vmov	r1, s25
 800859a:	4798      	blx	r3
 800859c:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80085a0:	f504 7323 	add.w	r3, r4, #652	; 0x28c
 80085a4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80085a8:	f8d9 3000 	ldr.w	r3, [r9]
    Unicode::snprintf(AMD3_DistanceBuffer, AMD3_DISTANCE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_VKRM).getText());
 80085ac:	f204 6744 	addw	r7, r4, #1604	; 0x644
 80085b0:	2b00      	cmp	r3, #0
 80085b2:	f43f af52 	beq.w	800845a <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x336>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80085b6:	499f      	ldr	r1, [pc, #636]	; (8008834 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x710>)
 80085b8:	880b      	ldrh	r3, [r1, #0]
 80085ba:	2b02      	cmp	r3, #2
 80085bc:	f67f af57 	bls.w	800846e <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x34a>
        return texts->getText(typedTextId);
 80085c0:	4b99      	ldr	r3, [pc, #612]	; (8008828 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x704>)
 80085c2:	2102      	movs	r1, #2
 80085c4:	6818      	ldr	r0, [r3, #0]
 80085c6:	f002 f867 	bl	800a698 <_ZNK8touchgfx5Texts7getTextEt>
 80085ca:	4a98      	ldr	r2, [pc, #608]	; (800882c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x708>)
 80085cc:	4603      	mov	r3, r0
 80085ce:	210a      	movs	r1, #10
 80085d0:	4638      	mov	r0, r7
 80085d2:	f013 fb9b 	bl	801bd0c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 80085d6:	4a96      	ldr	r2, [pc, #600]	; (8008830 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x70c>)
 80085d8:	f8c4 7298 	str.w	r7, [r4, #664]	; 0x298
 80085dc:	2336      	movs	r3, #54	; 0x36
    AMD3_Distance.setTypedText(touchgfx::TypedText(T_AMD3_DISTANCE));
 80085de:	ee1c 0a90 	vmov	r0, s25
 80085e2:	a90c      	add	r1, sp, #48	; 0x30
 80085e4:	920c      	str	r2, [sp, #48]	; 0x30
 80085e6:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80085ea:	f00c ff31 	bl	8015450 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80085ee:	ee1c 1a90 	vmov	r1, s25
 80085f2:	4630      	mov	r0, r6
 80085f4:	f00a f904 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80085f8:	2304      	movs	r3, #4
    AMD3_Gauge.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_BACKGROUNDS_LIGHT_PRECISION_ID));
 80085fa:	a90c      	add	r1, sp, #48	; 0x30
 80085fc:	4650      	mov	r0, sl
 80085fe:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8008602:	f00a f88f 	bl	8012724 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    AMD3_Gauge.setPosition(28, 103, 184, 106);
 8008606:	236a      	movs	r3, #106	; 0x6a
 8008608:	9300      	str	r3, [sp, #0]
 800860a:	2267      	movs	r2, #103	; 0x67
 800860c:	23b8      	movs	r3, #184	; 0xb8
 800860e:	211c      	movs	r1, #28
 8008610:	4650      	mov	r0, sl
 8008612:	f7fb f83c 	bl	800368e <_ZN8touchgfx8Drawable11setPositionEssss>
    AMD3_Gauge.setCenter(92, 92);
 8008616:	225c      	movs	r2, #92	; 0x5c
 8008618:	4611      	mov	r1, r2
 800861a:	4650      	mov	r0, sl
 800861c:	f00d fa37 	bl	8015a8e <_ZN8touchgfx5Gauge9setCenterEii>
    AMD3_Gauge.setStartEndAngle(-90, 90);
 8008620:	225a      	movs	r2, #90	; 0x5a
 8008622:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8008626:	4650      	mov	r0, sl
 8008628:	f00d fab6 	bl	8015b98 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    AMD3_Gauge.setRange(-90, 90);
 800862c:	462b      	mov	r3, r5
 800862e:	225a      	movs	r2, #90	; 0x5a
 8008630:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8008634:	4650      	mov	r0, sl
 8008636:	9500      	str	r5, [sp, #0]
 8008638:	f009 ff21 	bl	801247e <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    AMD3_Gauge.setValue(0);
 800863c:	4629      	mov	r1, r5
 800863e:	4650      	mov	r0, sl
 8008640:	f00d fa54 	bl	8015aec <_ZN8touchgfx5Gauge8setValueEi>
    AMD3_Gauge.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_NEEDLES_ROUGH_ID, 8, 53);
 8008644:	2335      	movs	r3, #53	; 0x35
 8008646:	2208      	movs	r2, #8
 8008648:	2105      	movs	r1, #5
 800864a:	4650      	mov	r0, sl
 800864c:	f00d fa0a 	bl	8015a64 <_ZN8touchgfx5Gauge9setNeedleEtss>
    AMD3_Gauge.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8008650:	4659      	mov	r1, fp
 8008652:	4650      	mov	r0, sl
 8008654:	f00d f9a8 	bl	80159a8 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    AMD3_Gauge.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8008658:	4659      	mov	r1, fp
 800865a:	4650      	mov	r0, sl
 800865c:	f00d f9a7 	bl	80159ae <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
 8008660:	4651      	mov	r1, sl
 8008662:	4630      	mov	r0, r6
 8008664:	f00a f8cc 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line2.setPosition(0, 75, 240, 10);
 8008668:	230a      	movs	r3, #10
 800866a:	ee18 0a10 	vmov	r0, s16
 800866e:	9300      	str	r3, [sp, #0]
 8008670:	224b      	movs	r2, #75	; 0x4b
 8008672:	23f0      	movs	r3, #240	; 0xf0
 8008674:	4629      	mov	r1, r5
 8008676:	f7fb f80a 	bl	800368e <_ZN8touchgfx8Drawable11setPositionEssss>
 800867a:	9b03      	ldr	r3, [sp, #12]
 800867c:	f8c4 3464 	str.w	r3, [r4, #1124]	; 0x464
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8008680:	22a0      	movs	r2, #160	; 0xa0
 8008682:	4611      	mov	r1, r2
 8008684:	ee18 0a10 	vmov	r0, s16
 8008688:	f8c4 84b8 	str.w	r8, [r4, #1208]	; 0x4b8
        color565 = LCD16bpp::getNativeColor(painterColor);
 800868c:	f8a4 84bc 	strh.w	r8, [r4, #1212]	; 0x4bc
 8008690:	f00c fa98 	bl	8014bc4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8008694:	ee18 0a10 	vmov	r0, s16
 8008698:	22a0      	movs	r2, #160	; 0xa0
 800869a:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 800869e:	f00c fa9c 	bl	8014bda <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80086a2:	f8d4 3478 	ldr.w	r3, [r4, #1144]	; 0x478
 80086a6:	2b20      	cmp	r3, #32
 80086a8:	d006      	beq.n	80086b8 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x594>
        lineWidthQ5 = widthQ5;
 80086aa:	2320      	movs	r3, #32
        updateCachedShape();
 80086ac:	ee18 0a10 	vmov	r0, s16
        lineWidthQ5 = widthQ5;
 80086b0:	f8c4 3478 	str.w	r3, [r4, #1144]	; 0x478
        updateCachedShape();
 80086b4:	f00c f990 	bl	80149d8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80086b8:	ee18 0a10 	vmov	r0, s16
 80086bc:	2101      	movs	r1, #1
 80086be:	f00c fa97 	bl	8014bf0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80086c2:	ee18 1a10 	vmov	r1, s16
 80086c6:	4630      	mov	r0, r6
 80086c8:	f00a f89a 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 80086cc:	f04f 38ff 	mov.w	r8, #4294967295
    textArea_menu.setXY(23, 60);
 80086d0:	223c      	movs	r2, #60	; 0x3c
 80086d2:	ee19 0a10 	vmov	r0, s18
 80086d6:	2117      	movs	r1, #23
        linespace = space;
 80086d8:	f04f 0900 	mov.w	r9, #0
        boundingArea = calculateBoundingArea();
 80086dc:	ad06      	add	r5, sp, #24
 80086de:	f7fa ffc9 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
 80086e2:	ee19 1a10 	vmov	r1, s18
 80086e6:	4628      	mov	r0, r5
        color = newColor;
 80086e8:	f8c4 84f0 	str.w	r8, [r4, #1264]	; 0x4f0
        linespace = space;
 80086ec:	f8a4 94f4 	strh.w	r9, [r4, #1268]	; 0x4f4
        boundingArea = calculateBoundingArea();
 80086f0:	f00c fc14 	bl	8014f1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80086f4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80086f8:	ee19 3a10 	vmov	r3, s18
 80086fc:	333c      	adds	r3, #60	; 0x3c
 80086fe:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008702:	4f4b      	ldr	r7, [pc, #300]	; (8008830 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x70c>)
 8008704:	970c      	str	r7, [sp, #48]	; 0x30
 8008706:	2348      	movs	r3, #72	; 0x48
    textArea_menu.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TF2A));
 8008708:	ee19 0a10 	vmov	r0, s18
 800870c:	a90c      	add	r1, sp, #48	; 0x30
 800870e:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8008712:	f00c fe9d 	bl	8015450 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008716:	ee19 1a10 	vmov	r1, s18
 800871a:	4630      	mov	r0, r6
 800871c:	f00a f870 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8008720:	230a      	movs	r3, #10
 8008722:	ee18 0a90 	vmov	r0, s17
 8008726:	9300      	str	r3, [sp, #0]
 8008728:	2232      	movs	r2, #50	; 0x32
 800872a:	23f0      	movs	r3, #240	; 0xf0
 800872c:	4649      	mov	r1, r9
 800872e:	f7fa ffae 	bl	800368e <_ZN8touchgfx8Drawable11setPositionEssss>
 8008732:	9b04      	ldr	r3, [sp, #16]
 8008734:	f8c4 3530 	str.w	r3, [r4, #1328]	; 0x530
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8008738:	22a0      	movs	r2, #160	; 0xa0
 800873a:	4611      	mov	r1, r2
 800873c:	ee18 0a90 	vmov	r0, s17
 8008740:	f8c4 8584 	str.w	r8, [r4, #1412]	; 0x584
 8008744:	f8a4 8588 	strh.w	r8, [r4, #1416]	; 0x588
 8008748:	f00c fa3c 	bl	8014bc4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800874c:	ee18 0a90 	vmov	r0, s17
 8008750:	22a0      	movs	r2, #160	; 0xa0
 8008752:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8008756:	f00c fa40 	bl	8014bda <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800875a:	f8d4 3544 	ldr.w	r3, [r4, #1348]	; 0x544
 800875e:	2b20      	cmp	r3, #32
 8008760:	d006      	beq.n	8008770 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x64c>
        lineWidthQ5 = widthQ5;
 8008762:	2320      	movs	r3, #32
        updateCachedShape();
 8008764:	ee18 0a90 	vmov	r0, s17
        lineWidthQ5 = widthQ5;
 8008768:	f8c4 3544 	str.w	r3, [r4, #1348]	; 0x544
        updateCachedShape();
 800876c:	f00c f934 	bl	80149d8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8008770:	ee18 0a90 	vmov	r0, s17
 8008774:	2101      	movs	r1, #1
 8008776:	f00c fa3b 	bl	8014bf0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800877a:	ee18 1a90 	vmov	r1, s17
 800877e:	4630      	mov	r0, r6
 8008780:	f00a f83e 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8008784:	f04f 39ff 	mov.w	r9, #4294967295
    textArea_name.setXY(69, 35);
 8008788:	ee19 0a90 	vmov	r0, s19
 800878c:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 800878e:	f04f 0800 	mov.w	r8, #0
 8008792:	2145      	movs	r1, #69	; 0x45
 8008794:	f7fa ff6e 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8008798:	ee19 1a90 	vmov	r1, s19
 800879c:	4628      	mov	r0, r5
        color = newColor;
 800879e:	f8c4 95bc 	str.w	r9, [r4, #1468]	; 0x5bc
        linespace = space;
 80087a2:	f8a4 85c0 	strh.w	r8, [r4, #1472]	; 0x5c0
        boundingArea = calculateBoundingArea();
 80087a6:	f00c fbb9 	bl	8014f1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80087aa:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80087ae:	ee19 3a90 	vmov	r3, s19
 80087b2:	333c      	adds	r3, #60	; 0x3c
 80087b4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80087b8:	2349      	movs	r3, #73	; 0x49
    textArea_name.setTypedText(touchgfx::TypedText(T___SINGLEUSE_A08K));
 80087ba:	ee19 0a90 	vmov	r0, s19
 80087be:	a90c      	add	r1, sp, #48	; 0x30
 80087c0:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80087c4:	970c      	str	r7, [sp, #48]	; 0x30
 80087c6:	f00c fe43 	bl	8015450 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80087ca:	ee19 1a90 	vmov	r1, s19
 80087ce:	4630      	mov	r0, r6
 80087d0:	f00a f816 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_title.setXY(54, 12);
 80087d4:	ee1a 0a10 	vmov	r0, s20
 80087d8:	220c      	movs	r2, #12
 80087da:	2136      	movs	r1, #54	; 0x36
 80087dc:	f7fa ff4a 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
 80087e0:	ee1a 1a10 	vmov	r1, s20
 80087e4:	4628      	mov	r0, r5
        color = newColor;
 80087e6:	f8c4 9604 	str.w	r9, [r4, #1540]	; 0x604
        linespace = space;
 80087ea:	f8a4 8608 	strh.w	r8, [r4, #1544]	; 0x608
        boundingArea = calculateBoundingArea();
 80087ee:	f00c fb95 	bl	8014f1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80087f2:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80087f6:	ee1a 3a10 	vmov	r3, s20
 80087fa:	333c      	adds	r3, #60	; 0x3c
 80087fc:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008800:	234a      	movs	r3, #74	; 0x4a
    textArea_title.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IJWA));
 8008802:	ee1a 0a10 	vmov	r0, s20
 8008806:	a90c      	add	r1, sp, #48	; 0x30
 8008808:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 800880c:	970c      	str	r7, [sp, #48]	; 0x30
 800880e:	f00c fe1f 	bl	8015450 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008812:	4630      	mov	r0, r6
 8008814:	ee1a 1a10 	vmov	r1, s20
 8008818:	f009 fff2 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800881c:	4620      	mov	r0, r4
 800881e:	b00f      	add	sp, #60	; 0x3c
 8008820:	ecbd 8b0a 	vpop	{d8-d12}
 8008824:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008828:	200138a0 	.word	0x200138a0
 800882c:	0802f491 	.word	0x0802f491
 8008830:	0802f504 	.word	0x0802f504
 8008834:	20013898 	.word	0x20013898

08008838 <_ZN26Measurement_SingleViewBase11setupScreenEv>:
}

void Measurement_SingleViewBase::setupScreen()
{

}
 8008838:	4770      	bx	lr

0800883a <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800883a:	4770      	bx	lr

0800883c <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800883c:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 800883e:	68c2      	ldr	r2, [r0, #12]
 8008840:	6844      	ldr	r4, [r0, #4]
 8008842:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8008844:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8008846:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800884a:	07d2      	lsls	r2, r2, #31
 800884c:	bf48      	it	mi
 800884e:	5962      	ldrmi	r2, [r4, r5]
 8008850:	689b      	ldr	r3, [r3, #8]
    }
 8008852:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8008854:	bf48      	it	mi
 8008856:	58d3      	ldrmi	r3, [r2, r3]
 8008858:	4718      	bx	r3

0800885a <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 800885a:	6843      	ldr	r3, [r0, #4]
 800885c:	b12b      	cbz	r3, 800886a <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800885e:	6883      	ldr	r3, [r0, #8]
 8008860:	b92b      	cbnz	r3, 800886e <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8008862:	68c0      	ldr	r0, [r0, #12]
 8008864:	f000 0001 	and.w	r0, r0, #1
 8008868:	4770      	bx	lr
 800886a:	4618      	mov	r0, r3
 800886c:	4770      	bx	lr
 800886e:	2001      	movs	r0, #1
    }
 8008870:	4770      	bx	lr

08008872 <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8008872:	b510      	push	{r4, lr}
 8008874:	2110      	movs	r1, #16
 8008876:	4604      	mov	r4, r0
 8008878:	f024 f983 	bl	802cb82 <_ZdlPvj>
 800887c:	4620      	mov	r0, r4
 800887e:	bd10      	pop	{r4, pc}

08008880 <_ZN26Measurement_SingleViewBaseD1Ev>:
Measurement_SingleViewBase::~Measurement_SingleViewBase()
 8008880:	b510      	push	{r4, lr}
 8008882:	4b03      	ldr	r3, [pc, #12]	; (8008890 <_ZN26Measurement_SingleViewBaseD1Ev+0x10>)
 8008884:	6003      	str	r3, [r0, #0]
 8008886:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8008888:	f00e fb90 	bl	8016fac <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 800888c:	4620      	mov	r0, r4
 800888e:	bd10      	pop	{r4, pc}
 8008890:	08030c20 	.word	0x08030c20

08008894 <_ZN26Measurement_SingleViewBaseD0Ev>:
Measurement_SingleViewBase::~Measurement_SingleViewBase()
 8008894:	b507      	push	{r0, r1, r2, lr}
 8008896:	4b07      	ldr	r3, [pc, #28]	; (80088b4 <_ZN26Measurement_SingleViewBaseD0Ev+0x20>)
 8008898:	6003      	str	r3, [r0, #0]
 800889a:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800889c:	f00e fb86 	bl	8016fac <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80088a0:	9801      	ldr	r0, [sp, #4]
 80088a2:	f241 11c4 	movw	r1, #4548	; 0x11c4
 80088a6:	f024 f96c 	bl	802cb82 <_ZdlPvj>
 80088aa:	9801      	ldr	r0, [sp, #4]
 80088ac:	b003      	add	sp, #12
 80088ae:	f85d fb04 	ldr.w	pc, [sp], #4
 80088b2:	bf00      	nop
 80088b4:	08030c20 	.word	0x08030c20

080088b8 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_SingleViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 80088b8:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel_Return)
 80088ba:	f100 03e4 	add.w	r3, r0, #228	; 0xe4
 80088be:	4299      	cmp	r1, r3
{
 80088c0:	4604      	mov	r4, r0
 80088c2:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel_Return)
 80088c4:	d103      	bne.n	80088ce <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_SingleViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80088c6:	f010 f873 	bl	80189b0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel_Return clicked change screen to Measurement
        //Go to Measurement with screen transition towards West
        application().gotoMeasurementScreenWipeTransitionWest();
 80088ca:	f7fc fe79 	bl	80055c0 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel_1Phase)
 80088ce:	f504 73ba 	add.w	r3, r4, #372	; 0x174
 80088d2:	429d      	cmp	r5, r3
 80088d4:	d103      	bne.n	80088de <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 80088d6:	f010 f86b 	bl	80189b0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel_1Phase clicked change screen to Measurement_Single_Display_1P
        //Go to Measurement_Single_Display_1P with screen transition towards East
        application().gotoMeasurement_Single_Display_1PScreenWipeTransitionEast();
 80088da:	f7fc fe91 	bl	8005600 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel_3Phase)
 80088de:	f504 7496 	add.w	r4, r4, #300	; 0x12c
 80088e2:	42a5      	cmp	r5, r4
 80088e4:	d105      	bne.n	80088f2 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 80088e6:	f010 f863 	bl	80189b0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel_3Phase clicked change screen to Measurement_Single_Display_3P
        //Go to Measurement_Single_Display_3P with screen transition towards East
        application().gotoMeasurement_Single_Display_3PScreenWipeTransitionEast();
    }
}
 80088ea:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_Single_Display_3PScreenWipeTransitionEast();
 80088ee:	f7fc be97 	b.w	8005620 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv>
}
 80088f2:	bd38      	pop	{r3, r4, r5, pc}

080088f4 <_ZN26Measurement_SingleViewBaseC1Ev>:
Measurement_SingleViewBase::Measurement_SingleViewBase() :
 80088f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80088f8:	ed2d 8b06 	vpush	{d8-d10}
 80088fc:	4604      	mov	r4, r0
 80088fe:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_SingleViewBase::buttonCallbackHandler)
 8008900:	46a2      	mov	sl, r4
 8008902:	2500      	movs	r5, #0
 8008904:	f011 fcd4 	bl	801a2b0 <_ZN8touchgfx6ScreenC1Ev>
 8008908:	4b71      	ldr	r3, [pc, #452]	; (8008ad0 <_ZN26Measurement_SingleViewBaseC1Ev+0x1dc>)
 800890a:	63e5      	str	r5, [r4, #60]	; 0x3c
 800890c:	f84a 3b40 	str.w	r3, [sl], #64
        : Widget(), alpha(255), color(0)
 8008910:	2226      	movs	r2, #38	; 0x26
 8008912:	4629      	mov	r1, r5
 8008914:	4650      	mov	r0, sl
 8008916:	f025 fa20 	bl	802dd5a <memset>
 800891a:	4650      	mov	r0, sl
 800891c:	f7fa fedc 	bl	80036d8 <_ZN8touchgfx6WidgetC1Ev>
 8008920:	f104 096c 	add.w	r9, r4, #108	; 0x6c
 8008924:	26ff      	movs	r6, #255	; 0xff
 8008926:	4b6b      	ldr	r3, [pc, #428]	; (8008ad4 <_ZN26Measurement_SingleViewBaseC1Ev+0x1e0>)
 8008928:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800892a:	2226      	movs	r2, #38	; 0x26
 800892c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8008930:	4629      	mov	r1, r5
 8008932:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8008936:	4648      	mov	r0, r9
 8008938:	66a5      	str	r5, [r4, #104]	; 0x68
 800893a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800893e:	f025 fa0c 	bl	802dd5a <memset>
 8008942:	4648      	mov	r0, r9
 8008944:	f7fa fec8 	bl	80036d8 <_ZN8touchgfx6WidgetC1Ev>
 8008948:	4b63      	ldr	r3, [pc, #396]	; (8008ad8 <_ZN26Measurement_SingleViewBaseC1Ev+0x1e4>)
 800894a:	66e3      	str	r3, [r4, #108]	; 0x6c
 800894c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8008950:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8008954:	a90a      	add	r1, sp, #40	; 0x28
 8008956:	4648      	mov	r0, r9
 8008958:	f104 0898 	add.w	r8, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 800895c:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8008960:	f00d fb27 	bl	8015fb2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8008964:	4640      	mov	r0, r8
 8008966:	f7fa ff1b 	bl	80037a0 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 800896a:	4b5c      	ldr	r3, [pc, #368]	; (8008adc <_ZN26Measurement_SingleViewBaseC1Ev+0x1e8>)
 800896c:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8008970:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 8008974:	4618      	mov	r0, r3
 8008976:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 800897a:	ee09 3a90 	vmov	s19, r3
 800897e:	f00d fc4f 	bl	8016220 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8008982:	f504 7396 	add.w	r3, r4, #300	; 0x12c
 8008986:	4618      	mov	r0, r3
 8008988:	ee0a 3a10 	vmov	s20, r3
 800898c:	f00d fc48 	bl	8016220 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8008990:	f504 73ba 	add.w	r3, r4, #372	; 0x174
 8008994:	4618      	mov	r0, r3
 8008996:	f504 77de 	add.w	r7, r4, #444	; 0x1bc
 800899a:	ee0a 3a90 	vmov	s21, r3
 800899e:	f00d fc3f 	bl	8016220 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80089a2:	4638      	mov	r0, r7
 80089a4:	f00b fff8 	bl	8014998 <_ZN8touchgfx4LineC1Ev>
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80089a8:	4e4d      	ldr	r6, [pc, #308]	; (8008ae0 <_ZN26Measurement_SingleViewBaseC1Ev+0x1ec>)
 80089aa:	f504 730b 	add.w	r3, r4, #556	; 0x22c
 80089ae:	4618      	mov	r0, r3
 80089b0:	9302      	str	r3, [sp, #8]
 80089b2:	f7fa fc95 	bl	80032e0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80089b6:	f106 0324 	add.w	r3, r6, #36	; 0x24
 80089ba:	f8c4 3234 	str.w	r3, [r4, #564]	; 0x234
 80089be:	f504 7310 	add.w	r3, r4, #576	; 0x240
 80089c2:	4618      	mov	r0, r3
 80089c4:	f8c4 622c 	str.w	r6, [r4, #556]	; 0x22c
 80089c8:	f8c4 5238 	str.w	r5, [r4, #568]	; 0x238
 80089cc:	f504 7b22 	add.w	fp, r4, #648	; 0x288
 80089d0:	ee08 3a10 	vmov	s16, r3
 80089d4:	f7fa fee4 	bl	80037a0 <_ZN8touchgfx8TextAreaC1Ev>
 80089d8:	4658      	mov	r0, fp
 80089da:	f00b ffdd 	bl	8014998 <_ZN8touchgfx4LineC1Ev>
 80089de:	f504 733e 	add.w	r3, r4, #760	; 0x2f8
 80089e2:	4618      	mov	r0, r3
 80089e4:	9303      	str	r3, [sp, #12]
 80089e6:	f7fa fc7b 	bl	80032e0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80089ea:	f106 0324 	add.w	r3, r6, #36	; 0x24
 80089ee:	f8c4 3300 	str.w	r3, [r4, #768]	; 0x300
 80089f2:	f504 7343 	add.w	r3, r4, #780	; 0x30c
 80089f6:	f8c4 62f8 	str.w	r6, [r4, #760]	; 0x2f8
 80089fa:	4618      	mov	r0, r3
 80089fc:	f8c4 5304 	str.w	r5, [r4, #772]	; 0x304
 8008a00:	ee08 3a90 	vmov	s17, r3
 8008a04:	f7fa fecc 	bl	80037a0 <_ZN8touchgfx8TextAreaC1Ev>
 8008a08:	f504 7355 	add.w	r3, r4, #852	; 0x354
 8008a0c:	4618      	mov	r0, r3
 8008a0e:	ee09 3a10 	vmov	s18, r3
 8008a12:	f7fa fec5 	bl	80037a0 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8008a16:	4a33      	ldr	r2, [pc, #204]	; (8008ae4 <_ZN26Measurement_SingleViewBaseC1Ev+0x1f0>)
 8008a18:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8008a1c:	e9c3 246d 	strd	r2, r4, [r3, #436]	; 0x1b4
 8008a20:	4a31      	ldr	r2, [pc, #196]	; (8008ae8 <_ZN26Measurement_SingleViewBaseC1Ev+0x1f4>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8008a22:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8008a26:	e9c3 256f 	strd	r2, r5, [r3, #444]	; 0x1bc
 8008a2a:	f504 7069 	add.w	r0, r4, #932	; 0x3a4
 8008a2e:	f00e fab3 	bl	8016f98 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8008a32:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8008a36:	462a      	mov	r2, r5
 8008a38:	4650      	mov	r0, sl
 8008a3a:	9300      	str	r3, [sp, #0]
 8008a3c:	4629      	mov	r1, r5
 8008a3e:	23f0      	movs	r3, #240	; 0xf0
 8008a40:	f7fa fe25 	bl	800368e <_ZN8touchgfx8Drawable11setPositionEssss>
 8008a44:	1d26      	adds	r6, r4, #4
        color = newColor;
 8008a46:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8008a4a:	66a3      	str	r3, [r4, #104]	; 0x68
 8008a4c:	4651      	mov	r1, sl
 8008a4e:	4630      	mov	r0, r6
 8008a50:	f009 fed6 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image_background.setXY(0, 0);
 8008a54:	462a      	mov	r2, r5
 8008a56:	4648      	mov	r0, r9
 8008a58:	4629      	mov	r1, r5
 8008a5a:	f7fa fe0b 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
 8008a5e:	2308      	movs	r3, #8
    image_background.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8008a60:	4648      	mov	r0, r9
 8008a62:	a90a      	add	r1, sp, #40	; 0x28
 8008a64:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8008a68:	f00d faa3 	bl	8015fb2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8008a6c:	4649      	mov	r1, r9
 8008a6e:	4630      	mov	r0, r6
 8008a70:	f009 fec6 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_auto_off.setXY(86, 308);
 8008a74:	f44f 729a 	mov.w	r2, #308	; 0x134
 8008a78:	2156      	movs	r1, #86	; 0x56
 8008a7a:	4640      	mov	r0, r8
 8008a7c:	f7fa fdfa 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
 8008a80:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8008a84:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8008a88:	f10d 0910 	add.w	r9, sp, #16
        color = newColor;
 8008a8c:	f04f 3aff 	mov.w	sl, #4294967295
        boundingArea = calculateBoundingArea();
 8008a90:	4648      	mov	r0, r9
 8008a92:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8008a96:	f8c4 a0c8 	str.w	sl, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8008a9a:	4641      	mov	r1, r8
 8008a9c:	4798      	blx	r3
 8008a9e:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 8008aa2:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8008aa6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8008aaa:	4b10      	ldr	r3, [pc, #64]	; (8008aec <_ZN26Measurement_SingleViewBaseC1Ev+0x1f8>)
 8008aac:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_DTDC).getText());
 8008aae:	f504 7967 	add.w	r9, r4, #924	; 0x39c
 8008ab2:	b92b      	cbnz	r3, 8008ac0 <_ZN26Measurement_SingleViewBaseC1Ev+0x1cc>
 8008ab4:	4b0e      	ldr	r3, [pc, #56]	; (8008af0 <_ZN26Measurement_SingleViewBaseC1Ev+0x1fc>)
 8008ab6:	4a0f      	ldr	r2, [pc, #60]	; (8008af4 <_ZN26Measurement_SingleViewBaseC1Ev+0x200>)
 8008ab8:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8008aba:	480f      	ldr	r0, [pc, #60]	; (8008af8 <_ZN26Measurement_SingleViewBaseC1Ev+0x204>)
 8008abc:	f024 ff48 	bl	802d950 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8008ac0:	4b0e      	ldr	r3, [pc, #56]	; (8008afc <_ZN26Measurement_SingleViewBaseC1Ev+0x208>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8008ac2:	881b      	ldrh	r3, [r3, #0]
 8008ac4:	2b42      	cmp	r3, #66	; 0x42
 8008ac6:	d81d      	bhi.n	8008b04 <_ZN26Measurement_SingleViewBaseC1Ev+0x210>
 8008ac8:	4b0d      	ldr	r3, [pc, #52]	; (8008b00 <_ZN26Measurement_SingleViewBaseC1Ev+0x20c>)
 8008aca:	4a0a      	ldr	r2, [pc, #40]	; (8008af4 <_ZN26Measurement_SingleViewBaseC1Ev+0x200>)
 8008acc:	2161      	movs	r1, #97	; 0x61
 8008ace:	e7f4      	b.n	8008aba <_ZN26Measurement_SingleViewBaseC1Ev+0x1c6>
 8008ad0:	08030c20 	.word	0x08030c20
 8008ad4:	08031a58 	.word	0x08031a58
 8008ad8:	08031ca4 	.word	0x08031ca4
 8008adc:	0802f5a4 	.word	0x0802f5a4
 8008ae0:	0803178c 	.word	0x0803178c
 8008ae4:	08030c08 	.word	0x08030c08
 8008ae8:	080088b9 	.word	0x080088b9
 8008aec:	20013894 	.word	0x20013894
 8008af0:	0802f354 	.word	0x0802f354
 8008af4:	0802f459 	.word	0x0802f459
 8008af8:	0802f3d1 	.word	0x0802f3d1
 8008afc:	20013898 	.word	0x20013898
 8008b00:	0802f418 	.word	0x0802f418
        return texts->getText(typedTextId);
 8008b04:	4bad      	ldr	r3, [pc, #692]	; (8008dbc <_ZN26Measurement_SingleViewBaseC1Ev+0x4c8>)
 8008b06:	2142      	movs	r1, #66	; 0x42
 8008b08:	6818      	ldr	r0, [r3, #0]
 8008b0a:	f001 fdc5 	bl	800a698 <_ZNK8touchgfx5Texts7getTextEt>
 8008b0e:	4aac      	ldr	r2, [pc, #688]	; (8008dc0 <_ZN26Measurement_SingleViewBaseC1Ev+0x4cc>)
 8008b10:	4603      	mov	r3, r0
 8008b12:	2104      	movs	r1, #4
 8008b14:	4648      	mov	r0, r9
 8008b16:	f013 f8f9 	bl	801bd0c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea_auto_off.resizeToCurrentText();
 8008b1a:	4640      	mov	r0, r8
        wc1 = value;
 8008b1c:	f8c4 90e0 	str.w	r9, [r4, #224]	; 0xe0
 8008b20:	f00c fc76 	bl	8015410 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8008b24:	4ba7      	ldr	r3, [pc, #668]	; (8008dc4 <_ZN26Measurement_SingleViewBaseC1Ev+0x4d0>)
 8008b26:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_auto_off.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VDD5));
 8008b28:	4640      	mov	r0, r8
 8008b2a:	2343      	movs	r3, #67	; 0x43
 8008b2c:	a90a      	add	r1, sp, #40	; 0x28
 8008b2e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008b32:	f00c fc8d 	bl	8015450 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008b36:	4641      	mov	r1, r8
 8008b38:	4630      	mov	r0, r6
 8008b3a:	f009 fe61 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_Return.setXY(33, 240);
 8008b3e:	ee19 0a90 	vmov	r0, s19
 8008b42:	22f0      	movs	r2, #240	; 0xf0
 8008b44:	2121      	movs	r1, #33	; 0x21
 8008b46:	f7fa fd95 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
 8008b4a:	f04f 0802 	mov.w	r8, #2
 8008b4e:	2303      	movs	r3, #3
    buttonWithLabel_Return.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8008b50:	a909      	add	r1, sp, #36	; 0x24
 8008b52:	ee19 0a90 	vmov	r0, s19
 8008b56:	aa0a      	add	r2, sp, #40	; 0x28
 8008b58:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8008b5c:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel_Return.setAction(buttonCallback);
 8008b60:	f504 598d 	add.w	r9, r4, #4512	; 0x11a0
    buttonWithLabel_Return.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8008b64:	f00d f82f 	bl	8015bc6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8008b68:	2263      	movs	r2, #99	; 0x63
 8008b6a:	f8a4 211c 	strh.w	r2, [r4, #284]	; 0x11c
    buttonWithLabel_Return.setAction(buttonCallback);
 8008b6e:	f109 0914 	add.w	r9, r9, #20
        updateTextPosition();
 8008b72:	ee19 0a90 	vmov	r0, s19
 8008b76:	f7fa fdc1 	bl	80036fc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8008b7a:	ee19 1a90 	vmov	r1, s19
 8008b7e:	4630      	mov	r0, r6
        colorPressed = col;
 8008b80:	e9c4 aa48 	strd	sl, sl, [r4, #288]	; 0x120
 8008b84:	f8c4 910c 	str.w	r9, [r4, #268]	; 0x10c
 8008b88:	f009 fe3a 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_3Phase.setXY(33, 170);
 8008b8c:	ee1a 0a10 	vmov	r0, s20
 8008b90:	22aa      	movs	r2, #170	; 0xaa
 8008b92:	2121      	movs	r1, #33	; 0x21
 8008b94:	f7fa fd6e 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
 8008b98:	2303      	movs	r3, #3
    buttonWithLabel_3Phase.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8008b9a:	a909      	add	r1, sp, #36	; 0x24
 8008b9c:	ee1a 0a10 	vmov	r0, s20
 8008ba0:	aa0a      	add	r2, sp, #40	; 0x28
 8008ba2:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8008ba6:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8008baa:	f00d f80c 	bl	8015bc6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8008bae:	2262      	movs	r2, #98	; 0x62
 8008bb0:	f8a4 2164 	strh.w	r2, [r4, #356]	; 0x164
        updateTextPosition();
 8008bb4:	ee1a 0a10 	vmov	r0, s20
 8008bb8:	f7fa fda0 	bl	80036fc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8008bbc:	ee1a 1a10 	vmov	r1, s20
 8008bc0:	4630      	mov	r0, r6
        colorPressed = col;
 8008bc2:	e9c4 aa5a 	strd	sl, sl, [r4, #360]	; 0x168
 8008bc6:	f8c4 9154 	str.w	r9, [r4, #340]	; 0x154
 8008bca:	f009 fe19 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_1Phase.setXY(33, 100);
 8008bce:	ee1a 0a90 	vmov	r0, s21
 8008bd2:	2264      	movs	r2, #100	; 0x64
 8008bd4:	2121      	movs	r1, #33	; 0x21
 8008bd6:	f7fa fd4d 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel_1Phase.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8008bda:	aa0a      	add	r2, sp, #40	; 0x28
 8008bdc:	2303      	movs	r3, #3
 8008bde:	a909      	add	r1, sp, #36	; 0x24
 8008be0:	ee1a 0a90 	vmov	r0, s21
 8008be4:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8008be8:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8008bec:	f00c ffeb 	bl	8015bc6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8008bf0:	2361      	movs	r3, #97	; 0x61
 8008bf2:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
        updateTextPosition();
 8008bf6:	ee1a 0a90 	vmov	r0, s21
 8008bfa:	f7fa fd7f 	bl	80036fc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8008bfe:	ee1a 1a90 	vmov	r1, s21
 8008c02:	4630      	mov	r0, r6
        colorPressed = col;
 8008c04:	e9c4 aa6c 	strd	sl, sl, [r4, #432]	; 0x1b0
 8008c08:	f8c4 919c 	str.w	r9, [r4, #412]	; 0x19c
 8008c0c:	f009 fdf8 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line2.setPosition(0, 75, 240, 10);
 8008c10:	230a      	movs	r3, #10
 8008c12:	9300      	str	r3, [sp, #0]
 8008c14:	224b      	movs	r2, #75	; 0x4b
 8008c16:	23f0      	movs	r3, #240	; 0xf0
 8008c18:	4629      	mov	r1, r5
 8008c1a:	4638      	mov	r0, r7
 8008c1c:	f7fa fd37 	bl	800368e <_ZN8touchgfx8Drawable11setPositionEssss>
 8008c20:	9b02      	ldr	r3, [sp, #8]
 8008c22:	f8c4 31e4 	str.w	r3, [r4, #484]	; 0x1e4
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8008c26:	22a0      	movs	r2, #160	; 0xa0
 8008c28:	4611      	mov	r1, r2
 8008c2a:	4638      	mov	r0, r7
 8008c2c:	f8c4 a238 	str.w	sl, [r4, #568]	; 0x238
        color565 = LCD16bpp::getNativeColor(painterColor);
 8008c30:	f8a4 a23c 	strh.w	sl, [r4, #572]	; 0x23c
 8008c34:	f00b ffc6 	bl	8014bc4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8008c38:	22a0      	movs	r2, #160	; 0xa0
 8008c3a:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8008c3e:	4638      	mov	r0, r7
 8008c40:	f00b ffcb 	bl	8014bda <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8008c44:	f8d4 31f8 	ldr.w	r3, [r4, #504]	; 0x1f8
 8008c48:	2b20      	cmp	r3, #32
 8008c4a:	d005      	beq.n	8008c58 <_ZN26Measurement_SingleViewBaseC1Ev+0x364>
        lineWidthQ5 = widthQ5;
 8008c4c:	2320      	movs	r3, #32
 8008c4e:	f8c4 31f8 	str.w	r3, [r4, #504]	; 0x1f8
        updateCachedShape();
 8008c52:	4638      	mov	r0, r7
 8008c54:	f00b fec0 	bl	80149d8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8008c58:	4638      	mov	r0, r7
 8008c5a:	2101      	movs	r1, #1
 8008c5c:	f00b ffc8 	bl	8014bf0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8008c60:	4639      	mov	r1, r7
 8008c62:	4630      	mov	r0, r6
 8008c64:	f009 fdcc 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8008c68:	f04f 37ff 	mov.w	r7, #4294967295
    textArea_menu.setXY(41, 60);
 8008c6c:	223c      	movs	r2, #60	; 0x3c
 8008c6e:	ee18 0a10 	vmov	r0, s16
 8008c72:	2129      	movs	r1, #41	; 0x29
        linespace = space;
 8008c74:	f04f 0800 	mov.w	r8, #0
        boundingArea = calculateBoundingArea();
 8008c78:	ad04      	add	r5, sp, #16
 8008c7a:	f7fa fcfb 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
 8008c7e:	ee18 1a10 	vmov	r1, s16
 8008c82:	4628      	mov	r0, r5
        color = newColor;
 8008c84:	f8c4 7270 	str.w	r7, [r4, #624]	; 0x270
        linespace = space;
 8008c88:	f8a4 8274 	strh.w	r8, [r4, #628]	; 0x274
        boundingArea = calculateBoundingArea();
 8008c8c:	f00c f946 	bl	8014f1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008c90:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008c94:	ee18 3a10 	vmov	r3, s16
 8008c98:	333c      	adds	r3, #60	; 0x3c
 8008c9a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8008c9e:	4b49      	ldr	r3, [pc, #292]	; (8008dc4 <_ZN26Measurement_SingleViewBaseC1Ev+0x4d0>)
 8008ca0:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_menu.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1QNY));
 8008ca2:	ee18 0a10 	vmov	r0, s16
 8008ca6:	2352      	movs	r3, #82	; 0x52
 8008ca8:	a90a      	add	r1, sp, #40	; 0x28
 8008caa:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008cae:	f00c fbcf 	bl	8015450 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008cb2:	ee18 1a10 	vmov	r1, s16
 8008cb6:	4630      	mov	r0, r6
 8008cb8:	f009 fda2 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8008cbc:	230a      	movs	r3, #10
 8008cbe:	9300      	str	r3, [sp, #0]
 8008cc0:	2232      	movs	r2, #50	; 0x32
 8008cc2:	23f0      	movs	r3, #240	; 0xf0
 8008cc4:	4641      	mov	r1, r8
 8008cc6:	4658      	mov	r0, fp
 8008cc8:	f7fa fce1 	bl	800368e <_ZN8touchgfx8Drawable11setPositionEssss>
 8008ccc:	9b03      	ldr	r3, [sp, #12]
 8008cce:	f8c4 32b0 	str.w	r3, [r4, #688]	; 0x2b0
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8008cd2:	22a0      	movs	r2, #160	; 0xa0
 8008cd4:	4611      	mov	r1, r2
 8008cd6:	4658      	mov	r0, fp
 8008cd8:	f8c4 7304 	str.w	r7, [r4, #772]	; 0x304
 8008cdc:	f8a4 7308 	strh.w	r7, [r4, #776]	; 0x308
 8008ce0:	f00b ff70 	bl	8014bc4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8008ce4:	22a0      	movs	r2, #160	; 0xa0
 8008ce6:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8008cea:	4658      	mov	r0, fp
 8008cec:	f00b ff75 	bl	8014bda <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8008cf0:	f8d4 32c4 	ldr.w	r3, [r4, #708]	; 0x2c4
 8008cf4:	2b20      	cmp	r3, #32
 8008cf6:	d005      	beq.n	8008d04 <_ZN26Measurement_SingleViewBaseC1Ev+0x410>
        lineWidthQ5 = widthQ5;
 8008cf8:	2320      	movs	r3, #32
 8008cfa:	f8c4 32c4 	str.w	r3, [r4, #708]	; 0x2c4
        updateCachedShape();
 8008cfe:	4658      	mov	r0, fp
 8008d00:	f00b fe6a 	bl	80149d8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8008d04:	4658      	mov	r0, fp
 8008d06:	2101      	movs	r1, #1
 8008d08:	f00b ff72 	bl	8014bf0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8008d0c:	4659      	mov	r1, fp
 8008d0e:	4630      	mov	r0, r6
 8008d10:	f009 fd76 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8008d14:	f04f 38ff 	mov.w	r8, #4294967295
    textArea_name.setXY(69, 35);
 8008d18:	ee18 0a90 	vmov	r0, s17
 8008d1c:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 8008d1e:	2700      	movs	r7, #0
 8008d20:	2145      	movs	r1, #69	; 0x45
 8008d22:	f7fa fca7 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8008d26:	ee18 1a90 	vmov	r1, s17
 8008d2a:	4628      	mov	r0, r5
        color = newColor;
 8008d2c:	f8c4 833c 	str.w	r8, [r4, #828]	; 0x33c
        linespace = space;
 8008d30:	f8a4 7340 	strh.w	r7, [r4, #832]	; 0x340
        boundingArea = calculateBoundingArea();
 8008d34:	f00c f8f2 	bl	8014f1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008d38:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008d3c:	ee18 3a90 	vmov	r3, s17
 8008d40:	333c      	adds	r3, #60	; 0x3c
 8008d42:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008d46:	4b1f      	ldr	r3, [pc, #124]	; (8008dc4 <_ZN26Measurement_SingleViewBaseC1Ev+0x4d0>)
 8008d48:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_name.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T0FJ));
 8008d4a:	ee18 0a90 	vmov	r0, s17
 8008d4e:	2311      	movs	r3, #17
 8008d50:	a90a      	add	r1, sp, #40	; 0x28
 8008d52:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008d56:	f00c fb7b 	bl	8015450 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008d5a:	ee18 1a90 	vmov	r1, s17
 8008d5e:	4630      	mov	r0, r6
 8008d60:	f009 fd4e 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_title.setXY(54, 12);
 8008d64:	ee19 0a10 	vmov	r0, s18
 8008d68:	220c      	movs	r2, #12
 8008d6a:	2136      	movs	r1, #54	; 0x36
 8008d6c:	f7fa fc82 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
 8008d70:	ee19 1a10 	vmov	r1, s18
 8008d74:	4628      	mov	r0, r5
        color = newColor;
 8008d76:	f8c4 8384 	str.w	r8, [r4, #900]	; 0x384
        linespace = space;
 8008d7a:	f8a4 7388 	strh.w	r7, [r4, #904]	; 0x388
        boundingArea = calculateBoundingArea();
 8008d7e:	f00c f8cd 	bl	8014f1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008d82:	ee19 2a10 	vmov	r2, s18
 8008d86:	f102 033c 	add.w	r3, r2, #60	; 0x3c
 8008d8a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008d8e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008d92:	4b0c      	ldr	r3, [pc, #48]	; (8008dc4 <_ZN26Measurement_SingleViewBaseC1Ev+0x4d0>)
 8008d94:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_title.setTypedText(touchgfx::TypedText(T___SINGLEUSE_3BUV));
 8008d96:	ee19 0a10 	vmov	r0, s18
 8008d9a:	2310      	movs	r3, #16
 8008d9c:	a90a      	add	r1, sp, #40	; 0x28
 8008d9e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008da2:	f00c fb55 	bl	8015450 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008da6:	4630      	mov	r0, r6
 8008da8:	ee19 1a10 	vmov	r1, s18
 8008dac:	f009 fd28 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8008db0:	4620      	mov	r0, r4
 8008db2:	b00d      	add	sp, #52	; 0x34
 8008db4:	ecbd 8b06 	vpop	{d8-d10}
 8008db8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008dbc:	200138a0 	.word	0x200138a0
 8008dc0:	0802f491 	.word	0x0802f491
 8008dc4:	0802f504 	.word	0x0802f504

08008dc8 <_ZN37Measurement_Single_Display_1PViewBase7testGuiEv>:
     * Virtual Action Handlers
     */
    virtual void testGui()
    {
        // Override and implement this function in Measurement_Single_Display_1P
    }
 8008dc8:	4770      	bx	lr

08008dca <_ZN37Measurement_Single_Display_1PViewBase11setupScreenEv>:
}

void Measurement_Single_Display_1PViewBase::setupScreen()
{

}
 8008dca:	4770      	bx	lr

08008dcc <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8008dcc:	4770      	bx	lr

08008dce <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8008dce:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8008dd0:	68c2      	ldr	r2, [r0, #12]
 8008dd2:	6844      	ldr	r4, [r0, #4]
 8008dd4:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8008dd6:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8008dd8:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8008ddc:	07d2      	lsls	r2, r2, #31
 8008dde:	bf48      	it	mi
 8008de0:	5962      	ldrmi	r2, [r4, r5]
 8008de2:	689b      	ldr	r3, [r3, #8]
    }
 8008de4:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8008de6:	bf48      	it	mi
 8008de8:	58d3      	ldrmi	r3, [r2, r3]
 8008dea:	4718      	bx	r3

08008dec <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8008dec:	6843      	ldr	r3, [r0, #4]
 8008dee:	b12b      	cbz	r3, 8008dfc <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8008df0:	6883      	ldr	r3, [r0, #8]
 8008df2:	b92b      	cbnz	r3, 8008e00 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8008df4:	68c0      	ldr	r0, [r0, #12]
 8008df6:	f000 0001 	and.w	r0, r0, #1
 8008dfa:	4770      	bx	lr
 8008dfc:	4618      	mov	r0, r3
 8008dfe:	4770      	bx	lr
 8008e00:	2001      	movs	r0, #1
    }
 8008e02:	4770      	bx	lr

08008e04 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8008e04:	b510      	push	{r4, lr}
 8008e06:	2110      	movs	r1, #16
 8008e08:	4604      	mov	r4, r0
 8008e0a:	f023 feba 	bl	802cb82 <_ZdlPvj>
 8008e0e:	4620      	mov	r0, r4
 8008e10:	bd10      	pop	{r4, pc}
	...

08008e14 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>:
Measurement_Single_Display_1PViewBase::~Measurement_Single_Display_1PViewBase()
 8008e14:	b510      	push	{r4, lr}
 8008e16:	4b03      	ldr	r3, [pc, #12]	; (8008e24 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev+0x10>)
 8008e18:	6003      	str	r3, [r0, #0]
 8008e1a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8008e1c:	f00e f8c6 	bl	8016fac <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8008e20:	4620      	mov	r0, r4
 8008e22:	bd10      	pop	{r4, pc}
 8008e24:	08030c6c 	.word	0x08030c6c

08008e28 <_ZN37Measurement_Single_Display_1PViewBaseD0Ev>:
Measurement_Single_Display_1PViewBase::~Measurement_Single_Display_1PViewBase()
 8008e28:	b507      	push	{r0, r1, r2, lr}
 8008e2a:	4b07      	ldr	r3, [pc, #28]	; (8008e48 <_ZN37Measurement_Single_Display_1PViewBaseD0Ev+0x20>)
 8008e2c:	6003      	str	r3, [r0, #0]
 8008e2e:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8008e30:	f00e f8bc 	bl	8016fac <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8008e34:	9801      	ldr	r0, [sp, #4]
 8008e36:	f241 417c 	movw	r1, #5244	; 0x147c
 8008e3a:	f023 fea2 	bl	802cb82 <_ZdlPvj>
 8008e3e:	9801      	ldr	r0, [sp, #4]
 8008e40:	b003      	add	sp, #12
 8008e42:	f85d fb04 	ldr.w	pc, [sp], #4
 8008e46:	bf00      	nop
 8008e48:	08030c6c 	.word	0x08030c6c

08008e4c <_ZN37Measurement_Single_Display_1PViewBase15handleTickEventEv>:
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
    }
}

void Measurement_Single_Display_1PViewBase::handleTickEvent()
{
 8008e4c:	b510      	push	{r4, lr}
    frameCountInteraction2Interval++;
 8008e4e:	f500 5480 	add.w	r4, r0, #4096	; 0x1000
 8008e52:	f8d4 2478 	ldr.w	r2, [r4, #1144]	; 0x478
 8008e56:	3201      	adds	r2, #1
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 8008e58:	2a05      	cmp	r2, #5
    frameCountInteraction2Interval++;
 8008e5a:	f8c4 2478 	str.w	r2, [r4, #1144]	; 0x478
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 8008e5e:	d105      	bne.n	8008e6c <_ZN37Measurement_Single_Display_1PViewBase15handleTickEventEv+0x20>
    {
        //Interaction2
        //When every N tick call virtual function
        //Call testGui
        testGui();
 8008e60:	6803      	ldr	r3, [r0, #0]
 8008e62:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008e64:	4798      	blx	r3
        frameCountInteraction2Interval = 0;
 8008e66:	2300      	movs	r3, #0
 8008e68:	f8c4 3478 	str.w	r3, [r4, #1144]	; 0x478
    }
}
 8008e6c:	bd10      	pop	{r4, pc}

08008e6e <_ZN37Measurement_Single_Display_1PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    if (&src == &buttonWithLabel_return)
 8008e6e:	3098      	adds	r0, #152	; 0x98
 8008e70:	4288      	cmp	r0, r1
{
 8008e72:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel_return)
 8008e74:	d105      	bne.n	8008e82 <_ZN37Measurement_Single_Display_1PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8008e76:	f00f fd9b 	bl	80189b0 <_ZN8touchgfx11Application11getInstanceEv>
}
 8008e7a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8008e7e:	f7fc bbaf 	b.w	80055e0 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
}
 8008e82:	bd08      	pop	{r3, pc}

08008e84 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev>:
Measurement_Single_Display_1PViewBase::Measurement_Single_Display_1PViewBase() :
 8008e84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008e88:	ed2d 8b0a 	vpush	{d8-d12}
 8008e8c:	4604      	mov	r4, r0
 8008e8e:	b08d      	sub	sp, #52	; 0x34
    frameCountInteraction2Interval(0)
 8008e90:	46a0      	mov	r8, r4
 8008e92:	2500      	movs	r5, #0
 8008e94:	f011 fa0c 	bl	801a2b0 <_ZN8touchgfx6ScreenC1Ev>
 8008e98:	4bce      	ldr	r3, [pc, #824]	; (80091d4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x350>)
 8008e9a:	63e5      	str	r5, [r4, #60]	; 0x3c
 8008e9c:	f848 3b40 	str.w	r3, [r8], #64
        : Widget(), alpha(255), color(0)
 8008ea0:	2226      	movs	r2, #38	; 0x26
 8008ea2:	4629      	mov	r1, r5
 8008ea4:	4640      	mov	r0, r8
 8008ea6:	f024 ff58 	bl	802dd5a <memset>
 8008eaa:	4640      	mov	r0, r8
 8008eac:	f7fa fc14 	bl	80036d8 <_ZN8touchgfx6WidgetC1Ev>
 8008eb0:	f104 076c 	add.w	r7, r4, #108	; 0x6c
 8008eb4:	26ff      	movs	r6, #255	; 0xff
 8008eb6:	4bc8      	ldr	r3, [pc, #800]	; (80091d8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x354>)
 8008eb8:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8008eba:	2226      	movs	r2, #38	; 0x26
 8008ebc:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8008ec0:	4629      	mov	r1, r5
 8008ec2:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8008ec6:	4638      	mov	r0, r7
 8008ec8:	66a5      	str	r5, [r4, #104]	; 0x68
 8008eca:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8008ece:	f024 ff44 	bl	802dd5a <memset>
 8008ed2:	4638      	mov	r0, r7
 8008ed4:	f7fa fc00 	bl	80036d8 <_ZN8touchgfx6WidgetC1Ev>
 8008ed8:	4bc0      	ldr	r3, [pc, #768]	; (80091dc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x358>)
 8008eda:	66e3      	str	r3, [r4, #108]	; 0x6c
 8008edc:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8008ee0:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8008ee4:	a90a      	add	r1, sp, #40	; 0x28
 8008ee6:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8008eea:	4638      	mov	r0, r7
        : Widget(), bitmap(bmp), alpha(255)
 8008eec:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8008ef0:	f00d f85f 	bl	8015fb2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8008ef4:	4658      	mov	r0, fp
 8008ef6:	f00d f993 	bl	8016220 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8008efa:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 8008efe:	f504 7994 	add.w	r9, r4, #296	; 0x128
 8008f02:	4618      	mov	r0, r3
 8008f04:	ee0a 3a90 	vmov	s21, r3
 8008f08:	f7fa fc4a 	bl	80037a0 <_ZN8touchgfx8TextAreaC1Ev>
 8008f0c:	4648      	mov	r0, r9
 8008f0e:	f7fa fc47 	bl	80037a0 <_ZN8touchgfx8TextAreaC1Ev>
 8008f12:	f504 73b8 	add.w	r3, r4, #368	; 0x170
 8008f16:	4618      	mov	r0, r3
 8008f18:	ee0b 3a10 	vmov	s22, r3
 8008f1c:	f7fa fc40 	bl	80037a0 <_ZN8touchgfx8TextAreaC1Ev>
 8008f20:	f504 73dc 	add.w	r3, r4, #440	; 0x1b8
        : TextArea()
 8008f24:	4618      	mov	r0, r3
 8008f26:	ee0b 3a90 	vmov	s23, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8008f2a:	4ead      	ldr	r6, [pc, #692]	; (80091e0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x35c>)
        : TextArea()
 8008f2c:	f7fa fc38 	bl	80037a0 <_ZN8touchgfx8TextAreaC1Ev>
 8008f30:	f504 7301 	add.w	r3, r4, #516	; 0x204
        : TextAreaWithWildcardBase(), wc1(0)
 8008f34:	f8c4 61b8 	str.w	r6, [r4, #440]	; 0x1b8
        : TextArea()
 8008f38:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8008f3a:	f8c4 5200 	str.w	r5, [r4, #512]	; 0x200
 8008f3e:	ee0c 3a10 	vmov	s24, r3
        : TextArea()
 8008f42:	f7fa fc2d 	bl	80037a0 <_ZN8touchgfx8TextAreaC1Ev>
 8008f46:	f504 7314 	add.w	r3, r4, #592	; 0x250
 8008f4a:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8008f4c:	f8c4 6204 	str.w	r6, [r4, #516]	; 0x204
 8008f50:	f8c4 524c 	str.w	r5, [r4, #588]	; 0x24c
 8008f54:	f504 7a27 	add.w	sl, r4, #668	; 0x29c
 8008f58:	ee0c 3a90 	vmov	s25, r3
        : TextArea()
 8008f5c:	f7fa fc20 	bl	80037a0 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8008f60:	f8c4 6250 	str.w	r6, [r4, #592]	; 0x250
 8008f64:	f8c4 5298 	str.w	r5, [r4, #664]	; 0x298
 8008f68:	4650      	mov	r0, sl
 8008f6a:	f00c fce5 	bl	8015938 <_ZN8touchgfx5GaugeC1Ev>
 8008f6e:	f204 433c 	addw	r3, r4, #1084	; 0x43c
 8008f72:	4618      	mov	r0, r3
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8008f74:	4e9b      	ldr	r6, [pc, #620]	; (80091e4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x360>)
 8008f76:	ee08 3a10 	vmov	s16, r3
 8008f7a:	f00b fd0d 	bl	8014998 <_ZN8touchgfx4LineC1Ev>
 8008f7e:	f204 43ac 	addw	r3, r4, #1196	; 0x4ac
 8008f82:	4618      	mov	r0, r3
 8008f84:	9302      	str	r3, [sp, #8]
 8008f86:	f7fa f9ab 	bl	80032e0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8008f8a:	f106 0324 	add.w	r3, r6, #36	; 0x24
 8008f8e:	f8c4 34b4 	str.w	r3, [r4, #1204]	; 0x4b4
 8008f92:	f504 6398 	add.w	r3, r4, #1216	; 0x4c0
 8008f96:	f8c4 64ac 	str.w	r6, [r4, #1196]	; 0x4ac
 8008f9a:	4618      	mov	r0, r3
 8008f9c:	f8c4 54b8 	str.w	r5, [r4, #1208]	; 0x4b8
 8008fa0:	ee09 3a10 	vmov	s18, r3
 8008fa4:	f7fa fbfc 	bl	80037a0 <_ZN8touchgfx8TextAreaC1Ev>
 8008fa8:	f504 63a1 	add.w	r3, r4, #1288	; 0x508
 8008fac:	4618      	mov	r0, r3
 8008fae:	ee08 3a90 	vmov	s17, r3
 8008fb2:	f00b fcf1 	bl	8014998 <_ZN8touchgfx4LineC1Ev>
 8008fb6:	f504 63af 	add.w	r3, r4, #1400	; 0x578
 8008fba:	4618      	mov	r0, r3
 8008fbc:	9303      	str	r3, [sp, #12]
 8008fbe:	f7fa f98f 	bl	80032e0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8008fc2:	f106 0324 	add.w	r3, r6, #36	; 0x24
 8008fc6:	f8c4 3580 	str.w	r3, [r4, #1408]	; 0x580
 8008fca:	f204 538c 	addw	r3, r4, #1420	; 0x58c
 8008fce:	f8c4 6578 	str.w	r6, [r4, #1400]	; 0x578
 8008fd2:	4618      	mov	r0, r3
 8008fd4:	f8c4 5584 	str.w	r5, [r4, #1412]	; 0x584
 8008fd8:	ee09 3a90 	vmov	s19, r3
 8008fdc:	f7fa fbe0 	bl	80037a0 <_ZN8touchgfx8TextAreaC1Ev>
 8008fe0:	f204 53d4 	addw	r3, r4, #1492	; 0x5d4
 8008fe4:	4618      	mov	r0, r3
 8008fe6:	ee0a 3a10 	vmov	s20, r3
 8008fea:	f7fa fbd9 	bl	80037a0 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8008fee:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8008ff2:	4a7d      	ldr	r2, [pc, #500]	; (80091e8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x364>)
 8008ff4:	f8c3 2468 	str.w	r2, [r3, #1128]	; 0x468
 8008ff8:	4a7c      	ldr	r2, [pc, #496]	; (80091ec <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x368>)
 8008ffa:	f8c3 2470 	str.w	r2, [r3, #1136]	; 0x470
 8008ffe:	f8c3 446c 	str.w	r4, [r3, #1132]	; 0x46c
 8009002:	f8c3 5474 	str.w	r5, [r3, #1140]	; 0x474
 8009006:	f8c3 5478 	str.w	r5, [r3, #1144]	; 0x478
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800900a:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800900e:	f504 60cb 	add.w	r0, r4, #1624	; 0x658
 8009012:	f00d ffc1 	bl	8016f98 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8009016:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800901a:	462a      	mov	r2, r5
 800901c:	4640      	mov	r0, r8
 800901e:	9300      	str	r3, [sp, #0]
 8009020:	4629      	mov	r1, r5
 8009022:	23f0      	movs	r3, #240	; 0xf0
 8009024:	f7fa fb33 	bl	800368e <_ZN8touchgfx8Drawable11setPositionEssss>
 8009028:	1d26      	adds	r6, r4, #4
        color = newColor;
 800902a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800902e:	66a3      	str	r3, [r4, #104]	; 0x68
 8009030:	4641      	mov	r1, r8
 8009032:	4630      	mov	r0, r6
 8009034:	f009 fbe4 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image_background.setXY(0, 0);
 8009038:	462a      	mov	r2, r5
 800903a:	4638      	mov	r0, r7
 800903c:	4629      	mov	r1, r5
 800903e:	f7fa fb19 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
 8009042:	f04f 0308 	mov.w	r3, #8
    image_background.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8009046:	4638      	mov	r0, r7
 8009048:	a90a      	add	r1, sp, #40	; 0x28
 800904a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800904e:	f00c ffb0 	bl	8015fb2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8009052:	4639      	mov	r1, r7
 8009054:	4630      	mov	r0, r6
 8009056:	f009 fbd3 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_return.setXY(33, 256);
 800905a:	4658      	mov	r0, fp
 800905c:	f44f 7280 	mov.w	r2, #256	; 0x100
 8009060:	2121      	movs	r1, #33	; 0x21
 8009062:	f7fa fb07 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
 8009066:	2303      	movs	r3, #3
    buttonWithLabel_return.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8009068:	aa0a      	add	r2, sp, #40	; 0x28
 800906a:	a909      	add	r1, sp, #36	; 0x24
 800906c:	4658      	mov	r0, fp
 800906e:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8009072:	2302      	movs	r3, #2
 8009074:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8009078:	f00c fda5 	bl	8015bc6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 800907c:	2356      	movs	r3, #86	; 0x56
        updateTextPosition();
 800907e:	4658      	mov	r0, fp
 8009080:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 8009084:	f7fa fb3a 	bl	80036fc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel_return.setAction(buttonCallback);
 8009088:	f504 53a3 	add.w	r3, r4, #5216	; 0x1460
        color = col;
 800908c:	f04f 38ff 	mov.w	r8, #4294967295
 8009090:	3308      	adds	r3, #8
 8009092:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8009096:	4659      	mov	r1, fp
 8009098:	4630      	mov	r0, r6
        colorPressed = col;
 800909a:	e9c4 8835 	strd	r8, r8, [r4, #212]	; 0xd4
 800909e:	af04      	add	r7, sp, #16
 80090a0:	f009 fbae 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_n90C.setXY(0, 194);
 80090a4:	22c2      	movs	r2, #194	; 0xc2
 80090a6:	ee1a 0a90 	vmov	r0, s21
 80090aa:	4629      	mov	r1, r5
 80090ac:	f7fa fae2 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
 80090b0:	ee1a 1a90 	vmov	r1, s21
 80090b4:	4638      	mov	r0, r7
        color = newColor;
 80090b6:	f8c4 8110 	str.w	r8, [r4, #272]	; 0x110
        linespace = space;
 80090ba:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 80090be:	f00b ff2d 	bl	8014f1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80090c2:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80090c6:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 80090ca:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80090ce:	4b48      	ldr	r3, [pc, #288]	; (80091f0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x36c>)
 80090d0:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_n90C.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VCZH));
 80090d2:	ee1a 0a90 	vmov	r0, s21
 80090d6:	2338      	movs	r3, #56	; 0x38
 80090d8:	a90a      	add	r1, sp, #40	; 0x28
 80090da:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80090de:	f00c f9b7 	bl	8015450 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80090e2:	ee1a 1a90 	vmov	r1, s21
 80090e6:	4630      	mov	r0, r6
 80090e8:	f009 fb8a 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_p90C.setXY(217, 194);
 80090ec:	22c2      	movs	r2, #194	; 0xc2
 80090ee:	4648      	mov	r0, r9
 80090f0:	21d9      	movs	r1, #217	; 0xd9
 80090f2:	f7fa fabf 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
 80090f6:	4649      	mov	r1, r9
 80090f8:	4638      	mov	r0, r7
        color = newColor;
 80090fa:	f8c4 8158 	str.w	r8, [r4, #344]	; 0x158
        linespace = space;
 80090fe:	f8a4 515c 	strh.w	r5, [r4, #348]	; 0x15c
        boundingArea = calculateBoundingArea();
 8009102:	f00b ff0b 	bl	8014f1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8009106:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 800910a:	f504 73b2 	add.w	r3, r4, #356	; 0x164
 800910e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8009112:	4b37      	ldr	r3, [pc, #220]	; (80091f0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x36c>)
 8009114:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_p90C.setTypedText(touchgfx::TypedText(T___SINGLEUSE_B5GD));
 8009116:	4648      	mov	r0, r9
 8009118:	2339      	movs	r3, #57	; 0x39
 800911a:	a90a      	add	r1, sp, #40	; 0x28
 800911c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8009120:	f00c f996 	bl	8015450 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8009124:	4649      	mov	r1, r9
 8009126:	4630      	mov	r0, r6
 8009128:	f009 fb6a 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_0C.setXY(113, 85);
 800912c:	2255      	movs	r2, #85	; 0x55
 800912e:	ee1b 0a10 	vmov	r0, s22
 8009132:	2171      	movs	r1, #113	; 0x71
 8009134:	f7fa fa9e 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
 8009138:	ee1b 1a10 	vmov	r1, s22
 800913c:	4638      	mov	r0, r7
        color = newColor;
 800913e:	f8c4 81a0 	str.w	r8, [r4, #416]	; 0x1a0
        linespace = space;
 8009142:	f8a4 51a4 	strh.w	r5, [r4, #420]	; 0x1a4
        boundingArea = calculateBoundingArea();
 8009146:	f00b fee9 	bl	8014f1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800914a:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 800914e:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 8009152:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8009156:	4b26      	ldr	r3, [pc, #152]	; (80091f0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x36c>)
 8009158:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_0C.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q5GP));
 800915a:	ee1b 0a10 	vmov	r0, s22
 800915e:	2337      	movs	r3, #55	; 0x37
 8009160:	a90a      	add	r1, sp, #40	; 0x28
 8009162:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8009166:	f00c f973 	bl	8015450 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800916a:	ee1b 1a10 	vmov	r1, s22
 800916e:	4630      	mov	r0, r6
 8009170:	f009 fb46 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Current.setPosition(0, 239, 240, 15);
 8009174:	230f      	movs	r3, #15
 8009176:	22ef      	movs	r2, #239	; 0xef
 8009178:	ee1b 0a90 	vmov	r0, s23
 800917c:	9300      	str	r3, [sp, #0]
 800917e:	4629      	mov	r1, r5
 8009180:	23f0      	movs	r3, #240	; 0xf0
 8009182:	f7fa fa84 	bl	800368e <_ZN8touchgfx8Drawable11setPositionEssss>
 8009186:	f8d4 31b8 	ldr.w	r3, [r4, #440]	; 0x1b8
        color = newColor;
 800918a:	f8c4 81e8 	str.w	r8, [r4, #488]	; 0x1e8
        boundingArea = calculateBoundingArea();
 800918e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8009192:	f8a4 51ec 	strh.w	r5, [r4, #492]	; 0x1ec
        boundingArea = calculateBoundingArea();
 8009196:	ee1b 1a90 	vmov	r1, s23
 800919a:	4638      	mov	r0, r7
 800919c:	4798      	blx	r3
 800919e:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80091a2:	f8df b064 	ldr.w	fp, [pc, #100]	; 8009208 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x384>
 80091a6:	f504 73fa 	add.w	r3, r4, #500	; 0x1f4
 80091aa:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80091ae:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(SMD1_CurrentBuffer, SMD1_CURRENT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_LFLK).getText());
 80091b2:	f204 691c 	addw	r9, r4, #1564	; 0x61c
 80091b6:	b92b      	cbnz	r3, 80091c4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x340>
 80091b8:	4b0e      	ldr	r3, [pc, #56]	; (80091f4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x370>)
 80091ba:	4a0f      	ldr	r2, [pc, #60]	; (80091f8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x374>)
 80091bc:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80091be:	480f      	ldr	r0, [pc, #60]	; (80091fc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x378>)
 80091c0:	f024 fbc6 	bl	802d950 <__assert_func>
 80091c4:	4b0e      	ldr	r3, [pc, #56]	; (8009200 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x37c>)
 80091c6:	881b      	ldrh	r3, [r3, #0]
 80091c8:	2b1b      	cmp	r3, #27
 80091ca:	d81f      	bhi.n	800920c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x388>
 80091cc:	4b0d      	ldr	r3, [pc, #52]	; (8009204 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x380>)
 80091ce:	4a0a      	ldr	r2, [pc, #40]	; (80091f8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x374>)
 80091d0:	2161      	movs	r1, #97	; 0x61
 80091d2:	e7f4      	b.n	80091be <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x33a>
 80091d4:	08030c6c 	.word	0x08030c6c
 80091d8:	08031a58 	.word	0x08031a58
 80091dc:	08031ca4 	.word	0x08031ca4
 80091e0:	0802f5a4 	.word	0x0802f5a4
 80091e4:	0803178c 	.word	0x0803178c
 80091e8:	08030c54 	.word	0x08030c54
 80091ec:	08008e6f 	.word	0x08008e6f
 80091f0:	0802f504 	.word	0x0802f504
 80091f4:	0802f354 	.word	0x0802f354
 80091f8:	0802f459 	.word	0x0802f459
 80091fc:	0802f3d1 	.word	0x0802f3d1
 8009200:	20013898 	.word	0x20013898
 8009204:	0802f418 	.word	0x0802f418
 8009208:	20013894 	.word	0x20013894
        return texts->getText(typedTextId);
 800920c:	4bdd      	ldr	r3, [pc, #884]	; (8009584 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x700>)
 800920e:	211b      	movs	r1, #27
 8009210:	6818      	ldr	r0, [r3, #0]
 8009212:	f001 fa41 	bl	800a698 <_ZNK8touchgfx5Texts7getTextEt>
 8009216:	4adc      	ldr	r2, [pc, #880]	; (8009588 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x704>)
 8009218:	4603      	mov	r3, r0
 800921a:	210a      	movs	r1, #10
 800921c:	4648      	mov	r0, r9
 800921e:	f012 fd75 	bl	801bd0c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8009222:	f04f 011c 	mov.w	r1, #28
 8009226:	4ad9      	ldr	r2, [pc, #868]	; (800958c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x708>)
        wc1 = value;
 8009228:	f8c4 9200 	str.w	r9, [r4, #512]	; 0x200
    SMD1_Current.setTypedText(touchgfx::TypedText(T___SINGLEUSE_G8ED));
 800922c:	ee1b 0a90 	vmov	r0, s23
 8009230:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 8009234:	a90a      	add	r1, sp, #40	; 0x28
 8009236:	920a      	str	r2, [sp, #40]	; 0x28
 8009238:	f00c f90a 	bl	8015450 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800923c:	ee1b 1a90 	vmov	r1, s23
 8009240:	4630      	mov	r0, r6
 8009242:	f009 fadd 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Frequency.setPosition(0, 224, 240, 15);
 8009246:	210f      	movs	r1, #15
 8009248:	22e0      	movs	r2, #224	; 0xe0
 800924a:	ee1c 0a10 	vmov	r0, s24
 800924e:	9100      	str	r1, [sp, #0]
 8009250:	23f0      	movs	r3, #240	; 0xf0
 8009252:	4629      	mov	r1, r5
 8009254:	f7fa fa1b 	bl	800368e <_ZN8touchgfx8Drawable11setPositionEssss>
 8009258:	f8d4 3204 	ldr.w	r3, [r4, #516]	; 0x204
        color = newColor;
 800925c:	f8c4 8234 	str.w	r8, [r4, #564]	; 0x234
        boundingArea = calculateBoundingArea();
 8009260:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8009264:	f8a4 5238 	strh.w	r5, [r4, #568]	; 0x238
        boundingArea = calculateBoundingArea();
 8009268:	ee1c 1a10 	vmov	r1, s24
 800926c:	4638      	mov	r0, r7
 800926e:	4798      	blx	r3
 8009270:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8009274:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8009278:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800927c:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(SMD1_FrequencyBuffer, SMD1_FREQUENCY_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_9OHS).getText());
 8009280:	f504 69c6 	add.w	r9, r4, #1584	; 0x630
 8009284:	2b00      	cmp	r3, #0
 8009286:	d097      	beq.n	80091b8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x334>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8009288:	49c1      	ldr	r1, [pc, #772]	; (8009590 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x70c>)
 800928a:	880b      	ldrh	r3, [r1, #0]
 800928c:	2b32      	cmp	r3, #50	; 0x32
 800928e:	d99d      	bls.n	80091cc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x348>
        return texts->getText(typedTextId);
 8009290:	4bbc      	ldr	r3, [pc, #752]	; (8009584 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x700>)
 8009292:	2132      	movs	r1, #50	; 0x32
 8009294:	6818      	ldr	r0, [r3, #0]
 8009296:	f001 f9ff 	bl	800a698 <_ZNK8touchgfx5Texts7getTextEt>
 800929a:	4abb      	ldr	r2, [pc, #748]	; (8009588 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x704>)
 800929c:	4603      	mov	r3, r0
 800929e:	210a      	movs	r1, #10
 80092a0:	4648      	mov	r0, r9
 80092a2:	f012 fd33 	bl	801bd0c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    SMD1_Frequency.setTypedText(touchgfx::TypedText(T___SINGLEUSE_PCCW));
 80092a6:	a80a      	add	r0, sp, #40	; 0x28
        : typedTextId(id)
 80092a8:	4ab8      	ldr	r2, [pc, #736]	; (800958c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x708>)
 80092aa:	f8c4 924c 	str.w	r9, [r4, #588]	; 0x24c
 80092ae:	4601      	mov	r1, r0
 80092b0:	f04f 0935 	mov.w	r9, #53	; 0x35
 80092b4:	ee1c 0a10 	vmov	r0, s24
 80092b8:	920a      	str	r2, [sp, #40]	; 0x28
 80092ba:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 80092be:	f00c f8c7 	bl	8015450 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80092c2:	ee1c 1a10 	vmov	r1, s24
 80092c6:	4630      	mov	r0, r6
 80092c8:	f009 fa9a 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Distance.setPosition(0, 209, 240, 15);
 80092cc:	200f      	movs	r0, #15
 80092ce:	22d1      	movs	r2, #209	; 0xd1
 80092d0:	9000      	str	r0, [sp, #0]
 80092d2:	23f0      	movs	r3, #240	; 0xf0
 80092d4:	ee1c 0a90 	vmov	r0, s25
 80092d8:	4629      	mov	r1, r5
 80092da:	f7fa f9d8 	bl	800368e <_ZN8touchgfx8Drawable11setPositionEssss>
 80092de:	f8d4 3250 	ldr.w	r3, [r4, #592]	; 0x250
        color = newColor;
 80092e2:	f8c4 8280 	str.w	r8, [r4, #640]	; 0x280
        boundingArea = calculateBoundingArea();
 80092e6:	4638      	mov	r0, r7
 80092e8:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 80092ec:	f8a4 5284 	strh.w	r5, [r4, #644]	; 0x284
        boundingArea = calculateBoundingArea();
 80092f0:	ee1c 1a90 	vmov	r1, s25
 80092f4:	4798      	blx	r3
 80092f6:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80092fa:	f504 7323 	add.w	r3, r4, #652	; 0x28c
 80092fe:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8009302:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(SMD1_DistanceBuffer, SMD1_DISTANCE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_LVUK).getText());
 8009306:	f204 6744 	addw	r7, r4, #1604	; 0x644
 800930a:	2b00      	cmp	r3, #0
 800930c:	f43f af54 	beq.w	80091b8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x334>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8009310:	499f      	ldr	r1, [pc, #636]	; (8009590 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x70c>)
 8009312:	880b      	ldrh	r3, [r1, #0]
 8009314:	2b33      	cmp	r3, #51	; 0x33
 8009316:	f67f af59 	bls.w	80091cc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x348>
        return texts->getText(typedTextId);
 800931a:	4b9a      	ldr	r3, [pc, #616]	; (8009584 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x700>)
 800931c:	2133      	movs	r1, #51	; 0x33
 800931e:	6818      	ldr	r0, [r3, #0]
 8009320:	f001 f9ba 	bl	800a698 <_ZNK8touchgfx5Texts7getTextEt>
 8009324:	4a98      	ldr	r2, [pc, #608]	; (8009588 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x704>)
 8009326:	4603      	mov	r3, r0
 8009328:	210a      	movs	r1, #10
 800932a:	4638      	mov	r0, r7
 800932c:	f012 fcee 	bl	801bd0c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8009330:	4a96      	ldr	r2, [pc, #600]	; (800958c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x708>)
 8009332:	f8c4 7298 	str.w	r7, [r4, #664]	; 0x298
 8009336:	2336      	movs	r3, #54	; 0x36
    SMD1_Distance.setTypedText(touchgfx::TypedText(T_AMD3_DISTANCE));
 8009338:	ee1c 0a90 	vmov	r0, s25
 800933c:	a90a      	add	r1, sp, #40	; 0x28
 800933e:	920a      	str	r2, [sp, #40]	; 0x28
 8009340:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8009344:	f00c f884 	bl	8015450 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8009348:	ee1c 1a90 	vmov	r1, s25
 800934c:	4630      	mov	r0, r6
 800934e:	f009 fa57 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8009352:	2304      	movs	r3, #4
    SMD1_Gauge.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_BACKGROUNDS_LIGHT_PRECISION_ID));
 8009354:	a90a      	add	r1, sp, #40	; 0x28
 8009356:	4650      	mov	r0, sl
 8009358:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800935c:	f009 f9e2 	bl	8012724 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    SMD1_Gauge.setPosition(28, 103, 184, 106);
 8009360:	236a      	movs	r3, #106	; 0x6a
 8009362:	9300      	str	r3, [sp, #0]
 8009364:	2267      	movs	r2, #103	; 0x67
 8009366:	23b8      	movs	r3, #184	; 0xb8
 8009368:	211c      	movs	r1, #28
 800936a:	4650      	mov	r0, sl
 800936c:	f7fa f98f 	bl	800368e <_ZN8touchgfx8Drawable11setPositionEssss>
    SMD1_Gauge.setCenter(92, 92);
 8009370:	225c      	movs	r2, #92	; 0x5c
 8009372:	4611      	mov	r1, r2
 8009374:	4650      	mov	r0, sl
 8009376:	f00c fb8a 	bl	8015a8e <_ZN8touchgfx5Gauge9setCenterEii>
    SMD1_Gauge.setStartEndAngle(-90, 90);
 800937a:	225a      	movs	r2, #90	; 0x5a
 800937c:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8009380:	4650      	mov	r0, sl
 8009382:	f00c fc09 	bl	8015b98 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    SMD1_Gauge.setRange(-90, 90);
 8009386:	462b      	mov	r3, r5
 8009388:	225a      	movs	r2, #90	; 0x5a
 800938a:	f06f 0159 	mvn.w	r1, #89	; 0x59
 800938e:	4650      	mov	r0, sl
 8009390:	9500      	str	r5, [sp, #0]
 8009392:	f009 f874 	bl	801247e <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    SMD1_Gauge.setValue(0);
 8009396:	4629      	mov	r1, r5
 8009398:	4650      	mov	r0, sl
 800939a:	f00c fba7 	bl	8015aec <_ZN8touchgfx5Gauge8setValueEi>
    SMD1_Gauge.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_NEEDLES_ROUGH_ID, 8, 53);
 800939e:	464b      	mov	r3, r9
 80093a0:	2208      	movs	r2, #8
 80093a2:	2105      	movs	r1, #5
 80093a4:	4650      	mov	r0, sl
 80093a6:	f00c fb5d 	bl	8015a64 <_ZN8touchgfx5Gauge9setNeedleEtss>
    SMD1_Gauge.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 80093aa:	2101      	movs	r1, #1
 80093ac:	4650      	mov	r0, sl
 80093ae:	f00c fafb 	bl	80159a8 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    SMD1_Gauge.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 80093b2:	2101      	movs	r1, #1
 80093b4:	4650      	mov	r0, sl
 80093b6:	f00c fafa 	bl	80159ae <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
 80093ba:	4651      	mov	r1, sl
 80093bc:	4630      	mov	r0, r6
 80093be:	f009 fa1f 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line2.setPosition(0, 75, 240, 10);
 80093c2:	230a      	movs	r3, #10
 80093c4:	ee18 0a10 	vmov	r0, s16
 80093c8:	9300      	str	r3, [sp, #0]
 80093ca:	224b      	movs	r2, #75	; 0x4b
 80093cc:	23f0      	movs	r3, #240	; 0xf0
 80093ce:	4629      	mov	r1, r5
 80093d0:	f7fa f95d 	bl	800368e <_ZN8touchgfx8Drawable11setPositionEssss>
 80093d4:	9b02      	ldr	r3, [sp, #8]
 80093d6:	f8c4 3464 	str.w	r3, [r4, #1124]	; 0x464
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80093da:	22a0      	movs	r2, #160	; 0xa0
 80093dc:	4611      	mov	r1, r2
 80093de:	ee18 0a10 	vmov	r0, s16
 80093e2:	f8c4 84b8 	str.w	r8, [r4, #1208]	; 0x4b8
        color565 = LCD16bpp::getNativeColor(painterColor);
 80093e6:	f8a4 84bc 	strh.w	r8, [r4, #1212]	; 0x4bc
 80093ea:	f00b fbeb 	bl	8014bc4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80093ee:	ee18 0a10 	vmov	r0, s16
 80093f2:	22a0      	movs	r2, #160	; 0xa0
 80093f4:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80093f8:	f00b fbef 	bl	8014bda <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80093fc:	f8d4 3478 	ldr.w	r3, [r4, #1144]	; 0x478
 8009400:	2b20      	cmp	r3, #32
 8009402:	d006      	beq.n	8009412 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x58e>
        lineWidthQ5 = widthQ5;
 8009404:	2320      	movs	r3, #32
        updateCachedShape();
 8009406:	ee18 0a10 	vmov	r0, s16
        lineWidthQ5 = widthQ5;
 800940a:	f8c4 3478 	str.w	r3, [r4, #1144]	; 0x478
        updateCachedShape();
 800940e:	f00b fae3 	bl	80149d8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8009412:	ee18 0a10 	vmov	r0, s16
 8009416:	2101      	movs	r1, #1
 8009418:	f00b fbea 	bl	8014bf0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800941c:	ee18 1a10 	vmov	r1, s16
 8009420:	4630      	mov	r0, r6
 8009422:	f009 f9ed 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8009426:	f04f 38ff 	mov.w	r8, #4294967295
    textArea_menu.setXY(31, 60);
 800942a:	223c      	movs	r2, #60	; 0x3c
 800942c:	ee19 0a10 	vmov	r0, s18
 8009430:	211f      	movs	r1, #31
        linespace = space;
 8009432:	f04f 0900 	mov.w	r9, #0
        boundingArea = calculateBoundingArea();
 8009436:	ad04      	add	r5, sp, #16
 8009438:	f7fa f91c 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
 800943c:	ee19 1a10 	vmov	r1, s18
 8009440:	4628      	mov	r0, r5
        color = newColor;
 8009442:	f8c4 84f0 	str.w	r8, [r4, #1264]	; 0x4f0
        linespace = space;
 8009446:	f8a4 94f4 	strh.w	r9, [r4, #1268]	; 0x4f4
        boundingArea = calculateBoundingArea();
 800944a:	f00b fd67 	bl	8014f1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800944e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8009452:	ee19 3a10 	vmov	r3, s18
 8009456:	333c      	adds	r3, #60	; 0x3c
 8009458:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800945c:	4f4b      	ldr	r7, [pc, #300]	; (800958c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x708>)
 800945e:	970a      	str	r7, [sp, #40]	; 0x28
 8009460:	2351      	movs	r3, #81	; 0x51
    textArea_menu.setTypedText(touchgfx::TypedText(T___SINGLEUSE_M3QF));
 8009462:	ee19 0a10 	vmov	r0, s18
 8009466:	a90a      	add	r1, sp, #40	; 0x28
 8009468:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800946c:	f00b fff0 	bl	8015450 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8009470:	ee19 1a10 	vmov	r1, s18
 8009474:	4630      	mov	r0, r6
 8009476:	f009 f9c3 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 800947a:	230a      	movs	r3, #10
 800947c:	ee18 0a90 	vmov	r0, s17
 8009480:	9300      	str	r3, [sp, #0]
 8009482:	2232      	movs	r2, #50	; 0x32
 8009484:	23f0      	movs	r3, #240	; 0xf0
 8009486:	4649      	mov	r1, r9
 8009488:	f7fa f901 	bl	800368e <_ZN8touchgfx8Drawable11setPositionEssss>
 800948c:	9b03      	ldr	r3, [sp, #12]
 800948e:	f8c4 3530 	str.w	r3, [r4, #1328]	; 0x530
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8009492:	22a0      	movs	r2, #160	; 0xa0
 8009494:	4611      	mov	r1, r2
 8009496:	ee18 0a90 	vmov	r0, s17
 800949a:	f8c4 8584 	str.w	r8, [r4, #1412]	; 0x584
 800949e:	f8a4 8588 	strh.w	r8, [r4, #1416]	; 0x588
 80094a2:	f00b fb8f 	bl	8014bc4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80094a6:	ee18 0a90 	vmov	r0, s17
 80094aa:	22a0      	movs	r2, #160	; 0xa0
 80094ac:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80094b0:	f00b fb93 	bl	8014bda <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80094b4:	f8d4 3544 	ldr.w	r3, [r4, #1348]	; 0x544
 80094b8:	2b20      	cmp	r3, #32
 80094ba:	d006      	beq.n	80094ca <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x646>
        lineWidthQ5 = widthQ5;
 80094bc:	2320      	movs	r3, #32
        updateCachedShape();
 80094be:	ee18 0a90 	vmov	r0, s17
        lineWidthQ5 = widthQ5;
 80094c2:	f8c4 3544 	str.w	r3, [r4, #1348]	; 0x544
        updateCachedShape();
 80094c6:	f00b fa87 	bl	80149d8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80094ca:	ee18 0a90 	vmov	r0, s17
 80094ce:	2101      	movs	r1, #1
 80094d0:	f00b fb8e 	bl	8014bf0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80094d4:	ee18 1a90 	vmov	r1, s17
 80094d8:	4630      	mov	r0, r6
 80094da:	f009 f991 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 80094de:	f04f 39ff 	mov.w	r9, #4294967295
    textArea_name.setXY(69, 35);
 80094e2:	ee19 0a90 	vmov	r0, s19
 80094e6:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 80094e8:	f04f 0800 	mov.w	r8, #0
 80094ec:	2145      	movs	r1, #69	; 0x45
 80094ee:	f7fa f8c1 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80094f2:	ee19 1a90 	vmov	r1, s19
 80094f6:	4628      	mov	r0, r5
        color = newColor;
 80094f8:	f8c4 95bc 	str.w	r9, [r4, #1468]	; 0x5bc
        linespace = space;
 80094fc:	f8a4 85c0 	strh.w	r8, [r4, #1472]	; 0x5c0
        boundingArea = calculateBoundingArea();
 8009500:	f00b fd0c 	bl	8014f1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8009504:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8009508:	ee19 3a90 	vmov	r3, s19
 800950c:	333c      	adds	r3, #60	; 0x3c
 800950e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8009512:	2358      	movs	r3, #88	; 0x58
    textArea_name.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9O3K));
 8009514:	ee19 0a90 	vmov	r0, s19
 8009518:	a90a      	add	r1, sp, #40	; 0x28
 800951a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800951e:	970a      	str	r7, [sp, #40]	; 0x28
 8009520:	f00b ff96 	bl	8015450 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8009524:	ee19 1a90 	vmov	r1, s19
 8009528:	4630      	mov	r0, r6
 800952a:	f009 f969 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_titel.setXY(54, 12);
 800952e:	ee1a 0a10 	vmov	r0, s20
 8009532:	220c      	movs	r2, #12
 8009534:	2136      	movs	r1, #54	; 0x36
 8009536:	f7fa f89d 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
 800953a:	ee1a 1a10 	vmov	r1, s20
 800953e:	4628      	mov	r0, r5
        color = newColor;
 8009540:	f8c4 9604 	str.w	r9, [r4, #1540]	; 0x604
        linespace = space;
 8009544:	f8a4 8608 	strh.w	r8, [r4, #1544]	; 0x608
        boundingArea = calculateBoundingArea();
 8009548:	f00b fce8 	bl	8014f1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800954c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8009550:	ee1a 3a10 	vmov	r3, s20
 8009554:	333c      	adds	r3, #60	; 0x3c
 8009556:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800955a:	2357      	movs	r3, #87	; 0x57
    textArea_titel.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T27V));
 800955c:	ee1a 0a10 	vmov	r0, s20
 8009560:	a90a      	add	r1, sp, #40	; 0x28
 8009562:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8009566:	970a      	str	r7, [sp, #40]	; 0x28
 8009568:	f00b ff72 	bl	8015450 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800956c:	4630      	mov	r0, r6
 800956e:	ee1a 1a10 	vmov	r1, s20
 8009572:	f009 f945 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8009576:	4620      	mov	r0, r4
 8009578:	b00d      	add	sp, #52	; 0x34
 800957a:	ecbd 8b0a 	vpop	{d8-d12}
 800957e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009582:	bf00      	nop
 8009584:	200138a0 	.word	0x200138a0
 8009588:	0802f491 	.word	0x0802f491
 800958c:	0802f504 	.word	0x0802f504
 8009590:	20013898 	.word	0x20013898

08009594 <_ZN37Measurement_Single_Display_3PViewBase11setupScreenEv>:
}

void Measurement_Single_Display_3PViewBase::setupScreen()
{

}
 8009594:	4770      	bx	lr

08009596 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8009596:	4770      	bx	lr

08009598 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8009598:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 800959a:	68c2      	ldr	r2, [r0, #12]
 800959c:	6844      	ldr	r4, [r0, #4]
 800959e:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80095a0:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80095a2:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80095a6:	07d2      	lsls	r2, r2, #31
 80095a8:	bf48      	it	mi
 80095aa:	5962      	ldrmi	r2, [r4, r5]
 80095ac:	689b      	ldr	r3, [r3, #8]
    }
 80095ae:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80095b0:	bf48      	it	mi
 80095b2:	58d3      	ldrmi	r3, [r2, r3]
 80095b4:	4718      	bx	r3

080095b6 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80095b6:	6843      	ldr	r3, [r0, #4]
 80095b8:	b12b      	cbz	r3, 80095c6 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80095ba:	6883      	ldr	r3, [r0, #8]
 80095bc:	b92b      	cbnz	r3, 80095ca <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80095be:	68c0      	ldr	r0, [r0, #12]
 80095c0:	f000 0001 	and.w	r0, r0, #1
 80095c4:	4770      	bx	lr
 80095c6:	4618      	mov	r0, r3
 80095c8:	4770      	bx	lr
 80095ca:	2001      	movs	r0, #1
    }
 80095cc:	4770      	bx	lr

080095ce <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80095ce:	b510      	push	{r4, lr}
 80095d0:	2110      	movs	r1, #16
 80095d2:	4604      	mov	r4, r0
 80095d4:	f023 fad5 	bl	802cb82 <_ZdlPvj>
 80095d8:	4620      	mov	r0, r4
 80095da:	bd10      	pop	{r4, pc}

080095dc <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>:
Measurement_Single_Display_3PViewBase::~Measurement_Single_Display_3PViewBase()
 80095dc:	b510      	push	{r4, lr}
 80095de:	4b03      	ldr	r3, [pc, #12]	; (80095ec <_ZN37Measurement_Single_Display_3PViewBaseD1Ev+0x10>)
 80095e0:	6003      	str	r3, [r0, #0]
 80095e2:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80095e4:	f00d fce2 	bl	8016fac <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80095e8:	4620      	mov	r0, r4
 80095ea:	bd10      	pop	{r4, pc}
 80095ec:	08030cbc 	.word	0x08030cbc

080095f0 <_ZN37Measurement_Single_Display_3PViewBaseD0Ev>:
Measurement_Single_Display_3PViewBase::~Measurement_Single_Display_3PViewBase()
 80095f0:	b507      	push	{r0, r1, r2, lr}
 80095f2:	4b07      	ldr	r3, [pc, #28]	; (8009610 <_ZN37Measurement_Single_Display_3PViewBaseD0Ev+0x20>)
 80095f4:	6003      	str	r3, [r0, #0]
 80095f6:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80095f8:	f00d fcd8 	bl	8016fac <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80095fc:	9801      	ldr	r0, [sp, #4]
 80095fe:	f241 4178 	movw	r1, #5240	; 0x1478
 8009602:	f023 fabe 	bl	802cb82 <_ZdlPvj>
 8009606:	9801      	ldr	r0, [sp, #4]
 8009608:	b003      	add	sp, #12
 800960a:	f85d fb04 	ldr.w	pc, [sp], #4
 800960e:	bf00      	nop
 8009610:	08030cbc 	.word	0x08030cbc

08009614 <_ZN37Measurement_Single_Display_3PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_Single_Display_3PViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel_return)
 8009614:	3098      	adds	r0, #152	; 0x98
 8009616:	4288      	cmp	r0, r1
{
 8009618:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel_return)
 800961a:	d105      	bne.n	8009628 <_ZN37Measurement_Single_Display_3PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Single_Display_3PViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800961c:	f00f f9c8 	bl	80189b0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel_return clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
    }
}
 8009620:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8009624:	f7fb bfdc 	b.w	80055e0 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
}
 8009628:	bd08      	pop	{r3, pc}
	...

0800962c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev>:
Measurement_Single_Display_3PViewBase::Measurement_Single_Display_3PViewBase() :
 800962c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009630:	ed2d 8b0a 	vpush	{d8-d12}
 8009634:	4604      	mov	r4, r0
 8009636:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Single_Display_3PViewBase::buttonCallbackHandler)
 8009638:	46a0      	mov	r8, r4
 800963a:	2500      	movs	r5, #0
 800963c:	f010 fe38 	bl	801a2b0 <_ZN8touchgfx6ScreenC1Ev>
 8009640:	4bcd      	ldr	r3, [pc, #820]	; (8009978 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x34c>)
 8009642:	63e5      	str	r5, [r4, #60]	; 0x3c
 8009644:	f848 3b40 	str.w	r3, [r8], #64
        : Widget(), alpha(255), color(0)
 8009648:	2226      	movs	r2, #38	; 0x26
 800964a:	4629      	mov	r1, r5
 800964c:	4640      	mov	r0, r8
 800964e:	f024 fb84 	bl	802dd5a <memset>
 8009652:	4640      	mov	r0, r8
 8009654:	f7fa f840 	bl	80036d8 <_ZN8touchgfx6WidgetC1Ev>
 8009658:	f104 076c 	add.w	r7, r4, #108	; 0x6c
 800965c:	26ff      	movs	r6, #255	; 0xff
 800965e:	4bc7      	ldr	r3, [pc, #796]	; (800997c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x350>)
 8009660:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8009662:	2226      	movs	r2, #38	; 0x26
 8009664:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8009668:	4629      	mov	r1, r5
 800966a:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800966e:	4638      	mov	r0, r7
 8009670:	66a5      	str	r5, [r4, #104]	; 0x68
 8009672:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8009676:	f024 fb70 	bl	802dd5a <memset>
 800967a:	4638      	mov	r0, r7
 800967c:	f7fa f82c 	bl	80036d8 <_ZN8touchgfx6WidgetC1Ev>
 8009680:	4bbf      	ldr	r3, [pc, #764]	; (8009980 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x354>)
 8009682:	66e3      	str	r3, [r4, #108]	; 0x6c
 8009684:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8009688:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 800968c:	a90a      	add	r1, sp, #40	; 0x28
 800968e:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8009692:	4638      	mov	r0, r7
        : Widget(), bitmap(bmp), alpha(255)
 8009694:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8009698:	f00c fc8b 	bl	8015fb2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800969c:	4658      	mov	r0, fp
 800969e:	f00c fdbf 	bl	8016220 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80096a2:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 80096a6:	f504 7994 	add.w	r9, r4, #296	; 0x128
 80096aa:	4618      	mov	r0, r3
 80096ac:	ee0a 3a90 	vmov	s21, r3
 80096b0:	f7fa f876 	bl	80037a0 <_ZN8touchgfx8TextAreaC1Ev>
 80096b4:	4648      	mov	r0, r9
 80096b6:	f7fa f873 	bl	80037a0 <_ZN8touchgfx8TextAreaC1Ev>
 80096ba:	f504 73b8 	add.w	r3, r4, #368	; 0x170
 80096be:	4618      	mov	r0, r3
 80096c0:	ee0b 3a10 	vmov	s22, r3
 80096c4:	f7fa f86c 	bl	80037a0 <_ZN8touchgfx8TextAreaC1Ev>
 80096c8:	f504 73dc 	add.w	r3, r4, #440	; 0x1b8
        : TextArea()
 80096cc:	4618      	mov	r0, r3
 80096ce:	ee0b 3a90 	vmov	s23, r3
        : TextAreaWithWildcardBase(), wc1(0)
 80096d2:	4eac      	ldr	r6, [pc, #688]	; (8009984 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x358>)
        : TextArea()
 80096d4:	f7fa f864 	bl	80037a0 <_ZN8touchgfx8TextAreaC1Ev>
 80096d8:	f504 7301 	add.w	r3, r4, #516	; 0x204
        : TextAreaWithWildcardBase(), wc1(0)
 80096dc:	f8c4 61b8 	str.w	r6, [r4, #440]	; 0x1b8
        : TextArea()
 80096e0:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 80096e2:	f8c4 5200 	str.w	r5, [r4, #512]	; 0x200
 80096e6:	ee0c 3a10 	vmov	s24, r3
        : TextArea()
 80096ea:	f7fa f859 	bl	80037a0 <_ZN8touchgfx8TextAreaC1Ev>
 80096ee:	f504 7314 	add.w	r3, r4, #592	; 0x250
 80096f2:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 80096f4:	f8c4 6204 	str.w	r6, [r4, #516]	; 0x204
 80096f8:	f8c4 524c 	str.w	r5, [r4, #588]	; 0x24c
 80096fc:	f504 7a27 	add.w	sl, r4, #668	; 0x29c
 8009700:	ee0c 3a90 	vmov	s25, r3
        : TextArea()
 8009704:	f7fa f84c 	bl	80037a0 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8009708:	f8c4 6250 	str.w	r6, [r4, #592]	; 0x250
 800970c:	f8c4 5298 	str.w	r5, [r4, #664]	; 0x298
 8009710:	4650      	mov	r0, sl
 8009712:	f00c f911 	bl	8015938 <_ZN8touchgfx5GaugeC1Ev>
 8009716:	f204 433c 	addw	r3, r4, #1084	; 0x43c
 800971a:	4618      	mov	r0, r3
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800971c:	4e9a      	ldr	r6, [pc, #616]	; (8009988 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x35c>)
 800971e:	ee08 3a10 	vmov	s16, r3
 8009722:	f00b f939 	bl	8014998 <_ZN8touchgfx4LineC1Ev>
 8009726:	f204 43ac 	addw	r3, r4, #1196	; 0x4ac
 800972a:	4618      	mov	r0, r3
 800972c:	9302      	str	r3, [sp, #8]
 800972e:	f7f9 fdd7 	bl	80032e0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8009732:	f106 0324 	add.w	r3, r6, #36	; 0x24
 8009736:	f8c4 34b4 	str.w	r3, [r4, #1204]	; 0x4b4
 800973a:	f504 6398 	add.w	r3, r4, #1216	; 0x4c0
 800973e:	f8c4 64ac 	str.w	r6, [r4, #1196]	; 0x4ac
 8009742:	4618      	mov	r0, r3
 8009744:	f8c4 54b8 	str.w	r5, [r4, #1208]	; 0x4b8
 8009748:	ee09 3a10 	vmov	s18, r3
 800974c:	f7fa f828 	bl	80037a0 <_ZN8touchgfx8TextAreaC1Ev>
 8009750:	f504 63a1 	add.w	r3, r4, #1288	; 0x508
 8009754:	4618      	mov	r0, r3
 8009756:	ee08 3a90 	vmov	s17, r3
 800975a:	f00b f91d 	bl	8014998 <_ZN8touchgfx4LineC1Ev>
 800975e:	f504 63af 	add.w	r3, r4, #1400	; 0x578
 8009762:	4618      	mov	r0, r3
 8009764:	9303      	str	r3, [sp, #12]
 8009766:	f7f9 fdbb 	bl	80032e0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800976a:	f106 0324 	add.w	r3, r6, #36	; 0x24
 800976e:	f8c4 3580 	str.w	r3, [r4, #1408]	; 0x580
 8009772:	f204 538c 	addw	r3, r4, #1420	; 0x58c
 8009776:	f8c4 6578 	str.w	r6, [r4, #1400]	; 0x578
 800977a:	4618      	mov	r0, r3
 800977c:	f8c4 5584 	str.w	r5, [r4, #1412]	; 0x584
 8009780:	ee09 3a90 	vmov	s19, r3
 8009784:	f7fa f80c 	bl	80037a0 <_ZN8touchgfx8TextAreaC1Ev>
 8009788:	f204 53d4 	addw	r3, r4, #1492	; 0x5d4
 800978c:	4618      	mov	r0, r3
 800978e:	ee0a 3a10 	vmov	s20, r3
 8009792:	f7fa f805 	bl	80037a0 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8009796:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 800979a:	4a7c      	ldr	r2, [pc, #496]	; (800998c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x360>)
 800979c:	f8c3 2468 	str.w	r2, [r3, #1128]	; 0x468
 80097a0:	4a7b      	ldr	r2, [pc, #492]	; (8009990 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x364>)
 80097a2:	f8c3 2470 	str.w	r2, [r3, #1136]	; 0x470
 80097a6:	f8c3 446c 	str.w	r4, [r3, #1132]	; 0x46c
 80097aa:	f8c3 5474 	str.w	r5, [r3, #1140]	; 0x474
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80097ae:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80097b2:	f504 60cb 	add.w	r0, r4, #1624	; 0x658
 80097b6:	f00d fbef 	bl	8016f98 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80097ba:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80097be:	462a      	mov	r2, r5
 80097c0:	4640      	mov	r0, r8
 80097c2:	9300      	str	r3, [sp, #0]
 80097c4:	4629      	mov	r1, r5
 80097c6:	23f0      	movs	r3, #240	; 0xf0
 80097c8:	f7f9 ff61 	bl	800368e <_ZN8touchgfx8Drawable11setPositionEssss>
 80097cc:	1d26      	adds	r6, r4, #4
        color = newColor;
 80097ce:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80097d2:	66a3      	str	r3, [r4, #104]	; 0x68
 80097d4:	4641      	mov	r1, r8
 80097d6:	4630      	mov	r0, r6
 80097d8:	f009 f812 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image_background.setXY(0, 0);
 80097dc:	462a      	mov	r2, r5
 80097de:	4638      	mov	r0, r7
 80097e0:	4629      	mov	r1, r5
 80097e2:	f7f9 ff47 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
 80097e6:	f04f 0308 	mov.w	r3, #8
    image_background.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80097ea:	4638      	mov	r0, r7
 80097ec:	a90a      	add	r1, sp, #40	; 0x28
 80097ee:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80097f2:	f00c fbde 	bl	8015fb2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80097f6:	4639      	mov	r1, r7
 80097f8:	4630      	mov	r0, r6
 80097fa:	f009 f801 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_return.setXY(33, 256);
 80097fe:	4658      	mov	r0, fp
 8009800:	f44f 7280 	mov.w	r2, #256	; 0x100
 8009804:	2121      	movs	r1, #33	; 0x21
 8009806:	f7f9 ff35 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
 800980a:	2303      	movs	r3, #3
    buttonWithLabel_return.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800980c:	aa0a      	add	r2, sp, #40	; 0x28
 800980e:	a909      	add	r1, sp, #36	; 0x24
 8009810:	4658      	mov	r0, fp
 8009812:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8009816:	2302      	movs	r3, #2
 8009818:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800981c:	f00c f9d3 	bl	8015bc6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8009820:	2359      	movs	r3, #89	; 0x59
        updateTextPosition();
 8009822:	4658      	mov	r0, fp
 8009824:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 8009828:	f7f9 ff68 	bl	80036fc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel_return.setAction(buttonCallback);
 800982c:	f504 53a3 	add.w	r3, r4, #5216	; 0x1460
        color = col;
 8009830:	f04f 38ff 	mov.w	r8, #4294967295
 8009834:	3308      	adds	r3, #8
 8009836:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 800983a:	4659      	mov	r1, fp
 800983c:	4630      	mov	r0, r6
        colorPressed = col;
 800983e:	e9c4 8835 	strd	r8, r8, [r4, #212]	; 0xd4
 8009842:	af04      	add	r7, sp, #16
 8009844:	f008 ffdc 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_n90C.setXY(0, 194);
 8009848:	22c2      	movs	r2, #194	; 0xc2
 800984a:	ee1a 0a90 	vmov	r0, s21
 800984e:	4629      	mov	r1, r5
 8009850:	f7f9 ff10 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
 8009854:	ee1a 1a90 	vmov	r1, s21
 8009858:	4638      	mov	r0, r7
        color = newColor;
 800985a:	f8c4 8110 	str.w	r8, [r4, #272]	; 0x110
        linespace = space;
 800985e:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8009862:	f00b fb5b 	bl	8014f1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8009866:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 800986a:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 800986e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8009872:	4b48      	ldr	r3, [pc, #288]	; (8009994 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x368>)
 8009874:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_n90C.setTypedText(touchgfx::TypedText(T___SINGLEUSE_C7CD));
 8009876:	ee1a 0a90 	vmov	r0, s21
 800987a:	2313      	movs	r3, #19
 800987c:	a90a      	add	r1, sp, #40	; 0x28
 800987e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8009882:	f00b fde5 	bl	8015450 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8009886:	ee1a 1a90 	vmov	r1, s21
 800988a:	4630      	mov	r0, r6
 800988c:	f008 ffb8 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_p90C.setXY(217, 194);
 8009890:	22c2      	movs	r2, #194	; 0xc2
 8009892:	4648      	mov	r0, r9
 8009894:	21d9      	movs	r1, #217	; 0xd9
 8009896:	f7f9 feed 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
 800989a:	4649      	mov	r1, r9
 800989c:	4638      	mov	r0, r7
        color = newColor;
 800989e:	f8c4 8158 	str.w	r8, [r4, #344]	; 0x158
        linespace = space;
 80098a2:	f8a4 515c 	strh.w	r5, [r4, #348]	; 0x15c
        boundingArea = calculateBoundingArea();
 80098a6:	f00b fb39 	bl	8014f1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80098aa:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80098ae:	f504 73b2 	add.w	r3, r4, #356	; 0x164
 80098b2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80098b6:	4b37      	ldr	r3, [pc, #220]	; (8009994 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x368>)
 80098b8:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_p90C.setTypedText(touchgfx::TypedText(T___SINGLEUSE_85IX));
 80098ba:	4648      	mov	r0, r9
 80098bc:	2312      	movs	r3, #18
 80098be:	a90a      	add	r1, sp, #40	; 0x28
 80098c0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80098c4:	f00b fdc4 	bl	8015450 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80098c8:	4649      	mov	r1, r9
 80098ca:	4630      	mov	r0, r6
 80098cc:	f008 ff98 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_0C.setXY(113, 85);
 80098d0:	2255      	movs	r2, #85	; 0x55
 80098d2:	ee1b 0a10 	vmov	r0, s22
 80098d6:	2171      	movs	r1, #113	; 0x71
 80098d8:	f7f9 fecc 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
 80098dc:	ee1b 1a10 	vmov	r1, s22
 80098e0:	4638      	mov	r0, r7
        color = newColor;
 80098e2:	f8c4 81a0 	str.w	r8, [r4, #416]	; 0x1a0
        linespace = space;
 80098e6:	f8a4 51a4 	strh.w	r5, [r4, #420]	; 0x1a4
        boundingArea = calculateBoundingArea();
 80098ea:	f00b fb17 	bl	8014f1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80098ee:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80098f2:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 80098f6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80098fa:	4b26      	ldr	r3, [pc, #152]	; (8009994 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x368>)
 80098fc:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_0C.setTypedText(touchgfx::TypedText(T___SINGLEUSE_XVJO));
 80098fe:	ee1b 0a10 	vmov	r0, s22
 8009902:	2314      	movs	r3, #20
 8009904:	a90a      	add	r1, sp, #40	; 0x28
 8009906:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800990a:	f00b fda1 	bl	8015450 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800990e:	ee1b 1a10 	vmov	r1, s22
 8009912:	4630      	mov	r0, r6
 8009914:	f008 ff74 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD3_Current.setPosition(0, 239, 240, 15);
 8009918:	230f      	movs	r3, #15
 800991a:	22ef      	movs	r2, #239	; 0xef
 800991c:	ee1b 0a90 	vmov	r0, s23
 8009920:	9300      	str	r3, [sp, #0]
 8009922:	4629      	mov	r1, r5
 8009924:	23f0      	movs	r3, #240	; 0xf0
 8009926:	f7f9 feb2 	bl	800368e <_ZN8touchgfx8Drawable11setPositionEssss>
 800992a:	f8d4 31b8 	ldr.w	r3, [r4, #440]	; 0x1b8
        color = newColor;
 800992e:	f8c4 81e8 	str.w	r8, [r4, #488]	; 0x1e8
        boundingArea = calculateBoundingArea();
 8009932:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8009936:	f8a4 51ec 	strh.w	r5, [r4, #492]	; 0x1ec
        boundingArea = calculateBoundingArea();
 800993a:	ee1b 1a90 	vmov	r1, s23
 800993e:	4638      	mov	r0, r7
 8009940:	4798      	blx	r3
 8009942:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8009946:	f8df b064 	ldr.w	fp, [pc, #100]	; 80099ac <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x380>
 800994a:	f504 73fa 	add.w	r3, r4, #500	; 0x1f4
 800994e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8009952:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(SMD3_CurrentBuffer, SMD3_CURRENT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_HT0R).getText());
 8009956:	f204 691c 	addw	r9, r4, #1564	; 0x61c
 800995a:	b92b      	cbnz	r3, 8009968 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x33c>
 800995c:	4b0e      	ldr	r3, [pc, #56]	; (8009998 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x36c>)
 800995e:	4a0f      	ldr	r2, [pc, #60]	; (800999c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x370>)
 8009960:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8009962:	480f      	ldr	r0, [pc, #60]	; (80099a0 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x374>)
 8009964:	f023 fff4 	bl	802d950 <__assert_func>
 8009968:	4b0e      	ldr	r3, [pc, #56]	; (80099a4 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x378>)
 800996a:	881b      	ldrh	r3, [r3, #0]
 800996c:	2b18      	cmp	r3, #24
 800996e:	d81f      	bhi.n	80099b0 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x384>
 8009970:	4b0d      	ldr	r3, [pc, #52]	; (80099a8 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x37c>)
 8009972:	4a0a      	ldr	r2, [pc, #40]	; (800999c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x370>)
 8009974:	2161      	movs	r1, #97	; 0x61
 8009976:	e7f4      	b.n	8009962 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x336>
 8009978:	08030cbc 	.word	0x08030cbc
 800997c:	08031a58 	.word	0x08031a58
 8009980:	08031ca4 	.word	0x08031ca4
 8009984:	0802f5a4 	.word	0x0802f5a4
 8009988:	0803178c 	.word	0x0803178c
 800998c:	08030ca4 	.word	0x08030ca4
 8009990:	08009615 	.word	0x08009615
 8009994:	0802f504 	.word	0x0802f504
 8009998:	0802f354 	.word	0x0802f354
 800999c:	0802f459 	.word	0x0802f459
 80099a0:	0802f3d1 	.word	0x0802f3d1
 80099a4:	20013898 	.word	0x20013898
 80099a8:	0802f418 	.word	0x0802f418
 80099ac:	20013894 	.word	0x20013894
        return texts->getText(typedTextId);
 80099b0:	4bdc      	ldr	r3, [pc, #880]	; (8009d24 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x6f8>)
 80099b2:	2118      	movs	r1, #24
 80099b4:	6818      	ldr	r0, [r3, #0]
 80099b6:	f000 fe6f 	bl	800a698 <_ZNK8touchgfx5Texts7getTextEt>
 80099ba:	4adb      	ldr	r2, [pc, #876]	; (8009d28 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x6fc>)
 80099bc:	4603      	mov	r3, r0
 80099be:	210a      	movs	r1, #10
 80099c0:	4648      	mov	r0, r9
 80099c2:	f012 f9a3 	bl	801bd0c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 80099c6:	4ad9      	ldr	r2, [pc, #868]	; (8009d2c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x700>)
        wc1 = value;
 80099c8:	f8c4 9200 	str.w	r9, [r4, #512]	; 0x200
 80099cc:	2319      	movs	r3, #25
    SMD3_Current.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6OVJ));
 80099ce:	ee1b 0a90 	vmov	r0, s23
 80099d2:	a90a      	add	r1, sp, #40	; 0x28
 80099d4:	920a      	str	r2, [sp, #40]	; 0x28
 80099d6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80099da:	f00b fd39 	bl	8015450 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80099de:	ee1b 1a90 	vmov	r1, s23
 80099e2:	4630      	mov	r0, r6
 80099e4:	f008 ff0c 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD3_Frequency.setPosition(0, 224, 240, 15);
 80099e8:	210f      	movs	r1, #15
 80099ea:	22e0      	movs	r2, #224	; 0xe0
 80099ec:	ee1c 0a10 	vmov	r0, s24
 80099f0:	9100      	str	r1, [sp, #0]
 80099f2:	23f0      	movs	r3, #240	; 0xf0
 80099f4:	4629      	mov	r1, r5
 80099f6:	f7f9 fe4a 	bl	800368e <_ZN8touchgfx8Drawable11setPositionEssss>
 80099fa:	f8d4 3204 	ldr.w	r3, [r4, #516]	; 0x204
        color = newColor;
 80099fe:	f8c4 8234 	str.w	r8, [r4, #564]	; 0x234
        boundingArea = calculateBoundingArea();
 8009a02:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8009a06:	f8a4 5238 	strh.w	r5, [r4, #568]	; 0x238
        boundingArea = calculateBoundingArea();
 8009a0a:	ee1c 1a10 	vmov	r1, s24
 8009a0e:	4638      	mov	r0, r7
 8009a10:	4798      	blx	r3
 8009a12:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8009a16:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8009a1a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8009a1e:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(SMD3_FrequencyBuffer, SMD3_FREQUENCY_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_YT2E).getText());
 8009a22:	f504 69c6 	add.w	r9, r4, #1584	; 0x630
 8009a26:	2b00      	cmp	r3, #0
 8009a28:	d098      	beq.n	800995c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x330>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8009a2a:	49c1      	ldr	r1, [pc, #772]	; (8009d30 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x704>)
 8009a2c:	880b      	ldrh	r3, [r1, #0]
 8009a2e:	2b16      	cmp	r3, #22
 8009a30:	d99e      	bls.n	8009970 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x344>
        return texts->getText(typedTextId);
 8009a32:	4bbc      	ldr	r3, [pc, #752]	; (8009d24 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x6f8>)
 8009a34:	2116      	movs	r1, #22
 8009a36:	6818      	ldr	r0, [r3, #0]
 8009a38:	f000 fe2e 	bl	800a698 <_ZNK8touchgfx5Texts7getTextEt>
 8009a3c:	4aba      	ldr	r2, [pc, #744]	; (8009d28 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x6fc>)
 8009a3e:	4603      	mov	r3, r0
 8009a40:	210a      	movs	r1, #10
 8009a42:	4648      	mov	r0, r9
 8009a44:	f012 f962 	bl	801bd0c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    SMD3_Frequency.setTypedText(touchgfx::TypedText(T___SINGLEUSE_W5I5));
 8009a48:	a80a      	add	r0, sp, #40	; 0x28
        : typedTextId(id)
 8009a4a:	4ab8      	ldr	r2, [pc, #736]	; (8009d2c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x700>)
 8009a4c:	f8c4 924c 	str.w	r9, [r4, #588]	; 0x24c
 8009a50:	2317      	movs	r3, #23
 8009a52:	4601      	mov	r1, r0
 8009a54:	ee1c 0a10 	vmov	r0, s24
 8009a58:	920a      	str	r2, [sp, #40]	; 0x28
 8009a5a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8009a5e:	f00b fcf7 	bl	8015450 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8009a62:	ee1c 1a10 	vmov	r1, s24
 8009a66:	4630      	mov	r0, r6
 8009a68:	f008 feca 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD3_Distance.setPosition(0, 209, 240, 15);
 8009a6c:	200f      	movs	r0, #15
 8009a6e:	22d1      	movs	r2, #209	; 0xd1
 8009a70:	9000      	str	r0, [sp, #0]
 8009a72:	23f0      	movs	r3, #240	; 0xf0
 8009a74:	ee1c 0a90 	vmov	r0, s25
 8009a78:	4629      	mov	r1, r5
 8009a7a:	f7f9 fe08 	bl	800368e <_ZN8touchgfx8Drawable11setPositionEssss>
 8009a7e:	f8d4 3250 	ldr.w	r3, [r4, #592]	; 0x250
        color = newColor;
 8009a82:	f8c4 8280 	str.w	r8, [r4, #640]	; 0x280
        boundingArea = calculateBoundingArea();
 8009a86:	4638      	mov	r0, r7
 8009a88:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8009a8c:	f8a4 5284 	strh.w	r5, [r4, #644]	; 0x284
        boundingArea = calculateBoundingArea();
 8009a90:	ee1c 1a90 	vmov	r1, s25
 8009a94:	4798      	blx	r3
 8009a96:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8009a9a:	f504 7323 	add.w	r3, r4, #652	; 0x28c
 8009a9e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8009aa2:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(SMD3_DistanceBuffer, SMD3_DISTANCE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_EK4L).getText());
 8009aa6:	f204 6744 	addw	r7, r4, #1604	; 0x644
 8009aaa:	2b00      	cmp	r3, #0
 8009aac:	f43f af56 	beq.w	800995c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x330>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8009ab0:	499f      	ldr	r1, [pc, #636]	; (8009d30 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x704>)
 8009ab2:	880b      	ldrh	r3, [r1, #0]
 8009ab4:	2b15      	cmp	r3, #21
 8009ab6:	f67f af5b 	bls.w	8009970 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x344>
        return texts->getText(typedTextId);
 8009aba:	4b9a      	ldr	r3, [pc, #616]	; (8009d24 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x6f8>)
 8009abc:	2115      	movs	r1, #21
 8009abe:	6818      	ldr	r0, [r3, #0]
 8009ac0:	f000 fdea 	bl	800a698 <_ZNK8touchgfx5Texts7getTextEt>
 8009ac4:	4a98      	ldr	r2, [pc, #608]	; (8009d28 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x6fc>)
 8009ac6:	4603      	mov	r3, r0
 8009ac8:	210a      	movs	r1, #10
 8009aca:	4638      	mov	r0, r7
 8009acc:	f012 f91e 	bl	801bd0c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8009ad0:	4a96      	ldr	r2, [pc, #600]	; (8009d2c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x700>)
 8009ad2:	f8c4 7298 	str.w	r7, [r4, #664]	; 0x298
 8009ad6:	2336      	movs	r3, #54	; 0x36
    SMD3_Distance.setTypedText(touchgfx::TypedText(T_AMD3_DISTANCE));
 8009ad8:	ee1c 0a90 	vmov	r0, s25
 8009adc:	a90a      	add	r1, sp, #40	; 0x28
 8009ade:	920a      	str	r2, [sp, #40]	; 0x28
 8009ae0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8009ae4:	f00b fcb4 	bl	8015450 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8009ae8:	ee1c 1a90 	vmov	r1, s25
 8009aec:	4630      	mov	r0, r6
 8009aee:	f008 fe87 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8009af2:	2304      	movs	r3, #4
    SMD3_Gauge.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_BACKGROUNDS_LIGHT_PRECISION_ID));
 8009af4:	a90a      	add	r1, sp, #40	; 0x28
 8009af6:	4650      	mov	r0, sl
 8009af8:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8009afc:	f008 fe12 	bl	8012724 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    SMD3_Gauge.setPosition(28, 103, 184, 106);
 8009b00:	236a      	movs	r3, #106	; 0x6a
 8009b02:	9300      	str	r3, [sp, #0]
 8009b04:	2267      	movs	r2, #103	; 0x67
 8009b06:	23b8      	movs	r3, #184	; 0xb8
 8009b08:	211c      	movs	r1, #28
 8009b0a:	4650      	mov	r0, sl
 8009b0c:	f7f9 fdbf 	bl	800368e <_ZN8touchgfx8Drawable11setPositionEssss>
    SMD3_Gauge.setCenter(92, 92);
 8009b10:	225c      	movs	r2, #92	; 0x5c
 8009b12:	4611      	mov	r1, r2
 8009b14:	4650      	mov	r0, sl
 8009b16:	f00b ffba 	bl	8015a8e <_ZN8touchgfx5Gauge9setCenterEii>
    SMD3_Gauge.setStartEndAngle(-90, 90);
 8009b1a:	225a      	movs	r2, #90	; 0x5a
 8009b1c:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8009b20:	4650      	mov	r0, sl
 8009b22:	f00c f839 	bl	8015b98 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    SMD3_Gauge.setRange(-90, 90);
 8009b26:	462b      	mov	r3, r5
 8009b28:	225a      	movs	r2, #90	; 0x5a
 8009b2a:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8009b2e:	4650      	mov	r0, sl
 8009b30:	9500      	str	r5, [sp, #0]
 8009b32:	f008 fca4 	bl	801247e <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    SMD3_Gauge.setValue(0);
 8009b36:	4629      	mov	r1, r5
 8009b38:	4650      	mov	r0, sl
 8009b3a:	f00b ffd7 	bl	8015aec <_ZN8touchgfx5Gauge8setValueEi>
    SMD3_Gauge.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_NEEDLES_ROUGH_ID, 8, 53);
 8009b3e:	2335      	movs	r3, #53	; 0x35
 8009b40:	2208      	movs	r2, #8
 8009b42:	2105      	movs	r1, #5
 8009b44:	4650      	mov	r0, sl
 8009b46:	f00b ff8d 	bl	8015a64 <_ZN8touchgfx5Gauge9setNeedleEtss>
    SMD3_Gauge.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8009b4a:	2101      	movs	r1, #1
 8009b4c:	4650      	mov	r0, sl
 8009b4e:	f00b ff2b 	bl	80159a8 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    SMD3_Gauge.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8009b52:	2101      	movs	r1, #1
 8009b54:	4650      	mov	r0, sl
 8009b56:	f00b ff2a 	bl	80159ae <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
 8009b5a:	4651      	mov	r1, sl
 8009b5c:	4630      	mov	r0, r6
 8009b5e:	f008 fe4f 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line2.setPosition(0, 75, 240, 10);
 8009b62:	230a      	movs	r3, #10
 8009b64:	ee18 0a10 	vmov	r0, s16
 8009b68:	9300      	str	r3, [sp, #0]
 8009b6a:	224b      	movs	r2, #75	; 0x4b
 8009b6c:	23f0      	movs	r3, #240	; 0xf0
 8009b6e:	4629      	mov	r1, r5
 8009b70:	f7f9 fd8d 	bl	800368e <_ZN8touchgfx8Drawable11setPositionEssss>
 8009b74:	9b02      	ldr	r3, [sp, #8]
 8009b76:	f8c4 3464 	str.w	r3, [r4, #1124]	; 0x464
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8009b7a:	22a0      	movs	r2, #160	; 0xa0
 8009b7c:	4611      	mov	r1, r2
 8009b7e:	ee18 0a10 	vmov	r0, s16
 8009b82:	f8c4 84b8 	str.w	r8, [r4, #1208]	; 0x4b8
        color565 = LCD16bpp::getNativeColor(painterColor);
 8009b86:	f8a4 84bc 	strh.w	r8, [r4, #1212]	; 0x4bc
 8009b8a:	f00b f81b 	bl	8014bc4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8009b8e:	ee18 0a10 	vmov	r0, s16
 8009b92:	22a0      	movs	r2, #160	; 0xa0
 8009b94:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8009b98:	f00b f81f 	bl	8014bda <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8009b9c:	f8d4 3478 	ldr.w	r3, [r4, #1144]	; 0x478
 8009ba0:	2b20      	cmp	r3, #32
 8009ba2:	d006      	beq.n	8009bb2 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x586>
        lineWidthQ5 = widthQ5;
 8009ba4:	2320      	movs	r3, #32
        updateCachedShape();
 8009ba6:	ee18 0a10 	vmov	r0, s16
        lineWidthQ5 = widthQ5;
 8009baa:	f8c4 3478 	str.w	r3, [r4, #1144]	; 0x478
        updateCachedShape();
 8009bae:	f00a ff13 	bl	80149d8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8009bb2:	ee18 0a10 	vmov	r0, s16
 8009bb6:	2101      	movs	r1, #1
 8009bb8:	f00b f81a 	bl	8014bf0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8009bbc:	ee18 1a10 	vmov	r1, s16
 8009bc0:	4630      	mov	r0, r6
 8009bc2:	f008 fe1d 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8009bc6:	f04f 38ff 	mov.w	r8, #4294967295
    textArea_menu.setXY(31, 60);
 8009bca:	223c      	movs	r2, #60	; 0x3c
 8009bcc:	ee19 0a10 	vmov	r0, s18
 8009bd0:	211f      	movs	r1, #31
        linespace = space;
 8009bd2:	f04f 0900 	mov.w	r9, #0
        boundingArea = calculateBoundingArea();
 8009bd6:	ad04      	add	r5, sp, #16
 8009bd8:	f7f9 fd4c 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
 8009bdc:	ee19 1a10 	vmov	r1, s18
 8009be0:	4628      	mov	r0, r5
        color = newColor;
 8009be2:	f8c4 84f0 	str.w	r8, [r4, #1264]	; 0x4f0
        linespace = space;
 8009be6:	f8a4 94f4 	strh.w	r9, [r4, #1268]	; 0x4f4
        boundingArea = calculateBoundingArea();
 8009bea:	f00b f997 	bl	8014f1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8009bee:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8009bf2:	ee19 3a10 	vmov	r3, s18
 8009bf6:	333c      	adds	r3, #60	; 0x3c
 8009bf8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8009bfc:	4f4b      	ldr	r7, [pc, #300]	; (8009d2c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x700>)
 8009bfe:	970a      	str	r7, [sp, #40]	; 0x28
 8009c00:	2350      	movs	r3, #80	; 0x50
    textArea_menu.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0LJ7));
 8009c02:	ee19 0a10 	vmov	r0, s18
 8009c06:	a90a      	add	r1, sp, #40	; 0x28
 8009c08:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8009c0c:	f00b fc20 	bl	8015450 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8009c10:	ee19 1a10 	vmov	r1, s18
 8009c14:	4630      	mov	r0, r6
 8009c16:	f008 fdf3 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8009c1a:	230a      	movs	r3, #10
 8009c1c:	ee18 0a90 	vmov	r0, s17
 8009c20:	9300      	str	r3, [sp, #0]
 8009c22:	2232      	movs	r2, #50	; 0x32
 8009c24:	23f0      	movs	r3, #240	; 0xf0
 8009c26:	4649      	mov	r1, r9
 8009c28:	f7f9 fd31 	bl	800368e <_ZN8touchgfx8Drawable11setPositionEssss>
 8009c2c:	9b03      	ldr	r3, [sp, #12]
 8009c2e:	f8c4 3530 	str.w	r3, [r4, #1328]	; 0x530
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8009c32:	22a0      	movs	r2, #160	; 0xa0
 8009c34:	4611      	mov	r1, r2
 8009c36:	ee18 0a90 	vmov	r0, s17
 8009c3a:	f8c4 8584 	str.w	r8, [r4, #1412]	; 0x584
 8009c3e:	f8a4 8588 	strh.w	r8, [r4, #1416]	; 0x588
 8009c42:	f00a ffbf 	bl	8014bc4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8009c46:	ee18 0a90 	vmov	r0, s17
 8009c4a:	22a0      	movs	r2, #160	; 0xa0
 8009c4c:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8009c50:	f00a ffc3 	bl	8014bda <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8009c54:	f8d4 3544 	ldr.w	r3, [r4, #1348]	; 0x544
 8009c58:	2b20      	cmp	r3, #32
 8009c5a:	d006      	beq.n	8009c6a <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x63e>
        lineWidthQ5 = widthQ5;
 8009c5c:	2320      	movs	r3, #32
        updateCachedShape();
 8009c5e:	ee18 0a90 	vmov	r0, s17
        lineWidthQ5 = widthQ5;
 8009c62:	f8c4 3544 	str.w	r3, [r4, #1348]	; 0x544
        updateCachedShape();
 8009c66:	f00a feb7 	bl	80149d8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8009c6a:	ee18 0a90 	vmov	r0, s17
 8009c6e:	2101      	movs	r1, #1
 8009c70:	f00a ffbe 	bl	8014bf0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8009c74:	ee18 1a90 	vmov	r1, s17
 8009c78:	4630      	mov	r0, r6
 8009c7a:	f008 fdc1 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8009c7e:	f04f 39ff 	mov.w	r9, #4294967295
    textArea_name.setXY(69, 35);
 8009c82:	ee19 0a90 	vmov	r0, s19
 8009c86:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 8009c88:	f04f 0800 	mov.w	r8, #0
 8009c8c:	2145      	movs	r1, #69	; 0x45
 8009c8e:	f7f9 fcf1 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8009c92:	ee19 1a90 	vmov	r1, s19
 8009c96:	4628      	mov	r0, r5
        color = newColor;
 8009c98:	f8c4 95bc 	str.w	r9, [r4, #1468]	; 0x5bc
        linespace = space;
 8009c9c:	f8a4 85c0 	strh.w	r8, [r4, #1472]	; 0x5c0
        boundingArea = calculateBoundingArea();
 8009ca0:	f00b f93c 	bl	8014f1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8009ca4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8009ca8:	ee19 3a90 	vmov	r3, s19
 8009cac:	333c      	adds	r3, #60	; 0x3c
 8009cae:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8009cb2:	235b      	movs	r3, #91	; 0x5b
    textArea_name.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DCTT));
 8009cb4:	ee19 0a90 	vmov	r0, s19
 8009cb8:	a90a      	add	r1, sp, #40	; 0x28
 8009cba:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8009cbe:	970a      	str	r7, [sp, #40]	; 0x28
 8009cc0:	f00b fbc6 	bl	8015450 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8009cc4:	ee19 1a90 	vmov	r1, s19
 8009cc8:	4630      	mov	r0, r6
 8009cca:	f008 fd99 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_title.setXY(54, 12);
 8009cce:	ee1a 0a10 	vmov	r0, s20
 8009cd2:	220c      	movs	r2, #12
 8009cd4:	2136      	movs	r1, #54	; 0x36
 8009cd6:	f7f9 fccd 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
 8009cda:	ee1a 1a10 	vmov	r1, s20
 8009cde:	4628      	mov	r0, r5
        color = newColor;
 8009ce0:	f8c4 9604 	str.w	r9, [r4, #1540]	; 0x604
        linespace = space;
 8009ce4:	f8a4 8608 	strh.w	r8, [r4, #1544]	; 0x608
        boundingArea = calculateBoundingArea();
 8009ce8:	f00b f918 	bl	8014f1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8009cec:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8009cf0:	ee1a 3a10 	vmov	r3, s20
 8009cf4:	333c      	adds	r3, #60	; 0x3c
 8009cf6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8009cfa:	235a      	movs	r3, #90	; 0x5a
    textArea_title.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SPOY));
 8009cfc:	ee1a 0a10 	vmov	r0, s20
 8009d00:	a90a      	add	r1, sp, #40	; 0x28
 8009d02:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8009d06:	970a      	str	r7, [sp, #40]	; 0x28
 8009d08:	f00b fba2 	bl	8015450 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8009d0c:	4630      	mov	r0, r6
 8009d0e:	ee1a 1a10 	vmov	r1, s20
 8009d12:	f008 fd75 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8009d16:	4620      	mov	r0, r4
 8009d18:	b00d      	add	sp, #52	; 0x34
 8009d1a:	ecbd 8b0a 	vpop	{d8-d12}
 8009d1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009d22:	bf00      	nop
 8009d24:	200138a0 	.word	0x200138a0
 8009d28:	0802f491 	.word	0x0802f491
 8009d2c:	0802f504 	.word	0x0802f504
 8009d30:	20013898 	.word	0x20013898

08009d34 <_ZN20Project_InfoViewBase11setupScreenEv>:
}

void Project_InfoViewBase::setupScreen()
{

}
 8009d34:	4770      	bx	lr

08009d36 <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8009d36:	4770      	bx	lr

08009d38 <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8009d38:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8009d3a:	68c2      	ldr	r2, [r0, #12]
 8009d3c:	6844      	ldr	r4, [r0, #4]
 8009d3e:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8009d40:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8009d42:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8009d46:	07d2      	lsls	r2, r2, #31
 8009d48:	bf48      	it	mi
 8009d4a:	5962      	ldrmi	r2, [r4, r5]
 8009d4c:	689b      	ldr	r3, [r3, #8]
    }
 8009d4e:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8009d50:	bf48      	it	mi
 8009d52:	58d3      	ldrmi	r3, [r2, r3]
 8009d54:	4718      	bx	r3

08009d56 <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8009d56:	6843      	ldr	r3, [r0, #4]
 8009d58:	b12b      	cbz	r3, 8009d66 <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8009d5a:	6883      	ldr	r3, [r0, #8]
 8009d5c:	b92b      	cbnz	r3, 8009d6a <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8009d5e:	68c0      	ldr	r0, [r0, #12]
 8009d60:	f000 0001 	and.w	r0, r0, #1
 8009d64:	4770      	bx	lr
 8009d66:	4618      	mov	r0, r3
 8009d68:	4770      	bx	lr
 8009d6a:	2001      	movs	r0, #1
    }
 8009d6c:	4770      	bx	lr

08009d6e <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8009d6e:	b510      	push	{r4, lr}
 8009d70:	2110      	movs	r1, #16
 8009d72:	4604      	mov	r4, r0
 8009d74:	f022 ff05 	bl	802cb82 <_ZdlPvj>
 8009d78:	4620      	mov	r0, r4
 8009d7a:	bd10      	pop	{r4, pc}

08009d7c <_ZN20Project_InfoViewBaseD1Ev>:
Project_InfoViewBase::~Project_InfoViewBase()
 8009d7c:	b510      	push	{r4, lr}
 8009d7e:	4b03      	ldr	r3, [pc, #12]	; (8009d8c <_ZN20Project_InfoViewBaseD1Ev+0x10>)
 8009d80:	6003      	str	r3, [r0, #0]
 8009d82:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8009d84:	f00d f912 	bl	8016fac <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8009d88:	4620      	mov	r0, r4
 8009d8a:	bd10      	pop	{r4, pc}
 8009d8c:	08030d08 	.word	0x08030d08

08009d90 <_ZN20Project_InfoViewBaseD0Ev>:
Project_InfoViewBase::~Project_InfoViewBase()
 8009d90:	b507      	push	{r0, r1, r2, lr}
 8009d92:	4b07      	ldr	r3, [pc, #28]	; (8009db0 <_ZN20Project_InfoViewBaseD0Ev+0x20>)
 8009d94:	6003      	str	r3, [r0, #0]
 8009d96:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8009d98:	f00d f908 	bl	8016fac <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8009d9c:	9801      	ldr	r0, [sp, #4]
 8009d9e:	f241 117c 	movw	r1, #4476	; 0x117c
 8009da2:	f022 feee 	bl	802cb82 <_ZdlPvj>
 8009da6:	9801      	ldr	r0, [sp, #4]
 8009da8:	b003      	add	sp, #12
 8009daa:	f85d fb04 	ldr.w	pc, [sp], #4
 8009dae:	bf00      	nop
 8009db0:	08030d08 	.word	0x08030d08

08009db4 <_ZN20Project_InfoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Project_InfoViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel_Return)
 8009db4:	30e4      	adds	r0, #228	; 0xe4
 8009db6:	4288      	cmp	r0, r1
{
 8009db8:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel_Return)
 8009dba:	d105      	bne.n	8009dc8 <_ZN20Project_InfoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Project_InfoViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8009dbc:	f00e fdf8 	bl	80189b0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel_Return clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
    }
}
 8009dc0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMain_MenuScreenWipeTransitionWest();
 8009dc4:	f7fb bbdc 	b.w	8005580 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
}
 8009dc8:	bd08      	pop	{r3, pc}
	...

08009dcc <_ZN20Project_InfoViewBaseC1Ev>:
Project_InfoViewBase::Project_InfoViewBase() :
 8009dcc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009dd0:	ed2d 8b06 	vpush	{d8-d10}
 8009dd4:	4604      	mov	r4, r0
 8009dd6:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Project_InfoViewBase::buttonCallbackHandler)
 8009dd8:	46a3      	mov	fp, r4
 8009dda:	2500      	movs	r5, #0
 8009ddc:	f010 fa68 	bl	801a2b0 <_ZN8touchgfx6ScreenC1Ev>
 8009de0:	4b6e      	ldr	r3, [pc, #440]	; (8009f9c <_ZN20Project_InfoViewBaseC1Ev+0x1d0>)
 8009de2:	63e5      	str	r5, [r4, #60]	; 0x3c
 8009de4:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8009de8:	2226      	movs	r2, #38	; 0x26
 8009dea:	4629      	mov	r1, r5
 8009dec:	4658      	mov	r0, fp
 8009dee:	f023 ffb4 	bl	802dd5a <memset>
 8009df2:	4658      	mov	r0, fp
 8009df4:	f7f9 fc70 	bl	80036d8 <_ZN8touchgfx6WidgetC1Ev>
 8009df8:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8009dfc:	26ff      	movs	r6, #255	; 0xff
 8009dfe:	4b68      	ldr	r3, [pc, #416]	; (8009fa0 <_ZN20Project_InfoViewBaseC1Ev+0x1d4>)
 8009e00:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8009e02:	2226      	movs	r2, #38	; 0x26
 8009e04:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8009e08:	4629      	mov	r1, r5
 8009e0a:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8009e0e:	4650      	mov	r0, sl
 8009e10:	66a5      	str	r5, [r4, #104]	; 0x68
 8009e12:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8009e16:	f023 ffa0 	bl	802dd5a <memset>
 8009e1a:	4650      	mov	r0, sl
 8009e1c:	f7f9 fc5c 	bl	80036d8 <_ZN8touchgfx6WidgetC1Ev>
 8009e20:	4b60      	ldr	r3, [pc, #384]	; (8009fa4 <_ZN20Project_InfoViewBaseC1Ev+0x1d8>)
 8009e22:	66e3      	str	r3, [r4, #108]	; 0x6c
 8009e24:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8009e28:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8009e2c:	a90a      	add	r1, sp, #40	; 0x28
 8009e2e:	4650      	mov	r0, sl
 8009e30:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8009e34:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8009e38:	f00c f8bb 	bl	8015fb2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8009e3c:	4648      	mov	r0, r9
 8009e3e:	f7f9 fcaf 	bl	80037a0 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8009e42:	4b59      	ldr	r3, [pc, #356]	; (8009fa8 <_ZN20Project_InfoViewBaseC1Ev+0x1dc>)
 8009e44:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8009e48:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 8009e4c:	4618      	mov	r0, r3
 8009e4e:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8009e52:	ee09 3a90 	vmov	s19, r3
 8009e56:	f00c f9e3 	bl	8016220 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8009e5a:	f504 7396 	add.w	r3, r4, #300	; 0x12c
 8009e5e:	4618      	mov	r0, r3
 8009e60:	f504 78ba 	add.w	r8, r4, #372	; 0x174
 8009e64:	ee0a 3a10 	vmov	s20, r3
 8009e68:	f7f9 fc9a 	bl	80037a0 <_ZN8touchgfx8TextAreaC1Ev>
 8009e6c:	4640      	mov	r0, r8
 8009e6e:	f00a fd93 	bl	8014998 <_ZN8touchgfx4LineC1Ev>
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8009e72:	4e4e      	ldr	r6, [pc, #312]	; (8009fac <_ZN20Project_InfoViewBaseC1Ev+0x1e0>)
 8009e74:	f504 73f2 	add.w	r3, r4, #484	; 0x1e4
 8009e78:	4618      	mov	r0, r3
 8009e7a:	9302      	str	r3, [sp, #8]
 8009e7c:	f7f9 fa30 	bl	80032e0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8009e80:	f106 0324 	add.w	r3, r6, #36	; 0x24
 8009e84:	f8c4 31ec 	str.w	r3, [r4, #492]	; 0x1ec
 8009e88:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8009e8c:	4618      	mov	r0, r3
 8009e8e:	f8c4 61e4 	str.w	r6, [r4, #484]	; 0x1e4
 8009e92:	f8c4 51f0 	str.w	r5, [r4, #496]	; 0x1f0
 8009e96:	f504 7710 	add.w	r7, r4, #576	; 0x240
 8009e9a:	ee08 3a10 	vmov	s16, r3
 8009e9e:	f7f9 fc7f 	bl	80037a0 <_ZN8touchgfx8TextAreaC1Ev>
 8009ea2:	4638      	mov	r0, r7
 8009ea4:	f00a fd78 	bl	8014998 <_ZN8touchgfx4LineC1Ev>
 8009ea8:	f504 732c 	add.w	r3, r4, #688	; 0x2b0
 8009eac:	4618      	mov	r0, r3
 8009eae:	9303      	str	r3, [sp, #12]
 8009eb0:	f7f9 fa16 	bl	80032e0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8009eb4:	f106 0324 	add.w	r3, r6, #36	; 0x24
 8009eb8:	f8c4 32b8 	str.w	r3, [r4, #696]	; 0x2b8
 8009ebc:	f504 7331 	add.w	r3, r4, #708	; 0x2c4
 8009ec0:	f8c4 62b0 	str.w	r6, [r4, #688]	; 0x2b0
 8009ec4:	4618      	mov	r0, r3
 8009ec6:	f8c4 52bc 	str.w	r5, [r4, #700]	; 0x2bc
 8009eca:	ee08 3a90 	vmov	s17, r3
 8009ece:	f7f9 fc67 	bl	80037a0 <_ZN8touchgfx8TextAreaC1Ev>
 8009ed2:	f504 7343 	add.w	r3, r4, #780	; 0x30c
 8009ed6:	4618      	mov	r0, r3
 8009ed8:	ee09 3a10 	vmov	s18, r3
 8009edc:	f7f9 fc60 	bl	80037a0 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8009ee0:	4a33      	ldr	r2, [pc, #204]	; (8009fb0 <_ZN20Project_InfoViewBaseC1Ev+0x1e4>)
 8009ee2:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8009ee6:	e9c3 245b 	strd	r2, r4, [r3, #364]	; 0x16c
 8009eea:	4a32      	ldr	r2, [pc, #200]	; (8009fb4 <_ZN20Project_InfoViewBaseC1Ev+0x1e8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8009eec:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8009ef0:	e9c3 255d 	strd	r2, r5, [r3, #372]	; 0x174
 8009ef4:	f504 7057 	add.w	r0, r4, #860	; 0x35c
 8009ef8:	f00d f84e 	bl	8016f98 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8009efc:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8009f00:	462a      	mov	r2, r5
 8009f02:	4658      	mov	r0, fp
 8009f04:	9300      	str	r3, [sp, #0]
 8009f06:	4629      	mov	r1, r5
 8009f08:	23f0      	movs	r3, #240	; 0xf0
 8009f0a:	f7f9 fbc0 	bl	800368e <_ZN8touchgfx8Drawable11setPositionEssss>
 8009f0e:	1d26      	adds	r6, r4, #4
        color = newColor;
 8009f10:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8009f14:	66a3      	str	r3, [r4, #104]	; 0x68
 8009f16:	4659      	mov	r1, fp
 8009f18:	4630      	mov	r0, r6
 8009f1a:	f008 fc71 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image_background.setXY(0, 0);
 8009f1e:	462a      	mov	r2, r5
 8009f20:	4650      	mov	r0, sl
 8009f22:	4629      	mov	r1, r5
 8009f24:	f7f9 fba6 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
 8009f28:	2308      	movs	r3, #8
    image_background.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8009f2a:	4650      	mov	r0, sl
 8009f2c:	a90a      	add	r1, sp, #40	; 0x28
 8009f2e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8009f32:	f00c f83e 	bl	8015fb2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8009f36:	4651      	mov	r1, sl
 8009f38:	4630      	mov	r0, r6
 8009f3a:	f008 fc61 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_auto_off.setXY(86, 308);
 8009f3e:	f44f 729a 	mov.w	r2, #308	; 0x134
 8009f42:	2156      	movs	r1, #86	; 0x56
 8009f44:	4648      	mov	r0, r9
 8009f46:	f7f9 fb95 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8009f4a:	f04f 33ff 	mov.w	r3, #4294967295
 8009f4e:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8009f52:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8009f56:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8009f5a:	f10d 0b10 	add.w	fp, sp, #16
 8009f5e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8009f62:	4649      	mov	r1, r9
 8009f64:	4658      	mov	r0, fp
 8009f66:	4798      	blx	r3
 8009f68:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8009f6c:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8009f70:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8009f74:	4b10      	ldr	r3, [pc, #64]	; (8009fb8 <_ZN20Project_InfoViewBaseC1Ev+0x1ec>)
 8009f76:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_5C9S).getText());
 8009f78:	f504 7a55 	add.w	sl, r4, #852	; 0x354
 8009f7c:	b92b      	cbnz	r3, 8009f8a <_ZN20Project_InfoViewBaseC1Ev+0x1be>
 8009f7e:	4b0f      	ldr	r3, [pc, #60]	; (8009fbc <_ZN20Project_InfoViewBaseC1Ev+0x1f0>)
 8009f80:	4a0f      	ldr	r2, [pc, #60]	; (8009fc0 <_ZN20Project_InfoViewBaseC1Ev+0x1f4>)
 8009f82:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8009f84:	480f      	ldr	r0, [pc, #60]	; (8009fc4 <_ZN20Project_InfoViewBaseC1Ev+0x1f8>)
 8009f86:	f023 fce3 	bl	802d950 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8009f8a:	4b0f      	ldr	r3, [pc, #60]	; (8009fc8 <_ZN20Project_InfoViewBaseC1Ev+0x1fc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8009f8c:	881b      	ldrh	r3, [r3, #0]
 8009f8e:	2b3e      	cmp	r3, #62	; 0x3e
 8009f90:	d81e      	bhi.n	8009fd0 <_ZN20Project_InfoViewBaseC1Ev+0x204>
 8009f92:	4b0e      	ldr	r3, [pc, #56]	; (8009fcc <_ZN20Project_InfoViewBaseC1Ev+0x200>)
 8009f94:	4a0a      	ldr	r2, [pc, #40]	; (8009fc0 <_ZN20Project_InfoViewBaseC1Ev+0x1f4>)
 8009f96:	2161      	movs	r1, #97	; 0x61
 8009f98:	e7f4      	b.n	8009f84 <_ZN20Project_InfoViewBaseC1Ev+0x1b8>
 8009f9a:	bf00      	nop
 8009f9c:	08030d08 	.word	0x08030d08
 8009fa0:	08031a58 	.word	0x08031a58
 8009fa4:	08031ca4 	.word	0x08031ca4
 8009fa8:	0802f5a4 	.word	0x0802f5a4
 8009fac:	0803178c 	.word	0x0803178c
 8009fb0:	08030cf0 	.word	0x08030cf0
 8009fb4:	08009db5 	.word	0x08009db5
 8009fb8:	20013894 	.word	0x20013894
 8009fbc:	0802f354 	.word	0x0802f354
 8009fc0:	0802f459 	.word	0x0802f459
 8009fc4:	0802f3d1 	.word	0x0802f3d1
 8009fc8:	20013898 	.word	0x20013898
 8009fcc:	0802f418 	.word	0x0802f418
        return texts->getText(typedTextId);
 8009fd0:	4ba0      	ldr	r3, [pc, #640]	; (800a254 <_ZN20Project_InfoViewBaseC1Ev+0x488>)
 8009fd2:	213e      	movs	r1, #62	; 0x3e
 8009fd4:	6818      	ldr	r0, [r3, #0]
 8009fd6:	f000 fb5f 	bl	800a698 <_ZNK8touchgfx5Texts7getTextEt>
 8009fda:	4a9f      	ldr	r2, [pc, #636]	; (800a258 <_ZN20Project_InfoViewBaseC1Ev+0x48c>)
 8009fdc:	4603      	mov	r3, r0
 8009fde:	2104      	movs	r1, #4
 8009fe0:	4650      	mov	r0, sl
 8009fe2:	f011 fe93 	bl	801bd0c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8009fe6:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
    textArea_auto_off.resizeToCurrentText();
 8009fea:	4648      	mov	r0, r9
 8009fec:	f00b fa10 	bl	8015410 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8009ff0:	f8df a268 	ldr.w	sl, [pc, #616]	; 800a25c <_ZN20Project_InfoViewBaseC1Ev+0x490>
 8009ff4:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8009ff8:	233f      	movs	r3, #63	; 0x3f
    textArea_auto_off.setTypedText(touchgfx::TypedText(T___SINGLEUSE_KYIO));
 8009ffa:	a90a      	add	r1, sp, #40	; 0x28
 8009ffc:	4648      	mov	r0, r9
 8009ffe:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800a002:	f00b fa25 	bl	8015450 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800a006:	4649      	mov	r1, r9
 800a008:	4630      	mov	r0, r6
 800a00a:	f008 fbf9 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_Return.setXY(33, 240);
 800a00e:	ee19 0a90 	vmov	r0, s19
 800a012:	22f0      	movs	r2, #240	; 0xf0
 800a014:	2121      	movs	r1, #33	; 0x21
 800a016:	f7f9 fb2d 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
 800a01a:	2303      	movs	r3, #3
    buttonWithLabel_Return.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800a01c:	aa0a      	add	r2, sp, #40	; 0x28
 800a01e:	a909      	add	r1, sp, #36	; 0x24
 800a020:	ee19 0a90 	vmov	r0, s19
 800a024:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800a028:	2302      	movs	r3, #2
 800a02a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800a02e:	f00b fdca 	bl	8015bc6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 800a032:	2364      	movs	r3, #100	; 0x64
        updateTextPosition();
 800a034:	ee19 0a90 	vmov	r0, s19
 800a038:	f8a4 311c 	strh.w	r3, [r4, #284]	; 0x11c
 800a03c:	f7f9 fb5e 	bl	80036fc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 800a040:	f04f 33ff 	mov.w	r3, #4294967295
        colorPressed = col;
 800a044:	e9c4 3348 	strd	r3, r3, [r4, #288]	; 0x120
    buttonWithLabel_Return.setAction(buttonCallback);
 800a048:	f504 538b 	add.w	r3, r4, #4448	; 0x1160
 800a04c:	330c      	adds	r3, #12
 800a04e:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
 800a052:	ee19 1a90 	vmov	r1, s19
 800a056:	4630      	mov	r0, r6
 800a058:	f008 fbd2 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_Info.setXY(7, 91);
 800a05c:	225b      	movs	r2, #91	; 0x5b
 800a05e:	ee1a 0a10 	vmov	r0, s20
 800a062:	2107      	movs	r1, #7
 800a064:	f7f9 fb06 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800a068:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 800a06c:	ee1a 1a10 	vmov	r1, s20
        color = newColor;
 800a070:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
        boundingArea = calculateBoundingArea();
 800a074:	4658      	mov	r0, fp
        linespace = space;
 800a076:	f8a4 5160 	strh.w	r5, [r4, #352]	; 0x160
        boundingArea = calculateBoundingArea();
 800a07a:	f00a ff4f 	bl	8014f1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800a07e:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 800a082:	f504 73b4 	add.w	r3, r4, #360	; 0x168
 800a086:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 800a08a:	2365      	movs	r3, #101	; 0x65
    textArea_Info.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9J9T));
 800a08c:	ee1a 0a10 	vmov	r0, s20
 800a090:	a90a      	add	r1, sp, #40	; 0x28
 800a092:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800a096:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 800a09a:	f00b f9d9 	bl	8015450 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800a09e:	ee1a 1a10 	vmov	r1, s20
 800a0a2:	4630      	mov	r0, r6
 800a0a4:	f008 fbac 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line2.setPosition(0, 75, 240, 10);
 800a0a8:	230a      	movs	r3, #10
 800a0aa:	9300      	str	r3, [sp, #0]
 800a0ac:	224b      	movs	r2, #75	; 0x4b
 800a0ae:	23f0      	movs	r3, #240	; 0xf0
 800a0b0:	4629      	mov	r1, r5
 800a0b2:	4640      	mov	r0, r8
 800a0b4:	f7f9 faeb 	bl	800368e <_ZN8touchgfx8Drawable11setPositionEssss>
 800a0b8:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800a0bc:	22a0      	movs	r2, #160	; 0xa0
 800a0be:	f8c4 31f0 	str.w	r3, [r4, #496]	; 0x1f0
        color565 = LCD16bpp::getNativeColor(painterColor);
 800a0c2:	f8a4 31f4 	strh.w	r3, [r4, #500]	; 0x1f4
 800a0c6:	9b02      	ldr	r3, [sp, #8]
 800a0c8:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 800a0cc:	4611      	mov	r1, r2
 800a0ce:	4640      	mov	r0, r8
 800a0d0:	f00a fd78 	bl	8014bc4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800a0d4:	22a0      	movs	r2, #160	; 0xa0
 800a0d6:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 800a0da:	4640      	mov	r0, r8
 800a0dc:	f00a fd7d 	bl	8014bda <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800a0e0:	f8d4 31b0 	ldr.w	r3, [r4, #432]	; 0x1b0
 800a0e4:	2b20      	cmp	r3, #32
 800a0e6:	d005      	beq.n	800a0f4 <_ZN20Project_InfoViewBaseC1Ev+0x328>
        lineWidthQ5 = widthQ5;
 800a0e8:	2320      	movs	r3, #32
 800a0ea:	f8c4 31b0 	str.w	r3, [r4, #432]	; 0x1b0
        updateCachedShape();
 800a0ee:	4640      	mov	r0, r8
 800a0f0:	f00a fc72 	bl	80149d8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800a0f4:	4640      	mov	r0, r8
 800a0f6:	2101      	movs	r1, #1
 800a0f8:	f00a fd7a 	bl	8014bf0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800a0fc:	4641      	mov	r1, r8
 800a0fe:	4630      	mov	r0, r6
 800a100:	f008 fb7e 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 800a104:	f04f 38ff 	mov.w	r8, #4294967295
    textArea_menu.setXY(70, 60);
 800a108:	223c      	movs	r2, #60	; 0x3c
        linespace = space;
 800a10a:	f04f 0900 	mov.w	r9, #0
 800a10e:	ee18 0a10 	vmov	r0, s16
 800a112:	2146      	movs	r1, #70	; 0x46
        boundingArea = calculateBoundingArea();
 800a114:	ad04      	add	r5, sp, #16
 800a116:	f7f9 faad 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
 800a11a:	ee18 1a10 	vmov	r1, s16
 800a11e:	4628      	mov	r0, r5
        color = newColor;
 800a120:	f8c4 8228 	str.w	r8, [r4, #552]	; 0x228
        linespace = space;
 800a124:	f8a4 922c 	strh.w	r9, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 800a128:	f00a fef8 	bl	8014f1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800a12c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800a130:	ee18 3a10 	vmov	r3, s16
 800a134:	333c      	adds	r3, #60	; 0x3c
 800a136:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    textArea_menu.setTypedText(touchgfx::TypedText(T___SINGLEUSE_BYJD));
 800a13a:	ee18 0a10 	vmov	r0, s16
 800a13e:	a90a      	add	r1, sp, #40	; 0x28
 800a140:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 800a144:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 800a148:	f00b f982 	bl	8015450 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800a14c:	ee18 1a10 	vmov	r1, s16
 800a150:	4630      	mov	r0, r6
 800a152:	f008 fb55 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 800a156:	230a      	movs	r3, #10
 800a158:	9300      	str	r3, [sp, #0]
 800a15a:	2232      	movs	r2, #50	; 0x32
 800a15c:	23f0      	movs	r3, #240	; 0xf0
 800a15e:	4649      	mov	r1, r9
 800a160:	4638      	mov	r0, r7
 800a162:	f7f9 fa94 	bl	800368e <_ZN8touchgfx8Drawable11setPositionEssss>
 800a166:	9b03      	ldr	r3, [sp, #12]
 800a168:	f8c4 3268 	str.w	r3, [r4, #616]	; 0x268
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800a16c:	22a0      	movs	r2, #160	; 0xa0
 800a16e:	4611      	mov	r1, r2
 800a170:	4638      	mov	r0, r7
 800a172:	f8c4 82bc 	str.w	r8, [r4, #700]	; 0x2bc
 800a176:	f8a4 82c0 	strh.w	r8, [r4, #704]	; 0x2c0
 800a17a:	f00a fd23 	bl	8014bc4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800a17e:	22a0      	movs	r2, #160	; 0xa0
 800a180:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 800a184:	4638      	mov	r0, r7
 800a186:	f00a fd28 	bl	8014bda <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800a18a:	f8d4 327c 	ldr.w	r3, [r4, #636]	; 0x27c
 800a18e:	2b20      	cmp	r3, #32
 800a190:	d005      	beq.n	800a19e <_ZN20Project_InfoViewBaseC1Ev+0x3d2>
        lineWidthQ5 = widthQ5;
 800a192:	2320      	movs	r3, #32
 800a194:	f8c4 327c 	str.w	r3, [r4, #636]	; 0x27c
        updateCachedShape();
 800a198:	4638      	mov	r0, r7
 800a19a:	f00a fc1d 	bl	80149d8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800a19e:	4638      	mov	r0, r7
 800a1a0:	2101      	movs	r1, #1
 800a1a2:	f00a fd25 	bl	8014bf0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800a1a6:	4639      	mov	r1, r7
 800a1a8:	4630      	mov	r0, r6
 800a1aa:	f008 fb29 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 800a1ae:	f04f 38ff 	mov.w	r8, #4294967295
    textArea_name.setXY(69, 35);
 800a1b2:	ee18 0a90 	vmov	r0, s17
 800a1b6:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 800a1b8:	2700      	movs	r7, #0
 800a1ba:	2145      	movs	r1, #69	; 0x45
 800a1bc:	f7f9 fa5a 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800a1c0:	ee18 1a90 	vmov	r1, s17
 800a1c4:	4628      	mov	r0, r5
        color = newColor;
 800a1c6:	f8c4 82f4 	str.w	r8, [r4, #756]	; 0x2f4
        linespace = space;
 800a1ca:	f8a4 72f8 	strh.w	r7, [r4, #760]	; 0x2f8
        boundingArea = calculateBoundingArea();
 800a1ce:	f00a fea5 	bl	8014f1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800a1d2:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800a1d6:	ee18 3a90 	vmov	r3, s17
 800a1da:	333c      	adds	r3, #60	; 0x3c
 800a1dc:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800a1e0:	2367      	movs	r3, #103	; 0x67
    textArea_name.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8N0V));
 800a1e2:	ee18 0a90 	vmov	r0, s17
 800a1e6:	a90a      	add	r1, sp, #40	; 0x28
 800a1e8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800a1ec:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 800a1f0:	f00b f92e 	bl	8015450 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800a1f4:	ee18 1a90 	vmov	r1, s17
 800a1f8:	4630      	mov	r0, r6
 800a1fa:	f008 fb01 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_title.setXY(54, 12);
 800a1fe:	ee19 0a10 	vmov	r0, s18
 800a202:	220c      	movs	r2, #12
 800a204:	2136      	movs	r1, #54	; 0x36
 800a206:	f7f9 fa35 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
 800a20a:	ee19 1a10 	vmov	r1, s18
 800a20e:	4628      	mov	r0, r5
        color = newColor;
 800a210:	f8c4 833c 	str.w	r8, [r4, #828]	; 0x33c
        linespace = space;
 800a214:	f8a4 7340 	strh.w	r7, [r4, #832]	; 0x340
        boundingArea = calculateBoundingArea();
 800a218:	f00a fe80 	bl	8014f1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800a21c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800a220:	ee19 3a10 	vmov	r3, s18
 800a224:	333c      	adds	r3, #60	; 0x3c
 800a226:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800a22a:	2366      	movs	r3, #102	; 0x66
    textArea_title.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SSFQ));
 800a22c:	ee19 0a10 	vmov	r0, s18
 800a230:	a90a      	add	r1, sp, #40	; 0x28
 800a232:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800a236:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 800a23a:	f00b f909 	bl	8015450 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800a23e:	4630      	mov	r0, r6
 800a240:	ee19 1a10 	vmov	r1, s18
 800a244:	f008 fadc 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800a248:	4620      	mov	r0, r4
 800a24a:	b00d      	add	sp, #52	; 0x34
 800a24c:	ecbd 8b06 	vpop	{d8-d10}
 800a250:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a254:	200138a0 	.word	0x200138a0
 800a258:	0802f491 	.word	0x0802f491
 800a25c:	0802f504 	.word	0x0802f504

0800a260 <_ZN20Shutting_OffViewBaseD1Ev>:
}

Shutting_OffViewBase::~Shutting_OffViewBase()
{

}
 800a260:	4770      	bx	lr

0800a262 <_ZN20Shutting_OffViewBase11setupScreenEv>:

void Shutting_OffViewBase::setupScreen()
{

}
 800a262:	4770      	bx	lr

0800a264 <_ZN20Shutting_OffViewBaseD0Ev>:
Shutting_OffViewBase::~Shutting_OffViewBase()
 800a264:	b510      	push	{r4, lr}
}
 800a266:	2198      	movs	r1, #152	; 0x98
Shutting_OffViewBase::~Shutting_OffViewBase()
 800a268:	4604      	mov	r4, r0
}
 800a26a:	f022 fc8a 	bl	802cb82 <_ZdlPvj>
 800a26e:	4620      	mov	r0, r4
 800a270:	bd10      	pop	{r4, pc}
	...

0800a274 <_ZN20Shutting_OffViewBaseC1Ev>:
Shutting_OffViewBase::Shutting_OffViewBase()
 800a274:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800a278:	4604      	mov	r4, r0
 800a27a:	4626      	mov	r6, r4
 800a27c:	f010 f818 	bl	801a2b0 <_ZN8touchgfx6ScreenC1Ev>
 800a280:	2500      	movs	r5, #0
 800a282:	4b2e      	ldr	r3, [pc, #184]	; (800a33c <_ZN20Shutting_OffViewBaseC1Ev+0xc8>)
 800a284:	63e5      	str	r5, [r4, #60]	; 0x3c
 800a286:	f846 3b40 	str.w	r3, [r6], #64
        : Widget(), alpha(255), color(0)
 800a28a:	4b2d      	ldr	r3, [pc, #180]	; (800a340 <_ZN20Shutting_OffViewBaseC1Ev+0xcc>)
          cachedAbsX(0),
 800a28c:	6625      	str	r5, [r4, #96]	; 0x60
        : x(0), y(0), width(0), height(0)
 800a28e:	e9c4 3510 	strd	r3, r5, [r4, #64]	; 0x40
          touchable(false),
 800a292:	f44f 7280 	mov.w	r2, #256	; 0x100
 800a296:	23ff      	movs	r3, #255	; 0xff
 800a298:	f104 076c 	add.w	r7, r4, #108	; 0x6c
 800a29c:	f8a4 2064 	strh.w	r2, [r4, #100]	; 0x64
 800a2a0:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
 800a2a4:	f8a4 2090 	strh.w	r2, [r4, #144]	; 0x90
 800a2a8:	f64f 73ff 	movw	r3, #65535	; 0xffff
        : Widget(), bitmap(bmp), alpha(255)
 800a2ac:	4a25      	ldr	r2, [pc, #148]	; (800a344 <_ZN20Shutting_OffViewBaseC1Ev+0xd0>)
 800a2ae:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 800a2b2:	f884 3094 	strb.w	r3, [r4, #148]	; 0x94
 800a2b6:	66e2      	str	r2, [r4, #108]	; 0x6c
        Image::setBitmap(bmp);
 800a2b8:	a901      	add	r1, sp, #4
 800a2ba:	4638      	mov	r0, r7
 800a2bc:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
          parent(0),
 800a2c0:	e9c4 5514 	strd	r5, r5, [r4, #80]	; 0x50
          nextDrawChainElement(0),
 800a2c4:	e9c4 5516 	strd	r5, r5, [r4, #88]	; 0x58
 800a2c8:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
 800a2cc:	e9c4 551e 	strd	r5, r5, [r4, #120]	; 0x78
          nextSibling(0),
 800a2d0:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
          cachedAbsX(0),
 800a2d4:	e9c4 5522 	strd	r5, r5, [r4, #136]	; 0x88
        : color(col)
 800a2d8:	66a5      	str	r5, [r4, #104]	; 0x68
 800a2da:	f8ad 3004 	strh.w	r3, [sp, #4]
 800a2de:	f00b fe68 	bl	8015fb2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        setXY(x, y);
 800a2e2:	462a      	mov	r2, r5
 800a2e4:	4629      	mov	r1, r5
 800a2e6:	4630      	mov	r0, r6
 800a2e8:	f7f9 f9c4 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 800a2ec:	4630      	mov	r0, r6
 800a2ee:	21f0      	movs	r1, #240	; 0xf0
 800a2f0:	f7f8 ff42 	bl	8003178 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 800a2f4:	4630      	mov	r0, r6
 800a2f6:	f44f 71a0 	mov.w	r1, #320	; 0x140
 800a2fa:	f7f8 ff3f 	bl	800317c <_ZN8touchgfx8Drawable9setHeightEs>
 800a2fe:	f104 0804 	add.w	r8, r4, #4
        color = newColor;
 800a302:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800a306:	66a3      	str	r3, [r4, #104]	; 0x68
 800a308:	4631      	mov	r1, r6
 800a30a:	4640      	mov	r0, r8
 800a30c:	f008 fa78 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image_shutdown.setXY(-3, 0);
 800a310:	462a      	mov	r2, r5
 800a312:	4638      	mov	r0, r7
 800a314:	f06f 0102 	mvn.w	r1, #2
 800a318:	f7f9 f9ac 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
 800a31c:	230b      	movs	r3, #11
    image_shutdown.setBitmap(touchgfx::Bitmap(BITMAP_SHUTDOWN_ID));
 800a31e:	a901      	add	r1, sp, #4
 800a320:	4638      	mov	r0, r7
 800a322:	f8ad 3004 	strh.w	r3, [sp, #4]
 800a326:	f00b fe44 	bl	8015fb2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800a32a:	4640      	mov	r0, r8
 800a32c:	4639      	mov	r1, r7
 800a32e:	f008 fa67 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800a332:	4620      	mov	r0, r4
 800a334:	b002      	add	sp, #8
 800a336:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a33a:	bf00      	nop
 800a33c:	08030d3c 	.word	0x08030d3c
 800a340:	08031a58 	.word	0x08031a58
 800a344:	08031ca4 	.word	0x08031ca4

0800a348 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 800a348:	4770      	bx	lr
	...

0800a34c <_Z23getFont_verdana_10_4bppv>:
{
 800a34c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 800a34e:	4d17      	ldr	r5, [pc, #92]	; (800a3ac <_Z23getFont_verdana_10_4bppv+0x60>)
 800a350:	682c      	ldr	r4, [r5, #0]
 800a352:	f3bf 8f5b 	dmb	ish
 800a356:	f014 0401 	ands.w	r4, r4, #1
{
 800a35a:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 800a35c:	d122      	bne.n	800a3a4 <_Z23getFont_verdana_10_4bppv+0x58>
 800a35e:	4628      	mov	r0, r5
 800a360:	f022 fc11 	bl	802cb86 <__cxa_guard_acquire>
 800a364:	b1f0      	cbz	r0, 800a3a4 <_Z23getFont_verdana_10_4bppv+0x58>
 800a366:	233f      	movs	r3, #63	; 0x3f
 800a368:	9309      	str	r3, [sp, #36]	; 0x24
 800a36a:	4b11      	ldr	r3, [pc, #68]	; (800a3b0 <_Z23getFont_verdana_10_4bppv+0x64>)
 800a36c:	9308      	str	r3, [sp, #32]
 800a36e:	4b11      	ldr	r3, [pc, #68]	; (800a3b4 <_Z23getFont_verdana_10_4bppv+0x68>)
 800a370:	9307      	str	r3, [sp, #28]
 800a372:	2301      	movs	r3, #1
 800a374:	e9cd 3305 	strd	r3, r3, [sp, #20]
 800a378:	9304      	str	r3, [sp, #16]
 800a37a:	2304      	movs	r3, #4
 800a37c:	e9cd 4302 	strd	r4, r3, [sp, #8]
 800a380:	230a      	movs	r3, #10
 800a382:	490d      	ldr	r1, [pc, #52]	; (800a3b8 <_Z23getFont_verdana_10_4bppv+0x6c>)
 800a384:	9300      	str	r3, [sp, #0]
 800a386:	225f      	movs	r2, #95	; 0x5f
 800a388:	230c      	movs	r3, #12
 800a38a:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 800a38e:	480b      	ldr	r0, [pc, #44]	; (800a3bc <_Z23getFont_verdana_10_4bppv+0x70>)
 800a390:	940a      	str	r4, [sp, #40]	; 0x28
 800a392:	9401      	str	r4, [sp, #4]
 800a394:	f7fc f9da 	bl	800674c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800a398:	4809      	ldr	r0, [pc, #36]	; (800a3c0 <_Z23getFont_verdana_10_4bppv+0x74>)
 800a39a:	f023 faf7 	bl	802d98c <atexit>
 800a39e:	4628      	mov	r0, r5
 800a3a0:	f022 fbfd 	bl	802cb9e <__cxa_guard_release>
    return verdana_10_4bpp;
}
 800a3a4:	4805      	ldr	r0, [pc, #20]	; (800a3bc <_Z23getFont_verdana_10_4bppv+0x70>)
 800a3a6:	b00f      	add	sp, #60	; 0x3c
 800a3a8:	bd30      	pop	{r4, r5, pc}
 800a3aa:	bf00      	nop
 800a3ac:	2000293c 	.word	0x2000293c
 800a3b0:	08049948 	.word	0x08049948
 800a3b4:	08049b84 	.word	0x08049b84
 800a3b8:	08048990 	.word	0x08048990
 800a3bc:	20002940 	.word	0x20002940
 800a3c0:	0800a349 	.word	0x0800a349

0800a3c4 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_12_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_12_4bpp();

touchgfx::GeneratedFont& getFont_verdana_12_4bpp()
{
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 800a3c4:	4770      	bx	lr
	...

0800a3c8 <_Z23getFont_verdana_12_4bppv>:
{
 800a3c8:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 800a3ca:	4d17      	ldr	r5, [pc, #92]	; (800a428 <_Z23getFont_verdana_12_4bppv+0x60>)
 800a3cc:	682c      	ldr	r4, [r5, #0]
 800a3ce:	f3bf 8f5b 	dmb	ish
 800a3d2:	f014 0401 	ands.w	r4, r4, #1
{
 800a3d6:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 800a3d8:	d122      	bne.n	800a420 <_Z23getFont_verdana_12_4bppv+0x58>
 800a3da:	4628      	mov	r0, r5
 800a3dc:	f022 fbd3 	bl	802cb86 <__cxa_guard_acquire>
 800a3e0:	b1f0      	cbz	r0, 800a420 <_Z23getFont_verdana_12_4bppv+0x58>
 800a3e2:	233f      	movs	r3, #63	; 0x3f
 800a3e4:	9309      	str	r3, [sp, #36]	; 0x24
 800a3e6:	4b11      	ldr	r3, [pc, #68]	; (800a42c <_Z23getFont_verdana_12_4bppv+0x64>)
 800a3e8:	9308      	str	r3, [sp, #32]
 800a3ea:	4b11      	ldr	r3, [pc, #68]	; (800a430 <_Z23getFont_verdana_12_4bppv+0x68>)
 800a3ec:	9307      	str	r3, [sp, #28]
 800a3ee:	2301      	movs	r3, #1
 800a3f0:	e9cd 3305 	strd	r3, r3, [sp, #20]
 800a3f4:	9304      	str	r3, [sp, #16]
 800a3f6:	2304      	movs	r3, #4
 800a3f8:	e9cd 4302 	strd	r4, r3, [sp, #8]
 800a3fc:	230c      	movs	r3, #12
 800a3fe:	490d      	ldr	r1, [pc, #52]	; (800a434 <_Z23getFont_verdana_12_4bppv+0x6c>)
 800a400:	9300      	str	r3, [sp, #0]
 800a402:	2260      	movs	r2, #96	; 0x60
 800a404:	230f      	movs	r3, #15
 800a406:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 800a40a:	480b      	ldr	r0, [pc, #44]	; (800a438 <_Z23getFont_verdana_12_4bppv+0x70>)
 800a40c:	940a      	str	r4, [sp, #40]	; 0x28
 800a40e:	9401      	str	r4, [sp, #4]
 800a410:	f7fc f99c 	bl	800674c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800a414:	4809      	ldr	r0, [pc, #36]	; (800a43c <_Z23getFont_verdana_12_4bppv+0x74>)
 800a416:	f023 fab9 	bl	802d98c <atexit>
 800a41a:	4628      	mov	r0, r5
 800a41c:	f022 fbbf 	bl	802cb9e <__cxa_guard_release>
    return verdana_12_4bpp;
}
 800a420:	4805      	ldr	r0, [pc, #20]	; (800a438 <_Z23getFont_verdana_12_4bppv+0x70>)
 800a422:	b00f      	add	sp, #60	; 0x3c
 800a424:	bd30      	pop	{r4, r5, pc}
 800a426:	bf00      	nop
 800a428:	2000296c 	.word	0x2000296c
 800a42c:	0804997c 	.word	0x0804997c
 800a430:	08049b88 	.word	0x08049b88
 800a434:	08048ec4 	.word	0x08048ec4
 800a438:	20002970 	.word	0x20002970
 800a43c:	0800a3c5 	.word	0x0800a3c5

0800a440 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_19_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_19_4bpp();

touchgfx::GeneratedFont& getFont_verdana_19_4bpp()
{
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 95, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 800a440:	4770      	bx	lr
	...

0800a444 <_Z23getFont_verdana_19_4bppv>:
{
 800a444:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 95, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 800a446:	4d17      	ldr	r5, [pc, #92]	; (800a4a4 <_Z23getFont_verdana_19_4bppv+0x60>)
 800a448:	682c      	ldr	r4, [r5, #0]
 800a44a:	f3bf 8f5b 	dmb	ish
 800a44e:	f014 0401 	ands.w	r4, r4, #1
{
 800a452:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 95, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 800a454:	d122      	bne.n	800a49c <_Z23getFont_verdana_19_4bppv+0x58>
 800a456:	4628      	mov	r0, r5
 800a458:	f022 fb95 	bl	802cb86 <__cxa_guard_acquire>
 800a45c:	b1f0      	cbz	r0, 800a49c <_Z23getFont_verdana_19_4bppv+0x58>
 800a45e:	233f      	movs	r3, #63	; 0x3f
 800a460:	9309      	str	r3, [sp, #36]	; 0x24
 800a462:	4b11      	ldr	r3, [pc, #68]	; (800a4a8 <_Z23getFont_verdana_19_4bppv+0x64>)
 800a464:	9308      	str	r3, [sp, #32]
 800a466:	4b11      	ldr	r3, [pc, #68]	; (800a4ac <_Z23getFont_verdana_19_4bppv+0x68>)
 800a468:	9307      	str	r3, [sp, #28]
 800a46a:	2301      	movs	r3, #1
 800a46c:	e9cd 3305 	strd	r3, r3, [sp, #20]
 800a470:	9304      	str	r3, [sp, #16]
 800a472:	2304      	movs	r3, #4
 800a474:	e9cd 4302 	strd	r4, r3, [sp, #8]
 800a478:	2313      	movs	r3, #19
 800a47a:	490d      	ldr	r1, [pc, #52]	; (800a4b0 <_Z23getFont_verdana_19_4bppv+0x6c>)
 800a47c:	9300      	str	r3, [sp, #0]
 800a47e:	225f      	movs	r2, #95	; 0x5f
 800a480:	2317      	movs	r3, #23
 800a482:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 800a486:	480b      	ldr	r0, [pc, #44]	; (800a4b4 <_Z23getFont_verdana_19_4bppv+0x70>)
 800a488:	940a      	str	r4, [sp, #40]	; 0x28
 800a48a:	9401      	str	r4, [sp, #4]
 800a48c:	f7fc f95e 	bl	800674c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800a490:	4809      	ldr	r0, [pc, #36]	; (800a4b8 <_Z23getFont_verdana_19_4bppv+0x74>)
 800a492:	f023 fa7b 	bl	802d98c <atexit>
 800a496:	4628      	mov	r0, r5
 800a498:	f022 fb81 	bl	802cb9e <__cxa_guard_release>
    return verdana_19_4bpp;
}
 800a49c:	4805      	ldr	r0, [pc, #20]	; (800a4b4 <_Z23getFont_verdana_19_4bppv+0x70>)
 800a49e:	b00f      	add	sp, #60	; 0x3c
 800a4a0:	bd30      	pop	{r4, r5, pc}
 800a4a2:	bf00      	nop
 800a4a4:	2000299c 	.word	0x2000299c
 800a4a8:	08049a00 	.word	0x08049a00
 800a4ac:	08049b8c 	.word	0x08049b8c
 800a4b0:	08049404 	.word	0x08049404
 800a4b4:	200029a0 	.word	0x200029a0
 800a4b8:	0800a441 	.word	0x0800a441

0800a4bc <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 800a4bc:	4770      	bx	lr
	...

0800a4c0 <_Z23getFont_verdana_40_4bppv>:
{
 800a4c0:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 800a4c2:	4d16      	ldr	r5, [pc, #88]	; (800a51c <_Z23getFont_verdana_40_4bppv+0x5c>)
 800a4c4:	682c      	ldr	r4, [r5, #0]
 800a4c6:	f3bf 8f5b 	dmb	ish
 800a4ca:	f014 0401 	ands.w	r4, r4, #1
{
 800a4ce:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 800a4d0:	d120      	bne.n	800a514 <_Z23getFont_verdana_40_4bppv+0x54>
 800a4d2:	4628      	mov	r0, r5
 800a4d4:	f022 fb57 	bl	802cb86 <__cxa_guard_acquire>
 800a4d8:	b1e0      	cbz	r0, 800a514 <_Z23getFont_verdana_40_4bppv+0x54>
 800a4da:	233f      	movs	r3, #63	; 0x3f
 800a4dc:	9309      	str	r3, [sp, #36]	; 0x24
 800a4de:	4b10      	ldr	r3, [pc, #64]	; (800a520 <_Z23getFont_verdana_40_4bppv+0x60>)
 800a4e0:	9308      	str	r3, [sp, #32]
 800a4e2:	4b10      	ldr	r3, [pc, #64]	; (800a524 <_Z23getFont_verdana_40_4bppv+0x64>)
 800a4e4:	4910      	ldr	r1, [pc, #64]	; (800a528 <_Z23getFont_verdana_40_4bppv+0x68>)
 800a4e6:	4811      	ldr	r0, [pc, #68]	; (800a52c <_Z23getFont_verdana_40_4bppv+0x6c>)
 800a4e8:	940a      	str	r4, [sp, #40]	; 0x28
 800a4ea:	2201      	movs	r2, #1
 800a4ec:	e9cd 4306 	strd	r4, r3, [sp, #24]
 800a4f0:	2304      	movs	r3, #4
 800a4f2:	e9cd 3203 	strd	r3, r2, [sp, #12]
 800a4f6:	2328      	movs	r3, #40	; 0x28
 800a4f8:	9300      	str	r3, [sp, #0]
 800a4fa:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 800a4fe:	e9cd 4401 	strd	r4, r4, [sp, #4]
 800a502:	9405      	str	r4, [sp, #20]
 800a504:	f7fc f922 	bl	800674c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800a508:	4809      	ldr	r0, [pc, #36]	; (800a530 <_Z23getFont_verdana_40_4bppv+0x70>)
 800a50a:	f023 fa3f 	bl	802d98c <atexit>
 800a50e:	4628      	mov	r0, r5
 800a510:	f022 fb45 	bl	802cb9e <__cxa_guard_release>
    return verdana_40_4bpp;
}
 800a514:	4805      	ldr	r0, [pc, #20]	; (800a52c <_Z23getFont_verdana_40_4bppv+0x6c>)
 800a516:	b00f      	add	sp, #60	; 0x3c
 800a518:	bd30      	pop	{r4, r5, pc}
 800a51a:	bf00      	nop
 800a51c:	200029cc 	.word	0x200029cc
 800a520:	08049b80 	.word	0x08049b80
 800a524:	08049b90 	.word	0x08049b90
 800a528:	08049938 	.word	0x08049938
 800a52c:	200029d0 	.word	0x200029d0
 800a530:	0800a4bd 	.word	0x0800a4bd

0800a534 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 800a534:	2000      	movs	r0, #0
 800a536:	4770      	bx	lr

0800a538 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 800a538:	2000      	movs	r0, #0
 800a53a:	4770      	bx	lr

0800a53c <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800a53c:	b40e      	push	{r1, r2, r3}
 800a53e:	b503      	push	{r0, r1, lr}
 800a540:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800a542:	2100      	movs	r1, #0
{
 800a544:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 800a548:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800a54a:	f00f f9ef 	bl	801992c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 800a54e:	b002      	add	sp, #8
 800a550:	f85d eb04 	ldr.w	lr, [sp], #4
 800a554:	b003      	add	sp, #12
 800a556:	4770      	bx	lr

0800a558 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800a558:	b40c      	push	{r2, r3}
 800a55a:	b507      	push	{r0, r1, r2, lr}
 800a55c:	ab04      	add	r3, sp, #16
 800a55e:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 800a562:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 800a564:	f00f f9e2 	bl	801992c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 800a568:	b003      	add	sp, #12
 800a56a:	f85d eb04 	ldr.w	lr, [sp], #4
 800a56e:	b002      	add	sp, #8
 800a570:	4770      	bx	lr
	...

0800a574 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 800a574:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 800a576:	b510      	push	{r4, lr}
 800a578:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 800a57a:	b373      	cbz	r3, 800a5da <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 800a57c:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 800a57e:	b92b      	cbnz	r3, 800a58c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 800a580:	4b18      	ldr	r3, [pc, #96]	; (800a5e4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 800a582:	4a19      	ldr	r2, [pc, #100]	; (800a5e8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 800a584:	21c5      	movs	r1, #197	; 0xc5
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 800a586:	4819      	ldr	r0, [pc, #100]	; (800a5ec <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 800a588:	f023 f9e2 	bl	802d950 <__assert_func>
            return buffer[pos];
 800a58c:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 800a58e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800a592:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 800a594:	b30b      	cbz	r3, 800a5da <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 800a596:	f010 fe04 	bl	801b1a2 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 800a59a:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800a59c:	2b01      	cmp	r3, #1
 800a59e:	d803      	bhi.n	800a5a8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 800a5a0:	4b13      	ldr	r3, [pc, #76]	; (800a5f0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 800a5a2:	4a14      	ldr	r2, [pc, #80]	; (800a5f4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 800a5a4:	21cb      	movs	r1, #203	; 0xcb
 800a5a6:	e7ee      	b.n	800a586 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 800a5a8:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800a5aa:	1c53      	adds	r3, r2, #1
 800a5ac:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 800a5ae:	2b09      	cmp	r3, #9
 800a5b0:	4619      	mov	r1, r3
 800a5b2:	bf88      	it	hi
 800a5b4:	f1a3 010a 	subhi.w	r1, r3, #10
 800a5b8:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 800a5bc:	f640 103f 	movw	r0, #2367	; 0x93f
 800a5c0:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 800a5c2:	4281      	cmp	r1, r0
 800a5c4:	d109      	bne.n	800a5da <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 800a5c6:	2b0a      	cmp	r3, #10
 800a5c8:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 800a5cc:	bf28      	it	cs
 800a5ce:	2300      	movcs	r3, #0

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 800a5d0:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 800a5d4:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 800a5d6:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 800a5d8:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 800a5da:	4620      	mov	r0, r4
}
 800a5dc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 800a5e0:	f010 bce2 	b.w	801afa8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800a5e4:	08030d68 	.word	0x08030d68
 800a5e8:	08030d71 	.word	0x08030d71
 800a5ec:	08030e1c 	.word	0x08030e1c
 800a5f0:	08030e66 	.word	0x08030e66
 800a5f4:	08030e74 	.word	0x08030e74

0800a5f8 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 800a5f8:	f010 bc9d 	b.w	801af36 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

0800a5fc <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 800a5fc:	b510      	push	{r4, lr}
 800a5fe:	b086      	sub	sp, #24
 800a600:	ac02      	add	r4, sp, #8
 800a602:	e884 0006 	stmia.w	r4, {r1, r2}
 800a606:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 800a608:	ab0a      	add	r3, sp, #40	; 0x28
 800a60a:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 800a60c:	9301      	str	r3, [sp, #4]
 800a60e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800a610:	9300      	str	r3, [sp, #0]
 800a612:	4621      	mov	r1, r4
 800a614:	9b08      	ldr	r3, [sp, #32]
 800a616:	f00d fd4d 	bl	80180b4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 800a61a:	b006      	add	sp, #24
 800a61c:	bd10      	pop	{r4, pc}
	...

0800a620 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 800a620:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 800a622:	bb18      	cbnz	r0, 800a66c <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 800a624:	4b12      	ldr	r3, [pc, #72]	; (800a670 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 800a626:	4813      	ldr	r0, [pc, #76]	; (800a674 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 800a628:	681c      	ldr	r4, [r3, #0]
 800a62a:	4913      	ldr	r1, [pc, #76]	; (800a678 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 800a62c:	b1b4      	cbz	r4, 800a65c <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 800a62e:	6822      	ldr	r2, [r4, #0]
 800a630:	4422      	add	r2, r4
 800a632:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 800a634:	6862      	ldr	r2, [r4, #4]
 800a636:	4422      	add	r2, r4
 800a638:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 800a63a:	68a2      	ldr	r2, [r4, #8]
 800a63c:	4414      	add	r4, r2
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 800a63e:	4b0f      	ldr	r3, [pc, #60]	; (800a67c <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 800a640:	2200      	movs	r2, #0
 800a642:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 800a644:	f000 f838 	bl	800a6b8 <_ZN17TypedTextDatabase8getFontsEv>
 800a648:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 800a64a:	f000 f833 	bl	800a6b4 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 800a64e:	4b0c      	ldr	r3, [pc, #48]	; (800a680 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 800a650:	601c      	str	r4, [r3, #0]
        fonts = f;
 800a652:	4b0c      	ldr	r3, [pc, #48]	; (800a684 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 800a654:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 800a656:	4b0c      	ldr	r3, [pc, #48]	; (800a688 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 800a658:	8018      	strh	r0, [r3, #0]
    }
}
 800a65a:	e007      	b.n	800a66c <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 800a65c:	4b0b      	ldr	r3, [pc, #44]	; (800a68c <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 800a65e:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 800a660:	4b0b      	ldr	r3, [pc, #44]	; (800a690 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 800a662:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 800a664:	4b0b      	ldr	r3, [pc, #44]	; (800a694 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 800a666:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 800a668:	2c00      	cmp	r4, #0
 800a66a:	d1e8      	bne.n	800a63e <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 800a66c:	bd38      	pop	{r3, r4, r5, pc}
 800a66e:	bf00      	nop
 800a670:	200029fc 	.word	0x200029fc
 800a674:	20002a00 	.word	0x20002a00
 800a678:	20002a04 	.word	0x20002a04
 800a67c:	20002a08 	.word	0x20002a08
 800a680:	20013894 	.word	0x20013894
 800a684:	2001389c 	.word	0x2001389c
 800a688:	20013898 	.word	0x20013898
 800a68c:	08049d5c 	.word	0x08049d5c
 800a690:	08049b94 	.word	0x08049b94
 800a694:	0804a2c4 	.word	0x0804a2c4

0800a698 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 800a698:	4b04      	ldr	r3, [pc, #16]	; (800a6ac <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 800a69a:	681b      	ldr	r3, [r3, #0]
 800a69c:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 800a6a0:	4b03      	ldr	r3, [pc, #12]	; (800a6b0 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 800a6a2:	681b      	ldr	r3, [r3, #0]
}
 800a6a4:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 800a6a8:	4770      	bx	lr
 800a6aa:	bf00      	nop
 800a6ac:	20002a04 	.word	0x20002a04
 800a6b0:	20002a00 	.word	0x20002a00

0800a6b4 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 800a6b4:	2072      	movs	r0, #114	; 0x72
 800a6b6:	4770      	bx	lr

0800a6b8 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 800a6b8:	4800      	ldr	r0, [pc, #0]	; (800a6bc <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 800a6ba:	4770      	bx	lr
 800a6bc:	20002a0c 	.word	0x20002a0c

0800a6c0 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 3:
        touchgfx_fonts[3] = &(getFont_verdana_12_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 800a6c0:	b510      	push	{r4, lr}
    &(getFont_verdana_19_4bpp()),
 800a6c2:	f7ff febf 	bl	800a444 <_Z23getFont_verdana_19_4bppv>
};
 800a6c6:	4c06      	ldr	r4, [pc, #24]	; (800a6e0 <_GLOBAL__sub_I_touchgfx_fonts+0x20>)
 800a6c8:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 800a6ca:	f7ff fef9 	bl	800a4c0 <_Z23getFont_verdana_40_4bppv>
};
 800a6ce:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp()),
 800a6d0:	f7ff fe3c 	bl	800a34c <_Z23getFont_verdana_10_4bppv>
};
 800a6d4:	60a0      	str	r0, [r4, #8]
    &(getFont_verdana_12_4bpp())
 800a6d6:	f7ff fe77 	bl	800a3c8 <_Z23getFont_verdana_12_4bppv>
};
 800a6da:	60e0      	str	r0, [r4, #12]
} // namespace TypedTextDatabase
 800a6dc:	bd10      	pop	{r4, pc}
 800a6de:	bf00      	nop
 800a6e0:	20002a0c 	.word	0x20002a0c

0800a6e4 <_ZN24Calibration_PadPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Calibration_PadPresenter() {}
 800a6e4:	4770      	bx	lr

0800a6e6 <_ZThn4_N24Calibration_PadPresenterD1Ev>:
 800a6e6:	3804      	subs	r0, #4
 800a6e8:	4770      	bx	lr

0800a6ea <_ZN24Calibration_PadPresenter10deactivateEv>:
}

void Calibration_PadPresenter::activate()
{

}
 800a6ea:	4770      	bx	lr

0800a6ec <_ZN24Calibration_PadPresenter15setTimeoutValueEi>:
}

void Calibration_PadPresenter::setTimeoutValue(int value)
{

}
 800a6ec:	4770      	bx	lr

0800a6ee <_ZN24Calibration_PadPresenterD0Ev>:
 800a6ee:	b510      	push	{r4, lr}
 800a6f0:	2110      	movs	r1, #16
 800a6f2:	4604      	mov	r4, r0
 800a6f4:	f022 fa45 	bl	802cb82 <_ZdlPvj>
 800a6f8:	4620      	mov	r0, r4
 800a6fa:	bd10      	pop	{r4, pc}

0800a6fc <_ZThn4_N24Calibration_PadPresenterD0Ev>:
 800a6fc:	f1a0 0004 	sub.w	r0, r0, #4
 800a700:	e7f5      	b.n	800a6ee <_ZN24Calibration_PadPresenterD0Ev>

0800a702 <_ZThn4_N24Calibration_PadPresenter15setTimeoutValueEi>:
 800a702:	4770      	bx	lr

0800a704 <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView>:
Calibration_PadPresenter::Calibration_PadPresenter(Calibration_PadView& v)
 800a704:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 800a706:	2200      	movs	r2, #0
 800a708:	6082      	str	r2, [r0, #8]
    : view(v)
 800a70a:	4a04      	ldr	r2, [pc, #16]	; (800a71c <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView+0x18>)
 800a70c:	60c1      	str	r1, [r0, #12]
 800a70e:	f102 0408 	add.w	r4, r2, #8
 800a712:	3224      	adds	r2, #36	; 0x24
 800a714:	6004      	str	r4, [r0, #0]
 800a716:	6042      	str	r2, [r0, #4]
}
 800a718:	bd10      	pop	{r4, pc}
 800a71a:	bf00      	nop
 800a71c:	08030f48 	.word	0x08030f48

0800a720 <_ZN19Calibration_PadView14tearDownScreenEv>:
}

void Calibration_PadView::tearDownScreen()
{
    Calibration_PadViewBase::tearDownScreen();
}
 800a720:	4770      	bx	lr

0800a722 <_ZN19Calibration_PadView15setTimeoutValueEi>:

void Calibration_PadView::setTimeoutValue(int value)
{

}
 800a722:	4770      	bx	lr

0800a724 <_ZN19Calibration_PadViewD1Ev>:

class Calibration_PadView : public Calibration_PadViewBase
{
public:
    Calibration_PadView();
    virtual ~Calibration_PadView() {}
 800a724:	b510      	push	{r4, lr}
 800a726:	4b03      	ldr	r3, [pc, #12]	; (800a734 <_ZN19Calibration_PadViewD1Ev+0x10>)
 800a728:	6003      	str	r3, [r0, #0]
 800a72a:	4604      	mov	r4, r0
 800a72c:	f7f8 ff4c 	bl	80035c8 <_ZN23Calibration_PadViewBaseD1Ev>
 800a730:	4620      	mov	r0, r4
 800a732:	bd10      	pop	{r4, pc}
 800a734:	08030f80 	.word	0x08030f80

0800a738 <_ZN19Calibration_PadViewD0Ev>:
 800a738:	b510      	push	{r4, lr}
 800a73a:	4604      	mov	r4, r0
 800a73c:	f7ff fff2 	bl	800a724 <_ZN19Calibration_PadViewD1Ev>
 800a740:	4620      	mov	r0, r4
 800a742:	f641 5104 	movw	r1, #7428	; 0x1d04
 800a746:	f022 fa1c 	bl	802cb82 <_ZdlPvj>
 800a74a:	4620      	mov	r0, r4
 800a74c:	bd10      	pop	{r4, pc}
	...

0800a750 <_ZN19Calibration_PadViewC1Ev>:
Calibration_PadView::Calibration_PadView()
 800a750:	b510      	push	{r4, lr}
 800a752:	4604      	mov	r4, r0
 800a754:	f7f9 fae0 	bl	8003d18 <_ZN23Calibration_PadViewBaseC1Ev>
 800a758:	4b01      	ldr	r3, [pc, #4]	; (800a760 <_ZN19Calibration_PadViewC1Ev+0x10>)
 800a75a:	6023      	str	r3, [r4, #0]
}
 800a75c:	4620      	mov	r0, r4
 800a75e:	bd10      	pop	{r4, pc}
 800a760:	08030f80 	.word	0x08030f80

0800a764 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv>:

void Calibration_PadView::Load_FLASH_Values()
{
 800a764:	b570      	push	{r4, r5, r6, lr}
 800a766:	4604      	mov	r4, r0
 800a768:	b0ca      	sub	sp, #296	; 0x128
 800a76a:	f100 06e0 	add.w	r6, r0, #224	; 0xe0
 800a76e:	4631      	mov	r1, r6
 800a770:	a80d      	add	r0, sp, #52	; 0x34
 800a772:	f7f9 f841 	bl	80037f8 <_ZN8touchgfx8DrawableC1ERKS0_>
 800a776:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800a77a:	9317      	str	r3, [sp, #92]	; 0x5c
 800a77c:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 800a780:	9318      	str	r3, [sp, #96]	; 0x60
 800a782:	f8d4 3110 	ldr.w	r3, [r4, #272]	; 0x110
 800a786:	4a57      	ldr	r2, [pc, #348]	; (800a8e4 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x180>)
 800a788:	9319      	str	r3, [sp, #100]	; 0x64
 800a78a:	f504 718c 	add.w	r1, r4, #280	; 0x118
 800a78e:	f8d4 3114 	ldr.w	r3, [r4, #276]	; 0x114
 800a792:	920d      	str	r2, [sp, #52]	; 0x34
 800a794:	a81b      	add	r0, sp, #108	; 0x6c
 800a796:	931a      	str	r3, [sp, #104]	; 0x68
 800a798:	f7f9 f82e 	bl	80037f8 <_ZN8touchgfx8DrawableC1ERKS0_>
 800a79c:	f8d4 3140 	ldr.w	r3, [r4, #320]	; 0x140
 800a7a0:	9325      	str	r3, [sp, #148]	; 0x94
 800a7a2:	4b51      	ldr	r3, [pc, #324]	; (800a8e8 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x184>)
 800a7a4:	931b      	str	r3, [sp, #108]	; 0x6c
 800a7a6:	f894 3144 	ldrb.w	r3, [r4, #324]	; 0x144
 800a7aa:	f88d 3098 	strb.w	r3, [sp, #152]	; 0x98
 800a7ae:	f504 71a4 	add.w	r1, r4, #328	; 0x148
 800a7b2:	f8b4 3146 	ldrh.w	r3, [r4, #326]	; 0x146
 800a7b6:	f8ad 309a 	strh.w	r3, [sp, #154]	; 0x9a
 800a7ba:	a827      	add	r0, sp, #156	; 0x9c
 800a7bc:	f7f9 f81c 	bl	80037f8 <_ZN8touchgfx8DrawableC1ERKS0_>
 800a7c0:	f8d4 3170 	ldr.w	r3, [r4, #368]	; 0x170
 800a7c4:	9331      	str	r3, [sp, #196]	; 0xc4
 800a7c6:	f504 71ba 	add.w	r1, r4, #372	; 0x174
    class PageIndicator : public Container
 800a7ca:	4b48      	ldr	r3, [pc, #288]	; (800a8ec <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x188>)
 800a7cc:	9327      	str	r3, [sp, #156]	; 0x9c
 800a7ce:	a832      	add	r0, sp, #200	; 0xc8
 800a7d0:	f7f9 f812 	bl	80037f8 <_ZN8touchgfx8DrawableC1ERKS0_>
class Image : public Widget
 800a7d4:	f8b4 319a 	ldrh.w	r3, [r4, #410]	; 0x19a
 800a7d8:	f8ad 30ee 	strh.w	r3, [sp, #238]	; 0xee
 800a7dc:	f894 319c 	ldrb.w	r3, [r4, #412]	; 0x19c
 800a7e0:	f88d 30f0 	strb.w	r3, [sp, #240]	; 0xf0
 800a7e4:	4b42      	ldr	r3, [pc, #264]	; (800a8f0 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x18c>)
 800a7e6:	9332      	str	r3, [sp, #200]	; 0xc8
 800a7e8:	f8b4 319e 	ldrh.w	r3, [r4, #414]	; 0x19e
 800a7ec:	f8ad 30f2 	strh.w	r3, [sp, #242]	; 0xf2
 800a7f0:	f504 71d2 	add.w	r1, r4, #420	; 0x1a4
 800a7f4:	f8b4 31a0 	ldrh.w	r3, [r4, #416]	; 0x1a0
 800a7f8:	f8ad 30f4 	strh.w	r3, [sp, #244]	; 0xf4
 800a7fc:	a83e      	add	r0, sp, #248	; 0xf8
 800a7fe:	f7f8 fffb 	bl	80037f8 <_ZN8touchgfx8DrawableC1ERKS0_>
 800a802:	4b3c      	ldr	r3, [pc, #240]	; (800a8f4 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x190>)
 800a804:	933e      	str	r3, [sp, #248]	; 0xf8
 800a806:	f8b4 31ca 	ldrh.w	r3, [r4, #458]	; 0x1ca
	//Load the 6 Calibration Values from the Flash
	Flash_Read_Data(0x081E0000, Rx_Data, 12);

	// Write current Data stored in the Flash to the GUI
	//Left Pad
	Unicode::snprintf(textAreaCal_LP1Buffer, TEXTAREACAL_LP1_SIZE, "%d", Rx_Data[0]);
 800a80a:	4d3b      	ldr	r5, [pc, #236]	; (800a8f8 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x194>)
 800a80c:	f8ad 311e 	strh.w	r3, [sp, #286]	; 0x11e
 800a810:	f894 31cc 	ldrb.w	r3, [r4, #460]	; 0x1cc
 800a814:	f88d 3120 	strb.w	r3, [sp, #288]	; 0x120
	Flash_Read_Data(0x081E0000, Rx_Data, 12);
 800a818:	a901      	add	r1, sp, #4
 800a81a:	f8b4 31d0 	ldrh.w	r3, [r4, #464]	; 0x1d0
 800a81e:	4837      	ldr	r0, [pc, #220]	; (800a8fc <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x198>)
 800a820:	f8ad 3124 	strh.w	r3, [sp, #292]	; 0x124
 800a824:	220c      	movs	r2, #12
 800a826:	f7f6 fb49 	bl	8000ebc <Flash_Read_Data>
	Unicode::snprintf(textAreaCal_LP1Buffer, TEXTAREACAL_LP1_SIZE, "%d", Rx_Data[0]);
 800a82a:	9b01      	ldr	r3, [sp, #4]
 800a82c:	462a      	mov	r2, r5
 800a82e:	210a      	movs	r1, #10
 800a830:	f604 601c 	addw	r0, r4, #3612	; 0xe1c
 800a834:	f011 fa6a 	bl	801bd0c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_LP2Buffer, TEXTAREACAL_LP2_SIZE, "%d", Rx_Data[1]);
 800a838:	9b02      	ldr	r3, [sp, #8]
 800a83a:	462a      	mov	r2, r5
 800a83c:	210a      	movs	r1, #10
 800a83e:	f604 6008 	addw	r0, r4, #3592	; 0xe08
 800a842:	f011 fa63 	bl	801bd0c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_LP3Buffer, TEXTAREACAL_LP3_SIZE, "%d", Rx_Data[2]);
 800a846:	9b03      	ldr	r3, [sp, #12]
 800a848:	462a      	mov	r2, r5
 800a84a:	210a      	movs	r1, #10
 800a84c:	f604 50f4 	addw	r0, r4, #3572	; 0xdf4
 800a850:	f011 fa5c 	bl	801bd0c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	//Right Pad
	Unicode::snprintf(textAreaCal_RP1Buffer, TEXTAREACAL_RP1_SIZE, "%d", Rx_Data[3]);
 800a854:	9b04      	ldr	r3, [sp, #16]
 800a856:	462a      	mov	r2, r5
 800a858:	210a      	movs	r1, #10
 800a85a:	f604 6058 	addw	r0, r4, #3672	; 0xe58
 800a85e:	f011 fa55 	bl	801bd0c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_RP2Buffer, TEXTAREACAL_RP2_SIZE, "%d", Rx_Data[4]);
 800a862:	9b05      	ldr	r3, [sp, #20]
 800a864:	462a      	mov	r2, r5
 800a866:	210a      	movs	r1, #10
 800a868:	f604 6044 	addw	r0, r4, #3652	; 0xe44
 800a86c:	f011 fa4e 	bl	801bd0c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_RP3Buffer, TEXTAREACAL_RP3_SIZE, "%d", Rx_Data[5]);
 800a870:	9b06      	ldr	r3, [sp, #24]
 800a872:	462a      	mov	r2, r5
 800a874:	210a      	movs	r1, #10
 800a876:	f504 6063 	add.w	r0, r4, #3632	; 0xe30
 800a87a:	f011 fa47 	bl	801bd0c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>

	//Left Pad
	Unicode::snprintf(textAreaCal_LH1Buffer, TEXTAREACAL_LH1_SIZE, "%d", Rx_Data[6]);
 800a87e:	9b07      	ldr	r3, [sp, #28]
 800a880:	462a      	mov	r2, r5
 800a882:	210a      	movs	r1, #10
 800a884:	f604 6094 	addw	r0, r4, #3732	; 0xe94
 800a888:	f011 fa40 	bl	801bd0c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_LH2Buffer, TEXTAREACAL_LH2_SIZE, "%d", Rx_Data[7]);
 800a88c:	9b08      	ldr	r3, [sp, #32]
 800a88e:	462a      	mov	r2, r5
 800a890:	210a      	movs	r1, #10
 800a892:	f504 6068 	add.w	r0, r4, #3712	; 0xe80
 800a896:	f011 fa39 	bl	801bd0c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_LH3Buffer, TEXTAREACAL_LH3_SIZE, "%d", Rx_Data[8]);
 800a89a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800a89c:	462a      	mov	r2, r5
 800a89e:	210a      	movs	r1, #10
 800a8a0:	f604 606c 	addw	r0, r4, #3692	; 0xe6c
 800a8a4:	f011 fa32 	bl	801bd0c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	//Right Pad
	Unicode::snprintf(textAreaCal_RH1Buffer, TEXTAREACAL_RH1_SIZE, "%d", Rx_Data[9]);
 800a8a8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800a8aa:	462a      	mov	r2, r5
 800a8ac:	210a      	movs	r1, #10
 800a8ae:	f504 606d 	add.w	r0, r4, #3792	; 0xed0
 800a8b2:	f011 fa2b 	bl	801bd0c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_RH2Buffer, TEXTAREACAL_RH2_SIZE, "%d", Rx_Data[10]);
 800a8b6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800a8b8:	462a      	mov	r2, r5
 800a8ba:	210a      	movs	r1, #10
 800a8bc:	f604 60bc 	addw	r0, r4, #3772	; 0xebc
 800a8c0:	f011 fa24 	bl	801bd0c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_RH3Buffer, TEXTAREACAL_RH3_SIZE, "%d", Rx_Data[11]);
 800a8c4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800a8c6:	462a      	mov	r2, r5
 800a8c8:	210a      	movs	r1, #10
 800a8ca:	f604 60a8 	addw	r0, r4, #3752	; 0xea8
 800a8ce:	f011 fa1d 	bl	801bd0c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	swipeContainer1.invalidate();
 800a8d2:	4630      	mov	r0, r6
 800a8d4:	f00f f954 	bl	8019b80 <_ZNK8touchgfx8Drawable10invalidateEv>

#endif
}
 800a8d8:	a80d      	add	r0, sp, #52	; 0x34
 800a8da:	f008 fa1f 	bl	8012d1c <_ZN8touchgfx14SwipeContainerD1Ev>
 800a8de:	b04a      	add	sp, #296	; 0x128
 800a8e0:	bd70      	pop	{r4, r5, r6, pc}
 800a8e2:	bf00      	nop
 800a8e4:	08031600 	.word	0x08031600
 800a8e8:	080316c4 	.word	0x080316c4
 800a8ec:	0802f514 	.word	0x0802f514
 800a8f0:	08031ac0 	.word	0x08031ac0
 800a8f4:	08031ca4 	.word	0x08031ca4
 800a8f8:	0802f456 	.word	0x0802f456
 800a8fc:	081e0000 	.word	0x081e0000

0800a900 <_ZN19Calibration_PadView11setupScreenEv>:
    Calibration_PadViewBase::setupScreen();
 800a900:	f7f8 be22 	b.w	8003548 <_ZN23Calibration_PadViewBase11setupScreenEv>

0800a904 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 800a904:	4770      	bx	lr

0800a906 <_ZN19FrontendApplicationD0Ev>:
 800a906:	b510      	push	{r4, lr}
 800a908:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 800a90c:	4604      	mov	r4, r0
 800a90e:	f022 f938 	bl	802cb82 <_ZdlPvj>
 800a912:	4620      	mov	r0, r4
 800a914:	bd10      	pop	{r4, pc}

0800a916 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 800a916:	b510      	push	{r4, lr}
 800a918:	4604      	mov	r4, r0
    {
        model.tick();
 800a91a:	f8d0 0158 	ldr.w	r0, [r0, #344]	; 0x158
 800a91e:	f000 fae3 	bl	800aee8 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 800a922:	4620      	mov	r0, r4
    }
 800a924:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 800a928:	f00e b906 	b.w	8018b38 <_ZN8touchgfx11Application15handleTickEventEv>

0800a92c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 800a92c:	b510      	push	{r4, lr}
 800a92e:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 800a930:	f7fa fde6 	bl	8005500 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 800a934:	4b01      	ldr	r3, [pc, #4]	; (800a93c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 800a936:	6023      	str	r3, [r4, #0]
{

}
 800a938:	4620      	mov	r0, r4
 800a93a:	bd10      	pop	{r4, pc}
 800a93c:	08030fc0 	.word	0x08030fc0

0800a940 <_ZN18Main_MenuPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Main_MenuPresenter() {}
 800a940:	4770      	bx	lr

0800a942 <_ZThn4_N18Main_MenuPresenterD1Ev>:
 800a942:	3804      	subs	r0, #4
 800a944:	4770      	bx	lr

0800a946 <_ZN18Main_MenuPresenter10deactivateEv>:
}

void Main_MenuPresenter::activate()
{

}
 800a946:	4770      	bx	lr

0800a948 <_ZN18Main_MenuPresenter15setTimeoutValueEi>:

}

void Main_MenuPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 800a948:	68c0      	ldr	r0, [r0, #12]
 800a94a:	6803      	ldr	r3, [r0, #0]
 800a94c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a94e:	4718      	bx	r3

0800a950 <_ZThn4_N18Main_MenuPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 800a950:	f1a0 0004 	sub.w	r0, r0, #4
 800a954:	f7ff bff8 	b.w	800a948 <_ZN18Main_MenuPresenter15setTimeoutValueEi>

0800a958 <_ZN18Main_MenuPresenterD0Ev>:
    virtual ~Main_MenuPresenter() {}
 800a958:	b510      	push	{r4, lr}
 800a95a:	2110      	movs	r1, #16
 800a95c:	4604      	mov	r4, r0
 800a95e:	f022 f910 	bl	802cb82 <_ZdlPvj>
 800a962:	4620      	mov	r0, r4
 800a964:	bd10      	pop	{r4, pc}

0800a966 <_ZThn4_N18Main_MenuPresenterD0Ev>:
 800a966:	f1a0 0004 	sub.w	r0, r0, #4
 800a96a:	e7f5      	b.n	800a958 <_ZN18Main_MenuPresenterD0Ev>

0800a96c <_ZN18Main_MenuPresenterC1ER13Main_MenuView>:
Main_MenuPresenter::Main_MenuPresenter(Main_MenuView& v)
 800a96c:	b510      	push	{r4, lr}
 800a96e:	2200      	movs	r2, #0
 800a970:	6082      	str	r2, [r0, #8]
    : view(v)
 800a972:	4a04      	ldr	r2, [pc, #16]	; (800a984 <_ZN18Main_MenuPresenterC1ER13Main_MenuView+0x18>)
 800a974:	60c1      	str	r1, [r0, #12]
 800a976:	f102 0408 	add.w	r4, r2, #8
 800a97a:	3224      	adds	r2, #36	; 0x24
 800a97c:	6004      	str	r4, [r0, #0]
 800a97e:	6042      	str	r2, [r0, #4]
}
 800a980:	bd10      	pop	{r4, pc}
 800a982:	bf00      	nop
 800a984:	0803100c 	.word	0x0803100c

0800a988 <_ZN13Main_MenuView14tearDownScreenEv>:
}

void Main_MenuView::tearDownScreen()
{
    Main_MenuViewBase::tearDownScreen();
}
 800a988:	4770      	bx	lr
	...

0800a98c <_ZN13Main_MenuViewD1Ev>:

class Main_MenuView : public Main_MenuViewBase
{
public:
    Main_MenuView();
    virtual ~Main_MenuView() {}
 800a98c:	b510      	push	{r4, lr}
 800a98e:	4b03      	ldr	r3, [pc, #12]	; (800a99c <_ZN13Main_MenuViewD1Ev+0x10>)
 800a990:	6003      	str	r3, [r0, #0]
 800a992:	4604      	mov	r4, r0
 800a994:	f7fb ff2e 	bl	80067f4 <_ZN17Main_MenuViewBaseD1Ev>
 800a998:	4620      	mov	r0, r4
 800a99a:	bd10      	pop	{r4, pc}
 800a99c:	08031044 	.word	0x08031044

0800a9a0 <_ZN13Main_MenuViewD0Ev>:
 800a9a0:	b510      	push	{r4, lr}
 800a9a2:	4604      	mov	r4, r0
 800a9a4:	f7ff fff2 	bl	800a98c <_ZN13Main_MenuViewD1Ev>
 800a9a8:	4620      	mov	r0, r4
 800a9aa:	f44f 5190 	mov.w	r1, #4608	; 0x1200
 800a9ae:	f022 f8e8 	bl	802cb82 <_ZdlPvj>
 800a9b2:	4620      	mov	r0, r4
 800a9b4:	bd10      	pop	{r4, pc}
	...

0800a9b8 <_ZN13Main_MenuViewC1Ev>:
Main_MenuView::Main_MenuView()
 800a9b8:	b510      	push	{r4, lr}
 800a9ba:	4604      	mov	r4, r0
 800a9bc:	f7fb ff64 	bl	8006888 <_ZN17Main_MenuViewBaseC1Ev>
 800a9c0:	4b01      	ldr	r3, [pc, #4]	; (800a9c8 <_ZN13Main_MenuViewC1Ev+0x10>)
 800a9c2:	6023      	str	r3, [r4, #0]
}
 800a9c4:	4620      	mov	r0, r4
 800a9c6:	bd10      	pop	{r4, pc}
 800a9c8:	08031044 	.word	0x08031044

0800a9cc <_ZN13Main_MenuView11setupScreenEv>:
    Main_MenuViewBase::setupScreen();
 800a9cc:	f7fb beee 	b.w	80067ac <_ZN17Main_MenuViewBase11setupScreenEv>

0800a9d0 <_ZN13Main_MenuView15setTimeoutValueEi>:

void Main_MenuView::setTimeoutValue(int value)
{
 800a9d0:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%d", value);
 800a9d2:	4a0a      	ldr	r2, [pc, #40]	; (800a9fc <_ZN13Main_MenuView15setTimeoutValueEi+0x2c>)
{
 800a9d4:	4605      	mov	r5, r0
 800a9d6:	460c      	mov	r4, r1
	Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%d", value);
 800a9d8:	460b      	mov	r3, r1
 800a9da:	f500 7076 	add.w	r0, r0, #984	; 0x3d8
 800a9de:	2104      	movs	r1, #4
 800a9e0:	f011 f994 	bl	801bd0c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea_auto_off.invalidate();
 800a9e4:	f105 0098 	add.w	r0, r5, #152	; 0x98
 800a9e8:	f00f f8ca 	bl	8019b80 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 800a9ec:	b92c      	cbnz	r4, 800a9fa <_ZN13Main_MenuView15setTimeoutValueEi+0x2a>
 800a9ee:	f00d ffdf 	bl	80189b0 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 800a9f2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 800a9f6:	f7fa be83 	b.w	8005700 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 800a9fa:	bd38      	pop	{r3, r4, r5, pc}
 800a9fc:	0802f456 	.word	0x0802f456

0800aa00 <_ZN20MeasurementPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~MeasurementPresenter() {}
 800aa00:	4770      	bx	lr

0800aa02 <_ZThn4_N20MeasurementPresenterD1Ev>:
 800aa02:	3804      	subs	r0, #4
 800aa04:	4770      	bx	lr

0800aa06 <_ZN20MeasurementPresenter10deactivateEv>:
}

void MeasurementPresenter::activate()
{

}
 800aa06:	4770      	bx	lr

0800aa08 <_ZN20MeasurementPresenter15setTimeoutValueEi>:

}

void MeasurementPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 800aa08:	68c0      	ldr	r0, [r0, #12]
 800aa0a:	6803      	ldr	r3, [r0, #0]
 800aa0c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800aa0e:	4718      	bx	r3

0800aa10 <_ZThn4_N20MeasurementPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 800aa10:	f1a0 0004 	sub.w	r0, r0, #4
 800aa14:	f7ff bff8 	b.w	800aa08 <_ZN20MeasurementPresenter15setTimeoutValueEi>

0800aa18 <_ZN20MeasurementPresenterD0Ev>:
    virtual ~MeasurementPresenter() {}
 800aa18:	b510      	push	{r4, lr}
 800aa1a:	2110      	movs	r1, #16
 800aa1c:	4604      	mov	r4, r0
 800aa1e:	f022 f8b0 	bl	802cb82 <_ZdlPvj>
 800aa22:	4620      	mov	r0, r4
 800aa24:	bd10      	pop	{r4, pc}

0800aa26 <_ZThn4_N20MeasurementPresenterD0Ev>:
 800aa26:	f1a0 0004 	sub.w	r0, r0, #4
 800aa2a:	e7f5      	b.n	800aa18 <_ZN20MeasurementPresenterD0Ev>

0800aa2c <_ZN20MeasurementPresenterC1ER15MeasurementView>:
MeasurementPresenter::MeasurementPresenter(MeasurementView& v)
 800aa2c:	b510      	push	{r4, lr}
 800aa2e:	2200      	movs	r2, #0
 800aa30:	6082      	str	r2, [r0, #8]
    : view(v)
 800aa32:	4a04      	ldr	r2, [pc, #16]	; (800aa44 <_ZN20MeasurementPresenterC1ER15MeasurementView+0x18>)
 800aa34:	60c1      	str	r1, [r0, #12]
 800aa36:	f102 0408 	add.w	r4, r2, #8
 800aa3a:	3224      	adds	r2, #36	; 0x24
 800aa3c:	6004      	str	r4, [r0, #0]
 800aa3e:	6042      	str	r2, [r0, #4]
}
 800aa40:	bd10      	pop	{r4, pc}
 800aa42:	bf00      	nop
 800aa44:	08031074 	.word	0x08031074

0800aa48 <_ZN15MeasurementView14tearDownScreenEv>:
}

void MeasurementView::tearDownScreen()
{
    MeasurementViewBase::tearDownScreen();
}
 800aa48:	4770      	bx	lr
	...

0800aa4c <_ZN15MeasurementViewD1Ev>:

class MeasurementView : public MeasurementViewBase
{
public:
    MeasurementView();
    virtual ~MeasurementView() {}
 800aa4c:	b510      	push	{r4, lr}
 800aa4e:	4b03      	ldr	r3, [pc, #12]	; (800aa5c <_ZN15MeasurementViewD1Ev+0x10>)
 800aa50:	6003      	str	r3, [r0, #0]
 800aa52:	4604      	mov	r4, r0
 800aa54:	f7fc f9d6 	bl	8006e04 <_ZN19MeasurementViewBaseD1Ev>
 800aa58:	4620      	mov	r0, r4
 800aa5a:	bd10      	pop	{r4, pc}
 800aa5c:	080310ac 	.word	0x080310ac

0800aa60 <_ZN15MeasurementViewD0Ev>:
 800aa60:	b510      	push	{r4, lr}
 800aa62:	4604      	mov	r4, r0
 800aa64:	f7ff fff2 	bl	800aa4c <_ZN15MeasurementViewD1Ev>
 800aa68:	4620      	mov	r0, r4
 800aa6a:	f241 11c4 	movw	r1, #4548	; 0x11c4
 800aa6e:	f022 f888 	bl	802cb82 <_ZdlPvj>
 800aa72:	4620      	mov	r0, r4
 800aa74:	bd10      	pop	{r4, pc}
	...

0800aa78 <_ZN15MeasurementViewC1Ev>:
MeasurementView::MeasurementView()
 800aa78:	b510      	push	{r4, lr}
 800aa7a:	4604      	mov	r4, r0
 800aa7c:	f7fc f9fc 	bl	8006e78 <_ZN19MeasurementViewBaseC1Ev>
 800aa80:	4b01      	ldr	r3, [pc, #4]	; (800aa88 <_ZN15MeasurementViewC1Ev+0x10>)
 800aa82:	6023      	str	r3, [r4, #0]
}
 800aa84:	4620      	mov	r0, r4
 800aa86:	bd10      	pop	{r4, pc}
 800aa88:	080310ac 	.word	0x080310ac

0800aa8c <_ZN15MeasurementView11setupScreenEv>:
    MeasurementViewBase::setupScreen();
 800aa8c:	f7fc b996 	b.w	8006dbc <_ZN19MeasurementViewBase11setupScreenEv>

0800aa90 <_ZN15MeasurementView15setTimeoutValueEi>:

void MeasurementView::setTimeoutValue(int value)
{
 800aa90:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%d", value);
 800aa92:	4a0a      	ldr	r2, [pc, #40]	; (800aabc <_ZN15MeasurementView15setTimeoutValueEi+0x2c>)
{
 800aa94:	4605      	mov	r5, r0
 800aa96:	460c      	mov	r4, r1
	Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%d", value);
 800aa98:	460b      	mov	r3, r1
 800aa9a:	f500 7067 	add.w	r0, r0, #924	; 0x39c
 800aa9e:	2104      	movs	r1, #4
 800aaa0:	f011 f934 	bl	801bd0c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea_auto_off.invalidate();
 800aaa4:	f105 0098 	add.w	r0, r5, #152	; 0x98
 800aaa8:	f00f f86a 	bl	8019b80 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 800aaac:	b92c      	cbnz	r4, 800aaba <_ZN15MeasurementView15setTimeoutValueEi+0x2a>
 800aaae:	f00d ff7f 	bl	80189b0 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 800aab2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 800aab6:	f7fa be23 	b.w	8005700 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 800aaba:	bd38      	pop	{r3, r4, r5, pc}
 800aabc:	0802f456 	.word	0x0802f456

0800aac0 <_ZN29Measurement_AccuratePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_AccuratePresenter() {}
 800aac0:	4770      	bx	lr

0800aac2 <_ZThn4_N29Measurement_AccuratePresenterD1Ev>:
 800aac2:	3804      	subs	r0, #4
 800aac4:	4770      	bx	lr

0800aac6 <_ZN29Measurement_AccuratePresenter10deactivateEv>:
}

void Measurement_AccuratePresenter::activate()
{

}
 800aac6:	4770      	bx	lr

0800aac8 <_ZN29Measurement_AccuratePresenter15setTimeoutValueEi>:

}

void Measurement_AccuratePresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 800aac8:	68c0      	ldr	r0, [r0, #12]
 800aaca:	6803      	ldr	r3, [r0, #0]
 800aacc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800aace:	4718      	bx	r3

0800aad0 <_ZThn4_N29Measurement_AccuratePresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 800aad0:	f1a0 0004 	sub.w	r0, r0, #4
 800aad4:	f7ff bff8 	b.w	800aac8 <_ZN29Measurement_AccuratePresenter15setTimeoutValueEi>

0800aad8 <_ZN29Measurement_AccuratePresenterD0Ev>:
    virtual ~Measurement_AccuratePresenter() {}
 800aad8:	b510      	push	{r4, lr}
 800aada:	2110      	movs	r1, #16
 800aadc:	4604      	mov	r4, r0
 800aade:	f022 f850 	bl	802cb82 <_ZdlPvj>
 800aae2:	4620      	mov	r0, r4
 800aae4:	bd10      	pop	{r4, pc}

0800aae6 <_ZThn4_N29Measurement_AccuratePresenterD0Ev>:
 800aae6:	f1a0 0004 	sub.w	r0, r0, #4
 800aaea:	e7f5      	b.n	800aad8 <_ZN29Measurement_AccuratePresenterD0Ev>

0800aaec <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>:
Measurement_AccuratePresenter::Measurement_AccuratePresenter(Measurement_AccurateView& v)
 800aaec:	b510      	push	{r4, lr}
 800aaee:	2200      	movs	r2, #0
 800aaf0:	6082      	str	r2, [r0, #8]
    : view(v)
 800aaf2:	4a04      	ldr	r2, [pc, #16]	; (800ab04 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView+0x18>)
 800aaf4:	60c1      	str	r1, [r0, #12]
 800aaf6:	f102 0408 	add.w	r4, r2, #8
 800aafa:	3224      	adds	r2, #36	; 0x24
 800aafc:	6004      	str	r4, [r0, #0]
 800aafe:	6042      	str	r2, [r0, #4]
}
 800ab00:	bd10      	pop	{r4, pc}
 800ab02:	bf00      	nop
 800ab04:	080310dc 	.word	0x080310dc

0800ab08 <_ZN24Measurement_AccurateView14tearDownScreenEv>:
}

void Measurement_AccurateView::tearDownScreen()
{
    Measurement_AccurateViewBase::tearDownScreen();
}
 800ab08:	4770      	bx	lr
	...

0800ab0c <_ZN24Measurement_AccurateViewD1Ev>:

class Measurement_AccurateView : public Measurement_AccurateViewBase
{
public:
    Measurement_AccurateView();
    virtual ~Measurement_AccurateView() {}
 800ab0c:	b510      	push	{r4, lr}
 800ab0e:	4b03      	ldr	r3, [pc, #12]	; (800ab1c <_ZN24Measurement_AccurateViewD1Ev+0x10>)
 800ab10:	6003      	str	r3, [r0, #0]
 800ab12:	4604      	mov	r4, r0
 800ab14:	f7fc fc3e 	bl	8007394 <_ZN28Measurement_AccurateViewBaseD1Ev>
 800ab18:	4620      	mov	r0, r4
 800ab1a:	bd10      	pop	{r4, pc}
 800ab1c:	08031114 	.word	0x08031114

0800ab20 <_ZN24Measurement_AccurateViewD0Ev>:
 800ab20:	b510      	push	{r4, lr}
 800ab22:	4604      	mov	r4, r0
 800ab24:	f7ff fff2 	bl	800ab0c <_ZN24Measurement_AccurateViewD1Ev>
 800ab28:	4620      	mov	r0, r4
 800ab2a:	f241 11c4 	movw	r1, #4548	; 0x11c4
 800ab2e:	f022 f828 	bl	802cb82 <_ZdlPvj>
 800ab32:	4620      	mov	r0, r4
 800ab34:	bd10      	pop	{r4, pc}
	...

0800ab38 <_ZN24Measurement_AccurateViewC1Ev>:
Measurement_AccurateView::Measurement_AccurateView()
 800ab38:	b510      	push	{r4, lr}
 800ab3a:	4604      	mov	r4, r0
 800ab3c:	f7fc fc64 	bl	8007408 <_ZN28Measurement_AccurateViewBaseC1Ev>
 800ab40:	4b01      	ldr	r3, [pc, #4]	; (800ab48 <_ZN24Measurement_AccurateViewC1Ev+0x10>)
 800ab42:	6023      	str	r3, [r4, #0]
}
 800ab44:	4620      	mov	r0, r4
 800ab46:	bd10      	pop	{r4, pc}
 800ab48:	08031114 	.word	0x08031114

0800ab4c <_ZN24Measurement_AccurateView11setupScreenEv>:
    Measurement_AccurateViewBase::setupScreen();
 800ab4c:	f7fc bbfe 	b.w	800734c <_ZN28Measurement_AccurateViewBase11setupScreenEv>

0800ab50 <_ZN24Measurement_AccurateView15setTimeoutValueEi>:

void Measurement_AccurateView::setTimeoutValue(int value)
{
 800ab50:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%d", value);
 800ab52:	4a0a      	ldr	r2, [pc, #40]	; (800ab7c <_ZN24Measurement_AccurateView15setTimeoutValueEi+0x2c>)
{
 800ab54:	4605      	mov	r5, r0
 800ab56:	460c      	mov	r4, r1
	Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%d", value);
 800ab58:	460b      	mov	r3, r1
 800ab5a:	f500 7067 	add.w	r0, r0, #924	; 0x39c
 800ab5e:	2104      	movs	r1, #4
 800ab60:	f011 f8d4 	bl	801bd0c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea_auto_off.invalidate();
 800ab64:	f105 0098 	add.w	r0, r5, #152	; 0x98
 800ab68:	f00f f80a 	bl	8019b80 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 800ab6c:	b92c      	cbnz	r4, 800ab7a <_ZN24Measurement_AccurateView15setTimeoutValueEi+0x2a>
 800ab6e:	f00d ff1f 	bl	80189b0 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 800ab72:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 800ab76:	f7fa bdc3 	b.w	8005700 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 800ab7a:	bd38      	pop	{r3, r4, r5, pc}
 800ab7c:	0802f456 	.word	0x0802f456

0800ab80 <_ZN37Measurement_Accurate_DisplayPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Accurate_DisplayPresenter() {}
 800ab80:	4770      	bx	lr

0800ab82 <_ZThn4_N37Measurement_Accurate_DisplayPresenterD1Ev>:
 800ab82:	3804      	subs	r0, #4
 800ab84:	4770      	bx	lr

0800ab86 <_ZN37Measurement_Accurate_DisplayPresenter10deactivateEv>:
}

void Measurement_Accurate_DisplayPresenter::activate()
{

}
 800ab86:	4770      	bx	lr

0800ab88 <_ZN37Measurement_Accurate_DisplayPresenter15setTimeoutValueEi>:
}

void Measurement_Accurate_DisplayPresenter::setTimeoutValue(int value)
{

}
 800ab88:	4770      	bx	lr

0800ab8a <_ZN37Measurement_Accurate_DisplayPresenterD0Ev>:
 800ab8a:	b510      	push	{r4, lr}
 800ab8c:	2110      	movs	r1, #16
 800ab8e:	4604      	mov	r4, r0
 800ab90:	f021 fff7 	bl	802cb82 <_ZdlPvj>
 800ab94:	4620      	mov	r0, r4
 800ab96:	bd10      	pop	{r4, pc}

0800ab98 <_ZThn4_N37Measurement_Accurate_DisplayPresenterD0Ev>:
 800ab98:	f1a0 0004 	sub.w	r0, r0, #4
 800ab9c:	e7f5      	b.n	800ab8a <_ZN37Measurement_Accurate_DisplayPresenterD0Ev>

0800ab9e <_ZThn4_N37Measurement_Accurate_DisplayPresenter15setTimeoutValueEi>:
 800ab9e:	4770      	bx	lr

0800aba0 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView>:
Measurement_Accurate_DisplayPresenter::Measurement_Accurate_DisplayPresenter(Measurement_Accurate_DisplayView& v)
 800aba0:	b510      	push	{r4, lr}
 800aba2:	2200      	movs	r2, #0
 800aba4:	6082      	str	r2, [r0, #8]
    : view(v)
 800aba6:	4a04      	ldr	r2, [pc, #16]	; (800abb8 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView+0x18>)
 800aba8:	60c1      	str	r1, [r0, #12]
 800abaa:	f102 0408 	add.w	r4, r2, #8
 800abae:	3224      	adds	r2, #36	; 0x24
 800abb0:	6004      	str	r4, [r0, #0]
 800abb2:	6042      	str	r2, [r0, #4]
}
 800abb4:	bd10      	pop	{r4, pc}
 800abb6:	bf00      	nop
 800abb8:	08031144 	.word	0x08031144

0800abbc <_ZN32Measurement_Accurate_DisplayView14tearDownScreenEv>:
}

void Measurement_Accurate_DisplayView::tearDownScreen()
{
    Measurement_Accurate_DisplayViewBase::tearDownScreen();
}
 800abbc:	4770      	bx	lr
	...

0800abc0 <_ZN32Measurement_Accurate_DisplayViewD1Ev>:

class Measurement_Accurate_DisplayView : public Measurement_Accurate_DisplayViewBase
{
public:
    Measurement_Accurate_DisplayView();
    virtual ~Measurement_Accurate_DisplayView() {}
 800abc0:	b510      	push	{r4, lr}
 800abc2:	4b03      	ldr	r3, [pc, #12]	; (800abd0 <_ZN32Measurement_Accurate_DisplayViewD1Ev+0x10>)
 800abc4:	6003      	str	r3, [r0, #0]
 800abc6:	4604      	mov	r4, r0
 800abc8:	f7fc feac 	bl	8007924 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>
 800abcc:	4620      	mov	r0, r4
 800abce:	bd10      	pop	{r4, pc}
 800abd0:	0803117c 	.word	0x0803117c

0800abd4 <_ZN32Measurement_Accurate_DisplayViewD0Ev>:
 800abd4:	b510      	push	{r4, lr}
 800abd6:	4604      	mov	r4, r0
 800abd8:	f7ff fff2 	bl	800abc0 <_ZN32Measurement_Accurate_DisplayViewD1Ev>
 800abdc:	4620      	mov	r0, r4
 800abde:	f241 4178 	movw	r1, #5240	; 0x1478
 800abe2:	f021 ffce 	bl	802cb82 <_ZdlPvj>
 800abe6:	4620      	mov	r0, r4
 800abe8:	bd10      	pop	{r4, pc}
	...

0800abec <_ZN32Measurement_Accurate_DisplayViewC1Ev>:
Measurement_Accurate_DisplayView::Measurement_Accurate_DisplayView()
 800abec:	b510      	push	{r4, lr}
 800abee:	4604      	mov	r4, r0
 800abf0:	f7fc fec0 	bl	8007974 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev>
 800abf4:	4b01      	ldr	r3, [pc, #4]	; (800abfc <_ZN32Measurement_Accurate_DisplayViewC1Ev+0x10>)
 800abf6:	6023      	str	r3, [r4, #0]
}
 800abf8:	4620      	mov	r0, r4
 800abfa:	bd10      	pop	{r4, pc}
 800abfc:	0803117c 	.word	0x0803117c

0800ac00 <_ZN32Measurement_Accurate_DisplayView11setupScreenEv>:
    Measurement_Accurate_DisplayViewBase::setupScreen();
 800ac00:	f7fc be6c 	b.w	80078dc <_ZN36Measurement_Accurate_DisplayViewBase11setupScreenEv>

0800ac04 <_ZN39Measurement_Accurate_Display_2PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Accurate_Display_2Presenter() {}
 800ac04:	4770      	bx	lr

0800ac06 <_ZThn4_N39Measurement_Accurate_Display_2PresenterD1Ev>:
 800ac06:	3804      	subs	r0, #4
 800ac08:	4770      	bx	lr

0800ac0a <_ZN39Measurement_Accurate_Display_2Presenter10deactivateEv>:
}

void Measurement_Accurate_Display_2Presenter::activate()
{

}
 800ac0a:	4770      	bx	lr

0800ac0c <_ZN39Measurement_Accurate_Display_2Presenter15setTimeoutValueEi>:
}

void Measurement_Accurate_Display_2Presenter::setTimeoutValue(int value)
{

}
 800ac0c:	4770      	bx	lr

0800ac0e <_ZN39Measurement_Accurate_Display_2PresenterD0Ev>:
 800ac0e:	b510      	push	{r4, lr}
 800ac10:	2110      	movs	r1, #16
 800ac12:	4604      	mov	r4, r0
 800ac14:	f021 ffb5 	bl	802cb82 <_ZdlPvj>
 800ac18:	4620      	mov	r0, r4
 800ac1a:	bd10      	pop	{r4, pc}

0800ac1c <_ZThn4_N39Measurement_Accurate_Display_2PresenterD0Ev>:
 800ac1c:	f1a0 0004 	sub.w	r0, r0, #4
 800ac20:	e7f5      	b.n	800ac0e <_ZN39Measurement_Accurate_Display_2PresenterD0Ev>

0800ac22 <_ZThn4_N39Measurement_Accurate_Display_2Presenter15setTimeoutValueEi>:
 800ac22:	4770      	bx	lr

0800ac24 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View>:
Measurement_Accurate_Display_2Presenter::Measurement_Accurate_Display_2Presenter(Measurement_Accurate_Display_2View& v)
 800ac24:	b510      	push	{r4, lr}
 800ac26:	2200      	movs	r2, #0
 800ac28:	6082      	str	r2, [r0, #8]
    : view(v)
 800ac2a:	4a04      	ldr	r2, [pc, #16]	; (800ac3c <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View+0x18>)
 800ac2c:	60c1      	str	r1, [r0, #12]
 800ac2e:	f102 0408 	add.w	r4, r2, #8
 800ac32:	3224      	adds	r2, #36	; 0x24
 800ac34:	6004      	str	r4, [r0, #0]
 800ac36:	6042      	str	r2, [r0, #4]
}
 800ac38:	bd10      	pop	{r4, pc}
 800ac3a:	bf00      	nop
 800ac3c:	080311a8 	.word	0x080311a8

0800ac40 <_ZN34Measurement_Accurate_Display_2View14tearDownScreenEv>:
}

void Measurement_Accurate_Display_2View::tearDownScreen()
{
    Measurement_Accurate_Display_2ViewBase::tearDownScreen();
}
 800ac40:	4770      	bx	lr
	...

0800ac44 <_ZN34Measurement_Accurate_Display_2ViewD1Ev>:

class Measurement_Accurate_Display_2View : public Measurement_Accurate_Display_2ViewBase
{
public:
    Measurement_Accurate_Display_2View();
    virtual ~Measurement_Accurate_Display_2View() {}
 800ac44:	b510      	push	{r4, lr}
 800ac46:	4b03      	ldr	r3, [pc, #12]	; (800ac54 <_ZN34Measurement_Accurate_Display_2ViewD1Ev+0x10>)
 800ac48:	6003      	str	r3, [r0, #0]
 800ac4a:	4604      	mov	r4, r0
 800ac4c:	f7fd fa42 	bl	80080d4 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>
 800ac50:	4620      	mov	r0, r4
 800ac52:	bd10      	pop	{r4, pc}
 800ac54:	080311e0 	.word	0x080311e0

0800ac58 <_ZN34Measurement_Accurate_Display_2ViewD0Ev>:
 800ac58:	b510      	push	{r4, lr}
 800ac5a:	4604      	mov	r4, r0
 800ac5c:	f7ff fff2 	bl	800ac44 <_ZN34Measurement_Accurate_Display_2ViewD1Ev>
 800ac60:	4620      	mov	r0, r4
 800ac62:	f241 4178 	movw	r1, #5240	; 0x1478
 800ac66:	f021 ff8c 	bl	802cb82 <_ZdlPvj>
 800ac6a:	4620      	mov	r0, r4
 800ac6c:	bd10      	pop	{r4, pc}
	...

0800ac70 <_ZN34Measurement_Accurate_Display_2ViewC1Ev>:
Measurement_Accurate_Display_2View::Measurement_Accurate_Display_2View()
 800ac70:	b510      	push	{r4, lr}
 800ac72:	4604      	mov	r4, r0
 800ac74:	f7fd fa56 	bl	8008124 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev>
 800ac78:	4b01      	ldr	r3, [pc, #4]	; (800ac80 <_ZN34Measurement_Accurate_Display_2ViewC1Ev+0x10>)
 800ac7a:	6023      	str	r3, [r4, #0]
}
 800ac7c:	4620      	mov	r0, r4
 800ac7e:	bd10      	pop	{r4, pc}
 800ac80:	080311e0 	.word	0x080311e0

0800ac84 <_ZN34Measurement_Accurate_Display_2View11setupScreenEv>:
    Measurement_Accurate_Display_2ViewBase::setupScreen();
 800ac84:	f7fd ba02 	b.w	800808c <_ZN38Measurement_Accurate_Display_2ViewBase11setupScreenEv>

0800ac88 <_ZN27Measurement_SinglePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_SinglePresenter() {}
 800ac88:	4770      	bx	lr

0800ac8a <_ZThn4_N27Measurement_SinglePresenterD1Ev>:
 800ac8a:	3804      	subs	r0, #4
 800ac8c:	4770      	bx	lr

0800ac8e <_ZN27Measurement_SinglePresenter10deactivateEv>:
}

void Measurement_SinglePresenter::activate()
{

}
 800ac8e:	4770      	bx	lr

0800ac90 <_ZN27Measurement_SinglePresenter15setTimeoutValueEi>:

}

void Measurement_SinglePresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 800ac90:	68c0      	ldr	r0, [r0, #12]
 800ac92:	6803      	ldr	r3, [r0, #0]
 800ac94:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ac96:	4718      	bx	r3

0800ac98 <_ZThn4_N27Measurement_SinglePresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 800ac98:	f1a0 0004 	sub.w	r0, r0, #4
 800ac9c:	f7ff bff8 	b.w	800ac90 <_ZN27Measurement_SinglePresenter15setTimeoutValueEi>

0800aca0 <_ZN27Measurement_SinglePresenterD0Ev>:
    virtual ~Measurement_SinglePresenter() {}
 800aca0:	b510      	push	{r4, lr}
 800aca2:	2110      	movs	r1, #16
 800aca4:	4604      	mov	r4, r0
 800aca6:	f021 ff6c 	bl	802cb82 <_ZdlPvj>
 800acaa:	4620      	mov	r0, r4
 800acac:	bd10      	pop	{r4, pc}

0800acae <_ZThn4_N27Measurement_SinglePresenterD0Ev>:
 800acae:	f1a0 0004 	sub.w	r0, r0, #4
 800acb2:	e7f5      	b.n	800aca0 <_ZN27Measurement_SinglePresenterD0Ev>

0800acb4 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView>:
Measurement_SinglePresenter::Measurement_SinglePresenter(Measurement_SingleView& v)
 800acb4:	b510      	push	{r4, lr}
 800acb6:	2200      	movs	r2, #0
 800acb8:	6082      	str	r2, [r0, #8]
    : view(v)
 800acba:	4a04      	ldr	r2, [pc, #16]	; (800accc <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView+0x18>)
 800acbc:	60c1      	str	r1, [r0, #12]
 800acbe:	f102 0408 	add.w	r4, r2, #8
 800acc2:	3224      	adds	r2, #36	; 0x24
 800acc4:	6004      	str	r4, [r0, #0]
 800acc6:	6042      	str	r2, [r0, #4]
}
 800acc8:	bd10      	pop	{r4, pc}
 800acca:	bf00      	nop
 800accc:	0803120c 	.word	0x0803120c

0800acd0 <_ZN22Measurement_SingleView14tearDownScreenEv>:
}

void Measurement_SingleView::tearDownScreen()
{
    Measurement_SingleViewBase::tearDownScreen();
}
 800acd0:	4770      	bx	lr
	...

0800acd4 <_ZN22Measurement_SingleViewD1Ev>:

class Measurement_SingleView : public Measurement_SingleViewBase
{
public:
    Measurement_SingleView();
    virtual ~Measurement_SingleView() {}
 800acd4:	b510      	push	{r4, lr}
 800acd6:	4b03      	ldr	r3, [pc, #12]	; (800ace4 <_ZN22Measurement_SingleViewD1Ev+0x10>)
 800acd8:	6003      	str	r3, [r0, #0]
 800acda:	4604      	mov	r4, r0
 800acdc:	f7fd fdd0 	bl	8008880 <_ZN26Measurement_SingleViewBaseD1Ev>
 800ace0:	4620      	mov	r0, r4
 800ace2:	bd10      	pop	{r4, pc}
 800ace4:	08031244 	.word	0x08031244

0800ace8 <_ZN22Measurement_SingleViewD0Ev>:
 800ace8:	b510      	push	{r4, lr}
 800acea:	4604      	mov	r4, r0
 800acec:	f7ff fff2 	bl	800acd4 <_ZN22Measurement_SingleViewD1Ev>
 800acf0:	4620      	mov	r0, r4
 800acf2:	f241 11c4 	movw	r1, #4548	; 0x11c4
 800acf6:	f021 ff44 	bl	802cb82 <_ZdlPvj>
 800acfa:	4620      	mov	r0, r4
 800acfc:	bd10      	pop	{r4, pc}
	...

0800ad00 <_ZN22Measurement_SingleViewC1Ev>:
Measurement_SingleView::Measurement_SingleView()
 800ad00:	b510      	push	{r4, lr}
 800ad02:	4604      	mov	r4, r0
 800ad04:	f7fd fdf6 	bl	80088f4 <_ZN26Measurement_SingleViewBaseC1Ev>
 800ad08:	4b01      	ldr	r3, [pc, #4]	; (800ad10 <_ZN22Measurement_SingleViewC1Ev+0x10>)
 800ad0a:	6023      	str	r3, [r4, #0]
}
 800ad0c:	4620      	mov	r0, r4
 800ad0e:	bd10      	pop	{r4, pc}
 800ad10:	08031244 	.word	0x08031244

0800ad14 <_ZN22Measurement_SingleView11setupScreenEv>:
    Measurement_SingleViewBase::setupScreen();
 800ad14:	f7fd bd90 	b.w	8008838 <_ZN26Measurement_SingleViewBase11setupScreenEv>

0800ad18 <_ZN22Measurement_SingleView15setTimeoutValueEi>:

void Measurement_SingleView::setTimeoutValue(int value)
{
 800ad18:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%d", value);
 800ad1a:	4a0a      	ldr	r2, [pc, #40]	; (800ad44 <_ZN22Measurement_SingleView15setTimeoutValueEi+0x2c>)
{
 800ad1c:	4605      	mov	r5, r0
 800ad1e:	460c      	mov	r4, r1
	Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%d", value);
 800ad20:	460b      	mov	r3, r1
 800ad22:	f500 7067 	add.w	r0, r0, #924	; 0x39c
 800ad26:	2104      	movs	r1, #4
 800ad28:	f010 fff0 	bl	801bd0c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea_auto_off.invalidate();
 800ad2c:	f105 0098 	add.w	r0, r5, #152	; 0x98
 800ad30:	f00e ff26 	bl	8019b80 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 800ad34:	b92c      	cbnz	r4, 800ad42 <_ZN22Measurement_SingleView15setTimeoutValueEi+0x2a>
 800ad36:	f00d fe3b 	bl	80189b0 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 800ad3a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 800ad3e:	f7fa bcdf 	b.w	8005700 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 800ad42:	bd38      	pop	{r3, r4, r5, pc}
 800ad44:	0802f456 	.word	0x0802f456

0800ad48 <_ZN38Measurement_Single_Display_1PPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Single_Display_1PPresenter() {}
 800ad48:	4770      	bx	lr

0800ad4a <_ZThn4_N38Measurement_Single_Display_1PPresenterD1Ev>:
 800ad4a:	3804      	subs	r0, #4
 800ad4c:	4770      	bx	lr

0800ad4e <_ZN38Measurement_Single_Display_1PPresenter10deactivateEv>:
}

void Measurement_Single_Display_1PPresenter::activate()
{

}
 800ad4e:	4770      	bx	lr

0800ad50 <_ZN38Measurement_Single_Display_1PPresenter15setTimeoutValueEi>:
}

void Measurement_Single_Display_1PPresenter::setTimeoutValue(int value)
{

}
 800ad50:	4770      	bx	lr

0800ad52 <_ZN38Measurement_Single_Display_1PPresenterD0Ev>:
 800ad52:	b510      	push	{r4, lr}
 800ad54:	2110      	movs	r1, #16
 800ad56:	4604      	mov	r4, r0
 800ad58:	f021 ff13 	bl	802cb82 <_ZdlPvj>
 800ad5c:	4620      	mov	r0, r4
 800ad5e:	bd10      	pop	{r4, pc}

0800ad60 <_ZThn4_N38Measurement_Single_Display_1PPresenterD0Ev>:
 800ad60:	f1a0 0004 	sub.w	r0, r0, #4
 800ad64:	e7f5      	b.n	800ad52 <_ZN38Measurement_Single_Display_1PPresenterD0Ev>

0800ad66 <_ZThn4_N38Measurement_Single_Display_1PPresenter15setTimeoutValueEi>:
 800ad66:	4770      	bx	lr

0800ad68 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>:
Measurement_Single_Display_1PPresenter::Measurement_Single_Display_1PPresenter(Measurement_Single_Display_1PView& v)
 800ad68:	b510      	push	{r4, lr}
 800ad6a:	2200      	movs	r2, #0
 800ad6c:	6082      	str	r2, [r0, #8]
    : view(v)
 800ad6e:	4a04      	ldr	r2, [pc, #16]	; (800ad80 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView+0x18>)
 800ad70:	60c1      	str	r1, [r0, #12]
 800ad72:	f102 0408 	add.w	r4, r2, #8
 800ad76:	3224      	adds	r2, #36	; 0x24
 800ad78:	6004      	str	r4, [r0, #0]
 800ad7a:	6042      	str	r2, [r0, #4]
}
 800ad7c:	bd10      	pop	{r4, pc}
 800ad7e:	bf00      	nop
 800ad80:	08031274 	.word	0x08031274

0800ad84 <_ZN33Measurement_Single_Display_1PView14tearDownScreenEv>:
}

void Measurement_Single_Display_1PView::tearDownScreen()
{
    Measurement_Single_Display_1PViewBase::tearDownScreen();
}
 800ad84:	4770      	bx	lr
	...

0800ad88 <_ZN33Measurement_Single_Display_1PViewD1Ev>:

class Measurement_Single_Display_1PView : public Measurement_Single_Display_1PViewBase
{
public:
    Measurement_Single_Display_1PView();
    virtual ~Measurement_Single_Display_1PView() {}
 800ad88:	b510      	push	{r4, lr}
 800ad8a:	4b03      	ldr	r3, [pc, #12]	; (800ad98 <_ZN33Measurement_Single_Display_1PViewD1Ev+0x10>)
 800ad8c:	6003      	str	r3, [r0, #0]
 800ad8e:	4604      	mov	r4, r0
 800ad90:	f7fe f840 	bl	8008e14 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>
 800ad94:	4620      	mov	r0, r4
 800ad96:	bd10      	pop	{r4, pc}
 800ad98:	080312b4 	.word	0x080312b4

0800ad9c <_ZN33Measurement_Single_Display_1PViewD0Ev>:
 800ad9c:	b510      	push	{r4, lr}
 800ad9e:	4604      	mov	r4, r0
 800ada0:	f7ff fff2 	bl	800ad88 <_ZN33Measurement_Single_Display_1PViewD1Ev>
 800ada4:	4620      	mov	r0, r4
 800ada6:	f241 417c 	movw	r1, #5244	; 0x147c
 800adaa:	f021 feea 	bl	802cb82 <_ZdlPvj>
 800adae:	4620      	mov	r0, r4
 800adb0:	bd10      	pop	{r4, pc}
	...

0800adb4 <_ZN33Measurement_Single_Display_1PViewC1Ev>:
Measurement_Single_Display_1PView::Measurement_Single_Display_1PView()
 800adb4:	b510      	push	{r4, lr}
 800adb6:	4604      	mov	r4, r0
 800adb8:	f7fe f864 	bl	8008e84 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev>
 800adbc:	4b01      	ldr	r3, [pc, #4]	; (800adc4 <_ZN33Measurement_Single_Display_1PViewC1Ev+0x10>)
 800adbe:	6023      	str	r3, [r4, #0]
}
 800adc0:	4620      	mov	r0, r4
 800adc2:	bd10      	pop	{r4, pc}
 800adc4:	080312b4 	.word	0x080312b4

0800adc8 <_ZN33Measurement_Single_Display_1PView11setupScreenEv>:
    Measurement_Single_Display_1PViewBase::setupScreen();
 800adc8:	f7fd bfff 	b.w	8008dca <_ZN37Measurement_Single_Display_1PViewBase11setupScreenEv>

0800adcc <_ZN33Measurement_Single_Display_1PView7testGuiEv>:

void Measurement_Single_Display_1PView::testGui()
{
 800adcc:	b510      	push	{r4, lr}
 800adce:	b088      	sub	sp, #32
 800add0:	4604      	mov	r4, r0
#ifndef SIMULATOR

	// Start measurement
	uint32_t* Samples = MEAS_start_measure();
 800add2:	f7f7 f9c9 	bl	8002168 <MEAS_start_measure>

	// calculate single measurement values
	SINGLE_MEAS single_meas = single_measurement(Samples);
 800add6:	f7f6 fafb 	bl	80013d0 <single_measurement>

	//update GUI values
	//set gauge angle
	SMD1_Gauge.setValue(single_meas.angle);
 800adda:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 800adde:	f504 7027 	add.w	r0, r4, #668	; 0x29c
 800ade2:	ee17 1a90 	vmov	r1, s15
	SINGLE_MEAS single_meas = single_measurement(Samples);
 800ade6:	ed8d 0a04 	vstr	s0, [sp, #16]
 800adea:	ed8d 1a06 	vstr	s2, [sp, #24]
	SMD1_Gauge.setValue(single_meas.angle);
 800adee:	9001      	str	r0, [sp, #4]
 800adf0:	f00a fe7c 	bl	8015aec <_ZN8touchgfx5Gauge8setValueEi>
	SMD1_Gauge.invalidate();
 800adf4:	9801      	ldr	r0, [sp, #4]
 800adf6:	f00e fec3 	bl	8019b80 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set current value
	Unicode::snprintfFloat(SMD1_CurrentBuffer, SMD1_CURRENT_SIZE, "%.2f", 420.69);
 800adfa:	4b15      	ldr	r3, [pc, #84]	; (800ae50 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0x84>)
     *
     * @see snprintf, snprintfFloats
     */
    static UnicodeChar* snprintfFloat(UnicodeChar* dst, uint16_t dstSize, const char* format, const float value)
    {
        return snprintfFloats(dst, dstSize, format, &value);
 800adfc:	4a15      	ldr	r2, [pc, #84]	; (800ae54 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0x88>)
 800adfe:	9303      	str	r3, [sp, #12]
 800ae00:	210a      	movs	r1, #10
 800ae02:	ab03      	add	r3, sp, #12
 800ae04:	f204 601c 	addw	r0, r4, #1564	; 0x61c
 800ae08:	f011 f96c 	bl	801c0e4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	SMD1_Current.invalidate();
 800ae0c:	f504 70dc 	add.w	r0, r4, #440	; 0x1b8
 800ae10:	f00e feb6 	bl	8019b80 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set frequency value
	Unicode::snprintfFloat(SMD1_FrequencyBuffer, SMD1_FREQUENCY_SIZE, "%.2f", single_meas.frequency);
 800ae14:	9b06      	ldr	r3, [sp, #24]
 800ae16:	4a0f      	ldr	r2, [pc, #60]	; (800ae54 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0x88>)
 800ae18:	9303      	str	r3, [sp, #12]
 800ae1a:	210a      	movs	r1, #10
 800ae1c:	ab03      	add	r3, sp, #12
 800ae1e:	f504 60c6 	add.w	r0, r4, #1584	; 0x630
 800ae22:	f011 f95f 	bl	801c0e4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	SMD1_Frequency.invalidate();
 800ae26:	f504 7001 	add.w	r0, r4, #516	; 0x204
 800ae2a:	f00e fea9 	bl	8019b80 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set distance value
	Unicode::snprintfFloat(SMD1_DistanceBuffer, SMD1_DISTANCE_SIZE, "%.2f", single_meas.distance);
 800ae2e:	9b04      	ldr	r3, [sp, #16]
 800ae30:	9303      	str	r3, [sp, #12]
 800ae32:	4a08      	ldr	r2, [pc, #32]	; (800ae54 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0x88>)
 800ae34:	ab03      	add	r3, sp, #12
 800ae36:	210a      	movs	r1, #10
 800ae38:	f204 6044 	addw	r0, r4, #1604	; 0x644
 800ae3c:	f011 f952 	bl	801c0e4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	SMD1_Distance.invalidate();
 800ae40:	f504 7014 	add.w	r0, r4, #592	; 0x250

#endif
}
 800ae44:	b008      	add	sp, #32
 800ae46:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	SMD1_Distance.invalidate();
 800ae4a:	f00e be99 	b.w	8019b80 <_ZNK8touchgfx8Drawable10invalidateEv>
 800ae4e:	bf00      	nop
 800ae50:	43d25852 	.word	0x43d25852
 800ae54:	080312a4 	.word	0x080312a4

0800ae58 <_ZN38Measurement_Single_Display_3PPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Single_Display_3PPresenter() {}
 800ae58:	4770      	bx	lr

0800ae5a <_ZThn4_N38Measurement_Single_Display_3PPresenterD1Ev>:
 800ae5a:	3804      	subs	r0, #4
 800ae5c:	4770      	bx	lr

0800ae5e <_ZN38Measurement_Single_Display_3PPresenter10deactivateEv>:
}

void Measurement_Single_Display_3PPresenter::activate()
{

}
 800ae5e:	4770      	bx	lr

0800ae60 <_ZN38Measurement_Single_Display_3PPresenter15setTimeoutValueEi>:
}

void Measurement_Single_Display_3PPresenter::setTimeoutValue(int value)
{

}
 800ae60:	4770      	bx	lr

0800ae62 <_ZN38Measurement_Single_Display_3PPresenterD0Ev>:
 800ae62:	b510      	push	{r4, lr}
 800ae64:	2110      	movs	r1, #16
 800ae66:	4604      	mov	r4, r0
 800ae68:	f021 fe8b 	bl	802cb82 <_ZdlPvj>
 800ae6c:	4620      	mov	r0, r4
 800ae6e:	bd10      	pop	{r4, pc}

0800ae70 <_ZThn4_N38Measurement_Single_Display_3PPresenterD0Ev>:
 800ae70:	f1a0 0004 	sub.w	r0, r0, #4
 800ae74:	e7f5      	b.n	800ae62 <_ZN38Measurement_Single_Display_3PPresenterD0Ev>

0800ae76 <_ZThn4_N38Measurement_Single_Display_3PPresenter15setTimeoutValueEi>:
 800ae76:	4770      	bx	lr

0800ae78 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView>:
Measurement_Single_Display_3PPresenter::Measurement_Single_Display_3PPresenter(Measurement_Single_Display_3PView& v)
 800ae78:	b510      	push	{r4, lr}
 800ae7a:	2200      	movs	r2, #0
 800ae7c:	6082      	str	r2, [r0, #8]
    : view(v)
 800ae7e:	4a04      	ldr	r2, [pc, #16]	; (800ae90 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView+0x18>)
 800ae80:	60c1      	str	r1, [r0, #12]
 800ae82:	f102 0408 	add.w	r4, r2, #8
 800ae86:	3224      	adds	r2, #36	; 0x24
 800ae88:	6004      	str	r4, [r0, #0]
 800ae8a:	6042      	str	r2, [r0, #4]
}
 800ae8c:	bd10      	pop	{r4, pc}
 800ae8e:	bf00      	nop
 800ae90:	080312e4 	.word	0x080312e4

0800ae94 <_ZN33Measurement_Single_Display_3PView14tearDownScreenEv>:
}

void Measurement_Single_Display_3PView::tearDownScreen()
{
    Measurement_Single_Display_3PViewBase::tearDownScreen();
}
 800ae94:	4770      	bx	lr
	...

0800ae98 <_ZN33Measurement_Single_Display_3PViewD1Ev>:

class Measurement_Single_Display_3PView : public Measurement_Single_Display_3PViewBase
{
public:
    Measurement_Single_Display_3PView();
    virtual ~Measurement_Single_Display_3PView() {}
 800ae98:	b510      	push	{r4, lr}
 800ae9a:	4b03      	ldr	r3, [pc, #12]	; (800aea8 <_ZN33Measurement_Single_Display_3PViewD1Ev+0x10>)
 800ae9c:	6003      	str	r3, [r0, #0]
 800ae9e:	4604      	mov	r4, r0
 800aea0:	f7fe fb9c 	bl	80095dc <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>
 800aea4:	4620      	mov	r0, r4
 800aea6:	bd10      	pop	{r4, pc}
 800aea8:	0803131c 	.word	0x0803131c

0800aeac <_ZN33Measurement_Single_Display_3PViewD0Ev>:
 800aeac:	b510      	push	{r4, lr}
 800aeae:	4604      	mov	r4, r0
 800aeb0:	f7ff fff2 	bl	800ae98 <_ZN33Measurement_Single_Display_3PViewD1Ev>
 800aeb4:	4620      	mov	r0, r4
 800aeb6:	f241 4178 	movw	r1, #5240	; 0x1478
 800aeba:	f021 fe62 	bl	802cb82 <_ZdlPvj>
 800aebe:	4620      	mov	r0, r4
 800aec0:	bd10      	pop	{r4, pc}
	...

0800aec4 <_ZN33Measurement_Single_Display_3PViewC1Ev>:
Measurement_Single_Display_3PView::Measurement_Single_Display_3PView()
 800aec4:	b510      	push	{r4, lr}
 800aec6:	4604      	mov	r4, r0
 800aec8:	f7fe fbb0 	bl	800962c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev>
 800aecc:	4b01      	ldr	r3, [pc, #4]	; (800aed4 <_ZN33Measurement_Single_Display_3PViewC1Ev+0x10>)
 800aece:	6023      	str	r3, [r4, #0]
}
 800aed0:	4620      	mov	r0, r4
 800aed2:	bd10      	pop	{r4, pc}
 800aed4:	0803131c 	.word	0x0803131c

0800aed8 <_ZN33Measurement_Single_Display_3PView11setupScreenEv>:
    Measurement_Single_Display_3PViewBase::setupScreen();
 800aed8:	f7fe bb5c 	b.w	8009594 <_ZN37Measurement_Single_Display_3PViewBase11setupScreenEv>

0800aedc <_ZN5ModelC1Ev>:
}
#endif



Model::Model() : modelListener(0), Timeout_Value(60)
 800aedc:	2100      	movs	r1, #0
 800aede:	223c      	movs	r2, #60	; 0x3c
 800aee0:	e9c0 1200 	strd	r1, r2, [r0]
{

}
 800aee4:	4770      	bx	lr
	...

0800aee8 <_ZN5Model4tickEv>:

void Model::tick()
{
 800aee8:	b570      	push	{r4, r5, r6, lr}
#ifndef SIMULATOR

	if(osMessageQueueGetCount(TimeoutQueueHandle) > 0)
 800aeea:	4d0a      	ldr	r5, [pc, #40]	; (800af14 <_ZN5Model4tickEv+0x2c>)
{
 800aeec:	4604      	mov	r4, r0
	if(osMessageQueueGetCount(TimeoutQueueHandle) > 0)
 800aeee:	6828      	ldr	r0, [r5, #0]
 800aef0:	f004 fe80 	bl	800fbf4 <osMessageQueueGetCount>
 800aef4:	b168      	cbz	r0, 800af12 <_ZN5Model4tickEv+0x2a>
	{
		if(osMessageQueueGet(TimeoutQueueHandle, &Timeout_Value, 0, 0) == osOK)
 800aef6:	2300      	movs	r3, #0
 800aef8:	6828      	ldr	r0, [r5, #0]
 800aefa:	461a      	mov	r2, r3
 800aefc:	1d21      	adds	r1, r4, #4
 800aefe:	f004 fe45 	bl	800fb8c <osMessageQueueGet>
 800af02:	b930      	cbnz	r0, 800af12 <_ZN5Model4tickEv+0x2a>
		{
			modelListener->setTimeoutValue(Timeout_Value);
 800af04:	6820      	ldr	r0, [r4, #0]
 800af06:	6861      	ldr	r1, [r4, #4]
 800af08:	6803      	ldr	r3, [r0, #0]
		}
	}
#endif
}
 800af0a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			modelListener->setTimeoutValue(Timeout_Value);
 800af0e:	689b      	ldr	r3, [r3, #8]
 800af10:	4718      	bx	r3
}
 800af12:	bd70      	pop	{r4, r5, r6, pc}
 800af14:	200001d8 	.word	0x200001d8

0800af18 <_ZN21Project_InfoPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Project_InfoPresenter() {}
 800af18:	4770      	bx	lr

0800af1a <_ZThn4_N21Project_InfoPresenterD1Ev>:
 800af1a:	3804      	subs	r0, #4
 800af1c:	4770      	bx	lr

0800af1e <_ZN21Project_InfoPresenter10deactivateEv>:
}

void Project_InfoPresenter::activate()
{

}
 800af1e:	4770      	bx	lr

0800af20 <_ZN21Project_InfoPresenter15setTimeoutValueEi>:

}

void Project_InfoPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 800af20:	68c0      	ldr	r0, [r0, #12]
 800af22:	6803      	ldr	r3, [r0, #0]
 800af24:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800af26:	4718      	bx	r3

0800af28 <_ZThn4_N21Project_InfoPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 800af28:	f1a0 0004 	sub.w	r0, r0, #4
 800af2c:	f7ff bff8 	b.w	800af20 <_ZN21Project_InfoPresenter15setTimeoutValueEi>

0800af30 <_ZN21Project_InfoPresenterD0Ev>:
    virtual ~Project_InfoPresenter() {}
 800af30:	b510      	push	{r4, lr}
 800af32:	2110      	movs	r1, #16
 800af34:	4604      	mov	r4, r0
 800af36:	f021 fe24 	bl	802cb82 <_ZdlPvj>
 800af3a:	4620      	mov	r0, r4
 800af3c:	bd10      	pop	{r4, pc}

0800af3e <_ZThn4_N21Project_InfoPresenterD0Ev>:
 800af3e:	f1a0 0004 	sub.w	r0, r0, #4
 800af42:	e7f5      	b.n	800af30 <_ZN21Project_InfoPresenterD0Ev>

0800af44 <_ZN21Project_InfoPresenterC1ER16Project_InfoView>:
Project_InfoPresenter::Project_InfoPresenter(Project_InfoView& v)
 800af44:	b510      	push	{r4, lr}
 800af46:	2200      	movs	r2, #0
 800af48:	6082      	str	r2, [r0, #8]
    : view(v)
 800af4a:	4a04      	ldr	r2, [pc, #16]	; (800af5c <_ZN21Project_InfoPresenterC1ER16Project_InfoView+0x18>)
 800af4c:	60c1      	str	r1, [r0, #12]
 800af4e:	f102 0408 	add.w	r4, r2, #8
 800af52:	3224      	adds	r2, #36	; 0x24
 800af54:	6004      	str	r4, [r0, #0]
 800af56:	6042      	str	r2, [r0, #4]
}
 800af58:	bd10      	pop	{r4, pc}
 800af5a:	bf00      	nop
 800af5c:	08031348 	.word	0x08031348

0800af60 <_ZN16Project_InfoView14tearDownScreenEv>:
}

void Project_InfoView::tearDownScreen()
{
    Project_InfoViewBase::tearDownScreen();
}
 800af60:	4770      	bx	lr
	...

0800af64 <_ZN16Project_InfoViewD1Ev>:

class Project_InfoView : public Project_InfoViewBase
{
public:
    Project_InfoView();
    virtual ~Project_InfoView() {}
 800af64:	b510      	push	{r4, lr}
 800af66:	4b03      	ldr	r3, [pc, #12]	; (800af74 <_ZN16Project_InfoViewD1Ev+0x10>)
 800af68:	6003      	str	r3, [r0, #0]
 800af6a:	4604      	mov	r4, r0
 800af6c:	f7fe ff06 	bl	8009d7c <_ZN20Project_InfoViewBaseD1Ev>
 800af70:	4620      	mov	r0, r4
 800af72:	bd10      	pop	{r4, pc}
 800af74:	08031380 	.word	0x08031380

0800af78 <_ZN16Project_InfoViewD0Ev>:
 800af78:	b510      	push	{r4, lr}
 800af7a:	4604      	mov	r4, r0
 800af7c:	f7ff fff2 	bl	800af64 <_ZN16Project_InfoViewD1Ev>
 800af80:	4620      	mov	r0, r4
 800af82:	f241 117c 	movw	r1, #4476	; 0x117c
 800af86:	f021 fdfc 	bl	802cb82 <_ZdlPvj>
 800af8a:	4620      	mov	r0, r4
 800af8c:	bd10      	pop	{r4, pc}
	...

0800af90 <_ZN16Project_InfoViewC1Ev>:
Project_InfoView::Project_InfoView()
 800af90:	b510      	push	{r4, lr}
 800af92:	4604      	mov	r4, r0
 800af94:	f7fe ff1a 	bl	8009dcc <_ZN20Project_InfoViewBaseC1Ev>
 800af98:	4b01      	ldr	r3, [pc, #4]	; (800afa0 <_ZN16Project_InfoViewC1Ev+0x10>)
 800af9a:	6023      	str	r3, [r4, #0]
}
 800af9c:	4620      	mov	r0, r4
 800af9e:	bd10      	pop	{r4, pc}
 800afa0:	08031380 	.word	0x08031380

0800afa4 <_ZN16Project_InfoView11setupScreenEv>:
    Project_InfoViewBase::setupScreen();
 800afa4:	f7fe bec6 	b.w	8009d34 <_ZN20Project_InfoViewBase11setupScreenEv>

0800afa8 <_ZN16Project_InfoView15setTimeoutValueEi>:

void Project_InfoView::setTimeoutValue(int value)
{
 800afa8:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%d", value);
 800afaa:	4a0a      	ldr	r2, [pc, #40]	; (800afd4 <_ZN16Project_InfoView15setTimeoutValueEi+0x2c>)
{
 800afac:	4605      	mov	r5, r0
 800afae:	460c      	mov	r4, r1
	Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%d", value);
 800afb0:	460b      	mov	r3, r1
 800afb2:	f500 7055 	add.w	r0, r0, #852	; 0x354
 800afb6:	2104      	movs	r1, #4
 800afb8:	f010 fea8 	bl	801bd0c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea_auto_off.invalidate();
 800afbc:	f105 0098 	add.w	r0, r5, #152	; 0x98
 800afc0:	f00e fdde 	bl	8019b80 <_ZNK8touchgfx8Drawable10invalidateEv>

	if (value == 0) {
 800afc4:	b92c      	cbnz	r4, 800afd2 <_ZN16Project_InfoView15setTimeoutValueEi+0x2a>
 800afc6:	f00d fcf3 	bl	80189b0 <_ZN8touchgfx11Application11getInstanceEv>
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 800afca:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 800afce:	f7fa bb97 	b.w	8005700 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 800afd2:	bd38      	pop	{r3, r4, r5, pc}
 800afd4:	0802f456 	.word	0x0802f456

0800afd8 <_ZN21Shutting_OffPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Shutting_OffPresenter() {}
 800afd8:	4770      	bx	lr

0800afda <_ZThn4_N21Shutting_OffPresenterD1Ev>:
 800afda:	3804      	subs	r0, #4
 800afdc:	4770      	bx	lr

0800afde <_ZN21Shutting_OffPresenter10deactivateEv>:
}

void Shutting_OffPresenter::activate()
{

}
 800afde:	4770      	bx	lr

0800afe0 <_ZN21Shutting_OffPresenter15setTimeoutValueEi>:
}

void Shutting_OffPresenter::setTimeoutValue(int value)
{

}
 800afe0:	4770      	bx	lr

0800afe2 <_ZN21Shutting_OffPresenterD0Ev>:
 800afe2:	b510      	push	{r4, lr}
 800afe4:	2110      	movs	r1, #16
 800afe6:	4604      	mov	r4, r0
 800afe8:	f021 fdcb 	bl	802cb82 <_ZdlPvj>
 800afec:	4620      	mov	r0, r4
 800afee:	bd10      	pop	{r4, pc}

0800aff0 <_ZThn4_N21Shutting_OffPresenterD0Ev>:
 800aff0:	f1a0 0004 	sub.w	r0, r0, #4
 800aff4:	e7f5      	b.n	800afe2 <_ZN21Shutting_OffPresenterD0Ev>

0800aff6 <_ZThn4_N21Shutting_OffPresenter15setTimeoutValueEi>:
 800aff6:	4770      	bx	lr

0800aff8 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView>:
Shutting_OffPresenter::Shutting_OffPresenter(Shutting_OffView& v)
 800aff8:	b510      	push	{r4, lr}
 800affa:	2200      	movs	r2, #0
 800affc:	6082      	str	r2, [r0, #8]
    : view(v)
 800affe:	4a04      	ldr	r2, [pc, #16]	; (800b010 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView+0x18>)
 800b000:	60c1      	str	r1, [r0, #12]
 800b002:	f102 0408 	add.w	r4, r2, #8
 800b006:	3224      	adds	r2, #36	; 0x24
 800b008:	6004      	str	r4, [r0, #0]
 800b00a:	6042      	str	r2, [r0, #4]
}
 800b00c:	bd10      	pop	{r4, pc}
 800b00e:	bf00      	nop
 800b010:	080313b0 	.word	0x080313b0

0800b014 <_ZN16Shutting_OffView14tearDownScreenEv>:
}

void Shutting_OffView::tearDownScreen()
{
    Shutting_OffViewBase::tearDownScreen();
}
 800b014:	4770      	bx	lr
	...

0800b018 <_ZN16Shutting_OffViewD1Ev>:

class Shutting_OffView : public Shutting_OffViewBase
{
public:
    Shutting_OffView();
    virtual ~Shutting_OffView() {}
 800b018:	b510      	push	{r4, lr}
 800b01a:	4b03      	ldr	r3, [pc, #12]	; (800b028 <_ZN16Shutting_OffViewD1Ev+0x10>)
 800b01c:	6003      	str	r3, [r0, #0]
 800b01e:	4604      	mov	r4, r0
 800b020:	f7ff f91e 	bl	800a260 <_ZN20Shutting_OffViewBaseD1Ev>
 800b024:	4620      	mov	r0, r4
 800b026:	bd10      	pop	{r4, pc}
 800b028:	080313e8 	.word	0x080313e8

0800b02c <_ZN16Shutting_OffViewD0Ev>:
 800b02c:	b510      	push	{r4, lr}
 800b02e:	4604      	mov	r4, r0
 800b030:	f7ff fff2 	bl	800b018 <_ZN16Shutting_OffViewD1Ev>
 800b034:	4620      	mov	r0, r4
 800b036:	2198      	movs	r1, #152	; 0x98
 800b038:	f021 fda3 	bl	802cb82 <_ZdlPvj>
 800b03c:	4620      	mov	r0, r4
 800b03e:	bd10      	pop	{r4, pc}

0800b040 <_ZN16Shutting_OffViewC1Ev>:
Shutting_OffView::Shutting_OffView()
 800b040:	b510      	push	{r4, lr}
 800b042:	4604      	mov	r4, r0
 800b044:	f7ff f916 	bl	800a274 <_ZN20Shutting_OffViewBaseC1Ev>
 800b048:	4b01      	ldr	r3, [pc, #4]	; (800b050 <_ZN16Shutting_OffViewC1Ev+0x10>)
 800b04a:	6023      	str	r3, [r4, #0]
}
 800b04c:	4620      	mov	r0, r4
 800b04e:	bd10      	pop	{r4, pc}
 800b050:	080313e8 	.word	0x080313e8

0800b054 <_ZN16Shutting_OffView11setupScreenEv>:
    Shutting_OffViewBase::setupScreen();
 800b054:	f7ff b905 	b.w	800a262 <_ZN20Shutting_OffViewBase11setupScreenEv>

0800b058 <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 800b058:	20f0      	movs	r0, #240	; 0xf0
 800b05a:	4770      	bx	lr

0800b05c <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 800b05c:	f44f 70a0 	mov.w	r0, #320	; 0x140
 800b060:	4770      	bx	lr
 800b062:	bf00      	nop

0800b064 <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 800b064:	2029      	movs	r0, #41	; 0x29
 800b066:	f7f6 bef7 	b.w	8001e58 <LCD_IO_WriteReg>
 800b06a:	bf00      	nop

0800b06c <ili9341_DisplayOff>:
 800b06c:	2028      	movs	r0, #40	; 0x28
 800b06e:	f7f6 bef3 	b.w	8001e58 <LCD_IO_WriteReg>
 800b072:	bf00      	nop

0800b074 <ili9341_Init>:
{
 800b074:	b508      	push	{r3, lr}
  LCD_IO_Init();
 800b076:	f7f6 feb5 	bl	8001de4 <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 800b07a:	20ca      	movs	r0, #202	; 0xca
 800b07c:	f7f6 feec 	bl	8001e58 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b080:	20c3      	movs	r0, #195	; 0xc3
 800b082:	f7f6 febf 	bl	8001e04 <LCD_IO_WriteData>
 800b086:	2008      	movs	r0, #8
 800b088:	f7f6 febc 	bl	8001e04 <LCD_IO_WriteData>
 800b08c:	2050      	movs	r0, #80	; 0x50
 800b08e:	f7f6 feb9 	bl	8001e04 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b092:	20cf      	movs	r0, #207	; 0xcf
 800b094:	f7f6 fee0 	bl	8001e58 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b098:	2000      	movs	r0, #0
 800b09a:	f7f6 feb3 	bl	8001e04 <LCD_IO_WriteData>
 800b09e:	20c1      	movs	r0, #193	; 0xc1
 800b0a0:	f7f6 feb0 	bl	8001e04 <LCD_IO_WriteData>
 800b0a4:	2030      	movs	r0, #48	; 0x30
 800b0a6:	f7f6 fead 	bl	8001e04 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b0aa:	20ed      	movs	r0, #237	; 0xed
 800b0ac:	f7f6 fed4 	bl	8001e58 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b0b0:	2064      	movs	r0, #100	; 0x64
 800b0b2:	f7f6 fea7 	bl	8001e04 <LCD_IO_WriteData>
 800b0b6:	2003      	movs	r0, #3
 800b0b8:	f7f6 fea4 	bl	8001e04 <LCD_IO_WriteData>
 800b0bc:	2012      	movs	r0, #18
 800b0be:	f7f6 fea1 	bl	8001e04 <LCD_IO_WriteData>
 800b0c2:	2081      	movs	r0, #129	; 0x81
 800b0c4:	f7f6 fe9e 	bl	8001e04 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b0c8:	20e8      	movs	r0, #232	; 0xe8
 800b0ca:	f7f6 fec5 	bl	8001e58 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b0ce:	2085      	movs	r0, #133	; 0x85
 800b0d0:	f7f6 fe98 	bl	8001e04 <LCD_IO_WriteData>
 800b0d4:	2000      	movs	r0, #0
 800b0d6:	f7f6 fe95 	bl	8001e04 <LCD_IO_WriteData>
 800b0da:	2078      	movs	r0, #120	; 0x78
 800b0dc:	f7f6 fe92 	bl	8001e04 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b0e0:	20cb      	movs	r0, #203	; 0xcb
 800b0e2:	f7f6 feb9 	bl	8001e58 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b0e6:	2039      	movs	r0, #57	; 0x39
 800b0e8:	f7f6 fe8c 	bl	8001e04 <LCD_IO_WriteData>
 800b0ec:	202c      	movs	r0, #44	; 0x2c
 800b0ee:	f7f6 fe89 	bl	8001e04 <LCD_IO_WriteData>
 800b0f2:	2000      	movs	r0, #0
 800b0f4:	f7f6 fe86 	bl	8001e04 <LCD_IO_WriteData>
 800b0f8:	2034      	movs	r0, #52	; 0x34
 800b0fa:	f7f6 fe83 	bl	8001e04 <LCD_IO_WriteData>
 800b0fe:	2002      	movs	r0, #2
 800b100:	f7f6 fe80 	bl	8001e04 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b104:	20f7      	movs	r0, #247	; 0xf7
 800b106:	f7f6 fea7 	bl	8001e58 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b10a:	2020      	movs	r0, #32
 800b10c:	f7f6 fe7a 	bl	8001e04 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b110:	20ea      	movs	r0, #234	; 0xea
 800b112:	f7f6 fea1 	bl	8001e58 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b116:	2000      	movs	r0, #0
 800b118:	f7f6 fe74 	bl	8001e04 <LCD_IO_WriteData>
 800b11c:	2000      	movs	r0, #0
 800b11e:	f7f6 fe71 	bl	8001e04 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b122:	20b1      	movs	r0, #177	; 0xb1
 800b124:	f7f6 fe98 	bl	8001e58 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b128:	2000      	movs	r0, #0
 800b12a:	f7f6 fe6b 	bl	8001e04 <LCD_IO_WriteData>
 800b12e:	201b      	movs	r0, #27
 800b130:	f7f6 fe68 	bl	8001e04 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b134:	20b6      	movs	r0, #182	; 0xb6
 800b136:	f7f6 fe8f 	bl	8001e58 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b13a:	200a      	movs	r0, #10
 800b13c:	f7f6 fe62 	bl	8001e04 <LCD_IO_WriteData>
 800b140:	20a2      	movs	r0, #162	; 0xa2
 800b142:	f7f6 fe5f 	bl	8001e04 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b146:	20c0      	movs	r0, #192	; 0xc0
 800b148:	f7f6 fe86 	bl	8001e58 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b14c:	2010      	movs	r0, #16
 800b14e:	f7f6 fe59 	bl	8001e04 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b152:	20c1      	movs	r0, #193	; 0xc1
 800b154:	f7f6 fe80 	bl	8001e58 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b158:	2010      	movs	r0, #16
 800b15a:	f7f6 fe53 	bl	8001e04 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b15e:	20c5      	movs	r0, #197	; 0xc5
 800b160:	f7f6 fe7a 	bl	8001e58 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b164:	2045      	movs	r0, #69	; 0x45
 800b166:	f7f6 fe4d 	bl	8001e04 <LCD_IO_WriteData>
 800b16a:	2015      	movs	r0, #21
 800b16c:	f7f6 fe4a 	bl	8001e04 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b170:	20c7      	movs	r0, #199	; 0xc7
 800b172:	f7f6 fe71 	bl	8001e58 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b176:	2090      	movs	r0, #144	; 0x90
 800b178:	f7f6 fe44 	bl	8001e04 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b17c:	2036      	movs	r0, #54	; 0x36
 800b17e:	f7f6 fe6b 	bl	8001e58 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b182:	20c8      	movs	r0, #200	; 0xc8
 800b184:	f7f6 fe3e 	bl	8001e04 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b188:	20f2      	movs	r0, #242	; 0xf2
 800b18a:	f7f6 fe65 	bl	8001e58 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b18e:	2000      	movs	r0, #0
 800b190:	f7f6 fe38 	bl	8001e04 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b194:	20b0      	movs	r0, #176	; 0xb0
 800b196:	f7f6 fe5f 	bl	8001e58 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b19a:	20c2      	movs	r0, #194	; 0xc2
 800b19c:	f7f6 fe32 	bl	8001e04 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b1a0:	20b6      	movs	r0, #182	; 0xb6
 800b1a2:	f7f6 fe59 	bl	8001e58 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b1a6:	200a      	movs	r0, #10
 800b1a8:	f7f6 fe2c 	bl	8001e04 <LCD_IO_WriteData>
 800b1ac:	20a7      	movs	r0, #167	; 0xa7
 800b1ae:	f7f6 fe29 	bl	8001e04 <LCD_IO_WriteData>
 800b1b2:	2027      	movs	r0, #39	; 0x27
 800b1b4:	f7f6 fe26 	bl	8001e04 <LCD_IO_WriteData>
 800b1b8:	2004      	movs	r0, #4
 800b1ba:	f7f6 fe23 	bl	8001e04 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b1be:	202a      	movs	r0, #42	; 0x2a
 800b1c0:	f7f6 fe4a 	bl	8001e58 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b1c4:	2000      	movs	r0, #0
 800b1c6:	f7f6 fe1d 	bl	8001e04 <LCD_IO_WriteData>
 800b1ca:	2000      	movs	r0, #0
 800b1cc:	f7f6 fe1a 	bl	8001e04 <LCD_IO_WriteData>
 800b1d0:	2000      	movs	r0, #0
 800b1d2:	f7f6 fe17 	bl	8001e04 <LCD_IO_WriteData>
 800b1d6:	20ef      	movs	r0, #239	; 0xef
 800b1d8:	f7f6 fe14 	bl	8001e04 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b1dc:	202b      	movs	r0, #43	; 0x2b
 800b1de:	f7f6 fe3b 	bl	8001e58 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b1e2:	2000      	movs	r0, #0
 800b1e4:	f7f6 fe0e 	bl	8001e04 <LCD_IO_WriteData>
 800b1e8:	2000      	movs	r0, #0
 800b1ea:	f7f6 fe0b 	bl	8001e04 <LCD_IO_WriteData>
 800b1ee:	2001      	movs	r0, #1
 800b1f0:	f7f6 fe08 	bl	8001e04 <LCD_IO_WriteData>
 800b1f4:	203f      	movs	r0, #63	; 0x3f
 800b1f6:	f7f6 fe05 	bl	8001e04 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b1fa:	20f6      	movs	r0, #246	; 0xf6
 800b1fc:	f7f6 fe2c 	bl	8001e58 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b200:	2001      	movs	r0, #1
 800b202:	f7f6 fdff 	bl	8001e04 <LCD_IO_WriteData>
 800b206:	2000      	movs	r0, #0
 800b208:	f7f6 fdfc 	bl	8001e04 <LCD_IO_WriteData>
 800b20c:	2006      	movs	r0, #6
 800b20e:	f7f6 fdf9 	bl	8001e04 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b212:	202c      	movs	r0, #44	; 0x2c
 800b214:	f7f6 fe20 	bl	8001e58 <LCD_IO_WriteReg>
  LCD_Delay(200);
 800b218:	20c8      	movs	r0, #200	; 0xc8
 800b21a:	f7f6 fe85 	bl	8001f28 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 800b21e:	2026      	movs	r0, #38	; 0x26
 800b220:	f7f6 fe1a 	bl	8001e58 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b224:	2001      	movs	r0, #1
 800b226:	f7f6 fded 	bl	8001e04 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b22a:	20e0      	movs	r0, #224	; 0xe0
 800b22c:	f7f6 fe14 	bl	8001e58 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b230:	200f      	movs	r0, #15
 800b232:	f7f6 fde7 	bl	8001e04 <LCD_IO_WriteData>
 800b236:	2029      	movs	r0, #41	; 0x29
 800b238:	f7f6 fde4 	bl	8001e04 <LCD_IO_WriteData>
 800b23c:	2024      	movs	r0, #36	; 0x24
 800b23e:	f7f6 fde1 	bl	8001e04 <LCD_IO_WriteData>
 800b242:	200c      	movs	r0, #12
 800b244:	f7f6 fdde 	bl	8001e04 <LCD_IO_WriteData>
 800b248:	200e      	movs	r0, #14
 800b24a:	f7f6 fddb 	bl	8001e04 <LCD_IO_WriteData>
 800b24e:	2009      	movs	r0, #9
 800b250:	f7f6 fdd8 	bl	8001e04 <LCD_IO_WriteData>
 800b254:	204e      	movs	r0, #78	; 0x4e
 800b256:	f7f6 fdd5 	bl	8001e04 <LCD_IO_WriteData>
 800b25a:	2078      	movs	r0, #120	; 0x78
 800b25c:	f7f6 fdd2 	bl	8001e04 <LCD_IO_WriteData>
 800b260:	203c      	movs	r0, #60	; 0x3c
 800b262:	f7f6 fdcf 	bl	8001e04 <LCD_IO_WriteData>
 800b266:	2009      	movs	r0, #9
 800b268:	f7f6 fdcc 	bl	8001e04 <LCD_IO_WriteData>
 800b26c:	2013      	movs	r0, #19
 800b26e:	f7f6 fdc9 	bl	8001e04 <LCD_IO_WriteData>
 800b272:	2005      	movs	r0, #5
 800b274:	f7f6 fdc6 	bl	8001e04 <LCD_IO_WriteData>
 800b278:	2017      	movs	r0, #23
 800b27a:	f7f6 fdc3 	bl	8001e04 <LCD_IO_WriteData>
 800b27e:	2011      	movs	r0, #17
 800b280:	f7f6 fdc0 	bl	8001e04 <LCD_IO_WriteData>
 800b284:	2000      	movs	r0, #0
 800b286:	f7f6 fdbd 	bl	8001e04 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b28a:	20e1      	movs	r0, #225	; 0xe1
 800b28c:	f7f6 fde4 	bl	8001e58 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b290:	2000      	movs	r0, #0
 800b292:	f7f6 fdb7 	bl	8001e04 <LCD_IO_WriteData>
 800b296:	2016      	movs	r0, #22
 800b298:	f7f6 fdb4 	bl	8001e04 <LCD_IO_WriteData>
 800b29c:	201b      	movs	r0, #27
 800b29e:	f7f6 fdb1 	bl	8001e04 <LCD_IO_WriteData>
 800b2a2:	2004      	movs	r0, #4
 800b2a4:	f7f6 fdae 	bl	8001e04 <LCD_IO_WriteData>
 800b2a8:	2011      	movs	r0, #17
 800b2aa:	f7f6 fdab 	bl	8001e04 <LCD_IO_WriteData>
 800b2ae:	2007      	movs	r0, #7
 800b2b0:	f7f6 fda8 	bl	8001e04 <LCD_IO_WriteData>
 800b2b4:	2031      	movs	r0, #49	; 0x31
 800b2b6:	f7f6 fda5 	bl	8001e04 <LCD_IO_WriteData>
 800b2ba:	2033      	movs	r0, #51	; 0x33
 800b2bc:	f7f6 fda2 	bl	8001e04 <LCD_IO_WriteData>
 800b2c0:	2042      	movs	r0, #66	; 0x42
 800b2c2:	f7f6 fd9f 	bl	8001e04 <LCD_IO_WriteData>
 800b2c6:	2005      	movs	r0, #5
 800b2c8:	f7f6 fd9c 	bl	8001e04 <LCD_IO_WriteData>
 800b2cc:	200c      	movs	r0, #12
 800b2ce:	f7f6 fd99 	bl	8001e04 <LCD_IO_WriteData>
 800b2d2:	200a      	movs	r0, #10
 800b2d4:	f7f6 fd96 	bl	8001e04 <LCD_IO_WriteData>
 800b2d8:	2028      	movs	r0, #40	; 0x28
 800b2da:	f7f6 fd93 	bl	8001e04 <LCD_IO_WriteData>
 800b2de:	202f      	movs	r0, #47	; 0x2f
 800b2e0:	f7f6 fd90 	bl	8001e04 <LCD_IO_WriteData>
 800b2e4:	200f      	movs	r0, #15
 800b2e6:	f7f6 fd8d 	bl	8001e04 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b2ea:	2011      	movs	r0, #17
 800b2ec:	f7f6 fdb4 	bl	8001e58 <LCD_IO_WriteReg>
  LCD_Delay(200);
 800b2f0:	20c8      	movs	r0, #200	; 0xc8
 800b2f2:	f7f6 fe19 	bl	8001f28 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 800b2f6:	2029      	movs	r0, #41	; 0x29
 800b2f8:	f7f6 fdae 	bl	8001e58 <LCD_IO_WriteReg>
}
 800b2fc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 800b300:	202c      	movs	r0, #44	; 0x2c
 800b302:	f7f6 bda9 	b.w	8001e58 <LCD_IO_WriteReg>
 800b306:	bf00      	nop

0800b308 <ili9341_ReadID>:
{
 800b308:	b508      	push	{r3, lr}
  LCD_IO_Init();
 800b30a:	f7f6 fd6b 	bl	8001de4 <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 800b30e:	2103      	movs	r1, #3
 800b310:	20d3      	movs	r0, #211	; 0xd3
 800b312:	f7f6 fdcb 	bl	8001eac <LCD_IO_ReadData>
}
 800b316:	b280      	uxth	r0, r0
 800b318:	bd08      	pop	{r3, pc}
 800b31a:	bf00      	nop

0800b31c <stmpe811_TS_ClearIT>:
  * @retval None
  */
void stmpe811_ClearGlobalIT(uint16_t DeviceAddr, uint8_t Source)
{
  /* Write 1 to the bits that have to be cleared */
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 800b31c:	221f      	movs	r2, #31
 800b31e:	210b      	movs	r1, #11
 800b320:	b2c0      	uxtb	r0, r0
 800b322:	f7f6 bd11 	b.w	8001d48 <IOE_Write>
 800b326:	bf00      	nop

0800b328 <stmpe811_Reset>:
{
 800b328:	b510      	push	{r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 800b32a:	b2c4      	uxtb	r4, r0
 800b32c:	2202      	movs	r2, #2
 800b32e:	2103      	movs	r1, #3
 800b330:	4620      	mov	r0, r4
 800b332:	f7f6 fd09 	bl	8001d48 <IOE_Write>
  IOE_Delay(10); 
 800b336:	200a      	movs	r0, #10
 800b338:	f7f6 fd52 	bl	8001de0 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 800b33c:	4620      	mov	r0, r4
 800b33e:	2200      	movs	r2, #0
 800b340:	2103      	movs	r1, #3
 800b342:	f7f6 fd01 	bl	8001d48 <IOE_Write>
}
 800b346:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 800b34a:	2002      	movs	r0, #2
 800b34c:	f7f6 bd48 	b.w	8001de0 <IOE_Delay>

0800b350 <stmpe811_ReadID>:
{
 800b350:	b510      	push	{r4, lr}
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800b352:	b2c4      	uxtb	r4, r0
  IOE_Init(); 
 800b354:	f7f6 fcf4 	bl	8001d40 <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800b358:	2100      	movs	r1, #0
 800b35a:	4620      	mov	r0, r4
 800b35c:	f7f6 fd0c 	bl	8001d78 <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 800b360:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800b362:	4603      	mov	r3, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 800b364:	4620      	mov	r0, r4
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800b366:	461c      	mov	r4, r3
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 800b368:	f7f6 fd06 	bl	8001d78 <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800b36c:	ea40 2004 	orr.w	r0, r0, r4, lsl #8
}
 800b370:	b280      	uxth	r0, r0
 800b372:	bd10      	pop	{r4, pc}

0800b374 <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 800b374:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 800b376:	b2c4      	uxtb	r4, r0
 800b378:	2140      	movs	r1, #64	; 0x40
 800b37a:	4620      	mov	r0, r4
 800b37c:	f7f6 fcfc 	bl	8001d78 <IOE_Read>
  
  if(state > 0)
 800b380:	0603      	lsls	r3, r0, #24
 800b382:	d40b      	bmi.n	800b39c <stmpe811_TS_DetectTouch+0x28>
    }
  }
  else
  {
    /* Reset FIFO */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 800b384:	4620      	mov	r0, r4
 800b386:	2201      	movs	r2, #1
 800b388:	214b      	movs	r1, #75	; 0x4b
 800b38a:	f7f6 fcdd 	bl	8001d48 <IOE_Write>
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 800b38e:	4620      	mov	r0, r4
 800b390:	2200      	movs	r2, #0
 800b392:	214b      	movs	r1, #75	; 0x4b
 800b394:	f7f6 fcd8 	bl	8001d48 <IOE_Write>
  uint8_t ret = 0;
 800b398:	2000      	movs	r0, #0
  }
  
  return ret;
}
 800b39a:	bd10      	pop	{r4, pc}
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 800b39c:	214c      	movs	r1, #76	; 0x4c
 800b39e:	4620      	mov	r0, r4
 800b3a0:	f7f6 fcea 	bl	8001d78 <IOE_Read>
      ret = 1;
 800b3a4:	3800      	subs	r0, #0
 800b3a6:	bf18      	it	ne
 800b3a8:	2001      	movne	r0, #1
}
 800b3aa:	bd10      	pop	{r4, pc}

0800b3ac <stmpe811_TS_ITStatus>:
  * @brief  Configure the selected source to generate a global interrupt or not
  * @param  DeviceAddr: Device address on communication Bus.    
  * @retval TS interrupts status
  */
uint8_t stmpe811_TS_ITStatus(uint16_t DeviceAddr)
{
 800b3ac:	b508      	push	{r3, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 800b3ae:	210b      	movs	r1, #11
 800b3b0:	b2c0      	uxtb	r0, r0
 800b3b2:	f7f6 fce1 	bl	8001d78 <IOE_Read>
  /* Return TS interrupts status */
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
}
 800b3b6:	f000 001f 	and.w	r0, r0, #31
 800b3ba:	bd08      	pop	{r3, pc}

0800b3bc <stmpe811_TS_GetXY>:
{
 800b3bc:	b570      	push	{r4, r5, r6, lr}
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 800b3be:	2304      	movs	r3, #4
{
 800b3c0:	b082      	sub	sp, #8
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 800b3c2:	b2c4      	uxtb	r4, r0
{
 800b3c4:	4615      	mov	r5, r2
 800b3c6:	460e      	mov	r6, r1
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 800b3c8:	eb0d 0203 	add.w	r2, sp, r3
 800b3cc:	21d7      	movs	r1, #215	; 0xd7
 800b3ce:	4620      	mov	r0, r4
 800b3d0:	f7f6 fcee 	bl	8001db0 <IOE_ReadMultiple>
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 800b3d4:	9b01      	ldr	r3, [sp, #4]
 800b3d6:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 800b3d8:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 800b3da:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 800b3de:	8032      	strh	r2, [r6, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 800b3e0:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 800b3e2:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 800b3e4:	2201      	movs	r2, #1
 800b3e6:	214b      	movs	r1, #75	; 0x4b
 800b3e8:	f7f6 fcae 	bl	8001d48 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 800b3ec:	2200      	movs	r2, #0
 800b3ee:	214b      	movs	r1, #75	; 0x4b
 800b3f0:	4620      	mov	r0, r4
 800b3f2:	f7f6 fca9 	bl	8001d48 <IOE_Write>
}
 800b3f6:	b002      	add	sp, #8
 800b3f8:	bd70      	pop	{r4, r5, r6, pc}
 800b3fa:	bf00      	nop

0800b3fc <stmpe811_TS_Start>:
{
 800b3fc:	b538      	push	{r3, r4, r5, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 800b3fe:	b2c4      	uxtb	r4, r0
 800b400:	2104      	movs	r1, #4
 800b402:	4620      	mov	r0, r4
 800b404:	f7f6 fcb8 	bl	8001d78 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 800b408:	2104      	movs	r1, #4
 800b40a:	f000 02fb 	and.w	r2, r0, #251	; 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 800b40e:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 800b410:	4620      	mov	r0, r4
 800b412:	f7f6 fc99 	bl	8001d48 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 800b416:	2117      	movs	r1, #23
 800b418:	4620      	mov	r0, r4
 800b41a:	f7f6 fcad 	bl	8001d78 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 800b41e:	2117      	movs	r1, #23
 800b420:	f000 020f 	and.w	r2, r0, #15
 800b424:	4620      	mov	r0, r4
 800b426:	f7f6 fc8f 	bl	8001d48 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 800b42a:	f005 02f8 	and.w	r2, r5, #248	; 0xf8
 800b42e:	4620      	mov	r0, r4
 800b430:	2104      	movs	r1, #4
 800b432:	f7f6 fc89 	bl	8001d48 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 800b436:	2249      	movs	r2, #73	; 0x49
 800b438:	2120      	movs	r1, #32
 800b43a:	4620      	mov	r0, r4
 800b43c:	f7f6 fc84 	bl	8001d48 <IOE_Write>
  IOE_Delay(2); 
 800b440:	2002      	movs	r0, #2
 800b442:	f7f6 fccd 	bl	8001de0 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 800b446:	4620      	mov	r0, r4
 800b448:	2201      	movs	r2, #1
 800b44a:	2121      	movs	r1, #33	; 0x21
 800b44c:	f7f6 fc7c 	bl	8001d48 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 800b450:	4620      	mov	r0, r4
 800b452:	229a      	movs	r2, #154	; 0x9a
 800b454:	2141      	movs	r1, #65	; 0x41
 800b456:	f7f6 fc77 	bl	8001d48 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 800b45a:	4620      	mov	r0, r4
 800b45c:	2201      	movs	r2, #1
 800b45e:	214a      	movs	r1, #74	; 0x4a
 800b460:	f7f6 fc72 	bl	8001d48 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 800b464:	4620      	mov	r0, r4
 800b466:	2201      	movs	r2, #1
 800b468:	214b      	movs	r1, #75	; 0x4b
 800b46a:	f7f6 fc6d 	bl	8001d48 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 800b46e:	4620      	mov	r0, r4
 800b470:	2200      	movs	r2, #0
 800b472:	214b      	movs	r1, #75	; 0x4b
 800b474:	f7f6 fc68 	bl	8001d48 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 800b478:	4620      	mov	r0, r4
 800b47a:	2201      	movs	r2, #1
 800b47c:	2156      	movs	r1, #86	; 0x56
 800b47e:	f7f6 fc63 	bl	8001d48 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 800b482:	4620      	mov	r0, r4
 800b484:	2201      	movs	r2, #1
 800b486:	2158      	movs	r1, #88	; 0x58
 800b488:	f7f6 fc5e 	bl	8001d48 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 800b48c:	4620      	mov	r0, r4
 800b48e:	2201      	movs	r2, #1
 800b490:	2140      	movs	r1, #64	; 0x40
 800b492:	f7f6 fc59 	bl	8001d48 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 800b496:	4620      	mov	r0, r4
 800b498:	22ff      	movs	r2, #255	; 0xff
 800b49a:	210b      	movs	r1, #11
 800b49c:	f7f6 fc54 	bl	8001d48 <IOE_Write>
}
 800b4a0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Delay(2); 
 800b4a4:	2002      	movs	r0, #2
 800b4a6:	f7f6 bc9b 	b.w	8001de0 <IOE_Delay>
 800b4aa:	bf00      	nop

0800b4ac <stmpe811_TS_DisableIT>:
{
 800b4ac:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 800b4ae:	b2c4      	uxtb	r4, r0
 800b4b0:	2109      	movs	r1, #9
 800b4b2:	4620      	mov	r0, r4
 800b4b4:	f7f6 fc60 	bl	8001d78 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 800b4b8:	2109      	movs	r1, #9
 800b4ba:	f000 02fe 	and.w	r2, r0, #254	; 0xfe
 800b4be:	4620      	mov	r0, r4
 800b4c0:	f7f6 fc42 	bl	8001d48 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 800b4c4:	210a      	movs	r1, #10
 800b4c6:	4620      	mov	r0, r4
 800b4c8:	f7f6 fc56 	bl	8001d78 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 800b4cc:	210a      	movs	r1, #10
 800b4ce:	f000 02e0 	and.w	r2, r0, #224	; 0xe0
 800b4d2:	4620      	mov	r0, r4
}
 800b4d4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 800b4d8:	f7f6 bc36 	b.w	8001d48 <IOE_Write>

0800b4dc <stmpe811_TS_EnableIT>:
{
 800b4dc:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 800b4de:	b2c4      	uxtb	r4, r0
  IOE_ITConfig();
 800b4e0:	f7f6 fc30 	bl	8001d44 <IOE_ITConfig>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 800b4e4:	210a      	movs	r1, #10
 800b4e6:	4620      	mov	r0, r4
 800b4e8:	f7f6 fc46 	bl	8001d78 <IOE_Read>
  tmp |= Source; 
 800b4ec:	f040 001f 	orr.w	r0, r0, #31
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 800b4f0:	b2c2      	uxtb	r2, r0
 800b4f2:	210a      	movs	r1, #10
 800b4f4:	4620      	mov	r0, r4
 800b4f6:	f7f6 fc27 	bl	8001d48 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 800b4fa:	2109      	movs	r1, #9
 800b4fc:	4620      	mov	r0, r4
 800b4fe:	f7f6 fc3b 	bl	8001d78 <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 800b502:	f040 0001 	orr.w	r0, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 800b506:	b2c2      	uxtb	r2, r0
 800b508:	2109      	movs	r1, #9
 800b50a:	4620      	mov	r0, r4
}
 800b50c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 800b510:	f7f6 bc1a 	b.w	8001d48 <IOE_Write>

0800b514 <stmpe811_Init>:
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 800b514:	4a10      	ldr	r2, [pc, #64]	; (800b558 <stmpe811_Init+0x44>)
 800b516:	7813      	ldrb	r3, [r2, #0]
 800b518:	4298      	cmp	r0, r3
 800b51a:	d004      	beq.n	800b526 <stmpe811_Init+0x12>
 800b51c:	7851      	ldrb	r1, [r2, #1]
 800b51e:	4288      	cmp	r0, r1
 800b520:	d001      	beq.n	800b526 <stmpe811_Init+0x12>
 800b522:	b113      	cbz	r3, 800b52a <stmpe811_Init+0x16>
 800b524:	b101      	cbz	r1, 800b528 <stmpe811_Init+0x14>
 800b526:	4770      	bx	lr
 800b528:	2301      	movs	r3, #1
{
 800b52a:	b510      	push	{r4, lr}
      stmpe811[empty] = DeviceAddr;
 800b52c:	b2c4      	uxtb	r4, r0
 800b52e:	54d4      	strb	r4, [r2, r3]
      IOE_Init(); 
 800b530:	f7f6 fc06 	bl	8001d40 <IOE_Init>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 800b534:	2202      	movs	r2, #2
 800b536:	2103      	movs	r1, #3
 800b538:	4620      	mov	r0, r4
 800b53a:	f7f6 fc05 	bl	8001d48 <IOE_Write>
  IOE_Delay(10); 
 800b53e:	200a      	movs	r0, #10
 800b540:	f7f6 fc4e 	bl	8001de0 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 800b544:	4620      	mov	r0, r4
 800b546:	2200      	movs	r2, #0
 800b548:	2103      	movs	r1, #3
 800b54a:	f7f6 fbfd 	bl	8001d48 <IOE_Write>
}
 800b54e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 800b552:	2002      	movs	r0, #2
 800b554:	f7f6 bc44 	b.w	8001de0 <IOE_Delay>
 800b558:	20002a1c 	.word	0x20002a1c

0800b55c <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 800b55c:	4b05      	ldr	r3, [pc, #20]	; (800b574 <SystemInit+0x18>)
 800b55e:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 800b562:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 800b566:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 800b56a:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 800b56e:	6099      	str	r1, [r3, #8]
#endif
}
 800b570:	4770      	bx	lr
 800b572:	bf00      	nop
 800b574:	e000ed00 	.word	0xe000ed00

0800b578 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 800b578:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 800b57a:	4b0b      	ldr	r3, [pc, #44]	; (800b5a8 <HAL_Init+0x30>)
 800b57c:	681a      	ldr	r2, [r3, #0]
 800b57e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b582:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 800b584:	681a      	ldr	r2, [r3, #0]
 800b586:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800b58a:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 800b58c:	681a      	ldr	r2, [r3, #0]
 800b58e:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800b592:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 800b594:	2003      	movs	r0, #3
 800b596:	f000 f82d 	bl	800b5f4 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 800b59a:	2000      	movs	r0, #0
 800b59c:	f7f7 f8f4 	bl	8002788 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 800b5a0:	f7f6 fe16 	bl	80021d0 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 800b5a4:	2000      	movs	r0, #0
 800b5a6:	bd08      	pop	{r3, pc}
 800b5a8:	40023c00 	.word	0x40023c00

0800b5ac <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 800b5ac:	4a03      	ldr	r2, [pc, #12]	; (800b5bc <HAL_IncTick+0x10>)
 800b5ae:	4b04      	ldr	r3, [pc, #16]	; (800b5c0 <HAL_IncTick+0x14>)
 800b5b0:	6811      	ldr	r1, [r2, #0]
 800b5b2:	781b      	ldrb	r3, [r3, #0]
 800b5b4:	440b      	add	r3, r1
 800b5b6:	6013      	str	r3, [r2, #0]
}
 800b5b8:	4770      	bx	lr
 800b5ba:	bf00      	nop
 800b5bc:	20002a20 	.word	0x20002a20
 800b5c0:	20000080 	.word	0x20000080

0800b5c4 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 800b5c4:	4b01      	ldr	r3, [pc, #4]	; (800b5cc <HAL_GetTick+0x8>)
 800b5c6:	6818      	ldr	r0, [r3, #0]
}
 800b5c8:	4770      	bx	lr
 800b5ca:	bf00      	nop
 800b5cc:	20002a20 	.word	0x20002a20

0800b5d0 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 800b5d0:	b538      	push	{r3, r4, r5, lr}
 800b5d2:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 800b5d4:	f7ff fff6 	bl	800b5c4 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 800b5d8:	1c63      	adds	r3, r4, #1
  uint32_t tickstart = HAL_GetTick();
 800b5da:	4605      	mov	r5, r0
  if (wait < HAL_MAX_DELAY)
 800b5dc:	d002      	beq.n	800b5e4 <HAL_Delay+0x14>
  {
    wait += (uint32_t)(uwTickFreq);
 800b5de:	4b04      	ldr	r3, [pc, #16]	; (800b5f0 <HAL_Delay+0x20>)
 800b5e0:	781b      	ldrb	r3, [r3, #0]
 800b5e2:	441c      	add	r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 800b5e4:	f7ff ffee 	bl	800b5c4 <HAL_GetTick>
 800b5e8:	1b43      	subs	r3, r0, r5
 800b5ea:	42a3      	cmp	r3, r4
 800b5ec:	d3fa      	bcc.n	800b5e4 <HAL_Delay+0x14>
  {
  }
}
 800b5ee:	bd38      	pop	{r3, r4, r5, pc}
 800b5f0:	20000080 	.word	0x20000080

0800b5f4 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 800b5f4:	4907      	ldr	r1, [pc, #28]	; (800b614 <HAL_NVIC_SetPriorityGrouping+0x20>)
 800b5f6:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 800b5f8:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800b5fa:	f64f 00ff 	movw	r0, #63743	; 0xf8ff
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 800b5fe:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800b602:	4002      	ands	r2, r0
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 800b604:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 800b606:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 800b60a:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 800b60e:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 800b610:	4770      	bx	lr
 800b612:	bf00      	nop
 800b614:	e000ed00 	.word	0xe000ed00

0800b618 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 800b618:	4b1c      	ldr	r3, [pc, #112]	; (800b68c <HAL_NVIC_SetPriority+0x74>)
 800b61a:	68db      	ldr	r3, [r3, #12]
 800b61c:	f3c3 2302 	ubfx	r3, r3, #8, #3
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 800b620:	b500      	push	{lr}
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800b622:	f1c3 0e07 	rsb	lr, r3, #7
 800b626:	f1be 0f04 	cmp.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800b62a:	f103 0c04 	add.w	ip, r3, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800b62e:	bf28      	it	cs
 800b630:	f04f 0e04 	movcs.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800b634:	f1bc 0f06 	cmp.w	ip, #6
 800b638:	d91b      	bls.n	800b672 <HAL_NVIC_SetPriority+0x5a>
 800b63a:	3b03      	subs	r3, #3

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 800b63c:	f04f 3cff 	mov.w	ip, #4294967295
 800b640:	fa0c fc03 	lsl.w	ip, ip, r3
 800b644:	ea22 020c 	bic.w	r2, r2, ip
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800b648:	f04f 3cff 	mov.w	ip, #4294967295
 800b64c:	fa0c fc0e 	lsl.w	ip, ip, lr
 800b650:	ea21 010c 	bic.w	r1, r1, ip
 800b654:	4099      	lsls	r1, r3
  if ((int32_t)(IRQn) >= 0)
 800b656:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800b658:	ea41 0102 	orr.w	r1, r1, r2
  if ((int32_t)(IRQn) >= 0)
 800b65c:	db0c      	blt.n	800b678 <HAL_NVIC_SetPriority+0x60>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800b65e:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
 800b662:	0109      	lsls	r1, r1, #4
 800b664:	f500 4061 	add.w	r0, r0, #57600	; 0xe100
 800b668:	b2c9      	uxtb	r1, r1
 800b66a:	f880 1300 	strb.w	r1, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 800b66e:	f85d fb04 	ldr.w	pc, [sp], #4
 800b672:	2200      	movs	r2, #0
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800b674:	4613      	mov	r3, r2
 800b676:	e7e7      	b.n	800b648 <HAL_NVIC_SetPriority+0x30>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800b678:	4b05      	ldr	r3, [pc, #20]	; (800b690 <HAL_NVIC_SetPriority+0x78>)
 800b67a:	f000 000f 	and.w	r0, r0, #15
 800b67e:	0109      	lsls	r1, r1, #4
 800b680:	4403      	add	r3, r0
 800b682:	b2c9      	uxtb	r1, r1
 800b684:	7619      	strb	r1, [r3, #24]
 800b686:	f85d fb04 	ldr.w	pc, [sp], #4
 800b68a:	bf00      	nop
 800b68c:	e000ed00 	.word	0xe000ed00
 800b690:	e000ecfc 	.word	0xe000ecfc

0800b694 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 800b694:	2800      	cmp	r0, #0
 800b696:	db07      	blt.n	800b6a8 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800b698:	0941      	lsrs	r1, r0, #5
 800b69a:	4a04      	ldr	r2, [pc, #16]	; (800b6ac <HAL_NVIC_EnableIRQ+0x18>)
 800b69c:	f000 001f 	and.w	r0, r0, #31
 800b6a0:	2301      	movs	r3, #1
 800b6a2:	4083      	lsls	r3, r0
 800b6a4:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 800b6a8:	4770      	bx	lr
 800b6aa:	bf00      	nop
 800b6ac:	e000e100 	.word	0xe000e100

0800b6b0 <HAL_CRC_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 800b6b0:	b180      	cbz	r0, 800b6d4 <HAL_CRC_Init+0x24>
{
 800b6b2:	b510      	push	{r4, lr}
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 800b6b4:	7943      	ldrb	r3, [r0, #5]
 800b6b6:	4604      	mov	r4, r0
 800b6b8:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800b6bc:	b11b      	cbz	r3, 800b6c6 <HAL_CRC_Init+0x16>
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 800b6be:	2301      	movs	r3, #1
 800b6c0:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 800b6c2:	2000      	movs	r0, #0
}
 800b6c4:	bd10      	pop	{r4, pc}
    hcrc->Lock = HAL_UNLOCKED;
 800b6c6:	7102      	strb	r2, [r0, #4]
    HAL_CRC_MspInit(hcrc);
 800b6c8:	f7f6 fda2 	bl	8002210 <HAL_CRC_MspInit>
  hcrc->State = HAL_CRC_STATE_READY;
 800b6cc:	2301      	movs	r3, #1
 800b6ce:	7163      	strb	r3, [r4, #5]
  return HAL_OK;
 800b6d0:	2000      	movs	r0, #0
}
 800b6d2:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800b6d4:	2001      	movs	r0, #1
}
 800b6d6:	4770      	bx	lr

0800b6d8 <HAL_DMA_Abort_IT>:
  *                 the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
  if(hdma->State != HAL_DMA_STATE_BUSY)
 800b6d8:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 800b6dc:	2b02      	cmp	r3, #2
 800b6de:	d003      	beq.n	800b6e8 <HAL_DMA_Abort_IT+0x10>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 800b6e0:	2380      	movs	r3, #128	; 0x80
 800b6e2:	6543      	str	r3, [r0, #84]	; 0x54
    return HAL_ERROR;
 800b6e4:	2001      	movs	r0, #1
 800b6e6:	4770      	bx	lr
  {
    /* Set Abort State  */
    hdma->State = HAL_DMA_STATE_ABORT;
    
    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 800b6e8:	6802      	ldr	r2, [r0, #0]
    hdma->State = HAL_DMA_STATE_ABORT;
 800b6ea:	2305      	movs	r3, #5
 800b6ec:	f880 3035 	strb.w	r3, [r0, #53]	; 0x35
    __HAL_DMA_DISABLE(hdma);
 800b6f0:	6813      	ldr	r3, [r2, #0]
 800b6f2:	f023 0301 	bic.w	r3, r3, #1
  }

  return HAL_OK;
 800b6f6:	2000      	movs	r0, #0
    __HAL_DMA_DISABLE(hdma);
 800b6f8:	6013      	str	r3, [r2, #0]
}
 800b6fa:	4770      	bx	lr

0800b6fc <HAL_DMA_GetState>:
  *               the configuration information for the specified DMA Stream.
  * @retval HAL state
  */
HAL_DMA_StateTypeDef HAL_DMA_GetState(DMA_HandleTypeDef *hdma)
{
  return hdma->State;
 800b6fc:	f890 0035 	ldrb.w	r0, [r0, #53]	; 0x35
}
 800b700:	4770      	bx	lr
 800b702:	bf00      	nop

0800b704 <FLASH_SetErrorCode>:
  * @brief  Set the specific FLASH error flag.
  * @retval None
  */
static void FLASH_SetErrorCode(void)
{ 
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_WRPERR) != RESET)
 800b704:	4b21      	ldr	r3, [pc, #132]	; (800b78c <FLASH_SetErrorCode+0x88>)
 800b706:	68da      	ldr	r2, [r3, #12]
 800b708:	06d0      	lsls	r0, r2, #27
 800b70a:	d505      	bpl.n	800b718 <FLASH_SetErrorCode+0x14>
  {
   pFlash.ErrorCode |= HAL_FLASH_ERROR_WRP;
 800b70c:	4920      	ldr	r1, [pc, #128]	; (800b790 <FLASH_SetErrorCode+0x8c>)
 800b70e:	69ca      	ldr	r2, [r1, #28]
   
   /* Clear FLASH write protection error pending bit */
   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_WRPERR);
 800b710:	2010      	movs	r0, #16
   pFlash.ErrorCode |= HAL_FLASH_ERROR_WRP;
 800b712:	4302      	orrs	r2, r0
 800b714:	61ca      	str	r2, [r1, #28]
   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_WRPERR);
 800b716:	60d8      	str	r0, [r3, #12]
  }
  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_PGAERR) != RESET)
 800b718:	4b1c      	ldr	r3, [pc, #112]	; (800b78c <FLASH_SetErrorCode+0x88>)
 800b71a:	68da      	ldr	r2, [r3, #12]
 800b71c:	0691      	lsls	r1, r2, #26
 800b71e:	d506      	bpl.n	800b72e <FLASH_SetErrorCode+0x2a>
  {
   pFlash.ErrorCode |= HAL_FLASH_ERROR_PGA;
 800b720:	491b      	ldr	r1, [pc, #108]	; (800b790 <FLASH_SetErrorCode+0x8c>)
 800b722:	69ca      	ldr	r2, [r1, #28]
   
   /* Clear FLASH Programming alignment error pending bit */
   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGAERR);
 800b724:	2020      	movs	r0, #32
   pFlash.ErrorCode |= HAL_FLASH_ERROR_PGA;
 800b726:	f042 0208 	orr.w	r2, r2, #8
 800b72a:	61ca      	str	r2, [r1, #28]
   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGAERR);
 800b72c:	60d8      	str	r0, [r3, #12]
  }
  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_PGPERR) != RESET)
 800b72e:	4b17      	ldr	r3, [pc, #92]	; (800b78c <FLASH_SetErrorCode+0x88>)
 800b730:	68da      	ldr	r2, [r3, #12]
 800b732:	0652      	lsls	r2, r2, #25
 800b734:	d506      	bpl.n	800b744 <FLASH_SetErrorCode+0x40>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGP;
 800b736:	4916      	ldr	r1, [pc, #88]	; (800b790 <FLASH_SetErrorCode+0x8c>)
 800b738:	69ca      	ldr	r2, [r1, #28]
    
    /* Clear FLASH Programming parallelism error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGPERR);
 800b73a:	2040      	movs	r0, #64	; 0x40
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGP;
 800b73c:	f042 0204 	orr.w	r2, r2, #4
 800b740:	61ca      	str	r2, [r1, #28]
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGPERR);
 800b742:	60d8      	str	r0, [r3, #12]
  }
  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_PGSERR) != RESET)
 800b744:	4b11      	ldr	r3, [pc, #68]	; (800b78c <FLASH_SetErrorCode+0x88>)
 800b746:	68da      	ldr	r2, [r3, #12]
 800b748:	0610      	lsls	r0, r2, #24
 800b74a:	d506      	bpl.n	800b75a <FLASH_SetErrorCode+0x56>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGS;
 800b74c:	4910      	ldr	r1, [pc, #64]	; (800b790 <FLASH_SetErrorCode+0x8c>)
 800b74e:	69ca      	ldr	r2, [r1, #28]
    
    /* Clear FLASH Programming sequence error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGSERR);
 800b750:	2080      	movs	r0, #128	; 0x80
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGS;
 800b752:	f042 0202 	orr.w	r2, r2, #2
 800b756:	61ca      	str	r2, [r1, #28]
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGSERR);
 800b758:	60d8      	str	r0, [r3, #12]
  }
#if defined(FLASH_SR_RDERR) 
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_RDERR) != RESET)
 800b75a:	4b0c      	ldr	r3, [pc, #48]	; (800b78c <FLASH_SetErrorCode+0x88>)
 800b75c:	68da      	ldr	r2, [r3, #12]
 800b75e:	05d1      	lsls	r1, r2, #23
 800b760:	d507      	bpl.n	800b772 <FLASH_SetErrorCode+0x6e>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_RD;
 800b762:	490b      	ldr	r1, [pc, #44]	; (800b790 <FLASH_SetErrorCode+0x8c>)
 800b764:	69ca      	ldr	r2, [r1, #28]
    
    /* Clear FLASH Proprietary readout protection error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_RDERR);
 800b766:	f44f 7080 	mov.w	r0, #256	; 0x100
    pFlash.ErrorCode |= HAL_FLASH_ERROR_RD;
 800b76a:	f042 0201 	orr.w	r2, r2, #1
 800b76e:	61ca      	str	r2, [r1, #28]
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_RDERR);
 800b770:	60d8      	str	r0, [r3, #12]
  }
#endif /* FLASH_SR_RDERR */  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_OPERR) != RESET)
 800b772:	4b06      	ldr	r3, [pc, #24]	; (800b78c <FLASH_SetErrorCode+0x88>)
 800b774:	68da      	ldr	r2, [r3, #12]
 800b776:	0792      	lsls	r2, r2, #30
 800b778:	d506      	bpl.n	800b788 <FLASH_SetErrorCode+0x84>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_OPERATION;
 800b77a:	4905      	ldr	r1, [pc, #20]	; (800b790 <FLASH_SetErrorCode+0x8c>)
 800b77c:	69ca      	ldr	r2, [r1, #28]
    
    /* Clear FLASH Operation error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_OPERR);
 800b77e:	2002      	movs	r0, #2
    pFlash.ErrorCode |= HAL_FLASH_ERROR_OPERATION;
 800b780:	f042 0220 	orr.w	r2, r2, #32
 800b784:	61ca      	str	r2, [r1, #28]
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_OPERR);
 800b786:	60d8      	str	r0, [r3, #12]
  }
}
 800b788:	4770      	bx	lr
 800b78a:	bf00      	nop
 800b78c:	40023c00 	.word	0x40023c00
 800b790:	20002a24 	.word	0x20002a24

0800b794 <HAL_FLASH_Program>:
{
 800b794:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  __HAL_LOCK(&pFlash);
 800b798:	4f4d      	ldr	r7, [pc, #308]	; (800b8d0 <HAL_FLASH_Program+0x13c>)
{
 800b79a:	469b      	mov	fp, r3
  __HAL_LOCK(&pFlash);
 800b79c:	7e3b      	ldrb	r3, [r7, #24]
 800b79e:	2b01      	cmp	r3, #1
 800b7a0:	d060      	beq.n	800b864 <HAL_FLASH_Program+0xd0>
 800b7a2:	2301      	movs	r3, #1
 800b7a4:	763b      	strb	r3, [r7, #24]
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 800b7a6:	2300      	movs	r3, #0
 800b7a8:	4681      	mov	r9, r0
 800b7aa:	468a      	mov	sl, r1
 800b7ac:	4690      	mov	r8, r2
 800b7ae:	61fb      	str	r3, [r7, #28]
  tickstart = HAL_GetTick();
 800b7b0:	f7ff ff08 	bl	800b5c4 <HAL_GetTick>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 800b7b4:	4d47      	ldr	r5, [pc, #284]	; (800b8d4 <HAL_FLASH_Program+0x140>)
  tickstart = HAL_GetTick();
 800b7b6:	4604      	mov	r4, r0
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 800b7b8:	f24c 3650 	movw	r6, #50000	; 0xc350
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 800b7bc:	e004      	b.n	800b7c8 <HAL_FLASH_Program+0x34>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 800b7be:	f7ff ff01 	bl	800b5c4 <HAL_GetTick>
 800b7c2:	1b00      	subs	r0, r0, r4
 800b7c4:	42b0      	cmp	r0, r6
 800b7c6:	d848      	bhi.n	800b85a <HAL_FLASH_Program+0xc6>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 800b7c8:	68eb      	ldr	r3, [r5, #12]
 800b7ca:	03d8      	lsls	r0, r3, #15
 800b7cc:	d4f7      	bmi.n	800b7be <HAL_FLASH_Program+0x2a>
  if (__HAL_FLASH_GET_FLAG(FLASH_FLAG_EOP) != RESET)
 800b7ce:	68eb      	ldr	r3, [r5, #12]
 800b7d0:	07d9      	lsls	r1, r3, #31
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP);
 800b7d2:	bf44      	itt	mi
 800b7d4:	2301      	movmi	r3, #1
 800b7d6:	60eb      	strmi	r3, [r5, #12]
  if(__HAL_FLASH_GET_FLAG((FLASH_FLAG_OPERR | FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR | \
 800b7d8:	4b3e      	ldr	r3, [pc, #248]	; (800b8d4 <HAL_FLASH_Program+0x140>)
 800b7da:	68da      	ldr	r2, [r3, #12]
 800b7dc:	f412 7ff9 	tst.w	r2, #498	; 0x1f2
 800b7e0:	d154      	bne.n	800b88c <HAL_FLASH_Program+0xf8>
    if(TypeProgram == FLASH_TYPEPROGRAM_BYTE)
 800b7e2:	f1b9 0f00 	cmp.w	r9, #0
 800b7e6:	d040      	beq.n	800b86a <HAL_FLASH_Program+0xd6>
    else if(TypeProgram == FLASH_TYPEPROGRAM_HALFWORD)
 800b7e8:	f1b9 0f01 	cmp.w	r9, #1
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 800b7ec:	691a      	ldr	r2, [r3, #16]
    else if(TypeProgram == FLASH_TYPEPROGRAM_HALFWORD)
 800b7ee:	d051      	beq.n	800b894 <HAL_FLASH_Program+0x100>
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 800b7f0:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 800b7f4:	611a      	str	r2, [r3, #16]
    else if(TypeProgram == FLASH_TYPEPROGRAM_WORD)
 800b7f6:	f1b9 0f02 	cmp.w	r9, #2
  FLASH->CR |= FLASH_PSIZE_WORD;
 800b7fa:	691a      	ldr	r2, [r3, #16]
    else if(TypeProgram == FLASH_TYPEPROGRAM_WORD)
 800b7fc:	d05e      	beq.n	800b8bc <HAL_FLASH_Program+0x128>
  FLASH->CR |= FLASH_PSIZE_DOUBLE_WORD;
 800b7fe:	f442 7240 	orr.w	r2, r2, #768	; 0x300
 800b802:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_PG;
 800b804:	691a      	ldr	r2, [r3, #16]
 800b806:	f042 0201 	orr.w	r2, r2, #1
 800b80a:	611a      	str	r2, [r3, #16]
  *(__IO uint32_t*)Address = (uint32_t)Data;
 800b80c:	f8ca 8000 	str.w	r8, [sl]
 800b810:	f3bf 8f6f 	isb	sy
  *(__IO uint32_t*)(Address+4) = (uint32_t)(Data >> 32);
 800b814:	f8ca b004 	str.w	fp, [sl, #4]
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 800b818:	2300      	movs	r3, #0
 800b81a:	61fb      	str	r3, [r7, #28]
  tickstart = HAL_GetTick();
 800b81c:	f7ff fed2 	bl	800b5c4 <HAL_GetTick>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 800b820:	4d2c      	ldr	r5, [pc, #176]	; (800b8d4 <HAL_FLASH_Program+0x140>)
  tickstart = HAL_GetTick();
 800b822:	4604      	mov	r4, r0
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 800b824:	f24c 3650 	movw	r6, #50000	; 0xc350
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 800b828:	e004      	b.n	800b834 <HAL_FLASH_Program+0xa0>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 800b82a:	f7ff fecb 	bl	800b5c4 <HAL_GetTick>
 800b82e:	1b00      	subs	r0, r0, r4
 800b830:	42b0      	cmp	r0, r6
 800b832:	d829      	bhi.n	800b888 <HAL_FLASH_Program+0xf4>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 800b834:	68eb      	ldr	r3, [r5, #12]
 800b836:	03da      	lsls	r2, r3, #15
 800b838:	d4f7      	bmi.n	800b82a <HAL_FLASH_Program+0x96>
  if (__HAL_FLASH_GET_FLAG(FLASH_FLAG_EOP) != RESET)
 800b83a:	68eb      	ldr	r3, [r5, #12]
 800b83c:	07db      	lsls	r3, r3, #31
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP);
 800b83e:	bf44      	itt	mi
 800b840:	2301      	movmi	r3, #1
 800b842:	60eb      	strmi	r3, [r5, #12]
  if(__HAL_FLASH_GET_FLAG((FLASH_FLAG_OPERR | FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR | \
 800b844:	4b23      	ldr	r3, [pc, #140]	; (800b8d4 <HAL_FLASH_Program+0x140>)
 800b846:	68d8      	ldr	r0, [r3, #12]
 800b848:	f410 70f9 	ands.w	r0, r0, #498	; 0x1f2
 800b84c:	d132      	bne.n	800b8b4 <HAL_FLASH_Program+0x120>
    FLASH->CR &= (~FLASH_CR_PG);  
 800b84e:	4a21      	ldr	r2, [pc, #132]	; (800b8d4 <HAL_FLASH_Program+0x140>)
 800b850:	6913      	ldr	r3, [r2, #16]
 800b852:	f023 0301 	bic.w	r3, r3, #1
 800b856:	6113      	str	r3, [r2, #16]
 800b858:	e000      	b.n	800b85c <HAL_FLASH_Program+0xc8>
 800b85a:	2003      	movs	r0, #3
  __HAL_UNLOCK(&pFlash);
 800b85c:	2300      	movs	r3, #0
 800b85e:	763b      	strb	r3, [r7, #24]
}
 800b860:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  __HAL_LOCK(&pFlash);
 800b864:	2002      	movs	r0, #2
}
 800b866:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 800b86a:	691a      	ldr	r2, [r3, #16]
 800b86c:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 800b870:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_PSIZE_BYTE;
 800b872:	691a      	ldr	r2, [r3, #16]
 800b874:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_PG;
 800b876:	691a      	ldr	r2, [r3, #16]
      FLASH_Program_Byte(Address, (uint8_t) Data);
 800b878:	fa5f f888 	uxtb.w	r8, r8
  FLASH->CR |= FLASH_CR_PG;
 800b87c:	f042 0201 	orr.w	r2, r2, #1
 800b880:	611a      	str	r2, [r3, #16]
  *(__IO uint8_t*)Address = Data;
 800b882:	f88a 8000 	strb.w	r8, [sl]
}
 800b886:	e7c7      	b.n	800b818 <HAL_FLASH_Program+0x84>
        return HAL_TIMEOUT;
 800b888:	2003      	movs	r0, #3
 800b88a:	e7e0      	b.n	800b84e <HAL_FLASH_Program+0xba>
    FLASH_SetErrorCode();
 800b88c:	f7ff ff3a 	bl	800b704 <FLASH_SetErrorCode>
    return HAL_ERROR;
 800b890:	2001      	movs	r0, #1
 800b892:	e7e3      	b.n	800b85c <HAL_FLASH_Program+0xc8>
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 800b894:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 800b898:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_PSIZE_HALF_WORD;
 800b89a:	691a      	ldr	r2, [r3, #16]
 800b89c:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800b8a0:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_PG;
 800b8a2:	691a      	ldr	r2, [r3, #16]
      FLASH_Program_HalfWord(Address, (uint16_t) Data);
 800b8a4:	fa1f f888 	uxth.w	r8, r8
  FLASH->CR |= FLASH_CR_PG;
 800b8a8:	f042 0201 	orr.w	r2, r2, #1
 800b8ac:	611a      	str	r2, [r3, #16]
  *(__IO uint16_t*)Address = Data;
 800b8ae:	f8aa 8000 	strh.w	r8, [sl]
}
 800b8b2:	e7b1      	b.n	800b818 <HAL_FLASH_Program+0x84>
    FLASH_SetErrorCode();
 800b8b4:	f7ff ff26 	bl	800b704 <FLASH_SetErrorCode>
    return HAL_ERROR;
 800b8b8:	2001      	movs	r0, #1
 800b8ba:	e7c8      	b.n	800b84e <HAL_FLASH_Program+0xba>
  FLASH->CR |= FLASH_PSIZE_WORD;
 800b8bc:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b8c0:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_PG;
 800b8c2:	691a      	ldr	r2, [r3, #16]
 800b8c4:	f042 0201 	orr.w	r2, r2, #1
 800b8c8:	611a      	str	r2, [r3, #16]
  *(__IO uint32_t*)Address = Data;
 800b8ca:	f8ca 8000 	str.w	r8, [sl]
}
 800b8ce:	e7a3      	b.n	800b818 <HAL_FLASH_Program+0x84>
 800b8d0:	20002a24 	.word	0x20002a24
 800b8d4:	40023c00 	.word	0x40023c00

0800b8d8 <HAL_FLASH_Unlock>:
  if(READ_BIT(FLASH->CR, FLASH_CR_LOCK) != RESET)
 800b8d8:	4b06      	ldr	r3, [pc, #24]	; (800b8f4 <HAL_FLASH_Unlock+0x1c>)
 800b8da:	691a      	ldr	r2, [r3, #16]
 800b8dc:	2a00      	cmp	r2, #0
 800b8de:	db01      	blt.n	800b8e4 <HAL_FLASH_Unlock+0xc>
  HAL_StatusTypeDef status = HAL_OK;
 800b8e0:	2000      	movs	r0, #0
}
 800b8e2:	4770      	bx	lr
    WRITE_REG(FLASH->KEYR, FLASH_KEY1);
 800b8e4:	4904      	ldr	r1, [pc, #16]	; (800b8f8 <HAL_FLASH_Unlock+0x20>)
    WRITE_REG(FLASH->KEYR, FLASH_KEY2);
 800b8e6:	4a05      	ldr	r2, [pc, #20]	; (800b8fc <HAL_FLASH_Unlock+0x24>)
    WRITE_REG(FLASH->KEYR, FLASH_KEY1);
 800b8e8:	6059      	str	r1, [r3, #4]
    WRITE_REG(FLASH->KEYR, FLASH_KEY2);
 800b8ea:	605a      	str	r2, [r3, #4]
    if(READ_BIT(FLASH->CR, FLASH_CR_LOCK) != RESET)
 800b8ec:	6918      	ldr	r0, [r3, #16]
  HAL_StatusTypeDef status = HAL_OK;
 800b8ee:	0fc0      	lsrs	r0, r0, #31
 800b8f0:	4770      	bx	lr
 800b8f2:	bf00      	nop
 800b8f4:	40023c00 	.word	0x40023c00
 800b8f8:	45670123 	.word	0x45670123
 800b8fc:	cdef89ab 	.word	0xcdef89ab

0800b900 <HAL_FLASH_Lock>:
  FLASH->CR |= FLASH_CR_LOCK;
 800b900:	4a03      	ldr	r2, [pc, #12]	; (800b910 <HAL_FLASH_Lock+0x10>)
 800b902:	6913      	ldr	r3, [r2, #16]
 800b904:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
}
 800b908:	2000      	movs	r0, #0
  FLASH->CR |= FLASH_CR_LOCK;
 800b90a:	6113      	str	r3, [r2, #16]
}
 800b90c:	4770      	bx	lr
 800b90e:	bf00      	nop
 800b910:	40023c00 	.word	0x40023c00

0800b914 <HAL_FLASH_GetError>:
   return pFlash.ErrorCode;
 800b914:	4b01      	ldr	r3, [pc, #4]	; (800b91c <HAL_FLASH_GetError+0x8>)
 800b916:	69d8      	ldr	r0, [r3, #28]
}  
 800b918:	4770      	bx	lr
 800b91a:	bf00      	nop
 800b91c:	20002a24 	.word	0x20002a24

0800b920 <FLASH_WaitForLastOperation>:
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 800b920:	4b14      	ldr	r3, [pc, #80]	; (800b974 <FLASH_WaitForLastOperation+0x54>)
{ 
 800b922:	b570      	push	{r4, r5, r6, lr}
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 800b924:	2200      	movs	r2, #0
{ 
 800b926:	4604      	mov	r4, r0
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 800b928:	61da      	str	r2, [r3, #28]
  tickstart = HAL_GetTick();
 800b92a:	f7ff fe4b 	bl	800b5c4 <HAL_GetTick>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 800b92e:	4e12      	ldr	r6, [pc, #72]	; (800b978 <FLASH_WaitForLastOperation+0x58>)
  tickstart = HAL_GetTick();
 800b930:	4605      	mov	r5, r0
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 800b932:	1c63      	adds	r3, r4, #1
 800b934:	d10f      	bne.n	800b956 <FLASH_WaitForLastOperation+0x36>
 800b936:	4a10      	ldr	r2, [pc, #64]	; (800b978 <FLASH_WaitForLastOperation+0x58>)
 800b938:	68d3      	ldr	r3, [r2, #12]
 800b93a:	03d8      	lsls	r0, r3, #15
 800b93c:	d4fc      	bmi.n	800b938 <FLASH_WaitForLastOperation+0x18>
  if (__HAL_FLASH_GET_FLAG(FLASH_FLAG_EOP) != RESET)
 800b93e:	4b0e      	ldr	r3, [pc, #56]	; (800b978 <FLASH_WaitForLastOperation+0x58>)
 800b940:	68da      	ldr	r2, [r3, #12]
 800b942:	07d2      	lsls	r2, r2, #31
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP);
 800b944:	bf44      	itt	mi
 800b946:	2201      	movmi	r2, #1
 800b948:	60da      	strmi	r2, [r3, #12]
  if(__HAL_FLASH_GET_FLAG((FLASH_FLAG_OPERR | FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR | \
 800b94a:	4b0b      	ldr	r3, [pc, #44]	; (800b978 <FLASH_WaitForLastOperation+0x58>)
 800b94c:	68d8      	ldr	r0, [r3, #12]
 800b94e:	f410 70f9 	ands.w	r0, r0, #498	; 0x1f2
 800b952:	d10b      	bne.n	800b96c <FLASH_WaitForLastOperation+0x4c>
}  
 800b954:	bd70      	pop	{r4, r5, r6, pc}
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 800b956:	68f3      	ldr	r3, [r6, #12]
 800b958:	03d9      	lsls	r1, r3, #15
 800b95a:	d5f0      	bpl.n	800b93e <FLASH_WaitForLastOperation+0x1e>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 800b95c:	b124      	cbz	r4, 800b968 <FLASH_WaitForLastOperation+0x48>
 800b95e:	f7ff fe31 	bl	800b5c4 <HAL_GetTick>
 800b962:	1b40      	subs	r0, r0, r5
 800b964:	42a0      	cmp	r0, r4
 800b966:	d9e4      	bls.n	800b932 <FLASH_WaitForLastOperation+0x12>
        return HAL_TIMEOUT;
 800b968:	2003      	movs	r0, #3
}  
 800b96a:	bd70      	pop	{r4, r5, r6, pc}
    FLASH_SetErrorCode();
 800b96c:	f7ff feca 	bl	800b704 <FLASH_SetErrorCode>
    return HAL_ERROR;
 800b970:	2001      	movs	r0, #1
}  
 800b972:	bd70      	pop	{r4, r5, r6, pc}
 800b974:	20002a24 	.word	0x20002a24
 800b978:	40023c00 	.word	0x40023c00

0800b97c <FLASH_FlushCaches>:
  * @retval None
  */
void FLASH_FlushCaches(void)
{
  /* Flush instruction cache  */
  if (READ_BIT(FLASH->ACR, FLASH_ACR_ICEN) != RESET)
 800b97c:	4b14      	ldr	r3, [pc, #80]	; (800b9d0 <FLASH_FlushCaches+0x54>)
 800b97e:	681a      	ldr	r2, [r3, #0]
 800b980:	0591      	lsls	r1, r2, #22
 800b982:	d50f      	bpl.n	800b9a4 <FLASH_FlushCaches+0x28>
  {
    /* Disable instruction cache  */
    __HAL_FLASH_INSTRUCTION_CACHE_DISABLE();
 800b984:	681a      	ldr	r2, [r3, #0]
 800b986:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 800b98a:	601a      	str	r2, [r3, #0]
    /* Reset instruction cache */
    __HAL_FLASH_INSTRUCTION_CACHE_RESET();
 800b98c:	681a      	ldr	r2, [r3, #0]
 800b98e:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800b992:	601a      	str	r2, [r3, #0]
 800b994:	681a      	ldr	r2, [r3, #0]
 800b996:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800b99a:	601a      	str	r2, [r3, #0]
    /* Enable instruction cache */
    __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 800b99c:	681a      	ldr	r2, [r3, #0]
 800b99e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b9a2:	601a      	str	r2, [r3, #0]
  }

  /* Flush data cache */
  if (READ_BIT(FLASH->ACR, FLASH_ACR_DCEN) != RESET)
 800b9a4:	4b0a      	ldr	r3, [pc, #40]	; (800b9d0 <FLASH_FlushCaches+0x54>)
 800b9a6:	681a      	ldr	r2, [r3, #0]
 800b9a8:	0552      	lsls	r2, r2, #21
 800b9aa:	d50f      	bpl.n	800b9cc <FLASH_FlushCaches+0x50>
  {
    /* Disable data cache  */
    __HAL_FLASH_DATA_CACHE_DISABLE();
 800b9ac:	681a      	ldr	r2, [r3, #0]
 800b9ae:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b9b2:	601a      	str	r2, [r3, #0]
    /* Reset data cache */
    __HAL_FLASH_DATA_CACHE_RESET();
 800b9b4:	681a      	ldr	r2, [r3, #0]
 800b9b6:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800b9ba:	601a      	str	r2, [r3, #0]
 800b9bc:	681a      	ldr	r2, [r3, #0]
 800b9be:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 800b9c2:	601a      	str	r2, [r3, #0]
    /* Enable data cache */
    __HAL_FLASH_DATA_CACHE_ENABLE();
 800b9c4:	681a      	ldr	r2, [r3, #0]
 800b9c6:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800b9ca:	601a      	str	r2, [r3, #0]
  }
}
 800b9cc:	4770      	bx	lr
 800b9ce:	bf00      	nop
 800b9d0:	40023c00 	.word	0x40023c00

0800b9d4 <HAL_FLASHEx_Erase>:
{
 800b9d4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  __HAL_LOCK(&pFlash);
 800b9d8:	4f44      	ldr	r7, [pc, #272]	; (800baec <HAL_FLASHEx_Erase+0x118>)
 800b9da:	7e3b      	ldrb	r3, [r7, #24]
 800b9dc:	2b01      	cmp	r3, #1
 800b9de:	d053      	beq.n	800ba88 <HAL_FLASHEx_Erase+0xb4>
 800b9e0:	2301      	movs	r3, #1
 800b9e2:	4681      	mov	r9, r0
  status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 800b9e4:	f24c 3050 	movw	r0, #50000	; 0xc350
 800b9e8:	4688      	mov	r8, r1
  __HAL_LOCK(&pFlash);
 800b9ea:	763b      	strb	r3, [r7, #24]
  status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 800b9ec:	f7ff ff98 	bl	800b920 <FLASH_WaitForLastOperation>
  if (status == HAL_OK)
 800b9f0:	4606      	mov	r6, r0
 800b9f2:	2800      	cmp	r0, #0
 800b9f4:	d143      	bne.n	800ba7e <HAL_FLASHEx_Erase+0xaa>
    *SectorError = 0xFFFFFFFFU;
 800b9f6:	f04f 33ff 	mov.w	r3, #4294967295
 800b9fa:	f8c8 3000 	str.w	r3, [r8]
    if (pEraseInit->TypeErase == FLASH_TYPEERASE_MASSERASE)
 800b9fe:	f8d9 3000 	ldr.w	r3, [r9]
 800ba02:	2b01      	cmp	r3, #1
 800ba04:	d044      	beq.n	800ba90 <HAL_FLASHEx_Erase+0xbc>
      for (index = pEraseInit->Sector; index < (pEraseInit->NbSectors + pEraseInit->Sector); index++)
 800ba06:	e9d9 5302 	ldrd	r5, r3, [r9, #8]
 800ba0a:	442b      	add	r3, r5
 800ba0c:	429d      	cmp	r5, r3
 800ba0e:	d234      	bcs.n	800ba7a <HAL_FLASHEx_Erase+0xa6>
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 800ba10:	4c37      	ldr	r4, [pc, #220]	; (800baf0 <HAL_FLASHEx_Erase+0x11c>)
 800ba12:	e005      	b.n	800ba20 <HAL_FLASHEx_Erase+0x4c>
      for (index = pEraseInit->Sector; index < (pEraseInit->NbSectors + pEraseInit->Sector); index++)
 800ba14:	e9d9 2302 	ldrd	r2, r3, [r9, #8]
 800ba18:	3501      	adds	r5, #1
 800ba1a:	4413      	add	r3, r2
 800ba1c:	42ab      	cmp	r3, r5
 800ba1e:	d92c      	bls.n	800ba7a <HAL_FLASHEx_Erase+0xa6>
  if (VoltageRange == FLASH_VOLTAGE_RANGE_1)
 800ba20:	f899 3010 	ldrb.w	r3, [r9, #16]
 800ba24:	2b02      	cmp	r3, #2
        FLASH_Erase_Sector(index, (uint8_t) pEraseInit->VoltageRange);
 800ba26:	f44f 7140 	mov.w	r1, #768	; 0x300
 800ba2a:	bf98      	it	ls
 800ba2c:	0219      	lslls	r1, r3, #8
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 800ba2e:	6923      	ldr	r3, [r4, #16]
 800ba30:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800ba34:	6123      	str	r3, [r4, #16]
  FLASH->CR |= tmp_psize;
 800ba36:	6923      	ldr	r3, [r4, #16]
 800ba38:	430b      	orrs	r3, r1
 800ba3a:	6123      	str	r3, [r4, #16]
  CLEAR_BIT(FLASH->CR, FLASH_CR_SNB);
 800ba3c:	6923      	ldr	r3, [r4, #16]
 800ba3e:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800ba42:	6123      	str	r3, [r4, #16]
  FLASH->CR |= FLASH_CR_SER | (Sector << FLASH_CR_SNB_Pos);
 800ba44:	6923      	ldr	r3, [r4, #16]
  if (Sector > FLASH_SECTOR_11)
 800ba46:	2d0b      	cmp	r5, #11
    Sector += 4U;
 800ba48:	bf8c      	ite	hi
 800ba4a:	1d2a      	addhi	r2, r5, #4
 800ba4c:	462a      	movls	r2, r5
  FLASH->CR |= FLASH_CR_SER | (Sector << FLASH_CR_SNB_Pos);
 800ba4e:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800ba52:	f043 0302 	orr.w	r3, r3, #2
 800ba56:	6123      	str	r3, [r4, #16]
  FLASH->CR |= FLASH_CR_STRT;
 800ba58:	6923      	ldr	r3, [r4, #16]
 800ba5a:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800ba5e:	6123      	str	r3, [r4, #16]
        status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 800ba60:	f24c 3050 	movw	r0, #50000	; 0xc350
 800ba64:	f7ff ff5c 	bl	800b920 <FLASH_WaitForLastOperation>
        CLEAR_BIT(FLASH->CR, (FLASH_CR_SER | FLASH_CR_SNB));
 800ba68:	6923      	ldr	r3, [r4, #16]
 800ba6a:	f023 03fa 	bic.w	r3, r3, #250	; 0xfa
 800ba6e:	6123      	str	r3, [r4, #16]
        if (status != HAL_OK)
 800ba70:	2800      	cmp	r0, #0
 800ba72:	d0cf      	beq.n	800ba14 <HAL_FLASHEx_Erase+0x40>
          *SectorError = index;
 800ba74:	f8c8 5000 	str.w	r5, [r8]
        status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 800ba78:	4606      	mov	r6, r0
    FLASH_FlushCaches();
 800ba7a:	f7ff ff7f 	bl	800b97c <FLASH_FlushCaches>
  __HAL_UNLOCK(&pFlash);
 800ba7e:	2300      	movs	r3, #0
 800ba80:	763b      	strb	r3, [r7, #24]
}
 800ba82:	4630      	mov	r0, r6
 800ba84:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  __HAL_LOCK(&pFlash);
 800ba88:	2602      	movs	r6, #2
}
 800ba8a:	4630      	mov	r0, r6
 800ba8c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 800ba90:	4a17      	ldr	r2, [pc, #92]	; (800baf0 <HAL_FLASHEx_Erase+0x11c>)
      FLASH_MassErase((uint8_t) pEraseInit->VoltageRange, pEraseInit->Banks);
 800ba92:	f8d9 0004 	ldr.w	r0, [r9, #4]
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 800ba96:	6911      	ldr	r1, [r2, #16]
      FLASH_MassErase((uint8_t) pEraseInit->VoltageRange, pEraseInit->Banks);
 800ba98:	f8d9 3010 	ldr.w	r3, [r9, #16]
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 800ba9c:	f421 7140 	bic.w	r1, r1, #768	; 0x300
 800baa0:	6111      	str	r1, [r2, #16]
  if (Banks == FLASH_BANK_BOTH)
 800baa2:	2803      	cmp	r0, #3
    FLASH->CR |= FLASH_MER_BIT;
 800baa4:	6911      	ldr	r1, [r2, #16]
  if (Banks == FLASH_BANK_BOTH)
 800baa6:	d01a      	beq.n	800bade <HAL_FLASHEx_Erase+0x10a>
  else if (Banks == FLASH_BANK_1)
 800baa8:	2801      	cmp	r0, #1
    FLASH->CR |= FLASH_CR_MER1;
 800baaa:	bf0c      	ite	eq
 800baac:	f041 0104 	orreq.w	r1, r1, #4
    FLASH->CR |= FLASH_CR_MER2;
 800bab0:	f441 4100 	orrne.w	r1, r1, #32768	; 0x8000
 800bab4:	6111      	str	r1, [r2, #16]
  FLASH->CR |= FLASH_CR_STRT | ((uint32_t)VoltageRange << 8U);
 800bab6:	4c0e      	ldr	r4, [pc, #56]	; (800baf0 <HAL_FLASHEx_Erase+0x11c>)
 800bab8:	021b      	lsls	r3, r3, #8
 800baba:	6922      	ldr	r2, [r4, #16]
 800babc:	b29b      	uxth	r3, r3
 800babe:	4313      	orrs	r3, r2
 800bac0:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800bac4:	6123      	str	r3, [r4, #16]
      status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 800bac6:	f24c 3050 	movw	r0, #50000	; 0xc350
 800baca:	f7ff ff29 	bl	800b920 <FLASH_WaitForLastOperation>
      FLASH->CR &= (~FLASH_MER_BIT);
 800bace:	6923      	ldr	r3, [r4, #16]
 800bad0:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 800bad4:	f023 0304 	bic.w	r3, r3, #4
      status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 800bad8:	4606      	mov	r6, r0
      FLASH->CR &= (~FLASH_MER_BIT);
 800bada:	6123      	str	r3, [r4, #16]
 800badc:	e7cd      	b.n	800ba7a <HAL_FLASHEx_Erase+0xa6>
    FLASH->CR |= FLASH_MER_BIT;
 800bade:	f441 4100 	orr.w	r1, r1, #32768	; 0x8000
 800bae2:	f041 0104 	orr.w	r1, r1, #4
 800bae6:	6111      	str	r1, [r2, #16]
 800bae8:	e7e5      	b.n	800bab6 <HAL_FLASHEx_Erase+0xe2>
 800baea:	bf00      	nop
 800baec:	20002a24 	.word	0x20002a24
 800baf0:	40023c00 	.word	0x40023c00

0800baf4 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 800baf4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  for(position = 0U; position < GPIO_NUMBER; position++)
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800baf8:	2200      	movs	r2, #0
 800bafa:	680c      	ldr	r4, [r1, #0]
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800bafc:	f8df a260 	ldr.w	sl, [pc, #608]	; 800bd60 <HAL_GPIO_Init+0x26c>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 800bb00:	4e90      	ldr	r6, [pc, #576]	; (800bd44 <HAL_GPIO_Init+0x250>)
{
 800bb02:	b085      	sub	sp, #20
  for(position = 0U; position < GPIO_NUMBER; position++)
 800bb04:	4613      	mov	r3, r2
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800bb06:	4689      	mov	r9, r1
 800bb08:	e005      	b.n	800bb16 <HAL_GPIO_Init+0x22>
  for(position = 0U; position < GPIO_NUMBER; position++)
 800bb0a:	3301      	adds	r3, #1
 800bb0c:	2b10      	cmp	r3, #16
 800bb0e:	f102 0202 	add.w	r2, r2, #2
 800bb12:	f000 8095 	beq.w	800bc40 <HAL_GPIO_Init+0x14c>
    ioposition = 0x01U << position;
 800bb16:	2101      	movs	r1, #1
 800bb18:	4099      	lsls	r1, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800bb1a:	ea01 0b04 	and.w	fp, r1, r4
    if(iocurrent == ioposition)
 800bb1e:	43a1      	bics	r1, r4
 800bb20:	d1f3      	bne.n	800bb0a <HAL_GPIO_Init+0x16>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 800bb22:	f8d9 c004 	ldr.w	ip, [r9, #4]
 800bb26:	f00c 0103 	and.w	r1, ip, #3
 800bb2a:	1e4d      	subs	r5, r1, #1
 800bb2c:	2d01      	cmp	r5, #1
 800bb2e:	f240 808a 	bls.w	800bc46 <HAL_GPIO_Init+0x152>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 800bb32:	2903      	cmp	r1, #3
 800bb34:	f040 80ca 	bne.w	800bccc <HAL_GPIO_Init+0x1d8>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800bb38:	4091      	lsls	r1, r2
 800bb3a:	43cd      	mvns	r5, r1
      temp = GPIOx->MODER;
 800bb3c:	6807      	ldr	r7, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 800bb3e:	403d      	ands	r5, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 800bb40:	4329      	orrs	r1, r5
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 800bb42:	f41c 3f40 	tst.w	ip, #196608	; 0x30000
      GPIOx->MODER = temp;
 800bb46:	6001      	str	r1, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 800bb48:	d0df      	beq.n	800bb0a <HAL_GPIO_Init+0x16>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800bb4a:	2100      	movs	r1, #0
 800bb4c:	9103      	str	r1, [sp, #12]
 800bb4e:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 800bb52:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 800bb56:	f8ca 1044 	str.w	r1, [sl, #68]	; 0x44
 800bb5a:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 800bb5e:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 800bb62:	9103      	str	r1, [sp, #12]
 800bb64:	9903      	ldr	r1, [sp, #12]
        temp = SYSCFG->EXTICR[position >> 2U];
 800bb66:	f023 0103 	bic.w	r1, r3, #3
 800bb6a:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 800bb6e:	f501 319c 	add.w	r1, r1, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800bb72:	f003 0703 	and.w	r7, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 800bb76:	688d      	ldr	r5, [r1, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800bb78:	00bf      	lsls	r7, r7, #2
 800bb7a:	f04f 0e0f 	mov.w	lr, #15
 800bb7e:	fa0e fe07 	lsl.w	lr, lr, r7
 800bb82:	ea25 080e 	bic.w	r8, r5, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800bb86:	4d70      	ldr	r5, [pc, #448]	; (800bd48 <HAL_GPIO_Init+0x254>)
 800bb88:	42a8      	cmp	r0, r5
 800bb8a:	d02e      	beq.n	800bbea <HAL_GPIO_Init+0xf6>
 800bb8c:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800bb90:	42a8      	cmp	r0, r5
 800bb92:	f000 809f 	beq.w	800bcd4 <HAL_GPIO_Init+0x1e0>
 800bb96:	4d6d      	ldr	r5, [pc, #436]	; (800bd4c <HAL_GPIO_Init+0x258>)
 800bb98:	42a8      	cmp	r0, r5
 800bb9a:	f000 80a2 	beq.w	800bce2 <HAL_GPIO_Init+0x1ee>
 800bb9e:	4d6c      	ldr	r5, [pc, #432]	; (800bd50 <HAL_GPIO_Init+0x25c>)
 800bba0:	42a8      	cmp	r0, r5
 800bba2:	f000 80a5 	beq.w	800bcf0 <HAL_GPIO_Init+0x1fc>
 800bba6:	4d6b      	ldr	r5, [pc, #428]	; (800bd54 <HAL_GPIO_Init+0x260>)
 800bba8:	42a8      	cmp	r0, r5
 800bbaa:	f000 80a8 	beq.w	800bcfe <HAL_GPIO_Init+0x20a>
 800bbae:	4d6a      	ldr	r5, [pc, #424]	; (800bd58 <HAL_GPIO_Init+0x264>)
 800bbb0:	42a8      	cmp	r0, r5
 800bbb2:	f000 80b2 	beq.w	800bd1a <HAL_GPIO_Init+0x226>
 800bbb6:	4d69      	ldr	r5, [pc, #420]	; (800bd5c <HAL_GPIO_Init+0x268>)
 800bbb8:	42a8      	cmp	r0, r5
 800bbba:	f000 80b5 	beq.w	800bd28 <HAL_GPIO_Init+0x234>
 800bbbe:	f8df e1a4 	ldr.w	lr, [pc, #420]	; 800bd64 <HAL_GPIO_Init+0x270>
 800bbc2:	4570      	cmp	r0, lr
 800bbc4:	f000 80a2 	beq.w	800bd0c <HAL_GPIO_Init+0x218>
 800bbc8:	f8df e19c 	ldr.w	lr, [pc, #412]	; 800bd68 <HAL_GPIO_Init+0x274>
 800bbcc:	4570      	cmp	r0, lr
 800bbce:	f000 80b2 	beq.w	800bd36 <HAL_GPIO_Init+0x242>
 800bbd2:	f8df e198 	ldr.w	lr, [pc, #408]	; 800bd6c <HAL_GPIO_Init+0x278>
 800bbd6:	4570      	cmp	r0, lr
 800bbd8:	bf0c      	ite	eq
 800bbda:	f04f 0e09 	moveq.w	lr, #9
 800bbde:	f04f 0e0a 	movne.w	lr, #10
 800bbe2:	fa0e f707 	lsl.w	r7, lr, r7
 800bbe6:	ea48 0807 	orr.w	r8, r8, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
 800bbea:	f8c1 8008 	str.w	r8, [r1, #8]
        temp = EXTI->RTSR;
 800bbee:	68b1      	ldr	r1, [r6, #8]
        temp &= ~((uint32_t)iocurrent);
 800bbf0:	ea6f 050b 	mvn.w	r5, fp
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 800bbf4:	f41c 1f80 	tst.w	ip, #1048576	; 0x100000
        temp &= ~((uint32_t)iocurrent);
 800bbf8:	bf0c      	ite	eq
 800bbfa:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 800bbfc:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->RTSR = temp;
 800bc00:	60b1      	str	r1, [r6, #8]

        temp = EXTI->FTSR;
 800bc02:	68f1      	ldr	r1, [r6, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 800bc04:	f41c 1f00 	tst.w	ip, #2097152	; 0x200000
        temp &= ~((uint32_t)iocurrent);
 800bc08:	bf0c      	ite	eq
 800bc0a:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 800bc0c:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->FTSR = temp;
 800bc10:	60f1      	str	r1, [r6, #12]

        temp = EXTI->EMR;
 800bc12:	6871      	ldr	r1, [r6, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 800bc14:	f41c 3f00 	tst.w	ip, #131072	; 0x20000
        temp &= ~((uint32_t)iocurrent);
 800bc18:	bf0c      	ite	eq
 800bc1a:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 800bc1c:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->EMR = temp;
 800bc20:	6071      	str	r1, [r6, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 800bc22:	6831      	ldr	r1, [r6, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 800bc24:	f41c 3f80 	tst.w	ip, #65536	; 0x10000
  for(position = 0U; position < GPIO_NUMBER; position++)
 800bc28:	f103 0301 	add.w	r3, r3, #1
        temp &= ~((uint32_t)iocurrent);
 800bc2c:	bf0c      	ite	eq
 800bc2e:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 800bc30:	ea4b 0101 	orrne.w	r1, fp, r1
  for(position = 0U; position < GPIO_NUMBER; position++)
 800bc34:	2b10      	cmp	r3, #16
        }
        EXTI->IMR = temp;
 800bc36:	6031      	str	r1, [r6, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 800bc38:	f102 0202 	add.w	r2, r2, #2
 800bc3c:	f47f af6b 	bne.w	800bb16 <HAL_GPIO_Init+0x22>
      }
    }
  }
}
 800bc40:	b005      	add	sp, #20
 800bc42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= (GPIO_Init->Speed << (position * 2U));
 800bc46:	f8d9 500c 	ldr.w	r5, [r9, #12]
        temp = GPIOx->OSPEEDR; 
 800bc4a:	f8d0 e008 	ldr.w	lr, [r0, #8]
        temp |= (GPIO_Init->Speed << (position * 2U));
 800bc4e:	fa05 f702 	lsl.w	r7, r5, r2
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800bc52:	2503      	movs	r5, #3
 800bc54:	fa05 f802 	lsl.w	r8, r5, r2
 800bc58:	ea2e 0e08 	bic.w	lr, lr, r8
        temp |= (GPIO_Init->Speed << (position * 2U));
 800bc5c:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 800bc60:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 800bc62:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 800bc64:	ea27 0e0b 	bic.w	lr, r7, fp
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 800bc68:	f3cc 1700 	ubfx	r7, ip, #4, #1
 800bc6c:	409f      	lsls	r7, r3
 800bc6e:	ea47 070e 	orr.w	r7, r7, lr
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800bc72:	ea6f 0508 	mvn.w	r5, r8
        GPIOx->OTYPER = temp;
 800bc76:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 800bc78:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 800bc7a:	ea07 0e05 	and.w	lr, r7, r5
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 800bc7e:	f8d9 7008 	ldr.w	r7, [r9, #8]
 800bc82:	4097      	lsls	r7, r2
 800bc84:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800bc88:	2902      	cmp	r1, #2
        GPIOx->PUPDR = temp;
 800bc8a:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800bc8c:	fa01 f102 	lsl.w	r1, r1, r2
 800bc90:	f47f af54 	bne.w	800bb3c <HAL_GPIO_Init+0x48>
        temp = GPIOx->AFR[position >> 3U];
 800bc94:	ea4f 0ed3 	mov.w	lr, r3, lsr #3
 800bc98:	eb00 0e8e 	add.w	lr, r0, lr, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800bc9c:	f003 0807 	and.w	r8, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 800bca0:	f8de 7020 	ldr.w	r7, [lr, #32]
 800bca4:	9700      	str	r7, [sp, #0]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800bca6:	f8d9 7010 	ldr.w	r7, [r9, #16]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800bcaa:	ea4f 0888 	mov.w	r8, r8, lsl #2
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800bcae:	fa07 f708 	lsl.w	r7, r7, r8
 800bcb2:	9701      	str	r7, [sp, #4]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800bcb4:	270f      	movs	r7, #15
 800bcb6:	fa07 f808 	lsl.w	r8, r7, r8
 800bcba:	9f00      	ldr	r7, [sp, #0]
 800bcbc:	ea27 0808 	bic.w	r8, r7, r8
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800bcc0:	9f01      	ldr	r7, [sp, #4]
 800bcc2:	ea47 0708 	orr.w	r7, r7, r8
        GPIOx->AFR[position >> 3U] = temp;
 800bcc6:	f8ce 7020 	str.w	r7, [lr, #32]
 800bcca:	e737      	b.n	800bb3c <HAL_GPIO_Init+0x48>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800bccc:	2503      	movs	r5, #3
 800bcce:	4095      	lsls	r5, r2
 800bcd0:	43ed      	mvns	r5, r5
 800bcd2:	e7d1      	b.n	800bc78 <HAL_GPIO_Init+0x184>
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800bcd4:	f04f 0e01 	mov.w	lr, #1
 800bcd8:	fa0e f707 	lsl.w	r7, lr, r7
 800bcdc:	ea48 0807 	orr.w	r8, r8, r7
 800bce0:	e783      	b.n	800bbea <HAL_GPIO_Init+0xf6>
 800bce2:	f04f 0e02 	mov.w	lr, #2
 800bce6:	fa0e f707 	lsl.w	r7, lr, r7
 800bcea:	ea48 0807 	orr.w	r8, r8, r7
 800bcee:	e77c      	b.n	800bbea <HAL_GPIO_Init+0xf6>
 800bcf0:	f04f 0e03 	mov.w	lr, #3
 800bcf4:	fa0e f707 	lsl.w	r7, lr, r7
 800bcf8:	ea48 0807 	orr.w	r8, r8, r7
 800bcfc:	e775      	b.n	800bbea <HAL_GPIO_Init+0xf6>
 800bcfe:	f04f 0e04 	mov.w	lr, #4
 800bd02:	fa0e f707 	lsl.w	r7, lr, r7
 800bd06:	ea48 0807 	orr.w	r8, r8, r7
 800bd0a:	e76e      	b.n	800bbea <HAL_GPIO_Init+0xf6>
 800bd0c:	f04f 0e07 	mov.w	lr, #7
 800bd10:	fa0e f707 	lsl.w	r7, lr, r7
 800bd14:	ea48 0807 	orr.w	r8, r8, r7
 800bd18:	e767      	b.n	800bbea <HAL_GPIO_Init+0xf6>
 800bd1a:	f04f 0e05 	mov.w	lr, #5
 800bd1e:	fa0e f707 	lsl.w	r7, lr, r7
 800bd22:	ea48 0807 	orr.w	r8, r8, r7
 800bd26:	e760      	b.n	800bbea <HAL_GPIO_Init+0xf6>
 800bd28:	f04f 0e06 	mov.w	lr, #6
 800bd2c:	fa0e f707 	lsl.w	r7, lr, r7
 800bd30:	ea48 0807 	orr.w	r8, r8, r7
 800bd34:	e759      	b.n	800bbea <HAL_GPIO_Init+0xf6>
 800bd36:	f04f 0e08 	mov.w	lr, #8
 800bd3a:	fa0e f707 	lsl.w	r7, lr, r7
 800bd3e:	ea48 0807 	orr.w	r8, r8, r7
 800bd42:	e752      	b.n	800bbea <HAL_GPIO_Init+0xf6>
 800bd44:	40013c00 	.word	0x40013c00
 800bd48:	40020000 	.word	0x40020000
 800bd4c:	40020800 	.word	0x40020800
 800bd50:	40020c00 	.word	0x40020c00
 800bd54:	40021000 	.word	0x40021000
 800bd58:	40021400 	.word	0x40021400
 800bd5c:	40021800 	.word	0x40021800
 800bd60:	40023800 	.word	0x40023800
 800bd64:	40021c00 	.word	0x40021c00
 800bd68:	40022000 	.word	0x40022000
 800bd6c:	40022400 	.word	0x40022400

0800bd70 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 800bd70:	6903      	ldr	r3, [r0, #16]
 800bd72:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 800bd74:	bf14      	ite	ne
 800bd76:	2001      	movne	r0, #1
 800bd78:	2000      	moveq	r0, #0
 800bd7a:	4770      	bx	lr

0800bd7c <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 800bd7c:	b902      	cbnz	r2, 800bd80 <HAL_GPIO_WritePin+0x4>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800bd7e:	0409      	lsls	r1, r1, #16
 800bd80:	6181      	str	r1, [r0, #24]
  }
}
 800bd82:	4770      	bx	lr

0800bd84 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 800bd84:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 800bd86:	ea01 0203 	and.w	r2, r1, r3
 800bd8a:	ea21 0103 	bic.w	r1, r1, r3
 800bd8e:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800bd92:	6181      	str	r1, [r0, #24]
}
 800bd94:	4770      	bx	lr
 800bd96:	bf00      	nop

0800bd98 <HAL_GPIO_EXTI_Callback>:
  /* Prevent unused argument(s) compilation warning */
  UNUSED(GPIO_Pin);
  /* NOTE: This function Should not be modified, when the callback is needed,
           the HAL_GPIO_EXTI_Callback could be implemented in the user file
   */
}
 800bd98:	4770      	bx	lr
 800bd9a:	bf00      	nop

0800bd9c <HAL_GPIO_EXTI_IRQHandler>:
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET)
 800bd9c:	4a04      	ldr	r2, [pc, #16]	; (800bdb0 <HAL_GPIO_EXTI_IRQHandler+0x14>)
 800bd9e:	6951      	ldr	r1, [r2, #20]
 800bda0:	4201      	tst	r1, r0
 800bda2:	d100      	bne.n	800bda6 <HAL_GPIO_EXTI_IRQHandler+0xa>
 800bda4:	4770      	bx	lr
{
 800bda6:	b508      	push	{r3, lr}
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 800bda8:	6150      	str	r0, [r2, #20]
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 800bdaa:	f7ff fff5 	bl	800bd98 <HAL_GPIO_EXTI_Callback>
}
 800bdae:	bd08      	pop	{r3, pc}
 800bdb0:	40013c00 	.word	0x40013c00

0800bdb4 <I2C_RequestMemoryWrite>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_RequestMemoryWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress, uint16_t MemAddSize, uint32_t Timeout, uint32_t Tickstart)
{
 800bdb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  /* Generate Start */
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800bdb8:	6804      	ldr	r4, [r0, #0]
{
 800bdba:	b083      	sub	sp, #12
 800bdbc:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800bdbe:	6823      	ldr	r3, [r4, #0]
{
 800bdc0:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 800bdc4:	f8dd b034 	ldr.w	fp, [sp, #52]	; 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800bdc8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 800bdcc:	4606      	mov	r6, r0
 800bdce:	468a      	mov	sl, r1
 800bdd0:	4617      	mov	r7, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800bdd2:	6023      	str	r3, [r4, #0]
  * @param  Status The new Flag status (SET or RESET).
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 800bdd4:	f1b9 3fff 	cmp.w	r9, #4294967295
 800bdd8:	d136      	bne.n	800be48 <I2C_RequestMemoryWrite+0x94>
{
  /* Wait until flag is set */
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800bdda:	6965      	ldr	r5, [r4, #20]
 800bddc:	07e8      	lsls	r0, r5, #31
 800bdde:	d5fc      	bpl.n	800bdda <I2C_RequestMemoryWrite+0x26>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800bde0:	f00a 03fe 	and.w	r3, sl, #254	; 0xfe
 800bde4:	6123      	str	r3, [r4, #16]
  * @param  Flag specifies the I2C flag to check.
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 800bde6:	f1b9 3fff 	cmp.w	r9, #4294967295
 800bdea:	d003      	beq.n	800bdf4 <I2C_RequestMemoryWrite+0x40>
 800bdec:	e04f      	b.n	800be8e <I2C_RequestMemoryWrite+0xda>
{
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
  {
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800bdee:	6961      	ldr	r1, [r4, #20]
 800bdf0:	054d      	lsls	r5, r1, #21
 800bdf2:	d45d      	bmi.n	800beb0 <I2C_RequestMemoryWrite+0xfc>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800bdf4:	6961      	ldr	r1, [r4, #20]
 800bdf6:	078b      	lsls	r3, r1, #30
 800bdf8:	d5f9      	bpl.n	800bdee <I2C_RequestMemoryWrite+0x3a>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800bdfa:	2300      	movs	r3, #0
 800bdfc:	9301      	str	r3, [sp, #4]
 800bdfe:	6963      	ldr	r3, [r4, #20]
 800be00:	9301      	str	r3, [sp, #4]
 800be02:	69a3      	ldr	r3, [r4, #24]
 800be04:	9301      	str	r3, [sp, #4]
 800be06:	9b01      	ldr	r3, [sp, #4]
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800be08:	f1b9 3fff 	cmp.w	r9, #4294967295
 800be0c:	f040 8088 	bne.w	800bf20 <I2C_RequestMemoryWrite+0x16c>
 800be10:	6963      	ldr	r3, [r4, #20]
 800be12:	061a      	lsls	r2, r3, #24
 800be14:	d464      	bmi.n	800bee0 <I2C_RequestMemoryWrite+0x12c>
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800be16:	6963      	ldr	r3, [r4, #20]
 800be18:	055b      	lsls	r3, r3, #21
 800be1a:	d5f9      	bpl.n	800be10 <I2C_RequestMemoryWrite+0x5c>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);

    hi2c->PreviousState       = I2C_STATE_NONE;
 800be1c:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800be1e:	f46f 6180 	mvn.w	r1, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 800be22:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800be24:	6161      	str	r1, [r4, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 800be26:	6333      	str	r3, [r6, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800be28:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800be2c:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800be30:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800be32:	f043 0304 	orr.w	r3, r3, #4
 800be36:	6433      	str	r3, [r6, #64]	; 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800be38:	6c33      	ldr	r3, [r6, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 800be3a:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800be3c:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 800be3e:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800be42:	d066      	beq.n	800bf12 <I2C_RequestMemoryWrite+0x15e>
    return HAL_ERROR;
 800be44:	2001      	movs	r0, #1
 800be46:	e01f      	b.n	800be88 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800be48:	6963      	ldr	r3, [r4, #20]
 800be4a:	07d9      	lsls	r1, r3, #31
 800be4c:	d4c8      	bmi.n	800bde0 <I2C_RequestMemoryWrite+0x2c>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800be4e:	f7ff fbb9 	bl	800b5c4 <HAL_GetTick>
 800be52:	eba0 000b 	sub.w	r0, r0, fp
 800be56:	4581      	cmp	r9, r0
 800be58:	d304      	bcc.n	800be64 <I2C_RequestMemoryWrite+0xb0>
 800be5a:	f1b9 0f00 	cmp.w	r9, #0
 800be5e:	d001      	beq.n	800be64 <I2C_RequestMemoryWrite+0xb0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800be60:	6834      	ldr	r4, [r6, #0]
 800be62:	e7b7      	b.n	800bdd4 <I2C_RequestMemoryWrite+0x20>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800be64:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800be66:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800be68:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800be6a:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800be6e:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800be72:	6c32      	ldr	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800be74:	6831      	ldr	r1, [r6, #0]
        __HAL_UNLOCK(hi2c);
 800be76:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800be7a:	f042 0220 	orr.w	r2, r2, #32
 800be7e:	6432      	str	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800be80:	680b      	ldr	r3, [r1, #0]
 800be82:	05dc      	lsls	r4, r3, #23
 800be84:	d435      	bmi.n	800bef2 <I2C_RequestMemoryWrite+0x13e>
    return HAL_TIMEOUT;
 800be86:	2003      	movs	r0, #3
}
 800be88:	b003      	add	sp, #12
 800be8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800be8e:	6963      	ldr	r3, [r4, #20]
 800be90:	0798      	lsls	r0, r3, #30
 800be92:	d4b2      	bmi.n	800bdfa <I2C_RequestMemoryWrite+0x46>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800be94:	6963      	ldr	r3, [r4, #20]
 800be96:	055a      	lsls	r2, r3, #21
 800be98:	d40a      	bmi.n	800beb0 <I2C_RequestMemoryWrite+0xfc>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800be9a:	f7ff fb93 	bl	800b5c4 <HAL_GetTick>
 800be9e:	eba0 000b 	sub.w	r0, r0, fp
 800bea2:	4581      	cmp	r9, r0
 800bea4:	d34e      	bcc.n	800bf44 <I2C_RequestMemoryWrite+0x190>
 800bea6:	f1b9 0f00 	cmp.w	r9, #0
 800beaa:	d04b      	beq.n	800bf44 <I2C_RequestMemoryWrite+0x190>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800beac:	6834      	ldr	r4, [r6, #0]
 800beae:	e79a      	b.n	800bde6 <I2C_RequestMemoryWrite+0x32>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800beb0:	6823      	ldr	r3, [r4, #0]
 800beb2:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800beb6:	6023      	str	r3, [r4, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800beb8:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800beba:	f46f 6180 	mvn.w	r1, #1024	; 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 800bebe:	2320      	movs	r3, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800bec0:	6161      	str	r1, [r4, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800bec2:	6332      	str	r2, [r6, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800bec4:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800bec8:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800becc:	6c33      	ldr	r3, [r6, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800bece:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800bed2:	f043 0304 	orr.w	r3, r3, #4
    return HAL_ERROR;
 800bed6:	2001      	movs	r0, #1
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800bed8:	6433      	str	r3, [r6, #64]	; 0x40
}
 800beda:	b003      	add	sp, #12
 800bedc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800bee0:	f1b8 0f01 	cmp.w	r8, #1
 800bee4:	d109      	bne.n	800befa <I2C_RequestMemoryWrite+0x146>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800bee6:	b2ff      	uxtb	r7, r7
  return HAL_OK;
 800bee8:	2000      	movs	r0, #0
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800beea:	6127      	str	r7, [r4, #16]
}
 800beec:	b003      	add	sp, #12
 800beee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800bef2:	f44f 7300 	mov.w	r3, #512	; 0x200
 800bef6:	6433      	str	r3, [r6, #64]	; 0x40
 800bef8:	e7c5      	b.n	800be86 <I2C_RequestMemoryWrite+0xd2>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800befa:	0a3b      	lsrs	r3, r7, #8
 800befc:	6123      	str	r3, [r4, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800befe:	f1b9 3fff 	cmp.w	r9, #4294967295
 800bf02:	d12e      	bne.n	800bf62 <I2C_RequestMemoryWrite+0x1ae>
 800bf04:	6963      	ldr	r3, [r4, #20]
 800bf06:	0619      	lsls	r1, r3, #24
 800bf08:	d4ed      	bmi.n	800bee6 <I2C_RequestMemoryWrite+0x132>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800bf0a:	6963      	ldr	r3, [r4, #20]
 800bf0c:	055a      	lsls	r2, r3, #21
 800bf0e:	d5f9      	bpl.n	800bf04 <I2C_RequestMemoryWrite+0x150>
 800bf10:	e784      	b.n	800be1c <I2C_RequestMemoryWrite+0x68>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800bf12:	6832      	ldr	r2, [r6, #0]
 800bf14:	6813      	ldr	r3, [r2, #0]
 800bf16:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      return HAL_ERROR;
 800bf1a:	2001      	movs	r0, #1
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800bf1c:	6013      	str	r3, [r2, #0]
 800bf1e:	e7b3      	b.n	800be88 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800bf20:	6963      	ldr	r3, [r4, #20]
 800bf22:	061d      	lsls	r5, r3, #24
 800bf24:	d4dc      	bmi.n	800bee0 <I2C_RequestMemoryWrite+0x12c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800bf26:	6963      	ldr	r3, [r4, #20]
 800bf28:	0559      	lsls	r1, r3, #21
 800bf2a:	f53f af77 	bmi.w	800be1c <I2C_RequestMemoryWrite+0x68>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800bf2e:	f7ff fb49 	bl	800b5c4 <HAL_GetTick>
 800bf32:	eba0 000b 	sub.w	r0, r0, fp
 800bf36:	4581      	cmp	r9, r0
 800bf38:	d325      	bcc.n	800bf86 <I2C_RequestMemoryWrite+0x1d2>
 800bf3a:	f1b9 0f00 	cmp.w	r9, #0
 800bf3e:	d022      	beq.n	800bf86 <I2C_RequestMemoryWrite+0x1d2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800bf40:	6834      	ldr	r4, [r6, #0]
 800bf42:	e761      	b.n	800be08 <I2C_RequestMemoryWrite+0x54>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800bf44:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800bf46:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800bf48:	6332      	str	r2, [r6, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800bf4a:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800bf4e:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800bf52:	6c33      	ldr	r3, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800bf54:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800bf58:	f043 0320 	orr.w	r3, r3, #32
 800bf5c:	6433      	str	r3, [r6, #64]	; 0x40
    return HAL_ERROR;
 800bf5e:	2001      	movs	r0, #1
 800bf60:	e792      	b.n	800be88 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800bf62:	6963      	ldr	r3, [r4, #20]
 800bf64:	061b      	lsls	r3, r3, #24
 800bf66:	d4be      	bmi.n	800bee6 <I2C_RequestMemoryWrite+0x132>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800bf68:	6963      	ldr	r3, [r4, #20]
 800bf6a:	0558      	lsls	r0, r3, #21
 800bf6c:	f53f af56 	bmi.w	800be1c <I2C_RequestMemoryWrite+0x68>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800bf70:	f7ff fb28 	bl	800b5c4 <HAL_GetTick>
 800bf74:	eba0 000b 	sub.w	r0, r0, fp
 800bf78:	4581      	cmp	r9, r0
 800bf7a:	d304      	bcc.n	800bf86 <I2C_RequestMemoryWrite+0x1d2>
 800bf7c:	f1b9 0f00 	cmp.w	r9, #0
 800bf80:	d001      	beq.n	800bf86 <I2C_RequestMemoryWrite+0x1d2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800bf82:	6834      	ldr	r4, [r6, #0]
 800bf84:	e7bb      	b.n	800befe <I2C_RequestMemoryWrite+0x14a>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800bf86:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800bf88:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800bf8a:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800bf8c:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800bf90:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800bf94:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800bf96:	4313      	orrs	r3, r2
 800bf98:	6433      	str	r3, [r6, #64]	; 0x40
        return HAL_ERROR;
 800bf9a:	e74d      	b.n	800be38 <I2C_RequestMemoryWrite+0x84>

0800bf9c <I2C_RequestMemoryRead>:
{
 800bf9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800bfa0:	6804      	ldr	r4, [r0, #0]
{
 800bfa2:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800bfa4:	6823      	ldr	r3, [r4, #0]
 800bfa6:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800bfaa:	6023      	str	r3, [r4, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800bfac:	6823      	ldr	r3, [r4, #0]
{
 800bfae:	b083      	sub	sp, #12
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800bfb0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 800bfb4:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 800bfb8:	f8dd 9034 	ldr.w	r9, [sp, #52]	; 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800bfbc:	6023      	str	r3, [r4, #0]
{
 800bfbe:	4606      	mov	r6, r0
 800bfc0:	468b      	mov	fp, r1
 800bfc2:	4617      	mov	r7, r2
 800bfc4:	f1ba 3fff 	cmp.w	sl, #4294967295
 800bfc8:	d13a      	bne.n	800c040 <I2C_RequestMemoryRead+0xa4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800bfca:	6965      	ldr	r5, [r4, #20]
 800bfcc:	07eb      	lsls	r3, r5, #31
 800bfce:	d5fc      	bpl.n	800bfca <I2C_RequestMemoryRead+0x2e>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800bfd0:	f00b 03fe 	and.w	r3, fp, #254	; 0xfe
 800bfd4:	6123      	str	r3, [r4, #16]
 800bfd6:	fa5f fb8b 	uxtb.w	fp, fp
 800bfda:	f1ba 3fff 	cmp.w	sl, #4294967295
 800bfde:	d003      	beq.n	800bfe8 <I2C_RequestMemoryRead+0x4c>
 800bfe0:	e069      	b.n	800c0b6 <I2C_RequestMemoryRead+0x11a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800bfe2:	6965      	ldr	r5, [r4, #20]
 800bfe4:	056a      	lsls	r2, r5, #21
 800bfe6:	d44e      	bmi.n	800c086 <I2C_RequestMemoryRead+0xea>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800bfe8:	6965      	ldr	r5, [r4, #20]
 800bfea:	07a9      	lsls	r1, r5, #30
 800bfec:	d5f9      	bpl.n	800bfe2 <I2C_RequestMemoryRead+0x46>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800bfee:	2300      	movs	r3, #0
 800bff0:	9301      	str	r3, [sp, #4]
 800bff2:	6963      	ldr	r3, [r4, #20]
 800bff4:	9301      	str	r3, [sp, #4]
 800bff6:	69a3      	ldr	r3, [r4, #24]
 800bff8:	9301      	str	r3, [sp, #4]
 800bffa:	9b01      	ldr	r3, [sp, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800bffc:	f1ba 3fff 	cmp.w	sl, #4294967295
 800c000:	f040 80bd 	bne.w	800c17e <I2C_RequestMemoryRead+0x1e2>
 800c004:	6963      	ldr	r3, [r4, #20]
 800c006:	0618      	lsls	r0, r3, #24
 800c008:	d468      	bmi.n	800c0dc <I2C_RequestMemoryRead+0x140>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c00a:	6963      	ldr	r3, [r4, #20]
 800c00c:	0559      	lsls	r1, r3, #21
 800c00e:	d5f9      	bpl.n	800c004 <I2C_RequestMemoryRead+0x68>
    hi2c->PreviousState       = I2C_STATE_NONE;
 800c010:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800c012:	f46f 6180 	mvn.w	r1, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 800c016:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800c018:	6161      	str	r1, [r4, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 800c01a:	6333      	str	r3, [r6, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800c01c:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800c020:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800c024:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800c026:	f043 0304 	orr.w	r3, r3, #4
 800c02a:	6433      	str	r3, [r6, #64]	; 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800c02c:	6c33      	ldr	r3, [r6, #64]	; 0x40
    __HAL_UNLOCK(hi2c);
 800c02e:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800c030:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 800c032:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800c036:	d070      	beq.n	800c11a <I2C_RequestMemoryRead+0x17e>
    return HAL_ERROR;
 800c038:	2001      	movs	r0, #1
}
 800c03a:	b003      	add	sp, #12
 800c03c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800c040:	6963      	ldr	r3, [r4, #20]
 800c042:	07dd      	lsls	r5, r3, #31
 800c044:	d4c4      	bmi.n	800bfd0 <I2C_RequestMemoryRead+0x34>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c046:	f7ff fabd 	bl	800b5c4 <HAL_GetTick>
 800c04a:	eba0 0009 	sub.w	r0, r0, r9
 800c04e:	4582      	cmp	sl, r0
 800c050:	d304      	bcc.n	800c05c <I2C_RequestMemoryRead+0xc0>
 800c052:	f1ba 0f00 	cmp.w	sl, #0
 800c056:	d001      	beq.n	800c05c <I2C_RequestMemoryRead+0xc0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800c058:	6834      	ldr	r4, [r6, #0]
 800c05a:	e7b3      	b.n	800bfc4 <I2C_RequestMemoryRead+0x28>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800c05c:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800c05e:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800c060:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800c062:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800c066:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c06a:	6c32      	ldr	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800c06c:	6831      	ldr	r1, [r6, #0]
        __HAL_UNLOCK(hi2c);
 800c06e:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c072:	f042 0220 	orr.w	r2, r2, #32
 800c076:	6432      	str	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800c078:	680b      	ldr	r3, [r1, #0]
 800c07a:	05dc      	lsls	r4, r3, #23
 800c07c:	d43d      	bmi.n	800c0fa <I2C_RequestMemoryRead+0x15e>
    return HAL_TIMEOUT;
 800c07e:	2003      	movs	r0, #3
}
 800c080:	b003      	add	sp, #12
 800c082:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c086:	6823      	ldr	r3, [r4, #0]
 800c088:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800c08c:	6023      	str	r3, [r4, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800c08e:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800c090:	f46f 6180 	mvn.w	r1, #1024	; 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 800c094:	2320      	movs	r3, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800c096:	6161      	str	r1, [r4, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800c098:	6332      	str	r2, [r6, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800c09a:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800c09e:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800c0a2:	6c33      	ldr	r3, [r6, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800c0a4:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800c0a8:	f043 0304 	orr.w	r3, r3, #4
    return HAL_ERROR;
 800c0ac:	2001      	movs	r0, #1
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800c0ae:	6433      	str	r3, [r6, #64]	; 0x40
}
 800c0b0:	b003      	add	sp, #12
 800c0b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800c0b6:	6963      	ldr	r3, [r4, #20]
 800c0b8:	079b      	lsls	r3, r3, #30
 800c0ba:	d498      	bmi.n	800bfee <I2C_RequestMemoryRead+0x52>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c0bc:	6963      	ldr	r3, [r4, #20]
 800c0be:	0558      	lsls	r0, r3, #21
 800c0c0:	d4e1      	bmi.n	800c086 <I2C_RequestMemoryRead+0xea>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c0c2:	f7ff fa7f 	bl	800b5c4 <HAL_GetTick>
 800c0c6:	eba0 0009 	sub.w	r0, r0, r9
 800c0ca:	4582      	cmp	sl, r0
 800c0cc:	f0c0 808f 	bcc.w	800c1ee <I2C_RequestMemoryRead+0x252>
 800c0d0:	f1ba 0f00 	cmp.w	sl, #0
 800c0d4:	f000 808b 	beq.w	800c1ee <I2C_RequestMemoryRead+0x252>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800c0d8:	6834      	ldr	r4, [r6, #0]
 800c0da:	e77e      	b.n	800bfda <I2C_RequestMemoryRead+0x3e>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800c0dc:	f1b8 0f01 	cmp.w	r8, #1
 800c0e0:	d10f      	bne.n	800c102 <I2C_RequestMemoryRead+0x166>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800c0e2:	b2ff      	uxtb	r7, r7
 800c0e4:	6127      	str	r7, [r4, #16]
 800c0e6:	f1ba 3fff 	cmp.w	sl, #4294967295
 800c0ea:	d16e      	bne.n	800c1ca <I2C_RequestMemoryRead+0x22e>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800c0ec:	6963      	ldr	r3, [r4, #20]
 800c0ee:	061b      	lsls	r3, r3, #24
 800c0f0:	d41a      	bmi.n	800c128 <I2C_RequestMemoryRead+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c0f2:	6963      	ldr	r3, [r4, #20]
 800c0f4:	055f      	lsls	r7, r3, #21
 800c0f6:	d5f9      	bpl.n	800c0ec <I2C_RequestMemoryRead+0x150>
 800c0f8:	e78a      	b.n	800c010 <I2C_RequestMemoryRead+0x74>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800c0fa:	f44f 7300 	mov.w	r3, #512	; 0x200
 800c0fe:	6433      	str	r3, [r6, #64]	; 0x40
 800c100:	e7bd      	b.n	800c07e <I2C_RequestMemoryRead+0xe2>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800c102:	0a3b      	lsrs	r3, r7, #8
 800c104:	6123      	str	r3, [r4, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800c106:	f1ba 3fff 	cmp.w	sl, #4294967295
 800c10a:	d17e      	bne.n	800c20a <I2C_RequestMemoryRead+0x26e>
 800c10c:	6963      	ldr	r3, [r4, #20]
 800c10e:	061d      	lsls	r5, r3, #24
 800c110:	d4e7      	bmi.n	800c0e2 <I2C_RequestMemoryRead+0x146>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c112:	6963      	ldr	r3, [r4, #20]
 800c114:	0558      	lsls	r0, r3, #21
 800c116:	d5f9      	bpl.n	800c10c <I2C_RequestMemoryRead+0x170>
 800c118:	e77a      	b.n	800c010 <I2C_RequestMemoryRead+0x74>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c11a:	6832      	ldr	r2, [r6, #0]
 800c11c:	6813      	ldr	r3, [r2, #0]
 800c11e:	f443 7300 	orr.w	r3, r3, #512	; 0x200
    return HAL_ERROR;
 800c122:	2001      	movs	r0, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c124:	6013      	str	r3, [r2, #0]
 800c126:	e7ab      	b.n	800c080 <I2C_RequestMemoryRead+0xe4>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800c128:	6823      	ldr	r3, [r4, #0]
 800c12a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800c12e:	6023      	str	r3, [r4, #0]
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 800c130:	f1ba 3fff 	cmp.w	sl, #4294967295
 800c134:	d113      	bne.n	800c15e <I2C_RequestMemoryRead+0x1c2>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800c136:	6963      	ldr	r3, [r4, #20]
 800c138:	07d8      	lsls	r0, r3, #31
 800c13a:	d5fc      	bpl.n	800c136 <I2C_RequestMemoryRead+0x19a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 800c13c:	f04b 0301 	orr.w	r3, fp, #1
 800c140:	6123      	str	r3, [r4, #16]
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 800c142:	f1ba 3fff 	cmp.w	sl, #4294967295
 800c146:	d003      	beq.n	800c150 <I2C_RequestMemoryRead+0x1b4>
 800c148:	e02b      	b.n	800c1a2 <I2C_RequestMemoryRead+0x206>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c14a:	6963      	ldr	r3, [r4, #20]
 800c14c:	055b      	lsls	r3, r3, #21
 800c14e:	d49a      	bmi.n	800c086 <I2C_RequestMemoryRead+0xea>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800c150:	6963      	ldr	r3, [r4, #20]
 800c152:	43db      	mvns	r3, r3
 800c154:	f013 0302 	ands.w	r3, r3, #2
 800c158:	d1f7      	bne.n	800c14a <I2C_RequestMemoryRead+0x1ae>
  return HAL_OK;
 800c15a:	4618      	mov	r0, r3
 800c15c:	e790      	b.n	800c080 <I2C_RequestMemoryRead+0xe4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800c15e:	6963      	ldr	r3, [r4, #20]
 800c160:	07d9      	lsls	r1, r3, #31
 800c162:	d4eb      	bmi.n	800c13c <I2C_RequestMemoryRead+0x1a0>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c164:	f7ff fa2e 	bl	800b5c4 <HAL_GetTick>
 800c168:	eba0 0009 	sub.w	r0, r0, r9
 800c16c:	4582      	cmp	sl, r0
 800c16e:	f4ff af75 	bcc.w	800c05c <I2C_RequestMemoryRead+0xc0>
 800c172:	f1ba 0f00 	cmp.w	sl, #0
 800c176:	f43f af71 	beq.w	800c05c <I2C_RequestMemoryRead+0xc0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800c17a:	6834      	ldr	r4, [r6, #0]
 800c17c:	e7d8      	b.n	800c130 <I2C_RequestMemoryRead+0x194>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800c17e:	6963      	ldr	r3, [r4, #20]
 800c180:	061a      	lsls	r2, r3, #24
 800c182:	d4ab      	bmi.n	800c0dc <I2C_RequestMemoryRead+0x140>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c184:	6963      	ldr	r3, [r4, #20]
 800c186:	055d      	lsls	r5, r3, #21
 800c188:	f53f af42 	bmi.w	800c010 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c18c:	f7ff fa1a 	bl	800b5c4 <HAL_GetTick>
 800c190:	eba0 0009 	sub.w	r0, r0, r9
 800c194:	4582      	cmp	sl, r0
 800c196:	d34b      	bcc.n	800c230 <I2C_RequestMemoryRead+0x294>
 800c198:	f1ba 0f00 	cmp.w	sl, #0
 800c19c:	d048      	beq.n	800c230 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800c19e:	6834      	ldr	r4, [r6, #0]
 800c1a0:	e72c      	b.n	800bffc <I2C_RequestMemoryRead+0x60>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800c1a2:	6963      	ldr	r3, [r4, #20]
 800c1a4:	43db      	mvns	r3, r3
 800c1a6:	f013 0302 	ands.w	r3, r3, #2
 800c1aa:	d0d6      	beq.n	800c15a <I2C_RequestMemoryRead+0x1be>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c1ac:	6963      	ldr	r3, [r4, #20]
 800c1ae:	055a      	lsls	r2, r3, #21
 800c1b0:	f53f af69 	bmi.w	800c086 <I2C_RequestMemoryRead+0xea>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c1b4:	f7ff fa06 	bl	800b5c4 <HAL_GetTick>
 800c1b8:	eba0 0009 	sub.w	r0, r0, r9
 800c1bc:	4582      	cmp	sl, r0
 800c1be:	d316      	bcc.n	800c1ee <I2C_RequestMemoryRead+0x252>
 800c1c0:	f1ba 0f00 	cmp.w	sl, #0
 800c1c4:	d013      	beq.n	800c1ee <I2C_RequestMemoryRead+0x252>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800c1c6:	6834      	ldr	r4, [r6, #0]
 800c1c8:	e7bb      	b.n	800c142 <I2C_RequestMemoryRead+0x1a6>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800c1ca:	6963      	ldr	r3, [r4, #20]
 800c1cc:	061d      	lsls	r5, r3, #24
 800c1ce:	d4ab      	bmi.n	800c128 <I2C_RequestMemoryRead+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c1d0:	6963      	ldr	r3, [r4, #20]
 800c1d2:	055a      	lsls	r2, r3, #21
 800c1d4:	f53f af1c 	bmi.w	800c010 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c1d8:	f7ff f9f4 	bl	800b5c4 <HAL_GetTick>
 800c1dc:	eba0 0009 	sub.w	r0, r0, r9
 800c1e0:	4582      	cmp	sl, r0
 800c1e2:	d325      	bcc.n	800c230 <I2C_RequestMemoryRead+0x294>
 800c1e4:	f1ba 0f00 	cmp.w	sl, #0
 800c1e8:	d022      	beq.n	800c230 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800c1ea:	6834      	ldr	r4, [r6, #0]
 800c1ec:	e77b      	b.n	800c0e6 <I2C_RequestMemoryRead+0x14a>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800c1ee:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800c1f0:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800c1f2:	6332      	str	r2, [r6, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800c1f4:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800c1f8:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800c1fc:	6c33      	ldr	r3, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800c1fe:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800c202:	f043 0320 	orr.w	r3, r3, #32
 800c206:	6433      	str	r3, [r6, #64]	; 0x40
 800c208:	e716      	b.n	800c038 <I2C_RequestMemoryRead+0x9c>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800c20a:	6963      	ldr	r3, [r4, #20]
 800c20c:	0619      	lsls	r1, r3, #24
 800c20e:	f53f af68 	bmi.w	800c0e2 <I2C_RequestMemoryRead+0x146>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c212:	6963      	ldr	r3, [r4, #20]
 800c214:	055b      	lsls	r3, r3, #21
 800c216:	f53f aefb 	bmi.w	800c010 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c21a:	f7ff f9d3 	bl	800b5c4 <HAL_GetTick>
 800c21e:	eba0 0009 	sub.w	r0, r0, r9
 800c222:	4582      	cmp	sl, r0
 800c224:	d304      	bcc.n	800c230 <I2C_RequestMemoryRead+0x294>
 800c226:	f1ba 0f00 	cmp.w	sl, #0
 800c22a:	d001      	beq.n	800c230 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800c22c:	6834      	ldr	r4, [r6, #0]
 800c22e:	e76a      	b.n	800c106 <I2C_RequestMemoryRead+0x16a>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800c230:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800c232:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800c234:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800c236:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800c23a:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c23e:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800c240:	4313      	orrs	r3, r2
 800c242:	6433      	str	r3, [r6, #64]	; 0x40
        return HAL_ERROR;
 800c244:	e6f2      	b.n	800c02c <I2C_RequestMemoryRead+0x90>
 800c246:	bf00      	nop

0800c248 <HAL_I2C_Init>:
  if (hi2c == NULL)
 800c248:	2800      	cmp	r0, #0
 800c24a:	f000 80b9 	beq.w	800c3c0 <HAL_I2C_Init+0x178>
{
 800c24e:	b570      	push	{r4, r5, r6, lr}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 800c250:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800c254:	4604      	mov	r4, r0
 800c256:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800c25a:	2b00      	cmp	r3, #0
 800c25c:	f000 8098 	beq.w	800c390 <HAL_I2C_Init+0x148>
  __HAL_I2C_DISABLE(hi2c);
 800c260:	6823      	ldr	r3, [r4, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
 800c262:	2224      	movs	r2, #36	; 0x24
 800c264:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 800c268:	681a      	ldr	r2, [r3, #0]
 800c26a:	f022 0201 	bic.w	r2, r2, #1
 800c26e:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 800c270:	681a      	ldr	r2, [r3, #0]
 800c272:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800c276:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 800c278:	681a      	ldr	r2, [r3, #0]
 800c27a:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800c27e:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 800c280:	f001 fe70 	bl	800df64 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 800c284:	6865      	ldr	r5, [r4, #4]
 800c286:	4b4f      	ldr	r3, [pc, #316]	; (800c3c4 <HAL_I2C_Init+0x17c>)
 800c288:	429d      	cmp	r5, r3
 800c28a:	d84f      	bhi.n	800c32c <HAL_I2C_Init+0xe4>
 800c28c:	4b4e      	ldr	r3, [pc, #312]	; (800c3c8 <HAL_I2C_Init+0x180>)
 800c28e:	4298      	cmp	r0, r3
 800c290:	d97c      	bls.n	800c38c <HAL_I2C_Init+0x144>
  freqrange = I2C_FREQRANGE(pclk1);
 800c292:	4b4e      	ldr	r3, [pc, #312]	; (800c3cc <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800c294:	006a      	lsls	r2, r5, #1
  freqrange = I2C_FREQRANGE(pclk1);
 800c296:	fba3 3500 	umull	r3, r5, r3, r0
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800c29a:	1e43      	subs	r3, r0, #1
 800c29c:	fbb3 f3f2 	udiv	r3, r3, r2
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800c2a0:	6822      	ldr	r2, [r4, #0]
 800c2a2:	6851      	ldr	r1, [r2, #4]
 800c2a4:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800c2a8:	ea41 4195 	orr.w	r1, r1, r5, lsr #18
 800c2ac:	6051      	str	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800c2ae:	6a11      	ldr	r1, [r2, #32]
  freqrange = I2C_FREQRANGE(pclk1);
 800c2b0:	ea4f 4c95 	mov.w	ip, r5, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800c2b4:	f10c 0c01 	add.w	ip, ip, #1
 800c2b8:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800c2bc:	ea41 010c 	orr.w	r1, r1, ip
 800c2c0:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800c2c2:	69d1      	ldr	r1, [r2, #28]
 800c2c4:	f640 70fc 	movw	r0, #4092	; 0xffc
 800c2c8:	3301      	adds	r3, #1
 800c2ca:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 800c2ce:	4203      	tst	r3, r0
 800c2d0:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800c2d4:	d161      	bne.n	800c39a <HAL_I2C_Init+0x152>
 800c2d6:	2304      	movs	r3, #4
 800c2d8:	430b      	orrs	r3, r1
 800c2da:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 800c2dc:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 800c2e0:	6811      	ldr	r1, [r2, #0]
 800c2e2:	4303      	orrs	r3, r0
 800c2e4:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 800c2e8:	430b      	orrs	r3, r1
 800c2ea:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 800c2ec:	6891      	ldr	r1, [r2, #8]
 800c2ee:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 800c2f2:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 800c2f6:	4303      	orrs	r3, r0
 800c2f8:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800c2fc:	430b      	orrs	r3, r1
 800c2fe:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 800c300:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 800c304:	68d1      	ldr	r1, [r2, #12]
 800c306:	4303      	orrs	r3, r0
 800c308:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800c30c:	430b      	orrs	r3, r1
 800c30e:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 800c310:	6811      	ldr	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800c312:	2300      	movs	r3, #0
  __HAL_I2C_ENABLE(hi2c);
 800c314:	f041 0101 	orr.w	r1, r1, #1
  hi2c->State = HAL_I2C_STATE_READY;
 800c318:	2020      	movs	r0, #32
  __HAL_I2C_ENABLE(hi2c);
 800c31a:	6011      	str	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800c31c:	6423      	str	r3, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 800c31e:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 800c322:	6323      	str	r3, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 800c324:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
  return HAL_OK;
 800c328:	4618      	mov	r0, r3
}
 800c32a:	bd70      	pop	{r4, r5, r6, pc}
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 800c32c:	4b28      	ldr	r3, [pc, #160]	; (800c3d0 <HAL_I2C_Init+0x188>)
 800c32e:	4298      	cmp	r0, r3
 800c330:	d92c      	bls.n	800c38c <HAL_I2C_Init+0x144>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800c332:	6822      	ldr	r2, [r4, #0]
  freqrange = I2C_FREQRANGE(pclk1);
 800c334:	4b25      	ldr	r3, [pc, #148]	; (800c3cc <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800c336:	6851      	ldr	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800c338:	4e26      	ldr	r6, [pc, #152]	; (800c3d4 <HAL_I2C_Init+0x18c>)
  freqrange = I2C_FREQRANGE(pclk1);
 800c33a:	fba3 3c00 	umull	r3, ip, r3, r0
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800c33e:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800c342:	ea41 419c 	orr.w	r1, r1, ip, lsr #18
 800c346:	6051      	str	r1, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 800c348:	ea4f 439c 	mov.w	r3, ip, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800c34c:	f44f 7196 	mov.w	r1, #300	; 0x12c
 800c350:	fb01 f303 	mul.w	r3, r1, r3
 800c354:	fba6 6303 	umull	r6, r3, r6, r3
 800c358:	6a11      	ldr	r1, [r2, #32]
 800c35a:	099b      	lsrs	r3, r3, #6
 800c35c:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800c360:	3301      	adds	r3, #1
 800c362:	430b      	orrs	r3, r1
 800c364:	6213      	str	r3, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800c366:	69d1      	ldr	r1, [r2, #28]
 800c368:	68a3      	ldr	r3, [r4, #8]
 800c36a:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 800c36e:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800c372:	b9ab      	cbnz	r3, 800c3a0 <HAL_I2C_Init+0x158>
 800c374:	1e43      	subs	r3, r0, #1
 800c376:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800c37a:	fbb3 f3f5 	udiv	r3, r3, r5
 800c37e:	3301      	adds	r3, #1
 800c380:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800c384:	b1d3      	cbz	r3, 800c3bc <HAL_I2C_Init+0x174>
 800c386:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800c38a:	e7a5      	b.n	800c2d8 <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 800c38c:	2001      	movs	r0, #1
}
 800c38e:	bd70      	pop	{r4, r5, r6, pc}
    hi2c->Lock = HAL_UNLOCKED;
 800c390:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 800c394:	f7f5 ff56 	bl	8002244 <HAL_I2C_MspInit>
 800c398:	e762      	b.n	800c260 <HAL_I2C_Init+0x18>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800c39a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800c39e:	e79b      	b.n	800c2d8 <HAL_I2C_Init+0x90>
 800c3a0:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 800c3a4:	1e43      	subs	r3, r0, #1
 800c3a6:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 800c3aa:	fbb3 f3f5 	udiv	r3, r3, r5
 800c3ae:	3301      	adds	r3, #1
 800c3b0:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800c3b4:	b113      	cbz	r3, 800c3bc <HAL_I2C_Init+0x174>
 800c3b6:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 800c3ba:	e78d      	b.n	800c2d8 <HAL_I2C_Init+0x90>
 800c3bc:	2301      	movs	r3, #1
 800c3be:	e78b      	b.n	800c2d8 <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 800c3c0:	2001      	movs	r0, #1
}
 800c3c2:	4770      	bx	lr
 800c3c4:	000186a0 	.word	0x000186a0
 800c3c8:	001e847f 	.word	0x001e847f
 800c3cc:	431bde83 	.word	0x431bde83
 800c3d0:	003d08ff 	.word	0x003d08ff
 800c3d4:	10624dd3 	.word	0x10624dd3

0800c3d8 <HAL_I2C_Mem_Write>:
{
 800c3d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c3dc:	4604      	mov	r4, r0
 800c3de:	b083      	sub	sp, #12
 800c3e0:	4699      	mov	r9, r3
 800c3e2:	f8bd a034 	ldrh.w	sl, [sp, #52]	; 0x34
 800c3e6:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800c3e8:	460f      	mov	r7, r1
 800c3ea:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800c3ec:	f7ff f8ea 	bl	800b5c4 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800c3f0:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800c3f4:	2b20      	cmp	r3, #32
 800c3f6:	d004      	beq.n	800c402 <HAL_I2C_Mem_Write+0x2a>
      return HAL_BUSY;
 800c3f8:	2702      	movs	r7, #2
}
 800c3fa:	4638      	mov	r0, r7
 800c3fc:	b003      	add	sp, #12
 800c3fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c402:	4605      	mov	r5, r0
 800c404:	e005      	b.n	800c412 <HAL_I2C_Mem_Write+0x3a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c406:	f7ff f8dd 	bl	800b5c4 <HAL_GetTick>
 800c40a:	1b40      	subs	r0, r0, r5
 800c40c:	2819      	cmp	r0, #25
 800c40e:	f200 80a8 	bhi.w	800c562 <HAL_I2C_Mem_Write+0x18a>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800c412:	6820      	ldr	r0, [r4, #0]
 800c414:	6983      	ldr	r3, [r0, #24]
 800c416:	ea6f 0c03 	mvn.w	ip, r3
 800c41a:	f01c 0b02 	ands.w	fp, ip, #2
 800c41e:	d0f2      	beq.n	800c406 <HAL_I2C_Mem_Write+0x2e>
    __HAL_LOCK(hi2c);
 800c420:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800c424:	2b01      	cmp	r3, #1
 800c426:	d0e7      	beq.n	800c3f8 <HAL_I2C_Mem_Write+0x20>
 800c428:	2301      	movs	r3, #1
 800c42a:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800c42e:	6803      	ldr	r3, [r0, #0]
 800c430:	07db      	lsls	r3, r3, #31
 800c432:	d572      	bpl.n	800c51a <HAL_I2C_Mem_Write+0x142>
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800c434:	4639      	mov	r1, r7
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800c436:	6807      	ldr	r7, [r0, #0]
 800c438:	f427 6700 	bic.w	r7, r7, #2048	; 0x800
 800c43c:	6007      	str	r7, [r0, #0]
    hi2c->pBuffPtr    = pData;
 800c43e:	980c      	ldr	r0, [sp, #48]	; 0x30
 800c440:	6260      	str	r0, [r4, #36]	; 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 800c442:	2021      	movs	r0, #33	; 0x21
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800c444:	e9cd 6500 	strd	r6, r5, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 800c448:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800c44c:	2040      	movs	r0, #64	; 0x40
 800c44e:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800c452:	2000      	movs	r0, #0
 800c454:	6420      	str	r0, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 800c456:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800c45a:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 800c45c:	8520      	strh	r0, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800c45e:	4856      	ldr	r0, [pc, #344]	; (800c5b8 <HAL_I2C_Mem_Write+0x1e0>)
 800c460:	62e0      	str	r0, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800c462:	464b      	mov	r3, r9
 800c464:	4642      	mov	r2, r8
 800c466:	4620      	mov	r0, r4
 800c468:	f7ff fca4 	bl	800bdb4 <I2C_RequestMemoryWrite>
 800c46c:	4607      	mov	r7, r0
 800c46e:	bb00      	cbnz	r0, 800c4b2 <HAL_I2C_Mem_Write+0xda>
    while (hi2c->XferSize > 0U)
 800c470:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800c472:	2b00      	cmp	r3, #0
 800c474:	f000 809e 	beq.w	800c5b4 <HAL_I2C_Mem_Write+0x1dc>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800c478:	6823      	ldr	r3, [r4, #0]
 800c47a:	1c72      	adds	r2, r6, #1
 800c47c:	d159      	bne.n	800c532 <HAL_I2C_Mem_Write+0x15a>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800c47e:	695a      	ldr	r2, [r3, #20]
 800c480:	0610      	lsls	r0, r2, #24
 800c482:	d41b      	bmi.n	800c4bc <HAL_I2C_Mem_Write+0xe4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c484:	695a      	ldr	r2, [r3, #20]
 800c486:	0551      	lsls	r1, r2, #21
 800c488:	d5f9      	bpl.n	800c47e <HAL_I2C_Mem_Write+0xa6>
    hi2c->PreviousState       = I2C_STATE_NONE;
 800c48a:	2200      	movs	r2, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800c48c:	f46f 6080 	mvn.w	r0, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 800c490:	2120      	movs	r1, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800c492:	6158      	str	r0, [r3, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 800c494:	6322      	str	r2, [r4, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800c496:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800c49a:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800c49e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800c4a0:	f043 0304 	orr.w	r3, r3, #4
 800c4a4:	6423      	str	r3, [r4, #64]	; 0x40
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800c4a6:	6c23      	ldr	r3, [r4, #64]	; 0x40
    __HAL_UNLOCK(hi2c);
 800c4a8:	2200      	movs	r2, #0
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800c4aa:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 800c4ac:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800c4b0:	d038      	beq.n	800c524 <HAL_I2C_Mem_Write+0x14c>
      return HAL_ERROR;
 800c4b2:	2701      	movs	r7, #1
}
 800c4b4:	4638      	mov	r0, r7
 800c4b6:	b003      	add	sp, #12
 800c4b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800c4bc:	f8d4 c024 	ldr.w	ip, [r4, #36]	; 0x24
      hi2c->XferSize--;
 800c4c0:	f8b4 e028 	ldrh.w	lr, [r4, #40]	; 0x28
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800c4c4:	4661      	mov	r1, ip
      hi2c->XferSize--;
 800c4c6:	f10e 30ff 	add.w	r0, lr, #4294967295
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800c4ca:	f811 2b01 	ldrb.w	r2, [r1], #1
 800c4ce:	611a      	str	r2, [r3, #16]
      hi2c->XferCount--;
 800c4d0:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800c4d2:	6261      	str	r1, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800c4d4:	3a01      	subs	r2, #1
 800c4d6:	b292      	uxth	r2, r2
 800c4d8:	8562      	strh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 800c4da:	b282      	uxth	r2, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800c4dc:	6958      	ldr	r0, [r3, #20]
      hi2c->XferSize--;
 800c4de:	8522      	strh	r2, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800c4e0:	0740      	lsls	r0, r0, #29
 800c4e2:	d517      	bpl.n	800c514 <HAL_I2C_Mem_Write+0x13c>
 800c4e4:	b942      	cbnz	r2, 800c4f8 <HAL_I2C_Mem_Write+0x120>
 800c4e6:	1c72      	adds	r2, r6, #1
 800c4e8:	d156      	bne.n	800c598 <HAL_I2C_Mem_Write+0x1c0>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800c4ea:	695a      	ldr	r2, [r3, #20]
 800c4ec:	0750      	lsls	r0, r2, #29
 800c4ee:	d446      	bmi.n	800c57e <HAL_I2C_Mem_Write+0x1a6>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c4f0:	695a      	ldr	r2, [r3, #20]
 800c4f2:	0551      	lsls	r1, r2, #21
 800c4f4:	d5f9      	bpl.n	800c4ea <HAL_I2C_Mem_Write+0x112>
 800c4f6:	e7c8      	b.n	800c48a <HAL_I2C_Mem_Write+0xb2>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 800c4f8:	f89c 1001 	ldrb.w	r1, [ip, #1]
 800c4fc:	6119      	str	r1, [r3, #16]
        hi2c->pBuffPtr++;
 800c4fe:	f10c 0102 	add.w	r1, ip, #2
 800c502:	6261      	str	r1, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800c504:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
        hi2c->XferSize--;
 800c506:	f1ae 0202 	sub.w	r2, lr, #2
        hi2c->XferCount--;
 800c50a:	3901      	subs	r1, #1
        hi2c->XferSize--;
 800c50c:	b292      	uxth	r2, r2
        hi2c->XferCount--;
 800c50e:	b289      	uxth	r1, r1
        hi2c->XferSize--;
 800c510:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->XferCount--;
 800c512:	8561      	strh	r1, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 800c514:	2a00      	cmp	r2, #0
 800c516:	d1b0      	bne.n	800c47a <HAL_I2C_Mem_Write+0xa2>
 800c518:	e7e5      	b.n	800c4e6 <HAL_I2C_Mem_Write+0x10e>
      __HAL_I2C_ENABLE(hi2c);
 800c51a:	6803      	ldr	r3, [r0, #0]
 800c51c:	f043 0301 	orr.w	r3, r3, #1
 800c520:	6003      	str	r3, [r0, #0]
 800c522:	e787      	b.n	800c434 <HAL_I2C_Mem_Write+0x5c>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c524:	6822      	ldr	r2, [r4, #0]
 800c526:	6813      	ldr	r3, [r2, #0]
 800c528:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      return HAL_ERROR;
 800c52c:	2701      	movs	r7, #1
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c52e:	6013      	str	r3, [r2, #0]
 800c530:	e763      	b.n	800c3fa <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800c532:	695a      	ldr	r2, [r3, #20]
 800c534:	0612      	lsls	r2, r2, #24
 800c536:	d4c1      	bmi.n	800c4bc <HAL_I2C_Mem_Write+0xe4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c538:	695a      	ldr	r2, [r3, #20]
 800c53a:	0551      	lsls	r1, r2, #21
 800c53c:	d4a5      	bmi.n	800c48a <HAL_I2C_Mem_Write+0xb2>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c53e:	f7ff f841 	bl	800b5c4 <HAL_GetTick>
 800c542:	1b40      	subs	r0, r0, r5
 800c544:	4286      	cmp	r6, r0
 800c546:	d301      	bcc.n	800c54c <HAL_I2C_Mem_Write+0x174>
 800c548:	2e00      	cmp	r6, #0
 800c54a:	d195      	bne.n	800c478 <HAL_I2C_Mem_Write+0xa0>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800c54c:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800c54e:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800c550:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800c552:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800c556:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c55a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800c55c:	4313      	orrs	r3, r2
 800c55e:	6423      	str	r3, [r4, #64]	; 0x40
        return HAL_ERROR;
 800c560:	e7a1      	b.n	800c4a6 <HAL_I2C_Mem_Write+0xce>
        hi2c->State             = HAL_I2C_STATE_READY;
 800c562:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800c564:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800c568:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800c56c:	f884 b03e 	strb.w	fp, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c570:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800c572:	f884 b03c 	strb.w	fp, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c576:	f043 0320 	orr.w	r3, r3, #32
 800c57a:	6423      	str	r3, [r4, #64]	; 0x40
 800c57c:	e73c      	b.n	800c3f8 <HAL_I2C_Mem_Write+0x20>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c57e:	681a      	ldr	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800c580:	2100      	movs	r1, #0
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c582:	f442 7200 	orr.w	r2, r2, #512	; 0x200
    hi2c->State = HAL_I2C_STATE_READY;
 800c586:	2020      	movs	r0, #32
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c588:	601a      	str	r2, [r3, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800c58a:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800c58e:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800c592:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
    return HAL_OK;
 800c596:	e730      	b.n	800c3fa <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800c598:	695a      	ldr	r2, [r3, #20]
 800c59a:	0752      	lsls	r2, r2, #29
 800c59c:	d4ef      	bmi.n	800c57e <HAL_I2C_Mem_Write+0x1a6>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c59e:	695a      	ldr	r2, [r3, #20]
 800c5a0:	0551      	lsls	r1, r2, #21
 800c5a2:	f53f af72 	bmi.w	800c48a <HAL_I2C_Mem_Write+0xb2>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c5a6:	f7ff f80d 	bl	800b5c4 <HAL_GetTick>
 800c5aa:	1b40      	subs	r0, r0, r5
 800c5ac:	4286      	cmp	r6, r0
 800c5ae:	d3cd      	bcc.n	800c54c <HAL_I2C_Mem_Write+0x174>
 800c5b0:	2e00      	cmp	r6, #0
 800c5b2:	d0cb      	beq.n	800c54c <HAL_I2C_Mem_Write+0x174>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800c5b4:	6823      	ldr	r3, [r4, #0]
 800c5b6:	e796      	b.n	800c4e6 <HAL_I2C_Mem_Write+0x10e>
 800c5b8:	ffff0000 	.word	0xffff0000

0800c5bc <HAL_I2C_Mem_Read>:
{
 800c5bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c5c0:	4604      	mov	r4, r0
 800c5c2:	b087      	sub	sp, #28
 800c5c4:	4699      	mov	r9, r3
 800c5c6:	f8bd a044 	ldrh.w	sl, [sp, #68]	; 0x44
 800c5ca:	9d12      	ldr	r5, [sp, #72]	; 0x48
 800c5cc:	460f      	mov	r7, r1
 800c5ce:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800c5d0:	f7fe fff8 	bl	800b5c4 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800c5d4:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800c5d8:	2b20      	cmp	r3, #32
 800c5da:	d004      	beq.n	800c5e6 <HAL_I2C_Mem_Read+0x2a>
      return HAL_BUSY;
 800c5dc:	2702      	movs	r7, #2
}
 800c5de:	4638      	mov	r0, r7
 800c5e0:	b007      	add	sp, #28
 800c5e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c5e6:	4606      	mov	r6, r0
 800c5e8:	e005      	b.n	800c5f6 <HAL_I2C_Mem_Read+0x3a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c5ea:	f7fe ffeb 	bl	800b5c4 <HAL_GetTick>
 800c5ee:	1b80      	subs	r0, r0, r6
 800c5f0:	2819      	cmp	r0, #25
 800c5f2:	f200 80d2 	bhi.w	800c79a <HAL_I2C_Mem_Read+0x1de>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800c5f6:	f8d4 c000 	ldr.w	ip, [r4]
 800c5fa:	f8dc 0018 	ldr.w	r0, [ip, #24]
 800c5fe:	43c0      	mvns	r0, r0
 800c600:	f010 0b02 	ands.w	fp, r0, #2
 800c604:	d0f1      	beq.n	800c5ea <HAL_I2C_Mem_Read+0x2e>
    __HAL_LOCK(hi2c);
 800c606:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800c60a:	2b01      	cmp	r3, #1
 800c60c:	d0e6      	beq.n	800c5dc <HAL_I2C_Mem_Read+0x20>
 800c60e:	2301      	movs	r3, #1
 800c610:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800c614:	f8dc 3000 	ldr.w	r3, [ip]
 800c618:	07d9      	lsls	r1, r3, #31
 800c61a:	d537      	bpl.n	800c68c <HAL_I2C_Mem_Read+0xd0>
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800c61c:	f8dc 0000 	ldr.w	r0, [ip]
 800c620:	f420 6000 	bic.w	r0, r0, #2048	; 0x800
 800c624:	f8cc 0000 	str.w	r0, [ip]
    hi2c->pBuffPtr    = pData;
 800c628:	9810      	ldr	r0, [sp, #64]	; 0x40
 800c62a:	6260      	str	r0, [r4, #36]	; 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800c62c:	2022      	movs	r0, #34	; 0x22
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800c62e:	e9cd 5600 	strd	r5, r6, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800c632:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800c636:	2040      	movs	r0, #64	; 0x40
 800c638:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800c63c:	2000      	movs	r0, #0
 800c63e:	6420      	str	r0, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 800c640:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800c644:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 800c646:	8520      	strh	r0, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800c648:	4893      	ldr	r0, [pc, #588]	; (800c898 <HAL_I2C_Mem_Read+0x2dc>)
 800c64a:	62e0      	str	r0, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800c64c:	4639      	mov	r1, r7
 800c64e:	464b      	mov	r3, r9
 800c650:	4642      	mov	r2, r8
 800c652:	4620      	mov	r0, r4
 800c654:	f7ff fca2 	bl	800bf9c <I2C_RequestMemoryRead>
 800c658:	4607      	mov	r7, r0
 800c65a:	2800      	cmp	r0, #0
 800c65c:	f040 80ab 	bne.w	800c7b6 <HAL_I2C_Mem_Read+0x1fa>
    if (hi2c->XferSize == 0U)
 800c660:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 800c662:	b9d2      	cbnz	r2, 800c69a <HAL_I2C_Mem_Read+0xde>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800c664:	6823      	ldr	r3, [r4, #0]
 800c666:	9002      	str	r0, [sp, #8]
 800c668:	695a      	ldr	r2, [r3, #20]
 800c66a:	9202      	str	r2, [sp, #8]
 800c66c:	699a      	ldr	r2, [r3, #24]
 800c66e:	9202      	str	r2, [sp, #8]
 800c670:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c672:	681a      	ldr	r2, [r3, #0]
 800c674:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800c678:	601a      	str	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800c67a:	2300      	movs	r3, #0
    hi2c->State = HAL_I2C_STATE_READY;
 800c67c:	2220      	movs	r2, #32
 800c67e:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800c682:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800c686:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 800c68a:	e7a8      	b.n	800c5de <HAL_I2C_Mem_Read+0x22>
      __HAL_I2C_ENABLE(hi2c);
 800c68c:	f8dc 3000 	ldr.w	r3, [ip]
 800c690:	f043 0301 	orr.w	r3, r3, #1
 800c694:	f8cc 3000 	str.w	r3, [ip]
 800c698:	e7c0      	b.n	800c61c <HAL_I2C_Mem_Read+0x60>
    else if (hi2c->XferSize == 1U)
 800c69a:	2a01      	cmp	r2, #1
 800c69c:	f000 812c 	beq.w	800c8f8 <HAL_I2C_Mem_Read+0x33c>
    else if (hi2c->XferSize == 2U)
 800c6a0:	2a02      	cmp	r2, #2
 800c6a2:	f000 80bd 	beq.w	800c820 <HAL_I2C_Mem_Read+0x264>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800c6a6:	6823      	ldr	r3, [r4, #0]
 800c6a8:	9005      	str	r0, [sp, #20]
 800c6aa:	6959      	ldr	r1, [r3, #20]
 800c6ac:	9105      	str	r1, [sp, #20]
 800c6ae:	6999      	ldr	r1, [r3, #24]
 800c6b0:	9105      	str	r1, [sp, #20]
 800c6b2:	9905      	ldr	r1, [sp, #20]
      if (hi2c->XferSize <= 3U)
 800c6b4:	2a03      	cmp	r2, #3
 800c6b6:	d849      	bhi.n	800c74c <HAL_I2C_Mem_Read+0x190>
        if (hi2c->XferSize == 1U)
 800c6b8:	2a01      	cmp	r2, #1
 800c6ba:	f000 80eb 	beq.w	800c894 <HAL_I2C_Mem_Read+0x2d8>
        else if (hi2c->XferSize == 2U)
 800c6be:	2a02      	cmp	r2, #2
 800c6c0:	f000 8089 	beq.w	800c7d6 <HAL_I2C_Mem_Read+0x21a>
 800c6c4:	1c69      	adds	r1, r5, #1
 800c6c6:	f040 80bb 	bne.w	800c840 <HAL_I2C_Mem_Read+0x284>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800c6ca:	695a      	ldr	r2, [r3, #20]
 800c6cc:	0752      	lsls	r2, r2, #29
 800c6ce:	d5fc      	bpl.n	800c6ca <HAL_I2C_Mem_Read+0x10e>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800c6d0:	681a      	ldr	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c6d2:	6a61      	ldr	r1, [r4, #36]	; 0x24
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800c6d4:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800c6d8:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c6da:	691b      	ldr	r3, [r3, #16]
 800c6dc:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 800c6de:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800c6e0:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800c6e2:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800c6e4:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 800c6e6:	3101      	adds	r1, #1
          hi2c->XferSize--;
 800c6e8:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800c6ea:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 800c6ec:	6261      	str	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800c6ee:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800c6f0:	8563      	strh	r3, [r4, #42]	; 0x2a
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 800c6f2:	1c69      	adds	r1, r5, #1
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800c6f4:	6822      	ldr	r2, [r4, #0]
 800c6f6:	f040 80af 	bne.w	800c858 <HAL_I2C_Mem_Read+0x29c>
 800c6fa:	6953      	ldr	r3, [r2, #20]
 800c6fc:	075b      	lsls	r3, r3, #29
 800c6fe:	d5fc      	bpl.n	800c6fa <HAL_I2C_Mem_Read+0x13e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c700:	6813      	ldr	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c702:	6a61      	ldr	r1, [r4, #36]	; 0x24
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c704:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800c708:	6013      	str	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c70a:	6913      	ldr	r3, [r2, #16]
 800c70c:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 800c70e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800c710:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800c712:	6a60      	ldr	r0, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c714:	6821      	ldr	r1, [r4, #0]
          hi2c->XferCount--;
 800c716:	3b01      	subs	r3, #1
 800c718:	b29b      	uxth	r3, r3
 800c71a:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c71c:	6909      	ldr	r1, [r1, #16]
          hi2c->XferSize--;
 800c71e:	1e53      	subs	r3, r2, #1
          hi2c->pBuffPtr++;
 800c720:	f100 0c01 	add.w	ip, r0, #1
          hi2c->XferSize--;
 800c724:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800c726:	f8c4 c024 	str.w	ip, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c72a:	7041      	strb	r1, [r0, #1]
          hi2c->XferSize--;
 800c72c:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800c72e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800c730:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800c732:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800c734:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 800c736:	3101      	adds	r1, #1
          hi2c->XferSize--;
 800c738:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 800c73a:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 800c73c:	6261      	str	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800c73e:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800c740:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 800c742:	2a00      	cmp	r2, #0
 800c744:	d099      	beq.n	800c67a <HAL_I2C_Mem_Read+0xbe>
      if (hi2c->XferSize <= 3U)
 800c746:	2a03      	cmp	r2, #3
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800c748:	6823      	ldr	r3, [r4, #0]
      if (hi2c->XferSize <= 3U)
 800c74a:	d9b5      	bls.n	800c6b8 <HAL_I2C_Mem_Read+0xfc>
 800c74c:	b95d      	cbnz	r5, 800c766 <HAL_I2C_Mem_Read+0x1aa>
 800c74e:	e0c5      	b.n	800c8dc <HAL_I2C_Mem_Read+0x320>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800c750:	695a      	ldr	r2, [r3, #20]
 800c752:	06d0      	lsls	r0, r2, #27
 800c754:	f100 80b2 	bmi.w	800c8bc <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c758:	f7fe ff34 	bl	800b5c4 <HAL_GetTick>
 800c75c:	1b80      	subs	r0, r0, r6
 800c75e:	4285      	cmp	r5, r0
 800c760:	f0c0 8086 	bcc.w	800c870 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800c764:	6823      	ldr	r3, [r4, #0]
 800c766:	695a      	ldr	r2, [r3, #20]
 800c768:	0652      	lsls	r2, r2, #25
 800c76a:	d5f1      	bpl.n	800c750 <HAL_I2C_Mem_Read+0x194>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c76c:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800c76e:	691b      	ldr	r3, [r3, #16]
 800c770:	7013      	strb	r3, [r2, #0]
        hi2c->XferCount--;
 800c772:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800c774:	6820      	ldr	r0, [r4, #0]
        hi2c->XferSize--;
 800c776:	8d22      	ldrh	r2, [r4, #40]	; 0x28
        hi2c->pBuffPtr++;
 800c778:	6a61      	ldr	r1, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800c77a:	3b01      	subs	r3, #1
 800c77c:	b29b      	uxth	r3, r3
 800c77e:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800c780:	6943      	ldr	r3, [r0, #20]
        hi2c->XferSize--;
 800c782:	3a01      	subs	r2, #1
 800c784:	b292      	uxth	r2, r2
        hi2c->pBuffPtr++;
 800c786:	f101 0c01 	add.w	ip, r1, #1
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800c78a:	075b      	lsls	r3, r3, #29
        hi2c->XferSize--;
 800c78c:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->pBuffPtr++;
 800c78e:	f8c4 c024 	str.w	ip, [r4, #36]	; 0x24
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800c792:	d5d6      	bpl.n	800c742 <HAL_I2C_Mem_Read+0x186>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c794:	6903      	ldr	r3, [r0, #16]
 800c796:	704b      	strb	r3, [r1, #1]
 800c798:	e036      	b.n	800c808 <HAL_I2C_Mem_Read+0x24c>
        hi2c->State             = HAL_I2C_STATE_READY;
 800c79a:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800c79c:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800c7a0:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800c7a4:	f884 b03e 	strb.w	fp, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c7a8:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800c7aa:	f884 b03c 	strb.w	fp, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c7ae:	f043 0320 	orr.w	r3, r3, #32
 800c7b2:	6423      	str	r3, [r4, #64]	; 0x40
 800c7b4:	e712      	b.n	800c5dc <HAL_I2C_Mem_Read+0x20>
      return HAL_ERROR;
 800c7b6:	2701      	movs	r7, #1
}
 800c7b8:	4638      	mov	r0, r7
 800c7ba:	b007      	add	sp, #28
 800c7bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800c7c0:	695a      	ldr	r2, [r3, #20]
 800c7c2:	0750      	lsls	r0, r2, #29
 800c7c4:	d40c      	bmi.n	800c7e0 <HAL_I2C_Mem_Read+0x224>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c7c6:	f7fe fefd 	bl	800b5c4 <HAL_GetTick>
 800c7ca:	1b80      	subs	r0, r0, r6
 800c7cc:	4285      	cmp	r5, r0
 800c7ce:	d34f      	bcc.n	800c870 <HAL_I2C_Mem_Read+0x2b4>
 800c7d0:	2d00      	cmp	r5, #0
 800c7d2:	d04d      	beq.n	800c870 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800c7d4:	6823      	ldr	r3, [r4, #0]
 800c7d6:	1c69      	adds	r1, r5, #1
 800c7d8:	d1f2      	bne.n	800c7c0 <HAL_I2C_Mem_Read+0x204>
 800c7da:	695a      	ldr	r2, [r3, #20]
 800c7dc:	0752      	lsls	r2, r2, #29
 800c7de:	d5fc      	bpl.n	800c7da <HAL_I2C_Mem_Read+0x21e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c7e0:	681a      	ldr	r2, [r3, #0]
 800c7e2:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800c7e6:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c7e8:	691a      	ldr	r2, [r3, #16]
 800c7ea:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800c7ec:	701a      	strb	r2, [r3, #0]
          hi2c->XferCount--;
 800c7ee:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800c7f0:	6a62      	ldr	r2, [r4, #36]	; 0x24
          hi2c->XferCount--;
 800c7f2:	3b01      	subs	r3, #1
 800c7f4:	b29b      	uxth	r3, r3
 800c7f6:	8563      	strh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800c7f8:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800c7fa:	3b01      	subs	r3, #1
 800c7fc:	8523      	strh	r3, [r4, #40]	; 0x28
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c7fe:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 800c800:	1c51      	adds	r1, r2, #1
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c802:	691b      	ldr	r3, [r3, #16]
          hi2c->pBuffPtr++;
 800c804:	6261      	str	r1, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c806:	7053      	strb	r3, [r2, #1]
          hi2c->pBuffPtr++;
 800c808:	6a63      	ldr	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800c80a:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800c80c:	3301      	adds	r3, #1
 800c80e:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferCount--;
 800c810:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800c812:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800c814:	3b01      	subs	r3, #1
          hi2c->XferSize--;
 800c816:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 800c818:	b29b      	uxth	r3, r3
          hi2c->XferSize--;
 800c81a:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800c81c:	8563      	strh	r3, [r4, #42]	; 0x2a
 800c81e:	e790      	b.n	800c742 <HAL_I2C_Mem_Read+0x186>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800c820:	6823      	ldr	r3, [r4, #0]
 800c822:	6819      	ldr	r1, [r3, #0]
 800c824:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800c828:	6019      	str	r1, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800c82a:	6819      	ldr	r1, [r3, #0]
 800c82c:	f441 6100 	orr.w	r1, r1, #2048	; 0x800
 800c830:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800c832:	9004      	str	r0, [sp, #16]
 800c834:	6959      	ldr	r1, [r3, #20]
 800c836:	9104      	str	r1, [sp, #16]
 800c838:	6999      	ldr	r1, [r3, #24]
 800c83a:	9104      	str	r1, [sp, #16]
 800c83c:	9904      	ldr	r1, [sp, #16]
 800c83e:	e739      	b.n	800c6b4 <HAL_I2C_Mem_Read+0xf8>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800c840:	695a      	ldr	r2, [r3, #20]
 800c842:	0750      	lsls	r0, r2, #29
 800c844:	f53f af44 	bmi.w	800c6d0 <HAL_I2C_Mem_Read+0x114>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c848:	f7fe febc 	bl	800b5c4 <HAL_GetTick>
 800c84c:	1b80      	subs	r0, r0, r6
 800c84e:	4285      	cmp	r5, r0
 800c850:	d30e      	bcc.n	800c870 <HAL_I2C_Mem_Read+0x2b4>
 800c852:	b16d      	cbz	r5, 800c870 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800c854:	6823      	ldr	r3, [r4, #0]
 800c856:	e735      	b.n	800c6c4 <HAL_I2C_Mem_Read+0x108>
 800c858:	6953      	ldr	r3, [r2, #20]
 800c85a:	0758      	lsls	r0, r3, #29
 800c85c:	f53f af50 	bmi.w	800c700 <HAL_I2C_Mem_Read+0x144>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c860:	f7fe feb0 	bl	800b5c4 <HAL_GetTick>
 800c864:	1b80      	subs	r0, r0, r6
 800c866:	4285      	cmp	r5, r0
 800c868:	d302      	bcc.n	800c870 <HAL_I2C_Mem_Read+0x2b4>
 800c86a:	2d00      	cmp	r5, #0
 800c86c:	f47f af41 	bne.w	800c6f2 <HAL_I2C_Mem_Read+0x136>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800c870:	2200      	movs	r2, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800c872:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800c874:	6322      	str	r2, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800c876:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800c87a:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c87e:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800c880:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
          return HAL_ERROR;
 800c884:	2701      	movs	r7, #1
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c886:	f043 0320 	orr.w	r3, r3, #32
}
 800c88a:	4638      	mov	r0, r7
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c88c:	6423      	str	r3, [r4, #64]	; 0x40
}
 800c88e:	b007      	add	sp, #28
 800c890:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c894:	b95d      	cbnz	r5, 800c8ae <HAL_I2C_Mem_Read+0x2f2>
 800c896:	e02b      	b.n	800c8f0 <HAL_I2C_Mem_Read+0x334>
 800c898:	ffff0000 	.word	0xffff0000
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800c89c:	695a      	ldr	r2, [r3, #20]
 800c89e:	06d2      	lsls	r2, r2, #27
 800c8a0:	d40c      	bmi.n	800c8bc <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c8a2:	f7fe fe8f 	bl	800b5c4 <HAL_GetTick>
 800c8a6:	1b80      	subs	r0, r0, r6
 800c8a8:	4285      	cmp	r5, r0
 800c8aa:	d3e1      	bcc.n	800c870 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800c8ac:	6823      	ldr	r3, [r4, #0]
 800c8ae:	695a      	ldr	r2, [r3, #20]
 800c8b0:	0651      	lsls	r1, r2, #25
 800c8b2:	d5f3      	bpl.n	800c89c <HAL_I2C_Mem_Read+0x2e0>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c8b4:	691a      	ldr	r2, [r3, #16]
 800c8b6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800c8b8:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800c8ba:	e7a5      	b.n	800c808 <HAL_I2C_Mem_Read+0x24c>
      hi2c->PreviousState       = I2C_STATE_NONE;
 800c8bc:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800c8be:	f06f 0010 	mvn.w	r0, #16
      hi2c->State               = HAL_I2C_STATE_READY;
 800c8c2:	2120      	movs	r1, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800c8c4:	6158      	str	r0, [r3, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800c8c6:	6322      	str	r2, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800c8c8:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800c8cc:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 800c8d0:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800c8d2:	6423      	str	r3, [r4, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800c8d4:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
          return HAL_ERROR;
 800c8d8:	2701      	movs	r7, #1
 800c8da:	e680      	b.n	800c5de <HAL_I2C_Mem_Read+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800c8dc:	695a      	ldr	r2, [r3, #20]
 800c8de:	0652      	lsls	r2, r2, #25
 800c8e0:	f53f af44 	bmi.w	800c76c <HAL_I2C_Mem_Read+0x1b0>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800c8e4:	695a      	ldr	r2, [r3, #20]
 800c8e6:	06d1      	lsls	r1, r2, #27
 800c8e8:	d4e8      	bmi.n	800c8bc <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c8ea:	f7fe fe6b 	bl	800b5c4 <HAL_GetTick>
 800c8ee:	e7bf      	b.n	800c870 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800c8f0:	695a      	ldr	r2, [r3, #20]
 800c8f2:	0650      	lsls	r0, r2, #25
 800c8f4:	d5f6      	bpl.n	800c8e4 <HAL_I2C_Mem_Read+0x328>
 800c8f6:	e7dd      	b.n	800c8b4 <HAL_I2C_Mem_Read+0x2f8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800c8f8:	6823      	ldr	r3, [r4, #0]
 800c8fa:	6819      	ldr	r1, [r3, #0]
 800c8fc:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800c900:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800c902:	9003      	str	r0, [sp, #12]
 800c904:	6959      	ldr	r1, [r3, #20]
 800c906:	9103      	str	r1, [sp, #12]
 800c908:	6999      	ldr	r1, [r3, #24]
 800c90a:	9103      	str	r1, [sp, #12]
 800c90c:	9903      	ldr	r1, [sp, #12]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c90e:	6819      	ldr	r1, [r3, #0]
 800c910:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 800c914:	6019      	str	r1, [r3, #0]
 800c916:	e6cd      	b.n	800c6b4 <HAL_I2C_Mem_Read+0xf8>

0800c918 <HAL_I2C_MasterTxCpltCallback>:
 800c918:	4770      	bx	lr
 800c91a:	bf00      	nop

0800c91c <HAL_I2C_MasterRxCpltCallback>:
 800c91c:	4770      	bx	lr
 800c91e:	bf00      	nop

0800c920 <HAL_I2C_SlaveTxCpltCallback>:
 800c920:	4770      	bx	lr
 800c922:	bf00      	nop

0800c924 <HAL_I2C_SlaveRxCpltCallback>:
 800c924:	4770      	bx	lr
 800c926:	bf00      	nop

0800c928 <HAL_I2C_AddrCallback>:
}
 800c928:	4770      	bx	lr
 800c92a:	bf00      	nop

0800c92c <HAL_I2C_ListenCpltCallback>:
 800c92c:	4770      	bx	lr
 800c92e:	bf00      	nop

0800c930 <HAL_I2C_MemTxCpltCallback>:
 800c930:	4770      	bx	lr
 800c932:	bf00      	nop

0800c934 <I2C_MemoryTransmit_TXE_BTF>:
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800c934:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  if (hi2c->EventCount == 0U)
 800c938:	6d01      	ldr	r1, [r0, #80]	; 0x50
{
 800c93a:	4603      	mov	r3, r0
  if (hi2c->EventCount == 0U)
 800c93c:	b959      	cbnz	r1, 800c956 <I2C_MemoryTransmit_TXE_BTF+0x22>
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800c93e:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800c940:	6801      	ldr	r1, [r0, #0]
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800c942:	2a01      	cmp	r2, #1
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800c944:	6c82      	ldr	r2, [r0, #72]	; 0x48
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800c946:	d00d      	beq.n	800c964 <I2C_MemoryTransmit_TXE_BTF+0x30>
      hi2c->Instance->DR = I2C_MEM_ADD_MSB(hi2c->Memaddress);
 800c948:	f3c2 2207 	ubfx	r2, r2, #8, #8
 800c94c:	610a      	str	r2, [r1, #16]
      hi2c->EventCount++;
 800c94e:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800c950:	3201      	adds	r2, #1
 800c952:	6502      	str	r2, [r0, #80]	; 0x50
 800c954:	4770      	bx	lr
  else if (hi2c->EventCount == 1U)
 800c956:	6d01      	ldr	r1, [r0, #80]	; 0x50
 800c958:	2901      	cmp	r1, #1
 800c95a:	d009      	beq.n	800c970 <I2C_MemoryTransmit_TXE_BTF+0x3c>
  else if (hi2c->EventCount == 2U)
 800c95c:	6d01      	ldr	r1, [r0, #80]	; 0x50
 800c95e:	2902      	cmp	r1, #2
 800c960:	d00e      	beq.n	800c980 <I2C_MemoryTransmit_TXE_BTF+0x4c>
 800c962:	4770      	bx	lr
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800c964:	b2d2      	uxtb	r2, r2
 800c966:	610a      	str	r2, [r1, #16]
      hi2c->EventCount += 2U;
 800c968:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800c96a:	3202      	adds	r2, #2
 800c96c:	6502      	str	r2, [r0, #80]	; 0x50
 800c96e:	4770      	bx	lr
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800c970:	6c82      	ldr	r2, [r0, #72]	; 0x48
 800c972:	6801      	ldr	r1, [r0, #0]
 800c974:	b2d2      	uxtb	r2, r2
 800c976:	610a      	str	r2, [r1, #16]
    hi2c->EventCount++;
 800c978:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800c97a:	3201      	adds	r2, #1
 800c97c:	6502      	str	r2, [r0, #80]	; 0x50
 800c97e:	4770      	bx	lr
 800c980:	b2d2      	uxtb	r2, r2
    if (CurrentState == HAL_I2C_STATE_BUSY_RX)
 800c982:	2a22      	cmp	r2, #34	; 0x22
 800c984:	d01f      	beq.n	800c9c6 <I2C_MemoryTransmit_TXE_BTF+0x92>
    else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800c986:	8d41      	ldrh	r1, [r0, #42]	; 0x2a
 800c988:	b289      	uxth	r1, r1
 800c98a:	b9c1      	cbnz	r1, 800c9be <I2C_MemoryTransmit_TXE_BTF+0x8a>
    else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800c98c:	8d41      	ldrh	r1, [r0, #42]	; 0x2a
 800c98e:	b289      	uxth	r1, r1
 800c990:	2900      	cmp	r1, #0
 800c992:	d1e6      	bne.n	800c962 <I2C_MemoryTransmit_TXE_BTF+0x2e>
 800c994:	2a21      	cmp	r2, #33	; 0x21
 800c996:	d1e4      	bne.n	800c962 <I2C_MemoryTransmit_TXE_BTF+0x2e>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800c998:	6802      	ldr	r2, [r0, #0]
{
 800c99a:	b510      	push	{r4, lr}
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800c99c:	6854      	ldr	r4, [r2, #4]
 800c99e:	f424 64e0 	bic.w	r4, r4, #1792	; 0x700
 800c9a2:	6054      	str	r4, [r2, #4]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c9a4:	6814      	ldr	r4, [r2, #0]
 800c9a6:	f444 7400 	orr.w	r4, r4, #512	; 0x200
 800c9aa:	6014      	str	r4, [r2, #0]
      hi2c->State = HAL_I2C_STATE_READY;
 800c9ac:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 800c9ae:	6301      	str	r1, [r0, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_READY;
 800c9b0:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800c9b4:	f880 103e 	strb.w	r1, [r0, #62]	; 0x3e
      HAL_I2C_MemTxCpltCallback(hi2c);
 800c9b8:	f7ff ffba 	bl	800c930 <HAL_I2C_MemTxCpltCallback>
}
 800c9bc:	bd10      	pop	{r4, pc}
    else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800c9be:	2a21      	cmp	r2, #33	; 0x21
 800c9c0:	d00a      	beq.n	800c9d8 <I2C_MemoryTransmit_TXE_BTF+0xa4>
    else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800c9c2:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800c9c4:	4770      	bx	lr
      hi2c->Instance->CR1 |= I2C_CR1_START;
 800c9c6:	6801      	ldr	r1, [r0, #0]
 800c9c8:	680a      	ldr	r2, [r1, #0]
 800c9ca:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800c9ce:	600a      	str	r2, [r1, #0]
      hi2c->EventCount++;
 800c9d0:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800c9d2:	3201      	adds	r2, #1
 800c9d4:	6502      	str	r2, [r0, #80]	; 0x50
 800c9d6:	4770      	bx	lr
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800c9d8:	6a41      	ldr	r1, [r0, #36]	; 0x24
 800c9da:	6802      	ldr	r2, [r0, #0]
 800c9dc:	f811 0b01 	ldrb.w	r0, [r1], #1
 800c9e0:	6110      	str	r0, [r2, #16]
      hi2c->XferCount--;
 800c9e2:	8d5a      	ldrh	r2, [r3, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800c9e4:	6259      	str	r1, [r3, #36]	; 0x24
      hi2c->XferCount--;
 800c9e6:	3a01      	subs	r2, #1
 800c9e8:	b292      	uxth	r2, r2
 800c9ea:	855a      	strh	r2, [r3, #42]	; 0x2a
 800c9ec:	4770      	bx	lr
 800c9ee:	bf00      	nop

0800c9f0 <HAL_I2C_MemRxCpltCallback>:
 800c9f0:	4770      	bx	lr
 800c9f2:	bf00      	nop

0800c9f4 <HAL_I2C_ErrorCallback>:
 800c9f4:	4770      	bx	lr
 800c9f6:	bf00      	nop

0800c9f8 <HAL_I2C_AbortCpltCallback>:
 800c9f8:	4770      	bx	lr
 800c9fa:	bf00      	nop

0800c9fc <I2C_DMAAbort>:
{
 800c9fc:	b570      	push	{r4, r5, r6, lr}
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800c9fe:	4b3a      	ldr	r3, [pc, #232]	; (800cae8 <I2C_DMAAbort+0xec>)
 800ca00:	4a3a      	ldr	r2, [pc, #232]	; (800caec <I2C_DMAAbort+0xf0>)
 800ca02:	681b      	ldr	r3, [r3, #0]
  I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent; /* Derogation MISRAC2012-Rule-11.5 */
 800ca04:	6b80      	ldr	r0, [r0, #56]	; 0x38
{
 800ca06:	b082      	sub	sp, #8
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800ca08:	08db      	lsrs	r3, r3, #3
  __IO uint32_t count = 0U;
 800ca0a:	2100      	movs	r1, #0
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800ca0c:	fba2 2303 	umull	r2, r3, r2, r3
  __IO uint32_t count = 0U;
 800ca10:	9101      	str	r1, [sp, #4]
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800ca12:	0a1b      	lsrs	r3, r3, #8
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800ca14:	f890 103d 	ldrb.w	r1, [r0, #61]	; 0x3d
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800ca18:	6802      	ldr	r2, [r0, #0]
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800ca1a:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800ca1e:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800ca22:	b2c9      	uxtb	r1, r1
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800ca24:	9301      	str	r3, [sp, #4]
 800ca26:	e005      	b.n	800ca34 <I2C_DMAAbort+0x38>
    count--;
 800ca28:	9b01      	ldr	r3, [sp, #4]
 800ca2a:	3b01      	subs	r3, #1
 800ca2c:	9301      	str	r3, [sp, #4]
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800ca2e:	6813      	ldr	r3, [r2, #0]
 800ca30:	059b      	lsls	r3, r3, #22
 800ca32:	d506      	bpl.n	800ca42 <I2C_DMAAbort+0x46>
    if (count == 0U)
 800ca34:	9b01      	ldr	r3, [sp, #4]
 800ca36:	2b00      	cmp	r3, #0
 800ca38:	d1f6      	bne.n	800ca28 <I2C_DMAAbort+0x2c>
      hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 800ca3a:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800ca3c:	f043 0320 	orr.w	r3, r3, #32
 800ca40:	6403      	str	r3, [r0, #64]	; 0x40
  if (hi2c->hdmatx != NULL)
 800ca42:	6b44      	ldr	r4, [r0, #52]	; 0x34
 800ca44:	b34c      	cbz	r4, 800ca9a <I2C_DMAAbort+0x9e>
  if (hi2c->hdmarx != NULL)
 800ca46:	6b83      	ldr	r3, [r0, #56]	; 0x38
    hi2c->hdmatx->XferCpltCallback = NULL;
 800ca48:	2500      	movs	r5, #0
 800ca4a:	63e5      	str	r5, [r4, #60]	; 0x3c
  if (hi2c->hdmarx != NULL)
 800ca4c:	b1f3      	cbz	r3, 800ca8c <I2C_DMAAbort+0x90>
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ca4e:	6816      	ldr	r6, [r2, #0]
    hi2c->hdmarx->XferCpltCallback = NULL;
 800ca50:	63dd      	str	r5, [r3, #60]	; 0x3c
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ca52:	f426 6680 	bic.w	r6, r6, #1024	; 0x400
 800ca56:	6016      	str	r6, [r2, #0]
  hi2c->XferCount = 0U;
 800ca58:	8545      	strh	r5, [r0, #42]	; 0x2a
    hi2c->hdmatx->XferAbortCallback = NULL;
 800ca5a:	6525      	str	r5, [r4, #80]	; 0x50
    hi2c->hdmarx->XferAbortCallback = NULL;
 800ca5c:	2400      	movs	r4, #0
 800ca5e:	651c      	str	r4, [r3, #80]	; 0x50
  __HAL_I2C_DISABLE(hi2c);
 800ca60:	6813      	ldr	r3, [r2, #0]
 800ca62:	f023 0301 	bic.w	r3, r3, #1
 800ca66:	6013      	str	r3, [r2, #0]
  if (hi2c->State == HAL_I2C_STATE_ABORT)
 800ca68:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800ca6c:	2b60      	cmp	r3, #96	; 0x60
 800ca6e:	d02a      	beq.n	800cac6 <I2C_DMAAbort+0xca>
    if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800ca70:	f001 0128 	and.w	r1, r1, #40	; 0x28
 800ca74:	2928      	cmp	r1, #40	; 0x28
 800ca76:	d019      	beq.n	800caac <I2C_DMAAbort+0xb0>
      hi2c->State = HAL_I2C_STATE_READY;
 800ca78:	2220      	movs	r2, #32
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800ca7a:	2300      	movs	r3, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800ca7c:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800ca80:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    HAL_I2C_ErrorCallback(hi2c);
 800ca84:	f7ff ffb6 	bl	800c9f4 <HAL_I2C_ErrorCallback>
}
 800ca88:	b002      	add	sp, #8
 800ca8a:	bd70      	pop	{r4, r5, r6, pc}
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ca8c:	6815      	ldr	r5, [r2, #0]
 800ca8e:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
 800ca92:	6015      	str	r5, [r2, #0]
  hi2c->XferCount = 0U;
 800ca94:	8543      	strh	r3, [r0, #42]	; 0x2a
    hi2c->hdmatx->XferAbortCallback = NULL;
 800ca96:	6523      	str	r3, [r4, #80]	; 0x50
  if (hi2c->hdmarx != NULL)
 800ca98:	e7e2      	b.n	800ca60 <I2C_DMAAbort+0x64>
  if (hi2c->hdmarx != NULL)
 800ca9a:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800ca9c:	b1f3      	cbz	r3, 800cadc <I2C_DMAAbort+0xe0>
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ca9e:	6815      	ldr	r5, [r2, #0]
    hi2c->hdmarx->XferCpltCallback = NULL;
 800caa0:	63dc      	str	r4, [r3, #60]	; 0x3c
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800caa2:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
 800caa6:	6015      	str	r5, [r2, #0]
  hi2c->XferCount = 0U;
 800caa8:	8544      	strh	r4, [r0, #42]	; 0x2a
  if (hi2c->hdmatx != NULL)
 800caaa:	e7d7      	b.n	800ca5c <I2C_DMAAbort+0x60>
      __HAL_I2C_ENABLE(hi2c);
 800caac:	6813      	ldr	r3, [r2, #0]
 800caae:	f043 0301 	orr.w	r3, r3, #1
 800cab2:	6013      	str	r3, [r2, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800cab4:	6813      	ldr	r3, [r2, #0]
      hi2c->PreviousState = I2C_STATE_NONE;
 800cab6:	2400      	movs	r4, #0
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800cab8:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800cabc:	6013      	str	r3, [r2, #0]
      hi2c->PreviousState = I2C_STATE_NONE;
 800cabe:	6304      	str	r4, [r0, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800cac0:	f880 103d 	strb.w	r1, [r0, #61]	; 0x3d
 800cac4:	e7de      	b.n	800ca84 <I2C_DMAAbort+0x88>
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800cac6:	2300      	movs	r3, #0
    hi2c->State         = HAL_I2C_STATE_READY;
 800cac8:	2220      	movs	r2, #32
 800caca:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800cace:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    hi2c->ErrorCode     = HAL_I2C_ERROR_NONE;
 800cad2:	6403      	str	r3, [r0, #64]	; 0x40
    HAL_I2C_AbortCpltCallback(hi2c);
 800cad4:	f7ff ff90 	bl	800c9f8 <HAL_I2C_AbortCpltCallback>
}
 800cad8:	b002      	add	sp, #8
 800cada:	bd70      	pop	{r4, r5, r6, pc}
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800cadc:	6814      	ldr	r4, [r2, #0]
 800cade:	f424 6480 	bic.w	r4, r4, #1024	; 0x400
 800cae2:	6014      	str	r4, [r2, #0]
  hi2c->XferCount = 0U;
 800cae4:	8543      	strh	r3, [r0, #42]	; 0x2a
  if (hi2c->hdmatx != NULL)
 800cae6:	e7bb      	b.n	800ca60 <I2C_DMAAbort+0x64>
 800cae8:	2000007c 	.word	0x2000007c
 800caec:	14f8b589 	.word	0x14f8b589

0800caf0 <I2C_ITError>:
{
 800caf0:	b510      	push	{r4, lr}
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800caf2:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  HAL_I2C_ModeTypeDef CurrentMode = hi2c->Mode;
 800caf6:	f890 303e 	ldrb.w	r3, [r0, #62]	; 0x3e
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800cafa:	2b10      	cmp	r3, #16
{
 800cafc:	4604      	mov	r4, r0
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800cafe:	b2d2      	uxtb	r2, r2
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800cb00:	d039      	beq.n	800cb76 <I2C_ITError+0x86>
 800cb02:	b2d9      	uxtb	r1, r3
 800cb04:	2940      	cmp	r1, #64	; 0x40
 800cb06:	d036      	beq.n	800cb76 <I2C_ITError+0x86>
  if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800cb08:	f002 0128 	and.w	r1, r2, #40	; 0x28
 800cb0c:	2928      	cmp	r1, #40	; 0x28
 800cb0e:	d03d      	beq.n	800cb8c <I2C_ITError+0x9c>
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800cb10:	6823      	ldr	r3, [r4, #0]
    if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C_STATE_ABORT))
 800cb12:	6859      	ldr	r1, [r3, #4]
 800cb14:	0508      	lsls	r0, r1, #20
 800cb16:	d407      	bmi.n	800cb28 <I2C_ITError+0x38>
 800cb18:	2a60      	cmp	r2, #96	; 0x60
 800cb1a:	d005      	beq.n	800cb28 <I2C_ITError+0x38>
      hi2c->State = HAL_I2C_STATE_READY;
 800cb1c:	2120      	movs	r1, #32
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800cb1e:	2200      	movs	r2, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800cb20:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800cb24:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
    hi2c->PreviousState = I2C_STATE_NONE;
 800cb28:	2200      	movs	r2, #0
 800cb2a:	6322      	str	r2, [r4, #48]	; 0x30
  if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800cb2c:	685a      	ldr	r2, [r3, #4]
 800cb2e:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800cb32:	d134      	bne.n	800cb9e <I2C_ITError+0xae>
  else if (hi2c->State == HAL_I2C_STATE_ABORT)
 800cb34:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 800cb38:	2960      	cmp	r1, #96	; 0x60
 800cb3a:	d075      	beq.n	800cc28 <I2C_ITError+0x138>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800cb3c:	695a      	ldr	r2, [r3, #20]
 800cb3e:	0650      	lsls	r0, r2, #25
 800cb40:	d505      	bpl.n	800cb4e <I2C_ITError+0x5e>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800cb42:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800cb44:	691b      	ldr	r3, [r3, #16]
 800cb46:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 800cb48:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800cb4a:	3301      	adds	r3, #1
 800cb4c:	6263      	str	r3, [r4, #36]	; 0x24
    HAL_I2C_ErrorCallback(hi2c);
 800cb4e:	4620      	mov	r0, r4
 800cb50:	f7ff ff50 	bl	800c9f4 <HAL_I2C_ErrorCallback>
  CurrentError = hi2c->ErrorCode;
 800cb54:	6c23      	ldr	r3, [r4, #64]	; 0x40
  if (((CurrentError & HAL_I2C_ERROR_BERR) == HAL_I2C_ERROR_BERR) || \
 800cb56:	0719      	lsls	r1, r3, #28
 800cb58:	d004      	beq.n	800cb64 <I2C_ITError+0x74>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800cb5a:	6822      	ldr	r2, [r4, #0]
 800cb5c:	6853      	ldr	r3, [r2, #4]
 800cb5e:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800cb62:	6053      	str	r3, [r2, #4]
  CurrentState = hi2c->State;
 800cb64:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
  if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_LISTEN))
 800cb68:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800cb6a:	0752      	lsls	r2, r2, #29
  CurrentState = hi2c->State;
 800cb6c:	b2db      	uxtb	r3, r3
  if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_LISTEN))
 800cb6e:	d501      	bpl.n	800cb74 <I2C_ITError+0x84>
 800cb70:	2b28      	cmp	r3, #40	; 0x28
 800cb72:	d02f      	beq.n	800cbd4 <I2C_ITError+0xe4>
}
 800cb74:	bd10      	pop	{r4, pc}
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800cb76:	2a22      	cmp	r2, #34	; 0x22
 800cb78:	d1c6      	bne.n	800cb08 <I2C_ITError+0x18>
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800cb7a:	6823      	ldr	r3, [r4, #0]
 800cb7c:	681a      	ldr	r2, [r3, #0]
 800cb7e:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800cb82:	601a      	str	r2, [r3, #0]
    if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C_STATE_ABORT))
 800cb84:	685a      	ldr	r2, [r3, #4]
 800cb86:	0512      	lsls	r2, r2, #20
 800cb88:	d5c8      	bpl.n	800cb1c <I2C_ITError+0x2c>
 800cb8a:	e7cd      	b.n	800cb28 <I2C_ITError+0x38>
    hi2c->PreviousState = I2C_STATE_NONE;
 800cb8c:	2300      	movs	r3, #0
 800cb8e:	6323      	str	r3, [r4, #48]	; 0x30
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800cb90:	6823      	ldr	r3, [r4, #0]
    hi2c->State = HAL_I2C_STATE_LISTEN;
 800cb92:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
  if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800cb96:	685a      	ldr	r2, [r3, #4]
 800cb98:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800cb9c:	d0ca      	beq.n	800cb34 <I2C_ITError+0x44>
    hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
 800cb9e:	685a      	ldr	r2, [r3, #4]
    if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
 800cba0:	6b60      	ldr	r0, [r4, #52]	; 0x34
    hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
 800cba2:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800cba6:	605a      	str	r2, [r3, #4]
    if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
 800cba8:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 800cbac:	2b01      	cmp	r3, #1
 800cbae:	d01e      	beq.n	800cbee <I2C_ITError+0xfe>
      hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 800cbb0:	4b28      	ldr	r3, [pc, #160]	; (800cc54 <I2C_ITError+0x164>)
 800cbb2:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 800cbb4:	f7fe fd90 	bl	800b6d8 <HAL_DMA_Abort_IT>
 800cbb8:	2800      	cmp	r0, #0
 800cbba:	d0cb      	beq.n	800cb54 <I2C_ITError+0x64>
        __HAL_I2C_DISABLE(hi2c);
 800cbbc:	6822      	ldr	r2, [r4, #0]
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800cbbe:	6b60      	ldr	r0, [r4, #52]	; 0x34
        __HAL_I2C_DISABLE(hi2c);
 800cbc0:	6813      	ldr	r3, [r2, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800cbc2:	2120      	movs	r1, #32
        __HAL_I2C_DISABLE(hi2c);
 800cbc4:	f023 0301 	bic.w	r3, r3, #1
 800cbc8:	6013      	str	r3, [r2, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800cbca:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800cbce:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800cbd0:	4798      	blx	r3
 800cbd2:	e7bf      	b.n	800cb54 <I2C_ITError+0x64>
    hi2c->PreviousState = I2C_STATE_NONE;
 800cbd4:	2300      	movs	r3, #0
    hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
 800cbd6:	4920      	ldr	r1, [pc, #128]	; (800cc58 <I2C_ITError+0x168>)
 800cbd8:	62e1      	str	r1, [r4, #44]	; 0x2c
    hi2c->State         = HAL_I2C_STATE_READY;
 800cbda:	2220      	movs	r2, #32
    hi2c->PreviousState = I2C_STATE_NONE;
 800cbdc:	6323      	str	r3, [r4, #48]	; 0x30
    HAL_I2C_ListenCpltCallback(hi2c);
 800cbde:	4620      	mov	r0, r4
    hi2c->State         = HAL_I2C_STATE_READY;
 800cbe0:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800cbe4:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    HAL_I2C_ListenCpltCallback(hi2c);
 800cbe8:	f7ff fea0 	bl	800c92c <HAL_I2C_ListenCpltCallback>
}
 800cbec:	bd10      	pop	{r4, pc}
      hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 800cbee:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800cbf0:	4b18      	ldr	r3, [pc, #96]	; (800cc54 <I2C_ITError+0x164>)
 800cbf2:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 800cbf4:	f7fe fd70 	bl	800b6d8 <HAL_DMA_Abort_IT>
 800cbf8:	2800      	cmp	r0, #0
 800cbfa:	d0ab      	beq.n	800cb54 <I2C_ITError+0x64>
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800cbfc:	6823      	ldr	r3, [r4, #0]
 800cbfe:	695a      	ldr	r2, [r3, #20]
 800cc00:	0651      	lsls	r1, r2, #25
 800cc02:	d506      	bpl.n	800cc12 <I2C_ITError+0x122>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800cc04:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800cc06:	691b      	ldr	r3, [r3, #16]
 800cc08:	7013      	strb	r3, [r2, #0]
          hi2c->pBuffPtr++;
 800cc0a:	6a62      	ldr	r2, [r4, #36]	; 0x24
        __HAL_I2C_DISABLE(hi2c);
 800cc0c:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 800cc0e:	3201      	adds	r2, #1
 800cc10:	6262      	str	r2, [r4, #36]	; 0x24
        __HAL_I2C_DISABLE(hi2c);
 800cc12:	681a      	ldr	r2, [r3, #0]
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800cc14:	6ba0      	ldr	r0, [r4, #56]	; 0x38
        __HAL_I2C_DISABLE(hi2c);
 800cc16:	f022 0201 	bic.w	r2, r2, #1
        hi2c->State = HAL_I2C_STATE_READY;
 800cc1a:	2120      	movs	r1, #32
        __HAL_I2C_DISABLE(hi2c);
 800cc1c:	601a      	str	r2, [r3, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800cc1e:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800cc22:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800cc24:	4798      	blx	r3
 800cc26:	e795      	b.n	800cb54 <I2C_ITError+0x64>
    hi2c->State = HAL_I2C_STATE_READY;
 800cc28:	2120      	movs	r1, #32
 800cc2a:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800cc2e:	6422      	str	r2, [r4, #64]	; 0x40
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800cc30:	695a      	ldr	r2, [r3, #20]
 800cc32:	0652      	lsls	r2, r2, #25
 800cc34:	d506      	bpl.n	800cc44 <I2C_ITError+0x154>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800cc36:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800cc38:	691b      	ldr	r3, [r3, #16]
 800cc3a:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 800cc3c:	6a62      	ldr	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 800cc3e:	6823      	ldr	r3, [r4, #0]
      hi2c->pBuffPtr++;
 800cc40:	3201      	adds	r2, #1
 800cc42:	6262      	str	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 800cc44:	681a      	ldr	r2, [r3, #0]
 800cc46:	f022 0201 	bic.w	r2, r2, #1
    HAL_I2C_AbortCpltCallback(hi2c);
 800cc4a:	4620      	mov	r0, r4
    __HAL_I2C_DISABLE(hi2c);
 800cc4c:	601a      	str	r2, [r3, #0]
    HAL_I2C_AbortCpltCallback(hi2c);
 800cc4e:	f7ff fed3 	bl	800c9f8 <HAL_I2C_AbortCpltCallback>
 800cc52:	e77f      	b.n	800cb54 <I2C_ITError+0x64>
 800cc54:	0800c9fd 	.word	0x0800c9fd
 800cc58:	ffff0000 	.word	0xffff0000

0800cc5c <HAL_I2C_EV_IRQHandler>:
{
 800cc5c:	b570      	push	{r4, r5, r6, lr}
  uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
 800cc5e:	6803      	ldr	r3, [r0, #0]
{
 800cc60:	4604      	mov	r4, r0
  uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
 800cc62:	6858      	ldr	r0, [r3, #4]
  uint32_t CurrentXferOptions       = hi2c->XferOptions;
 800cc64:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800cc66:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800cc6a:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
  if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
 800cc6e:	2910      	cmp	r1, #16
{
 800cc70:	b08e      	sub	sp, #56	; 0x38
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800cc72:	b2d2      	uxtb	r2, r2
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800cc74:	fa5f fc81 	uxtb.w	ip, r1
  if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
 800cc78:	d022      	beq.n	800ccc0 <HAL_I2C_EV_IRQHandler+0x64>
 800cc7a:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 800cc7e:	d01f      	beq.n	800ccc0 <HAL_I2C_EV_IRQHandler+0x64>
    if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800cc80:	6c21      	ldr	r1, [r4, #64]	; 0x40
 800cc82:	2900      	cmp	r1, #0
 800cc84:	f000 8094 	beq.w	800cdb0 <HAL_I2C_EV_IRQHandler+0x154>
      sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800cc88:	6959      	ldr	r1, [r3, #20]
  uint32_t sr2itflags               = 0U;
 800cc8a:	2500      	movs	r5, #0
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800cc8c:	f011 0602 	ands.w	r6, r1, #2
 800cc90:	d059      	beq.n	800cd46 <HAL_I2C_EV_IRQHandler+0xea>
 800cc92:	0586      	lsls	r6, r0, #22
 800cc94:	d559      	bpl.n	800cd4a <HAL_I2C_EV_IRQHandler+0xee>
      if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800cc96:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800cc98:	b102      	cbz	r2, 800cc9c <HAL_I2C_EV_IRQHandler+0x40>
        sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800cc9a:	699d      	ldr	r5, [r3, #24]
  if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800cc9c:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800cca0:	f002 0228 	and.w	r2, r2, #40	; 0x28
 800cca4:	2a28      	cmp	r2, #40	; 0x28
 800cca6:	f000 821e 	beq.w	800d0e6 <HAL_I2C_EV_IRQHandler+0x48a>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ccaa:	2200      	movs	r2, #0
 800ccac:	920c      	str	r2, [sp, #48]	; 0x30
 800ccae:	6959      	ldr	r1, [r3, #20]
 800ccb0:	910c      	str	r1, [sp, #48]	; 0x30
 800ccb2:	699b      	ldr	r3, [r3, #24]
 800ccb4:	930c      	str	r3, [sp, #48]	; 0x30
 800ccb6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    __HAL_UNLOCK(hi2c);
 800ccb8:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
}
 800ccbc:	b00e      	add	sp, #56	; 0x38
 800ccbe:	bd70      	pop	{r4, r5, r6, pc}
    sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800ccc0:	699e      	ldr	r6, [r3, #24]
    sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800ccc2:	6959      	ldr	r1, [r3, #20]
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) == RESET) && (IS_I2C_TRANSFER_OTHER_OPTIONS_REQUEST(CurrentXferOptions) == 1U))
 800ccc4:	f011 0f01 	tst.w	r1, #1
 800ccc8:	d11a      	bne.n	800cd00 <HAL_I2C_EV_IRQHandler+0xa4>
 800ccca:	f5b5 0f2a 	cmp.w	r5, #11141120	; 0xaa0000
 800ccce:	d0f5      	beq.n	800ccbc <HAL_I2C_EV_IRQHandler+0x60>
 800ccd0:	f1b5 4f2a 	cmp.w	r5, #2852126720	; 0xaa000000
 800ccd4:	d0f2      	beq.n	800ccbc <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800ccd6:	070d      	lsls	r5, r1, #28
 800ccd8:	d56d      	bpl.n	800cdb6 <HAL_I2C_EV_IRQHandler+0x15a>
 800ccda:	0585      	lsls	r5, r0, #22
 800ccdc:	f140 8083 	bpl.w	800cde6 <HAL_I2C_EV_IRQHandler+0x18a>
  hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 800cce0:	6c62      	ldr	r2, [r4, #68]	; 0x44
  if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800cce2:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800cce4:	b2d2      	uxtb	r2, r2
  hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 800cce6:	611a      	str	r2, [r3, #16]
  if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800cce8:	2900      	cmp	r1, #0
 800ccea:	f000 81e3 	beq.w	800d0b4 <HAL_I2C_EV_IRQHandler+0x458>
 800ccee:	6bca      	ldr	r2, [r1, #60]	; 0x3c
 800ccf0:	2a00      	cmp	r2, #0
 800ccf2:	f000 81df 	beq.w	800d0b4 <HAL_I2C_EV_IRQHandler+0x458>
    SET_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800ccf6:	685a      	ldr	r2, [r3, #4]
 800ccf8:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800ccfc:	605a      	str	r2, [r3, #4]
 800ccfe:	e7dd      	b.n	800ccbc <HAL_I2C_EV_IRQHandler+0x60>
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800cd00:	0585      	lsls	r5, r0, #22
 800cd02:	d56e      	bpl.n	800cde2 <HAL_I2C_EV_IRQHandler+0x186>
static void I2C_ConvertOtherXferOptions(I2C_HandleTypeDef *hi2c)
{
  /* if user set XferOptions to I2C_OTHER_FRAME            */
  /* it request implicitly to generate a restart condition */
  /* set XferOptions to I2C_FIRST_FRAME                    */
  if (hi2c->XferOptions == I2C_OTHER_FRAME)
 800cd04:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800cd06:	f5b2 0f2a 	cmp.w	r2, #11141120	; 0xaa0000
 800cd0a:	f000 81e9 	beq.w	800d0e0 <HAL_I2C_EV_IRQHandler+0x484>
  }
  /* else if user set XferOptions to I2C_OTHER_AND_LAST_FRAME */
  /* it request implicitly to generate a restart condition    */
  /* then generate a stop condition at the end of transfer    */
  /* set XferOptions to I2C_FIRST_AND_LAST_FRAME              */
  else if (hi2c->XferOptions == I2C_OTHER_AND_LAST_FRAME)
 800cd0e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800cd10:	f1b2 4f2a 	cmp.w	r2, #2852126720	; 0xaa000000
  {
    hi2c->XferOptions = I2C_FIRST_AND_LAST_FRAME;
 800cd14:	bf04      	itt	eq
 800cd16:	2208      	moveq	r2, #8
 800cd18:	62e2      	streq	r2, [r4, #44]	; 0x2c
  if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800cd1a:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 800cd1e:	2a40      	cmp	r2, #64	; 0x40
 800cd20:	f000 81d7 	beq.w	800d0d2 <HAL_I2C_EV_IRQHandler+0x476>
    if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 800cd24:	6922      	ldr	r2, [r4, #16]
 800cd26:	f5b2 4f80 	cmp.w	r2, #16384	; 0x4000
 800cd2a:	f000 81b2 	beq.w	800d092 <HAL_I2C_EV_IRQHandler+0x436>
      if (hi2c->EventCount == 0U)
 800cd2e:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800cd30:	2a00      	cmp	r2, #0
 800cd32:	f040 81ef 	bne.w	800d114 <HAL_I2C_EV_IRQHandler+0x4b8>
        hi2c->Instance->DR = I2C_10BIT_HEADER_WRITE(hi2c->Devaddress);
 800cd36:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800cd38:	11d2      	asrs	r2, r2, #7
 800cd3a:	f002 0206 	and.w	r2, r2, #6
 800cd3e:	f042 02f0 	orr.w	r2, r2, #240	; 0xf0
 800cd42:	611a      	str	r2, [r3, #16]
 800cd44:	e7ba      	b.n	800ccbc <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800cd46:	06cd      	lsls	r5, r1, #27
 800cd48:	d47c      	bmi.n	800ce44 <HAL_I2C_EV_IRQHandler+0x1e8>
    else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
 800cd4a:	f002 02f7 	and.w	r2, r2, #247	; 0xf7
 800cd4e:	2a21      	cmp	r2, #33	; 0x21
 800cd50:	f000 80f5 	beq.w	800cf3e <HAL_I2C_EV_IRQHandler+0x2e2>
      if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800cd54:	064e      	lsls	r6, r1, #25
 800cd56:	f140 8132 	bpl.w	800cfbe <HAL_I2C_EV_IRQHandler+0x362>
 800cd5a:	0545      	lsls	r5, r0, #21
 800cd5c:	f140 812f 	bpl.w	800cfbe <HAL_I2C_EV_IRQHandler+0x362>
 800cd60:	0749      	lsls	r1, r1, #29
 800cd62:	f100 812f 	bmi.w	800cfc4 <HAL_I2C_EV_IRQHandler+0x368>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800cd66:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
  if (hi2c->XferCount != 0U)
 800cd6a:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800cd6c:	b292      	uxth	r2, r2
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800cd6e:	b2c9      	uxtb	r1, r1
  if (hi2c->XferCount != 0U)
 800cd70:	2a00      	cmp	r2, #0
 800cd72:	d0a3      	beq.n	800ccbc <HAL_I2C_EV_IRQHandler+0x60>
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800cd74:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800cd76:	691b      	ldr	r3, [r3, #16]
 800cd78:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800cd7a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800cd7c:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800cd7e:	3b01      	subs	r3, #1
 800cd80:	b29b      	uxth	r3, r3
 800cd82:	8563      	strh	r3, [r4, #42]	; 0x2a
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800cd84:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800cd86:	3201      	adds	r2, #1
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800cd88:	b29b      	uxth	r3, r3
    hi2c->pBuffPtr++;
 800cd8a:	6262      	str	r2, [r4, #36]	; 0x24
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800cd8c:	2b00      	cmp	r3, #0
 800cd8e:	d195      	bne.n	800ccbc <HAL_I2C_EV_IRQHandler+0x60>
 800cd90:	292a      	cmp	r1, #42	; 0x2a
 800cd92:	d193      	bne.n	800ccbc <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800cd94:	6822      	ldr	r2, [r4, #0]
 800cd96:	6853      	ldr	r3, [r2, #4]
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 800cd98:	2522      	movs	r5, #34	; 0x22
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800cd9a:	2128      	movs	r1, #40	; 0x28
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800cd9c:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800cda0:	6053      	str	r3, [r2, #4]
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800cda2:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 800cda4:	6325      	str	r5, [r4, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800cda6:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800cdaa:	f7ff fdbb 	bl	800c924 <HAL_I2C_SlaveRxCpltCallback>
 800cdae:	e785      	b.n	800ccbc <HAL_I2C_EV_IRQHandler+0x60>
      sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800cdb0:	699d      	ldr	r5, [r3, #24]
      sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800cdb2:	6959      	ldr	r1, [r3, #20]
 800cdb4:	e76a      	b.n	800cc8c <HAL_I2C_EV_IRQHandler+0x30>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800cdb6:	078d      	lsls	r5, r1, #30
 800cdb8:	d515      	bpl.n	800cde6 <HAL_I2C_EV_IRQHandler+0x18a>
 800cdba:	0585      	lsls	r5, r0, #22
 800cdbc:	d513      	bpl.n	800cde6 <HAL_I2C_EV_IRQHandler+0x18a>
  HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 800cdbe:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
  uint32_t CurrentXferOptions           = hi2c->XferOptions;
 800cdc2:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  uint32_t Prev_State                   = hi2c->PreviousState;
 800cdc4:	6b25      	ldr	r5, [r4, #48]	; 0x30
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800cdc6:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 800cdca:	2922      	cmp	r1, #34	; 0x22
  HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 800cdcc:	b2d2      	uxtb	r2, r2
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800cdce:	f000 81b3 	beq.w	800d138 <HAL_I2C_EV_IRQHandler+0x4dc>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800cdd2:	2200      	movs	r2, #0
 800cdd4:	920a      	str	r2, [sp, #40]	; 0x28
 800cdd6:	695a      	ldr	r2, [r3, #20]
 800cdd8:	920a      	str	r2, [sp, #40]	; 0x28
 800cdda:	699b      	ldr	r3, [r3, #24]
 800cddc:	930a      	str	r3, [sp, #40]	; 0x28
 800cdde:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800cde0:	e76c      	b.n	800ccbc <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800cde2:	070d      	lsls	r5, r1, #28
 800cde4:	d5e7      	bpl.n	800cdb6 <HAL_I2C_EV_IRQHandler+0x15a>
    else if (I2C_CHECK_FLAG(sr2itflags, I2C_FLAG_TRA) != RESET)
 800cde6:	0776      	lsls	r6, r6, #29
 800cde8:	f140 80f5 	bpl.w	800cfd6 <HAL_I2C_EV_IRQHandler+0x37a>
      if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
 800cdec:	685d      	ldr	r5, [r3, #4]
 800cdee:	052d      	lsls	r5, r5, #20
 800cdf0:	f53f af64 	bmi.w	800ccbc <HAL_I2C_EV_IRQHandler+0x60>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800cdf4:	060e      	lsls	r6, r1, #24
 800cdf6:	f140 8115 	bpl.w	800d024 <HAL_I2C_EV_IRQHandler+0x3c8>
 800cdfa:	0545      	lsls	r5, r0, #21
 800cdfc:	f140 8112 	bpl.w	800d024 <HAL_I2C_EV_IRQHandler+0x3c8>
 800ce00:	074e      	lsls	r6, r1, #29
 800ce02:	f100 8112 	bmi.w	800d02a <HAL_I2C_EV_IRQHandler+0x3ce>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800ce06:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
  if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800ce0a:	8d20      	ldrh	r0, [r4, #40]	; 0x28
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800ce0c:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
  uint32_t CurrentXferOptions       = hi2c->XferOptions;
 800ce10:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800ce12:	b2d2      	uxtb	r2, r2
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800ce14:	b2c9      	uxtb	r1, r1
  if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800ce16:	2800      	cmp	r0, #0
 800ce18:	f040 8235 	bne.w	800d286 <HAL_I2C_EV_IRQHandler+0x62a>
 800ce1c:	2a21      	cmp	r2, #33	; 0x21
 800ce1e:	f000 8347 	beq.w	800d4b0 <HAL_I2C_EV_IRQHandler+0x854>
  else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
 800ce22:	2940      	cmp	r1, #64	; 0x40
 800ce24:	f47f af4a 	bne.w	800ccbc <HAL_I2C_EV_IRQHandler+0x60>
           ((CurrentMode == HAL_I2C_MODE_MEM) && (CurrentState == HAL_I2C_STATE_BUSY_RX)))
 800ce28:	2a22      	cmp	r2, #34	; 0x22
 800ce2a:	f47f af47 	bne.w	800ccbc <HAL_I2C_EV_IRQHandler+0x60>
    if (hi2c->XferCount == 0U)
 800ce2e:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800ce30:	b292      	uxth	r2, r2
 800ce32:	2a00      	cmp	r2, #0
 800ce34:	f000 8268 	beq.w	800d308 <HAL_I2C_EV_IRQHandler+0x6ac>
      if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800ce38:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 800ce3c:	2a40      	cmp	r2, #64	; 0x40
 800ce3e:	f040 80b4 	bne.w	800cfaa <HAL_I2C_EV_IRQHandler+0x34e>
 800ce42:	e0fc      	b.n	800d03e <HAL_I2C_EV_IRQHandler+0x3e2>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800ce44:	0585      	lsls	r5, r0, #22
 800ce46:	d580      	bpl.n	800cd4a <HAL_I2C_EV_IRQHandler+0xee>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800ce48:	f894 503d 	ldrb.w	r5, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800ce4c:	685a      	ldr	r2, [r3, #4]
 800ce4e:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800ce52:	605a      	str	r2, [r3, #4]
  __HAL_I2C_CLEAR_STOPFLAG(hi2c);
 800ce54:	960d      	str	r6, [sp, #52]	; 0x34
 800ce56:	695a      	ldr	r2, [r3, #20]
 800ce58:	920d      	str	r2, [sp, #52]	; 0x34
 800ce5a:	681a      	ldr	r2, [r3, #0]
 800ce5c:	f042 0201 	orr.w	r2, r2, #1
 800ce60:	601a      	str	r2, [r3, #0]
 800ce62:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ce64:	681a      	ldr	r2, [r3, #0]
 800ce66:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800ce6a:	601a      	str	r2, [r3, #0]
  if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800ce6c:	685a      	ldr	r2, [r3, #4]
 800ce6e:	0511      	lsls	r1, r2, #20
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800ce70:	b2ed      	uxtb	r5, r5
  if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800ce72:	d521      	bpl.n	800ceb8 <HAL_I2C_EV_IRQHandler+0x25c>
    if ((CurrentState == HAL_I2C_STATE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800ce74:	f005 02f7 	and.w	r2, r5, #247	; 0xf7
 800ce78:	2a22      	cmp	r2, #34	; 0x22
 800ce7a:	f000 817a 	beq.w	800d172 <HAL_I2C_EV_IRQHandler+0x516>
      hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmatx));
 800ce7e:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800ce80:	6802      	ldr	r2, [r0, #0]
 800ce82:	6852      	ldr	r2, [r2, #4]
 800ce84:	b292      	uxth	r2, r2
 800ce86:	8562      	strh	r2, [r4, #42]	; 0x2a
      if (hi2c->XferCount != 0U)
 800ce88:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800ce8a:	b292      	uxth	r2, r2
 800ce8c:	b11a      	cbz	r2, 800ce96 <HAL_I2C_EV_IRQHandler+0x23a>
        hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800ce8e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800ce90:	f042 0204 	orr.w	r2, r2, #4
 800ce94:	6422      	str	r2, [r4, #64]	; 0x40
      CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800ce96:	685a      	ldr	r2, [r3, #4]
 800ce98:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800ce9c:	605a      	str	r2, [r3, #4]
      if (HAL_DMA_GetState(hi2c->hdmatx) != HAL_DMA_STATE_READY)
 800ce9e:	f7fe fc2d 	bl	800b6fc <HAL_DMA_GetState>
 800cea2:	2801      	cmp	r0, #1
 800cea4:	d008      	beq.n	800ceb8 <HAL_I2C_EV_IRQHandler+0x25c>
        hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 800cea6:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800cea8:	4b99      	ldr	r3, [pc, #612]	; (800d110 <HAL_I2C_EV_IRQHandler+0x4b4>)
 800ceaa:	6503      	str	r3, [r0, #80]	; 0x50
        if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 800ceac:	f7fe fc14 	bl	800b6d8 <HAL_DMA_Abort_IT>
 800ceb0:	b110      	cbz	r0, 800ceb8 <HAL_I2C_EV_IRQHandler+0x25c>
          hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800ceb2:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800ceb4:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800ceb6:	4798      	blx	r3
  if (hi2c->XferCount != 0U)
 800ceb8:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800ceba:	b29b      	uxth	r3, r3
 800cebc:	b313      	cbz	r3, 800cf04 <HAL_I2C_EV_IRQHandler+0x2a8>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800cebe:	6823      	ldr	r3, [r4, #0]
 800cec0:	695a      	ldr	r2, [r3, #20]
 800cec2:	0752      	lsls	r2, r2, #29
 800cec4:	d50a      	bpl.n	800cedc <HAL_I2C_EV_IRQHandler+0x280>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800cec6:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800cec8:	691b      	ldr	r3, [r3, #16]
 800ceca:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800cecc:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800cece:	6a63      	ldr	r3, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800ced0:	3a01      	subs	r2, #1
      hi2c->pBuffPtr++;
 800ced2:	1c59      	adds	r1, r3, #1
      hi2c->XferCount--;
 800ced4:	b292      	uxth	r2, r2
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800ced6:	6823      	ldr	r3, [r4, #0]
      hi2c->pBuffPtr++;
 800ced8:	6261      	str	r1, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800ceda:	8562      	strh	r2, [r4, #42]	; 0x2a
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800cedc:	695a      	ldr	r2, [r3, #20]
 800cede:	0656      	lsls	r6, r2, #25
 800cee0:	d509      	bpl.n	800cef6 <HAL_I2C_EV_IRQHandler+0x29a>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800cee2:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800cee4:	691b      	ldr	r3, [r3, #16]
 800cee6:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800cee8:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800ceea:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800ceec:	3b01      	subs	r3, #1
      hi2c->pBuffPtr++;
 800ceee:	3201      	adds	r2, #1
      hi2c->XferCount--;
 800cef0:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
 800cef2:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800cef4:	8563      	strh	r3, [r4, #42]	; 0x2a
    if (hi2c->XferCount != 0U)
 800cef6:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800cef8:	b29b      	uxth	r3, r3
 800cefa:	b11b      	cbz	r3, 800cf04 <HAL_I2C_EV_IRQHandler+0x2a8>
      hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800cefc:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800cefe:	f043 0304 	orr.w	r3, r3, #4
 800cf02:	6423      	str	r3, [r4, #64]	; 0x40
  if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800cf04:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800cf06:	2b00      	cmp	r3, #0
 800cf08:	f040 80dd 	bne.w	800d0c6 <HAL_I2C_EV_IRQHandler+0x46a>
    if (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN)
 800cf0c:	2d2a      	cmp	r5, #42	; 0x2a
 800cf0e:	f000 8151 	beq.w	800d1b4 <HAL_I2C_EV_IRQHandler+0x558>
    if (hi2c->State == HAL_I2C_STATE_LISTEN)
 800cf12:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800cf16:	2b28      	cmp	r3, #40	; 0x28
 800cf18:	f000 8154 	beq.w	800d1c4 <HAL_I2C_EV_IRQHandler+0x568>
      if ((hi2c->PreviousState  == I2C_STATE_SLAVE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800cf1c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800cf1e:	2b22      	cmp	r3, #34	; 0x22
 800cf20:	d002      	beq.n	800cf28 <HAL_I2C_EV_IRQHandler+0x2cc>
 800cf22:	2d22      	cmp	r5, #34	; 0x22
 800cf24:	f47f aeca 	bne.w	800ccbc <HAL_I2C_EV_IRQHandler+0x60>
        hi2c->PreviousState = I2C_STATE_NONE;
 800cf28:	2300      	movs	r3, #0
        hi2c->State = HAL_I2C_STATE_READY;
 800cf2a:	2220      	movs	r2, #32
        hi2c->PreviousState = I2C_STATE_NONE;
 800cf2c:	6323      	str	r3, [r4, #48]	; 0x30
        HAL_I2C_SlaveRxCpltCallback(hi2c);
 800cf2e:	4620      	mov	r0, r4
        hi2c->State = HAL_I2C_STATE_READY;
 800cf30:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800cf34:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        HAL_I2C_SlaveRxCpltCallback(hi2c);
 800cf38:	f7ff fcf4 	bl	800c924 <HAL_I2C_SlaveRxCpltCallback>
 800cf3c:	e6be      	b.n	800ccbc <HAL_I2C_EV_IRQHandler+0x60>
      if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800cf3e:	060d      	lsls	r5, r1, #24
 800cf40:	d528      	bpl.n	800cf94 <HAL_I2C_EV_IRQHandler+0x338>
 800cf42:	0546      	lsls	r6, r0, #21
 800cf44:	d526      	bpl.n	800cf94 <HAL_I2C_EV_IRQHandler+0x338>
 800cf46:	074d      	lsls	r5, r1, #29
 800cf48:	d427      	bmi.n	800cf9a <HAL_I2C_EV_IRQHandler+0x33e>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800cf4a:	f894 003d 	ldrb.w	r0, [r4, #61]	; 0x3d
  if (hi2c->XferCount != 0U)
 800cf4e:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800cf50:	b289      	uxth	r1, r1
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800cf52:	b2c0      	uxtb	r0, r0
  if (hi2c->XferCount != 0U)
 800cf54:	2900      	cmp	r1, #0
 800cf56:	f43f aeb1 	beq.w	800ccbc <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->Instance->DR = *hi2c->pBuffPtr;
 800cf5a:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800cf5c:	f811 5b01 	ldrb.w	r5, [r1], #1
 800cf60:	611d      	str	r5, [r3, #16]
    hi2c->pBuffPtr++;
 800cf62:	6261      	str	r1, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800cf64:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800cf66:	3901      	subs	r1, #1
 800cf68:	b289      	uxth	r1, r1
 800cf6a:	8561      	strh	r1, [r4, #42]	; 0x2a
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
 800cf6c:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800cf6e:	b289      	uxth	r1, r1
 800cf70:	2900      	cmp	r1, #0
 800cf72:	f47f aea3 	bne.w	800ccbc <HAL_I2C_EV_IRQHandler+0x60>
 800cf76:	2829      	cmp	r0, #41	; 0x29
 800cf78:	f47f aea0 	bne.w	800ccbc <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800cf7c:	6859      	ldr	r1, [r3, #4]
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800cf7e:	2528      	movs	r5, #40	; 0x28
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800cf80:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800cf84:	6059      	str	r1, [r3, #4]
      HAL_I2C_SlaveTxCpltCallback(hi2c);
 800cf86:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
 800cf88:	6322      	str	r2, [r4, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800cf8a:	f884 503d 	strb.w	r5, [r4, #61]	; 0x3d
      HAL_I2C_SlaveTxCpltCallback(hi2c);
 800cf8e:	f7ff fcc7 	bl	800c920 <HAL_I2C_SlaveTxCpltCallback>
 800cf92:	e693      	b.n	800ccbc <HAL_I2C_EV_IRQHandler+0x60>
      else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800cf94:	0749      	lsls	r1, r1, #29
 800cf96:	f57f ae91 	bpl.w	800ccbc <HAL_I2C_EV_IRQHandler+0x60>
 800cf9a:	0582      	lsls	r2, r0, #22
 800cf9c:	f57f ae8e 	bpl.w	800ccbc <HAL_I2C_EV_IRQHandler+0x60>
  if (hi2c->XferCount != 0U)
 800cfa0:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800cfa2:	b292      	uxth	r2, r2
 800cfa4:	2a00      	cmp	r2, #0
 800cfa6:	f43f ae89 	beq.w	800ccbc <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->Instance->DR = *hi2c->pBuffPtr;
 800cfaa:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800cfac:	f812 1b01 	ldrb.w	r1, [r2], #1
 800cfb0:	6119      	str	r1, [r3, #16]
    hi2c->XferCount--;
 800cfb2:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800cfb4:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800cfb6:	3b01      	subs	r3, #1
 800cfb8:	b29b      	uxth	r3, r3
 800cfba:	8563      	strh	r3, [r4, #42]	; 0x2a
 800cfbc:	e67e      	b.n	800ccbc <HAL_I2C_EV_IRQHandler+0x60>
      else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800cfbe:	074a      	lsls	r2, r1, #29
 800cfc0:	f57f ae7c 	bpl.w	800ccbc <HAL_I2C_EV_IRQHandler+0x60>
 800cfc4:	0586      	lsls	r6, r0, #22
 800cfc6:	f57f ae79 	bpl.w	800ccbc <HAL_I2C_EV_IRQHandler+0x60>
  if (hi2c->XferCount != 0U)
 800cfca:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800cfcc:	b292      	uxth	r2, r2
 800cfce:	2a00      	cmp	r2, #0
 800cfd0:	f43f ae74 	beq.w	800ccbc <HAL_I2C_EV_IRQHandler+0x60>
 800cfd4:	e01b      	b.n	800d00e <HAL_I2C_EV_IRQHandler+0x3b2>
      if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
 800cfd6:	685a      	ldr	r2, [r3, #4]
 800cfd8:	0512      	lsls	r2, r2, #20
 800cfda:	f53f ae6f 	bmi.w	800ccbc <HAL_I2C_EV_IRQHandler+0x60>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800cfde:	064e      	lsls	r6, r1, #25
 800cfe0:	d433      	bmi.n	800d04a <HAL_I2C_EV_IRQHandler+0x3ee>
        else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800cfe2:	0749      	lsls	r1, r1, #29
 800cfe4:	f57f ae6a 	bpl.w	800ccbc <HAL_I2C_EV_IRQHandler+0x60>
 800cfe8:	0582      	lsls	r2, r0, #22
 800cfea:	f57f ae67 	bpl.w	800ccbc <HAL_I2C_EV_IRQHandler+0x60>
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 800cfee:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  if (hi2c->XferCount == 4U)
 800cff0:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800cff2:	b292      	uxth	r2, r2
 800cff4:	2a04      	cmp	r2, #4
 800cff6:	f000 8113 	beq.w	800d220 <HAL_I2C_EV_IRQHandler+0x5c4>
  else if (hi2c->XferCount == 3U)
 800cffa:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800cffc:	b292      	uxth	r2, r2
 800cffe:	2a03      	cmp	r2, #3
 800d000:	f000 8153 	beq.w	800d2aa <HAL_I2C_EV_IRQHandler+0x64e>
  else if (hi2c->XferCount == 2U)
 800d004:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800d006:	b292      	uxth	r2, r2
 800d008:	2a02      	cmp	r2, #2
 800d00a:	f000 8182 	beq.w	800d312 <HAL_I2C_EV_IRQHandler+0x6b6>
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d00e:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800d010:	691b      	ldr	r3, [r3, #16]
 800d012:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800d014:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800d016:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800d018:	3b01      	subs	r3, #1
    hi2c->pBuffPtr++;
 800d01a:	3201      	adds	r2, #1
    hi2c->XferCount--;
 800d01c:	b29b      	uxth	r3, r3
    hi2c->pBuffPtr++;
 800d01e:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800d020:	8563      	strh	r3, [r4, #42]	; 0x2a
      }
 800d022:	e64b      	b.n	800ccbc <HAL_I2C_EV_IRQHandler+0x60>
        else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800d024:	074d      	lsls	r5, r1, #29
 800d026:	f57f ae49 	bpl.w	800ccbc <HAL_I2C_EV_IRQHandler+0x60>
 800d02a:	0581      	lsls	r1, r0, #22
 800d02c:	f57f ae46 	bpl.w	800ccbc <HAL_I2C_EV_IRQHandler+0x60>
          if (CurrentState == HAL_I2C_STATE_BUSY_TX)
 800d030:	2a21      	cmp	r2, #33	; 0x21
 800d032:	f000 80fd 	beq.w	800d230 <HAL_I2C_EV_IRQHandler+0x5d4>
            if (CurrentMode == HAL_I2C_MODE_MEM)
 800d036:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 800d03a:	f47f ae3f 	bne.w	800ccbc <HAL_I2C_EV_IRQHandler+0x60>
        I2C_MemoryTransmit_TXE_BTF(hi2c);
 800d03e:	4620      	mov	r0, r4
}
 800d040:	b00e      	add	sp, #56	; 0x38
 800d042:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        I2C_MemoryTransmit_TXE_BTF(hi2c);
 800d046:	f7ff bc75 	b.w	800c934 <I2C_MemoryTransmit_TXE_BTF>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800d04a:	0545      	lsls	r5, r0, #21
 800d04c:	d5c9      	bpl.n	800cfe2 <HAL_I2C_EV_IRQHandler+0x386>
 800d04e:	f011 0104 	ands.w	r1, r1, #4
 800d052:	d1c9      	bne.n	800cfe8 <HAL_I2C_EV_IRQHandler+0x38c>
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800d054:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800d058:	2a22      	cmp	r2, #34	; 0x22
 800d05a:	f47f ae2f 	bne.w	800ccbc <HAL_I2C_EV_IRQHandler+0x60>
    tmp = hi2c->XferCount;
 800d05e:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800d060:	b292      	uxth	r2, r2
    if (tmp > 3U)
 800d062:	2a03      	cmp	r2, #3
 800d064:	f240 81ec 	bls.w	800d440 <HAL_I2C_EV_IRQHandler+0x7e4>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d068:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800d06a:	691b      	ldr	r3, [r3, #16]
 800d06c:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800d06e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800d070:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800d072:	3b01      	subs	r3, #1
 800d074:	b29b      	uxth	r3, r3
 800d076:	8563      	strh	r3, [r4, #42]	; 0x2a
      if (hi2c->XferCount == (uint16_t)3)
 800d078:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800d07a:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
 800d07c:	3201      	adds	r2, #1
      if (hi2c->XferCount == (uint16_t)3)
 800d07e:	2b03      	cmp	r3, #3
      hi2c->pBuffPtr++;
 800d080:	6262      	str	r2, [r4, #36]	; 0x24
      if (hi2c->XferCount == (uint16_t)3)
 800d082:	f47f ae1b 	bne.w	800ccbc <HAL_I2C_EV_IRQHandler+0x60>
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800d086:	6822      	ldr	r2, [r4, #0]
 800d088:	6853      	ldr	r3, [r2, #4]
 800d08a:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800d08e:	6053      	str	r3, [r2, #4]
 800d090:	e614      	b.n	800ccbc <HAL_I2C_EV_IRQHandler+0x60>
      if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 800d092:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800d096:	2a21      	cmp	r2, #33	; 0x21
        hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800d098:	6c62      	ldr	r2, [r4, #68]	; 0x44
        hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800d09a:	bf16      	itet	ne
 800d09c:	f042 0201 	orrne.w	r2, r2, #1
        hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800d0a0:	f002 02fe 	andeq.w	r2, r2, #254	; 0xfe
        hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800d0a4:	b2d2      	uxtbne	r2, r2
 800d0a6:	611a      	str	r2, [r3, #16]
      if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800d0a8:	6b62      	ldr	r2, [r4, #52]	; 0x34
 800d0aa:	b11a      	cbz	r2, 800d0b4 <HAL_I2C_EV_IRQHandler+0x458>
 800d0ac:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800d0ae:	2a00      	cmp	r2, #0
 800d0b0:	f47f ae21 	bne.w	800ccf6 <HAL_I2C_EV_IRQHandler+0x9a>
      || ((hi2c->hdmarx != NULL) && (hi2c->hdmarx->XferCpltCallback != NULL)))
 800d0b4:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800d0b6:	2a00      	cmp	r2, #0
 800d0b8:	f43f ae00 	beq.w	800ccbc <HAL_I2C_EV_IRQHandler+0x60>
 800d0bc:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800d0be:	2a00      	cmp	r2, #0
 800d0c0:	f47f ae19 	bne.w	800ccf6 <HAL_I2C_EV_IRQHandler+0x9a>
 800d0c4:	e5fa      	b.n	800ccbc <HAL_I2C_EV_IRQHandler+0x60>
    I2C_ITError(hi2c);
 800d0c6:	4620      	mov	r0, r4
}
 800d0c8:	b00e      	add	sp, #56	; 0x38
 800d0ca:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    I2C_ITError(hi2c);
 800d0ce:	f7ff bd0f 	b.w	800caf0 <I2C_ITError>
    if (hi2c->EventCount == 0U)
 800d0d2:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800d0d4:	bb52      	cbnz	r2, 800d12c <HAL_I2C_EV_IRQHandler+0x4d0>
      hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800d0d6:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800d0d8:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 800d0dc:	611a      	str	r2, [r3, #16]
 800d0de:	e5ed      	b.n	800ccbc <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->XferOptions = I2C_FIRST_FRAME;
 800d0e0:	2201      	movs	r2, #1
 800d0e2:	62e2      	str	r2, [r4, #44]	; 0x2c
 800d0e4:	e619      	b.n	800cd1a <HAL_I2C_EV_IRQHandler+0xbe>
    __HAL_I2C_DISABLE_IT(hi2c, (I2C_IT_BUF));
 800d0e6:	685a      	ldr	r2, [r3, #4]
 800d0e8:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d0ec:	605a      	str	r2, [r3, #4]
    if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_DUALF) == RESET)
 800d0ee:	062e      	lsls	r6, r5, #24
    if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_TRA) == RESET)
 800d0f0:	f085 0104 	eor.w	r1, r5, #4
    __HAL_UNLOCK(hi2c);
 800d0f4:	f04f 0300 	mov.w	r3, #0
      SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress1;
 800d0f8:	bf54      	ite	pl
 800d0fa:	89a2      	ldrhpl	r2, [r4, #12]
      SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress2;
 800d0fc:	8b22      	ldrhmi	r2, [r4, #24]
    __HAL_UNLOCK(hi2c);
 800d0fe:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
  uint8_t TransferDirection = I2C_DIRECTION_RECEIVE;
 800d102:	f3c1 0180 	ubfx	r1, r1, #2, #1
    HAL_I2C_AddrCallback(hi2c, TransferDirection, SlaveAddrCode);
 800d106:	4620      	mov	r0, r4
 800d108:	f7ff fc0e 	bl	800c928 <HAL_I2C_AddrCallback>
 800d10c:	e5d6      	b.n	800ccbc <HAL_I2C_EV_IRQHandler+0x60>
 800d10e:	bf00      	nop
 800d110:	0800c9fd 	.word	0x0800c9fd
      else if (hi2c->EventCount == 1U)
 800d114:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800d116:	2a01      	cmp	r2, #1
 800d118:	f47f add0 	bne.w	800ccbc <HAL_I2C_EV_IRQHandler+0x60>
        hi2c->Instance->DR = I2C_10BIT_HEADER_READ(hi2c->Devaddress);
 800d11c:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800d11e:	11d2      	asrs	r2, r2, #7
 800d120:	f002 0206 	and.w	r2, r2, #6
 800d124:	f042 02f1 	orr.w	r2, r2, #241	; 0xf1
 800d128:	611a      	str	r2, [r3, #16]
 800d12a:	e5c7      	b.n	800ccbc <HAL_I2C_EV_IRQHandler+0x60>
      hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800d12c:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800d12e:	f042 0201 	orr.w	r2, r2, #1
 800d132:	b2d2      	uxtb	r2, r2
 800d134:	611a      	str	r2, [r3, #16]
 800d136:	e5c1      	b.n	800ccbc <HAL_I2C_EV_IRQHandler+0x60>
    if ((hi2c->EventCount == 0U) && (CurrentMode == HAL_I2C_MODE_MEM))
 800d138:	6d21      	ldr	r1, [r4, #80]	; 0x50
 800d13a:	b911      	cbnz	r1, 800d142 <HAL_I2C_EV_IRQHandler+0x4e6>
 800d13c:	2a40      	cmp	r2, #64	; 0x40
 800d13e:	f000 809b 	beq.w	800d278 <HAL_I2C_EV_IRQHandler+0x61c>
    else if ((hi2c->EventCount == 0U) && (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT))
 800d142:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800d144:	b922      	cbnz	r2, 800d150 <HAL_I2C_EV_IRQHandler+0x4f4>
 800d146:	6921      	ldr	r1, [r4, #16]
 800d148:	f5b1 4f40 	cmp.w	r1, #49152	; 0xc000
 800d14c:	f000 809f 	beq.w	800d28e <HAL_I2C_EV_IRQHandler+0x632>
      if (hi2c->XferCount == 0U)
 800d150:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800d152:	b292      	uxth	r2, r2
 800d154:	2a00      	cmp	r2, #0
 800d156:	d142      	bne.n	800d1de <HAL_I2C_EV_IRQHandler+0x582>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800d158:	9203      	str	r2, [sp, #12]
 800d15a:	695a      	ldr	r2, [r3, #20]
 800d15c:	9203      	str	r2, [sp, #12]
 800d15e:	699a      	ldr	r2, [r3, #24]
 800d160:	9203      	str	r2, [sp, #12]
 800d162:	9a03      	ldr	r2, [sp, #12]
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800d164:	681a      	ldr	r2, [r3, #0]
 800d166:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800d16a:	601a      	str	r2, [r3, #0]
      hi2c->EventCount = 0U;
 800d16c:	2300      	movs	r3, #0
 800d16e:	6523      	str	r3, [r4, #80]	; 0x50
 800d170:	e5a4      	b.n	800ccbc <HAL_I2C_EV_IRQHandler+0x60>
      hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmarx));
 800d172:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800d174:	6802      	ldr	r2, [r0, #0]
 800d176:	6852      	ldr	r2, [r2, #4]
 800d178:	b292      	uxth	r2, r2
 800d17a:	8562      	strh	r2, [r4, #42]	; 0x2a
      if (hi2c->XferCount != 0U)
 800d17c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800d17e:	b292      	uxth	r2, r2
 800d180:	b11a      	cbz	r2, 800d18a <HAL_I2C_EV_IRQHandler+0x52e>
        hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800d182:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800d184:	f042 0204 	orr.w	r2, r2, #4
 800d188:	6422      	str	r2, [r4, #64]	; 0x40
      CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800d18a:	685a      	ldr	r2, [r3, #4]
 800d18c:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800d190:	605a      	str	r2, [r3, #4]
      if (HAL_DMA_GetState(hi2c->hdmarx) != HAL_DMA_STATE_READY)
 800d192:	f7fe fab3 	bl	800b6fc <HAL_DMA_GetState>
 800d196:	2801      	cmp	r0, #1
 800d198:	f43f ae8e 	beq.w	800ceb8 <HAL_I2C_EV_IRQHandler+0x25c>
        hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 800d19c:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800d19e:	4b98      	ldr	r3, [pc, #608]	; (800d400 <HAL_I2C_EV_IRQHandler+0x7a4>)
 800d1a0:	6503      	str	r3, [r0, #80]	; 0x50
        if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 800d1a2:	f7fe fa99 	bl	800b6d8 <HAL_DMA_Abort_IT>
 800d1a6:	2800      	cmp	r0, #0
 800d1a8:	f43f ae86 	beq.w	800ceb8 <HAL_I2C_EV_IRQHandler+0x25c>
          hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800d1ac:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800d1ae:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800d1b0:	4798      	blx	r3
 800d1b2:	e681      	b.n	800ceb8 <HAL_I2C_EV_IRQHandler+0x25c>
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800d1b4:	2228      	movs	r2, #40	; 0x28
      hi2c->PreviousState = I2C_STATE_NONE;
 800d1b6:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800d1b8:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800d1ba:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800d1be:	f7ff fbb1 	bl	800c924 <HAL_I2C_SlaveRxCpltCallback>
 800d1c2:	e6a6      	b.n	800cf12 <HAL_I2C_EV_IRQHandler+0x2b6>
      hi2c->PreviousState = I2C_STATE_NONE;
 800d1c4:	2300      	movs	r3, #0
      hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800d1c6:	498f      	ldr	r1, [pc, #572]	; (800d404 <HAL_I2C_EV_IRQHandler+0x7a8>)
 800d1c8:	62e1      	str	r1, [r4, #44]	; 0x2c
      hi2c->State = HAL_I2C_STATE_READY;
 800d1ca:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 800d1cc:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_ListenCpltCallback(hi2c);
 800d1ce:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_READY;
 800d1d0:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800d1d4:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      HAL_I2C_ListenCpltCallback(hi2c);
 800d1d8:	f7ff fba8 	bl	800c92c <HAL_I2C_ListenCpltCallback>
 800d1dc:	e56e      	b.n	800ccbc <HAL_I2C_EV_IRQHandler+0x60>
      else if (hi2c->XferCount == 1U)
 800d1de:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800d1e0:	b292      	uxth	r2, r2
 800d1e2:	2a01      	cmp	r2, #1
 800d1e4:	d070      	beq.n	800d2c8 <HAL_I2C_EV_IRQHandler+0x66c>
      else if (hi2c->XferCount == 2U)
 800d1e6:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800d1e8:	b292      	uxth	r2, r2
 800d1ea:	2a02      	cmp	r2, #2
 800d1ec:	f000 80d6 	beq.w	800d39c <HAL_I2C_EV_IRQHandler+0x740>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d1f0:	681a      	ldr	r2, [r3, #0]
 800d1f2:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800d1f6:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800d1f8:	685a      	ldr	r2, [r3, #4]
 800d1fa:	0511      	lsls	r1, r2, #20
 800d1fc:	d508      	bpl.n	800d210 <HAL_I2C_EV_IRQHandler+0x5b4>
 800d1fe:	2820      	cmp	r0, #32
 800d200:	f200 80f8 	bhi.w	800d3f4 <HAL_I2C_EV_IRQHandler+0x798>
 800d204:	2807      	cmp	r0, #7
 800d206:	f200 80ea 	bhi.w	800d3de <HAL_I2C_EV_IRQHandler+0x782>
 800d20a:	2801      	cmp	r0, #1
 800d20c:	f000 80ed 	beq.w	800d3ea <HAL_I2C_EV_IRQHandler+0x78e>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800d210:	2200      	movs	r2, #0
 800d212:	9209      	str	r2, [sp, #36]	; 0x24
 800d214:	695a      	ldr	r2, [r3, #20]
 800d216:	9209      	str	r2, [sp, #36]	; 0x24
 800d218:	699b      	ldr	r3, [r3, #24]
 800d21a:	9309      	str	r3, [sp, #36]	; 0x24
 800d21c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d21e:	e7a5      	b.n	800d16c <HAL_I2C_EV_IRQHandler+0x510>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800d220:	685a      	ldr	r2, [r3, #4]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d222:	6a61      	ldr	r1, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800d224:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d228:	605a      	str	r2, [r3, #4]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d22a:	691b      	ldr	r3, [r3, #16]
 800d22c:	700b      	strb	r3, [r1, #0]
    hi2c->pBuffPtr++;
 800d22e:	e6f1      	b.n	800d014 <HAL_I2C_EV_IRQHandler+0x3b8>
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 800d230:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 800d232:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800d236:	2a21      	cmp	r2, #33	; 0x21
 800d238:	f47f ad40 	bne.w	800ccbc <HAL_I2C_EV_IRQHandler+0x60>
    if (hi2c->XferCount != 0U)
 800d23c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800d23e:	b292      	uxth	r2, r2
 800d240:	2a00      	cmp	r2, #0
 800d242:	f47f aeb2 	bne.w	800cfaa <HAL_I2C_EV_IRQHandler+0x34e>
      if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) && (CurrentXferOptions != I2C_NO_OPTION_FRAME))
 800d246:	2908      	cmp	r1, #8
 800d248:	f000 80e2 	beq.w	800d410 <HAL_I2C_EV_IRQHandler+0x7b4>
 800d24c:	2920      	cmp	r1, #32
 800d24e:	f000 80df 	beq.w	800d410 <HAL_I2C_EV_IRQHandler+0x7b4>
 800d252:	f511 3f80 	cmn.w	r1, #65536	; 0x10000
 800d256:	f000 80db 	beq.w	800d410 <HAL_I2C_EV_IRQHandler+0x7b4>
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800d25a:	6859      	ldr	r1, [r3, #4]
 800d25c:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800d260:	6059      	str	r1, [r3, #4]
        hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800d262:	2011      	movs	r0, #17
        hi2c->State = HAL_I2C_STATE_READY;
 800d264:	2320      	movs	r3, #32
        hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800d266:	6320      	str	r0, [r4, #48]	; 0x30
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800d268:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        HAL_I2C_MasterTxCpltCallback(hi2c);
 800d26c:	4620      	mov	r0, r4
        hi2c->State = HAL_I2C_STATE_READY;
 800d26e:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        HAL_I2C_MasterTxCpltCallback(hi2c);
 800d272:	f7ff fb51 	bl	800c918 <HAL_I2C_MasterTxCpltCallback>
 800d276:	e521      	b.n	800ccbc <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800d278:	9101      	str	r1, [sp, #4]
 800d27a:	695a      	ldr	r2, [r3, #20]
 800d27c:	9201      	str	r2, [sp, #4]
 800d27e:	699b      	ldr	r3, [r3, #24]
 800d280:	9301      	str	r3, [sp, #4]
 800d282:	9b01      	ldr	r3, [sp, #4]
 800d284:	e51a      	b.n	800ccbc <HAL_I2C_EV_IRQHandler+0x60>
  else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
 800d286:	2a21      	cmp	r2, #33	; 0x21
 800d288:	f43f add1 	beq.w	800ce2e <HAL_I2C_EV_IRQHandler+0x1d2>
 800d28c:	e5c9      	b.n	800ce22 <HAL_I2C_EV_IRQHandler+0x1c6>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800d28e:	9202      	str	r2, [sp, #8]
 800d290:	695a      	ldr	r2, [r3, #20]
 800d292:	9202      	str	r2, [sp, #8]
 800d294:	699a      	ldr	r2, [r3, #24]
 800d296:	9202      	str	r2, [sp, #8]
 800d298:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800d29a:	681a      	ldr	r2, [r3, #0]
 800d29c:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800d2a0:	601a      	str	r2, [r3, #0]
      hi2c->EventCount++;
 800d2a2:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800d2a4:	3301      	adds	r3, #1
 800d2a6:	6523      	str	r3, [r4, #80]	; 0x50
 800d2a8:	e508      	b.n	800ccbc <HAL_I2C_EV_IRQHandler+0x60>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800d2aa:	685a      	ldr	r2, [r3, #4]
    if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
 800d2ac:	2904      	cmp	r1, #4
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800d2ae:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d2b2:	605a      	str	r2, [r3, #4]
    if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
 800d2b4:	f43f aeab 	beq.w	800d00e <HAL_I2C_EV_IRQHandler+0x3b2>
 800d2b8:	2902      	cmp	r1, #2
 800d2ba:	f43f aea8 	beq.w	800d00e <HAL_I2C_EV_IRQHandler+0x3b2>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d2be:	681a      	ldr	r2, [r3, #0]
 800d2c0:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d2c4:	601a      	str	r2, [r3, #0]
 800d2c6:	e6a2      	b.n	800d00e <HAL_I2C_EV_IRQHandler+0x3b2>
        if (CurrentXferOptions == I2C_NO_OPTION_FRAME)
 800d2c8:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800d2cc:	f000 811b 	beq.w	800d506 <HAL_I2C_EV_IRQHandler+0x8aa>
        else if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) \
 800d2d0:	2808      	cmp	r0, #8
 800d2d2:	f000 8108 	beq.w	800d4e6 <HAL_I2C_EV_IRQHandler+0x88a>
 800d2d6:	2820      	cmp	r0, #32
 800d2d8:	f000 8105 	beq.w	800d4e6 <HAL_I2C_EV_IRQHandler+0x88a>
                 && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_FRAME)))
 800d2dc:	2d12      	cmp	r5, #18
 800d2de:	f000 80ff 	beq.w	800d4e0 <HAL_I2C_EV_IRQHandler+0x884>
          if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP))
 800d2e2:	2810      	cmp	r0, #16
 800d2e4:	d804      	bhi.n	800d2f0 <HAL_I2C_EV_IRQHandler+0x694>
 800d2e6:	4a48      	ldr	r2, [pc, #288]	; (800d408 <HAL_I2C_EV_IRQHandler+0x7ac>)
 800d2e8:	40c2      	lsrs	r2, r0
 800d2ea:	07d1      	lsls	r1, r2, #31
 800d2ec:	f100 814c 	bmi.w	800d588 <HAL_I2C_EV_IRQHandler+0x92c>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d2f0:	681a      	ldr	r2, [r3, #0]
 800d2f2:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d2f6:	601a      	str	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800d2f8:	2200      	movs	r2, #0
 800d2fa:	9206      	str	r2, [sp, #24]
 800d2fc:	695a      	ldr	r2, [r3, #20]
 800d2fe:	9206      	str	r2, [sp, #24]
 800d300:	699b      	ldr	r3, [r3, #24]
 800d302:	9306      	str	r3, [sp, #24]
 800d304:	9b06      	ldr	r3, [sp, #24]
 800d306:	e731      	b.n	800d16c <HAL_I2C_EV_IRQHandler+0x510>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800d308:	685a      	ldr	r2, [r3, #4]
 800d30a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d30e:	605a      	str	r2, [r3, #4]
 800d310:	e4d4      	b.n	800ccbc <HAL_I2C_EV_IRQHandler+0x60>
    if ((CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP))
 800d312:	3901      	subs	r1, #1
 800d314:	290f      	cmp	r1, #15
 800d316:	d809      	bhi.n	800d32c <HAL_I2C_EV_IRQHandler+0x6d0>
 800d318:	e8df f001 	tbb	[pc, r1]
 800d31c:	3608363b 	.word	0x3608363b
 800d320:	08080808 	.word	0x08080808
 800d324:	08080808 	.word	0x08080808
 800d328:	3b080808 	.word	0x3b080808
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800d32c:	681a      	ldr	r2, [r3, #0]
 800d32e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800d332:	601a      	str	r2, [r3, #0]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d334:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800d336:	691b      	ldr	r3, [r3, #16]
 800d338:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800d33a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800d33c:	6a62      	ldr	r2, [r4, #36]	; 0x24
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d33e:	6821      	ldr	r1, [r4, #0]
    hi2c->XferCount--;
 800d340:	3b01      	subs	r3, #1
 800d342:	b29b      	uxth	r3, r3
 800d344:	8563      	strh	r3, [r4, #42]	; 0x2a
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d346:	690b      	ldr	r3, [r1, #16]
    hi2c->pBuffPtr++;
 800d348:	1c51      	adds	r1, r2, #1
 800d34a:	6261      	str	r1, [r4, #36]	; 0x24
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d34c:	7053      	strb	r3, [r2, #1]
    hi2c->XferCount--;
 800d34e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800d350:	6821      	ldr	r1, [r4, #0]
    hi2c->pBuffPtr++;
 800d352:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800d354:	3b01      	subs	r3, #1
 800d356:	b29b      	uxth	r3, r3
 800d358:	8563      	strh	r3, [r4, #42]	; 0x2a
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800d35a:	684b      	ldr	r3, [r1, #4]
    hi2c->pBuffPtr++;
 800d35c:	3201      	adds	r2, #1
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800d35e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    hi2c->State = HAL_I2C_STATE_READY;
 800d362:	2020      	movs	r0, #32
    hi2c->pBuffPtr++;
 800d364:	6262      	str	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800d366:	604b      	str	r3, [r1, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 800d368:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800d36c:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
 800d370:	2b40      	cmp	r3, #64	; 0x40
 800d372:	f000 80f5 	beq.w	800d560 <HAL_I2C_EV_IRQHandler+0x904>
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800d376:	2200      	movs	r2, #0
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 800d378:	2312      	movs	r3, #18
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800d37a:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      HAL_I2C_MasterRxCpltCallback(hi2c);
 800d37e:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 800d380:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_MasterRxCpltCallback(hi2c);
 800d382:	f7ff facb 	bl	800c91c <HAL_I2C_MasterRxCpltCallback>
 800d386:	e499      	b.n	800ccbc <HAL_I2C_EV_IRQHandler+0x60>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d388:	681a      	ldr	r2, [r3, #0]
 800d38a:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800d38e:	601a      	str	r2, [r3, #0]
 800d390:	e7d0      	b.n	800d334 <HAL_I2C_EV_IRQHandler+0x6d8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d392:	681a      	ldr	r2, [r3, #0]
 800d394:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d398:	601a      	str	r2, [r3, #0]
 800d39a:	e7cb      	b.n	800d334 <HAL_I2C_EV_IRQHandler+0x6d8>
        if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP))
 800d39c:	2810      	cmp	r0, #16
 800d39e:	d804      	bhi.n	800d3aa <HAL_I2C_EV_IRQHandler+0x74e>
 800d3a0:	4a19      	ldr	r2, [pc, #100]	; (800d408 <HAL_I2C_EV_IRQHandler+0x7ac>)
 800d3a2:	40c2      	lsrs	r2, r0
 800d3a4:	07d2      	lsls	r2, r2, #31
 800d3a6:	f100 80c2 	bmi.w	800d52e <HAL_I2C_EV_IRQHandler+0x8d2>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d3aa:	681a      	ldr	r2, [r3, #0]
 800d3ac:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d3b0:	601a      	str	r2, [r3, #0]
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800d3b2:	681a      	ldr	r2, [r3, #0]
 800d3b4:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800d3b8:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800d3ba:	685a      	ldr	r2, [r3, #4]
 800d3bc:	0516      	lsls	r6, r2, #20
 800d3be:	d506      	bpl.n	800d3ce <HAL_I2C_EV_IRQHandler+0x772>
 800d3c0:	2820      	cmp	r0, #32
 800d3c2:	f240 80bc 	bls.w	800d53e <HAL_I2C_EV_IRQHandler+0x8e2>
 800d3c6:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800d3ca:	f000 80bd 	beq.w	800d548 <HAL_I2C_EV_IRQHandler+0x8ec>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800d3ce:	2200      	movs	r2, #0
 800d3d0:	9208      	str	r2, [sp, #32]
 800d3d2:	695a      	ldr	r2, [r3, #20]
 800d3d4:	9208      	str	r2, [sp, #32]
 800d3d6:	699b      	ldr	r3, [r3, #24]
 800d3d8:	9308      	str	r3, [sp, #32]
 800d3da:	9b08      	ldr	r3, [sp, #32]
 800d3dc:	e6c6      	b.n	800d16c <HAL_I2C_EV_IRQHandler+0x510>
 800d3de:	4a0b      	ldr	r2, [pc, #44]	; (800d40c <HAL_I2C_EV_IRQHandler+0x7b0>)
 800d3e0:	3808      	subs	r0, #8
 800d3e2:	40c2      	lsrs	r2, r0
 800d3e4:	07d2      	lsls	r2, r2, #31
 800d3e6:	f57f af13 	bpl.w	800d210 <HAL_I2C_EV_IRQHandler+0x5b4>
          SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
 800d3ea:	685a      	ldr	r2, [r3, #4]
 800d3ec:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800d3f0:	605a      	str	r2, [r3, #4]
 800d3f2:	e70d      	b.n	800d210 <HAL_I2C_EV_IRQHandler+0x5b4>
 800d3f4:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800d3f8:	f47f af0a 	bne.w	800d210 <HAL_I2C_EV_IRQHandler+0x5b4>
 800d3fc:	e7f5      	b.n	800d3ea <HAL_I2C_EV_IRQHandler+0x78e>
 800d3fe:	bf00      	nop
 800d400:	0800c9fd 	.word	0x0800c9fd
 800d404:	ffff0000 	.word	0xffff0000
 800d408:	00010014 	.word	0x00010014
 800d40c:	01000101 	.word	0x01000101
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800d410:	6859      	ldr	r1, [r3, #4]
 800d412:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800d416:	6059      	str	r1, [r3, #4]
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800d418:	6819      	ldr	r1, [r3, #0]
        hi2c->PreviousState = I2C_STATE_NONE;
 800d41a:	2200      	movs	r2, #0
        hi2c->State = HAL_I2C_STATE_READY;
 800d41c:	2020      	movs	r0, #32
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800d41e:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 800d422:	6019      	str	r1, [r3, #0]
        hi2c->PreviousState = I2C_STATE_NONE;
 800d424:	6322      	str	r2, [r4, #48]	; 0x30
        hi2c->State = HAL_I2C_STATE_READY;
 800d426:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800d42a:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800d42e:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800d432:	2b40      	cmp	r3, #64	; 0x40
          HAL_I2C_MemTxCpltCallback(hi2c);
 800d434:	4620      	mov	r0, r4
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800d436:	f47f af1c 	bne.w	800d272 <HAL_I2C_EV_IRQHandler+0x616>
          HAL_I2C_MemTxCpltCallback(hi2c);
 800d43a:	f7ff fa79 	bl	800c930 <HAL_I2C_MemTxCpltCallback>
 800d43e:	e43d      	b.n	800ccbc <HAL_I2C_EV_IRQHandler+0x60>
    else if ((hi2c->XferOptions != I2C_FIRST_AND_NEXT_FRAME) && ((tmp == 1U) || (tmp == 0U)))
 800d440:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800d442:	2802      	cmp	r0, #2
 800d444:	f43f af60 	beq.w	800d308 <HAL_I2C_EV_IRQHandler+0x6ac>
 800d448:	2a01      	cmp	r2, #1
 800d44a:	f63f af5d 	bhi.w	800d308 <HAL_I2C_EV_IRQHandler+0x6ac>
  count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 800d44e:	4a62      	ldr	r2, [pc, #392]	; (800d5d8 <HAL_I2C_EV_IRQHandler+0x97c>)
  __IO uint32_t count = 0U;
 800d450:	910b      	str	r1, [sp, #44]	; 0x2c
  count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 800d452:	6812      	ldr	r2, [r2, #0]
 800d454:	f246 10a8 	movw	r0, #25000	; 0x61a8
 800d458:	fbb2 f2f0 	udiv	r2, r2, r0
 800d45c:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 800d460:	920b      	str	r2, [sp, #44]	; 0x2c
 800d462:	e004      	b.n	800d46e <HAL_I2C_EV_IRQHandler+0x812>
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800d464:	681a      	ldr	r2, [r3, #0]
 800d466:	f412 7200 	ands.w	r2, r2, #512	; 0x200
 800d46a:	f000 8092 	beq.w	800d592 <HAL_I2C_EV_IRQHandler+0x936>
    count--;
 800d46e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800d470:	3a01      	subs	r2, #1
 800d472:	920b      	str	r2, [sp, #44]	; 0x2c
    if (count == 0U)
 800d474:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800d476:	2900      	cmp	r1, #0
 800d478:	d1f4      	bne.n	800d464 <HAL_I2C_EV_IRQHandler+0x808>
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800d47a:	6c22      	ldr	r2, [r4, #64]	; 0x40
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d47c:	6a60      	ldr	r0, [r4, #36]	; 0x24
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800d47e:	f042 0220 	orr.w	r2, r2, #32
 800d482:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800d484:	685a      	ldr	r2, [r3, #4]
 800d486:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800d48a:	605a      	str	r2, [r3, #4]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d48c:	691b      	ldr	r3, [r3, #16]
 800d48e:	7003      	strb	r3, [r0, #0]
        hi2c->XferCount--;
 800d490:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
        hi2c->pBuffPtr++;
 800d492:	6a62      	ldr	r2, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800d494:	3b01      	subs	r3, #1
        hi2c->pBuffPtr++;
 800d496:	3201      	adds	r2, #1
        hi2c->XferCount--;
 800d498:	b29b      	uxth	r3, r3
        hi2c->State = HAL_I2C_STATE_READY;
 800d49a:	2020      	movs	r0, #32
        hi2c->XferCount--;
 800d49c:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->pBuffPtr++;
 800d49e:	6262      	str	r2, [r4, #36]	; 0x24
        hi2c->State = HAL_I2C_STATE_READY;
 800d4a0:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
        HAL_I2C_ErrorCallback(hi2c);
 800d4a4:	4620      	mov	r0, r4
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800d4a6:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
        HAL_I2C_ErrorCallback(hi2c);
 800d4aa:	f7ff faa3 	bl	800c9f4 <HAL_I2C_ErrorCallback>
 800d4ae:	e405      	b.n	800ccbc <HAL_I2C_EV_IRQHandler+0x60>
    if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) && (CurrentXferOptions != I2C_NO_OPTION_FRAME))
 800d4b0:	2d08      	cmp	r5, #8
 800d4b2:	d0ad      	beq.n	800d410 <HAL_I2C_EV_IRQHandler+0x7b4>
 800d4b4:	2d20      	cmp	r5, #32
 800d4b6:	d0ab      	beq.n	800d410 <HAL_I2C_EV_IRQHandler+0x7b4>
 800d4b8:	f515 3f80 	cmn.w	r5, #65536	; 0x10000
 800d4bc:	d0a8      	beq.n	800d410 <HAL_I2C_EV_IRQHandler+0x7b4>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800d4be:	685a      	ldr	r2, [r3, #4]
 800d4c0:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800d4c4:	605a      	str	r2, [r3, #4]
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800d4c6:	2011      	movs	r0, #17
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800d4c8:	2100      	movs	r1, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800d4ca:	2320      	movs	r3, #32
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800d4cc:	6320      	str	r0, [r4, #48]	; 0x30
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800d4ce:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
      HAL_I2C_MasterTxCpltCallback(hi2c);
 800d4d2:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_READY;
 800d4d4:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
      HAL_I2C_MasterTxCpltCallback(hi2c);
 800d4d8:	f7ff fa1e 	bl	800c918 <HAL_I2C_MasterTxCpltCallback>
 800d4dc:	f7ff bbee 	b.w	800ccbc <HAL_I2C_EV_IRQHandler+0x60>
                 && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_FRAME)))
 800d4e0:	2801      	cmp	r0, #1
 800d4e2:	f43f af05 	beq.w	800d2f0 <HAL_I2C_EV_IRQHandler+0x694>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d4e6:	681a      	ldr	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800d4e8:	2100      	movs	r1, #0
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d4ea:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d4ee:	601a      	str	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800d4f0:	9107      	str	r1, [sp, #28]
 800d4f2:	695a      	ldr	r2, [r3, #20]
 800d4f4:	9207      	str	r2, [sp, #28]
 800d4f6:	699a      	ldr	r2, [r3, #24]
 800d4f8:	9207      	str	r2, [sp, #28]
 800d4fa:	9a07      	ldr	r2, [sp, #28]
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800d4fc:	681a      	ldr	r2, [r3, #0]
 800d4fe:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800d502:	601a      	str	r2, [r3, #0]
 800d504:	e632      	b.n	800d16c <HAL_I2C_EV_IRQHandler+0x510>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d506:	681a      	ldr	r2, [r3, #0]
 800d508:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d50c:	601a      	str	r2, [r3, #0]
          if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800d50e:	685a      	ldr	r2, [r3, #4]
 800d510:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800d514:	d02d      	beq.n	800d572 <HAL_I2C_EV_IRQHandler+0x916>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d516:	681a      	ldr	r2, [r3, #0]
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800d518:	2100      	movs	r1, #0
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d51a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d51e:	601a      	str	r2, [r3, #0]
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800d520:	9104      	str	r1, [sp, #16]
 800d522:	695a      	ldr	r2, [r3, #20]
 800d524:	9204      	str	r2, [sp, #16]
 800d526:	699b      	ldr	r3, [r3, #24]
 800d528:	9304      	str	r3, [sp, #16]
 800d52a:	9b04      	ldr	r3, [sp, #16]
 800d52c:	e61e      	b.n	800d16c <HAL_I2C_EV_IRQHandler+0x510>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d52e:	681a      	ldr	r2, [r3, #0]
 800d530:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800d534:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800d536:	685a      	ldr	r2, [r3, #4]
 800d538:	0515      	lsls	r5, r2, #20
 800d53a:	f57f af48 	bpl.w	800d3ce <HAL_I2C_EV_IRQHandler+0x772>
 800d53e:	2807      	cmp	r0, #7
 800d540:	d807      	bhi.n	800d552 <HAL_I2C_EV_IRQHandler+0x8f6>
 800d542:	2801      	cmp	r0, #1
 800d544:	f47f af43 	bne.w	800d3ce <HAL_I2C_EV_IRQHandler+0x772>
          SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
 800d548:	685a      	ldr	r2, [r3, #4]
 800d54a:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800d54e:	605a      	str	r2, [r3, #4]
 800d550:	e73d      	b.n	800d3ce <HAL_I2C_EV_IRQHandler+0x772>
 800d552:	4a22      	ldr	r2, [pc, #136]	; (800d5dc <HAL_I2C_EV_IRQHandler+0x980>)
 800d554:	3808      	subs	r0, #8
 800d556:	40c2      	lsrs	r2, r0
 800d558:	07d0      	lsls	r0, r2, #31
 800d55a:	f57f af38 	bpl.w	800d3ce <HAL_I2C_EV_IRQHandler+0x772>
 800d55e:	e7f3      	b.n	800d548 <HAL_I2C_EV_IRQHandler+0x8ec>
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800d560:	2300      	movs	r3, #0
 800d562:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      HAL_I2C_MemRxCpltCallback(hi2c);
 800d566:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_NONE;
 800d568:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_MemRxCpltCallback(hi2c);
 800d56a:	f7ff fa41 	bl	800c9f0 <HAL_I2C_MemRxCpltCallback>
 800d56e:	f7ff bba5 	b.w	800ccbc <HAL_I2C_EV_IRQHandler+0x60>
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800d572:	9205      	str	r2, [sp, #20]
 800d574:	695a      	ldr	r2, [r3, #20]
 800d576:	9205      	str	r2, [sp, #20]
 800d578:	699a      	ldr	r2, [r3, #24]
 800d57a:	9205      	str	r2, [sp, #20]
 800d57c:	9a05      	ldr	r2, [sp, #20]
            SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800d57e:	681a      	ldr	r2, [r3, #0]
 800d580:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800d584:	601a      	str	r2, [r3, #0]
 800d586:	e5f1      	b.n	800d16c <HAL_I2C_EV_IRQHandler+0x510>
            SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d588:	681a      	ldr	r2, [r3, #0]
 800d58a:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800d58e:	601a      	str	r2, [r3, #0]
 800d590:	e6b2      	b.n	800d2f8 <HAL_I2C_EV_IRQHandler+0x69c>
        CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d592:	6819      	ldr	r1, [r3, #0]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d594:	6a60      	ldr	r0, [r4, #36]	; 0x24
        CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d596:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800d59a:	6019      	str	r1, [r3, #0]
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800d59c:	6859      	ldr	r1, [r3, #4]
 800d59e:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800d5a2:	6059      	str	r1, [r3, #4]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d5a4:	691b      	ldr	r3, [r3, #16]
 800d5a6:	7003      	strb	r3, [r0, #0]
        hi2c->XferCount--;
 800d5a8:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800d5aa:	3b01      	subs	r3, #1
        hi2c->State = HAL_I2C_STATE_READY;
 800d5ac:	2120      	movs	r1, #32
        hi2c->XferCount--;
 800d5ae:	b29b      	uxth	r3, r3
 800d5b0:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->State = HAL_I2C_STATE_READY;
 800d5b2:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->pBuffPtr++;
 800d5b6:	6a63      	ldr	r3, [r4, #36]	; 0x24
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800d5b8:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
        hi2c->pBuffPtr++;
 800d5bc:	3301      	adds	r3, #1
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800d5be:	2940      	cmp	r1, #64	; 0x40
        hi2c->pBuffPtr++;
 800d5c0:	6263      	str	r3, [r4, #36]	; 0x24
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800d5c2:	f47f aed9 	bne.w	800d378 <HAL_I2C_EV_IRQHandler+0x71c>
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800d5c6:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
          HAL_I2C_MemRxCpltCallback(hi2c);
 800d5ca:	4620      	mov	r0, r4
          hi2c->PreviousState = I2C_STATE_NONE;
 800d5cc:	6322      	str	r2, [r4, #48]	; 0x30
          HAL_I2C_MemRxCpltCallback(hi2c);
 800d5ce:	f7ff fa0f 	bl	800c9f0 <HAL_I2C_MemRxCpltCallback>
 800d5d2:	f7ff bb73 	b.w	800ccbc <HAL_I2C_EV_IRQHandler+0x60>
 800d5d6:	bf00      	nop
 800d5d8:	2000007c 	.word	0x2000007c
 800d5dc:	01000101 	.word	0x01000101

0800d5e0 <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800d5e0:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 800d5e4:	2a20      	cmp	r2, #32
{
 800d5e6:	4603      	mov	r3, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800d5e8:	fa5f fc82 	uxtb.w	ip, r2
 800d5ec:	d001      	beq.n	800d5f2 <HAL_I2CEx_ConfigAnalogFilter+0x12>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 800d5ee:	2002      	movs	r0, #2
  }
}
 800d5f0:	4770      	bx	lr
    __HAL_I2C_DISABLE(hi2c);
 800d5f2:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800d5f4:	2024      	movs	r0, #36	; 0x24
 800d5f6:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800d5fa:	6810      	ldr	r0, [r2, #0]
 800d5fc:	f020 0001 	bic.w	r0, r0, #1
 800d600:	6010      	str	r0, [r2, #0]
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 800d602:	6a50      	ldr	r0, [r2, #36]	; 0x24
 800d604:	f020 0010 	bic.w	r0, r0, #16
 800d608:	6250      	str	r0, [r2, #36]	; 0x24
    hi2c->Instance->FLTR |= AnalogFilter;
 800d60a:	6a50      	ldr	r0, [r2, #36]	; 0x24
 800d60c:	4301      	orrs	r1, r0
 800d60e:	6251      	str	r1, [r2, #36]	; 0x24
    __HAL_I2C_ENABLE(hi2c);
 800d610:	6811      	ldr	r1, [r2, #0]
 800d612:	f041 0101 	orr.w	r1, r1, #1
 800d616:	6011      	str	r1, [r2, #0]
    return HAL_OK;
 800d618:	2000      	movs	r0, #0
    hi2c->State = HAL_I2C_STATE_READY;
 800d61a:	f883 c03d 	strb.w	ip, [r3, #61]	; 0x3d
    return HAL_OK;
 800d61e:	4770      	bx	lr

0800d620 <HAL_I2CEx_ConfigDigitalFilter>:

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800d620:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 800d624:	2a20      	cmp	r2, #32
 800d626:	d001      	beq.n	800d62c <HAL_I2CEx_ConfigDigitalFilter+0xc>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 800d628:	2002      	movs	r0, #2
  }
}
 800d62a:	4770      	bx	lr
{
 800d62c:	b410      	push	{r4}
 800d62e:	fa5f fc82 	uxtb.w	ip, r2
    __HAL_I2C_DISABLE(hi2c);
 800d632:	6804      	ldr	r4, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800d634:	2224      	movs	r2, #36	; 0x24
 800d636:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800d63a:	6822      	ldr	r2, [r4, #0]
 800d63c:	f022 0201 	bic.w	r2, r2, #1
 800d640:	6022      	str	r2, [r4, #0]
    tmpreg = hi2c->Instance->FLTR;
 800d642:	4603      	mov	r3, r0
 800d644:	6a60      	ldr	r0, [r4, #36]	; 0x24
    tmpreg &= ~(I2C_FLTR_DNF);
 800d646:	f64f 72f0 	movw	r2, #65520	; 0xfff0
 800d64a:	4002      	ands	r2, r0
    tmpreg |= DigitalFilter;
 800d64c:	4311      	orrs	r1, r2
    hi2c->Instance->FLTR = tmpreg;
 800d64e:	b289      	uxth	r1, r1
 800d650:	6261      	str	r1, [r4, #36]	; 0x24
    __HAL_I2C_ENABLE(hi2c);
 800d652:	6822      	ldr	r2, [r4, #0]
 800d654:	f042 0201 	orr.w	r2, r2, #1
 800d658:	6022      	str	r2, [r4, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800d65a:	f883 c03d 	strb.w	ip, [r3, #61]	; 0x3d
    return HAL_OK;
 800d65e:	2000      	movs	r0, #0
}
 800d660:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d664:	4770      	bx	lr
 800d666:	bf00      	nop

0800d668 <HAL_LTDC_Init>:
{
  uint32_t tmp;
  uint32_t tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
 800d668:	2800      	cmp	r0, #0
 800d66a:	d069      	beq.n	800d740 <HAL_LTDC_Init+0xd8>
{
 800d66c:	b538      	push	{r3, r4, r5, lr}
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 800d66e:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 800d672:	4604      	mov	r4, r0
 800d674:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800d678:	2b00      	cmp	r3, #0
 800d67a:	d05c      	beq.n	800d736 <HAL_LTDC_Init+0xce>
    HAL_LTDC_MspInit(hltdc);
  }
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800d67c:	2202      	movs	r2, #2

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800d67e:	6823      	ldr	r3, [r4, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800d680:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800d684:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800d688:	6999      	ldr	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800d68a:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800d68c:	e9d4 5003 	ldrd	r5, r0, [r4, #12]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800d690:	f021 4170 	bic.w	r1, r1, #4026531840	; 0xf0000000
 800d694:	6199      	str	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800d696:	6999      	ldr	r1, [r3, #24]
 800d698:	432a      	orrs	r2, r5
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800d69a:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800d69c:	430a      	orrs	r2, r1
 800d69e:	619a      	str	r2, [r3, #24]

  /* Set Synchronization size */
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800d6a0:	689a      	ldr	r2, [r3, #8]
 800d6a2:	4928      	ldr	r1, [pc, #160]	; (800d744 <HAL_LTDC_Init+0xdc>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 800d6a4:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800d6a6:	400a      	ands	r2, r1
 800d6a8:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 800d6aa:	689a      	ldr	r2, [r3, #8]
 800d6ac:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800d6b0:	69a0      	ldr	r0, [r4, #24]
 800d6b2:	4302      	orrs	r2, r0
 800d6b4:	609a      	str	r2, [r3, #8]

  /* Set Accumulated Back porch */
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800d6b6:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800d6b8:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800d6ba:	400a      	ands	r2, r1
 800d6bc:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 800d6be:	68da      	ldr	r2, [r3, #12]
 800d6c0:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800d6c4:	6a20      	ldr	r0, [r4, #32]
 800d6c6:	4302      	orrs	r2, r0
 800d6c8:	60da      	str	r2, [r3, #12]

  /* Set Accumulated Active Width */
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800d6ca:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 800d6cc:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800d6ce:	400a      	ands	r2, r1
 800d6d0:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 800d6d2:	691a      	ldr	r2, [r3, #16]
 800d6d4:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800d6d8:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800d6da:	4302      	orrs	r2, r0
 800d6dc:	611a      	str	r2, [r3, #16]

  /* Set Total Width */
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800d6de:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 800d6e0:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800d6e2:	400a      	ands	r2, r1
 800d6e4:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800d6e6:	695a      	ldr	r2, [r3, #20]
 800d6e8:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800d6ea:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800d6ee:	430a      	orrs	r2, r1
 800d6f0:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800d6f2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 800d6f4:	f894 0035 	ldrb.w	r0, [r4, #53]	; 0x35
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 800d6f8:	f894 1036 	ldrb.w	r1, [r4, #54]	; 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800d6fc:	f002 427f 	and.w	r2, r2, #4278190080	; 0xff000000
 800d700:	62da      	str	r2, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 800d702:	6add      	ldr	r5, [r3, #44]	; 0x2c
 800d704:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 800d708:	432a      	orrs	r2, r5
 800d70a:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 800d70e:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800d712:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Enable the Transfer Error and FIFO underrun interrupts */
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 800d714:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800d716:	f042 0206 	orr.w	r2, r2, #6
 800d71a:	635a      	str	r2, [r3, #52]	; 0x34

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);
 800d71c:	699a      	ldr	r2, [r3, #24]

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
 800d71e:	f04f 0c01 	mov.w	ip, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800d722:	2100      	movs	r1, #0
  __HAL_LTDC_ENABLE(hltdc);
 800d724:	ea42 020c 	orr.w	r2, r2, ip
 800d728:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800d72a:	f8c4 10a4 	str.w	r1, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 800d72e:	f884 c0a1 	strb.w	ip, [r4, #161]	; 0xa1

  return HAL_OK;
 800d732:	4608      	mov	r0, r1
}
 800d734:	bd38      	pop	{r3, r4, r5, pc}
    hltdc->Lock = HAL_UNLOCKED;
 800d736:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 800d73a:	f7f4 fdeb 	bl	8002314 <HAL_LTDC_MspInit>
 800d73e:	e79d      	b.n	800d67c <HAL_LTDC_Init+0x14>
    return HAL_ERROR;
 800d740:	2001      	movs	r0, #1
}
 800d742:	4770      	bx	lr
 800d744:	f000f800 	.word	0xf000f800

0800d748 <HAL_LTDC_ErrorCallback>:
 800d748:	4770      	bx	lr
 800d74a:	bf00      	nop

0800d74c <HAL_LTDC_ReloadEventCallback>:
 800d74c:	4770      	bx	lr
 800d74e:	bf00      	nop

0800d750 <HAL_LTDC_IRQHandler>:
  *                the configuration information for the LTDC.
  * @retval HAL status
  */
void HAL_LTDC_IRQHandler(LTDC_HandleTypeDef *hltdc)
{
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800d750:	6803      	ldr	r3, [r0, #0]
{
 800d752:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800d754:	6b9d      	ldr	r5, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 800d756:	6b5e      	ldr	r6, [r3, #52]	; 0x34

  /* Transfer Error Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800d758:	076a      	lsls	r2, r5, #29
{
 800d75a:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800d75c:	d501      	bpl.n	800d762 <HAL_LTDC_IRQHandler+0x12>
 800d75e:	0771      	lsls	r1, r6, #29
 800d760:	d41d      	bmi.n	800d79e <HAL_LTDC_IRQHandler+0x4e>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* FIFO underrun Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 800d762:	07aa      	lsls	r2, r5, #30
 800d764:	d501      	bpl.n	800d76a <HAL_LTDC_IRQHandler+0x1a>
 800d766:	07b3      	lsls	r3, r6, #30
 800d768:	d42d      	bmi.n	800d7c6 <HAL_LTDC_IRQHandler+0x76>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Line Interrupt management ************************************************/
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 800d76a:	07e8      	lsls	r0, r5, #31
 800d76c:	d501      	bpl.n	800d772 <HAL_LTDC_IRQHandler+0x22>
 800d76e:	07f1      	lsls	r1, r6, #31
 800d770:	d440      	bmi.n	800d7f4 <HAL_LTDC_IRQHandler+0xa4>
    HAL_LTDC_LineEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Register reload Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 800d772:	072a      	lsls	r2, r5, #28
 800d774:	d501      	bpl.n	800d77a <HAL_LTDC_IRQHandler+0x2a>
 800d776:	0733      	lsls	r3, r6, #28
 800d778:	d400      	bmi.n	800d77c <HAL_LTDC_IRQHandler+0x2c>
#else
    /*Call Legacy Reload Event callback */
    HAL_LTDC_ReloadEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }
}
 800d77a:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800d77c:	6823      	ldr	r3, [r4, #0]
 800d77e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800d780:	2008      	movs	r0, #8
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800d782:	f022 0208 	bic.w	r2, r2, #8
 800d786:	635a      	str	r2, [r3, #52]	; 0x34
    hltdc->State = HAL_LTDC_STATE_READY;
 800d788:	2101      	movs	r1, #1
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800d78a:	63d8      	str	r0, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800d78c:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800d78e:	f884 10a1 	strb.w	r1, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800d792:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 800d796:	4620      	mov	r0, r4
 800d798:	f7ff ffd8 	bl	800d74c <HAL_LTDC_ReloadEventCallback>
}
 800d79c:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 800d79e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800d7a0:	f022 0204 	bic.w	r2, r2, #4
 800d7a4:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 800d7a6:	2204      	movs	r2, #4
 800d7a8:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 800d7aa:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800d7ae:	f043 0301 	orr.w	r3, r3, #1
 800d7b2:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 800d7b6:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800d7b8:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800d7bc:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800d7c0:	f7ff ffc2 	bl	800d748 <HAL_LTDC_ErrorCallback>
 800d7c4:	e7cd      	b.n	800d762 <HAL_LTDC_IRQHandler+0x12>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 800d7c6:	6823      	ldr	r3, [r4, #0]
 800d7c8:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800d7ca:	f022 0202 	bic.w	r2, r2, #2
 800d7ce:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 800d7d0:	2202      	movs	r2, #2
 800d7d2:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 800d7d4:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 800d7d8:	f043 0302 	orr.w	r3, r3, #2
 800d7dc:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800d7e0:	2204      	movs	r2, #4
    __HAL_UNLOCK(hltdc);
 800d7e2:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800d7e4:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800d7e8:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800d7ec:	4620      	mov	r0, r4
 800d7ee:	f7ff ffab 	bl	800d748 <HAL_LTDC_ErrorCallback>
 800d7f2:	e7ba      	b.n	800d76a <HAL_LTDC_IRQHandler+0x1a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800d7f4:	6823      	ldr	r3, [r4, #0]
 800d7f6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800d7f8:	f022 0201 	bic.w	r2, r2, #1
 800d7fc:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 800d7fe:	2201      	movs	r2, #1
 800d800:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800d802:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800d804:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800d808:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 800d80c:	4620      	mov	r0, r4
 800d80e:	f7f5 fddb 	bl	80033c8 <HAL_LTDC_LineEventCallback>
 800d812:	e7ae      	b.n	800d772 <HAL_LTDC_IRQHandler+0x22>

0800d814 <HAL_LTDC_ConfigLayer>:
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
 800d814:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800d818:	2b01      	cmp	r3, #1
 800d81a:	f000 80c2 	beq.w	800d9a2 <HAL_LTDC_ConfigLayer+0x18e>
{
 800d81e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800d822:	f04f 0e34 	mov.w	lr, #52	; 0x34
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800d826:	f8d0 9000 	ldr.w	r9, [r0]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800d82a:	fb0e 0e02 	mla	lr, lr, r2, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800d82e:	2302      	movs	r3, #2
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800d830:	01d2      	lsls	r2, r2, #7
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800d832:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800d836:	f102 0684 	add.w	r6, r2, #132	; 0x84
 800d83a:	eb09 0c06 	add.w	ip, r9, r6
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800d83e:	f8d9 300c 	ldr.w	r3, [r9, #12]
 800d842:	f3c3 4a0b 	ubfx	sl, r3, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800d846:	f8dc 3004 	ldr.w	r3, [ip, #4]
{
 800d84a:	b083      	sub	sp, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800d84c:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800d850:	460c      	mov	r4, r1
 800d852:	460d      	mov	r5, r1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800d854:	9301      	str	r3, [sp, #4]
 800d856:	4680      	mov	r8, r0
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800d858:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800d85a:	f10e 0e38 	add.w	lr, lr, #56	; 0x38
 800d85e:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800d862:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800d864:	686f      	ldr	r7, [r5, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800d866:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800d86a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800d86c:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800d870:	6823      	ldr	r3, [r4, #0]
 800d872:	f8ce 3000 	str.w	r3, [lr]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800d876:	9b01      	ldr	r3, [sp, #4]
 800d878:	f8cc 3004 	str.w	r3, [ip, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800d87c:	f8d9 300c 	ldr.w	r3, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800d880:	682a      	ldr	r2, [r5, #0]

  /* Configure the vertical start and stop position */
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800d882:	68e8      	ldr	r0, [r5, #12]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 800d884:	f8d5 e018 	ldr.w	lr, [r5, #24]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800d888:	1c51      	adds	r1, r2, #1
 800d88a:	f3c3 430b 	ubfx	r3, r3, #16, #12
 800d88e:	440b      	add	r3, r1
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800d890:	44ba      	add	sl, r7
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800d892:	ea43 430a 	orr.w	r3, r3, sl, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800d896:	f8cc 3004 	str.w	r3, [ip, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800d89a:	f8d9 100c 	ldr.w	r1, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 800d89e:	f8dc 3008 	ldr.w	r3, [ip, #8]
 800d8a2:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
 800d8a6:	f8cc 3008 	str.w	r3, [ip, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800d8aa:	f3c1 010a 	ubfx	r1, r1, #0, #11
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800d8ae:	68ab      	ldr	r3, [r5, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800d8b0:	4401      	add	r1, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800d8b2:	f8d9 000c 	ldr.w	r0, [r9, #12]
 800d8b6:	3301      	adds	r3, #1
 800d8b8:	f3c0 000a 	ubfx	r0, r0, #0, #11
 800d8bc:	4403      	add	r3, r0
 800d8be:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800d8c2:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800d8c6:	f8dc 3010 	ldr.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800d8ca:	6929      	ldr	r1, [r5, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800d8cc:	f023 0307 	bic.w	r3, r3, #7
 800d8d0:	f8cc 3010 	str.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800d8d4:	f04f 0b00 	mov.w	fp, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800d8d8:	f8cc 1010 	str.w	r1, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800d8dc:	f8dc 3018 	ldr.w	r3, [ip, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 800d8e0:	f895 0032 	ldrb.w	r0, [r5, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 800d8e4:	f895 4031 	ldrb.w	r4, [r5, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800d8e8:	f8cc b018 	str.w	fp, [ip, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 800d8ec:	f895 3030 	ldrb.w	r3, [r5, #48]	; 0x30
 800d8f0:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
 800d8f4:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 800d8f8:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 800d8fc:	f8cc 3018 	str.w	r3, [ip, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 800d900:	f8dc 3014 	ldr.w	r3, [ip, #20]
 800d904:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 800d908:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 800d90c:	696b      	ldr	r3, [r5, #20]
 800d90e:	f8cc 3014 	str.w	r3, [ip, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 800d912:	f8dc 301c 	ldr.w	r3, [ip, #28]
 800d916:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800d91a:	f023 0307 	bic.w	r3, r3, #7
 800d91e:	f8cc 301c 	str.w	r3, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 800d922:	e9d5 3007 	ldrd	r3, r0, [r5, #28]
 800d926:	4303      	orrs	r3, r0
 800d928:	f8cc 301c 	str.w	r3, [ip, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800d92c:	f8dc 3028 	ldr.w	r3, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800d930:	6a6b      	ldr	r3, [r5, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800d932:	f8cc b028 	str.w	fp, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800d936:	f8cc 3028 	str.w	r3, [ip, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800d93a:	bb69      	cbnz	r1, 800d998 <HAL_LTDC_ConfigLayer+0x184>
  {
    tmp = 4U;
 800d93c:	2304      	movs	r3, #4
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800d93e:	1abf      	subs	r7, r7, r2
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800d940:	6aaa      	ldr	r2, [r5, #40]	; 0x28
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800d942:	fb03 f707 	mul.w	r7, r3, r7
 800d946:	3703      	adds	r7, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800d948:	fb02 f303 	mul.w	r3, r2, r3
 800d94c:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800d950:	f8dc 302c 	ldr.w	r3, [ip, #44]	; 0x2c
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800d954:	6aea      	ldr	r2, [r5, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800d956:	f003 23e0 	and.w	r3, r3, #3758153728	; 0xe000e000
 800d95a:	f8cc 302c 	str.w	r3, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800d95e:	f8cc 702c 	str.w	r7, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 800d962:	f8dc 3030 	ldr.w	r3, [ip, #48]	; 0x30
 800d966:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 800d96a:	f023 0307 	bic.w	r3, r3, #7
 800d96e:	f8cc 3030 	str.w	r3, [ip, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800d972:	f8cc 2030 	str.w	r2, [ip, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800d976:	f859 3006 	ldr.w	r3, [r9, r6]
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800d97a:	2201      	movs	r2, #1
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800d97c:	4313      	orrs	r3, r2
 800d97e:	f849 3006 	str.w	r3, [r9, r6]
  __HAL_UNLOCK(hltdc);
 800d982:	2300      	movs	r3, #0
  return HAL_OK;
 800d984:	4618      	mov	r0, r3
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800d986:	f8c9 2024 	str.w	r2, [r9, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 800d98a:	f888 20a1 	strb.w	r2, [r8, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800d98e:	f888 30a0 	strb.w	r3, [r8, #160]	; 0xa0
}
 800d992:	b003      	add	sp, #12
 800d994:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 800d998:	3901      	subs	r1, #1
 800d99a:	2906      	cmp	r1, #6
 800d99c:	d903      	bls.n	800d9a6 <HAL_LTDC_ConfigLayer+0x192>
  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800d99e:	2301      	movs	r3, #1
 800d9a0:	e7cd      	b.n	800d93e <HAL_LTDC_ConfigLayer+0x12a>
  __HAL_LOCK(hltdc);
 800d9a2:	2002      	movs	r0, #2
}
 800d9a4:	4770      	bx	lr
 800d9a6:	4b02      	ldr	r3, [pc, #8]	; (800d9b0 <HAL_LTDC_ConfigLayer+0x19c>)
 800d9a8:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800d9ac:	e7c7      	b.n	800d93e <HAL_LTDC_ConfigLayer+0x12a>
 800d9ae:	bf00      	nop
 800d9b0:	0803142c 	.word	0x0803142c

0800d9b4 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 800d9b4:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800d9b8:	2b01      	cmp	r3, #1
 800d9ba:	d019      	beq.n	800d9f0 <HAL_LTDC_ProgramLineEvent+0x3c>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800d9bc:	6802      	ldr	r2, [r0, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800d9be:	2302      	movs	r3, #2
{
 800d9c0:	b410      	push	{r4}
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800d9c2:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800d9c6:	6b53      	ldr	r3, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800d9c8:	4c0a      	ldr	r4, [pc, #40]	; (800d9f4 <HAL_LTDC_ProgramLineEvent+0x40>)
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800d9ca:	f023 0301 	bic.w	r3, r3, #1
 800d9ce:	6353      	str	r3, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800d9d0:	6421      	str	r1, [r4, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800d9d2:	6b51      	ldr	r1, [r2, #52]	; 0x34
  __HAL_UNLOCK(hltdc);
 800d9d4:	2300      	movs	r3, #0
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800d9d6:	f041 0101 	orr.w	r1, r1, #1
  hltdc->State = HAL_LTDC_STATE_READY;
 800d9da:	f04f 0c01 	mov.w	ip, #1
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800d9de:	6351      	str	r1, [r2, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 800d9e0:	f880 c0a1 	strb.w	ip, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800d9e4:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
}
 800d9e8:	f85d 4b04 	ldr.w	r4, [sp], #4
  return HAL_OK;
 800d9ec:	4618      	mov	r0, r3
}
 800d9ee:	4770      	bx	lr
  __HAL_LOCK(hltdc);
 800d9f0:	2002      	movs	r0, #2
}
 800d9f2:	4770      	bx	lr
 800d9f4:	40016800 	.word	0x40016800

0800d9f8 <HAL_RCC_OscConfig>:
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 800d9f8:	2800      	cmp	r0, #0
 800d9fa:	f000 81a2 	beq.w	800dd42 <HAL_RCC_OscConfig+0x34a>
{
 800d9fe:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800da02:	6803      	ldr	r3, [r0, #0]
 800da04:	07dd      	lsls	r5, r3, #31
{
 800da06:	b082      	sub	sp, #8
 800da08:	4604      	mov	r4, r0
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800da0a:	d52f      	bpl.n	800da6c <HAL_RCC_OscConfig+0x74>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800da0c:	499e      	ldr	r1, [pc, #632]	; (800dc88 <HAL_RCC_OscConfig+0x290>)
 800da0e:	688a      	ldr	r2, [r1, #8]
 800da10:	f002 020c 	and.w	r2, r2, #12
 800da14:	2a04      	cmp	r2, #4
 800da16:	f000 80ed 	beq.w	800dbf4 <HAL_RCC_OscConfig+0x1fc>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800da1a:	688a      	ldr	r2, [r1, #8]
 800da1c:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800da20:	2a08      	cmp	r2, #8
 800da22:	f000 80e3 	beq.w	800dbec <HAL_RCC_OscConfig+0x1f4>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800da26:	6863      	ldr	r3, [r4, #4]
 800da28:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800da2c:	f000 80ec 	beq.w	800dc08 <HAL_RCC_OscConfig+0x210>
 800da30:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 800da34:	f000 8175 	beq.w	800dd22 <HAL_RCC_OscConfig+0x32a>
 800da38:	4d93      	ldr	r5, [pc, #588]	; (800dc88 <HAL_RCC_OscConfig+0x290>)
 800da3a:	682a      	ldr	r2, [r5, #0]
 800da3c:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 800da40:	602a      	str	r2, [r5, #0]
 800da42:	682a      	ldr	r2, [r5, #0]
 800da44:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 800da48:	602a      	str	r2, [r5, #0]

      /* Check the HSE State */
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800da4a:	2b00      	cmp	r3, #0
 800da4c:	f040 80e1 	bne.w	800dc12 <HAL_RCC_OscConfig+0x21a>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800da50:	f7fd fdb8 	bl	800b5c4 <HAL_GetTick>
 800da54:	4606      	mov	r6, r0

        /* Wait till HSE is bypassed or disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800da56:	e005      	b.n	800da64 <HAL_RCC_OscConfig+0x6c>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800da58:	f7fd fdb4 	bl	800b5c4 <HAL_GetTick>
 800da5c:	1b80      	subs	r0, r0, r6
 800da5e:	2864      	cmp	r0, #100	; 0x64
 800da60:	f200 8101 	bhi.w	800dc66 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800da64:	682b      	ldr	r3, [r5, #0]
 800da66:	039b      	lsls	r3, r3, #14
 800da68:	d4f6      	bmi.n	800da58 <HAL_RCC_OscConfig+0x60>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800da6a:	6823      	ldr	r3, [r4, #0]
 800da6c:	079f      	lsls	r7, r3, #30
 800da6e:	d528      	bpl.n	800dac2 <HAL_RCC_OscConfig+0xca>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800da70:	4a85      	ldr	r2, [pc, #532]	; (800dc88 <HAL_RCC_OscConfig+0x290>)
 800da72:	6891      	ldr	r1, [r2, #8]
 800da74:	f011 0f0c 	tst.w	r1, #12
 800da78:	f000 8090 	beq.w	800db9c <HAL_RCC_OscConfig+0x1a4>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800da7c:	6891      	ldr	r1, [r2, #8]
 800da7e:	f001 010c 	and.w	r1, r1, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800da82:	2908      	cmp	r1, #8
 800da84:	f000 8086 	beq.w	800db94 <HAL_RCC_OscConfig+0x19c>
      }
    }
    else
    {
      /* Check the HSI State */
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 800da88:	68e3      	ldr	r3, [r4, #12]
 800da8a:	2b00      	cmp	r3, #0
 800da8c:	f000 810e 	beq.w	800dcac <HAL_RCC_OscConfig+0x2b4>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 800da90:	4b7e      	ldr	r3, [pc, #504]	; (800dc8c <HAL_RCC_OscConfig+0x294>)

        /* Get Start Tick*/
        tickstart = HAL_GetTick();

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800da92:	4e7d      	ldr	r6, [pc, #500]	; (800dc88 <HAL_RCC_OscConfig+0x290>)
        __HAL_RCC_HSI_ENABLE();
 800da94:	2201      	movs	r2, #1
 800da96:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800da98:	f7fd fd94 	bl	800b5c4 <HAL_GetTick>
 800da9c:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800da9e:	e005      	b.n	800daac <HAL_RCC_OscConfig+0xb4>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800daa0:	f7fd fd90 	bl	800b5c4 <HAL_GetTick>
 800daa4:	1b40      	subs	r0, r0, r5
 800daa6:	2802      	cmp	r0, #2
 800daa8:	f200 80dd 	bhi.w	800dc66 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800daac:	6833      	ldr	r3, [r6, #0]
 800daae:	0798      	lsls	r0, r3, #30
 800dab0:	d5f6      	bpl.n	800daa0 <HAL_RCC_OscConfig+0xa8>
            return HAL_TIMEOUT;
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800dab2:	6833      	ldr	r3, [r6, #0]
 800dab4:	6922      	ldr	r2, [r4, #16]
 800dab6:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800daba:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800dabe:	6033      	str	r3, [r6, #0]
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800dac0:	6823      	ldr	r3, [r4, #0]
 800dac2:	071a      	lsls	r2, r3, #28
 800dac4:	d451      	bmi.n	800db6a <HAL_RCC_OscConfig+0x172>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800dac6:	0758      	lsls	r0, r3, #29
 800dac8:	d52f      	bpl.n	800db2a <HAL_RCC_OscConfig+0x132>
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 800daca:	4a6f      	ldr	r2, [pc, #444]	; (800dc88 <HAL_RCC_OscConfig+0x290>)
 800dacc:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800dace:	f013 5380 	ands.w	r3, r3, #268435456	; 0x10000000
 800dad2:	d07f      	beq.n	800dbd4 <HAL_RCC_OscConfig+0x1dc>
    FlagStatus       pwrclkchanged = RESET;
 800dad4:	2500      	movs	r5, #0
    {
      __HAL_RCC_PWR_CLK_ENABLE();
      pwrclkchanged = SET;
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800dad6:	4e6e      	ldr	r6, [pc, #440]	; (800dc90 <HAL_RCC_OscConfig+0x298>)
 800dad8:	6833      	ldr	r3, [r6, #0]
 800dada:	05d9      	lsls	r1, r3, #23
 800dadc:	f140 80b3 	bpl.w	800dc46 <HAL_RCC_OscConfig+0x24e>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800dae0:	68a3      	ldr	r3, [r4, #8]
 800dae2:	2b01      	cmp	r3, #1
 800dae4:	f000 80c3 	beq.w	800dc6e <HAL_RCC_OscConfig+0x276>
 800dae8:	2b05      	cmp	r3, #5
 800daea:	f000 812c 	beq.w	800dd46 <HAL_RCC_OscConfig+0x34e>
 800daee:	4e66      	ldr	r6, [pc, #408]	; (800dc88 <HAL_RCC_OscConfig+0x290>)
 800daf0:	6f32      	ldr	r2, [r6, #112]	; 0x70
 800daf2:	f022 0201 	bic.w	r2, r2, #1
 800daf6:	6732      	str	r2, [r6, #112]	; 0x70
 800daf8:	6f32      	ldr	r2, [r6, #112]	; 0x70
 800dafa:	f022 0204 	bic.w	r2, r2, #4
 800dafe:	6732      	str	r2, [r6, #112]	; 0x70
    /* Check the LSE State */
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800db00:	2b00      	cmp	r3, #0
 800db02:	f040 80b9 	bne.w	800dc78 <HAL_RCC_OscConfig+0x280>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 800db06:	f7fd fd5d 	bl	800b5c4 <HAL_GetTick>

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800db0a:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 800db0e:	4607      	mov	r7, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800db10:	e005      	b.n	800db1e <HAL_RCC_OscConfig+0x126>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800db12:	f7fd fd57 	bl	800b5c4 <HAL_GetTick>
 800db16:	1bc0      	subs	r0, r0, r7
 800db18:	4540      	cmp	r0, r8
 800db1a:	f200 80a4 	bhi.w	800dc66 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800db1e:	6f33      	ldr	r3, [r6, #112]	; 0x70
 800db20:	0798      	lsls	r0, r3, #30
 800db22:	d4f6      	bmi.n	800db12 <HAL_RCC_OscConfig+0x11a>
        }
      }
    }

    /* Restore clock configuration if changed */
    if(pwrclkchanged == SET)
 800db24:	2d00      	cmp	r5, #0
 800db26:	f040 8106 	bne.w	800dd36 <HAL_RCC_OscConfig+0x33e>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 800db2a:	69a0      	ldr	r0, [r4, #24]
 800db2c:	b1c8      	cbz	r0, 800db62 <HAL_RCC_OscConfig+0x16a>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 800db2e:	4d56      	ldr	r5, [pc, #344]	; (800dc88 <HAL_RCC_OscConfig+0x290>)
 800db30:	68ab      	ldr	r3, [r5, #8]
 800db32:	f003 030c 	and.w	r3, r3, #12
 800db36:	2b08      	cmp	r3, #8
 800db38:	f000 80c9 	beq.w	800dcce <HAL_RCC_OscConfig+0x2d6>
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 800db3c:	4b53      	ldr	r3, [pc, #332]	; (800dc8c <HAL_RCC_OscConfig+0x294>)
 800db3e:	2200      	movs	r2, #0
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800db40:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 800db42:	661a      	str	r2, [r3, #96]	; 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800db44:	f000 8109 	beq.w	800dd5a <HAL_RCC_OscConfig+0x362>
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800db48:	f7fd fd3c 	bl	800b5c4 <HAL_GetTick>
 800db4c:	4604      	mov	r4, r0

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800db4e:	e005      	b.n	800db5c <HAL_RCC_OscConfig+0x164>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800db50:	f7fd fd38 	bl	800b5c4 <HAL_GetTick>
 800db54:	1b00      	subs	r0, r0, r4
 800db56:	2802      	cmp	r0, #2
 800db58:	f200 8085 	bhi.w	800dc66 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800db5c:	682b      	ldr	r3, [r5, #0]
 800db5e:	019b      	lsls	r3, r3, #6
 800db60:	d4f6      	bmi.n	800db50 <HAL_RCC_OscConfig+0x158>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 800db62:	2000      	movs	r0, #0
}
 800db64:	b002      	add	sp, #8
 800db66:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 800db6a:	6963      	ldr	r3, [r4, #20]
 800db6c:	b30b      	cbz	r3, 800dbb2 <HAL_RCC_OscConfig+0x1ba>
      __HAL_RCC_LSI_ENABLE();
 800db6e:	4b47      	ldr	r3, [pc, #284]	; (800dc8c <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800db70:	4e45      	ldr	r6, [pc, #276]	; (800dc88 <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_ENABLE();
 800db72:	2201      	movs	r2, #1
 800db74:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800db78:	f7fd fd24 	bl	800b5c4 <HAL_GetTick>
 800db7c:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800db7e:	e004      	b.n	800db8a <HAL_RCC_OscConfig+0x192>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800db80:	f7fd fd20 	bl	800b5c4 <HAL_GetTick>
 800db84:	1b40      	subs	r0, r0, r5
 800db86:	2802      	cmp	r0, #2
 800db88:	d86d      	bhi.n	800dc66 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800db8a:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800db8c:	079b      	lsls	r3, r3, #30
 800db8e:	d5f7      	bpl.n	800db80 <HAL_RCC_OscConfig+0x188>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800db90:	6823      	ldr	r3, [r4, #0]
 800db92:	e798      	b.n	800dac6 <HAL_RCC_OscConfig+0xce>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800db94:	6852      	ldr	r2, [r2, #4]
 800db96:	0256      	lsls	r6, r2, #9
 800db98:	f53f af76 	bmi.w	800da88 <HAL_RCC_OscConfig+0x90>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800db9c:	4a3a      	ldr	r2, [pc, #232]	; (800dc88 <HAL_RCC_OscConfig+0x290>)
 800db9e:	6812      	ldr	r2, [r2, #0]
 800dba0:	0795      	lsls	r5, r2, #30
 800dba2:	d544      	bpl.n	800dc2e <HAL_RCC_OscConfig+0x236>
 800dba4:	68e2      	ldr	r2, [r4, #12]
 800dba6:	2a01      	cmp	r2, #1
 800dba8:	d041      	beq.n	800dc2e <HAL_RCC_OscConfig+0x236>
        return HAL_ERROR;
 800dbaa:	2001      	movs	r0, #1
}
 800dbac:	b002      	add	sp, #8
 800dbae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_LSI_DISABLE();
 800dbb2:	4a36      	ldr	r2, [pc, #216]	; (800dc8c <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800dbb4:	4e34      	ldr	r6, [pc, #208]	; (800dc88 <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_DISABLE();
 800dbb6:	f8c2 3e80 	str.w	r3, [r2, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800dbba:	f7fd fd03 	bl	800b5c4 <HAL_GetTick>
 800dbbe:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800dbc0:	e004      	b.n	800dbcc <HAL_RCC_OscConfig+0x1d4>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800dbc2:	f7fd fcff 	bl	800b5c4 <HAL_GetTick>
 800dbc6:	1b40      	subs	r0, r0, r5
 800dbc8:	2802      	cmp	r0, #2
 800dbca:	d84c      	bhi.n	800dc66 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800dbcc:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800dbce:	079f      	lsls	r7, r3, #30
 800dbd0:	d4f7      	bmi.n	800dbc2 <HAL_RCC_OscConfig+0x1ca>
 800dbd2:	e7dd      	b.n	800db90 <HAL_RCC_OscConfig+0x198>
      __HAL_RCC_PWR_CLK_ENABLE();
 800dbd4:	9301      	str	r3, [sp, #4]
 800dbd6:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800dbd8:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800dbdc:	6413      	str	r3, [r2, #64]	; 0x40
 800dbde:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800dbe0:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800dbe4:	9301      	str	r3, [sp, #4]
 800dbe6:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 800dbe8:	2501      	movs	r5, #1
 800dbea:	e774      	b.n	800dad6 <HAL_RCC_OscConfig+0xde>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800dbec:	684a      	ldr	r2, [r1, #4]
 800dbee:	0250      	lsls	r0, r2, #9
 800dbf0:	f57f af19 	bpl.w	800da26 <HAL_RCC_OscConfig+0x2e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800dbf4:	4a24      	ldr	r2, [pc, #144]	; (800dc88 <HAL_RCC_OscConfig+0x290>)
 800dbf6:	6812      	ldr	r2, [r2, #0]
 800dbf8:	0391      	lsls	r1, r2, #14
 800dbfa:	f57f af37 	bpl.w	800da6c <HAL_RCC_OscConfig+0x74>
 800dbfe:	6862      	ldr	r2, [r4, #4]
 800dc00:	2a00      	cmp	r2, #0
 800dc02:	f47f af33 	bne.w	800da6c <HAL_RCC_OscConfig+0x74>
 800dc06:	e7d0      	b.n	800dbaa <HAL_RCC_OscConfig+0x1b2>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800dc08:	4a1f      	ldr	r2, [pc, #124]	; (800dc88 <HAL_RCC_OscConfig+0x290>)
 800dc0a:	6813      	ldr	r3, [r2, #0]
 800dc0c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800dc10:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800dc12:	f7fd fcd7 	bl	800b5c4 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800dc16:	4e1c      	ldr	r6, [pc, #112]	; (800dc88 <HAL_RCC_OscConfig+0x290>)
        tickstart = HAL_GetTick();
 800dc18:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800dc1a:	e004      	b.n	800dc26 <HAL_RCC_OscConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800dc1c:	f7fd fcd2 	bl	800b5c4 <HAL_GetTick>
 800dc20:	1b40      	subs	r0, r0, r5
 800dc22:	2864      	cmp	r0, #100	; 0x64
 800dc24:	d81f      	bhi.n	800dc66 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800dc26:	6833      	ldr	r3, [r6, #0]
 800dc28:	039a      	lsls	r2, r3, #14
 800dc2a:	d5f7      	bpl.n	800dc1c <HAL_RCC_OscConfig+0x224>
 800dc2c:	e71d      	b.n	800da6a <HAL_RCC_OscConfig+0x72>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800dc2e:	4916      	ldr	r1, [pc, #88]	; (800dc88 <HAL_RCC_OscConfig+0x290>)
 800dc30:	6920      	ldr	r0, [r4, #16]
 800dc32:	680a      	ldr	r2, [r1, #0]
 800dc34:	f022 02f8 	bic.w	r2, r2, #248	; 0xf8
 800dc38:	ea42 02c0 	orr.w	r2, r2, r0, lsl #3
 800dc3c:	600a      	str	r2, [r1, #0]
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800dc3e:	071a      	lsls	r2, r3, #28
 800dc40:	f57f af41 	bpl.w	800dac6 <HAL_RCC_OscConfig+0xce>
 800dc44:	e791      	b.n	800db6a <HAL_RCC_OscConfig+0x172>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 800dc46:	6833      	ldr	r3, [r6, #0]
 800dc48:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800dc4c:	6033      	str	r3, [r6, #0]
      tickstart = HAL_GetTick();
 800dc4e:	f7fd fcb9 	bl	800b5c4 <HAL_GetTick>
 800dc52:	4607      	mov	r7, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800dc54:	6833      	ldr	r3, [r6, #0]
 800dc56:	05da      	lsls	r2, r3, #23
 800dc58:	f53f af42 	bmi.w	800dae0 <HAL_RCC_OscConfig+0xe8>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800dc5c:	f7fd fcb2 	bl	800b5c4 <HAL_GetTick>
 800dc60:	1bc0      	subs	r0, r0, r7
 800dc62:	2802      	cmp	r0, #2
 800dc64:	d9f6      	bls.n	800dc54 <HAL_RCC_OscConfig+0x25c>
            return HAL_TIMEOUT;
 800dc66:	2003      	movs	r0, #3
}
 800dc68:	b002      	add	sp, #8
 800dc6a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800dc6e:	4a06      	ldr	r2, [pc, #24]	; (800dc88 <HAL_RCC_OscConfig+0x290>)
 800dc70:	6f13      	ldr	r3, [r2, #112]	; 0x70
 800dc72:	f043 0301 	orr.w	r3, r3, #1
 800dc76:	6713      	str	r3, [r2, #112]	; 0x70
      tickstart = HAL_GetTick();
 800dc78:	f7fd fca4 	bl	800b5c4 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800dc7c:	4f02      	ldr	r7, [pc, #8]	; (800dc88 <HAL_RCC_OscConfig+0x290>)
      tickstart = HAL_GetTick();
 800dc7e:	4606      	mov	r6, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800dc80:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800dc84:	e00b      	b.n	800dc9e <HAL_RCC_OscConfig+0x2a6>
 800dc86:	bf00      	nop
 800dc88:	40023800 	.word	0x40023800
 800dc8c:	42470000 	.word	0x42470000
 800dc90:	40007000 	.word	0x40007000
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800dc94:	f7fd fc96 	bl	800b5c4 <HAL_GetTick>
 800dc98:	1b80      	subs	r0, r0, r6
 800dc9a:	4540      	cmp	r0, r8
 800dc9c:	d8e3      	bhi.n	800dc66 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800dc9e:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800dca0:	079b      	lsls	r3, r3, #30
 800dca2:	d5f7      	bpl.n	800dc94 <HAL_RCC_OscConfig+0x29c>
    if(pwrclkchanged == SET)
 800dca4:	2d00      	cmp	r5, #0
 800dca6:	f43f af40 	beq.w	800db2a <HAL_RCC_OscConfig+0x132>
 800dcaa:	e044      	b.n	800dd36 <HAL_RCC_OscConfig+0x33e>
        __HAL_RCC_HSI_DISABLE();
 800dcac:	4a42      	ldr	r2, [pc, #264]	; (800ddb8 <HAL_RCC_OscConfig+0x3c0>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800dcae:	4e43      	ldr	r6, [pc, #268]	; (800ddbc <HAL_RCC_OscConfig+0x3c4>)
        __HAL_RCC_HSI_DISABLE();
 800dcb0:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800dcb2:	f7fd fc87 	bl	800b5c4 <HAL_GetTick>
 800dcb6:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800dcb8:	e004      	b.n	800dcc4 <HAL_RCC_OscConfig+0x2cc>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800dcba:	f7fd fc83 	bl	800b5c4 <HAL_GetTick>
 800dcbe:	1b40      	subs	r0, r0, r5
 800dcc0:	2802      	cmp	r0, #2
 800dcc2:	d8d0      	bhi.n	800dc66 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800dcc4:	6833      	ldr	r3, [r6, #0]
 800dcc6:	0799      	lsls	r1, r3, #30
 800dcc8:	d4f7      	bmi.n	800dcba <HAL_RCC_OscConfig+0x2c2>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800dcca:	6823      	ldr	r3, [r4, #0]
 800dccc:	e6f9      	b.n	800dac2 <HAL_RCC_OscConfig+0xca>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 800dcce:	2801      	cmp	r0, #1
 800dcd0:	f43f af48 	beq.w	800db64 <HAL_RCC_OscConfig+0x16c>
        pll_config = RCC->PLLCFGR;
 800dcd4:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800dcd6:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800dcd8:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800dcdc:	4291      	cmp	r1, r2
 800dcde:	f47f af64 	bne.w	800dbaa <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800dce2:	6a22      	ldr	r2, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800dce4:	f003 013f 	and.w	r1, r3, #63	; 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800dce8:	4291      	cmp	r1, r2
 800dcea:	f47f af5e 	bne.w	800dbaa <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800dcee:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800dcf0:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 800dcf4:	401a      	ands	r2, r3
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800dcf6:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 800dcfa:	f47f af56 	bne.w	800dbaa <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800dcfe:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800dd00:	0852      	lsrs	r2, r2, #1
 800dd02:	f403 3140 	and.w	r1, r3, #196608	; 0x30000
 800dd06:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800dd08:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 800dd0c:	f47f af4d 	bne.w	800dbaa <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 800dd10:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800dd12:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800dd16:	ebb3 6f02 	cmp.w	r3, r2, lsl #24
    return HAL_ERROR;
 800dd1a:	bf14      	ite	ne
 800dd1c:	2001      	movne	r0, #1
 800dd1e:	2000      	moveq	r0, #0
 800dd20:	e720      	b.n	800db64 <HAL_RCC_OscConfig+0x16c>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800dd22:	4b26      	ldr	r3, [pc, #152]	; (800ddbc <HAL_RCC_OscConfig+0x3c4>)
 800dd24:	681a      	ldr	r2, [r3, #0]
 800dd26:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 800dd2a:	601a      	str	r2, [r3, #0]
 800dd2c:	681a      	ldr	r2, [r3, #0]
 800dd2e:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 800dd32:	601a      	str	r2, [r3, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800dd34:	e76d      	b.n	800dc12 <HAL_RCC_OscConfig+0x21a>
      __HAL_RCC_PWR_CLK_DISABLE();
 800dd36:	4a21      	ldr	r2, [pc, #132]	; (800ddbc <HAL_RCC_OscConfig+0x3c4>)
 800dd38:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800dd3a:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800dd3e:	6413      	str	r3, [r2, #64]	; 0x40
 800dd40:	e6f3      	b.n	800db2a <HAL_RCC_OscConfig+0x132>
    return HAL_ERROR;
 800dd42:	2001      	movs	r0, #1
}
 800dd44:	4770      	bx	lr
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800dd46:	4b1d      	ldr	r3, [pc, #116]	; (800ddbc <HAL_RCC_OscConfig+0x3c4>)
 800dd48:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800dd4a:	f042 0204 	orr.w	r2, r2, #4
 800dd4e:	671a      	str	r2, [r3, #112]	; 0x70
 800dd50:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800dd52:	f042 0201 	orr.w	r2, r2, #1
 800dd56:	671a      	str	r2, [r3, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800dd58:	e78e      	b.n	800dc78 <HAL_RCC_OscConfig+0x280>
        tickstart = HAL_GetTick();
 800dd5a:	f7fd fc33 	bl	800b5c4 <HAL_GetTick>
 800dd5e:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800dd60:	e005      	b.n	800dd6e <HAL_RCC_OscConfig+0x376>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800dd62:	f7fd fc2f 	bl	800b5c4 <HAL_GetTick>
 800dd66:	1b80      	subs	r0, r0, r6
 800dd68:	2802      	cmp	r0, #2
 800dd6a:	f63f af7c 	bhi.w	800dc66 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800dd6e:	682b      	ldr	r3, [r5, #0]
 800dd70:	0199      	lsls	r1, r3, #6
 800dd72:	d4f6      	bmi.n	800dd62 <HAL_RCC_OscConfig+0x36a>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800dd74:	e9d4 3107 	ldrd	r3, r1, [r4, #28]
 800dd78:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800dd7a:	430b      	orrs	r3, r1
 800dd7c:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800dd80:	e9d4 210a 	ldrd	r2, r1, [r4, #40]	; 0x28
 800dd84:	0852      	lsrs	r2, r2, #1
 800dd86:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
 800dd8a:	3a01      	subs	r2, #1
        __HAL_RCC_PLL_ENABLE();
 800dd8c:	490a      	ldr	r1, [pc, #40]	; (800ddb8 <HAL_RCC_OscConfig+0x3c0>)
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800dd8e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
        __HAL_RCC_PLL_ENABLE();
 800dd92:	2201      	movs	r2, #1
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800dd94:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 800dd96:	660a      	str	r2, [r1, #96]	; 0x60
        tickstart = HAL_GetTick();
 800dd98:	f7fd fc14 	bl	800b5c4 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800dd9c:	4d07      	ldr	r5, [pc, #28]	; (800ddbc <HAL_RCC_OscConfig+0x3c4>)
        tickstart = HAL_GetTick();
 800dd9e:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800dda0:	e005      	b.n	800ddae <HAL_RCC_OscConfig+0x3b6>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800dda2:	f7fd fc0f 	bl	800b5c4 <HAL_GetTick>
 800dda6:	1b00      	subs	r0, r0, r4
 800dda8:	2802      	cmp	r0, #2
 800ddaa:	f63f af5c 	bhi.w	800dc66 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800ddae:	682b      	ldr	r3, [r5, #0]
 800ddb0:	019a      	lsls	r2, r3, #6
 800ddb2:	d5f6      	bpl.n	800dda2 <HAL_RCC_OscConfig+0x3aa>
 800ddb4:	e6d5      	b.n	800db62 <HAL_RCC_OscConfig+0x16a>
 800ddb6:	bf00      	nop
 800ddb8:	42470000 	.word	0x42470000
 800ddbc:	40023800 	.word	0x40023800

0800ddc0 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800ddc0:	4916      	ldr	r1, [pc, #88]	; (800de1c <HAL_RCC_GetSysClockFreq+0x5c>)
{
 800ddc2:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800ddc4:	688b      	ldr	r3, [r1, #8]
 800ddc6:	f003 030c 	and.w	r3, r3, #12
 800ddca:	2b04      	cmp	r3, #4
 800ddcc:	d01b      	beq.n	800de06 <HAL_RCC_GetSysClockFreq+0x46>
 800ddce:	2b08      	cmp	r3, #8
 800ddd0:	d117      	bne.n	800de02 <HAL_RCC_GetSysClockFreq+0x42>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800ddd2:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800ddd4:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800ddd6:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800ddd8:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800dddc:	f002 023f 	and.w	r2, r2, #63	; 0x3f
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800dde0:	d113      	bne.n	800de0a <HAL_RCC_GetSysClockFreq+0x4a>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800dde2:	480f      	ldr	r0, [pc, #60]	; (800de20 <HAL_RCC_GetSysClockFreq+0x60>)
 800dde4:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800dde8:	fba1 0100 	umull	r0, r1, r1, r0
 800ddec:	f7f2 fde6 	bl	80009bc <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 800ddf0:	4b0a      	ldr	r3, [pc, #40]	; (800de1c <HAL_RCC_GetSysClockFreq+0x5c>)
 800ddf2:	685b      	ldr	r3, [r3, #4]
 800ddf4:	f3c3 4301 	ubfx	r3, r3, #16, #2
 800ddf8:	3301      	adds	r3, #1
 800ddfa:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 800ddfc:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 800de00:	bd08      	pop	{r3, pc}
      sysclockfreq = HSI_VALUE;
 800de02:	4807      	ldr	r0, [pc, #28]	; (800de20 <HAL_RCC_GetSysClockFreq+0x60>)
}
 800de04:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800de06:	4807      	ldr	r0, [pc, #28]	; (800de24 <HAL_RCC_GetSysClockFreq+0x64>)
}
 800de08:	bd08      	pop	{r3, pc}
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800de0a:	4806      	ldr	r0, [pc, #24]	; (800de24 <HAL_RCC_GetSysClockFreq+0x64>)
 800de0c:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800de10:	2300      	movs	r3, #0
 800de12:	fba1 0100 	umull	r0, r1, r1, r0
 800de16:	f7f2 fdd1 	bl	80009bc <__aeabi_uldivmod>
 800de1a:	e7e9      	b.n	800ddf0 <HAL_RCC_GetSysClockFreq+0x30>
 800de1c:	40023800 	.word	0x40023800
 800de20:	00f42400 	.word	0x00f42400
 800de24:	007a1200 	.word	0x007a1200

0800de28 <HAL_RCC_ClockConfig>:
  if(RCC_ClkInitStruct == NULL)
 800de28:	2800      	cmp	r0, #0
 800de2a:	f000 8087 	beq.w	800df3c <HAL_RCC_ClockConfig+0x114>
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800de2e:	4a48      	ldr	r2, [pc, #288]	; (800df50 <HAL_RCC_ClockConfig+0x128>)
 800de30:	6813      	ldr	r3, [r2, #0]
 800de32:	f003 030f 	and.w	r3, r3, #15
 800de36:	428b      	cmp	r3, r1
{
 800de38:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800de3c:	460d      	mov	r5, r1
 800de3e:	4604      	mov	r4, r0
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800de40:	d209      	bcs.n	800de56 <HAL_RCC_ClockConfig+0x2e>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800de42:	b2cb      	uxtb	r3, r1
 800de44:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800de46:	6813      	ldr	r3, [r2, #0]
 800de48:	f003 030f 	and.w	r3, r3, #15
 800de4c:	428b      	cmp	r3, r1
 800de4e:	d002      	beq.n	800de56 <HAL_RCC_ClockConfig+0x2e>
    return HAL_ERROR;
 800de50:	2001      	movs	r0, #1
}
 800de52:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800de56:	6823      	ldr	r3, [r4, #0]
 800de58:	0798      	lsls	r0, r3, #30
 800de5a:	d514      	bpl.n	800de86 <HAL_RCC_ClockConfig+0x5e>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800de5c:	0759      	lsls	r1, r3, #29
 800de5e:	d504      	bpl.n	800de6a <HAL_RCC_ClockConfig+0x42>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 800de60:	493c      	ldr	r1, [pc, #240]	; (800df54 <HAL_RCC_ClockConfig+0x12c>)
 800de62:	688a      	ldr	r2, [r1, #8]
 800de64:	f442 52e0 	orr.w	r2, r2, #7168	; 0x1c00
 800de68:	608a      	str	r2, [r1, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800de6a:	071a      	lsls	r2, r3, #28
 800de6c:	d504      	bpl.n	800de78 <HAL_RCC_ClockConfig+0x50>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 800de6e:	4939      	ldr	r1, [pc, #228]	; (800df54 <HAL_RCC_ClockConfig+0x12c>)
 800de70:	688a      	ldr	r2, [r1, #8]
 800de72:	f442 4260 	orr.w	r2, r2, #57344	; 0xe000
 800de76:	608a      	str	r2, [r1, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800de78:	4936      	ldr	r1, [pc, #216]	; (800df54 <HAL_RCC_ClockConfig+0x12c>)
 800de7a:	68a0      	ldr	r0, [r4, #8]
 800de7c:	688a      	ldr	r2, [r1, #8]
 800de7e:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 800de82:	4302      	orrs	r2, r0
 800de84:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800de86:	07df      	lsls	r7, r3, #31
 800de88:	d521      	bpl.n	800dece <HAL_RCC_ClockConfig+0xa6>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800de8a:	6862      	ldr	r2, [r4, #4]
 800de8c:	2a01      	cmp	r2, #1
 800de8e:	d057      	beq.n	800df40 <HAL_RCC_ClockConfig+0x118>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800de90:	1e93      	subs	r3, r2, #2
 800de92:	2b01      	cmp	r3, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800de94:	4b2f      	ldr	r3, [pc, #188]	; (800df54 <HAL_RCC_ClockConfig+0x12c>)
 800de96:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800de98:	d94d      	bls.n	800df36 <HAL_RCC_ClockConfig+0x10e>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800de9a:	0799      	lsls	r1, r3, #30
 800de9c:	d5d8      	bpl.n	800de50 <HAL_RCC_ClockConfig+0x28>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800de9e:	4e2d      	ldr	r6, [pc, #180]	; (800df54 <HAL_RCC_ClockConfig+0x12c>)
 800dea0:	68b3      	ldr	r3, [r6, #8]
 800dea2:	f023 0303 	bic.w	r3, r3, #3
 800dea6:	4313      	orrs	r3, r2
 800dea8:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 800deaa:	f7fd fb8b 	bl	800b5c4 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800deae:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 800deb2:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800deb4:	e004      	b.n	800dec0 <HAL_RCC_ClockConfig+0x98>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800deb6:	f7fd fb85 	bl	800b5c4 <HAL_GetTick>
 800deba:	1bc0      	subs	r0, r0, r7
 800debc:	4540      	cmp	r0, r8
 800debe:	d844      	bhi.n	800df4a <HAL_RCC_ClockConfig+0x122>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800dec0:	68b3      	ldr	r3, [r6, #8]
 800dec2:	6862      	ldr	r2, [r4, #4]
 800dec4:	f003 030c 	and.w	r3, r3, #12
 800dec8:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 800decc:	d1f3      	bne.n	800deb6 <HAL_RCC_ClockConfig+0x8e>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 800dece:	4a20      	ldr	r2, [pc, #128]	; (800df50 <HAL_RCC_ClockConfig+0x128>)
 800ded0:	6813      	ldr	r3, [r2, #0]
 800ded2:	f003 030f 	and.w	r3, r3, #15
 800ded6:	42ab      	cmp	r3, r5
 800ded8:	d906      	bls.n	800dee8 <HAL_RCC_ClockConfig+0xc0>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800deda:	b2eb      	uxtb	r3, r5
 800dedc:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800dede:	6813      	ldr	r3, [r2, #0]
 800dee0:	f003 030f 	and.w	r3, r3, #15
 800dee4:	42ab      	cmp	r3, r5
 800dee6:	d1b3      	bne.n	800de50 <HAL_RCC_ClockConfig+0x28>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800dee8:	6823      	ldr	r3, [r4, #0]
 800deea:	075a      	lsls	r2, r3, #29
 800deec:	d506      	bpl.n	800defc <HAL_RCC_ClockConfig+0xd4>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800deee:	4919      	ldr	r1, [pc, #100]	; (800df54 <HAL_RCC_ClockConfig+0x12c>)
 800def0:	68e0      	ldr	r0, [r4, #12]
 800def2:	688a      	ldr	r2, [r1, #8]
 800def4:	f422 52e0 	bic.w	r2, r2, #7168	; 0x1c00
 800def8:	4302      	orrs	r2, r0
 800defa:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800defc:	071b      	lsls	r3, r3, #28
 800defe:	d507      	bpl.n	800df10 <HAL_RCC_ClockConfig+0xe8>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 800df00:	4a14      	ldr	r2, [pc, #80]	; (800df54 <HAL_RCC_ClockConfig+0x12c>)
 800df02:	6921      	ldr	r1, [r4, #16]
 800df04:	6893      	ldr	r3, [r2, #8]
 800df06:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 800df0a:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800df0e:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800df10:	f7ff ff56 	bl	800ddc0 <HAL_RCC_GetSysClockFreq>
 800df14:	4a0f      	ldr	r2, [pc, #60]	; (800df54 <HAL_RCC_ClockConfig+0x12c>)
 800df16:	4c10      	ldr	r4, [pc, #64]	; (800df58 <HAL_RCC_ClockConfig+0x130>)
 800df18:	6892      	ldr	r2, [r2, #8]
 800df1a:	4910      	ldr	r1, [pc, #64]	; (800df5c <HAL_RCC_ClockConfig+0x134>)
 800df1c:	f3c2 1203 	ubfx	r2, r2, #4, #4
 800df20:	4603      	mov	r3, r0
 800df22:	5ca2      	ldrb	r2, [r4, r2]
  HAL_InitTick (uwTickPrio);
 800df24:	480e      	ldr	r0, [pc, #56]	; (800df60 <HAL_RCC_ClockConfig+0x138>)
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800df26:	40d3      	lsrs	r3, r2
  HAL_InitTick (uwTickPrio);
 800df28:	6800      	ldr	r0, [r0, #0]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800df2a:	600b      	str	r3, [r1, #0]
  HAL_InitTick (uwTickPrio);
 800df2c:	f7f4 fc2c 	bl	8002788 <HAL_InitTick>
  return HAL_OK;
 800df30:	2000      	movs	r0, #0
}
 800df32:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800df36:	0198      	lsls	r0, r3, #6
 800df38:	d4b1      	bmi.n	800de9e <HAL_RCC_ClockConfig+0x76>
 800df3a:	e789      	b.n	800de50 <HAL_RCC_ClockConfig+0x28>
    return HAL_ERROR;
 800df3c:	2001      	movs	r0, #1
}
 800df3e:	4770      	bx	lr
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800df40:	4b04      	ldr	r3, [pc, #16]	; (800df54 <HAL_RCC_ClockConfig+0x12c>)
 800df42:	681b      	ldr	r3, [r3, #0]
 800df44:	039e      	lsls	r6, r3, #14
 800df46:	d4aa      	bmi.n	800de9e <HAL_RCC_ClockConfig+0x76>
 800df48:	e782      	b.n	800de50 <HAL_RCC_ClockConfig+0x28>
        return HAL_TIMEOUT;
 800df4a:	2003      	movs	r0, #3
 800df4c:	e781      	b.n	800de52 <HAL_RCC_ClockConfig+0x2a>
 800df4e:	bf00      	nop
 800df50:	40023c00 	.word	0x40023c00
 800df54:	40023800 	.word	0x40023800
 800df58:	08031414 	.word	0x08031414
 800df5c:	2000007c 	.word	0x2000007c
 800df60:	20000084 	.word	0x20000084

0800df64 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800df64:	4b04      	ldr	r3, [pc, #16]	; (800df78 <HAL_RCC_GetPCLK1Freq+0x14>)
  return SystemCoreClock;
 800df66:	4905      	ldr	r1, [pc, #20]	; (800df7c <HAL_RCC_GetPCLK1Freq+0x18>)
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800df68:	689b      	ldr	r3, [r3, #8]
 800df6a:	4a05      	ldr	r2, [pc, #20]	; (800df80 <HAL_RCC_GetPCLK1Freq+0x1c>)
 800df6c:	6808      	ldr	r0, [r1, #0]
 800df6e:	f3c3 2382 	ubfx	r3, r3, #10, #3
 800df72:	5cd3      	ldrb	r3, [r2, r3]
}
 800df74:	40d8      	lsrs	r0, r3
 800df76:	4770      	bx	lr
 800df78:	40023800 	.word	0x40023800
 800df7c:	2000007c 	.word	0x2000007c
 800df80:	08031424 	.word	0x08031424

0800df84 <HAL_RCC_GetClockConfig>:
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800df84:	4b0e      	ldr	r3, [pc, #56]	; (800dfc0 <HAL_RCC_GetClockConfig+0x3c>)
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 800df86:	220f      	movs	r2, #15
 800df88:	6002      	str	r2, [r0, #0]
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800df8a:	689a      	ldr	r2, [r3, #8]
 800df8c:	f002 0203 	and.w	r2, r2, #3
 800df90:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 800df92:	689a      	ldr	r2, [r3, #8]
 800df94:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 800df98:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 800df9a:	689a      	ldr	r2, [r3, #8]
 800df9c:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 800dfa0:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800dfa2:	689b      	ldr	r3, [r3, #8]
 800dfa4:	08db      	lsrs	r3, r3, #3
{
 800dfa6:	b410      	push	{r4}
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800dfa8:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800dfac:	4c05      	ldr	r4, [pc, #20]	; (800dfc4 <HAL_RCC_GetClockConfig+0x40>)
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800dfae:	6103      	str	r3, [r0, #16]
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800dfb0:	6823      	ldr	r3, [r4, #0]
}
 800dfb2:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800dfb6:	f003 030f 	and.w	r3, r3, #15
 800dfba:	600b      	str	r3, [r1, #0]
}
 800dfbc:	4770      	bx	lr
 800dfbe:	bf00      	nop
 800dfc0:	40023800 	.word	0x40023800
 800dfc4:	40023c00 	.word	0x40023c00

0800dfc8 <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 800dfc8:	b5f0      	push	{r4, r5, r6, r7, lr}
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 800dfca:	6803      	ldr	r3, [r0, #0]
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800dfcc:	f013 0f43 	tst.w	r3, #67	; 0x43
{
 800dfd0:	b083      	sub	sp, #12
 800dfd2:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800dfd4:	d111      	bne.n	800dffa <HAL_RCCEx_PeriphCLKConfig+0x32>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800dfd6:	f013 0f0c 	tst.w	r3, #12
 800dfda:	d16f      	bne.n	800e0bc <HAL_RCCEx_PeriphCLKConfig+0xf4>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800dfdc:	0698      	lsls	r0, r3, #26
 800dfde:	f100 80c2 	bmi.w	800e166 <HAL_RCCEx_PeriphCLKConfig+0x19e>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800dfe2:	f013 0310 	ands.w	r3, r3, #16
 800dfe6:	f000 80bb 	beq.w	800e160 <HAL_RCCEx_PeriphCLKConfig+0x198>
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 800dfea:	4b89      	ldr	r3, [pc, #548]	; (800e210 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 800dfec:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
 800dff0:	f8c3 21e0 	str.w	r2, [r3, #480]	; 0x1e0
  }
  return HAL_OK;
 800dff4:	2000      	movs	r0, #0
}
 800dff6:	b003      	add	sp, #12
 800dff8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLI2S_DISABLE();
 800dffa:	4b86      	ldr	r3, [pc, #536]	; (800e214 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800dffc:	4e86      	ldr	r6, [pc, #536]	; (800e218 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLI2S_DISABLE();
 800dffe:	2200      	movs	r2, #0
 800e000:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800e002:	f7fd fadf 	bl	800b5c4 <HAL_GetTick>
 800e006:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800e008:	e004      	b.n	800e014 <HAL_RCCEx_PeriphCLKConfig+0x4c>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800e00a:	f7fd fadb 	bl	800b5c4 <HAL_GetTick>
 800e00e:	1b43      	subs	r3, r0, r5
 800e010:	2b02      	cmp	r3, #2
 800e012:	d850      	bhi.n	800e0b6 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800e014:	6833      	ldr	r3, [r6, #0]
 800e016:	0118      	lsls	r0, r3, #4
 800e018:	d4f7      	bmi.n	800e00a <HAL_RCCEx_PeriphCLKConfig+0x42>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 800e01a:	6823      	ldr	r3, [r4, #0]
 800e01c:	07d9      	lsls	r1, r3, #31
 800e01e:	d506      	bpl.n	800e02e <HAL_RCCEx_PeriphCLKConfig+0x66>
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 800e020:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 800e024:	0712      	lsls	r2, r2, #28
 800e026:	ea42 1281 	orr.w	r2, r2, r1, lsl #6
 800e02a:	f8c6 2084 	str.w	r2, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 800e02e:	079a      	lsls	r2, r3, #30
 800e030:	d515      	bpl.n	800e05e <HAL_RCCEx_PeriphCLKConfig+0x96>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800e032:	4979      	ldr	r1, [pc, #484]	; (800e218 <HAL_RCCEx_PeriphCLKConfig+0x250>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800e034:	68e2      	ldr	r2, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800e036:	f8d1 0084 	ldr.w	r0, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800e03a:	6865      	ldr	r5, [r4, #4]
 800e03c:	0612      	lsls	r2, r2, #24
 800e03e:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 800e042:	ea42 1285 	orr.w	r2, r2, r5, lsl #6
 800e046:	4302      	orrs	r2, r0
 800e048:	f8c1 2084 	str.w	r2, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 800e04c:	f8d1 008c 	ldr.w	r0, [r1, #140]	; 0x8c
 800e050:	69e2      	ldr	r2, [r4, #28]
 800e052:	f020 001f 	bic.w	r0, r0, #31
 800e056:	3a01      	subs	r2, #1
 800e058:	4302      	orrs	r2, r0
 800e05a:	f8c1 208c 	str.w	r2, [r1, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 800e05e:	065b      	lsls	r3, r3, #25
 800e060:	d509      	bpl.n	800e076 <HAL_RCCEx_PeriphCLKConfig+0xae>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 800e062:	1d20      	adds	r0, r4, #4
 800e064:	c80b      	ldmia	r0, {r0, r1, r3}
 800e066:	061b      	lsls	r3, r3, #24
 800e068:	4a6b      	ldr	r2, [pc, #428]	; (800e218 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800e06a:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800e06e:	ea43 7301 	orr.w	r3, r3, r1, lsl #28
 800e072:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 800e076:	4b67      	ldr	r3, [pc, #412]	; (800e214 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800e078:	4e67      	ldr	r6, [pc, #412]	; (800e218 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLI2S_ENABLE();
 800e07a:	2201      	movs	r2, #1
 800e07c:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800e07e:	f7fd faa1 	bl	800b5c4 <HAL_GetTick>
 800e082:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800e084:	e004      	b.n	800e090 <HAL_RCCEx_PeriphCLKConfig+0xc8>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800e086:	f7fd fa9d 	bl	800b5c4 <HAL_GetTick>
 800e08a:	1b40      	subs	r0, r0, r5
 800e08c:	2802      	cmp	r0, #2
 800e08e:	d812      	bhi.n	800e0b6 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800e090:	6833      	ldr	r3, [r6, #0]
 800e092:	011f      	lsls	r7, r3, #4
 800e094:	d5f7      	bpl.n	800e086 <HAL_RCCEx_PeriphCLKConfig+0xbe>
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800e096:	6823      	ldr	r3, [r4, #0]
 800e098:	e79d      	b.n	800dfd6 <HAL_RCCEx_PeriphCLKConfig+0xe>
        tickstart = HAL_GetTick();
 800e09a:	f7fd fa93 	bl	800b5c4 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800e09e:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 800e0a2:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800e0a4:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800e0a6:	079b      	lsls	r3, r3, #30
 800e0a8:	f100 80a5 	bmi.w	800e1f6 <HAL_RCCEx_PeriphCLKConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800e0ac:	f7fd fa8a 	bl	800b5c4 <HAL_GetTick>
 800e0b0:	1b80      	subs	r0, r0, r6
 800e0b2:	42b8      	cmp	r0, r7
 800e0b4:	d9f6      	bls.n	800e0a4 <HAL_RCCEx_PeriphCLKConfig+0xdc>
        return HAL_TIMEOUT;
 800e0b6:	2003      	movs	r0, #3
}
 800e0b8:	b003      	add	sp, #12
 800e0ba:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLSAI_DISABLE();
 800e0bc:	4b55      	ldr	r3, [pc, #340]	; (800e214 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800e0be:	4e56      	ldr	r6, [pc, #344]	; (800e218 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLSAI_DISABLE();
 800e0c0:	2200      	movs	r2, #0
 800e0c2:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800e0c4:	f7fd fa7e 	bl	800b5c4 <HAL_GetTick>
 800e0c8:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800e0ca:	e004      	b.n	800e0d6 <HAL_RCCEx_PeriphCLKConfig+0x10e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800e0cc:	f7fd fa7a 	bl	800b5c4 <HAL_GetTick>
 800e0d0:	1b43      	subs	r3, r0, r5
 800e0d2:	2b02      	cmp	r3, #2
 800e0d4:	d8ef      	bhi.n	800e0b6 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800e0d6:	6833      	ldr	r3, [r6, #0]
 800e0d8:	0098      	lsls	r0, r3, #2
 800e0da:	d4f7      	bmi.n	800e0cc <HAL_RCCEx_PeriphCLKConfig+0x104>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 800e0dc:	6822      	ldr	r2, [r4, #0]
 800e0de:	0751      	lsls	r1, r2, #29
 800e0e0:	d515      	bpl.n	800e10e <HAL_RCCEx_PeriphCLKConfig+0x146>
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800e0e2:	6963      	ldr	r3, [r4, #20]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800e0e4:	f8d6 1088 	ldr.w	r1, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800e0e8:	6920      	ldr	r0, [r4, #16]
 800e0ea:	061b      	lsls	r3, r3, #24
 800e0ec:	f001 41e0 	and.w	r1, r1, #1879048192	; 0x70000000
 800e0f0:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800e0f4:	430b      	orrs	r3, r1
 800e0f6:	f8c6 3088 	str.w	r3, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 800e0fa:	f8d6 308c 	ldr.w	r3, [r6, #140]	; 0x8c
 800e0fe:	6a21      	ldr	r1, [r4, #32]
 800e100:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 800e104:	3901      	subs	r1, #1
 800e106:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800e10a:	f8c6 308c 	str.w	r3, [r6, #140]	; 0x8c
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 800e10e:	0713      	lsls	r3, r2, #28
 800e110:	d514      	bpl.n	800e13c <HAL_RCCEx_PeriphCLKConfig+0x174>
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800e112:	4a41      	ldr	r2, [pc, #260]	; (800e218 <HAL_RCCEx_PeriphCLKConfig+0x250>)
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800e114:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800e116:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800e11a:	6920      	ldr	r0, [r4, #16]
 800e11c:	071b      	lsls	r3, r3, #28
 800e11e:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 800e122:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800e126:	430b      	orrs	r3, r1
 800e128:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 800e12c:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 800e130:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800e132:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800e136:	430b      	orrs	r3, r1
 800e138:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    __HAL_RCC_PLLSAI_ENABLE();
 800e13c:	4b35      	ldr	r3, [pc, #212]	; (800e214 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800e13e:	4e36      	ldr	r6, [pc, #216]	; (800e218 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLSAI_ENABLE();
 800e140:	2201      	movs	r2, #1
 800e142:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800e144:	f7fd fa3e 	bl	800b5c4 <HAL_GetTick>
 800e148:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800e14a:	e004      	b.n	800e156 <HAL_RCCEx_PeriphCLKConfig+0x18e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800e14c:	f7fd fa3a 	bl	800b5c4 <HAL_GetTick>
 800e150:	1b40      	subs	r0, r0, r5
 800e152:	2802      	cmp	r0, #2
 800e154:	d8af      	bhi.n	800e0b6 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800e156:	6833      	ldr	r3, [r6, #0]
 800e158:	009f      	lsls	r7, r3, #2
 800e15a:	d5f7      	bpl.n	800e14c <HAL_RCCEx_PeriphCLKConfig+0x184>
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800e15c:	6823      	ldr	r3, [r4, #0]
 800e15e:	e73d      	b.n	800dfdc <HAL_RCCEx_PeriphCLKConfig+0x14>
  return HAL_OK;
 800e160:	4618      	mov	r0, r3
}
 800e162:	b003      	add	sp, #12
 800e164:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PWR_CLK_ENABLE();
 800e166:	4b2c      	ldr	r3, [pc, #176]	; (800e218 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    PWR->CR |= PWR_CR_DBP;
 800e168:	4d2c      	ldr	r5, [pc, #176]	; (800e21c <HAL_RCCEx_PeriphCLKConfig+0x254>)
    __HAL_RCC_PWR_CLK_ENABLE();
 800e16a:	2200      	movs	r2, #0
 800e16c:	9201      	str	r2, [sp, #4]
 800e16e:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800e170:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800e174:	641a      	str	r2, [r3, #64]	; 0x40
 800e176:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800e178:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800e17c:	9301      	str	r3, [sp, #4]
 800e17e:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 800e180:	682b      	ldr	r3, [r5, #0]
 800e182:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800e186:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 800e188:	f7fd fa1c 	bl	800b5c4 <HAL_GetTick>
 800e18c:	4606      	mov	r6, r0
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800e18e:	e004      	b.n	800e19a <HAL_RCCEx_PeriphCLKConfig+0x1d2>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 800e190:	f7fd fa18 	bl	800b5c4 <HAL_GetTick>
 800e194:	1b83      	subs	r3, r0, r6
 800e196:	2b02      	cmp	r3, #2
 800e198:	d88d      	bhi.n	800e0b6 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800e19a:	682b      	ldr	r3, [r5, #0]
 800e19c:	05d9      	lsls	r1, r3, #23
 800e19e:	d5f7      	bpl.n	800e190 <HAL_RCCEx_PeriphCLKConfig+0x1c8>
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800e1a0:	4d1d      	ldr	r5, [pc, #116]	; (800e218 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800e1a2:	6aa3      	ldr	r3, [r4, #40]	; 0x28
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800e1a4:	6f2a      	ldr	r2, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800e1a6:	f412 7240 	ands.w	r2, r2, #768	; 0x300
 800e1aa:	d111      	bne.n	800e1d0 <HAL_RCCEx_PeriphCLKConfig+0x208>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800e1ac:	f403 7240 	and.w	r2, r3, #768	; 0x300
 800e1b0:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 800e1b4:	d021      	beq.n	800e1fa <HAL_RCCEx_PeriphCLKConfig+0x232>
 800e1b6:	4918      	ldr	r1, [pc, #96]	; (800e218 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800e1b8:	688a      	ldr	r2, [r1, #8]
 800e1ba:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800e1be:	608a      	str	r2, [r1, #8]
 800e1c0:	4a15      	ldr	r2, [pc, #84]	; (800e218 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800e1c2:	6f11      	ldr	r1, [r2, #112]	; 0x70
 800e1c4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800e1c8:	430b      	orrs	r3, r1
 800e1ca:	6713      	str	r3, [r2, #112]	; 0x70
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800e1cc:	6823      	ldr	r3, [r4, #0]
 800e1ce:	e708      	b.n	800dfe2 <HAL_RCCEx_PeriphCLKConfig+0x1a>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800e1d0:	f403 7140 	and.w	r1, r3, #768	; 0x300
 800e1d4:	4291      	cmp	r1, r2
 800e1d6:	d0eb      	beq.n	800e1b0 <HAL_RCCEx_PeriphCLKConfig+0x1e8>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800e1d8:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 800e1da:	4a0e      	ldr	r2, [pc, #56]	; (800e214 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 800e1dc:	2101      	movs	r1, #1
 800e1de:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800e1e2:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 800e1e6:	2100      	movs	r1, #0
 800e1e8:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      RCC->BDCR = tmpreg1;
 800e1ec:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 800e1ee:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800e1f0:	07da      	lsls	r2, r3, #31
 800e1f2:	f53f af52 	bmi.w	800e09a <HAL_RCCEx_PeriphCLKConfig+0xd2>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800e1f6:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800e1f8:	e7d8      	b.n	800e1ac <HAL_RCCEx_PeriphCLKConfig+0x1e4>
 800e1fa:	4807      	ldr	r0, [pc, #28]	; (800e218 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800e1fc:	6882      	ldr	r2, [r0, #8]
 800e1fe:	f023 4170 	bic.w	r1, r3, #4026531840	; 0xf0000000
 800e202:	f421 7140 	bic.w	r1, r1, #768	; 0x300
 800e206:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800e20a:	430a      	orrs	r2, r1
 800e20c:	6082      	str	r2, [r0, #8]
 800e20e:	e7d7      	b.n	800e1c0 <HAL_RCCEx_PeriphCLKConfig+0x1f8>
 800e210:	42471000 	.word	0x42471000
 800e214:	42470000 	.word	0x42470000
 800e218:	40023800 	.word	0x40023800
 800e21c:	40007000 	.word	0x40007000

0800e220 <HAL_SDRAM_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 800e220:	b1f0      	cbz	r0, 800e260 <HAL_SDRAM_Init+0x40>
{
 800e222:	b538      	push	{r3, r4, r5, lr}
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 800e224:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800e228:	460d      	mov	r5, r1
 800e22a:	4604      	mov	r4, r0
 800e22c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800e230:	b18b      	cbz	r3, 800e256 <HAL_SDRAM_Init+0x36>

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800e232:	4621      	mov	r1, r4
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800e234:	2302      	movs	r3, #2
 800e236:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800e23a:	f851 0b04 	ldr.w	r0, [r1], #4
 800e23e:	f001 fa2d 	bl	800f69c <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 800e242:	e9d4 0200 	ldrd	r0, r2, [r4]
 800e246:	4629      	mov	r1, r5
 800e248:	f001 fa66 	bl	800f718 <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 800e24c:	2301      	movs	r3, #1
 800e24e:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c

  return HAL_OK;
 800e252:	2000      	movs	r0, #0
}
 800e254:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->Lock = HAL_UNLOCKED;
 800e256:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d
    HAL_SDRAM_MspInit(hsdram);
 800e25a:	f7f4 fa2d 	bl	80026b8 <HAL_SDRAM_MspInit>
 800e25e:	e7e8      	b.n	800e232 <HAL_SDRAM_Init+0x12>
    return HAL_ERROR;
 800e260:	2001      	movs	r0, #1
}
 800e262:	4770      	bx	lr

0800e264 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 800e264:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800e266:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 800e26a:	2b02      	cmp	r3, #2
{
 800e26c:	4605      	mov	r5, r0
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800e26e:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 800e270:	d004      	beq.n	800e27c <HAL_SDRAM_SendCommand+0x18>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 800e272:	f000 04fb 	and.w	r4, r0, #251	; 0xfb
 800e276:	2c01      	cmp	r4, #1
 800e278:	d001      	beq.n	800e27e <HAL_SDRAM_SendCommand+0x1a>
      hsdram->State = HAL_SDRAM_STATE_READY;
    }
  }
  else
  {
    return HAL_ERROR;
 800e27a:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800e27c:	bd70      	pop	{r4, r5, r6, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800e27e:	460e      	mov	r6, r1
 800e280:	2302      	movs	r3, #2
 800e282:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 800e286:	6828      	ldr	r0, [r5, #0]
 800e288:	f001 fa92 	bl	800f7b0 <FMC_SDRAM_SendCommand>
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 800e28c:	6833      	ldr	r3, [r6, #0]
 800e28e:	2b02      	cmp	r3, #2
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 800e290:	bf06      	itte	eq
 800e292:	2305      	moveq	r3, #5
 800e294:	f885 302c 	strbeq.w	r3, [r5, #44]	; 0x2c
      hsdram->State = HAL_SDRAM_STATE_READY;
 800e298:	f885 402c 	strbne.w	r4, [r5, #44]	; 0x2c
  return HAL_OK;
 800e29c:	2000      	movs	r0, #0
}
 800e29e:	bd70      	pop	{r4, r5, r6, pc}

0800e2a0 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 800e2a0:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800e2a2:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800e2a6:	2b02      	cmp	r3, #2
{
 800e2a8:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800e2aa:	b2d8      	uxtb	r0, r3
 800e2ac:	d005      	beq.n	800e2ba <HAL_SDRAM_ProgramRefreshRate+0x1a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 800e2ae:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800e2b2:	2b01      	cmp	r3, #1
 800e2b4:	b2dd      	uxtb	r5, r3
 800e2b6:	d001      	beq.n	800e2bc <HAL_SDRAM_ProgramRefreshRate+0x1c>
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
  }
  else
  {
    return HAL_ERROR;
 800e2b8:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800e2ba:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800e2bc:	2302      	movs	r3, #2
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800e2be:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800e2c0:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800e2c4:	f001 fa9e 	bl	800f804 <FMC_SDRAM_ProgramRefreshRate>
    hsdram->State = HAL_SDRAM_STATE_READY;
 800e2c8:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
  return HAL_OK;
 800e2cc:	2000      	movs	r0, #0
}
 800e2ce:	bd38      	pop	{r3, r4, r5, pc}

0800e2d0 <SPI_WaitFlagStateUntilTimeout.constprop.0>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 800e2d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e2d4:	b082      	sub	sp, #8
 800e2d6:	461d      	mov	r5, r3
 800e2d8:	4616      	mov	r6, r2
 800e2da:	460c      	mov	r4, r1
 800e2dc:	4607      	mov	r7, r0
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 800e2de:	f7fd f971 	bl	800b5c4 <HAL_GetTick>
 800e2e2:	4435      	add	r5, r6
 800e2e4:	1a2d      	subs	r5, r5, r0
  tmp_tickstart = HAL_GetTick();
 800e2e6:	f7fd f96d 	bl	800b5c4 <HAL_GetTick>

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800e2ea:	4b27      	ldr	r3, [pc, #156]	; (800e388 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xb8>)
 800e2ec:	681b      	ldr	r3, [r3, #0]
 800e2ee:	f3c3 33cb 	ubfx	r3, r3, #15, #12
 800e2f2:	fb05 f303 	mul.w	r3, r5, r3
  tmp_tickstart = HAL_GetTick();
 800e2f6:	4680      	mov	r8, r0
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800e2f8:	9301      	str	r3, [sp, #4]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800e2fa:	1c73      	adds	r3, r6, #1
 800e2fc:	6839      	ldr	r1, [r7, #0]
 800e2fe:	d107      	bne.n	800e310 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x40>
 800e300:	688b      	ldr	r3, [r1, #8]
 800e302:	ea34 0303 	bics.w	r3, r4, r3
 800e306:	d0fb      	beq.n	800e300 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x30>
      }
      count--;
    }
  }

  return HAL_OK;
 800e308:	2000      	movs	r0, #0
}
 800e30a:	b002      	add	sp, #8
 800e30c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800e310:	688b      	ldr	r3, [r1, #8]
 800e312:	ea34 0303 	bics.w	r3, r4, r3
 800e316:	d1f7      	bne.n	800e308 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x38>
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 800e318:	f7fd f954 	bl	800b5c4 <HAL_GetTick>
 800e31c:	eba0 0008 	sub.w	r0, r0, r8
 800e320:	42a8      	cmp	r0, r5
 800e322:	d208      	bcs.n	800e336 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x66>
      if (count == 0U)
 800e324:	9b01      	ldr	r3, [sp, #4]
        tmp_timeout = 0U;
 800e326:	2b00      	cmp	r3, #0
      count--;
 800e328:	9b01      	ldr	r3, [sp, #4]
 800e32a:	f103 33ff 	add.w	r3, r3, #4294967295
        tmp_timeout = 0U;
 800e32e:	bf08      	it	eq
 800e330:	2500      	moveq	r5, #0
      count--;
 800e332:	9301      	str	r3, [sp, #4]
 800e334:	e7e1      	b.n	800e2fa <SPI_WaitFlagStateUntilTimeout.constprop.0+0x2a>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800e336:	e9d7 3100 	ldrd	r3, r1, [r7]
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800e33a:	685a      	ldr	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800e33c:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800e340:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 800e344:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800e346:	d013      	beq.n	800e370 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xa0>
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 800e348:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800e34a:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 800e34e:	d107      	bne.n	800e360 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x90>
          SPI_RESET_CRC(hspi);
 800e350:	681a      	ldr	r2, [r3, #0]
 800e352:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800e356:	601a      	str	r2, [r3, #0]
 800e358:	681a      	ldr	r2, [r3, #0]
 800e35a:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800e35e:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 800e360:	2201      	movs	r2, #1
        __HAL_UNLOCK(hspi);
 800e362:	2300      	movs	r3, #0
        hspi->State = HAL_SPI_STATE_READY;
 800e364:	f887 2051 	strb.w	r2, [r7, #81]	; 0x51
        __HAL_UNLOCK(hspi);
 800e368:	f887 3050 	strb.w	r3, [r7, #80]	; 0x50
 800e36c:	2003      	movs	r0, #3
 800e36e:	e7cc      	b.n	800e30a <SPI_WaitFlagStateUntilTimeout.constprop.0+0x3a>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800e370:	68ba      	ldr	r2, [r7, #8]
 800e372:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800e376:	d002      	beq.n	800e37e <SPI_WaitFlagStateUntilTimeout.constprop.0+0xae>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800e378:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800e37c:	d1e4      	bne.n	800e348 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x78>
          __HAL_SPI_DISABLE(hspi);
 800e37e:	681a      	ldr	r2, [r3, #0]
 800e380:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800e384:	601a      	str	r2, [r3, #0]
 800e386:	e7df      	b.n	800e348 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x78>
 800e388:	2000007c 	.word	0x2000007c

0800e38c <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 800e38c:	b538      	push	{r3, r4, r5, lr}
 800e38e:	4613      	mov	r3, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800e390:	6842      	ldr	r2, [r0, #4]
 800e392:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 800e396:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800e398:	d006      	beq.n	800e3a8 <SPI_EndRxTransaction+0x1c>
    }
  }
  else
  {
    /* Wait the RXNE reset */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800e39a:	460a      	mov	r2, r1
 800e39c:	2101      	movs	r1, #1
 800e39e:	f7ff ff97 	bl	800e2d0 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800e3a2:	b978      	cbnz	r0, 800e3c4 <SPI_EndRxTransaction+0x38>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 800e3a4:	2000      	movs	r0, #0
}
 800e3a6:	bd38      	pop	{r3, r4, r5, pc}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800e3a8:	6882      	ldr	r2, [r0, #8]
 800e3aa:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800e3ae:	d01c      	beq.n	800e3ea <SPI_EndRxTransaction+0x5e>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800e3b0:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800e3b4:	d00c      	beq.n	800e3d0 <SPI_EndRxTransaction+0x44>
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800e3b6:	460a      	mov	r2, r1
 800e3b8:	4620      	mov	r0, r4
 800e3ba:	2180      	movs	r1, #128	; 0x80
 800e3bc:	f7ff ff88 	bl	800e2d0 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800e3c0:	2800      	cmp	r0, #0
 800e3c2:	d0ef      	beq.n	800e3a4 <SPI_EndRxTransaction+0x18>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800e3c4:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800e3c6:	f043 0320 	orr.w	r3, r3, #32
      return HAL_TIMEOUT;
 800e3ca:	2003      	movs	r0, #3
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800e3cc:	6563      	str	r3, [r4, #84]	; 0x54
}
 800e3ce:	bd38      	pop	{r3, r4, r5, pc}
    __HAL_SPI_DISABLE(hspi);
 800e3d0:	6805      	ldr	r5, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800e3d2:	460a      	mov	r2, r1
    __HAL_SPI_DISABLE(hspi);
 800e3d4:	6829      	ldr	r1, [r5, #0]
 800e3d6:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800e3da:	6029      	str	r1, [r5, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800e3dc:	2101      	movs	r1, #1
 800e3de:	f7ff ff77 	bl	800e2d0 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800e3e2:	2800      	cmp	r0, #0
 800e3e4:	d1ee      	bne.n	800e3c4 <SPI_EndRxTransaction+0x38>
  return HAL_OK;
 800e3e6:	2000      	movs	r0, #0
 800e3e8:	e7dd      	b.n	800e3a6 <SPI_EndRxTransaction+0x1a>
    __HAL_SPI_DISABLE(hspi);
 800e3ea:	6800      	ldr	r0, [r0, #0]
 800e3ec:	6802      	ldr	r2, [r0, #0]
 800e3ee:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800e3f2:	6002      	str	r2, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800e3f4:	460a      	mov	r2, r1
 800e3f6:	4620      	mov	r0, r4
 800e3f8:	2180      	movs	r1, #128	; 0x80
 800e3fa:	f7ff ff69 	bl	800e2d0 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800e3fe:	2800      	cmp	r0, #0
 800e400:	d0d0      	beq.n	800e3a4 <SPI_EndRxTransaction+0x18>
 800e402:	e7df      	b.n	800e3c4 <SPI_EndRxTransaction+0x38>

0800e404 <HAL_SPI_Init>:
  if (hspi == NULL)
 800e404:	2800      	cmp	r0, #0
 800e406:	d05c      	beq.n	800e4c2 <HAL_SPI_Init+0xbe>
{
 800e408:	b570      	push	{r4, r5, r6, lr}
 800e40a:	4604      	mov	r4, r0
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 800e40c:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800e40e:	2800      	cmp	r0, #0
 800e410:	d047      	beq.n	800e4a2 <HAL_SPI_Init+0x9e>
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 800e412:	2300      	movs	r3, #0
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 800e414:	e9c4 3304 	strd	r3, r3, [r4, #16]
  if (hspi->State == HAL_SPI_STATE_RESET)
 800e418:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800e41c:	2200      	movs	r2, #0
 800e41e:	62a2      	str	r2, [r4, #40]	; 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 800e420:	f003 01ff 	and.w	r1, r3, #255	; 0xff
 800e424:	2b00      	cmp	r3, #0
 800e426:	d042      	beq.n	800e4ae <HAL_SPI_Init+0xaa>
 800e428:	4694      	mov	ip, r2
  __HAL_SPI_DISABLE(hspi);
 800e42a:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800e42c:	68a5      	ldr	r5, [r4, #8]
 800e42e:	69a2      	ldr	r2, [r4, #24]
 800e430:	6a26      	ldr	r6, [r4, #32]
  hspi->State = HAL_SPI_STATE_BUSY;
 800e432:	2302      	movs	r3, #2
 800e434:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_SPI_DISABLE(hspi);
 800e438:	680b      	ldr	r3, [r1, #0]
 800e43a:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800e43e:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800e440:	6863      	ldr	r3, [r4, #4]
 800e442:	f405 4504 	and.w	r5, r5, #33792	; 0x8400
 800e446:	f403 7382 	and.w	r3, r3, #260	; 0x104
 800e44a:	432b      	orrs	r3, r5
 800e44c:	68e5      	ldr	r5, [r4, #12]
 800e44e:	f405 6500 	and.w	r5, r5, #2048	; 0x800
 800e452:	432b      	orrs	r3, r5
 800e454:	6925      	ldr	r5, [r4, #16]
 800e456:	f005 0502 	and.w	r5, r5, #2
 800e45a:	432b      	orrs	r3, r5
 800e45c:	6965      	ldr	r5, [r4, #20]
 800e45e:	f005 0501 	and.w	r5, r5, #1
 800e462:	432b      	orrs	r3, r5
 800e464:	69e5      	ldr	r5, [r4, #28]
 800e466:	f006 0e80 	and.w	lr, r6, #128	; 0x80
 800e46a:	f402 7600 	and.w	r6, r2, #512	; 0x200
 800e46e:	f005 0538 	and.w	r5, r5, #56	; 0x38
 800e472:	4333      	orrs	r3, r6
 800e474:	432b      	orrs	r3, r5
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800e476:	0c12      	lsrs	r2, r2, #16
 800e478:	f000 0010 	and.w	r0, r0, #16
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800e47c:	ea43 030e 	orr.w	r3, r3, lr
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800e480:	f002 0204 	and.w	r2, r2, #4
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800e484:	ea43 030c 	orr.w	r3, r3, ip
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800e488:	4302      	orrs	r2, r0
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800e48a:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800e48c:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800e48e:	69cb      	ldr	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800e490:	2000      	movs	r0, #0
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800e492:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  hspi->State     = HAL_SPI_STATE_READY;
 800e496:	2201      	movs	r2, #1
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800e498:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800e49a:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 800e49c:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
}
 800e4a0:	bd70      	pop	{r4, r5, r6, pc}
    if (hspi->Init.Mode == SPI_MODE_MASTER)
 800e4a2:	6863      	ldr	r3, [r4, #4]
 800e4a4:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800e4a8:	d0b6      	beq.n	800e418 <HAL_SPI_Init+0x14>
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 800e4aa:	61e0      	str	r0, [r4, #28]
 800e4ac:	e7b4      	b.n	800e418 <HAL_SPI_Init+0x14>
    HAL_SPI_MspInit(hspi);
 800e4ae:	4620      	mov	r0, r4
    hspi->Lock = HAL_UNLOCKED;
 800e4b0:	f884 1050 	strb.w	r1, [r4, #80]	; 0x50
    HAL_SPI_MspInit(hspi);
 800e4b4:	f7f4 f81c 	bl	80024f0 <HAL_SPI_MspInit>
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800e4b8:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800e4bc:	f403 5c00 	and.w	ip, r3, #8192	; 0x2000
 800e4c0:	e7b3      	b.n	800e42a <HAL_SPI_Init+0x26>
    return HAL_ERROR;
 800e4c2:	2001      	movs	r0, #1
}
 800e4c4:	4770      	bx	lr
 800e4c6:	bf00      	nop

0800e4c8 <HAL_SPI_Transmit>:
{
 800e4c8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e4cc:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800e4ce:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800e4d2:	2801      	cmp	r0, #1
{
 800e4d4:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800e4d6:	f000 8085 	beq.w	800e5e4 <HAL_SPI_Transmit+0x11c>
 800e4da:	461d      	mov	r5, r3
 800e4dc:	2301      	movs	r3, #1
 800e4de:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800e4e2:	4688      	mov	r8, r1
 800e4e4:	4617      	mov	r7, r2
 800e4e6:	f7fd f86d 	bl	800b5c4 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800e4ea:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 800e4ee:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 800e4f0:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800e4f2:	b2d8      	uxtb	r0, r3
 800e4f4:	d009      	beq.n	800e50a <HAL_SPI_Transmit+0x42>
    errorcode = HAL_BUSY;
 800e4f6:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800e4f8:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800e4fa:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800e4fc:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800e500:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800e504:	b002      	add	sp, #8
 800e506:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800e50a:	f1b8 0f00 	cmp.w	r8, #0
 800e50e:	d0f3      	beq.n	800e4f8 <HAL_SPI_Transmit+0x30>
 800e510:	2f00      	cmp	r7, #0
 800e512:	d0f1      	beq.n	800e4f8 <HAL_SPI_Transmit+0x30>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800e514:	68a2      	ldr	r2, [r4, #8]
    __HAL_SPI_DISABLE(hspi);
 800e516:	6820      	ldr	r0, [r4, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 800e518:	f8c4 8030 	str.w	r8, [r4, #48]	; 0x30
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800e51c:	2300      	movs	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800e51e:	2103      	movs	r1, #3
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800e520:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800e524:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
  hspi->RxISR       = NULL;
 800e528:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800e52c:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->TxXferSize  = Size;
 800e52e:	86a7      	strh	r7, [r4, #52]	; 0x34
  hspi->TxXferCount = Size;
 800e530:	86e7      	strh	r7, [r4, #54]	; 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 800e532:	63a3      	str	r3, [r4, #56]	; 0x38
  hspi->RxXferSize  = 0U;
 800e534:	87a3      	strh	r3, [r4, #60]	; 0x3c
  hspi->RxXferCount = 0U;
 800e536:	87e3      	strh	r3, [r4, #62]	; 0x3e
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800e538:	f000 8085 	beq.w	800e646 <HAL_SPI_Transmit+0x17e>
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800e53c:	6803      	ldr	r3, [r0, #0]
 800e53e:	065b      	lsls	r3, r3, #25
    __HAL_SPI_DISABLE(hspi);
 800e540:	4602      	mov	r2, r0
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800e542:	d403      	bmi.n	800e54c <HAL_SPI_Transmit+0x84>
    __HAL_SPI_ENABLE(hspi);
 800e544:	6803      	ldr	r3, [r0, #0]
 800e546:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800e54a:	6003      	str	r3, [r0, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800e54c:	68e3      	ldr	r3, [r4, #12]
 800e54e:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800e552:	d04b      	beq.n	800e5ec <HAL_SPI_Transmit+0x124>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800e554:	6863      	ldr	r3, [r4, #4]
 800e556:	2b00      	cmp	r3, #0
 800e558:	f000 8097 	beq.w	800e68a <HAL_SPI_Transmit+0x1c2>
 800e55c:	2f01      	cmp	r7, #1
 800e55e:	f000 8094 	beq.w	800e68a <HAL_SPI_Transmit+0x1c2>
    while (hspi->TxXferCount > 0U)
 800e562:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e564:	b29b      	uxth	r3, r3
 800e566:	b1ab      	cbz	r3, 800e594 <HAL_SPI_Transmit+0xcc>
 800e568:	1c68      	adds	r0, r5, #1
 800e56a:	f040 8083 	bne.w	800e674 <HAL_SPI_Transmit+0x1ac>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800e56e:	6823      	ldr	r3, [r4, #0]
 800e570:	689a      	ldr	r2, [r3, #8]
 800e572:	0791      	lsls	r1, r2, #30
 800e574:	f140 8094 	bpl.w	800e6a0 <HAL_SPI_Transmit+0x1d8>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800e578:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800e57a:	7812      	ldrb	r2, [r2, #0]
 800e57c:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800e57e:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800e580:	6b23      	ldr	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800e582:	3901      	subs	r1, #1
 800e584:	b289      	uxth	r1, r1
 800e586:	86e1      	strh	r1, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800e588:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800e58a:	3301      	adds	r3, #1
    while (hspi->TxXferCount > 0U)
 800e58c:	b289      	uxth	r1, r1
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800e58e:	6323      	str	r3, [r4, #48]	; 0x30
    while (hspi->TxXferCount > 0U)
 800e590:	2900      	cmp	r1, #0
 800e592:	d1ec      	bne.n	800e56e <HAL_SPI_Transmit+0xa6>
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800e594:	6861      	ldr	r1, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800e596:	4b5b      	ldr	r3, [pc, #364]	; (800e704 <HAL_SPI_Transmit+0x23c>)
 800e598:	4a5b      	ldr	r2, [pc, #364]	; (800e708 <HAL_SPI_Transmit+0x240>)
 800e59a:	681b      	ldr	r3, [r3, #0]
 800e59c:	fba2 2303 	umull	r2, r3, r2, r3
 800e5a0:	0d5b      	lsrs	r3, r3, #21
 800e5a2:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800e5a6:	fb02 f303 	mul.w	r3, r2, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800e5aa:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800e5ae:	9301      	str	r3, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800e5b0:	d107      	bne.n	800e5c2 <HAL_SPI_Transmit+0xfa>
 800e5b2:	e098      	b.n	800e6e6 <HAL_SPI_Transmit+0x21e>
    {
      if (count == 0U)
      {
        break;
      }
      count--;
 800e5b4:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800e5b6:	6822      	ldr	r2, [r4, #0]
      count--;
 800e5b8:	3b01      	subs	r3, #1
 800e5ba:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800e5bc:	6893      	ldr	r3, [r2, #8]
 800e5be:	061b      	lsls	r3, r3, #24
 800e5c0:	d502      	bpl.n	800e5c8 <HAL_SPI_Transmit+0x100>
      if (count == 0U)
 800e5c2:	9b01      	ldr	r3, [sp, #4]
 800e5c4:	2b00      	cmp	r3, #0
 800e5c6:	d1f5      	bne.n	800e5b4 <HAL_SPI_Transmit+0xec>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800e5c8:	68a3      	ldr	r3, [r4, #8]
 800e5ca:	b933      	cbnz	r3, 800e5da <HAL_SPI_Transmit+0x112>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800e5cc:	6822      	ldr	r2, [r4, #0]
 800e5ce:	9300      	str	r3, [sp, #0]
 800e5d0:	68d3      	ldr	r3, [r2, #12]
 800e5d2:	9300      	str	r3, [sp, #0]
 800e5d4:	6893      	ldr	r3, [r2, #8]
 800e5d6:	9300      	str	r3, [sp, #0]
 800e5d8:	9b00      	ldr	r3, [sp, #0]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800e5da:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800e5dc:	3800      	subs	r0, #0
 800e5de:	bf18      	it	ne
 800e5e0:	2001      	movne	r0, #1
error:
 800e5e2:	e789      	b.n	800e4f8 <HAL_SPI_Transmit+0x30>
  __HAL_LOCK(hspi);
 800e5e4:	2002      	movs	r0, #2
}
 800e5e6:	b002      	add	sp, #8
 800e5e8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800e5ec:	6861      	ldr	r1, [r4, #4]
 800e5ee:	2900      	cmp	r1, #0
 800e5f0:	d176      	bne.n	800e6e0 <HAL_SPI_Transmit+0x218>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800e5f2:	4643      	mov	r3, r8
 800e5f4:	f833 7b02 	ldrh.w	r7, [r3], #2
 800e5f8:	60c7      	str	r7, [r0, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800e5fa:	6323      	str	r3, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800e5fc:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e5fe:	3b01      	subs	r3, #1
 800e600:	b29b      	uxth	r3, r3
 800e602:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800e604:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e606:	b29b      	uxth	r3, r3
 800e608:	2b00      	cmp	r3, #0
 800e60a:	d0c4      	beq.n	800e596 <HAL_SPI_Transmit+0xce>
 800e60c:	1c6b      	adds	r3, r5, #1
 800e60e:	d15e      	bne.n	800e6ce <HAL_SPI_Transmit+0x206>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800e610:	6883      	ldr	r3, [r0, #8]
 800e612:	079f      	lsls	r7, r3, #30
 800e614:	d50f      	bpl.n	800e636 <HAL_SPI_Transmit+0x16e>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800e616:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800e618:	f832 3b02 	ldrh.w	r3, [r2], #2
 800e61c:	60c3      	str	r3, [r0, #12]
        hspi->TxXferCount--;
 800e61e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800e620:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800e622:	3b01      	subs	r3, #1
 800e624:	b29b      	uxth	r3, r3
 800e626:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800e628:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e62a:	b29b      	uxth	r3, r3
 800e62c:	2b00      	cmp	r3, #0
 800e62e:	d0b1      	beq.n	800e594 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800e630:	6883      	ldr	r3, [r0, #8]
 800e632:	079f      	lsls	r7, r3, #30
 800e634:	d4ef      	bmi.n	800e616 <HAL_SPI_Transmit+0x14e>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800e636:	f7fc ffc5 	bl	800b5c4 <HAL_GetTick>
    while (hspi->TxXferCount > 0U)
 800e63a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e63c:	b29b      	uxth	r3, r3
 800e63e:	2b00      	cmp	r3, #0
 800e640:	d0a8      	beq.n	800e594 <HAL_SPI_Transmit+0xcc>
 800e642:	6820      	ldr	r0, [r4, #0]
 800e644:	e7e4      	b.n	800e610 <HAL_SPI_Transmit+0x148>
    __HAL_SPI_DISABLE(hspi);
 800e646:	6803      	ldr	r3, [r0, #0]
 800e648:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800e64c:	6003      	str	r3, [r0, #0]
    SPI_1LINE_TX(hspi);
 800e64e:	6803      	ldr	r3, [r0, #0]
 800e650:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800e654:	6003      	str	r3, [r0, #0]
 800e656:	e771      	b.n	800e53c <HAL_SPI_Transmit+0x74>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800e658:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800e65a:	7812      	ldrb	r2, [r2, #0]
 800e65c:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800e65e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800e660:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800e662:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800e664:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800e666:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800e668:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800e66a:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800e66c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e66e:	b29b      	uxth	r3, r3
 800e670:	2b00      	cmp	r3, #0
 800e672:	d08f      	beq.n	800e594 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800e674:	6823      	ldr	r3, [r4, #0]
 800e676:	689a      	ldr	r2, [r3, #8]
 800e678:	0792      	lsls	r2, r2, #30
 800e67a:	d4ed      	bmi.n	800e658 <HAL_SPI_Transmit+0x190>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800e67c:	f7fc ffa2 	bl	800b5c4 <HAL_GetTick>
 800e680:	1b80      	subs	r0, r0, r6
 800e682:	42a8      	cmp	r0, r5
 800e684:	d3f2      	bcc.n	800e66c <HAL_SPI_Transmit+0x1a4>
          errorcode = HAL_TIMEOUT;
 800e686:	2003      	movs	r0, #3
 800e688:	e736      	b.n	800e4f8 <HAL_SPI_Transmit+0x30>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800e68a:	f898 3000 	ldrb.w	r3, [r8]
 800e68e:	7303      	strb	r3, [r0, #12]
      hspi->TxXferCount--;
 800e690:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800e692:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800e694:	3b01      	subs	r3, #1
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800e696:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800e698:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800e69a:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800e69c:	86e3      	strh	r3, [r4, #54]	; 0x36
 800e69e:	e760      	b.n	800e562 <HAL_SPI_Transmit+0x9a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800e6a0:	f7fc ff90 	bl	800b5c4 <HAL_GetTick>
    while (hspi->TxXferCount > 0U)
 800e6a4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e6a6:	b29b      	uxth	r3, r3
 800e6a8:	2b00      	cmp	r3, #0
 800e6aa:	f47f af60 	bne.w	800e56e <HAL_SPI_Transmit+0xa6>
 800e6ae:	e771      	b.n	800e594 <HAL_SPI_Transmit+0xcc>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800e6b0:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800e6b2:	f831 3b02 	ldrh.w	r3, [r1], #2
 800e6b6:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800e6b8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800e6ba:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800e6bc:	3b01      	subs	r3, #1
 800e6be:	b29b      	uxth	r3, r3
 800e6c0:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800e6c2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e6c4:	b29b      	uxth	r3, r3
 800e6c6:	2b00      	cmp	r3, #0
 800e6c8:	f43f af64 	beq.w	800e594 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800e6cc:	6822      	ldr	r2, [r4, #0]
 800e6ce:	6893      	ldr	r3, [r2, #8]
 800e6d0:	0799      	lsls	r1, r3, #30
 800e6d2:	d4ed      	bmi.n	800e6b0 <HAL_SPI_Transmit+0x1e8>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800e6d4:	f7fc ff76 	bl	800b5c4 <HAL_GetTick>
 800e6d8:	1b80      	subs	r0, r0, r6
 800e6da:	42a8      	cmp	r0, r5
 800e6dc:	d3f1      	bcc.n	800e6c2 <HAL_SPI_Transmit+0x1fa>
 800e6de:	e7d2      	b.n	800e686 <HAL_SPI_Transmit+0x1be>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800e6e0:	2f01      	cmp	r7, #1
 800e6e2:	d18f      	bne.n	800e604 <HAL_SPI_Transmit+0x13c>
 800e6e4:	e785      	b.n	800e5f2 <HAL_SPI_Transmit+0x12a>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800e6e6:	4633      	mov	r3, r6
 800e6e8:	462a      	mov	r2, r5
 800e6ea:	2180      	movs	r1, #128	; 0x80
 800e6ec:	4620      	mov	r0, r4
 800e6ee:	f7ff fdef 	bl	800e2d0 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800e6f2:	2800      	cmp	r0, #0
 800e6f4:	f43f af68 	beq.w	800e5c8 <HAL_SPI_Transmit+0x100>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800e6f8:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800e6fa:	2220      	movs	r2, #32
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800e6fc:	4313      	orrs	r3, r2
 800e6fe:	6563      	str	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800e700:	6562      	str	r2, [r4, #84]	; 0x54
 800e702:	e761      	b.n	800e5c8 <HAL_SPI_Transmit+0x100>
 800e704:	2000007c 	.word	0x2000007c
 800e708:	165e9f81 	.word	0x165e9f81

0800e70c <HAL_SPI_TransmitReceive>:
{
 800e70c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e710:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800e712:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800e716:	2801      	cmp	r0, #1
{
 800e718:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800e71a:	f000 80ac 	beq.w	800e876 <HAL_SPI_TransmitReceive+0x16a>
 800e71e:	461e      	mov	r6, r3
 800e720:	2301      	movs	r3, #1
 800e722:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800e726:	4690      	mov	r8, r2
 800e728:	460f      	mov	r7, r1
 800e72a:	f7fc ff4b 	bl	800b5c4 <HAL_GetTick>
 800e72e:	4605      	mov	r5, r0
  tmp_state           = hspi->State;
 800e730:	f894 0051 	ldrb.w	r0, [r4, #81]	; 0x51
  tmp_mode            = hspi->Init.Mode;
 800e734:	6863      	ldr	r3, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800e736:	2801      	cmp	r0, #1
  tmp_state           = hspi->State;
 800e738:	b2c2      	uxtb	r2, r0
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800e73a:	d011      	beq.n	800e760 <HAL_SPI_TransmitReceive+0x54>
 800e73c:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800e740:	d009      	beq.n	800e756 <HAL_SPI_TransmitReceive+0x4a>
    errorcode = HAL_BUSY;
 800e742:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800e744:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800e746:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800e748:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800e74c:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800e750:	b002      	add	sp, #8
 800e752:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 800e756:	68a1      	ldr	r1, [r4, #8]
 800e758:	2900      	cmp	r1, #0
 800e75a:	d1f2      	bne.n	800e742 <HAL_SPI_TransmitReceive+0x36>
 800e75c:	2a04      	cmp	r2, #4
 800e75e:	d1f0      	bne.n	800e742 <HAL_SPI_TransmitReceive+0x36>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 800e760:	2f00      	cmp	r7, #0
 800e762:	f000 808c 	beq.w	800e87e <HAL_SPI_TransmitReceive+0x172>
 800e766:	f1b8 0f00 	cmp.w	r8, #0
 800e76a:	f000 8088 	beq.w	800e87e <HAL_SPI_TransmitReceive+0x172>
 800e76e:	2e00      	cmp	r6, #0
 800e770:	f000 8085 	beq.w	800e87e <HAL_SPI_TransmitReceive+0x172>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800e774:	f894 2051 	ldrb.w	r2, [r4, #81]	; 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 800e778:	f8c4 8038 	str.w	r8, [r4, #56]	; 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800e77c:	2a04      	cmp	r2, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 800e77e:	bf1c      	itt	ne
 800e780:	2205      	movne	r2, #5
 800e782:	f884 2051 	strbne.w	r2, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800e786:	2200      	movs	r2, #0
 800e788:	6562      	str	r2, [r4, #84]	; 0x54
  hspi->TxISR       = NULL;
 800e78a:	e9c4 2210 	strd	r2, r2, [r4, #64]	; 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800e78e:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferCount = Size;
 800e790:	87e6      	strh	r6, [r4, #62]	; 0x3e
  hspi->TxXferCount = Size;
 800e792:	86e6      	strh	r6, [r4, #54]	; 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800e794:	6811      	ldr	r1, [r2, #0]
  hspi->RxXferSize  = Size;
 800e796:	87a6      	strh	r6, [r4, #60]	; 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800e798:	0649      	lsls	r1, r1, #25
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 800e79a:	6327      	str	r7, [r4, #48]	; 0x30
  hspi->TxXferSize  = Size;
 800e79c:	86a6      	strh	r6, [r4, #52]	; 0x34
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800e79e:	d403      	bmi.n	800e7a8 <HAL_SPI_TransmitReceive+0x9c>
    __HAL_SPI_ENABLE(hspi);
 800e7a0:	6811      	ldr	r1, [r2, #0]
 800e7a2:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800e7a6:	6011      	str	r1, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800e7a8:	68e1      	ldr	r1, [r4, #12]
 800e7aa:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
 800e7ae:	f000 809e 	beq.w	800e8ee <HAL_SPI_TransmitReceive+0x1e2>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800e7b2:	2b00      	cmp	r3, #0
 800e7b4:	f000 8091 	beq.w	800e8da <HAL_SPI_TransmitReceive+0x1ce>
 800e7b8:	2e01      	cmp	r6, #1
 800e7ba:	f000 808e 	beq.w	800e8da <HAL_SPI_TransmitReceive+0x1ce>
 800e7be:	9b08      	ldr	r3, [sp, #32]
 800e7c0:	3301      	adds	r3, #1
        txallowed = 1U;
 800e7c2:	f04f 0601 	mov.w	r6, #1
 800e7c6:	d028      	beq.n	800e81a <HAL_SPI_TransmitReceive+0x10e>
 800e7c8:	e05b      	b.n	800e882 <HAL_SPI_TransmitReceive+0x176>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800e7ca:	6821      	ldr	r1, [r4, #0]
 800e7cc:	688b      	ldr	r3, [r1, #8]
 800e7ce:	0798      	lsls	r0, r3, #30
 800e7d0:	d50f      	bpl.n	800e7f2 <HAL_SPI_TransmitReceive+0xe6>
 800e7d2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e7d4:	b29b      	uxth	r3, r3
 800e7d6:	b163      	cbz	r3, 800e7f2 <HAL_SPI_TransmitReceive+0xe6>
 800e7d8:	b15e      	cbz	r6, 800e7f2 <HAL_SPI_TransmitReceive+0xe6>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800e7da:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800e7dc:	781b      	ldrb	r3, [r3, #0]
 800e7de:	730b      	strb	r3, [r1, #12]
        hspi->TxXferCount--;
 800e7e0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800e7e2:	6b22      	ldr	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800e7e4:	6821      	ldr	r1, [r4, #0]
        hspi->TxXferCount--;
 800e7e6:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr++;
 800e7e8:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800e7ea:	b29b      	uxth	r3, r3
        txallowed = 0U;
 800e7ec:	2600      	movs	r6, #0
        hspi->TxXferCount--;
 800e7ee:	86e3      	strh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800e7f0:	6322      	str	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800e7f2:	688a      	ldr	r2, [r1, #8]
 800e7f4:	f012 0201 	ands.w	r2, r2, #1
 800e7f8:	d00d      	beq.n	800e816 <HAL_SPI_TransmitReceive+0x10a>
 800e7fa:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800e7fc:	b29b      	uxth	r3, r3
 800e7fe:	b153      	cbz	r3, 800e816 <HAL_SPI_TransmitReceive+0x10a>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800e800:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800e802:	68c9      	ldr	r1, [r1, #12]
 800e804:	7019      	strb	r1, [r3, #0]
        hspi->RxXferCount--;
 800e806:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800e808:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800e80a:	3b01      	subs	r3, #1
        hspi->pRxBuffPtr++;
 800e80c:	3101      	adds	r1, #1
        hspi->RxXferCount--;
 800e80e:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr++;
 800e810:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800e812:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 800e814:	4616      	mov	r6, r2
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800e816:	f7fc fed5 	bl	800b5c4 <HAL_GetTick>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800e81a:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800e81c:	b292      	uxth	r2, r2
 800e81e:	2a00      	cmp	r2, #0
 800e820:	d1d3      	bne.n	800e7ca <HAL_SPI_TransmitReceive+0xbe>
 800e822:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800e824:	b29b      	uxth	r3, r3
 800e826:	2b00      	cmp	r3, #0
 800e828:	d1cf      	bne.n	800e7ca <HAL_SPI_TransmitReceive+0xbe>
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800e82a:	4b79      	ldr	r3, [pc, #484]	; (800ea10 <HAL_SPI_TransmitReceive+0x304>)
 800e82c:	4a79      	ldr	r2, [pc, #484]	; (800ea14 <HAL_SPI_TransmitReceive+0x308>)
 800e82e:	681b      	ldr	r3, [r3, #0]
 800e830:	fba2 2303 	umull	r2, r3, r2, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800e834:	6862      	ldr	r2, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800e836:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 800e83a:	0d5b      	lsrs	r3, r3, #21
 800e83c:	fb01 f303 	mul.w	r3, r1, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800e840:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800e844:	9301      	str	r3, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800e846:	d107      	bne.n	800e858 <HAL_SPI_TransmitReceive+0x14c>
 800e848:	e0d2      	b.n	800e9f0 <HAL_SPI_TransmitReceive+0x2e4>
      count--;
 800e84a:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800e84c:	6822      	ldr	r2, [r4, #0]
      count--;
 800e84e:	3b01      	subs	r3, #1
 800e850:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800e852:	6893      	ldr	r3, [r2, #8]
 800e854:	061b      	lsls	r3, r3, #24
 800e856:	d502      	bpl.n	800e85e <HAL_SPI_TransmitReceive+0x152>
      if (count == 0U)
 800e858:	9b01      	ldr	r3, [sp, #4]
 800e85a:	2b00      	cmp	r3, #0
 800e85c:	d1f5      	bne.n	800e84a <HAL_SPI_TransmitReceive+0x13e>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800e85e:	68a0      	ldr	r0, [r4, #8]
 800e860:	2800      	cmp	r0, #0
 800e862:	f040 8082 	bne.w	800e96a <HAL_SPI_TransmitReceive+0x25e>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800e866:	6823      	ldr	r3, [r4, #0]
 800e868:	9000      	str	r0, [sp, #0]
 800e86a:	68da      	ldr	r2, [r3, #12]
 800e86c:	9200      	str	r2, [sp, #0]
 800e86e:	689b      	ldr	r3, [r3, #8]
 800e870:	9300      	str	r3, [sp, #0]
 800e872:	9b00      	ldr	r3, [sp, #0]
 800e874:	e766      	b.n	800e744 <HAL_SPI_TransmitReceive+0x38>
  __HAL_LOCK(hspi);
 800e876:	2002      	movs	r0, #2
}
 800e878:	b002      	add	sp, #8
 800e87a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    errorcode = HAL_ERROR;
 800e87e:	2001      	movs	r0, #1
 800e880:	e760      	b.n	800e744 <HAL_SPI_TransmitReceive+0x38>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800e882:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e884:	b29b      	uxth	r3, r3
 800e886:	b91b      	cbnz	r3, 800e890 <HAL_SPI_TransmitReceive+0x184>
 800e888:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800e88a:	b29b      	uxth	r3, r3
 800e88c:	2b00      	cmp	r3, #0
 800e88e:	d0cc      	beq.n	800e82a <HAL_SPI_TransmitReceive+0x11e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800e890:	6822      	ldr	r2, [r4, #0]
 800e892:	6893      	ldr	r3, [r2, #8]
 800e894:	0799      	lsls	r1, r3, #30
 800e896:	d50f      	bpl.n	800e8b8 <HAL_SPI_TransmitReceive+0x1ac>
 800e898:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e89a:	b29b      	uxth	r3, r3
 800e89c:	b163      	cbz	r3, 800e8b8 <HAL_SPI_TransmitReceive+0x1ac>
 800e89e:	b15e      	cbz	r6, 800e8b8 <HAL_SPI_TransmitReceive+0x1ac>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800e8a0:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800e8a2:	781b      	ldrb	r3, [r3, #0]
 800e8a4:	7313      	strb	r3, [r2, #12]
        hspi->TxXferCount--;
 800e8a6:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800e8a8:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800e8aa:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr++;
 800e8ac:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800e8ae:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr++;
 800e8b0:	6322      	str	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800e8b2:	6822      	ldr	r2, [r4, #0]
        hspi->TxXferCount--;
 800e8b4:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800e8b6:	2600      	movs	r6, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800e8b8:	6893      	ldr	r3, [r2, #8]
 800e8ba:	f013 0301 	ands.w	r3, r3, #1
 800e8be:	d004      	beq.n	800e8ca <HAL_SPI_TransmitReceive+0x1be>
 800e8c0:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800e8c2:	b289      	uxth	r1, r1
 800e8c4:	2900      	cmp	r1, #0
 800e8c6:	f040 8087 	bne.w	800e9d8 <HAL_SPI_TransmitReceive+0x2cc>
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800e8ca:	f7fc fe7b 	bl	800b5c4 <HAL_GetTick>
 800e8ce:	9b08      	ldr	r3, [sp, #32]
 800e8d0:	1b40      	subs	r0, r0, r5
 800e8d2:	4298      	cmp	r0, r3
 800e8d4:	d3d5      	bcc.n	800e882 <HAL_SPI_TransmitReceive+0x176>
        errorcode = HAL_TIMEOUT;
 800e8d6:	2003      	movs	r0, #3
 800e8d8:	e734      	b.n	800e744 <HAL_SPI_TransmitReceive+0x38>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800e8da:	783b      	ldrb	r3, [r7, #0]
 800e8dc:	7313      	strb	r3, [r2, #12]
      hspi->TxXferCount--;
 800e8de:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800e8e0:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800e8e2:	3b01      	subs	r3, #1
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800e8e4:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800e8e6:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800e8e8:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800e8ea:	86e3      	strh	r3, [r4, #54]	; 0x36
 800e8ec:	e767      	b.n	800e7be <HAL_SPI_TransmitReceive+0xb2>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800e8ee:	2b00      	cmp	r3, #0
 800e8f0:	d13d      	bne.n	800e96e <HAL_SPI_TransmitReceive+0x262>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800e8f2:	f837 3b02 	ldrh.w	r3, [r7], #2
 800e8f6:	60d3      	str	r3, [r2, #12]
      hspi->TxXferCount--;
 800e8f8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800e8fa:	6327      	str	r7, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800e8fc:	3b01      	subs	r3, #1
 800e8fe:	b29b      	uxth	r3, r3
 800e900:	86e3      	strh	r3, [r4, #54]	; 0x36
 800e902:	9b08      	ldr	r3, [sp, #32]
 800e904:	3301      	adds	r3, #1
{
 800e906:	f04f 0601 	mov.w	r6, #1
 800e90a:	d025      	beq.n	800e958 <HAL_SPI_TransmitReceive+0x24c>
 800e90c:	e032      	b.n	800e974 <HAL_SPI_TransmitReceive+0x268>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800e90e:	6823      	ldr	r3, [r4, #0]
 800e910:	689a      	ldr	r2, [r3, #8]
 800e912:	0792      	lsls	r2, r2, #30
 800e914:	d50d      	bpl.n	800e932 <HAL_SPI_TransmitReceive+0x226>
 800e916:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800e918:	b292      	uxth	r2, r2
 800e91a:	b152      	cbz	r2, 800e932 <HAL_SPI_TransmitReceive+0x226>
 800e91c:	b14e      	cbz	r6, 800e932 <HAL_SPI_TransmitReceive+0x226>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800e91e:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800e920:	f831 2b02 	ldrh.w	r2, [r1], #2
 800e924:	60da      	str	r2, [r3, #12]
        hspi->TxXferCount--;
 800e926:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800e928:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800e92a:	3a01      	subs	r2, #1
 800e92c:	b292      	uxth	r2, r2
        txallowed = 0U;
 800e92e:	2600      	movs	r6, #0
        hspi->TxXferCount--;
 800e930:	86e2      	strh	r2, [r4, #54]	; 0x36
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800e932:	689a      	ldr	r2, [r3, #8]
 800e934:	f012 0201 	ands.w	r2, r2, #1
 800e938:	d00c      	beq.n	800e954 <HAL_SPI_TransmitReceive+0x248>
 800e93a:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800e93c:	b289      	uxth	r1, r1
 800e93e:	b149      	cbz	r1, 800e954 <HAL_SPI_TransmitReceive+0x248>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800e940:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800e942:	68db      	ldr	r3, [r3, #12]
 800e944:	f821 3b02 	strh.w	r3, [r1], #2
        hspi->RxXferCount--;
 800e948:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800e94a:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800e94c:	3b01      	subs	r3, #1
 800e94e:	b29b      	uxth	r3, r3
        txallowed = 1U;
 800e950:	4616      	mov	r6, r2
        hspi->RxXferCount--;
 800e952:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800e954:	f7fc fe36 	bl	800b5c4 <HAL_GetTick>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800e958:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e95a:	b29b      	uxth	r3, r3
 800e95c:	2b00      	cmp	r3, #0
 800e95e:	d1d6      	bne.n	800e90e <HAL_SPI_TransmitReceive+0x202>
 800e960:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800e962:	b29b      	uxth	r3, r3
 800e964:	2b00      	cmp	r3, #0
 800e966:	d1d2      	bne.n	800e90e <HAL_SPI_TransmitReceive+0x202>
 800e968:	e75f      	b.n	800e82a <HAL_SPI_TransmitReceive+0x11e>
  HAL_StatusTypeDef    errorcode = HAL_OK;
 800e96a:	2000      	movs	r0, #0
 800e96c:	e6ea      	b.n	800e744 <HAL_SPI_TransmitReceive+0x38>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800e96e:	2e01      	cmp	r6, #1
 800e970:	d1c7      	bne.n	800e902 <HAL_SPI_TransmitReceive+0x1f6>
 800e972:	e7be      	b.n	800e8f2 <HAL_SPI_TransmitReceive+0x1e6>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800e974:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e976:	b29b      	uxth	r3, r3
 800e978:	b923      	cbnz	r3, 800e984 <HAL_SPI_TransmitReceive+0x278>
 800e97a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800e97c:	b29b      	uxth	r3, r3
 800e97e:	2b00      	cmp	r3, #0
 800e980:	f43f af53 	beq.w	800e82a <HAL_SPI_TransmitReceive+0x11e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800e984:	6822      	ldr	r2, [r4, #0]
 800e986:	6893      	ldr	r3, [r2, #8]
 800e988:	079f      	lsls	r7, r3, #30
 800e98a:	d50d      	bpl.n	800e9a8 <HAL_SPI_TransmitReceive+0x29c>
 800e98c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e98e:	b29b      	uxth	r3, r3
 800e990:	b153      	cbz	r3, 800e9a8 <HAL_SPI_TransmitReceive+0x29c>
 800e992:	b14e      	cbz	r6, 800e9a8 <HAL_SPI_TransmitReceive+0x29c>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800e994:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800e996:	f831 3b02 	ldrh.w	r3, [r1], #2
 800e99a:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800e99c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800e99e:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800e9a0:	3b01      	subs	r3, #1
 800e9a2:	b29b      	uxth	r3, r3
 800e9a4:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800e9a6:	2600      	movs	r6, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800e9a8:	6893      	ldr	r3, [r2, #8]
 800e9aa:	f013 0301 	ands.w	r3, r3, #1
 800e9ae:	d00c      	beq.n	800e9ca <HAL_SPI_TransmitReceive+0x2be>
 800e9b0:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800e9b2:	b289      	uxth	r1, r1
 800e9b4:	b149      	cbz	r1, 800e9ca <HAL_SPI_TransmitReceive+0x2be>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800e9b6:	68d1      	ldr	r1, [r2, #12]
 800e9b8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800e9ba:	f822 1b02 	strh.w	r1, [r2], #2
        txallowed = 1U;
 800e9be:	461e      	mov	r6, r3
        hspi->RxXferCount--;
 800e9c0:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800e9c2:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800e9c4:	3b01      	subs	r3, #1
 800e9c6:	b29b      	uxth	r3, r3
 800e9c8:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800e9ca:	f7fc fdfb 	bl	800b5c4 <HAL_GetTick>
 800e9ce:	9b08      	ldr	r3, [sp, #32]
 800e9d0:	1b40      	subs	r0, r0, r5
 800e9d2:	4298      	cmp	r0, r3
 800e9d4:	d3ce      	bcc.n	800e974 <HAL_SPI_TransmitReceive+0x268>
 800e9d6:	e77e      	b.n	800e8d6 <HAL_SPI_TransmitReceive+0x1ca>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800e9d8:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800e9da:	68d2      	ldr	r2, [r2, #12]
 800e9dc:	700a      	strb	r2, [r1, #0]
        hspi->RxXferCount--;
 800e9de:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800e9e0:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800e9e2:	3a01      	subs	r2, #1
        hspi->pRxBuffPtr++;
 800e9e4:	3101      	adds	r1, #1
        hspi->RxXferCount--;
 800e9e6:	b292      	uxth	r2, r2
        hspi->pRxBuffPtr++;
 800e9e8:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800e9ea:	87e2      	strh	r2, [r4, #62]	; 0x3e
        txallowed = 1U;
 800e9ec:	461e      	mov	r6, r3
 800e9ee:	e76c      	b.n	800e8ca <HAL_SPI_TransmitReceive+0x1be>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800e9f0:	9a08      	ldr	r2, [sp, #32]
 800e9f2:	462b      	mov	r3, r5
 800e9f4:	2180      	movs	r1, #128	; 0x80
 800e9f6:	4620      	mov	r0, r4
 800e9f8:	f7ff fc6a 	bl	800e2d0 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800e9fc:	2800      	cmp	r0, #0
 800e9fe:	f43f af2e 	beq.w	800e85e <HAL_SPI_TransmitReceive+0x152>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800ea02:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800ea04:	2220      	movs	r2, #32
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800ea06:	4313      	orrs	r3, r2
 800ea08:	6563      	str	r3, [r4, #84]	; 0x54
    errorcode = HAL_ERROR;
 800ea0a:	2001      	movs	r0, #1
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800ea0c:	6562      	str	r2, [r4, #84]	; 0x54
    goto error;
 800ea0e:	e699      	b.n	800e744 <HAL_SPI_TransmitReceive+0x38>
 800ea10:	2000007c 	.word	0x2000007c
 800ea14:	165e9f81 	.word	0x165e9f81

0800ea18 <HAL_SPI_Receive>:
{
 800ea18:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800ea1c:	6846      	ldr	r6, [r0, #4]
 800ea1e:	f5b6 7f82 	cmp.w	r6, #260	; 0x104
{
 800ea22:	b082      	sub	sp, #8
 800ea24:	4604      	mov	r4, r0
 800ea26:	4690      	mov	r8, r2
 800ea28:	461d      	mov	r5, r3
 800ea2a:	460f      	mov	r7, r1
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800ea2c:	d06e      	beq.n	800eb0c <HAL_SPI_Receive+0xf4>
  __HAL_LOCK(hspi);
 800ea2e:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 800ea32:	2b01      	cmp	r3, #1
 800ea34:	d076      	beq.n	800eb24 <HAL_SPI_Receive+0x10c>
 800ea36:	2301      	movs	r3, #1
 800ea38:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800ea3c:	f7fc fdc2 	bl	800b5c4 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800ea40:	f894 c051 	ldrb.w	ip, [r4, #81]	; 0x51
 800ea44:	f1bc 0f01 	cmp.w	ip, #1
  tickstart = HAL_GetTick();
 800ea48:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800ea4a:	fa5f f08c 	uxtb.w	r0, ip
 800ea4e:	d009      	beq.n	800ea64 <HAL_SPI_Receive+0x4c>
    errorcode = HAL_BUSY;
 800ea50:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800ea52:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800ea54:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800ea56:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800ea5a:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800ea5e:	b002      	add	sp, #8
 800ea60:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800ea64:	2f00      	cmp	r7, #0
 800ea66:	d0f4      	beq.n	800ea52 <HAL_SPI_Receive+0x3a>
 800ea68:	f1b8 0f00 	cmp.w	r8, #0
 800ea6c:	d0f1      	beq.n	800ea52 <HAL_SPI_Receive+0x3a>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800ea6e:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 800ea70:	63a7      	str	r7, [r4, #56]	; 0x38
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800ea72:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
    __HAL_SPI_DISABLE(hspi);
 800ea76:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferSize  = Size;
 800ea78:	f8a4 803c 	strh.w	r8, [r4, #60]	; 0x3c
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800ea7c:	f04f 0300 	mov.w	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 800ea80:	f04f 0104 	mov.w	r1, #4
 800ea84:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
  hspi->TxISR       = NULL;
 800ea88:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800ea8c:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 800ea8e:	6323      	str	r3, [r4, #48]	; 0x30
  hspi->TxXferSize  = 0U;
 800ea90:	86a3      	strh	r3, [r4, #52]	; 0x34
  hspi->RxXferCount = Size;
 800ea92:	f8a4 803e 	strh.w	r8, [r4, #62]	; 0x3e
  hspi->TxXferCount = 0U;
 800ea96:	86e3      	strh	r3, [r4, #54]	; 0x36
    __HAL_SPI_DISABLE(hspi);
 800ea98:	4613      	mov	r3, r2
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800ea9a:	d107      	bne.n	800eaac <HAL_SPI_Receive+0x94>
    __HAL_SPI_DISABLE(hspi);
 800ea9c:	6811      	ldr	r1, [r2, #0]
 800ea9e:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800eaa2:	6011      	str	r1, [r2, #0]
    SPI_1LINE_RX(hspi);
 800eaa4:	6811      	ldr	r1, [r2, #0]
 800eaa6:	f421 4180 	bic.w	r1, r1, #16384	; 0x4000
 800eaaa:	6011      	str	r1, [r2, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800eaac:	6811      	ldr	r1, [r2, #0]
 800eaae:	0648      	lsls	r0, r1, #25
 800eab0:	d403      	bmi.n	800eaba <HAL_SPI_Receive+0xa2>
    __HAL_SPI_ENABLE(hspi);
 800eab2:	6811      	ldr	r1, [r2, #0]
 800eab4:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800eab8:	6011      	str	r1, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 800eaba:	68e1      	ldr	r1, [r4, #12]
 800eabc:	2900      	cmp	r1, #0
 800eabe:	d054      	beq.n	800eb6a <HAL_SPI_Receive+0x152>
    while (hspi->RxXferCount > 0U)
 800eac0:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800eac2:	b289      	uxth	r1, r1
 800eac4:	b1a9      	cbz	r1, 800eaf2 <HAL_SPI_Receive+0xda>
 800eac6:	1c69      	adds	r1, r5, #1
 800eac8:	d13e      	bne.n	800eb48 <HAL_SPI_Receive+0x130>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800eaca:	6893      	ldr	r3, [r2, #8]
 800eacc:	07db      	lsls	r3, r3, #31
 800eace:	d544      	bpl.n	800eb5a <HAL_SPI_Receive+0x142>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800ead0:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800ead2:	68d1      	ldr	r1, [r2, #12]
 800ead4:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->RxXferCount--;
 800ead8:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800eadc:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800eade:	f10c 3cff 	add.w	ip, ip, #4294967295
 800eae2:	fa1f fc8c 	uxth.w	ip, ip
 800eae6:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800eaea:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800eaec:	b29b      	uxth	r3, r3
 800eaee:	2b00      	cmp	r3, #0
 800eaf0:	d1eb      	bne.n	800eaca <HAL_SPI_Receive+0xb2>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800eaf2:	4632      	mov	r2, r6
 800eaf4:	4629      	mov	r1, r5
 800eaf6:	4620      	mov	r0, r4
 800eaf8:	f7ff fc48 	bl	800e38c <SPI_EndRxTransaction>
 800eafc:	b108      	cbz	r0, 800eb02 <HAL_SPI_Receive+0xea>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800eafe:	2320      	movs	r3, #32
 800eb00:	6563      	str	r3, [r4, #84]	; 0x54
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800eb02:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800eb04:	3800      	subs	r0, #0
 800eb06:	bf18      	it	ne
 800eb08:	2001      	movne	r0, #1
error :
 800eb0a:	e7a2      	b.n	800ea52 <HAL_SPI_Receive+0x3a>
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800eb0c:	6883      	ldr	r3, [r0, #8]
 800eb0e:	2b00      	cmp	r3, #0
 800eb10:	d18d      	bne.n	800ea2e <HAL_SPI_Receive+0x16>
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800eb12:	9500      	str	r5, [sp, #0]
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800eb14:	2504      	movs	r5, #4
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800eb16:	4613      	mov	r3, r2
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800eb18:	f880 5051 	strb.w	r5, [r0, #81]	; 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800eb1c:	460a      	mov	r2, r1
 800eb1e:	f7ff fdf5 	bl	800e70c <HAL_SPI_TransmitReceive>
 800eb22:	e79c      	b.n	800ea5e <HAL_SPI_Receive+0x46>
  __HAL_LOCK(hspi);
 800eb24:	2002      	movs	r0, #2
}
 800eb26:	b002      	add	sp, #8
 800eb28:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800eb2c:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800eb2e:	68db      	ldr	r3, [r3, #12]
 800eb30:	f822 3b02 	strh.w	r3, [r2], #2
        hspi->RxXferCount--;
 800eb34:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800eb36:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800eb38:	3b01      	subs	r3, #1
 800eb3a:	b29b      	uxth	r3, r3
 800eb3c:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800eb3e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800eb40:	b29b      	uxth	r3, r3
 800eb42:	2b00      	cmp	r3, #0
 800eb44:	d0d5      	beq.n	800eaf2 <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800eb46:	6823      	ldr	r3, [r4, #0]
 800eb48:	689a      	ldr	r2, [r3, #8]
 800eb4a:	07d2      	lsls	r2, r2, #31
 800eb4c:	d4ee      	bmi.n	800eb2c <HAL_SPI_Receive+0x114>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800eb4e:	f7fc fd39 	bl	800b5c4 <HAL_GetTick>
 800eb52:	1b80      	subs	r0, r0, r6
 800eb54:	42a8      	cmp	r0, r5
 800eb56:	d243      	bcs.n	800ebe0 <HAL_SPI_Receive+0x1c8>
 800eb58:	e7f1      	b.n	800eb3e <HAL_SPI_Receive+0x126>
 800eb5a:	f7fc fd33 	bl	800b5c4 <HAL_GetTick>
    while (hspi->RxXferCount > 0U)
 800eb5e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800eb60:	b29b      	uxth	r3, r3
 800eb62:	2b00      	cmp	r3, #0
 800eb64:	d0c5      	beq.n	800eaf2 <HAL_SPI_Receive+0xda>
 800eb66:	6822      	ldr	r2, [r4, #0]
 800eb68:	e7af      	b.n	800eaca <HAL_SPI_Receive+0xb2>
    while (hspi->RxXferCount > 0U)
 800eb6a:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 800eb6c:	b292      	uxth	r2, r2
 800eb6e:	2a00      	cmp	r2, #0
 800eb70:	d0bf      	beq.n	800eaf2 <HAL_SPI_Receive+0xda>
 800eb72:	1c6f      	adds	r7, r5, #1
 800eb74:	d013      	beq.n	800eb9e <HAL_SPI_Receive+0x186>
 800eb76:	e02b      	b.n	800ebd0 <HAL_SPI_Receive+0x1b8>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800eb78:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800eb7a:	7b1b      	ldrb	r3, [r3, #12]
 800eb7c:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
 800eb7e:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800eb82:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800eb84:	f10c 3cff 	add.w	ip, ip, #4294967295
 800eb88:	fa1f fc8c 	uxth.w	ip, ip
 800eb8c:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800eb90:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800eb92:	3201      	adds	r2, #1
    while (hspi->RxXferCount > 0U)
 800eb94:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800eb96:	63a2      	str	r2, [r4, #56]	; 0x38
    while (hspi->RxXferCount > 0U)
 800eb98:	2b00      	cmp	r3, #0
 800eb9a:	d0aa      	beq.n	800eaf2 <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800eb9c:	6823      	ldr	r3, [r4, #0]
 800eb9e:	689a      	ldr	r2, [r3, #8]
 800eba0:	07d0      	lsls	r0, r2, #31
 800eba2:	d4e9      	bmi.n	800eb78 <HAL_SPI_Receive+0x160>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800eba4:	f7fc fd0e 	bl	800b5c4 <HAL_GetTick>
    while (hspi->RxXferCount > 0U)
 800eba8:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800ebaa:	b29b      	uxth	r3, r3
 800ebac:	2b00      	cmp	r3, #0
 800ebae:	d1f5      	bne.n	800eb9c <HAL_SPI_Receive+0x184>
 800ebb0:	e79f      	b.n	800eaf2 <HAL_SPI_Receive+0xda>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800ebb2:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800ebb4:	7b1b      	ldrb	r3, [r3, #12]
 800ebb6:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
 800ebb8:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800ebba:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800ebbc:	3b01      	subs	r3, #1
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800ebbe:	3201      	adds	r2, #1
        hspi->RxXferCount--;
 800ebc0:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800ebc2:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800ebc4:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800ebc6:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800ebc8:	b29b      	uxth	r3, r3
 800ebca:	2b00      	cmp	r3, #0
 800ebcc:	d091      	beq.n	800eaf2 <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800ebce:	6823      	ldr	r3, [r4, #0]
 800ebd0:	689a      	ldr	r2, [r3, #8]
 800ebd2:	07d1      	lsls	r1, r2, #31
 800ebd4:	d4ed      	bmi.n	800ebb2 <HAL_SPI_Receive+0x19a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800ebd6:	f7fc fcf5 	bl	800b5c4 <HAL_GetTick>
 800ebda:	1b80      	subs	r0, r0, r6
 800ebdc:	42a8      	cmp	r0, r5
 800ebde:	d3f2      	bcc.n	800ebc6 <HAL_SPI_Receive+0x1ae>
          errorcode = HAL_TIMEOUT;
 800ebe0:	2003      	movs	r0, #3
 800ebe2:	e736      	b.n	800ea52 <HAL_SPI_Receive+0x3a>

0800ebe4 <HAL_TIM_Base_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
  /* Check the TIM handle allocation */
  if (htim == NULL)
 800ebe4:	2800      	cmp	r0, #0
 800ebe6:	f000 8087 	beq.w	800ecf8 <HAL_TIM_Base_Init+0x114>
{
 800ebea:	b510      	push	{r4, lr}
  assert_param(IS_TIM_INSTANCE(htim->Instance));
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 800ebec:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800ebf0:	4604      	mov	r4, r0
 800ebf2:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800ebf6:	2b00      	cmp	r3, #0
 800ebf8:	d079      	beq.n	800ecee <HAL_TIM_Base_Init+0x10a>

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800ebfa:	6822      	ldr	r2, [r4, #0]
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800ebfc:	493f      	ldr	r1, [pc, #252]	; (800ecfc <HAL_TIM_Base_Init+0x118>)
  htim->State = HAL_TIM_STATE_BUSY;
 800ebfe:	2302      	movs	r3, #2
 800ec00:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800ec04:	428a      	cmp	r2, r1
  tmpcr1 = TIMx->CR1;
 800ec06:	6813      	ldr	r3, [r2, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800ec08:	d05d      	beq.n	800ecc6 <HAL_TIM_Base_Init+0xe2>
 800ec0a:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 800ec0e:	d031      	beq.n	800ec74 <HAL_TIM_Base_Init+0x90>
 800ec10:	f5a1 417c 	sub.w	r1, r1, #64512	; 0xfc00
 800ec14:	428a      	cmp	r2, r1
 800ec16:	d02d      	beq.n	800ec74 <HAL_TIM_Base_Init+0x90>
 800ec18:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800ec1c:	428a      	cmp	r2, r1
 800ec1e:	d029      	beq.n	800ec74 <HAL_TIM_Base_Init+0x90>
 800ec20:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800ec24:	428a      	cmp	r2, r1
 800ec26:	d025      	beq.n	800ec74 <HAL_TIM_Base_Init+0x90>
 800ec28:	f501 4178 	add.w	r1, r1, #63488	; 0xf800
 800ec2c:	428a      	cmp	r2, r1
 800ec2e:	d04a      	beq.n	800ecc6 <HAL_TIM_Base_Init+0xe2>
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800ec30:	f501 5170 	add.w	r1, r1, #15360	; 0x3c00
 800ec34:	428a      	cmp	r2, r1
 800ec36:	d021      	beq.n	800ec7c <HAL_TIM_Base_Init+0x98>
 800ec38:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800ec3c:	428a      	cmp	r2, r1
 800ec3e:	d01d      	beq.n	800ec7c <HAL_TIM_Base_Init+0x98>
 800ec40:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800ec44:	428a      	cmp	r2, r1
 800ec46:	d019      	beq.n	800ec7c <HAL_TIM_Base_Init+0x98>
 800ec48:	f5a1 3198 	sub.w	r1, r1, #77824	; 0x13000
 800ec4c:	428a      	cmp	r2, r1
 800ec4e:	d015      	beq.n	800ec7c <HAL_TIM_Base_Init+0x98>
 800ec50:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800ec54:	428a      	cmp	r2, r1
 800ec56:	d011      	beq.n	800ec7c <HAL_TIM_Base_Init+0x98>
 800ec58:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800ec5c:	428a      	cmp	r2, r1
 800ec5e:	d00d      	beq.n	800ec7c <HAL_TIM_Base_Init+0x98>
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800ec60:	69a0      	ldr	r0, [r4, #24]

  TIMx->CR1 = tmpcr1;

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800ec62:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800ec64:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800ec68:	4303      	orrs	r3, r0
  TIMx->CR1 = tmpcr1;
 800ec6a:	6013      	str	r3, [r2, #0]

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 800ec6c:	6863      	ldr	r3, [r4, #4]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800ec6e:	62d1      	str	r1, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800ec70:	6293      	str	r3, [r2, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800ec72:	e010      	b.n	800ec96 <HAL_TIM_Base_Init+0xb2>
    tmpcr1 |= Structure->CounterMode;
 800ec74:	68a1      	ldr	r1, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800ec76:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800ec7a:	430b      	orrs	r3, r1
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800ec7c:	6920      	ldr	r0, [r4, #16]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800ec7e:	69a1      	ldr	r1, [r4, #24]
    tmpcr1 &= ~TIM_CR1_CKD;
 800ec80:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800ec84:	4303      	orrs	r3, r0
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800ec86:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  TIMx->ARR = (uint32_t)Structure->Period ;
 800ec8a:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800ec8c:	430b      	orrs	r3, r1
  TIMx->PSC = Structure->Prescaler;
 800ec8e:	6861      	ldr	r1, [r4, #4]
  TIMx->CR1 = tmpcr1;
 800ec90:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800ec92:	62d0      	str	r0, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800ec94:	6291      	str	r1, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 800ec96:	2301      	movs	r3, #1
 800ec98:	6153      	str	r3, [r2, #20]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800ec9a:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800ec9e:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 800eca2:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 800eca6:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800ecaa:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800ecae:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800ecb2:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800ecb6:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800ecba:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 800ecbe:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 800ecc2:	2000      	movs	r0, #0
}
 800ecc4:	bd10      	pop	{r4, pc}
    tmpcr1 |= Structure->CounterMode;
 800ecc6:	68a0      	ldr	r0, [r4, #8]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800ecc8:	6921      	ldr	r1, [r4, #16]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800ecca:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800ecce:	4303      	orrs	r3, r0
    tmpcr1 &= ~TIM_CR1_CKD;
 800ecd0:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800ecd4:	430b      	orrs	r3, r1
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800ecd6:	69a1      	ldr	r1, [r4, #24]
 800ecd8:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800ecdc:	430b      	orrs	r3, r1
  TIMx->CR1 = tmpcr1;
 800ecde:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800ece0:	68e3      	ldr	r3, [r4, #12]
 800ece2:	62d3      	str	r3, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800ece4:	6863      	ldr	r3, [r4, #4]
 800ece6:	6293      	str	r3, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
 800ece8:	6963      	ldr	r3, [r4, #20]
 800ecea:	6313      	str	r3, [r2, #48]	; 0x30
 800ecec:	e7d3      	b.n	800ec96 <HAL_TIM_Base_Init+0xb2>
    htim->Lock = HAL_UNLOCKED;
 800ecee:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 800ecf2:	f7f3 fc39 	bl	8002568 <HAL_TIM_Base_MspInit>
 800ecf6:	e780      	b.n	800ebfa <HAL_TIM_Base_Init+0x16>
    return HAL_ERROR;
 800ecf8:	2001      	movs	r0, #1
}
 800ecfa:	4770      	bx	lr
 800ecfc:	40010000 	.word	0x40010000

0800ed00 <HAL_TIM_Base_Start_IT>:
  if (htim->State != HAL_TIM_STATE_READY)
 800ed00:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800ed04:	2b01      	cmp	r3, #1
 800ed06:	d12f      	bne.n	800ed68 <HAL_TIM_Base_Start_IT+0x68>
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800ed08:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800ed0a:	4919      	ldr	r1, [pc, #100]	; (800ed70 <HAL_TIM_Base_Start_IT+0x70>)
  htim->State = HAL_TIM_STATE_BUSY;
 800ed0c:	2202      	movs	r2, #2
 800ed0e:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800ed12:	68da      	ldr	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800ed14:	428b      	cmp	r3, r1
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800ed16:	f042 0201 	orr.w	r2, r2, #1
 800ed1a:	60da      	str	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800ed1c:	d019      	beq.n	800ed52 <HAL_TIM_Base_Start_IT+0x52>
 800ed1e:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800ed22:	d016      	beq.n	800ed52 <HAL_TIM_Base_Start_IT+0x52>
 800ed24:	4a13      	ldr	r2, [pc, #76]	; (800ed74 <HAL_TIM_Base_Start_IT+0x74>)
 800ed26:	4293      	cmp	r3, r2
 800ed28:	d013      	beq.n	800ed52 <HAL_TIM_Base_Start_IT+0x52>
 800ed2a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800ed2e:	4293      	cmp	r3, r2
 800ed30:	d00f      	beq.n	800ed52 <HAL_TIM_Base_Start_IT+0x52>
 800ed32:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800ed36:	4293      	cmp	r3, r2
 800ed38:	d00b      	beq.n	800ed52 <HAL_TIM_Base_Start_IT+0x52>
 800ed3a:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800ed3e:	4293      	cmp	r3, r2
 800ed40:	d007      	beq.n	800ed52 <HAL_TIM_Base_Start_IT+0x52>
 800ed42:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800ed46:	4293      	cmp	r3, r2
 800ed48:	d003      	beq.n	800ed52 <HAL_TIM_Base_Start_IT+0x52>
 800ed4a:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800ed4e:	4293      	cmp	r3, r2
 800ed50:	d104      	bne.n	800ed5c <HAL_TIM_Base_Start_IT+0x5c>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800ed52:	689a      	ldr	r2, [r3, #8]
 800ed54:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800ed58:	2a06      	cmp	r2, #6
 800ed5a:	d007      	beq.n	800ed6c <HAL_TIM_Base_Start_IT+0x6c>
    __HAL_TIM_ENABLE(htim);
 800ed5c:	681a      	ldr	r2, [r3, #0]
 800ed5e:	f042 0201 	orr.w	r2, r2, #1
  return HAL_OK;
 800ed62:	2000      	movs	r0, #0
    __HAL_TIM_ENABLE(htim);
 800ed64:	601a      	str	r2, [r3, #0]
 800ed66:	4770      	bx	lr
    return HAL_ERROR;
 800ed68:	2001      	movs	r0, #1
 800ed6a:	4770      	bx	lr
  return HAL_OK;
 800ed6c:	2000      	movs	r0, #0
}
 800ed6e:	4770      	bx	lr
 800ed70:	40010000 	.word	0x40010000
 800ed74:	40000400 	.word	0x40000400

0800ed78 <HAL_TIM_PWM_MspInit>:
 800ed78:	4770      	bx	lr
 800ed7a:	bf00      	nop

0800ed7c <HAL_TIM_PWM_Init>:
  if (htim == NULL)
 800ed7c:	2800      	cmp	r0, #0
 800ed7e:	f000 8087 	beq.w	800ee90 <HAL_TIM_PWM_Init+0x114>
{
 800ed82:	b510      	push	{r4, lr}
  if (htim->State == HAL_TIM_STATE_RESET)
 800ed84:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800ed88:	4604      	mov	r4, r0
 800ed8a:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800ed8e:	2b00      	cmp	r3, #0
 800ed90:	d079      	beq.n	800ee86 <HAL_TIM_PWM_Init+0x10a>
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800ed92:	6822      	ldr	r2, [r4, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800ed94:	493f      	ldr	r1, [pc, #252]	; (800ee94 <HAL_TIM_PWM_Init+0x118>)
  htim->State = HAL_TIM_STATE_BUSY;
 800ed96:	2302      	movs	r3, #2
 800ed98:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800ed9c:	428a      	cmp	r2, r1
  tmpcr1 = TIMx->CR1;
 800ed9e:	6813      	ldr	r3, [r2, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800eda0:	d05d      	beq.n	800ee5e <HAL_TIM_PWM_Init+0xe2>
 800eda2:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 800eda6:	d031      	beq.n	800ee0c <HAL_TIM_PWM_Init+0x90>
 800eda8:	f5a1 417c 	sub.w	r1, r1, #64512	; 0xfc00
 800edac:	428a      	cmp	r2, r1
 800edae:	d02d      	beq.n	800ee0c <HAL_TIM_PWM_Init+0x90>
 800edb0:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800edb4:	428a      	cmp	r2, r1
 800edb6:	d029      	beq.n	800ee0c <HAL_TIM_PWM_Init+0x90>
 800edb8:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800edbc:	428a      	cmp	r2, r1
 800edbe:	d025      	beq.n	800ee0c <HAL_TIM_PWM_Init+0x90>
 800edc0:	f501 4178 	add.w	r1, r1, #63488	; 0xf800
 800edc4:	428a      	cmp	r2, r1
 800edc6:	d04a      	beq.n	800ee5e <HAL_TIM_PWM_Init+0xe2>
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800edc8:	f501 5170 	add.w	r1, r1, #15360	; 0x3c00
 800edcc:	428a      	cmp	r2, r1
 800edce:	d021      	beq.n	800ee14 <HAL_TIM_PWM_Init+0x98>
 800edd0:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800edd4:	428a      	cmp	r2, r1
 800edd6:	d01d      	beq.n	800ee14 <HAL_TIM_PWM_Init+0x98>
 800edd8:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800eddc:	428a      	cmp	r2, r1
 800edde:	d019      	beq.n	800ee14 <HAL_TIM_PWM_Init+0x98>
 800ede0:	f5a1 3198 	sub.w	r1, r1, #77824	; 0x13000
 800ede4:	428a      	cmp	r2, r1
 800ede6:	d015      	beq.n	800ee14 <HAL_TIM_PWM_Init+0x98>
 800ede8:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800edec:	428a      	cmp	r2, r1
 800edee:	d011      	beq.n	800ee14 <HAL_TIM_PWM_Init+0x98>
 800edf0:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800edf4:	428a      	cmp	r2, r1
 800edf6:	d00d      	beq.n	800ee14 <HAL_TIM_PWM_Init+0x98>
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800edf8:	69a0      	ldr	r0, [r4, #24]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800edfa:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800edfc:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800ee00:	4303      	orrs	r3, r0
  TIMx->CR1 = tmpcr1;
 800ee02:	6013      	str	r3, [r2, #0]
  TIMx->PSC = Structure->Prescaler;
 800ee04:	6863      	ldr	r3, [r4, #4]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800ee06:	62d1      	str	r1, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800ee08:	6293      	str	r3, [r2, #40]	; 0x28
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800ee0a:	e010      	b.n	800ee2e <HAL_TIM_PWM_Init+0xb2>
    tmpcr1 |= Structure->CounterMode;
 800ee0c:	68a1      	ldr	r1, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800ee0e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800ee12:	430b      	orrs	r3, r1
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800ee14:	6920      	ldr	r0, [r4, #16]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800ee16:	69a1      	ldr	r1, [r4, #24]
    tmpcr1 &= ~TIM_CR1_CKD;
 800ee18:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800ee1c:	4303      	orrs	r3, r0
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800ee1e:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  TIMx->ARR = (uint32_t)Structure->Period ;
 800ee22:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800ee24:	430b      	orrs	r3, r1
  TIMx->PSC = Structure->Prescaler;
 800ee26:	6861      	ldr	r1, [r4, #4]
  TIMx->CR1 = tmpcr1;
 800ee28:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800ee2a:	62d0      	str	r0, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800ee2c:	6291      	str	r1, [r2, #40]	; 0x28
  TIMx->EGR = TIM_EGR_UG;
 800ee2e:	2301      	movs	r3, #1
 800ee30:	6153      	str	r3, [r2, #20]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800ee32:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800ee36:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 800ee3a:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 800ee3e:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800ee42:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800ee46:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800ee4a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800ee4e:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800ee52:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 800ee56:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 800ee5a:	2000      	movs	r0, #0
}
 800ee5c:	bd10      	pop	{r4, pc}
    tmpcr1 |= Structure->CounterMode;
 800ee5e:	68a0      	ldr	r0, [r4, #8]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800ee60:	6921      	ldr	r1, [r4, #16]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800ee62:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800ee66:	4303      	orrs	r3, r0
    tmpcr1 &= ~TIM_CR1_CKD;
 800ee68:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800ee6c:	430b      	orrs	r3, r1
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800ee6e:	69a1      	ldr	r1, [r4, #24]
 800ee70:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800ee74:	430b      	orrs	r3, r1
  TIMx->CR1 = tmpcr1;
 800ee76:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800ee78:	68e3      	ldr	r3, [r4, #12]
 800ee7a:	62d3      	str	r3, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800ee7c:	6863      	ldr	r3, [r4, #4]
 800ee7e:	6293      	str	r3, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
 800ee80:	6963      	ldr	r3, [r4, #20]
 800ee82:	6313      	str	r3, [r2, #48]	; 0x30
 800ee84:	e7d3      	b.n	800ee2e <HAL_TIM_PWM_Init+0xb2>
    htim->Lock = HAL_UNLOCKED;
 800ee86:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_PWM_MspInit(htim);
 800ee8a:	f7ff ff75 	bl	800ed78 <HAL_TIM_PWM_MspInit>
 800ee8e:	e780      	b.n	800ed92 <HAL_TIM_PWM_Init+0x16>
    return HAL_ERROR;
 800ee90:	2001      	movs	r0, #1
}
 800ee92:	4770      	bx	lr
 800ee94:	40010000 	.word	0x40010000

0800ee98 <HAL_TIM_PWM_Start>:
 800ee98:	2900      	cmp	r1, #0
 800ee9a:	d13c      	bne.n	800ef16 <HAL_TIM_PWM_Start+0x7e>
 800ee9c:	f890 303e 	ldrb.w	r3, [r0, #62]	; 0x3e
 800eea0:	2b01      	cmp	r3, #1
 800eea2:	d140      	bne.n	800ef26 <HAL_TIM_PWM_Start+0x8e>
 800eea4:	2302      	movs	r3, #2
 800eea6:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
 800eeaa:	6803      	ldr	r3, [r0, #0]
 800eeac:	f001 011f 	and.w	r1, r1, #31
 800eeb0:	6a18      	ldr	r0, [r3, #32]
 800eeb2:	2201      	movs	r2, #1
 800eeb4:	408a      	lsls	r2, r1
 800eeb6:	ea20 0002 	bic.w	r0, r0, r2
 800eeba:	6218      	str	r0, [r3, #32]
 800eebc:	6a18      	ldr	r0, [r3, #32]
 800eebe:	492c      	ldr	r1, [pc, #176]	; (800ef70 <HAL_TIM_PWM_Start+0xd8>)
 800eec0:	4302      	orrs	r2, r0
 800eec2:	428b      	cmp	r3, r1
 800eec4:	621a      	str	r2, [r3, #32]
 800eec6:	d038      	beq.n	800ef3a <HAL_TIM_PWM_Start+0xa2>
 800eec8:	4a2a      	ldr	r2, [pc, #168]	; (800ef74 <HAL_TIM_PWM_Start+0xdc>)
 800eeca:	4293      	cmp	r3, r2
 800eecc:	d035      	beq.n	800ef3a <HAL_TIM_PWM_Start+0xa2>
 800eece:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800eed2:	d015      	beq.n	800ef00 <HAL_TIM_PWM_Start+0x68>
 800eed4:	f5a1 417c 	sub.w	r1, r1, #64512	; 0xfc00
 800eed8:	428b      	cmp	r3, r1
 800eeda:	d011      	beq.n	800ef00 <HAL_TIM_PWM_Start+0x68>
 800eedc:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800eee0:	428b      	cmp	r3, r1
 800eee2:	d00d      	beq.n	800ef00 <HAL_TIM_PWM_Start+0x68>
 800eee4:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800eee8:	428b      	cmp	r3, r1
 800eeea:	d009      	beq.n	800ef00 <HAL_TIM_PWM_Start+0x68>
 800eeec:	4293      	cmp	r3, r2
 800eeee:	d007      	beq.n	800ef00 <HAL_TIM_PWM_Start+0x68>
 800eef0:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800eef4:	4293      	cmp	r3, r2
 800eef6:	d003      	beq.n	800ef00 <HAL_TIM_PWM_Start+0x68>
 800eef8:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800eefc:	4293      	cmp	r3, r2
 800eefe:	d104      	bne.n	800ef0a <HAL_TIM_PWM_Start+0x72>
 800ef00:	689a      	ldr	r2, [r3, #8]
 800ef02:	f002 0207 	and.w	r2, r2, #7
 800ef06:	2a06      	cmp	r2, #6
 800ef08:	d020      	beq.n	800ef4c <HAL_TIM_PWM_Start+0xb4>
 800ef0a:	681a      	ldr	r2, [r3, #0]
 800ef0c:	f042 0201 	orr.w	r2, r2, #1
 800ef10:	2000      	movs	r0, #0
 800ef12:	601a      	str	r2, [r3, #0]
 800ef14:	4770      	bx	lr
 800ef16:	2904      	cmp	r1, #4
 800ef18:	d022      	beq.n	800ef60 <HAL_TIM_PWM_Start+0xc8>
 800ef1a:	2908      	cmp	r1, #8
 800ef1c:	d018      	beq.n	800ef50 <HAL_TIM_PWM_Start+0xb8>
 800ef1e:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
 800ef22:	2b01      	cmp	r3, #1
 800ef24:	d001      	beq.n	800ef2a <HAL_TIM_PWM_Start+0x92>
 800ef26:	2001      	movs	r0, #1
 800ef28:	4770      	bx	lr
 800ef2a:	2904      	cmp	r1, #4
 800ef2c:	d01c      	beq.n	800ef68 <HAL_TIM_PWM_Start+0xd0>
 800ef2e:	2908      	cmp	r1, #8
 800ef30:	d012      	beq.n	800ef58 <HAL_TIM_PWM_Start+0xc0>
 800ef32:	2302      	movs	r3, #2
 800ef34:	f880 3041 	strb.w	r3, [r0, #65]	; 0x41
 800ef38:	e7b7      	b.n	800eeaa <HAL_TIM_PWM_Start+0x12>
 800ef3a:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800ef3c:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800ef40:	645a      	str	r2, [r3, #68]	; 0x44
 800ef42:	689a      	ldr	r2, [r3, #8]
 800ef44:	f002 0207 	and.w	r2, r2, #7
 800ef48:	2a06      	cmp	r2, #6
 800ef4a:	d1de      	bne.n	800ef0a <HAL_TIM_PWM_Start+0x72>
 800ef4c:	2000      	movs	r0, #0
 800ef4e:	4770      	bx	lr
 800ef50:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
 800ef54:	2b01      	cmp	r3, #1
 800ef56:	d1e6      	bne.n	800ef26 <HAL_TIM_PWM_Start+0x8e>
 800ef58:	2302      	movs	r3, #2
 800ef5a:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
 800ef5e:	e7a4      	b.n	800eeaa <HAL_TIM_PWM_Start+0x12>
 800ef60:	f890 303f 	ldrb.w	r3, [r0, #63]	; 0x3f
 800ef64:	2b01      	cmp	r3, #1
 800ef66:	d1de      	bne.n	800ef26 <HAL_TIM_PWM_Start+0x8e>
 800ef68:	2302      	movs	r3, #2
 800ef6a:	f880 303f 	strb.w	r3, [r0, #63]	; 0x3f
 800ef6e:	e79c      	b.n	800eeaa <HAL_TIM_PWM_Start+0x12>
 800ef70:	40010000 	.word	0x40010000
 800ef74:	40010400 	.word	0x40010400

0800ef78 <HAL_TIM_PWM_Stop>:
 800ef78:	6803      	ldr	r3, [r0, #0]
 800ef7a:	b410      	push	{r4}
 800ef7c:	6a1a      	ldr	r2, [r3, #32]
 800ef7e:	f001 041f 	and.w	r4, r1, #31
 800ef82:	f04f 0c01 	mov.w	ip, #1
 800ef86:	fa0c fc04 	lsl.w	ip, ip, r4
 800ef8a:	ea22 020c 	bic.w	r2, r2, ip
 800ef8e:	621a      	str	r2, [r3, #32]
 800ef90:	4a20      	ldr	r2, [pc, #128]	; (800f014 <HAL_TIM_PWM_Stop+0x9c>)
 800ef92:	6a1c      	ldr	r4, [r3, #32]
 800ef94:	621c      	str	r4, [r3, #32]
 800ef96:	4293      	cmp	r3, r2
 800ef98:	d015      	beq.n	800efc6 <HAL_TIM_PWM_Stop+0x4e>
 800ef9a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800ef9e:	4293      	cmp	r3, r2
 800efa0:	d011      	beq.n	800efc6 <HAL_TIM_PWM_Stop+0x4e>
 800efa2:	6a1c      	ldr	r4, [r3, #32]
 800efa4:	f241 1211 	movw	r2, #4369	; 0x1111
 800efa8:	4214      	tst	r4, r2
 800efaa:	d104      	bne.n	800efb6 <HAL_TIM_PWM_Stop+0x3e>
 800efac:	6a1c      	ldr	r4, [r3, #32]
 800efae:	f240 4244 	movw	r2, #1092	; 0x444
 800efb2:	4214      	tst	r4, r2
 800efb4:	d022      	beq.n	800effc <HAL_TIM_PWM_Stop+0x84>
 800efb6:	2301      	movs	r3, #1
 800efb8:	b9a1      	cbnz	r1, 800efe4 <HAL_TIM_PWM_Stop+0x6c>
 800efba:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
 800efbe:	f85d 4b04 	ldr.w	r4, [sp], #4
 800efc2:	2000      	movs	r0, #0
 800efc4:	4770      	bx	lr
 800efc6:	6a1c      	ldr	r4, [r3, #32]
 800efc8:	f241 1211 	movw	r2, #4369	; 0x1111
 800efcc:	4214      	tst	r4, r2
 800efce:	d1e8      	bne.n	800efa2 <HAL_TIM_PWM_Stop+0x2a>
 800efd0:	6a1c      	ldr	r4, [r3, #32]
 800efd2:	f240 4244 	movw	r2, #1092	; 0x444
 800efd6:	4214      	tst	r4, r2
 800efd8:	d1e3      	bne.n	800efa2 <HAL_TIM_PWM_Stop+0x2a>
 800efda:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800efdc:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800efe0:	645a      	str	r2, [r3, #68]	; 0x44
 800efe2:	e7de      	b.n	800efa2 <HAL_TIM_PWM_Stop+0x2a>
 800efe4:	2904      	cmp	r1, #4
 800efe6:	d00e      	beq.n	800f006 <HAL_TIM_PWM_Stop+0x8e>
 800efe8:	2908      	cmp	r1, #8
 800efea:	bf0c      	ite	eq
 800efec:	f880 3040 	strbeq.w	r3, [r0, #64]	; 0x40
 800eff0:	f880 3041 	strbne.w	r3, [r0, #65]	; 0x41
 800eff4:	f85d 4b04 	ldr.w	r4, [sp], #4
 800eff8:	2000      	movs	r0, #0
 800effa:	4770      	bx	lr
 800effc:	681a      	ldr	r2, [r3, #0]
 800effe:	f022 0201 	bic.w	r2, r2, #1
 800f002:	601a      	str	r2, [r3, #0]
 800f004:	e7d7      	b.n	800efb6 <HAL_TIM_PWM_Stop+0x3e>
 800f006:	f880 303f 	strb.w	r3, [r0, #63]	; 0x3f
 800f00a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800f00e:	2000      	movs	r0, #0
 800f010:	4770      	bx	lr
 800f012:	bf00      	nop
 800f014:	40010000 	.word	0x40010000

0800f018 <HAL_TIM_PWM_ConfigChannel>:
  __HAL_LOCK(htim);
 800f018:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800f01c:	2b01      	cmp	r3, #1
 800f01e:	f000 80d2 	beq.w	800f1c6 <HAL_TIM_PWM_ConfigChannel+0x1ae>
 800f022:	2301      	movs	r3, #1
{
 800f024:	b570      	push	{r4, r5, r6, lr}
 800f026:	4684      	mov	ip, r0
  __HAL_LOCK(htim);
 800f028:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  switch (Channel)
 800f02c:	2a0c      	cmp	r2, #12
 800f02e:	d808      	bhi.n	800f042 <HAL_TIM_PWM_ConfigChannel+0x2a>
 800f030:	e8df f002 	tbb	[pc, r2]
 800f034:	0707073e 	.word	0x0707073e
 800f038:	0707076b 	.word	0x0707076b
 800f03c:	0707079b 	.word	0x0707079b
 800f040:	0c          	.byte	0x0c
 800f041:	00          	.byte	0x00
  __HAL_UNLOCK(htim);
 800f042:	2300      	movs	r3, #0
 800f044:	f88c 303c 	strb.w	r3, [ip, #60]	; 0x3c
  switch (Channel)
 800f048:	2001      	movs	r0, #1
}
 800f04a:	bd70      	pop	{r4, r5, r6, pc}
      TIM_OC4_SetConfig(htim->Instance, sConfig);
 800f04c:	6803      	ldr	r3, [r0, #0]
  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC4M;
  tmpccmrx &= ~TIM_CCMR2_CC4S;

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800f04e:	680d      	ldr	r5, [r1, #0]
  TIMx->CCER &= ~TIM_CCER_CC4E;
 800f050:	6a1a      	ldr	r2, [r3, #32]
 800f052:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 800f056:	621a      	str	r2, [r3, #32]
  tmpccer = TIMx->CCER;
 800f058:	6a1a      	ldr	r2, [r3, #32]
  tmpcr2 =  TIMx->CR2;
 800f05a:	685c      	ldr	r4, [r3, #4]
  tmpccmrx = TIMx->CCMR2;
 800f05c:	69d8      	ldr	r0, [r3, #28]
  tmpccmrx &= ~TIM_CCMR2_CC4S;
 800f05e:	f420 40e6 	bic.w	r0, r0, #29440	; 0x7300
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800f062:	ea40 2005 	orr.w	r0, r0, r5, lsl #8

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC4P;
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 12U);
 800f066:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC4P;
 800f068:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
  tmpccer |= (OC_Config->OCPolarity << 12U);
 800f06c:	ea42 3205 	orr.w	r2, r2, r5, lsl #12

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800f070:	4d70      	ldr	r5, [pc, #448]	; (800f234 <HAL_TIM_PWM_ConfigChannel+0x21c>)
 800f072:	42ab      	cmp	r3, r5
 800f074:	f000 80c8 	beq.w	800f208 <HAL_TIM_PWM_ConfigChannel+0x1f0>
 800f078:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800f07c:	42ab      	cmp	r3, r5
 800f07e:	f000 80c3 	beq.w	800f208 <HAL_TIM_PWM_ConfigChannel+0x1f0>
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 800f082:	605c      	str	r4, [r3, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 800f084:	61d8      	str	r0, [r3, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR4 = OC_Config->Pulse;
 800f086:	6848      	ldr	r0, [r1, #4]
 800f088:	6418      	str	r0, [r3, #64]	; 0x40

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 800f08a:	621a      	str	r2, [r3, #32]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 800f08c:	69da      	ldr	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 800f08e:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 800f090:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800f094:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC4FE;
 800f096:	69da      	ldr	r2, [r3, #28]
 800f098:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800f09c:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 800f09e:	69da      	ldr	r2, [r3, #28]
 800f0a0:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 800f0a4:	61da      	str	r2, [r3, #28]
  __HAL_UNLOCK(htim);
 800f0a6:	2300      	movs	r3, #0
 800f0a8:	f88c 303c 	strb.w	r3, [ip, #60]	; 0x3c
  HAL_StatusTypeDef status = HAL_OK;
 800f0ac:	2000      	movs	r0, #0
}
 800f0ae:	bd70      	pop	{r4, r5, r6, pc}
      TIM_OC1_SetConfig(htim->Instance, sConfig);
 800f0b0:	6803      	ldr	r3, [r0, #0]
  tmpccmrx |= OC_Config->OCMode;
 800f0b2:	680d      	ldr	r5, [r1, #0]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800f0b4:	6a1a      	ldr	r2, [r3, #32]
 800f0b6:	f022 0201 	bic.w	r2, r2, #1
 800f0ba:	621a      	str	r2, [r3, #32]
  tmpccer = TIMx->CCER;
 800f0bc:	6a1a      	ldr	r2, [r3, #32]
  tmpcr2 =  TIMx->CR2;
 800f0be:	685c      	ldr	r4, [r3, #4]
  tmpccmrx = TIMx->CCMR1;
 800f0c0:	6998      	ldr	r0, [r3, #24]
  tmpccmrx &= ~TIM_CCMR1_CC1S;
 800f0c2:	f020 0073 	bic.w	r0, r0, #115	; 0x73
  tmpccmrx |= OC_Config->OCMode;
 800f0c6:	4328      	orrs	r0, r5
  tmpccer |= OC_Config->OCPolarity;
 800f0c8:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC1P;
 800f0ca:	f022 0202 	bic.w	r2, r2, #2
  tmpccer |= OC_Config->OCPolarity;
 800f0ce:	432a      	orrs	r2, r5
  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_1))
 800f0d0:	4d58      	ldr	r5, [pc, #352]	; (800f234 <HAL_TIM_PWM_ConfigChannel+0x21c>)
 800f0d2:	42ab      	cmp	r3, r5
 800f0d4:	d079      	beq.n	800f1ca <HAL_TIM_PWM_ConfigChannel+0x1b2>
 800f0d6:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800f0da:	42ab      	cmp	r3, r5
 800f0dc:	d075      	beq.n	800f1ca <HAL_TIM_PWM_ConfigChannel+0x1b2>
  TIMx->CR2 = tmpcr2;
 800f0de:	605c      	str	r4, [r3, #4]
  TIMx->CCMR1 = tmpccmrx;
 800f0e0:	6198      	str	r0, [r3, #24]
  TIMx->CCR1 = OC_Config->Pulse;
 800f0e2:	6848      	ldr	r0, [r1, #4]
 800f0e4:	6358      	str	r0, [r3, #52]	; 0x34
  TIMx->CCER = tmpccer;
 800f0e6:	621a      	str	r2, [r3, #32]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 800f0e8:	699a      	ldr	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 800f0ea:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 800f0ec:	f042 0208 	orr.w	r2, r2, #8
 800f0f0:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC1FE;
 800f0f2:	699a      	ldr	r2, [r3, #24]
 800f0f4:	f022 0204 	bic.w	r2, r2, #4
 800f0f8:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 800f0fa:	699a      	ldr	r2, [r3, #24]
 800f0fc:	430a      	orrs	r2, r1
 800f0fe:	619a      	str	r2, [r3, #24]
  __HAL_UNLOCK(htim);
 800f100:	2300      	movs	r3, #0
 800f102:	f88c 303c 	strb.w	r3, [ip, #60]	; 0x3c
  HAL_StatusTypeDef status = HAL_OK;
 800f106:	2000      	movs	r0, #0
}
 800f108:	bd70      	pop	{r4, r5, r6, pc}
      TIM_OC2_SetConfig(htim->Instance, sConfig);
 800f10a:	6803      	ldr	r3, [r0, #0]
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800f10c:	680d      	ldr	r5, [r1, #0]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800f10e:	6a1a      	ldr	r2, [r3, #32]
 800f110:	f022 0210 	bic.w	r2, r2, #16
 800f114:	621a      	str	r2, [r3, #32]
  tmpccer = TIMx->CCER;
 800f116:	6a1a      	ldr	r2, [r3, #32]
  tmpcr2 =  TIMx->CR2;
 800f118:	685c      	ldr	r4, [r3, #4]
  tmpccmrx = TIMx->CCMR1;
 800f11a:	6998      	ldr	r0, [r3, #24]
  tmpccmrx &= ~TIM_CCMR1_CC2S;
 800f11c:	f420 40e6 	bic.w	r0, r0, #29440	; 0x7300
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800f120:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
  tmpccer |= (OC_Config->OCPolarity << 4U);
 800f124:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC2P;
 800f126:	f022 0220 	bic.w	r2, r2, #32
  tmpccer |= (OC_Config->OCPolarity << 4U);
 800f12a:	ea42 1205 	orr.w	r2, r2, r5, lsl #4
  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_2))
 800f12e:	4d41      	ldr	r5, [pc, #260]	; (800f234 <HAL_TIM_PWM_ConfigChannel+0x21c>)
 800f130:	42ab      	cmp	r3, r5
 800f132:	d059      	beq.n	800f1e8 <HAL_TIM_PWM_ConfigChannel+0x1d0>
 800f134:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800f138:	42ab      	cmp	r3, r5
 800f13a:	d055      	beq.n	800f1e8 <HAL_TIM_PWM_ConfigChannel+0x1d0>
  TIMx->CR2 = tmpcr2;
 800f13c:	605c      	str	r4, [r3, #4]
  TIMx->CCMR1 = tmpccmrx;
 800f13e:	6198      	str	r0, [r3, #24]
  TIMx->CCR2 = OC_Config->Pulse;
 800f140:	6848      	ldr	r0, [r1, #4]
 800f142:	6398      	str	r0, [r3, #56]	; 0x38
  TIMx->CCER = tmpccer;
 800f144:	621a      	str	r2, [r3, #32]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 800f146:	699a      	ldr	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 800f148:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 800f14a:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800f14e:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC2FE;
 800f150:	699a      	ldr	r2, [r3, #24]
 800f152:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800f156:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 800f158:	699a      	ldr	r2, [r3, #24]
 800f15a:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 800f15e:	619a      	str	r2, [r3, #24]
  __HAL_UNLOCK(htim);
 800f160:	2300      	movs	r3, #0
 800f162:	f88c 303c 	strb.w	r3, [ip, #60]	; 0x3c
  HAL_StatusTypeDef status = HAL_OK;
 800f166:	2000      	movs	r0, #0
}
 800f168:	bd70      	pop	{r4, r5, r6, pc}
      TIM_OC3_SetConfig(htim->Instance, sConfig);
 800f16a:	6803      	ldr	r3, [r0, #0]
  tmpccmrx |= OC_Config->OCMode;
 800f16c:	680d      	ldr	r5, [r1, #0]
  TIMx->CCER &= ~TIM_CCER_CC3E;
 800f16e:	6a1a      	ldr	r2, [r3, #32]
 800f170:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800f174:	621a      	str	r2, [r3, #32]
  tmpccer = TIMx->CCER;
 800f176:	6a1a      	ldr	r2, [r3, #32]
  tmpcr2 =  TIMx->CR2;
 800f178:	685c      	ldr	r4, [r3, #4]
  tmpccmrx = TIMx->CCMR2;
 800f17a:	69d8      	ldr	r0, [r3, #28]
  tmpccmrx &= ~TIM_CCMR2_CC3S;
 800f17c:	f020 0073 	bic.w	r0, r0, #115	; 0x73
  tmpccmrx |= OC_Config->OCMode;
 800f180:	4328      	orrs	r0, r5
  tmpccer |= (OC_Config->OCPolarity << 8U);
 800f182:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC3P;
 800f184:	f422 7200 	bic.w	r2, r2, #512	; 0x200
  tmpccer |= (OC_Config->OCPolarity << 8U);
 800f188:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_3))
 800f18c:	4d29      	ldr	r5, [pc, #164]	; (800f234 <HAL_TIM_PWM_ConfigChannel+0x21c>)
 800f18e:	42ab      	cmp	r3, r5
 800f190:	d040      	beq.n	800f214 <HAL_TIM_PWM_ConfigChannel+0x1fc>
 800f192:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800f196:	42ab      	cmp	r3, r5
 800f198:	d03c      	beq.n	800f214 <HAL_TIM_PWM_ConfigChannel+0x1fc>
  TIMx->CR2 = tmpcr2;
 800f19a:	605c      	str	r4, [r3, #4]
  TIMx->CCMR2 = tmpccmrx;
 800f19c:	61d8      	str	r0, [r3, #28]
  TIMx->CCR3 = OC_Config->Pulse;
 800f19e:	6848      	ldr	r0, [r1, #4]
 800f1a0:	63d8      	str	r0, [r3, #60]	; 0x3c
  TIMx->CCER = tmpccer;
 800f1a2:	621a      	str	r2, [r3, #32]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 800f1a4:	69da      	ldr	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 800f1a6:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 800f1a8:	f042 0208 	orr.w	r2, r2, #8
 800f1ac:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC3FE;
 800f1ae:	69da      	ldr	r2, [r3, #28]
 800f1b0:	f022 0204 	bic.w	r2, r2, #4
 800f1b4:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 800f1b6:	69da      	ldr	r2, [r3, #28]
 800f1b8:	430a      	orrs	r2, r1
 800f1ba:	61da      	str	r2, [r3, #28]
  __HAL_UNLOCK(htim);
 800f1bc:	2300      	movs	r3, #0
 800f1be:	f88c 303c 	strb.w	r3, [ip, #60]	; 0x3c
  HAL_StatusTypeDef status = HAL_OK;
 800f1c2:	2000      	movs	r0, #0
}
 800f1c4:	bd70      	pop	{r4, r5, r6, pc}
  __HAL_LOCK(htim);
 800f1c6:	2002      	movs	r0, #2
}
 800f1c8:	4770      	bx	lr
    tmpccer |= OC_Config->OCNPolarity;
 800f1ca:	68cd      	ldr	r5, [r1, #12]
    tmpccer &= ~TIM_CCER_CC1NP;
 800f1cc:	f022 0208 	bic.w	r2, r2, #8
    tmpccer |= OC_Config->OCNPolarity;
 800f1d0:	432a      	orrs	r2, r5
    tmpcr2 |= OC_Config->OCNIdleState;
 800f1d2:	e9d1 6505 	ldrd	r6, r5, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS1N;
 800f1d6:	f424 7440 	bic.w	r4, r4, #768	; 0x300
    tmpcr2 |= OC_Config->OCNIdleState;
 800f1da:	ea46 0e05 	orr.w	lr, r6, r5
    tmpccer &= ~TIM_CCER_CC1NE;
 800f1de:	f022 0204 	bic.w	r2, r2, #4
    tmpcr2 |= OC_Config->OCNIdleState;
 800f1e2:	ea4e 0404 	orr.w	r4, lr, r4
 800f1e6:	e77a      	b.n	800f0de <HAL_TIM_PWM_ConfigChannel+0xc6>
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 800f1e8:	68cd      	ldr	r5, [r1, #12]
    tmpccer &= ~TIM_CCER_CC2NP;
 800f1ea:	f022 0280 	bic.w	r2, r2, #128	; 0x80
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 800f1ee:	ea42 1205 	orr.w	r2, r2, r5, lsl #4
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 800f1f2:	e9d1 6505 	ldrd	r6, r5, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS2N;
 800f1f6:	f424 6440 	bic.w	r4, r4, #3072	; 0xc00
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 800f1fa:	ea46 0e05 	orr.w	lr, r6, r5
    tmpccer &= ~TIM_CCER_CC2NE;
 800f1fe:	f022 0240 	bic.w	r2, r2, #64	; 0x40
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 800f202:	ea44 048e 	orr.w	r4, r4, lr, lsl #2
 800f206:	e799      	b.n	800f13c <HAL_TIM_PWM_ConfigChannel+0x124>
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
 800f208:	694d      	ldr	r5, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS4;
 800f20a:	f424 4480 	bic.w	r4, r4, #16384	; 0x4000
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
 800f20e:	ea44 1485 	orr.w	r4, r4, r5, lsl #6
 800f212:	e736      	b.n	800f082 <HAL_TIM_PWM_ConfigChannel+0x6a>
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 800f214:	68cd      	ldr	r5, [r1, #12]
    tmpccer &= ~TIM_CCER_CC3NP;
 800f216:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 800f21a:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 800f21e:	e9d1 6505 	ldrd	r6, r5, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS3N;
 800f222:	f424 5440 	bic.w	r4, r4, #12288	; 0x3000
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 800f226:	ea46 0e05 	orr.w	lr, r6, r5
    tmpccer &= ~TIM_CCER_CC3NE;
 800f22a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 800f22e:	ea44 140e 	orr.w	r4, r4, lr, lsl #4
 800f232:	e7b2      	b.n	800f19a <HAL_TIM_PWM_ConfigChannel+0x182>
 800f234:	40010000 	.word	0x40010000

0800f238 <HAL_TIM_ConfigClockSource>:
  __HAL_LOCK(htim);
 800f238:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800f23c:	2b01      	cmp	r3, #1
 800f23e:	d075      	beq.n	800f32c <HAL_TIM_ConfigClockSource+0xf4>
 800f240:	4602      	mov	r2, r0
{
 800f242:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800f244:	2302      	movs	r3, #2
  tmpsmcr = htim->Instance->SMCR;
 800f246:	6804      	ldr	r4, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800f248:	f882 303d 	strb.w	r3, [r2, #61]	; 0x3d
  __HAL_LOCK(htim);
 800f24c:	2001      	movs	r0, #1
 800f24e:	f882 003c 	strb.w	r0, [r2, #60]	; 0x3c
  tmpsmcr = htim->Instance->SMCR;
 800f252:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800f254:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800f258:	f023 0377 	bic.w	r3, r3, #119	; 0x77
  htim->Instance->SMCR = tmpsmcr;
 800f25c:	60a3      	str	r3, [r4, #8]
  switch (sClockSourceConfig->ClockSource)
 800f25e:	680b      	ldr	r3, [r1, #0]
 800f260:	2b60      	cmp	r3, #96	; 0x60
 800f262:	d065      	beq.n	800f330 <HAL_TIM_ConfigClockSource+0xf8>
 800f264:	d824      	bhi.n	800f2b0 <HAL_TIM_ConfigClockSource+0x78>
 800f266:	2b40      	cmp	r3, #64	; 0x40
 800f268:	d07c      	beq.n	800f364 <HAL_TIM_ConfigClockSource+0x12c>
 800f26a:	d94b      	bls.n	800f304 <HAL_TIM_ConfigClockSource+0xcc>
 800f26c:	2b50      	cmp	r3, #80	; 0x50
 800f26e:	d117      	bne.n	800f2a0 <HAL_TIM_ConfigClockSource+0x68>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800f270:	684b      	ldr	r3, [r1, #4]
 800f272:	68cd      	ldr	r5, [r1, #12]
{
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 1: Reset the CC1E Bit */
  tmpccer = TIMx->CCER;
 800f274:	6a21      	ldr	r1, [r4, #32]
  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
  tmpccmr1 |= (TIM_ICFilter << 4U);

  /* Select the Polarity and set the CC1E Bit */
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800f276:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800f27a:	4319      	orrs	r1, r3
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800f27c:	6a23      	ldr	r3, [r4, #32]
 800f27e:	f023 0301 	bic.w	r3, r3, #1
 800f282:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800f284:	69a3      	ldr	r3, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800f286:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800f28a:	ea43 1305 	orr.w	r3, r3, r5, lsl #4

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1;
 800f28e:	61a3      	str	r3, [r4, #24]
  TIMx->CCER = tmpccer;
 800f290:	6221      	str	r1, [r4, #32]
static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint32_t InputTriggerSource)
{
  uint32_t tmpsmcr;

  /* Get the TIMx SMCR register value */
  tmpsmcr = TIMx->SMCR;
 800f292:	68a3      	ldr	r3, [r4, #8]
  /* Reset the TS Bits */
  tmpsmcr &= ~TIM_SMCR_TS;
 800f294:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  /* Set the Input Trigger source and the slave mode*/
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800f298:	f043 0357 	orr.w	r3, r3, #87	; 0x57
  HAL_StatusTypeDef status = HAL_OK;
 800f29c:	2000      	movs	r0, #0
  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800f29e:	60a3      	str	r3, [r4, #8]
  htim->State = HAL_TIM_STATE_READY;
 800f2a0:	2101      	movs	r1, #1
  __HAL_UNLOCK(htim);
 800f2a2:	2300      	movs	r3, #0
  htim->State = HAL_TIM_STATE_READY;
 800f2a4:	f882 103d 	strb.w	r1, [r2, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800f2a8:	f882 303c 	strb.w	r3, [r2, #60]	; 0x3c
}
 800f2ac:	bc30      	pop	{r4, r5}
 800f2ae:	4770      	bx	lr
  switch (sClockSourceConfig->ClockSource)
 800f2b0:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800f2b4:	d038      	beq.n	800f328 <HAL_TIM_ConfigClockSource+0xf0>
 800f2b6:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800f2ba:	d110      	bne.n	800f2de <HAL_TIM_ConfigClockSource+0xa6>

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800f2bc:	e9d1 5301 	ldrd	r5, r3, [r1, #4]
  tmpsmcr = TIMx->SMCR;
 800f2c0:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800f2c2:	432b      	orrs	r3, r5
 800f2c4:	68cd      	ldr	r5, [r1, #12]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800f2c6:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800f2ca:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 800f2ce:	430b      	orrs	r3, r1

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800f2d0:	60a3      	str	r3, [r4, #8]
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800f2d2:	68a3      	ldr	r3, [r4, #8]
 800f2d4:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
  HAL_StatusTypeDef status = HAL_OK;
 800f2d8:	2000      	movs	r0, #0
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800f2da:	60a3      	str	r3, [r4, #8]
      break;
 800f2dc:	e7e0      	b.n	800f2a0 <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800f2de:	2b70      	cmp	r3, #112	; 0x70
 800f2e0:	d1de      	bne.n	800f2a0 <HAL_TIM_ConfigClockSource+0x68>
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800f2e2:	e9d1 5301 	ldrd	r5, r3, [r1, #4]
  tmpsmcr = TIMx->SMCR;
 800f2e6:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800f2e8:	432b      	orrs	r3, r5
 800f2ea:	68cd      	ldr	r5, [r1, #12]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800f2ec:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800f2f0:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 800f2f4:	430b      	orrs	r3, r1
  TIMx->SMCR = tmpsmcr;
 800f2f6:	60a3      	str	r3, [r4, #8]
      tmpsmcr = htim->Instance->SMCR;
 800f2f8:	68a3      	ldr	r3, [r4, #8]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 800f2fa:	f043 0377 	orr.w	r3, r3, #119	; 0x77
  HAL_StatusTypeDef status = HAL_OK;
 800f2fe:	2000      	movs	r0, #0
      htim->Instance->SMCR = tmpsmcr;
 800f300:	60a3      	str	r3, [r4, #8]
      break;
 800f302:	e7cd      	b.n	800f2a0 <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800f304:	2b20      	cmp	r3, #32
 800f306:	d002      	beq.n	800f30e <HAL_TIM_ConfigClockSource+0xd6>
 800f308:	d90a      	bls.n	800f320 <HAL_TIM_ConfigClockSource+0xe8>
 800f30a:	2b30      	cmp	r3, #48	; 0x30
 800f30c:	d1c8      	bne.n	800f2a0 <HAL_TIM_ConfigClockSource+0x68>
  tmpsmcr = TIMx->SMCR;
 800f30e:	68a1      	ldr	r1, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800f310:	f021 0170 	bic.w	r1, r1, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800f314:	430b      	orrs	r3, r1
 800f316:	f043 0307 	orr.w	r3, r3, #7
  HAL_StatusTypeDef status = HAL_OK;
 800f31a:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800f31c:	60a3      	str	r3, [r4, #8]
}
 800f31e:	e7bf      	b.n	800f2a0 <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800f320:	f033 0110 	bics.w	r1, r3, #16
 800f324:	d1bc      	bne.n	800f2a0 <HAL_TIM_ConfigClockSource+0x68>
 800f326:	e7f2      	b.n	800f30e <HAL_TIM_ConfigClockSource+0xd6>
  HAL_StatusTypeDef status = HAL_OK;
 800f328:	2000      	movs	r0, #0
 800f32a:	e7b9      	b.n	800f2a0 <HAL_TIM_ConfigClockSource+0x68>
  __HAL_LOCK(htim);
 800f32c:	2002      	movs	r0, #2
}
 800f32e:	4770      	bx	lr
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800f330:	6a23      	ldr	r3, [r4, #32]
      TIM_TI2_ConfigInputStage(htim->Instance,
 800f332:	6848      	ldr	r0, [r1, #4]
 800f334:	68cd      	ldr	r5, [r1, #12]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800f336:	f023 0310 	bic.w	r3, r3, #16
 800f33a:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800f33c:	69a1      	ldr	r1, [r4, #24]
  tmpccer = TIMx->CCER;
 800f33e:	6a23      	ldr	r3, [r4, #32]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 800f340:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 800f344:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
  tmpccer |= (TIM_ICPolarity << 4U);
 800f348:	ea43 1300 	orr.w	r3, r3, r0, lsl #4
  tmpccmr1 |= (TIM_ICFilter << 12U);
 800f34c:	ea41 3105 	orr.w	r1, r1, r5, lsl #12
  TIMx->CCMR1 = tmpccmr1 ;
 800f350:	61a1      	str	r1, [r4, #24]
  TIMx->CCER = tmpccer;
 800f352:	6223      	str	r3, [r4, #32]
  tmpsmcr = TIMx->SMCR;
 800f354:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800f356:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800f35a:	f043 0367 	orr.w	r3, r3, #103	; 0x67
  HAL_StatusTypeDef status = HAL_OK;
 800f35e:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800f360:	60a3      	str	r3, [r4, #8]
}
 800f362:	e79d      	b.n	800f2a0 <HAL_TIM_ConfigClockSource+0x68>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800f364:	684b      	ldr	r3, [r1, #4]
 800f366:	68cd      	ldr	r5, [r1, #12]
  tmpccer = TIMx->CCER;
 800f368:	6a21      	ldr	r1, [r4, #32]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800f36a:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800f36e:	4319      	orrs	r1, r3
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800f370:	6a23      	ldr	r3, [r4, #32]
 800f372:	f023 0301 	bic.w	r3, r3, #1
 800f376:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800f378:	69a3      	ldr	r3, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800f37a:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800f37e:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  TIMx->CCMR1 = tmpccmr1;
 800f382:	61a3      	str	r3, [r4, #24]
  TIMx->CCER = tmpccer;
 800f384:	6221      	str	r1, [r4, #32]
  tmpsmcr = TIMx->SMCR;
 800f386:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800f388:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800f38c:	f043 0347 	orr.w	r3, r3, #71	; 0x47
  HAL_StatusTypeDef status = HAL_OK;
 800f390:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800f392:	60a3      	str	r3, [r4, #8]
}
 800f394:	e784      	b.n	800f2a0 <HAL_TIM_ConfigClockSource+0x68>
 800f396:	bf00      	nop

0800f398 <HAL_TIM_SlaveConfigSynchro>:
  __HAL_LOCK(htim);
 800f398:	f890 203c 	ldrb.w	r2, [r0, #60]	; 0x3c
 800f39c:	2a01      	cmp	r2, #1
 800f39e:	d050      	beq.n	800f442 <HAL_TIM_SlaveConfigSynchro+0xaa>
 800f3a0:	4603      	mov	r3, r0
{
 800f3a2:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800f3a4:	2202      	movs	r2, #2
  tmpsmcr = htim->Instance->SMCR;
 800f3a6:	6804      	ldr	r4, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800f3a8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
  __HAL_LOCK(htim);
 800f3ac:	2001      	movs	r0, #1
 800f3ae:	f883 003c 	strb.w	r0, [r3, #60]	; 0x3c
  tmpsmcr = htim->Instance->SMCR;
 800f3b2:	68a2      	ldr	r2, [r4, #8]
  tmpsmcr |= sSlaveConfig->InputTrigger;
 800f3b4:	6848      	ldr	r0, [r1, #4]
  tmpsmcr |= sSlaveConfig->SlaveMode;
 800f3b6:	680d      	ldr	r5, [r1, #0]
  tmpsmcr &= ~TIM_SMCR_TS;
 800f3b8:	f022 0270 	bic.w	r2, r2, #112	; 0x70
  tmpsmcr |= sSlaveConfig->InputTrigger;
 800f3bc:	4302      	orrs	r2, r0
  tmpsmcr &= ~TIM_SMCR_SMS;
 800f3be:	f022 0207 	bic.w	r2, r2, #7
  tmpsmcr |= sSlaveConfig->SlaveMode;
 800f3c2:	432a      	orrs	r2, r5
  switch (sSlaveConfig->InputTrigger)
 800f3c4:	2850      	cmp	r0, #80	; 0x50
  htim->Instance->SMCR = tmpsmcr;
 800f3c6:	60a2      	str	r2, [r4, #8]
  switch (sSlaveConfig->InputTrigger)
 800f3c8:	d060      	beq.n	800f48c <HAL_TIM_SlaveConfigSynchro+0xf4>
 800f3ca:	d90f      	bls.n	800f3ec <HAL_TIM_SlaveConfigSynchro+0x54>
 800f3cc:	2860      	cmp	r0, #96	; 0x60
 800f3ce:	d03a      	beq.n	800f446 <HAL_TIM_SlaveConfigSynchro+0xae>
 800f3d0:	2870      	cmp	r0, #112	; 0x70
 800f3d2:	d10e      	bne.n	800f3f2 <HAL_TIM_SlaveConfigSynchro+0x5a>
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800f3d4:	e9d1 5202 	ldrd	r5, r2, [r1, #8]
  tmpsmcr = TIMx->SMCR;
 800f3d8:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800f3da:	432a      	orrs	r2, r5
 800f3dc:	690d      	ldr	r5, [r1, #16]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800f3de:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800f3e2:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 800f3e6:	430a      	orrs	r2, r1
  TIMx->SMCR = tmpsmcr;
 800f3e8:	60a2      	str	r2, [r4, #8]
 800f3ea:	e00f      	b.n	800f40c <HAL_TIM_SlaveConfigSynchro+0x74>
  switch (sSlaveConfig->InputTrigger)
 800f3ec:	2840      	cmp	r0, #64	; 0x40
 800f3ee:	d03d      	beq.n	800f46c <HAL_TIM_SlaveConfigSynchro+0xd4>
 800f3f0:	d907      	bls.n	800f402 <HAL_TIM_SlaveConfigSynchro+0x6a>
    htim->State = HAL_TIM_STATE_READY;
 800f3f2:	2001      	movs	r0, #1
    __HAL_UNLOCK(htim);
 800f3f4:	2200      	movs	r2, #0
    htim->State = HAL_TIM_STATE_READY;
 800f3f6:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_UNLOCK(htim);
 800f3fa:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
}
 800f3fe:	bc30      	pop	{r4, r5}
 800f400:	4770      	bx	lr
  switch (sSlaveConfig->InputTrigger)
 800f402:	2820      	cmp	r0, #32
 800f404:	d002      	beq.n	800f40c <HAL_TIM_SlaveConfigSynchro+0x74>
 800f406:	d912      	bls.n	800f42e <HAL_TIM_SlaveConfigSynchro+0x96>
 800f408:	2830      	cmp	r0, #48	; 0x30
 800f40a:	d1f2      	bne.n	800f3f2 <HAL_TIM_SlaveConfigSynchro+0x5a>
  __HAL_TIM_DISABLE_IT(htim, TIM_IT_TRIGGER);
 800f40c:	68e2      	ldr	r2, [r4, #12]
 800f40e:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800f412:	60e2      	str	r2, [r4, #12]
  __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_TRIGGER);
 800f414:	68e2      	ldr	r2, [r4, #12]
  __HAL_UNLOCK(htim);
 800f416:	2100      	movs	r1, #0
  htim->State = HAL_TIM_STATE_READY;
 800f418:	2501      	movs	r5, #1
  __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_TRIGGER);
 800f41a:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 800f41e:	60e2      	str	r2, [r4, #12]
  htim->State = HAL_TIM_STATE_READY;
 800f420:	f883 503d 	strb.w	r5, [r3, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800f424:	f883 103c 	strb.w	r1, [r3, #60]	; 0x3c
  return HAL_OK;
 800f428:	4608      	mov	r0, r1
}
 800f42a:	bc30      	pop	{r4, r5}
 800f42c:	4770      	bx	lr
  switch (sSlaveConfig->InputTrigger)
 800f42e:	f030 0210 	bics.w	r2, r0, #16
 800f432:	d0eb      	beq.n	800f40c <HAL_TIM_SlaveConfigSynchro+0x74>
    htim->State = HAL_TIM_STATE_READY;
 800f434:	2001      	movs	r0, #1
    __HAL_UNLOCK(htim);
 800f436:	2200      	movs	r2, #0
    htim->State = HAL_TIM_STATE_READY;
 800f438:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_UNLOCK(htim);
 800f43c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    return HAL_ERROR;
 800f440:	e7dd      	b.n	800f3fe <HAL_TIM_SlaveConfigSynchro+0x66>
  __HAL_LOCK(htim);
 800f442:	2002      	movs	r0, #2
}
 800f444:	4770      	bx	lr
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800f446:	6a22      	ldr	r2, [r4, #32]
      TIM_TI2_ConfigInputStage(htim->Instance,
 800f448:	6888      	ldr	r0, [r1, #8]
 800f44a:	690d      	ldr	r5, [r1, #16]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800f44c:	f022 0210 	bic.w	r2, r2, #16
 800f450:	6222      	str	r2, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800f452:	69a1      	ldr	r1, [r4, #24]
  tmpccer = TIMx->CCER;
 800f454:	6a22      	ldr	r2, [r4, #32]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 800f456:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 800f45a:	f022 02a0 	bic.w	r2, r2, #160	; 0xa0
  tmpccmr1 |= (TIM_ICFilter << 12U);
 800f45e:	ea41 3105 	orr.w	r1, r1, r5, lsl #12
  tmpccer |= (TIM_ICPolarity << 4U);
 800f462:	ea42 1200 	orr.w	r2, r2, r0, lsl #4
  TIMx->CCMR1 = tmpccmr1 ;
 800f466:	61a1      	str	r1, [r4, #24]
  TIMx->CCER = tmpccer;
 800f468:	6222      	str	r2, [r4, #32]
 800f46a:	e7cf      	b.n	800f40c <HAL_TIM_SlaveConfigSynchro+0x74>
      if (sSlaveConfig->SlaveMode == TIM_SLAVEMODE_GATED)
 800f46c:	2d05      	cmp	r5, #5
 800f46e:	d0c0      	beq.n	800f3f2 <HAL_TIM_SlaveConfigSynchro+0x5a>
      tmpccer = htim->Instance->CCER;
 800f470:	6a20      	ldr	r0, [r4, #32]
      htim->Instance->CCER &= ~TIM_CCER_CC1E;
 800f472:	6a22      	ldr	r2, [r4, #32]
      tmpccmr1 |= ((sSlaveConfig->TriggerFilter) << 4U);
 800f474:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCER &= ~TIM_CCER_CC1E;
 800f476:	f022 0201 	bic.w	r2, r2, #1
 800f47a:	6222      	str	r2, [r4, #32]
      tmpccmr1 = htim->Instance->CCMR1;
 800f47c:	69a2      	ldr	r2, [r4, #24]
      tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800f47e:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
      tmpccmr1 |= ((sSlaveConfig->TriggerFilter) << 4U);
 800f482:	ea42 1201 	orr.w	r2, r2, r1, lsl #4
      htim->Instance->CCMR1 = tmpccmr1;
 800f486:	61a2      	str	r2, [r4, #24]
      htim->Instance->CCER = tmpccer;
 800f488:	6220      	str	r0, [r4, #32]
      break;
 800f48a:	e7bf      	b.n	800f40c <HAL_TIM_SlaveConfigSynchro+0x74>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800f48c:	688a      	ldr	r2, [r1, #8]
 800f48e:	6908      	ldr	r0, [r1, #16]
  tmpccer = TIMx->CCER;
 800f490:	6a21      	ldr	r1, [r4, #32]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800f492:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800f496:	4311      	orrs	r1, r2
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800f498:	6a22      	ldr	r2, [r4, #32]
 800f49a:	f022 0201 	bic.w	r2, r2, #1
 800f49e:	6222      	str	r2, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800f4a0:	69a2      	ldr	r2, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800f4a2:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800f4a6:	ea42 1200 	orr.w	r2, r2, r0, lsl #4
  TIMx->CCMR1 = tmpccmr1;
 800f4aa:	61a2      	str	r2, [r4, #24]
  TIMx->CCER = tmpccer;
 800f4ac:	6221      	str	r1, [r4, #32]
 800f4ae:	e7ad      	b.n	800f40c <HAL_TIM_SlaveConfigSynchro+0x74>

0800f4b0 <HAL_TIM_OC_DelayElapsedCallback>:
 800f4b0:	4770      	bx	lr
 800f4b2:	bf00      	nop

0800f4b4 <HAL_TIM_IC_CaptureCallback>:
 800f4b4:	4770      	bx	lr
 800f4b6:	bf00      	nop

0800f4b8 <HAL_TIM_PWM_PulseFinishedCallback>:
 800f4b8:	4770      	bx	lr
 800f4ba:	bf00      	nop

0800f4bc <HAL_TIM_TriggerCallback>:
 800f4bc:	4770      	bx	lr
 800f4be:	bf00      	nop

0800f4c0 <HAL_TIM_IRQHandler>:
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800f4c0:	6803      	ldr	r3, [r0, #0]
 800f4c2:	691a      	ldr	r2, [r3, #16]
 800f4c4:	0791      	lsls	r1, r2, #30
{
 800f4c6:	b510      	push	{r4, lr}
 800f4c8:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800f4ca:	d502      	bpl.n	800f4d2 <HAL_TIM_IRQHandler+0x12>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 800f4cc:	68da      	ldr	r2, [r3, #12]
 800f4ce:	0792      	lsls	r2, r2, #30
 800f4d0:	d45f      	bmi.n	800f592 <HAL_TIM_IRQHandler+0xd2>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800f4d2:	691a      	ldr	r2, [r3, #16]
 800f4d4:	0750      	lsls	r0, r2, #29
 800f4d6:	d502      	bpl.n	800f4de <HAL_TIM_IRQHandler+0x1e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 800f4d8:	68da      	ldr	r2, [r3, #12]
 800f4da:	0751      	lsls	r1, r2, #29
 800f4dc:	d446      	bmi.n	800f56c <HAL_TIM_IRQHandler+0xac>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800f4de:	691a      	ldr	r2, [r3, #16]
 800f4e0:	0712      	lsls	r2, r2, #28
 800f4e2:	d502      	bpl.n	800f4ea <HAL_TIM_IRQHandler+0x2a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 800f4e4:	68da      	ldr	r2, [r3, #12]
 800f4e6:	0710      	lsls	r0, r2, #28
 800f4e8:	d42e      	bmi.n	800f548 <HAL_TIM_IRQHandler+0x88>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800f4ea:	691a      	ldr	r2, [r3, #16]
 800f4ec:	06d2      	lsls	r2, r2, #27
 800f4ee:	d502      	bpl.n	800f4f6 <HAL_TIM_IRQHandler+0x36>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 800f4f0:	68da      	ldr	r2, [r3, #12]
 800f4f2:	06d0      	lsls	r0, r2, #27
 800f4f4:	d418      	bmi.n	800f528 <HAL_TIM_IRQHandler+0x68>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800f4f6:	691a      	ldr	r2, [r3, #16]
 800f4f8:	07d1      	lsls	r1, r2, #31
 800f4fa:	d502      	bpl.n	800f502 <HAL_TIM_IRQHandler+0x42>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 800f4fc:	68da      	ldr	r2, [r3, #12]
 800f4fe:	07d2      	lsls	r2, r2, #31
 800f500:	d45d      	bmi.n	800f5be <HAL_TIM_IRQHandler+0xfe>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800f502:	691a      	ldr	r2, [r3, #16]
 800f504:	0610      	lsls	r0, r2, #24
 800f506:	d502      	bpl.n	800f50e <HAL_TIM_IRQHandler+0x4e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 800f508:	68da      	ldr	r2, [r3, #12]
 800f50a:	0611      	lsls	r1, r2, #24
 800f50c:	d45f      	bmi.n	800f5ce <HAL_TIM_IRQHandler+0x10e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800f50e:	691a      	ldr	r2, [r3, #16]
 800f510:	0652      	lsls	r2, r2, #25
 800f512:	d502      	bpl.n	800f51a <HAL_TIM_IRQHandler+0x5a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 800f514:	68da      	ldr	r2, [r3, #12]
 800f516:	0650      	lsls	r0, r2, #25
 800f518:	d461      	bmi.n	800f5de <HAL_TIM_IRQHandler+0x11e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800f51a:	691a      	ldr	r2, [r3, #16]
 800f51c:	0691      	lsls	r1, r2, #26
 800f51e:	d502      	bpl.n	800f526 <HAL_TIM_IRQHandler+0x66>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 800f520:	68da      	ldr	r2, [r3, #12]
 800f522:	0692      	lsls	r2, r2, #26
 800f524:	d443      	bmi.n	800f5ae <HAL_TIM_IRQHandler+0xee>
}
 800f526:	bd10      	pop	{r4, pc}
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800f528:	f06f 0110 	mvn.w	r1, #16
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800f52c:	2208      	movs	r2, #8
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800f52e:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800f530:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800f532:	69db      	ldr	r3, [r3, #28]
 800f534:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800f538:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800f53a:	d064      	beq.n	800f606 <HAL_TIM_IRQHandler+0x146>
        HAL_TIM_IC_CaptureCallback(htim);
 800f53c:	f7ff ffba 	bl	800f4b4 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800f540:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800f542:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800f544:	7722      	strb	r2, [r4, #28]
 800f546:	e7d6      	b.n	800f4f6 <HAL_TIM_IRQHandler+0x36>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800f548:	f06f 0108 	mvn.w	r1, #8
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800f54c:	2204      	movs	r2, #4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800f54e:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800f550:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800f552:	69db      	ldr	r3, [r3, #28]
 800f554:	0799      	lsls	r1, r3, #30
        HAL_TIM_IC_CaptureCallback(htim);
 800f556:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800f558:	d152      	bne.n	800f600 <HAL_TIM_IRQHandler+0x140>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800f55a:	f7ff ffa9 	bl	800f4b0 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800f55e:	4620      	mov	r0, r4
 800f560:	f7ff ffaa 	bl	800f4b8 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800f564:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800f566:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800f568:	7722      	strb	r2, [r4, #28]
 800f56a:	e7be      	b.n	800f4ea <HAL_TIM_IRQHandler+0x2a>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800f56c:	f06f 0104 	mvn.w	r1, #4
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800f570:	2202      	movs	r2, #2
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800f572:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800f574:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800f576:	699b      	ldr	r3, [r3, #24]
 800f578:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800f57c:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800f57e:	d13c      	bne.n	800f5fa <HAL_TIM_IRQHandler+0x13a>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800f580:	f7ff ff96 	bl	800f4b0 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800f584:	4620      	mov	r0, r4
 800f586:	f7ff ff97 	bl	800f4b8 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800f58a:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800f58c:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800f58e:	7722      	strb	r2, [r4, #28]
 800f590:	e7a5      	b.n	800f4de <HAL_TIM_IRQHandler+0x1e>
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800f592:	f06f 0102 	mvn.w	r1, #2
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800f596:	2201      	movs	r2, #1
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800f598:	6119      	str	r1, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800f59a:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 800f59c:	699b      	ldr	r3, [r3, #24]
 800f59e:	079b      	lsls	r3, r3, #30
 800f5a0:	d025      	beq.n	800f5ee <HAL_TIM_IRQHandler+0x12e>
          HAL_TIM_IC_CaptureCallback(htim);
 800f5a2:	f7ff ff87 	bl	800f4b4 <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800f5a6:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800f5a8:	6823      	ldr	r3, [r4, #0]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800f5aa:	7722      	strb	r2, [r4, #28]
 800f5ac:	e791      	b.n	800f4d2 <HAL_TIM_IRQHandler+0x12>
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800f5ae:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 800f5b2:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800f5b4:	611a      	str	r2, [r3, #16]
}
 800f5b6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 800f5ba:	f000 b86b 	b.w	800f694 <HAL_TIMEx_CommutCallback>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 800f5be:	f06f 0201 	mvn.w	r2, #1
 800f5c2:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 800f5c4:	4620      	mov	r0, r4
 800f5c6:	f7f2 fcb1 	bl	8001f2c <HAL_TIM_PeriodElapsedCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800f5ca:	6823      	ldr	r3, [r4, #0]
 800f5cc:	e799      	b.n	800f502 <HAL_TIM_IRQHandler+0x42>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 800f5ce:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800f5d2:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 800f5d4:	4620      	mov	r0, r4
 800f5d6:	f000 f85f 	bl	800f698 <HAL_TIMEx_BreakCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800f5da:	6823      	ldr	r3, [r4, #0]
 800f5dc:	e797      	b.n	800f50e <HAL_TIM_IRQHandler+0x4e>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 800f5de:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800f5e2:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 800f5e4:	4620      	mov	r0, r4
 800f5e6:	f7ff ff69 	bl	800f4bc <HAL_TIM_TriggerCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800f5ea:	6823      	ldr	r3, [r4, #0]
 800f5ec:	e795      	b.n	800f51a <HAL_TIM_IRQHandler+0x5a>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800f5ee:	f7ff ff5f 	bl	800f4b0 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 800f5f2:	4620      	mov	r0, r4
 800f5f4:	f7ff ff60 	bl	800f4b8 <HAL_TIM_PWM_PulseFinishedCallback>
 800f5f8:	e7d5      	b.n	800f5a6 <HAL_TIM_IRQHandler+0xe6>
        HAL_TIM_IC_CaptureCallback(htim);
 800f5fa:	f7ff ff5b 	bl	800f4b4 <HAL_TIM_IC_CaptureCallback>
 800f5fe:	e7c4      	b.n	800f58a <HAL_TIM_IRQHandler+0xca>
        HAL_TIM_IC_CaptureCallback(htim);
 800f600:	f7ff ff58 	bl	800f4b4 <HAL_TIM_IC_CaptureCallback>
 800f604:	e7ae      	b.n	800f564 <HAL_TIM_IRQHandler+0xa4>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800f606:	f7ff ff53 	bl	800f4b0 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800f60a:	4620      	mov	r0, r4
 800f60c:	f7ff ff54 	bl	800f4b8 <HAL_TIM_PWM_PulseFinishedCallback>
 800f610:	e796      	b.n	800f540 <HAL_TIM_IRQHandler+0x80>
 800f612:	bf00      	nop

0800f614 <HAL_TIMEx_MasterConfigSynchronization>:
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 800f614:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800f618:	2b01      	cmp	r3, #1
 800f61a:	d037      	beq.n	800f68c <HAL_TIMEx_MasterConfigSynchronization+0x78>

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 800f61c:	6803      	ldr	r3, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800f61e:	2202      	movs	r2, #2
{
 800f620:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800f622:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  tmpcr2 = htim->Instance->CR2;
 800f626:	685a      	ldr	r2, [r3, #4]
  tmpsmcr = htim->Instance->SMCR;

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800f628:	680d      	ldr	r5, [r1, #0]
  tmpsmcr = htim->Instance->SMCR;
 800f62a:	689c      	ldr	r4, [r3, #8]
  tmpcr2 &= ~TIM_CR2_MMS;
 800f62c:	f022 0270 	bic.w	r2, r2, #112	; 0x70
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800f630:	432a      	orrs	r2, r5

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 800f632:	605a      	str	r2, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800f634:	4a16      	ldr	r2, [pc, #88]	; (800f690 <HAL_TIMEx_MasterConfigSynchronization+0x7c>)
 800f636:	4293      	cmp	r3, r2
 800f638:	d01a      	beq.n	800f670 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800f63a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800f63e:	d017      	beq.n	800f670 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800f640:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800f644:	4293      	cmp	r3, r2
 800f646:	d013      	beq.n	800f670 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800f648:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800f64c:	4293      	cmp	r3, r2
 800f64e:	d00f      	beq.n	800f670 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800f650:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800f654:	4293      	cmp	r3, r2
 800f656:	d00b      	beq.n	800f670 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800f658:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800f65c:	4293      	cmp	r3, r2
 800f65e:	d007      	beq.n	800f670 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800f660:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800f664:	4293      	cmp	r3, r2
 800f666:	d003      	beq.n	800f670 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800f668:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800f66c:	4293      	cmp	r3, r2
 800f66e:	d104      	bne.n	800f67a <HAL_TIMEx_MasterConfigSynchronization+0x66>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800f670:	684a      	ldr	r2, [r1, #4]
    tmpsmcr &= ~TIM_SMCR_MSM;
 800f672:	f024 0480 	bic.w	r4, r4, #128	; 0x80
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800f676:	4314      	orrs	r4, r2

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 800f678:	609c      	str	r4, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;

  __HAL_UNLOCK(htim);
 800f67a:	2300      	movs	r3, #0
  htim->State = HAL_TIM_STATE_READY;
 800f67c:	2201      	movs	r2, #1
 800f67e:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800f682:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c

  return HAL_OK;
}
 800f686:	bc30      	pop	{r4, r5}
  return HAL_OK;
 800f688:	4618      	mov	r0, r3
}
 800f68a:	4770      	bx	lr
  __HAL_LOCK(htim);
 800f68c:	2002      	movs	r0, #2
}
 800f68e:	4770      	bx	lr
 800f690:	40010000 	.word	0x40010000

0800f694 <HAL_TIMEx_CommutCallback>:
 800f694:	4770      	bx	lr
 800f696:	bf00      	nop

0800f698 <HAL_TIMEx_BreakCallback>:
 800f698:	4770      	bx	lr
 800f69a:	bf00      	nop

0800f69c <FMC_SDRAM_Init>:
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800f69c:	680b      	ldr	r3, [r1, #0]
{
 800f69e:	b430      	push	{r4, r5}
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800f6a0:	b9d3      	cbnz	r3, 800f6d8 <FMC_SDRAM_Init+0x3c>
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800f6a2:	6803      	ldr	r3, [r0, #0]
 800f6a4:	684c      	ldr	r4, [r1, #4]
 800f6a6:	688a      	ldr	r2, [r1, #8]
 800f6a8:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800f6ac:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800f6b0:	4323      	orrs	r3, r4
 800f6b2:	4313      	orrs	r3, r2
 800f6b4:	e9d1 4203 	ldrd	r4, r2, [r1, #12]
 800f6b8:	4323      	orrs	r3, r4
 800f6ba:	4313      	orrs	r3, r2
 800f6bc:	e9d1 4205 	ldrd	r4, r2, [r1, #20]
 800f6c0:	4323      	orrs	r3, r4
 800f6c2:	e9d1 5407 	ldrd	r5, r4, [r1, #28]
 800f6c6:	4313      	orrs	r3, r2
 800f6c8:	432b      	orrs	r3, r5
 800f6ca:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 800f6cc:	4323      	orrs	r3, r4
 800f6ce:	4313      	orrs	r3, r2
 800f6d0:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 800f6d2:	bc30      	pop	{r4, r5}
 800f6d4:	2000      	movs	r0, #0
 800f6d6:	4770      	bx	lr
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800f6d8:	e9d1 4207 	ldrd	r4, r2, [r1, #28]
 800f6dc:	6803      	ldr	r3, [r0, #0]
 800f6de:	f423 43f8 	bic.w	r3, r3, #31744	; 0x7c00
 800f6e2:	4323      	orrs	r3, r4
 800f6e4:	6a4c      	ldr	r4, [r1, #36]	; 0x24
 800f6e6:	4313      	orrs	r3, r2
 800f6e8:	4323      	orrs	r3, r4
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800f6ea:	684a      	ldr	r2, [r1, #4]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800f6ec:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800f6ee:	6843      	ldr	r3, [r0, #4]
 800f6f0:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800f6f4:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800f6f8:	4313      	orrs	r3, r2
 800f6fa:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 800f6fe:	4323      	orrs	r3, r4
 800f700:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800f704:	4313      	orrs	r3, r2
 800f706:	432b      	orrs	r3, r5
 800f708:	698a      	ldr	r2, [r1, #24]
 800f70a:	4323      	orrs	r3, r4
 800f70c:	4313      	orrs	r3, r2
 800f70e:	6043      	str	r3, [r0, #4]
}
 800f710:	bc30      	pop	{r4, r5}
 800f712:	2000      	movs	r0, #0
 800f714:	4770      	bx	lr
 800f716:	bf00      	nop

0800f718 <FMC_SDRAM_Timing_Init>:
  * @param  Bank SDRAM bank number
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
 800f718:	b430      	push	{r4, r5}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800f71a:	6883      	ldr	r3, [r0, #8]
  if (Bank == FMC_SDRAM_BANK1)
 800f71c:	bb02      	cbnz	r2, 800f760 <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800f71e:	e9d1 2400 	ldrd	r2, r4, [r1]
 800f722:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800f726:	3c01      	subs	r4, #1
 800f728:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 800f72c:	3a01      	subs	r2, #1
 800f72e:	4313      	orrs	r3, r2
 800f730:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 800f734:	3c01      	subs	r4, #1
 800f736:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 800f73a:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800f73e:	3a01      	subs	r2, #1
 800f740:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
 800f744:	698a      	ldr	r2, [r1, #24]
 800f746:	1e69      	subs	r1, r5, #1
 800f748:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800f74c:	1e61      	subs	r1, r4, #1
 800f74e:	ea43 5301 	orr.w	r3, r3, r1, lsl #20
 800f752:	3a01      	subs	r2, #1
 800f754:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800f758:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 800f75a:	bc30      	pop	{r4, r5}
 800f75c:	2000      	movs	r0, #0
 800f75e:	4770      	bx	lr
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800f760:	68cc      	ldr	r4, [r1, #12]
 800f762:	694a      	ldr	r2, [r1, #20]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800f764:	688d      	ldr	r5, [r1, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800f766:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 800f76a:	3c01      	subs	r4, #1
 800f76c:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800f770:	ea43 3304 	orr.w	r3, r3, r4, lsl #12
 800f774:	3a01      	subs	r2, #1
 800f776:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
 800f77a:	6083      	str	r3, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800f77c:	e9d1 2400 	ldrd	r2, r4, [r1]
 800f780:	68c3      	ldr	r3, [r0, #12]
 800f782:	3c01      	subs	r4, #1
 800f784:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800f788:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 800f78c:	3a01      	subs	r2, #1
 800f78e:	690c      	ldr	r4, [r1, #16]
 800f790:	4313      	orrs	r3, r2
 800f792:	698a      	ldr	r2, [r1, #24]
 800f794:	1e69      	subs	r1, r5, #1
 800f796:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800f79a:	1e61      	subs	r1, r4, #1
 800f79c:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800f7a0:	3a01      	subs	r2, #1
 800f7a2:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800f7a6:	60c3      	str	r3, [r0, #12]
}
 800f7a8:	bc30      	pop	{r4, r5}
 800f7aa:	2000      	movs	r0, #0
 800f7ac:	4770      	bx	lr
 800f7ae:	bf00      	nop

0800f7b0 <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 800f7b0:	b570      	push	{r4, r5, r6, lr}
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800f7b2:	680b      	ldr	r3, [r1, #0]
{
 800f7b4:	4615      	mov	r5, r2
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800f7b6:	684a      	ldr	r2, [r1, #4]
{
 800f7b8:	4604      	mov	r4, r0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800f7ba:	4313      	orrs	r3, r2
 800f7bc:	6900      	ldr	r0, [r0, #16]
 800f7be:	68ca      	ldr	r2, [r1, #12]
 800f7c0:	0d80      	lsrs	r0, r0, #22
 800f7c2:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
 800f7c6:	688a      	ldr	r2, [r1, #8]
 800f7c8:	0580      	lsls	r0, r0, #22
 800f7ca:	4303      	orrs	r3, r0
 800f7cc:	3a01      	subs	r2, #1
 800f7ce:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800f7d2:	6123      	str	r3, [r4, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Get tick */
  tickstart = HAL_GetTick();
 800f7d4:	f7fb fef6 	bl	800b5c4 <HAL_GetTick>
 800f7d8:	4606      	mov	r6, r0

  /* wait until command is send */
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800f7da:	1c6b      	adds	r3, r5, #1
 800f7dc:	d105      	bne.n	800f7ea <FMC_SDRAM_SendCommand+0x3a>
 800f7de:	69a3      	ldr	r3, [r4, #24]
 800f7e0:	f013 0320 	ands.w	r3, r3, #32
 800f7e4:	d1fb      	bne.n	800f7de <FMC_SDRAM_SendCommand+0x2e>
      {
        return HAL_TIMEOUT;
      }
    }
  }
  return HAL_OK;
 800f7e6:	4618      	mov	r0, r3
}
 800f7e8:	bd70      	pop	{r4, r5, r6, pc}
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800f7ea:	69a3      	ldr	r3, [r4, #24]
 800f7ec:	f013 0320 	ands.w	r3, r3, #32
 800f7f0:	d0f9      	beq.n	800f7e6 <FMC_SDRAM_SendCommand+0x36>
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 800f7f2:	b125      	cbz	r5, 800f7fe <FMC_SDRAM_SendCommand+0x4e>
 800f7f4:	f7fb fee6 	bl	800b5c4 <HAL_GetTick>
 800f7f8:	1b80      	subs	r0, r0, r6
 800f7fa:	42a8      	cmp	r0, r5
 800f7fc:	d9ed      	bls.n	800f7da <FMC_SDRAM_SendCommand+0x2a>
        return HAL_TIMEOUT;
 800f7fe:	2003      	movs	r0, #3
}
 800f800:	bd70      	pop	{r4, r5, r6, pc}
 800f802:	bf00      	nop

0800f804 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800f804:	6943      	ldr	r3, [r0, #20]
 800f806:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
{
 800f80a:	4602      	mov	r2, r0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800f80c:	f023 033e 	bic.w	r3, r3, #62	; 0x3e
 800f810:	ea43 0141 	orr.w	r1, r3, r1, lsl #1

  return HAL_OK;
}
 800f814:	2000      	movs	r0, #0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800f816:	6151      	str	r1, [r2, #20]
}
 800f818:	4770      	bx	lr
 800f81a:	bf00      	nop

0800f81c <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 800f81c:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 800f81e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f822:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 800f824:	f002 fafe 	bl	8011e24 <xTaskGetSchedulerState>
 800f828:	2801      	cmp	r0, #1
 800f82a:	d100      	bne.n	800f82e <SysTick_Handler+0x12>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 800f82c:	bd08      	pop	{r3, pc}
 800f82e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 800f832:	f000 bc3f 	b.w	80100b4 <xPortSysTickHandler>
 800f836:	bf00      	nop

0800f838 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800f838:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 800f83c:	b92b      	cbnz	r3, 800f84a <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 800f83e:	4b06      	ldr	r3, [pc, #24]	; (800f858 <osKernelInitialize+0x20>)
 800f840:	6818      	ldr	r0, [r3, #0]
 800f842:	b928      	cbnz	r0, 800f850 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 800f844:	2201      	movs	r2, #1
 800f846:	601a      	str	r2, [r3, #0]
      stat = osOK;
 800f848:	4770      	bx	lr
    stat = osErrorISR;
 800f84a:	f06f 0005 	mvn.w	r0, #5
 800f84e:	4770      	bx	lr
    } else {
      stat = osError;
 800f850:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 800f854:	4770      	bx	lr
 800f856:	bf00      	nop
 800f858:	20002cf0 	.word	0x20002cf0

0800f85c <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 800f85c:	b510      	push	{r4, lr}
 800f85e:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800f862:	b974      	cbnz	r4, 800f882 <osKernelStart+0x26>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 800f864:	4b08      	ldr	r3, [pc, #32]	; (800f888 <osKernelStart+0x2c>)
 800f866:	681a      	ldr	r2, [r3, #0]
 800f868:	2a01      	cmp	r2, #1
 800f86a:	d107      	bne.n	800f87c <osKernelStart+0x20>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800f86c:	4907      	ldr	r1, [pc, #28]	; (800f88c <osKernelStart+0x30>)
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 800f86e:	2202      	movs	r2, #2
 800f870:	77cc      	strb	r4, [r1, #31]
 800f872:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 800f874:	f002 f8b0 	bl	80119d8 <vTaskStartScheduler>
      stat = osOK;
 800f878:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 800f87a:	bd10      	pop	{r4, pc}
      stat = osError;
 800f87c:	f04f 30ff 	mov.w	r0, #4294967295
}
 800f880:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800f882:	f06f 0005 	mvn.w	r0, #5
}
 800f886:	bd10      	pop	{r4, pc}
 800f888:	20002cf0 	.word	0x20002cf0
 800f88c:	e000ed00 	.word	0xe000ed00

0800f890 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800f890:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f892:	b087      	sub	sp, #28
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 800f894:	2400      	movs	r4, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800f896:	4615      	mov	r5, r2
  hTask = NULL;
 800f898:	9405      	str	r4, [sp, #20]
 800f89a:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 800f89e:	b9ea      	cbnz	r2, 800f8dc <osThreadNew+0x4c>
 800f8a0:	b350      	cbz	r0, 800f8f8 <osThreadNew+0x68>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 800f8a2:	b1f5      	cbz	r5, 800f8e2 <osThreadNew+0x52>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 800f8a4:	69ab      	ldr	r3, [r5, #24]
 800f8a6:	bb5b      	cbnz	r3, 800f900 <osThreadNew+0x70>
 800f8a8:	2318      	movs	r3, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800f8aa:	686a      	ldr	r2, [r5, #4]
 800f8ac:	07d2      	lsls	r2, r2, #31
 800f8ae:	d423      	bmi.n	800f8f8 <osThreadNew+0x68>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 800f8b0:	696e      	ldr	r6, [r5, #20]
 800f8b2:	b34e      	cbz	r6, 800f908 <osThreadNew+0x78>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 800f8b4:	ea4f 0c96 	mov.w	ip, r6, lsr #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800f8b8:	68ac      	ldr	r4, [r5, #8]
      if (attr->name != NULL) {
 800f8ba:	682f      	ldr	r7, [r5, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800f8bc:	b34c      	cbz	r4, 800f912 <osThreadNew+0x82>
 800f8be:	68ea      	ldr	r2, [r5, #12]
 800f8c0:	2aab      	cmp	r2, #171	; 0xab
 800f8c2:	d919      	bls.n	800f8f8 <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800f8c4:	692d      	ldr	r5, [r5, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800f8c6:	b1bd      	cbz	r5, 800f8f8 <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800f8c8:	b1b6      	cbz	r6, 800f8f8 <osThreadNew+0x68>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 800f8ca:	e9cd 5401 	strd	r5, r4, [sp, #4]
 800f8ce:	9300      	str	r3, [sp, #0]
 800f8d0:	4662      	mov	r2, ip
 800f8d2:	460b      	mov	r3, r1
 800f8d4:	4639      	mov	r1, r7
 800f8d6:	f001 ffbd 	bl	8011854 <xTaskCreateStatic>
 800f8da:	4604      	mov	r4, r0
      }
    }
  }

  return ((osThreadId_t)hTask);
}
 800f8dc:	4620      	mov	r0, r4
 800f8de:	b007      	add	sp, #28
 800f8e0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f8e2:	2280      	movs	r2, #128	; 0x80
    prio  = (UBaseType_t)osPriorityNormal;
 800f8e4:	2318      	movs	r3, #24
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800f8e6:	ac05      	add	r4, sp, #20
 800f8e8:	9300      	str	r3, [sp, #0]
 800f8ea:	9401      	str	r4, [sp, #4]
 800f8ec:	460b      	mov	r3, r1
 800f8ee:	4629      	mov	r1, r5
 800f8f0:	f001 ffea 	bl	80118c8 <xTaskCreate>
 800f8f4:	2801      	cmp	r0, #1
 800f8f6:	d00a      	beq.n	800f90e <osThreadNew+0x7e>
        return (NULL);
 800f8f8:	2400      	movs	r4, #0
}
 800f8fa:	4620      	mov	r0, r4
 800f8fc:	b007      	add	sp, #28
 800f8fe:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800f900:	1e5c      	subs	r4, r3, #1
 800f902:	2c37      	cmp	r4, #55	; 0x37
 800f904:	d9d1      	bls.n	800f8aa <osThreadNew+0x1a>
 800f906:	e7f7      	b.n	800f8f8 <osThreadNew+0x68>
    stack = configMINIMAL_STACK_SIZE;
 800f908:	f04f 0c80 	mov.w	ip, #128	; 0x80
 800f90c:	e7d4      	b.n	800f8b8 <osThreadNew+0x28>
  return ((osThreadId_t)hTask);
 800f90e:	9c05      	ldr	r4, [sp, #20]
 800f910:	e7e4      	b.n	800f8dc <osThreadNew+0x4c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 800f912:	68ee      	ldr	r6, [r5, #12]
 800f914:	2e00      	cmp	r6, #0
 800f916:	d1e1      	bne.n	800f8dc <osThreadNew+0x4c>
 800f918:	692d      	ldr	r5, [r5, #16]
 800f91a:	2d00      	cmp	r5, #0
 800f91c:	d1de      	bne.n	800f8dc <osThreadNew+0x4c>
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800f91e:	fa1f f28c 	uxth.w	r2, ip
 800f922:	463d      	mov	r5, r7
 800f924:	e7df      	b.n	800f8e6 <osThreadNew+0x56>
 800f926:	bf00      	nop

0800f928 <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 800f928:	b510      	push	{r4, lr}
 800f92a:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800f92e:	b92c      	cbnz	r4, 800f93c <osDelay+0x14>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 800f930:	b900      	cbnz	r0, 800f934 <osDelay+0xc>
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
 800f932:	bd10      	pop	{r4, pc}
      vTaskDelay(ticks);
 800f934:	f001 fffa 	bl	801192c <vTaskDelay>
    stat = osOK;
 800f938:	4620      	mov	r0, r4
}
 800f93a:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800f93c:	f06f 0005 	mvn.w	r0, #5
}
 800f940:	bd10      	pop	{r4, pc}
 800f942:	bf00      	nop

0800f944 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 800f944:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f946:	b083      	sub	sp, #12
 800f948:	f3ef 8605 	mrs	r6, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800f94c:	b9fe      	cbnz	r6, 800f98e <osSemaphoreNew+0x4a>
 800f94e:	b1f0      	cbz	r0, 800f98e <osSemaphoreNew+0x4a>
 800f950:	4288      	cmp	r0, r1
 800f952:	460f      	mov	r7, r1
 800f954:	d31b      	bcc.n	800f98e <osSemaphoreNew+0x4a>
    mem = -1;

    if (attr != NULL) {
 800f956:	4615      	mov	r5, r2
 800f958:	b192      	cbz	r2, 800f980 <osSemaphoreNew+0x3c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 800f95a:	e9d2 2302 	ldrd	r2, r3, [r2, #8]
 800f95e:	b1d2      	cbz	r2, 800f996 <osSemaphoreNew+0x52>
 800f960:	2b4f      	cmp	r3, #79	; 0x4f
 800f962:	d914      	bls.n	800f98e <osSemaphoreNew+0x4a>
    else {
      mem = 0;
    }

    if (mem != -1) {
      if (max_count == 1U) {
 800f964:	2801      	cmp	r0, #1
 800f966:	d038      	beq.n	800f9da <osSemaphoreNew+0x96>
        }
      }
      else {
        if (mem == 1) {
          #if (configSUPPORT_STATIC_ALLOCATION == 1)
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 800f968:	f000 fd8a 	bl	8010480 <xQueueCreateCountingSemaphoreStatic>
          #endif
        }
      }
      
      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hSemaphore != NULL) {
 800f96c:	4604      	mov	r4, r0
 800f96e:	b170      	cbz	r0, 800f98e <osSemaphoreNew+0x4a>
        if (attr != NULL) {
          name = attr->name;
 800f970:	682d      	ldr	r5, [r5, #0]
        } else {
          name = NULL;
        }
        vQueueAddToRegistry (hSemaphore, name);
 800f972:	4620      	mov	r0, r4
 800f974:	4629      	mov	r1, r5
 800f976:	f001 fc35 	bl	80111e4 <vQueueAddToRegistry>
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 800f97a:	4620      	mov	r0, r4
 800f97c:	b003      	add	sp, #12
 800f97e:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if (max_count == 1U) {
 800f980:	2801      	cmp	r0, #1
 800f982:	d012      	beq.n	800f9aa <osSemaphoreNew+0x66>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800f984:	f000 fddc 	bl	8010540 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800f988:	4604      	mov	r4, r0
 800f98a:	2800      	cmp	r0, #0
 800f98c:	d1f1      	bne.n	800f972 <osSemaphoreNew+0x2e>
            hSemaphore = NULL;
 800f98e:	2400      	movs	r4, #0
}
 800f990:	4620      	mov	r0, r4
 800f992:	b003      	add	sp, #12
 800f994:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 800f996:	2b00      	cmp	r3, #0
 800f998:	d1f9      	bne.n	800f98e <osSemaphoreNew+0x4a>
      if (max_count == 1U) {
 800f99a:	2801      	cmp	r0, #1
 800f99c:	d005      	beq.n	800f9aa <osSemaphoreNew+0x66>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800f99e:	f000 fdcf 	bl	8010540 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800f9a2:	4604      	mov	r4, r0
 800f9a4:	2800      	cmp	r0, #0
 800f9a6:	d1e3      	bne.n	800f970 <osSemaphoreNew+0x2c>
 800f9a8:	e7f1      	b.n	800f98e <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateBinary();
 800f9aa:	2203      	movs	r2, #3
 800f9ac:	2100      	movs	r1, #0
 800f9ae:	2001      	movs	r0, #1
 800f9b0:	f000 fd24 	bl	80103fc <xQueueGenericCreate>
 800f9b4:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 800f9b6:	2c00      	cmp	r4, #0
 800f9b8:	d0e9      	beq.n	800f98e <osSemaphoreNew+0x4a>
 800f9ba:	b917      	cbnz	r7, 800f9c2 <osSemaphoreNew+0x7e>
        if (attr != NULL) {
 800f9bc:	2d00      	cmp	r5, #0
 800f9be:	d1d7      	bne.n	800f970 <osSemaphoreNew+0x2c>
 800f9c0:	e7d7      	b.n	800f972 <osSemaphoreNew+0x2e>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800f9c2:	2300      	movs	r3, #0
 800f9c4:	461a      	mov	r2, r3
 800f9c6:	4619      	mov	r1, r3
 800f9c8:	4620      	mov	r0, r4
 800f9ca:	f000 fdff 	bl	80105cc <xQueueGenericSend>
 800f9ce:	2801      	cmp	r0, #1
 800f9d0:	d0f4      	beq.n	800f9bc <osSemaphoreNew+0x78>
            vSemaphoreDelete (hSemaphore);
 800f9d2:	4620      	mov	r0, r4
 800f9d4:	f001 fbc0 	bl	8011158 <vQueueDelete>
 800f9d8:	e7d9      	b.n	800f98e <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 800f9da:	4613      	mov	r3, r2
 800f9dc:	2203      	movs	r2, #3
 800f9de:	9200      	str	r2, [sp, #0]
 800f9e0:	4631      	mov	r1, r6
 800f9e2:	4632      	mov	r2, r6
 800f9e4:	f000 fc9c 	bl	8010320 <xQueueGenericCreateStatic>
 800f9e8:	4604      	mov	r4, r0
 800f9ea:	e7e4      	b.n	800f9b6 <osSemaphoreNew+0x72>

0800f9ec <osSemaphoreAcquire>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800f9ec:	b370      	cbz	r0, 800fa4c <osSemaphoreAcquire+0x60>
osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 800f9ee:	b510      	push	{r4, lr}
 800f9f0:	460c      	mov	r4, r1
 800f9f2:	b082      	sub	sp, #8
 800f9f4:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800f9f8:	b1c3      	cbz	r3, 800fa2c <osSemaphoreAcquire+0x40>
    if (timeout != 0U) {
 800f9fa:	bb21      	cbnz	r1, 800fa46 <osSemaphoreAcquire+0x5a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800f9fc:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800f9fe:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800fa00:	f001 fb28 	bl	8011054 <xQueueReceiveFromISR>
 800fa04:	2801      	cmp	r0, #1
 800fa06:	d11a      	bne.n	800fa3e <osSemaphoreAcquire+0x52>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800fa08:	9b01      	ldr	r3, [sp, #4]
 800fa0a:	b913      	cbnz	r3, 800fa12 <osSemaphoreAcquire+0x26>
  stat = osOK;
 800fa0c:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 800fa0e:	b002      	add	sp, #8
 800fa10:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 800fa12:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800fa16:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800fa1a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800fa1e:	f3bf 8f4f 	dsb	sy
 800fa22:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800fa26:	4620      	mov	r0, r4
}
 800fa28:	b002      	add	sp, #8
 800fa2a:	bd10      	pop	{r4, pc}
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 800fa2c:	f001 f988 	bl	8010d40 <xQueueSemaphoreTake>
 800fa30:	2801      	cmp	r0, #1
 800fa32:	d0eb      	beq.n	800fa0c <osSemaphoreAcquire+0x20>
      if (timeout != 0U) {
 800fa34:	b11c      	cbz	r4, 800fa3e <osSemaphoreAcquire+0x52>
        stat = osErrorTimeout;
 800fa36:	f06f 0001 	mvn.w	r0, #1
}
 800fa3a:	b002      	add	sp, #8
 800fa3c:	bd10      	pop	{r4, pc}
        stat = osErrorResource;
 800fa3e:	f06f 0002 	mvn.w	r0, #2
}
 800fa42:	b002      	add	sp, #8
 800fa44:	bd10      	pop	{r4, pc}
    stat = osErrorParameter;
 800fa46:	f06f 0003 	mvn.w	r0, #3
 800fa4a:	e7e0      	b.n	800fa0e <osSemaphoreAcquire+0x22>
 800fa4c:	f06f 0003 	mvn.w	r0, #3
}
 800fa50:	4770      	bx	lr
 800fa52:	bf00      	nop

0800fa54 <osSemaphoreRelease>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800fa54:	b330      	cbz	r0, 800faa4 <osSemaphoreRelease+0x50>
osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 800fa56:	b510      	push	{r4, lr}
 800fa58:	b082      	sub	sp, #8
 800fa5a:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800fa5e:	b1ab      	cbz	r3, 800fa8c <osSemaphoreRelease+0x38>
    yield = pdFALSE;
 800fa60:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800fa62:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 800fa64:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800fa66:	f000 ff95 	bl	8010994 <xQueueGiveFromISR>
 800fa6a:	2801      	cmp	r0, #1
 800fa6c:	d117      	bne.n	800fa9e <osSemaphoreRelease+0x4a>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
 800fa6e:	9b01      	ldr	r3, [sp, #4]
 800fa70:	b193      	cbz	r3, 800fa98 <osSemaphoreRelease+0x44>
 800fa72:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800fa76:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800fa7a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800fa7e:	f3bf 8f4f 	dsb	sy
 800fa82:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800fa86:	4620      	mov	r0, r4
      stat = osErrorResource;
    }
  }

  return (stat);
}
 800fa88:	b002      	add	sp, #8
 800fa8a:	bd10      	pop	{r4, pc}
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800fa8c:	461a      	mov	r2, r3
 800fa8e:	4619      	mov	r1, r3
 800fa90:	f000 fd9c 	bl	80105cc <xQueueGenericSend>
 800fa94:	2801      	cmp	r0, #1
 800fa96:	d102      	bne.n	800fa9e <osSemaphoreRelease+0x4a>
  stat = osOK;
 800fa98:	2000      	movs	r0, #0
}
 800fa9a:	b002      	add	sp, #8
 800fa9c:	bd10      	pop	{r4, pc}
      stat = osErrorResource;
 800fa9e:	f06f 0002 	mvn.w	r0, #2
 800faa2:	e7fa      	b.n	800fa9a <osSemaphoreRelease+0x46>
    stat = osErrorParameter;
 800faa4:	f06f 0003 	mvn.w	r0, #3
}
 800faa8:	4770      	bx	lr
 800faaa:	bf00      	nop

0800faac <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 800faac:	b5f0      	push	{r4, r5, r6, r7, lr}
 800faae:	b085      	sub	sp, #20
 800fab0:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800fab4:	b987      	cbnz	r7, 800fad8 <osMessageQueueNew+0x2c>
 800fab6:	4605      	mov	r5, r0
 800fab8:	b170      	cbz	r0, 800fad8 <osMessageQueueNew+0x2c>
 800faba:	b169      	cbz	r1, 800fad8 <osMessageQueueNew+0x2c>
    mem = -1;

    if (attr != NULL) {
 800fabc:	4614      	mov	r4, r2
 800fabe:	b1ea      	cbz	r2, 800fafc <osMessageQueueNew+0x50>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800fac0:	6893      	ldr	r3, [r2, #8]
 800fac2:	b163      	cbz	r3, 800fade <osMessageQueueNew+0x32>
 800fac4:	68d2      	ldr	r2, [r2, #12]
 800fac6:	2a4f      	cmp	r2, #79	; 0x4f
 800fac8:	d906      	bls.n	800fad8 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800faca:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800facc:	b122      	cbz	r2, 800fad8 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800face:	6966      	ldr	r6, [r4, #20]
 800fad0:	fb01 f505 	mul.w	r5, r1, r5
 800fad4:	42ae      	cmp	r6, r5
 800fad6:	d21c      	bcs.n	800fb12 <osMessageQueueNew+0x66>
  hQueue = NULL;
 800fad8:	2000      	movs	r0, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 800fada:	b005      	add	sp, #20
 800fadc:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 800fade:	68d3      	ldr	r3, [r2, #12]
 800fae0:	2b00      	cmp	r3, #0
 800fae2:	d1f9      	bne.n	800fad8 <osMessageQueueNew+0x2c>
 800fae4:	6913      	ldr	r3, [r2, #16]
 800fae6:	2b00      	cmp	r3, #0
 800fae8:	d1f6      	bne.n	800fad8 <osMessageQueueNew+0x2c>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 800faea:	6952      	ldr	r2, [r2, #20]
 800faec:	2a00      	cmp	r2, #0
 800faee:	d1f3      	bne.n	800fad8 <osMessageQueueNew+0x2c>
          hQueue = xQueueCreate (msg_count, msg_size);
 800faf0:	f000 fc84 	bl	80103fc <xQueueGenericCreate>
    if (hQueue != NULL) {
 800faf4:	2800      	cmp	r0, #0
 800faf6:	d0ef      	beq.n	800fad8 <osMessageQueueNew+0x2c>
        name = attr->name;
 800faf8:	6824      	ldr	r4, [r4, #0]
 800fafa:	e003      	b.n	800fb04 <osMessageQueueNew+0x58>
          hQueue = xQueueCreate (msg_count, msg_size);
 800fafc:	f000 fc7e 	bl	80103fc <xQueueGenericCreate>
    if (hQueue != NULL) {
 800fb00:	2800      	cmp	r0, #0
 800fb02:	d0e9      	beq.n	800fad8 <osMessageQueueNew+0x2c>
      vQueueAddToRegistry (hQueue, name);
 800fb04:	4621      	mov	r1, r4
 800fb06:	9003      	str	r0, [sp, #12]
 800fb08:	f001 fb6c 	bl	80111e4 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 800fb0c:	9803      	ldr	r0, [sp, #12]
}
 800fb0e:	b005      	add	sp, #20
 800fb10:	bdf0      	pop	{r4, r5, r6, r7, pc}
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 800fb12:	9700      	str	r7, [sp, #0]
 800fb14:	f000 fc04 	bl	8010320 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 800fb18:	2800      	cmp	r0, #0
 800fb1a:	d1ed      	bne.n	800faf8 <osMessageQueueNew+0x4c>
 800fb1c:	e7dc      	b.n	800fad8 <osMessageQueueNew+0x2c>
 800fb1e:	bf00      	nop

0800fb20 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 800fb20:	b570      	push	{r4, r5, r6, lr}
 800fb22:	461c      	mov	r4, r3
 800fb24:	b082      	sub	sp, #8
 800fb26:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800fb2a:	b1be      	cbz	r6, 800fb5c <osMessageQueuePut+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800fb2c:	b350      	cbz	r0, 800fb84 <osMessageQueuePut+0x64>
 800fb2e:	b349      	cbz	r1, 800fb84 <osMessageQueuePut+0x64>
 800fb30:	bb43      	cbnz	r3, 800fb84 <osMessageQueuePut+0x64>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800fb32:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800fb34:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800fb36:	f000 fec7 	bl	80108c8 <xQueueGenericSendFromISR>
 800fb3a:	2801      	cmp	r0, #1
 800fb3c:	d11e      	bne.n	800fb7c <osMessageQueuePut+0x5c>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800fb3e:	9b01      	ldr	r3, [sp, #4]
 800fb40:	b1cb      	cbz	r3, 800fb76 <osMessageQueuePut+0x56>
 800fb42:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800fb46:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800fb4a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800fb4e:	f3bf 8f4f 	dsb	sy
 800fb52:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800fb56:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
 800fb58:	b002      	add	sp, #8
 800fb5a:	bd70      	pop	{r4, r5, r6, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800fb5c:	b190      	cbz	r0, 800fb84 <osMessageQueuePut+0x64>
 800fb5e:	b189      	cbz	r1, 800fb84 <osMessageQueuePut+0x64>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800fb60:	4633      	mov	r3, r6
 800fb62:	4622      	mov	r2, r4
 800fb64:	f000 fd32 	bl	80105cc <xQueueGenericSend>
 800fb68:	2801      	cmp	r0, #1
 800fb6a:	d004      	beq.n	800fb76 <osMessageQueuePut+0x56>
        if (timeout != 0U) {
 800fb6c:	b134      	cbz	r4, 800fb7c <osMessageQueuePut+0x5c>
          stat = osErrorTimeout;
 800fb6e:	f06f 0001 	mvn.w	r0, #1
}
 800fb72:	b002      	add	sp, #8
 800fb74:	bd70      	pop	{r4, r5, r6, pc}
  stat = osOK;
 800fb76:	2000      	movs	r0, #0
}
 800fb78:	b002      	add	sp, #8
 800fb7a:	bd70      	pop	{r4, r5, r6, pc}
          stat = osErrorResource;
 800fb7c:	f06f 0002 	mvn.w	r0, #2
}
 800fb80:	b002      	add	sp, #8
 800fb82:	bd70      	pop	{r4, r5, r6, pc}
      stat = osErrorParameter;
 800fb84:	f06f 0003 	mvn.w	r0, #3
 800fb88:	e7e6      	b.n	800fb58 <osMessageQueuePut+0x38>
 800fb8a:	bf00      	nop

0800fb8c <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 800fb8c:	b530      	push	{r4, r5, lr}
 800fb8e:	461c      	mov	r4, r3
 800fb90:	b083      	sub	sp, #12
 800fb92:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800fb96:	b1bb      	cbz	r3, 800fbc8 <osMessageQueueGet+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800fb98:	b348      	cbz	r0, 800fbee <osMessageQueueGet+0x62>
 800fb9a:	b341      	cbz	r1, 800fbee <osMessageQueueGet+0x62>
 800fb9c:	bb3c      	cbnz	r4, 800fbee <osMessageQueueGet+0x62>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800fb9e:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800fba0:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800fba2:	f001 fa57 	bl	8011054 <xQueueReceiveFromISR>
 800fba6:	2801      	cmp	r0, #1
 800fba8:	d11d      	bne.n	800fbe6 <osMessageQueueGet+0x5a>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800fbaa:	9b01      	ldr	r3, [sp, #4]
 800fbac:	b1c3      	cbz	r3, 800fbe0 <osMessageQueueGet+0x54>
 800fbae:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800fbb2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800fbb6:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800fbba:	f3bf 8f4f 	dsb	sy
 800fbbe:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800fbc2:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
 800fbc4:	b003      	add	sp, #12
 800fbc6:	bd30      	pop	{r4, r5, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800fbc8:	b188      	cbz	r0, 800fbee <osMessageQueueGet+0x62>
 800fbca:	b181      	cbz	r1, 800fbee <osMessageQueueGet+0x62>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800fbcc:	4622      	mov	r2, r4
 800fbce:	f000 ff39 	bl	8010a44 <xQueueReceive>
 800fbd2:	2801      	cmp	r0, #1
 800fbd4:	d004      	beq.n	800fbe0 <osMessageQueueGet+0x54>
        if (timeout != 0U) {
 800fbd6:	b134      	cbz	r4, 800fbe6 <osMessageQueueGet+0x5a>
          stat = osErrorTimeout;
 800fbd8:	f06f 0001 	mvn.w	r0, #1
}
 800fbdc:	b003      	add	sp, #12
 800fbde:	bd30      	pop	{r4, r5, pc}
  stat = osOK;
 800fbe0:	2000      	movs	r0, #0
}
 800fbe2:	b003      	add	sp, #12
 800fbe4:	bd30      	pop	{r4, r5, pc}
          stat = osErrorResource;
 800fbe6:	f06f 0002 	mvn.w	r0, #2
}
 800fbea:	b003      	add	sp, #12
 800fbec:	bd30      	pop	{r4, r5, pc}
      stat = osErrorParameter;
 800fbee:	f06f 0003 	mvn.w	r0, #3
 800fbf2:	e7e7      	b.n	800fbc4 <osMessageQueueGet+0x38>

0800fbf4 <osMessageQueueGetCount>:
 800fbf4:	b130      	cbz	r0, 800fc04 <osMessageQueueGetCount+0x10>
 800fbf6:	f3ef 8305 	mrs	r3, IPSR
 800fbfa:	b10b      	cbz	r3, 800fc00 <osMessageQueueGetCount+0xc>
 800fbfc:	f001 ba9e 	b.w	801113c <uxQueueMessagesWaitingFromISR>
 800fc00:	f001 ba86 	b.w	8011110 <uxQueueMessagesWaiting>
 800fc04:	4770      	bx	lr
 800fc06:	bf00      	nop

0800fc08 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 800fc08:	4b04      	ldr	r3, [pc, #16]	; (800fc1c <vApplicationGetIdleTaskMemory+0x14>)
 800fc0a:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
 800fc0c:	b410      	push	{r4}
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800fc0e:	2380      	movs	r3, #128	; 0x80
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 800fc10:	4c03      	ldr	r4, [pc, #12]	; (800fc20 <vApplicationGetIdleTaskMemory+0x18>)
 800fc12:	600c      	str	r4, [r1, #0]
}
 800fc14:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800fc18:	6013      	str	r3, [r2, #0]
}
 800fc1a:	4770      	bx	lr
 800fc1c:	20002c44 	.word	0x20002c44
 800fc20:	20002a44 	.word	0x20002a44

0800fc24 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 800fc24:	4b05      	ldr	r3, [pc, #20]	; (800fc3c <vApplicationGetTimerTaskMemory+0x18>)
 800fc26:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
 800fc28:	b410      	push	{r4}
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800fc2a:	f44f 7380 	mov.w	r3, #256	; 0x100
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 800fc2e:	4c04      	ldr	r4, [pc, #16]	; (800fc40 <vApplicationGetTimerTaskMemory+0x1c>)
 800fc30:	600c      	str	r4, [r1, #0]
}
 800fc32:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800fc36:	6013      	str	r3, [r2, #0]
}
 800fc38:	4770      	bx	lr
 800fc3a:	bf00      	nop
 800fc3c:	200030f4 	.word	0x200030f4
 800fc40:	20002cf4 	.word	0x20002cf4

0800fc44 <pvPortMalloc>:
static size_t xBlockAllocatedBit = 0;

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
 800fc44:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fc48:	4605      	mov	r5, r0
BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
void *pvReturn = NULL;

	vTaskSuspendAll();
 800fc4a:	f001 ff41 	bl	8011ad0 <vTaskSuspendAll>
	{
		/* If this is the first call to malloc then the heap will require
		initialisation to setup the list of free blocks. */
		if( pxEnd == NULL )
 800fc4e:	4a54      	ldr	r2, [pc, #336]	; (800fda0 <pvPortMalloc+0x15c>)
 800fc50:	6816      	ldr	r6, [r2, #0]
 800fc52:	2e00      	cmp	r6, #0
 800fc54:	d06e      	beq.n	800fd34 <pvPortMalloc+0xf0>

		/* Check the requested block size is not so large that the top bit is
		set.  The top bit of the block size member of the BlockLink_t structure
		is used to determine who owns the block - the application or the
		kernel, so it must be free. */
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800fc56:	4b53      	ldr	r3, [pc, #332]	; (800fda4 <pvPortMalloc+0x160>)
 800fc58:	681f      	ldr	r7, [r3, #0]
 800fc5a:	423d      	tst	r5, r7
 800fc5c:	d12e      	bne.n	800fcbc <pvPortMalloc+0x78>
		{
			/* The wanted size is increased so it can contain a BlockLink_t
			structure in addition to the requested amount of bytes. */
			if( xWantedSize > 0 )
 800fc5e:	b36d      	cbz	r5, 800fcbc <pvPortMalloc+0x78>
			{
				xWantedSize += xHeapStructSize;
 800fc60:	f105 0408 	add.w	r4, r5, #8

				/* Ensure that blocks are always aligned to the required number
				of bytes. */
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 800fc64:	076d      	lsls	r5, r5, #29
				{
					/* Byte alignment required. */
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 800fc66:	bf1c      	itt	ne
 800fc68:	f024 0407 	bicne.w	r4, r4, #7
 800fc6c:	3408      	addne	r4, #8
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}

			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 800fc6e:	b32c      	cbz	r4, 800fcbc <pvPortMalloc+0x78>
 800fc70:	f8df c144 	ldr.w	ip, [pc, #324]	; 800fdb8 <pvPortMalloc+0x174>
 800fc74:	f8dc 5000 	ldr.w	r5, [ip]
 800fc78:	42a5      	cmp	r5, r4
 800fc7a:	d31f      	bcc.n	800fcbc <pvPortMalloc+0x78>
			{
				/* Traverse the list from the start	(lowest address) block until
				one	of adequate size is found. */
				pxPreviousBlock = &xStart;
				pxBlock = xStart.pxNextFreeBlock;
 800fc7c:	484a      	ldr	r0, [pc, #296]	; (800fda8 <pvPortMalloc+0x164>)
 800fc7e:	6803      	ldr	r3, [r0, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 800fc80:	e003      	b.n	800fc8a <pvPortMalloc+0x46>
 800fc82:	681a      	ldr	r2, [r3, #0]
 800fc84:	b122      	cbz	r2, 800fc90 <pvPortMalloc+0x4c>
 800fc86:	4618      	mov	r0, r3
 800fc88:	4613      	mov	r3, r2
 800fc8a:	6859      	ldr	r1, [r3, #4]
 800fc8c:	42a1      	cmp	r1, r4
 800fc8e:	d3f8      	bcc.n	800fc82 <pvPortMalloc+0x3e>
					pxBlock = pxBlock->pxNextFreeBlock;
				}

				/* If the end marker was reached then a block of adequate size
				was	not found. */
				if( pxBlock != pxEnd )
 800fc90:	42b3      	cmp	r3, r6
 800fc92:	d013      	beq.n	800fcbc <pvPortMalloc+0x78>
				{
					/* Return the memory space pointed to - jumping over the
					BlockLink_t structure at its start. */
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800fc94:	4698      	mov	r8, r3
					of the list of free blocks. */
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;

					/* If the block is larger than required it can be split into
					two. */
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800fc96:	1b0a      	subs	r2, r1, r4
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800fc98:	f858 eb08 	ldr.w	lr, [r8], #8
 800fc9c:	f8c0 e000 	str.w	lr, [r0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800fca0:	2a10      	cmp	r2, #16
 800fca2:	d929      	bls.n	800fcf8 <pvPortMalloc+0xb4>
					{
						/* This block is to be split into two.  Create a new
						block following the number of bytes requested. The void
						cast is used to prevent byte alignment warnings from the
						compiler. */
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 800fca4:	1919      	adds	r1, r3, r4
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 800fca6:	0748      	lsls	r0, r1, #29
 800fca8:	d00f      	beq.n	800fcca <pvPortMalloc+0x86>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 800fcaa:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fcae:	f383 8811 	msr	BASEPRI, r3
 800fcb2:	f3bf 8f6f 	isb	sy
 800fcb6:	f3bf 8f4f 	dsb	sy
 800fcba:	e7fe      	b.n	800fcba <pvPortMalloc+0x76>
			mtCOVERAGE_TEST_MARKER();
		}

		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
 800fcbc:	f001 ff10 	bl	8011ae0 <xTaskResumeAll>
 800fcc0:	f04f 0800 	mov.w	r8, #0
	}
	#endif

	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
	return pvReturn;
}
 800fcc4:	4640      	mov	r0, r8
 800fcc6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 800fcca:	604a      	str	r2, [r1, #4]
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800fccc:	4a36      	ldr	r2, [pc, #216]	; (800fda8 <pvPortMalloc+0x164>)
						pxBlock->xBlockSize = xWantedSize;
 800fcce:	605c      	str	r4, [r3, #4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800fcd0:	4614      	mov	r4, r2
 800fcd2:	6812      	ldr	r2, [r2, #0]
 800fcd4:	4291      	cmp	r1, r2
 800fcd6:	d8fb      	bhi.n	800fcd0 <pvPortMalloc+0x8c>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800fcd8:	6860      	ldr	r0, [r4, #4]
 800fcda:	eb04 0e00 	add.w	lr, r4, r0
 800fcde:	4571      	cmp	r1, lr
 800fce0:	d04b      	beq.n	800fd7a <pvPortMalloc+0x136>
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800fce2:	f8d1 e004 	ldr.w	lr, [r1, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800fce6:	eb01 000e 	add.w	r0, r1, lr
 800fcea:	4282      	cmp	r2, r0
 800fcec:	d051      	beq.n	800fd92 <pvPortMalloc+0x14e>

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 800fcee:	428c      	cmp	r4, r1
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800fcf0:	600a      	str	r2, [r1, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800fcf2:	bf18      	it	ne
 800fcf4:	6021      	strne	r1, [r4, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800fcf6:	6859      	ldr	r1, [r3, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800fcf8:	4a2c      	ldr	r2, [pc, #176]	; (800fdac <pvPortMalloc+0x168>)
 800fcfa:	6810      	ldr	r0, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800fcfc:	1a6d      	subs	r5, r5, r1
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800fcfe:	4285      	cmp	r5, r0
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 800fd00:	bf38      	it	cc
 800fd02:	6015      	strcc	r5, [r2, #0]
					xNumberOfSuccessfulAllocations++;
 800fd04:	4a2a      	ldr	r2, [pc, #168]	; (800fdb0 <pvPortMalloc+0x16c>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800fd06:	f8cc 5000 	str.w	r5, [ip]
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800fd0a:	4339      	orrs	r1, r7
					pxBlock->pxNextFreeBlock = NULL;
 800fd0c:	2000      	movs	r0, #0
 800fd0e:	e9c3 0100 	strd	r0, r1, [r3]
					xNumberOfSuccessfulAllocations++;
 800fd12:	6813      	ldr	r3, [r2, #0]
 800fd14:	3301      	adds	r3, #1
 800fd16:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
 800fd18:	f001 fee2 	bl	8011ae0 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 800fd1c:	f018 0f07 	tst.w	r8, #7
 800fd20:	d0d0      	beq.n	800fcc4 <pvPortMalloc+0x80>
 800fd22:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fd26:	f383 8811 	msr	BASEPRI, r3
 800fd2a:	f3bf 8f6f 	isb	sy
 800fd2e:	f3bf 8f4f 	dsb	sy
 800fd32:	e7fe      	b.n	800fd32 <pvPortMalloc+0xee>
	uxAddress = ( size_t ) ucHeap;
 800fd34:	4b1f      	ldr	r3, [pc, #124]	; (800fdb4 <pvPortMalloc+0x170>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 800fd36:	075e      	lsls	r6, r3, #29
 800fd38:	d118      	bne.n	800fd6c <pvPortMalloc+0x128>
 800fd3a:	f503 3680 	add.w	r6, r3, #65536	; 0x10000
 800fd3e:	4619      	mov	r1, r3
	uxAddress -= xHeapStructSize;
 800fd40:	3e08      	subs	r6, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800fd42:	f026 0607 	bic.w	r6, r6, #7
	pxEnd = ( void * ) uxAddress;
 800fd46:	6016      	str	r6, [r2, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800fd48:	4a18      	ldr	r2, [pc, #96]	; (800fdac <pvPortMalloc+0x168>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800fd4a:	4817      	ldr	r0, [pc, #92]	; (800fda8 <pvPortMalloc+0x164>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800fd4c:	4c15      	ldr	r4, [pc, #84]	; (800fda4 <pvPortMalloc+0x160>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800fd4e:	6001      	str	r1, [r0, #0]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 800fd50:	1af3      	subs	r3, r6, r3
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800fd52:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800fd54:	4a18      	ldr	r2, [pc, #96]	; (800fdb8 <pvPortMalloc+0x174>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800fd56:	f04f 4700 	mov.w	r7, #2147483648	; 0x80000000
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800fd5a:	6013      	str	r3, [r2, #0]
	xStart.xBlockSize = ( size_t ) 0;
 800fd5c:	2200      	movs	r2, #0
 800fd5e:	6042      	str	r2, [r0, #4]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800fd60:	6027      	str	r7, [r4, #0]
	pxEnd->pxNextFreeBlock = NULL;
 800fd62:	e9c6 2200 	strd	r2, r2, [r6]
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 800fd66:	e9c1 6300 	strd	r6, r3, [r1]
}
 800fd6a:	e776      	b.n	800fc5a <pvPortMalloc+0x16>
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 800fd6c:	1dd9      	adds	r1, r3, #7
	pucAlignedHeap = ( uint8_t * ) uxAddress;
 800fd6e:	f021 0107 	bic.w	r1, r1, #7
 800fd72:	f503 3680 	add.w	r6, r3, #65536	; 0x10000
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800fd76:	460b      	mov	r3, r1
 800fd78:	e7e2      	b.n	800fd40 <pvPortMalloc+0xfc>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800fd7a:	6849      	ldr	r1, [r1, #4]
 800fd7c:	eb00 0e01 	add.w	lr, r0, r1
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800fd80:	eb04 010e 	add.w	r1, r4, lr
 800fd84:	428a      	cmp	r2, r1
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800fd86:	f8c4 e004 	str.w	lr, [r4, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800fd8a:	d001      	beq.n	800fd90 <pvPortMalloc+0x14c>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800fd8c:	6022      	str	r2, [r4, #0]
	if( pxIterator != pxBlockToInsert )
 800fd8e:	e7b2      	b.n	800fcf6 <pvPortMalloc+0xb2>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800fd90:	4621      	mov	r1, r4
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800fd92:	42b2      	cmp	r2, r6
 800fd94:	d0ab      	beq.n	800fcee <pvPortMalloc+0xaa>
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800fd96:	6850      	ldr	r0, [r2, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800fd98:	6812      	ldr	r2, [r2, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800fd9a:	4470      	add	r0, lr
 800fd9c:	6048      	str	r0, [r1, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800fd9e:	e7a6      	b.n	800fcee <pvPortMalloc+0xaa>
 800fda0:	200031a0 	.word	0x200031a0
 800fda4:	200131a4 	.word	0x200131a4
 800fda8:	200131b8 	.word	0x200131b8
 800fdac:	200131ac 	.word	0x200131ac
 800fdb0:	200131b0 	.word	0x200131b0
 800fdb4:	200031a4 	.word	0x200031a4
 800fdb8:	200131a8 	.word	0x200131a8

0800fdbc <vPortFree>:
	if( pv != NULL )
 800fdbc:	b1d0      	cbz	r0, 800fdf4 <vPortFree+0x38>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800fdbe:	4a2c      	ldr	r2, [pc, #176]	; (800fe70 <vPortFree+0xb4>)
 800fdc0:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800fdc4:	6812      	ldr	r2, [r2, #0]
 800fdc6:	4213      	tst	r3, r2
 800fdc8:	d00b      	beq.n	800fde2 <vPortFree+0x26>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 800fdca:	f850 1c08 	ldr.w	r1, [r0, #-8]
 800fdce:	b191      	cbz	r1, 800fdf6 <vPortFree+0x3a>
 800fdd0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fdd4:	f383 8811 	msr	BASEPRI, r3
 800fdd8:	f3bf 8f6f 	isb	sy
 800fddc:	f3bf 8f4f 	dsb	sy
 800fde0:	e7fe      	b.n	800fde0 <vPortFree+0x24>
 800fde2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fde6:	f383 8811 	msr	BASEPRI, r3
 800fdea:	f3bf 8f6f 	isb	sy
 800fdee:	f3bf 8f4f 	dsb	sy
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800fdf2:	e7fe      	b.n	800fdf2 <vPortFree+0x36>
 800fdf4:	4770      	bx	lr
{
 800fdf6:	b510      	push	{r4, lr}
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800fdf8:	ea23 0302 	bic.w	r3, r3, r2
{
 800fdfc:	b082      	sub	sp, #8
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800fdfe:	f840 3c04 	str.w	r3, [r0, #-4]
					xFreeBytesRemaining += pxLink->xBlockSize;
 800fe02:	4c1c      	ldr	r4, [pc, #112]	; (800fe74 <vPortFree+0xb8>)
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800fe04:	9001      	str	r0, [sp, #4]
				vTaskSuspendAll();
 800fe06:	f001 fe63 	bl	8011ad0 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 800fe0a:	9801      	ldr	r0, [sp, #4]
 800fe0c:	6822      	ldr	r2, [r4, #0]
 800fe0e:	f850 1c04 	ldr.w	r1, [r0, #-4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800fe12:	4b19      	ldr	r3, [pc, #100]	; (800fe78 <vPortFree+0xbc>)
					xFreeBytesRemaining += pxLink->xBlockSize;
 800fe14:	440a      	add	r2, r1
		puc -= xHeapStructSize;
 800fe16:	3808      	subs	r0, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 800fe18:	6022      	str	r2, [r4, #0]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800fe1a:	461a      	mov	r2, r3
 800fe1c:	681b      	ldr	r3, [r3, #0]
 800fe1e:	4298      	cmp	r0, r3
 800fe20:	d8fb      	bhi.n	800fe1a <vPortFree+0x5e>
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800fe22:	6854      	ldr	r4, [r2, #4]
 800fe24:	eb02 0e04 	add.w	lr, r2, r4
 800fe28:	4570      	cmp	r0, lr
 800fe2a:	d010      	beq.n	800fe4e <vPortFree+0x92>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800fe2c:	eb00 0c01 	add.w	ip, r0, r1
 800fe30:	4563      	cmp	r3, ip
 800fe32:	d014      	beq.n	800fe5e <vPortFree+0xa2>
	if( pxIterator != pxBlockToInsert )
 800fe34:	4282      	cmp	r2, r0
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800fe36:	6003      	str	r3, [r0, #0]
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800fe38:	bf18      	it	ne
 800fe3a:	6010      	strne	r0, [r2, #0]
					xNumberOfSuccessfulFrees++;
 800fe3c:	4a0f      	ldr	r2, [pc, #60]	; (800fe7c <vPortFree+0xc0>)
 800fe3e:	6813      	ldr	r3, [r2, #0]
 800fe40:	3301      	adds	r3, #1
 800fe42:	6013      	str	r3, [r2, #0]
}
 800fe44:	b002      	add	sp, #8
 800fe46:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				( void ) xTaskResumeAll();
 800fe4a:	f001 be49 	b.w	8011ae0 <xTaskResumeAll>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800fe4e:	4421      	add	r1, r4
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800fe50:	1850      	adds	r0, r2, r1
 800fe52:	4283      	cmp	r3, r0
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800fe54:	6051      	str	r1, [r2, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800fe56:	d001      	beq.n	800fe5c <vPortFree+0xa0>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800fe58:	6013      	str	r3, [r2, #0]
	if( pxIterator != pxBlockToInsert )
 800fe5a:	e7ef      	b.n	800fe3c <vPortFree+0x80>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800fe5c:	4610      	mov	r0, r2
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800fe5e:	4c08      	ldr	r4, [pc, #32]	; (800fe80 <vPortFree+0xc4>)
 800fe60:	6824      	ldr	r4, [r4, #0]
 800fe62:	42a3      	cmp	r3, r4
 800fe64:	d0e6      	beq.n	800fe34 <vPortFree+0x78>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800fe66:	e9d3 3400 	ldrd	r3, r4, [r3]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800fe6a:	4421      	add	r1, r4
 800fe6c:	6041      	str	r1, [r0, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800fe6e:	e7e1      	b.n	800fe34 <vPortFree+0x78>
 800fe70:	200131a4 	.word	0x200131a4
 800fe74:	200131a8 	.word	0x200131a8
 800fe78:	200131b8 	.word	0x200131b8
 800fe7c:	200131b4 	.word	0x200131b4
 800fe80:	200031a0 	.word	0x200031a0

0800fe84 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800fe84:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800fe88:	f04f 31ff 	mov.w	r1, #4294967295
	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800fe8c:	2200      	movs	r2, #0
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800fe8e:	e9c0 3101 	strd	r3, r1, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800fe92:	e9c0 3303 	strd	r3, r3, [r0, #12]
	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800fe96:	6002      	str	r2, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 800fe98:	4770      	bx	lr
 800fe9a:	bf00      	nop

0800fe9c <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 800fe9c:	2300      	movs	r3, #0
 800fe9e:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 800fea0:	4770      	bx	lr
 800fea2:	bf00      	nop

0800fea4 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 800fea4:	6843      	ldr	r3, [r0, #4]

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 800fea6:	689a      	ldr	r2, [r3, #8]
 800fea8:	608a      	str	r2, [r1, #8]
	pxIndex->pxPrevious = pxNewListItem;

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800feaa:	6802      	ldr	r2, [r0, #0]
{
 800feac:	b410      	push	{r4}
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800feae:	689c      	ldr	r4, [r3, #8]
	pxNewListItem->pxNext = pxIndex;
 800feb0:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 800feb2:	3201      	adds	r2, #1
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800feb4:	6061      	str	r1, [r4, #4]
	pxIndex->pxPrevious = pxNewListItem;
 800feb6:	6099      	str	r1, [r3, #8]
}
 800feb8:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxNewListItem->pxContainer = pxList;
 800febc:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800febe:	6002      	str	r2, [r0, #0]
}
 800fec0:	4770      	bx	lr
 800fec2:	bf00      	nop

0800fec4 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 800fec4:	b430      	push	{r4, r5}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 800fec6:	680d      	ldr	r5, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 800fec8:	1c6b      	adds	r3, r5, #1
 800feca:	d010      	beq.n	800feee <vListInsert+0x2a>
			4) Using a queue or semaphore before it has been initialised or
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		**********************************************************************/

		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 800fecc:	f100 0308 	add.w	r3, r0, #8
 800fed0:	461c      	mov	r4, r3
 800fed2:	685b      	ldr	r3, [r3, #4]
 800fed4:	681a      	ldr	r2, [r3, #0]
 800fed6:	42aa      	cmp	r2, r5
 800fed8:	d9fa      	bls.n	800fed0 <vListInsert+0xc>

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800feda:	6802      	ldr	r2, [r0, #0]
	pxNewListItem->pxNext = pxIterator->pxNext;
 800fedc:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 800fede:	3201      	adds	r2, #1
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 800fee0:	6099      	str	r1, [r3, #8]
	pxNewListItem->pxPrevious = pxIterator;
 800fee2:	608c      	str	r4, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 800fee4:	6061      	str	r1, [r4, #4]
	pxNewListItem->pxContainer = pxList;
 800fee6:	6108      	str	r0, [r1, #16]
}
 800fee8:	bc30      	pop	{r4, r5}
	( pxList->uxNumberOfItems )++;
 800feea:	6002      	str	r2, [r0, #0]
}
 800feec:	4770      	bx	lr
		pxIterator = pxList->xListEnd.pxPrevious;
 800feee:	6904      	ldr	r4, [r0, #16]
	pxNewListItem->pxNext = pxIterator->pxNext;
 800fef0:	6863      	ldr	r3, [r4, #4]
 800fef2:	e7f2      	b.n	800feda <vListInsert+0x16>

0800fef4 <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
 800fef4:	6903      	ldr	r3, [r0, #16]
{
 800fef6:	b410      	push	{r4}

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800fef8:	e9d0 1201 	ldrd	r1, r2, [r0, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 800fefc:	685c      	ldr	r4, [r3, #4]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800fefe:	608a      	str	r2, [r1, #8]
	if( pxList->pxIndex == pxItemToRemove )
 800ff00:	4284      	cmp	r4, r0
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 800ff02:	6051      	str	r1, [r2, #4]
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 800ff04:	bf08      	it	eq
 800ff06:	605a      	streq	r2, [r3, #4]
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
	( pxList->uxNumberOfItems )--;
 800ff08:	681a      	ldr	r2, [r3, #0]

	return pxList->uxNumberOfItems;
}
 800ff0a:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxItemToRemove->pxContainer = NULL;
 800ff0e:	2100      	movs	r1, #0
	( pxList->uxNumberOfItems )--;
 800ff10:	3a01      	subs	r2, #1
	pxItemToRemove->pxContainer = NULL;
 800ff12:	6101      	str	r1, [r0, #16]
	( pxList->uxNumberOfItems )--;
 800ff14:	601a      	str	r2, [r3, #0]
	return pxList->uxNumberOfItems;
 800ff16:	6818      	ldr	r0, [r3, #0]
}
 800ff18:	4770      	bx	lr
 800ff1a:	bf00      	nop

0800ff1c <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 800ff1c:	4808      	ldr	r0, [pc, #32]	; (800ff40 <prvPortStartFirstTask+0x24>)
 800ff1e:	6800      	ldr	r0, [r0, #0]
 800ff20:	6800      	ldr	r0, [r0, #0]
 800ff22:	f380 8808 	msr	MSP, r0
 800ff26:	f04f 0000 	mov.w	r0, #0
 800ff2a:	f380 8814 	msr	CONTROL, r0
 800ff2e:	b662      	cpsie	i
 800ff30:	b661      	cpsie	f
 800ff32:	f3bf 8f4f 	dsb	sy
 800ff36:	f3bf 8f6f 	isb	sy
 800ff3a:	df00      	svc	0
 800ff3c:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 800ff3e:	0000      	.short	0x0000
 800ff40:	e000ed08 	.word	0xe000ed08

0800ff44 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 800ff44:	f8df 000c 	ldr.w	r0, [pc, #12]	; 800ff54 <vPortEnableVFP+0x10>
 800ff48:	6801      	ldr	r1, [r0, #0]
 800ff4a:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800ff4e:	6001      	str	r1, [r0, #0]
 800ff50:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 800ff52:	0000      	.short	0x0000
 800ff54:	e000ed88 	.word	0xe000ed88

0800ff58 <prvTaskExitError>:
	configASSERT( uxCriticalNesting == ~0UL );
 800ff58:	4b0e      	ldr	r3, [pc, #56]	; (800ff94 <prvTaskExitError+0x3c>)
 800ff5a:	681b      	ldr	r3, [r3, #0]
{
 800ff5c:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 800ff5e:	2200      	movs	r2, #0
	configASSERT( uxCriticalNesting == ~0UL );
 800ff60:	3301      	adds	r3, #1
volatile uint32_t ulDummy = 0;
 800ff62:	9201      	str	r2, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 800ff64:	d008      	beq.n	800ff78 <prvTaskExitError+0x20>
 800ff66:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ff6a:	f383 8811 	msr	BASEPRI, r3
 800ff6e:	f3bf 8f6f 	isb	sy
 800ff72:	f3bf 8f4f 	dsb	sy
 800ff76:	e7fe      	b.n	800ff76 <prvTaskExitError+0x1e>
 800ff78:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ff7c:	f383 8811 	msr	BASEPRI, r3
 800ff80:	f3bf 8f6f 	isb	sy
 800ff84:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800ff88:	9b01      	ldr	r3, [sp, #4]
 800ff8a:	2b00      	cmp	r3, #0
 800ff8c:	d0fc      	beq.n	800ff88 <prvTaskExitError+0x30>
}
 800ff8e:	b002      	add	sp, #8
 800ff90:	4770      	bx	lr
 800ff92:	bf00      	nop
 800ff94:	20000088 	.word	0x20000088

0800ff98 <pxPortInitialiseStack>:
{
 800ff98:	b410      	push	{r4}
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800ff9a:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800ff9e:	4c07      	ldr	r4, [pc, #28]	; (800ffbc <pxPortInitialiseStack+0x24>)
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800ffa0:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800ffa4:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800ffa8:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800ffac:	e940 4103 	strd	r4, r1, [r0, #-12]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800ffb0:	e940 3209 	strd	r3, r2, [r0, #-36]	; 0x24
}
 800ffb4:	f85d 4b04 	ldr.w	r4, [sp], #4
 800ffb8:	3844      	subs	r0, #68	; 0x44
 800ffba:	4770      	bx	lr
 800ffbc:	0800ff59 	.word	0x0800ff59

0800ffc0 <SVC_Handler>:
	__asm volatile (
 800ffc0:	4b07      	ldr	r3, [pc, #28]	; (800ffe0 <pxCurrentTCBConst2>)
 800ffc2:	6819      	ldr	r1, [r3, #0]
 800ffc4:	6808      	ldr	r0, [r1, #0]
 800ffc6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ffca:	f380 8809 	msr	PSP, r0
 800ffce:	f3bf 8f6f 	isb	sy
 800ffd2:	f04f 0000 	mov.w	r0, #0
 800ffd6:	f380 8811 	msr	BASEPRI, r0
 800ffda:	4770      	bx	lr
 800ffdc:	f3af 8000 	nop.w

0800ffe0 <pxCurrentTCBConst2>:
 800ffe0:	20013208 	.word	0x20013208

0800ffe4 <vPortEnterCritical>:
 800ffe4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ffe8:	f383 8811 	msr	BASEPRI, r3
 800ffec:	f3bf 8f6f 	isb	sy
 800fff0:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 800fff4:	4a0b      	ldr	r2, [pc, #44]	; (8010024 <vPortEnterCritical+0x40>)
 800fff6:	6813      	ldr	r3, [r2, #0]
 800fff8:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800fffa:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800fffc:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800fffe:	d000      	beq.n	8010002 <vPortEnterCritical+0x1e>
}
 8010000:	4770      	bx	lr
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 8010002:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8010006:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 801000a:	b2db      	uxtb	r3, r3
 801000c:	2b00      	cmp	r3, #0
 801000e:	d0f7      	beq.n	8010000 <vPortEnterCritical+0x1c>
 8010010:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010014:	f383 8811 	msr	BASEPRI, r3
 8010018:	f3bf 8f6f 	isb	sy
 801001c:	f3bf 8f4f 	dsb	sy
 8010020:	e7fe      	b.n	8010020 <vPortEnterCritical+0x3c>
 8010022:	bf00      	nop
 8010024:	20000088 	.word	0x20000088

08010028 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 8010028:	4a08      	ldr	r2, [pc, #32]	; (801004c <vPortExitCritical+0x24>)
 801002a:	6813      	ldr	r3, [r2, #0]
 801002c:	b943      	cbnz	r3, 8010040 <vPortExitCritical+0x18>
 801002e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010032:	f383 8811 	msr	BASEPRI, r3
 8010036:	f3bf 8f6f 	isb	sy
 801003a:	f3bf 8f4f 	dsb	sy
 801003e:	e7fe      	b.n	801003e <vPortExitCritical+0x16>
	uxCriticalNesting--;
 8010040:	3b01      	subs	r3, #1
 8010042:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 8010044:	b90b      	cbnz	r3, 801004a <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 8010046:	f383 8811 	msr	BASEPRI, r3
}
 801004a:	4770      	bx	lr
 801004c:	20000088 	.word	0x20000088

08010050 <PendSV_Handler>:
	__asm volatile
 8010050:	f3ef 8009 	mrs	r0, PSP
 8010054:	f3bf 8f6f 	isb	sy
 8010058:	4b15      	ldr	r3, [pc, #84]	; (80100b0 <pxCurrentTCBConst>)
 801005a:	681a      	ldr	r2, [r3, #0]
 801005c:	f01e 0f10 	tst.w	lr, #16
 8010060:	bf08      	it	eq
 8010062:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 8010066:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801006a:	6010      	str	r0, [r2, #0]
 801006c:	e92d 0009 	stmdb	sp!, {r0, r3}
 8010070:	f04f 0050 	mov.w	r0, #80	; 0x50
 8010074:	f380 8811 	msr	BASEPRI, r0
 8010078:	f3bf 8f4f 	dsb	sy
 801007c:	f3bf 8f6f 	isb	sy
 8010080:	f001 fd54 	bl	8011b2c <vTaskSwitchContext>
 8010084:	f04f 0000 	mov.w	r0, #0
 8010088:	f380 8811 	msr	BASEPRI, r0
 801008c:	bc09      	pop	{r0, r3}
 801008e:	6819      	ldr	r1, [r3, #0]
 8010090:	6808      	ldr	r0, [r1, #0]
 8010092:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010096:	f01e 0f10 	tst.w	lr, #16
 801009a:	bf08      	it	eq
 801009c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 80100a0:	f380 8809 	msr	PSP, r0
 80100a4:	f3bf 8f6f 	isb	sy
 80100a8:	4770      	bx	lr
 80100aa:	bf00      	nop
 80100ac:	f3af 8000 	nop.w

080100b0 <pxCurrentTCBConst>:
 80100b0:	20013208 	.word	0x20013208

080100b4 <xPortSysTickHandler>:
{
 80100b4:	b508      	push	{r3, lr}
	__asm volatile
 80100b6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80100ba:	f383 8811 	msr	BASEPRI, r3
 80100be:	f3bf 8f6f 	isb	sy
 80100c2:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 80100c6:	f001 fd21 	bl	8011b0c <xTaskIncrementTick>
 80100ca:	b128      	cbz	r0, 80100d8 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 80100cc:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80100d0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80100d4:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 80100d8:	2300      	movs	r3, #0
 80100da:	f383 8811 	msr	BASEPRI, r3
}
 80100de:	bd08      	pop	{r3, pc}

080100e0 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 80100e0:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 80100e4:	2300      	movs	r3, #0
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 80100e6:	4906      	ldr	r1, [pc, #24]	; (8010100 <vPortSetupTimerInterrupt+0x20>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 80100e8:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 80100ea:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 80100ec:	680b      	ldr	r3, [r1, #0]
 80100ee:	4905      	ldr	r1, [pc, #20]	; (8010104 <vPortSetupTimerInterrupt+0x24>)
 80100f0:	fba1 1303 	umull	r1, r3, r1, r3
 80100f4:	099b      	lsrs	r3, r3, #6
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 80100f6:	2007      	movs	r0, #7
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 80100f8:	3b01      	subs	r3, #1
 80100fa:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 80100fc:	6110      	str	r0, [r2, #16]
}
 80100fe:	4770      	bx	lr
 8010100:	2000007c 	.word	0x2000007c
 8010104:	10624dd3 	.word	0x10624dd3

08010108 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8010108:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 801010c:	4a49      	ldr	r2, [pc, #292]	; (8010234 <xPortStartScheduler+0x12c>)
 801010e:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 8010112:	4291      	cmp	r1, r2
 8010114:	d043      	beq.n	801019e <xPortStartScheduler+0x96>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 8010116:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 801011a:	4b47      	ldr	r3, [pc, #284]	; (8010238 <xPortStartScheduler+0x130>)
 801011c:	429a      	cmp	r2, r3
 801011e:	d035      	beq.n	801018c <xPortStartScheduler+0x84>
{
 8010120:	b570      	push	{r4, r5, r6, lr}
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 8010122:	4b46      	ldr	r3, [pc, #280]	; (801023c <xPortStartScheduler+0x134>)
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8010124:	4846      	ldr	r0, [pc, #280]	; (8010240 <xPortStartScheduler+0x138>)
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 8010126:	781a      	ldrb	r2, [r3, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 8010128:	4c46      	ldr	r4, [pc, #280]	; (8010244 <xPortStartScheduler+0x13c>)
{
 801012a:	b084      	sub	sp, #16
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 801012c:	21ff      	movs	r1, #255	; 0xff
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 801012e:	b2d2      	uxtb	r2, r2
 8010130:	9202      	str	r2, [sp, #8]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 8010132:	7019      	strb	r1, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8010134:	781b      	ldrb	r3, [r3, #0]
 8010136:	b2db      	uxtb	r3, r3
 8010138:	f88d 3007 	strb.w	r3, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 801013c:	f89d 3007 	ldrb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8010140:	f89d 2007 	ldrb.w	r2, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8010144:	f003 0350 	and.w	r3, r3, #80	; 0x50
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 8010148:	2107      	movs	r1, #7
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 801014a:	7003      	strb	r3, [r0, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 801014c:	0610      	lsls	r0, r2, #24
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 801014e:	6021      	str	r1, [r4, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8010150:	bf48      	it	mi
 8010152:	2206      	movmi	r2, #6
 8010154:	d511      	bpl.n	801017a <xPortStartScheduler+0x72>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 8010156:	f89d 3007 	ldrb.w	r3, [sp, #7]
 801015a:	005b      	lsls	r3, r3, #1
 801015c:	b2db      	uxtb	r3, r3
 801015e:	f88d 3007 	strb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8010162:	f89d 1007 	ldrb.w	r1, [sp, #7]
 8010166:	0609      	lsls	r1, r1, #24
 8010168:	4610      	mov	r0, r2
 801016a:	f102 32ff 	add.w	r2, r2, #4294967295
 801016e:	d4f2      	bmi.n	8010156 <xPortStartScheduler+0x4e>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 8010170:	2803      	cmp	r0, #3
 8010172:	6020      	str	r0, [r4, #0]
 8010174:	f88d 3007 	strb.w	r3, [sp, #7]
 8010178:	d01a      	beq.n	80101b0 <xPortStartScheduler+0xa8>
	__asm volatile
 801017a:	f04f 0350 	mov.w	r3, #80	; 0x50
 801017e:	f383 8811 	msr	BASEPRI, r3
 8010182:	f3bf 8f6f 	isb	sy
 8010186:	f3bf 8f4f 	dsb	sy
 801018a:	e7fe      	b.n	801018a <xPortStartScheduler+0x82>
 801018c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010190:	f383 8811 	msr	BASEPRI, r3
 8010194:	f3bf 8f6f 	isb	sy
 8010198:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 801019c:	e7fe      	b.n	801019c <xPortStartScheduler+0x94>
 801019e:	f04f 0350 	mov.w	r3, #80	; 0x50
 80101a2:	f383 8811 	msr	BASEPRI, r3
 80101a6:	f3bf 8f6f 	isb	sy
 80101aa:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 80101ae:	e7fe      	b.n	80101ae <xPortStartScheduler+0xa6>
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 80101b0:	9b02      	ldr	r3, [sp, #8]
 80101b2:	4a22      	ldr	r2, [pc, #136]	; (801023c <xPortStartScheduler+0x134>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 80101b4:	f04f 25e0 	mov.w	r5, #3758153728	; 0xe000e000
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 80101b8:	f44f 7140 	mov.w	r1, #768	; 0x300
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 80101bc:	b2db      	uxtb	r3, r3
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 80101be:	6021      	str	r1, [r4, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 80101c0:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 80101c2:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
	uxCriticalNesting = 0;
 80101c6:	4c20      	ldr	r4, [pc, #128]	; (8010248 <xPortStartScheduler+0x140>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 80101c8:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 80101cc:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 80101d0:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
 80101d4:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 80101d8:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	uxCriticalNesting = 0;
 80101dc:	2600      	movs	r6, #0
	vPortSetupTimerInterrupt();
 80101de:	f7ff ff7f 	bl	80100e0 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 80101e2:	6026      	str	r6, [r4, #0]
	vPortEnableVFP();
 80101e4:	f7ff feae 	bl	800ff44 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 80101e8:	f8d5 3f34 	ldr.w	r3, [r5, #3892]	; 0xf34
 80101ec:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 80101f0:	f8c5 3f34 	str.w	r3, [r5, #3892]	; 0xf34
	prvPortStartFirstTask();
 80101f4:	f7ff fe92 	bl	800ff1c <prvPortStartFirstTask>
	vTaskSwitchContext();
 80101f8:	f001 fc98 	bl	8011b2c <vTaskSwitchContext>
	configASSERT( uxCriticalNesting == ~0UL );
 80101fc:	6823      	ldr	r3, [r4, #0]
volatile uint32_t ulDummy = 0;
 80101fe:	9603      	str	r6, [sp, #12]
	configASSERT( uxCriticalNesting == ~0UL );
 8010200:	3301      	adds	r3, #1
 8010202:	d008      	beq.n	8010216 <xPortStartScheduler+0x10e>
 8010204:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010208:	f383 8811 	msr	BASEPRI, r3
 801020c:	f3bf 8f6f 	isb	sy
 8010210:	f3bf 8f4f 	dsb	sy
 8010214:	e7fe      	b.n	8010214 <xPortStartScheduler+0x10c>
 8010216:	f04f 0350 	mov.w	r3, #80	; 0x50
 801021a:	f383 8811 	msr	BASEPRI, r3
 801021e:	f3bf 8f6f 	isb	sy
 8010222:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 8010226:	9b03      	ldr	r3, [sp, #12]
 8010228:	2b00      	cmp	r3, #0
 801022a:	d0fc      	beq.n	8010226 <xPortStartScheduler+0x11e>
}
 801022c:	2000      	movs	r0, #0
 801022e:	b004      	add	sp, #16
 8010230:	bd70      	pop	{r4, r5, r6, pc}
 8010232:	bf00      	nop
 8010234:	410fc271 	.word	0x410fc271
 8010238:	410fc270 	.word	0x410fc270
 801023c:	e000e400 	.word	0xe000e400
 8010240:	200131c0 	.word	0x200131c0
 8010244:	200131c4 	.word	0x200131c4
 8010248:	20000088 	.word	0x20000088

0801024c <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 801024c:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 8010250:	2b0f      	cmp	r3, #15
 8010252:	d90e      	bls.n	8010272 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 8010254:	4911      	ldr	r1, [pc, #68]	; (801029c <vPortValidateInterruptPriority+0x50>)
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 8010256:	4a12      	ldr	r2, [pc, #72]	; (80102a0 <vPortValidateInterruptPriority+0x54>)
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 8010258:	5c5b      	ldrb	r3, [r3, r1]
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 801025a:	7812      	ldrb	r2, [r2, #0]
 801025c:	429a      	cmp	r2, r3
 801025e:	d908      	bls.n	8010272 <vPortValidateInterruptPriority+0x26>
 8010260:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010264:	f383 8811 	msr	BASEPRI, r3
 8010268:	f3bf 8f6f 	isb	sy
 801026c:	f3bf 8f4f 	dsb	sy
 8010270:	e7fe      	b.n	8010270 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 8010272:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8010276:	4a0b      	ldr	r2, [pc, #44]	; (80102a4 <vPortValidateInterruptPriority+0x58>)
 8010278:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 801027c:	6812      	ldr	r2, [r2, #0]
 801027e:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8010282:	4293      	cmp	r3, r2
 8010284:	d908      	bls.n	8010298 <vPortValidateInterruptPriority+0x4c>
 8010286:	f04f 0350 	mov.w	r3, #80	; 0x50
 801028a:	f383 8811 	msr	BASEPRI, r3
 801028e:	f3bf 8f6f 	isb	sy
 8010292:	f3bf 8f4f 	dsb	sy
 8010296:	e7fe      	b.n	8010296 <vPortValidateInterruptPriority+0x4a>
	}
 8010298:	4770      	bx	lr
 801029a:	bf00      	nop
 801029c:	e000e3f0 	.word	0xe000e3f0
 80102a0:	200131c0 	.word	0x200131c0
 80102a4:	200131c4 	.word	0x200131c4

080102a8 <prvCopyDataToQueue>:

#endif /* configUSE_MUTEXES */
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
{
 80102a8:	b570      	push	{r4, r5, r6, lr}
 80102aa:	4604      	mov	r4, r0

	/* This function is called from a critical section. */

	uxMessagesWaiting = pxQueue->uxMessagesWaiting;

	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 80102ac:	6c00      	ldr	r0, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80102ae:	6ba6      	ldr	r6, [r4, #56]	; 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 80102b0:	b920      	cbnz	r0, 80102bc <prvCopyDataToQueue+0x14>
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 80102b2:	6825      	ldr	r5, [r4, #0]
 80102b4:	b34d      	cbz	r5, 801030a <prvCopyDataToQueue+0x62>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 80102b6:	3601      	adds	r6, #1
 80102b8:	63a6      	str	r6, [r4, #56]	; 0x38

	return xReturn;
}
 80102ba:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
 80102bc:	4615      	mov	r5, r2
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 80102be:	4602      	mov	r2, r0
	else if( xPosition == queueSEND_TO_BACK )
 80102c0:	b97d      	cbnz	r5, 80102e2 <prvCopyDataToQueue+0x3a>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 80102c2:	6860      	ldr	r0, [r4, #4]
 80102c4:	f01d fe6f 	bl	802dfa6 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80102c8:	6863      	ldr	r3, [r4, #4]
 80102ca:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80102cc:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 80102ce:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80102d0:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 80102d2:	4293      	cmp	r3, r2
			pxQueue->pcWriteTo = pxQueue->pcHead;
 80102d4:	bf24      	itt	cs
 80102d6:	6823      	ldrcs	r3, [r4, #0]
 80102d8:	6063      	strcs	r3, [r4, #4]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 80102da:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
 80102dc:	4628      	mov	r0, r5
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 80102de:	63a6      	str	r6, [r4, #56]	; 0x38
}
 80102e0:	bd70      	pop	{r4, r5, r6, pc}
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 80102e2:	68e0      	ldr	r0, [r4, #12]
 80102e4:	f01d fe5f 	bl	802dfa6 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 80102e8:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80102ea:	68e3      	ldr	r3, [r4, #12]
 80102ec:	4251      	negs	r1, r2
 80102ee:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 80102f0:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 80102f2:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 80102f4:	4293      	cmp	r3, r2
 80102f6:	d202      	bcs.n	80102fe <prvCopyDataToQueue+0x56>
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 80102f8:	68a3      	ldr	r3, [r4, #8]
 80102fa:	440b      	add	r3, r1
 80102fc:	60e3      	str	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 80102fe:	2d02      	cmp	r5, #2
 8010300:	d008      	beq.n	8010314 <prvCopyDataToQueue+0x6c>
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8010302:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
 8010304:	2000      	movs	r0, #0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8010306:	63a6      	str	r6, [r4, #56]	; 0x38
}
 8010308:	bd70      	pop	{r4, r5, r6, pc}
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 801030a:	68a0      	ldr	r0, [r4, #8]
 801030c:	f001 fde0 	bl	8011ed0 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 8010310:	60a5      	str	r5, [r4, #8]
 8010312:	e7d0      	b.n	80102b6 <prvCopyDataToQueue+0xe>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8010314:	2e01      	cmp	r6, #1
 8010316:	bf38      	it	cc
 8010318:	2601      	movcc	r6, #1
BaseType_t xReturn = pdFALSE;
 801031a:	2000      	movs	r0, #0
 801031c:	e7cc      	b.n	80102b8 <prvCopyDataToQueue+0x10>
 801031e:	bf00      	nop

08010320 <xQueueGenericCreateStatic>:
	{
 8010320:	b530      	push	{r4, r5, lr}
 8010322:	b083      	sub	sp, #12
 8010324:	f89d 4018 	ldrb.w	r4, [sp, #24]
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8010328:	b940      	cbnz	r0, 801033c <xQueueGenericCreateStatic+0x1c>
 801032a:	f04f 0350 	mov.w	r3, #80	; 0x50
 801032e:	f383 8811 	msr	BASEPRI, r3
 8010332:	f3bf 8f6f 	isb	sy
 8010336:	f3bf 8f4f 	dsb	sy
 801033a:	e7fe      	b.n	801033a <xQueueGenericCreateStatic+0x1a>
		configASSERT( pxStaticQueue != NULL );
 801033c:	461d      	mov	r5, r3
 801033e:	b17b      	cbz	r3, 8010360 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 8010340:	b302      	cbz	r2, 8010384 <xQueueGenericCreateStatic+0x64>
 8010342:	b1b1      	cbz	r1, 8010372 <xQueueGenericCreateStatic+0x52>
			volatile size_t xSize = sizeof( StaticQueue_t );
 8010344:	2350      	movs	r3, #80	; 0x50
 8010346:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 8010348:	9b01      	ldr	r3, [sp, #4]
 801034a:	2b50      	cmp	r3, #80	; 0x50
 801034c:	d023      	beq.n	8010396 <xQueueGenericCreateStatic+0x76>
 801034e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010352:	f383 8811 	msr	BASEPRI, r3
 8010356:	f3bf 8f6f 	isb	sy
 801035a:	f3bf 8f4f 	dsb	sy
 801035e:	e7fe      	b.n	801035e <xQueueGenericCreateStatic+0x3e>
 8010360:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010364:	f383 8811 	msr	BASEPRI, r3
 8010368:	f3bf 8f6f 	isb	sy
 801036c:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 8010370:	e7fe      	b.n	8010370 <xQueueGenericCreateStatic+0x50>
 8010372:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010376:	f383 8811 	msr	BASEPRI, r3
 801037a:	f3bf 8f6f 	isb	sy
 801037e:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 8010382:	e7fe      	b.n	8010382 <xQueueGenericCreateStatic+0x62>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 8010384:	bb89      	cbnz	r1, 80103ea <xQueueGenericCreateStatic+0xca>
			volatile size_t xSize = sizeof( StaticQueue_t );
 8010386:	2250      	movs	r2, #80	; 0x50
 8010388:	9201      	str	r2, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 801038a:	9a01      	ldr	r2, [sp, #4]
 801038c:	2a50      	cmp	r2, #80	; 0x50
 801038e:	d1de      	bne.n	801034e <xQueueGenericCreateStatic+0x2e>
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 8010390:	9a01      	ldr	r2, [sp, #4]
 8010392:	462a      	mov	r2, r5
 8010394:	e000      	b.n	8010398 <xQueueGenericCreateStatic+0x78>
 8010396:	9b01      	ldr	r3, [sp, #4]
	if( uxItemSize == ( UBaseType_t ) 0 )
 8010398:	602a      	str	r2, [r5, #0]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 801039a:	2201      	movs	r2, #1
	pxNewQueue->uxItemSize = uxItemSize;
 801039c:	e9c5 010f 	strd	r0, r1, [r5, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 80103a0:	f885 2046 	strb.w	r2, [r5, #70]	; 0x46
	taskENTER_CRITICAL();
 80103a4:	f7ff fe1e 	bl	800ffe4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80103a8:	e9d5 120f 	ldrd	r1, r2, [r5, #60]	; 0x3c
 80103ac:	6828      	ldr	r0, [r5, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 80103ae:	6068      	str	r0, [r5, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80103b0:	fb02 f101 	mul.w	r1, r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80103b4:	1a8a      	subs	r2, r1, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80103b6:	4401      	add	r1, r0
 80103b8:	60a9      	str	r1, [r5, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 80103ba:	2100      	movs	r1, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80103bc:	4402      	add	r2, r0
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 80103be:	63a9      	str	r1, [r5, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 80103c0:	21ff      	movs	r1, #255	; 0xff
 80103c2:	f885 1044 	strb.w	r1, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80103c6:	60ea      	str	r2, [r5, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 80103c8:	f885 1045 	strb.w	r1, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 80103cc:	f105 0010 	add.w	r0, r5, #16
 80103d0:	f7ff fd58 	bl	800fe84 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 80103d4:	f105 0024 	add.w	r0, r5, #36	; 0x24
 80103d8:	f7ff fd54 	bl	800fe84 <vListInitialise>
	taskEXIT_CRITICAL();
 80103dc:	f7ff fe24 	bl	8010028 <vPortExitCritical>
	}
 80103e0:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
 80103e2:	f885 404c 	strb.w	r4, [r5, #76]	; 0x4c
	}
 80103e6:	b003      	add	sp, #12
 80103e8:	bd30      	pop	{r4, r5, pc}
 80103ea:	f04f 0350 	mov.w	r3, #80	; 0x50
 80103ee:	f383 8811 	msr	BASEPRI, r3
 80103f2:	f3bf 8f6f 	isb	sy
 80103f6:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 80103fa:	e7fe      	b.n	80103fa <xQueueGenericCreateStatic+0xda>

080103fc <xQueueGenericCreate>:
	{
 80103fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 80103fe:	b940      	cbnz	r0, 8010412 <xQueueGenericCreate+0x16>
 8010400:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010404:	f383 8811 	msr	BASEPRI, r3
 8010408:	f3bf 8f6f 	isb	sy
 801040c:	f3bf 8f4f 	dsb	sy
 8010410:	e7fe      	b.n	8010410 <xQueueGenericCreate+0x14>
 8010412:	4605      	mov	r5, r0
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8010414:	fb01 f000 	mul.w	r0, r1, r0
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 8010418:	3050      	adds	r0, #80	; 0x50
 801041a:	460e      	mov	r6, r1
 801041c:	4617      	mov	r7, r2
 801041e:	f7ff fc11 	bl	800fc44 <pvPortMalloc>
		if( pxNewQueue != NULL )
 8010422:	4604      	mov	r4, r0
 8010424:	b340      	cbz	r0, 8010478 <xQueueGenericCreate+0x7c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 8010426:	2300      	movs	r3, #0
 8010428:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 801042c:	b336      	cbz	r6, 801047c <xQueueGenericCreate+0x80>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 801042e:	f100 0350 	add.w	r3, r0, #80	; 0x50
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 8010432:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 8010434:	e9c4 560f 	strd	r5, r6, [r4, #60]	; 0x3c
	taskENTER_CRITICAL();
 8010438:	f7ff fdd4 	bl	800ffe4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 801043c:	e9d4 230f 	ldrd	r2, r3, [r4, #60]	; 0x3c
 8010440:	6821      	ldr	r1, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 8010442:	6061      	str	r1, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010444:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010448:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 801044a:	440a      	add	r2, r1
 801044c:	60a2      	str	r2, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 801044e:	2200      	movs	r2, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010450:	440b      	add	r3, r1
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 8010452:	63a2      	str	r2, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 8010454:	22ff      	movs	r2, #255	; 0xff
 8010456:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 801045a:	60e3      	str	r3, [r4, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 801045c:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 8010460:	f104 0010 	add.w	r0, r4, #16
 8010464:	f7ff fd0e 	bl	800fe84 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 8010468:	f104 0024 	add.w	r0, r4, #36	; 0x24
 801046c:	f7ff fd0a 	bl	800fe84 <vListInitialise>
	taskEXIT_CRITICAL();
 8010470:	f7ff fdda 	bl	8010028 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 8010474:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 8010478:	4620      	mov	r0, r4
 801047a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801047c:	4603      	mov	r3, r0
 801047e:	e7d8      	b.n	8010432 <xQueueGenericCreate+0x36>

08010480 <xQueueCreateCountingSemaphoreStatic>:
		configASSERT( uxMaxCount != 0 );
 8010480:	b940      	cbnz	r0, 8010494 <xQueueCreateCountingSemaphoreStatic+0x14>
 8010482:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010486:	f383 8811 	msr	BASEPRI, r3
 801048a:	f3bf 8f6f 	isb	sy
 801048e:	f3bf 8f4f 	dsb	sy
 8010492:	e7fe      	b.n	8010492 <xQueueCreateCountingSemaphoreStatic+0x12>
		configASSERT( uxInitialCount <= uxMaxCount );
 8010494:	4288      	cmp	r0, r1
 8010496:	d208      	bcs.n	80104aa <xQueueCreateCountingSemaphoreStatic+0x2a>
 8010498:	f04f 0350 	mov.w	r3, #80	; 0x50
 801049c:	f383 8811 	msr	BASEPRI, r3
 80104a0:	f3bf 8f6f 	isb	sy
 80104a4:	f3bf 8f4f 	dsb	sy
 80104a8:	e7fe      	b.n	80104a8 <xQueueCreateCountingSemaphoreStatic+0x28>
	{
 80104aa:	b530      	push	{r4, r5, lr}
 80104ac:	4615      	mov	r5, r2
 80104ae:	b085      	sub	sp, #20
		configASSERT( pxStaticQueue != NULL );
 80104b0:	2a00      	cmp	r2, #0
 80104b2:	d03c      	beq.n	801052e <xQueueCreateCountingSemaphoreStatic+0xae>
			volatile size_t xSize = sizeof( StaticQueue_t );
 80104b4:	2350      	movs	r3, #80	; 0x50
 80104b6:	9303      	str	r3, [sp, #12]
			configASSERT( xSize == sizeof( Queue_t ) );
 80104b8:	9b03      	ldr	r3, [sp, #12]
 80104ba:	2b50      	cmp	r3, #80	; 0x50
 80104bc:	d008      	beq.n	80104d0 <xQueueCreateCountingSemaphoreStatic+0x50>
 80104be:	f04f 0350 	mov.w	r3, #80	; 0x50
 80104c2:	f383 8811 	msr	BASEPRI, r3
 80104c6:	f3bf 8f6f 	isb	sy
 80104ca:	f3bf 8f4f 	dsb	sy
 80104ce:	e7fe      	b.n	80104ce <xQueueCreateCountingSemaphoreStatic+0x4e>
	pxNewQueue->uxItemSize = uxItemSize;
 80104d0:	2400      	movs	r4, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 80104d2:	2301      	movs	r3, #1
 80104d4:	f882 3046 	strb.w	r3, [r2, #70]	; 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 80104d8:	602a      	str	r2, [r5, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 80104da:	e9c2 040f 	strd	r0, r4, [r2, #60]	; 0x3c
 80104de:	9101      	str	r1, [sp, #4]
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 80104e0:	9b03      	ldr	r3, [sp, #12]
	taskENTER_CRITICAL();
 80104e2:	f7ff fd7f 	bl	800ffe4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80104e6:	e9d5 030f 	ldrd	r0, r3, [r5, #60]	; 0x3c
 80104ea:	682a      	ldr	r2, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 80104ec:	63ac      	str	r4, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80104ee:	fb03 f000 	mul.w	r0, r3, r0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80104f2:	1ac3      	subs	r3, r0, r3
 80104f4:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80104f6:	4410      	add	r0, r2
		pxQueue->cRxLock = queueUNLOCKED;
 80104f8:	f04f 0eff 	mov.w	lr, #255	; 0xff
 80104fc:	f885 e044 	strb.w	lr, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010500:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 8010502:	606a      	str	r2, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 8010504:	f885 e045 	strb.w	lr, [r5, #69]	; 0x45
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010508:	60a8      	str	r0, [r5, #8]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 801050a:	f105 0010 	add.w	r0, r5, #16
 801050e:	f7ff fcb9 	bl	800fe84 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 8010512:	f105 0024 	add.w	r0, r5, #36	; 0x24
 8010516:	f7ff fcb5 	bl	800fe84 <vListInitialise>
	taskEXIT_CRITICAL();
 801051a:	f7ff fd85 	bl	8010028 <vPortExitCritical>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 801051e:	9901      	ldr	r1, [sp, #4]
 8010520:	63a9      	str	r1, [r5, #56]	; 0x38
		pxNewQueue->ucQueueType = ucQueueType;
 8010522:	2302      	movs	r3, #2
	}
 8010524:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
 8010526:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
	}
 801052a:	b005      	add	sp, #20
 801052c:	bd30      	pop	{r4, r5, pc}
 801052e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010532:	f383 8811 	msr	BASEPRI, r3
 8010536:	f3bf 8f6f 	isb	sy
 801053a:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 801053e:	e7fe      	b.n	801053e <xQueueCreateCountingSemaphoreStatic+0xbe>

08010540 <xQueueCreateCountingSemaphore>:
	{
 8010540:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxMaxCount != 0 );
 8010542:	b940      	cbnz	r0, 8010556 <xQueueCreateCountingSemaphore+0x16>
 8010544:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010548:	f383 8811 	msr	BASEPRI, r3
 801054c:	f3bf 8f6f 	isb	sy
 8010550:	f3bf 8f4f 	dsb	sy
 8010554:	e7fe      	b.n	8010554 <xQueueCreateCountingSemaphore+0x14>
		configASSERT( uxInitialCount <= uxMaxCount );
 8010556:	4288      	cmp	r0, r1
 8010558:	460e      	mov	r6, r1
 801055a:	4604      	mov	r4, r0
 801055c:	d208      	bcs.n	8010570 <xQueueCreateCountingSemaphore+0x30>
 801055e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010562:	f383 8811 	msr	BASEPRI, r3
 8010566:	f3bf 8f6f 	isb	sy
 801056a:	f3bf 8f4f 	dsb	sy
 801056e:	e7fe      	b.n	801056e <xQueueCreateCountingSemaphore+0x2e>
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 8010570:	2050      	movs	r0, #80	; 0x50
 8010572:	f7ff fb67 	bl	800fc44 <pvPortMalloc>
		if( pxNewQueue != NULL )
 8010576:	4605      	mov	r5, r0
 8010578:	b330      	cbz	r0, 80105c8 <xQueueCreateCountingSemaphore+0x88>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 801057a:	2700      	movs	r7, #0
	pxNewQueue->uxItemSize = uxItemSize;
 801057c:	e9c0 470f 	strd	r4, r7, [r0, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 8010580:	f880 7046 	strb.w	r7, [r0, #70]	; 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 8010584:	6000      	str	r0, [r0, #0]
	taskENTER_CRITICAL();
 8010586:	f7ff fd2d 	bl	800ffe4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 801058a:	e9d5 230f 	ldrd	r2, r3, [r5, #60]	; 0x3c
 801058e:	6829      	ldr	r1, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 8010590:	63af      	str	r7, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010592:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010596:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010598:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 801059a:	440b      	add	r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 801059c:	60aa      	str	r2, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
 801059e:	22ff      	movs	r2, #255	; 0xff
 80105a0:	f885 2044 	strb.w	r2, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80105a4:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 80105a6:	6069      	str	r1, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 80105a8:	f885 2045 	strb.w	r2, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 80105ac:	f105 0010 	add.w	r0, r5, #16
 80105b0:	f7ff fc68 	bl	800fe84 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 80105b4:	f105 0024 	add.w	r0, r5, #36	; 0x24
 80105b8:	f7ff fc64 	bl	800fe84 <vListInitialise>
	taskEXIT_CRITICAL();
 80105bc:	f7ff fd34 	bl	8010028 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 80105c0:	2302      	movs	r3, #2
 80105c2:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 80105c6:	63ae      	str	r6, [r5, #56]	; 0x38
	}
 80105c8:	4628      	mov	r0, r5
 80105ca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080105cc <xQueueGenericSend>:
{
 80105cc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80105d0:	b085      	sub	sp, #20
 80105d2:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
 80105d4:	2800      	cmp	r0, #0
 80105d6:	f000 80a4 	beq.w	8010722 <xQueueGenericSend+0x156>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80105da:	4688      	mov	r8, r1
 80105dc:	461f      	mov	r7, r3
 80105de:	4604      	mov	r4, r0
 80105e0:	2900      	cmp	r1, #0
 80105e2:	f000 8091 	beq.w	8010708 <xQueueGenericSend+0x13c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 80105e6:	2f02      	cmp	r7, #2
 80105e8:	d10b      	bne.n	8010602 <xQueueGenericSend+0x36>
 80105ea:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80105ec:	2b01      	cmp	r3, #1
 80105ee:	d008      	beq.n	8010602 <xQueueGenericSend+0x36>
 80105f0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80105f4:	f383 8811 	msr	BASEPRI, r3
 80105f8:	f3bf 8f6f 	isb	sy
 80105fc:	f3bf 8f4f 	dsb	sy
 8010600:	e7fe      	b.n	8010600 <xQueueGenericSend+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8010602:	f001 fc0f 	bl	8011e24 <xTaskGetSchedulerState>
 8010606:	4605      	mov	r5, r0
 8010608:	2800      	cmp	r0, #0
 801060a:	f000 8093 	beq.w	8010734 <xQueueGenericSend+0x168>
 801060e:	2500      	movs	r5, #0
			{
				/* Tasks that are removed from the event list will get added to
				the pending ready list as the scheduler is still suspended. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010610:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
 8010614:	f7ff fce6 	bl	800ffe4 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8010618:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 801061a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 801061c:	429a      	cmp	r2, r3
 801061e:	f0c0 80ef 	bcc.w	8010800 <xQueueGenericSend+0x234>
 8010622:	2f02      	cmp	r7, #2
 8010624:	f000 80ec 	beq.w	8010800 <xQueueGenericSend+0x234>
				if( xTicksToWait == ( TickType_t ) 0 )
 8010628:	9801      	ldr	r0, [sp, #4]
 801062a:	2800      	cmp	r0, #0
 801062c:	f000 8101 	beq.w	8010832 <xQueueGenericSend+0x266>
				else if( xEntryTimeSet == pdFALSE )
 8010630:	2d00      	cmp	r5, #0
 8010632:	f000 80e1 	beq.w	80107f8 <xQueueGenericSend+0x22c>
		taskEXIT_CRITICAL();
 8010636:	f7ff fcf7 	bl	8010028 <vPortExitCritical>
		vTaskSuspendAll();
 801063a:	f001 fa49 	bl	8011ad0 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 801063e:	f7ff fcd1 	bl	800ffe4 <vPortEnterCritical>
 8010642:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8010646:	2bff      	cmp	r3, #255	; 0xff
 8010648:	bf04      	itt	eq
 801064a:	2300      	moveq	r3, #0
 801064c:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 8010650:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8010654:	2bff      	cmp	r3, #255	; 0xff
 8010656:	bf04      	itt	eq
 8010658:	2300      	moveq	r3, #0
 801065a:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 801065e:	f7ff fce3 	bl	8010028 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8010662:	a901      	add	r1, sp, #4
 8010664:	a802      	add	r0, sp, #8
 8010666:	f001 fb8f 	bl	8011d88 <xTaskCheckForTimeOut>
 801066a:	2800      	cmp	r0, #0
 801066c:	f040 80e6 	bne.w	801083c <xQueueGenericSend+0x270>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8010670:	f7ff fcb8 	bl	800ffe4 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 8010674:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8010676:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8010678:	429a      	cmp	r2, r3
 801067a:	d068      	beq.n	801074e <xQueueGenericSend+0x182>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 801067c:	f7ff fcd4 	bl	8010028 <vPortExitCritical>
	taskENTER_CRITICAL();
 8010680:	f7ff fcb0 	bl	800ffe4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8010684:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
 8010688:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 801068a:	2d00      	cmp	r5, #0
 801068c:	dc04      	bgt.n	8010698 <xQueueGenericSend+0xcc>
 801068e:	e011      	b.n	80106b4 <xQueueGenericSend+0xe8>
			--cTxLock;
 8010690:	1e6a      	subs	r2, r5, #1
 8010692:	b2d3      	uxtb	r3, r2
 8010694:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010696:	b16b      	cbz	r3, 80106b4 <xQueueGenericSend+0xe8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010698:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 801069a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 801069c:	b153      	cbz	r3, 80106b4 <xQueueGenericSend+0xe8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 801069e:	f001 fb1f 	bl	8011ce0 <xTaskRemoveFromEventList>
 80106a2:	2800      	cmp	r0, #0
 80106a4:	d0f4      	beq.n	8010690 <xQueueGenericSend+0xc4>
						vTaskMissedYield();
 80106a6:	f001 fbb7 	bl	8011e18 <vTaskMissedYield>
			--cTxLock;
 80106aa:	1e6a      	subs	r2, r5, #1
 80106ac:	b2d3      	uxtb	r3, r2
 80106ae:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 80106b0:	2b00      	cmp	r3, #0
 80106b2:	d1f1      	bne.n	8010698 <xQueueGenericSend+0xcc>
		pxQueue->cTxLock = queueUNLOCKED;
 80106b4:	23ff      	movs	r3, #255	; 0xff
 80106b6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 80106ba:	f7ff fcb5 	bl	8010028 <vPortExitCritical>
	taskENTER_CRITICAL();
 80106be:	f7ff fc91 	bl	800ffe4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 80106c2:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 80106c6:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 80106c8:	2d00      	cmp	r5, #0
 80106ca:	dd14      	ble.n	80106f6 <xQueueGenericSend+0x12a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80106cc:	f104 0910 	add.w	r9, r4, #16
 80106d0:	e003      	b.n	80106da <xQueueGenericSend+0x10e>
				--cRxLock;
 80106d2:	1e6a      	subs	r2, r5, #1
 80106d4:	b2d3      	uxtb	r3, r2
 80106d6:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 80106d8:	b16b      	cbz	r3, 80106f6 <xQueueGenericSend+0x12a>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80106da:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80106dc:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80106de:	b153      	cbz	r3, 80106f6 <xQueueGenericSend+0x12a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80106e0:	f001 fafe 	bl	8011ce0 <xTaskRemoveFromEventList>
 80106e4:	2800      	cmp	r0, #0
 80106e6:	d0f4      	beq.n	80106d2 <xQueueGenericSend+0x106>
					vTaskMissedYield();
 80106e8:	f001 fb96 	bl	8011e18 <vTaskMissedYield>
				--cRxLock;
 80106ec:	1e6a      	subs	r2, r5, #1
 80106ee:	b2d3      	uxtb	r3, r2
 80106f0:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 80106f2:	2b00      	cmp	r3, #0
 80106f4:	d1f1      	bne.n	80106da <xQueueGenericSend+0x10e>
		pxQueue->cRxLock = queueUNLOCKED;
 80106f6:	23ff      	movs	r3, #255	; 0xff
 80106f8:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 80106fc:	f7ff fc94 	bl	8010028 <vPortExitCritical>
				( void ) xTaskResumeAll();
 8010700:	f001 f9ee 	bl	8011ae0 <xTaskResumeAll>
 8010704:	2501      	movs	r5, #1
 8010706:	e785      	b.n	8010614 <xQueueGenericSend+0x48>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8010708:	6c03      	ldr	r3, [r0, #64]	; 0x40
 801070a:	2b00      	cmp	r3, #0
 801070c:	f43f af6b 	beq.w	80105e6 <xQueueGenericSend+0x1a>
 8010710:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010714:	f383 8811 	msr	BASEPRI, r3
 8010718:	f3bf 8f6f 	isb	sy
 801071c:	f3bf 8f4f 	dsb	sy
 8010720:	e7fe      	b.n	8010720 <xQueueGenericSend+0x154>
 8010722:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010726:	f383 8811 	msr	BASEPRI, r3
 801072a:	f3bf 8f6f 	isb	sy
 801072e:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 8010732:	e7fe      	b.n	8010732 <xQueueGenericSend+0x166>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8010734:	9b01      	ldr	r3, [sp, #4]
 8010736:	2b00      	cmp	r3, #0
 8010738:	f43f af6a 	beq.w	8010610 <xQueueGenericSend+0x44>
 801073c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010740:	f383 8811 	msr	BASEPRI, r3
 8010744:	f3bf 8f6f 	isb	sy
 8010748:	f3bf 8f4f 	dsb	sy
 801074c:	e7fe      	b.n	801074c <xQueueGenericSend+0x180>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 801074e:	f104 0910 	add.w	r9, r4, #16
	taskEXIT_CRITICAL();
 8010752:	f7ff fc69 	bl	8010028 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 8010756:	9901      	ldr	r1, [sp, #4]
 8010758:	4648      	mov	r0, r9
 801075a:	f001 fa33 	bl	8011bc4 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 801075e:	f7ff fc41 	bl	800ffe4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8010762:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8010766:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010768:	2d00      	cmp	r5, #0
 801076a:	dc04      	bgt.n	8010776 <xQueueGenericSend+0x1aa>
 801076c:	e011      	b.n	8010792 <xQueueGenericSend+0x1c6>
			--cTxLock;
 801076e:	1e6b      	subs	r3, r5, #1
 8010770:	b2da      	uxtb	r2, r3
 8010772:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010774:	b16a      	cbz	r2, 8010792 <xQueueGenericSend+0x1c6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010776:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010778:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 801077a:	b153      	cbz	r3, 8010792 <xQueueGenericSend+0x1c6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 801077c:	f001 fab0 	bl	8011ce0 <xTaskRemoveFromEventList>
 8010780:	2800      	cmp	r0, #0
 8010782:	d0f4      	beq.n	801076e <xQueueGenericSend+0x1a2>
						vTaskMissedYield();
 8010784:	f001 fb48 	bl	8011e18 <vTaskMissedYield>
			--cTxLock;
 8010788:	1e6b      	subs	r3, r5, #1
 801078a:	b2da      	uxtb	r2, r3
 801078c:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 801078e:	2a00      	cmp	r2, #0
 8010790:	d1f1      	bne.n	8010776 <xQueueGenericSend+0x1aa>
		pxQueue->cTxLock = queueUNLOCKED;
 8010792:	23ff      	movs	r3, #255	; 0xff
 8010794:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8010798:	f7ff fc46 	bl	8010028 <vPortExitCritical>
	taskENTER_CRITICAL();
 801079c:	f7ff fc22 	bl	800ffe4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 80107a0:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 80107a4:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 80107a6:	2d00      	cmp	r5, #0
 80107a8:	dc04      	bgt.n	80107b4 <xQueueGenericSend+0x1e8>
 80107aa:	e011      	b.n	80107d0 <xQueueGenericSend+0x204>
				--cRxLock;
 80107ac:	1e6b      	subs	r3, r5, #1
 80107ae:	b2da      	uxtb	r2, r3
 80107b0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 80107b2:	b16a      	cbz	r2, 80107d0 <xQueueGenericSend+0x204>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80107b4:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80107b6:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80107b8:	b153      	cbz	r3, 80107d0 <xQueueGenericSend+0x204>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80107ba:	f001 fa91 	bl	8011ce0 <xTaskRemoveFromEventList>
 80107be:	2800      	cmp	r0, #0
 80107c0:	d0f4      	beq.n	80107ac <xQueueGenericSend+0x1e0>
					vTaskMissedYield();
 80107c2:	f001 fb29 	bl	8011e18 <vTaskMissedYield>
				--cRxLock;
 80107c6:	1e6b      	subs	r3, r5, #1
 80107c8:	b2da      	uxtb	r2, r3
 80107ca:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 80107cc:	2a00      	cmp	r2, #0
 80107ce:	d1f1      	bne.n	80107b4 <xQueueGenericSend+0x1e8>
		pxQueue->cRxLock = queueUNLOCKED;
 80107d0:	23ff      	movs	r3, #255	; 0xff
 80107d2:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 80107d6:	f7ff fc27 	bl	8010028 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 80107da:	f001 f981 	bl	8011ae0 <xTaskResumeAll>
 80107de:	2800      	cmp	r0, #0
 80107e0:	d190      	bne.n	8010704 <xQueueGenericSend+0x138>
					portYIELD_WITHIN_API();
 80107e2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80107e6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80107ea:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80107ee:	f3bf 8f4f 	dsb	sy
 80107f2:	f3bf 8f6f 	isb	sy
 80107f6:	e785      	b.n	8010704 <xQueueGenericSend+0x138>
					vTaskInternalSetTimeOutState( &xTimeOut );
 80107f8:	a802      	add	r0, sp, #8
 80107fa:	f001 fab9 	bl	8011d70 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 80107fe:	e71a      	b.n	8010636 <xQueueGenericSend+0x6a>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8010800:	463a      	mov	r2, r7
 8010802:	4641      	mov	r1, r8
 8010804:	4620      	mov	r0, r4
 8010806:	f7ff fd4f 	bl	80102a8 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 801080a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801080c:	2b00      	cmp	r3, #0
 801080e:	d153      	bne.n	80108b8 <xQueueGenericSend+0x2ec>
					else if( xYieldRequired != pdFALSE )
 8010810:	b148      	cbz	r0, 8010826 <xQueueGenericSend+0x25a>
						queueYIELD_IF_USING_PREEMPTION();
 8010812:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8010816:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 801081a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 801081e:	f3bf 8f4f 	dsb	sy
 8010822:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8010826:	f7ff fbff 	bl	8010028 <vPortExitCritical>
				return pdPASS;
 801082a:	2001      	movs	r0, #1
}
 801082c:	b005      	add	sp, #20
 801082e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010832:	9000      	str	r0, [sp, #0]
					taskEXIT_CRITICAL();
 8010834:	f7ff fbf8 	bl	8010028 <vPortExitCritical>
					return errQUEUE_FULL;
 8010838:	9800      	ldr	r0, [sp, #0]
 801083a:	e7f7      	b.n	801082c <xQueueGenericSend+0x260>
	taskENTER_CRITICAL();
 801083c:	f7ff fbd2 	bl	800ffe4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8010840:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8010844:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010846:	2d00      	cmp	r5, #0
 8010848:	dd10      	ble.n	801086c <xQueueGenericSend+0x2a0>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 801084a:	f104 0624 	add.w	r6, r4, #36	; 0x24
 801084e:	e003      	b.n	8010858 <xQueueGenericSend+0x28c>
			--cTxLock;
 8010850:	1e6b      	subs	r3, r5, #1
 8010852:	b2da      	uxtb	r2, r3
 8010854:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010856:	b14a      	cbz	r2, 801086c <xQueueGenericSend+0x2a0>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010858:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 801085a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 801085c:	b133      	cbz	r3, 801086c <xQueueGenericSend+0x2a0>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 801085e:	f001 fa3f 	bl	8011ce0 <xTaskRemoveFromEventList>
 8010862:	2800      	cmp	r0, #0
 8010864:	d0f4      	beq.n	8010850 <xQueueGenericSend+0x284>
						vTaskMissedYield();
 8010866:	f001 fad7 	bl	8011e18 <vTaskMissedYield>
 801086a:	e7f1      	b.n	8010850 <xQueueGenericSend+0x284>
		pxQueue->cTxLock = queueUNLOCKED;
 801086c:	23ff      	movs	r3, #255	; 0xff
 801086e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8010872:	f7ff fbd9 	bl	8010028 <vPortExitCritical>
	taskENTER_CRITICAL();
 8010876:	f7ff fbb5 	bl	800ffe4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 801087a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 801087e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010880:	2d00      	cmp	r5, #0
 8010882:	dd10      	ble.n	80108a6 <xQueueGenericSend+0x2da>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010884:	f104 0610 	add.w	r6, r4, #16
 8010888:	e003      	b.n	8010892 <xQueueGenericSend+0x2c6>
				--cRxLock;
 801088a:	1e6b      	subs	r3, r5, #1
 801088c:	b2da      	uxtb	r2, r3
 801088e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010890:	b14a      	cbz	r2, 80108a6 <xQueueGenericSend+0x2da>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010892:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010894:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010896:	b133      	cbz	r3, 80108a6 <xQueueGenericSend+0x2da>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010898:	f001 fa22 	bl	8011ce0 <xTaskRemoveFromEventList>
 801089c:	2800      	cmp	r0, #0
 801089e:	d0f4      	beq.n	801088a <xQueueGenericSend+0x2be>
					vTaskMissedYield();
 80108a0:	f001 faba 	bl	8011e18 <vTaskMissedYield>
 80108a4:	e7f1      	b.n	801088a <xQueueGenericSend+0x2be>
		pxQueue->cRxLock = queueUNLOCKED;
 80108a6:	23ff      	movs	r3, #255	; 0xff
 80108a8:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 80108ac:	f7ff fbbc 	bl	8010028 <vPortExitCritical>
			( void ) xTaskResumeAll();
 80108b0:	f001 f916 	bl	8011ae0 <xTaskResumeAll>
			return errQUEUE_FULL;
 80108b4:	2000      	movs	r0, #0
 80108b6:	e7b9      	b.n	801082c <xQueueGenericSend+0x260>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80108b8:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80108bc:	f001 fa10 	bl	8011ce0 <xTaskRemoveFromEventList>
 80108c0:	2800      	cmp	r0, #0
 80108c2:	d0b0      	beq.n	8010826 <xQueueGenericSend+0x25a>
 80108c4:	e7a5      	b.n	8010812 <xQueueGenericSend+0x246>
 80108c6:	bf00      	nop

080108c8 <xQueueGenericSendFromISR>:
	configASSERT( pxQueue );
 80108c8:	2800      	cmp	r0, #0
 80108ca:	d04b      	beq.n	8010964 <xQueueGenericSendFromISR+0x9c>
{
 80108cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80108d0:	460e      	mov	r6, r1
 80108d2:	4617      	mov	r7, r2
 80108d4:	461d      	mov	r5, r3
 80108d6:	4604      	mov	r4, r0
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80108d8:	b321      	cbz	r1, 8010924 <xQueueGenericSendFromISR+0x5c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 80108da:	2d02      	cmp	r5, #2
 80108dc:	d10b      	bne.n	80108f6 <xQueueGenericSendFromISR+0x2e>
 80108de:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80108e0:	2b01      	cmp	r3, #1
 80108e2:	d008      	beq.n	80108f6 <xQueueGenericSendFromISR+0x2e>
 80108e4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80108e8:	f383 8811 	msr	BASEPRI, r3
 80108ec:	f3bf 8f6f 	isb	sy
 80108f0:	f3bf 8f4f 	dsb	sy
 80108f4:	e7fe      	b.n	80108f4 <xQueueGenericSendFromISR+0x2c>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 80108f6:	f7ff fca9 	bl	801024c <vPortValidateInterruptPriority>
	__asm volatile
 80108fa:	f3ef 8811 	mrs	r8, BASEPRI
 80108fe:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010902:	f383 8811 	msr	BASEPRI, r3
 8010906:	f3bf 8f6f 	isb	sy
 801090a:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 801090e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8010910:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8010912:	429a      	cmp	r2, r3
 8010914:	d312      	bcc.n	801093c <xQueueGenericSendFromISR+0x74>
 8010916:	2d02      	cmp	r5, #2
 8010918:	d010      	beq.n	801093c <xQueueGenericSendFromISR+0x74>
			xReturn = errQUEUE_FULL;
 801091a:	2000      	movs	r0, #0
	__asm volatile
 801091c:	f388 8811 	msr	BASEPRI, r8
}
 8010920:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8010924:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8010926:	2b00      	cmp	r3, #0
 8010928:	d0d7      	beq.n	80108da <xQueueGenericSendFromISR+0x12>
	__asm volatile
 801092a:	f04f 0350 	mov.w	r3, #80	; 0x50
 801092e:	f383 8811 	msr	BASEPRI, r3
 8010932:	f3bf 8f6f 	isb	sy
 8010936:	f3bf 8f4f 	dsb	sy
 801093a:	e7fe      	b.n	801093a <xQueueGenericSendFromISR+0x72>
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 801093c:	462a      	mov	r2, r5
			const int8_t cTxLock = pxQueue->cTxLock;
 801093e:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 8010942:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8010944:	4631      	mov	r1, r6
			const int8_t cTxLock = pxQueue->cTxLock;
 8010946:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8010948:	4620      	mov	r0, r4
 801094a:	f7ff fcad 	bl	80102a8 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 801094e:	1c6b      	adds	r3, r5, #1
 8010950:	d011      	beq.n	8010976 <xQueueGenericSendFromISR+0xae>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8010952:	1c6b      	adds	r3, r5, #1
 8010954:	b25b      	sxtb	r3, r3
 8010956:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
			xReturn = pdPASS;
 801095a:	2001      	movs	r0, #1
	__asm volatile
 801095c:	f388 8811 	msr	BASEPRI, r8
}
 8010960:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	__asm volatile
 8010964:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010968:	f383 8811 	msr	BASEPRI, r3
 801096c:	f3bf 8f6f 	isb	sy
 8010970:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 8010974:	e7fe      	b.n	8010974 <xQueueGenericSendFromISR+0xac>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010976:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8010978:	2b00      	cmp	r3, #0
 801097a:	d0ee      	beq.n	801095a <xQueueGenericSendFromISR+0x92>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 801097c:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8010980:	f001 f9ae 	bl	8011ce0 <xTaskRemoveFromEventList>
 8010984:	2800      	cmp	r0, #0
 8010986:	d0e8      	beq.n	801095a <xQueueGenericSendFromISR+0x92>
							if( pxHigherPriorityTaskWoken != NULL )
 8010988:	2f00      	cmp	r7, #0
 801098a:	d0e6      	beq.n	801095a <xQueueGenericSendFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
 801098c:	2001      	movs	r0, #1
 801098e:	6038      	str	r0, [r7, #0]
 8010990:	e7c4      	b.n	801091c <xQueueGenericSendFromISR+0x54>
 8010992:	bf00      	nop

08010994 <xQueueGiveFromISR>:
	configASSERT( pxQueue );
 8010994:	b370      	cbz	r0, 80109f4 <xQueueGiveFromISR+0x60>
	configASSERT( pxQueue->uxItemSize == 0 );
 8010996:	6c03      	ldr	r3, [r0, #64]	; 0x40
{
 8010998:	b570      	push	{r4, r5, r6, lr}
 801099a:	4606      	mov	r6, r0
	configASSERT( pxQueue->uxItemSize == 0 );
 801099c:	b143      	cbz	r3, 80109b0 <xQueueGiveFromISR+0x1c>
 801099e:	f04f 0350 	mov.w	r3, #80	; 0x50
 80109a2:	f383 8811 	msr	BASEPRI, r3
 80109a6:	f3bf 8f6f 	isb	sy
 80109aa:	f3bf 8f4f 	dsb	sy
 80109ae:	e7fe      	b.n	80109ae <xQueueGiveFromISR+0x1a>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 80109b0:	6803      	ldr	r3, [r0, #0]
 80109b2:	460c      	mov	r4, r1
 80109b4:	b33b      	cbz	r3, 8010a06 <xQueueGiveFromISR+0x72>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 80109b6:	f7ff fc49 	bl	801024c <vPortValidateInterruptPriority>
	__asm volatile
 80109ba:	f3ef 8511 	mrs	r5, BASEPRI
 80109be:	f04f 0350 	mov.w	r3, #80	; 0x50
 80109c2:	f383 8811 	msr	BASEPRI, r3
 80109c6:	f3bf 8f6f 	isb	sy
 80109ca:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80109ce:	6bb3      	ldr	r3, [r6, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 80109d0:	6bf2      	ldr	r2, [r6, #60]	; 0x3c
 80109d2:	429a      	cmp	r2, r3
 80109d4:	d923      	bls.n	8010a1e <xQueueGiveFromISR+0x8a>
			const int8_t cTxLock = pxQueue->cTxLock;
 80109d6:	f896 2045 	ldrb.w	r2, [r6, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 80109da:	3301      	adds	r3, #1
			if( cTxLock == queueUNLOCKED )
 80109dc:	2aff      	cmp	r2, #255	; 0xff
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 80109de:	63b3      	str	r3, [r6, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 80109e0:	b253      	sxtb	r3, r2
			if( cTxLock == queueUNLOCKED )
 80109e2:	d020      	beq.n	8010a26 <xQueueGiveFromISR+0x92>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 80109e4:	3301      	adds	r3, #1
 80109e6:	b25b      	sxtb	r3, r3
 80109e8:	f886 3045 	strb.w	r3, [r6, #69]	; 0x45
			xReturn = pdPASS;
 80109ec:	2001      	movs	r0, #1
	__asm volatile
 80109ee:	f385 8811 	msr	BASEPRI, r5
}
 80109f2:	bd70      	pop	{r4, r5, r6, pc}
	__asm volatile
 80109f4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80109f8:	f383 8811 	msr	BASEPRI, r3
 80109fc:	f3bf 8f6f 	isb	sy
 8010a00:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 8010a04:	e7fe      	b.n	8010a04 <xQueueGiveFromISR+0x70>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 8010a06:	6883      	ldr	r3, [r0, #8]
 8010a08:	2b00      	cmp	r3, #0
 8010a0a:	d0d4      	beq.n	80109b6 <xQueueGiveFromISR+0x22>
 8010a0c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010a10:	f383 8811 	msr	BASEPRI, r3
 8010a14:	f3bf 8f6f 	isb	sy
 8010a18:	f3bf 8f4f 	dsb	sy
 8010a1c:	e7fe      	b.n	8010a1c <xQueueGiveFromISR+0x88>
			xReturn = errQUEUE_FULL;
 8010a1e:	2000      	movs	r0, #0
	__asm volatile
 8010a20:	f385 8811 	msr	BASEPRI, r5
}
 8010a24:	bd70      	pop	{r4, r5, r6, pc}
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010a26:	6a73      	ldr	r3, [r6, #36]	; 0x24
 8010a28:	2b00      	cmp	r3, #0
 8010a2a:	d0df      	beq.n	80109ec <xQueueGiveFromISR+0x58>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010a2c:	f106 0024 	add.w	r0, r6, #36	; 0x24
 8010a30:	f001 f956 	bl	8011ce0 <xTaskRemoveFromEventList>
 8010a34:	2800      	cmp	r0, #0
 8010a36:	d0d9      	beq.n	80109ec <xQueueGiveFromISR+0x58>
							if( pxHigherPriorityTaskWoken != NULL )
 8010a38:	2c00      	cmp	r4, #0
 8010a3a:	d0d7      	beq.n	80109ec <xQueueGiveFromISR+0x58>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8010a3c:	2001      	movs	r0, #1
 8010a3e:	6020      	str	r0, [r4, #0]
 8010a40:	e7ee      	b.n	8010a20 <xQueueGiveFromISR+0x8c>
 8010a42:	bf00      	nop

08010a44 <xQueueReceive>:
{
 8010a44:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010a48:	b085      	sub	sp, #20
 8010a4a:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 8010a4c:	2800      	cmp	r0, #0
 8010a4e:	f000 815c 	beq.w	8010d0a <xQueueReceive+0x2c6>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8010a52:	460f      	mov	r7, r1
 8010a54:	4604      	mov	r4, r0
 8010a56:	2900      	cmp	r1, #0
 8010a58:	d079      	beq.n	8010b4e <xQueueReceive+0x10a>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8010a5a:	f001 f9e3 	bl	8011e24 <xTaskGetSchedulerState>
 8010a5e:	2800      	cmp	r0, #0
 8010a60:	f000 8081 	beq.w	8010b66 <xQueueReceive+0x122>
		taskENTER_CRITICAL();
 8010a64:	f7ff fabe 	bl	800ffe4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8010a68:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8010a6a:	2d00      	cmp	r5, #0
 8010a6c:	f040 8138 	bne.w	8010ce0 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
 8010a70:	9b01      	ldr	r3, [sp, #4]
 8010a72:	2b00      	cmp	r3, #0
 8010a74:	f000 80d5 	beq.w	8010c22 <xQueueReceive+0x1de>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8010a78:	a802      	add	r0, sp, #8
 8010a7a:	f001 f979 	bl	8011d70 <vTaskInternalSetTimeOutState>
		prvLockQueue( pxQueue );
 8010a7e:	46a8      	mov	r8, r5
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010a80:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskEXIT_CRITICAL();
 8010a84:	f7ff fad0 	bl	8010028 <vPortExitCritical>
		vTaskSuspendAll();
 8010a88:	f001 f822 	bl	8011ad0 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8010a8c:	f7ff faaa 	bl	800ffe4 <vPortEnterCritical>
 8010a90:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8010a94:	2bff      	cmp	r3, #255	; 0xff
 8010a96:	bf08      	it	eq
 8010a98:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 8010a9c:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8010aa0:	2bff      	cmp	r3, #255	; 0xff
 8010aa2:	bf08      	it	eq
 8010aa4:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 8010aa8:	f7ff fabe 	bl	8010028 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8010aac:	a901      	add	r1, sp, #4
 8010aae:	a802      	add	r0, sp, #8
 8010ab0:	f001 f96a 	bl	8011d88 <xTaskCheckForTimeOut>
 8010ab4:	2800      	cmp	r0, #0
 8010ab6:	d163      	bne.n	8010b80 <xQueueReceive+0x13c>
	taskENTER_CRITICAL();
 8010ab8:	f7ff fa94 	bl	800ffe4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 8010abc:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8010abe:	2b00      	cmp	r3, #0
 8010ac0:	f000 80b5 	beq.w	8010c2e <xQueueReceive+0x1ea>
	taskEXIT_CRITICAL();
 8010ac4:	f7ff fab0 	bl	8010028 <vPortExitCritical>
	taskENTER_CRITICAL();
 8010ac8:	f7ff fa8c 	bl	800ffe4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8010acc:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8010ad0:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010ad2:	2d00      	cmp	r5, #0
 8010ad4:	dc04      	bgt.n	8010ae0 <xQueueReceive+0x9c>
 8010ad6:	e011      	b.n	8010afc <xQueueReceive+0xb8>
			--cTxLock;
 8010ad8:	1e6b      	subs	r3, r5, #1
 8010ada:	b2da      	uxtb	r2, r3
 8010adc:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010ade:	b16a      	cbz	r2, 8010afc <xQueueReceive+0xb8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010ae0:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010ae2:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010ae4:	b153      	cbz	r3, 8010afc <xQueueReceive+0xb8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010ae6:	f001 f8fb 	bl	8011ce0 <xTaskRemoveFromEventList>
 8010aea:	2800      	cmp	r0, #0
 8010aec:	d0f4      	beq.n	8010ad8 <xQueueReceive+0x94>
						vTaskMissedYield();
 8010aee:	f001 f993 	bl	8011e18 <vTaskMissedYield>
			--cTxLock;
 8010af2:	1e6b      	subs	r3, r5, #1
 8010af4:	b2da      	uxtb	r2, r3
 8010af6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010af8:	2a00      	cmp	r2, #0
 8010afa:	d1f1      	bne.n	8010ae0 <xQueueReceive+0x9c>
		pxQueue->cTxLock = queueUNLOCKED;
 8010afc:	23ff      	movs	r3, #255	; 0xff
 8010afe:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8010b02:	f7ff fa91 	bl	8010028 <vPortExitCritical>
	taskENTER_CRITICAL();
 8010b06:	f7ff fa6d 	bl	800ffe4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8010b0a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8010b0e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010b10:	2d00      	cmp	r5, #0
 8010b12:	dd14      	ble.n	8010b3e <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010b14:	f104 0910 	add.w	r9, r4, #16
 8010b18:	e003      	b.n	8010b22 <xQueueReceive+0xde>
				--cRxLock;
 8010b1a:	1e6b      	subs	r3, r5, #1
 8010b1c:	b2da      	uxtb	r2, r3
 8010b1e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010b20:	b16a      	cbz	r2, 8010b3e <xQueueReceive+0xfa>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010b22:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010b24:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010b26:	b153      	cbz	r3, 8010b3e <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010b28:	f001 f8da 	bl	8011ce0 <xTaskRemoveFromEventList>
 8010b2c:	2800      	cmp	r0, #0
 8010b2e:	d0f4      	beq.n	8010b1a <xQueueReceive+0xd6>
					vTaskMissedYield();
 8010b30:	f001 f972 	bl	8011e18 <vTaskMissedYield>
				--cRxLock;
 8010b34:	1e6b      	subs	r3, r5, #1
 8010b36:	b2da      	uxtb	r2, r3
 8010b38:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010b3a:	2a00      	cmp	r2, #0
 8010b3c:	d1f1      	bne.n	8010b22 <xQueueReceive+0xde>
		pxQueue->cRxLock = queueUNLOCKED;
 8010b3e:	23ff      	movs	r3, #255	; 0xff
 8010b40:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 8010b44:	f7ff fa70 	bl	8010028 <vPortExitCritical>
				( void ) xTaskResumeAll();
 8010b48:	f000 ffca 	bl	8011ae0 <xTaskResumeAll>
		taskENTER_CRITICAL();
 8010b4c:	e060      	b.n	8010c10 <xQueueReceive+0x1cc>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8010b4e:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8010b50:	2b00      	cmp	r3, #0
 8010b52:	d082      	beq.n	8010a5a <xQueueReceive+0x16>
	__asm volatile
 8010b54:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010b58:	f383 8811 	msr	BASEPRI, r3
 8010b5c:	f3bf 8f6f 	isb	sy
 8010b60:	f3bf 8f4f 	dsb	sy
 8010b64:	e7fe      	b.n	8010b64 <xQueueReceive+0x120>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8010b66:	9b01      	ldr	r3, [sp, #4]
 8010b68:	2b00      	cmp	r3, #0
 8010b6a:	f43f af7b 	beq.w	8010a64 <xQueueReceive+0x20>
 8010b6e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010b72:	f383 8811 	msr	BASEPRI, r3
 8010b76:	f3bf 8f6f 	isb	sy
 8010b7a:	f3bf 8f4f 	dsb	sy
 8010b7e:	e7fe      	b.n	8010b7e <xQueueReceive+0x13a>
	taskENTER_CRITICAL();
 8010b80:	f7ff fa30 	bl	800ffe4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8010b84:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8010b88:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010b8a:	2d00      	cmp	r5, #0
 8010b8c:	dc04      	bgt.n	8010b98 <xQueueReceive+0x154>
 8010b8e:	e011      	b.n	8010bb4 <xQueueReceive+0x170>
			--cTxLock;
 8010b90:	1e6b      	subs	r3, r5, #1
 8010b92:	b2da      	uxtb	r2, r3
 8010b94:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010b96:	b16a      	cbz	r2, 8010bb4 <xQueueReceive+0x170>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010b98:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010b9a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010b9c:	b153      	cbz	r3, 8010bb4 <xQueueReceive+0x170>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010b9e:	f001 f89f 	bl	8011ce0 <xTaskRemoveFromEventList>
 8010ba2:	2800      	cmp	r0, #0
 8010ba4:	d0f4      	beq.n	8010b90 <xQueueReceive+0x14c>
						vTaskMissedYield();
 8010ba6:	f001 f937 	bl	8011e18 <vTaskMissedYield>
			--cTxLock;
 8010baa:	1e6b      	subs	r3, r5, #1
 8010bac:	b2da      	uxtb	r2, r3
 8010bae:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010bb0:	2a00      	cmp	r2, #0
 8010bb2:	d1f1      	bne.n	8010b98 <xQueueReceive+0x154>
		pxQueue->cTxLock = queueUNLOCKED;
 8010bb4:	23ff      	movs	r3, #255	; 0xff
 8010bb6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8010bba:	f7ff fa35 	bl	8010028 <vPortExitCritical>
	taskENTER_CRITICAL();
 8010bbe:	f7ff fa11 	bl	800ffe4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8010bc2:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8010bc6:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010bc8:	2d00      	cmp	r5, #0
 8010bca:	dd14      	ble.n	8010bf6 <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010bcc:	f104 0910 	add.w	r9, r4, #16
 8010bd0:	e003      	b.n	8010bda <xQueueReceive+0x196>
				--cRxLock;
 8010bd2:	1e6b      	subs	r3, r5, #1
 8010bd4:	b2da      	uxtb	r2, r3
 8010bd6:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010bd8:	b16a      	cbz	r2, 8010bf6 <xQueueReceive+0x1b2>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010bda:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010bdc:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010bde:	b153      	cbz	r3, 8010bf6 <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010be0:	f001 f87e 	bl	8011ce0 <xTaskRemoveFromEventList>
 8010be4:	2800      	cmp	r0, #0
 8010be6:	d0f4      	beq.n	8010bd2 <xQueueReceive+0x18e>
					vTaskMissedYield();
 8010be8:	f001 f916 	bl	8011e18 <vTaskMissedYield>
				--cRxLock;
 8010bec:	1e6b      	subs	r3, r5, #1
 8010bee:	b2da      	uxtb	r2, r3
 8010bf0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010bf2:	2a00      	cmp	r2, #0
 8010bf4:	d1f1      	bne.n	8010bda <xQueueReceive+0x196>
		pxQueue->cRxLock = queueUNLOCKED;
 8010bf6:	23ff      	movs	r3, #255	; 0xff
 8010bf8:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 8010bfc:	f7ff fa14 	bl	8010028 <vPortExitCritical>
			( void ) xTaskResumeAll();
 8010c00:	f000 ff6e 	bl	8011ae0 <xTaskResumeAll>
	taskENTER_CRITICAL();
 8010c04:	f7ff f9ee 	bl	800ffe4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 8010c08:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8010c0a:	b153      	cbz	r3, 8010c22 <xQueueReceive+0x1de>
	taskEXIT_CRITICAL();
 8010c0c:	f7ff fa0c 	bl	8010028 <vPortExitCritical>
		taskENTER_CRITICAL();
 8010c10:	f7ff f9e8 	bl	800ffe4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8010c14:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8010c16:	2d00      	cmp	r5, #0
 8010c18:	d162      	bne.n	8010ce0 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
 8010c1a:	9b01      	ldr	r3, [sp, #4]
 8010c1c:	2b00      	cmp	r3, #0
 8010c1e:	f47f af31 	bne.w	8010a84 <xQueueReceive+0x40>
					taskEXIT_CRITICAL();
 8010c22:	f7ff fa01 	bl	8010028 <vPortExitCritical>
					return errQUEUE_EMPTY;
 8010c26:	2000      	movs	r0, #0
}
 8010c28:	b005      	add	sp, #20
 8010c2a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 8010c2e:	f7ff f9fb 	bl	8010028 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8010c32:	9901      	ldr	r1, [sp, #4]
 8010c34:	4630      	mov	r0, r6
 8010c36:	f000 ffc5 	bl	8011bc4 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 8010c3a:	f7ff f9d3 	bl	800ffe4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8010c3e:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8010c42:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010c44:	2d00      	cmp	r5, #0
 8010c46:	dc04      	bgt.n	8010c52 <xQueueReceive+0x20e>
 8010c48:	e011      	b.n	8010c6e <xQueueReceive+0x22a>
			--cTxLock;
 8010c4a:	1e6b      	subs	r3, r5, #1
 8010c4c:	b2da      	uxtb	r2, r3
 8010c4e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010c50:	b16a      	cbz	r2, 8010c6e <xQueueReceive+0x22a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010c52:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010c54:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010c56:	b153      	cbz	r3, 8010c6e <xQueueReceive+0x22a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010c58:	f001 f842 	bl	8011ce0 <xTaskRemoveFromEventList>
 8010c5c:	2800      	cmp	r0, #0
 8010c5e:	d0f4      	beq.n	8010c4a <xQueueReceive+0x206>
						vTaskMissedYield();
 8010c60:	f001 f8da 	bl	8011e18 <vTaskMissedYield>
			--cTxLock;
 8010c64:	1e6b      	subs	r3, r5, #1
 8010c66:	b2da      	uxtb	r2, r3
 8010c68:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010c6a:	2a00      	cmp	r2, #0
 8010c6c:	d1f1      	bne.n	8010c52 <xQueueReceive+0x20e>
		pxQueue->cTxLock = queueUNLOCKED;
 8010c6e:	23ff      	movs	r3, #255	; 0xff
 8010c70:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8010c74:	f7ff f9d8 	bl	8010028 <vPortExitCritical>
	taskENTER_CRITICAL();
 8010c78:	f7ff f9b4 	bl	800ffe4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8010c7c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8010c80:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010c82:	2d00      	cmp	r5, #0
 8010c84:	dd14      	ble.n	8010cb0 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010c86:	f104 0910 	add.w	r9, r4, #16
 8010c8a:	e003      	b.n	8010c94 <xQueueReceive+0x250>
				--cRxLock;
 8010c8c:	1e6b      	subs	r3, r5, #1
 8010c8e:	b2da      	uxtb	r2, r3
 8010c90:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010c92:	b16a      	cbz	r2, 8010cb0 <xQueueReceive+0x26c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010c94:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010c96:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010c98:	b153      	cbz	r3, 8010cb0 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010c9a:	f001 f821 	bl	8011ce0 <xTaskRemoveFromEventList>
 8010c9e:	2800      	cmp	r0, #0
 8010ca0:	d0f4      	beq.n	8010c8c <xQueueReceive+0x248>
					vTaskMissedYield();
 8010ca2:	f001 f8b9 	bl	8011e18 <vTaskMissedYield>
				--cRxLock;
 8010ca6:	1e6b      	subs	r3, r5, #1
 8010ca8:	b2da      	uxtb	r2, r3
 8010caa:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010cac:	2a00      	cmp	r2, #0
 8010cae:	d1f1      	bne.n	8010c94 <xQueueReceive+0x250>
		pxQueue->cRxLock = queueUNLOCKED;
 8010cb0:	23ff      	movs	r3, #255	; 0xff
 8010cb2:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 8010cb6:	f7ff f9b7 	bl	8010028 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 8010cba:	f000 ff11 	bl	8011ae0 <xTaskResumeAll>
 8010cbe:	2800      	cmp	r0, #0
 8010cc0:	d1a6      	bne.n	8010c10 <xQueueReceive+0x1cc>
					portYIELD_WITHIN_API();
 8010cc2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8010cc6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8010cca:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8010cce:	f3bf 8f4f 	dsb	sy
 8010cd2:	f3bf 8f6f 	isb	sy
		taskENTER_CRITICAL();
 8010cd6:	f7ff f985 	bl	800ffe4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8010cda:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8010cdc:	2d00      	cmp	r5, #0
 8010cde:	d09c      	beq.n	8010c1a <xQueueReceive+0x1d6>
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8010ce0:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8010ce2:	b152      	cbz	r2, 8010cfa <xQueueReceive+0x2b6>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8010ce4:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8010ce6:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8010ce8:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8010cea:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8010cec:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8010cee:	bf24      	itt	cs
 8010cf0:	6821      	ldrcs	r1, [r4, #0]
 8010cf2:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8010cf4:	4638      	mov	r0, r7
 8010cf6:	f01d f956 	bl	802dfa6 <memcpy>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8010cfa:	3d01      	subs	r5, #1
 8010cfc:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010cfe:	6923      	ldr	r3, [r4, #16]
 8010d00:	b963      	cbnz	r3, 8010d1c <xQueueReceive+0x2d8>
				taskEXIT_CRITICAL();
 8010d02:	f7ff f991 	bl	8010028 <vPortExitCritical>
				return pdPASS;
 8010d06:	2001      	movs	r0, #1
 8010d08:	e78e      	b.n	8010c28 <xQueueReceive+0x1e4>
 8010d0a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010d0e:	f383 8811 	msr	BASEPRI, r3
 8010d12:	f3bf 8f6f 	isb	sy
 8010d16:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 8010d1a:	e7fe      	b.n	8010d1a <xQueueReceive+0x2d6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010d1c:	f104 0010 	add.w	r0, r4, #16
 8010d20:	f000 ffde 	bl	8011ce0 <xTaskRemoveFromEventList>
 8010d24:	2800      	cmp	r0, #0
 8010d26:	d0ec      	beq.n	8010d02 <xQueueReceive+0x2be>
						queueYIELD_IF_USING_PREEMPTION();
 8010d28:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8010d2c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8010d30:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8010d34:	f3bf 8f4f 	dsb	sy
 8010d38:	f3bf 8f6f 	isb	sy
 8010d3c:	e7e1      	b.n	8010d02 <xQueueReceive+0x2be>
 8010d3e:	bf00      	nop

08010d40 <xQueueSemaphoreTake>:
{
 8010d40:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010d44:	b084      	sub	sp, #16
 8010d46:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 8010d48:	2800      	cmp	r0, #0
 8010d4a:	d05c      	beq.n	8010e06 <xQueueSemaphoreTake+0xc6>
	configASSERT( pxQueue->uxItemSize == 0 );
 8010d4c:	6c07      	ldr	r7, [r0, #64]	; 0x40
 8010d4e:	4604      	mov	r4, r0
 8010d50:	b147      	cbz	r7, 8010d64 <xQueueSemaphoreTake+0x24>
 8010d52:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010d56:	f383 8811 	msr	BASEPRI, r3
 8010d5a:	f3bf 8f6f 	isb	sy
 8010d5e:	f3bf 8f4f 	dsb	sy
 8010d62:	e7fe      	b.n	8010d62 <xQueueSemaphoreTake+0x22>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8010d64:	f001 f85e 	bl	8011e24 <xTaskGetSchedulerState>
 8010d68:	4605      	mov	r5, r0
 8010d6a:	2800      	cmp	r0, #0
 8010d6c:	d054      	beq.n	8010e18 <xQueueSemaphoreTake+0xd8>
 8010d6e:	463d      	mov	r5, r7
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010d70:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
 8010d74:	f7ff f936 	bl	800ffe4 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 8010d78:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 8010d7a:	2b00      	cmp	r3, #0
 8010d7c:	f040 8148 	bne.w	8011010 <xQueueSemaphoreTake+0x2d0>
				if( xTicksToWait == ( TickType_t ) 0 )
 8010d80:	9b01      	ldr	r3, [sp, #4]
 8010d82:	2b00      	cmp	r3, #0
 8010d84:	f000 813a 	beq.w	8010ffc <xQueueSemaphoreTake+0x2bc>
				else if( xEntryTimeSet == pdFALSE )
 8010d88:	2d00      	cmp	r5, #0
 8010d8a:	f000 809d 	beq.w	8010ec8 <xQueueSemaphoreTake+0x188>
		taskEXIT_CRITICAL();
 8010d8e:	f7ff f94b 	bl	8010028 <vPortExitCritical>
		vTaskSuspendAll();
 8010d92:	f000 fe9d 	bl	8011ad0 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8010d96:	f7ff f925 	bl	800ffe4 <vPortEnterCritical>
 8010d9a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8010d9e:	2bff      	cmp	r3, #255	; 0xff
 8010da0:	bf04      	itt	eq
 8010da2:	2300      	moveq	r3, #0
 8010da4:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 8010da8:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8010dac:	2bff      	cmp	r3, #255	; 0xff
 8010dae:	bf04      	itt	eq
 8010db0:	2300      	moveq	r3, #0
 8010db2:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 8010db6:	f7ff f937 	bl	8010028 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8010dba:	a901      	add	r1, sp, #4
 8010dbc:	a802      	add	r0, sp, #8
 8010dbe:	f000 ffe3 	bl	8011d88 <xTaskCheckForTimeOut>
 8010dc2:	2800      	cmp	r0, #0
 8010dc4:	d135      	bne.n	8010e32 <xQueueSemaphoreTake+0xf2>
	taskENTER_CRITICAL();
 8010dc6:	f7ff f90d 	bl	800ffe4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 8010dca:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8010dcc:	2b00      	cmp	r3, #0
 8010dce:	f000 80a4 	beq.w	8010f1a <xQueueSemaphoreTake+0x1da>
	taskEXIT_CRITICAL();
 8010dd2:	f7ff f929 	bl	8010028 <vPortExitCritical>
	taskENTER_CRITICAL();
 8010dd6:	f7ff f905 	bl	800ffe4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8010dda:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8010dde:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010de0:	2d00      	cmp	r5, #0
 8010de2:	dc05      	bgt.n	8010df0 <xQueueSemaphoreTake+0xb0>
 8010de4:	e074      	b.n	8010ed0 <xQueueSemaphoreTake+0x190>
			--cTxLock;
 8010de6:	1e6b      	subs	r3, r5, #1
 8010de8:	b2da      	uxtb	r2, r3
 8010dea:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010dec:	2a00      	cmp	r2, #0
 8010dee:	d06f      	beq.n	8010ed0 <xQueueSemaphoreTake+0x190>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010df0:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010df2:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010df4:	2b00      	cmp	r3, #0
 8010df6:	d06b      	beq.n	8010ed0 <xQueueSemaphoreTake+0x190>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010df8:	f000 ff72 	bl	8011ce0 <xTaskRemoveFromEventList>
 8010dfc:	2800      	cmp	r0, #0
 8010dfe:	d0f2      	beq.n	8010de6 <xQueueSemaphoreTake+0xa6>
						vTaskMissedYield();
 8010e00:	f001 f80a 	bl	8011e18 <vTaskMissedYield>
 8010e04:	e7ef      	b.n	8010de6 <xQueueSemaphoreTake+0xa6>
 8010e06:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010e0a:	f383 8811 	msr	BASEPRI, r3
 8010e0e:	f3bf 8f6f 	isb	sy
 8010e12:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 8010e16:	e7fe      	b.n	8010e16 <xQueueSemaphoreTake+0xd6>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8010e18:	9b01      	ldr	r3, [sp, #4]
 8010e1a:	2b00      	cmp	r3, #0
 8010e1c:	f000 80d4 	beq.w	8010fc8 <xQueueSemaphoreTake+0x288>
 8010e20:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010e24:	f383 8811 	msr	BASEPRI, r3
 8010e28:	f3bf 8f6f 	isb	sy
 8010e2c:	f3bf 8f4f 	dsb	sy
 8010e30:	e7fe      	b.n	8010e30 <xQueueSemaphoreTake+0xf0>
	taskENTER_CRITICAL();
 8010e32:	f7ff f8d7 	bl	800ffe4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8010e36:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8010e3a:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010e3c:	2d00      	cmp	r5, #0
 8010e3e:	dc04      	bgt.n	8010e4a <xQueueSemaphoreTake+0x10a>
 8010e40:	e011      	b.n	8010e66 <xQueueSemaphoreTake+0x126>
			--cTxLock;
 8010e42:	1e6b      	subs	r3, r5, #1
 8010e44:	b2da      	uxtb	r2, r3
 8010e46:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010e48:	b16a      	cbz	r2, 8010e66 <xQueueSemaphoreTake+0x126>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010e4a:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010e4c:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010e4e:	b153      	cbz	r3, 8010e66 <xQueueSemaphoreTake+0x126>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010e50:	f000 ff46 	bl	8011ce0 <xTaskRemoveFromEventList>
 8010e54:	2800      	cmp	r0, #0
 8010e56:	d0f4      	beq.n	8010e42 <xQueueSemaphoreTake+0x102>
						vTaskMissedYield();
 8010e58:	f000 ffde 	bl	8011e18 <vTaskMissedYield>
			--cTxLock;
 8010e5c:	1e6b      	subs	r3, r5, #1
 8010e5e:	b2da      	uxtb	r2, r3
 8010e60:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010e62:	2a00      	cmp	r2, #0
 8010e64:	d1f1      	bne.n	8010e4a <xQueueSemaphoreTake+0x10a>
		pxQueue->cTxLock = queueUNLOCKED;
 8010e66:	23ff      	movs	r3, #255	; 0xff
 8010e68:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8010e6c:	f7ff f8dc 	bl	8010028 <vPortExitCritical>
	taskENTER_CRITICAL();
 8010e70:	f7ff f8b8 	bl	800ffe4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8010e74:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8010e78:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010e7a:	2d00      	cmp	r5, #0
 8010e7c:	dd14      	ble.n	8010ea8 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010e7e:	f104 0810 	add.w	r8, r4, #16
 8010e82:	e003      	b.n	8010e8c <xQueueSemaphoreTake+0x14c>
				--cRxLock;
 8010e84:	1e6b      	subs	r3, r5, #1
 8010e86:	b2da      	uxtb	r2, r3
 8010e88:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010e8a:	b16a      	cbz	r2, 8010ea8 <xQueueSemaphoreTake+0x168>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010e8c:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010e8e:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010e90:	b153      	cbz	r3, 8010ea8 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010e92:	f000 ff25 	bl	8011ce0 <xTaskRemoveFromEventList>
 8010e96:	2800      	cmp	r0, #0
 8010e98:	d0f4      	beq.n	8010e84 <xQueueSemaphoreTake+0x144>
					vTaskMissedYield();
 8010e9a:	f000 ffbd 	bl	8011e18 <vTaskMissedYield>
				--cRxLock;
 8010e9e:	1e6b      	subs	r3, r5, #1
 8010ea0:	b2da      	uxtb	r2, r3
 8010ea2:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010ea4:	2a00      	cmp	r2, #0
 8010ea6:	d1f1      	bne.n	8010e8c <xQueueSemaphoreTake+0x14c>
		pxQueue->cRxLock = queueUNLOCKED;
 8010ea8:	23ff      	movs	r3, #255	; 0xff
 8010eaa:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 8010eae:	f7ff f8bb 	bl	8010028 <vPortExitCritical>
			( void ) xTaskResumeAll();
 8010eb2:	f000 fe15 	bl	8011ae0 <xTaskResumeAll>
	taskENTER_CRITICAL();
 8010eb6:	f7ff f895 	bl	800ffe4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 8010eba:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8010ebc:	2b00      	cmp	r3, #0
 8010ebe:	d07c      	beq.n	8010fba <xQueueSemaphoreTake+0x27a>
	taskEXIT_CRITICAL();
 8010ec0:	f7ff f8b2 	bl	8010028 <vPortExitCritical>
	return xReturn;
 8010ec4:	2501      	movs	r5, #1
 8010ec6:	e755      	b.n	8010d74 <xQueueSemaphoreTake+0x34>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8010ec8:	a802      	add	r0, sp, #8
 8010eca:	f000 ff51 	bl	8011d70 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 8010ece:	e75e      	b.n	8010d8e <xQueueSemaphoreTake+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 8010ed0:	23ff      	movs	r3, #255	; 0xff
 8010ed2:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8010ed6:	f7ff f8a7 	bl	8010028 <vPortExitCritical>
	taskENTER_CRITICAL();
 8010eda:	f7ff f883 	bl	800ffe4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8010ede:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8010ee2:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010ee4:	2d00      	cmp	r5, #0
 8010ee6:	dd10      	ble.n	8010f0a <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010ee8:	f104 0810 	add.w	r8, r4, #16
 8010eec:	e003      	b.n	8010ef6 <xQueueSemaphoreTake+0x1b6>
				--cRxLock;
 8010eee:	1e6b      	subs	r3, r5, #1
 8010ef0:	b2da      	uxtb	r2, r3
 8010ef2:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010ef4:	b14a      	cbz	r2, 8010f0a <xQueueSemaphoreTake+0x1ca>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010ef6:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010ef8:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010efa:	b133      	cbz	r3, 8010f0a <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010efc:	f000 fef0 	bl	8011ce0 <xTaskRemoveFromEventList>
 8010f00:	2800      	cmp	r0, #0
 8010f02:	d0f4      	beq.n	8010eee <xQueueSemaphoreTake+0x1ae>
					vTaskMissedYield();
 8010f04:	f000 ff88 	bl	8011e18 <vTaskMissedYield>
 8010f08:	e7f1      	b.n	8010eee <xQueueSemaphoreTake+0x1ae>
		pxQueue->cRxLock = queueUNLOCKED;
 8010f0a:	23ff      	movs	r3, #255	; 0xff
 8010f0c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 8010f10:	f7ff f88a 	bl	8010028 <vPortExitCritical>
				( void ) xTaskResumeAll();
 8010f14:	f000 fde4 	bl	8011ae0 <xTaskResumeAll>
 8010f18:	e7d4      	b.n	8010ec4 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
 8010f1a:	f7ff f885 	bl	8010028 <vPortExitCritical>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8010f1e:	6823      	ldr	r3, [r4, #0]
 8010f20:	2b00      	cmp	r3, #0
 8010f22:	d062      	beq.n	8010fea <xQueueSemaphoreTake+0x2aa>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8010f24:	9901      	ldr	r1, [sp, #4]
 8010f26:	4630      	mov	r0, r6
 8010f28:	f000 fe4c 	bl	8011bc4 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 8010f2c:	f7ff f85a 	bl	800ffe4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8010f30:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8010f34:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010f36:	2d00      	cmp	r5, #0
 8010f38:	dc04      	bgt.n	8010f44 <xQueueSemaphoreTake+0x204>
 8010f3a:	e00d      	b.n	8010f58 <xQueueSemaphoreTake+0x218>
			--cTxLock;
 8010f3c:	1e6b      	subs	r3, r5, #1
 8010f3e:	b2da      	uxtb	r2, r3
 8010f40:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010f42:	b14a      	cbz	r2, 8010f58 <xQueueSemaphoreTake+0x218>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010f44:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010f46:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010f48:	b133      	cbz	r3, 8010f58 <xQueueSemaphoreTake+0x218>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010f4a:	f000 fec9 	bl	8011ce0 <xTaskRemoveFromEventList>
 8010f4e:	2800      	cmp	r0, #0
 8010f50:	d0f4      	beq.n	8010f3c <xQueueSemaphoreTake+0x1fc>
						vTaskMissedYield();
 8010f52:	f000 ff61 	bl	8011e18 <vTaskMissedYield>
 8010f56:	e7f1      	b.n	8010f3c <xQueueSemaphoreTake+0x1fc>
		pxQueue->cTxLock = queueUNLOCKED;
 8010f58:	23ff      	movs	r3, #255	; 0xff
 8010f5a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8010f5e:	f7ff f863 	bl	8010028 <vPortExitCritical>
	taskENTER_CRITICAL();
 8010f62:	f7ff f83f 	bl	800ffe4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8010f66:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8010f6a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010f6c:	2d00      	cmp	r5, #0
 8010f6e:	dd10      	ble.n	8010f92 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010f70:	f104 0810 	add.w	r8, r4, #16
 8010f74:	e003      	b.n	8010f7e <xQueueSemaphoreTake+0x23e>
				--cRxLock;
 8010f76:	1e6b      	subs	r3, r5, #1
 8010f78:	b2da      	uxtb	r2, r3
 8010f7a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010f7c:	b14a      	cbz	r2, 8010f92 <xQueueSemaphoreTake+0x252>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010f7e:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010f80:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010f82:	b133      	cbz	r3, 8010f92 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010f84:	f000 feac 	bl	8011ce0 <xTaskRemoveFromEventList>
 8010f88:	2800      	cmp	r0, #0
 8010f8a:	d0f4      	beq.n	8010f76 <xQueueSemaphoreTake+0x236>
					vTaskMissedYield();
 8010f8c:	f000 ff44 	bl	8011e18 <vTaskMissedYield>
 8010f90:	e7f1      	b.n	8010f76 <xQueueSemaphoreTake+0x236>
		pxQueue->cRxLock = queueUNLOCKED;
 8010f92:	23ff      	movs	r3, #255	; 0xff
 8010f94:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 8010f98:	f7ff f846 	bl	8010028 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 8010f9c:	f000 fda0 	bl	8011ae0 <xTaskResumeAll>
 8010fa0:	2800      	cmp	r0, #0
 8010fa2:	d18f      	bne.n	8010ec4 <xQueueSemaphoreTake+0x184>
					portYIELD_WITHIN_API();
 8010fa4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8010fa8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8010fac:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8010fb0:	f3bf 8f4f 	dsb	sy
 8010fb4:	f3bf 8f6f 	isb	sy
 8010fb8:	e784      	b.n	8010ec4 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
 8010fba:	f7ff f835 	bl	8010028 <vPortExitCritical>
					if( xInheritanceOccurred != pdFALSE )
 8010fbe:	b92f      	cbnz	r7, 8010fcc <xQueueSemaphoreTake+0x28c>
}
 8010fc0:	4638      	mov	r0, r7
 8010fc2:	b004      	add	sp, #16
 8010fc4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010fc8:	4607      	mov	r7, r0
 8010fca:	e6d1      	b.n	8010d70 <xQueueSemaphoreTake+0x30>
						taskENTER_CRITICAL();
 8010fcc:	f7ff f80a 	bl	800ffe4 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 8010fd0:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8010fd2:	b119      	cbz	r1, 8010fdc <xQueueSemaphoreTake+0x29c>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 8010fd4:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8010fd6:	6819      	ldr	r1, [r3, #0]
 8010fd8:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 8010fdc:	68a0      	ldr	r0, [r4, #8]
 8010fde:	f000 ffbd 	bl	8011f5c <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 8010fe2:	2700      	movs	r7, #0
						taskEXIT_CRITICAL();
 8010fe4:	f7ff f820 	bl	8010028 <vPortExitCritical>
 8010fe8:	e7ea      	b.n	8010fc0 <xQueueSemaphoreTake+0x280>
						taskENTER_CRITICAL();
 8010fea:	f7fe fffb 	bl	800ffe4 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 8010fee:	68a0      	ldr	r0, [r4, #8]
 8010ff0:	f000 ff28 	bl	8011e44 <xTaskPriorityInherit>
 8010ff4:	4607      	mov	r7, r0
						taskEXIT_CRITICAL();
 8010ff6:	f7ff f817 	bl	8010028 <vPortExitCritical>
 8010ffa:	e793      	b.n	8010f24 <xQueueSemaphoreTake+0x1e4>
						configASSERT( xInheritanceOccurred == pdFALSE );
 8010ffc:	b197      	cbz	r7, 8011024 <xQueueSemaphoreTake+0x2e4>
 8010ffe:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011002:	f383 8811 	msr	BASEPRI, r3
 8011006:	f3bf 8f6f 	isb	sy
 801100a:	f3bf 8f4f 	dsb	sy
 801100e:	e7fe      	b.n	801100e <xQueueSemaphoreTake+0x2ce>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8011010:	6822      	ldr	r2, [r4, #0]
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 8011012:	3b01      	subs	r3, #1
 8011014:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8011016:	b1ca      	cbz	r2, 801104c <xQueueSemaphoreTake+0x30c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8011018:	6923      	ldr	r3, [r4, #16]
 801101a:	b933      	cbnz	r3, 801102a <xQueueSemaphoreTake+0x2ea>
				taskEXIT_CRITICAL();
 801101c:	f7ff f804 	bl	8010028 <vPortExitCritical>
				return pdPASS;
 8011020:	2701      	movs	r7, #1
 8011022:	e7cd      	b.n	8010fc0 <xQueueSemaphoreTake+0x280>
					taskEXIT_CRITICAL();
 8011024:	f7ff f800 	bl	8010028 <vPortExitCritical>
					return errQUEUE_EMPTY;
 8011028:	e7ca      	b.n	8010fc0 <xQueueSemaphoreTake+0x280>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 801102a:	f104 0010 	add.w	r0, r4, #16
 801102e:	f000 fe57 	bl	8011ce0 <xTaskRemoveFromEventList>
 8011032:	2800      	cmp	r0, #0
 8011034:	d0f2      	beq.n	801101c <xQueueSemaphoreTake+0x2dc>
						queueYIELD_IF_USING_PREEMPTION();
 8011036:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 801103a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 801103e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8011042:	f3bf 8f4f 	dsb	sy
 8011046:	f3bf 8f6f 	isb	sy
 801104a:	e7e7      	b.n	801101c <xQueueSemaphoreTake+0x2dc>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 801104c:	f000 ffda 	bl	8012004 <pvTaskIncrementMutexHeldCount>
 8011050:	60a0      	str	r0, [r4, #8]
 8011052:	e7e1      	b.n	8011018 <xQueueSemaphoreTake+0x2d8>

08011054 <xQueueReceiveFromISR>:
{
 8011054:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	configASSERT( pxQueue );
 8011058:	b310      	cbz	r0, 80110a0 <xQueueReceiveFromISR+0x4c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 801105a:	460e      	mov	r6, r1
 801105c:	4617      	mov	r7, r2
 801105e:	4604      	mov	r4, r0
 8011060:	b191      	cbz	r1, 8011088 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8011062:	f7ff f8f3 	bl	801024c <vPortValidateInterruptPriority>
	__asm volatile
 8011066:	f3ef 8911 	mrs	r9, BASEPRI
 801106a:	f04f 0350 	mov.w	r3, #80	; 0x50
 801106e:	f383 8811 	msr	BASEPRI, r3
 8011072:	f3bf 8f6f 	isb	sy
 8011076:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 801107a:	6ba5      	ldr	r5, [r4, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 801107c:	b9cd      	cbnz	r5, 80110b2 <xQueueReceiveFromISR+0x5e>
			xReturn = pdFAIL;
 801107e:	4628      	mov	r0, r5
	__asm volatile
 8011080:	f389 8811 	msr	BASEPRI, r9
}
 8011084:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8011088:	6c03      	ldr	r3, [r0, #64]	; 0x40
 801108a:	2b00      	cmp	r3, #0
 801108c:	d0e9      	beq.n	8011062 <xQueueReceiveFromISR+0xe>
	__asm volatile
 801108e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011092:	f383 8811 	msr	BASEPRI, r3
 8011096:	f3bf 8f6f 	isb	sy
 801109a:	f3bf 8f4f 	dsb	sy
 801109e:	e7fe      	b.n	801109e <xQueueReceiveFromISR+0x4a>
 80110a0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80110a4:	f383 8811 	msr	BASEPRI, r3
 80110a8:	f3bf 8f6f 	isb	sy
 80110ac:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 80110b0:	e7fe      	b.n	80110b0 <xQueueReceiveFromISR+0x5c>
			const int8_t cRxLock = pxQueue->cRxLock;
 80110b2:	f894 8044 	ldrb.w	r8, [r4, #68]	; 0x44
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 80110b6:	6c22      	ldr	r2, [r4, #64]	; 0x40
			const int8_t cRxLock = pxQueue->cRxLock;
 80110b8:	fa4f f888 	sxtb.w	r8, r8
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 80110bc:	b152      	cbz	r2, 80110d4 <xQueueReceiveFromISR+0x80>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80110be:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 80110c0:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80110c2:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 80110c4:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80110c6:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 80110c8:	bf24      	itt	cs
 80110ca:	6821      	ldrcs	r1, [r4, #0]
 80110cc:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 80110ce:	4630      	mov	r0, r6
 80110d0:	f01c ff69 	bl	802dfa6 <memcpy>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80110d4:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
 80110d6:	f1b8 3fff 	cmp.w	r8, #4294967295
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80110da:	63a5      	str	r5, [r4, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 80110dc:	d009      	beq.n	80110f2 <xQueueReceiveFromISR+0x9e>
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 80110de:	f108 0301 	add.w	r3, r8, #1
 80110e2:	b25b      	sxtb	r3, r3
 80110e4:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
			xReturn = pdPASS;
 80110e8:	2001      	movs	r0, #1
	__asm volatile
 80110ea:	f389 8811 	msr	BASEPRI, r9
}
 80110ee:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80110f2:	6923      	ldr	r3, [r4, #16]
 80110f4:	2b00      	cmp	r3, #0
 80110f6:	d0f7      	beq.n	80110e8 <xQueueReceiveFromISR+0x94>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80110f8:	f104 0010 	add.w	r0, r4, #16
 80110fc:	f000 fdf0 	bl	8011ce0 <xTaskRemoveFromEventList>
 8011100:	2800      	cmp	r0, #0
 8011102:	d0f1      	beq.n	80110e8 <xQueueReceiveFromISR+0x94>
						if( pxHigherPriorityTaskWoken != NULL )
 8011104:	2f00      	cmp	r7, #0
 8011106:	d0ef      	beq.n	80110e8 <xQueueReceiveFromISR+0x94>
							*pxHigherPriorityTaskWoken = pdTRUE;
 8011108:	2001      	movs	r0, #1
 801110a:	6038      	str	r0, [r7, #0]
 801110c:	e7b8      	b.n	8011080 <xQueueReceiveFromISR+0x2c>
 801110e:	bf00      	nop

08011110 <uxQueueMessagesWaiting>:
	configASSERT( xQueue );
 8011110:	b158      	cbz	r0, 801112a <uxQueueMessagesWaiting+0x1a>
{
 8011112:	b510      	push	{r4, lr}
 8011114:	4604      	mov	r4, r0
 8011116:	b082      	sub	sp, #8
	taskENTER_CRITICAL();
 8011118:	f7fe ff64 	bl	800ffe4 <vPortEnterCritical>
		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
 801111c:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 801111e:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 8011120:	f7fe ff82 	bl	8010028 <vPortExitCritical>
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 8011124:	9801      	ldr	r0, [sp, #4]
 8011126:	b002      	add	sp, #8
 8011128:	bd10      	pop	{r4, pc}
	__asm volatile
 801112a:	f04f 0350 	mov.w	r3, #80	; 0x50
 801112e:	f383 8811 	msr	BASEPRI, r3
 8011132:	f3bf 8f6f 	isb	sy
 8011136:	f3bf 8f4f 	dsb	sy
	configASSERT( xQueue );
 801113a:	e7fe      	b.n	801113a <uxQueueMessagesWaiting+0x2a>

0801113c <uxQueueMessagesWaitingFromISR>:
	configASSERT( pxQueue );
 801113c:	b108      	cbz	r0, 8011142 <uxQueueMessagesWaitingFromISR+0x6>
	uxReturn = pxQueue->uxMessagesWaiting;
 801113e:	6b80      	ldr	r0, [r0, #56]	; 0x38
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 8011140:	4770      	bx	lr
 8011142:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011146:	f383 8811 	msr	BASEPRI, r3
 801114a:	f3bf 8f6f 	isb	sy
 801114e:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 8011152:	e7fe      	b.n	8011152 <uxQueueMessagesWaitingFromISR+0x16>
 8011154:	0000      	movs	r0, r0
	...

08011158 <vQueueDelete>:
	configASSERT( pxQueue );
 8011158:	b1f0      	cbz	r0, 8011198 <vQueueDelete+0x40>

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 801115a:	4b21      	ldr	r3, [pc, #132]	; (80111e0 <vQueueDelete+0x88>)
 801115c:	685a      	ldr	r2, [r3, #4]
 801115e:	4290      	cmp	r0, r2
 8011160:	d025      	beq.n	80111ae <vQueueDelete+0x56>
 8011162:	68da      	ldr	r2, [r3, #12]
 8011164:	4290      	cmp	r0, r2
 8011166:	d02c      	beq.n	80111c2 <vQueueDelete+0x6a>
 8011168:	695a      	ldr	r2, [r3, #20]
 801116a:	4290      	cmp	r0, r2
 801116c:	d02b      	beq.n	80111c6 <vQueueDelete+0x6e>
 801116e:	69da      	ldr	r2, [r3, #28]
 8011170:	4290      	cmp	r0, r2
 8011172:	d02a      	beq.n	80111ca <vQueueDelete+0x72>
 8011174:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8011176:	4290      	cmp	r0, r2
 8011178:	d029      	beq.n	80111ce <vQueueDelete+0x76>
 801117a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 801117c:	4290      	cmp	r0, r2
 801117e:	d01e      	beq.n	80111be <vQueueDelete+0x66>
 8011180:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8011182:	4290      	cmp	r0, r2
 8011184:	d025      	beq.n	80111d2 <vQueueDelete+0x7a>
 8011186:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8011188:	4290      	cmp	r0, r2
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 801118a:	bf08      	it	eq
 801118c:	2207      	moveq	r2, #7
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 801118e:	d00f      	beq.n	80111b0 <vQueueDelete+0x58>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 8011190:	f890 3046 	ldrb.w	r3, [r0, #70]	; 0x46
 8011194:	b14b      	cbz	r3, 80111aa <vQueueDelete+0x52>
}
 8011196:	4770      	bx	lr
 8011198:	f04f 0350 	mov.w	r3, #80	; 0x50
 801119c:	f383 8811 	msr	BASEPRI, r3
 80111a0:	f3bf 8f6f 	isb	sy
 80111a4:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 80111a8:	e7fe      	b.n	80111a8 <vQueueDelete+0x50>
			vPortFree( pxQueue );
 80111aa:	f7fe be07 	b.w	800fdbc <vPortFree>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80111ae:	2200      	movs	r2, #0
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 80111b0:	ed9f 7b09 	vldr	d7, [pc, #36]	; 80111d8 <vQueueDelete+0x80>
 80111b4:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80111b8:	ed83 7b00 	vstr	d7, [r3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
				break;
 80111bc:	e7e8      	b.n	8011190 <vQueueDelete+0x38>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80111be:	2205      	movs	r2, #5
 80111c0:	e7f6      	b.n	80111b0 <vQueueDelete+0x58>
 80111c2:	2201      	movs	r2, #1
 80111c4:	e7f4      	b.n	80111b0 <vQueueDelete+0x58>
 80111c6:	2202      	movs	r2, #2
 80111c8:	e7f2      	b.n	80111b0 <vQueueDelete+0x58>
 80111ca:	2203      	movs	r2, #3
 80111cc:	e7f0      	b.n	80111b0 <vQueueDelete+0x58>
 80111ce:	2204      	movs	r2, #4
 80111d0:	e7ee      	b.n	80111b0 <vQueueDelete+0x58>
 80111d2:	2206      	movs	r2, #6
 80111d4:	e7ec      	b.n	80111b0 <vQueueDelete+0x58>
 80111d6:	bf00      	nop
	...
 80111e0:	200131c8 	.word	0x200131c8

080111e4 <vQueueAddToRegistry>:
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 80111e4:	4b12      	ldr	r3, [pc, #72]	; (8011230 <vQueueAddToRegistry+0x4c>)
 80111e6:	681a      	ldr	r2, [r3, #0]
 80111e8:	b17a      	cbz	r2, 801120a <vQueueAddToRegistry+0x26>
 80111ea:	689a      	ldr	r2, [r3, #8]
 80111ec:	b162      	cbz	r2, 8011208 <vQueueAddToRegistry+0x24>
 80111ee:	691a      	ldr	r2, [r3, #16]
 80111f0:	b192      	cbz	r2, 8011218 <vQueueAddToRegistry+0x34>
 80111f2:	699a      	ldr	r2, [r3, #24]
 80111f4:	b192      	cbz	r2, 801121c <vQueueAddToRegistry+0x38>
 80111f6:	6a1a      	ldr	r2, [r3, #32]
 80111f8:	b192      	cbz	r2, 8011220 <vQueueAddToRegistry+0x3c>
 80111fa:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80111fc:	b192      	cbz	r2, 8011224 <vQueueAddToRegistry+0x40>
 80111fe:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8011200:	b192      	cbz	r2, 8011228 <vQueueAddToRegistry+0x44>
 8011202:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8011204:	b192      	cbz	r2, 801122c <vQueueAddToRegistry+0x48>
	}
 8011206:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8011208:	2201      	movs	r2, #1
				xQueueRegistry[ ux ].xHandle = xQueue;
 801120a:	eb03 0cc2 	add.w	ip, r3, r2, lsl #3
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 801120e:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 8011212:	f8cc 0004 	str.w	r0, [ip, #4]
	}
 8011216:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8011218:	2202      	movs	r2, #2
 801121a:	e7f6      	b.n	801120a <vQueueAddToRegistry+0x26>
 801121c:	2203      	movs	r2, #3
 801121e:	e7f4      	b.n	801120a <vQueueAddToRegistry+0x26>
 8011220:	2204      	movs	r2, #4
 8011222:	e7f2      	b.n	801120a <vQueueAddToRegistry+0x26>
 8011224:	2205      	movs	r2, #5
 8011226:	e7f0      	b.n	801120a <vQueueAddToRegistry+0x26>
 8011228:	2206      	movs	r2, #6
 801122a:	e7ee      	b.n	801120a <vQueueAddToRegistry+0x26>
 801122c:	2207      	movs	r2, #7
 801122e:	e7ec      	b.n	801120a <vQueueAddToRegistry+0x26>
 8011230:	200131c8 	.word	0x200131c8

08011234 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 8011234:	b570      	push	{r4, r5, r6, lr}
 8011236:	4605      	mov	r5, r0
 8011238:	460e      	mov	r6, r1
 801123a:	4614      	mov	r4, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 801123c:	f7fe fed2 	bl	800ffe4 <vPortEnterCritical>
 8011240:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
 8011244:	2bff      	cmp	r3, #255	; 0xff
 8011246:	bf04      	itt	eq
 8011248:	2300      	moveq	r3, #0
 801124a:	f885 3044 	strbeq.w	r3, [r5, #68]	; 0x44
 801124e:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
 8011252:	2bff      	cmp	r3, #255	; 0xff
 8011254:	bf04      	itt	eq
 8011256:	2300      	moveq	r3, #0
 8011258:	f885 3045 	strbeq.w	r3, [r5, #69]	; 0x45
 801125c:	f7fe fee4 	bl	8010028 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 8011260:	6bab      	ldr	r3, [r5, #56]	; 0x38
 8011262:	2b00      	cmp	r3, #0
 8011264:	d043      	beq.n	80112ee <vQueueWaitForMessageRestricted+0xba>
	taskENTER_CRITICAL();
 8011266:	f7fe febd 	bl	800ffe4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 801126a:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
 801126e:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8011270:	2c00      	cmp	r4, #0
 8011272:	dd14      	ble.n	801129e <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8011274:	f105 0624 	add.w	r6, r5, #36	; 0x24
 8011278:	e003      	b.n	8011282 <vQueueWaitForMessageRestricted+0x4e>
			--cTxLock;
 801127a:	1e63      	subs	r3, r4, #1
 801127c:	b2da      	uxtb	r2, r3
 801127e:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8011280:	b16a      	cbz	r2, 801129e <vQueueWaitForMessageRestricted+0x6a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8011282:	6a6b      	ldr	r3, [r5, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8011284:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8011286:	b153      	cbz	r3, 801129e <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8011288:	f000 fd2a 	bl	8011ce0 <xTaskRemoveFromEventList>
 801128c:	2800      	cmp	r0, #0
 801128e:	d0f4      	beq.n	801127a <vQueueWaitForMessageRestricted+0x46>
						vTaskMissedYield();
 8011290:	f000 fdc2 	bl	8011e18 <vTaskMissedYield>
			--cTxLock;
 8011294:	1e63      	subs	r3, r4, #1
 8011296:	b2da      	uxtb	r2, r3
 8011298:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 801129a:	2a00      	cmp	r2, #0
 801129c:	d1f1      	bne.n	8011282 <vQueueWaitForMessageRestricted+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 801129e:	23ff      	movs	r3, #255	; 0xff
 80112a0:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
	taskEXIT_CRITICAL();
 80112a4:	f7fe fec0 	bl	8010028 <vPortExitCritical>
	taskENTER_CRITICAL();
 80112a8:	f7fe fe9c 	bl	800ffe4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 80112ac:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
 80112b0:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 80112b2:	2c00      	cmp	r4, #0
 80112b4:	dd14      	ble.n	80112e0 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80112b6:	f105 0610 	add.w	r6, r5, #16
 80112ba:	e003      	b.n	80112c4 <vQueueWaitForMessageRestricted+0x90>
				--cRxLock;
 80112bc:	1e63      	subs	r3, r4, #1
 80112be:	b2da      	uxtb	r2, r3
 80112c0:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 80112c2:	b16a      	cbz	r2, 80112e0 <vQueueWaitForMessageRestricted+0xac>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80112c4:	692b      	ldr	r3, [r5, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80112c6:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80112c8:	b153      	cbz	r3, 80112e0 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80112ca:	f000 fd09 	bl	8011ce0 <xTaskRemoveFromEventList>
 80112ce:	2800      	cmp	r0, #0
 80112d0:	d0f4      	beq.n	80112bc <vQueueWaitForMessageRestricted+0x88>
					vTaskMissedYield();
 80112d2:	f000 fda1 	bl	8011e18 <vTaskMissedYield>
				--cRxLock;
 80112d6:	1e63      	subs	r3, r4, #1
 80112d8:	b2da      	uxtb	r2, r3
 80112da:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 80112dc:	2a00      	cmp	r2, #0
 80112de:	d1f1      	bne.n	80112c4 <vQueueWaitForMessageRestricted+0x90>
		pxQueue->cRxLock = queueUNLOCKED;
 80112e0:	23ff      	movs	r3, #255	; 0xff
 80112e2:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
	}
 80112e6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 80112ea:	f7fe be9d 	b.w	8010028 <vPortExitCritical>
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 80112ee:	4622      	mov	r2, r4
 80112f0:	4631      	mov	r1, r6
 80112f2:	f105 0024 	add.w	r0, r5, #36	; 0x24
 80112f6:	f000 fca9 	bl	8011c4c <vTaskPlaceOnEventListRestricted>
 80112fa:	e7b4      	b.n	8011266 <vQueueWaitForMessageRestricted+0x32>

080112fc <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 80112fc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8011300:	4605      	mov	r5, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 8011302:	f7fe fe6f 	bl	800ffe4 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 8011306:	4a34      	ldr	r2, [pc, #208]	; (80113d8 <prvAddNewTaskToReadyList+0xdc>)
		if( pxCurrentTCB == NULL )
 8011308:	4e34      	ldr	r6, [pc, #208]	; (80113dc <prvAddNewTaskToReadyList+0xe0>)
		uxCurrentNumberOfTasks++;
 801130a:	6813      	ldr	r3, [r2, #0]
 801130c:	3301      	adds	r3, #1
 801130e:	6013      	str	r3, [r2, #0]
		if( pxCurrentTCB == NULL )
 8011310:	6833      	ldr	r3, [r6, #0]
 8011312:	2b00      	cmp	r3, #0
 8011314:	d032      	beq.n	801137c <prvAddNewTaskToReadyList+0x80>
		else
		{
			/* If the scheduler is not already running, make this task the
			current task if it is the highest priority task to be created
			so far. */
			if( xSchedulerRunning == pdFALSE )
 8011316:	4c32      	ldr	r4, [pc, #200]	; (80113e0 <prvAddNewTaskToReadyList+0xe4>)
 8011318:	6823      	ldr	r3, [r4, #0]
 801131a:	b33b      	cbz	r3, 801136c <prvAddNewTaskToReadyList+0x70>
			{
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 801131c:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 801131e:	4f31      	ldr	r7, [pc, #196]	; (80113e4 <prvAddNewTaskToReadyList+0xe8>)
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

		uxTaskNumber++;
 8011320:	4a31      	ldr	r2, [pc, #196]	; (80113e8 <prvAddNewTaskToReadyList+0xec>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
		}
		#endif /* configUSE_TRACE_FACILITY */
		traceTASK_CREATE( pxNewTCB );

		prvAddTaskToReadyList( pxNewTCB );
 8011322:	4932      	ldr	r1, [pc, #200]	; (80113ec <prvAddNewTaskToReadyList+0xf0>)
		uxTaskNumber++;
 8011324:	6813      	ldr	r3, [r2, #0]
 8011326:	3301      	adds	r3, #1
 8011328:	6013      	str	r3, [r2, #0]
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 801132a:	646b      	str	r3, [r5, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 801132c:	680b      	ldr	r3, [r1, #0]
 801132e:	4283      	cmp	r3, r0
 8011330:	bf38      	it	cc
 8011332:	6008      	strcc	r0, [r1, #0]
 8011334:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8011338:	eb07 0080 	add.w	r0, r7, r0, lsl #2
 801133c:	1d29      	adds	r1, r5, #4
 801133e:	f7fe fdb1 	bl	800fea4 <vListInsertEnd>

		portSETUP_TCB( pxNewTCB );
	}
	taskEXIT_CRITICAL();
 8011342:	f7fe fe71 	bl	8010028 <vPortExitCritical>

	if( xSchedulerRunning != pdFALSE )
 8011346:	6823      	ldr	r3, [r4, #0]
 8011348:	b173      	cbz	r3, 8011368 <prvAddNewTaskToReadyList+0x6c>
	{
		/* If the created task is of a higher priority than the current task
		then it should run now. */
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 801134a:	6832      	ldr	r2, [r6, #0]
 801134c:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 801134e:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8011350:	429a      	cmp	r2, r3
 8011352:	d209      	bcs.n	8011368 <prvAddNewTaskToReadyList+0x6c>
		{
			taskYIELD_IF_USING_PREEMPTION();
 8011354:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8011358:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 801135c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8011360:	f3bf 8f4f 	dsb	sy
 8011364:	f3bf 8f6f 	isb	sy
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 8011368:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 801136c:	6833      	ldr	r3, [r6, #0]
 801136e:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 8011370:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011372:	4f1c      	ldr	r7, [pc, #112]	; (80113e4 <prvAddNewTaskToReadyList+0xe8>)
 8011374:	4283      	cmp	r3, r0
					pxCurrentTCB = pxNewTCB;
 8011376:	bf98      	it	ls
 8011378:	6035      	strls	r5, [r6, #0]
 801137a:	e7d1      	b.n	8011320 <prvAddNewTaskToReadyList+0x24>
			pxCurrentTCB = pxNewTCB;
 801137c:	6035      	str	r5, [r6, #0]
			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 801137e:	6813      	ldr	r3, [r2, #0]
 8011380:	2b01      	cmp	r3, #1
 8011382:	d003      	beq.n	801138c <prvAddNewTaskToReadyList+0x90>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 8011384:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 8011386:	4f17      	ldr	r7, [pc, #92]	; (80113e4 <prvAddNewTaskToReadyList+0xe8>)
 8011388:	4c15      	ldr	r4, [pc, #84]	; (80113e0 <prvAddNewTaskToReadyList+0xe4>)
 801138a:	e7c9      	b.n	8011320 <prvAddNewTaskToReadyList+0x24>
 801138c:	4f15      	ldr	r7, [pc, #84]	; (80113e4 <prvAddNewTaskToReadyList+0xe8>)
 801138e:	463c      	mov	r4, r7
 8011390:	f507 688c 	add.w	r8, r7, #1120	; 0x460
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 8011394:	4620      	mov	r0, r4
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8011396:	3414      	adds	r4, #20
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 8011398:	f7fe fd74 	bl	800fe84 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 801139c:	45a0      	cmp	r8, r4
 801139e:	d1f9      	bne.n	8011394 <prvAddNewTaskToReadyList+0x98>
	}

	vListInitialise( &xDelayedTaskList1 );
 80113a0:	f8df 9060 	ldr.w	r9, [pc, #96]	; 8011404 <prvAddNewTaskToReadyList+0x108>
	vListInitialise( &xDelayedTaskList2 );
 80113a4:	f8df 8060 	ldr.w	r8, [pc, #96]	; 8011408 <prvAddNewTaskToReadyList+0x10c>
 80113a8:	4c0d      	ldr	r4, [pc, #52]	; (80113e0 <prvAddNewTaskToReadyList+0xe4>)
	vListInitialise( &xDelayedTaskList1 );
 80113aa:	4648      	mov	r0, r9
 80113ac:	f7fe fd6a 	bl	800fe84 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 80113b0:	4640      	mov	r0, r8
 80113b2:	f7fe fd67 	bl	800fe84 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 80113b6:	480e      	ldr	r0, [pc, #56]	; (80113f0 <prvAddNewTaskToReadyList+0xf4>)
 80113b8:	f7fe fd64 	bl	800fe84 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 80113bc:	480d      	ldr	r0, [pc, #52]	; (80113f4 <prvAddNewTaskToReadyList+0xf8>)
 80113be:	f7fe fd61 	bl	800fe84 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 80113c2:	480d      	ldr	r0, [pc, #52]	; (80113f8 <prvAddNewTaskToReadyList+0xfc>)
 80113c4:	f7fe fd5e 	bl	800fe84 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 80113c8:	4b0c      	ldr	r3, [pc, #48]	; (80113fc <prvAddNewTaskToReadyList+0x100>)
		prvAddTaskToReadyList( pxNewTCB );
 80113ca:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
	pxDelayedTaskList = &xDelayedTaskList1;
 80113cc:	f8c3 9000 	str.w	r9, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 80113d0:	4b0b      	ldr	r3, [pc, #44]	; (8011400 <prvAddNewTaskToReadyList+0x104>)
 80113d2:	f8c3 8000 	str.w	r8, [r3]
}
 80113d6:	e7a3      	b.n	8011320 <prvAddNewTaskToReadyList+0x24>
 80113d8:	20013674 	.word	0x20013674
 80113dc:	20013208 	.word	0x20013208
 80113e0:	200136d0 	.word	0x200136d0
 80113e4:	20013214 	.word	0x20013214
 80113e8:	20013680 	.word	0x20013680
 80113ec:	20013684 	.word	0x20013684
 80113f0:	200136bc 	.word	0x200136bc
 80113f4:	200136e8 	.word	0x200136e8
 80113f8:	200136d4 	.word	0x200136d4
 80113fc:	2001320c 	.word	0x2001320c
 8011400:	20013210 	.word	0x20013210
 8011404:	20013688 	.word	0x20013688
 8011408:	2001369c 	.word	0x2001369c

0801140c <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 801140c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011410:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8011412:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8011416:	ea4f 0982 	mov.w	r9, r2, lsl #2
 801141a:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 801141c:	4606      	mov	r6, r0
 801141e:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8011420:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8011422:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8011424:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8011426:	f01c fc98 	bl	802dd5a <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 801142a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 801142c:	f1a9 0904 	sub.w	r9, r9, #4
 8011430:	444b      	add	r3, r9
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 8011432:	f023 0907 	bic.w	r9, r3, #7
	if( pcName != NULL )
 8011436:	2d00      	cmp	r5, #0
 8011438:	d079      	beq.n	801152e <prvInitialiseNewTask.constprop.0+0x122>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 801143a:	782b      	ldrb	r3, [r5, #0]
 801143c:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
			if( pcName[ x ] == ( char ) 0x00 )
 8011440:	2b00      	cmp	r3, #0
 8011442:	d03b      	beq.n	80114bc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8011444:	786b      	ldrb	r3, [r5, #1]
 8011446:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
			if( pcName[ x ] == ( char ) 0x00 )
 801144a:	2b00      	cmp	r3, #0
 801144c:	d036      	beq.n	80114bc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 801144e:	78ab      	ldrb	r3, [r5, #2]
 8011450:	f884 3036 	strb.w	r3, [r4, #54]	; 0x36
			if( pcName[ x ] == ( char ) 0x00 )
 8011454:	b393      	cbz	r3, 80114bc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8011456:	78eb      	ldrb	r3, [r5, #3]
 8011458:	f884 3037 	strb.w	r3, [r4, #55]	; 0x37
			if( pcName[ x ] == ( char ) 0x00 )
 801145c:	b373      	cbz	r3, 80114bc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 801145e:	792b      	ldrb	r3, [r5, #4]
 8011460:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
			if( pcName[ x ] == ( char ) 0x00 )
 8011464:	b353      	cbz	r3, 80114bc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8011466:	796b      	ldrb	r3, [r5, #5]
 8011468:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
			if( pcName[ x ] == ( char ) 0x00 )
 801146c:	b333      	cbz	r3, 80114bc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 801146e:	79ab      	ldrb	r3, [r5, #6]
 8011470:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
 8011474:	b313      	cbz	r3, 80114bc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8011476:	79eb      	ldrb	r3, [r5, #7]
 8011478:	f884 303b 	strb.w	r3, [r4, #59]	; 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
 801147c:	b1f3      	cbz	r3, 80114bc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 801147e:	7a2b      	ldrb	r3, [r5, #8]
 8011480:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
 8011484:	b1d3      	cbz	r3, 80114bc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8011486:	7a6b      	ldrb	r3, [r5, #9]
 8011488:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
 801148c:	b1b3      	cbz	r3, 80114bc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 801148e:	7aab      	ldrb	r3, [r5, #10]
 8011490:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
 8011494:	b193      	cbz	r3, 80114bc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8011496:	7aeb      	ldrb	r3, [r5, #11]
 8011498:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
 801149c:	b173      	cbz	r3, 80114bc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 801149e:	7b2b      	ldrb	r3, [r5, #12]
 80114a0:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
			if( pcName[ x ] == ( char ) 0x00 )
 80114a4:	b153      	cbz	r3, 80114bc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 80114a6:	7b6b      	ldrb	r3, [r5, #13]
 80114a8:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
			if( pcName[ x ] == ( char ) 0x00 )
 80114ac:	b133      	cbz	r3, 80114bc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 80114ae:	7bab      	ldrb	r3, [r5, #14]
 80114b0:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
			if( pcName[ x ] == ( char ) 0x00 )
 80114b4:	b113      	cbz	r3, 80114bc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 80114b6:	7beb      	ldrb	r3, [r5, #15]
 80114b8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 80114bc:	2300      	movs	r3, #0
 80114be:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 80114c2:	9d08      	ldr	r5, [sp, #32]
 80114c4:	2d37      	cmp	r5, #55	; 0x37
 80114c6:	bf28      	it	cs
 80114c8:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 80114ca:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 80114ce:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 80114d0:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 80114d2:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 80114d4:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 80114d8:	f7fe fce0 	bl	800fe9c <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80114dc:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 80114e0:	f104 0018 	add.w	r0, r4, #24
 80114e4:	f7fe fcda 	bl	800fe9c <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80114e8:	61a5      	str	r5, [r4, #24]
		pxNewTCB->ulNotifiedValue = 0;
 80114ea:	f8c4 a0a4 	str.w	sl, [r4, #164]	; 0xa4
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 80114ee:	4651      	mov	r1, sl
 80114f0:	224c      	movs	r2, #76	; 0x4c
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 80114f2:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 80114f4:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 80114f6:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 80114fa:	f884 a0a8 	strb.w	sl, [r4, #168]	; 0xa8
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 80114fe:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8011502:	f01c fc2a 	bl	802dd5a <memset>
 8011506:	4b0b      	ldr	r3, [pc, #44]	; (8011534 <prvInitialiseNewTask.constprop.0+0x128>)
 8011508:	65e3      	str	r3, [r4, #92]	; 0x5c
 801150a:	f103 0568 	add.w	r5, r3, #104	; 0x68
 801150e:	33d0      	adds	r3, #208	; 0xd0
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 8011510:	463a      	mov	r2, r7
 8011512:	4631      	mov	r1, r6
 8011514:	4648      	mov	r0, r9
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 8011516:	6625      	str	r5, [r4, #96]	; 0x60
 8011518:	6663      	str	r3, [r4, #100]	; 0x64
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 801151a:	f7fe fd3d 	bl	800ff98 <pxPortInitialiseStack>
 801151e:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 8011520:	f1b8 0f00 	cmp.w	r8, #0
 8011524:	d001      	beq.n	801152a <prvInitialiseNewTask.constprop.0+0x11e>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 8011526:	f8c8 4000 	str.w	r4, [r8]
}
 801152a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 801152e:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 8011532:	e7c6      	b.n	80114c2 <prvInitialiseNewTask.constprop.0+0xb6>
 8011534:	20014198 	.word	0x20014198

08011538 <prvIdleTask>:
{
 8011538:	b580      	push	{r7, lr}
 801153a:	4d23      	ldr	r5, [pc, #140]	; (80115c8 <prvIdleTask+0x90>)
 801153c:	4f23      	ldr	r7, [pc, #140]	; (80115cc <prvIdleTask+0x94>)
 801153e:	4e24      	ldr	r6, [pc, #144]	; (80115d0 <prvIdleTask+0x98>)
 8011540:	f8df 8090 	ldr.w	r8, [pc, #144]	; 80115d4 <prvIdleTask+0x9c>
				taskYIELD();
 8011544:	f04f 2ae0 	mov.w	sl, #3758153728	; 0xe000e000
 8011548:	f04f 5980 	mov.w	r9, #268435456	; 0x10000000
	{
		TCB_t *pxTCB;

		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
		being called too often in the idle task. */
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 801154c:	682b      	ldr	r3, [r5, #0]
 801154e:	b35b      	cbz	r3, 80115a8 <prvIdleTask+0x70>
		{
			taskENTER_CRITICAL();
 8011550:	f7fe fd48 	bl	800ffe4 <vPortEnterCritical>
			{
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8011554:	68fb      	ldr	r3, [r7, #12]
 8011556:	68dc      	ldr	r4, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8011558:	1d20      	adds	r0, r4, #4
 801155a:	f7fe fccb 	bl	800fef4 <uxListRemove>
				--uxCurrentNumberOfTasks;
 801155e:	6833      	ldr	r3, [r6, #0]
 8011560:	3b01      	subs	r3, #1
 8011562:	6033      	str	r3, [r6, #0]
				--uxDeletedTasksWaitingCleanUp;
 8011564:	682b      	ldr	r3, [r5, #0]
 8011566:	3b01      	subs	r3, #1
 8011568:	602b      	str	r3, [r5, #0]
			}
			taskEXIT_CRITICAL();
 801156a:	f7fe fd5d 	bl	8010028 <vPortExitCritical>
		to the task to free any memory allocated at the application level.
		See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
		for additional information. */
		#if ( configUSE_NEWLIB_REENTRANT == 1 )
		{
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
 801156e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8011572:	f01c fc3b 	bl	802ddec <_reclaim_reent>
		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
		{
			/* The task could have been allocated statically or dynamically, so
			check what was statically allocated before trying to free the
			memory. */
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8011576:	f894 30a9 	ldrb.w	r3, [r4, #169]	; 0xa9
 801157a:	b163      	cbz	r3, 8011596 <prvIdleTask+0x5e>
				/* Both the stack and TCB were allocated dynamically, so both
				must be freed. */
				vPortFree( pxTCB->pxStack );
				vPortFree( pxTCB );
			}
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 801157c:	2b01      	cmp	r3, #1
 801157e:	d01e      	beq.n	80115be <prvIdleTask+0x86>
			}
			else
			{
				/* Neither the stack nor the TCB were allocated dynamically, so
				nothing needs to be freed. */
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 8011580:	2b02      	cmp	r3, #2
 8011582:	d0e3      	beq.n	801154c <prvIdleTask+0x14>
 8011584:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011588:	f383 8811 	msr	BASEPRI, r3
 801158c:	f3bf 8f6f 	isb	sy
 8011590:	f3bf 8f4f 	dsb	sy
 8011594:	e7fe      	b.n	8011594 <prvIdleTask+0x5c>
				vPortFree( pxTCB->pxStack );
 8011596:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8011598:	f7fe fc10 	bl	800fdbc <vPortFree>
				vPortFree( pxTCB );
 801159c:	4620      	mov	r0, r4
 801159e:	f7fe fc0d 	bl	800fdbc <vPortFree>
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 80115a2:	682b      	ldr	r3, [r5, #0]
 80115a4:	2b00      	cmp	r3, #0
 80115a6:	d1d3      	bne.n	8011550 <prvIdleTask+0x18>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 80115a8:	f8d8 3000 	ldr.w	r3, [r8]
 80115ac:	2b01      	cmp	r3, #1
 80115ae:	d9cd      	bls.n	801154c <prvIdleTask+0x14>
				taskYIELD();
 80115b0:	f8ca 9d04 	str.w	r9, [sl, #3332]	; 0xd04
 80115b4:	f3bf 8f4f 	dsb	sy
 80115b8:	f3bf 8f6f 	isb	sy
 80115bc:	e7c6      	b.n	801154c <prvIdleTask+0x14>
				vPortFree( pxTCB );
 80115be:	4620      	mov	r0, r4
 80115c0:	f7fe fbfc 	bl	800fdbc <vPortFree>
 80115c4:	e7c2      	b.n	801154c <prvIdleTask+0x14>
 80115c6:	bf00      	nop
 80115c8:	20013678 	.word	0x20013678
 80115cc:	200136e8 	.word	0x200136e8
 80115d0:	20013674 	.word	0x20013674
 80115d4:	20013214 	.word	0x20013214

080115d8 <xTaskIncrementTick.part.0>:
BaseType_t xTaskIncrementTick( void )
 80115d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 80115dc:	4b47      	ldr	r3, [pc, #284]	; (80116fc <xTaskIncrementTick.part.0+0x124>)
 80115de:	681e      	ldr	r6, [r3, #0]
 80115e0:	3601      	adds	r6, #1
BaseType_t xTaskIncrementTick( void )
 80115e2:	b083      	sub	sp, #12
		xTickCount = xConstTickCount;
 80115e4:	601e      	str	r6, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 80115e6:	2e00      	cmp	r6, #0
 80115e8:	d040      	beq.n	801166c <xTaskIncrementTick.part.0+0x94>
 80115ea:	f8df b124 	ldr.w	fp, [pc, #292]	; 8011710 <xTaskIncrementTick.part.0+0x138>
		if( xConstTickCount >= xNextTaskUnblockTime )
 80115ee:	f8db 3000 	ldr.w	r3, [fp]
 80115f2:	429e      	cmp	r6, r3
 80115f4:	d347      	bcc.n	8011686 <xTaskIncrementTick.part.0+0xae>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 80115f6:	4f42      	ldr	r7, [pc, #264]	; (8011700 <xTaskIncrementTick.part.0+0x128>)
 80115f8:	f8df 9118 	ldr.w	r9, [pc, #280]	; 8011714 <xTaskIncrementTick.part.0+0x13c>
 80115fc:	683b      	ldr	r3, [r7, #0]
 80115fe:	f8df a118 	ldr.w	sl, [pc, #280]	; 8011718 <xTaskIncrementTick.part.0+0x140>
 8011602:	681d      	ldr	r5, [r3, #0]
 8011604:	2d00      	cmp	r5, #0
 8011606:	d073      	beq.n	80116f0 <xTaskIncrementTick.part.0+0x118>
					prvAddTaskToReadyList( pxTCB );
 8011608:	f8df 8110 	ldr.w	r8, [pc, #272]	; 801171c <xTaskIncrementTick.part.0+0x144>
BaseType_t xSwitchRequired = pdFALSE;
 801160c:	2500      	movs	r5, #0
 801160e:	e022      	b.n	8011656 <xTaskIncrementTick.part.0+0x7e>
 8011610:	9101      	str	r1, [sp, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8011612:	f7fe fc6f 	bl	800fef4 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 8011616:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8011618:	9901      	ldr	r1, [sp, #4]
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 801161a:	f104 0018 	add.w	r0, r4, #24
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 801161e:	b113      	cbz	r3, 8011626 <xTaskIncrementTick.part.0+0x4e>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8011620:	f7fe fc68 	bl	800fef4 <uxListRemove>
 8011624:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 8011626:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8011628:	f8d8 2000 	ldr.w	r2, [r8]
 801162c:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 8011630:	4293      	cmp	r3, r2
 8011632:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 8011636:	bf88      	it	hi
 8011638:	f8c8 3000 	strhi.w	r3, [r8]
 801163c:	f7fe fc32 	bl	800fea4 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8011640:	f8da 2000 	ldr.w	r2, [sl]
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8011644:	683b      	ldr	r3, [r7, #0]
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8011646:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8011648:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 801164a:	681b      	ldr	r3, [r3, #0]
							xSwitchRequired = pdTRUE;
 801164c:	4291      	cmp	r1, r2
 801164e:	bf28      	it	cs
 8011650:	2501      	movcs	r5, #1
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8011652:	2b00      	cmp	r3, #0
 8011654:	d04c      	beq.n	80116f0 <xTaskIncrementTick.part.0+0x118>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8011656:	683b      	ldr	r3, [r7, #0]
 8011658:	68db      	ldr	r3, [r3, #12]
 801165a:	68dc      	ldr	r4, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 801165c:	6863      	ldr	r3, [r4, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 801165e:	1d21      	adds	r1, r4, #4
					if( xConstTickCount < xItemValue )
 8011660:	429e      	cmp	r6, r3
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8011662:	4608      	mov	r0, r1
					if( xConstTickCount < xItemValue )
 8011664:	d2d4      	bcs.n	8011610 <xTaskIncrementTick.part.0+0x38>
						xNextTaskUnblockTime = xItemValue;
 8011666:	f8cb 3000 	str.w	r3, [fp]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 801166a:	e011      	b.n	8011690 <xTaskIncrementTick.part.0+0xb8>
			taskSWITCH_DELAYED_LISTS();
 801166c:	4b24      	ldr	r3, [pc, #144]	; (8011700 <xTaskIncrementTick.part.0+0x128>)
 801166e:	681a      	ldr	r2, [r3, #0]
 8011670:	6812      	ldr	r2, [r2, #0]
 8011672:	b30a      	cbz	r2, 80116b8 <xTaskIncrementTick.part.0+0xe0>
 8011674:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011678:	f383 8811 	msr	BASEPRI, r3
 801167c:	f3bf 8f6f 	isb	sy
 8011680:	f3bf 8f4f 	dsb	sy
 8011684:	e7fe      	b.n	8011684 <xTaskIncrementTick.part.0+0xac>
 8011686:	f8df 908c 	ldr.w	r9, [pc, #140]	; 8011714 <xTaskIncrementTick.part.0+0x13c>
 801168a:	f8df a08c 	ldr.w	sl, [pc, #140]	; 8011718 <xTaskIncrementTick.part.0+0x140>
BaseType_t xSwitchRequired = pdFALSE;
 801168e:	2500      	movs	r5, #0
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 8011690:	f8da 3000 	ldr.w	r3, [sl]
			if( xYieldPending != pdFALSE )
 8011694:	491b      	ldr	r1, [pc, #108]	; (8011704 <xTaskIncrementTick.part.0+0x12c>)
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 8011696:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011698:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 801169c:	009b      	lsls	r3, r3, #2
 801169e:	f859 2003 	ldr.w	r2, [r9, r3]
			if( xYieldPending != pdFALSE )
 80116a2:	680b      	ldr	r3, [r1, #0]
				xSwitchRequired = pdTRUE;
 80116a4:	2a02      	cmp	r2, #2
 80116a6:	bf28      	it	cs
 80116a8:	2501      	movcs	r5, #1
				xSwitchRequired = pdTRUE;
 80116aa:	2b00      	cmp	r3, #0
}
 80116ac:	bf0c      	ite	eq
 80116ae:	4628      	moveq	r0, r5
 80116b0:	2001      	movne	r0, #1
 80116b2:	b003      	add	sp, #12
 80116b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			taskSWITCH_DELAYED_LISTS();
 80116b8:	4a13      	ldr	r2, [pc, #76]	; (8011708 <xTaskIncrementTick.part.0+0x130>)
 80116ba:	6818      	ldr	r0, [r3, #0]
 80116bc:	6811      	ldr	r1, [r2, #0]
 80116be:	6019      	str	r1, [r3, #0]
 80116c0:	4912      	ldr	r1, [pc, #72]	; (801170c <xTaskIncrementTick.part.0+0x134>)
 80116c2:	6010      	str	r0, [r2, #0]
 80116c4:	680a      	ldr	r2, [r1, #0]
 80116c6:	3201      	adds	r2, #1
 80116c8:	600a      	str	r2, [r1, #0]

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 80116ca:	681a      	ldr	r2, [r3, #0]
 80116cc:	6812      	ldr	r2, [r2, #0]
 80116ce:	b932      	cbnz	r2, 80116de <xTaskIncrementTick.part.0+0x106>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
 80116d0:	f8df b03c 	ldr.w	fp, [pc, #60]	; 8011710 <xTaskIncrementTick.part.0+0x138>
 80116d4:	f04f 33ff 	mov.w	r3, #4294967295
 80116d8:	f8cb 3000 	str.w	r3, [fp]
 80116dc:	e787      	b.n	80115ee <xTaskIncrementTick.part.0+0x16>
	{
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80116de:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 80116e0:	f8df b02c 	ldr.w	fp, [pc, #44]	; 8011710 <xTaskIncrementTick.part.0+0x138>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80116e4:	68db      	ldr	r3, [r3, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 80116e6:	68db      	ldr	r3, [r3, #12]
 80116e8:	685b      	ldr	r3, [r3, #4]
 80116ea:	f8cb 3000 	str.w	r3, [fp]
	}
}
 80116ee:	e77e      	b.n	80115ee <xTaskIncrementTick.part.0+0x16>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80116f0:	f04f 33ff 	mov.w	r3, #4294967295
 80116f4:	f8cb 3000 	str.w	r3, [fp]
					break;
 80116f8:	e7ca      	b.n	8011690 <xTaskIncrementTick.part.0+0xb8>
 80116fa:	bf00      	nop
 80116fc:	200136fc 	.word	0x200136fc
 8011700:	2001320c 	.word	0x2001320c
 8011704:	20013700 	.word	0x20013700
 8011708:	20013210 	.word	0x20013210
 801170c:	200136b4 	.word	0x200136b4
 8011710:	200136b0 	.word	0x200136b0
 8011714:	20013214 	.word	0x20013214
 8011718:	20013208 	.word	0x20013208
 801171c:	20013684 	.word	0x20013684

08011720 <xTaskResumeAll.part.0>:
BaseType_t xTaskResumeAll( void )
 8011720:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		--uxSchedulerSuspended;
 8011724:	4d41      	ldr	r5, [pc, #260]	; (801182c <xTaskResumeAll.part.0+0x10c>)
BaseType_t xTaskResumeAll( void )
 8011726:	b083      	sub	sp, #12
	taskENTER_CRITICAL();
 8011728:	f7fe fc5c 	bl	800ffe4 <vPortEnterCritical>
		--uxSchedulerSuspended;
 801172c:	682b      	ldr	r3, [r5, #0]
 801172e:	3b01      	subs	r3, #1
 8011730:	602b      	str	r3, [r5, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8011732:	682b      	ldr	r3, [r5, #0]
 8011734:	2b00      	cmp	r3, #0
 8011736:	d161      	bne.n	80117fc <xTaskResumeAll.part.0+0xdc>
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 8011738:	4b3d      	ldr	r3, [pc, #244]	; (8011830 <xTaskResumeAll.part.0+0x110>)
 801173a:	681b      	ldr	r3, [r3, #0]
 801173c:	2b00      	cmp	r3, #0
 801173e:	d05d      	beq.n	80117fc <xTaskResumeAll.part.0+0xdc>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8011740:	4e3c      	ldr	r6, [pc, #240]	; (8011834 <xTaskResumeAll.part.0+0x114>)
 8011742:	6833      	ldr	r3, [r6, #0]
 8011744:	2b00      	cmp	r3, #0
 8011746:	d06e      	beq.n	8011826 <xTaskResumeAll.part.0+0x106>
 8011748:	4f3b      	ldr	r7, [pc, #236]	; (8011838 <xTaskResumeAll.part.0+0x118>)
 801174a:	f8df 90fc 	ldr.w	r9, [pc, #252]	; 8011848 <xTaskResumeAll.part.0+0x128>
 801174e:	f8df 80fc 	ldr.w	r8, [pc, #252]	; 801184c <xTaskResumeAll.part.0+0x12c>
 8011752:	f8df a0fc 	ldr.w	sl, [pc, #252]	; 8011850 <xTaskResumeAll.part.0+0x130>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8011756:	68f3      	ldr	r3, [r6, #12]
 8011758:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 801175a:	f104 0b04 	add.w	fp, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 801175e:	f104 0018 	add.w	r0, r4, #24
 8011762:	f7fe fbc7 	bl	800fef4 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8011766:	4658      	mov	r0, fp
 8011768:	f7fe fbc4 	bl	800fef4 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 801176c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 801176e:	683a      	ldr	r2, [r7, #0]
 8011770:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 8011774:	4293      	cmp	r3, r2
 8011776:	4659      	mov	r1, fp
 8011778:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 801177c:	bf88      	it	hi
 801177e:	603b      	strhi	r3, [r7, #0]
 8011780:	f7fe fb90 	bl	800fea4 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8011784:	f8d8 3000 	ldr.w	r3, [r8]
 8011788:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 801178a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801178c:	429a      	cmp	r2, r3
 801178e:	d33d      	bcc.n	801180c <xTaskResumeAll.part.0+0xec>
						xYieldPending = pdTRUE;
 8011790:	2301      	movs	r3, #1
 8011792:	f8ca 3000 	str.w	r3, [sl]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8011796:	6833      	ldr	r3, [r6, #0]
 8011798:	2b00      	cmp	r3, #0
 801179a:	d1dc      	bne.n	8011756 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 801179c:	4b27      	ldr	r3, [pc, #156]	; (801183c <xTaskResumeAll.part.0+0x11c>)
 801179e:	681a      	ldr	r2, [r3, #0]
 80117a0:	6812      	ldr	r2, [r2, #0]
 80117a2:	2a00      	cmp	r2, #0
 80117a4:	d03a      	beq.n	801181c <xTaskResumeAll.part.0+0xfc>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80117a6:	681a      	ldr	r2, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 80117a8:	4b25      	ldr	r3, [pc, #148]	; (8011840 <xTaskResumeAll.part.0+0x120>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80117aa:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 80117ac:	68d2      	ldr	r2, [r2, #12]
 80117ae:	6852      	ldr	r2, [r2, #4]
 80117b0:	601a      	str	r2, [r3, #0]
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 80117b2:	4e24      	ldr	r6, [pc, #144]	; (8011844 <xTaskResumeAll.part.0+0x124>)
 80117b4:	6834      	ldr	r4, [r6, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 80117b6:	b194      	cbz	r4, 80117de <xTaskResumeAll.part.0+0xbe>
								xYieldPending = pdTRUE;
 80117b8:	2701      	movs	r7, #1
 80117ba:	e006      	b.n	80117ca <xTaskResumeAll.part.0+0xaa>
 80117bc:	f7ff ff0c 	bl	80115d8 <xTaskIncrementTick.part.0>
							if( xTaskIncrementTick() != pdFALSE )
 80117c0:	b108      	cbz	r0, 80117c6 <xTaskResumeAll.part.0+0xa6>
								xYieldPending = pdTRUE;
 80117c2:	f8ca 7000 	str.w	r7, [sl]
						} while( xPendedCounts > ( TickType_t ) 0U );
 80117c6:	3c01      	subs	r4, #1
 80117c8:	d008      	beq.n	80117dc <xTaskResumeAll.part.0+0xbc>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 80117ca:	682b      	ldr	r3, [r5, #0]
 80117cc:	2b00      	cmp	r3, #0
 80117ce:	d0f5      	beq.n	80117bc <xTaskResumeAll.part.0+0x9c>
		++xPendedTicks;
 80117d0:	6833      	ldr	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 80117d2:	3c01      	subs	r4, #1
		++xPendedTicks;
 80117d4:	f103 0301 	add.w	r3, r3, #1
 80117d8:	6033      	str	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 80117da:	d1f6      	bne.n	80117ca <xTaskResumeAll.part.0+0xaa>
						xPendedTicks = 0;
 80117dc:	6034      	str	r4, [r6, #0]
				if( xYieldPending != pdFALSE )
 80117de:	f8da 3000 	ldr.w	r3, [sl]
 80117e2:	b15b      	cbz	r3, 80117fc <xTaskResumeAll.part.0+0xdc>
					taskYIELD_IF_USING_PREEMPTION();
 80117e4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80117e8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80117ec:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80117f0:	f3bf 8f4f 	dsb	sy
 80117f4:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 80117f8:	2001      	movs	r0, #1
 80117fa:	e000      	b.n	80117fe <xTaskResumeAll.part.0+0xde>
BaseType_t xAlreadyYielded = pdFALSE;
 80117fc:	2000      	movs	r0, #0
 80117fe:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 8011800:	f7fe fc12 	bl	8010028 <vPortExitCritical>
}
 8011804:	9801      	ldr	r0, [sp, #4]
 8011806:	b003      	add	sp, #12
 8011808:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 801180c:	6833      	ldr	r3, [r6, #0]
 801180e:	2b00      	cmp	r3, #0
 8011810:	d1a1      	bne.n	8011756 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8011812:	4b0a      	ldr	r3, [pc, #40]	; (801183c <xTaskResumeAll.part.0+0x11c>)
 8011814:	681a      	ldr	r2, [r3, #0]
 8011816:	6812      	ldr	r2, [r2, #0]
 8011818:	2a00      	cmp	r2, #0
 801181a:	d1c4      	bne.n	80117a6 <xTaskResumeAll.part.0+0x86>
		xNextTaskUnblockTime = portMAX_DELAY;
 801181c:	4b08      	ldr	r3, [pc, #32]	; (8011840 <xTaskResumeAll.part.0+0x120>)
 801181e:	f04f 32ff 	mov.w	r2, #4294967295
 8011822:	601a      	str	r2, [r3, #0]
 8011824:	e7c5      	b.n	80117b2 <xTaskResumeAll.part.0+0x92>
 8011826:	f8df a028 	ldr.w	sl, [pc, #40]	; 8011850 <xTaskResumeAll.part.0+0x130>
 801182a:	e7c2      	b.n	80117b2 <xTaskResumeAll.part.0+0x92>
 801182c:	2001367c 	.word	0x2001367c
 8011830:	20013674 	.word	0x20013674
 8011834:	200136bc 	.word	0x200136bc
 8011838:	20013684 	.word	0x20013684
 801183c:	2001320c 	.word	0x2001320c
 8011840:	200136b0 	.word	0x200136b0
 8011844:	200136b8 	.word	0x200136b8
 8011848:	20013214 	.word	0x20013214
 801184c:	20013208 	.word	0x20013208
 8011850:	20013700 	.word	0x20013700

08011854 <xTaskCreateStatic>:
	{
 8011854:	b530      	push	{r4, r5, lr}
 8011856:	b087      	sub	sp, #28
 8011858:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 801185a:	b1c4      	cbz	r4, 801188e <xTaskCreateStatic+0x3a>
		configASSERT( pxTaskBuffer != NULL );
 801185c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801185e:	b16d      	cbz	r5, 801187c <xTaskCreateStatic+0x28>
			volatile size_t xSize = sizeof( StaticTask_t );
 8011860:	25ac      	movs	r5, #172	; 0xac
 8011862:	9505      	str	r5, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 8011864:	9d05      	ldr	r5, [sp, #20]
 8011866:	2dac      	cmp	r5, #172	; 0xac
 8011868:	d01a      	beq.n	80118a0 <xTaskCreateStatic+0x4c>
 801186a:	f04f 0350 	mov.w	r3, #80	; 0x50
 801186e:	f383 8811 	msr	BASEPRI, r3
 8011872:	f3bf 8f6f 	isb	sy
 8011876:	f3bf 8f4f 	dsb	sy
 801187a:	e7fe      	b.n	801187a <xTaskCreateStatic+0x26>
 801187c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011880:	f383 8811 	msr	BASEPRI, r3
 8011884:	f3bf 8f6f 	isb	sy
 8011888:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 801188c:	e7fe      	b.n	801188c <xTaskCreateStatic+0x38>
 801188e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011892:	f383 8811 	msr	BASEPRI, r3
 8011896:	f3bf 8f6f 	isb	sy
 801189a:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 801189e:	e7fe      	b.n	801189e <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 80118a0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80118a2:	632c      	str	r4, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 80118a4:	2402      	movs	r4, #2
 80118a6:	f885 40a9 	strb.w	r4, [r5, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 80118aa:	ac04      	add	r4, sp, #16
 80118ac:	e9cd 4501 	strd	r4, r5, [sp, #4]
 80118b0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80118b2:	9400      	str	r4, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 80118b4:	9c05      	ldr	r4, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 80118b6:	f7ff fda9 	bl	801140c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 80118ba:	980c      	ldr	r0, [sp, #48]	; 0x30
 80118bc:	f7ff fd1e 	bl	80112fc <prvAddNewTaskToReadyList>
	}
 80118c0:	9804      	ldr	r0, [sp, #16]
 80118c2:	b007      	add	sp, #28
 80118c4:	bd30      	pop	{r4, r5, pc}
 80118c6:	bf00      	nop

080118c8 <xTaskCreate>:
	{
 80118c8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80118cc:	4607      	mov	r7, r0
 80118ce:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 80118d0:	0090      	lsls	r0, r2, #2
	{
 80118d2:	4615      	mov	r5, r2
 80118d4:	4688      	mov	r8, r1
 80118d6:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 80118d8:	f7fe f9b4 	bl	800fc44 <pvPortMalloc>
			if( pxStack != NULL )
 80118dc:	b1d8      	cbz	r0, 8011916 <xTaskCreate+0x4e>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 80118de:	4604      	mov	r4, r0
 80118e0:	20ac      	movs	r0, #172	; 0xac
 80118e2:	f7fe f9af 	bl	800fc44 <pvPortMalloc>
				if( pxNewTCB != NULL )
 80118e6:	4606      	mov	r6, r0
 80118e8:	b1d0      	cbz	r0, 8011920 <xTaskCreate+0x58>
					pxNewTCB->pxStack = pxStack;
 80118ea:	6304      	str	r4, [r0, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 80118ec:	2400      	movs	r4, #0
 80118ee:	f886 40a9 	strb.w	r4, [r6, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 80118f2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80118f4:	9401      	str	r4, [sp, #4]
 80118f6:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80118f8:	9602      	str	r6, [sp, #8]
 80118fa:	464b      	mov	r3, r9
 80118fc:	462a      	mov	r2, r5
 80118fe:	4641      	mov	r1, r8
 8011900:	4638      	mov	r0, r7
 8011902:	9400      	str	r4, [sp, #0]
 8011904:	f7ff fd82 	bl	801140c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8011908:	4630      	mov	r0, r6
 801190a:	f7ff fcf7 	bl	80112fc <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 801190e:	2001      	movs	r0, #1
	}
 8011910:	b005      	add	sp, #20
 8011912:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 8011916:	f04f 30ff 	mov.w	r0, #4294967295
	}
 801191a:	b005      	add	sp, #20
 801191c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 8011920:	4620      	mov	r0, r4
 8011922:	f7fe fa4b 	bl	800fdbc <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 8011926:	f04f 30ff 	mov.w	r0, #4294967295
 801192a:	e7f1      	b.n	8011910 <xTaskCreate+0x48>

0801192c <vTaskDelay>:
	{
 801192c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 801192e:	b950      	cbnz	r0, 8011946 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 8011930:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8011934:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8011938:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 801193c:	f3bf 8f4f 	dsb	sy
 8011940:	f3bf 8f6f 	isb	sy
	}
 8011944:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 8011946:	4d1e      	ldr	r5, [pc, #120]	; (80119c0 <vTaskDelay+0x94>)
 8011948:	682b      	ldr	r3, [r5, #0]
 801194a:	b143      	cbz	r3, 801195e <vTaskDelay+0x32>
 801194c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011950:	f383 8811 	msr	BASEPRI, r3
 8011954:	f3bf 8f6f 	isb	sy
 8011958:	f3bf 8f4f 	dsb	sy
 801195c:	e7fe      	b.n	801195c <vTaskDelay+0x30>
	++uxSchedulerSuspended;
 801195e:	682b      	ldr	r3, [r5, #0]
 8011960:	3301      	adds	r3, #1
 8011962:	4604      	mov	r4, r0
 8011964:	602b      	str	r3, [r5, #0]
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 8011966:	4b17      	ldr	r3, [pc, #92]	; (80119c4 <vTaskDelay+0x98>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8011968:	4e17      	ldr	r6, [pc, #92]	; (80119c8 <vTaskDelay+0x9c>)
const TickType_t xConstTickCount = xTickCount;
 801196a:	681f      	ldr	r7, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 801196c:	6830      	ldr	r0, [r6, #0]
 801196e:	3004      	adds	r0, #4
 8011970:	f7fe fac0 	bl	800fef4 <uxListRemove>
			does not occur.  This may overflow but this doesn't matter, the
			kernel will manage it correctly. */
			xTimeToWake = xConstTickCount + xTicksToWait;

			/* The list item will be inserted in wake time order. */
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 8011974:	6833      	ldr	r3, [r6, #0]
 8011976:	19e4      	adds	r4, r4, r7
 8011978:	605c      	str	r4, [r3, #4]

			if( xTimeToWake < xConstTickCount )
 801197a:	d310      	bcc.n	801199e <vTaskDelay+0x72>
			{
				/* Wake time has overflowed.  Place this item in the overflow
				list. */
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 801197c:	4b13      	ldr	r3, [pc, #76]	; (80119cc <vTaskDelay+0xa0>)
 801197e:	6818      	ldr	r0, [r3, #0]
 8011980:	6831      	ldr	r1, [r6, #0]
 8011982:	3104      	adds	r1, #4
 8011984:	f7fe fa9e 	bl	800fec4 <vListInsert>
	configASSERT( uxSchedulerSuspended );
 8011988:	682b      	ldr	r3, [r5, #0]
 801198a:	b9a3      	cbnz	r3, 80119b6 <vTaskDelay+0x8a>
 801198c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011990:	f383 8811 	msr	BASEPRI, r3
 8011994:	f3bf 8f6f 	isb	sy
 8011998:	f3bf 8f4f 	dsb	sy
 801199c:	e7fe      	b.n	801199c <vTaskDelay+0x70>
			}
			else
			{
				/* The wake time has not overflowed, so the current block list
				is used. */
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 801199e:	4b0c      	ldr	r3, [pc, #48]	; (80119d0 <vTaskDelay+0xa4>)
 80119a0:	6818      	ldr	r0, [r3, #0]
 80119a2:	6831      	ldr	r1, [r6, #0]
 80119a4:	3104      	adds	r1, #4
 80119a6:	f7fe fa8d 	bl	800fec4 <vListInsert>

				/* If the task entering the blocked state was placed at the
				head of the list of blocked tasks then xNextTaskUnblockTime
				needs to be updated too. */
				if( xTimeToWake < xNextTaskUnblockTime )
 80119aa:	4b0a      	ldr	r3, [pc, #40]	; (80119d4 <vTaskDelay+0xa8>)
 80119ac:	681a      	ldr	r2, [r3, #0]
 80119ae:	4294      	cmp	r4, r2
				{
					xNextTaskUnblockTime = xTimeToWake;
 80119b0:	bf38      	it	cc
 80119b2:	601c      	strcc	r4, [r3, #0]
 80119b4:	e7e8      	b.n	8011988 <vTaskDelay+0x5c>
 80119b6:	f7ff feb3 	bl	8011720 <xTaskResumeAll.part.0>
		if( xAlreadyYielded == pdFALSE )
 80119ba:	2800      	cmp	r0, #0
 80119bc:	d0b8      	beq.n	8011930 <vTaskDelay+0x4>
	}
 80119be:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80119c0:	2001367c 	.word	0x2001367c
 80119c4:	200136fc 	.word	0x200136fc
 80119c8:	20013208 	.word	0x20013208
 80119cc:	20013210 	.word	0x20013210
 80119d0:	2001320c 	.word	0x2001320c
 80119d4:	200136b0 	.word	0x200136b0

080119d8 <vTaskStartScheduler>:
{
 80119d8:	b530      	push	{r4, r5, lr}
 80119da:	b08b      	sub	sp, #44	; 0x2c
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 80119dc:	aa07      	add	r2, sp, #28
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 80119de:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 80119e0:	a906      	add	r1, sp, #24
 80119e2:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 80119e4:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 80119e8:	f7fe f90e 	bl	800fc08 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 80119ec:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 80119f0:	9d05      	ldr	r5, [sp, #20]
		configASSERT( puxStackBuffer != NULL );
 80119f2:	b1bb      	cbz	r3, 8011a24 <vTaskStartScheduler+0x4c>
		configASSERT( pxTaskBuffer != NULL );
 80119f4:	b16d      	cbz	r5, 8011a12 <vTaskStartScheduler+0x3a>
			volatile size_t xSize = sizeof( StaticTask_t );
 80119f6:	21ac      	movs	r1, #172	; 0xac
 80119f8:	9109      	str	r1, [sp, #36]	; 0x24
			configASSERT( xSize == sizeof( TCB_t ) );
 80119fa:	9909      	ldr	r1, [sp, #36]	; 0x24
 80119fc:	29ac      	cmp	r1, #172	; 0xac
 80119fe:	d01a      	beq.n	8011a36 <vTaskStartScheduler+0x5e>
 8011a00:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011a04:	f383 8811 	msr	BASEPRI, r3
 8011a08:	f3bf 8f6f 	isb	sy
 8011a0c:	f3bf 8f4f 	dsb	sy
 8011a10:	e7fe      	b.n	8011a10 <vTaskStartScheduler+0x38>
 8011a12:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011a16:	f383 8811 	msr	BASEPRI, r3
 8011a1a:	f3bf 8f6f 	isb	sy
 8011a1e:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 8011a22:	e7fe      	b.n	8011a22 <vTaskStartScheduler+0x4a>
 8011a24:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011a28:	f383 8811 	msr	BASEPRI, r3
 8011a2c:	f3bf 8f6f 	isb	sy
 8011a30:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 8011a34:	e7fe      	b.n	8011a34 <vTaskStartScheduler+0x5c>
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 8011a36:	2102      	movs	r1, #2
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8011a38:	a808      	add	r0, sp, #32
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 8011a3a:	632b      	str	r3, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 8011a3c:	f885 10a9 	strb.w	r1, [r5, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8011a40:	4623      	mov	r3, r4
 8011a42:	e9cd 0501 	strd	r0, r5, [sp, #4]
 8011a46:	491b      	ldr	r1, [pc, #108]	; (8011ab4 <vTaskStartScheduler+0xdc>)
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 8011a48:	9809      	ldr	r0, [sp, #36]	; 0x24
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8011a4a:	9400      	str	r4, [sp, #0]
 8011a4c:	481a      	ldr	r0, [pc, #104]	; (8011ab8 <vTaskStartScheduler+0xe0>)
 8011a4e:	f7ff fcdd 	bl	801140c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8011a52:	4628      	mov	r0, r5
 8011a54:	f7ff fc52 	bl	80112fc <prvAddNewTaskToReadyList>
		return xReturn;
 8011a58:	9b08      	ldr	r3, [sp, #32]
		if( xIdleTaskHandle != NULL )
 8011a5a:	b1eb      	cbz	r3, 8011a98 <vTaskStartScheduler+0xc0>
			xReturn = xTimerCreateTimerTask();
 8011a5c:	f000 fc6e 	bl	801233c <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 8011a60:	2801      	cmp	r0, #1
 8011a62:	d11b      	bne.n	8011a9c <vTaskStartScheduler+0xc4>
 8011a64:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011a68:	f383 8811 	msr	BASEPRI, r3
 8011a6c:	f3bf 8f6f 	isb	sy
 8011a70:	f3bf 8f4f 	dsb	sy
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 8011a74:	4b11      	ldr	r3, [pc, #68]	; (8011abc <vTaskStartScheduler+0xe4>)
 8011a76:	4a12      	ldr	r2, [pc, #72]	; (8011ac0 <vTaskStartScheduler+0xe8>)
 8011a78:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = portMAX_DELAY;
 8011a7a:	4912      	ldr	r1, [pc, #72]	; (8011ac4 <vTaskStartScheduler+0xec>)
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 8011a7c:	3358      	adds	r3, #88	; 0x58
 8011a7e:	6013      	str	r3, [r2, #0]
		xSchedulerRunning = pdTRUE;
 8011a80:	4a11      	ldr	r2, [pc, #68]	; (8011ac8 <vTaskStartScheduler+0xf0>)
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 8011a82:	4b12      	ldr	r3, [pc, #72]	; (8011acc <vTaskStartScheduler+0xf4>)
		xNextTaskUnblockTime = portMAX_DELAY;
 8011a84:	f04f 35ff 	mov.w	r5, #4294967295
 8011a88:	600d      	str	r5, [r1, #0]
		xSchedulerRunning = pdTRUE;
 8011a8a:	6010      	str	r0, [r2, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 8011a8c:	601c      	str	r4, [r3, #0]
}
 8011a8e:	b00b      	add	sp, #44	; 0x2c
 8011a90:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
		if( xPortStartScheduler() != pdFALSE )
 8011a94:	f7fe bb38 	b.w	8010108 <xPortStartScheduler>
}
 8011a98:	b00b      	add	sp, #44	; 0x2c
 8011a9a:	bd30      	pop	{r4, r5, pc}
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 8011a9c:	3001      	adds	r0, #1
 8011a9e:	d1fb      	bne.n	8011a98 <vTaskStartScheduler+0xc0>
 8011aa0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011aa4:	f383 8811 	msr	BASEPRI, r3
 8011aa8:	f3bf 8f6f 	isb	sy
 8011aac:	f3bf 8f4f 	dsb	sy
 8011ab0:	e7fe      	b.n	8011ab0 <vTaskStartScheduler+0xd8>
 8011ab2:	bf00      	nop
 8011ab4:	08031448 	.word	0x08031448
 8011ab8:	08011539 	.word	0x08011539
 8011abc:	20013208 	.word	0x20013208
 8011ac0:	20000164 	.word	0x20000164
 8011ac4:	200136b0 	.word	0x200136b0
 8011ac8:	200136d0 	.word	0x200136d0
 8011acc:	200136fc 	.word	0x200136fc

08011ad0 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 8011ad0:	4a02      	ldr	r2, [pc, #8]	; (8011adc <vTaskSuspendAll+0xc>)
 8011ad2:	6813      	ldr	r3, [r2, #0]
 8011ad4:	3301      	adds	r3, #1
 8011ad6:	6013      	str	r3, [r2, #0]
}
 8011ad8:	4770      	bx	lr
 8011ada:	bf00      	nop
 8011adc:	2001367c 	.word	0x2001367c

08011ae0 <xTaskResumeAll>:
	configASSERT( uxSchedulerSuspended );
 8011ae0:	4b06      	ldr	r3, [pc, #24]	; (8011afc <xTaskResumeAll+0x1c>)
 8011ae2:	681b      	ldr	r3, [r3, #0]
 8011ae4:	b943      	cbnz	r3, 8011af8 <xTaskResumeAll+0x18>
 8011ae6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011aea:	f383 8811 	msr	BASEPRI, r3
 8011aee:	f3bf 8f6f 	isb	sy
 8011af2:	f3bf 8f4f 	dsb	sy
 8011af6:	e7fe      	b.n	8011af6 <xTaskResumeAll+0x16>
 8011af8:	f7ff be12 	b.w	8011720 <xTaskResumeAll.part.0>
 8011afc:	2001367c 	.word	0x2001367c

08011b00 <xTaskGetTickCount>:
		xTicks = xTickCount;
 8011b00:	4b01      	ldr	r3, [pc, #4]	; (8011b08 <xTaskGetTickCount+0x8>)
 8011b02:	6818      	ldr	r0, [r3, #0]
}
 8011b04:	4770      	bx	lr
 8011b06:	bf00      	nop
 8011b08:	200136fc 	.word	0x200136fc

08011b0c <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8011b0c:	4b05      	ldr	r3, [pc, #20]	; (8011b24 <xTaskIncrementTick+0x18>)
 8011b0e:	681b      	ldr	r3, [r3, #0]
 8011b10:	b90b      	cbnz	r3, 8011b16 <xTaskIncrementTick+0xa>
 8011b12:	f7ff bd61 	b.w	80115d8 <xTaskIncrementTick.part.0>
		++xPendedTicks;
 8011b16:	4a04      	ldr	r2, [pc, #16]	; (8011b28 <xTaskIncrementTick+0x1c>)
 8011b18:	6813      	ldr	r3, [r2, #0]
 8011b1a:	3301      	adds	r3, #1
}
 8011b1c:	2000      	movs	r0, #0
		++xPendedTicks;
 8011b1e:	6013      	str	r3, [r2, #0]
}
 8011b20:	4770      	bx	lr
 8011b22:	bf00      	nop
 8011b24:	2001367c 	.word	0x2001367c
 8011b28:	200136b8 	.word	0x200136b8

08011b2c <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8011b2c:	4b1f      	ldr	r3, [pc, #124]	; (8011bac <vTaskSwitchContext+0x80>)
 8011b2e:	681b      	ldr	r3, [r3, #0]
 8011b30:	b11b      	cbz	r3, 8011b3a <vTaskSwitchContext+0xe>
		xYieldPending = pdTRUE;
 8011b32:	4b1f      	ldr	r3, [pc, #124]	; (8011bb0 <vTaskSwitchContext+0x84>)
 8011b34:	2201      	movs	r2, #1
 8011b36:	601a      	str	r2, [r3, #0]
 8011b38:	4770      	bx	lr
		xYieldPending = pdFALSE;
 8011b3a:	4a1d      	ldr	r2, [pc, #116]	; (8011bb0 <vTaskSwitchContext+0x84>)
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8011b3c:	491d      	ldr	r1, [pc, #116]	; (8011bb4 <vTaskSwitchContext+0x88>)
{
 8011b3e:	b410      	push	{r4}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8011b40:	4c1d      	ldr	r4, [pc, #116]	; (8011bb8 <vTaskSwitchContext+0x8c>)
		xYieldPending = pdFALSE;
 8011b42:	6013      	str	r3, [r2, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8011b44:	6823      	ldr	r3, [r4, #0]
 8011b46:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 8011b4a:	0092      	lsls	r2, r2, #2
 8011b4c:	0098      	lsls	r0, r3, #2
 8011b4e:	588a      	ldr	r2, [r1, r2]
 8011b50:	b942      	cbnz	r2, 8011b64 <vTaskSwitchContext+0x38>
 8011b52:	b313      	cbz	r3, 8011b9a <vTaskSwitchContext+0x6e>
 8011b54:	3b01      	subs	r3, #1
 8011b56:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 8011b5a:	0098      	lsls	r0, r3, #2
 8011b5c:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8011b60:	2a00      	cmp	r2, #0
 8011b62:	d0f6      	beq.n	8011b52 <vTaskSwitchContext+0x26>
 8011b64:	4418      	add	r0, r3
 8011b66:	eb01 0c80 	add.w	ip, r1, r0, lsl #2
 8011b6a:	4662      	mov	r2, ip
 8011b6c:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8011b70:	6849      	ldr	r1, [r1, #4]
 8011b72:	f8cc 1004 	str.w	r1, [ip, #4]
 8011b76:	3208      	adds	r2, #8
 8011b78:	4291      	cmp	r1, r2
 8011b7a:	bf08      	it	eq
 8011b7c:	6849      	ldreq	r1, [r1, #4]
 8011b7e:	4a0f      	ldr	r2, [pc, #60]	; (8011bbc <vTaskSwitchContext+0x90>)
 8011b80:	bf08      	it	eq
 8011b82:	f8cc 1004 	streq.w	r1, [ip, #4]
 8011b86:	68c9      	ldr	r1, [r1, #12]
 8011b88:	6011      	str	r1, [r2, #0]
 8011b8a:	6023      	str	r3, [r4, #0]
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 8011b8c:	6813      	ldr	r3, [r2, #0]
 8011b8e:	4a0c      	ldr	r2, [pc, #48]	; (8011bc0 <vTaskSwitchContext+0x94>)
}
 8011b90:	f85d 4b04 	ldr.w	r4, [sp], #4
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 8011b94:	3358      	adds	r3, #88	; 0x58
 8011b96:	6013      	str	r3, [r2, #0]
}
 8011b98:	4770      	bx	lr
 8011b9a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011b9e:	f383 8811 	msr	BASEPRI, r3
 8011ba2:	f3bf 8f6f 	isb	sy
 8011ba6:	f3bf 8f4f 	dsb	sy
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8011baa:	e7fe      	b.n	8011baa <vTaskSwitchContext+0x7e>
 8011bac:	2001367c 	.word	0x2001367c
 8011bb0:	20013700 	.word	0x20013700
 8011bb4:	20013214 	.word	0x20013214
 8011bb8:	20013684 	.word	0x20013684
 8011bbc:	20013208 	.word	0x20013208
 8011bc0:	20000164 	.word	0x20000164

08011bc4 <vTaskPlaceOnEventList>:
	configASSERT( pxEventList );
 8011bc4:	b1d0      	cbz	r0, 8011bfc <vTaskPlaceOnEventList+0x38>
{
 8011bc6:	b570      	push	{r4, r5, r6, lr}
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8011bc8:	4d1a      	ldr	r5, [pc, #104]	; (8011c34 <vTaskPlaceOnEventList+0x70>)
 8011bca:	460c      	mov	r4, r1
 8011bcc:	6829      	ldr	r1, [r5, #0]
 8011bce:	3118      	adds	r1, #24
 8011bd0:	f7fe f978 	bl	800fec4 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 8011bd4:	4b18      	ldr	r3, [pc, #96]	; (8011c38 <vTaskPlaceOnEventList+0x74>)
 8011bd6:	681e      	ldr	r6, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8011bd8:	6828      	ldr	r0, [r5, #0]
 8011bda:	3004      	adds	r0, #4
 8011bdc:	f7fe f98a 	bl	800fef4 <uxListRemove>
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 8011be0:	1c63      	adds	r3, r4, #1
 8011be2:	d014      	beq.n	8011c0e <vTaskPlaceOnEventList+0x4a>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 8011be4:	682b      	ldr	r3, [r5, #0]
 8011be6:	19a4      	adds	r4, r4, r6
 8011be8:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 8011bea:	d317      	bcc.n	8011c1c <vTaskPlaceOnEventList+0x58>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8011bec:	4b13      	ldr	r3, [pc, #76]	; (8011c3c <vTaskPlaceOnEventList+0x78>)
 8011bee:	6818      	ldr	r0, [r3, #0]
 8011bf0:	6829      	ldr	r1, [r5, #0]
}
 8011bf2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8011bf6:	3104      	adds	r1, #4
 8011bf8:	f7fe b964 	b.w	800fec4 <vListInsert>
 8011bfc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011c00:	f383 8811 	msr	BASEPRI, r3
 8011c04:	f3bf 8f6f 	isb	sy
 8011c08:	f3bf 8f4f 	dsb	sy
	configASSERT( pxEventList );
 8011c0c:	e7fe      	b.n	8011c0c <vTaskPlaceOnEventList+0x48>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8011c0e:	6829      	ldr	r1, [r5, #0]
 8011c10:	480b      	ldr	r0, [pc, #44]	; (8011c40 <vTaskPlaceOnEventList+0x7c>)
}
 8011c12:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8011c16:	3104      	adds	r1, #4
 8011c18:	f7fe b944 	b.w	800fea4 <vListInsertEnd>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8011c1c:	4b09      	ldr	r3, [pc, #36]	; (8011c44 <vTaskPlaceOnEventList+0x80>)
 8011c1e:	6818      	ldr	r0, [r3, #0]
 8011c20:	6829      	ldr	r1, [r5, #0]
 8011c22:	3104      	adds	r1, #4
 8011c24:	f7fe f94e 	bl	800fec4 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 8011c28:	4b07      	ldr	r3, [pc, #28]	; (8011c48 <vTaskPlaceOnEventList+0x84>)
 8011c2a:	681a      	ldr	r2, [r3, #0]
 8011c2c:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 8011c2e:	bf38      	it	cc
 8011c30:	601c      	strcc	r4, [r3, #0]
}
 8011c32:	bd70      	pop	{r4, r5, r6, pc}
 8011c34:	20013208 	.word	0x20013208
 8011c38:	200136fc 	.word	0x200136fc
 8011c3c:	20013210 	.word	0x20013210
 8011c40:	200136d4 	.word	0x200136d4
 8011c44:	2001320c 	.word	0x2001320c
 8011c48:	200136b0 	.word	0x200136b0

08011c4c <vTaskPlaceOnEventListRestricted>:
		configASSERT( pxEventList );
 8011c4c:	b330      	cbz	r0, 8011c9c <vTaskPlaceOnEventListRestricted+0x50>
	{
 8011c4e:	b570      	push	{r4, r5, r6, lr}
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8011c50:	4e1d      	ldr	r6, [pc, #116]	; (8011cc8 <vTaskPlaceOnEventListRestricted+0x7c>)
 8011c52:	460c      	mov	r4, r1
 8011c54:	6831      	ldr	r1, [r6, #0]
 8011c56:	4615      	mov	r5, r2
 8011c58:	3118      	adds	r1, #24
 8011c5a:	f7fe f923 	bl	800fea4 <vListInsertEnd>
const TickType_t xConstTickCount = xTickCount;
 8011c5e:	4b1b      	ldr	r3, [pc, #108]	; (8011ccc <vTaskPlaceOnEventListRestricted+0x80>)
		if( xWaitIndefinitely != pdFALSE )
 8011c60:	b985      	cbnz	r5, 8011c84 <vTaskPlaceOnEventListRestricted+0x38>
const TickType_t xConstTickCount = xTickCount;
 8011c62:	681d      	ldr	r5, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8011c64:	6830      	ldr	r0, [r6, #0]
 8011c66:	3004      	adds	r0, #4
 8011c68:	f7fe f944 	bl	800fef4 <uxListRemove>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 8011c6c:	6833      	ldr	r3, [r6, #0]
 8011c6e:	1964      	adds	r4, r4, r5
 8011c70:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 8011c72:	d31c      	bcc.n	8011cae <vTaskPlaceOnEventListRestricted+0x62>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8011c74:	4b16      	ldr	r3, [pc, #88]	; (8011cd0 <vTaskPlaceOnEventListRestricted+0x84>)
 8011c76:	6818      	ldr	r0, [r3, #0]
 8011c78:	6831      	ldr	r1, [r6, #0]
	}
 8011c7a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8011c7e:	3104      	adds	r1, #4
 8011c80:	f7fe b920 	b.w	800fec4 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 8011c84:	681b      	ldr	r3, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8011c86:	6830      	ldr	r0, [r6, #0]
 8011c88:	3004      	adds	r0, #4
 8011c8a:	f7fe f933 	bl	800fef4 <uxListRemove>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8011c8e:	6831      	ldr	r1, [r6, #0]
 8011c90:	4810      	ldr	r0, [pc, #64]	; (8011cd4 <vTaskPlaceOnEventListRestricted+0x88>)
	}
 8011c92:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8011c96:	3104      	adds	r1, #4
 8011c98:	f7fe b904 	b.w	800fea4 <vListInsertEnd>
 8011c9c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011ca0:	f383 8811 	msr	BASEPRI, r3
 8011ca4:	f3bf 8f6f 	isb	sy
 8011ca8:	f3bf 8f4f 	dsb	sy
		configASSERT( pxEventList );
 8011cac:	e7fe      	b.n	8011cac <vTaskPlaceOnEventListRestricted+0x60>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8011cae:	4b0a      	ldr	r3, [pc, #40]	; (8011cd8 <vTaskPlaceOnEventListRestricted+0x8c>)
 8011cb0:	6818      	ldr	r0, [r3, #0]
 8011cb2:	6831      	ldr	r1, [r6, #0]
 8011cb4:	3104      	adds	r1, #4
 8011cb6:	f7fe f905 	bl	800fec4 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 8011cba:	4b08      	ldr	r3, [pc, #32]	; (8011cdc <vTaskPlaceOnEventListRestricted+0x90>)
 8011cbc:	681a      	ldr	r2, [r3, #0]
 8011cbe:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 8011cc0:	bf38      	it	cc
 8011cc2:	601c      	strcc	r4, [r3, #0]
	}
 8011cc4:	bd70      	pop	{r4, r5, r6, pc}
 8011cc6:	bf00      	nop
 8011cc8:	20013208 	.word	0x20013208
 8011ccc:	200136fc 	.word	0x200136fc
 8011cd0:	20013210 	.word	0x20013210
 8011cd4:	200136d4 	.word	0x200136d4
 8011cd8:	2001320c 	.word	0x2001320c
 8011cdc:	200136b0 	.word	0x200136b0

08011ce0 <xTaskRemoveFromEventList>:
{
 8011ce0:	b530      	push	{r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8011ce2:	68c3      	ldr	r3, [r0, #12]
 8011ce4:	68dc      	ldr	r4, [r3, #12]
{
 8011ce6:	b083      	sub	sp, #12
	configASSERT( pxUnblockedTCB );
 8011ce8:	2c00      	cmp	r4, #0
 8011cea:	d02b      	beq.n	8011d44 <xTaskRemoveFromEventList+0x64>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 8011cec:	f104 0518 	add.w	r5, r4, #24
 8011cf0:	4628      	mov	r0, r5
 8011cf2:	f7fe f8ff 	bl	800fef4 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8011cf6:	4b18      	ldr	r3, [pc, #96]	; (8011d58 <xTaskRemoveFromEventList+0x78>)
 8011cf8:	681b      	ldr	r3, [r3, #0]
 8011cfa:	b17b      	cbz	r3, 8011d1c <xTaskRemoveFromEventList+0x3c>
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 8011cfc:	4817      	ldr	r0, [pc, #92]	; (8011d5c <xTaskRemoveFromEventList+0x7c>)
 8011cfe:	4629      	mov	r1, r5
 8011d00:	f7fe f8d0 	bl	800fea4 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 8011d04:	4b16      	ldr	r3, [pc, #88]	; (8011d60 <xTaskRemoveFromEventList+0x80>)
 8011d06:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8011d08:	681b      	ldr	r3, [r3, #0]
 8011d0a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011d0c:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 8011d0e:	bf85      	ittet	hi
 8011d10:	4b14      	ldrhi	r3, [pc, #80]	; (8011d64 <xTaskRemoveFromEventList+0x84>)
 8011d12:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 8011d14:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 8011d16:	6018      	strhi	r0, [r3, #0]
}
 8011d18:	b003      	add	sp, #12
 8011d1a:	bd30      	pop	{r4, r5, pc}
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 8011d1c:	1d21      	adds	r1, r4, #4
 8011d1e:	4608      	mov	r0, r1
 8011d20:	9101      	str	r1, [sp, #4]
 8011d22:	f7fe f8e7 	bl	800fef4 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 8011d26:	4a10      	ldr	r2, [pc, #64]	; (8011d68 <xTaskRemoveFromEventList+0x88>)
 8011d28:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8011d2a:	6810      	ldr	r0, [r2, #0]
 8011d2c:	9901      	ldr	r1, [sp, #4]
 8011d2e:	4283      	cmp	r3, r0
 8011d30:	480e      	ldr	r0, [pc, #56]	; (8011d6c <xTaskRemoveFromEventList+0x8c>)
 8011d32:	bf88      	it	hi
 8011d34:	6013      	strhi	r3, [r2, #0]
 8011d36:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8011d3a:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 8011d3e:	f7fe f8b1 	bl	800fea4 <vListInsertEnd>
 8011d42:	e7df      	b.n	8011d04 <xTaskRemoveFromEventList+0x24>
 8011d44:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011d48:	f383 8811 	msr	BASEPRI, r3
 8011d4c:	f3bf 8f6f 	isb	sy
 8011d50:	f3bf 8f4f 	dsb	sy
	configASSERT( pxUnblockedTCB );
 8011d54:	e7fe      	b.n	8011d54 <xTaskRemoveFromEventList+0x74>
 8011d56:	bf00      	nop
 8011d58:	2001367c 	.word	0x2001367c
 8011d5c:	200136bc 	.word	0x200136bc
 8011d60:	20013208 	.word	0x20013208
 8011d64:	20013700 	.word	0x20013700
 8011d68:	20013684 	.word	0x20013684
 8011d6c:	20013214 	.word	0x20013214

08011d70 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 8011d70:	4a03      	ldr	r2, [pc, #12]	; (8011d80 <vTaskInternalSetTimeOutState+0x10>)
	pxTimeOut->xTimeOnEntering = xTickCount;
 8011d72:	4b04      	ldr	r3, [pc, #16]	; (8011d84 <vTaskInternalSetTimeOutState+0x14>)
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 8011d74:	6812      	ldr	r2, [r2, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 8011d76:	681b      	ldr	r3, [r3, #0]
 8011d78:	e9c0 2300 	strd	r2, r3, [r0]
}
 8011d7c:	4770      	bx	lr
 8011d7e:	bf00      	nop
 8011d80:	200136b4 	.word	0x200136b4
 8011d84:	200136fc 	.word	0x200136fc

08011d88 <xTaskCheckForTimeOut>:
	configASSERT( pxTimeOut );
 8011d88:	b328      	cbz	r0, 8011dd6 <xTaskCheckForTimeOut+0x4e>
{
 8011d8a:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011d8c:	460d      	mov	r5, r1
 8011d8e:	b083      	sub	sp, #12
	configASSERT( pxTicksToWait );
 8011d90:	b1c1      	cbz	r1, 8011dc4 <xTaskCheckForTimeOut+0x3c>
 8011d92:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 8011d94:	f7fe f926 	bl	800ffe4 <vPortEnterCritical>
			if( *pxTicksToWait == portMAX_DELAY )
 8011d98:	682b      	ldr	r3, [r5, #0]
		const TickType_t xConstTickCount = xTickCount;
 8011d9a:	4a1d      	ldr	r2, [pc, #116]	; (8011e10 <xTaskCheckForTimeOut+0x88>)
			if( *pxTicksToWait == portMAX_DELAY )
 8011d9c:	1c58      	adds	r0, r3, #1
		const TickType_t xConstTickCount = xTickCount;
 8011d9e:	6811      	ldr	r1, [r2, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 8011da0:	d030      	beq.n	8011e04 <xTaskCheckForTimeOut+0x7c>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 8011da2:	f8df c070 	ldr.w	ip, [pc, #112]	; 8011e14 <xTaskCheckForTimeOut+0x8c>
 8011da6:	e9d4 6000 	ldrd	r6, r0, [r4]
 8011daa:	f8dc 7000 	ldr.w	r7, [ip]
 8011dae:	42be      	cmp	r6, r7
 8011db0:	d01a      	beq.n	8011de8 <xTaskCheckForTimeOut+0x60>
 8011db2:	4288      	cmp	r0, r1
 8011db4:	d818      	bhi.n	8011de8 <xTaskCheckForTimeOut+0x60>
			xReturn = pdTRUE;
 8011db6:	2001      	movs	r0, #1
 8011db8:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 8011dba:	f7fe f935 	bl	8010028 <vPortExitCritical>
}
 8011dbe:	9801      	ldr	r0, [sp, #4]
 8011dc0:	b003      	add	sp, #12
 8011dc2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011dc4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011dc8:	f383 8811 	msr	BASEPRI, r3
 8011dcc:	f3bf 8f6f 	isb	sy
 8011dd0:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTicksToWait );
 8011dd4:	e7fe      	b.n	8011dd4 <xTaskCheckForTimeOut+0x4c>
 8011dd6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011dda:	f383 8811 	msr	BASEPRI, r3
 8011dde:	f3bf 8f6f 	isb	sy
 8011de2:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTimeOut );
 8011de6:	e7fe      	b.n	8011de6 <xTaskCheckForTimeOut+0x5e>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8011de8:	eba1 0e00 	sub.w	lr, r1, r0
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 8011dec:	4573      	cmp	r3, lr
 8011dee:	d90b      	bls.n	8011e08 <xTaskCheckForTimeOut+0x80>
			*pxTicksToWait -= xElapsedTime;
 8011df0:	1a5b      	subs	r3, r3, r1
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 8011df2:	f8dc 1000 	ldr.w	r1, [ip]
	pxTimeOut->xTimeOnEntering = xTickCount;
 8011df6:	6812      	ldr	r2, [r2, #0]
			*pxTicksToWait -= xElapsedTime;
 8011df8:	4403      	add	r3, r0
 8011dfa:	602b      	str	r3, [r5, #0]
			xReturn = pdFALSE;
 8011dfc:	2000      	movs	r0, #0
	pxTimeOut->xTimeOnEntering = xTickCount;
 8011dfe:	e9c4 1200 	strd	r1, r2, [r4]
			xReturn = pdFALSE;
 8011e02:	e7d9      	b.n	8011db8 <xTaskCheckForTimeOut+0x30>
				xReturn = pdFALSE;
 8011e04:	2000      	movs	r0, #0
 8011e06:	e7d7      	b.n	8011db8 <xTaskCheckForTimeOut+0x30>
			*pxTicksToWait = 0;
 8011e08:	2300      	movs	r3, #0
 8011e0a:	602b      	str	r3, [r5, #0]
			xReturn = pdTRUE;
 8011e0c:	2001      	movs	r0, #1
 8011e0e:	e7d3      	b.n	8011db8 <xTaskCheckForTimeOut+0x30>
 8011e10:	200136fc 	.word	0x200136fc
 8011e14:	200136b4 	.word	0x200136b4

08011e18 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 8011e18:	4b01      	ldr	r3, [pc, #4]	; (8011e20 <vTaskMissedYield+0x8>)
 8011e1a:	2201      	movs	r2, #1
 8011e1c:	601a      	str	r2, [r3, #0]
}
 8011e1e:	4770      	bx	lr
 8011e20:	20013700 	.word	0x20013700

08011e24 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 8011e24:	4b05      	ldr	r3, [pc, #20]	; (8011e3c <xTaskGetSchedulerState+0x18>)
 8011e26:	681b      	ldr	r3, [r3, #0]
 8011e28:	b133      	cbz	r3, 8011e38 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8011e2a:	4b05      	ldr	r3, [pc, #20]	; (8011e40 <xTaskGetSchedulerState+0x1c>)
 8011e2c:	6818      	ldr	r0, [r3, #0]
 8011e2e:	fab0 f080 	clz	r0, r0
 8011e32:	0940      	lsrs	r0, r0, #5
 8011e34:	0040      	lsls	r0, r0, #1
 8011e36:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 8011e38:	2001      	movs	r0, #1
	}
 8011e3a:	4770      	bx	lr
 8011e3c:	200136d0 	.word	0x200136d0
 8011e40:	2001367c 	.word	0x2001367c

08011e44 <xTaskPriorityInherit>:
	{
 8011e44:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 8011e46:	4604      	mov	r4, r0
	{
 8011e48:	b082      	sub	sp, #8
		if( pxMutexHolder != NULL )
 8011e4a:	b1c8      	cbz	r0, 8011e80 <xTaskPriorityInherit+0x3c>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 8011e4c:	4d1d      	ldr	r5, [pc, #116]	; (8011ec4 <xTaskPriorityInherit+0x80>)
 8011e4e:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8011e50:	682a      	ldr	r2, [r5, #0]
 8011e52:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8011e54:	4293      	cmp	r3, r2
 8011e56:	d215      	bcs.n	8011e84 <xTaskPriorityInherit+0x40>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8011e58:	6982      	ldr	r2, [r0, #24]
 8011e5a:	2a00      	cmp	r2, #0
 8011e5c:	db04      	blt.n	8011e68 <xTaskPriorityInherit+0x24>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8011e5e:	682a      	ldr	r2, [r5, #0]
 8011e60:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8011e62:	f1c2 0238 	rsb	r2, r2, #56	; 0x38
 8011e66:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8011e68:	4e17      	ldr	r6, [pc, #92]	; (8011ec8 <xTaskPriorityInherit+0x84>)
 8011e6a:	6962      	ldr	r2, [r4, #20]
 8011e6c:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8011e70:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 8011e74:	429a      	cmp	r2, r3
 8011e76:	d00e      	beq.n	8011e96 <xTaskPriorityInherit+0x52>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8011e78:	682b      	ldr	r3, [r5, #0]
 8011e7a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011e7c:	62e3      	str	r3, [r4, #44]	; 0x2c
				xReturn = pdTRUE;
 8011e7e:	2001      	movs	r0, #1
	}
 8011e80:	b002      	add	sp, #8
 8011e82:	bd70      	pop	{r4, r5, r6, pc}
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 8011e84:	682b      	ldr	r3, [r5, #0]
 8011e86:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8011e88:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011e8a:	4298      	cmp	r0, r3
 8011e8c:	bf2c      	ite	cs
 8011e8e:	2000      	movcs	r0, #0
 8011e90:	2001      	movcc	r0, #1
	}
 8011e92:	b002      	add	sp, #8
 8011e94:	bd70      	pop	{r4, r5, r6, pc}
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8011e96:	1d21      	adds	r1, r4, #4
 8011e98:	4608      	mov	r0, r1
 8011e9a:	9101      	str	r1, [sp, #4]
 8011e9c:	f7fe f82a 	bl	800fef4 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8011ea0:	682a      	ldr	r2, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8011ea2:	4b0a      	ldr	r3, [pc, #40]	; (8011ecc <xTaskPriorityInherit+0x88>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8011ea4:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8011ea6:	681a      	ldr	r2, [r3, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8011ea8:	62e0      	str	r0, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8011eaa:	4290      	cmp	r0, r2
 8011eac:	bf88      	it	hi
 8011eae:	6018      	strhi	r0, [r3, #0]
 8011eb0:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8011eb4:	eb06 0080 	add.w	r0, r6, r0, lsl #2
 8011eb8:	9901      	ldr	r1, [sp, #4]
 8011eba:	f7fd fff3 	bl	800fea4 <vListInsertEnd>
				xReturn = pdTRUE;
 8011ebe:	2001      	movs	r0, #1
 8011ec0:	e7de      	b.n	8011e80 <xTaskPriorityInherit+0x3c>
 8011ec2:	bf00      	nop
 8011ec4:	20013208 	.word	0x20013208
 8011ec8:	20013214 	.word	0x20013214
 8011ecc:	20013684 	.word	0x20013684

08011ed0 <xTaskPriorityDisinherit>:
		if( pxMutexHolder != NULL )
 8011ed0:	b318      	cbz	r0, 8011f1a <xTaskPriorityDisinherit+0x4a>
	{
 8011ed2:	b510      	push	{r4, lr}
			configASSERT( pxTCB == pxCurrentTCB );
 8011ed4:	4b1e      	ldr	r3, [pc, #120]	; (8011f50 <xTaskPriorityDisinherit+0x80>)
 8011ed6:	681c      	ldr	r4, [r3, #0]
 8011ed8:	4284      	cmp	r4, r0
	{
 8011eda:	b082      	sub	sp, #8
			configASSERT( pxTCB == pxCurrentTCB );
 8011edc:	d008      	beq.n	8011ef0 <xTaskPriorityDisinherit+0x20>
 8011ede:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011ee2:	f383 8811 	msr	BASEPRI, r3
 8011ee6:	f3bf 8f6f 	isb	sy
 8011eea:	f3bf 8f4f 	dsb	sy
 8011eee:	e7fe      	b.n	8011eee <xTaskPriorityDisinherit+0x1e>
			configASSERT( pxTCB->uxMutexesHeld );
 8011ef0:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8011ef2:	b14b      	cbz	r3, 8011f08 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8011ef4:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8011ef6:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 8011ef8:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8011efa:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 8011efc:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8011efe:	d000      	beq.n	8011f02 <xTaskPriorityDisinherit+0x32>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 8011f00:	b16b      	cbz	r3, 8011f1e <xTaskPriorityDisinherit+0x4e>
	BaseType_t xReturn = pdFALSE;
 8011f02:	2000      	movs	r0, #0
	}
 8011f04:	b002      	add	sp, #8
 8011f06:	bd10      	pop	{r4, pc}
 8011f08:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011f0c:	f383 8811 	msr	BASEPRI, r3
 8011f10:	f3bf 8f6f 	isb	sy
 8011f14:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 8011f18:	e7fe      	b.n	8011f18 <xTaskPriorityDisinherit+0x48>
	BaseType_t xReturn = pdFALSE;
 8011f1a:	2000      	movs	r0, #0
	}
 8011f1c:	4770      	bx	lr
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8011f1e:	1d21      	adds	r1, r4, #4
 8011f20:	4608      	mov	r0, r1
 8011f22:	9101      	str	r1, [sp, #4]
 8011f24:	f7fd ffe6 	bl	800fef4 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 8011f28:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 8011f2a:	4a0a      	ldr	r2, [pc, #40]	; (8011f54 <xTaskPriorityDisinherit+0x84>)
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 8011f2c:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8011f2e:	f1c3 0038 	rsb	r0, r3, #56	; 0x38
 8011f32:	61a0      	str	r0, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 8011f34:	6810      	ldr	r0, [r2, #0]
 8011f36:	9901      	ldr	r1, [sp, #4]
 8011f38:	4283      	cmp	r3, r0
 8011f3a:	4807      	ldr	r0, [pc, #28]	; (8011f58 <xTaskPriorityDisinherit+0x88>)
 8011f3c:	bf88      	it	hi
 8011f3e:	6013      	strhi	r3, [r2, #0]
 8011f40:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8011f44:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 8011f48:	f7fd ffac 	bl	800fea4 <vListInsertEnd>
					xReturn = pdTRUE;
 8011f4c:	2001      	movs	r0, #1
		return xReturn;
 8011f4e:	e7d9      	b.n	8011f04 <xTaskPriorityDisinherit+0x34>
 8011f50:	20013208 	.word	0x20013208
 8011f54:	20013684 	.word	0x20013684
 8011f58:	20013214 	.word	0x20013214

08011f5c <vTaskPriorityDisinheritAfterTimeout>:
		if( pxMutexHolder != NULL )
 8011f5c:	2800      	cmp	r0, #0
 8011f5e:	d041      	beq.n	8011fe4 <vTaskPriorityDisinheritAfterTimeout+0x88>
	{
 8011f60:	b530      	push	{r4, r5, lr}
			configASSERT( pxTCB->uxMutexesHeld );
 8011f62:	6d03      	ldr	r3, [r0, #80]	; 0x50
	{
 8011f64:	b083      	sub	sp, #12
 8011f66:	4604      	mov	r4, r0
			configASSERT( pxTCB->uxMutexesHeld );
 8011f68:	b153      	cbz	r3, 8011f80 <vTaskPriorityDisinheritAfterTimeout+0x24>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 8011f6a:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
			if( pxTCB->uxPriority != uxPriorityToUse )
 8011f6c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8011f6e:	4281      	cmp	r1, r0
 8011f70:	bf38      	it	cc
 8011f72:	4601      	movcc	r1, r0
 8011f74:	428a      	cmp	r2, r1
 8011f76:	d001      	beq.n	8011f7c <vTaskPriorityDisinheritAfterTimeout+0x20>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 8011f78:	2b01      	cmp	r3, #1
 8011f7a:	d00a      	beq.n	8011f92 <vTaskPriorityDisinheritAfterTimeout+0x36>
	}
 8011f7c:	b003      	add	sp, #12
 8011f7e:	bd30      	pop	{r4, r5, pc}
 8011f80:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011f84:	f383 8811 	msr	BASEPRI, r3
 8011f88:	f3bf 8f6f 	isb	sy
 8011f8c:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 8011f90:	e7fe      	b.n	8011f90 <vTaskPriorityDisinheritAfterTimeout+0x34>
					configASSERT( pxTCB != pxCurrentTCB );
 8011f92:	4b19      	ldr	r3, [pc, #100]	; (8011ff8 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
 8011f94:	681b      	ldr	r3, [r3, #0]
 8011f96:	42a3      	cmp	r3, r4
 8011f98:	d025      	beq.n	8011fe6 <vTaskPriorityDisinheritAfterTimeout+0x8a>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8011f9a:	69a3      	ldr	r3, [r4, #24]
					pxTCB->uxPriority = uxPriorityToUse;
 8011f9c:	62e1      	str	r1, [r4, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8011f9e:	2b00      	cmp	r3, #0
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8011fa0:	bfa8      	it	ge
 8011fa2:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8011fa6:	4d15      	ldr	r5, [pc, #84]	; (8011ffc <vTaskPriorityDisinheritAfterTimeout+0xa0>)
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8011fa8:	bfa8      	it	ge
 8011faa:	61a1      	strge	r1, [r4, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8011fac:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8011fb0:	6961      	ldr	r1, [r4, #20]
 8011fb2:	eb05 0382 	add.w	r3, r5, r2, lsl #2
 8011fb6:	4299      	cmp	r1, r3
 8011fb8:	d1e0      	bne.n	8011f7c <vTaskPriorityDisinheritAfterTimeout+0x20>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8011fba:	1d21      	adds	r1, r4, #4
 8011fbc:	4608      	mov	r0, r1
 8011fbe:	9101      	str	r1, [sp, #4]
 8011fc0:	f7fd ff98 	bl	800fef4 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 8011fc4:	4b0e      	ldr	r3, [pc, #56]	; (8012000 <vTaskPriorityDisinheritAfterTimeout+0xa4>)
 8011fc6:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 8011fc8:	681a      	ldr	r2, [r3, #0]
 8011fca:	9901      	ldr	r1, [sp, #4]
 8011fcc:	4290      	cmp	r0, r2
 8011fce:	bf88      	it	hi
 8011fd0:	6018      	strhi	r0, [r3, #0]
 8011fd2:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8011fd6:	eb05 0080 	add.w	r0, r5, r0, lsl #2
	}
 8011fda:	b003      	add	sp, #12
 8011fdc:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 8011fe0:	f7fd bf60 	b.w	800fea4 <vListInsertEnd>
 8011fe4:	4770      	bx	lr
 8011fe6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011fea:	f383 8811 	msr	BASEPRI, r3
 8011fee:	f3bf 8f6f 	isb	sy
 8011ff2:	f3bf 8f4f 	dsb	sy
					configASSERT( pxTCB != pxCurrentTCB );
 8011ff6:	e7fe      	b.n	8011ff6 <vTaskPriorityDisinheritAfterTimeout+0x9a>
 8011ff8:	20013208 	.word	0x20013208
 8011ffc:	20013214 	.word	0x20013214
 8012000:	20013684 	.word	0x20013684

08012004 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 8012004:	4b04      	ldr	r3, [pc, #16]	; (8012018 <pvTaskIncrementMutexHeldCount+0x14>)
 8012006:	681a      	ldr	r2, [r3, #0]
 8012008:	b11a      	cbz	r2, 8012012 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 801200a:	6819      	ldr	r1, [r3, #0]
 801200c:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 801200e:	3201      	adds	r2, #1
 8012010:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 8012012:	6818      	ldr	r0, [r3, #0]
	}
 8012014:	4770      	bx	lr
 8012016:	bf00      	nop
 8012018:	20013208 	.word	0x20013208

0801201c <prvSwitchTimerLists>:
	}
}
/*-----------------------------------------------------------*/

static void prvSwitchTimerLists( void )
{
 801201c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012020:	4e22      	ldr	r6, [pc, #136]	; (80120ac <prvSwitchTimerLists+0x90>)
	if( xTimerQueue != NULL )
 8012022:	f8df 9090 	ldr.w	r9, [pc, #144]	; 80120b4 <prvSwitchTimerLists+0x98>
{
 8012026:	b085      	sub	sp, #20
		xMessage.xMessageID = xCommandID;
 8012028:	f04f 0800 	mov.w	r8, #0

	/* The tick count has overflowed.  The timer lists must be switched.
	If there are any timers still referenced from the current timer list
	then they must have expired and should be processed before the lists
	are switched. */
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 801202c:	e00d      	b.n	801204a <prvSwitchTimerLists+0x2e>
	{
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 801202e:	68db      	ldr	r3, [r3, #12]

		/* Remove the timer from the list. */
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8012030:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8012032:	681f      	ldr	r7, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8012034:	1d25      	adds	r5, r4, #4
 8012036:	4628      	mov	r0, r5
 8012038:	f7fd ff5c 	bl	800fef4 <uxListRemove>
		traceTIMER_EXPIRED( pxTimer );

		/* Execute its callback, then send a command to restart the timer if
		it is an auto-reload timer.  It cannot be restarted here as the lists
		have not yet been switched. */
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 801203c:	6a23      	ldr	r3, [r4, #32]
 801203e:	4620      	mov	r0, r4
 8012040:	4798      	blx	r3

		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8012042:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8012046:	075b      	lsls	r3, r3, #29
 8012048:	d40a      	bmi.n	8012060 <prvSwitchTimerLists+0x44>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 801204a:	6833      	ldr	r3, [r6, #0]
 801204c:	681a      	ldr	r2, [r3, #0]
 801204e:	2a00      	cmp	r2, #0
 8012050:	d1ed      	bne.n	801202e <prvSwitchTimerLists+0x12>
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxTemp = pxCurrentTimerList;
	pxCurrentTimerList = pxOverflowTimerList;
 8012052:	4a17      	ldr	r2, [pc, #92]	; (80120b0 <prvSwitchTimerLists+0x94>)
 8012054:	6811      	ldr	r1, [r2, #0]
 8012056:	6031      	str	r1, [r6, #0]
	pxOverflowTimerList = pxTemp;
 8012058:	6013      	str	r3, [r2, #0]
}
 801205a:	b005      	add	sp, #20
 801205c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 8012060:	69a3      	ldr	r3, [r4, #24]
 8012062:	443b      	add	r3, r7
			if( xReloadTime > xNextExpireTime )
 8012064:	429f      	cmp	r7, r3
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8012066:	4629      	mov	r1, r5
			if( xReloadTime > xNextExpireTime )
 8012068:	d205      	bcs.n	8012076 <prvSwitchTimerLists+0x5a>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 801206a:	6830      	ldr	r0, [r6, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 801206c:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 801206e:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8012070:	f7fd ff28 	bl	800fec4 <vListInsert>
 8012074:	e7e9      	b.n	801204a <prvSwitchTimerLists+0x2e>
	if( xTimerQueue != NULL )
 8012076:	f8d9 3000 	ldr.w	r3, [r9]
 801207a:	b16b      	cbz	r3, 8012098 <prvSwitchTimerLists+0x7c>
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 801207c:	e9cd 8700 	strd	r8, r7, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 8012080:	9402      	str	r4, [sp, #8]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8012082:	f7ff fecf 	bl	8011e24 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8012086:	2300      	movs	r3, #0
 8012088:	f8d9 0000 	ldr.w	r0, [r9]
 801208c:	461a      	mov	r2, r3
 801208e:	4669      	mov	r1, sp
 8012090:	f7fe fa9c 	bl	80105cc <xQueueGenericSend>
				configASSERT( xResult );
 8012094:	2800      	cmp	r0, #0
 8012096:	d1d8      	bne.n	801204a <prvSwitchTimerLists+0x2e>
 8012098:	f04f 0350 	mov.w	r3, #80	; 0x50
 801209c:	f383 8811 	msr	BASEPRI, r3
 80120a0:	f3bf 8f6f 	isb	sy
 80120a4:	f3bf 8f4f 	dsb	sy
 80120a8:	e7fe      	b.n	80120a8 <prvSwitchTimerLists+0x8c>
 80120aa:	bf00      	nop
 80120ac:	20013704 	.word	0x20013704
 80120b0:	20013708 	.word	0x20013708
 80120b4:	20013828 	.word	0x20013828

080120b8 <prvTimerTask>:
{
 80120b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80120bc:	4e9b      	ldr	r6, [pc, #620]	; (801232c <prvTimerTask+0x274>)
 80120be:	4d9c      	ldr	r5, [pc, #624]	; (8012330 <prvTimerTask+0x278>)
 80120c0:	4c9c      	ldr	r4, [pc, #624]	; (8012334 <prvTimerTask+0x27c>)
 80120c2:	b08b      	sub	sp, #44	; 0x2c
					portYIELD_WITHIN_API();
 80120c4:	f04f 29e0 	mov.w	r9, #3758153728	; 0xe000e000
 80120c8:	f04f 5880 	mov.w	r8, #268435456	; 0x10000000
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 80120cc:	6833      	ldr	r3, [r6, #0]
 80120ce:	681f      	ldr	r7, [r3, #0]
 80120d0:	2f00      	cmp	r7, #0
 80120d2:	f000 80a8 	beq.w	8012226 <prvTimerTask+0x16e>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 80120d6:	68db      	ldr	r3, [r3, #12]
 80120d8:	681f      	ldr	r7, [r3, #0]
	vTaskSuspendAll();
 80120da:	f7ff fcf9 	bl	8011ad0 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 80120de:	f7ff fd0f 	bl	8011b00 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 80120e2:	682a      	ldr	r2, [r5, #0]
 80120e4:	4290      	cmp	r0, r2
	xTimeNow = xTaskGetTickCount();
 80120e6:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 80120e8:	f0c0 80ae 	bcc.w	8012248 <prvTimerTask+0x190>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 80120ec:	4287      	cmp	r7, r0
	xLastTime = xTimeNow;
 80120ee:	6028      	str	r0, [r5, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 80120f0:	f240 80b4 	bls.w	801225c <prvTimerTask+0x1a4>
 80120f4:	2200      	movs	r2, #0
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 80120f6:	6820      	ldr	r0, [r4, #0]
 80120f8:	eba7 010a 	sub.w	r1, r7, sl
 80120fc:	f7ff f89a 	bl	8011234 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 8012100:	f7ff fcee 	bl	8011ae0 <xTaskResumeAll>
 8012104:	b928      	cbnz	r0, 8012112 <prvTimerTask+0x5a>
					portYIELD_WITHIN_API();
 8012106:	f8c9 8d04 	str.w	r8, [r9, #3332]	; 0xd04
 801210a:	f3bf 8f4f 	dsb	sy
 801210e:	f3bf 8f6f 	isb	sy
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 8012112:	6820      	ldr	r0, [r4, #0]
 8012114:	2200      	movs	r2, #0
 8012116:	a902      	add	r1, sp, #8
 8012118:	f7fe fc94 	bl	8010a44 <xQueueReceive>
 801211c:	2800      	cmp	r0, #0
 801211e:	d0d5      	beq.n	80120cc <prvTimerTask+0x14>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 8012120:	9b02      	ldr	r3, [sp, #8]
 8012122:	2b00      	cmp	r3, #0
 8012124:	db76      	blt.n	8012214 <prvTimerTask+0x15c>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 8012126:	9f04      	ldr	r7, [sp, #16]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 8012128:	697b      	ldr	r3, [r7, #20]
 801212a:	b113      	cbz	r3, 8012132 <prvTimerTask+0x7a>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 801212c:	1d38      	adds	r0, r7, #4
 801212e:	f7fd fee1 	bl	800fef4 <uxListRemove>
	xTimeNow = xTaskGetTickCount();
 8012132:	f7ff fce5 	bl	8011b00 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 8012136:	682b      	ldr	r3, [r5, #0]
 8012138:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 801213a:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 801213c:	f0c0 808b 	bcc.w	8012256 <prvTimerTask+0x19e>
			switch( xMessage.xMessageID )
 8012140:	9b02      	ldr	r3, [sp, #8]
	xLastTime = xTimeNow;
 8012142:	f8c5 a000 	str.w	sl, [r5]
			switch( xMessage.xMessageID )
 8012146:	2b09      	cmp	r3, #9
 8012148:	d8e3      	bhi.n	8012112 <prvTimerTask+0x5a>
 801214a:	e8df f003 	tbb	[pc, r3]
 801214e:	0505      	.short	0x0505
 8012150:	5a3d5305 	.word	0x5a3d5305
 8012154:	3d530505 	.word	0x3d530505
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8012158:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 801215c:	69ba      	ldr	r2, [r7, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 801215e:	613f      	str	r7, [r7, #16]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8012160:	f043 0301 	orr.w	r3, r3, #1
 8012164:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8012168:	9b03      	ldr	r3, [sp, #12]
 801216a:	1899      	adds	r1, r3, r2
 801216c:	bf2c      	ite	cs
 801216e:	2001      	movcs	r0, #1
 8012170:	2000      	movcc	r0, #0
	if( xNextExpiryTime <= xTimeNow )
 8012172:	4551      	cmp	r1, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 8012174:	6079      	str	r1, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
 8012176:	f200 808c 	bhi.w	8012292 <prvTimerTask+0x1da>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 801217a:	ebaa 0303 	sub.w	r3, sl, r3
 801217e:	429a      	cmp	r2, r3
 8012180:	d832      	bhi.n	80121e8 <prvTimerTask+0x130>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8012182:	6a3b      	ldr	r3, [r7, #32]
 8012184:	4638      	mov	r0, r7
 8012186:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8012188:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 801218c:	075b      	lsls	r3, r3, #29
 801218e:	d5c0      	bpl.n	8012112 <prvTimerTask+0x5a>
	if( xTimerQueue != NULL )
 8012190:	6822      	ldr	r2, [r4, #0]
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 8012192:	9903      	ldr	r1, [sp, #12]
 8012194:	69bb      	ldr	r3, [r7, #24]
	if( xTimerQueue != NULL )
 8012196:	b172      	cbz	r2, 80121b6 <prvTimerTask+0xfe>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 8012198:	440b      	add	r3, r1
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 801219a:	e9cd 3707 	strd	r3, r7, [sp, #28]
		xMessage.xMessageID = xCommandID;
 801219e:	2300      	movs	r3, #0
 80121a0:	9306      	str	r3, [sp, #24]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 80121a2:	f7ff fe3f 	bl	8011e24 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 80121a6:	2300      	movs	r3, #0
 80121a8:	6820      	ldr	r0, [r4, #0]
 80121aa:	461a      	mov	r2, r3
 80121ac:	a906      	add	r1, sp, #24
 80121ae:	f7fe fa0d 	bl	80105cc <xQueueGenericSend>
							configASSERT( xResult );
 80121b2:	2800      	cmp	r0, #0
 80121b4:	d1ad      	bne.n	8012112 <prvTimerTask+0x5a>
 80121b6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80121ba:	f383 8811 	msr	BASEPRI, r3
 80121be:	f3bf 8f6f 	isb	sy
 80121c2:	f3bf 8f4f 	dsb	sy
 80121c6:	e7fe      	b.n	80121c6 <prvTimerTask+0x10e>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 80121c8:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 80121cc:	f043 0301 	orr.w	r3, r3, #1
 80121d0:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 80121d4:	9b03      	ldr	r3, [sp, #12]
 80121d6:	61bb      	str	r3, [r7, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 80121d8:	2b00      	cmp	r3, #0
 80121da:	f000 809d 	beq.w	8012318 <prvTimerTask+0x260>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 80121de:	4453      	add	r3, sl
	if( xNextExpiryTime <= xTimeNow )
 80121e0:	4553      	cmp	r3, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 80121e2:	607b      	str	r3, [r7, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 80121e4:	613f      	str	r7, [r7, #16]
	if( xNextExpiryTime <= xTimeNow )
 80121e6:	d85e      	bhi.n	80122a6 <prvTimerTask+0x1ee>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 80121e8:	4b53      	ldr	r3, [pc, #332]	; (8012338 <prvTimerTask+0x280>)
 80121ea:	1d39      	adds	r1, r7, #4
 80121ec:	6818      	ldr	r0, [r3, #0]
 80121ee:	f7fd fe69 	bl	800fec4 <vListInsert>
	return xProcessTimerNow;
 80121f2:	e78e      	b.n	8012112 <prvTimerTask+0x5a>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 80121f4:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 80121f8:	f023 0301 	bic.w	r3, r3, #1
 80121fc:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					break;
 8012200:	e787      	b.n	8012112 <prvTimerTask+0x5a>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 8012202:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 8012206:	079a      	lsls	r2, r3, #30
 8012208:	d552      	bpl.n	80122b0 <prvTimerTask+0x1f8>
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 801220a:	f023 0301 	bic.w	r3, r3, #1
 801220e:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
 8012212:	e77e      	b.n	8012112 <prvTimerTask+0x5a>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 8012214:	9b03      	ldr	r3, [sp, #12]
 8012216:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 801221a:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 801221c:	9b02      	ldr	r3, [sp, #8]
 801221e:	2b00      	cmp	r3, #0
 8012220:	f6ff af77 	blt.w	8012112 <prvTimerTask+0x5a>
 8012224:	e77f      	b.n	8012126 <prvTimerTask+0x6e>
	vTaskSuspendAll();
 8012226:	f7ff fc53 	bl	8011ad0 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 801222a:	f7ff fc69 	bl	8011b00 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 801222e:	682a      	ldr	r2, [r5, #0]
 8012230:	4282      	cmp	r2, r0
	xTimeNow = xTaskGetTickCount();
 8012232:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 8012234:	d808      	bhi.n	8012248 <prvTimerTask+0x190>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 8012236:	4b40      	ldr	r3, [pc, #256]	; (8012338 <prvTimerTask+0x280>)
	xLastTime = xTimeNow;
 8012238:	f8c5 a000 	str.w	sl, [r5]
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 801223c:	681a      	ldr	r2, [r3, #0]
 801223e:	6812      	ldr	r2, [r2, #0]
 8012240:	fab2 f282 	clz	r2, r2
 8012244:	0952      	lsrs	r2, r2, #5
 8012246:	e756      	b.n	80120f6 <prvTimerTask+0x3e>
		prvSwitchTimerLists();
 8012248:	f7ff fee8 	bl	801201c <prvSwitchTimerLists>
	xLastTime = xTimeNow;
 801224c:	f8c5 a000 	str.w	sl, [r5]
			( void ) xTaskResumeAll();
 8012250:	f7ff fc46 	bl	8011ae0 <xTaskResumeAll>
 8012254:	e75d      	b.n	8012112 <prvTimerTask+0x5a>
		prvSwitchTimerLists();
 8012256:	f7ff fee1 	bl	801201c <prvSwitchTimerLists>
		*pxTimerListsWereSwitched = pdTRUE;
 801225a:	e771      	b.n	8012140 <prvTimerTask+0x88>
				( void ) xTaskResumeAll();
 801225c:	f7ff fc40 	bl	8011ae0 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8012260:	6832      	ldr	r2, [r6, #0]
 8012262:	68d2      	ldr	r2, [r2, #12]
 8012264:	f8d2 b00c 	ldr.w	fp, [r2, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8012268:	f10b 0104 	add.w	r1, fp, #4
 801226c:	4608      	mov	r0, r1
 801226e:	9101      	str	r1, [sp, #4]
 8012270:	f7fd fe40 	bl	800fef4 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8012274:	f89b 0028 	ldrb.w	r0, [fp, #40]	; 0x28
 8012278:	9901      	ldr	r1, [sp, #4]
 801227a:	f010 0f04 	tst.w	r0, #4
 801227e:	d11b      	bne.n	80122b8 <prvTimerTask+0x200>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8012280:	f020 0001 	bic.w	r0, r0, #1
 8012284:	f88b 0028 	strb.w	r0, [fp, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8012288:	f8db 3020 	ldr.w	r3, [fp, #32]
 801228c:	4658      	mov	r0, fp
 801228e:	4798      	blx	r3
}
 8012290:	e73f      	b.n	8012112 <prvTimerTask+0x5a>
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 8012292:	4553      	cmp	r3, sl
 8012294:	d902      	bls.n	801229c <prvTimerTask+0x1e4>
 8012296:	2800      	cmp	r0, #0
 8012298:	f43f af73 	beq.w	8012182 <prvTimerTask+0xca>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 801229c:	6830      	ldr	r0, [r6, #0]
 801229e:	1d39      	adds	r1, r7, #4
 80122a0:	f7fd fe10 	bl	800fec4 <vListInsert>
	return xProcessTimerNow;
 80122a4:	e735      	b.n	8012112 <prvTimerTask+0x5a>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80122a6:	6830      	ldr	r0, [r6, #0]
 80122a8:	1d39      	adds	r1, r7, #4
 80122aa:	f7fd fe0b 	bl	800fec4 <vListInsert>
 80122ae:	e730      	b.n	8012112 <prvTimerTask+0x5a>
							vPortFree( pxTimer );
 80122b0:	4638      	mov	r0, r7
 80122b2:	f7fd fd83 	bl	800fdbc <vPortFree>
 80122b6:	e72c      	b.n	8012112 <prvTimerTask+0x5a>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 80122b8:	f8db 2018 	ldr.w	r2, [fp, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 80122bc:	f8cb b010 	str.w	fp, [fp, #16]
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 80122c0:	18b8      	adds	r0, r7, r2
	if( xNextExpiryTime <= xTimeNow )
 80122c2:	4550      	cmp	r0, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 80122c4:	f8cb 0004 	str.w	r0, [fp, #4]
	if( xNextExpiryTime <= xTimeNow )
 80122c8:	d903      	bls.n	80122d2 <prvTimerTask+0x21a>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80122ca:	6830      	ldr	r0, [r6, #0]
 80122cc:	f7fd fdfa 	bl	800fec4 <vListInsert>
	return xProcessTimerNow;
 80122d0:	e7da      	b.n	8012288 <prvTimerTask+0x1d0>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80122d2:	ebaa 0307 	sub.w	r3, sl, r7
 80122d6:	429a      	cmp	r2, r3
 80122d8:	d819      	bhi.n	801230e <prvTimerTask+0x256>
	if( xTimerQueue != NULL )
 80122da:	6823      	ldr	r3, [r4, #0]
 80122dc:	b173      	cbz	r3, 80122fc <prvTimerTask+0x244>
		xMessage.xMessageID = xCommandID;
 80122de:	2300      	movs	r3, #0
 80122e0:	9306      	str	r3, [sp, #24]
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 80122e2:	9707      	str	r7, [sp, #28]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 80122e4:	f8cd b020 	str.w	fp, [sp, #32]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 80122e8:	f7ff fd9c 	bl	8011e24 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 80122ec:	2300      	movs	r3, #0
 80122ee:	6820      	ldr	r0, [r4, #0]
 80122f0:	461a      	mov	r2, r3
 80122f2:	a906      	add	r1, sp, #24
 80122f4:	f7fe f96a 	bl	80105cc <xQueueGenericSend>
			configASSERT( xResult );
 80122f8:	2800      	cmp	r0, #0
 80122fa:	d1c5      	bne.n	8012288 <prvTimerTask+0x1d0>
 80122fc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8012300:	f383 8811 	msr	BASEPRI, r3
 8012304:	f3bf 8f6f 	isb	sy
 8012308:	f3bf 8f4f 	dsb	sy
 801230c:	e7fe      	b.n	801230c <prvTimerTask+0x254>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 801230e:	4b0a      	ldr	r3, [pc, #40]	; (8012338 <prvTimerTask+0x280>)
 8012310:	6818      	ldr	r0, [r3, #0]
 8012312:	f7fd fdd7 	bl	800fec4 <vListInsert>
	return xProcessTimerNow;
 8012316:	e7b7      	b.n	8012288 <prvTimerTask+0x1d0>
 8012318:	f04f 0350 	mov.w	r3, #80	; 0x50
 801231c:	f383 8811 	msr	BASEPRI, r3
 8012320:	f3bf 8f6f 	isb	sy
 8012324:	f3bf 8f4f 	dsb	sy
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 8012328:	e7fe      	b.n	8012328 <prvTimerTask+0x270>
 801232a:	bf00      	nop
 801232c:	20013704 	.word	0x20013704
 8012330:	200137d4 	.word	0x200137d4
 8012334:	20013828 	.word	0x20013828
 8012338:	20013708 	.word	0x20013708

0801233c <xTimerCreateTimerTask>:
{
 801233c:	b5f0      	push	{r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 801233e:	4c23      	ldr	r4, [pc, #140]	; (80123cc <xTimerCreateTimerTask+0x90>)
{
 8012340:	b089      	sub	sp, #36	; 0x24
	taskENTER_CRITICAL();
 8012342:	f7fd fe4f 	bl	800ffe4 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 8012346:	6825      	ldr	r5, [r4, #0]
 8012348:	b335      	cbz	r5, 8012398 <xTimerCreateTimerTask+0x5c>
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
 801234a:	f7fd fe6d 	bl	8010028 <vPortExitCritical>
	if( xTimerQueue != NULL )
 801234e:	6823      	ldr	r3, [r4, #0]
 8012350:	b1cb      	cbz	r3, 8012386 <xTimerCreateTimerTask+0x4a>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 8012352:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 8012354:	aa07      	add	r2, sp, #28
 8012356:	a906      	add	r1, sp, #24
 8012358:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 801235a:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 801235e:	f7fd fc61 	bl	800fc24 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 8012362:	e9dd 0105 	ldrd	r0, r1, [sp, #20]
 8012366:	2302      	movs	r3, #2
 8012368:	e9cd 1001 	strd	r1, r0, [sp, #4]
 801236c:	9300      	str	r3, [sp, #0]
 801236e:	9a07      	ldr	r2, [sp, #28]
 8012370:	4917      	ldr	r1, [pc, #92]	; (80123d0 <xTimerCreateTimerTask+0x94>)
 8012372:	4818      	ldr	r0, [pc, #96]	; (80123d4 <xTimerCreateTimerTask+0x98>)
 8012374:	4623      	mov	r3, r4
 8012376:	f7ff fa6d 	bl	8011854 <xTaskCreateStatic>
 801237a:	4b17      	ldr	r3, [pc, #92]	; (80123d8 <xTimerCreateTimerTask+0x9c>)
 801237c:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 801237e:	b110      	cbz	r0, 8012386 <xTimerCreateTimerTask+0x4a>
}
 8012380:	2001      	movs	r0, #1
 8012382:	b009      	add	sp, #36	; 0x24
 8012384:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012386:	f04f 0350 	mov.w	r3, #80	; 0x50
 801238a:	f383 8811 	msr	BASEPRI, r3
 801238e:	f3bf 8f6f 	isb	sy
 8012392:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 8012396:	e7fe      	b.n	8012396 <xTimerCreateTimerTask+0x5a>
			vListInitialise( &xActiveTimerList1 );
 8012398:	4f10      	ldr	r7, [pc, #64]	; (80123dc <xTimerCreateTimerTask+0xa0>)
			vListInitialise( &xActiveTimerList2 );
 801239a:	4e11      	ldr	r6, [pc, #68]	; (80123e0 <xTimerCreateTimerTask+0xa4>)
			vListInitialise( &xActiveTimerList1 );
 801239c:	4638      	mov	r0, r7
 801239e:	f7fd fd71 	bl	800fe84 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 80123a2:	4630      	mov	r0, r6
 80123a4:	f7fd fd6e 	bl	800fe84 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 80123a8:	4a0e      	ldr	r2, [pc, #56]	; (80123e4 <xTimerCreateTimerTask+0xa8>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 80123aa:	9500      	str	r5, [sp, #0]
			pxCurrentTimerList = &xActiveTimerList1;
 80123ac:	6017      	str	r7, [r2, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 80123ae:	4a0e      	ldr	r2, [pc, #56]	; (80123e8 <xTimerCreateTimerTask+0xac>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 80123b0:	4b0e      	ldr	r3, [pc, #56]	; (80123ec <xTimerCreateTimerTask+0xb0>)
			pxOverflowTimerList = &xActiveTimerList2;
 80123b2:	6016      	str	r6, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 80123b4:	2110      	movs	r1, #16
 80123b6:	4a0e      	ldr	r2, [pc, #56]	; (80123f0 <xTimerCreateTimerTask+0xb4>)
 80123b8:	200a      	movs	r0, #10
 80123ba:	f7fd ffb1 	bl	8010320 <xQueueGenericCreateStatic>
 80123be:	6020      	str	r0, [r4, #0]
				if( xTimerQueue != NULL )
 80123c0:	2800      	cmp	r0, #0
 80123c2:	d0c2      	beq.n	801234a <xTimerCreateTimerTask+0xe>
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 80123c4:	490b      	ldr	r1, [pc, #44]	; (80123f4 <xTimerCreateTimerTask+0xb8>)
 80123c6:	f7fe ff0d 	bl	80111e4 <vQueueAddToRegistry>
 80123ca:	e7be      	b.n	801234a <xTimerCreateTimerTask+0xe>
 80123cc:	20013828 	.word	0x20013828
 80123d0:	08031458 	.word	0x08031458
 80123d4:	080120b9 	.word	0x080120b9
 80123d8:	2001382c 	.word	0x2001382c
 80123dc:	200137ac 	.word	0x200137ac
 80123e0:	200137c0 	.word	0x200137c0
 80123e4:	20013704 	.word	0x20013704
 80123e8:	20013708 	.word	0x20013708
 80123ec:	200137d8 	.word	0x200137d8
 80123f0:	2001370c 	.word	0x2001370c
 80123f4:	08031450 	.word	0x08031450

080123f8 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 80123f8:	8880      	ldrh	r0, [r0, #4]
 80123fa:	4770      	bx	lr

080123fc <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 80123fc:	b570      	push	{r4, r5, r6, lr}
 80123fe:	6803      	ldr	r3, [r0, #0]
 8012400:	4605      	mov	r5, r0
 8012402:	460c      	mov	r4, r1
 8012404:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012406:	2100      	movs	r1, #0
 8012408:	4798      	blx	r3
 801240a:	682b      	ldr	r3, [r5, #0]
 801240c:	4606      	mov	r6, r0
 801240e:	6a1b      	ldr	r3, [r3, #32]
 8012410:	4628      	mov	r0, r5
 8012412:	4798      	blx	r3
 8012414:	1ba4      	subs	r4, r4, r6
 8012416:	b2a4      	uxth	r4, r4
 8012418:	fbb4 f0f0 	udiv	r0, r4, r0
 801241c:	bd70      	pop	{r4, r5, r6, pc}

0801241e <_ZN8touchgfx17AbstractPartition5clearEv>:
 801241e:	2300      	movs	r3, #0
 8012420:	8083      	strh	r3, [r0, #4]
 8012422:	4770      	bx	lr

08012424 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 8012424:	b510      	push	{r4, lr}
 8012426:	6803      	ldr	r3, [r0, #0]
 8012428:	8881      	ldrh	r1, [r0, #4]
 801242a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801242c:	4604      	mov	r4, r0
 801242e:	4798      	blx	r3
 8012430:	88a3      	ldrh	r3, [r4, #4]
 8012432:	3301      	adds	r3, #1
 8012434:	80a3      	strh	r3, [r4, #4]
 8012436:	bd10      	pop	{r4, pc}

08012438 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 8012438:	6803      	ldr	r3, [r0, #0]
 801243a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801243c:	4718      	bx	r3

0801243e <_ZN8touchgfx17AbstractPartitionD1Ev>:
 801243e:	4770      	bx	lr

08012440 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 8012440:	4a02      	ldr	r2, [pc, #8]	; (801244c <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 8012442:	6002      	str	r2, [r0, #0]
 8012444:	2200      	movs	r2, #0
 8012446:	8082      	strh	r2, [r0, #4]
 8012448:	4770      	bx	lr
 801244a:	bf00      	nop
 801244c:	08031468 	.word	0x08031468

08012450 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv>:
 8012450:	b510      	push	{r4, lr}
 8012452:	6803      	ldr	r3, [r0, #0]
 8012454:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8012458:	4604      	mov	r4, r0
 801245a:	4798      	blx	r3
 801245c:	b110      	cbz	r0, 8012464 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv+0x14>
 801245e:	4620      	mov	r0, r4
 8012460:	f7f0 ff2a 	bl	80032b8 <_ZNK8touchgfx8Drawable17invalidateContentEv>
 8012464:	bd10      	pop	{r4, pc}

08012466 <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorXEv>:
 8012466:	f9b0 005c 	ldrsh.w	r0, [r0, #92]	; 0x5c
 801246a:	4770      	bx	lr

0801246c <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorYEv>:
 801246c:	f9b0 005e 	ldrsh.w	r0, [r0, #94]	; 0x5e
 8012470:	4770      	bx	lr

08012472 <_ZNK8touchgfx25AbstractProgressIndicator25getProgressIndicatorWidthEv>:
 8012472:	f9b0 0060 	ldrsh.w	r0, [r0, #96]	; 0x60
 8012476:	4770      	bx	lr

08012478 <_ZNK8touchgfx25AbstractProgressIndicator26getProgressIndicatorHeightEv>:
 8012478:	f9b0 0062 	ldrsh.w	r0, [r0, #98]	; 0x62
 801247c:	4770      	bx	lr

0801247e <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>:
 801247e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8012480:	e9c0 1221 	strd	r1, r2, [r0, #132]	; 0x84
 8012484:	461e      	mov	r6, r3
 8012486:	6803      	ldr	r3, [r0, #0]
 8012488:	460f      	mov	r7, r1
 801248a:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 801248e:	f8d0 108c 	ldr.w	r1, [r0, #140]	; 0x8c
 8012492:	4604      	mov	r4, r0
 8012494:	4615      	mov	r5, r2
 8012496:	4798      	blx	r3
 8012498:	b93e      	cbnz	r6, 80124aa <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x2c>
 801249a:	1bed      	subs	r5, r5, r7
 801249c:	f8a4 5090 	strh.w	r5, [r4, #144]	; 0x90
 80124a0:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 80124a4:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 80124a8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80124aa:	f8a4 6090 	strh.w	r6, [r4, #144]	; 0x90
 80124ae:	e7f7      	b.n	80124a0 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x22>

080124b0 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_RtS2_>:
 80124b0:	b510      	push	{r4, lr}
 80124b2:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 80124b6:	600c      	str	r4, [r1, #0]
 80124b8:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 80124bc:	6011      	str	r1, [r2, #0]
 80124be:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 80124c2:	801a      	strh	r2, [r3, #0]
 80124c4:	9b02      	ldr	r3, [sp, #8]
 80124c6:	f8b0 2092 	ldrh.w	r2, [r0, #146]	; 0x92
 80124ca:	801a      	strh	r2, [r3, #0]
 80124cc:	bd10      	pop	{r4, pc}

080124ce <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_Rt>:
 80124ce:	b510      	push	{r4, lr}
 80124d0:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 80124d4:	600c      	str	r4, [r1, #0]
 80124d6:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 80124da:	6011      	str	r1, [r2, #0]
 80124dc:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 80124e0:	801a      	strh	r2, [r3, #0]
 80124e2:	bd10      	pop	{r4, pc}

080124e4 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_>:
 80124e4:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 80124e8:	600b      	str	r3, [r1, #0]
 80124ea:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 80124ee:	6013      	str	r3, [r2, #0]
 80124f0:	4770      	bx	lr

080124f2 <_ZN8touchgfx25AbstractProgressIndicator17setEasingEquationEPFstsstE>:
 80124f2:	f8c0 1094 	str.w	r1, [r0, #148]	; 0x94
 80124f6:	4770      	bx	lr

080124f8 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>:
 80124f8:	f8d0 008c 	ldr.w	r0, [r0, #140]	; 0x8c
 80124fc:	4770      	bx	lr

080124fe <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>:
 80124fe:	f880 1054 	strb.w	r1, [r0, #84]	; 0x54
 8012502:	4770      	bx	lr

08012504 <_ZNK8touchgfx25AbstractProgressIndicator8getAlphaEv>:
 8012504:	f890 0054 	ldrb.w	r0, [r0, #84]	; 0x54
 8012508:	4770      	bx	lr

0801250a <_ZN8touchgfx25AbstractProgressIndicatorD1Ev>:
 801250a:	4770      	bx	lr

0801250c <_ZN8touchgfx25AbstractProgressIndicatorD0Ev>:
 801250c:	b510      	push	{r4, lr}
 801250e:	21b4      	movs	r1, #180	; 0xb4
 8012510:	4604      	mov	r4, r0
 8012512:	f01a fb36 	bl	802cb82 <_ZdlPvj>
 8012516:	4620      	mov	r0, r4
 8012518:	bd10      	pop	{r4, pc}

0801251a <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit>:
 801251a:	b570      	push	{r4, r5, r6, lr}
 801251c:	f8d0 5084 	ldr.w	r5, [r0, #132]	; 0x84
 8012520:	428d      	cmp	r5, r1
 8012522:	bfb8      	it	lt
 8012524:	460d      	movlt	r5, r1
 8012526:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 801252a:	428d      	cmp	r5, r1
 801252c:	4604      	mov	r4, r0
 801252e:	bfa8      	it	ge
 8012530:	460d      	movge	r5, r1
 8012532:	4616      	mov	r6, r2
 8012534:	b99a      	cbnz	r2, 801255e <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x44>
 8012536:	6803      	ldr	r3, [r0, #0]
 8012538:	4629      	mov	r1, r5
 801253a:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 801253e:	4798      	blx	r3
 8012540:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 8012544:	b368      	cbz	r0, 80125a2 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 8012546:	6803      	ldr	r3, [r0, #0]
 8012548:	68db      	ldr	r3, [r3, #12]
 801254a:	4798      	blx	r3
 801254c:	b348      	cbz	r0, 80125a2 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 801254e:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 8012552:	6803      	ldr	r3, [r0, #0]
 8012554:	4621      	mov	r1, r4
 8012556:	689b      	ldr	r3, [r3, #8]
 8012558:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801255c:	4718      	bx	r3
 801255e:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 8012562:	2b00      	cmp	r3, #0
 8012564:	dd08      	ble.n	8012578 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x5e>
 8012566:	f006 fa23 	bl	80189b0 <_ZN8touchgfx11Application11getInstanceEv>
 801256a:	4621      	mov	r1, r4
 801256c:	3004      	adds	r0, #4
 801256e:	f006 fa6c 	bl	8018a4a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 8012572:	2300      	movs	r3, #0
 8012574:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 8012578:	6823      	ldr	r3, [r4, #0]
 801257a:	4620      	mov	r0, r4
 801257c:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8012580:	4798      	blx	r3
 8012582:	2300      	movs	r3, #0
 8012584:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 8012588:	e9c4 0527 	strd	r0, r5, [r4, #156]	; 0x9c
 801258c:	f8c4 60a4 	str.w	r6, [r4, #164]	; 0xa4
 8012590:	f006 fa0e 	bl	80189b0 <_ZN8touchgfx11Application11getInstanceEv>
 8012594:	4621      	mov	r1, r4
 8012596:	3004      	adds	r0, #4
 8012598:	f006 fb00 	bl	8018b9c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 801259c:	2301      	movs	r3, #1
 801259e:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 80125a2:	bd70      	pop	{r4, r5, r6, pc}

080125a4 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>:
 80125a4:	b510      	push	{r4, lr}
 80125a6:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 80125aa:	4299      	cmp	r1, r3
 80125ac:	bfb8      	it	lt
 80125ae:	4619      	movlt	r1, r3
 80125b0:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 80125b4:	4299      	cmp	r1, r3
 80125b6:	bfa8      	it	ge
 80125b8:	4619      	movge	r1, r3
 80125ba:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
 80125be:	428b      	cmp	r3, r1
 80125c0:	4604      	mov	r4, r0
 80125c2:	d010      	beq.n	80125e6 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 80125c4:	f8c0 108c 	str.w	r1, [r0, #140]	; 0x8c
 80125c8:	f8d0 00ac 	ldr.w	r0, [r0, #172]	; 0xac
 80125cc:	b158      	cbz	r0, 80125e6 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 80125ce:	6803      	ldr	r3, [r0, #0]
 80125d0:	68db      	ldr	r3, [r3, #12]
 80125d2:	4798      	blx	r3
 80125d4:	b138      	cbz	r0, 80125e6 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 80125d6:	f8d4 00ac 	ldr.w	r0, [r4, #172]	; 0xac
 80125da:	6803      	ldr	r3, [r0, #0]
 80125dc:	4621      	mov	r1, r4
 80125de:	689b      	ldr	r3, [r3, #8]
 80125e0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80125e4:	4718      	bx	r3
 80125e6:	bd10      	pop	{r4, pc}

080125e8 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>:
 80125e8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80125ea:	4604      	mov	r4, r0
 80125ec:	460d      	mov	r5, r1
 80125ee:	b1a9      	cbz	r1, 801261c <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt+0x34>
 80125f0:	f8b0 6092 	ldrh.w	r6, [r0, #146]	; 0x92
 80125f4:	f8b4 1090 	ldrh.w	r1, [r4, #144]	; 0x90
 80125f8:	f8d4 708c 	ldr.w	r7, [r4, #140]	; 0x8c
 80125fc:	e9d0 0221 	ldrd	r0, r2, [r0, #132]	; 0x84
 8012600:	ab01      	add	r3, sp, #4
 8012602:	1a12      	subs	r2, r2, r0
 8012604:	1b89      	subs	r1, r1, r6
 8012606:	1a38      	subs	r0, r7, r0
 8012608:	f007 fc88 	bl	8019f1c <_ZN8touchgfx6muldivElllRl>
 801260c:	4629      	mov	r1, r5
 801260e:	ab01      	add	r3, sp, #4
 8012610:	f8b4 2090 	ldrh.w	r2, [r4, #144]	; 0x90
 8012614:	4430      	add	r0, r6
 8012616:	f007 fc81 	bl	8019f1c <_ZN8touchgfx6muldivElllRl>
 801261a:	b285      	uxth	r5, r0
 801261c:	4628      	mov	r0, r5
 801261e:	b003      	add	sp, #12
 8012620:	bdf0      	pop	{r4, r5, r6, r7, pc}

08012622 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv>:
 8012622:	b570      	push	{r4, r5, r6, lr}
 8012624:	f890 3098 	ldrb.w	r3, [r0, #152]	; 0x98
 8012628:	4604      	mov	r4, r0
 801262a:	2b00      	cmp	r3, #0
 801262c:	d035      	beq.n	801269a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 801262e:	e9d4 3227 	ldrd	r3, r2, [r4, #156]	; 0x9c
 8012632:	f8d0 00a8 	ldr.w	r0, [r0, #168]	; 0xa8
 8012636:	f8d4 5094 	ldr.w	r5, [r4, #148]	; 0x94
 801263a:	3001      	adds	r0, #1
 801263c:	1ad2      	subs	r2, r2, r3
 801263e:	b212      	sxth	r2, r2
 8012640:	f8c4 00a8 	str.w	r0, [r4, #168]	; 0xa8
 8012644:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8012648:	2100      	movs	r1, #0
 801264a:	b280      	uxth	r0, r0
 801264c:	47a8      	blx	r5
 801264e:	f8d4 109c 	ldr.w	r1, [r4, #156]	; 0x9c
 8012652:	6823      	ldr	r3, [r4, #0]
 8012654:	4401      	add	r1, r0
 8012656:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 801265a:	4620      	mov	r0, r4
 801265c:	4798      	blx	r3
 801265e:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 8012662:	429a      	cmp	r2, r3
 8012664:	db19      	blt.n	801269a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 8012666:	2500      	movs	r5, #0
 8012668:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 801266c:	f006 f9a0 	bl	80189b0 <_ZN8touchgfx11Application11getInstanceEv>
 8012670:	4621      	mov	r1, r4
 8012672:	3004      	adds	r0, #4
 8012674:	f006 f9e9 	bl	8018a4a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 8012678:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 801267c:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 8012680:	b158      	cbz	r0, 801269a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 8012682:	6803      	ldr	r3, [r0, #0]
 8012684:	68db      	ldr	r3, [r3, #12]
 8012686:	4798      	blx	r3
 8012688:	b138      	cbz	r0, 801269a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 801268a:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 801268e:	6803      	ldr	r3, [r0, #0]
 8012690:	4621      	mov	r1, r4
 8012692:	689b      	ldr	r3, [r3, #8]
 8012694:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012698:	4718      	bx	r3
 801269a:	bd70      	pop	{r4, r5, r6, pc}

0801269c <_ZN8touchgfx8DrawableC1Ev>:
 801269c:	4a0a      	ldr	r2, [pc, #40]	; (80126c8 <_ZN8touchgfx8DrawableC1Ev+0x2c>)
 801269e:	6002      	str	r2, [r0, #0]
 80126a0:	2200      	movs	r2, #0
 80126a2:	8082      	strh	r2, [r0, #4]
 80126a4:	80c2      	strh	r2, [r0, #6]
 80126a6:	8102      	strh	r2, [r0, #8]
 80126a8:	8142      	strh	r2, [r0, #10]
 80126aa:	8182      	strh	r2, [r0, #12]
 80126ac:	81c2      	strh	r2, [r0, #14]
 80126ae:	8202      	strh	r2, [r0, #16]
 80126b0:	8242      	strh	r2, [r0, #18]
 80126b2:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80126b6:	61c2      	str	r2, [r0, #28]
 80126b8:	8402      	strh	r2, [r0, #32]
 80126ba:	8442      	strh	r2, [r0, #34]	; 0x22
 80126bc:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 80126c0:	2201      	movs	r2, #1
 80126c2:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 80126c6:	4770      	bx	lr
 80126c8:	08031de8 	.word	0x08031de8

080126cc <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 80126cc:	b570      	push	{r4, r5, r6, lr}
 80126ce:	6803      	ldr	r3, [r0, #0]
 80126d0:	4604      	mov	r4, r0
 80126d2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80126d4:	4615      	mov	r5, r2
 80126d6:	4798      	blx	r3
 80126d8:	6823      	ldr	r3, [r4, #0]
 80126da:	4629      	mov	r1, r5
 80126dc:	4620      	mov	r0, r4
 80126de:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80126e0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80126e4:	4718      	bx	r3

080126e6 <_ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss>:
 80126e6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80126ea:	4604      	mov	r4, r0
 80126ec:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
 80126f0:	f8a4 105c 	strh.w	r1, [r4, #92]	; 0x5c
 80126f4:	460e      	mov	r6, r1
 80126f6:	4615      	mov	r5, r2
 80126f8:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 80126fc:	4619      	mov	r1, r3
 80126fe:	463a      	mov	r2, r7
 8012700:	3058      	adds	r0, #88	; 0x58
 8012702:	4698      	mov	r8, r3
 8012704:	f7ff ffe2 	bl	80126cc <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8012708:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 801270c:	4446      	add	r6, r8
 801270e:	42b3      	cmp	r3, r6
 8012710:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8012714:	bfb8      	it	lt
 8012716:	8126      	strhlt	r6, [r4, #8]
 8012718:	443d      	add	r5, r7
 801271a:	42ab      	cmp	r3, r5
 801271c:	bfb8      	it	lt
 801271e:	8165      	strhlt	r5, [r4, #10]
 8012720:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08012724 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>:
 8012724:	b510      	push	{r4, lr}
 8012726:	4604      	mov	r4, r0
 8012728:	302c      	adds	r0, #44	; 0x2c
 801272a:	f003 fc42 	bl	8015fb2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 801272e:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	; 0x36
 8012732:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 8012736:	4620      	mov	r0, r4
 8012738:	f7ff ffc8 	bl	80126cc <_ZN8touchgfx8Drawable14setWidthHeightEss>
 801273c:	bd10      	pop	{r4, pc}
	...

08012740 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>:
 8012740:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8012742:	4604      	mov	r4, r0
 8012744:	4626      	mov	r6, r4
 8012746:	2500      	movs	r5, #0
 8012748:	f7ff ffa8 	bl	801269c <_ZN8touchgfx8DrawableC1Ev>
 801274c:	4b23      	ldr	r3, [pc, #140]	; (80127dc <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0x9c>)
 801274e:	62a5      	str	r5, [r4, #40]	; 0x28
 8012750:	f846 3b2c 	str.w	r3, [r6], #44
 8012754:	2226      	movs	r2, #38	; 0x26
 8012756:	4629      	mov	r1, r5
 8012758:	f64f 77ff 	movw	r7, #65535	; 0xffff
 801275c:	4630      	mov	r0, r6
 801275e:	f8ad 7004 	strh.w	r7, [sp, #4]
 8012762:	f01b fafa 	bl	802dd5a <memset>
 8012766:	4630      	mov	r0, r6
 8012768:	f7ff ff98 	bl	801269c <_ZN8touchgfx8DrawableC1Ev>
 801276c:	a902      	add	r1, sp, #8
 801276e:	4b1c      	ldr	r3, [pc, #112]	; (80127e0 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa0>)
 8012770:	62e3      	str	r3, [r4, #44]	; 0x2c
 8012772:	f831 3d04 	ldrh.w	r3, [r1, #-4]!
 8012776:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 801277a:	f884 7054 	strb.w	r7, [r4, #84]	; 0x54
 801277e:	4630      	mov	r0, r6
 8012780:	f104 0758 	add.w	r7, r4, #88	; 0x58
 8012784:	f003 fc15 	bl	8015fb2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8012788:	4638      	mov	r0, r7
 801278a:	f7ff ff87 	bl	801269c <_ZN8touchgfx8DrawableC1Ev>
 801278e:	4b15      	ldr	r3, [pc, #84]	; (80127e4 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa4>)
 8012790:	65a3      	str	r3, [r4, #88]	; 0x58
 8012792:	2364      	movs	r3, #100	; 0x64
 8012794:	e9c4 3522 	strd	r3, r5, [r4, #136]	; 0x88
 8012798:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
 801279c:	4b12      	ldr	r3, [pc, #72]	; (80127e8 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa8>)
 801279e:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 80127a2:	4629      	mov	r1, r5
 80127a4:	4630      	mov	r0, r6
 80127a6:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
 80127aa:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 80127ae:	e9c4 5527 	strd	r5, r5, [r4, #156]	; 0x9c
 80127b2:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 80127b6:	e9c4 552b 	strd	r5, r5, [r4, #172]	; 0xac
 80127ba:	f7f0 fcd9 	bl	8003170 <_ZN8touchgfx8Drawable4setXEs>
 80127be:	4629      	mov	r1, r5
 80127c0:	4630      	mov	r0, r6
 80127c2:	f7f0 fcd7 	bl	8003174 <_ZN8touchgfx8Drawable4setYEs>
 80127c6:	4631      	mov	r1, r6
 80127c8:	4620      	mov	r0, r4
 80127ca:	f000 f819 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80127ce:	4620      	mov	r0, r4
 80127d0:	4639      	mov	r1, r7
 80127d2:	f000 f815 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80127d6:	4620      	mov	r0, r4
 80127d8:	b003      	add	sp, #12
 80127da:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80127dc:	0803149c 	.word	0x0803149c
 80127e0:	08031ca4 	.word	0x08031ca4
 80127e4:	08031570 	.word	0x08031570
 80127e8:	0801a6f7 	.word	0x0801a6f7

080127ec <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 80127ec:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80127ee:	2000      	movs	r0, #0
 80127f0:	b12b      	cbz	r3, 80127fe <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 80127f2:	b920      	cbnz	r0, 80127fe <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 80127f4:	1a5a      	subs	r2, r3, r1
 80127f6:	4250      	negs	r0, r2
 80127f8:	4150      	adcs	r0, r2
 80127fa:	699b      	ldr	r3, [r3, #24]
 80127fc:	e7f8      	b.n	80127f0 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 80127fe:	4770      	bx	lr

08012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 8012800:	2300      	movs	r3, #0
 8012802:	6148      	str	r0, [r1, #20]
 8012804:	618b      	str	r3, [r1, #24]
 8012806:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8012808:	b913      	cbnz	r3, 8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 801280a:	6281      	str	r1, [r0, #40]	; 0x28
 801280c:	4770      	bx	lr
 801280e:	4613      	mov	r3, r2
 8012810:	699a      	ldr	r2, [r3, #24]
 8012812:	2a00      	cmp	r2, #0
 8012814:	d1fb      	bne.n	801280e <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 8012816:	6199      	str	r1, [r3, #24]
 8012818:	4770      	bx	lr

0801281a <_ZN8touchgfx9Container9removeAllEv>:
 801281a:	2200      	movs	r2, #0
 801281c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 801281e:	b123      	cbz	r3, 801282a <_ZN8touchgfx9Container9removeAllEv+0x10>
 8012820:	6999      	ldr	r1, [r3, #24]
 8012822:	6281      	str	r1, [r0, #40]	; 0x28
 8012824:	e9c3 2205 	strd	r2, r2, [r3, #20]
 8012828:	e7f8      	b.n	801281c <_ZN8touchgfx9Container9removeAllEv+0x2>
 801282a:	4770      	bx	lr

0801282c <_ZN8touchgfx9Container6unlinkEv>:
 801282c:	2300      	movs	r3, #0
 801282e:	6283      	str	r3, [r0, #40]	; 0x28
 8012830:	4770      	bx	lr

08012832 <_ZNK8touchgfx9Container12getSolidRectEv>:
 8012832:	2200      	movs	r2, #0
 8012834:	8002      	strh	r2, [r0, #0]
 8012836:	8042      	strh	r2, [r0, #2]
 8012838:	8082      	strh	r2, [r0, #4]
 801283a:	80c2      	strh	r2, [r0, #6]
 801283c:	4770      	bx	lr

0801283e <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 801283e:	b570      	push	{r4, r5, r6, lr}
 8012840:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8012842:	460d      	mov	r5, r1
 8012844:	4616      	mov	r6, r2
 8012846:	b13c      	cbz	r4, 8012858 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 8012848:	6823      	ldr	r3, [r4, #0]
 801284a:	4620      	mov	r0, r4
 801284c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 801284e:	4632      	mov	r2, r6
 8012850:	4629      	mov	r1, r5
 8012852:	4798      	blx	r3
 8012854:	69a4      	ldr	r4, [r4, #24]
 8012856:	e7f6      	b.n	8012846 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 8012858:	bd70      	pop	{r4, r5, r6, pc}

0801285a <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 801285a:	b538      	push	{r3, r4, r5, lr}
 801285c:	6a84      	ldr	r4, [r0, #40]	; 0x28
 801285e:	460d      	mov	r5, r1
 8012860:	b134      	cbz	r4, 8012870 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 8012862:	682b      	ldr	r3, [r5, #0]
 8012864:	4621      	mov	r1, r4
 8012866:	689b      	ldr	r3, [r3, #8]
 8012868:	4628      	mov	r0, r5
 801286a:	4798      	blx	r3
 801286c:	69a4      	ldr	r4, [r4, #24]
 801286e:	e7f7      	b.n	8012860 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 8012870:	bd38      	pop	{r3, r4, r5, pc}

08012872 <_ZN8touchgfx9ContainerD1Ev>:
 8012872:	4770      	bx	lr

08012874 <_ZN8touchgfx9ContainerD0Ev>:
 8012874:	b510      	push	{r4, lr}
 8012876:	212c      	movs	r1, #44	; 0x2c
 8012878:	4604      	mov	r4, r0
 801287a:	f01a f982 	bl	802cb82 <_ZdlPvj>
 801287e:	4620      	mov	r0, r4
 8012880:	bd10      	pop	{r4, pc}

08012882 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 8012882:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8012884:	b19b      	cbz	r3, 80128ae <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8012886:	428b      	cmp	r3, r1
 8012888:	d109      	bne.n	801289e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 801288a:	699a      	ldr	r2, [r3, #24]
 801288c:	2100      	movs	r1, #0
 801288e:	6159      	str	r1, [r3, #20]
 8012890:	6282      	str	r2, [r0, #40]	; 0x28
 8012892:	b902      	cbnz	r2, 8012896 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 8012894:	4770      	bx	lr
 8012896:	6199      	str	r1, [r3, #24]
 8012898:	4770      	bx	lr
 801289a:	4613      	mov	r3, r2
 801289c:	b13a      	cbz	r2, 80128ae <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 801289e:	699a      	ldr	r2, [r3, #24]
 80128a0:	428a      	cmp	r2, r1
 80128a2:	d1fa      	bne.n	801289a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 80128a4:	698a      	ldr	r2, [r1, #24]
 80128a6:	619a      	str	r2, [r3, #24]
 80128a8:	2300      	movs	r3, #0
 80128aa:	e9c1 3305 	strd	r3, r3, [r1, #20]
 80128ae:	4770      	bx	lr

080128b0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 80128b0:	b410      	push	{r4}
 80128b2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80128b4:	4604      	mov	r4, r0
 80128b6:	b92b      	cbnz	r3, 80128c4 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 80128b8:	6803      	ldr	r3, [r0, #0]
 80128ba:	f85d 4b04 	ldr.w	r4, [sp], #4
 80128be:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80128c0:	4611      	mov	r1, r2
 80128c2:	4718      	bx	r3
 80128c4:	b941      	cbnz	r1, 80128d8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 80128c6:	6193      	str	r3, [r2, #24]
 80128c8:	6282      	str	r2, [r0, #40]	; 0x28
 80128ca:	6154      	str	r4, [r2, #20]
 80128cc:	f85d 4b04 	ldr.w	r4, [sp], #4
 80128d0:	4770      	bx	lr
 80128d2:	4603      	mov	r3, r0
 80128d4:	2800      	cmp	r0, #0
 80128d6:	d0f9      	beq.n	80128cc <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 80128d8:	4299      	cmp	r1, r3
 80128da:	6998      	ldr	r0, [r3, #24]
 80128dc:	d1f9      	bne.n	80128d2 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 80128de:	6190      	str	r0, [r2, #24]
 80128e0:	618a      	str	r2, [r1, #24]
 80128e2:	e7f2      	b.n	80128ca <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

080128e4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 80128e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80128e8:	461f      	mov	r7, r3
 80128ea:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 80128ee:	460d      	mov	r5, r1
 80128f0:	4616      	mov	r6, r2
 80128f2:	b103      	cbz	r3, 80128f6 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 80128f4:	6038      	str	r0, [r7, #0]
 80128f6:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80128f8:	b314      	cbz	r4, 8012940 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 80128fa:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 80128fe:	b1eb      	cbz	r3, 801293c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8012900:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8012904:	428d      	cmp	r5, r1
 8012906:	db19      	blt.n	801293c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8012908:	8923      	ldrh	r3, [r4, #8]
 801290a:	b289      	uxth	r1, r1
 801290c:	440b      	add	r3, r1
 801290e:	b21b      	sxth	r3, r3
 8012910:	429d      	cmp	r5, r3
 8012912:	da13      	bge.n	801293c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8012914:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8012918:	4296      	cmp	r6, r2
 801291a:	db0f      	blt.n	801293c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 801291c:	8963      	ldrh	r3, [r4, #10]
 801291e:	b292      	uxth	r2, r2
 8012920:	4413      	add	r3, r2
 8012922:	b21b      	sxth	r3, r3
 8012924:	429e      	cmp	r6, r3
 8012926:	da09      	bge.n	801293c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8012928:	6823      	ldr	r3, [r4, #0]
 801292a:	1ab2      	subs	r2, r6, r2
 801292c:	1a69      	subs	r1, r5, r1
 801292e:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 8012932:	b212      	sxth	r2, r2
 8012934:	463b      	mov	r3, r7
 8012936:	b209      	sxth	r1, r1
 8012938:	4620      	mov	r0, r4
 801293a:	47c0      	blx	r8
 801293c:	69a4      	ldr	r4, [r4, #24]
 801293e:	e7db      	b.n	80128f8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 8012940:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08012944 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 8012944:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012948:	4c6e      	ldr	r4, [pc, #440]	; (8012b04 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 801294a:	b0a1      	sub	sp, #132	; 0x84
 801294c:	6824      	ldr	r4, [r4, #0]
 801294e:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 8012950:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 8012954:	9303      	str	r3, [sp, #12]
 8012956:	2400      	movs	r4, #0
 8012958:	802c      	strh	r4, [r5, #0]
 801295a:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 801295c:	802c      	strh	r4, [r5, #0]
 801295e:	601c      	str	r4, [r3, #0]
 8012960:	4606      	mov	r6, r0
 8012962:	e9cd 1201 	strd	r1, r2, [sp, #4]
 8012966:	f7ff ffbd 	bl	80128e4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 801296a:	f1b9 0f03 	cmp.w	r9, #3
 801296e:	f340 80c2 	ble.w	8012af6 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 8012972:	4631      	mov	r1, r6
 8012974:	a80c      	add	r0, sp, #48	; 0x30
 8012976:	f007 f99f 	bl	8019cb8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801297a:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 801297e:	9306      	str	r3, [sp, #24]
 8012980:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8012984:	9307      	str	r3, [sp, #28]
 8012986:	9b03      	ldr	r3, [sp, #12]
 8012988:	f8d3 a000 	ldr.w	sl, [r3]
 801298c:	f1ba 0f00 	cmp.w	sl, #0
 8012990:	f000 80b4 	beq.w	8012afc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 8012994:	4651      	mov	r1, sl
 8012996:	a810      	add	r0, sp, #64	; 0x40
 8012998:	f007 f98e 	bl	8019cb8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801299c:	9b01      	ldr	r3, [sp, #4]
 801299e:	9a06      	ldr	r2, [sp, #24]
 80129a0:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 80129a4:	189d      	adds	r5, r3, r2
 80129a6:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 80129aa:	9a07      	ldr	r2, [sp, #28]
 80129ac:	2002      	movs	r0, #2
 80129ae:	fb91 f1f0 	sdiv	r1, r1, r0
 80129b2:	4419      	add	r1, r3
 80129b4:	1a6d      	subs	r5, r5, r1
 80129b6:	9b02      	ldr	r3, [sp, #8]
 80129b8:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 80129bc:	4413      	add	r3, r2
 80129be:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 80129c2:	fb92 f2f0 	sdiv	r2, r2, r0
 80129c6:	440a      	add	r2, r1
 80129c8:	1a9b      	subs	r3, r3, r2
 80129ca:	435b      	muls	r3, r3
 80129cc:	fb05 3505 	mla	r5, r5, r5, r3
 80129d0:	4f4d      	ldr	r7, [pc, #308]	; (8012b08 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 80129d2:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 80129d4:	ac10      	add	r4, sp, #64	; 0x40
 80129d6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80129d8:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 80129da:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80129dc:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 80129de:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80129e0:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 80129e4:	f1b9 0f0c 	cmp.w	r9, #12
 80129e8:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 80129ec:	f04f 0303 	mov.w	r3, #3
 80129f0:	bfc8      	it	gt
 80129f2:	4698      	movgt	r8, r3
 80129f4:	f8cd 9000 	str.w	r9, [sp]
 80129f8:	f04f 0400 	mov.w	r4, #0
 80129fc:	bfdc      	itt	le
 80129fe:	f109 32ff 	addle.w	r2, r9, #4294967295
 8012a02:	fb92 f8f3 	sdivle	r8, r2, r3
 8012a06:	1c63      	adds	r3, r4, #1
 8012a08:	aa10      	add	r2, sp, #64	; 0x40
 8012a0a:	f004 0401 	and.w	r4, r4, #1
 8012a0e:	9308      	str	r3, [sp, #32]
 8012a10:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 8012a14:	9b00      	ldr	r3, [sp, #0]
 8012a16:	fb93 f3f8 	sdiv	r3, r3, r8
 8012a1a:	b29b      	uxth	r3, r3
 8012a1c:	3404      	adds	r4, #4
 8012a1e:	f04f 0b00 	mov.w	fp, #0
 8012a22:	9304      	str	r3, [sp, #16]
 8012a24:	9a04      	ldr	r2, [sp, #16]
 8012a26:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8012a2a:	fb13 f302 	smulbb	r3, r3, r2
 8012a2e:	9a01      	ldr	r2, [sp, #4]
 8012a30:	b29b      	uxth	r3, r3
 8012a32:	1899      	adds	r1, r3, r2
 8012a34:	9305      	str	r3, [sp, #20]
 8012a36:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8012a3a:	b209      	sxth	r1, r1
 8012a3c:	4299      	cmp	r1, r3
 8012a3e:	db4d      	blt.n	8012adc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8012a40:	8932      	ldrh	r2, [r6, #8]
 8012a42:	4413      	add	r3, r2
 8012a44:	b21b      	sxth	r3, r3
 8012a46:	4299      	cmp	r1, r3
 8012a48:	da48      	bge.n	8012adc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8012a4a:	9b04      	ldr	r3, [sp, #16]
 8012a4c:	6827      	ldr	r7, [r4, #0]
 8012a4e:	fb17 f703 	smulbb	r7, r7, r3
 8012a52:	9b02      	ldr	r3, [sp, #8]
 8012a54:	b2bf      	uxth	r7, r7
 8012a56:	18fa      	adds	r2, r7, r3
 8012a58:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8012a5c:	b212      	sxth	r2, r2
 8012a5e:	429a      	cmp	r2, r3
 8012a60:	db3c      	blt.n	8012adc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8012a62:	8970      	ldrh	r0, [r6, #10]
 8012a64:	4403      	add	r3, r0
 8012a66:	b21b      	sxth	r3, r3
 8012a68:	429a      	cmp	r2, r3
 8012a6a:	da37      	bge.n	8012adc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8012a6c:	2300      	movs	r3, #0
 8012a6e:	930b      	str	r3, [sp, #44]	; 0x2c
 8012a70:	4630      	mov	r0, r6
 8012a72:	ab0b      	add	r3, sp, #44	; 0x2c
 8012a74:	f7ff ff36 	bl	80128e4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8012a78:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8012a7a:	b37a      	cbz	r2, 8012adc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8012a7c:	4552      	cmp	r2, sl
 8012a7e:	d02d      	beq.n	8012adc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8012a80:	4611      	mov	r1, r2
 8012a82:	a80e      	add	r0, sp, #56	; 0x38
 8012a84:	9209      	str	r2, [sp, #36]	; 0x24
 8012a86:	f007 f917 	bl	8019cb8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012a8a:	9a06      	ldr	r2, [sp, #24]
 8012a8c:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 8012a90:	9b01      	ldr	r3, [sp, #4]
 8012a92:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 8012a96:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 8012a9a:	4413      	add	r3, r2
 8012a9c:	f04f 0e02 	mov.w	lr, #2
 8012aa0:	fb91 f1fe 	sdiv	r1, r1, lr
 8012aa4:	4401      	add	r1, r0
 8012aa6:	1a58      	subs	r0, r3, r1
 8012aa8:	9a07      	ldr	r2, [sp, #28]
 8012aaa:	9b02      	ldr	r3, [sp, #8]
 8012aac:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 8012ab0:	fb9c fcfe 	sdiv	ip, ip, lr
 8012ab4:	4413      	add	r3, r2
 8012ab6:	448c      	add	ip, r1
 8012ab8:	eba3 030c 	sub.w	r3, r3, ip
 8012abc:	435b      	muls	r3, r3
 8012abe:	fb00 3300 	mla	r3, r0, r0, r3
 8012ac2:	42ab      	cmp	r3, r5
 8012ac4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8012ac6:	d208      	bcs.n	8012ada <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 8012ac8:	9803      	ldr	r0, [sp, #12]
 8012aca:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8012acc:	6001      	str	r1, [r0, #0]
 8012ace:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8012ad0:	9805      	ldr	r0, [sp, #20]
 8012ad2:	8008      	strh	r0, [r1, #0]
 8012ad4:	992b      	ldr	r1, [sp, #172]	; 0xac
 8012ad6:	461d      	mov	r5, r3
 8012ad8:	800f      	strh	r7, [r1, #0]
 8012ada:	4692      	mov	sl, r2
 8012adc:	f10b 0b01 	add.w	fp, fp, #1
 8012ae0:	f1bb 0f04 	cmp.w	fp, #4
 8012ae4:	f104 0408 	add.w	r4, r4, #8
 8012ae8:	d19c      	bne.n	8012a24 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 8012aea:	9b00      	ldr	r3, [sp, #0]
 8012aec:	9c08      	ldr	r4, [sp, #32]
 8012aee:	444b      	add	r3, r9
 8012af0:	4544      	cmp	r4, r8
 8012af2:	9300      	str	r3, [sp, #0]
 8012af4:	d187      	bne.n	8012a06 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 8012af6:	b021      	add	sp, #132	; 0x84
 8012af8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012afc:	f04f 35ff 	mov.w	r5, #4294967295
 8012b00:	e766      	b.n	80129d0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 8012b02:	bf00      	nop
 8012b04:	2001383c 	.word	0x2001383c
 8012b08:	0802ea8c 	.word	0x0802ea8c

08012b0c <_ZN8touchgfx4RectaNERKS0_>:
 8012b0c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012b10:	f9b1 7000 	ldrsh.w	r7, [r1]
 8012b14:	888c      	ldrh	r4, [r1, #4]
 8012b16:	f9b0 9000 	ldrsh.w	r9, [r0]
 8012b1a:	443c      	add	r4, r7
 8012b1c:	b2a4      	uxth	r4, r4
 8012b1e:	fa0f f884 	sxth.w	r8, r4
 8012b22:	45c1      	cmp	r9, r8
 8012b24:	da2f      	bge.n	8012b86 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8012b26:	8882      	ldrh	r2, [r0, #4]
 8012b28:	444a      	add	r2, r9
 8012b2a:	b292      	uxth	r2, r2
 8012b2c:	fa0f fe82 	sxth.w	lr, r2
 8012b30:	4577      	cmp	r7, lr
 8012b32:	da28      	bge.n	8012b86 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8012b34:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8012b38:	88cb      	ldrh	r3, [r1, #6]
 8012b3a:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8012b3e:	442b      	add	r3, r5
 8012b40:	b21b      	sxth	r3, r3
 8012b42:	429e      	cmp	r6, r3
 8012b44:	da1f      	bge.n	8012b86 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8012b46:	88c3      	ldrh	r3, [r0, #6]
 8012b48:	4433      	add	r3, r6
 8012b4a:	b29b      	uxth	r3, r3
 8012b4c:	fa0f fc83 	sxth.w	ip, r3
 8012b50:	4565      	cmp	r5, ip
 8012b52:	da18      	bge.n	8012b86 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8012b54:	454f      	cmp	r7, r9
 8012b56:	bfb8      	it	lt
 8012b58:	464f      	movlt	r7, r9
 8012b5a:	42b5      	cmp	r5, r6
 8012b5c:	bfb8      	it	lt
 8012b5e:	4635      	movlt	r5, r6
 8012b60:	45f0      	cmp	r8, lr
 8012b62:	bfd8      	it	le
 8012b64:	4622      	movle	r2, r4
 8012b66:	1bd2      	subs	r2, r2, r7
 8012b68:	8082      	strh	r2, [r0, #4]
 8012b6a:	884a      	ldrh	r2, [r1, #2]
 8012b6c:	88c9      	ldrh	r1, [r1, #6]
 8012b6e:	8007      	strh	r7, [r0, #0]
 8012b70:	440a      	add	r2, r1
 8012b72:	b292      	uxth	r2, r2
 8012b74:	b211      	sxth	r1, r2
 8012b76:	458c      	cmp	ip, r1
 8012b78:	bfa8      	it	ge
 8012b7a:	4613      	movge	r3, r2
 8012b7c:	1b5b      	subs	r3, r3, r5
 8012b7e:	80c3      	strh	r3, [r0, #6]
 8012b80:	8045      	strh	r5, [r0, #2]
 8012b82:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012b86:	2300      	movs	r3, #0
 8012b88:	8003      	strh	r3, [r0, #0]
 8012b8a:	8043      	strh	r3, [r0, #2]
 8012b8c:	8083      	strh	r3, [r0, #4]
 8012b8e:	80c3      	strh	r3, [r0, #6]
 8012b90:	e7f7      	b.n	8012b82 <_ZN8touchgfx4RectaNERKS0_+0x76>

08012b92 <_ZNK8touchgfx4Rect7isEmptyEv>:
 8012b92:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8012b96:	2b00      	cmp	r3, #0
 8012b98:	dd06      	ble.n	8012ba8 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 8012b9a:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 8012b9e:	2800      	cmp	r0, #0
 8012ba0:	bfcc      	ite	gt
 8012ba2:	2000      	movgt	r0, #0
 8012ba4:	2001      	movle	r0, #1
 8012ba6:	4770      	bx	lr
 8012ba8:	2001      	movs	r0, #1
 8012baa:	4770      	bx	lr

08012bac <_ZNK8touchgfx9Container16getContainedAreaEv>:
 8012bac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012bb0:	2300      	movs	r3, #0
 8012bb2:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8012bb4:	8003      	strh	r3, [r0, #0]
 8012bb6:	4604      	mov	r4, r0
 8012bb8:	8043      	strh	r3, [r0, #2]
 8012bba:	8083      	strh	r3, [r0, #4]
 8012bbc:	80c3      	strh	r3, [r0, #6]
 8012bbe:	2d00      	cmp	r5, #0
 8012bc0:	d040      	beq.n	8012c44 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 8012bc2:	1d28      	adds	r0, r5, #4
 8012bc4:	f7ff ffe5 	bl	8012b92 <_ZNK8touchgfx4Rect7isEmptyEv>
 8012bc8:	b988      	cbnz	r0, 8012bee <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8012bca:	4620      	mov	r0, r4
 8012bcc:	f7ff ffe1 	bl	8012b92 <_ZNK8touchgfx4Rect7isEmptyEv>
 8012bd0:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8012bd4:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8012bd8:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 8012bdc:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 8012be0:	b138      	cbz	r0, 8012bf2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 8012be2:	8022      	strh	r2, [r4, #0]
 8012be4:	8063      	strh	r3, [r4, #2]
 8012be6:	f8a4 e004 	strh.w	lr, [r4, #4]
 8012bea:	f8a4 c006 	strh.w	ip, [r4, #6]
 8012bee:	69ad      	ldr	r5, [r5, #24]
 8012bf0:	e7e5      	b.n	8012bbe <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 8012bf2:	f9b4 0000 	ldrsh.w	r0, [r4]
 8012bf6:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8012bfa:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 8012bfe:	4290      	cmp	r0, r2
 8012c00:	4607      	mov	r7, r0
 8012c02:	bfa8      	it	ge
 8012c04:	4617      	movge	r7, r2
 8012c06:	4472      	add	r2, lr
 8012c08:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 8012c0c:	8027      	strh	r7, [r4, #0]
 8012c0e:	4299      	cmp	r1, r3
 8012c10:	460e      	mov	r6, r1
 8012c12:	4440      	add	r0, r8
 8012c14:	bfa8      	it	ge
 8012c16:	461e      	movge	r6, r3
 8012c18:	4471      	add	r1, lr
 8012c1a:	4463      	add	r3, ip
 8012c1c:	b200      	sxth	r0, r0
 8012c1e:	b212      	sxth	r2, r2
 8012c20:	b209      	sxth	r1, r1
 8012c22:	b21b      	sxth	r3, r3
 8012c24:	4290      	cmp	r0, r2
 8012c26:	bfac      	ite	ge
 8012c28:	ebc7 0200 	rsbge	r2, r7, r0
 8012c2c:	ebc7 0202 	rsblt	r2, r7, r2
 8012c30:	4299      	cmp	r1, r3
 8012c32:	bfac      	ite	ge
 8012c34:	ebc6 0301 	rsbge	r3, r6, r1
 8012c38:	ebc6 0303 	rsblt	r3, r6, r3
 8012c3c:	8066      	strh	r6, [r4, #2]
 8012c3e:	80a2      	strh	r2, [r4, #4]
 8012c40:	80e3      	strh	r3, [r4, #6]
 8012c42:	e7d4      	b.n	8012bee <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8012c44:	4620      	mov	r0, r4
 8012c46:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08012c4a <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 8012c4a:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8012c4e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8012c52:	b383      	cbz	r3, 8012cb6 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8012c54:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8012c56:	b374      	cbz	r4, 8012cb6 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8012c58:	f9b1 5000 	ldrsh.w	r5, [r1]
 8012c5c:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 8012c60:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 8012c64:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 8012c68:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8012c6c:	b303      	cbz	r3, 8012cb0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8012c6e:	4668      	mov	r0, sp
 8012c70:	1d21      	adds	r1, r4, #4
 8012c72:	f8ad 5000 	strh.w	r5, [sp]
 8012c76:	f8ad 6002 	strh.w	r6, [sp, #2]
 8012c7a:	f8ad 7004 	strh.w	r7, [sp, #4]
 8012c7e:	f8ad 8006 	strh.w	r8, [sp, #6]
 8012c82:	f7ff ff43 	bl	8012b0c <_ZN8touchgfx4RectaNERKS0_>
 8012c86:	4668      	mov	r0, sp
 8012c88:	f7ff ff83 	bl	8012b92 <_ZNK8touchgfx4Rect7isEmptyEv>
 8012c8c:	b980      	cbnz	r0, 8012cb0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8012c8e:	f8bd 3000 	ldrh.w	r3, [sp]
 8012c92:	88a2      	ldrh	r2, [r4, #4]
 8012c94:	1a9b      	subs	r3, r3, r2
 8012c96:	f8ad 3000 	strh.w	r3, [sp]
 8012c9a:	88e2      	ldrh	r2, [r4, #6]
 8012c9c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8012ca0:	1a9b      	subs	r3, r3, r2
 8012ca2:	f8ad 3002 	strh.w	r3, [sp, #2]
 8012ca6:	6823      	ldr	r3, [r4, #0]
 8012ca8:	4669      	mov	r1, sp
 8012caa:	689b      	ldr	r3, [r3, #8]
 8012cac:	4620      	mov	r0, r4
 8012cae:	4798      	blx	r3
 8012cb0:	69a4      	ldr	r4, [r4, #24]
 8012cb2:	2c00      	cmp	r4, #0
 8012cb4:	d1d8      	bne.n	8012c68 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 8012cb6:	b002      	add	sp, #8
 8012cb8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08012cbc <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 8012cbc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8012cbe:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8012cc2:	460d      	mov	r5, r1
 8012cc4:	4616      	mov	r6, r2
 8012cc6:	b323      	cbz	r3, 8012d12 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8012cc8:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8012cca:	b314      	cbz	r4, 8012d12 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8012ccc:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8012cd0:	b1eb      	cbz	r3, 8012d0e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8012cd2:	6828      	ldr	r0, [r5, #0]
 8012cd4:	6869      	ldr	r1, [r5, #4]
 8012cd6:	466b      	mov	r3, sp
 8012cd8:	c303      	stmia	r3!, {r0, r1}
 8012cda:	4668      	mov	r0, sp
 8012cdc:	1d21      	adds	r1, r4, #4
 8012cde:	f7ff ff15 	bl	8012b0c <_ZN8touchgfx4RectaNERKS0_>
 8012ce2:	4668      	mov	r0, sp
 8012ce4:	f7ff ff55 	bl	8012b92 <_ZNK8touchgfx4Rect7isEmptyEv>
 8012ce8:	b988      	cbnz	r0, 8012d0e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8012cea:	f8bd 3000 	ldrh.w	r3, [sp]
 8012cee:	88a2      	ldrh	r2, [r4, #4]
 8012cf0:	1a9b      	subs	r3, r3, r2
 8012cf2:	f8ad 3000 	strh.w	r3, [sp]
 8012cf6:	88e2      	ldrh	r2, [r4, #6]
 8012cf8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8012cfc:	1a9b      	subs	r3, r3, r2
 8012cfe:	f8ad 3002 	strh.w	r3, [sp, #2]
 8012d02:	6823      	ldr	r3, [r4, #0]
 8012d04:	4632      	mov	r2, r6
 8012d06:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8012d08:	4669      	mov	r1, sp
 8012d0a:	4620      	mov	r0, r4
 8012d0c:	4798      	blx	r3
 8012d0e:	69a4      	ldr	r4, [r4, #24]
 8012d10:	e7db      	b.n	8012cca <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 8012d12:	b002      	add	sp, #8
 8012d14:	bd70      	pop	{r4, r5, r6, pc}

08012d16 <_ZN8touchgfx14SwipeContainer14setSwipeCutoffEt>:
 8012d16:	85c1      	strh	r1, [r0, #46]	; 0x2e
 8012d18:	4770      	bx	lr
	...

08012d1c <_ZN8touchgfx14SwipeContainerD1Ev>:
 8012d1c:	4b05      	ldr	r3, [pc, #20]	; (8012d34 <_ZN8touchgfx14SwipeContainerD1Ev+0x18>)
 8012d1e:	b510      	push	{r4, lr}
 8012d20:	6003      	str	r3, [r0, #0]
 8012d22:	4604      	mov	r4, r0
 8012d24:	f005 fe44 	bl	80189b0 <_ZN8touchgfx11Application11getInstanceEv>
 8012d28:	4621      	mov	r1, r4
 8012d2a:	3004      	adds	r0, #4
 8012d2c:	f005 fe8d 	bl	8018a4a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 8012d30:	4620      	mov	r0, r4
 8012d32:	bd10      	pop	{r4, pc}
 8012d34:	08031600 	.word	0x08031600

08012d38 <_ZN8touchgfx14SwipeContainerD0Ev>:
 8012d38:	b510      	push	{r4, lr}
 8012d3a:	4604      	mov	r4, r0
 8012d3c:	f7ff ffee 	bl	8012d1c <_ZN8touchgfx14SwipeContainerD1Ev>
 8012d40:	4620      	mov	r0, r4
 8012d42:	21f4      	movs	r1, #244	; 0xf4
 8012d44:	f019 ff1d 	bl	802cb82 <_ZdlPvj>
 8012d48:	4620      	mov	r0, r4
 8012d4a:	bd10      	pop	{r4, pc}

08012d4c <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE>:
 8012d4c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8012d50:	2b04      	cmp	r3, #4
 8012d52:	d117      	bne.n	8012d84 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x38>
 8012d54:	790b      	ldrb	r3, [r1, #4]
 8012d56:	2b01      	cmp	r3, #1
 8012d58:	d114      	bne.n	8012d84 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x38>
 8012d5a:	f9b0 3030 	ldrsh.w	r3, [r0, #48]	; 0x30
 8012d5e:	8f82      	ldrh	r2, [r0, #60]	; 0x3c
 8012d60:	8643      	strh	r3, [r0, #50]	; 0x32
 8012d62:	2b00      	cmp	r3, #0
 8012d64:	8682      	strh	r2, [r0, #52]	; 0x34
 8012d66:	f890 10f1 	ldrb.w	r1, [r0, #241]	; 0xf1
 8012d6a:	da0e      	bge.n	8012d8a <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x3e>
 8012d6c:	f890 20f0 	ldrb.w	r2, [r0, #240]	; 0xf0
 8012d70:	3a01      	subs	r2, #1
 8012d72:	4291      	cmp	r1, r2
 8012d74:	d007      	beq.n	8012d86 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x3a>
 8012d76:	8dc2      	ldrh	r2, [r0, #46]	; 0x2e
 8012d78:	4252      	negs	r2, r2
 8012d7a:	4293      	cmp	r3, r2
 8012d7c:	dc03      	bgt.n	8012d86 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x3a>
 8012d7e:	2302      	movs	r3, #2
 8012d80:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8012d84:	4770      	bx	lr
 8012d86:	2300      	movs	r3, #0
 8012d88:	e7fa      	b.n	8012d80 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x34>
 8012d8a:	d0fb      	beq.n	8012d84 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x38>
 8012d8c:	b111      	cbz	r1, 8012d94 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x48>
 8012d8e:	8dc2      	ldrh	r2, [r0, #46]	; 0x2e
 8012d90:	4293      	cmp	r3, r2
 8012d92:	da01      	bge.n	8012d98 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x4c>
 8012d94:	2301      	movs	r3, #1
 8012d96:	e7f3      	b.n	8012d80 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x34>
 8012d98:	2303      	movs	r3, #3
 8012d9a:	e7f1      	b.n	8012d80 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x34>

08012d9c <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE>:
 8012d9c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8012da0:	2b04      	cmp	r3, #4
 8012da2:	d113      	bne.n	8012dcc <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 8012da4:	790b      	ldrb	r3, [r1, #4]
 8012da6:	b98b      	cbnz	r3, 8012dcc <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 8012da8:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8012daa:	8643      	strh	r3, [r0, #50]	; 0x32
 8012dac:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 8012dae:	8683      	strh	r3, [r0, #52]	; 0x34
 8012db0:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8012db4:	f890 20f1 	ldrb.w	r2, [r0, #241]	; 0xf1
 8012db8:	2b00      	cmp	r3, #0
 8012dba:	da08      	bge.n	8012dce <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x32>
 8012dbc:	f890 30f0 	ldrb.w	r3, [r0, #240]	; 0xf0
 8012dc0:	3b01      	subs	r3, #1
 8012dc2:	429a      	cmp	r2, r3
 8012dc4:	da02      	bge.n	8012dcc <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 8012dc6:	2302      	movs	r3, #2
 8012dc8:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8012dcc:	4770      	bx	lr
 8012dce:	d0fd      	beq.n	8012dcc <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 8012dd0:	2a00      	cmp	r2, #0
 8012dd2:	d0fb      	beq.n	8012dcc <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 8012dd4:	2303      	movs	r3, #3
 8012dd6:	e7f7      	b.n	8012dc8 <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x2c>

08012dd8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
 8012dd8:	b538      	push	{r3, r4, r5, lr}
 8012dda:	2226      	movs	r2, #38	; 0x26
 8012ddc:	4604      	mov	r4, r0
 8012dde:	460d      	mov	r5, r1
 8012de0:	2100      	movs	r1, #0
 8012de2:	f01a ffba 	bl	802dd5a <memset>
 8012de6:	4620      	mov	r0, r4
 8012de8:	f7ff fc58 	bl	801269c <_ZN8touchgfx8DrawableC1Ev>
 8012dec:	4b06      	ldr	r3, [pc, #24]	; (8012e08 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x30>)
 8012dee:	6023      	str	r3, [r4, #0]
 8012df0:	882b      	ldrh	r3, [r5, #0]
 8012df2:	84e3      	strh	r3, [r4, #38]	; 0x26
 8012df4:	23ff      	movs	r3, #255	; 0xff
 8012df6:	4620      	mov	r0, r4
 8012df8:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 8012dfc:	4629      	mov	r1, r5
 8012dfe:	f003 f8d8 	bl	8015fb2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8012e02:	4620      	mov	r0, r4
 8012e04:	bd38      	pop	{r3, r4, r5, pc}
 8012e06:	bf00      	nop
 8012e08:	08031ca4 	.word	0x08031ca4

08012e0c <_ZN8touchgfx14SwipeContainer23setEndSwipeElasticWidthEt>:
 8012e0c:	86c1      	strh	r1, [r0, #54]	; 0x36
 8012e0e:	4770      	bx	lr

08012e10 <_ZN8touchgfx14SwipeContainer18setPageIndicatorXYEss>:
 8012e10:	b508      	push	{r3, lr}
 8012e12:	3068      	adds	r0, #104	; 0x68
 8012e14:	f7f0 fc2e 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
 8012e18:	bd08      	pop	{r3, pc}

08012e1a <_ZN8touchgfx14SwipeContainer11adjustPagesEv>:
 8012e1a:	b508      	push	{r3, lr}
 8012e1c:	8e02      	ldrh	r2, [r0, #48]	; 0x30
 8012e1e:	f890 10f1 	ldrb.w	r1, [r0, #241]	; 0xf1
 8012e22:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8012e26:	fb03 2111 	mls	r1, r3, r1, r2
 8012e2a:	b209      	sxth	r1, r1
 8012e2c:	2200      	movs	r2, #0
 8012e2e:	3038      	adds	r0, #56	; 0x38
 8012e30:	f7f0 f9ab 	bl	800318a <_ZN8touchgfx8Drawable6moveToEss>
 8012e34:	bd08      	pop	{r3, pc}

08012e36 <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE>:
 8012e36:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8012e3a:	2b04      	cmp	r3, #4
 8012e3c:	d119      	bne.n	8012e72 <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x3c>
 8012e3e:	88ca      	ldrh	r2, [r1, #6]
 8012e40:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8012e42:	1a9b      	subs	r3, r3, r2
 8012e44:	894a      	ldrh	r2, [r1, #10]
 8012e46:	f890 10f1 	ldrb.w	r1, [r0, #241]	; 0xf1
 8012e4a:	4413      	add	r3, r2
 8012e4c:	b21b      	sxth	r3, r3
 8012e4e:	8603      	strh	r3, [r0, #48]	; 0x30
 8012e50:	b921      	cbnz	r1, 8012e5c <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x26>
 8012e52:	8ec2      	ldrh	r2, [r0, #54]	; 0x36
 8012e54:	4293      	cmp	r3, r2
 8012e56:	dd01      	ble.n	8012e5c <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x26>
 8012e58:	8602      	strh	r2, [r0, #48]	; 0x30
 8012e5a:	e008      	b.n	8012e6e <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x38>
 8012e5c:	f890 20f0 	ldrb.w	r2, [r0, #240]	; 0xf0
 8012e60:	3a01      	subs	r2, #1
 8012e62:	4291      	cmp	r1, r2
 8012e64:	d103      	bne.n	8012e6e <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x38>
 8012e66:	8ec2      	ldrh	r2, [r0, #54]	; 0x36
 8012e68:	4252      	negs	r2, r2
 8012e6a:	4293      	cmp	r3, r2
 8012e6c:	dbf4      	blt.n	8012e58 <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x22>
 8012e6e:	f7ff bfd4 	b.w	8012e1a <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 8012e72:	4770      	bx	lr

08012e74 <_ZN8touchgfx14SwipeContainer25animateSwipeCancelledLeftEv>:
 8012e74:	b538      	push	{r3, r4, r5, lr}
 8012e76:	f890 502d 	ldrb.w	r5, [r0, #45]	; 0x2d
 8012e7a:	2d0e      	cmp	r5, #14
 8012e7c:	4604      	mov	r4, r0
 8012e7e:	d813      	bhi.n	8012ea8 <_ZN8touchgfx14SwipeContainer25animateSwipeCancelledLeftEv+0x34>
 8012e80:	8e42      	ldrh	r2, [r0, #50]	; 0x32
 8012e82:	4252      	negs	r2, r2
 8012e84:	230e      	movs	r3, #14
 8012e86:	b212      	sxth	r2, r2
 8012e88:	2100      	movs	r1, #0
 8012e8a:	4628      	mov	r0, r5
 8012e8c:	f007 fbc2 	bl	801a614 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst>
 8012e90:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 8012e92:	4418      	add	r0, r3
 8012e94:	8620      	strh	r0, [r4, #48]	; 0x30
 8012e96:	4620      	mov	r0, r4
 8012e98:	f7ff ffbf 	bl	8012e1a <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 8012e9c:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
 8012ea0:	3301      	adds	r3, #1
 8012ea2:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 8012ea6:	bd38      	pop	{r3, r4, r5, pc}
 8012ea8:	2304      	movs	r3, #4
 8012eaa:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8012eae:	2300      	movs	r3, #0
 8012eb0:	f880 302d 	strb.w	r3, [r0, #45]	; 0x2d
 8012eb4:	8603      	strh	r3, [r0, #48]	; 0x30
 8012eb6:	e7ef      	b.n	8012e98 <_ZN8touchgfx14SwipeContainer25animateSwipeCancelledLeftEv+0x24>

08012eb8 <_ZN8touchgfx14SwipeContainer26animateSwipeCancelledRightEv>:
 8012eb8:	b538      	push	{r3, r4, r5, lr}
 8012eba:	f890 502d 	ldrb.w	r5, [r0, #45]	; 0x2d
 8012ebe:	2d0e      	cmp	r5, #14
 8012ec0:	4604      	mov	r4, r0
 8012ec2:	d812      	bhi.n	8012eea <_ZN8touchgfx14SwipeContainer26animateSwipeCancelledRightEv+0x32>
 8012ec4:	230e      	movs	r3, #14
 8012ec6:	f9b0 2032 	ldrsh.w	r2, [r0, #50]	; 0x32
 8012eca:	2100      	movs	r1, #0
 8012ecc:	4628      	mov	r0, r5
 8012ece:	f007 fba1 	bl	801a614 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst>
 8012ed2:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 8012ed4:	1a18      	subs	r0, r3, r0
 8012ed6:	8620      	strh	r0, [r4, #48]	; 0x30
 8012ed8:	4620      	mov	r0, r4
 8012eda:	f7ff ff9e 	bl	8012e1a <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 8012ede:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
 8012ee2:	3301      	adds	r3, #1
 8012ee4:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 8012ee8:	bd38      	pop	{r3, r4, r5, pc}
 8012eea:	2304      	movs	r3, #4
 8012eec:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8012ef0:	2300      	movs	r3, #0
 8012ef2:	f880 302d 	strb.w	r3, [r0, #45]	; 0x2d
 8012ef6:	8603      	strh	r3, [r0, #48]	; 0x30
 8012ef8:	e7ef      	b.n	8012eda <_ZN8touchgfx14SwipeContainer26animateSwipeCancelledRightEv+0x22>
	...

08012efc <_ZN8touchgfx14SwipeContainer13PageIndicatorC1Ev>:
 8012efc:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8012f00:	4604      	mov	r4, r0
 8012f02:	4626      	mov	r6, r4
 8012f04:	af02      	add	r7, sp, #8
 8012f06:	f7ff fbc9 	bl	801269c <_ZN8touchgfx8DrawableC1Ev>
 8012f0a:	2500      	movs	r5, #0
 8012f0c:	4b18      	ldr	r3, [pc, #96]	; (8012f70 <_ZN8touchgfx14SwipeContainer13PageIndicatorC1Ev+0x74>)
 8012f0e:	62a5      	str	r5, [r4, #40]	; 0x28
 8012f10:	f64f 79ff 	movw	r9, #65535	; 0xffff
 8012f14:	f846 3b2c 	str.w	r3, [r6], #44
 8012f18:	f827 9d04 	strh.w	r9, [r7, #-4]!
 8012f1c:	4630      	mov	r0, r6
 8012f1e:	4639      	mov	r1, r7
 8012f20:	f7ff ff5a 	bl	8012dd8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8012f24:	f104 085c 	add.w	r8, r4, #92	; 0x5c
 8012f28:	4b12      	ldr	r3, [pc, #72]	; (8012f74 <_ZN8touchgfx14SwipeContainer13PageIndicatorC1Ev+0x78>)
 8012f2a:	62e3      	str	r3, [r4, #44]	; 0x2c
 8012f2c:	4639      	mov	r1, r7
 8012f2e:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 8012f32:	f8a4 5058 	strh.w	r5, [r4, #88]	; 0x58
 8012f36:	4640      	mov	r0, r8
 8012f38:	f8ad 9004 	strh.w	r9, [sp, #4]
 8012f3c:	f7ff ff4c 	bl	8012dd8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8012f40:	462a      	mov	r2, r5
 8012f42:	4629      	mov	r1, r5
 8012f44:	4630      	mov	r0, r6
 8012f46:	f8a4 5088 	strh.w	r5, [r4, #136]	; 0x88
 8012f4a:	f7f0 fb93 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
 8012f4e:	462a      	mov	r2, r5
 8012f50:	4629      	mov	r1, r5
 8012f52:	4640      	mov	r0, r8
 8012f54:	f7f0 fb8e 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
 8012f58:	4631      	mov	r1, r6
 8012f5a:	4620      	mov	r0, r4
 8012f5c:	f7ff fc50 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8012f60:	4620      	mov	r0, r4
 8012f62:	4641      	mov	r1, r8
 8012f64:	f7ff fc4c 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8012f68:	4620      	mov	r0, r4
 8012f6a:	b003      	add	sp, #12
 8012f6c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012f70:	0802f514 	.word	0x0802f514
 8012f74:	08031ac0 	.word	0x08031ac0

08012f78 <_ZN8touchgfx14SwipeContainerC1Ev>:
 8012f78:	b570      	push	{r4, r5, r6, lr}
 8012f7a:	4604      	mov	r4, r0
 8012f7c:	f7ff fb8e 	bl	801269c <_ZN8touchgfx8DrawableC1Ev>
 8012f80:	4b1a      	ldr	r3, [pc, #104]	; (8012fec <_ZN8touchgfx14SwipeContainerC1Ev+0x74>)
 8012f82:	6023      	str	r3, [r4, #0]
 8012f84:	2304      	movs	r3, #4
 8012f86:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 8012f8a:	2350      	movs	r3, #80	; 0x50
 8012f8c:	2500      	movs	r5, #0
 8012f8e:	85e3      	strh	r3, [r4, #46]	; 0x2e
 8012f90:	f104 0638 	add.w	r6, r4, #56	; 0x38
 8012f94:	231e      	movs	r3, #30
 8012f96:	62a5      	str	r5, [r4, #40]	; 0x28
 8012f98:	f884 502d 	strb.w	r5, [r4, #45]	; 0x2d
 8012f9c:	8625      	strh	r5, [r4, #48]	; 0x30
 8012f9e:	8665      	strh	r5, [r4, #50]	; 0x32
 8012fa0:	86a5      	strh	r5, [r4, #52]	; 0x34
 8012fa2:	86e3      	strh	r3, [r4, #54]	; 0x36
 8012fa4:	4630      	mov	r0, r6
 8012fa6:	f7ff fb79 	bl	801269c <_ZN8touchgfx8DrawableC1Ev>
 8012faa:	4b11      	ldr	r3, [pc, #68]	; (8012ff0 <_ZN8touchgfx14SwipeContainerC1Ev+0x78>)
 8012fac:	6625      	str	r5, [r4, #96]	; 0x60
 8012fae:	63a3      	str	r3, [r4, #56]	; 0x38
 8012fb0:	f8a4 5066 	strh.w	r5, [r4, #102]	; 0x66
 8012fb4:	2302      	movs	r3, #2
 8012fb6:	f104 0568 	add.w	r5, r4, #104	; 0x68
 8012fba:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 8012fbe:	4628      	mov	r0, r5
 8012fc0:	f7ff ff9c 	bl	8012efc <_ZN8touchgfx14SwipeContainer13PageIndicatorC1Ev>
 8012fc4:	f005 fcf4 	bl	80189b0 <_ZN8touchgfx11Application11getInstanceEv>
 8012fc8:	4621      	mov	r1, r4
 8012fca:	3004      	adds	r0, #4
 8012fcc:	f005 fde6 	bl	8018b9c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 8012fd0:	2301      	movs	r3, #1
 8012fd2:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
 8012fd6:	4631      	mov	r1, r6
 8012fd8:	4620      	mov	r0, r4
 8012fda:	f7ff fc11 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8012fde:	4620      	mov	r0, r4
 8012fe0:	4629      	mov	r1, r5
 8012fe2:	f7ff fc0d 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8012fe6:	4620      	mov	r0, r4
 8012fe8:	bd70      	pop	{r4, r5, r6, pc}
 8012fea:	bf00      	nop
 8012fec:	08031600 	.word	0x08031600
 8012ff0:	080316c4 	.word	0x080316c4

08012ff4 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>:
 8012ff4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8012ff6:	f890 3088 	ldrb.w	r3, [r0, #136]	; 0x88
 8012ffa:	428b      	cmp	r3, r1
 8012ffc:	4604      	mov	r4, r0
 8012ffe:	460d      	mov	r5, r1
 8013000:	d915      	bls.n	801302e <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh+0x3a>
 8013002:	f890 3089 	ldrb.w	r3, [r0, #137]	; 0x89
 8013006:	428b      	cmp	r3, r1
 8013008:	d011      	beq.n	801302e <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh+0x3a>
 801300a:	f884 1089 	strb.w	r1, [r4, #137]	; 0x89
 801300e:	f8b0 3052 	ldrh.w	r3, [r0, #82]	; 0x52
 8013012:	a802      	add	r0, sp, #8
 8013014:	f820 3d04 	strh.w	r3, [r0, #-4]!
 8013018:	f009 f91a 	bl	801c250 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801301c:	fb15 f100 	smulbb	r1, r5, r0
 8013020:	f9b4 2062 	ldrsh.w	r2, [r4, #98]	; 0x62
 8013024:	b209      	sxth	r1, r1
 8013026:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 801302a:	f7f0 f8ae 	bl	800318a <_ZN8touchgfx8Drawable6moveToEss>
 801302e:	b003      	add	sp, #12
 8013030:	bd30      	pop	{r4, r5, pc}

08013032 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh>:
 8013032:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8013034:	4604      	mov	r4, r0
 8013036:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801303a:	f884 1088 	strb.w	r1, [r4, #136]	; 0x88
 801303e:	f8b0 3052 	ldrh.w	r3, [r0, #82]	; 0x52
 8013042:	4293      	cmp	r3, r2
 8013044:	460d      	mov	r5, r1
 8013046:	d01e      	beq.n	8013086 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh+0x54>
 8013048:	a802      	add	r0, sp, #8
 801304a:	f820 3d04 	strh.w	r3, [r0, #-4]!
 801304e:	f009 f8ff 	bl	801c250 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013052:	6823      	ldr	r3, [r4, #0]
 8013054:	fb15 f000 	smulbb	r0, r5, r0
 8013058:	86a0      	strh	r0, [r4, #52]	; 0x34
 801305a:	695b      	ldr	r3, [r3, #20]
 801305c:	4620      	mov	r0, r4
 801305e:	4798      	blx	r3
 8013060:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	; 0x36
 8013064:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 8013068:	4620      	mov	r0, r4
 801306a:	f7ff fb2f 	bl	80126cc <_ZN8touchgfx8Drawable14setWidthHeightEss>
 801306e:	f894 1089 	ldrb.w	r1, [r4, #137]	; 0x89
 8013072:	42a9      	cmp	r1, r5
 8013074:	4620      	mov	r0, r4
 8013076:	bf28      	it	cs
 8013078:	4629      	movcs	r1, r5
 801307a:	f7ff ffbb 	bl	8012ff4 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>
 801307e:	6823      	ldr	r3, [r4, #0]
 8013080:	4620      	mov	r0, r4
 8013082:	695b      	ldr	r3, [r3, #20]
 8013084:	4798      	blx	r3
 8013086:	b003      	add	sp, #12
 8013088:	bd30      	pop	{r4, r5, pc}

0801308a <_ZN8touchgfx14SwipeContainer13PageIndicator10setBitmapsERKNS_6BitmapES4_>:
 801308a:	b538      	push	{r3, r4, r5, lr}
 801308c:	4604      	mov	r4, r0
 801308e:	460d      	mov	r5, r1
 8013090:	305c      	adds	r0, #92	; 0x5c
 8013092:	4611      	mov	r1, r2
 8013094:	f002 ff8d 	bl	8015fb2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8013098:	4629      	mov	r1, r5
 801309a:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 801309e:	f002 fa53 	bl	8015548 <_ZN8touchgfx10TiledImage9setBitmapERKNS_6BitmapE>
 80130a2:	f894 1088 	ldrb.w	r1, [r4, #136]	; 0x88
 80130a6:	b121      	cbz	r1, 80130b2 <_ZN8touchgfx14SwipeContainer13PageIndicator10setBitmapsERKNS_6BitmapES4_+0x28>
 80130a8:	4620      	mov	r0, r4
 80130aa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80130ae:	f7ff bfc0 	b.w	8013032 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh>
 80130b2:	bd38      	pop	{r3, r4, r5, pc}

080130b4 <_ZN8touchgfx14SwipeContainer23setPageIndicatorBitmapsERKNS_6BitmapES3_>:
 80130b4:	3068      	adds	r0, #104	; 0x68
 80130b6:	f7ff bfe8 	b.w	801308a <_ZN8touchgfx14SwipeContainer13PageIndicator10setBitmapsERKNS_6BitmapES4_>

080130ba <_ZN8touchgfx14SwipeContainer13PageIndicator7goRightEv>:
 80130ba:	f890 1089 	ldrb.w	r1, [r0, #137]	; 0x89
 80130be:	f890 2088 	ldrb.w	r2, [r0, #136]	; 0x88
 80130c2:	3101      	adds	r1, #1
 80130c4:	fb91 f3f2 	sdiv	r3, r1, r2
 80130c8:	fb02 1113 	mls	r1, r2, r3, r1
 80130cc:	b2c9      	uxtb	r1, r1
 80130ce:	f7ff bf91 	b.w	8012ff4 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>

080130d2 <_ZN8touchgfx14SwipeContainer11animateLeftEv>:
 80130d2:	b510      	push	{r4, lr}
 80130d4:	4604      	mov	r4, r0
 80130d6:	f890 002d 	ldrb.w	r0, [r0, #45]	; 0x2d
 80130da:	280a      	cmp	r0, #10
 80130dc:	d813      	bhi.n	8013106 <_ZN8touchgfx14SwipeContainer11animateLeftEv+0x34>
 80130de:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 80130e0:	8922      	ldrh	r2, [r4, #8]
 80130e2:	441a      	add	r2, r3
 80130e4:	b212      	sxth	r2, r2
 80130e6:	230a      	movs	r3, #10
 80130e8:	2100      	movs	r1, #0
 80130ea:	f007 fad1 	bl	801a690 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
 80130ee:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 80130f0:	1a18      	subs	r0, r3, r0
 80130f2:	8620      	strh	r0, [r4, #48]	; 0x30
 80130f4:	4620      	mov	r0, r4
 80130f6:	f7ff fe90 	bl	8012e1a <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 80130fa:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
 80130fe:	3301      	adds	r3, #1
 8013100:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 8013104:	bd10      	pop	{r4, pc}
 8013106:	2304      	movs	r3, #4
 8013108:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 801310c:	2300      	movs	r3, #0
 801310e:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 8013112:	8623      	strh	r3, [r4, #48]	; 0x30
 8013114:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8013118:	f7ff ffcf 	bl	80130ba <_ZN8touchgfx14SwipeContainer13PageIndicator7goRightEv>
 801311c:	e7ea      	b.n	80130f4 <_ZN8touchgfx14SwipeContainer11animateLeftEv+0x22>

0801311e <_ZN8touchgfx14SwipeContainer13PageIndicator6goLeftEv>:
 801311e:	f890 2088 	ldrb.w	r2, [r0, #136]	; 0x88
 8013122:	f890 1089 	ldrb.w	r1, [r0, #137]	; 0x89
 8013126:	4411      	add	r1, r2
 8013128:	3901      	subs	r1, #1
 801312a:	fb91 f3f2 	sdiv	r3, r1, r2
 801312e:	fb02 1113 	mls	r1, r2, r3, r1
 8013132:	b2c9      	uxtb	r1, r1
 8013134:	f7ff bf5e 	b.w	8012ff4 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>

08013138 <_ZN8touchgfx14SwipeContainer12animateRightEv>:
 8013138:	b510      	push	{r4, lr}
 801313a:	4604      	mov	r4, r0
 801313c:	f890 002d 	ldrb.w	r0, [r0, #45]	; 0x2d
 8013140:	280a      	cmp	r0, #10
 8013142:	d813      	bhi.n	801316c <_ZN8touchgfx14SwipeContainer12animateRightEv+0x34>
 8013144:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 8013146:	8922      	ldrh	r2, [r4, #8]
 8013148:	1ad2      	subs	r2, r2, r3
 801314a:	b212      	sxth	r2, r2
 801314c:	230a      	movs	r3, #10
 801314e:	2100      	movs	r1, #0
 8013150:	f007 fa9e 	bl	801a690 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
 8013154:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 8013156:	4418      	add	r0, r3
 8013158:	8620      	strh	r0, [r4, #48]	; 0x30
 801315a:	4620      	mov	r0, r4
 801315c:	f7ff fe5d 	bl	8012e1a <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 8013160:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
 8013164:	3301      	adds	r3, #1
 8013166:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 801316a:	bd10      	pop	{r4, pc}
 801316c:	2304      	movs	r3, #4
 801316e:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 8013172:	2300      	movs	r3, #0
 8013174:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 8013178:	8623      	strh	r3, [r4, #48]	; 0x30
 801317a:	f104 0068 	add.w	r0, r4, #104	; 0x68
 801317e:	f7ff ffce 	bl	801311e <_ZN8touchgfx14SwipeContainer13PageIndicator6goLeftEv>
 8013182:	e7ea      	b.n	801315a <_ZN8touchgfx14SwipeContainer12animateRightEv+0x22>

08013184 <_ZN8touchgfx14SwipeContainer15handleTickEventEv>:
 8013184:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8013188:	b90b      	cbnz	r3, 801318e <_ZN8touchgfx14SwipeContainer15handleTickEventEv+0xa>
 801318a:	f7ff be73 	b.w	8012e74 <_ZN8touchgfx14SwipeContainer25animateSwipeCancelledLeftEv>
 801318e:	2b01      	cmp	r3, #1
 8013190:	d101      	bne.n	8013196 <_ZN8touchgfx14SwipeContainer15handleTickEventEv+0x12>
 8013192:	f7ff be91 	b.w	8012eb8 <_ZN8touchgfx14SwipeContainer26animateSwipeCancelledRightEv>
 8013196:	2b02      	cmp	r3, #2
 8013198:	d101      	bne.n	801319e <_ZN8touchgfx14SwipeContainer15handleTickEventEv+0x1a>
 801319a:	f7ff bf9a 	b.w	80130d2 <_ZN8touchgfx14SwipeContainer11animateLeftEv>
 801319e:	2b03      	cmp	r3, #3
 80131a0:	d101      	bne.n	80131a6 <_ZN8touchgfx14SwipeContainer15handleTickEventEv+0x22>
 80131a2:	f7ff bfc9 	b.w	8013138 <_ZN8touchgfx14SwipeContainer12animateRightEv>
 80131a6:	4770      	bx	lr

080131a8 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh>:
 80131a8:	b510      	push	{r4, lr}
 80131aa:	f890 30f0 	ldrb.w	r3, [r0, #240]	; 0xf0
 80131ae:	428b      	cmp	r3, r1
 80131b0:	4604      	mov	r4, r0
 80131b2:	d907      	bls.n	80131c4 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh+0x1c>
 80131b4:	3068      	adds	r0, #104	; 0x68
 80131b6:	f7ff ff1d 	bl	8012ff4 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>
 80131ba:	4620      	mov	r0, r4
 80131bc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80131c0:	f7ff be2b 	b.w	8012e1a <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 80131c4:	bd10      	pop	{r4, pc}

080131c6 <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>:
 80131c6:	b538      	push	{r3, r4, r5, lr}
 80131c8:	4604      	mov	r4, r0
 80131ca:	3038      	adds	r0, #56	; 0x38
 80131cc:	460d      	mov	r5, r1
 80131ce:	f000 f963 	bl	8013498 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
 80131d2:	f894 10f0 	ldrb.w	r1, [r4, #240]	; 0xf0
 80131d6:	3101      	adds	r1, #1
 80131d8:	f104 0068 	add.w	r0, r4, #104	; 0x68
 80131dc:	b2c9      	uxtb	r1, r1
 80131de:	f7ff ff28 	bl	8013032 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh>
 80131e2:	f894 10f1 	ldrb.w	r1, [r4, #241]	; 0xf1
 80131e6:	4620      	mov	r0, r4
 80131e8:	f7ff ffde 	bl	80131a8 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh>
 80131ec:	f9b5 200a 	ldrsh.w	r2, [r5, #10]
 80131f0:	f9b5 1008 	ldrsh.w	r1, [r5, #8]
 80131f4:	4620      	mov	r0, r4
 80131f6:	f7ff fa69 	bl	80126cc <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80131fa:	bd38      	pop	{r3, r4, r5, pc}

080131fc <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE>:
 80131fc:	b538      	push	{r3, r4, r5, lr}
 80131fe:	f890 30f0 	ldrb.w	r3, [r0, #240]	; 0xf0
 8013202:	4604      	mov	r4, r0
 8013204:	b1e3      	cbz	r3, 8013240 <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0x44>
 8013206:	6e03      	ldr	r3, [r0, #96]	; 0x60
 8013208:	b1d3      	cbz	r3, 8013240 <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0x44>
 801320a:	428b      	cmp	r3, r1
 801320c:	d125      	bne.n	801325a <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0x5e>
 801320e:	4619      	mov	r1, r3
 8013210:	f104 0038 	add.w	r0, r4, #56	; 0x38
 8013214:	f000 f9c0 	bl	8013598 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE>
 8013218:	f894 10f0 	ldrb.w	r1, [r4, #240]	; 0xf0
 801321c:	3901      	subs	r1, #1
 801321e:	b2c9      	uxtb	r1, r1
 8013220:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8013224:	f7ff ff05 	bl	8013032 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh>
 8013228:	f894 50f0 	ldrb.w	r5, [r4, #240]	; 0xf0
 801322c:	b94d      	cbnz	r5, 8013242 <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0x46>
 801322e:	6823      	ldr	r3, [r4, #0]
 8013230:	4620      	mov	r0, r4
 8013232:	695b      	ldr	r3, [r3, #20]
 8013234:	4798      	blx	r3
 8013236:	462a      	mov	r2, r5
 8013238:	4629      	mov	r1, r5
 801323a:	4620      	mov	r0, r4
 801323c:	f7ff fa46 	bl	80126cc <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8013240:	bd38      	pop	{r3, r4, r5, pc}
 8013242:	f894 10f1 	ldrb.w	r1, [r4, #241]	; 0xf1
 8013246:	3d01      	subs	r5, #1
 8013248:	42a9      	cmp	r1, r5
 801324a:	bfa8      	it	ge
 801324c:	4629      	movge	r1, r5
 801324e:	4620      	mov	r0, r4
 8013250:	b2c9      	uxtb	r1, r1
 8013252:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8013256:	f7ff bfa7 	b.w	80131a8 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh>
 801325a:	699b      	ldr	r3, [r3, #24]
 801325c:	e7d4      	b.n	8013208 <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0xc>

0801325e <_ZNK8touchgfx10ListLayout12getDirectionEv>:
 801325e:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8013262:	4770      	bx	lr

08013264 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE>:
 8013264:	b538      	push	{r3, r4, r5, lr}
 8013266:	7882      	ldrb	r2, [r0, #2]
 8013268:	6843      	ldr	r3, [r0, #4]
 801326a:	4604      	mov	r4, r0
 801326c:	460d      	mov	r5, r1
 801326e:	b98a      	cbnz	r2, 8013294 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x30>
 8013270:	4299      	cmp	r1, r3
 8013272:	d101      	bne.n	8013278 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x14>
 8013274:	2301      	movs	r3, #1
 8013276:	7083      	strb	r3, [r0, #2]
 8013278:	6863      	ldr	r3, [r4, #4]
 801327a:	42ab      	cmp	r3, r5
 801327c:	d009      	beq.n	8013292 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x2e>
 801327e:	7a23      	ldrb	r3, [r4, #8]
 8013280:	2b01      	cmp	r3, #1
 8013282:	d11b      	bne.n	80132bc <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x58>
 8013284:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
 8013288:	f9b4 2000 	ldrsh.w	r2, [r4]
 801328c:	429a      	cmp	r2, r3
 801328e:	bfb8      	it	lt
 8013290:	8023      	strhlt	r3, [r4, #0]
 8013292:	bd38      	pop	{r3, r4, r5, pc}
 8013294:	7a02      	ldrb	r2, [r0, #8]
 8013296:	2a01      	cmp	r2, #1
 8013298:	d108      	bne.n	80132ac <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x48>
 801329a:	895b      	ldrh	r3, [r3, #10]
 801329c:	88c9      	ldrh	r1, [r1, #6]
 801329e:	1ac9      	subs	r1, r1, r3
 80132a0:	682b      	ldr	r3, [r5, #0]
 80132a2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80132a4:	b209      	sxth	r1, r1
 80132a6:	4628      	mov	r0, r5
 80132a8:	4798      	blx	r3
 80132aa:	e7e5      	b.n	8013278 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x14>
 80132ac:	2a02      	cmp	r2, #2
 80132ae:	d1e3      	bne.n	8013278 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x14>
 80132b0:	891b      	ldrh	r3, [r3, #8]
 80132b2:	8889      	ldrh	r1, [r1, #4]
 80132b4:	1ac9      	subs	r1, r1, r3
 80132b6:	682b      	ldr	r3, [r5, #0]
 80132b8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80132ba:	e7f3      	b.n	80132a4 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x40>
 80132bc:	2b02      	cmp	r3, #2
 80132be:	d1e8      	bne.n	8013292 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x2e>
 80132c0:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
 80132c4:	e7e0      	b.n	8013288 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x24>

080132c6 <_ZN8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvED1Ev>:
 80132c6:	4770      	bx	lr

080132c8 <_ZN8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvED1Ev>:
 80132c8:	4770      	bx	lr

080132ca <_ZN8touchgfx10ListLayoutD1Ev>:
 80132ca:	4770      	bx	lr

080132cc <_ZN8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7executeES3_>:
 80132cc:	b430      	push	{r4, r5}
 80132ce:	68c5      	ldr	r5, [r0, #12]
 80132d0:	6844      	ldr	r4, [r0, #4]
 80132d2:	106a      	asrs	r2, r5, #1
 80132d4:	4603      	mov	r3, r0
 80132d6:	07ed      	lsls	r5, r5, #31
 80132d8:	eb04 0002 	add.w	r0, r4, r2
 80132dc:	689b      	ldr	r3, [r3, #8]
 80132de:	bf48      	it	mi
 80132e0:	58a2      	ldrmi	r2, [r4, r2]
 80132e2:	bc30      	pop	{r4, r5}
 80132e4:	bf48      	it	mi
 80132e6:	58d3      	ldrmi	r3, [r2, r3]
 80132e8:	4718      	bx	r3

080132ea <_ZNK8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7isValidEv>:
 80132ea:	6843      	ldr	r3, [r0, #4]
 80132ec:	b12b      	cbz	r3, 80132fa <_ZNK8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7isValidEv+0x10>
 80132ee:	6883      	ldr	r3, [r0, #8]
 80132f0:	b92b      	cbnz	r3, 80132fe <_ZNK8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7isValidEv+0x14>
 80132f2:	68c0      	ldr	r0, [r0, #12]
 80132f4:	f000 0001 	and.w	r0, r0, #1
 80132f8:	4770      	bx	lr
 80132fa:	4618      	mov	r0, r3
 80132fc:	4770      	bx	lr
 80132fe:	2001      	movs	r0, #1
 8013300:	4770      	bx	lr

08013302 <_ZN8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7executeES3_>:
 8013302:	b430      	push	{r4, r5}
 8013304:	68c5      	ldr	r5, [r0, #12]
 8013306:	6844      	ldr	r4, [r0, #4]
 8013308:	106a      	asrs	r2, r5, #1
 801330a:	4603      	mov	r3, r0
 801330c:	07ed      	lsls	r5, r5, #31
 801330e:	eb04 0002 	add.w	r0, r4, r2
 8013312:	689b      	ldr	r3, [r3, #8]
 8013314:	bf48      	it	mi
 8013316:	58a2      	ldrmi	r2, [r4, r2]
 8013318:	bc30      	pop	{r4, r5}
 801331a:	bf48      	it	mi
 801331c:	58d3      	ldrmi	r3, [r2, r3]
 801331e:	4718      	bx	r3

08013320 <_ZNK8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7isValidEv>:
 8013320:	6843      	ldr	r3, [r0, #4]
 8013322:	b12b      	cbz	r3, 8013330 <_ZNK8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7isValidEv+0x10>
 8013324:	6883      	ldr	r3, [r0, #8]
 8013326:	b92b      	cbnz	r3, 8013334 <_ZNK8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7isValidEv+0x14>
 8013328:	68c0      	ldr	r0, [r0, #12]
 801332a:	f000 0001 	and.w	r0, r0, #1
 801332e:	4770      	bx	lr
 8013330:	4618      	mov	r0, r3
 8013332:	4770      	bx	lr
 8013334:	2001      	movs	r0, #1
 8013336:	4770      	bx	lr

08013338 <_ZN8touchgfx10ListLayoutD0Ev>:
 8013338:	b510      	push	{r4, lr}
 801333a:	2130      	movs	r1, #48	; 0x30
 801333c:	4604      	mov	r4, r0
 801333e:	f019 fc20 	bl	802cb82 <_ZdlPvj>
 8013342:	4620      	mov	r0, r4
 8013344:	bd10      	pop	{r4, pc}

08013346 <_ZN8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvED0Ev>:
 8013346:	b510      	push	{r4, lr}
 8013348:	2110      	movs	r1, #16
 801334a:	4604      	mov	r4, r0
 801334c:	f019 fc19 	bl	802cb82 <_ZdlPvj>
 8013350:	4620      	mov	r0, r4
 8013352:	bd10      	pop	{r4, pc}

08013354 <_ZN8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvED0Ev>:
 8013354:	b510      	push	{r4, lr}
 8013356:	2110      	movs	r1, #16
 8013358:	4604      	mov	r4, r0
 801335a:	f019 fc12 	bl	802cb82 <_ZdlPvj>
 801335e:	4620      	mov	r0, r4
 8013360:	bd10      	pop	{r4, pc}

08013362 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE>:
 8013362:	4603      	mov	r3, r0
 8013364:	4608      	mov	r0, r1
 8013366:	789a      	ldrb	r2, [r3, #2]
 8013368:	b992      	cbnz	r2, 8013390 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x2e>
 801336a:	685a      	ldr	r2, [r3, #4]
 801336c:	428a      	cmp	r2, r1
 801336e:	d102      	bne.n	8013376 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x14>
 8013370:	2201      	movs	r2, #1
 8013372:	709a      	strb	r2, [r3, #2]
 8013374:	4770      	bx	lr
 8013376:	7a1a      	ldrb	r2, [r3, #8]
 8013378:	2a01      	cmp	r2, #1
 801337a:	d104      	bne.n	8013386 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x24>
 801337c:	88ca      	ldrh	r2, [r1, #6]
 801337e:	8949      	ldrh	r1, [r1, #10]
 8013380:	440a      	add	r2, r1
 8013382:	801a      	strh	r2, [r3, #0]
 8013384:	4770      	bx	lr
 8013386:	2a02      	cmp	r2, #2
 8013388:	d116      	bne.n	80133b8 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x56>
 801338a:	888a      	ldrh	r2, [r1, #4]
 801338c:	8909      	ldrh	r1, [r1, #8]
 801338e:	e7f7      	b.n	8013380 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x1e>
 8013390:	7a1a      	ldrb	r2, [r3, #8]
 8013392:	2a01      	cmp	r2, #1
 8013394:	d107      	bne.n	80133a6 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x44>
 8013396:	685b      	ldr	r3, [r3, #4]
 8013398:	8959      	ldrh	r1, [r3, #10]
 801339a:	88c3      	ldrh	r3, [r0, #6]
 801339c:	4419      	add	r1, r3
 801339e:	6803      	ldr	r3, [r0, #0]
 80133a0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80133a2:	b209      	sxth	r1, r1
 80133a4:	4718      	bx	r3
 80133a6:	2a02      	cmp	r2, #2
 80133a8:	d106      	bne.n	80133b8 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x56>
 80133aa:	685b      	ldr	r3, [r3, #4]
 80133ac:	8919      	ldrh	r1, [r3, #8]
 80133ae:	8883      	ldrh	r3, [r0, #4]
 80133b0:	4419      	add	r1, r3
 80133b2:	6803      	ldr	r3, [r0, #0]
 80133b4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80133b6:	e7f4      	b.n	80133a2 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x40>
 80133b8:	4770      	bx	lr

080133ba <_ZN8touchgfx10ListLayout9removeAllEv>:
 80133ba:	2200      	movs	r2, #0
 80133bc:	b510      	push	{r4, lr}
 80133be:	4611      	mov	r1, r2
 80133c0:	4604      	mov	r4, r0
 80133c2:	85c2      	strh	r2, [r0, #46]	; 0x2e
 80133c4:	f7ff f982 	bl	80126cc <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80133c8:	4620      	mov	r0, r4
 80133ca:	f7ff fa26 	bl	801281a <_ZN8touchgfx9Container9removeAllEv>
 80133ce:	6960      	ldr	r0, [r4, #20]
 80133d0:	b120      	cbz	r0, 80133dc <_ZN8touchgfx10ListLayout9removeAllEv+0x22>
 80133d2:	6803      	ldr	r3, [r0, #0]
 80133d4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80133d8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80133da:	4718      	bx	r3
 80133dc:	bd10      	pop	{r4, pc}
	...

080133e0 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE>:
 80133e0:	b530      	push	{r4, r5, lr}
 80133e2:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80133e6:	428b      	cmp	r3, r1
 80133e8:	b085      	sub	sp, #20
 80133ea:	4604      	mov	r4, r0
 80133ec:	d017      	beq.n	801341e <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x3e>
 80133ee:	2500      	movs	r5, #0
 80133f0:	f880 102c 	strb.w	r1, [r0, #44]	; 0x2c
 80133f4:	85c5      	strh	r5, [r0, #46]	; 0x2e
 80133f6:	462a      	mov	r2, r5
 80133f8:	4629      	mov	r1, r5
 80133fa:	f7ff f967 	bl	80126cc <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80133fe:	4b09      	ldr	r3, [pc, #36]	; (8013424 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x44>)
 8013400:	e9cd 3400 	strd	r3, r4, [sp]
 8013404:	4b08      	ldr	r3, [pc, #32]	; (8013428 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x48>)
 8013406:	e9cd 3502 	strd	r3, r5, [sp, #8]
 801340a:	6823      	ldr	r3, [r4, #0]
 801340c:	4620      	mov	r0, r4
 801340e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8013410:	4669      	mov	r1, sp
 8013412:	4798      	blx	r3
 8013414:	6960      	ldr	r0, [r4, #20]
 8013416:	b110      	cbz	r0, 801341e <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x3e>
 8013418:	6803      	ldr	r3, [r0, #0]
 801341a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801341c:	4798      	blx	r3
 801341e:	b005      	add	sp, #20
 8013420:	bd30      	pop	{r4, r5, pc}
 8013422:	bf00      	nop
 8013424:	08031694 	.word	0x08031694
 8013428:	08013491 	.word	0x08013491

0801342c <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs>:
 801342c:	b538      	push	{r3, r4, r5, lr}
 801342e:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8013432:	2b01      	cmp	r3, #1
 8013434:	460d      	mov	r5, r1
 8013436:	4604      	mov	r4, r0
 8013438:	4611      	mov	r1, r2
 801343a:	d002      	beq.n	8013442 <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x16>
 801343c:	2b02      	cmp	r3, #2
 801343e:	d015      	beq.n	801346c <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x40>
 8013440:	bd38      	pop	{r3, r4, r5, pc}
 8013442:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
 8013446:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 801344a:	429a      	cmp	r2, r3
 801344c:	bfb8      	it	lt
 801344e:	8103      	strhlt	r3, [r0, #8]
 8013450:	896a      	ldrh	r2, [r5, #10]
 8013452:	8943      	ldrh	r3, [r0, #10]
 8013454:	4413      	add	r3, r2
 8013456:	8143      	strh	r3, [r0, #10]
 8013458:	460a      	mov	r2, r1
 801345a:	4628      	mov	r0, r5
 801345c:	2100      	movs	r1, #0
 801345e:	f7f0 f909 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
 8013462:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 8013464:	896a      	ldrh	r2, [r5, #10]
 8013466:	4413      	add	r3, r2
 8013468:	85e3      	strh	r3, [r4, #46]	; 0x2e
 801346a:	e7e9      	b.n	8013440 <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x14>
 801346c:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
 8013470:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8013474:	429a      	cmp	r2, r3
 8013476:	bfb8      	it	lt
 8013478:	8143      	strhlt	r3, [r0, #10]
 801347a:	892a      	ldrh	r2, [r5, #8]
 801347c:	8903      	ldrh	r3, [r0, #8]
 801347e:	4413      	add	r3, r2
 8013480:	8103      	strh	r3, [r0, #8]
 8013482:	2200      	movs	r2, #0
 8013484:	4628      	mov	r0, r5
 8013486:	f7f0 f8f5 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
 801348a:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 801348c:	892a      	ldrh	r2, [r5, #8]
 801348e:	e7ea      	b.n	8013466 <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x3a>

08013490 <_ZN8touchgfx10ListLayout18internalAddElementERNS_8DrawableE>:
 8013490:	f9b0 202e 	ldrsh.w	r2, [r0, #46]	; 0x2e
 8013494:	f7ff bfca 	b.w	801342c <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs>

08013498 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>:
 8013498:	b570      	push	{r4, r5, r6, lr}
 801349a:	4604      	mov	r4, r0
 801349c:	460d      	mov	r5, r1
 801349e:	f7ff fff7 	bl	8013490 <_ZN8touchgfx10ListLayout18internalAddElementERNS_8DrawableE>
 80134a2:	4620      	mov	r0, r4
 80134a4:	4629      	mov	r1, r5
 80134a6:	f7ff f9ab 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80134aa:	6960      	ldr	r0, [r4, #20]
 80134ac:	b120      	cbz	r0, 80134b8 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE+0x20>
 80134ae:	6803      	ldr	r3, [r0, #0]
 80134b0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80134b4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80134b6:	4718      	bx	r3
 80134b8:	bd70      	pop	{r4, r5, r6, pc}
	...

080134bc <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_>:
 80134bc:	b530      	push	{r4, r5, lr}
 80134be:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80134c0:	b089      	sub	sp, #36	; 0x24
 80134c2:	4604      	mov	r4, r0
 80134c4:	4615      	mov	r5, r2
 80134c6:	b92b      	cbnz	r3, 80134d4 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x18>
 80134c8:	6803      	ldr	r3, [r0, #0]
 80134ca:	4611      	mov	r1, r2
 80134cc:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80134ce:	4798      	blx	r3
 80134d0:	b009      	add	sp, #36	; 0x24
 80134d2:	bd30      	pop	{r4, r5, pc}
 80134d4:	f7ff f9ec 	bl	80128b0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>
 80134d8:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
 80134dc:	f88d 200c 	strb.w	r2, [sp, #12]
 80134e0:	4a0f      	ldr	r2, [pc, #60]	; (8013520 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x64>)
 80134e2:	9204      	str	r2, [sp, #16]
 80134e4:	aa01      	add	r2, sp, #4
 80134e6:	9205      	str	r2, [sp, #20]
 80134e8:	4a0e      	ldr	r2, [pc, #56]	; (8013524 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x68>)
 80134ea:	9502      	str	r5, [sp, #8]
 80134ec:	2300      	movs	r3, #0
 80134ee:	e9cd 2306 	strd	r2, r3, [sp, #24]
 80134f2:	f8ad 3004 	strh.w	r3, [sp, #4]
 80134f6:	f88d 3006 	strb.w	r3, [sp, #6]
 80134fa:	6823      	ldr	r3, [r4, #0]
 80134fc:	a904      	add	r1, sp, #16
 80134fe:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8013500:	4620      	mov	r0, r4
 8013502:	4798      	blx	r3
 8013504:	4620      	mov	r0, r4
 8013506:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801350a:	4629      	mov	r1, r5
 801350c:	f7ff ff8e 	bl	801342c <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs>
 8013510:	6960      	ldr	r0, [r4, #20]
 8013512:	2800      	cmp	r0, #0
 8013514:	d0dc      	beq.n	80134d0 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x14>
 8013516:	6803      	ldr	r3, [r0, #0]
 8013518:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801351a:	4798      	blx	r3
 801351c:	e7d8      	b.n	80134d0 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x14>
 801351e:	bf00      	nop
 8013520:	080316ac 	.word	0x080316ac
 8013524:	08013363 	.word	0x08013363

08013528 <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs>:
 8013528:	b538      	push	{r3, r4, r5, lr}
 801352a:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 801352e:	2b01      	cmp	r3, #1
 8013530:	4604      	mov	r4, r0
 8013532:	460d      	mov	r5, r1
 8013534:	d002      	beq.n	801353c <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x14>
 8013536:	2b02      	cmp	r3, #2
 8013538:	d018      	beq.n	801356c <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x44>
 801353a:	bd38      	pop	{r3, r4, r5, pc}
 801353c:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8013540:	4293      	cmp	r3, r2
 8013542:	bfc8      	it	gt
 8013544:	8102      	strhgt	r2, [r0, #8]
 8013546:	894a      	ldrh	r2, [r1, #10]
 8013548:	8943      	ldrh	r3, [r0, #10]
 801354a:	1a9b      	subs	r3, r3, r2
 801354c:	8143      	strh	r3, [r0, #10]
 801354e:	680b      	ldr	r3, [r1, #0]
 8013550:	4628      	mov	r0, r5
 8013552:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8013554:	2100      	movs	r1, #0
 8013556:	4798      	blx	r3
 8013558:	682b      	ldr	r3, [r5, #0]
 801355a:	2100      	movs	r1, #0
 801355c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801355e:	4628      	mov	r0, r5
 8013560:	4798      	blx	r3
 8013562:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 8013564:	896a      	ldrh	r2, [r5, #10]
 8013566:	1a9b      	subs	r3, r3, r2
 8013568:	85e3      	strh	r3, [r4, #46]	; 0x2e
 801356a:	e7e6      	b.n	801353a <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x12>
 801356c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8013570:	4293      	cmp	r3, r2
 8013572:	bfc8      	it	gt
 8013574:	8142      	strhgt	r2, [r0, #10]
 8013576:	890a      	ldrh	r2, [r1, #8]
 8013578:	8903      	ldrh	r3, [r0, #8]
 801357a:	1a9b      	subs	r3, r3, r2
 801357c:	8103      	strh	r3, [r0, #8]
 801357e:	680b      	ldr	r3, [r1, #0]
 8013580:	4628      	mov	r0, r5
 8013582:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8013584:	2100      	movs	r1, #0
 8013586:	4798      	blx	r3
 8013588:	682b      	ldr	r3, [r5, #0]
 801358a:	2100      	movs	r1, #0
 801358c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801358e:	4628      	mov	r0, r5
 8013590:	4798      	blx	r3
 8013592:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 8013594:	892a      	ldrh	r2, [r5, #8]
 8013596:	e7e6      	b.n	8013566 <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x3e>

08013598 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE>:
 8013598:	b530      	push	{r4, r5, lr}
 801359a:	b089      	sub	sp, #36	; 0x24
 801359c:	f890 202c 	ldrb.w	r2, [r0, #44]	; 0x2c
 80135a0:	f88d 200c 	strb.w	r2, [sp, #12]
 80135a4:	4a13      	ldr	r2, [pc, #76]	; (80135f4 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x5c>)
 80135a6:	9204      	str	r2, [sp, #16]
 80135a8:	aa01      	add	r2, sp, #4
 80135aa:	9205      	str	r2, [sp, #20]
 80135ac:	4a12      	ldr	r2, [pc, #72]	; (80135f8 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x60>)
 80135ae:	9102      	str	r1, [sp, #8]
 80135b0:	2300      	movs	r3, #0
 80135b2:	f8ad 3004 	strh.w	r3, [sp, #4]
 80135b6:	f88d 3006 	strb.w	r3, [sp, #6]
 80135ba:	e9cd 2306 	strd	r2, r3, [sp, #24]
 80135be:	6803      	ldr	r3, [r0, #0]
 80135c0:	460d      	mov	r5, r1
 80135c2:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80135c4:	a904      	add	r1, sp, #16
 80135c6:	4604      	mov	r4, r0
 80135c8:	4798      	blx	r3
 80135ca:	f89d 3006 	ldrb.w	r3, [sp, #6]
 80135ce:	b14b      	cbz	r3, 80135e4 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x4c>
 80135d0:	4629      	mov	r1, r5
 80135d2:	4620      	mov	r0, r4
 80135d4:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 80135d8:	f7ff ffa6 	bl	8013528 <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs>
 80135dc:	4629      	mov	r1, r5
 80135de:	4620      	mov	r0, r4
 80135e0:	f7ff f94f 	bl	8012882 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 80135e4:	6960      	ldr	r0, [r4, #20]
 80135e6:	b110      	cbz	r0, 80135ee <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x56>
 80135e8:	6803      	ldr	r3, [r0, #0]
 80135ea:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80135ec:	4798      	blx	r3
 80135ee:	b009      	add	sp, #36	; 0x24
 80135f0:	bd30      	pop	{r4, r5, pc}
 80135f2:	bf00      	nop
 80135f4:	080316ac 	.word	0x080316ac
 80135f8:	08013265 	.word	0x08013265

080135fc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 80135fc:	b513      	push	{r0, r1, r4, lr}
 80135fe:	6803      	ldr	r3, [r0, #0]
 8013600:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 8013604:	2300      	movs	r3, #0
 8013606:	e9cd 3300 	strd	r3, r3, [sp]
 801360a:	466b      	mov	r3, sp
 801360c:	47a0      	blx	r4
 801360e:	b002      	add	sp, #8
 8013610:	bd10      	pop	{r4, pc}

08013612 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 8013612:	2301      	movs	r3, #1
 8013614:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8013618:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 801361c:	4770      	bx	lr

0801361e <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 801361e:	2301      	movs	r3, #1
 8013620:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8013624:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 8013628:	4770      	bx	lr

0801362a <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 801362a:	6843      	ldr	r3, [r0, #4]
 801362c:	2201      	movs	r2, #1
 801362e:	725a      	strb	r2, [r3, #9]
 8013630:	6840      	ldr	r0, [r0, #4]
 8013632:	6803      	ldr	r3, [r0, #0]
 8013634:	691b      	ldr	r3, [r3, #16]
 8013636:	4718      	bx	r3

08013638 <_ZN8touchgfx3HAL8flushDMAEv>:
 8013638:	6840      	ldr	r0, [r0, #4]
 801363a:	6803      	ldr	r3, [r0, #0]
 801363c:	689b      	ldr	r3, [r3, #8]
 801363e:	4718      	bx	r3

08013640 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 8013640:	b530      	push	{r4, r5, lr}
 8013642:	b08b      	sub	sp, #44	; 0x2c
 8013644:	6804      	ldr	r4, [r0, #0]
 8013646:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 801364a:	9509      	str	r5, [sp, #36]	; 0x24
 801364c:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 8013650:	9508      	str	r5, [sp, #32]
 8013652:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8013656:	9507      	str	r5, [sp, #28]
 8013658:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 801365c:	9506      	str	r5, [sp, #24]
 801365e:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 8013662:	9505      	str	r5, [sp, #20]
 8013664:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8013668:	9504      	str	r5, [sp, #16]
 801366a:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 801366e:	9503      	str	r5, [sp, #12]
 8013670:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 8013674:	9502      	str	r5, [sp, #8]
 8013676:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 801367a:	e9cd 3500 	strd	r3, r5, [sp]
 801367e:	4613      	mov	r3, r2
 8013680:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 8013682:	2200      	movs	r2, #0
 8013684:	47a0      	blx	r4
 8013686:	b00b      	add	sp, #44	; 0x2c
 8013688:	bd30      	pop	{r4, r5, pc}
	...

0801368c <_ZN8touchgfx3HAL10beginFrameEv>:
 801368c:	4b04      	ldr	r3, [pc, #16]	; (80136a0 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 801368e:	781b      	ldrb	r3, [r3, #0]
 8013690:	b123      	cbz	r3, 801369c <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 8013692:	f890 006e 	ldrb.w	r0, [r0, #110]	; 0x6e
 8013696:	f080 0001 	eor.w	r0, r0, #1
 801369a:	4770      	bx	lr
 801369c:	2001      	movs	r0, #1
 801369e:	4770      	bx	lr
 80136a0:	2001383a 	.word	0x2001383a

080136a4 <_ZN8touchgfx3HAL8endFrameEv>:
 80136a4:	b510      	push	{r4, lr}
 80136a6:	4604      	mov	r4, r0
 80136a8:	6840      	ldr	r0, [r0, #4]
 80136aa:	6803      	ldr	r3, [r0, #0]
 80136ac:	689b      	ldr	r3, [r3, #8]
 80136ae:	4798      	blx	r3
 80136b0:	f894 306d 	ldrb.w	r3, [r4, #109]	; 0x6d
 80136b4:	b113      	cbz	r3, 80136bc <_ZN8touchgfx3HAL8endFrameEv+0x18>
 80136b6:	2301      	movs	r3, #1
 80136b8:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 80136bc:	bd10      	pop	{r4, pc}

080136be <_ZN8touchgfx3HAL10initializeEv>:
 80136be:	b510      	push	{r4, lr}
 80136c0:	4604      	mov	r4, r0
 80136c2:	f7ef fb3f 	bl	8002d44 <_ZN8touchgfx10OSWrappers10initializeEv>
 80136c6:	f7ef fa4b 	bl	8002b60 <_ZN8touchgfx4GPIO4initEv>
 80136ca:	6860      	ldr	r0, [r4, #4]
 80136cc:	6803      	ldr	r3, [r0, #0]
 80136ce:	68db      	ldr	r3, [r3, #12]
 80136d0:	4798      	blx	r3
 80136d2:	68e0      	ldr	r0, [r4, #12]
 80136d4:	6803      	ldr	r3, [r0, #0]
 80136d6:	689b      	ldr	r3, [r3, #8]
 80136d8:	4798      	blx	r3
 80136da:	6823      	ldr	r3, [r4, #0]
 80136dc:	4620      	mov	r0, r4
 80136de:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80136e0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80136e4:	4718      	bx	r3
	...

080136e8 <_ZN8touchgfx3HAL4tickEv>:
 80136e8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80136ea:	6803      	ldr	r3, [r0, #0]
 80136ec:	4d5b      	ldr	r5, [pc, #364]	; (801385c <_ZN8touchgfx3HAL4tickEv+0x174>)
 80136ee:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 80136f2:	4604      	mov	r4, r0
 80136f4:	4798      	blx	r3
 80136f6:	2800      	cmp	r0, #0
 80136f8:	f000 8095 	beq.w	8013826 <_ZN8touchgfx3HAL4tickEv+0x13e>
 80136fc:	2001      	movs	r0, #1
 80136fe:	f7ef f9e1 	bl	8002ac4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8013702:	f894 306a 	ldrb.w	r3, [r4, #106]	; 0x6a
 8013706:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 801370a:	f894 3079 	ldrb.w	r3, [r4, #121]	; 0x79
 801370e:	2600      	movs	r6, #0
 8013710:	f884 606a 	strb.w	r6, [r4, #106]	; 0x6a
 8013714:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 8013718:	b133      	cbz	r3, 8013728 <_ZN8touchgfx3HAL4tickEv+0x40>
 801371a:	6823      	ldr	r3, [r4, #0]
 801371c:	4620      	mov	r0, r4
 801371e:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 8013722:	4798      	blx	r3
 8013724:	f884 6079 	strb.w	r6, [r4, #121]	; 0x79
 8013728:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 801372c:	6862      	ldr	r2, [r4, #4]
 801372e:	f083 0301 	eor.w	r3, r3, #1
 8013732:	7253      	strb	r3, [r2, #9]
 8013734:	2601      	movs	r6, #1
 8013736:	702e      	strb	r6, [r5, #0]
 8013738:	f005 f93a 	bl	80189b0 <_ZN8touchgfx11Application11getInstanceEv>
 801373c:	6803      	ldr	r3, [r0, #0]
 801373e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8013740:	4798      	blx	r3
 8013742:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 8013746:	b90b      	cbnz	r3, 801374c <_ZN8touchgfx3HAL4tickEv+0x64>
 8013748:	f884 606b 	strb.w	r6, [r4, #107]	; 0x6b
 801374c:	f005 f930 	bl	80189b0 <_ZN8touchgfx11Application11getInstanceEv>
 8013750:	6803      	ldr	r3, [r0, #0]
 8013752:	695b      	ldr	r3, [r3, #20]
 8013754:	4798      	blx	r3
 8013756:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 8013758:	6803      	ldr	r3, [r0, #0]
 801375a:	691b      	ldr	r3, [r3, #16]
 801375c:	4798      	blx	r3
 801375e:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 8013762:	f894 206c 	ldrb.w	r2, [r4, #108]	; 0x6c
 8013766:	3b01      	subs	r3, #1
 8013768:	b2db      	uxtb	r3, r3
 801376a:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 801376e:	b10a      	cbz	r2, 8013774 <_ZN8touchgfx3HAL4tickEv+0x8c>
 8013770:	2b00      	cmp	r3, #0
 8013772:	d1eb      	bne.n	801374c <_ZN8touchgfx3HAL4tickEv+0x64>
 8013774:	4a3a      	ldr	r2, [pc, #232]	; (8013860 <_ZN8touchgfx3HAL4tickEv+0x178>)
 8013776:	f994 1068 	ldrsb.w	r1, [r4, #104]	; 0x68
 801377a:	7813      	ldrb	r3, [r2, #0]
 801377c:	3301      	adds	r3, #1
 801377e:	b25b      	sxtb	r3, r3
 8013780:	4299      	cmp	r1, r3
 8013782:	7013      	strb	r3, [r2, #0]
 8013784:	dc10      	bgt.n	80137a8 <_ZN8touchgfx3HAL4tickEv+0xc0>
 8013786:	68e0      	ldr	r0, [r4, #12]
 8013788:	2300      	movs	r3, #0
 801378a:	7013      	strb	r3, [r2, #0]
 801378c:	6803      	ldr	r3, [r0, #0]
 801378e:	aa03      	add	r2, sp, #12
 8013790:	68db      	ldr	r3, [r3, #12]
 8013792:	a902      	add	r1, sp, #8
 8013794:	4798      	blx	r3
 8013796:	6823      	ldr	r3, [r4, #0]
 8013798:	2800      	cmp	r0, #0
 801379a:	d050      	beq.n	801383e <_ZN8touchgfx3HAL4tickEv+0x156>
 801379c:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 80137a0:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 80137a4:	4620      	mov	r0, r4
 80137a6:	4798      	blx	r3
 80137a8:	6960      	ldr	r0, [r4, #20]
 80137aa:	2300      	movs	r3, #0
 80137ac:	f88d 3007 	strb.w	r3, [sp, #7]
 80137b0:	b158      	cbz	r0, 80137ca <_ZN8touchgfx3HAL4tickEv+0xe2>
 80137b2:	6803      	ldr	r3, [r0, #0]
 80137b4:	f10d 0107 	add.w	r1, sp, #7
 80137b8:	68db      	ldr	r3, [r3, #12]
 80137ba:	4798      	blx	r3
 80137bc:	b128      	cbz	r0, 80137ca <_ZN8touchgfx3HAL4tickEv+0xe2>
 80137be:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 80137c0:	f89d 1007 	ldrb.w	r1, [sp, #7]
 80137c4:	6803      	ldr	r3, [r0, #0]
 80137c6:	68db      	ldr	r3, [r3, #12]
 80137c8:	4798      	blx	r3
 80137ca:	f104 001c 	add.w	r0, r4, #28
 80137ce:	f016 f8c3 	bl	8029958 <_ZN8touchgfx8Gestures4tickEv>
 80137d2:	f894 3070 	ldrb.w	r3, [r4, #112]	; 0x70
 80137d6:	b30b      	cbz	r3, 801381c <_ZN8touchgfx3HAL4tickEv+0x134>
 80137d8:	6920      	ldr	r0, [r4, #16]
 80137da:	6803      	ldr	r3, [r0, #0]
 80137dc:	691b      	ldr	r3, [r3, #16]
 80137de:	4798      	blx	r3
 80137e0:	6f63      	ldr	r3, [r4, #116]	; 0x74
 80137e2:	4606      	mov	r6, r0
 80137e4:	b903      	cbnz	r3, 80137e8 <_ZN8touchgfx3HAL4tickEv+0x100>
 80137e6:	6760      	str	r0, [r4, #116]	; 0x74
 80137e8:	6f63      	ldr	r3, [r4, #116]	; 0x74
 80137ea:	4a1e      	ldr	r2, [pc, #120]	; (8013864 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 80137ec:	1af3      	subs	r3, r6, r3
 80137ee:	4293      	cmp	r3, r2
 80137f0:	d914      	bls.n	801381c <_ZN8touchgfx3HAL4tickEv+0x134>
 80137f2:	6920      	ldr	r0, [r4, #16]
 80137f4:	6803      	ldr	r3, [r0, #0]
 80137f6:	699b      	ldr	r3, [r3, #24]
 80137f8:	4798      	blx	r3
 80137fa:	6f63      	ldr	r3, [r4, #116]	; 0x74
 80137fc:	2264      	movs	r2, #100	; 0x64
 80137fe:	1af3      	subs	r3, r6, r3
 8013800:	fbb3 f3f2 	udiv	r3, r3, r2
 8013804:	fbb0 f0f3 	udiv	r0, r0, r3
 8013808:	2800      	cmp	r0, #0
 801380a:	dc1d      	bgt.n	8013848 <_ZN8touchgfx3HAL4tickEv+0x160>
 801380c:	f884 2069 	strb.w	r2, [r4, #105]	; 0x69
 8013810:	6920      	ldr	r0, [r4, #16]
 8013812:	6803      	ldr	r3, [r0, #0]
 8013814:	2100      	movs	r1, #0
 8013816:	69db      	ldr	r3, [r3, #28]
 8013818:	4798      	blx	r3
 801381a:	6766      	str	r6, [r4, #116]	; 0x74
 801381c:	f005 f8c8 	bl	80189b0 <_ZN8touchgfx11Application11getInstanceEv>
 8013820:	6803      	ldr	r3, [r0, #0]
 8013822:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013824:	4798      	blx	r3
 8013826:	6823      	ldr	r3, [r4, #0]
 8013828:	4620      	mov	r0, r4
 801382a:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 801382e:	4798      	blx	r3
 8013830:	2001      	movs	r0, #1
 8013832:	f7ef f95f 	bl	8002af4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 8013836:	2300      	movs	r3, #0
 8013838:	702b      	strb	r3, [r5, #0]
 801383a:	b004      	add	sp, #16
 801383c:	bd70      	pop	{r4, r5, r6, pc}
 801383e:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 8013842:	4620      	mov	r0, r4
 8013844:	4798      	blx	r3
 8013846:	e7af      	b.n	80137a8 <_ZN8touchgfx3HAL4tickEv+0xc0>
 8013848:	2863      	cmp	r0, #99	; 0x63
 801384a:	bfcb      	itete	gt
 801384c:	2300      	movgt	r3, #0
 801384e:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 8013852:	f884 3069 	strbgt.w	r3, [r4, #105]	; 0x69
 8013856:	f884 0069 	strble.w	r0, [r4, #105]	; 0x69
 801385a:	e7d9      	b.n	8013810 <_ZN8touchgfx3HAL4tickEv+0x128>
 801385c:	20013840 	.word	0x20013840
 8013860:	20013841 	.word	0x20013841
 8013864:	05f5e100 	.word	0x05f5e100

08013868 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 8013868:	b510      	push	{r4, lr}
 801386a:	4604      	mov	r4, r0
 801386c:	f7ef fa9a 	bl	8002da4 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 8013870:	6863      	ldr	r3, [r4, #4]
 8013872:	2200      	movs	r2, #0
 8013874:	729a      	strb	r2, [r3, #10]
 8013876:	bd10      	pop	{r4, pc}

08013878 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 8013878:	65c1      	str	r1, [r0, #92]	; 0x5c
 801387a:	301c      	adds	r0, #28
 801387c:	f016 b86a 	b.w	8029954 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

08013880 <_ZN8touchgfx3HAL5touchEll>:
 8013880:	b530      	push	{r4, r5, lr}
 8013882:	b087      	sub	sp, #28
 8013884:	4604      	mov	r4, r0
 8013886:	a804      	add	r0, sp, #16
 8013888:	e9cd 1204 	strd	r1, r2, [sp, #16]
 801388c:	f004 fe5c 	bl	8018548 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 8013890:	9b04      	ldr	r3, [sp, #16]
 8013892:	f8ad 300c 	strh.w	r3, [sp, #12]
 8013896:	a906      	add	r1, sp, #24
 8013898:	9b05      	ldr	r3, [sp, #20]
 801389a:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 801389e:	a803      	add	r0, sp, #12
 80138a0:	f004 fea4 	bl	80185ec <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 80138a4:	f894 106f 	ldrb.w	r1, [r4, #111]	; 0x6f
 80138a8:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 80138ac:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 80138b0:	f104 001c 	add.w	r0, r4, #28
 80138b4:	b189      	cbz	r1, 80138da <_ZN8touchgfx3HAL5touchEll+0x5a>
 80138b6:	f8b4 5064 	ldrh.w	r5, [r4, #100]	; 0x64
 80138ba:	9300      	str	r3, [sp, #0]
 80138bc:	f8b4 1060 	ldrh.w	r1, [r4, #96]	; 0x60
 80138c0:	4613      	mov	r3, r2
 80138c2:	462a      	mov	r2, r5
 80138c4:	f016 f856 	bl	8029974 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 80138c8:	b128      	cbz	r0, 80138d6 <_ZN8touchgfx3HAL5touchEll+0x56>
 80138ca:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80138ce:	6623      	str	r3, [r4, #96]	; 0x60
 80138d0:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 80138d4:	6663      	str	r3, [r4, #100]	; 0x64
 80138d6:	b007      	add	sp, #28
 80138d8:	bd30      	pop	{r4, r5, pc}
 80138da:	f016 f88b 	bl	80299f4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 80138de:	2301      	movs	r3, #1
 80138e0:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 80138e4:	e7f1      	b.n	80138ca <_ZN8touchgfx3HAL5touchEll+0x4a>

080138e6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 80138e6:	b510      	push	{r4, lr}
 80138e8:	2b00      	cmp	r3, #0
 80138ea:	d046      	beq.n	801397a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 80138ec:	ea81 0002 	eor.w	r0, r1, r2
 80138f0:	07c4      	lsls	r4, r0, #31
 80138f2:	d508      	bpl.n	8013906 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 80138f4:	440b      	add	r3, r1
 80138f6:	3a01      	subs	r2, #1
 80138f8:	428b      	cmp	r3, r1
 80138fa:	d93e      	bls.n	801397a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 80138fc:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8013900:	f801 0b01 	strb.w	r0, [r1], #1
 8013904:	e7f8      	b.n	80138f8 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 8013906:	07d0      	lsls	r0, r2, #31
 8013908:	bf42      	ittt	mi
 801390a:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 801390e:	f801 0b01 	strbmi.w	r0, [r1], #1
 8013912:	f103 33ff 	addmi.w	r3, r3, #4294967295
 8013916:	2b01      	cmp	r3, #1
 8013918:	d911      	bls.n	801393e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 801391a:	ea81 0402 	eor.w	r4, r1, r2
 801391e:	07a4      	lsls	r4, r4, #30
 8013920:	4610      	mov	r0, r2
 8013922:	d022      	beq.n	801396a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 8013924:	f023 0401 	bic.w	r4, r3, #1
 8013928:	440c      	add	r4, r1
 801392a:	428c      	cmp	r4, r1
 801392c:	4602      	mov	r2, r0
 801392e:	d904      	bls.n	801393a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 8013930:	8812      	ldrh	r2, [r2, #0]
 8013932:	f821 2b02 	strh.w	r2, [r1], #2
 8013936:	3002      	adds	r0, #2
 8013938:	e7f7      	b.n	801392a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 801393a:	f003 0301 	and.w	r3, r3, #1
 801393e:	f023 0003 	bic.w	r0, r3, #3
 8013942:	4408      	add	r0, r1
 8013944:	4288      	cmp	r0, r1
 8013946:	4614      	mov	r4, r2
 8013948:	d904      	bls.n	8013954 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 801394a:	6824      	ldr	r4, [r4, #0]
 801394c:	f841 4b04 	str.w	r4, [r1], #4
 8013950:	3204      	adds	r2, #4
 8013952:	e7f7      	b.n	8013944 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 8013954:	f003 0303 	and.w	r3, r3, #3
 8013958:	440b      	add	r3, r1
 801395a:	3a01      	subs	r2, #1
 801395c:	428b      	cmp	r3, r1
 801395e:	d90c      	bls.n	801397a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8013960:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8013964:	f801 0b01 	strb.w	r0, [r1], #1
 8013968:	e7f8      	b.n	801395c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 801396a:	0790      	lsls	r0, r2, #30
 801396c:	d0e7      	beq.n	801393e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 801396e:	f832 0b02 	ldrh.w	r0, [r2], #2
 8013972:	f821 0b02 	strh.w	r0, [r1], #2
 8013976:	3b02      	subs	r3, #2
 8013978:	e7e1      	b.n	801393e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 801397a:	2001      	movs	r0, #1
 801397c:	bd10      	pop	{r4, pc}

0801397e <_ZN8touchgfx3HAL7noTouchEv>:
 801397e:	b510      	push	{r4, lr}
 8013980:	f890 306f 	ldrb.w	r3, [r0, #111]	; 0x6f
 8013984:	4604      	mov	r4, r0
 8013986:	b153      	cbz	r3, 801399e <_ZN8touchgfx3HAL7noTouchEv+0x20>
 8013988:	f8b0 3064 	ldrh.w	r3, [r0, #100]	; 0x64
 801398c:	f8b0 2060 	ldrh.w	r2, [r0, #96]	; 0x60
 8013990:	2101      	movs	r1, #1
 8013992:	301c      	adds	r0, #28
 8013994:	f016 f82e 	bl	80299f4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8013998:	2300      	movs	r3, #0
 801399a:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 801399e:	bd10      	pop	{r4, pc}

080139a0 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 80139a0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80139a4:	b085      	sub	sp, #20
 80139a6:	ad04      	add	r5, sp, #16
 80139a8:	4604      	mov	r4, r0
 80139aa:	2000      	movs	r0, #0
 80139ac:	f845 0d04 	str.w	r0, [r5, #-4]!
 80139b0:	69a0      	ldr	r0, [r4, #24]
 80139b2:	6806      	ldr	r6, [r0, #0]
 80139b4:	9501      	str	r5, [sp, #4]
 80139b6:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 80139ba:	9500      	str	r5, [sp, #0]
 80139bc:	6835      	ldr	r5, [r6, #0]
 80139be:	4699      	mov	r9, r3
 80139c0:	460f      	mov	r7, r1
 80139c2:	4690      	mov	r8, r2
 80139c4:	47a8      	blx	r5
 80139c6:	4d10      	ldr	r5, [pc, #64]	; (8013a08 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 80139c8:	4606      	mov	r6, r0
 80139ca:	f8a5 9000 	strh.w	r9, [r5]
 80139ce:	f7f1 fd8b 	bl	80054e8 <_ZN8touchgfx3HAL3lcdEv>
 80139d2:	6803      	ldr	r3, [r0, #0]
 80139d4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80139d6:	4798      	blx	r3
 80139d8:	b128      	cbz	r0, 80139e6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 80139da:	2801      	cmp	r0, #1
 80139dc:	d00b      	beq.n	80139f6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 80139de:	4630      	mov	r0, r6
 80139e0:	b005      	add	sp, #20
 80139e2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80139e6:	882b      	ldrh	r3, [r5, #0]
 80139e8:	fb08 7203 	mla	r2, r8, r3, r7
 80139ec:	9b03      	ldr	r3, [sp, #12]
 80139ee:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 80139f2:	63e3      	str	r3, [r4, #60]	; 0x3c
 80139f4:	e7f3      	b.n	80139de <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 80139f6:	882a      	ldrh	r2, [r5, #0]
 80139f8:	9b03      	ldr	r3, [sp, #12]
 80139fa:	fb08 7202 	mla	r2, r8, r2, r7
 80139fe:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8013a02:	1a9a      	subs	r2, r3, r2
 8013a04:	63e2      	str	r2, [r4, #60]	; 0x3c
 8013a06:	e7ea      	b.n	80139de <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8013a08:	20013836 	.word	0x20013836

08013a0c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 8013a0c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013a0e:	b08b      	sub	sp, #44	; 0x2c
 8013a10:	4617      	mov	r7, r2
 8013a12:	4604      	mov	r4, r0
 8013a14:	460e      	mov	r6, r1
 8013a16:	461d      	mov	r5, r3
 8013a18:	f7f1 fd66 	bl	80054e8 <_ZN8touchgfx3HAL3lcdEv>
 8013a1c:	6803      	ldr	r3, [r0, #0]
 8013a1e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013a20:	4798      	blx	r3
 8013a22:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8013a26:	9007      	str	r0, [sp, #28]
 8013a28:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8013a2c:	4b0d      	ldr	r3, [pc, #52]	; (8013a64 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 8013a2e:	6822      	ldr	r2, [r4, #0]
 8013a30:	881b      	ldrh	r3, [r3, #0]
 8013a32:	9306      	str	r3, [sp, #24]
 8013a34:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8013a38:	9305      	str	r3, [sp, #20]
 8013a3a:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 8013a3e:	9304      	str	r3, [sp, #16]
 8013a40:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8013a44:	9303      	str	r3, [sp, #12]
 8013a46:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8013a4a:	9302      	str	r3, [sp, #8]
 8013a4c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8013a50:	e9cd 5300 	strd	r5, r3, [sp]
 8013a54:	4631      	mov	r1, r6
 8013a56:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 8013a58:	463b      	mov	r3, r7
 8013a5a:	2200      	movs	r2, #0
 8013a5c:	4620      	mov	r0, r4
 8013a5e:	47a8      	blx	r5
 8013a60:	b00b      	add	sp, #44	; 0x2c
 8013a62:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013a64:	20013836 	.word	0x20013836

08013a68 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 8013a68:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013a6c:	4698      	mov	r8, r3
 8013a6e:	6803      	ldr	r3, [r0, #0]
 8013a70:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 8013a72:	4b15      	ldr	r3, [pc, #84]	; (8013ac8 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 8013a74:	b08b      	sub	sp, #44	; 0x2c
 8013a76:	4617      	mov	r7, r2
 8013a78:	f8b3 9000 	ldrh.w	r9, [r3]
 8013a7c:	460e      	mov	r6, r1
 8013a7e:	4604      	mov	r4, r0
 8013a80:	f7f1 fd32 	bl	80054e8 <_ZN8touchgfx3HAL3lcdEv>
 8013a84:	6803      	ldr	r3, [r0, #0]
 8013a86:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013a88:	4798      	blx	r3
 8013a8a:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 8013a8e:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8013a92:	2302      	movs	r3, #2
 8013a94:	e9cd 9306 	strd	r9, r3, [sp, #24]
 8013a98:	2301      	movs	r3, #1
 8013a9a:	9305      	str	r3, [sp, #20]
 8013a9c:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8013aa0:	9304      	str	r3, [sp, #16]
 8013aa2:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8013aa6:	9303      	str	r3, [sp, #12]
 8013aa8:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8013aac:	9302      	str	r3, [sp, #8]
 8013aae:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8013ab2:	2200      	movs	r2, #0
 8013ab4:	e9cd 8300 	strd	r8, r3, [sp]
 8013ab8:	4631      	mov	r1, r6
 8013aba:	463b      	mov	r3, r7
 8013abc:	4620      	mov	r0, r4
 8013abe:	47a8      	blx	r5
 8013ac0:	b00b      	add	sp, #44	; 0x2c
 8013ac2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013ac6:	bf00      	nop
 8013ac8:	20013836 	.word	0x20013836

08013acc <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 8013acc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013ad0:	4698      	mov	r8, r3
 8013ad2:	6803      	ldr	r3, [r0, #0]
 8013ad4:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 8013ad6:	4b11      	ldr	r3, [pc, #68]	; (8013b1c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 8013ad8:	b087      	sub	sp, #28
 8013ada:	f8b3 9000 	ldrh.w	r9, [r3]
 8013ade:	460e      	mov	r6, r1
 8013ae0:	4617      	mov	r7, r2
 8013ae2:	4604      	mov	r4, r0
 8013ae4:	f7f1 fd00 	bl	80054e8 <_ZN8touchgfx3HAL3lcdEv>
 8013ae8:	6803      	ldr	r3, [r0, #0]
 8013aea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013aec:	4798      	blx	r3
 8013aee:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 8013af2:	f8cd 900c 	str.w	r9, [sp, #12]
 8013af6:	e9cd 0304 	strd	r0, r3, [sp, #16]
 8013afa:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 8013afe:	9302      	str	r3, [sp, #8]
 8013b00:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8013b04:	9301      	str	r3, [sp, #4]
 8013b06:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8013b0a:	9300      	str	r3, [sp, #0]
 8013b0c:	463a      	mov	r2, r7
 8013b0e:	4643      	mov	r3, r8
 8013b10:	4631      	mov	r1, r6
 8013b12:	4620      	mov	r0, r4
 8013b14:	47a8      	blx	r5
 8013b16:	b007      	add	sp, #28
 8013b18:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013b1c:	20013836 	.word	0x20013836

08013b20 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 8013b20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013b24:	4604      	mov	r4, r0
 8013b26:	b08f      	sub	sp, #60	; 0x3c
 8013b28:	4610      	mov	r0, r2
 8013b2a:	460d      	mov	r5, r1
 8013b2c:	4691      	mov	r9, r2
 8013b2e:	461e      	mov	r6, r3
 8013b30:	f008 fafa 	bl	801c128 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8013b34:	2800      	cmp	r0, #0
 8013b36:	f000 809d 	beq.w	8013c74 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 8013b3a:	6823      	ldr	r3, [r4, #0]
 8013b3c:	f8df b198 	ldr.w	fp, [pc, #408]	; 8013cd8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 8013b40:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8013b42:	f8df a198 	ldr.w	sl, [pc, #408]	; 8013cdc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 8013b46:	4f61      	ldr	r7, [pc, #388]	; (8013ccc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8013b48:	4620      	mov	r0, r4
 8013b4a:	4798      	blx	r3
 8013b4c:	6823      	ldr	r3, [r4, #0]
 8013b4e:	4620      	mov	r0, r4
 8013b50:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013b52:	4798      	blx	r3
 8013b54:	f8bb 3000 	ldrh.w	r3, [fp]
 8013b58:	9301      	str	r3, [sp, #4]
 8013b5a:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 8013b5e:	f8ba 3000 	ldrh.w	r3, [sl]
 8013b62:	9302      	str	r3, [sp, #8]
 8013b64:	883b      	ldrh	r3, [r7, #0]
 8013b66:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 8013b6a:	9303      	str	r3, [sp, #12]
 8013b6c:	4b58      	ldr	r3, [pc, #352]	; (8013cd0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8013b6e:	9305      	str	r3, [sp, #20]
 8013b70:	881a      	ldrh	r2, [r3, #0]
 8013b72:	9204      	str	r2, [sp, #16]
 8013b74:	4640      	mov	r0, r8
 8013b76:	f008 fb6b 	bl	801c250 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013b7a:	8038      	strh	r0, [r7, #0]
 8013b7c:	4640      	mov	r0, r8
 8013b7e:	f008 fb9b 	bl	801c2b8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013b82:	9b05      	ldr	r3, [sp, #20]
 8013b84:	b280      	uxth	r0, r0
 8013b86:	8018      	strh	r0, [r3, #0]
 8013b88:	4b52      	ldr	r3, [pc, #328]	; (8013cd4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 8013b8a:	781b      	ldrb	r3, [r3, #0]
 8013b8c:	2b00      	cmp	r3, #0
 8013b8e:	d174      	bne.n	8013c7a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 8013b90:	883b      	ldrh	r3, [r7, #0]
 8013b92:	f8ab 3000 	strh.w	r3, [fp]
 8013b96:	f8aa 0000 	strh.w	r0, [sl]
 8013b9a:	4648      	mov	r0, r9
 8013b9c:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 8013ba0:	f008 fac2 	bl	801c128 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8013ba4:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 8013ba8:	2200      	movs	r2, #0
 8013baa:	4611      	mov	r1, r2
 8013bac:	4628      	mov	r0, r5
 8013bae:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 8013bb2:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 8013bb6:	f7ef fd5d 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
 8013bba:	2301      	movs	r3, #1
 8013bbc:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 8013bc0:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 8013bc4:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8013bc8:	2b00      	cmp	r3, #0
 8013bca:	dd5c      	ble.n	8013c86 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8013bcc:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8013bd0:	2b00      	cmp	r3, #0
 8013bd2:	dd58      	ble.n	8013c86 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8013bd4:	462a      	mov	r2, r5
 8013bd6:	ab0a      	add	r3, sp, #40	; 0x28
 8013bd8:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8013bdc:	6851      	ldr	r1, [r2, #4]
 8013bde:	c303      	stmia	r3!, {r0, r1}
 8013be0:	4631      	mov	r1, r6
 8013be2:	a80a      	add	r0, sp, #40	; 0x28
 8013be4:	f7fe ff92 	bl	8012b0c <_ZN8touchgfx4RectaNERKS0_>
 8013be8:	4b38      	ldr	r3, [pc, #224]	; (8013ccc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8013bea:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013bee:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8013bf2:	2100      	movs	r1, #0
 8013bf4:	aa0a      	add	r2, sp, #40	; 0x28
 8013bf6:	4b36      	ldr	r3, [pc, #216]	; (8013cd0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8013bf8:	910c      	str	r1, [sp, #48]	; 0x30
 8013bfa:	e892 0003 	ldmia.w	r2, {r0, r1}
 8013bfe:	f9b3 3000 	ldrsh.w	r3, [r3]
 8013c02:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8013c06:	ab08      	add	r3, sp, #32
 8013c08:	e883 0003 	stmia.w	r3, {r0, r1}
 8013c0c:	4618      	mov	r0, r3
 8013c0e:	a90c      	add	r1, sp, #48	; 0x30
 8013c10:	f7fe ff7c 	bl	8012b0c <_ZN8touchgfx4RectaNERKS0_>
 8013c14:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 8013c16:	2b00      	cmp	r3, #0
 8013c18:	d13c      	bne.n	8013c94 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 8013c1a:	2000      	movs	r0, #0
 8013c1c:	f884 0058 	strb.w	r0, [r4, #88]	; 0x58
 8013c20:	2600      	movs	r6, #0
 8013c22:	682a      	ldr	r2, [r5, #0]
 8013c24:	696b      	ldr	r3, [r5, #20]
 8013c26:	616e      	str	r6, [r5, #20]
 8013c28:	9305      	str	r3, [sp, #20]
 8013c2a:	6892      	ldr	r2, [r2, #8]
 8013c2c:	a908      	add	r1, sp, #32
 8013c2e:	4628      	mov	r0, r5
 8013c30:	4790      	blx	r2
 8013c32:	9b05      	ldr	r3, [sp, #20]
 8013c34:	616b      	str	r3, [r5, #20]
 8013c36:	4652      	mov	r2, sl
 8013c38:	f884 6058 	strb.w	r6, [r4, #88]	; 0x58
 8013c3c:	4649      	mov	r1, r9
 8013c3e:	4628      	mov	r0, r5
 8013c40:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 8013c44:	f7ef fd16 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
 8013c48:	4b23      	ldr	r3, [pc, #140]	; (8013cd8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 8013c4a:	9a01      	ldr	r2, [sp, #4]
 8013c4c:	801a      	strh	r2, [r3, #0]
 8013c4e:	4b23      	ldr	r3, [pc, #140]	; (8013cdc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 8013c50:	9a02      	ldr	r2, [sp, #8]
 8013c52:	801a      	strh	r2, [r3, #0]
 8013c54:	4b1d      	ldr	r3, [pc, #116]	; (8013ccc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8013c56:	9a03      	ldr	r2, [sp, #12]
 8013c58:	801a      	strh	r2, [r3, #0]
 8013c5a:	4b1d      	ldr	r3, [pc, #116]	; (8013cd0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8013c5c:	9a04      	ldr	r2, [sp, #16]
 8013c5e:	801a      	strh	r2, [r3, #0]
 8013c60:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 8013c64:	6823      	ldr	r3, [r4, #0]
 8013c66:	4620      	mov	r0, r4
 8013c68:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8013c6a:	4798      	blx	r3
 8013c6c:	6823      	ldr	r3, [r4, #0]
 8013c6e:	4620      	mov	r0, r4
 8013c70:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013c72:	4798      	blx	r3
 8013c74:	b00f      	add	sp, #60	; 0x3c
 8013c76:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013c7a:	883b      	ldrh	r3, [r7, #0]
 8013c7c:	f8ab 0000 	strh.w	r0, [fp]
 8013c80:	f8aa 3000 	strh.w	r3, [sl]
 8013c84:	e789      	b.n	8013b9a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 8013c86:	462a      	mov	r2, r5
 8013c88:	ab0a      	add	r3, sp, #40	; 0x28
 8013c8a:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8013c8e:	6851      	ldr	r1, [r2, #4]
 8013c90:	c303      	stmia	r3!, {r0, r1}
 8013c92:	e7a9      	b.n	8013be8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 8013c94:	a807      	add	r0, sp, #28
 8013c96:	f008 fc4b 	bl	801c530 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8013c9a:	4606      	mov	r6, r0
 8013c9c:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 8013c9e:	6803      	ldr	r3, [r0, #0]
 8013ca0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013ca2:	4798      	blx	r3
 8013ca4:	4286      	cmp	r6, r0
 8013ca6:	d1b8      	bne.n	8013c1a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 8013ca8:	f7f1 fc1e 	bl	80054e8 <_ZN8touchgfx3HAL3lcdEv>
 8013cac:	6803      	ldr	r3, [r0, #0]
 8013cae:	4606      	mov	r6, r0
 8013cb0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8013cb2:	9305      	str	r3, [sp, #20]
 8013cb4:	a807      	add	r0, sp, #28
 8013cb6:	f008 fc3b 	bl	801c530 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8013cba:	9b05      	ldr	r3, [sp, #20]
 8013cbc:	4601      	mov	r1, r0
 8013cbe:	4630      	mov	r0, r6
 8013cc0:	4798      	blx	r3
 8013cc2:	f080 0001 	eor.w	r0, r0, #1
 8013cc6:	b2c0      	uxtb	r0, r0
 8013cc8:	e7a8      	b.n	8013c1c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 8013cca:	bf00      	nop
 8013ccc:	20013830 	.word	0x20013830
 8013cd0:	20013832 	.word	0x20013832
 8013cd4:	20013834 	.word	0x20013834
 8013cd8:	20013836 	.word	0x20013836
 8013cdc:	20013838 	.word	0x20013838

08013ce0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 8013ce0:	b510      	push	{r4, lr}
 8013ce2:	4b07      	ldr	r3, [pc, #28]	; (8013d00 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 8013ce4:	781b      	ldrb	r3, [r3, #0]
 8013ce6:	4604      	mov	r4, r0
 8013ce8:	b13b      	cbz	r3, 8013cfa <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8013cea:	6803      	ldr	r3, [r0, #0]
 8013cec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8013cee:	4798      	blx	r3
 8013cf0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8013cf2:	4283      	cmp	r3, r0
 8013cf4:	d101      	bne.n	8013cfa <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8013cf6:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8013cf8:	bd10      	pop	{r4, pc}
 8013cfa:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8013cfc:	e7fc      	b.n	8013cf8 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 8013cfe:	bf00      	nop
 8013d00:	2001383a 	.word	0x2001383a

08013d04 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 8013d04:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013d08:	b08a      	sub	sp, #40	; 0x28
 8013d0a:	461d      	mov	r5, r3
 8013d0c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8013d10:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8013d14:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8013d18:	f8ad 3018 	strh.w	r3, [sp, #24]
 8013d1c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8013d20:	f8ad 301a 	strh.w	r3, [sp, #26]
 8013d24:	2400      	movs	r4, #0
 8013d26:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8013d2a:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 8013d2e:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013d32:	4690      	mov	r8, r2
 8013d34:	4607      	mov	r7, r0
 8013d36:	9404      	str	r4, [sp, #16]
 8013d38:	f88d 4020 	strb.w	r4, [sp, #32]
 8013d3c:	f7ff ffd0 	bl	8013ce0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8013d40:	fb06 8505 	mla	r5, r6, r5, r8
 8013d44:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8013d48:	6878      	ldr	r0, [r7, #4]
 8013d4a:	9505      	str	r5, [sp, #20]
 8013d4c:	f8ad 601e 	strh.w	r6, [sp, #30]
 8013d50:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8013d54:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 8013d58:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 8013d5c:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8013d60:	6803      	ldr	r3, [r0, #0]
 8013d62:	a901      	add	r1, sp, #4
 8013d64:	685b      	ldr	r3, [r3, #4]
 8013d66:	4798      	blx	r3
 8013d68:	b00a      	add	sp, #40	; 0x28
 8013d6a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08013d6e <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 8013d6e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013d72:	b08b      	sub	sp, #44	; 0x2c
 8013d74:	2400      	movs	r4, #0
 8013d76:	461d      	mov	r5, r3
 8013d78:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8013d7c:	4688      	mov	r8, r1
 8013d7e:	4691      	mov	r9, r2
 8013d80:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 8013d84:	9404      	str	r4, [sp, #16]
 8013d86:	4607      	mov	r7, r0
 8013d88:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8013d8c:	f7ff ffa8 	bl	8013ce0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8013d90:	fb06 9505 	mla	r5, r6, r5, r9
 8013d94:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8013d98:	f8ad 3018 	strh.w	r3, [sp, #24]
 8013d9c:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8013da0:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8013da4:	6878      	ldr	r0, [r7, #4]
 8013da6:	9505      	str	r5, [sp, #20]
 8013da8:	f8ad 301a 	strh.w	r3, [sp, #26]
 8013dac:	f8ad 401c 	strh.w	r4, [sp, #28]
 8013db0:	f8ad 601e 	strh.w	r6, [sp, #30]
 8013db4:	f8cd 8010 	str.w	r8, [sp, #16]
 8013db8:	f8ad 4020 	strh.w	r4, [sp, #32]
 8013dbc:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8013dc0:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 8013dc4:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8013dc8:	6803      	ldr	r3, [r0, #0]
 8013dca:	a901      	add	r1, sp, #4
 8013dcc:	685b      	ldr	r3, [r3, #4]
 8013dce:	4798      	blx	r3
 8013dd0:	b00b      	add	sp, #44	; 0x2c
 8013dd2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

08013dd8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 8013dd8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013ddc:	b08a      	sub	sp, #40	; 0x28
 8013dde:	4698      	mov	r8, r3
 8013de0:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 8013de4:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 8013de8:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 8013dec:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 8013df0:	2300      	movs	r3, #0
 8013df2:	2d0b      	cmp	r5, #11
 8013df4:	4606      	mov	r6, r0
 8013df6:	9304      	str	r3, [sp, #16]
 8013df8:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 8013dfc:	d138      	bne.n	8013e70 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 8013dfe:	2380      	movs	r3, #128	; 0x80
 8013e00:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8013e04:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8013e08:	f8ad 3018 	strh.w	r3, [sp, #24]
 8013e0c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8013e10:	f8ad 301a 	strh.w	r3, [sp, #26]
 8013e14:	f88d 0020 	strb.w	r0, [sp, #32]
 8013e18:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8013e1c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013e20:	4630      	mov	r0, r6
 8013e22:	9203      	str	r2, [sp, #12]
 8013e24:	f7ff ff5c 	bl	8013ce0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8013e28:	2c0b      	cmp	r4, #11
 8013e2a:	bf98      	it	ls
 8013e2c:	4b1b      	ldrls	r3, [pc, #108]	; (8013e9c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 8013e2e:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 8013e32:	bf98      	it	ls
 8013e34:	5d19      	ldrbls	r1, [r3, r4]
 8013e36:	f8ad 701e 	strh.w	r7, [sp, #30]
 8013e3a:	bf88      	it	hi
 8013e3c:	2100      	movhi	r1, #0
 8013e3e:	fb02 8307 	mla	r3, r2, r7, r8
 8013e42:	10c9      	asrs	r1, r1, #3
 8013e44:	fb01 0003 	mla	r0, r1, r3, r0
 8013e48:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 8013e4c:	9005      	str	r0, [sp, #20]
 8013e4e:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 8013e52:	6870      	ldr	r0, [r6, #4]
 8013e54:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 8013e58:	2300      	movs	r3, #0
 8013e5a:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8013e5e:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8013e62:	6803      	ldr	r3, [r0, #0]
 8013e64:	a901      	add	r1, sp, #4
 8013e66:	685b      	ldr	r3, [r3, #4]
 8013e68:	4798      	blx	r3
 8013e6a:	b00a      	add	sp, #40	; 0x28
 8013e6c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013e70:	2d02      	cmp	r5, #2
 8013e72:	d109      	bne.n	8013e88 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 8013e74:	28ff      	cmp	r0, #255	; 0xff
 8013e76:	d105      	bne.n	8013e84 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 8013e78:	f1bc 0f00 	cmp.w	ip, #0
 8013e7c:	bf14      	ite	ne
 8013e7e:	2340      	movne	r3, #64	; 0x40
 8013e80:	2320      	moveq	r3, #32
 8013e82:	e7bd      	b.n	8013e00 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8013e84:	2340      	movs	r3, #64	; 0x40
 8013e86:	e7bb      	b.n	8013e00 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8013e88:	28ff      	cmp	r0, #255	; 0xff
 8013e8a:	d105      	bne.n	8013e98 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 8013e8c:	f1bc 0f00 	cmp.w	ip, #0
 8013e90:	bf14      	ite	ne
 8013e92:	2304      	movne	r3, #4
 8013e94:	2301      	moveq	r3, #1
 8013e96:	e7b3      	b.n	8013e00 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8013e98:	2304      	movs	r3, #4
 8013e9a:	e7b1      	b.n	8013e00 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8013e9c:	08031754 	.word	0x08031754

08013ea0 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 8013ea0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013ea4:	b08b      	sub	sp, #44	; 0x2c
 8013ea6:	461d      	mov	r5, r3
 8013ea8:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 8013eac:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 8013eb0:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 8013eb4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8013eb8:	bf14      	ite	ne
 8013eba:	2308      	movne	r3, #8
 8013ebc:	2302      	moveq	r3, #2
 8013ebe:	2400      	movs	r4, #0
 8013ec0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8013ec4:	4688      	mov	r8, r1
 8013ec6:	4693      	mov	fp, r2
 8013ec8:	9404      	str	r4, [sp, #16]
 8013eca:	4607      	mov	r7, r0
 8013ecc:	f7ff ff08 	bl	8013ce0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8013ed0:	2e0b      	cmp	r6, #11
 8013ed2:	bf98      	it	ls
 8013ed4:	4b15      	ldrls	r3, [pc, #84]	; (8013f2c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 8013ed6:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8013eda:	bf98      	it	ls
 8013edc:	5d9c      	ldrbls	r4, [r3, r6]
 8013ede:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8013ee2:	f8ad 3018 	strh.w	r3, [sp, #24]
 8013ee6:	fb05 b50a 	mla	r5, r5, sl, fp
 8013eea:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8013eee:	f8ad 301a 	strh.w	r3, [sp, #26]
 8013ef2:	10e4      	asrs	r4, r4, #3
 8013ef4:	fb04 0405 	mla	r4, r4, r5, r0
 8013ef8:	2300      	movs	r3, #0
 8013efa:	6878      	ldr	r0, [r7, #4]
 8013efc:	9405      	str	r4, [sp, #20]
 8013efe:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013f02:	f8ad a01e 	strh.w	sl, [sp, #30]
 8013f06:	f8cd 8010 	str.w	r8, [sp, #16]
 8013f0a:	f88d 9020 	strb.w	r9, [sp, #32]
 8013f0e:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 8013f12:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8013f16:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 8013f1a:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 8013f1e:	6803      	ldr	r3, [r0, #0]
 8013f20:	a901      	add	r1, sp, #4
 8013f22:	685b      	ldr	r3, [r3, #4]
 8013f24:	4798      	blx	r3
 8013f26:	b00b      	add	sp, #44	; 0x2c
 8013f28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013f2c:	08031754 	.word	0x08031754

08013f30 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 8013f30:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013f34:	461e      	mov	r6, r3
 8013f36:	4b0a      	ldr	r3, [pc, #40]	; (8013f60 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 8013f38:	460f      	mov	r7, r1
 8013f3a:	881d      	ldrh	r5, [r3, #0]
 8013f3c:	4690      	mov	r8, r2
 8013f3e:	f7f1 fad3 	bl	80054e8 <_ZN8touchgfx3HAL3lcdEv>
 8013f42:	6803      	ldr	r3, [r0, #0]
 8013f44:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013f46:	4798      	blx	r3
 8013f48:	280b      	cmp	r0, #11
 8013f4a:	bf9a      	itte	ls
 8013f4c:	4b05      	ldrls	r3, [pc, #20]	; (8013f64 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 8013f4e:	5c1c      	ldrbls	r4, [r3, r0]
 8013f50:	2400      	movhi	r4, #0
 8013f52:	fb08 7005 	mla	r0, r8, r5, r7
 8013f56:	10e4      	asrs	r4, r4, #3
 8013f58:	fb04 6000 	mla	r0, r4, r0, r6
 8013f5c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013f60:	20013836 	.word	0x20013836
 8013f64:	08031754 	.word	0x08031754

08013f68 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 8013f68:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013f6a:	b08b      	sub	sp, #44	; 0x2c
 8013f6c:	461f      	mov	r7, r3
 8013f6e:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8013f72:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8013f76:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8013f7a:	f8ad 3018 	strh.w	r3, [sp, #24]
 8013f7e:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8013f82:	f8ad 301a 	strh.w	r3, [sp, #26]
 8013f86:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8013f8a:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013f8e:	2500      	movs	r5, #0
 8013f90:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8013f94:	f88d 3020 	strb.w	r3, [sp, #32]
 8013f98:	4604      	mov	r4, r0
 8013f9a:	4616      	mov	r6, r2
 8013f9c:	9504      	str	r5, [sp, #16]
 8013f9e:	f7ff fe9f 	bl	8013ce0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8013fa2:	463a      	mov	r2, r7
 8013fa4:	4631      	mov	r1, r6
 8013fa6:	4603      	mov	r3, r0
 8013fa8:	4620      	mov	r0, r4
 8013faa:	f7ff ffc1 	bl	8013f30 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8013fae:	4b0e      	ldr	r3, [pc, #56]	; (8013fe8 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 8013fb0:	9005      	str	r0, [sp, #20]
 8013fb2:	881b      	ldrh	r3, [r3, #0]
 8013fb4:	f8ad 301e 	strh.w	r3, [sp, #30]
 8013fb8:	f7f1 fa96 	bl	80054e8 <_ZN8touchgfx3HAL3lcdEv>
 8013fbc:	6803      	ldr	r3, [r0, #0]
 8013fbe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013fc0:	4798      	blx	r3
 8013fc2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8013fc4:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 8013fc8:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 8013fcc:	9304      	str	r3, [sp, #16]
 8013fce:	6860      	ldr	r0, [r4, #4]
 8013fd0:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 8013fd4:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 8013fd8:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 8013fdc:	6803      	ldr	r3, [r0, #0]
 8013fde:	a901      	add	r1, sp, #4
 8013fe0:	685b      	ldr	r3, [r3, #4]
 8013fe2:	4798      	blx	r3
 8013fe4:	b00b      	add	sp, #44	; 0x2c
 8013fe6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013fe8:	20013836 	.word	0x20013836

08013fec <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 8013fec:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013fee:	b08d      	sub	sp, #52	; 0x34
 8013ff0:	466b      	mov	r3, sp
 8013ff2:	e883 0006 	stmia.w	r3, {r1, r2}
 8013ff6:	2300      	movs	r3, #0
 8013ff8:	9306      	str	r3, [sp, #24]
 8013ffa:	6803      	ldr	r3, [r0, #0]
 8013ffc:	f8bd 6000 	ldrh.w	r6, [sp]
 8014000:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8014002:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 8014006:	2501      	movs	r5, #1
 8014008:	9503      	str	r5, [sp, #12]
 801400a:	4604      	mov	r4, r0
 801400c:	4798      	blx	r3
 801400e:	463a      	mov	r2, r7
 8014010:	4631      	mov	r1, r6
 8014012:	4603      	mov	r3, r0
 8014014:	4620      	mov	r0, r4
 8014016:	f7ff ff8b 	bl	8013f30 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 801401a:	6c63      	ldr	r3, [r4, #68]	; 0x44
 801401c:	9307      	str	r3, [sp, #28]
 801401e:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8014022:	f8ad 3020 	strh.w	r3, [sp, #32]
 8014026:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 801402a:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801402e:	4b0f      	ldr	r3, [pc, #60]	; (801406c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 8014030:	9004      	str	r0, [sp, #16]
 8014032:	881b      	ldrh	r3, [r3, #0]
 8014034:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8014038:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 801403c:	f7f1 fa54 	bl	80054e8 <_ZN8touchgfx3HAL3lcdEv>
 8014040:	6803      	ldr	r3, [r0, #0]
 8014042:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014044:	4798      	blx	r3
 8014046:	23ff      	movs	r3, #255	; 0xff
 8014048:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 801404c:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8014050:	6860      	ldr	r0, [r4, #4]
 8014052:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 8014056:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 801405a:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 801405e:	6803      	ldr	r3, [r0, #0]
 8014060:	a903      	add	r1, sp, #12
 8014062:	685b      	ldr	r3, [r3, #4]
 8014064:	4798      	blx	r3
 8014066:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8014068:	b00d      	add	sp, #52	; 0x34
 801406a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801406c:	20013836 	.word	0x20013836

08014070 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 8014070:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014074:	b08c      	sub	sp, #48	; 0x30
 8014076:	461e      	mov	r6, r3
 8014078:	466d      	mov	r5, sp
 801407a:	2300      	movs	r3, #0
 801407c:	e885 0006 	stmia.w	r5, {r1, r2}
 8014080:	9306      	str	r3, [sp, #24]
 8014082:	6803      	ldr	r3, [r0, #0]
 8014084:	f8bd 7000 	ldrh.w	r7, [sp]
 8014088:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801408a:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 801408e:	2501      	movs	r5, #1
 8014090:	9503      	str	r5, [sp, #12]
 8014092:	4604      	mov	r4, r0
 8014094:	4798      	blx	r3
 8014096:	4642      	mov	r2, r8
 8014098:	4639      	mov	r1, r7
 801409a:	4603      	mov	r3, r0
 801409c:	4620      	mov	r0, r4
 801409e:	f7ff ff47 	bl	8013f30 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80140a2:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80140a6:	f8ad 3020 	strh.w	r3, [sp, #32]
 80140aa:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80140ae:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 80140b2:	4b11      	ldr	r3, [pc, #68]	; (80140f8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 80140b4:	9004      	str	r0, [sp, #16]
 80140b6:	881b      	ldrh	r3, [r3, #0]
 80140b8:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80140bc:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80140be:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 80140c2:	9607      	str	r6, [sp, #28]
 80140c4:	f7f1 fa10 	bl	80054e8 <_ZN8touchgfx3HAL3lcdEv>
 80140c8:	6803      	ldr	r3, [r0, #0]
 80140ca:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80140cc:	4798      	blx	r3
 80140ce:	23ff      	movs	r3, #255	; 0xff
 80140d0:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 80140d4:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 80140d8:	6860      	ldr	r0, [r4, #4]
 80140da:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 80140de:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 80140e2:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 80140e6:	6803      	ldr	r3, [r0, #0]
 80140e8:	a903      	add	r1, sp, #12
 80140ea:	685b      	ldr	r3, [r3, #4]
 80140ec:	4798      	blx	r3
 80140ee:	4630      	mov	r0, r6
 80140f0:	b00c      	add	sp, #48	; 0x30
 80140f2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80140f6:	bf00      	nop
 80140f8:	20013836 	.word	0x20013836

080140fc <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 80140fc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80140fe:	b085      	sub	sp, #20
 8014100:	ac02      	add	r4, sp, #8
 8014102:	e884 0006 	stmia.w	r4, {r1, r2}
 8014106:	4605      	mov	r5, r0
 8014108:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 801410c:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 8014110:	f7ff fde6 	bl	8013ce0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8014114:	463a      	mov	r2, r7
 8014116:	4603      	mov	r3, r0
 8014118:	4631      	mov	r1, r6
 801411a:	4628      	mov	r0, r5
 801411c:	f7ff ff08 	bl	8013f30 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8014120:	4a05      	ldr	r2, [pc, #20]	; (8014138 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 8014122:	682b      	ldr	r3, [r5, #0]
 8014124:	8812      	ldrh	r2, [r2, #0]
 8014126:	9200      	str	r2, [sp, #0]
 8014128:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 801412a:	e894 0006 	ldmia.w	r4, {r1, r2}
 801412e:	4603      	mov	r3, r0
 8014130:	4628      	mov	r0, r5
 8014132:	47b0      	blx	r6
 8014134:	b005      	add	sp, #20
 8014136:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8014138:	20013836 	.word	0x20013836

0801413c <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 801413c:	b570      	push	{r4, r5, r6, lr}
 801413e:	f890 306e 	ldrb.w	r3, [r0, #110]	; 0x6e
 8014142:	4604      	mov	r4, r0
 8014144:	b19b      	cbz	r3, 801416e <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 8014146:	2002      	movs	r0, #2
 8014148:	f7ee fcec 	bl	8002b24 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 801414c:	2300      	movs	r3, #0
 801414e:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 8014152:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
 8014156:	6823      	ldr	r3, [r4, #0]
 8014158:	4620      	mov	r0, r4
 801415a:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 801415e:	f7ff fdbf 	bl	8013ce0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8014162:	462b      	mov	r3, r5
 8014164:	4601      	mov	r1, r0
 8014166:	4620      	mov	r0, r4
 8014168:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801416c:	4718      	bx	r3
 801416e:	bd70      	pop	{r4, r5, r6, pc}

08014170 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 8014170:	b538      	push	{r3, r4, r5, lr}
 8014172:	f890 307b 	ldrb.w	r3, [r0, #123]	; 0x7b
 8014176:	428b      	cmp	r3, r1
 8014178:	4604      	mov	r4, r0
 801417a:	460d      	mov	r5, r1
 801417c:	d006      	beq.n	801418c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 801417e:	6803      	ldr	r3, [r0, #0]
 8014180:	b929      	cbnz	r1, 801418e <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 8014182:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8014186:	4798      	blx	r3
 8014188:	f884 507b 	strb.w	r5, [r4, #123]	; 0x7b
 801418c:	bd38      	pop	{r3, r4, r5, pc}
 801418e:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 8014192:	e7f8      	b.n	8014186 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

08014194 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 8014194:	b510      	push	{r4, lr}
 8014196:	4b0d      	ldr	r3, [pc, #52]	; (80141cc <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 8014198:	781b      	ldrb	r3, [r3, #0]
 801419a:	4604      	mov	r4, r0
 801419c:	b95b      	cbnz	r3, 80141b6 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 801419e:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 80141a2:	2b02      	cmp	r3, #2
 80141a4:	d007      	beq.n	80141b6 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 80141a6:	6840      	ldr	r0, [r0, #4]
 80141a8:	f000 f92c 	bl	8014404 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 80141ac:	b118      	cbz	r0, 80141b6 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 80141ae:	6862      	ldr	r2, [r4, #4]
 80141b0:	7a53      	ldrb	r3, [r2, #9]
 80141b2:	2b00      	cmp	r3, #0
 80141b4:	d0fc      	beq.n	80141b0 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 80141b6:	f7ee fded 	bl	8002d94 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 80141ba:	4620      	mov	r0, r4
 80141bc:	2100      	movs	r1, #0
 80141be:	f7ff ffd7 	bl	8014170 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 80141c2:	4620      	mov	r0, r4
 80141c4:	f7ff fd8c 	bl	8013ce0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80141c8:	bd10      	pop	{r4, pc}
 80141ca:	bf00      	nop
 80141cc:	2001383a 	.word	0x2001383a

080141d0 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 80141d0:	b570      	push	{r4, r5, r6, lr}
 80141d2:	4604      	mov	r4, r0
 80141d4:	6803      	ldr	r3, [r0, #0]
 80141d6:	b919      	cbnz	r1, 80141e0 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 80141d8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80141da:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80141de:	4718      	bx	r3
 80141e0:	2200      	movs	r2, #0
 80141e2:	f890 607b 	ldrb.w	r6, [r0, #123]	; 0x7b
 80141e6:	f880 207b 	strb.w	r2, [r0, #123]	; 0x7b
 80141ea:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80141ec:	4798      	blx	r3
 80141ee:	6863      	ldr	r3, [r4, #4]
 80141f0:	2101      	movs	r1, #1
 80141f2:	4605      	mov	r5, r0
 80141f4:	7299      	strb	r1, [r3, #10]
 80141f6:	4620      	mov	r0, r4
 80141f8:	f884 607b 	strb.w	r6, [r4, #123]	; 0x7b
 80141fc:	f7ff ffb8 	bl	8014170 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8014200:	4628      	mov	r0, r5
 8014202:	bd70      	pop	{r4, r5, r6, pc}

08014204 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 8014204:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 8014208:	1a13      	subs	r3, r2, r0
 801420a:	4258      	negs	r0, r3
 801420c:	4158      	adcs	r0, r3
 801420e:	4770      	bx	lr

08014210 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 8014210:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 8014214:	1a9b      	subs	r3, r3, r2
 8014216:	2b00      	cmp	r3, #0
 8014218:	bfdc      	itt	le
 801421a:	6882      	ldrle	r2, [r0, #8]
 801421c:	189b      	addle	r3, r3, r2
 801421e:	2b01      	cmp	r3, #1
 8014220:	bfcc      	ite	gt
 8014222:	2000      	movgt	r0, #0
 8014224:	2001      	movle	r0, #1
 8014226:	4770      	bx	lr

08014228 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 8014228:	6902      	ldr	r2, [r0, #16]
 801422a:	6843      	ldr	r3, [r0, #4]
 801422c:	2024      	movs	r0, #36	; 0x24
 801422e:	fb00 3002 	mla	r0, r0, r2, r3
 8014232:	4770      	bx	lr

08014234 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 8014234:	6803      	ldr	r3, [r0, #0]
 8014236:	691b      	ldr	r3, [r3, #16]
 8014238:	4718      	bx	r3

0801423a <_ZN8touchgfx13DMA_Interface7executeEv>:
 801423a:	b570      	push	{r4, r5, r6, lr}
 801423c:	2301      	movs	r3, #1
 801423e:	7203      	strb	r3, [r0, #8]
 8014240:	4604      	mov	r4, r0
 8014242:	6840      	ldr	r0, [r0, #4]
 8014244:	6803      	ldr	r3, [r0, #0]
 8014246:	699b      	ldr	r3, [r3, #24]
 8014248:	4798      	blx	r3
 801424a:	6803      	ldr	r3, [r0, #0]
 801424c:	2b40      	cmp	r3, #64	; 0x40
 801424e:	4605      	mov	r5, r0
 8014250:	d00c      	beq.n	801426c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8014252:	d810      	bhi.n	8014276 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 8014254:	2b04      	cmp	r3, #4
 8014256:	d01d      	beq.n	8014294 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 8014258:	d804      	bhi.n	8014264 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 801425a:	2b01      	cmp	r3, #1
 801425c:	d006      	beq.n	801426c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 801425e:	2b02      	cmp	r3, #2
 8014260:	d02c      	beq.n	80142bc <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 8014262:	bd70      	pop	{r4, r5, r6, pc}
 8014264:	2b08      	cmp	r3, #8
 8014266:	d01d      	beq.n	80142a4 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 8014268:	2b20      	cmp	r3, #32
 801426a:	d1fa      	bne.n	8014262 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 801426c:	6823      	ldr	r3, [r4, #0]
 801426e:	4620      	mov	r0, r4
 8014270:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8014272:	4798      	blx	r3
 8014274:	e013      	b.n	801429e <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 8014276:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 801427a:	d0f7      	beq.n	801426c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 801427c:	d804      	bhi.n	8014288 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 801427e:	2b80      	cmp	r3, #128	; 0x80
 8014280:	d0f4      	beq.n	801426c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8014282:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8014286:	e7f0      	b.n	801426a <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 8014288:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801428c:	d0ee      	beq.n	801426c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 801428e:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8014292:	e7e5      	b.n	8014260 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 8014294:	6823      	ldr	r3, [r4, #0]
 8014296:	7f01      	ldrb	r1, [r0, #28]
 8014298:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801429a:	4620      	mov	r0, r4
 801429c:	4798      	blx	r3
 801429e:	6823      	ldr	r3, [r4, #0]
 80142a0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80142a2:	e006      	b.n	80142b2 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 80142a4:	6823      	ldr	r3, [r4, #0]
 80142a6:	7f01      	ldrb	r1, [r0, #28]
 80142a8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80142aa:	4620      	mov	r0, r4
 80142ac:	4798      	blx	r3
 80142ae:	6823      	ldr	r3, [r4, #0]
 80142b0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80142b2:	4629      	mov	r1, r5
 80142b4:	4620      	mov	r0, r4
 80142b6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80142ba:	4718      	bx	r3
 80142bc:	6823      	ldr	r3, [r4, #0]
 80142be:	4620      	mov	r0, r4
 80142c0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80142c2:	4798      	blx	r3
 80142c4:	e7f3      	b.n	80142ae <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

080142c6 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 80142c6:	4770      	bx	lr

080142c8 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 80142c8:	4770      	bx	lr

080142ca <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 80142ca:	4770      	bx	lr

080142cc <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 80142cc:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 80142d0:	1ad2      	subs	r2, r2, r3
 80142d2:	2a00      	cmp	r2, #0
 80142d4:	b510      	push	{r4, lr}
 80142d6:	bfdc      	itt	le
 80142d8:	6884      	ldrle	r4, [r0, #8]
 80142da:	1912      	addle	r2, r2, r4
 80142dc:	2a01      	cmp	r2, #1
 80142de:	dd16      	ble.n	801430e <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 80142e0:	6842      	ldr	r2, [r0, #4]
 80142e2:	2424      	movs	r4, #36	; 0x24
 80142e4:	fb04 2303 	mla	r3, r4, r3, r2
 80142e8:	f101 0220 	add.w	r2, r1, #32
 80142ec:	f851 4b04 	ldr.w	r4, [r1], #4
 80142f0:	f843 4b04 	str.w	r4, [r3], #4
 80142f4:	4291      	cmp	r1, r2
 80142f6:	d1f9      	bne.n	80142ec <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 80142f8:	780a      	ldrb	r2, [r1, #0]
 80142fa:	701a      	strb	r2, [r3, #0]
 80142fc:	68c3      	ldr	r3, [r0, #12]
 80142fe:	6882      	ldr	r2, [r0, #8]
 8014300:	f3bf 8f5b 	dmb	ish
 8014304:	3301      	adds	r3, #1
 8014306:	429a      	cmp	r2, r3
 8014308:	bfd8      	it	le
 801430a:	1a9b      	suble	r3, r3, r2
 801430c:	60c3      	str	r3, [r0, #12]
 801430e:	bd10      	pop	{r4, pc}

08014310 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 8014310:	6903      	ldr	r3, [r0, #16]
 8014312:	6882      	ldr	r2, [r0, #8]
 8014314:	f3bf 8f5b 	dmb	ish
 8014318:	3301      	adds	r3, #1
 801431a:	429a      	cmp	r2, r3
 801431c:	bfd8      	it	le
 801431e:	1a9b      	suble	r3, r3, r2
 8014320:	6103      	str	r3, [r0, #16]
 8014322:	4770      	bx	lr

08014324 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 8014324:	b570      	push	{r4, r5, r6, lr}
 8014326:	4604      	mov	r4, r0
 8014328:	460e      	mov	r6, r1
 801432a:	6860      	ldr	r0, [r4, #4]
 801432c:	6803      	ldr	r3, [r0, #0]
 801432e:	685b      	ldr	r3, [r3, #4]
 8014330:	4798      	blx	r3
 8014332:	2800      	cmp	r0, #0
 8014334:	d1f9      	bne.n	801432a <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 8014336:	4d0d      	ldr	r5, [pc, #52]	; (801436c <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 8014338:	6828      	ldr	r0, [r5, #0]
 801433a:	6803      	ldr	r3, [r0, #0]
 801433c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 801433e:	4798      	blx	r3
 8014340:	f7ee fd36 	bl	8002db0 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 8014344:	6828      	ldr	r0, [r5, #0]
 8014346:	2101      	movs	r1, #1
 8014348:	f7ff ff12 	bl	8014170 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 801434c:	6860      	ldr	r0, [r4, #4]
 801434e:	6803      	ldr	r3, [r0, #0]
 8014350:	4631      	mov	r1, r6
 8014352:	689b      	ldr	r3, [r3, #8]
 8014354:	4798      	blx	r3
 8014356:	6823      	ldr	r3, [r4, #0]
 8014358:	4620      	mov	r0, r4
 801435a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801435c:	4798      	blx	r3
 801435e:	6828      	ldr	r0, [r5, #0]
 8014360:	6803      	ldr	r3, [r0, #0]
 8014362:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8014366:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8014368:	4718      	bx	r3
 801436a:	bf00      	nop
 801436c:	2001383c 	.word	0x2001383c

08014370 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 8014370:	b508      	push	{r3, lr}
 8014372:	f7ee fd0f 	bl	8002d94 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8014376:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 801437a:	f7ee bd13 	b.w	8002da4 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0801437e <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 801437e:	b510      	push	{r4, lr}
 8014380:	2114      	movs	r1, #20
 8014382:	4604      	mov	r4, r0
 8014384:	f018 fbfd 	bl	802cb82 <_ZdlPvj>
 8014388:	4620      	mov	r0, r4
 801438a:	bd10      	pop	{r4, pc}

0801438c <_ZN8touchgfx13DMA_Interface5startEv>:
 801438c:	b510      	push	{r4, lr}
 801438e:	4604      	mov	r4, r0
 8014390:	6840      	ldr	r0, [r0, #4]
 8014392:	6803      	ldr	r3, [r0, #0]
 8014394:	681b      	ldr	r3, [r3, #0]
 8014396:	4798      	blx	r3
 8014398:	b948      	cbnz	r0, 80143ae <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 801439a:	7a63      	ldrb	r3, [r4, #9]
 801439c:	b13b      	cbz	r3, 80143ae <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 801439e:	7a23      	ldrb	r3, [r4, #8]
 80143a0:	b92b      	cbnz	r3, 80143ae <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 80143a2:	6823      	ldr	r3, [r4, #0]
 80143a4:	4620      	mov	r0, r4
 80143a6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80143a8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80143ac:	4718      	bx	r3
 80143ae:	bd10      	pop	{r4, pc}

080143b0 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 80143b0:	b570      	push	{r4, r5, r6, lr}
 80143b2:	4604      	mov	r4, r0
 80143b4:	6840      	ldr	r0, [r0, #4]
 80143b6:	6803      	ldr	r3, [r0, #0]
 80143b8:	681b      	ldr	r3, [r3, #0]
 80143ba:	4798      	blx	r3
 80143bc:	4605      	mov	r5, r0
 80143be:	b930      	cbnz	r0, 80143ce <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 80143c0:	7a23      	ldrb	r3, [r4, #8]
 80143c2:	b123      	cbz	r3, 80143ce <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 80143c4:	6860      	ldr	r0, [r4, #4]
 80143c6:	6803      	ldr	r3, [r0, #0]
 80143c8:	695b      	ldr	r3, [r3, #20]
 80143ca:	4798      	blx	r3
 80143cc:	7225      	strb	r5, [r4, #8]
 80143ce:	6860      	ldr	r0, [r4, #4]
 80143d0:	6803      	ldr	r3, [r0, #0]
 80143d2:	681b      	ldr	r3, [r3, #0]
 80143d4:	4798      	blx	r3
 80143d6:	b928      	cbnz	r0, 80143e4 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 80143d8:	6823      	ldr	r3, [r4, #0]
 80143da:	4620      	mov	r0, r4
 80143dc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80143de:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80143e2:	4718      	bx	r3
 80143e4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80143e8:	f7ee bcea 	b.w	8002dc0 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

080143ec <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 80143ec:	b510      	push	{r4, lr}
 80143ee:	4c04      	ldr	r4, [pc, #16]	; (8014400 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 80143f0:	6082      	str	r2, [r0, #8]
 80143f2:	2200      	movs	r2, #0
 80143f4:	e9c0 4100 	strd	r4, r1, [r0]
 80143f8:	e9c0 2203 	strd	r2, r2, [r0, #12]
 80143fc:	bd10      	pop	{r4, pc}
 80143fe:	bf00      	nop
 8014400:	08031768 	.word	0x08031768

08014404 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 8014404:	6840      	ldr	r0, [r0, #4]
 8014406:	6803      	ldr	r3, [r0, #0]
 8014408:	681b      	ldr	r3, [r3, #0]
 801440a:	4718      	bx	r3

0801440c <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 801440c:	4b06      	ldr	r3, [pc, #24]	; (8014428 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
 801440e:	60c1      	str	r1, [r0, #12]
 8014410:	094a      	lsrs	r2, r1, #5
 8014412:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 8014416:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801441a:	4313      	orrs	r3, r2
 801441c:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8014420:	4319      	orrs	r1, r3
 8014422:	8201      	strh	r1, [r0, #16]
 8014424:	4770      	bx	lr
 8014426:	bf00      	nop
 8014428:	fffff800 	.word	0xfffff800

0801442c <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 801442c:	f1a0 0008 	sub.w	r0, r0, #8
 8014430:	e7ec      	b.n	801440c <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 8014432:	bf00      	nop

08014434 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 8014434:	b508      	push	{r3, lr}
 8014436:	4b05      	ldr	r3, [pc, #20]	; (801444c <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 8014438:	6818      	ldr	r0, [r3, #0]
 801443a:	6803      	ldr	r3, [r0, #0]
 801443c:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 8014440:	4798      	blx	r3
 8014442:	1e43      	subs	r3, r0, #1
 8014444:	4258      	negs	r0, r3
 8014446:	4158      	adcs	r0, r3
 8014448:	bd08      	pop	{r3, pc}
 801444a:	bf00      	nop
 801444c:	2001383c 	.word	0x2001383c

08014450 <_ZN8touchgfx13PainterRGB565D1Ev>:
 8014450:	4770      	bx	lr

08014452 <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 8014452:	3808      	subs	r0, #8
 8014454:	4770      	bx	lr

08014456 <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 8014456:	b430      	push	{r4, r5}
 8014458:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 801445c:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 8014460:	8a02      	ldrh	r2, [r0, #16]
 8014462:	9202      	str	r2, [sp, #8]
 8014464:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8014468:	68c2      	ldr	r2, [r0, #12]
 801446a:	4629      	mov	r1, r5
 801446c:	4620      	mov	r0, r4
 801446e:	bc30      	pop	{r4, r5}
 8014470:	f7ee bf6a 	b.w	8003348 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

08014474 <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 8014474:	f7ee bf66 	b.w	8003344 <_ZN8touchgfx5paint8tearDownEv>

08014478 <_ZN8touchgfx13PainterRGB565D0Ev>:
 8014478:	b510      	push	{r4, lr}
 801447a:	2114      	movs	r1, #20
 801447c:	4604      	mov	r4, r0
 801447e:	f018 fb80 	bl	802cb82 <_ZdlPvj>
 8014482:	4620      	mov	r0, r4
 8014484:	bd10      	pop	{r4, pc}

08014486 <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 8014486:	f1a0 0008 	sub.w	r0, r0, #8
 801448a:	e7f5      	b.n	8014478 <_ZN8touchgfx13PainterRGB565D0Ev>

0801448c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 801448c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 801448e:	6803      	ldr	r3, [r0, #0]
 8014490:	460d      	mov	r5, r1
 8014492:	4604      	mov	r4, r0
 8014494:	4601      	mov	r1, r0
 8014496:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8014498:	a802      	add	r0, sp, #8
 801449a:	4798      	blx	r3
 801449c:	6828      	ldr	r0, [r5, #0]
 801449e:	6869      	ldr	r1, [r5, #4]
 80144a0:	466b      	mov	r3, sp
 80144a2:	c303      	stmia	r3!, {r0, r1}
 80144a4:	4668      	mov	r0, sp
 80144a6:	4619      	mov	r1, r3
 80144a8:	f7fe fb30 	bl	8012b0c <_ZN8touchgfx4RectaNERKS0_>
 80144ac:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 80144ae:	b188      	cbz	r0, 80144d4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80144b0:	6803      	ldr	r3, [r0, #0]
 80144b2:	1d21      	adds	r1, r4, #4
 80144b4:	68db      	ldr	r3, [r3, #12]
 80144b6:	4798      	blx	r3
 80144b8:	b160      	cbz	r0, 80144d4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80144ba:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 80144be:	2b00      	cmp	r3, #0
 80144c0:	dd08      	ble.n	80144d4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80144c2:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 80144c6:	2d00      	cmp	r5, #0
 80144c8:	dd04      	ble.n	80144d4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80144ca:	4a2b      	ldr	r2, [pc, #172]	; (8014578 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
 80144cc:	7812      	ldrb	r2, [r2, #0]
 80144ce:	b11a      	cbz	r2, 80144d8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
 80144d0:	2a01      	cmp	r2, #1
 80144d2:	d029      	beq.n	8014528 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
 80144d4:	b004      	add	sp, #16
 80144d6:	bd70      	pop	{r4, r5, r6, pc}
 80144d8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80144dc:	441d      	add	r5, r3
 80144de:	b2ad      	uxth	r5, r5
 80144e0:	b22e      	sxth	r6, r5
 80144e2:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 80144e6:	42b3      	cmp	r3, r6
 80144e8:	daf4      	bge.n	80144d4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80144ea:	6823      	ldr	r3, [r4, #0]
 80144ec:	4669      	mov	r1, sp
 80144ee:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80144f0:	4620      	mov	r0, r4
 80144f2:	4798      	blx	r3
 80144f4:	b940      	cbnz	r0, 8014508 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 80144f6:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 80144fa:	2b01      	cmp	r3, #1
 80144fc:	d004      	beq.n	8014508 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 80144fe:	3301      	adds	r3, #1
 8014500:	105b      	asrs	r3, r3, #1
 8014502:	f8ad 3006 	strh.w	r3, [sp, #6]
 8014506:	e7f0      	b.n	80144ea <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 8014508:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 801450c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8014510:	4413      	add	r3, r2
 8014512:	b29b      	uxth	r3, r3
 8014514:	441a      	add	r2, r3
 8014516:	b212      	sxth	r2, r2
 8014518:	4296      	cmp	r6, r2
 801451a:	f8ad 3002 	strh.w	r3, [sp, #2]
 801451e:	dae0      	bge.n	80144e2 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8014520:	1aeb      	subs	r3, r5, r3
 8014522:	f8ad 3006 	strh.w	r3, [sp, #6]
 8014526:	e7dc      	b.n	80144e2 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8014528:	f8bd 5000 	ldrh.w	r5, [sp]
 801452c:	441d      	add	r5, r3
 801452e:	b2ad      	uxth	r5, r5
 8014530:	b22e      	sxth	r6, r5
 8014532:	f9bd 3000 	ldrsh.w	r3, [sp]
 8014536:	42b3      	cmp	r3, r6
 8014538:	dacc      	bge.n	80144d4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 801453a:	6823      	ldr	r3, [r4, #0]
 801453c:	4669      	mov	r1, sp
 801453e:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8014540:	4620      	mov	r0, r4
 8014542:	4798      	blx	r3
 8014544:	b940      	cbnz	r0, 8014558 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 8014546:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801454a:	2b01      	cmp	r3, #1
 801454c:	d004      	beq.n	8014558 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 801454e:	3301      	adds	r3, #1
 8014550:	105b      	asrs	r3, r3, #1
 8014552:	f8ad 3004 	strh.w	r3, [sp, #4]
 8014556:	e7f0      	b.n	801453a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 8014558:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 801455c:	f8bd 3000 	ldrh.w	r3, [sp]
 8014560:	4413      	add	r3, r2
 8014562:	b29b      	uxth	r3, r3
 8014564:	441a      	add	r2, r3
 8014566:	b212      	sxth	r2, r2
 8014568:	4296      	cmp	r6, r2
 801456a:	f8ad 3000 	strh.w	r3, [sp]
 801456e:	dae0      	bge.n	8014532 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8014570:	1aeb      	subs	r3, r5, r3
 8014572:	f8ad 3004 	strh.w	r3, [sp, #4]
 8014576:	e7dc      	b.n	8014532 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8014578:	20013834 	.word	0x20013834

0801457c <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 801457c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801457e:	6803      	ldr	r3, [r0, #0]
 8014580:	4604      	mov	r4, r0
 8014582:	4601      	mov	r1, r0
 8014584:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8014586:	4668      	mov	r0, sp
 8014588:	4798      	blx	r3
 801458a:	2100      	movs	r1, #0
 801458c:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 8014590:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8014594:	9102      	str	r1, [sp, #8]
 8014596:	4668      	mov	r0, sp
 8014598:	a902      	add	r1, sp, #8
 801459a:	f8ad 200c 	strh.w	r2, [sp, #12]
 801459e:	f8ad 300e 	strh.w	r3, [sp, #14]
 80145a2:	f7fe fab3 	bl	8012b0c <_ZN8touchgfx4RectaNERKS0_>
 80145a6:	6823      	ldr	r3, [r4, #0]
 80145a8:	4669      	mov	r1, sp
 80145aa:	691b      	ldr	r3, [r3, #16]
 80145ac:	4620      	mov	r0, r4
 80145ae:	4798      	blx	r3
 80145b0:	b004      	add	sp, #16
 80145b2:	bd10      	pop	{r4, pc}

080145b4 <_ZN8touchgfx12CanvasWidgetC1Ev>:
 80145b4:	2101      	movs	r1, #1
 80145b6:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 80145ba:	490b      	ldr	r1, [pc, #44]	; (80145e8 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 80145bc:	6001      	str	r1, [r0, #0]
 80145be:	2200      	movs	r2, #0
 80145c0:	21ff      	movs	r1, #255	; 0xff
 80145c2:	8082      	strh	r2, [r0, #4]
 80145c4:	80c2      	strh	r2, [r0, #6]
 80145c6:	8102      	strh	r2, [r0, #8]
 80145c8:	8142      	strh	r2, [r0, #10]
 80145ca:	8182      	strh	r2, [r0, #12]
 80145cc:	81c2      	strh	r2, [r0, #14]
 80145ce:	8202      	strh	r2, [r0, #16]
 80145d0:	8242      	strh	r2, [r0, #18]
 80145d2:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80145d6:	61c2      	str	r2, [r0, #28]
 80145d8:	8402      	strh	r2, [r0, #32]
 80145da:	8442      	strh	r2, [r0, #34]	; 0x22
 80145dc:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 80145e0:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 80145e4:	6282      	str	r2, [r0, #40]	; 0x28
 80145e6:	4770      	bx	lr
 80145e8:	080317c4 	.word	0x080317c4

080145ec <_ZNK8touchgfx4Line14getMinimalRectEv>:
 80145ec:	f101 0364 	add.w	r3, r1, #100	; 0x64
 80145f0:	4602      	mov	r2, r0
 80145f2:	cb03      	ldmia	r3!, {r0, r1}
 80145f4:	6010      	str	r0, [r2, #0]
 80145f6:	6051      	str	r1, [r2, #4]
 80145f8:	4610      	mov	r0, r2
 80145fa:	4770      	bx	lr

080145fc <_ZN8touchgfx4LineD1Ev>:
 80145fc:	4770      	bx	lr

080145fe <_ZN8touchgfx4LineD0Ev>:
 80145fe:	b510      	push	{r4, lr}
 8014600:	2170      	movs	r1, #112	; 0x70
 8014602:	4604      	mov	r4, r0
 8014604:	f018 fabd 	bl	802cb82 <_ZdlPvj>
 8014608:	4620      	mov	r0, r4
 801460a:	bd10      	pop	{r4, pc}

0801460c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
 801460c:	b507      	push	{r0, r1, r2, lr}
 801460e:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 8014612:	ab01      	add	r3, sp, #4
 8014614:	6809      	ldr	r1, [r1, #0]
 8014616:	6800      	ldr	r0, [r0, #0]
 8014618:	f005 fc80 	bl	8019f1c <_ZN8touchgfx6muldivElllRl>
 801461c:	b003      	add	sp, #12
 801461e:	f85d fb04 	ldr.w	pc, [sp], #4

08014622 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
 8014622:	6800      	ldr	r0, [r0, #0]
 8014624:	2800      	cmp	r0, #0
 8014626:	bfb9      	ittee	lt
 8014628:	2320      	movlt	r3, #32
 801462a:	fb90 f0f3 	sdivlt	r0, r0, r3
 801462e:	301f      	addge	r0, #31
 8014630:	1140      	asrge	r0, r0, #5
 8014632:	4770      	bx	lr

08014634 <_ZNK8touchgfx4Line17invalidateContentEv>:
 8014634:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014638:	f890 3026 	ldrb.w	r3, [r0, #38]	; 0x26
 801463c:	b089      	sub	sp, #36	; 0x24
 801463e:	4604      	mov	r4, r0
 8014640:	b353      	cbz	r3, 8014698 <_ZNK8touchgfx4Line17invalidateContentEv+0x64>
 8014642:	6803      	ldr	r3, [r0, #0]
 8014644:	4601      	mov	r1, r0
 8014646:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8014648:	a802      	add	r0, sp, #8
 801464a:	4798      	blx	r3
 801464c:	2220      	movs	r2, #32
 801464e:	f8d4 a02c 	ldr.w	sl, [r4, #44]	; 0x2c
 8014652:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8014654:	fb9a f0f2 	sdiv	r0, sl, r2
 8014658:	fb91 f5f2 	sdiv	r5, r1, r2
 801465c:	1b40      	subs	r0, r0, r5
 801465e:	2800      	cmp	r0, #0
 8014660:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8014662:	fb93 f6f2 	sdiv	r6, r3, r2
 8014666:	bfb8      	it	lt
 8014668:	4240      	neglt	r0, r0
 801466a:	0076      	lsls	r6, r6, #1
 801466c:	4286      	cmp	r6, r0
 801466e:	f8d4 b000 	ldr.w	fp, [r4]
 8014672:	dc0c      	bgt.n	801468e <_ZNK8touchgfx4Line17invalidateContentEv+0x5a>
 8014674:	6b25      	ldr	r5, [r4, #48]	; 0x30
 8014676:	f8d4 8038 	ldr.w	r8, [r4, #56]	; 0x38
 801467a:	fb95 f0f2 	sdiv	r0, r5, r2
 801467e:	fb98 f7f2 	sdiv	r7, r8, r2
 8014682:	1bc0      	subs	r0, r0, r7
 8014684:	2800      	cmp	r0, #0
 8014686:	bfb8      	it	lt
 8014688:	4240      	neglt	r0, r0
 801468a:	4286      	cmp	r6, r0
 801468c:	dd07      	ble.n	801469e <_ZNK8touchgfx4Line17invalidateContentEv+0x6a>
 801468e:	f8db 3010 	ldr.w	r3, [fp, #16]
 8014692:	a902      	add	r1, sp, #8
 8014694:	4620      	mov	r0, r4
 8014696:	4798      	blx	r3
 8014698:	b009      	add	sp, #36	; 0x24
 801469a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801469e:	3301      	adds	r3, #1
 80146a0:	2002      	movs	r0, #2
 80146a2:	f10d 0920 	add.w	r9, sp, #32
 80146a6:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80146aa:	4103      	asrs	r3, r0
 80146ac:	f849 3d08 	str.w	r3, [r9, #-8]!
 80146b0:	eb01 060a 	add.w	r6, r1, sl
 80146b4:	eb08 0705 	add.w	r7, r8, r5
 80146b8:	fb96 f6f0 	sdiv	r6, r6, r0
 80146bc:	fb97 f7f0 	sdiv	r7, r7, r0
 80146c0:	4648      	mov	r0, r9
 80146c2:	9101      	str	r1, [sp, #4]
 80146c4:	b236      	sxth	r6, r6
 80146c6:	b23f      	sxth	r7, r7
 80146c8:	fb96 f6f2 	sdiv	r6, r6, r2
 80146cc:	fb97 f7f2 	sdiv	r7, r7, r2
 80146d0:	f7ff ffa7 	bl	8014622 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 80146d4:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80146d8:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
 80146dc:	9901      	ldr	r1, [sp, #4]
 80146de:	4293      	cmp	r3, r2
 80146e0:	fa1f fe87 	uxth.w	lr, r7
 80146e4:	fa1f fc86 	uxth.w	ip, r6
 80146e8:	eba1 0a0a 	sub.w	sl, r1, sl
 80146ec:	b280      	uxth	r0, r0
 80146ee:	da54      	bge.n	801479a <_ZNK8touchgfx4Line17invalidateContentEv+0x166>
 80146f0:	ebac 0100 	sub.w	r1, ip, r0
 80146f4:	b289      	uxth	r1, r1
 80146f6:	4460      	add	r0, ip
 80146f8:	f1ba 0f00 	cmp.w	sl, #0
 80146fc:	b20e      	sxth	r6, r1
 80146fe:	b280      	uxth	r0, r0
 8014700:	f9bd a008 	ldrsh.w	sl, [sp, #8]
 8014704:	f9bd c00a 	ldrsh.w	ip, [sp, #10]
 8014708:	da29      	bge.n	801475e <_ZNK8touchgfx4Line17invalidateContentEv+0x12a>
 801470a:	eba8 0505 	sub.w	r5, r8, r5
 801470e:	2d00      	cmp	r5, #0
 8014710:	da2a      	bge.n	8014768 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 8014712:	fa1f f88a 	uxth.w	r8, sl
 8014716:	eba0 0008 	sub.w	r0, r0, r8
 801471a:	fa1f f58c 	uxth.w	r5, ip
 801471e:	4443      	add	r3, r8
 8014720:	f8ad 0014 	strh.w	r0, [sp, #20]
 8014724:	1a59      	subs	r1, r3, r1
 8014726:	ebae 0005 	sub.w	r0, lr, r5
 801472a:	f8ad a010 	strh.w	sl, [sp, #16]
 801472e:	f8ad c012 	strh.w	ip, [sp, #18]
 8014732:	f8ad 0016 	strh.w	r0, [sp, #22]
 8014736:	f8ad 6018 	strh.w	r6, [sp, #24]
 801473a:	f8ad 701a 	strh.w	r7, [sp, #26]
 801473e:	f8ad 101c 	strh.w	r1, [sp, #28]
 8014742:	442a      	add	r2, r5
 8014744:	eba2 0e0e 	sub.w	lr, r2, lr
 8014748:	f8ad e01e 	strh.w	lr, [sp, #30]
 801474c:	f8db 3010 	ldr.w	r3, [fp, #16]
 8014750:	a904      	add	r1, sp, #16
 8014752:	4620      	mov	r0, r4
 8014754:	4798      	blx	r3
 8014756:	6823      	ldr	r3, [r4, #0]
 8014758:	4649      	mov	r1, r9
 801475a:	691b      	ldr	r3, [r3, #16]
 801475c:	e79a      	b.n	8014694 <_ZNK8touchgfx4Line17invalidateContentEv+0x60>
 801475e:	d003      	beq.n	8014768 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 8014760:	eba8 0505 	sub.w	r5, r8, r5
 8014764:	2d00      	cmp	r5, #0
 8014766:	dcd4      	bgt.n	8014712 <_ZNK8touchgfx4Line17invalidateContentEv+0xde>
 8014768:	fa1f f88a 	uxth.w	r8, sl
 801476c:	4443      	add	r3, r8
 801476e:	fa1f f58c 	uxth.w	r5, ip
 8014772:	1a59      	subs	r1, r3, r1
 8014774:	eba0 0008 	sub.w	r0, r0, r8
 8014778:	ebae 0305 	sub.w	r3, lr, r5
 801477c:	f8ad 6010 	strh.w	r6, [sp, #16]
 8014780:	f8ad c012 	strh.w	ip, [sp, #18]
 8014784:	f8ad 1014 	strh.w	r1, [sp, #20]
 8014788:	f8ad 3016 	strh.w	r3, [sp, #22]
 801478c:	f8ad a018 	strh.w	sl, [sp, #24]
 8014790:	f8ad 701a 	strh.w	r7, [sp, #26]
 8014794:	f8ad 001c 	strh.w	r0, [sp, #28]
 8014798:	e7d3      	b.n	8014742 <_ZNK8touchgfx4Line17invalidateContentEv+0x10e>
 801479a:	ebae 0100 	sub.w	r1, lr, r0
 801479e:	b289      	uxth	r1, r1
 80147a0:	4470      	add	r0, lr
 80147a2:	f1ba 0f00 	cmp.w	sl, #0
 80147a6:	b20f      	sxth	r7, r1
 80147a8:	b280      	uxth	r0, r0
 80147aa:	f9bd e008 	ldrsh.w	lr, [sp, #8]
 80147ae:	f9bd a00a 	ldrsh.w	sl, [sp, #10]
 80147b2:	da20      	bge.n	80147f6 <_ZNK8touchgfx4Line17invalidateContentEv+0x1c2>
 80147b4:	eba8 0505 	sub.w	r5, r8, r5
 80147b8:	2d00      	cmp	r5, #0
 80147ba:	da21      	bge.n	8014800 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 80147bc:	fa1f f88e 	uxth.w	r8, lr
 80147c0:	fa1f f58a 	uxth.w	r5, sl
 80147c4:	4443      	add	r3, r8
 80147c6:	442a      	add	r2, r5
 80147c8:	f8ad e010 	strh.w	lr, [sp, #16]
 80147cc:	1b40      	subs	r0, r0, r5
 80147ce:	ebac 0e08 	sub.w	lr, ip, r8
 80147d2:	1a51      	subs	r1, r2, r1
 80147d4:	eba3 0c0c 	sub.w	ip, r3, ip
 80147d8:	f8ad a012 	strh.w	sl, [sp, #18]
 80147dc:	f8ad e014 	strh.w	lr, [sp, #20]
 80147e0:	f8ad 0016 	strh.w	r0, [sp, #22]
 80147e4:	f8ad 6018 	strh.w	r6, [sp, #24]
 80147e8:	f8ad 701a 	strh.w	r7, [sp, #26]
 80147ec:	f8ad c01c 	strh.w	ip, [sp, #28]
 80147f0:	f8ad 101e 	strh.w	r1, [sp, #30]
 80147f4:	e7aa      	b.n	801474c <_ZNK8touchgfx4Line17invalidateContentEv+0x118>
 80147f6:	d003      	beq.n	8014800 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 80147f8:	eba8 0505 	sub.w	r5, r8, r5
 80147fc:	2d00      	cmp	r5, #0
 80147fe:	dcdd      	bgt.n	80147bc <_ZNK8touchgfx4Line17invalidateContentEv+0x188>
 8014800:	fa1f f58e 	uxth.w	r5, lr
 8014804:	fa1f f88a 	uxth.w	r8, sl
 8014808:	4442      	add	r2, r8
 801480a:	442b      	add	r3, r5
 801480c:	f8ad 7012 	strh.w	r7, [sp, #18]
 8014810:	1a51      	subs	r1, r2, r1
 8014812:	ebac 0705 	sub.w	r7, ip, r5
 8014816:	eba0 0008 	sub.w	r0, r0, r8
 801481a:	eba3 0c0c 	sub.w	ip, r3, ip
 801481e:	f8ad e010 	strh.w	lr, [sp, #16]
 8014822:	f8ad 7014 	strh.w	r7, [sp, #20]
 8014826:	f8ad 1016 	strh.w	r1, [sp, #22]
 801482a:	f8ad 6018 	strh.w	r6, [sp, #24]
 801482e:	f8ad a01a 	strh.w	sl, [sp, #26]
 8014832:	f8ad c01c 	strh.w	ip, [sp, #28]
 8014836:	f8ad 001e 	strh.w	r0, [sp, #30]
 801483a:	e787      	b.n	801474c <_ZNK8touchgfx4Line17invalidateContentEv+0x118>

0801483c <_ZN8touchgfx7CWRUtil4sineEi>:
 801483c:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8014840:	fb90 f2f3 	sdiv	r2, r0, r3
 8014844:	fb02 0013 	mls	r0, r2, r3, r0
 8014848:	2800      	cmp	r0, #0
 801484a:	bfb8      	it	lt
 801484c:	18c0      	addlt	r0, r0, r3
 801484e:	285a      	cmp	r0, #90	; 0x5a
 8014850:	4b09      	ldr	r3, [pc, #36]	; (8014878 <_ZN8touchgfx7CWRUtil4sineEi+0x3c>)
 8014852:	dc02      	bgt.n	801485a <_ZN8touchgfx7CWRUtil4sineEi+0x1e>
 8014854:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8014858:	4770      	bx	lr
 801485a:	28b4      	cmp	r0, #180	; 0xb4
 801485c:	dc02      	bgt.n	8014864 <_ZN8touchgfx7CWRUtil4sineEi+0x28>
 801485e:	f1c0 00b4 	rsb	r0, r0, #180	; 0xb4
 8014862:	e7f7      	b.n	8014854 <_ZN8touchgfx7CWRUtil4sineEi+0x18>
 8014864:	f5b0 7f87 	cmp.w	r0, #270	; 0x10e
 8014868:	bfd4      	ite	le
 801486a:	38b4      	suble	r0, #180	; 0xb4
 801486c:	f5c0 70b4 	rsbgt	r0, r0, #360	; 0x168
 8014870:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8014874:	4240      	negs	r0, r0
 8014876:	4770      	bx	lr
 8014878:	08031890 	.word	0x08031890

0801487c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>:
 801487c:	f44f 5334 	mov.w	r3, #11520	; 0x2d00
 8014880:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8014882:	fb90 f2f3 	sdiv	r2, r0, r3
 8014886:	fb02 0013 	mls	r0, r2, r3, r0
 801488a:	2800      	cmp	r0, #0
 801488c:	bfb8      	it	lt
 801488e:	18c0      	addlt	r0, r0, r3
 8014890:	1144      	asrs	r4, r0, #5
 8014892:	f000 061f 	and.w	r6, r0, #31
 8014896:	4620      	mov	r0, r4
 8014898:	f7ff ffd0 	bl	801483c <_ZN8touchgfx7CWRUtil4sineEi>
 801489c:	4605      	mov	r5, r0
 801489e:	b90e      	cbnz	r6, 80148a4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x28>
 80148a0:	b002      	add	sp, #8
 80148a2:	bd70      	pop	{r4, r5, r6, pc}
 80148a4:	1c60      	adds	r0, r4, #1
 80148a6:	f7ff ffc9 	bl	801483c <_ZN8touchgfx7CWRUtil4sineEi>
 80148aa:	ab01      	add	r3, sp, #4
 80148ac:	2220      	movs	r2, #32
 80148ae:	4631      	mov	r1, r6
 80148b0:	1b40      	subs	r0, r0, r5
 80148b2:	f005 fb33 	bl	8019f1c <_ZN8touchgfx6muldivElllRl>
 80148b6:	4428      	add	r0, r5
 80148b8:	e7f2      	b.n	80148a0 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x24>

080148ba <_ZN8touchgfx7CWRUtil5isqrtEm>:
 80148ba:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
 80148be:	bf2c      	ite	cs
 80148c0:	f04f 4280 	movcs.w	r2, #1073741824	; 0x40000000
 80148c4:	f44f 4280 	movcc.w	r2, #16384	; 0x4000
 80148c8:	2300      	movs	r3, #0
 80148ca:	1899      	adds	r1, r3, r2
 80148cc:	4288      	cmp	r0, r1
 80148ce:	bf24      	itt	cs
 80148d0:	1853      	addcs	r3, r2, r1
 80148d2:	1a40      	subcs	r0, r0, r1
 80148d4:	0892      	lsrs	r2, r2, #2
 80148d6:	ea4f 0353 	mov.w	r3, r3, lsr #1
 80148da:	d1f6      	bne.n	80148ca <_ZN8touchgfx7CWRUtil5isqrtEm+0x10>
 80148dc:	4618      	mov	r0, r3
 80148de:	4770      	bx	lr

080148e0 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
 80148e0:	b510      	push	{r4, lr}
 80148e2:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
 80148e6:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
 80148ea:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
 80148ee:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
 80148f2:	13a4      	asrs	r4, r4, #14
 80148f4:	139b      	asrs	r3, r3, #14
 80148f6:	429c      	cmp	r4, r3
 80148f8:	bfb8      	it	lt
 80148fa:	461c      	movlt	r4, r3
 80148fc:	2c01      	cmp	r4, #1
 80148fe:	dd07      	ble.n	8014910 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
 8014900:	fb91 f1f4 	sdiv	r1, r1, r4
 8014904:	fb90 f0f4 	sdiv	r0, r0, r4
 8014908:	f7ff ffea 	bl	80148e0 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 801490c:	4360      	muls	r0, r4
 801490e:	bd10      	pop	{r4, pc}
 8014910:	4340      	muls	r0, r0
 8014912:	fb01 0001 	mla	r0, r1, r1, r0
 8014916:	f7ff ffd0 	bl	80148ba <_ZN8touchgfx7CWRUtil5isqrtEm>
 801491a:	e7f8      	b.n	801490e <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>

0801491c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>:
 801491c:	2800      	cmp	r0, #0
 801491e:	b508      	push	{r3, lr}
 8014920:	da05      	bge.n	801492e <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x12>
 8014922:	4240      	negs	r0, r0
 8014924:	f7ff fffa 	bl	801491c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8014928:	4240      	negs	r0, r0
 801492a:	b240      	sxtb	r0, r0
 801492c:	bd08      	pop	{r3, pc}
 801492e:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
 8014932:	dc11      	bgt.n	8014958 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x3c>
 8014934:	f5b0 7f35 	cmp.w	r0, #724	; 0x2d4
 8014938:	dd09      	ble.n	801494e <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x32>
 801493a:	4340      	muls	r0, r0
 801493c:	f5c0 1080 	rsb	r0, r0, #1048576	; 0x100000
 8014940:	f7ff ffbb 	bl	80148ba <_ZN8touchgfx7CWRUtil5isqrtEm>
 8014944:	f7ff ffea 	bl	801491c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8014948:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 801494c:	e7ed      	b.n	801492a <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0xe>
 801494e:	3003      	adds	r0, #3
 8014950:	10c0      	asrs	r0, r0, #3
 8014952:	4b02      	ldr	r3, [pc, #8]	; (801495c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x40>)
 8014954:	5618      	ldrsb	r0, [r3, r0]
 8014956:	e7e9      	b.n	801492c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 8014958:	2000      	movs	r0, #0
 801495a:	e7e7      	b.n	801492c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 801495c:	08031834 	.word	0x08031834

08014960 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>:
 8014960:	4281      	cmp	r1, r0
 8014962:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8014964:	460c      	mov	r4, r1
 8014966:	4615      	mov	r5, r2
 8014968:	dd07      	ble.n	801497a <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x1a>
 801496a:	4601      	mov	r1, r0
 801496c:	4620      	mov	r0, r4
 801496e:	f7ff fff7 	bl	8014960 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8014972:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 8014976:	b003      	add	sp, #12
 8014978:	bd30      	pop	{r4, r5, pc}
 801497a:	f7ff ffb1 	bl	80148e0 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 801497e:	6028      	str	r0, [r5, #0]
 8014980:	2800      	cmp	r0, #0
 8014982:	d0f8      	beq.n	8014976 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>
 8014984:	4602      	mov	r2, r0
 8014986:	ab01      	add	r3, sp, #4
 8014988:	f44f 6180 	mov.w	r1, #1024	; 0x400
 801498c:	4620      	mov	r0, r4
 801498e:	f005 fac5 	bl	8019f1c <_ZN8touchgfx6muldivElllRl>
 8014992:	f7ff ffc3 	bl	801491c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8014996:	e7ee      	b.n	8014976 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>

08014998 <_ZN8touchgfx4LineC1Ev>:
 8014998:	b510      	push	{r4, lr}
 801499a:	4604      	mov	r4, r0
 801499c:	f7ff fe0a 	bl	80145b4 <_ZN8touchgfx12CanvasWidgetC1Ev>
 80149a0:	4b0c      	ldr	r3, [pc, #48]	; (80149d4 <_ZN8touchgfx4LineC1Ev+0x3c>)
 80149a2:	6023      	str	r3, [r4, #0]
 80149a4:	2220      	movs	r2, #32
 80149a6:	2300      	movs	r3, #0
 80149a8:	63e2      	str	r2, [r4, #60]	; 0x3c
 80149aa:	2212      	movs	r2, #18
 80149ac:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 80149b0:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 80149b4:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 80149b8:	e9c4 3311 	strd	r3, r3, [r4, #68]	; 0x44
 80149bc:	e9c4 3313 	strd	r3, r3, [r4, #76]	; 0x4c
 80149c0:	e9c4 3315 	strd	r3, r3, [r4, #84]	; 0x54
 80149c4:	e9c4 3317 	strd	r3, r3, [r4, #92]	; 0x5c
 80149c8:	e9c4 3319 	strd	r3, r3, [r4, #100]	; 0x64
 80149cc:	66e2      	str	r2, [r4, #108]	; 0x6c
 80149ce:	60a3      	str	r3, [r4, #8]
 80149d0:	4620      	mov	r0, r4
 80149d2:	bd10      	pop	{r4, pc}
 80149d4:	08031950 	.word	0x08031950

080149d8 <_ZN8touchgfx4Line17updateCachedShapeEv>:
 80149d8:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 80149dc:	6b47      	ldr	r7, [r0, #52]	; 0x34
 80149de:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80149e0:	6b85      	ldr	r5, [r0, #56]	; 0x38
 80149e2:	6b02      	ldr	r2, [r0, #48]	; 0x30
 80149e4:	1aff      	subs	r7, r7, r3
 80149e6:	4604      	mov	r4, r0
 80149e8:	eba5 0502 	sub.w	r5, r5, r2
 80149ec:	d142      	bne.n	8014a74 <_ZN8touchgfx4Line17updateCachedShapeEv+0x9c>
 80149ee:	b955      	cbnz	r5, 8014a06 <_ZN8touchgfx4Line17updateCachedShapeEv+0x2e>
 80149f0:	e9c0 3313 	strd	r3, r3, [r0, #76]	; 0x4c
 80149f4:	e9c0 3311 	strd	r3, r3, [r0, #68]	; 0x44
 80149f8:	e9c0 2217 	strd	r2, r2, [r0, #92]	; 0x5c
 80149fc:	e9c0 2215 	strd	r2, r2, [r0, #84]	; 0x54
 8014a00:	b002      	add	sp, #8
 8014a02:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8014a06:	ea85 78e5 	eor.w	r8, r5, r5, asr #31
 8014a0a:	eba8 78e5 	sub.w	r8, r8, r5, asr #31
 8014a0e:	4629      	mov	r1, r5
 8014a10:	4642      	mov	r2, r8
 8014a12:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8014a14:	f005 faa1 	bl	8019f5a <_ZN8touchgfx6muldivElll>
 8014a18:	2502      	movs	r5, #2
 8014a1a:	4642      	mov	r2, r8
 8014a1c:	fb90 f6f5 	sdiv	r6, r0, r5
 8014a20:	4639      	mov	r1, r7
 8014a22:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8014a24:	f005 fa99 	bl	8019f5a <_ZN8touchgfx6muldivElll>
 8014a28:	f894 9040 	ldrb.w	r9, [r4, #64]	; 0x40
 8014a2c:	fb90 f5f5 	sdiv	r5, r0, r5
 8014a30:	f1b9 0f00 	cmp.w	r9, #0
 8014a34:	d067      	beq.n	8014b06 <_ZN8touchgfx4Line17updateCachedShapeEv+0x12e>
 8014a36:	f1b9 0f02 	cmp.w	r9, #2
 8014a3a:	d878      	bhi.n	8014b2e <_ZN8touchgfx4Line17updateCachedShapeEv+0x156>
 8014a3c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8014a3e:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8014a40:	1b93      	subs	r3, r2, r6
 8014a42:	1b5b      	subs	r3, r3, r5
 8014a44:	6463      	str	r3, [r4, #68]	; 0x44
 8014a46:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8014a48:	18e9      	adds	r1, r5, r3
 8014a4a:	1b89      	subs	r1, r1, r6
 8014a4c:	6561      	str	r1, [r4, #84]	; 0x54
 8014a4e:	1b81      	subs	r1, r0, r6
 8014a50:	4429      	add	r1, r5
 8014a52:	64a1      	str	r1, [r4, #72]	; 0x48
 8014a54:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8014a56:	4430      	add	r0, r6
 8014a58:	186f      	adds	r7, r5, r1
 8014a5a:	4432      	add	r2, r6
 8014a5c:	1b49      	subs	r1, r1, r5
 8014a5e:	4437      	add	r7, r6
 8014a60:	4428      	add	r0, r5
 8014a62:	4431      	add	r1, r6
 8014a64:	1b52      	subs	r2, r2, r5
 8014a66:	1b5b      	subs	r3, r3, r5
 8014a68:	65a7      	str	r7, [r4, #88]	; 0x58
 8014a6a:	64e0      	str	r0, [r4, #76]	; 0x4c
 8014a6c:	65e1      	str	r1, [r4, #92]	; 0x5c
 8014a6e:	6522      	str	r2, [r4, #80]	; 0x50
 8014a70:	1b9b      	subs	r3, r3, r6
 8014a72:	e05b      	b.n	8014b2c <_ZN8touchgfx4Line17updateCachedShapeEv+0x154>
 8014a74:	ea87 78e7 	eor.w	r8, r7, r7, asr #31
 8014a78:	eba8 78e7 	sub.w	r8, r8, r7, asr #31
 8014a7c:	2d00      	cmp	r5, #0
 8014a7e:	d0c6      	beq.n	8014a0e <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 8014a80:	ea85 73e5 	eor.w	r3, r5, r5, asr #31
 8014a84:	eba3 73e5 	sub.w	r3, r3, r5, asr #31
 8014a88:	fb93 f2f8 	sdiv	r2, r3, r8
 8014a8c:	fb08 3312 	mls	r3, r8, r2, r3
 8014a90:	b353      	cbz	r3, 8014ae8 <_ZN8touchgfx4Line17updateCachedShapeEv+0x110>
 8014a92:	fb98 f2f3 	sdiv	r2, r8, r3
 8014a96:	fb03 8812 	mls	r8, r3, r2, r8
 8014a9a:	f1b8 0f00 	cmp.w	r8, #0
 8014a9e:	d1f3      	bne.n	8014a88 <_ZN8touchgfx4Line17updateCachedShapeEv+0xb0>
 8014aa0:	2b01      	cmp	r3, #1
 8014aa2:	bf1c      	itt	ne
 8014aa4:	fb95 f5f3 	sdivne	r5, r5, r3
 8014aa8:	fb97 f7f3 	sdivne	r7, r7, r3
 8014aac:	ea87 73e7 	eor.w	r3, r7, r7, asr #31
 8014ab0:	f24b 5104 	movw	r1, #46340	; 0xb504
 8014ab4:	eba3 73e7 	sub.w	r3, r3, r7, asr #31
 8014ab8:	ea85 72e5 	eor.w	r2, r5, r5, asr #31
 8014abc:	428b      	cmp	r3, r1
 8014abe:	eba2 72e5 	sub.w	r2, r2, r5, asr #31
 8014ac2:	4608      	mov	r0, r1
 8014ac4:	dd01      	ble.n	8014aca <_ZN8touchgfx4Line17updateCachedShapeEv+0xf2>
 8014ac6:	428a      	cmp	r2, r1
 8014ac8:	dc10      	bgt.n	8014aec <_ZN8touchgfx4Line17updateCachedShapeEv+0x114>
 8014aca:	fb90 f3f3 	sdiv	r3, r0, r3
 8014ace:	fb90 f2f2 	sdiv	r2, r0, r2
 8014ad2:	4293      	cmp	r3, r2
 8014ad4:	bfa8      	it	ge
 8014ad6:	4613      	movge	r3, r2
 8014ad8:	435f      	muls	r7, r3
 8014ada:	435d      	muls	r5, r3
 8014adc:	4629      	mov	r1, r5
 8014ade:	4638      	mov	r0, r7
 8014ae0:	f7ff fefe 	bl	80148e0 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8014ae4:	4680      	mov	r8, r0
 8014ae6:	e792      	b.n	8014a0e <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 8014ae8:	4643      	mov	r3, r8
 8014aea:	e7d9      	b.n	8014aa0 <_ZN8touchgfx4Line17updateCachedShapeEv+0xc8>
 8014aec:	fb93 f3f1 	sdiv	r3, r3, r1
 8014af0:	fb92 f2f1 	sdiv	r2, r2, r1
 8014af4:	4293      	cmp	r3, r2
 8014af6:	bfcc      	ite	gt
 8014af8:	3301      	addgt	r3, #1
 8014afa:	1c53      	addle	r3, r2, #1
 8014afc:	fb97 f7f3 	sdiv	r7, r7, r3
 8014b00:	fb95 f5f3 	sdiv	r5, r5, r3
 8014b04:	e7ea      	b.n	8014adc <_ZN8touchgfx4Line17updateCachedShapeEv+0x104>
 8014b06:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8014b08:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8014b0a:	1b93      	subs	r3, r2, r6
 8014b0c:	6463      	str	r3, [r4, #68]	; 0x44
 8014b0e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8014b10:	18e9      	adds	r1, r5, r3
 8014b12:	6561      	str	r1, [r4, #84]	; 0x54
 8014b14:	1b81      	subs	r1, r0, r6
 8014b16:	64a1      	str	r1, [r4, #72]	; 0x48
 8014b18:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8014b1a:	4430      	add	r0, r6
 8014b1c:	186f      	adds	r7, r5, r1
 8014b1e:	4432      	add	r2, r6
 8014b20:	1b49      	subs	r1, r1, r5
 8014b22:	65a7      	str	r7, [r4, #88]	; 0x58
 8014b24:	64e0      	str	r0, [r4, #76]	; 0x4c
 8014b26:	65e1      	str	r1, [r4, #92]	; 0x5c
 8014b28:	6522      	str	r2, [r4, #80]	; 0x50
 8014b2a:	1b5b      	subs	r3, r3, r5
 8014b2c:	6623      	str	r3, [r4, #96]	; 0x60
 8014b2e:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8014b30:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8014b32:	9200      	str	r2, [sp, #0]
 8014b34:	9301      	str	r3, [sp, #4]
 8014b36:	f104 0148 	add.w	r1, r4, #72	; 0x48
 8014b3a:	f104 0c54 	add.w	ip, r4, #84	; 0x54
 8014b3e:	680f      	ldr	r7, [r1, #0]
 8014b40:	9800      	ldr	r0, [sp, #0]
 8014b42:	42ba      	cmp	r2, r7
 8014b44:	bfa8      	it	ge
 8014b46:	463a      	movge	r2, r7
 8014b48:	4287      	cmp	r7, r0
 8014b4a:	bfc8      	it	gt
 8014b4c:	9700      	strgt	r7, [sp, #0]
 8014b4e:	690f      	ldr	r7, [r1, #16]
 8014b50:	9801      	ldr	r0, [sp, #4]
 8014b52:	42bb      	cmp	r3, r7
 8014b54:	bfa8      	it	ge
 8014b56:	463b      	movge	r3, r7
 8014b58:	3104      	adds	r1, #4
 8014b5a:	4287      	cmp	r7, r0
 8014b5c:	bfc8      	it	gt
 8014b5e:	9701      	strgt	r7, [sp, #4]
 8014b60:	458c      	cmp	ip, r1
 8014b62:	d1ec      	bne.n	8014b3e <_ZN8touchgfx4Line17updateCachedShapeEv+0x166>
 8014b64:	4668      	mov	r0, sp
 8014b66:	2720      	movs	r7, #32
 8014b68:	fb92 f8f7 	sdiv	r8, r2, r7
 8014b6c:	fb93 f7f7 	sdiv	r7, r3, r7
 8014b70:	f7ff fd57 	bl	8014622 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8014b74:	4682      	mov	sl, r0
 8014b76:	a801      	add	r0, sp, #4
 8014b78:	f7ff fd53 	bl	8014622 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8014b7c:	ebaa 0208 	sub.w	r2, sl, r8
 8014b80:	1bc0      	subs	r0, r0, r7
 8014b82:	f1b9 0f01 	cmp.w	r9, #1
 8014b86:	f8a4 8064 	strh.w	r8, [r4, #100]	; 0x64
 8014b8a:	f8a4 7066 	strh.w	r7, [r4, #102]	; 0x66
 8014b8e:	f8a4 2068 	strh.w	r2, [r4, #104]	; 0x68
 8014b92:	f8a4 006a 	strh.w	r0, [r4, #106]	; 0x6a
 8014b96:	f47f af33 	bne.w	8014a00 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>
 8014b9a:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 8014b9c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8014b9e:	1b83      	subs	r3, r0, r6
 8014ba0:	6463      	str	r3, [r4, #68]	; 0x44
 8014ba2:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8014ba4:	18ea      	adds	r2, r5, r3
 8014ba6:	6562      	str	r2, [r4, #84]	; 0x54
 8014ba8:	1b8a      	subs	r2, r1, r6
 8014baa:	64a2      	str	r2, [r4, #72]	; 0x48
 8014bac:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8014bae:	4431      	add	r1, r6
 8014bb0:	18af      	adds	r7, r5, r2
 8014bb2:	4406      	add	r6, r0
 8014bb4:	1b52      	subs	r2, r2, r5
 8014bb6:	1b5d      	subs	r5, r3, r5
 8014bb8:	65a7      	str	r7, [r4, #88]	; 0x58
 8014bba:	64e1      	str	r1, [r4, #76]	; 0x4c
 8014bbc:	65e2      	str	r2, [r4, #92]	; 0x5c
 8014bbe:	6526      	str	r6, [r4, #80]	; 0x50
 8014bc0:	6625      	str	r5, [r4, #96]	; 0x60
 8014bc2:	e71d      	b.n	8014a00 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>

08014bc4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>:
 8014bc4:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8014bc6:	428b      	cmp	r3, r1
 8014bc8:	d102      	bne.n	8014bd0 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0xc>
 8014bca:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8014bcc:	4293      	cmp	r3, r2
 8014bce:	d003      	beq.n	8014bd8 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0x14>
 8014bd0:	e9c0 120b 	strd	r1, r2, [r0, #44]	; 0x2c
 8014bd4:	f7ff bf00 	b.w	80149d8 <_ZN8touchgfx4Line17updateCachedShapeEv>
 8014bd8:	4770      	bx	lr

08014bda <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>:
 8014bda:	6b43      	ldr	r3, [r0, #52]	; 0x34
 8014bdc:	428b      	cmp	r3, r1
 8014bde:	d102      	bne.n	8014be6 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0xc>
 8014be0:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8014be2:	4293      	cmp	r3, r2
 8014be4:	d003      	beq.n	8014bee <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0x14>
 8014be6:	e9c0 120d 	strd	r1, r2, [r0, #52]	; 0x34
 8014bea:	f7ff bef5 	b.w	80149d8 <_ZN8touchgfx4Line17updateCachedShapeEv>
 8014bee:	4770      	bx	lr

08014bf0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>:
 8014bf0:	f880 1040 	strb.w	r1, [r0, #64]	; 0x40
 8014bf4:	f7ff bef0 	b.w	80149d8 <_ZN8touchgfx4Line17updateCachedShapeEv>

08014bf8 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE>:
 8014bf8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014bfc:	b0a0      	sub	sp, #128	; 0x80
 8014bfe:	4604      	mov	r4, r0
 8014c00:	460a      	mov	r2, r1
 8014c02:	4601      	mov	r1, r0
 8014c04:	a804      	add	r0, sp, #16
 8014c06:	f015 f845 	bl	8029c94 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 8014c0a:	2300      	movs	r3, #0
 8014c0c:	9301      	str	r3, [sp, #4]
 8014c0e:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8014c12:	2b01      	cmp	r3, #1
 8014c14:	d17c      	bne.n	8014d10 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x118>
 8014c16:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8014c18:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8014c1a:	6d61      	ldr	r1, [r4, #84]	; 0x54
 8014c1c:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8014c1e:	1ac0      	subs	r0, r0, r3
 8014c20:	eba1 0102 	sub.w	r1, r1, r2
 8014c24:	d437      	bmi.n	8014c96 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x9e>
 8014c26:	2900      	cmp	r1, #0
 8014c28:	aa01      	add	r2, sp, #4
 8014c2a:	db2e      	blt.n	8014c8a <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x92>
 8014c2c:	f7ff fe98 	bl	8014960 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8014c30:	f100 065a 	add.w	r6, r0, #90	; 0x5a
 8014c34:	6d62      	ldr	r2, [r4, #84]	; 0x54
 8014c36:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8014c38:	a804      	add	r0, sp, #16
 8014c3a:	f015 f9ab 	bl	8029f94 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8014c3e:	6da2      	ldr	r2, [r4, #88]	; 0x58
 8014c40:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8014c42:	a804      	add	r0, sp, #16
 8014c44:	f015 f9f3 	bl	802a02e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8014c48:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 8014c4a:	2db3      	cmp	r5, #179	; 0xb3
 8014c4c:	dc33      	bgt.n	8014cb6 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xbe>
 8014c4e:	eba6 0805 	sub.w	r8, r6, r5
 8014c52:	4640      	mov	r0, r8
 8014c54:	f7ff fdf2 	bl	801483c <_ZN8touchgfx7CWRUtil4sineEi>
 8014c58:	a902      	add	r1, sp, #8
 8014c5a:	9002      	str	r0, [sp, #8]
 8014c5c:	a801      	add	r0, sp, #4
 8014c5e:	f7ff fcd5 	bl	801460c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014c62:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8014c64:	1847      	adds	r7, r0, r1
 8014c66:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 8014c6a:	f7ff fde7 	bl	801483c <_ZN8touchgfx7CWRUtil4sineEi>
 8014c6e:	a903      	add	r1, sp, #12
 8014c70:	9003      	str	r0, [sp, #12]
 8014c72:	a801      	add	r0, sp, #4
 8014c74:	f7ff fcca 	bl	801460c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014c78:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8014c7a:	4639      	mov	r1, r7
 8014c7c:	1a12      	subs	r2, r2, r0
 8014c7e:	a804      	add	r0, sp, #16
 8014c80:	f015 f9d5 	bl	802a02e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8014c84:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 8014c86:	441d      	add	r5, r3
 8014c88:	e7df      	b.n	8014c4a <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x52>
 8014c8a:	4249      	negs	r1, r1
 8014c8c:	f7ff fe68 	bl	8014960 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8014c90:	f1c0 065a 	rsb	r6, r0, #90	; 0x5a
 8014c94:	e7ce      	b.n	8014c34 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8014c96:	2900      	cmp	r1, #0
 8014c98:	f1c0 0000 	rsb	r0, r0, #0
 8014c9c:	aa01      	add	r2, sp, #4
 8014c9e:	db04      	blt.n	8014caa <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xb2>
 8014ca0:	f7ff fe5e 	bl	8014960 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8014ca4:	f5c0 7687 	rsb	r6, r0, #270	; 0x10e
 8014ca8:	e7c4      	b.n	8014c34 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8014caa:	4249      	negs	r1, r1
 8014cac:	f7ff fe58 	bl	8014960 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8014cb0:	f500 7687 	add.w	r6, r0, #270	; 0x10e
 8014cb4:	e7be      	b.n	8014c34 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8014cb6:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8014cb8:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8014cba:	a804      	add	r0, sp, #16
 8014cbc:	f015 f9b7 	bl	802a02e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8014cc0:	6e22      	ldr	r2, [r4, #96]	; 0x60
 8014cc2:	6d21      	ldr	r1, [r4, #80]	; 0x50
 8014cc4:	a804      	add	r0, sp, #16
 8014cc6:	f015 f9b2 	bl	802a02e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8014cca:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 8014ccc:	f1c5 05b4 	rsb	r5, r5, #180	; 0xb4
 8014cd0:	2d00      	cmp	r5, #0
 8014cd2:	dd31      	ble.n	8014d38 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x140>
 8014cd4:	eb05 0806 	add.w	r8, r5, r6
 8014cd8:	4640      	mov	r0, r8
 8014cda:	f7ff fdaf 	bl	801483c <_ZN8touchgfx7CWRUtil4sineEi>
 8014cde:	a902      	add	r1, sp, #8
 8014ce0:	9002      	str	r0, [sp, #8]
 8014ce2:	a801      	add	r0, sp, #4
 8014ce4:	f7ff fc92 	bl	801460c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014ce8:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8014cea:	1847      	adds	r7, r0, r1
 8014cec:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 8014cf0:	f7ff fda4 	bl	801483c <_ZN8touchgfx7CWRUtil4sineEi>
 8014cf4:	a903      	add	r1, sp, #12
 8014cf6:	9003      	str	r0, [sp, #12]
 8014cf8:	a801      	add	r0, sp, #4
 8014cfa:	f7ff fc87 	bl	801460c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014cfe:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8014d00:	4639      	mov	r1, r7
 8014d02:	1a12      	subs	r2, r2, r0
 8014d04:	a804      	add	r0, sp, #16
 8014d06:	f015 f992 	bl	802a02e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8014d0a:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 8014d0c:	1aed      	subs	r5, r5, r3
 8014d0e:	e7df      	b.n	8014cd0 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xd8>
 8014d10:	6d62      	ldr	r2, [r4, #84]	; 0x54
 8014d12:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8014d14:	a804      	add	r0, sp, #16
 8014d16:	f015 f93d 	bl	8029f94 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8014d1a:	6da2      	ldr	r2, [r4, #88]	; 0x58
 8014d1c:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8014d1e:	a804      	add	r0, sp, #16
 8014d20:	f015 f985 	bl	802a02e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8014d24:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8014d26:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8014d28:	a804      	add	r0, sp, #16
 8014d2a:	f015 f980 	bl	802a02e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8014d2e:	6e22      	ldr	r2, [r4, #96]	; 0x60
 8014d30:	6d21      	ldr	r1, [r4, #80]	; 0x50
 8014d32:	a804      	add	r0, sp, #16
 8014d34:	f015 f97b 	bl	802a02e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8014d38:	21ff      	movs	r1, #255	; 0xff
 8014d3a:	a804      	add	r0, sp, #16
 8014d3c:	f015 f866 	bl	8029e0c <_ZN8touchgfx6Canvas6renderEh>
 8014d40:	4b04      	ldr	r3, [pc, #16]	; (8014d54 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x15c>)
 8014d42:	9304      	str	r3, [sp, #16]
 8014d44:	4604      	mov	r4, r0
 8014d46:	a80c      	add	r0, sp, #48	; 0x30
 8014d48:	f001 fa98 	bl	801627c <_ZN8touchgfx7OutlineD1Ev>
 8014d4c:	4620      	mov	r0, r4
 8014d4e:	b020      	add	sp, #128	; 0x80
 8014d50:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8014d54:	080321fc 	.word	0x080321fc

08014d58 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 8014d58:	2000      	movs	r0, #0
 8014d5a:	4770      	bx	lr

08014d5c <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 8014d5c:	4b07      	ldr	r3, [pc, #28]	; (8014d7c <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 8014d5e:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8014d60:	881b      	ldrh	r3, [r3, #0]
 8014d62:	4293      	cmp	r3, r2
 8014d64:	bf81      	itttt	hi
 8014d66:	4b06      	ldrhi	r3, [pc, #24]	; (8014d80 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 8014d68:	681b      	ldrhi	r3, [r3, #0]
 8014d6a:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 8014d6e:	7858      	ldrbhi	r0, [r3, #1]
 8014d70:	bf8c      	ite	hi
 8014d72:	f000 0003 	andhi.w	r0, r0, #3
 8014d76:	2000      	movls	r0, #0
 8014d78:	4770      	bx	lr
 8014d7a:	bf00      	nop
 8014d7c:	20013898 	.word	0x20013898
 8014d80:	20013894 	.word	0x20013894

08014d84 <_ZN8touchgfx8TextAreaD1Ev>:
 8014d84:	4770      	bx	lr
	...

08014d88 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 8014d88:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014d8c:	4b10      	ldr	r3, [pc, #64]	; (8014dd0 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 8014d8e:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8014d90:	881b      	ldrh	r3, [r3, #0]
 8014d92:	428b      	cmp	r3, r1
 8014d94:	4604      	mov	r4, r0
 8014d96:	d918      	bls.n	8014dca <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 8014d98:	6803      	ldr	r3, [r0, #0]
 8014d9a:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 8014d9c:	4b0d      	ldr	r3, [pc, #52]	; (8014dd4 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 8014d9e:	6818      	ldr	r0, [r3, #0]
 8014da0:	f7f5 fc7a 	bl	800a698 <_ZNK8touchgfx5Texts7getTextEt>
 8014da4:	6823      	ldr	r3, [r4, #0]
 8014da6:	4606      	mov	r6, r0
 8014da8:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8014daa:	4620      	mov	r0, r4
 8014dac:	4798      	blx	r3
 8014dae:	6823      	ldr	r3, [r4, #0]
 8014db0:	4607      	mov	r7, r0
 8014db2:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8014db6:	4620      	mov	r0, r4
 8014db8:	4798      	blx	r3
 8014dba:	463a      	mov	r2, r7
 8014dbc:	4603      	mov	r3, r0
 8014dbe:	4631      	mov	r1, r6
 8014dc0:	4620      	mov	r0, r4
 8014dc2:	46ac      	mov	ip, r5
 8014dc4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8014dc8:	4760      	bx	ip
 8014dca:	2000      	movs	r0, #0
 8014dcc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8014dd0:	20013898 	.word	0x20013898
 8014dd4:	200138a0 	.word	0x200138a0

08014dd8 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 8014dd8:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8014ddc:	4b17      	ldr	r3, [pc, #92]	; (8014e3c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 8014dde:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8014de0:	881b      	ldrh	r3, [r3, #0]
 8014de2:	428b      	cmp	r3, r1
 8014de4:	4604      	mov	r4, r0
 8014de6:	d926      	bls.n	8014e36 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 8014de8:	4b15      	ldr	r3, [pc, #84]	; (8014e40 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 8014dea:	681b      	ldr	r3, [r3, #0]
 8014dec:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 8014df0:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 8014df4:	4b13      	ldr	r3, [pc, #76]	; (8014e44 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 8014df6:	7855      	ldrb	r5, [r2, #1]
 8014df8:	681b      	ldr	r3, [r3, #0]
 8014dfa:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 8014dfe:	6833      	ldr	r3, [r6, #0]
 8014e00:	69df      	ldr	r7, [r3, #28]
 8014e02:	4b11      	ldr	r3, [pc, #68]	; (8014e48 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 8014e04:	6818      	ldr	r0, [r3, #0]
 8014e06:	f7f5 fc47 	bl	800a698 <_ZNK8touchgfx5Texts7getTextEt>
 8014e0a:	6823      	ldr	r3, [r4, #0]
 8014e0c:	4680      	mov	r8, r0
 8014e0e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8014e10:	4620      	mov	r0, r4
 8014e12:	4798      	blx	r3
 8014e14:	6823      	ldr	r3, [r4, #0]
 8014e16:	4681      	mov	r9, r0
 8014e18:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8014e1c:	4620      	mov	r0, r4
 8014e1e:	4798      	blx	r3
 8014e20:	f3c5 0581 	ubfx	r5, r5, #2, #2
 8014e24:	9000      	str	r0, [sp, #0]
 8014e26:	464b      	mov	r3, r9
 8014e28:	4642      	mov	r2, r8
 8014e2a:	4629      	mov	r1, r5
 8014e2c:	4630      	mov	r0, r6
 8014e2e:	47b8      	blx	r7
 8014e30:	b003      	add	sp, #12
 8014e32:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8014e36:	2000      	movs	r0, #0
 8014e38:	e7fa      	b.n	8014e30 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 8014e3a:	bf00      	nop
 8014e3c:	20013898 	.word	0x20013898
 8014e40:	20013894 	.word	0x20013894
 8014e44:	2001389c 	.word	0x2001389c
 8014e48:	200138a0 	.word	0x200138a0

08014e4c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 8014e4c:	b40e      	push	{r1, r2, r3}
 8014e4e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8014e52:	4b2f      	ldr	r3, [pc, #188]	; (8014f10 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 8014e54:	881a      	ldrh	r2, [r3, #0]
 8014e56:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 8014e58:	429a      	cmp	r2, r3
 8014e5a:	b09d      	sub	sp, #116	; 0x74
 8014e5c:	4604      	mov	r4, r0
 8014e5e:	d954      	bls.n	8014f0a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 8014e60:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 8014f14 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 8014e64:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 8014f18 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 8014e68:	aa26      	add	r2, sp, #152	; 0x98
 8014e6a:	9202      	str	r2, [sp, #8]
 8014e6c:	f8d9 2000 	ldr.w	r2, [r9]
 8014e70:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 8014e74:	f8d8 3000 	ldr.w	r3, [r8]
 8014e78:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8014e7c:	682b      	ldr	r3, [r5, #0]
 8014e7e:	4628      	mov	r0, r5
 8014e80:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014e82:	4798      	blx	r3
 8014e84:	b207      	sxth	r7, r0
 8014e86:	4606      	mov	r6, r0
 8014e88:	a803      	add	r0, sp, #12
 8014e8a:	f005 fc61 	bl	801a750 <_ZN8touchgfx12TextProviderC1Ev>
 8014e8e:	682b      	ldr	r3, [r5, #0]
 8014e90:	4628      	mov	r0, r5
 8014e92:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8014e94:	4798      	blx	r3
 8014e96:	682b      	ldr	r3, [r5, #0]
 8014e98:	4682      	mov	sl, r0
 8014e9a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8014e9c:	4628      	mov	r0, r5
 8014e9e:	4798      	blx	r3
 8014ea0:	4653      	mov	r3, sl
 8014ea2:	9000      	str	r0, [sp, #0]
 8014ea4:	9a02      	ldr	r2, [sp, #8]
 8014ea6:	9925      	ldr	r1, [sp, #148]	; 0x94
 8014ea8:	a803      	add	r0, sp, #12
 8014eaa:	f005 fcac 	bl	801a806 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8014eae:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8014eb0:	f8d9 3000 	ldr.w	r3, [r9]
 8014eb4:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 8014eb8:	8925      	ldrh	r5, [r4, #8]
 8014eba:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 8014ebe:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 8014ec2:	eba5 050c 	sub.w	r5, r5, ip
 8014ec6:	784a      	ldrb	r2, [r1, #1]
 8014ec8:	f8d8 3000 	ldr.w	r3, [r8]
 8014ecc:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 8014ed0:	b22d      	sxth	r5, r5
 8014ed2:	9500      	str	r5, [sp, #0]
 8014ed4:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8014ed8:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8014edc:	a803      	add	r0, sp, #12
 8014ede:	f003 f8b9 	bl	8018054 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 8014ee2:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 8014ee6:	18b9      	adds	r1, r7, r2
 8014ee8:	2900      	cmp	r1, #0
 8014eea:	b203      	sxth	r3, r0
 8014eec:	dd0b      	ble.n	8014f06 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 8014eee:	3b01      	subs	r3, #1
 8014ef0:	fb13 f302 	smulbb	r3, r3, r2
 8014ef4:	fb16 3300 	smlabb	r3, r6, r0, r3
 8014ef8:	b21f      	sxth	r7, r3
 8014efa:	4638      	mov	r0, r7
 8014efc:	b01d      	add	sp, #116	; 0x74
 8014efe:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8014f02:	b003      	add	sp, #12
 8014f04:	4770      	bx	lr
 8014f06:	2b00      	cmp	r3, #0
 8014f08:	dcf7      	bgt.n	8014efa <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8014f0a:	2700      	movs	r7, #0
 8014f0c:	e7f5      	b.n	8014efa <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8014f0e:	bf00      	nop
 8014f10:	20013898 	.word	0x20013898
 8014f14:	20013894 	.word	0x20013894
 8014f18:	2001389c 	.word	0x2001389c

08014f1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 8014f1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014f20:	4bbc      	ldr	r3, [pc, #752]	; (8015214 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 8014f22:	460c      	mov	r4, r1
 8014f24:	881b      	ldrh	r3, [r3, #0]
 8014f26:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 8014f28:	428b      	cmp	r3, r1
 8014f2a:	b0a9      	sub	sp, #164	; 0xa4
 8014f2c:	4680      	mov	r8, r0
 8014f2e:	d809      	bhi.n	8014f44 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 8014f30:	2300      	movs	r3, #0
 8014f32:	f04f 32ff 	mov.w	r2, #4294967295
 8014f36:	e9c0 3200 	strd	r3, r2, [r0]
 8014f3a:	6083      	str	r3, [r0, #8]
 8014f3c:	4640      	mov	r0, r8
 8014f3e:	b029      	add	sp, #164	; 0xa4
 8014f40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014f44:	4eb4      	ldr	r6, [pc, #720]	; (8015218 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 8014f46:	6833      	ldr	r3, [r6, #0]
 8014f48:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8014f4c:	4bb3      	ldr	r3, [pc, #716]	; (801521c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 8014f4e:	681b      	ldr	r3, [r3, #0]
 8014f50:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8014f54:	4bb2      	ldr	r3, [pc, #712]	; (8015220 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 8014f56:	6818      	ldr	r0, [r3, #0]
 8014f58:	f7f5 fb9e 	bl	800a698 <_ZNK8touchgfx5Texts7getTextEt>
 8014f5c:	682b      	ldr	r3, [r5, #0]
 8014f5e:	4681      	mov	r9, r0
 8014f60:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014f62:	4628      	mov	r0, r5
 8014f64:	4798      	blx	r3
 8014f66:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
 8014f68:	b203      	sxth	r3, r0
 8014f6a:	4407      	add	r7, r0
 8014f6c:	9304      	str	r3, [sp, #16]
 8014f6e:	b2bb      	uxth	r3, r7
 8014f70:	9303      	str	r3, [sp, #12]
 8014f72:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 8014f76:	4682      	mov	sl, r0
 8014f78:	a80f      	add	r0, sp, #60	; 0x3c
 8014f7a:	2b00      	cmp	r3, #0
 8014f7c:	f040 80a6 	bne.w	80150cc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1b0>
 8014f80:	f005 fbe6 	bl	801a750 <_ZN8touchgfx12TextProviderC1Ev>
 8014f84:	682b      	ldr	r3, [r5, #0]
 8014f86:	4628      	mov	r0, r5
 8014f88:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8014f8a:	4798      	blx	r3
 8014f8c:	682b      	ldr	r3, [r5, #0]
 8014f8e:	4606      	mov	r6, r0
 8014f90:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8014f92:	4628      	mov	r0, r5
 8014f94:	4798      	blx	r3
 8014f96:	6823      	ldr	r3, [r4, #0]
 8014f98:	4607      	mov	r7, r0
 8014f9a:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8014f9c:	4620      	mov	r0, r4
 8014f9e:	4798      	blx	r3
 8014fa0:	6823      	ldr	r3, [r4, #0]
 8014fa2:	4683      	mov	fp, r0
 8014fa4:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8014fa8:	4620      	mov	r0, r4
 8014faa:	4798      	blx	r3
 8014fac:	463b      	mov	r3, r7
 8014fae:	e9cd b000 	strd	fp, r0, [sp]
 8014fb2:	4649      	mov	r1, r9
 8014fb4:	4632      	mov	r2, r6
 8014fb6:	a80f      	add	r0, sp, #60	; 0x3c
 8014fb8:	f005 fc3a 	bl	801a830 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8014fbc:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8014fc0:	f8df b254 	ldr.w	fp, [pc, #596]	; 8015218 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 8014fc4:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8014fc8:	f04f 0600 	mov.w	r6, #0
 8014fcc:	bf0c      	ite	eq
 8014fce:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 8014fd2:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 8014fd6:	4637      	mov	r7, r6
 8014fd8:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8014fda:	f8db 3000 	ldr.w	r3, [fp]
 8014fde:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8014fe2:	4629      	mov	r1, r5
 8014fe4:	785b      	ldrb	r3, [r3, #1]
 8014fe6:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8014fea:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8014fee:	a80f      	add	r0, sp, #60	; 0x3c
 8014ff0:	f002 fd4b 	bl	8017a8a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8014ff4:	9b03      	ldr	r3, [sp, #12]
 8014ff6:	4286      	cmp	r6, r0
 8014ff8:	bfb8      	it	lt
 8014ffa:	4606      	movlt	r6, r0
 8014ffc:	3701      	adds	r7, #1
 8014ffe:	eba9 0903 	sub.w	r9, r9, r3
 8015002:	a80f      	add	r0, sp, #60	; 0x3c
 8015004:	b236      	sxth	r6, r6
 8015006:	b2bf      	uxth	r7, r7
 8015008:	fa0f f989 	sxth.w	r9, r9
 801500c:	f005 fbc7 	bl	801a79e <_ZN8touchgfx12TextProvider11endOfStringEv>
 8015010:	b918      	cbnz	r0, 801501a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8015012:	7a2b      	ldrb	r3, [r5, #8]
 8015014:	444b      	add	r3, r9
 8015016:	2b00      	cmp	r3, #0
 8015018:	dcde      	bgt.n	8014fd8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xbc>
 801501a:	9b03      	ldr	r3, [sp, #12]
 801501c:	9a04      	ldr	r2, [sp, #16]
 801501e:	f895 9009 	ldrb.w	r9, [r5, #9]
 8015022:	fb13 f707 	smulbb	r7, r3, r7
 8015026:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8015028:	1aff      	subs	r7, r7, r3
 801502a:	b2bf      	uxth	r7, r7
 801502c:	b23b      	sxth	r3, r7
 801502e:	429a      	cmp	r2, r3
 8015030:	bfa8      	it	ge
 8015032:	4657      	movge	r7, sl
 8015034:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8015038:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 801503c:	6823      	ldr	r3, [r4, #0]
 801503e:	bf08      	it	eq
 8015040:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 8015044:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8015046:	bf18      	it	ne
 8015048:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 801504c:	4620      	mov	r0, r4
 801504e:	4798      	blx	r3
 8015050:	444f      	add	r7, r9
 8015052:	fa1f f987 	uxth.w	r9, r7
 8015056:	2801      	cmp	r0, #1
 8015058:	fa0f f789 	sxth.w	r7, r9
 801505c:	b2b3      	uxth	r3, r6
 801505e:	f000 80e1 	beq.w	8015224 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 8015062:	2802      	cmp	r0, #2
 8015064:	f894 6037 	ldrb.w	r6, [r4, #55]	; 0x37
 8015068:	f000 80e2 	beq.w	8015230 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 801506c:	7aea      	ldrb	r2, [r5, #11]
 801506e:	7b2d      	ldrb	r5, [r5, #12]
 8015070:	b236      	sxth	r6, r6
 8015072:	1ab6      	subs	r6, r6, r2
 8015074:	442a      	add	r2, r5
 8015076:	4413      	add	r3, r2
 8015078:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 801507c:	fa1f fa86 	uxth.w	sl, r6
 8015080:	b29b      	uxth	r3, r3
 8015082:	2a02      	cmp	r2, #2
 8015084:	fa0f fb8a 	sxth.w	fp, sl
 8015088:	b21e      	sxth	r6, r3
 801508a:	f000 80d5 	beq.w	8015238 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 801508e:	2a03      	cmp	r2, #3
 8015090:	f000 80dd 	beq.w	801524e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 8015094:	2a01      	cmp	r2, #1
 8015096:	f040 80e5 	bne.w	8015264 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 801509a:	8925      	ldrh	r5, [r4, #8]
 801509c:	4633      	mov	r3, r6
 801509e:	eba5 0909 	sub.w	r9, r5, r9
 80150a2:	463e      	mov	r6, r7
 80150a4:	465d      	mov	r5, fp
 80150a6:	461f      	mov	r7, r3
 80150a8:	fa0f fb89 	sxth.w	fp, r9
 80150ac:	4b5c      	ldr	r3, [pc, #368]	; (8015220 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 80150ae:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 80150b0:	6818      	ldr	r0, [r3, #0]
 80150b2:	f7f5 faf1 	bl	800a698 <_ZNK8touchgfx5Texts7getTextEt>
 80150b6:	f8a8 b000 	strh.w	fp, [r8]
 80150ba:	f8a8 5002 	strh.w	r5, [r8, #2]
 80150be:	f8a8 6004 	strh.w	r6, [r8, #4]
 80150c2:	f8a8 7006 	strh.w	r7, [r8, #6]
 80150c6:	f8c8 0008 	str.w	r0, [r8, #8]
 80150ca:	e737      	b.n	8014f3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 80150cc:	f005 fb40 	bl	801a750 <_ZN8touchgfx12TextProviderC1Ev>
 80150d0:	682b      	ldr	r3, [r5, #0]
 80150d2:	4628      	mov	r0, r5
 80150d4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80150d6:	4798      	blx	r3
 80150d8:	682b      	ldr	r3, [r5, #0]
 80150da:	4607      	mov	r7, r0
 80150dc:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80150de:	4628      	mov	r0, r5
 80150e0:	4798      	blx	r3
 80150e2:	6823      	ldr	r3, [r4, #0]
 80150e4:	4683      	mov	fp, r0
 80150e6:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80150e8:	4620      	mov	r0, r4
 80150ea:	4798      	blx	r3
 80150ec:	6822      	ldr	r2, [r4, #0]
 80150ee:	9005      	str	r0, [sp, #20]
 80150f0:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 80150f4:	4620      	mov	r0, r4
 80150f6:	4790      	blx	r2
 80150f8:	9b05      	ldr	r3, [sp, #20]
 80150fa:	9001      	str	r0, [sp, #4]
 80150fc:	463a      	mov	r2, r7
 80150fe:	4649      	mov	r1, r9
 8015100:	9300      	str	r3, [sp, #0]
 8015102:	a80f      	add	r0, sp, #60	; 0x3c
 8015104:	465b      	mov	r3, fp
 8015106:	f005 fb93 	bl	801a830 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 801510a:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 801510e:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 8015112:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8015114:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 8015118:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 801511c:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8015120:	bf0a      	itet	eq
 8015122:	464a      	moveq	r2, r9
 8015124:	461a      	movne	r2, r3
 8015126:	4699      	moveq	r9, r3
 8015128:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 801512c:	1ad2      	subs	r2, r2, r3
 801512e:	6833      	ldr	r3, [r6, #0]
 8015130:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	; 0x34
 8015134:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8015138:	af0f      	add	r7, sp, #60	; 0x3c
 801513a:	7859      	ldrb	r1, [r3, #1]
 801513c:	9707      	str	r7, [sp, #28]
 801513e:	2300      	movs	r3, #0
 8015140:	f3c1 0181 	ubfx	r1, r1, #2, #2
 8015144:	f8ad 3018 	strh.w	r3, [sp, #24]
 8015148:	f88d 1020 	strb.w	r1, [sp, #32]
 801514c:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 8015150:	9509      	str	r5, [sp, #36]	; 0x24
 8015152:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8015156:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 801515a:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 801515e:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8015162:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8015166:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801516a:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 801516e:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8015172:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8015176:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 801517a:	b350      	cbz	r0, 80151d2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 801517c:	682b      	ldr	r3, [r5, #0]
 801517e:	4628      	mov	r0, r5
 8015180:	695b      	ldr	r3, [r3, #20]
 8015182:	4798      	blx	r3
 8015184:	4607      	mov	r7, r0
 8015186:	b320      	cbz	r0, 80151d2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8015188:	9809      	ldr	r0, [sp, #36]	; 0x24
 801518a:	6803      	ldr	r3, [r0, #0]
 801518c:	4639      	mov	r1, r7
 801518e:	68db      	ldr	r3, [r3, #12]
 8015190:	4798      	blx	r3
 8015192:	4606      	mov	r6, r0
 8015194:	b1e8      	cbz	r0, 80151d2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8015196:	7b43      	ldrb	r3, [r0, #13]
 8015198:	7a82      	ldrb	r2, [r0, #10]
 801519a:	005b      	lsls	r3, r3, #1
 801519c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80151a0:	4313      	orrs	r3, r2
 80151a2:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 80151a6:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
 80151aa:	2b06      	cmp	r3, #6
 80151ac:	d111      	bne.n	80151d2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 80151ae:	9809      	ldr	r0, [sp, #36]	; 0x24
 80151b0:	6803      	ldr	r3, [r0, #0]
 80151b2:	4632      	mov	r2, r6
 80151b4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80151b6:	4639      	mov	r1, r7
 80151b8:	4798      	blx	r3
 80151ba:	7b73      	ldrb	r3, [r6, #13]
 80151bc:	005b      	lsls	r3, r3, #1
 80151be:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80151c2:	7ab3      	ldrb	r3, [r6, #10]
 80151c4:	4313      	orrs	r3, r2
 80151c6:	4418      	add	r0, r3
 80151c8:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80151cc:	4418      	add	r0, r3
 80151ce:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 80151d2:	2600      	movs	r6, #0
 80151d4:	4637      	mov	r7, r6
 80151d6:	a806      	add	r0, sp, #24
 80151d8:	f002 fe38 	bl	8017e4c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 80151dc:	f8bd 0036 	ldrh.w	r0, [sp, #54]	; 0x36
 80151e0:	9b03      	ldr	r3, [sp, #12]
 80151e2:	4286      	cmp	r6, r0
 80151e4:	eba9 0903 	sub.w	r9, r9, r3
 80151e8:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 80151ec:	bfb8      	it	lt
 80151ee:	4606      	movlt	r6, r0
 80151f0:	3701      	adds	r7, #1
 80151f2:	b236      	sxth	r6, r6
 80151f4:	b2bf      	uxth	r7, r7
 80151f6:	fa0f f989 	sxth.w	r9, r9
 80151fa:	2b00      	cmp	r3, #0
 80151fc:	f43f af0d 	beq.w	801501a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8015200:	f89d 303a 	ldrb.w	r3, [sp, #58]	; 0x3a
 8015204:	2b00      	cmp	r3, #0
 8015206:	f47f af08 	bne.w	801501a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 801520a:	7a2b      	ldrb	r3, [r5, #8]
 801520c:	444b      	add	r3, r9
 801520e:	2b00      	cmp	r3, #0
 8015210:	dce1      	bgt.n	80151d6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ba>
 8015212:	e702      	b.n	801501a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8015214:	20013898 	.word	0x20013898
 8015218:	20013894 	.word	0x20013894
 801521c:	2001389c 	.word	0x2001389c
 8015220:	200138a0 	.word	0x200138a0
 8015224:	ebaa 0606 	sub.w	r6, sl, r6
 8015228:	2002      	movs	r0, #2
 801522a:	fb96 f6f0 	sdiv	r6, r6, r0
 801522e:	e71d      	b.n	801506c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8015230:	441e      	add	r6, r3
 8015232:	ebaa 0606 	sub.w	r6, sl, r6
 8015236:	e719      	b.n	801506c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8015238:	8925      	ldrh	r5, [r4, #8]
 801523a:	1aed      	subs	r5, r5, r3
 801523c:	eba5 050a 	sub.w	r5, r5, sl
 8015240:	fa0f fb85 	sxth.w	fp, r5
 8015244:	8965      	ldrh	r5, [r4, #10]
 8015246:	eba5 0509 	sub.w	r5, r5, r9
 801524a:	b22d      	sxth	r5, r5
 801524c:	e72e      	b.n	80150ac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 801524e:	8965      	ldrh	r5, [r4, #10]
 8015250:	1aed      	subs	r5, r5, r3
 8015252:	eba5 050a 	sub.w	r5, r5, sl
 8015256:	4633      	mov	r3, r6
 8015258:	b22d      	sxth	r5, r5
 801525a:	463e      	mov	r6, r7
 801525c:	f04f 0b00 	mov.w	fp, #0
 8015260:	461f      	mov	r7, r3
 8015262:	e723      	b.n	80150ac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 8015264:	2500      	movs	r5, #0
 8015266:	e721      	b.n	80150ac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>

08015268 <_ZN8touchgfx8TextAreaD0Ev>:
 8015268:	b510      	push	{r4, lr}
 801526a:	2148      	movs	r1, #72	; 0x48
 801526c:	4604      	mov	r4, r0
 801526e:	f017 fc88 	bl	802cb82 <_ZdlPvj>
 8015272:	4620      	mov	r0, r4
 8015274:	bd10      	pop	{r4, pc}
	...

08015278 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 8015278:	b513      	push	{r0, r1, r4, lr}
 801527a:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 801527e:	4604      	mov	r4, r0
 8015280:	b1fb      	cbz	r3, 80152c2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8015282:	4b16      	ldr	r3, [pc, #88]	; (80152dc <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 8015284:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8015286:	881b      	ldrh	r3, [r3, #0]
 8015288:	428b      	cmp	r3, r1
 801528a:	d91a      	bls.n	80152c2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 801528c:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8015290:	2b00      	cmp	r3, #0
 8015292:	dd16      	ble.n	80152c2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8015294:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8015298:	2b00      	cmp	r3, #0
 801529a:	dd12      	ble.n	80152c2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 801529c:	4b10      	ldr	r3, [pc, #64]	; (80152e0 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 801529e:	6818      	ldr	r0, [r3, #0]
 80152a0:	f7f5 f9fa 	bl	800a698 <_ZNK8touchgfx5Texts7getTextEt>
 80152a4:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 80152a8:	6822      	ldr	r2, [r4, #0]
 80152aa:	2b00      	cmp	r3, #0
 80152ac:	db06      	blt.n	80152bc <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 80152ae:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 80152b2:	2b00      	cmp	r3, #0
 80152b4:	db02      	blt.n	80152bc <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 80152b6:	6c63      	ldr	r3, [r4, #68]	; 0x44
 80152b8:	4298      	cmp	r0, r3
 80152ba:	d004      	beq.n	80152c6 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 80152bc:	6953      	ldr	r3, [r2, #20]
 80152be:	4620      	mov	r0, r4
 80152c0:	4798      	blx	r3
 80152c2:	b002      	add	sp, #8
 80152c4:	bd10      	pop	{r4, pc}
 80152c6:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 80152ca:	c903      	ldmia	r1, {r0, r1}
 80152cc:	466b      	mov	r3, sp
 80152ce:	e883 0003 	stmia.w	r3, {r0, r1}
 80152d2:	6912      	ldr	r2, [r2, #16]
 80152d4:	4619      	mov	r1, r3
 80152d6:	4620      	mov	r0, r4
 80152d8:	4790      	blx	r2
 80152da:	e7f2      	b.n	80152c2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 80152dc:	20013898 	.word	0x20013898
 80152e0:	200138a0 	.word	0x200138a0

080152e4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 80152e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80152e8:	4b44      	ldr	r3, [pc, #272]	; (80153fc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 80152ea:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 80152ec:	881b      	ldrh	r3, [r3, #0]
 80152ee:	4293      	cmp	r3, r2
 80152f0:	b08e      	sub	sp, #56	; 0x38
 80152f2:	4604      	mov	r4, r0
 80152f4:	d97e      	bls.n	80153f4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 80152f6:	6808      	ldr	r0, [r1, #0]
 80152f8:	4d41      	ldr	r5, [pc, #260]	; (8015400 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 80152fa:	6849      	ldr	r1, [r1, #4]
 80152fc:	ab05      	add	r3, sp, #20
 80152fe:	c303      	stmia	r3!, {r0, r1}
 8015300:	4611      	mov	r1, r2
 8015302:	6828      	ldr	r0, [r5, #0]
 8015304:	f7f5 f9c8 	bl	800a698 <_ZNK8touchgfx5Texts7getTextEt>
 8015308:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 801530c:	2b00      	cmp	r3, #0
 801530e:	db11      	blt.n	8015334 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8015310:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 8015314:	2b00      	cmp	r3, #0
 8015316:	db0d      	blt.n	8015334 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8015318:	6c63      	ldr	r3, [r4, #68]	; 0x44
 801531a:	4298      	cmp	r0, r3
 801531c:	d10a      	bne.n	8015334 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 801531e:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 8015322:	e892 0003 	ldmia.w	r2, {r0, r1}
 8015326:	ab09      	add	r3, sp, #36	; 0x24
 8015328:	e883 0003 	stmia.w	r3, {r0, r1}
 801532c:	4619      	mov	r1, r3
 801532e:	a805      	add	r0, sp, #20
 8015330:	f7fd fbec 	bl	8012b0c <_ZN8touchgfx4RectaNERKS0_>
 8015334:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8015338:	2b00      	cmp	r3, #0
 801533a:	dd5b      	ble.n	80153f4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 801533c:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8015340:	2b00      	cmp	r3, #0
 8015342:	dd57      	ble.n	80153f4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8015344:	4f2f      	ldr	r7, [pc, #188]	; (8015404 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 8015346:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8015348:	683b      	ldr	r3, [r7, #0]
 801534a:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 801534e:	4b2e      	ldr	r3, [pc, #184]	; (8015408 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 8015350:	681b      	ldr	r3, [r3, #0]
 8015352:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8015356:	2e00      	cmp	r6, #0
 8015358:	d04c      	beq.n	80153f4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 801535a:	6823      	ldr	r3, [r4, #0]
 801535c:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 8015360:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8015362:	4620      	mov	r0, r4
 8015364:	4798      	blx	r3
 8015366:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8015368:	683b      	ldr	r3, [r7, #0]
 801536a:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 801536e:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 8015372:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 8015376:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8015378:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 801537c:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 8015380:	785b      	ldrb	r3, [r3, #1]
 8015382:	9609      	str	r6, [sp, #36]	; 0x24
 8015384:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8015388:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 801538c:	4b1f      	ldr	r3, [pc, #124]	; (801540c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 801538e:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 8015392:	681b      	ldr	r3, [r3, #0]
 8015394:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 8015398:	910b      	str	r1, [sp, #44]	; 0x2c
 801539a:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 801539e:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 80153a2:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 80153a6:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 80153aa:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80153ae:	b10a      	cbz	r2, 80153b4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 80153b0:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 80153b2:	b906      	cbnz	r6, 80153b6 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 80153b4:	689e      	ldr	r6, [r3, #8]
 80153b6:	af07      	add	r7, sp, #28
 80153b8:	4621      	mov	r1, r4
 80153ba:	4638      	mov	r0, r7
 80153bc:	f004 fc7c 	bl	8019cb8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80153c0:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 80153c2:	6828      	ldr	r0, [r5, #0]
 80153c4:	f7f5 f968 	bl	800a698 <_ZNK8touchgfx5Texts7getTextEt>
 80153c8:	6823      	ldr	r3, [r4, #0]
 80153ca:	4605      	mov	r5, r0
 80153cc:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80153ce:	4620      	mov	r0, r4
 80153d0:	4798      	blx	r3
 80153d2:	6823      	ldr	r3, [r4, #0]
 80153d4:	4680      	mov	r8, r0
 80153d6:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80153da:	4620      	mov	r0, r4
 80153dc:	4798      	blx	r3
 80153de:	e9cd 8002 	strd	r8, r0, [sp, #8]
 80153e2:	ab09      	add	r3, sp, #36	; 0x24
 80153e4:	9300      	str	r3, [sp, #0]
 80153e6:	9501      	str	r5, [sp, #4]
 80153e8:	ab05      	add	r3, sp, #20
 80153ea:	e897 0006 	ldmia.w	r7, {r1, r2}
 80153ee:	4630      	mov	r0, r6
 80153f0:	f7f5 f904 	bl	800a5fc <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 80153f4:	b00e      	add	sp, #56	; 0x38
 80153f6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80153fa:	bf00      	nop
 80153fc:	20013898 	.word	0x20013898
 8015400:	200138a0 	.word	0x200138a0
 8015404:	20013894 	.word	0x20013894
 8015408:	2001389c 	.word	0x2001389c
 801540c:	2001383c 	.word	0x2001383c

08015410 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 8015410:	b538      	push	{r3, r4, r5, lr}
 8015412:	4b0e      	ldr	r3, [pc, #56]	; (801544c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 8015414:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8015416:	881b      	ldrh	r3, [r3, #0]
 8015418:	429a      	cmp	r2, r3
 801541a:	4604      	mov	r4, r0
 801541c:	d214      	bcs.n	8015448 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 801541e:	6803      	ldr	r3, [r0, #0]
 8015420:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8015422:	4798      	blx	r3
 8015424:	6823      	ldr	r3, [r4, #0]
 8015426:	4605      	mov	r5, r0
 8015428:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 801542a:	4620      	mov	r0, r4
 801542c:	4798      	blx	r3
 801542e:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8015432:	b22d      	sxth	r5, r5
 8015434:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8015438:	4601      	mov	r1, r0
 801543a:	bf06      	itte	eq
 801543c:	4602      	moveq	r2, r0
 801543e:	4629      	moveq	r1, r5
 8015440:	462a      	movne	r2, r5
 8015442:	4620      	mov	r0, r4
 8015444:	f7fd f942 	bl	80126cc <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8015448:	bd38      	pop	{r3, r4, r5, pc}
 801544a:	bf00      	nop
 801544c:	20013898 	.word	0x20013898

08015450 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 8015450:	b530      	push	{r4, r5, lr}
 8015452:	888b      	ldrh	r3, [r1, #4]
 8015454:	8583      	strh	r3, [r0, #44]	; 0x2c
 8015456:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 801545a:	b085      	sub	sp, #20
 801545c:	4604      	mov	r4, r0
 801545e:	b923      	cbnz	r3, 801546a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8015460:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8015464:	b90b      	cbnz	r3, 801546a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8015466:	f7ff ffd3 	bl	8015410 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 801546a:	6823      	ldr	r3, [r4, #0]
 801546c:	466d      	mov	r5, sp
 801546e:	4621      	mov	r1, r4
 8015470:	4628      	mov	r0, r5
 8015472:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8015476:	4798      	blx	r3
 8015478:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 801547c:	343c      	adds	r4, #60	; 0x3c
 801547e:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8015482:	b005      	add	sp, #20
 8015484:	bd30      	pop	{r4, r5, pc}

08015486 <_ZNK8touchgfx3Box12getSolidRectEv>:
 8015486:	2300      	movs	r3, #0
 8015488:	8083      	strh	r3, [r0, #4]
 801548a:	80c3      	strh	r3, [r0, #6]
 801548c:	8003      	strh	r3, [r0, #0]
 801548e:	8043      	strh	r3, [r0, #2]
 8015490:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 8015494:	2bff      	cmp	r3, #255	; 0xff
 8015496:	bf01      	itttt	eq
 8015498:	890b      	ldrheq	r3, [r1, #8]
 801549a:	8083      	strheq	r3, [r0, #4]
 801549c:	894b      	ldrheq	r3, [r1, #10]
 801549e:	80c3      	strheq	r3, [r0, #6]
 80154a0:	4770      	bx	lr
	...

080154a4 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 80154a4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80154a6:	4604      	mov	r4, r0
 80154a8:	6808      	ldr	r0, [r1, #0]
 80154aa:	6849      	ldr	r1, [r1, #4]
 80154ac:	466b      	mov	r3, sp
 80154ae:	c303      	stmia	r3!, {r0, r1}
 80154b0:	6823      	ldr	r3, [r4, #0]
 80154b2:	4669      	mov	r1, sp
 80154b4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80154b6:	4620      	mov	r0, r4
 80154b8:	4798      	blx	r3
 80154ba:	4b08      	ldr	r3, [pc, #32]	; (80154dc <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 80154bc:	681b      	ldr	r3, [r3, #0]
 80154be:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80154c2:	b10a      	cbz	r2, 80154c8 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 80154c4:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80154c6:	b900      	cbnz	r0, 80154ca <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 80154c8:	6898      	ldr	r0, [r3, #8]
 80154ca:	6803      	ldr	r3, [r0, #0]
 80154cc:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80154ce:	6a1d      	ldr	r5, [r3, #32]
 80154d0:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 80154d4:	4669      	mov	r1, sp
 80154d6:	47a8      	blx	r5
 80154d8:	b003      	add	sp, #12
 80154da:	bd30      	pop	{r4, r5, pc}
 80154dc:	2001383c 	.word	0x2001383c

080154e0 <_ZN8touchgfx3BoxD1Ev>:
 80154e0:	4770      	bx	lr

080154e2 <_ZN8touchgfx3BoxD0Ev>:
 80154e2:	b510      	push	{r4, lr}
 80154e4:	212c      	movs	r1, #44	; 0x2c
 80154e6:	4604      	mov	r4, r0
 80154e8:	f017 fb4b 	bl	802cb82 <_ZdlPvj>
 80154ec:	4620      	mov	r0, r4
 80154ee:	bd10      	pop	{r4, pc}

080154f0 <_ZNK8touchgfx3Box17invalidateContentEv>:
 80154f0:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 80154f4:	b12a      	cbz	r2, 8015502 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 80154f6:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80154fa:	b112      	cbz	r2, 8015502 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 80154fc:	6803      	ldr	r3, [r0, #0]
 80154fe:	695b      	ldr	r3, [r3, #20]
 8015500:	4718      	bx	r3
 8015502:	4770      	bx	lr

08015504 <_ZN8touchgfx10TiledImage9setOffsetEss>:
 8015504:	b570      	push	{r4, r5, r6, lr}
 8015506:	6803      	ldr	r3, [r0, #0]
 8015508:	4604      	mov	r4, r0
 801550a:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 801550c:	4615      	mov	r5, r2
 801550e:	4798      	blx	r3
 8015510:	6823      	ldr	r3, [r4, #0]
 8015512:	4629      	mov	r1, r5
 8015514:	4620      	mov	r0, r4
 8015516:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8015518:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801551c:	4718      	bx	r3

0801551e <_ZN8touchgfx10TiledImage9getOffsetERsS1_>:
 801551e:	b570      	push	{r4, r5, r6, lr}
 8015520:	6803      	ldr	r3, [r0, #0]
 8015522:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8015524:	4604      	mov	r4, r0
 8015526:	460e      	mov	r6, r1
 8015528:	4615      	mov	r5, r2
 801552a:	4798      	blx	r3
 801552c:	8030      	strh	r0, [r6, #0]
 801552e:	6823      	ldr	r3, [r4, #0]
 8015530:	4620      	mov	r0, r4
 8015532:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8015534:	4798      	blx	r3
 8015536:	8028      	strh	r0, [r5, #0]
 8015538:	bd70      	pop	{r4, r5, r6, pc}

0801553a <_ZN8touchgfx10TiledImage10getXOffsetEv>:
 801553a:	f9b0 002a 	ldrsh.w	r0, [r0, #42]	; 0x2a
 801553e:	4770      	bx	lr

08015540 <_ZN8touchgfx10TiledImage10getYOffsetEv>:
 8015540:	f9b0 002c 	ldrsh.w	r0, [r0, #44]	; 0x2c
 8015544:	4770      	bx	lr

08015546 <_ZN8touchgfx10TiledImageD1Ev>:
 8015546:	4770      	bx	lr

08015548 <_ZN8touchgfx10TiledImage9setBitmapERKNS_6BitmapE>:
 8015548:	b510      	push	{r4, lr}
 801554a:	4604      	mov	r4, r0
 801554c:	f000 fd31 	bl	8015fb2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8015550:	6823      	ldr	r3, [r4, #0]
 8015552:	f9b4 202c 	ldrsh.w	r2, [r4, #44]	; 0x2c
 8015556:	f9b4 102a 	ldrsh.w	r1, [r4, #42]	; 0x2a
 801555a:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 801555c:	4620      	mov	r0, r4
 801555e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015562:	4718      	bx	r3

08015564 <_ZN8touchgfx10TiledImage10setXOffsetEs>:
 8015564:	b538      	push	{r3, r4, r5, lr}
 8015566:	f100 0526 	add.w	r5, r0, #38	; 0x26
 801556a:	4604      	mov	r4, r0
 801556c:	8541      	strh	r1, [r0, #42]	; 0x2a
 801556e:	4628      	mov	r0, r5
 8015570:	f006 fe6e 	bl	801c250 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8015574:	b188      	cbz	r0, 801559a <_ZN8touchgfx10TiledImage10setXOffsetEs+0x36>
 8015576:	4628      	mov	r0, r5
 8015578:	f006 fe6a 	bl	801c250 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801557c:	f9b4 202a 	ldrsh.w	r2, [r4, #42]	; 0x2a
 8015580:	fb92 f3f0 	sdiv	r3, r2, r0
 8015584:	fb03 2010 	mls	r0, r3, r0, r2
 8015588:	2800      	cmp	r0, #0
 801558a:	8560      	strh	r0, [r4, #42]	; 0x2a
 801558c:	da05      	bge.n	801559a <_ZN8touchgfx10TiledImage10setXOffsetEs+0x36>
 801558e:	4628      	mov	r0, r5
 8015590:	f006 fe5e 	bl	801c250 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8015594:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8015596:	4418      	add	r0, r3
 8015598:	8560      	strh	r0, [r4, #42]	; 0x2a
 801559a:	bd38      	pop	{r3, r4, r5, pc}

0801559c <_ZN8touchgfx10TiledImage10setYOffsetEs>:
 801559c:	b538      	push	{r3, r4, r5, lr}
 801559e:	f100 0526 	add.w	r5, r0, #38	; 0x26
 80155a2:	4604      	mov	r4, r0
 80155a4:	8581      	strh	r1, [r0, #44]	; 0x2c
 80155a6:	4628      	mov	r0, r5
 80155a8:	f006 fe86 	bl	801c2b8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80155ac:	b188      	cbz	r0, 80155d2 <_ZN8touchgfx10TiledImage10setYOffsetEs+0x36>
 80155ae:	4628      	mov	r0, r5
 80155b0:	f006 fe82 	bl	801c2b8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80155b4:	f9b4 202c 	ldrsh.w	r2, [r4, #44]	; 0x2c
 80155b8:	fb92 f3f0 	sdiv	r3, r2, r0
 80155bc:	fb03 2010 	mls	r0, r3, r0, r2
 80155c0:	2800      	cmp	r0, #0
 80155c2:	85a0      	strh	r0, [r4, #44]	; 0x2c
 80155c4:	da05      	bge.n	80155d2 <_ZN8touchgfx10TiledImage10setYOffsetEs+0x36>
 80155c6:	4628      	mov	r0, r5
 80155c8:	f006 fe76 	bl	801c2b8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80155cc:	8da3      	ldrh	r3, [r4, #44]	; 0x2c
 80155ce:	4418      	add	r0, r3
 80155d0:	85a0      	strh	r0, [r4, #44]	; 0x2c
 80155d2:	bd38      	pop	{r3, r4, r5, pc}

080155d4 <_ZN8touchgfx10TiledImageD0Ev>:
 80155d4:	b510      	push	{r4, lr}
 80155d6:	2130      	movs	r1, #48	; 0x30
 80155d8:	4604      	mov	r4, r0
 80155da:	f017 fad2 	bl	802cb82 <_ZdlPvj>
 80155de:	4620      	mov	r0, r4
 80155e0:	bd10      	pop	{r4, pc}
	...

080155e4 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE>:
 80155e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80155e8:	f100 0b26 	add.w	fp, r0, #38	; 0x26
 80155ec:	b093      	sub	sp, #76	; 0x4c
 80155ee:	4607      	mov	r7, r0
 80155f0:	4658      	mov	r0, fp
 80155f2:	460e      	mov	r6, r1
 80155f4:	f006 fe2c 	bl	801c250 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80155f8:	4681      	mov	r9, r0
 80155fa:	4658      	mov	r0, fp
 80155fc:	f006 fe5c 	bl	801c2b8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8015600:	4605      	mov	r5, r0
 8015602:	f1b9 0f00 	cmp.w	r9, #0
 8015606:	f000 80c4 	beq.w	8015792 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1ae>
 801560a:	2800      	cmp	r0, #0
 801560c:	f000 80c1 	beq.w	8015792 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1ae>
 8015610:	2300      	movs	r3, #0
 8015612:	e9cd 330e 	strd	r3, r3, [sp, #56]	; 0x38
 8015616:	683b      	ldr	r3, [r7, #0]
 8015618:	a90e      	add	r1, sp, #56	; 0x38
 801561a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801561c:	4638      	mov	r0, r7
 801561e:	4798      	blx	r3
 8015620:	f9b7 202a 	ldrsh.w	r2, [r7, #42]	; 0x2a
 8015624:	f9b6 3000 	ldrsh.w	r3, [r6]
 8015628:	88b1      	ldrh	r1, [r6, #4]
 801562a:	fa1f f889 	uxth.w	r8, r9
 801562e:	189c      	adds	r4, r3, r2
 8015630:	440b      	add	r3, r1
 8015632:	fa02 f383 	sxtah	r3, r2, r3
 8015636:	fb94 f4f9 	sdiv	r4, r4, r9
 801563a:	fb14 f408 	smulbb	r4, r4, r8
 801563e:	1aa4      	subs	r4, r4, r2
 8015640:	3b01      	subs	r3, #1
 8015642:	b2aa      	uxth	r2, r5
 8015644:	fb93 f3f9 	sdiv	r3, r3, r9
 8015648:	fb13 f308 	smulbb	r3, r3, r8
 801564c:	b21b      	sxth	r3, r3
 801564e:	9205      	str	r2, [sp, #20]
 8015650:	f9b7 102c 	ldrsh.w	r1, [r7, #44]	; 0x2c
 8015654:	9805      	ldr	r0, [sp, #20]
 8015656:	930b      	str	r3, [sp, #44]	; 0x2c
 8015658:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 801565c:	185a      	adds	r2, r3, r1
 801565e:	fb92 f2f5 	sdiv	r2, r2, r5
 8015662:	fb12 f200 	smulbb	r2, r2, r0
 8015666:	1a52      	subs	r2, r2, r1
 8015668:	b212      	sxth	r2, r2
 801566a:	920c      	str	r2, [sp, #48]	; 0x30
 801566c:	88f2      	ldrh	r2, [r6, #6]
 801566e:	4413      	add	r3, r2
 8015670:	fa01 f383 	sxtah	r3, r1, r3
 8015674:	3b01      	subs	r3, #1
 8015676:	fb93 f3f5 	sdiv	r3, r3, r5
 801567a:	fb13 f300 	smulbb	r3, r3, r0
 801567e:	b2a4      	uxth	r4, r4
 8015680:	b21b      	sxth	r3, r3
 8015682:	930d      	str	r3, [sp, #52]	; 0x34
 8015684:	eb08 0504 	add.w	r5, r8, r4
 8015688:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801568a:	b223      	sxth	r3, r4
 801568c:	4293      	cmp	r3, r2
 801568e:	b2ad      	uxth	r5, r5
 8015690:	9306      	str	r3, [sp, #24]
 8015692:	dc7e      	bgt.n	8015792 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1ae>
 8015694:	b22b      	sxth	r3, r5
 8015696:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 801569a:	930a      	str	r3, [sp, #40]	; 0x28
 801569c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801569e:	4599      	cmp	r9, r3
 80156a0:	dd03      	ble.n	80156aa <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0xc6>
 80156a2:	4444      	add	r4, r8
 80156a4:	b2a4      	uxth	r4, r4
 80156a6:	4445      	add	r5, r8
 80156a8:	e7ee      	b.n	8015688 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0xa4>
 80156aa:	f9b6 c000 	ldrsh.w	ip, [r6]
 80156ae:	88b2      	ldrh	r2, [r6, #4]
 80156b0:	9806      	ldr	r0, [sp, #24]
 80156b2:	9905      	ldr	r1, [sp, #20]
 80156b4:	4462      	add	r2, ip
 80156b6:	b292      	uxth	r2, r2
 80156b8:	b213      	sxth	r3, r2
 80156ba:	9308      	str	r3, [sp, #32]
 80156bc:	fa1f f389 	uxth.w	r3, r9
 80156c0:	4419      	add	r1, r3
 80156c2:	9307      	str	r3, [sp, #28]
 80156c4:	4603      	mov	r3, r0
 80156c6:	9808      	ldr	r0, [sp, #32]
 80156c8:	b289      	uxth	r1, r1
 80156ca:	4283      	cmp	r3, r0
 80156cc:	fa0f fa81 	sxth.w	sl, r1
 80156d0:	da5b      	bge.n	801578a <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1a6>
 80156d2:	980a      	ldr	r0, [sp, #40]	; 0x28
 80156d4:	4584      	cmp	ip, r0
 80156d6:	da58      	bge.n	801578a <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1a6>
 80156d8:	f9b6 0002 	ldrsh.w	r0, [r6, #2]
 80156dc:	f8b6 e006 	ldrh.w	lr, [r6, #6]
 80156e0:	4486      	add	lr, r0
 80156e2:	fa1f fe8e 	uxth.w	lr, lr
 80156e6:	fa0f f38e 	sxth.w	r3, lr
 80156ea:	4599      	cmp	r9, r3
 80156ec:	9309      	str	r3, [sp, #36]	; 0x24
 80156ee:	da4c      	bge.n	801578a <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1a6>
 80156f0:	4550      	cmp	r0, sl
 80156f2:	da4a      	bge.n	801578a <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1a6>
 80156f4:	9b06      	ldr	r3, [sp, #24]
 80156f6:	459c      	cmp	ip, r3
 80156f8:	bfb8      	it	lt
 80156fa:	469c      	movlt	ip, r3
 80156fc:	9b08      	ldr	r3, [sp, #32]
 80156fe:	f8ad c040 	strh.w	ip, [sp, #64]	; 0x40
 8015702:	4548      	cmp	r0, r9
 8015704:	bfb8      	it	lt
 8015706:	4648      	movlt	r0, r9
 8015708:	4699      	mov	r9, r3
 801570a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801570c:	f8ad 0042 	strh.w	r0, [sp, #66]	; 0x42
 8015710:	4599      	cmp	r9, r3
 8015712:	bfc8      	it	gt
 8015714:	462a      	movgt	r2, r5
 8015716:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015718:	4553      	cmp	r3, sl
 801571a:	bfd8      	it	le
 801571c:	4671      	movle	r1, lr
 801571e:	eba2 020c 	sub.w	r2, r2, ip
 8015722:	1a09      	subs	r1, r1, r0
 8015724:	f8ad 2044 	strh.w	r2, [sp, #68]	; 0x44
 8015728:	f8ad 1046 	strh.w	r1, [sp, #70]	; 0x46
 801572c:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 8015730:	9b07      	ldr	r3, [sp, #28]
 8015732:	1b12      	subs	r2, r2, r4
 8015734:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8015738:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 801573c:	1ad2      	subs	r2, r2, r3
 801573e:	4b16      	ldr	r3, [pc, #88]	; (8015798 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1b4>)
 8015740:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 8015744:	681a      	ldr	r2, [r3, #0]
 8015746:	f892 1058 	ldrb.w	r1, [r2, #88]	; 0x58
 801574a:	b109      	cbz	r1, 8015750 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x16c>
 801574c:	6cd0      	ldr	r0, [r2, #76]	; 0x4c
 801574e:	b900      	cbnz	r0, 8015752 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x16e>
 8015750:	6890      	ldr	r0, [r2, #8]
 8015752:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8015756:	9b07      	ldr	r3, [sp, #28]
 8015758:	6801      	ldr	r1, [r0, #0]
 801575a:	f04f 0c01 	mov.w	ip, #1
 801575e:	f8cd c008 	str.w	ip, [sp, #8]
 8015762:	f897 c028 	ldrb.w	ip, [r7, #40]	; 0x28
 8015766:	f8cd c004 	str.w	ip, [sp, #4]
 801576a:	4413      	add	r3, r2
 801576c:	f8bd 2038 	ldrh.w	r2, [sp, #56]	; 0x38
 8015770:	f10d 0c40 	add.w	ip, sp, #64	; 0x40
 8015774:	f8cd c000 	str.w	ip, [sp]
 8015778:	4422      	add	r2, r4
 801577a:	f8d1 9008 	ldr.w	r9, [r1, #8]
 801577e:	b21b      	sxth	r3, r3
 8015780:	b212      	sxth	r2, r2
 8015782:	4659      	mov	r1, fp
 8015784:	47c8      	blx	r9
 8015786:	46d1      	mov	r9, sl
 8015788:	e788      	b.n	801569c <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0xb8>
 801578a:	2300      	movs	r3, #0
 801578c:	e9cd 3310 	strd	r3, r3, [sp, #64]	; 0x40
 8015790:	e7cc      	b.n	801572c <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x148>
 8015792:	b013      	add	sp, #76	; 0x4c
 8015794:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015798:	2001383c 	.word	0x2001383c

0801579c <_ZNK8touchgfx10TiledImage12getSolidRectEv>:
 801579c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80157a0:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 80157a4:	2bff      	cmp	r3, #255	; 0xff
 80157a6:	4606      	mov	r6, r0
 80157a8:	4689      	mov	r9, r1
 80157aa:	d008      	beq.n	80157be <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x22>
 80157ac:	2300      	movs	r3, #0
 80157ae:	8003      	strh	r3, [r0, #0]
 80157b0:	8043      	strh	r3, [r0, #2]
 80157b2:	8083      	strh	r3, [r0, #4]
 80157b4:	4630      	mov	r0, r6
 80157b6:	80f3      	strh	r3, [r6, #6]
 80157b8:	b003      	add	sp, #12
 80157ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80157be:	f101 0b26 	add.w	fp, r1, #38	; 0x26
 80157c2:	4659      	mov	r1, fp
 80157c4:	4668      	mov	r0, sp
 80157c6:	f006 fdab 	bl	801c320 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80157ca:	4658      	mov	r0, fp
 80157cc:	f9bd 4004 	ldrsh.w	r4, [sp, #4]
 80157d0:	f9bd 7000 	ldrsh.w	r7, [sp]
 80157d4:	f9bd a002 	ldrsh.w	sl, [sp, #2]
 80157d8:	f9bd 8006 	ldrsh.w	r8, [sp, #6]
 80157dc:	f006 fd38 	bl	801c250 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80157e0:	4284      	cmp	r4, r0
 80157e2:	d10d      	bne.n	8015800 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x64>
 80157e4:	f9b9 5008 	ldrsh.w	r5, [r9, #8]
 80157e8:	4658      	mov	r0, fp
 80157ea:	f006 fd65 	bl	801c2b8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80157ee:	4580      	cmp	r8, r0
 80157f0:	d129      	bne.n	8015846 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0xaa>
 80157f2:	f9b9 300a 	ldrsh.w	r3, [r9, #10]
 80157f6:	8037      	strh	r7, [r6, #0]
 80157f8:	f8a6 a002 	strh.w	sl, [r6, #2]
 80157fc:	80b5      	strh	r5, [r6, #4]
 80157fe:	e7d9      	b.n	80157b4 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x18>
 8015800:	f8b9 502a 	ldrh.w	r5, [r9, #42]	; 0x2a
 8015804:	4658      	mov	r0, fp
 8015806:	f006 fd23 	bl	801c250 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801580a:	1b7f      	subs	r7, r7, r5
 801580c:	b2bd      	uxth	r5, r7
 801580e:	b22f      	sxth	r7, r5
 8015810:	4428      	add	r0, r5
 8015812:	2f00      	cmp	r7, #0
 8015814:	b2a3      	uxth	r3, r4
 8015816:	b280      	uxth	r0, r0
 8015818:	bfb8      	it	lt
 801581a:	18ed      	addlt	r5, r5, r3
 801581c:	4403      	add	r3, r0
 801581e:	b29b      	uxth	r3, r3
 8015820:	f9b9 2008 	ldrsh.w	r2, [r9, #8]
 8015824:	bfb8      	it	lt
 8015826:	b22d      	sxthlt	r5, r5
 8015828:	b219      	sxth	r1, r3
 801582a:	bfae      	itee	ge
 801582c:	4625      	movge	r5, r4
 801582e:	ea25 75e5 	biclt.w	r5, r5, r5, asr #31
 8015832:	2700      	movlt	r7, #0
 8015834:	4291      	cmp	r1, r2
 8015836:	bfc4      	itt	gt
 8015838:	1a9c      	subgt	r4, r3, r2
 801583a:	b224      	sxthgt	r4, r4
 801583c:	42ac      	cmp	r4, r5
 801583e:	bfc4      	itt	gt
 8015840:	b207      	sxthgt	r7, r0
 8015842:	4625      	movgt	r5, r4
 8015844:	e7d0      	b.n	80157e8 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x4c>
 8015846:	f8b9 402c 	ldrh.w	r4, [r9, #44]	; 0x2c
 801584a:	4658      	mov	r0, fp
 801584c:	f006 fd34 	bl	801c2b8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8015850:	ebaa 0404 	sub.w	r4, sl, r4
 8015854:	b2a4      	uxth	r4, r4
 8015856:	fa0f fa84 	sxth.w	sl, r4
 801585a:	4420      	add	r0, r4
 801585c:	f1ba 0f00 	cmp.w	sl, #0
 8015860:	fa1f f288 	uxth.w	r2, r8
 8015864:	b280      	uxth	r0, r0
 8015866:	bfb8      	it	lt
 8015868:	18a3      	addlt	r3, r4, r2
 801586a:	4402      	add	r2, r0
 801586c:	b292      	uxth	r2, r2
 801586e:	f9b9 100a 	ldrsh.w	r1, [r9, #10]
 8015872:	bfb8      	it	lt
 8015874:	b21b      	sxthlt	r3, r3
 8015876:	b214      	sxth	r4, r2
 8015878:	bfae      	itee	ge
 801587a:	4643      	movge	r3, r8
 801587c:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8015880:	f04f 0a00 	movlt.w	sl, #0
 8015884:	428c      	cmp	r4, r1
 8015886:	bfc4      	itt	gt
 8015888:	eba2 0801 	subgt.w	r8, r2, r1
 801588c:	fa0f f888 	sxthgt.w	r8, r8
 8015890:	4598      	cmp	r8, r3
 8015892:	bfc4      	itt	gt
 8015894:	fa0f fa80 	sxthgt.w	sl, r0
 8015898:	4643      	movgt	r3, r8
 801589a:	e7ac      	b.n	80157f6 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x5a>

0801589c <_ZNK8touchgfx5Image17invalidateContentEv>:
 801589c:	f890 2028 	ldrb.w	r2, [r0, #40]	; 0x28
 80158a0:	b12a      	cbz	r2, 80158ae <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 80158a2:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80158a6:	b112      	cbz	r2, 80158ae <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 80158a8:	6803      	ldr	r3, [r0, #0]
 80158aa:	695b      	ldr	r3, [r3, #20]
 80158ac:	4718      	bx	r3
 80158ae:	4770      	bx	lr

080158b0 <_ZNK8touchgfx5Gauge9getCenterERiS1_>:
 80158b0:	f9b0 3150 	ldrsh.w	r3, [r0, #336]	; 0x150
 80158b4:	600b      	str	r3, [r1, #0]
 80158b6:	f9b0 3152 	ldrsh.w	r3, [r0, #338]	; 0x152
 80158ba:	6013      	str	r3, [r2, #0]
 80158bc:	4770      	bx	lr

080158be <_ZN8touchgfx5Gauge8setWidthEs>:
 80158be:	8101      	strh	r1, [r0, #8]
 80158c0:	f8a0 10bc 	strh.w	r1, [r0, #188]	; 0xbc
 80158c4:	f8a0 1160 	strh.w	r1, [r0, #352]	; 0x160
 80158c8:	4770      	bx	lr

080158ca <_ZN8touchgfx5Gauge9setHeightEs>:
 80158ca:	8141      	strh	r1, [r0, #10]
 80158cc:	f8a0 10be 	strh.w	r1, [r0, #190]	; 0xbe
 80158d0:	f8a0 1162 	strh.w	r1, [r0, #354]	; 0x162
 80158d4:	4770      	bx	lr

080158d6 <_ZNK8touchgfx5Gauge13getStartAngleEv>:
 80158d6:	f8d0 0148 	ldr.w	r0, [r0, #328]	; 0x148
 80158da:	4770      	bx	lr

080158dc <_ZNK8touchgfx5Gauge11getEndAngleEv>:
 80158dc:	f8d0 014c 	ldr.w	r0, [r0, #332]	; 0x14c
 80158e0:	4770      	bx	lr

080158e2 <_ZN8touchgfx5Gauge28setProgressIndicatorPositionEssss>:
 80158e2:	4770      	bx	lr

080158e4 <_ZN8touchgfx5GaugeD1Ev>:
 80158e4:	4770      	bx	lr

080158e6 <_ZN8touchgfx5Gauge8setAlphaEh>:
 80158e6:	b538      	push	{r3, r4, r5, lr}
 80158e8:	4604      	mov	r4, r0
 80158ea:	460d      	mov	r5, r1
 80158ec:	f7fc fe07 	bl	80124fe <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>
 80158f0:	f884 50dc 	strb.w	r5, [r4, #220]	; 0xdc
 80158f4:	f884 517e 	strb.w	r5, [r4, #382]	; 0x17e
 80158f8:	bd38      	pop	{r3, r4, r5, pc}

080158fa <_ZN8touchgfx5GaugeD0Ev>:
 80158fa:	b510      	push	{r4, lr}
 80158fc:	f44f 71d0 	mov.w	r1, #416	; 0x1a0
 8015900:	4604      	mov	r4, r0
 8015902:	f017 f93e 	bl	802cb82 <_ZdlPvj>
 8015906:	4620      	mov	r0, r4
 8015908:	bd10      	pop	{r4, pc}

0801590a <_ZNK8touchgfx5Gauge17invalidateContentEv>:
 801590a:	b510      	push	{r4, lr}
 801590c:	6803      	ldr	r3, [r0, #0]
 801590e:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8015912:	4604      	mov	r4, r0
 8015914:	4798      	blx	r3
 8015916:	b170      	cbz	r0, 8015936 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8015918:	6823      	ldr	r3, [r4, #0]
 801591a:	4620      	mov	r0, r4
 801591c:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8015920:	4798      	blx	r3
 8015922:	b140      	cbz	r0, 8015936 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8015924:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8015928:	b12b      	cbz	r3, 8015936 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 801592a:	6823      	ldr	r3, [r4, #0]
 801592c:	4620      	mov	r0, r4
 801592e:	695b      	ldr	r3, [r3, #20]
 8015930:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015934:	4718      	bx	r3
 8015936:	bd10      	pop	{r4, pc}

08015938 <_ZN8touchgfx5GaugeC1Ev>:
 8015938:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801593a:	4604      	mov	r4, r0
 801593c:	4626      	mov	r6, r4
 801593e:	f7fc feff 	bl	8012740 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>
 8015942:	4b18      	ldr	r3, [pc, #96]	; (80159a4 <_ZN8touchgfx5GaugeC1Ev+0x6c>)
 8015944:	f846 3bb4 	str.w	r3, [r6], #180
 8015948:	a902      	add	r1, sp, #8
 801594a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 801594e:	f821 3d04 	strh.w	r3, [r1, #-4]!
 8015952:	4630      	mov	r0, r6
 8015954:	f015 f9a4 	bl	802aca0 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>
 8015958:	2500      	movs	r5, #0
 801595a:	2301      	movs	r3, #1
 801595c:	f504 77ac 	add.w	r7, r4, #344	; 0x158
 8015960:	f884 3144 	strb.w	r3, [r4, #324]	; 0x144
 8015964:	f884 3145 	strb.w	r3, [r4, #325]	; 0x145
 8015968:	f8c4 5148 	str.w	r5, [r4, #328]	; 0x148
 801596c:	f8c4 514c 	str.w	r5, [r4, #332]	; 0x14c
 8015970:	f8c4 5150 	str.w	r5, [r4, #336]	; 0x150
 8015974:	f8c4 5154 	str.w	r5, [r4, #340]	; 0x154
 8015978:	4638      	mov	r0, r7
 801597a:	f014 fbd5 	bl	802a128 <_ZN8touchgfx6CircleC1Ev>
 801597e:	f104 0158 	add.w	r1, r4, #88	; 0x58
 8015982:	4620      	mov	r0, r4
 8015984:	f7fc ff7d 	bl	8012882 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 8015988:	4639      	mov	r1, r7
 801598a:	4620      	mov	r0, r4
 801598c:	f7fc ff38 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8015990:	4620      	mov	r0, r4
 8015992:	4631      	mov	r1, r6
 8015994:	f7fc ff34 	bl	8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8015998:	4620      	mov	r0, r4
 801599a:	f884 517d 	strb.w	r5, [r4, #381]	; 0x17d
 801599e:	b003      	add	sp, #12
 80159a0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80159a2:	bf00      	nop
 80159a4:	08031b44 	.word	0x08031b44

080159a8 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 80159a8:	f880 1144 	strb.w	r1, [r0, #324]	; 0x144
 80159ac:	4770      	bx	lr

080159ae <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 80159ae:	f880 1145 	strb.w	r1, [r0, #325]	; 0x145
 80159b2:	4770      	bx	lr

080159b4 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>:
 80159b4:	b538      	push	{r3, r4, r5, lr}
 80159b6:	8902      	ldrh	r2, [r0, #8]
 80159b8:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 80159bc:	f8a0 20bc 	strh.w	r2, [r0, #188]	; 0xbc
 80159c0:	4604      	mov	r4, r0
 80159c2:	f100 05b4 	add.w	r5, r0, #180	; 0xb4
 80159c6:	2200      	movs	r2, #0
 80159c8:	4611      	mov	r1, r2
 80159ca:	f8a0 30be 	strh.w	r3, [r0, #190]	; 0xbe
 80159ce:	4628      	mov	r0, r5
 80159d0:	f7ed fe50 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
 80159d4:	f9b4 2156 	ldrsh.w	r2, [r4, #342]	; 0x156
 80159d8:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 80159dc:	1a9b      	subs	r3, r3, r2
 80159de:	ee07 3a90 	vmov	s15, r3
 80159e2:	f9b4 2154 	ldrsh.w	r2, [r4, #340]	; 0x154
 80159e6:	f9b4 3150 	ldrsh.w	r3, [r4, #336]	; 0x150
 80159ea:	1a9b      	subs	r3, r3, r2
 80159ec:	ee07 3a10 	vmov	s14, r3
 80159f0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80159f4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80159f8:	edc4 7a39 	vstr	s15, [r4, #228]	; 0xe4
 80159fc:	ed84 7a38 	vstr	s14, [r4, #224]	; 0xe0
 8015a00:	4628      	mov	r0, r5
 8015a02:	f015 f999 	bl	802ad38 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8015a06:	4b16      	ldr	r3, [pc, #88]	; (8015a60 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv+0xac>)
 8015a08:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
 8015a0c:	4628      	mov	r0, r5
 8015a0e:	f015 f993 	bl	802ad38 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8015a12:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 8015a16:	f9b4 2150 	ldrsh.w	r2, [r4, #336]	; 0x150
 8015a1a:	ee07 3a90 	vmov	s15, r3
 8015a1e:	ee07 2a10 	vmov	s14, r2
 8015a22:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8015a26:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8015a2a:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 8015a2e:	ed84 7a3e 	vstr	s14, [r4, #248]	; 0xf8
 8015a32:	edc4 7a3f 	vstr	s15, [r4, #252]	; 0xfc
 8015a36:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8015a3a:	4628      	mov	r0, r5
 8015a3c:	f015 f97c 	bl	802ad38 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8015a40:	f8d4 30fc 	ldr.w	r3, [r4, #252]	; 0xfc
 8015a44:	f8d4 20f8 	ldr.w	r2, [r4, #248]	; 0xf8
 8015a48:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 8015a4c:	f8c4 2104 	str.w	r2, [r4, #260]	; 0x104
 8015a50:	4628      	mov	r0, r5
 8015a52:	f015 f971 	bl	802ad38 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8015a56:	2301      	movs	r3, #1
 8015a58:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 8015a5c:	bd38      	pop	{r3, r4, r5, pc}
 8015a5e:	bf00      	nop
 8015a60:	43960000 	.word	0x43960000

08015a64 <_ZN8touchgfx5Gauge9setNeedleEtss>:
 8015a64:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8015a66:	4604      	mov	r4, r0
 8015a68:	a802      	add	r0, sp, #8
 8015a6a:	4616      	mov	r6, r2
 8015a6c:	f820 1d04 	strh.w	r1, [r0, #-4]!
 8015a70:	461d      	mov	r5, r3
 8015a72:	4601      	mov	r1, r0
 8015a74:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 8015a78:	f015 fab4 	bl	802afe4 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>
 8015a7c:	f8a4 6154 	strh.w	r6, [r4, #340]	; 0x154
 8015a80:	f8a4 5156 	strh.w	r5, [r4, #342]	; 0x156
 8015a84:	4620      	mov	r0, r4
 8015a86:	f7ff ff95 	bl	80159b4 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 8015a8a:	b002      	add	sp, #8
 8015a8c:	bd70      	pop	{r4, r5, r6, pc}

08015a8e <_ZN8touchgfx5Gauge9setCenterEii>:
 8015a8e:	b570      	push	{r4, r5, r6, lr}
 8015a90:	4606      	mov	r6, r0
 8015a92:	460d      	mov	r5, r1
 8015a94:	f8a6 1150 	strh.w	r1, [r6, #336]	; 0x150
 8015a98:	f8a6 2152 	strh.w	r2, [r6, #338]	; 0x152
 8015a9c:	4614      	mov	r4, r2
 8015a9e:	f7ff ff89 	bl	80159b4 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 8015aa2:	f9b6 215e 	ldrsh.w	r2, [r6, #350]	; 0x15e
 8015aa6:	f9b6 115c 	ldrsh.w	r1, [r6, #348]	; 0x15c
 8015aaa:	1aa4      	subs	r4, r4, r2
 8015aac:	1a6d      	subs	r5, r5, r1
 8015aae:	0164      	lsls	r4, r4, #5
 8015ab0:	016d      	lsls	r5, r5, #5
 8015ab2:	3410      	adds	r4, #16
 8015ab4:	3510      	adds	r5, #16
 8015ab6:	f8c6 5184 	str.w	r5, [r6, #388]	; 0x184
 8015aba:	f8c6 4188 	str.w	r4, [r6, #392]	; 0x188
 8015abe:	bd70      	pop	{r4, r5, r6, pc}

08015ac0 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>:
 8015ac0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8015ac2:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 8015ac4:	0149      	lsls	r1, r1, #5
 8015ac6:	4299      	cmp	r1, r3
 8015ac8:	4604      	mov	r4, r0
 8015aca:	9101      	str	r1, [sp, #4]
 8015acc:	d00b      	beq.n	8015ae6 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_+0x26>
 8015ace:	4601      	mov	r1, r0
 8015ad0:	aa01      	add	r2, sp, #4
 8015ad2:	a802      	add	r0, sp, #8
 8015ad4:	f014 fd26 	bl	802a524 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>
 8015ad8:	9b01      	ldr	r3, [sp, #4]
 8015ada:	63e3      	str	r3, [r4, #60]	; 0x3c
 8015adc:	6823      	ldr	r3, [r4, #0]
 8015ade:	a902      	add	r1, sp, #8
 8015ae0:	691b      	ldr	r3, [r3, #16]
 8015ae2:	4620      	mov	r0, r4
 8015ae4:	4798      	blx	r3
 8015ae6:	b004      	add	sp, #16
 8015ae8:	bd10      	pop	{r4, pc}
	...

08015aec <_ZN8touchgfx5Gauge8setValueEi>:
 8015aec:	b570      	push	{r4, r5, r6, lr}
 8015aee:	4604      	mov	r4, r0
 8015af0:	f7fc fd58 	bl	80125a4 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>
 8015af4:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 8015af8:	429a      	cmp	r2, r3
 8015afa:	bfac      	ite	ge
 8015afc:	f894 3145 	ldrbge.w	r3, [r4, #325]	; 0x145
 8015b00:	f894 3144 	ldrblt.w	r3, [r4, #324]	; 0x144
 8015b04:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 8015b08:	f8d4 114c 	ldr.w	r1, [r4, #332]	; 0x14c
 8015b0c:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 8015b10:	1ac9      	subs	r1, r1, r3
 8015b12:	2900      	cmp	r1, #0
 8015b14:	bfb8      	it	lt
 8015b16:	4249      	neglt	r1, r1
 8015b18:	b289      	uxth	r1, r1
 8015b1a:	4620      	mov	r0, r4
 8015b1c:	f7fc fd64 	bl	80125e8 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>
 8015b20:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 8015b24:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
 8015b28:	eddf 6a19 	vldr	s13, [pc, #100]	; 8015b90 <_ZN8touchgfx5Gauge8setValueEi+0xa4>
 8015b2c:	ed9f 7a19 	vldr	s14, [pc, #100]	; 8015b94 <_ZN8touchgfx5Gauge8setValueEi+0xa8>
 8015b30:	429a      	cmp	r2, r3
 8015b32:	4605      	mov	r5, r0
 8015b34:	f504 76ac 	add.w	r6, r4, #344	; 0x158
 8015b38:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 8015b3c:	da15      	bge.n	8015b6a <_ZN8touchgfx5Gauge8setValueEi+0x7e>
 8015b3e:	1b5b      	subs	r3, r3, r5
 8015b40:	ee07 3a90 	vmov	s15, r3
 8015b44:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8015b48:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 8015b4c:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 8015b50:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 8015b54:	ee21 1a07 	vmul.f32	s2, s2, s14
 8015b58:	f015 f85d 	bl	802ac16 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 8015b5c:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 8015b60:	1b49      	subs	r1, r1, r5
 8015b62:	4630      	mov	r0, r6
 8015b64:	f7ff ffac 	bl	8015ac0 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>
 8015b68:	bd70      	pop	{r4, r5, r6, pc}
 8015b6a:	442b      	add	r3, r5
 8015b6c:	ee07 3a90 	vmov	s15, r3
 8015b70:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8015b74:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 8015b78:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 8015b7c:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 8015b80:	ee21 1a07 	vmul.f32	s2, s2, s14
 8015b84:	f015 f847 	bl	802ac16 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 8015b88:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 8015b8c:	4429      	add	r1, r5
 8015b8e:	e7e8      	b.n	8015b62 <_ZN8touchgfx5Gauge8setValueEi+0x76>
 8015b90:	43340000 	.word	0x43340000
 8015b94:	40490fdb 	.word	0x40490fdb

08015b98 <_ZN8touchgfx5Gauge16setStartEndAngleEii>:
 8015b98:	b510      	push	{r4, lr}
 8015b9a:	f8c0 1148 	str.w	r1, [r0, #328]	; 0x148
 8015b9e:	f8c0 214c 	str.w	r2, [r0, #332]	; 0x14c
 8015ba2:	0149      	lsls	r1, r1, #5
 8015ba4:	0152      	lsls	r2, r2, #5
 8015ba6:	f8c0 1190 	str.w	r1, [r0, #400]	; 0x190
 8015baa:	f8c0 2194 	str.w	r2, [r0, #404]	; 0x194
 8015bae:	4604      	mov	r4, r0
 8015bb0:	f7fc fca2 	bl	80124f8 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>
 8015bb4:	4601      	mov	r1, r0
 8015bb6:	4620      	mov	r0, r4
 8015bb8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015bbc:	f7ff bf96 	b.w	8015aec <_ZN8touchgfx5Gauge8setValueEi>

08015bc0 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 8015bc0:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8015bc4:	4770      	bx	lr

08015bc6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 8015bc6:	b570      	push	{r4, r5, r6, lr}
 8015bc8:	880b      	ldrh	r3, [r1, #0]
 8015bca:	85c3      	strh	r3, [r0, #46]	; 0x2e
 8015bcc:	4605      	mov	r5, r0
 8015bce:	8813      	ldrh	r3, [r2, #0]
 8015bd0:	f825 3f30 	strh.w	r3, [r5, #48]!
 8015bd4:	4604      	mov	r4, r0
 8015bd6:	4628      	mov	r0, r5
 8015bd8:	f006 fb3a 	bl	801c250 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8015bdc:	4606      	mov	r6, r0
 8015bde:	4628      	mov	r0, r5
 8015be0:	f006 fb6a 	bl	801c2b8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8015be4:	6823      	ldr	r3, [r4, #0]
 8015be6:	4605      	mov	r5, r0
 8015be8:	4631      	mov	r1, r6
 8015bea:	4620      	mov	r0, r4
 8015bec:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015bee:	4798      	blx	r3
 8015bf0:	6823      	ldr	r3, [r4, #0]
 8015bf2:	4629      	mov	r1, r5
 8015bf4:	4620      	mov	r0, r4
 8015bf6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8015bf8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015bfc:	4718      	bx	r3

08015bfe <_ZN8touchgfx14AbstractButton13executeActionEv>:
 8015bfe:	b510      	push	{r4, lr}
 8015c00:	4604      	mov	r4, r0
 8015c02:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8015c04:	b150      	cbz	r0, 8015c1c <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8015c06:	6803      	ldr	r3, [r0, #0]
 8015c08:	68db      	ldr	r3, [r3, #12]
 8015c0a:	4798      	blx	r3
 8015c0c:	b130      	cbz	r0, 8015c1c <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8015c0e:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8015c10:	6803      	ldr	r3, [r0, #0]
 8015c12:	4621      	mov	r1, r4
 8015c14:	689b      	ldr	r3, [r3, #8]
 8015c16:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015c1a:	4718      	bx	r3
 8015c1c:	bd10      	pop	{r4, pc}

08015c1e <_ZNK8touchgfx6Button12getSolidRectEv>:
 8015c1e:	b510      	push	{r4, lr}
 8015c20:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 8015c24:	2bff      	cmp	r3, #255	; 0xff
 8015c26:	4604      	mov	r4, r0
 8015c28:	d006      	beq.n	8015c38 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 8015c2a:	2300      	movs	r3, #0
 8015c2c:	8003      	strh	r3, [r0, #0]
 8015c2e:	8043      	strh	r3, [r0, #2]
 8015c30:	8083      	strh	r3, [r0, #4]
 8015c32:	80c3      	strh	r3, [r0, #6]
 8015c34:	4620      	mov	r0, r4
 8015c36:	bd10      	pop	{r4, pc}
 8015c38:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 8015c3c:	b11b      	cbz	r3, 8015c46 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 8015c3e:	3130      	adds	r1, #48	; 0x30
 8015c40:	f006 fb6e 	bl	801c320 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8015c44:	e7f6      	b.n	8015c34 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 8015c46:	312e      	adds	r1, #46	; 0x2e
 8015c48:	e7fa      	b.n	8015c40 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

08015c4c <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 8015c4c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015c50:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8015c54:	b08a      	sub	sp, #40	; 0x28
 8015c56:	4604      	mov	r4, r0
 8015c58:	4688      	mov	r8, r1
 8015c5a:	2b00      	cmp	r3, #0
 8015c5c:	d066      	beq.n	8015d2c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 8015c5e:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8015c60:	f8ad 3014 	strh.w	r3, [sp, #20]
 8015c64:	a805      	add	r0, sp, #20
 8015c66:	f006 faf3 	bl	801c250 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8015c6a:	4607      	mov	r7, r0
 8015c6c:	a805      	add	r0, sp, #20
 8015c6e:	f006 fb23 	bl	801c2b8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8015c72:	f9b8 6000 	ldrsh.w	r6, [r8]
 8015c76:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 8015c7a:	4432      	add	r2, r6
 8015c7c:	b292      	uxth	r2, r2
 8015c7e:	2300      	movs	r3, #0
 8015c80:	fa0f fc82 	sxth.w	ip, r2
 8015c84:	459c      	cmp	ip, r3
 8015c86:	9306      	str	r3, [sp, #24]
 8015c88:	dd52      	ble.n	8015d30 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8015c8a:	42b7      	cmp	r7, r6
 8015c8c:	dd50      	ble.n	8015d30 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8015c8e:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 8015c92:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8015c96:	442b      	add	r3, r5
 8015c98:	b29b      	uxth	r3, r3
 8015c9a:	b219      	sxth	r1, r3
 8015c9c:	2900      	cmp	r1, #0
 8015c9e:	dd47      	ble.n	8015d30 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8015ca0:	42a8      	cmp	r0, r5
 8015ca2:	dd45      	ble.n	8015d30 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8015ca4:	4567      	cmp	r7, ip
 8015ca6:	bfb8      	it	lt
 8015ca8:	b2ba      	uxthlt	r2, r7
 8015caa:	4288      	cmp	r0, r1
 8015cac:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 8015cb0:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8015cb4:	bfb8      	it	lt
 8015cb6:	b283      	uxthlt	r3, r0
 8015cb8:	1b92      	subs	r2, r2, r6
 8015cba:	1b5b      	subs	r3, r3, r5
 8015cbc:	f8ad 201c 	strh.w	r2, [sp, #28]
 8015cc0:	f8ad 301e 	strh.w	r3, [sp, #30]
 8015cc4:	f8ad 6018 	strh.w	r6, [sp, #24]
 8015cc8:	f8ad 501a 	strh.w	r5, [sp, #26]
 8015ccc:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8015cd0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8015cd4:	429a      	cmp	r2, r3
 8015cd6:	d026      	beq.n	8015d26 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8015cd8:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8015cdc:	2b00      	cmp	r3, #0
 8015cde:	dd22      	ble.n	8015d26 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8015ce0:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8015ce4:	2b00      	cmp	r3, #0
 8015ce6:	dd1e      	ble.n	8015d26 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8015ce8:	2300      	movs	r3, #0
 8015cea:	e9cd 3308 	strd	r3, r3, [sp, #32]
 8015cee:	6823      	ldr	r3, [r4, #0]
 8015cf0:	a908      	add	r1, sp, #32
 8015cf2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8015cf4:	4620      	mov	r0, r4
 8015cf6:	4798      	blx	r3
 8015cf8:	4b0f      	ldr	r3, [pc, #60]	; (8015d38 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 8015cfa:	681b      	ldr	r3, [r3, #0]
 8015cfc:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8015d00:	b10a      	cbz	r2, 8015d06 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 8015d02:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8015d04:	b900      	cbnz	r0, 8015d08 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 8015d06:	6898      	ldr	r0, [r3, #8]
 8015d08:	6801      	ldr	r1, [r0, #0]
 8015d0a:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8015d0e:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8015d12:	2501      	movs	r5, #1
 8015d14:	9502      	str	r5, [sp, #8]
 8015d16:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 8015d1a:	9401      	str	r4, [sp, #4]
 8015d1c:	ac06      	add	r4, sp, #24
 8015d1e:	9400      	str	r4, [sp, #0]
 8015d20:	688c      	ldr	r4, [r1, #8]
 8015d22:	a905      	add	r1, sp, #20
 8015d24:	47a0      	blx	r4
 8015d26:	b00a      	add	sp, #40	; 0x28
 8015d28:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8015d2c:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 8015d2e:	e797      	b.n	8015c60 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 8015d30:	2300      	movs	r3, #0
 8015d32:	9307      	str	r3, [sp, #28]
 8015d34:	e7ca      	b.n	8015ccc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 8015d36:	bf00      	nop
 8015d38:	2001383c 	.word	0x2001383c

08015d3c <_ZNK8touchgfx6Button17invalidateContentEv>:
 8015d3c:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 8015d40:	b12a      	cbz	r2, 8015d4e <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8015d42:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8015d46:	b112      	cbz	r2, 8015d4e <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8015d48:	6803      	ldr	r3, [r0, #0]
 8015d4a:	695b      	ldr	r3, [r3, #20]
 8015d4c:	4718      	bx	r3
 8015d4e:	4770      	bx	lr

08015d50 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 8015d50:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8015d54:	4b2f      	ldr	r3, [pc, #188]	; (8015e14 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 8015d56:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8015d58:	881b      	ldrh	r3, [r3, #0]
 8015d5a:	4293      	cmp	r3, r2
 8015d5c:	b08d      	sub	sp, #52	; 0x34
 8015d5e:	4604      	mov	r4, r0
 8015d60:	460f      	mov	r7, r1
 8015d62:	d954      	bls.n	8015e0e <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8015d64:	4b2c      	ldr	r3, [pc, #176]	; (8015e18 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 8015d66:	6819      	ldr	r1, [r3, #0]
 8015d68:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 8015d6c:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 8015d70:	4a2a      	ldr	r2, [pc, #168]	; (8015e1c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 8015d72:	6812      	ldr	r2, [r2, #0]
 8015d74:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 8015d78:	2900      	cmp	r1, #0
 8015d7a:	d048      	beq.n	8015e0e <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8015d7c:	785a      	ldrb	r2, [r3, #1]
 8015d7e:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 8015d82:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 8015d86:	4b26      	ldr	r3, [pc, #152]	; (8015e20 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 8015d88:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
 8015d8c:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 8015d90:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 8015d94:	6b26      	ldr	r6, [r4, #48]	; 0x30
 8015d96:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
 8015d9a:	9107      	str	r1, [sp, #28]
 8015d9c:	f3c2 0801 	ubfx	r8, r2, #0, #2
 8015da0:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8015da4:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
 8015da8:	681a      	ldr	r2, [r3, #0]
 8015daa:	f88d 8020 	strb.w	r8, [sp, #32]
 8015dae:	f892 3058 	ldrb.w	r3, [r2, #88]	; 0x58
 8015db2:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 8015db6:	9609      	str	r6, [sp, #36]	; 0x24
 8015db8:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 8015dbc:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
 8015dc0:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
 8015dc4:	b10b      	cbz	r3, 8015dca <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 8015dc6:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
 8015dc8:	b905      	cbnz	r5, 8015dcc <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 8015dca:	6895      	ldr	r5, [r2, #8]
 8015dcc:	ae05      	add	r6, sp, #20
 8015dce:	4621      	mov	r1, r4
 8015dd0:	4630      	mov	r0, r6
 8015dd2:	f003 ff71 	bl	8019cb8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8015dd6:	4b13      	ldr	r3, [pc, #76]	; (8015e24 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 8015dd8:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8015dda:	6818      	ldr	r0, [r3, #0]
 8015ddc:	f7f4 fc5c 	bl	800a698 <_ZNK8touchgfx5Texts7getTextEt>
 8015de0:	6823      	ldr	r3, [r4, #0]
 8015de2:	4680      	mov	r8, r0
 8015de4:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8015de6:	4620      	mov	r0, r4
 8015de8:	4798      	blx	r3
 8015dea:	6823      	ldr	r3, [r4, #0]
 8015dec:	4681      	mov	r9, r0
 8015dee:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8015df2:	4620      	mov	r0, r4
 8015df4:	4798      	blx	r3
 8015df6:	e9cd 9002 	strd	r9, r0, [sp, #8]
 8015dfa:	ab07      	add	r3, sp, #28
 8015dfc:	9300      	str	r3, [sp, #0]
 8015dfe:	f8cd 8004 	str.w	r8, [sp, #4]
 8015e02:	463b      	mov	r3, r7
 8015e04:	e896 0006 	ldmia.w	r6, {r1, r2}
 8015e08:	4628      	mov	r0, r5
 8015e0a:	f7f4 fbf7 	bl	800a5fc <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8015e0e:	b00d      	add	sp, #52	; 0x34
 8015e10:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8015e14:	20013898 	.word	0x20013898
 8015e18:	20013894 	.word	0x20013894
 8015e1c:	2001389c 	.word	0x2001389c
 8015e20:	2001383c 	.word	0x2001383c
 8015e24:	200138a0 	.word	0x200138a0

08015e28 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_>:
 8015e28:	4770      	bx	lr

08015e2a <_ZN8touchgfx14ButtonWithIconD1Ev>:
 8015e2a:	4770      	bx	lr

08015e2c <_ZN8touchgfx14ButtonWithIconD0Ev>:
 8015e2c:	b510      	push	{r4, lr}
 8015e2e:	213c      	movs	r1, #60	; 0x3c
 8015e30:	4604      	mov	r4, r0
 8015e32:	f016 fea6 	bl	802cb82 <_ZdlPvj>
 8015e36:	4620      	mov	r0, r4
 8015e38:	bd10      	pop	{r4, pc}

08015e3a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>:
 8015e3a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015e3e:	461c      	mov	r4, r3
 8015e40:	4606      	mov	r6, r0
 8015e42:	9f06      	ldr	r7, [sp, #24]
 8015e44:	f7ff febf 	bl	8015bc6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8015e48:	8823      	ldrh	r3, [r4, #0]
 8015e4a:	86b3      	strh	r3, [r6, #52]	; 0x34
 8015e4c:	883b      	ldrh	r3, [r7, #0]
 8015e4e:	86f3      	strh	r3, [r6, #54]	; 0x36
 8015e50:	4638      	mov	r0, r7
 8015e52:	f9b6 5008 	ldrsh.w	r5, [r6, #8]
 8015e56:	f006 f9fb 	bl	801c250 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8015e5a:	f04f 0802 	mov.w	r8, #2
 8015e5e:	fb95 f5f8 	sdiv	r5, r5, r8
 8015e62:	b2ad      	uxth	r5, r5
 8015e64:	fb90 f0f8 	sdiv	r0, r0, r8
 8015e68:	1a2d      	subs	r5, r5, r0
 8015e6a:	8735      	strh	r5, [r6, #56]	; 0x38
 8015e6c:	4638      	mov	r0, r7
 8015e6e:	f9b6 400a 	ldrsh.w	r4, [r6, #10]
 8015e72:	fb94 f4f8 	sdiv	r4, r4, r8
 8015e76:	f006 fa1f 	bl	801c2b8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8015e7a:	b2a4      	uxth	r4, r4
 8015e7c:	fb90 f0f8 	sdiv	r0, r0, r8
 8015e80:	1a24      	subs	r4, r4, r0
 8015e82:	8774      	strh	r4, [r6, #58]	; 0x3a
 8015e84:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08015e88 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE>:
 8015e88:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015e8c:	4604      	mov	r4, r0
 8015e8e:	b08c      	sub	sp, #48	; 0x30
 8015e90:	460d      	mov	r5, r1
 8015e92:	f7ff fedb 	bl	8015c4c <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 8015e96:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 8015e9a:	2b00      	cmp	r3, #0
 8015e9c:	d05d      	beq.n	8015f5a <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd2>
 8015e9e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8015ea0:	f8ad 3014 	strh.w	r3, [sp, #20]
 8015ea4:	a805      	add	r0, sp, #20
 8015ea6:	f9b4 8038 	ldrsh.w	r8, [r4, #56]	; 0x38
 8015eaa:	f9b4 703a 	ldrsh.w	r7, [r4, #58]	; 0x3a
 8015eae:	f006 f9cf 	bl	801c250 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8015eb2:	4606      	mov	r6, r0
 8015eb4:	a805      	add	r0, sp, #20
 8015eb6:	f006 f9ff 	bl	801c2b8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8015eba:	6869      	ldr	r1, [r5, #4]
 8015ebc:	f8ad 001e 	strh.w	r0, [sp, #30]
 8015ec0:	6828      	ldr	r0, [r5, #0]
 8015ec2:	f8ad 8018 	strh.w	r8, [sp, #24]
 8015ec6:	ab08      	add	r3, sp, #32
 8015ec8:	ad08      	add	r5, sp, #32
 8015eca:	c303      	stmia	r3!, {r0, r1}
 8015ecc:	a906      	add	r1, sp, #24
 8015ece:	4628      	mov	r0, r5
 8015ed0:	f8ad 701a 	strh.w	r7, [sp, #26]
 8015ed4:	f8ad 601c 	strh.w	r6, [sp, #28]
 8015ed8:	f7fc fe18 	bl	8012b0c <_ZN8touchgfx4RectaNERKS0_>
 8015edc:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8015ee0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8015ee4:	429a      	cmp	r2, r3
 8015ee6:	d035      	beq.n	8015f54 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8015ee8:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8015eec:	2b00      	cmp	r3, #0
 8015eee:	dd31      	ble.n	8015f54 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8015ef0:	f9bd 3026 	ldrsh.w	r3, [sp, #38]	; 0x26
 8015ef4:	2b00      	cmp	r3, #0
 8015ef6:	dd2d      	ble.n	8015f54 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8015ef8:	2300      	movs	r3, #0
 8015efa:	e9cd 330a 	strd	r3, r3, [sp, #40]	; 0x28
 8015efe:	6823      	ldr	r3, [r4, #0]
 8015f00:	a90a      	add	r1, sp, #40	; 0x28
 8015f02:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8015f04:	4620      	mov	r0, r4
 8015f06:	4798      	blx	r3
 8015f08:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8015f0c:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 8015f0e:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 8015f12:	1a9b      	subs	r3, r3, r2
 8015f14:	f8ad 3020 	strh.w	r3, [sp, #32]
 8015f18:	8f63      	ldrh	r3, [r4, #58]	; 0x3a
 8015f1a:	1ac9      	subs	r1, r1, r3
 8015f1c:	f8ad 1022 	strh.w	r1, [sp, #34]	; 0x22
 8015f20:	490f      	ldr	r1, [pc, #60]	; (8015f60 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd8>)
 8015f22:	6809      	ldr	r1, [r1, #0]
 8015f24:	f891 0058 	ldrb.w	r0, [r1, #88]	; 0x58
 8015f28:	b108      	cbz	r0, 8015f2e <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa6>
 8015f2a:	6cc8      	ldr	r0, [r1, #76]	; 0x4c
 8015f2c:	b900      	cbnz	r0, 8015f30 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa8>
 8015f2e:	6888      	ldr	r0, [r1, #8]
 8015f30:	f8bd 102a 	ldrh.w	r1, [sp, #42]	; 0x2a
 8015f34:	440b      	add	r3, r1
 8015f36:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 8015f3a:	2601      	movs	r6, #1
 8015f3c:	440a      	add	r2, r1
 8015f3e:	6801      	ldr	r1, [r0, #0]
 8015f40:	9602      	str	r6, [sp, #8]
 8015f42:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 8015f46:	e9cd 5400 	strd	r5, r4, [sp]
 8015f4a:	b21b      	sxth	r3, r3
 8015f4c:	688c      	ldr	r4, [r1, #8]
 8015f4e:	b212      	sxth	r2, r2
 8015f50:	a905      	add	r1, sp, #20
 8015f52:	47a0      	blx	r4
 8015f54:	b00c      	add	sp, #48	; 0x30
 8015f56:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8015f5a:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8015f5c:	e7a0      	b.n	8015ea0 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x18>
 8015f5e:	bf00      	nop
 8015f60:	2001383c 	.word	0x2001383c

08015f64 <_ZN8touchgfx14ButtonWithIconC1Ev>:
 8015f64:	b510      	push	{r4, lr}
 8015f66:	2101      	movs	r1, #1
 8015f68:	2200      	movs	r2, #0
 8015f6a:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 8015f6e:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 8015f72:	4c0e      	ldr	r4, [pc, #56]	; (8015fac <_ZN8touchgfx14ButtonWithIconC1Ev+0x48>)
 8015f74:	8082      	strh	r2, [r0, #4]
 8015f76:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8015f7a:	80c2      	strh	r2, [r0, #6]
 8015f7c:	8102      	strh	r2, [r0, #8]
 8015f7e:	8142      	strh	r2, [r0, #10]
 8015f80:	8182      	strh	r2, [r0, #12]
 8015f82:	81c2      	strh	r2, [r0, #14]
 8015f84:	8202      	strh	r2, [r0, #16]
 8015f86:	8242      	strh	r2, [r0, #18]
 8015f88:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8015f8c:	61c2      	str	r2, [r0, #28]
 8015f8e:	8402      	strh	r2, [r0, #32]
 8015f90:	8442      	strh	r2, [r0, #34]	; 0x22
 8015f92:	6282      	str	r2, [r0, #40]	; 0x28
 8015f94:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 8015f98:	85c1      	strh	r1, [r0, #46]	; 0x2e
 8015f9a:	8601      	strh	r1, [r0, #48]	; 0x30
 8015f9c:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 8015fa0:	6004      	str	r4, [r0, #0]
 8015fa2:	8681      	strh	r1, [r0, #52]	; 0x34
 8015fa4:	86c1      	strh	r1, [r0, #54]	; 0x36
 8015fa6:	8702      	strh	r2, [r0, #56]	; 0x38
 8015fa8:	8742      	strh	r2, [r0, #58]	; 0x3a
 8015faa:	bd10      	pop	{r4, pc}
 8015fac:	08031c2c 	.word	0x08031c2c

08015fb0 <_ZN8touchgfx5ImageD1Ev>:
 8015fb0:	4770      	bx	lr

08015fb2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 8015fb2:	b570      	push	{r4, r5, r6, lr}
 8015fb4:	880b      	ldrh	r3, [r1, #0]
 8015fb6:	84c3      	strh	r3, [r0, #38]	; 0x26
 8015fb8:	4604      	mov	r4, r0
 8015fba:	4608      	mov	r0, r1
 8015fbc:	460d      	mov	r5, r1
 8015fbe:	f006 f947 	bl	801c250 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8015fc2:	4606      	mov	r6, r0
 8015fc4:	4628      	mov	r0, r5
 8015fc6:	f006 f977 	bl	801c2b8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8015fca:	6823      	ldr	r3, [r4, #0]
 8015fcc:	4605      	mov	r5, r0
 8015fce:	4631      	mov	r1, r6
 8015fd0:	4620      	mov	r0, r4
 8015fd2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015fd4:	4798      	blx	r3
 8015fd6:	6823      	ldr	r3, [r4, #0]
 8015fd8:	4629      	mov	r1, r5
 8015fda:	4620      	mov	r0, r4
 8015fdc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8015fde:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015fe2:	4718      	bx	r3

08015fe4 <_ZN8touchgfx5ImageD0Ev>:
 8015fe4:	b510      	push	{r4, lr}
 8015fe6:	212c      	movs	r1, #44	; 0x2c
 8015fe8:	4604      	mov	r4, r0
 8015fea:	f016 fdca 	bl	802cb82 <_ZdlPvj>
 8015fee:	4620      	mov	r0, r4
 8015ff0:	bd10      	pop	{r4, pc}

08015ff2 <_ZNK8touchgfx5Image12getSolidRectEv>:
 8015ff2:	b510      	push	{r4, lr}
 8015ff4:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 8015ff8:	2bff      	cmp	r3, #255	; 0xff
 8015ffa:	4604      	mov	r4, r0
 8015ffc:	d006      	beq.n	801600c <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 8015ffe:	2300      	movs	r3, #0
 8016000:	8003      	strh	r3, [r0, #0]
 8016002:	8043      	strh	r3, [r0, #2]
 8016004:	8083      	strh	r3, [r0, #4]
 8016006:	80c3      	strh	r3, [r0, #6]
 8016008:	4620      	mov	r0, r4
 801600a:	bd10      	pop	{r4, pc}
 801600c:	3126      	adds	r1, #38	; 0x26
 801600e:	f006 f987 	bl	801c320 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8016012:	e7f9      	b.n	8016008 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

08016014 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 8016014:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8016018:	4604      	mov	r4, r0
 801601a:	b088      	sub	sp, #32
 801601c:	f854 3b26 	ldr.w	r3, [r4], #38
 8016020:	2500      	movs	r5, #0
 8016022:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016024:	460f      	mov	r7, r1
 8016026:	e9cd 5504 	strd	r5, r5, [sp, #16]
 801602a:	a904      	add	r1, sp, #16
 801602c:	4606      	mov	r6, r0
 801602e:	4798      	blx	r3
 8016030:	4620      	mov	r0, r4
 8016032:	f006 f90d 	bl	801c250 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8016036:	4680      	mov	r8, r0
 8016038:	4620      	mov	r0, r4
 801603a:	f006 f93d 	bl	801c2b8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801603e:	9506      	str	r5, [sp, #24]
 8016040:	ad06      	add	r5, sp, #24
 8016042:	f8ad 001e 	strh.w	r0, [sp, #30]
 8016046:	4639      	mov	r1, r7
 8016048:	4628      	mov	r0, r5
 801604a:	f8ad 801c 	strh.w	r8, [sp, #28]
 801604e:	f7fc fd5d 	bl	8012b0c <_ZN8touchgfx4RectaNERKS0_>
 8016052:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8016056:	2b00      	cmp	r3, #0
 8016058:	dd19      	ble.n	801608e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 801605a:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 801605e:	2b00      	cmp	r3, #0
 8016060:	dd15      	ble.n	801608e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 8016062:	4b0c      	ldr	r3, [pc, #48]	; (8016094 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 8016064:	681b      	ldr	r3, [r3, #0]
 8016066:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 801606a:	b10a      	cbz	r2, 8016070 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 801606c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 801606e:	b900      	cbnz	r0, 8016072 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 8016070:	6898      	ldr	r0, [r3, #8]
 8016072:	6801      	ldr	r1, [r0, #0]
 8016074:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8016078:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801607c:	2701      	movs	r7, #1
 801607e:	9702      	str	r7, [sp, #8]
 8016080:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 8016084:	e9cd 5600 	strd	r5, r6, [sp]
 8016088:	688d      	ldr	r5, [r1, #8]
 801608a:	4621      	mov	r1, r4
 801608c:	47a8      	blx	r5
 801608e:	b008      	add	sp, #32
 8016090:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8016094:	2001383c 	.word	0x2001383c

08016098 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 8016098:	4770      	bx	lr

0801609a <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 801609a:	b510      	push	{r4, lr}
 801609c:	2148      	movs	r1, #72	; 0x48
 801609e:	4604      	mov	r4, r0
 80160a0:	f016 fd6f 	bl	802cb82 <_ZdlPvj>
 80160a4:	4620      	mov	r0, r4
 80160a6:	bd10      	pop	{r4, pc}

080160a8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 80160a8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80160ac:	b08d      	sub	sp, #52	; 0x34
 80160ae:	4604      	mov	r4, r0
 80160b0:	460f      	mov	r7, r1
 80160b2:	f7ff fdcb 	bl	8015c4c <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 80160b6:	4a55      	ldr	r2, [pc, #340]	; (801620c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
 80160b8:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80160ba:	8812      	ldrh	r2, [r2, #0]
 80160bc:	429a      	cmp	r2, r3
 80160be:	f240 8082 	bls.w	80161c6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 80160c2:	4d53      	ldr	r5, [pc, #332]	; (8016210 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
 80160c4:	682a      	ldr	r2, [r5, #0]
 80160c6:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 80160ca:	4b52      	ldr	r3, [pc, #328]	; (8016214 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
 80160cc:	681b      	ldr	r3, [r3, #0]
 80160ce:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 80160d2:	f9b4 3046 	ldrsh.w	r3, [r4, #70]	; 0x46
 80160d6:	2200      	movs	r2, #0
 80160d8:	e9cd 2203 	strd	r2, r2, [sp, #12]
 80160dc:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 80160e0:	2a03      	cmp	r2, #3
 80160e2:	d811      	bhi.n	8016108 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 80160e4:	e8df f002 	tbb	[pc, r2]
 80160e8:	89727902 	.word	0x89727902
 80160ec:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 80160f0:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 80160f4:	1ad2      	subs	r2, r2, r3
 80160f6:	2002      	movs	r0, #2
 80160f8:	f8ad 1010 	strh.w	r1, [sp, #16]
 80160fc:	fb92 f2f0 	sdiv	r2, r2, r0
 8016100:	f8ad 3012 	strh.w	r3, [sp, #18]
 8016104:	f8ad 200e 	strh.w	r2, [sp, #14]
 8016108:	f10d 080c 	add.w	r8, sp, #12
 801610c:	e898 0003 	ldmia.w	r8, {r0, r1}
 8016110:	f10d 0914 	add.w	r9, sp, #20
 8016114:	e889 0003 	stmia.w	r9, {r0, r1}
 8016118:	4639      	mov	r1, r7
 801611a:	4648      	mov	r0, r9
 801611c:	f7fc fcf6 	bl	8012b0c <_ZN8touchgfx4RectaNERKS0_>
 8016120:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8016124:	2b00      	cmp	r3, #0
 8016126:	dd4e      	ble.n	80161c6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8016128:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 801612c:	2b00      	cmp	r3, #0
 801612e:	dd4a      	ble.n	80161c6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8016130:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8016134:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8016138:	1a9b      	subs	r3, r3, r2
 801613a:	f8ad 3014 	strh.w	r3, [sp, #20]
 801613e:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 8016142:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 8016146:	1a9b      	subs	r3, r3, r2
 8016148:	f8ad 3016 	strh.w	r3, [sp, #22]
 801614c:	6823      	ldr	r3, [r4, #0]
 801614e:	4641      	mov	r1, r8
 8016150:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016152:	4620      	mov	r0, r4
 8016154:	4798      	blx	r3
 8016156:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 801615a:	2b00      	cmp	r3, #0
 801615c:	d053      	beq.n	8016206 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15e>
 801615e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8016160:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 8016162:	682b      	ldr	r3, [r5, #0]
 8016164:	f894 0032 	ldrb.w	r0, [r4, #50]	; 0x32
 8016168:	f894 4044 	ldrb.w	r4, [r4, #68]	; 0x44
 801616c:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8016170:	785b      	ldrb	r3, [r3, #1]
 8016172:	9209      	str	r2, [sp, #36]	; 0x24
 8016174:	f3c3 0501 	ubfx	r5, r3, #0, #2
 8016178:	f3c3 0381 	ubfx	r3, r3, #2, #2
 801617c:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 8016180:	2300      	movs	r3, #0
 8016182:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8016186:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 801618a:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 801618e:	4b22      	ldr	r3, [pc, #136]	; (8016218 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
 8016190:	9607      	str	r6, [sp, #28]
 8016192:	681b      	ldr	r3, [r3, #0]
 8016194:	f88d 5020 	strb.w	r5, [sp, #32]
 8016198:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 801619c:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 80161a0:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 80161a4:	b10a      	cbz	r2, 80161aa <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
 80161a6:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 80161a8:	b904      	cbnz	r4, 80161ac <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x104>
 80161aa:	689c      	ldr	r4, [r3, #8]
 80161ac:	4b1b      	ldr	r3, [pc, #108]	; (801621c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
 80161ae:	6818      	ldr	r0, [r3, #0]
 80161b0:	f7f4 fa72 	bl	800a698 <_ZNK8touchgfx5Texts7getTextEt>
 80161b4:	ab07      	add	r3, sp, #28
 80161b6:	9001      	str	r0, [sp, #4]
 80161b8:	9300      	str	r3, [sp, #0]
 80161ba:	e898 0006 	ldmia.w	r8, {r1, r2}
 80161be:	464b      	mov	r3, r9
 80161c0:	4620      	mov	r0, r4
 80161c2:	f7f4 fa1b 	bl	800a5fc <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 80161c6:	b00d      	add	sp, #52	; 0x34
 80161c8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80161cc:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 80161d0:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 80161d4:	1ad2      	subs	r2, r2, r3
 80161d6:	3201      	adds	r2, #1
 80161d8:	e78d      	b.n	80160f6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x4e>
 80161da:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 80161de:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 80161e2:	1ad2      	subs	r2, r2, r3
 80161e4:	3201      	adds	r2, #1
 80161e6:	2002      	movs	r0, #2
 80161e8:	f8ad 3010 	strh.w	r3, [sp, #16]
 80161ec:	fb92 f2f0 	sdiv	r2, r2, r0
 80161f0:	f8ad 1012 	strh.w	r1, [sp, #18]
 80161f4:	f8ad 200c 	strh.w	r2, [sp, #12]
 80161f8:	e786      	b.n	8016108 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 80161fa:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 80161fe:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 8016202:	1ad2      	subs	r2, r2, r3
 8016204:	e7ef      	b.n	80161e6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x13e>
 8016206:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 8016208:	e7aa      	b.n	8016160 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb8>
 801620a:	bf00      	nop
 801620c:	20013898 	.word	0x20013898
 8016210:	20013894 	.word	0x20013894
 8016214:	2001389c 	.word	0x2001389c
 8016218:	2001383c 	.word	0x2001383c
 801621c:	200138a0 	.word	0x200138a0

08016220 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 8016220:	b510      	push	{r4, lr}
 8016222:	2101      	movs	r1, #1
 8016224:	4c13      	ldr	r4, [pc, #76]	; (8016274 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 8016226:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 801622a:	2200      	movs	r2, #0
 801622c:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 8016230:	6004      	str	r4, [r0, #0]
 8016232:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8016236:	4c10      	ldr	r4, [pc, #64]	; (8016278 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 8016238:	8082      	strh	r2, [r0, #4]
 801623a:	80c2      	strh	r2, [r0, #6]
 801623c:	8102      	strh	r2, [r0, #8]
 801623e:	8142      	strh	r2, [r0, #10]
 8016240:	8182      	strh	r2, [r0, #12]
 8016242:	81c2      	strh	r2, [r0, #14]
 8016244:	8202      	strh	r2, [r0, #16]
 8016246:	8242      	strh	r2, [r0, #18]
 8016248:	e9c0 2205 	strd	r2, r2, [r0, #20]
 801624c:	61c2      	str	r2, [r0, #28]
 801624e:	8402      	strh	r2, [r0, #32]
 8016250:	8442      	strh	r2, [r0, #34]	; 0x22
 8016252:	6282      	str	r2, [r0, #40]	; 0x28
 8016254:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 8016258:	85c1      	strh	r1, [r0, #46]	; 0x2e
 801625a:	8601      	strh	r1, [r0, #48]	; 0x30
 801625c:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 8016260:	6344      	str	r4, [r0, #52]	; 0x34
 8016262:	8701      	strh	r1, [r0, #56]	; 0x38
 8016264:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
 8016268:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
 801626c:	f8a0 2046 	strh.w	r2, [r0, #70]	; 0x46
 8016270:	bd10      	pop	{r4, pc}
 8016272:	bf00      	nop
 8016274:	08031d10 	.word	0x08031d10
 8016278:	0802f504 	.word	0x0802f504

0801627c <_ZN8touchgfx7OutlineD1Ev>:
 801627c:	4770      	bx	lr

0801627e <_ZN8touchgfx7OutlineD0Ev>:
 801627e:	b510      	push	{r4, lr}
 8016280:	2130      	movs	r1, #48	; 0x30
 8016282:	4604      	mov	r4, r0
 8016284:	f016 fc7d 	bl	802cb82 <_ZdlPvj>
 8016288:	4620      	mov	r0, r4
 801628a:	bd10      	pop	{r4, pc}

0801628c <_ZN8touchgfx7Outline5resetEv>:
 801628c:	b510      	push	{r4, lr}
 801628e:	4604      	mov	r4, r0
 8016290:	f000 fe96 	bl	8016fc0 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 8016294:	60e0      	str	r0, [r4, #12]
 8016296:	f000 fe99 	bl	8016fcc <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 801629a:	68e3      	ldr	r3, [r4, #12]
 801629c:	6123      	str	r3, [r4, #16]
 801629e:	08c0      	lsrs	r0, r0, #3
 80162a0:	2200      	movs	r2, #0
 80162a2:	f647 71ff 	movw	r1, #32767	; 0x7fff
 80162a6:	3801      	subs	r0, #1
 80162a8:	6060      	str	r0, [r4, #4]
 80162aa:	60a2      	str	r2, [r4, #8]
 80162ac:	8019      	strh	r1, [r3, #0]
 80162ae:	8059      	strh	r1, [r3, #2]
 80162b0:	809a      	strh	r2, [r3, #4]
 80162b2:	80da      	strh	r2, [r3, #6]
 80162b4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80162b6:	f023 0301 	bic.w	r3, r3, #1
 80162ba:	f043 0302 	orr.w	r3, r3, #2
 80162be:	6263      	str	r3, [r4, #36]	; 0x24
 80162c0:	bd10      	pop	{r4, pc}
	...

080162c4 <_ZN8touchgfx7OutlineC1Ev>:
 80162c4:	b510      	push	{r4, lr}
 80162c6:	4b0a      	ldr	r3, [pc, #40]	; (80162f0 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 80162c8:	6003      	str	r3, [r0, #0]
 80162ca:	2300      	movs	r3, #0
 80162cc:	e9c0 3301 	strd	r3, r3, [r0, #4]
 80162d0:	e9c0 3303 	strd	r3, r3, [r0, #12]
 80162d4:	e9c0 3305 	strd	r3, r3, [r0, #20]
 80162d8:	e9c0 3307 	strd	r3, r3, [r0, #28]
 80162dc:	6243      	str	r3, [r0, #36]	; 0x24
 80162de:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 80162e2:	4604      	mov	r4, r0
 80162e4:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 80162e8:	f7ff ffd0 	bl	801628c <_ZN8touchgfx7Outline5resetEv>
 80162ec:	4620      	mov	r0, r4
 80162ee:	bd10      	pop	{r4, pc}
 80162f0:	08031d84 	.word	0x08031d84

080162f4 <_ZN8touchgfx7Outline10renderLineEiiii>:
 80162f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80162f8:	b093      	sub	sp, #76	; 0x4c
 80162fa:	1156      	asrs	r6, r2, #5
 80162fc:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 80162fe:	9305      	str	r3, [sp, #20]
 8016300:	f004 051f 	and.w	r5, r4, #31
 8016304:	1153      	asrs	r3, r2, #5
 8016306:	9504      	str	r5, [sp, #16]
 8016308:	1165      	asrs	r5, r4, #5
 801630a:	9303      	str	r3, [sp, #12]
 801630c:	42ae      	cmp	r6, r5
 801630e:	ea4f 1364 	mov.w	r3, r4, asr #5
 8016312:	9306      	str	r3, [sp, #24]
 8016314:	f002 031f 	and.w	r3, r2, #31
 8016318:	f040 80f8 	bne.w	801650c <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 801631c:	9c04      	ldr	r4, [sp, #16]
 801631e:	9a05      	ldr	r2, [sp, #20]
 8016320:	42a3      	cmp	r3, r4
 8016322:	ea4f 1e62 	mov.w	lr, r2, asr #5
 8016326:	6902      	ldr	r2, [r0, #16]
 8016328:	d125      	bne.n	8016376 <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 801632a:	f9b2 3000 	ldrsh.w	r3, [r2]
 801632e:	459e      	cmp	lr, r3
 8016330:	d103      	bne.n	801633a <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 8016332:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8016336:	429e      	cmp	r6, r3
 8016338:	d035      	beq.n	80163a6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801633a:	88d1      	ldrh	r1, [r2, #6]
 801633c:	8893      	ldrh	r3, [r2, #4]
 801633e:	430b      	orrs	r3, r1
 8016340:	d010      	beq.n	8016364 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8016342:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8016346:	2b00      	cmp	r3, #0
 8016348:	db0c      	blt.n	8016364 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 801634a:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 801634c:	428b      	cmp	r3, r1
 801634e:	da09      	bge.n	8016364 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8016350:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8016354:	428b      	cmp	r3, r1
 8016356:	bf38      	it	cc
 8016358:	3208      	addcc	r2, #8
 801635a:	f103 0301 	add.w	r3, r3, #1
 801635e:	bf38      	it	cc
 8016360:	6102      	strcc	r2, [r0, #16]
 8016362:	6083      	str	r3, [r0, #8]
 8016364:	6903      	ldr	r3, [r0, #16]
 8016366:	9a03      	ldr	r2, [sp, #12]
 8016368:	f8a3 e000 	strh.w	lr, [r3]
 801636c:	805a      	strh	r2, [r3, #2]
 801636e:	2200      	movs	r2, #0
 8016370:	809a      	strh	r2, [r3, #4]
 8016372:	80da      	strh	r2, [r3, #6]
 8016374:	e017      	b.n	80163a6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8016376:	9c05      	ldr	r4, [sp, #20]
 8016378:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 801637c:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 8016380:	f004 041f 	and.w	r4, r4, #31
 8016384:	114e      	asrs	r6, r1, #5
 8016386:	9402      	str	r4, [sp, #8]
 8016388:	9c04      	ldr	r4, [sp, #16]
 801638a:	4576      	cmp	r6, lr
 801638c:	f001 0c1f 	and.w	ip, r1, #31
 8016390:	eba4 0403 	sub.w	r4, r4, r3
 8016394:	d10a      	bne.n	80163ac <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 8016396:	9b02      	ldr	r3, [sp, #8]
 8016398:	449c      	add	ip, r3
 801639a:	44a0      	add	r8, r4
 801639c:	fb04 a40c 	mla	r4, r4, ip, sl
 80163a0:	f8a2 8004 	strh.w	r8, [r2, #4]
 80163a4:	80d4      	strh	r4, [r2, #6]
 80163a6:	b013      	add	sp, #76	; 0x4c
 80163a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80163ac:	9d05      	ldr	r5, [sp, #20]
 80163ae:	1a69      	subs	r1, r5, r1
 80163b0:	bf5b      	ittet	pl
 80163b2:	f1cc 0520 	rsbpl	r5, ip, #32
 80163b6:	436c      	mulpl	r4, r5
 80163b8:	2500      	movmi	r5, #0
 80163ba:	2520      	movpl	r5, #32
 80163bc:	bf44      	itt	mi
 80163be:	fb04 f40c 	mulmi.w	r4, r4, ip
 80163c2:	4249      	negmi	r1, r1
 80163c4:	9501      	str	r5, [sp, #4]
 80163c6:	9f01      	ldr	r7, [sp, #4]
 80163c8:	fb94 f5f1 	sdiv	r5, r4, r1
 80163cc:	fb01 4415 	mls	r4, r1, r5, r4
 80163d0:	bf54      	ite	pl
 80163d2:	f04f 0901 	movpl.w	r9, #1
 80163d6:	f04f 39ff 	movmi.w	r9, #4294967295
 80163da:	2c00      	cmp	r4, #0
 80163dc:	bfb8      	it	lt
 80163de:	f105 35ff 	addlt.w	r5, r5, #4294967295
 80163e2:	44bc      	add	ip, r7
 80163e4:	44a8      	add	r8, r5
 80163e6:	fb05 ac0c 	mla	ip, r5, ip, sl
 80163ea:	f8a2 8004 	strh.w	r8, [r2, #4]
 80163ee:	f8a2 c006 	strh.w	ip, [r2, #6]
 80163f2:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80163f6:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 80163fa:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 80163fe:	bfb8      	it	lt
 8016400:	1864      	addlt	r4, r4, r1
 8016402:	ea58 0202 	orrs.w	r2, r8, r2
 8016406:	444e      	add	r6, r9
 8016408:	d011      	beq.n	801642e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 801640a:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 801640e:	f1b8 0f00 	cmp.w	r8, #0
 8016412:	db0c      	blt.n	801642e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 8016414:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 8016416:	4590      	cmp	r8, r2
 8016418:	da09      	bge.n	801642e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 801641a:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 801641e:	4590      	cmp	r8, r2
 8016420:	bf3c      	itt	cc
 8016422:	f10c 0208 	addcc.w	r2, ip, #8
 8016426:	6102      	strcc	r2, [r0, #16]
 8016428:	f108 0201 	add.w	r2, r8, #1
 801642c:	6082      	str	r2, [r0, #8]
 801642e:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8016432:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8016436:	f8ac 6000 	strh.w	r6, [ip]
 801643a:	2700      	movs	r7, #0
 801643c:	45b6      	cmp	lr, r6
 801643e:	f8ac 2002 	strh.w	r2, [ip, #2]
 8016442:	f8ac 7004 	strh.w	r7, [ip, #4]
 8016446:	f8ac 7006 	strh.w	r7, [ip, #6]
 801644a:	442b      	add	r3, r5
 801644c:	d04d      	beq.n	80164ea <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 801644e:	9f04      	ldr	r7, [sp, #16]
 8016450:	1aff      	subs	r7, r7, r3
 8016452:	443d      	add	r5, r7
 8016454:	016d      	lsls	r5, r5, #5
 8016456:	fb95 f8f1 	sdiv	r8, r5, r1
 801645a:	fb01 5518 	mls	r5, r1, r8, r5
 801645e:	2d00      	cmp	r5, #0
 8016460:	bfb8      	it	lt
 8016462:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8016466:	f108 0701 	add.w	r7, r8, #1
 801646a:	bfb8      	it	lt
 801646c:	186d      	addlt	r5, r5, r1
 801646e:	1a64      	subs	r4, r4, r1
 8016470:	9703      	str	r7, [sp, #12]
 8016472:	f04f 0a00 	mov.w	sl, #0
 8016476:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801647a:	1964      	adds	r4, r4, r5
 801647c:	bf58      	it	pl
 801647e:	9f03      	ldrpl	r7, [sp, #12]
 8016480:	f8bc b004 	ldrh.w	fp, [ip, #4]
 8016484:	bf48      	it	mi
 8016486:	4647      	movmi	r7, r8
 8016488:	44bb      	add	fp, r7
 801648a:	f8ac b004 	strh.w	fp, [ip, #4]
 801648e:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8016492:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8016496:	f8ac b006 	strh.w	fp, [ip, #6]
 801649a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801649e:	443b      	add	r3, r7
 80164a0:	f8bc b006 	ldrh.w	fp, [ip, #6]
 80164a4:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 80164a8:	bf58      	it	pl
 80164aa:	1a64      	subpl	r4, r4, r1
 80164ac:	ea5b 0707 	orrs.w	r7, fp, r7
 80164b0:	444e      	add	r6, r9
 80164b2:	d011      	beq.n	80164d8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 80164b4:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 80164b8:	f1bb 0f00 	cmp.w	fp, #0
 80164bc:	db0c      	blt.n	80164d8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 80164be:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 80164c0:	45bb      	cmp	fp, r7
 80164c2:	da09      	bge.n	80164d8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 80164c4:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 80164c8:	45bb      	cmp	fp, r7
 80164ca:	bf3c      	itt	cc
 80164cc:	f10c 0708 	addcc.w	r7, ip, #8
 80164d0:	6107      	strcc	r7, [r0, #16]
 80164d2:	f10b 0701 	add.w	r7, fp, #1
 80164d6:	6087      	str	r7, [r0, #8]
 80164d8:	6907      	ldr	r7, [r0, #16]
 80164da:	45b6      	cmp	lr, r6
 80164dc:	803e      	strh	r6, [r7, #0]
 80164de:	807a      	strh	r2, [r7, #2]
 80164e0:	f8a7 a004 	strh.w	sl, [r7, #4]
 80164e4:	f8a7 a006 	strh.w	sl, [r7, #6]
 80164e8:	d1c5      	bne.n	8016476 <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 80164ea:	9a04      	ldr	r2, [sp, #16]
 80164ec:	1ad3      	subs	r3, r2, r3
 80164ee:	6902      	ldr	r2, [r0, #16]
 80164f0:	8891      	ldrh	r1, [r2, #4]
 80164f2:	88d6      	ldrh	r6, [r2, #6]
 80164f4:	4419      	add	r1, r3
 80164f6:	8091      	strh	r1, [r2, #4]
 80164f8:	9902      	ldr	r1, [sp, #8]
 80164fa:	f101 0c20 	add.w	ip, r1, #32
 80164fe:	9901      	ldr	r1, [sp, #4]
 8016500:	ebac 0c01 	sub.w	ip, ip, r1
 8016504:	fb03 630c 	mla	r3, r3, ip, r6
 8016508:	80d3      	strh	r3, [r2, #6]
 801650a:	e74c      	b.n	80163a6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801650c:	9d05      	ldr	r5, [sp, #20]
 801650e:	1aa2      	subs	r2, r4, r2
 8016510:	eba5 0501 	sub.w	r5, r5, r1
 8016514:	9508      	str	r5, [sp, #32]
 8016516:	9202      	str	r2, [sp, #8]
 8016518:	f140 8128 	bpl.w	801676c <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 801651c:	9a03      	ldr	r2, [sp, #12]
 801651e:	2a00      	cmp	r2, #0
 8016520:	f6ff af41 	blt.w	80163a6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8016524:	9a02      	ldr	r2, [sp, #8]
 8016526:	4252      	negs	r2, r2
 8016528:	9202      	str	r2, [sp, #8]
 801652a:	9a06      	ldr	r2, [sp, #24]
 801652c:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 8016530:	f04f 34ff 	mov.w	r4, #4294967295
 8016534:	9206      	str	r2, [sp, #24]
 8016536:	462a      	mov	r2, r5
 8016538:	940b      	str	r4, [sp, #44]	; 0x2c
 801653a:	435a      	muls	r2, r3
 801653c:	2400      	movs	r4, #0
 801653e:	9d02      	ldr	r5, [sp, #8]
 8016540:	9401      	str	r4, [sp, #4]
 8016542:	9c02      	ldr	r4, [sp, #8]
 8016544:	fb92 f4f4 	sdiv	r4, r2, r4
 8016548:	fb05 2214 	mls	r2, r5, r4, r2
 801654c:	2a00      	cmp	r2, #0
 801654e:	9207      	str	r2, [sp, #28]
 8016550:	bfbc      	itt	lt
 8016552:	1952      	addlt	r2, r2, r5
 8016554:	9207      	strlt	r2, [sp, #28]
 8016556:	9a01      	ldr	r2, [sp, #4]
 8016558:	6905      	ldr	r5, [r0, #16]
 801655a:	bfb8      	it	lt
 801655c:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8016560:	eb04 0901 	add.w	r9, r4, r1
 8016564:	429a      	cmp	r2, r3
 8016566:	ea4f 1669 	mov.w	r6, r9, asr #5
 801656a:	f040 8112 	bne.w	8016792 <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 801656e:	f9b5 3000 	ldrsh.w	r3, [r5]
 8016572:	429e      	cmp	r6, r3
 8016574:	d104      	bne.n	8016580 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 8016576:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801657a:	9a03      	ldr	r2, [sp, #12]
 801657c:	429a      	cmp	r2, r3
 801657e:	d01b      	beq.n	80165b8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8016580:	88ea      	ldrh	r2, [r5, #6]
 8016582:	88ab      	ldrh	r3, [r5, #4]
 8016584:	4313      	orrs	r3, r2
 8016586:	d010      	beq.n	80165aa <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8016588:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801658c:	2a00      	cmp	r2, #0
 801658e:	db0c      	blt.n	80165aa <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8016590:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8016592:	429a      	cmp	r2, r3
 8016594:	da09      	bge.n	80165aa <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8016596:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 801659a:	429a      	cmp	r2, r3
 801659c:	bf38      	it	cc
 801659e:	3508      	addcc	r5, #8
 80165a0:	f102 0201 	add.w	r2, r2, #1
 80165a4:	bf38      	it	cc
 80165a6:	6105      	strcc	r5, [r0, #16]
 80165a8:	6082      	str	r2, [r0, #8]
 80165aa:	6903      	ldr	r3, [r0, #16]
 80165ac:	9a03      	ldr	r2, [sp, #12]
 80165ae:	805a      	strh	r2, [r3, #2]
 80165b0:	2200      	movs	r2, #0
 80165b2:	801e      	strh	r6, [r3, #0]
 80165b4:	809a      	strh	r2, [r3, #4]
 80165b6:	80da      	strh	r2, [r3, #6]
 80165b8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80165ba:	9a03      	ldr	r2, [sp, #12]
 80165bc:	6901      	ldr	r1, [r0, #16]
 80165be:	441a      	add	r2, r3
 80165c0:	f9b1 3000 	ldrsh.w	r3, [r1]
 80165c4:	42b3      	cmp	r3, r6
 80165c6:	d103      	bne.n	80165d0 <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 80165c8:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 80165cc:	429a      	cmp	r2, r3
 80165ce:	d01a      	beq.n	8016606 <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 80165d0:	88cc      	ldrh	r4, [r1, #6]
 80165d2:	888b      	ldrh	r3, [r1, #4]
 80165d4:	4323      	orrs	r3, r4
 80165d6:	d010      	beq.n	80165fa <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 80165d8:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 80165dc:	2c00      	cmp	r4, #0
 80165de:	db0c      	blt.n	80165fa <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 80165e0:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80165e2:	429c      	cmp	r4, r3
 80165e4:	da09      	bge.n	80165fa <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 80165e6:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 80165ea:	429c      	cmp	r4, r3
 80165ec:	bf38      	it	cc
 80165ee:	3108      	addcc	r1, #8
 80165f0:	f104 0401 	add.w	r4, r4, #1
 80165f4:	bf38      	it	cc
 80165f6:	6101      	strcc	r1, [r0, #16]
 80165f8:	6084      	str	r4, [r0, #8]
 80165fa:	6903      	ldr	r3, [r0, #16]
 80165fc:	2100      	movs	r1, #0
 80165fe:	801e      	strh	r6, [r3, #0]
 8016600:	805a      	strh	r2, [r3, #2]
 8016602:	8099      	strh	r1, [r3, #4]
 8016604:	80d9      	strh	r1, [r3, #6]
 8016606:	9b06      	ldr	r3, [sp, #24]
 8016608:	4293      	cmp	r3, r2
 801660a:	f000 8082 	beq.w	8016712 <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 801660e:	9b08      	ldr	r3, [sp, #32]
 8016610:	9c02      	ldr	r4, [sp, #8]
 8016612:	9902      	ldr	r1, [sp, #8]
 8016614:	015b      	lsls	r3, r3, #5
 8016616:	fb93 f1f1 	sdiv	r1, r3, r1
 801661a:	fb04 3311 	mls	r3, r4, r1, r3
 801661e:	2b00      	cmp	r3, #0
 8016620:	9103      	str	r1, [sp, #12]
 8016622:	9308      	str	r3, [sp, #32]
 8016624:	da04      	bge.n	8016630 <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 8016626:	1e4b      	subs	r3, r1, #1
 8016628:	9303      	str	r3, [sp, #12]
 801662a:	9b08      	ldr	r3, [sp, #32]
 801662c:	4423      	add	r3, r4
 801662e:	9308      	str	r3, [sp, #32]
 8016630:	9b07      	ldr	r3, [sp, #28]
 8016632:	9902      	ldr	r1, [sp, #8]
 8016634:	1a5b      	subs	r3, r3, r1
 8016636:	9307      	str	r3, [sp, #28]
 8016638:	9b01      	ldr	r3, [sp, #4]
 801663a:	f1c3 0320 	rsb	r3, r3, #32
 801663e:	930e      	str	r3, [sp, #56]	; 0x38
 8016640:	990e      	ldr	r1, [sp, #56]	; 0x38
 8016642:	9b01      	ldr	r3, [sp, #4]
 8016644:	1a5b      	subs	r3, r3, r1
 8016646:	464f      	mov	r7, r9
 8016648:	930a      	str	r3, [sp, #40]	; 0x28
 801664a:	2600      	movs	r6, #0
 801664c:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 8016650:	185b      	adds	r3, r3, r1
 8016652:	bf58      	it	pl
 8016654:	9902      	ldrpl	r1, [sp, #8]
 8016656:	9307      	str	r3, [sp, #28]
 8016658:	bf5d      	ittte	pl
 801665a:	1a5b      	subpl	r3, r3, r1
 801665c:	9307      	strpl	r3, [sp, #28]
 801665e:	9b03      	ldrpl	r3, [sp, #12]
 8016660:	9903      	ldrmi	r1, [sp, #12]
 8016662:	bf58      	it	pl
 8016664:	1c59      	addpl	r1, r3, #1
 8016666:	4489      	add	r9, r1
 8016668:	2a00      	cmp	r2, #0
 801666a:	ea4f 1a69 	mov.w	sl, r9, asr #5
 801666e:	db2e      	blt.n	80166ce <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8016670:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8016672:	4293      	cmp	r3, r2
 8016674:	dd2b      	ble.n	80166ce <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8016676:	9c01      	ldr	r4, [sp, #4]
 8016678:	6905      	ldr	r5, [r0, #16]
 801667a:	46a0      	mov	r8, r4
 801667c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801667e:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 8016682:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 8016686:	45a0      	cmp	r8, r4
 8016688:	f040 814f 	bne.w	801692a <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 801668c:	f9b5 1000 	ldrsh.w	r1, [r5]
 8016690:	4551      	cmp	r1, sl
 8016692:	d103      	bne.n	801669c <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 8016694:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8016698:	4291      	cmp	r1, r2
 801669a:	d018      	beq.n	80166ce <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 801669c:	ea5c 010e 	orrs.w	r1, ip, lr
 80166a0:	d00f      	beq.n	80166c2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 80166a2:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 80166a6:	2900      	cmp	r1, #0
 80166a8:	db0b      	blt.n	80166c2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 80166aa:	428b      	cmp	r3, r1
 80166ac:	dd09      	ble.n	80166c2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 80166ae:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 80166b2:	4299      	cmp	r1, r3
 80166b4:	bf38      	it	cc
 80166b6:	3508      	addcc	r5, #8
 80166b8:	f101 0101 	add.w	r1, r1, #1
 80166bc:	bf38      	it	cc
 80166be:	6105      	strcc	r5, [r0, #16]
 80166c0:	6081      	str	r1, [r0, #8]
 80166c2:	6903      	ldr	r3, [r0, #16]
 80166c4:	f8a3 a000 	strh.w	sl, [r3]
 80166c8:	805a      	strh	r2, [r3, #2]
 80166ca:	809e      	strh	r6, [r3, #4]
 80166cc:	80de      	strh	r6, [r3, #6]
 80166ce:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80166d0:	6901      	ldr	r1, [r0, #16]
 80166d2:	441a      	add	r2, r3
 80166d4:	88cc      	ldrh	r4, [r1, #6]
 80166d6:	888b      	ldrh	r3, [r1, #4]
 80166d8:	4323      	orrs	r3, r4
 80166da:	d010      	beq.n	80166fe <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 80166dc:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 80166e0:	2c00      	cmp	r4, #0
 80166e2:	db0c      	blt.n	80166fe <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 80166e4:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80166e6:	429c      	cmp	r4, r3
 80166e8:	da09      	bge.n	80166fe <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 80166ea:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 80166ee:	429c      	cmp	r4, r3
 80166f0:	bf38      	it	cc
 80166f2:	3108      	addcc	r1, #8
 80166f4:	f104 0401 	add.w	r4, r4, #1
 80166f8:	bf38      	it	cc
 80166fa:	6101      	strcc	r1, [r0, #16]
 80166fc:	6084      	str	r4, [r0, #8]
 80166fe:	6903      	ldr	r3, [r0, #16]
 8016700:	f8a3 a000 	strh.w	sl, [r3]
 8016704:	805a      	strh	r2, [r3, #2]
 8016706:	809e      	strh	r6, [r3, #4]
 8016708:	80de      	strh	r6, [r3, #6]
 801670a:	9b06      	ldr	r3, [sp, #24]
 801670c:	4293      	cmp	r3, r2
 801670e:	464f      	mov	r7, r9
 8016710:	d19c      	bne.n	801664c <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 8016712:	9b01      	ldr	r3, [sp, #4]
 8016714:	6907      	ldr	r7, [r0, #16]
 8016716:	f1c3 0620 	rsb	r6, r3, #32
 801671a:	9b05      	ldr	r3, [sp, #20]
 801671c:	ea4f 1e63 	mov.w	lr, r3, asr #5
 8016720:	9b04      	ldr	r3, [sp, #16]
 8016722:	429e      	cmp	r6, r3
 8016724:	f040 81cc 	bne.w	8016ac0 <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 8016728:	f9b7 3000 	ldrsh.w	r3, [r7]
 801672c:	459e      	cmp	lr, r3
 801672e:	d104      	bne.n	801673a <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 8016730:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8016734:	429a      	cmp	r2, r3
 8016736:	f43f ae36 	beq.w	80163a6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801673a:	88f9      	ldrh	r1, [r7, #6]
 801673c:	88bb      	ldrh	r3, [r7, #4]
 801673e:	430b      	orrs	r3, r1
 8016740:	d010      	beq.n	8016764 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8016742:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8016746:	2b00      	cmp	r3, #0
 8016748:	db0c      	blt.n	8016764 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 801674a:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 801674c:	428b      	cmp	r3, r1
 801674e:	da09      	bge.n	8016764 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8016750:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8016754:	428b      	cmp	r3, r1
 8016756:	bf38      	it	cc
 8016758:	3708      	addcc	r7, #8
 801675a:	f103 0301 	add.w	r3, r3, #1
 801675e:	bf38      	it	cc
 8016760:	6107      	strcc	r7, [r0, #16]
 8016762:	6083      	str	r3, [r0, #8]
 8016764:	6903      	ldr	r3, [r0, #16]
 8016766:	f8a3 e000 	strh.w	lr, [r3]
 801676a:	e5ff      	b.n	801636c <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 801676c:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 801676e:	9c03      	ldr	r4, [sp, #12]
 8016770:	42a2      	cmp	r2, r4
 8016772:	f6ff ae18 	blt.w	80163a6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8016776:	9c06      	ldr	r4, [sp, #24]
 8016778:	42a2      	cmp	r2, r4
 801677a:	bfb8      	it	lt
 801677c:	3201      	addlt	r2, #1
 801677e:	9c08      	ldr	r4, [sp, #32]
 8016780:	bfb8      	it	lt
 8016782:	9206      	strlt	r2, [sp, #24]
 8016784:	f1c3 0220 	rsb	r2, r3, #32
 8016788:	4362      	muls	r2, r4
 801678a:	2401      	movs	r4, #1
 801678c:	940b      	str	r4, [sp, #44]	; 0x2c
 801678e:	2420      	movs	r4, #32
 8016790:	e6d5      	b.n	801653e <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 8016792:	f009 021f 	and.w	r2, r9, #31
 8016796:	ea4f 1861 	mov.w	r8, r1, asr #5
 801679a:	920c      	str	r2, [sp, #48]	; 0x30
 801679c:	9a01      	ldr	r2, [sp, #4]
 801679e:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 80167a2:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 80167a6:	45b0      	cmp	r8, r6
 80167a8:	f001 011f 	and.w	r1, r1, #31
 80167ac:	eba2 0203 	sub.w	r2, r2, r3
 80167b0:	d108      	bne.n	80167c4 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 80167b2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80167b4:	4419      	add	r1, r3
 80167b6:	4496      	add	lr, r2
 80167b8:	fb02 a101 	mla	r1, r2, r1, sl
 80167bc:	f8a5 e004 	strh.w	lr, [r5, #4]
 80167c0:	80e9      	strh	r1, [r5, #6]
 80167c2:	e6f9      	b.n	80165b8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 80167c4:	2c00      	cmp	r4, #0
 80167c6:	f2c0 80a9 	blt.w	801691c <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 80167ca:	2701      	movs	r7, #1
 80167cc:	f1c1 0c20 	rsb	ip, r1, #32
 80167d0:	970a      	str	r7, [sp, #40]	; 0x28
 80167d2:	fb02 f20c 	mul.w	r2, r2, ip
 80167d6:	2720      	movs	r7, #32
 80167d8:	9709      	str	r7, [sp, #36]	; 0x24
 80167da:	fb92 fcf4 	sdiv	ip, r2, r4
 80167de:	9f09      	ldr	r7, [sp, #36]	; 0x24
 80167e0:	fb04 221c 	mls	r2, r4, ip, r2
 80167e4:	2a00      	cmp	r2, #0
 80167e6:	bfb8      	it	lt
 80167e8:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 80167ec:	4439      	add	r1, r7
 80167ee:	fb0c a101 	mla	r1, ip, r1, sl
 80167f2:	80e9      	strh	r1, [r5, #6]
 80167f4:	44e6      	add	lr, ip
 80167f6:	990a      	ldr	r1, [sp, #40]	; 0x28
 80167f8:	f8a5 e004 	strh.w	lr, [r5, #4]
 80167fc:	eb08 0501 	add.w	r5, r8, r1
 8016800:	6901      	ldr	r1, [r0, #16]
 8016802:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 8016806:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 801680a:	bfb8      	it	lt
 801680c:	1912      	addlt	r2, r2, r4
 801680e:	ea58 070e 	orrs.w	r7, r8, lr
 8016812:	d010      	beq.n	8016836 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8016814:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 8016818:	f1be 0f00 	cmp.w	lr, #0
 801681c:	db0b      	blt.n	8016836 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 801681e:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8016820:	45be      	cmp	lr, r7
 8016822:	da08      	bge.n	8016836 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8016824:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8016828:	45be      	cmp	lr, r7
 801682a:	bf3c      	itt	cc
 801682c:	3108      	addcc	r1, #8
 801682e:	6101      	strcc	r1, [r0, #16]
 8016830:	f10e 0101 	add.w	r1, lr, #1
 8016834:	6081      	str	r1, [r0, #8]
 8016836:	6901      	ldr	r1, [r0, #16]
 8016838:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801683c:	800d      	strh	r5, [r1, #0]
 801683e:	f04f 0e00 	mov.w	lr, #0
 8016842:	42ae      	cmp	r6, r5
 8016844:	f8a1 8002 	strh.w	r8, [r1, #2]
 8016848:	f8a1 e004 	strh.w	lr, [r1, #4]
 801684c:	f8a1 e006 	strh.w	lr, [r1, #6]
 8016850:	4463      	add	r3, ip
 8016852:	d054      	beq.n	80168fe <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 8016854:	9901      	ldr	r1, [sp, #4]
 8016856:	1ac9      	subs	r1, r1, r3
 8016858:	4461      	add	r1, ip
 801685a:	0149      	lsls	r1, r1, #5
 801685c:	fb91 fef4 	sdiv	lr, r1, r4
 8016860:	fb04 111e 	mls	r1, r4, lr, r1
 8016864:	2900      	cmp	r1, #0
 8016866:	bfb8      	it	lt
 8016868:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 801686c:	f10e 0701 	add.w	r7, lr, #1
 8016870:	bfb8      	it	lt
 8016872:	1909      	addlt	r1, r1, r4
 8016874:	1b12      	subs	r2, r2, r4
 8016876:	970d      	str	r7, [sp, #52]	; 0x34
 8016878:	f8d0 a010 	ldr.w	sl, [r0, #16]
 801687c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801687e:	f8ba b004 	ldrh.w	fp, [sl, #4]
 8016882:	1852      	adds	r2, r2, r1
 8016884:	bf54      	ite	pl
 8016886:	f8dd c034 	ldrpl.w	ip, [sp, #52]	; 0x34
 801688a:	46f4      	movmi	ip, lr
 801688c:	44e3      	add	fp, ip
 801688e:	f8aa b004 	strh.w	fp, [sl, #4]
 8016892:	f8ba b006 	ldrh.w	fp, [sl, #6]
 8016896:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 801689a:	f8aa b006 	strh.w	fp, [sl, #6]
 801689e:	4463      	add	r3, ip
 80168a0:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80168a4:	f8bc b006 	ldrh.w	fp, [ip, #6]
 80168a8:	f8bc a004 	ldrh.w	sl, [ip, #4]
 80168ac:	bf58      	it	pl
 80168ae:	1b12      	subpl	r2, r2, r4
 80168b0:	443d      	add	r5, r7
 80168b2:	ea5b 070a 	orrs.w	r7, fp, sl
 80168b6:	d014      	beq.n	80168e2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 80168b8:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 80168bc:	f1ba 0f00 	cmp.w	sl, #0
 80168c0:	db0f      	blt.n	80168e2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 80168c2:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 80168c4:	45ba      	cmp	sl, r7
 80168c6:	da0c      	bge.n	80168e2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 80168c8:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 80168cc:	45ba      	cmp	sl, r7
 80168ce:	bf38      	it	cc
 80168d0:	f10c 0c08 	addcc.w	ip, ip, #8
 80168d4:	f10a 0a01 	add.w	sl, sl, #1
 80168d8:	bf38      	it	cc
 80168da:	f8c0 c010 	strcc.w	ip, [r0, #16]
 80168de:	f8c0 a008 	str.w	sl, [r0, #8]
 80168e2:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80168e6:	f04f 0700 	mov.w	r7, #0
 80168ea:	42ae      	cmp	r6, r5
 80168ec:	f8ac 5000 	strh.w	r5, [ip]
 80168f0:	f8ac 8002 	strh.w	r8, [ip, #2]
 80168f4:	f8ac 7004 	strh.w	r7, [ip, #4]
 80168f8:	f8ac 7006 	strh.w	r7, [ip, #6]
 80168fc:	d1bc      	bne.n	8016878 <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 80168fe:	6904      	ldr	r4, [r0, #16]
 8016900:	9a01      	ldr	r2, [sp, #4]
 8016902:	990c      	ldr	r1, [sp, #48]	; 0x30
 8016904:	1ad3      	subs	r3, r2, r3
 8016906:	88a2      	ldrh	r2, [r4, #4]
 8016908:	441a      	add	r2, r3
 801690a:	80a2      	strh	r2, [r4, #4]
 801690c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801690e:	3120      	adds	r1, #32
 8016910:	1a89      	subs	r1, r1, r2
 8016912:	88e2      	ldrh	r2, [r4, #6]
 8016914:	fb03 2301 	mla	r3, r3, r1, r2
 8016918:	80e3      	strh	r3, [r4, #6]
 801691a:	e64d      	b.n	80165b8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 801691c:	f04f 37ff 	mov.w	r7, #4294967295
 8016920:	970a      	str	r7, [sp, #40]	; 0x28
 8016922:	434a      	muls	r2, r1
 8016924:	4264      	negs	r4, r4
 8016926:	2700      	movs	r7, #0
 8016928:	e756      	b.n	80167d8 <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 801692a:	ea4f 1867 	mov.w	r8, r7, asr #5
 801692e:	f009 031f 	and.w	r3, r9, #31
 8016932:	45d0      	cmp	r8, sl
 8016934:	f007 071f 	and.w	r7, r7, #31
 8016938:	930f      	str	r3, [sp, #60]	; 0x3c
 801693a:	fa1f fc8c 	uxth.w	ip, ip
 801693e:	fa1f fe8e 	uxth.w	lr, lr
 8016942:	d10a      	bne.n	801695a <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 8016944:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016946:	449c      	add	ip, r3
 8016948:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801694a:	f8a5 c004 	strh.w	ip, [r5, #4]
 801694e:	441f      	add	r7, r3
 8016950:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016952:	fb03 e707 	mla	r7, r3, r7, lr
 8016956:	80ef      	strh	r7, [r5, #6]
 8016958:	e6b9      	b.n	80166ce <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 801695a:	2900      	cmp	r1, #0
 801695c:	f2c0 80a8 	blt.w	8016ab0 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 8016960:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8016962:	f1c7 0320 	rsb	r3, r7, #32
 8016966:	4363      	muls	r3, r4
 8016968:	2401      	movs	r4, #1
 801696a:	940d      	str	r4, [sp, #52]	; 0x34
 801696c:	2420      	movs	r4, #32
 801696e:	940c      	str	r4, [sp, #48]	; 0x30
 8016970:	fb93 f4f1 	sdiv	r4, r3, r1
 8016974:	fb01 3b14 	mls	fp, r1, r4, r3
 8016978:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801697a:	f1bb 0f00 	cmp.w	fp, #0
 801697e:	bfb8      	it	lt
 8016980:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8016984:	441f      	add	r7, r3
 8016986:	fb04 e707 	mla	r7, r4, r7, lr
 801698a:	44a4      	add	ip, r4
 801698c:	f8a5 c004 	strh.w	ip, [r5, #4]
 8016990:	80ef      	strh	r7, [r5, #6]
 8016992:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8016996:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8016998:	f8bc e006 	ldrh.w	lr, [ip, #6]
 801699c:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 80169a0:	bfb8      	it	lt
 80169a2:	448b      	addlt	fp, r1
 80169a4:	eb08 0503 	add.w	r5, r8, r3
 80169a8:	ea5e 0307 	orrs.w	r3, lr, r7
 80169ac:	d011      	beq.n	80169d2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 80169ae:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 80169b2:	f1be 0f00 	cmp.w	lr, #0
 80169b6:	db0c      	blt.n	80169d2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 80169b8:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 80169ba:	45be      	cmp	lr, r7
 80169bc:	da09      	bge.n	80169d2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 80169be:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 80169c2:	45be      	cmp	lr, r7
 80169c4:	bf3c      	itt	cc
 80169c6:	f10c 0708 	addcc.w	r7, ip, #8
 80169ca:	6107      	strcc	r7, [r0, #16]
 80169cc:	f10e 0701 	add.w	r7, lr, #1
 80169d0:	6087      	str	r7, [r0, #8]
 80169d2:	6907      	ldr	r7, [r0, #16]
 80169d4:	b213      	sxth	r3, r2
 80169d6:	9310      	str	r3, [sp, #64]	; 0x40
 80169d8:	807b      	strh	r3, [r7, #2]
 80169da:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80169dc:	803d      	strh	r5, [r7, #0]
 80169de:	4555      	cmp	r5, sl
 80169e0:	80be      	strh	r6, [r7, #4]
 80169e2:	80fe      	strh	r6, [r7, #6]
 80169e4:	eb04 0c03 	add.w	ip, r4, r3
 80169e8:	d051      	beq.n	8016a8e <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 80169ea:	9b01      	ldr	r3, [sp, #4]
 80169ec:	eba3 070c 	sub.w	r7, r3, ip
 80169f0:	443c      	add	r4, r7
 80169f2:	0164      	lsls	r4, r4, #5
 80169f4:	fb94 f8f1 	sdiv	r8, r4, r1
 80169f8:	fb01 4418 	mls	r4, r1, r8, r4
 80169fc:	2c00      	cmp	r4, #0
 80169fe:	bfb8      	it	lt
 8016a00:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8016a04:	ebab 0301 	sub.w	r3, fp, r1
 8016a08:	f108 0701 	add.w	r7, r8, #1
 8016a0c:	bfb8      	it	lt
 8016a0e:	1864      	addlt	r4, r4, r1
 8016a10:	9309      	str	r3, [sp, #36]	; 0x24
 8016a12:	9711      	str	r7, [sp, #68]	; 0x44
 8016a14:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016a16:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8016a1a:	191b      	adds	r3, r3, r4
 8016a1c:	bf58      	it	pl
 8016a1e:	9f11      	ldrpl	r7, [sp, #68]	; 0x44
 8016a20:	f8be b004 	ldrh.w	fp, [lr, #4]
 8016a24:	9309      	str	r3, [sp, #36]	; 0x24
 8016a26:	bf48      	it	mi
 8016a28:	4647      	movmi	r7, r8
 8016a2a:	44bb      	add	fp, r7
 8016a2c:	f8ae b004 	strh.w	fp, [lr, #4]
 8016a30:	f8be b006 	ldrh.w	fp, [lr, #6]
 8016a34:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8016a38:	f8ae b006 	strh.w	fp, [lr, #6]
 8016a3c:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8016a40:	44bc      	add	ip, r7
 8016a42:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8016a44:	f8be b006 	ldrh.w	fp, [lr, #6]
 8016a48:	443d      	add	r5, r7
 8016a4a:	f8be 7004 	ldrh.w	r7, [lr, #4]
 8016a4e:	bf5c      	itt	pl
 8016a50:	1a5b      	subpl	r3, r3, r1
 8016a52:	9309      	strpl	r3, [sp, #36]	; 0x24
 8016a54:	ea5b 0307 	orrs.w	r3, fp, r7
 8016a58:	d011      	beq.n	8016a7e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8016a5a:	f9be b002 	ldrsh.w	fp, [lr, #2]
 8016a5e:	f1bb 0f00 	cmp.w	fp, #0
 8016a62:	db0c      	blt.n	8016a7e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8016a64:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8016a66:	45bb      	cmp	fp, r7
 8016a68:	da09      	bge.n	8016a7e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8016a6a:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8016a6e:	45bb      	cmp	fp, r7
 8016a70:	bf3c      	itt	cc
 8016a72:	f10e 0708 	addcc.w	r7, lr, #8
 8016a76:	6107      	strcc	r7, [r0, #16]
 8016a78:	f10b 0701 	add.w	r7, fp, #1
 8016a7c:	6087      	str	r7, [r0, #8]
 8016a7e:	6907      	ldr	r7, [r0, #16]
 8016a80:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016a82:	803d      	strh	r5, [r7, #0]
 8016a84:	4555      	cmp	r5, sl
 8016a86:	807b      	strh	r3, [r7, #2]
 8016a88:	80be      	strh	r6, [r7, #4]
 8016a8a:	80fe      	strh	r6, [r7, #6]
 8016a8c:	d1c2      	bne.n	8016a14 <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 8016a8e:	9b01      	ldr	r3, [sp, #4]
 8016a90:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8016a92:	eba3 0c0c 	sub.w	ip, r3, ip
 8016a96:	6903      	ldr	r3, [r0, #16]
 8016a98:	8899      	ldrh	r1, [r3, #4]
 8016a9a:	4461      	add	r1, ip
 8016a9c:	8099      	strh	r1, [r3, #4]
 8016a9e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8016aa0:	3720      	adds	r7, #32
 8016aa2:	1a7f      	subs	r7, r7, r1
 8016aa4:	88d9      	ldrh	r1, [r3, #6]
 8016aa6:	fb0c 1c07 	mla	ip, ip, r7, r1
 8016aaa:	f8a3 c006 	strh.w	ip, [r3, #6]
 8016aae:	e60e      	b.n	80166ce <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8016ab0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016ab2:	f04f 34ff 	mov.w	r4, #4294967295
 8016ab6:	940d      	str	r4, [sp, #52]	; 0x34
 8016ab8:	437b      	muls	r3, r7
 8016aba:	4249      	negs	r1, r1
 8016abc:	2400      	movs	r4, #0
 8016abe:	e756      	b.n	801696e <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 8016ac0:	9905      	ldr	r1, [sp, #20]
 8016ac2:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 8016ac6:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 8016aca:	f001 011f 	and.w	r1, r1, #31
 8016ace:	ea4f 1b69 	mov.w	fp, r9, asr #5
 8016ad2:	9102      	str	r1, [sp, #8]
 8016ad4:	9904      	ldr	r1, [sp, #16]
 8016ad6:	45f3      	cmp	fp, lr
 8016ad8:	f009 0c1f 	and.w	ip, r9, #31
 8016adc:	eba1 0406 	sub.w	r4, r1, r6
 8016ae0:	d108      	bne.n	8016af4 <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 8016ae2:	9b02      	ldr	r3, [sp, #8]
 8016ae4:	449c      	add	ip, r3
 8016ae6:	44a0      	add	r8, r4
 8016ae8:	fb04 a40c 	mla	r4, r4, ip, sl
 8016aec:	f8a7 8004 	strh.w	r8, [r7, #4]
 8016af0:	80fc      	strh	r4, [r7, #6]
 8016af2:	e458      	b.n	80163a6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8016af4:	9905      	ldr	r1, [sp, #20]
 8016af6:	ebb1 0109 	subs.w	r1, r1, r9
 8016afa:	bf5b      	ittet	pl
 8016afc:	f1cc 0520 	rsbpl	r5, ip, #32
 8016b00:	436c      	mulpl	r4, r5
 8016b02:	2500      	movmi	r5, #0
 8016b04:	2520      	movpl	r5, #32
 8016b06:	bf44      	itt	mi
 8016b08:	fb04 f40c 	mulmi.w	r4, r4, ip
 8016b0c:	4249      	negmi	r1, r1
 8016b0e:	9501      	str	r5, [sp, #4]
 8016b10:	9b01      	ldr	r3, [sp, #4]
 8016b12:	fb94 f5f1 	sdiv	r5, r4, r1
 8016b16:	fb01 4415 	mls	r4, r1, r5, r4
 8016b1a:	bf54      	ite	pl
 8016b1c:	f04f 0901 	movpl.w	r9, #1
 8016b20:	f04f 39ff 	movmi.w	r9, #4294967295
 8016b24:	2c00      	cmp	r4, #0
 8016b26:	bfb8      	it	lt
 8016b28:	f105 35ff 	addlt.w	r5, r5, #4294967295
 8016b2c:	449c      	add	ip, r3
 8016b2e:	44a8      	add	r8, r5
 8016b30:	fb05 ac0c 	mla	ip, r5, ip, sl
 8016b34:	f8a7 8004 	strh.w	r8, [r7, #4]
 8016b38:	f8a7 c006 	strh.w	ip, [r7, #6]
 8016b3c:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8016b40:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 8016b44:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8016b48:	bfb8      	it	lt
 8016b4a:	1864      	addlt	r4, r4, r1
 8016b4c:	ea58 0707 	orrs.w	r7, r8, r7
 8016b50:	eb0b 0309 	add.w	r3, fp, r9
 8016b54:	d011      	beq.n	8016b7a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8016b56:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 8016b5a:	f1b8 0f00 	cmp.w	r8, #0
 8016b5e:	db0c      	blt.n	8016b7a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8016b60:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8016b62:	45b8      	cmp	r8, r7
 8016b64:	da09      	bge.n	8016b7a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8016b66:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 8016b6a:	45b8      	cmp	r8, r7
 8016b6c:	bf3c      	itt	cc
 8016b6e:	f10c 0708 	addcc.w	r7, ip, #8
 8016b72:	6107      	strcc	r7, [r0, #16]
 8016b74:	f108 0701 	add.w	r7, r8, #1
 8016b78:	6087      	str	r7, [r0, #8]
 8016b7a:	6907      	ldr	r7, [r0, #16]
 8016b7c:	f04f 0c00 	mov.w	ip, #0
 8016b80:	b212      	sxth	r2, r2
 8016b82:	459e      	cmp	lr, r3
 8016b84:	803b      	strh	r3, [r7, #0]
 8016b86:	807a      	strh	r2, [r7, #2]
 8016b88:	f8a7 c004 	strh.w	ip, [r7, #4]
 8016b8c:	f8a7 c006 	strh.w	ip, [r7, #6]
 8016b90:	442e      	add	r6, r5
 8016b92:	d04d      	beq.n	8016c30 <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 8016b94:	9f04      	ldr	r7, [sp, #16]
 8016b96:	1bbf      	subs	r7, r7, r6
 8016b98:	443d      	add	r5, r7
 8016b9a:	016d      	lsls	r5, r5, #5
 8016b9c:	fb95 f8f1 	sdiv	r8, r5, r1
 8016ba0:	fb01 5518 	mls	r5, r1, r8, r5
 8016ba4:	4565      	cmp	r5, ip
 8016ba6:	bfb8      	it	lt
 8016ba8:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8016bac:	f108 0701 	add.w	r7, r8, #1
 8016bb0:	bfb8      	it	lt
 8016bb2:	186d      	addlt	r5, r5, r1
 8016bb4:	1a64      	subs	r4, r4, r1
 8016bb6:	9703      	str	r7, [sp, #12]
 8016bb8:	f04f 0a00 	mov.w	sl, #0
 8016bbc:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8016bc0:	1964      	adds	r4, r4, r5
 8016bc2:	bf58      	it	pl
 8016bc4:	9f03      	ldrpl	r7, [sp, #12]
 8016bc6:	f8bc b004 	ldrh.w	fp, [ip, #4]
 8016bca:	bf48      	it	mi
 8016bcc:	4647      	movmi	r7, r8
 8016bce:	44bb      	add	fp, r7
 8016bd0:	f8ac b004 	strh.w	fp, [ip, #4]
 8016bd4:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8016bd8:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8016bdc:	f8ac b006 	strh.w	fp, [ip, #6]
 8016be0:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8016be4:	443e      	add	r6, r7
 8016be6:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8016bea:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8016bee:	bf58      	it	pl
 8016bf0:	1a64      	subpl	r4, r4, r1
 8016bf2:	ea5b 0707 	orrs.w	r7, fp, r7
 8016bf6:	444b      	add	r3, r9
 8016bf8:	d011      	beq.n	8016c1e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8016bfa:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 8016bfe:	f1bb 0f00 	cmp.w	fp, #0
 8016c02:	db0c      	blt.n	8016c1e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8016c04:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8016c06:	45bb      	cmp	fp, r7
 8016c08:	da09      	bge.n	8016c1e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8016c0a:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8016c0e:	45bb      	cmp	fp, r7
 8016c10:	bf3c      	itt	cc
 8016c12:	f10c 0708 	addcc.w	r7, ip, #8
 8016c16:	6107      	strcc	r7, [r0, #16]
 8016c18:	f10b 0701 	add.w	r7, fp, #1
 8016c1c:	6087      	str	r7, [r0, #8]
 8016c1e:	6907      	ldr	r7, [r0, #16]
 8016c20:	459e      	cmp	lr, r3
 8016c22:	803b      	strh	r3, [r7, #0]
 8016c24:	807a      	strh	r2, [r7, #2]
 8016c26:	f8a7 a004 	strh.w	sl, [r7, #4]
 8016c2a:	f8a7 a006 	strh.w	sl, [r7, #6]
 8016c2e:	d1c5      	bne.n	8016bbc <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 8016c30:	9b04      	ldr	r3, [sp, #16]
 8016c32:	1b9e      	subs	r6, r3, r6
 8016c34:	6903      	ldr	r3, [r0, #16]
 8016c36:	889a      	ldrh	r2, [r3, #4]
 8016c38:	4432      	add	r2, r6
 8016c3a:	809a      	strh	r2, [r3, #4]
 8016c3c:	9a02      	ldr	r2, [sp, #8]
 8016c3e:	f102 0c20 	add.w	ip, r2, #32
 8016c42:	9a01      	ldr	r2, [sp, #4]
 8016c44:	ebac 0c02 	sub.w	ip, ip, r2
 8016c48:	88da      	ldrh	r2, [r3, #6]
 8016c4a:	fb06 260c 	mla	r6, r6, ip, r2
 8016c4e:	80de      	strh	r6, [r3, #6]
 8016c50:	f7ff bba9 	b.w	80163a6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

08016c54 <_ZN8touchgfx7Outline6lineToEii>:
 8016c54:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8016c56:	079b      	lsls	r3, r3, #30
 8016c58:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8016c5a:	460e      	mov	r6, r1
 8016c5c:	4615      	mov	r5, r2
 8016c5e:	d511      	bpl.n	8016c84 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8016c60:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 8016c64:	ea86 0701 	eor.w	r7, r6, r1
 8016c68:	ea85 0302 	eor.w	r3, r5, r2
 8016c6c:	433b      	orrs	r3, r7
 8016c6e:	d009      	beq.n	8016c84 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8016c70:	4633      	mov	r3, r6
 8016c72:	9500      	str	r5, [sp, #0]
 8016c74:	f7ff fb3e 	bl	80162f4 <_ZN8touchgfx7Outline10renderLineEiiii>
 8016c78:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8016c7a:	e9c0 6505 	strd	r6, r5, [r0, #20]
 8016c7e:	f043 0301 	orr.w	r3, r3, #1
 8016c82:	6243      	str	r3, [r0, #36]	; 0x24
 8016c84:	b003      	add	sp, #12
 8016c86:	bdf0      	pop	{r4, r5, r6, r7, pc}

08016c88 <_ZN8touchgfx7Outline6moveToEii>:
 8016c88:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8016c8a:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8016c8c:	4615      	mov	r5, r2
 8016c8e:	079a      	lsls	r2, r3, #30
 8016c90:	4604      	mov	r4, r0
 8016c92:	460e      	mov	r6, r1
 8016c94:	d401      	bmi.n	8016c9a <_ZN8touchgfx7Outline6moveToEii+0x12>
 8016c96:	f7ff faf9 	bl	801628c <_ZN8touchgfx7Outline5resetEv>
 8016c9a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8016c9c:	07db      	lsls	r3, r3, #31
 8016c9e:	d504      	bpl.n	8016caa <_ZN8touchgfx7Outline6moveToEii+0x22>
 8016ca0:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 8016ca4:	4620      	mov	r0, r4
 8016ca6:	f7ff ffd5 	bl	8016c54 <_ZN8touchgfx7Outline6lineToEii>
 8016caa:	6923      	ldr	r3, [r4, #16]
 8016cac:	f9b3 2000 	ldrsh.w	r2, [r3]
 8016cb0:	1170      	asrs	r0, r6, #5
 8016cb2:	4290      	cmp	r0, r2
 8016cb4:	ea4f 1165 	mov.w	r1, r5, asr #5
 8016cb8:	d103      	bne.n	8016cc2 <_ZN8touchgfx7Outline6moveToEii+0x3a>
 8016cba:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8016cbe:	4291      	cmp	r1, r2
 8016cc0:	d01a      	beq.n	8016cf8 <_ZN8touchgfx7Outline6moveToEii+0x70>
 8016cc2:	88df      	ldrh	r7, [r3, #6]
 8016cc4:	889a      	ldrh	r2, [r3, #4]
 8016cc6:	433a      	orrs	r2, r7
 8016cc8:	d010      	beq.n	8016cec <_ZN8touchgfx7Outline6moveToEii+0x64>
 8016cca:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8016cce:	2a00      	cmp	r2, #0
 8016cd0:	db0c      	blt.n	8016cec <_ZN8touchgfx7Outline6moveToEii+0x64>
 8016cd2:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8016cd4:	42ba      	cmp	r2, r7
 8016cd6:	da09      	bge.n	8016cec <_ZN8touchgfx7Outline6moveToEii+0x64>
 8016cd8:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 8016cdc:	42ba      	cmp	r2, r7
 8016cde:	bf38      	it	cc
 8016ce0:	3308      	addcc	r3, #8
 8016ce2:	f102 0201 	add.w	r2, r2, #1
 8016ce6:	bf38      	it	cc
 8016ce8:	6123      	strcc	r3, [r4, #16]
 8016cea:	60a2      	str	r2, [r4, #8]
 8016cec:	6923      	ldr	r3, [r4, #16]
 8016cee:	2200      	movs	r2, #0
 8016cf0:	8018      	strh	r0, [r3, #0]
 8016cf2:	8059      	strh	r1, [r3, #2]
 8016cf4:	809a      	strh	r2, [r3, #4]
 8016cf6:	80da      	strh	r2, [r3, #6]
 8016cf8:	6166      	str	r6, [r4, #20]
 8016cfa:	e9c4 5606 	strd	r5, r6, [r4, #24]
 8016cfe:	6225      	str	r5, [r4, #32]
 8016d00:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08016d02 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 8016d02:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8016d06:	b0d0      	sub	sp, #320	; 0x140
 8016d08:	466c      	mov	r4, sp
 8016d0a:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 8016d0e:	4627      	mov	r7, r4
 8016d10:	1a0d      	subs	r5, r1, r0
 8016d12:	2d48      	cmp	r5, #72	; 0x48
 8016d14:	f100 0308 	add.w	r3, r0, #8
 8016d18:	f340 80d5 	ble.w	8016ec6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 8016d1c:	112d      	asrs	r5, r5, #4
 8016d1e:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 8016d22:	f9b0 9000 	ldrsh.w	r9, [r0]
 8016d26:	6816      	ldr	r6, [r2, #0]
 8016d28:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 8016d2c:	6006      	str	r6, [r0, #0]
 8016d2e:	6856      	ldr	r6, [r2, #4]
 8016d30:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8016d34:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8016d38:	6046      	str	r6, [r0, #4]
 8016d3a:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 8016d3e:	f8a2 8002 	strh.w	r8, [r2, #2]
 8016d42:	f8a2 e004 	strh.w	lr, [r2, #4]
 8016d46:	f8a2 c006 	strh.w	ip, [r2, #6]
 8016d4a:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 8016d4e:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 8016d52:	4565      	cmp	r5, ip
 8016d54:	f1a1 0208 	sub.w	r2, r1, #8
 8016d58:	db06      	blt.n	8016d68 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 8016d5a:	d119      	bne.n	8016d90 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 8016d5c:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 8016d60:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 8016d64:	42ae      	cmp	r6, r5
 8016d66:	dd13      	ble.n	8016d90 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 8016d68:	460e      	mov	r6, r1
 8016d6a:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 8016d6e:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8016d72:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 8016d76:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 8016d7a:	601d      	str	r5, [r3, #0]
 8016d7c:	6875      	ldr	r5, [r6, #4]
 8016d7e:	605d      	str	r5, [r3, #4]
 8016d80:	f821 9c08 	strh.w	r9, [r1, #-8]
 8016d84:	f821 cc06 	strh.w	ip, [r1, #-6]
 8016d88:	f821 8c04 	strh.w	r8, [r1, #-4]
 8016d8c:	f821 ec02 	strh.w	lr, [r1, #-2]
 8016d90:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8016d94:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 8016d98:	42ae      	cmp	r6, r5
 8016d9a:	db06      	blt.n	8016daa <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 8016d9c:	d116      	bne.n	8016dcc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 8016d9e:	f9b0 c000 	ldrsh.w	ip, [r0]
 8016da2:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 8016da6:	45ac      	cmp	ip, r5
 8016da8:	da10      	bge.n	8016dcc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 8016daa:	681d      	ldr	r5, [r3, #0]
 8016dac:	f9b0 8000 	ldrsh.w	r8, [r0]
 8016db0:	6005      	str	r5, [r0, #0]
 8016db2:	685d      	ldr	r5, [r3, #4]
 8016db4:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8016db8:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8016dbc:	f8a0 8008 	strh.w	r8, [r0, #8]
 8016dc0:	6045      	str	r5, [r0, #4]
 8016dc2:	8146      	strh	r6, [r0, #10]
 8016dc4:	f8a0 e00c 	strh.w	lr, [r0, #12]
 8016dc8:	f8a0 c00e 	strh.w	ip, [r0, #14]
 8016dcc:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 8016dd0:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 8016dd4:	4565      	cmp	r5, ip
 8016dd6:	db06      	blt.n	8016de6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 8016dd8:	d119      	bne.n	8016e0e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8016dda:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 8016dde:	f9b0 5000 	ldrsh.w	r5, [r0]
 8016de2:	42ae      	cmp	r6, r5
 8016de4:	da13      	bge.n	8016e0e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8016de6:	460e      	mov	r6, r1
 8016de8:	f9b0 9000 	ldrsh.w	r9, [r0]
 8016dec:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8016df0:	6005      	str	r5, [r0, #0]
 8016df2:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 8016df6:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 8016dfa:	6875      	ldr	r5, [r6, #4]
 8016dfc:	6045      	str	r5, [r0, #4]
 8016dfe:	f821 9c08 	strh.w	r9, [r1, #-8]
 8016e02:	f821 cc06 	strh.w	ip, [r1, #-6]
 8016e06:	f821 8c04 	strh.w	r8, [r1, #-4]
 8016e0a:	f821 ec02 	strh.w	lr, [r1, #-2]
 8016e0e:	3308      	adds	r3, #8
 8016e10:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 8016e14:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 8016e18:	45e6      	cmp	lr, ip
 8016e1a:	dbf8      	blt.n	8016e0e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8016e1c:	d105      	bne.n	8016e2a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8016e1e:	f9b3 6000 	ldrsh.w	r6, [r3]
 8016e22:	f9b0 5000 	ldrsh.w	r5, [r0]
 8016e26:	42ae      	cmp	r6, r5
 8016e28:	dbf1      	blt.n	8016e0e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8016e2a:	4615      	mov	r5, r2
 8016e2c:	3a08      	subs	r2, #8
 8016e2e:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 8016e32:	45b4      	cmp	ip, r6
 8016e34:	dbf9      	blt.n	8016e2a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8016e36:	d105      	bne.n	8016e44 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 8016e38:	f9b0 8000 	ldrsh.w	r8, [r0]
 8016e3c:	f9b2 6000 	ldrsh.w	r6, [r2]
 8016e40:	45b0      	cmp	r8, r6
 8016e42:	dbf2      	blt.n	8016e2a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8016e44:	4293      	cmp	r3, r2
 8016e46:	f1a5 0608 	sub.w	r6, r5, #8
 8016e4a:	d816      	bhi.n	8016e7a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 8016e4c:	f8d6 c000 	ldr.w	ip, [r6]
 8016e50:	f9b3 a000 	ldrsh.w	sl, [r3]
 8016e54:	f8c3 c000 	str.w	ip, [r3]
 8016e58:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 8016e5c:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 8016e60:	f8d6 c004 	ldr.w	ip, [r6, #4]
 8016e64:	f8c3 c004 	str.w	ip, [r3, #4]
 8016e68:	f825 ac08 	strh.w	sl, [r5, #-8]
 8016e6c:	f825 ec06 	strh.w	lr, [r5, #-6]
 8016e70:	f825 9c04 	strh.w	r9, [r5, #-4]
 8016e74:	f825 8c02 	strh.w	r8, [r5, #-2]
 8016e78:	e7c9      	b.n	8016e0e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8016e7a:	f8d6 e000 	ldr.w	lr, [r6]
 8016e7e:	f9b0 a000 	ldrsh.w	sl, [r0]
 8016e82:	f8c0 e000 	str.w	lr, [r0]
 8016e86:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 8016e8a:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 8016e8e:	f8d6 e004 	ldr.w	lr, [r6, #4]
 8016e92:	f8c0 e004 	str.w	lr, [r0, #4]
 8016e96:	f825 ac08 	strh.w	sl, [r5, #-8]
 8016e9a:	f825 cc06 	strh.w	ip, [r5, #-6]
 8016e9e:	f825 9c04 	strh.w	r9, [r5, #-4]
 8016ea2:	f825 8c02 	strh.w	r8, [r5, #-2]
 8016ea6:	1acd      	subs	r5, r1, r3
 8016ea8:	1a16      	subs	r6, r2, r0
 8016eaa:	10ed      	asrs	r5, r5, #3
 8016eac:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 8016eb0:	bfb5      	itete	lt
 8016eb2:	e9c4 0200 	strdlt	r0, r2, [r4]
 8016eb6:	e9c4 3100 	strdge	r3, r1, [r4]
 8016eba:	460a      	movlt	r2, r1
 8016ebc:	4603      	movge	r3, r0
 8016ebe:	3408      	adds	r4, #8
 8016ec0:	4618      	mov	r0, r3
 8016ec2:	4611      	mov	r1, r2
 8016ec4:	e724      	b.n	8016d10 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 8016ec6:	4299      	cmp	r1, r3
 8016ec8:	d928      	bls.n	8016f1c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 8016eca:	f1a3 0210 	sub.w	r2, r3, #16
 8016ece:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 8016ed2:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 8016ed6:	45ac      	cmp	ip, r5
 8016ed8:	db06      	blt.n	8016ee8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 8016eda:	d11d      	bne.n	8016f18 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 8016edc:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 8016ee0:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 8016ee4:	42ae      	cmp	r6, r5
 8016ee6:	da17      	bge.n	8016f18 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 8016ee8:	4615      	mov	r5, r2
 8016eea:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 8016eee:	f855 6f08 	ldr.w	r6, [r5, #8]!
 8016ef2:	6116      	str	r6, [r2, #16]
 8016ef4:	686e      	ldr	r6, [r5, #4]
 8016ef6:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 8016efa:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 8016efe:	f8a2 9008 	strh.w	r9, [r2, #8]
 8016f02:	42a8      	cmp	r0, r5
 8016f04:	6156      	str	r6, [r2, #20]
 8016f06:	f8a2 c00a 	strh.w	ip, [r2, #10]
 8016f0a:	f8a2 800c 	strh.w	r8, [r2, #12]
 8016f0e:	f8a2 e00e 	strh.w	lr, [r2, #14]
 8016f12:	f1a2 0208 	sub.w	r2, r2, #8
 8016f16:	d1da      	bne.n	8016ece <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 8016f18:	3308      	adds	r3, #8
 8016f1a:	e7d4      	b.n	8016ec6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 8016f1c:	42bc      	cmp	r4, r7
 8016f1e:	d903      	bls.n	8016f28 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 8016f20:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 8016f24:	3c08      	subs	r4, #8
 8016f26:	e6f3      	b.n	8016d10 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 8016f28:	b050      	add	sp, #320	; 0x140
 8016f2a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08016f2e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 8016f2e:	b510      	push	{r4, lr}
 8016f30:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8016f32:	07da      	lsls	r2, r3, #31
 8016f34:	4604      	mov	r4, r0
 8016f36:	d507      	bpl.n	8016f48 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 8016f38:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 8016f3c:	f7ff fe8a 	bl	8016c54 <_ZN8touchgfx7Outline6lineToEii>
 8016f40:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8016f42:	f023 0301 	bic.w	r3, r3, #1
 8016f46:	6243      	str	r3, [r0, #36]	; 0x24
 8016f48:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8016f4a:	079b      	lsls	r3, r3, #30
 8016f4c:	d521      	bpl.n	8016f92 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 8016f4e:	6923      	ldr	r3, [r4, #16]
 8016f50:	88d9      	ldrh	r1, [r3, #6]
 8016f52:	889a      	ldrh	r2, [r3, #4]
 8016f54:	430a      	orrs	r2, r1
 8016f56:	d010      	beq.n	8016f7a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8016f58:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8016f5c:	2a00      	cmp	r2, #0
 8016f5e:	db0c      	blt.n	8016f7a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8016f60:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8016f62:	428a      	cmp	r2, r1
 8016f64:	da09      	bge.n	8016f7a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8016f66:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 8016f6a:	4291      	cmp	r1, r2
 8016f6c:	bf88      	it	hi
 8016f6e:	3308      	addhi	r3, #8
 8016f70:	f102 0201 	add.w	r2, r2, #1
 8016f74:	bf88      	it	hi
 8016f76:	6123      	strhi	r3, [r4, #16]
 8016f78:	60a2      	str	r2, [r4, #8]
 8016f7a:	68a1      	ldr	r1, [r4, #8]
 8016f7c:	b129      	cbz	r1, 8016f8a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 8016f7e:	6863      	ldr	r3, [r4, #4]
 8016f80:	4299      	cmp	r1, r3
 8016f82:	d802      	bhi.n	8016f8a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 8016f84:	68e0      	ldr	r0, [r4, #12]
 8016f86:	f7ff febc 	bl	8016d02 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 8016f8a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8016f8c:	f023 0302 	bic.w	r3, r3, #2
 8016f90:	6263      	str	r3, [r4, #36]	; 0x24
 8016f92:	68e0      	ldr	r0, [r4, #12]
 8016f94:	bd10      	pop	{r4, pc}
	...

08016f98 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 8016f98:	4b02      	ldr	r3, [pc, #8]	; (8016fa4 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 8016f9a:	6018      	str	r0, [r3, #0]
 8016f9c:	4b02      	ldr	r3, [pc, #8]	; (8016fa8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 8016f9e:	6019      	str	r1, [r3, #0]
 8016fa0:	4770      	bx	lr
 8016fa2:	bf00      	nop
 8016fa4:	20013844 	.word	0x20013844
 8016fa8:	20013848 	.word	0x20013848

08016fac <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>:
 8016fac:	4a02      	ldr	r2, [pc, #8]	; (8016fb8 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0xc>)
 8016fae:	2300      	movs	r3, #0
 8016fb0:	6013      	str	r3, [r2, #0]
 8016fb2:	4a02      	ldr	r2, [pc, #8]	; (8016fbc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0x10>)
 8016fb4:	6013      	str	r3, [r2, #0]
 8016fb6:	4770      	bx	lr
 8016fb8:	20013844 	.word	0x20013844
 8016fbc:	20013848 	.word	0x20013848

08016fc0 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 8016fc0:	4b01      	ldr	r3, [pc, #4]	; (8016fc8 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 8016fc2:	6818      	ldr	r0, [r3, #0]
 8016fc4:	4770      	bx	lr
 8016fc6:	bf00      	nop
 8016fc8:	20013844 	.word	0x20013844

08016fcc <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 8016fcc:	4b01      	ldr	r3, [pc, #4]	; (8016fd4 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 8016fce:	6818      	ldr	r0, [r3, #0]
 8016fd0:	4770      	bx	lr
 8016fd2:	bf00      	nop
 8016fd4:	20013848 	.word	0x20013848

08016fd8 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 8016fd8:	b510      	push	{r4, lr}
 8016fda:	6803      	ldr	r3, [r0, #0]
 8016fdc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016fde:	460c      	mov	r4, r1
 8016fe0:	4798      	blx	r3
 8016fe2:	1b03      	subs	r3, r0, r4
 8016fe4:	4258      	negs	r0, r3
 8016fe6:	4158      	adcs	r0, r3
 8016fe8:	bd10      	pop	{r4, pc}
	...

08016fec <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 8016fec:	4b01      	ldr	r3, [pc, #4]	; (8016ff4 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 8016fee:	6019      	str	r1, [r3, #0]
 8016ff0:	4770      	bx	lr
 8016ff2:	bf00      	nop
 8016ff4:	2001384c 	.word	0x2001384c

08016ff8 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8016ff8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016ffc:	4696      	mov	lr, r2
 8016ffe:	4605      	mov	r5, r0
 8017000:	4614      	mov	r4, r2
 8017002:	460e      	mov	r6, r1
 8017004:	461f      	mov	r7, r3
 8017006:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801700a:	b097      	sub	sp, #92	; 0x5c
 801700c:	f10d 0c1c 	add.w	ip, sp, #28
 8017010:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8017014:	f8de 3000 	ldr.w	r3, [lr]
 8017018:	f8cc 3000 	str.w	r3, [ip]
 801701c:	f104 0e14 	add.w	lr, r4, #20
 8017020:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8017024:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8017028:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801702c:	f8de 3000 	ldr.w	r3, [lr]
 8017030:	f8cc 3000 	str.w	r3, [ip]
 8017034:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8017038:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801703c:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8017040:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8017044:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 8017048:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 801704c:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 8017050:	f8de 3000 	ldr.w	r3, [lr]
 8017054:	f8cc 3000 	str.w	r3, [ip]
 8017058:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801705a:	682b      	ldr	r3, [r5, #0]
 801705c:	9201      	str	r2, [sp, #4]
 801705e:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8017062:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8017064:	9200      	str	r2, [sp, #0]
 8017066:	f8cd 8008 	str.w	r8, [sp, #8]
 801706a:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 801706e:	aa07      	add	r2, sp, #28
 8017070:	463b      	mov	r3, r7
 8017072:	4631      	mov	r1, r6
 8017074:	4628      	mov	r0, r5
 8017076:	47d8      	blx	fp
 8017078:	46a6      	mov	lr, r4
 801707a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801707e:	f10d 0c1c 	add.w	ip, sp, #28
 8017082:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8017086:	f8de 3000 	ldr.w	r3, [lr]
 801708a:	f8cc 3000 	str.w	r3, [ip]
 801708e:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8017092:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8017096:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 801709a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801709e:	343c      	adds	r4, #60	; 0x3c
 80170a0:	f8de 3000 	ldr.w	r3, [lr]
 80170a4:	f8cc 3000 	str.w	r3, [ip]
 80170a8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80170aa:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 80170ae:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80170b2:	6823      	ldr	r3, [r4, #0]
 80170b4:	f8cc 3000 	str.w	r3, [ip]
 80170b8:	682b      	ldr	r3, [r5, #0]
 80170ba:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 80170be:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80170c0:	9201      	str	r2, [sp, #4]
 80170c2:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80170c4:	9200      	str	r2, [sp, #0]
 80170c6:	f8cd 8008 	str.w	r8, [sp, #8]
 80170ca:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 80170cc:	aa07      	add	r2, sp, #28
 80170ce:	463b      	mov	r3, r7
 80170d0:	4631      	mov	r1, r6
 80170d2:	4628      	mov	r0, r5
 80170d4:	47a0      	blx	r4
 80170d6:	b017      	add	sp, #92	; 0x5c
 80170d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080170dc <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 80170dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80170e0:	b08d      	sub	sp, #52	; 0x34
 80170e2:	4688      	mov	r8, r1
 80170e4:	9916      	ldr	r1, [sp, #88]	; 0x58
 80170e6:	f8d3 c000 	ldr.w	ip, [r3]
 80170ea:	680f      	ldr	r7, [r1, #0]
 80170ec:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 80170f0:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 80170f4:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 80170f8:	edd3 6a07 	vldr	s13, [r3, #28]
 80170fc:	9918      	ldr	r1, [sp, #96]	; 0x60
 80170fe:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 8017102:	f9b1 9000 	ldrsh.w	r9, [r1]
 8017106:	f9ba 1000 	ldrsh.w	r1, [sl]
 801710a:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 801710e:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 8017112:	eba7 070c 	sub.w	r7, r7, ip
 8017116:	42bc      	cmp	r4, r7
 8017118:	bfa8      	it	ge
 801711a:	463c      	movge	r4, r7
 801711c:	ee07 4a90 	vmov	s15, r4
 8017120:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 8017124:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 8017128:	ee25 4a04 	vmul.f32	s8, s10, s8
 801712c:	ee65 4a24 	vmul.f32	s9, s10, s9
 8017130:	ee25 5a27 	vmul.f32	s10, s10, s15
 8017134:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8017138:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 801713c:	eb09 0e0c 	add.w	lr, r9, ip
 8017140:	4571      	cmp	r1, lr
 8017142:	ee71 0aa4 	vadd.f32	s1, s3, s9
 8017146:	ee32 1a05 	vadd.f32	s2, s4, s10
 801714a:	ee36 0a84 	vadd.f32	s0, s13, s8
 801714e:	ee61 1a87 	vmul.f32	s3, s3, s14
 8017152:	ee22 2a07 	vmul.f32	s4, s4, s14
 8017156:	f340 808d 	ble.w	8017274 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 801715a:	eba1 060e 	sub.w	r6, r1, lr
 801715e:	fb96 f5f4 	sdiv	r5, r6, r4
 8017162:	ee07 5a10 	vmov	s14, r5
 8017166:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801716a:	2d00      	cmp	r5, #0
 801716c:	fb04 6615 	mls	r6, r4, r5, r6
 8017170:	eea7 0a04 	vfma.f32	s0, s14, s8
 8017174:	eee7 0a24 	vfma.f32	s1, s14, s9
 8017178:	eea7 1a05 	vfma.f32	s2, s14, s10
 801717c:	dd13      	ble.n	80171a6 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 801717e:	ee70 6a44 	vsub.f32	s13, s0, s8
 8017182:	ee70 1ae4 	vsub.f32	s3, s1, s9
 8017186:	eef5 6a40 	vcmp.f32	s13, #0.0
 801718a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801718e:	bf18      	it	ne
 8017190:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 8017194:	ee31 2a45 	vsub.f32	s4, s2, s10
 8017198:	bf08      	it	eq
 801719a:	eeb0 7a67 	vmoveq.f32	s14, s15
 801719e:	ee61 1a87 	vmul.f32	s3, s3, s14
 80171a2:	ee22 2a07 	vmul.f32	s4, s4, s14
 80171a6:	fb05 f204 	mul.w	r2, r5, r4
 80171aa:	1abf      	subs	r7, r7, r2
 80171ac:	4494      	add	ip, r2
 80171ae:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 80171b2:	4411      	add	r1, r2
 80171b4:	eb09 020c 	add.w	r2, r9, ip
 80171b8:	443a      	add	r2, r7
 80171ba:	b209      	sxth	r1, r1
 80171bc:	428a      	cmp	r2, r1
 80171be:	bfc4      	itt	gt
 80171c0:	eba1 0209 	subgt.w	r2, r1, r9
 80171c4:	eba2 070c 	subgt.w	r7, r2, ip
 80171c8:	2f00      	cmp	r7, #0
 80171ca:	dd50      	ble.n	801726e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 80171cc:	fb97 f1f4 	sdiv	r1, r7, r4
 80171d0:	fb04 7211 	mls	r2, r4, r1, r7
 80171d4:	b90a      	cbnz	r2, 80171da <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 80171d6:	3901      	subs	r1, #1
 80171d8:	4622      	mov	r2, r4
 80171da:	eec7 3a80 	vdiv.f32	s7, s15, s0
 80171de:	6840      	ldr	r0, [r0, #4]
 80171e0:	900b      	str	r0, [sp, #44]	; 0x2c
 80171e2:	f8d0 a000 	ldr.w	sl, [r0]
 80171e6:	9817      	ldr	r0, [sp, #92]	; 0x5c
 80171e8:	9008      	str	r0, [sp, #32]
 80171ea:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 80171ee:	9818      	ldr	r0, [sp, #96]	; 0x60
 80171f0:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 80171f4:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 80171f8:	695b      	ldr	r3, [r3, #20]
 80171fa:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80171fc:	445b      	add	r3, fp
 80171fe:	eef0 6a42 	vmov.f32	s13, s4
 8017202:	ee60 2aa3 	vmul.f32	s5, s1, s7
 8017206:	ee21 3a23 	vmul.f32	s6, s2, s7
 801720a:	ee72 7ae1 	vsub.f32	s15, s5, s3
 801720e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017212:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8017216:	9307      	str	r3, [sp, #28]
 8017218:	ee17 7a90 	vmov	r7, s15
 801721c:	ee73 7a42 	vsub.f32	s15, s6, s4
 8017220:	eeb0 7a61 	vmov.f32	s14, s3
 8017224:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8017228:	ee16 3a90 	vmov	r3, s13
 801722c:	fb97 f7f4 	sdiv	r7, r7, r4
 8017230:	ee17 ca90 	vmov	ip, s15
 8017234:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8017238:	fb9c fcf4 	sdiv	ip, ip, r4
 801723c:	fb0c 3306 	mla	r3, ip, r6, r3
 8017240:	9302      	str	r3, [sp, #8]
 8017242:	ee17 3a10 	vmov	r3, s14
 8017246:	44b6      	add	lr, r6
 8017248:	fb04 e505 	mla	r5, r4, r5, lr
 801724c:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 8017250:	fb07 3706 	mla	r7, r7, r6, r3
 8017254:	e9cd 8505 	strd	r8, r5, [sp, #20]
 8017258:	e9cd 4700 	strd	r4, r7, [sp]
 801725c:	2900      	cmp	r1, #0
 801725e:	bfcc      	ite	gt
 8017260:	46a1      	movgt	r9, r4
 8017262:	4691      	movle	r9, r2
 8017264:	eba9 0306 	sub.w	r3, r9, r6
 8017268:	f8da 4008 	ldr.w	r4, [sl, #8]
 801726c:	47a0      	blx	r4
 801726e:	b00d      	add	sp, #52	; 0x34
 8017270:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017274:	2500      	movs	r5, #0
 8017276:	462e      	mov	r6, r5
 8017278:	e799      	b.n	80171ae <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

0801727c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 801727c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017280:	b0db      	sub	sp, #364	; 0x16c
 8017282:	461d      	mov	r5, r3
 8017284:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 8017288:	930a      	str	r3, [sp, #40]	; 0x28
 801728a:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 801728e:	930b      	str	r3, [sp, #44]	; 0x2c
 8017290:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 8017294:	9310      	str	r3, [sp, #64]	; 0x40
 8017296:	6803      	ldr	r3, [r0, #0]
 8017298:	910f      	str	r1, [sp, #60]	; 0x3c
 801729a:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 801729c:	9009      	str	r0, [sp, #36]	; 0x24
 801729e:	4614      	mov	r4, r2
 80172a0:	4629      	mov	r1, r5
 80172a2:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 80172a6:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 80172aa:	47b8      	blx	r7
 80172ac:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80172ae:	6058      	str	r0, [r3, #4]
 80172b0:	2800      	cmp	r0, #0
 80172b2:	f000 83a1 	beq.w	80179f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80172b6:	682b      	ldr	r3, [r5, #0]
 80172b8:	9314      	str	r3, [sp, #80]	; 0x50
 80172ba:	686b      	ldr	r3, [r5, #4]
 80172bc:	9315      	str	r3, [sp, #84]	; 0x54
 80172be:	4bc4      	ldr	r3, [pc, #784]	; (80175d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 80172c0:	ed94 7a02 	vldr	s14, [r4, #8]
 80172c4:	7819      	ldrb	r1, [r3, #0]
 80172c6:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 80172ca:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 80172ce:	2900      	cmp	r1, #0
 80172d0:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80172d4:	bf16      	itet	ne
 80172d6:	4619      	movne	r1, r3
 80172d8:	4611      	moveq	r1, r2
 80172da:	4613      	movne	r3, r2
 80172dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80172e0:	9116      	str	r1, [sp, #88]	; 0x58
 80172e2:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 80172e6:	f240 8387 	bls.w	80179f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80172ea:	ed94 7a07 	vldr	s14, [r4, #28]
 80172ee:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80172f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80172f6:	f240 837f 	bls.w	80179f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80172fa:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 80172fe:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8017302:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017306:	f240 8377 	bls.w	80179f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801730a:	6822      	ldr	r2, [r4, #0]
 801730c:	4bb1      	ldr	r3, [pc, #708]	; (80175d4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 801730e:	429a      	cmp	r2, r3
 8017310:	f2c0 8372 	blt.w	80179f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8017314:	49b0      	ldr	r1, [pc, #704]	; (80175d8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 8017316:	6963      	ldr	r3, [r4, #20]
 8017318:	428a      	cmp	r2, r1
 801731a:	f300 836d 	bgt.w	80179f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801731e:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8017322:	48ae      	ldr	r0, [pc, #696]	; (80175dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 8017324:	33ff      	adds	r3, #255	; 0xff
 8017326:	4283      	cmp	r3, r0
 8017328:	f200 8366 	bhi.w	80179f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801732c:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 801732e:	4dac      	ldr	r5, [pc, #688]	; (80175e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 8017330:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8017334:	33ff      	adds	r3, #255	; 0xff
 8017336:	42ab      	cmp	r3, r5
 8017338:	f200 835e 	bhi.w	80179f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801733c:	6862      	ldr	r2, [r4, #4]
 801733e:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 8017342:	33ff      	adds	r3, #255	; 0xff
 8017344:	4283      	cmp	r3, r0
 8017346:	f200 8357 	bhi.w	80179f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801734a:	69a1      	ldr	r1, [r4, #24]
 801734c:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 8017350:	33ff      	adds	r3, #255	; 0xff
 8017352:	4283      	cmp	r3, r0
 8017354:	f200 8350 	bhi.w	80179f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8017358:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 801735a:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 801735e:	30ff      	adds	r0, #255	; 0xff
 8017360:	42a8      	cmp	r0, r5
 8017362:	f200 8349 	bhi.w	80179f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8017366:	428a      	cmp	r2, r1
 8017368:	f280 8110 	bge.w	801758c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 801736c:	429a      	cmp	r2, r3
 801736e:	f300 8119 	bgt.w	80175a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 8017372:	4299      	cmp	r1, r3
 8017374:	f280 811d 	bge.w	80175b2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 8017378:	2502      	movs	r5, #2
 801737a:	2701      	movs	r7, #1
 801737c:	46a9      	mov	r9, r5
 801737e:	46b8      	mov	r8, r7
 8017380:	f04f 0a00 	mov.w	sl, #0
 8017384:	4621      	mov	r1, r4
 8017386:	a849      	add	r0, sp, #292	; 0x124
 8017388:	f003 ff2a 	bl	801b1e0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 801738c:	4622      	mov	r2, r4
 801738e:	4653      	mov	r3, sl
 8017390:	a949      	add	r1, sp, #292	; 0x124
 8017392:	f8cd 9000 	str.w	r9, [sp]
 8017396:	a819      	add	r0, sp, #100	; 0x64
 8017398:	f004 f852 	bl	801b440 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 801739c:	4622      	mov	r2, r4
 801739e:	4653      	mov	r3, sl
 80173a0:	a949      	add	r1, sp, #292	; 0x124
 80173a2:	f8cd 8000 	str.w	r8, [sp]
 80173a6:	a829      	add	r0, sp, #164	; 0xa4
 80173a8:	f004 f84a 	bl	801b440 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 80173ac:	4643      	mov	r3, r8
 80173ae:	4622      	mov	r2, r4
 80173b0:	a949      	add	r1, sp, #292	; 0x124
 80173b2:	f8cd 9000 	str.w	r9, [sp]
 80173b6:	a839      	add	r0, sp, #228	; 0xe4
 80173b8:	f004 f842 	bl	801b440 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 80173bc:	42af      	cmp	r7, r5
 80173be:	bfb5      	itete	lt
 80173c0:	2300      	movlt	r3, #0
 80173c2:	2301      	movge	r3, #1
 80173c4:	930e      	strlt	r3, [sp, #56]	; 0x38
 80173c6:	930e      	strge	r3, [sp, #56]	; 0x38
 80173c8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80173ca:	e893 0003 	ldmia.w	r3, {r0, r1}
 80173ce:	af12      	add	r7, sp, #72	; 0x48
 80173d0:	bfb9      	ittee	lt
 80173d2:	ad29      	addlt	r5, sp, #164	; 0xa4
 80173d4:	ac19      	addlt	r4, sp, #100	; 0x64
 80173d6:	ad19      	addge	r5, sp, #100	; 0x64
 80173d8:	ac29      	addge	r4, sp, #164	; 0xa4
 80173da:	e887 0003 	stmia.w	r7, {r0, r1}
 80173de:	b928      	cbnz	r0, 80173ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 80173e0:	4b80      	ldr	r3, [pc, #512]	; (80175e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 80173e2:	6818      	ldr	r0, [r3, #0]
 80173e4:	6803      	ldr	r3, [r0, #0]
 80173e6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80173e8:	4798      	blx	r3
 80173ea:	6038      	str	r0, [r7, #0]
 80173ec:	9b64      	ldr	r3, [sp, #400]	; 0x190
 80173ee:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 80173f2:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80173f6:	930c      	str	r3, [sp, #48]	; 0x30
 80173f8:	990c      	ldr	r1, [sp, #48]	; 0x30
 80173fa:	6963      	ldr	r3, [r4, #20]
 80173fc:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 80173fe:	440b      	add	r3, r1
 8017400:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8017404:	4408      	add	r0, r1
 8017406:	b200      	sxth	r0, r0
 8017408:	4283      	cmp	r3, r0
 801740a:	900d      	str	r0, [sp, #52]	; 0x34
 801740c:	f280 80dd 	bge.w	80175ca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 8017410:	428b      	cmp	r3, r1
 8017412:	da08      	bge.n	8017426 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8017414:	2a00      	cmp	r2, #0
 8017416:	dd06      	ble.n	8017426 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8017418:	1acb      	subs	r3, r1, r3
 801741a:	429a      	cmp	r2, r3
 801741c:	f2c0 80e4 	blt.w	80175e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 8017420:	2b00      	cmp	r3, #0
 8017422:	f300 80e2 	bgt.w	80175ea <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 8017426:	6967      	ldr	r7, [r4, #20]
 8017428:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801742a:	443b      	add	r3, r7
 801742c:	461f      	mov	r7, r3
 801742e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017430:	1bdf      	subs	r7, r3, r7
 8017432:	4297      	cmp	r7, r2
 8017434:	bfa8      	it	ge
 8017436:	4617      	movge	r7, r2
 8017438:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 801743c:	2f00      	cmp	r7, #0
 801743e:	f340 8166 	ble.w	801770e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 8017442:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8017444:	6829      	ldr	r1, [r5, #0]
 8017446:	f9b3 2000 	ldrsh.w	r2, [r3]
 801744a:	f9bb 3000 	ldrsh.w	r3, [fp]
 801744e:	6820      	ldr	r0, [r4, #0]
 8017450:	4411      	add	r1, r2
 8017452:	4299      	cmp	r1, r3
 8017454:	dd1a      	ble.n	801748c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8017456:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 801745a:	440b      	add	r3, r1
 801745c:	4402      	add	r2, r0
 801745e:	b21b      	sxth	r3, r3
 8017460:	429a      	cmp	r2, r3
 8017462:	dc13      	bgt.n	801748c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8017464:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017466:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8017468:	681b      	ldr	r3, [r3, #0]
 801746a:	9206      	str	r2, [sp, #24]
 801746c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801746e:	9205      	str	r2, [sp, #20]
 8017470:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8017472:	9500      	str	r5, [sp, #0]
 8017474:	e9cd b203 	strd	fp, r2, [sp, #12]
 8017478:	9a64      	ldr	r2, [sp, #400]	; 0x190
 801747a:	9809      	ldr	r0, [sp, #36]	; 0x24
 801747c:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8017480:	a912      	add	r1, sp, #72	; 0x48
 8017482:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8017486:	aa49      	add	r2, sp, #292	; 0x124
 8017488:	4623      	mov	r3, r4
 801748a:	47c8      	blx	r9
 801748c:	e9d4 2300 	ldrd	r2, r3, [r4]
 8017490:	441a      	add	r2, r3
 8017492:	6963      	ldr	r3, [r4, #20]
 8017494:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8017498:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 801749c:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 80174a0:	68a1      	ldr	r1, [r4, #8]
 80174a2:	ed94 6a08 	vldr	s12, [r4, #32]
 80174a6:	6022      	str	r2, [r4, #0]
 80174a8:	3301      	adds	r3, #1
 80174aa:	6163      	str	r3, [r4, #20]
 80174ac:	69a3      	ldr	r3, [r4, #24]
 80174ae:	ee37 7a27 	vadd.f32	s14, s14, s15
 80174b2:	3b01      	subs	r3, #1
 80174b4:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 80174b8:	61a3      	str	r3, [r4, #24]
 80174ba:	6923      	ldr	r3, [r4, #16]
 80174bc:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 80174c0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80174c4:	edd4 6a07 	vldr	s13, [r4, #28]
 80174c8:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 80174cc:	440b      	add	r3, r1
 80174ce:	68e1      	ldr	r1, [r4, #12]
 80174d0:	6123      	str	r3, [r4, #16]
 80174d2:	ee76 6a86 	vadd.f32	s13, s13, s12
 80174d6:	428b      	cmp	r3, r1
 80174d8:	edc4 6a07 	vstr	s13, [r4, #28]
 80174dc:	db15      	blt.n	801750a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 80174de:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 80174e2:	ee76 6a26 	vadd.f32	s13, s12, s13
 80174e6:	3201      	adds	r2, #1
 80174e8:	edc4 6a07 	vstr	s13, [r4, #28]
 80174ec:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 80174f0:	6022      	str	r2, [r4, #0]
 80174f2:	ee36 7a87 	vadd.f32	s14, s13, s14
 80174f6:	1a5b      	subs	r3, r3, r1
 80174f8:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 80174fc:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 8017500:	6123      	str	r3, [r4, #16]
 8017502:	ee77 7a27 	vadd.f32	s15, s14, s15
 8017506:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 801750a:	e9d5 2300 	ldrd	r2, r3, [r5]
 801750e:	441a      	add	r2, r3
 8017510:	696b      	ldr	r3, [r5, #20]
 8017512:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8017516:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 801751a:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 801751e:	68a9      	ldr	r1, [r5, #8]
 8017520:	ed95 6a08 	vldr	s12, [r5, #32]
 8017524:	602a      	str	r2, [r5, #0]
 8017526:	3301      	adds	r3, #1
 8017528:	616b      	str	r3, [r5, #20]
 801752a:	69ab      	ldr	r3, [r5, #24]
 801752c:	ee37 7a27 	vadd.f32	s14, s14, s15
 8017530:	3b01      	subs	r3, #1
 8017532:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8017536:	61ab      	str	r3, [r5, #24]
 8017538:	692b      	ldr	r3, [r5, #16]
 801753a:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801753e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8017542:	edd5 6a07 	vldr	s13, [r5, #28]
 8017546:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 801754a:	440b      	add	r3, r1
 801754c:	68e9      	ldr	r1, [r5, #12]
 801754e:	612b      	str	r3, [r5, #16]
 8017550:	ee76 6a86 	vadd.f32	s13, s13, s12
 8017554:	428b      	cmp	r3, r1
 8017556:	edc5 6a07 	vstr	s13, [r5, #28]
 801755a:	db15      	blt.n	8017588 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 801755c:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8017560:	ee76 6a26 	vadd.f32	s13, s12, s13
 8017564:	3201      	adds	r2, #1
 8017566:	edc5 6a07 	vstr	s13, [r5, #28]
 801756a:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 801756e:	602a      	str	r2, [r5, #0]
 8017570:	ee36 7a87 	vadd.f32	s14, s13, s14
 8017574:	1a5b      	subs	r3, r3, r1
 8017576:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801757a:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 801757e:	612b      	str	r3, [r5, #16]
 8017580:	ee77 7a27 	vadd.f32	s15, s14, s15
 8017584:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8017588:	3f01      	subs	r7, #1
 801758a:	e757      	b.n	801743c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 801758c:	4299      	cmp	r1, r3
 801758e:	dc13      	bgt.n	80175b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 8017590:	429a      	cmp	r2, r3
 8017592:	da14      	bge.n	80175be <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 8017594:	2502      	movs	r5, #2
 8017596:	2703      	movs	r7, #3
 8017598:	46a9      	mov	r9, r5
 801759a:	f04f 0800 	mov.w	r8, #0
 801759e:	f04f 0a01 	mov.w	sl, #1
 80175a2:	e6ef      	b.n	8017384 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 80175a4:	2501      	movs	r5, #1
 80175a6:	2700      	movs	r7, #0
 80175a8:	46a9      	mov	r9, r5
 80175aa:	46b8      	mov	r8, r7
 80175ac:	f04f 0a02 	mov.w	sl, #2
 80175b0:	e6e8      	b.n	8017384 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 80175b2:	2501      	movs	r5, #1
 80175b4:	2702      	movs	r7, #2
 80175b6:	e6e1      	b.n	801737c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 80175b8:	2500      	movs	r5, #0
 80175ba:	2701      	movs	r7, #1
 80175bc:	e7f4      	b.n	80175a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 80175be:	2702      	movs	r7, #2
 80175c0:	2503      	movs	r5, #3
 80175c2:	f04f 0900 	mov.w	r9, #0
 80175c6:	46b8      	mov	r8, r7
 80175c8:	e7e9      	b.n	801759e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 80175ca:	4613      	mov	r3, r2
 80175cc:	e728      	b.n	8017420 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 80175ce:	bf00      	nop
 80175d0:	20013834 	.word	0x20013834
 80175d4:	fffd8f01 	.word	0xfffd8f01
 80175d8:	00027100 	.word	0x00027100
 80175dc:	0004e1ff 	.word	0x0004e1ff
 80175e0:	0004e1fe 	.word	0x0004e1fe
 80175e4:	2001383c 	.word	0x2001383c
 80175e8:	4613      	mov	r3, r2
 80175ea:	992b      	ldr	r1, [sp, #172]	; 0xac
 80175ec:	9111      	str	r1, [sp, #68]	; 0x44
 80175ee:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 80175f2:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 80175f6:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 80175f8:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 80175fc:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 8017600:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 8017604:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 8017608:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 801760c:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 8017610:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 8017614:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 8017618:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 801761c:	469e      	mov	lr, r3
 801761e:	469c      	mov	ip, r3
 8017620:	f04f 0900 	mov.w	r9, #0
 8017624:	f1bc 0f00 	cmp.w	ip, #0
 8017628:	d147      	bne.n	80176ba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 801762a:	eb03 0c07 	add.w	ip, r3, r7
 801762e:	1ad7      	subs	r7, r2, r3
 8017630:	f1b9 0f00 	cmp.w	r9, #0
 8017634:	d009      	beq.n	801764a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 8017636:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 801763a:	9029      	str	r0, [sp, #164]	; 0xa4
 801763c:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 8017640:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 8017644:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 8017648:	912d      	str	r1, [sp, #180]	; 0xb4
 801764a:	991b      	ldr	r1, [sp, #108]	; 0x6c
 801764c:	9111      	str	r1, [sp, #68]	; 0x44
 801764e:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8017652:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8017656:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 801765a:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 801765e:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8017662:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8017666:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 801766a:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 801766e:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8017672:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8017676:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 801767a:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 801767e:	f04f 0800 	mov.w	r8, #0
 8017682:	f1be 0f00 	cmp.w	lr, #0
 8017686:	d031      	beq.n	80176ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 8017688:	9e11      	ldr	r6, [sp, #68]	; 0x44
 801768a:	4431      	add	r1, r6
 801768c:	4549      	cmp	r1, r9
 801768e:	4450      	add	r0, sl
 8017690:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8017694:	ee37 7a04 	vadd.f32	s14, s14, s8
 8017698:	ee77 7aa3 	vadd.f32	s15, s15, s7
 801769c:	db08      	blt.n	80176b0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 801769e:	ee77 7a85 	vadd.f32	s15, s15, s10
 80176a2:	ee76 6aa5 	vadd.f32	s13, s13, s11
 80176a6:	ee37 7a06 	vadd.f32	s14, s14, s12
 80176aa:	3001      	adds	r0, #1
 80176ac:	eba1 0109 	sub.w	r1, r1, r9
 80176b0:	f10e 3eff 	add.w	lr, lr, #4294967295
 80176b4:	f04f 0801 	mov.w	r8, #1
 80176b8:	e7e3      	b.n	8017682 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 80176ba:	9e11      	ldr	r6, [sp, #68]	; 0x44
 80176bc:	4431      	add	r1, r6
 80176be:	4541      	cmp	r1, r8
 80176c0:	4450      	add	r0, sl
 80176c2:	ee37 7a24 	vadd.f32	s14, s14, s9
 80176c6:	ee77 7a84 	vadd.f32	s15, s15, s8
 80176ca:	ee76 6aa3 	vadd.f32	s13, s13, s7
 80176ce:	db08      	blt.n	80176e2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 80176d0:	ee76 6a85 	vadd.f32	s13, s13, s10
 80176d4:	ee37 7a25 	vadd.f32	s14, s14, s11
 80176d8:	ee77 7a86 	vadd.f32	s15, s15, s12
 80176dc:	3001      	adds	r0, #1
 80176de:	eba1 0108 	sub.w	r1, r1, r8
 80176e2:	f10c 3cff 	add.w	ip, ip, #4294967295
 80176e6:	f04f 0901 	mov.w	r9, #1
 80176ea:	e79b      	b.n	8017624 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 80176ec:	449c      	add	ip, r3
 80176ee:	1aff      	subs	r7, r7, r3
 80176f0:	f1b8 0f00 	cmp.w	r8, #0
 80176f4:	d009      	beq.n	801770a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 80176f6:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 80176fa:	9019      	str	r0, [sp, #100]	; 0x64
 80176fc:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8017700:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8017704:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8017708:	911d      	str	r1, [sp, #116]	; 0x74
 801770a:	1ad2      	subs	r2, r2, r3
 801770c:	e68b      	b.n	8017426 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 801770e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017710:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 8017712:	2b00      	cmp	r3, #0
 8017714:	f000 80d1 	beq.w	80178ba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 8017718:	ad19      	add	r5, sp, #100	; 0x64
 801771a:	ac39      	add	r4, sp, #228	; 0xe4
 801771c:	9b64      	ldr	r3, [sp, #400]	; 0x190
 801771e:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8017722:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8017726:	930c      	str	r3, [sp, #48]	; 0x30
 8017728:	990c      	ldr	r1, [sp, #48]	; 0x30
 801772a:	6963      	ldr	r3, [r4, #20]
 801772c:	440b      	add	r3, r1
 801772e:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8017732:	4408      	add	r0, r1
 8017734:	b200      	sxth	r0, r0
 8017736:	4283      	cmp	r3, r0
 8017738:	900d      	str	r0, [sp, #52]	; 0x34
 801773a:	f280 80c1 	bge.w	80178c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 801773e:	428b      	cmp	r3, r1
 8017740:	da08      	bge.n	8017754 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8017742:	2a00      	cmp	r2, #0
 8017744:	dd06      	ble.n	8017754 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8017746:	1acb      	subs	r3, r1, r3
 8017748:	429a      	cmp	r2, r3
 801774a:	f2c0 80bb 	blt.w	80178c4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 801774e:	2b00      	cmp	r3, #0
 8017750:	f300 80b9 	bgt.w	80178c6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 8017754:	6967      	ldr	r7, [r4, #20]
 8017756:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8017758:	443b      	add	r3, r7
 801775a:	461f      	mov	r7, r3
 801775c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801775e:	1bdf      	subs	r7, r3, r7
 8017760:	4297      	cmp	r7, r2
 8017762:	bfa8      	it	ge
 8017764:	4617      	movge	r7, r2
 8017766:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 801776a:	2f00      	cmp	r7, #0
 801776c:	f340 813c 	ble.w	80179e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 8017770:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8017772:	6829      	ldr	r1, [r5, #0]
 8017774:	f9b3 2000 	ldrsh.w	r2, [r3]
 8017778:	f9bb 3000 	ldrsh.w	r3, [fp]
 801777c:	6820      	ldr	r0, [r4, #0]
 801777e:	4411      	add	r1, r2
 8017780:	4299      	cmp	r1, r3
 8017782:	dd1a      	ble.n	80177ba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8017784:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8017788:	440b      	add	r3, r1
 801778a:	4402      	add	r2, r0
 801778c:	b21b      	sxth	r3, r3
 801778e:	429a      	cmp	r2, r3
 8017790:	dc13      	bgt.n	80177ba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8017792:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017794:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8017796:	681b      	ldr	r3, [r3, #0]
 8017798:	9206      	str	r2, [sp, #24]
 801779a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801779c:	9205      	str	r2, [sp, #20]
 801779e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80177a0:	9500      	str	r5, [sp, #0]
 80177a2:	e9cd b203 	strd	fp, r2, [sp, #12]
 80177a6:	9a64      	ldr	r2, [sp, #400]	; 0x190
 80177a8:	9809      	ldr	r0, [sp, #36]	; 0x24
 80177aa:	e9cd 8201 	strd	r8, r2, [sp, #4]
 80177ae:	a912      	add	r1, sp, #72	; 0x48
 80177b0:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 80177b4:	aa49      	add	r2, sp, #292	; 0x124
 80177b6:	4623      	mov	r3, r4
 80177b8:	47c8      	blx	r9
 80177ba:	e9d4 2300 	ldrd	r2, r3, [r4]
 80177be:	441a      	add	r2, r3
 80177c0:	6963      	ldr	r3, [r4, #20]
 80177c2:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 80177c6:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 80177ca:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 80177ce:	68a1      	ldr	r1, [r4, #8]
 80177d0:	ed94 6a08 	vldr	s12, [r4, #32]
 80177d4:	6022      	str	r2, [r4, #0]
 80177d6:	3301      	adds	r3, #1
 80177d8:	6163      	str	r3, [r4, #20]
 80177da:	69a3      	ldr	r3, [r4, #24]
 80177dc:	ee37 7a27 	vadd.f32	s14, s14, s15
 80177e0:	3b01      	subs	r3, #1
 80177e2:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 80177e6:	61a3      	str	r3, [r4, #24]
 80177e8:	6923      	ldr	r3, [r4, #16]
 80177ea:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 80177ee:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80177f2:	edd4 6a07 	vldr	s13, [r4, #28]
 80177f6:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 80177fa:	440b      	add	r3, r1
 80177fc:	68e1      	ldr	r1, [r4, #12]
 80177fe:	6123      	str	r3, [r4, #16]
 8017800:	ee76 6a86 	vadd.f32	s13, s13, s12
 8017804:	428b      	cmp	r3, r1
 8017806:	edc4 6a07 	vstr	s13, [r4, #28]
 801780a:	db15      	blt.n	8017838 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 801780c:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8017810:	ee76 6a26 	vadd.f32	s13, s12, s13
 8017814:	3201      	adds	r2, #1
 8017816:	edc4 6a07 	vstr	s13, [r4, #28]
 801781a:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 801781e:	6022      	str	r2, [r4, #0]
 8017820:	ee36 7a87 	vadd.f32	s14, s13, s14
 8017824:	1a5b      	subs	r3, r3, r1
 8017826:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 801782a:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 801782e:	6123      	str	r3, [r4, #16]
 8017830:	ee77 7a27 	vadd.f32	s15, s14, s15
 8017834:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8017838:	e9d5 2300 	ldrd	r2, r3, [r5]
 801783c:	441a      	add	r2, r3
 801783e:	696b      	ldr	r3, [r5, #20]
 8017840:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8017844:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 8017848:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 801784c:	68a9      	ldr	r1, [r5, #8]
 801784e:	ed95 6a08 	vldr	s12, [r5, #32]
 8017852:	602a      	str	r2, [r5, #0]
 8017854:	3301      	adds	r3, #1
 8017856:	616b      	str	r3, [r5, #20]
 8017858:	69ab      	ldr	r3, [r5, #24]
 801785a:	ee37 7a27 	vadd.f32	s14, s14, s15
 801785e:	3b01      	subs	r3, #1
 8017860:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8017864:	61ab      	str	r3, [r5, #24]
 8017866:	692b      	ldr	r3, [r5, #16]
 8017868:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801786c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8017870:	edd5 6a07 	vldr	s13, [r5, #28]
 8017874:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8017878:	440b      	add	r3, r1
 801787a:	68e9      	ldr	r1, [r5, #12]
 801787c:	612b      	str	r3, [r5, #16]
 801787e:	ee76 6a86 	vadd.f32	s13, s13, s12
 8017882:	428b      	cmp	r3, r1
 8017884:	edc5 6a07 	vstr	s13, [r5, #28]
 8017888:	db15      	blt.n	80178b6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 801788a:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 801788e:	ee76 6a26 	vadd.f32	s13, s12, s13
 8017892:	3201      	adds	r2, #1
 8017894:	edc5 6a07 	vstr	s13, [r5, #28]
 8017898:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 801789c:	602a      	str	r2, [r5, #0]
 801789e:	ee36 7a87 	vadd.f32	s14, s13, s14
 80178a2:	1a5b      	subs	r3, r3, r1
 80178a4:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 80178a8:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 80178ac:	612b      	str	r3, [r5, #16]
 80178ae:	ee77 7a27 	vadd.f32	s15, s14, s15
 80178b2:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 80178b6:	3f01      	subs	r7, #1
 80178b8:	e757      	b.n	801776a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 80178ba:	ad39      	add	r5, sp, #228	; 0xe4
 80178bc:	ac19      	add	r4, sp, #100	; 0x64
 80178be:	e72d      	b.n	801771c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 80178c0:	4613      	mov	r3, r2
 80178c2:	e744      	b.n	801774e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 80178c4:	4613      	mov	r3, r2
 80178c6:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 80178ca:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 80178cc:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 80178d0:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 80178d4:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 80178d8:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 80178dc:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 80178e0:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 80178e4:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 80178e8:	993d      	ldr	r1, [sp, #244]	; 0xf4
 80178ea:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 80178ee:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 80178f2:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 80178f6:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 80178fa:	960e      	str	r6, [sp, #56]	; 0x38
 80178fc:	469e      	mov	lr, r3
 80178fe:	461f      	mov	r7, r3
 8017900:	f04f 0900 	mov.w	r9, #0
 8017904:	2f00      	cmp	r7, #0
 8017906:	d146      	bne.n	8017996 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 8017908:	449c      	add	ip, r3
 801790a:	1ad7      	subs	r7, r2, r3
 801790c:	f1b9 0f00 	cmp.w	r9, #0
 8017910:	d009      	beq.n	8017926 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 8017912:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 8017916:	9039      	str	r0, [sp, #228]	; 0xe4
 8017918:	913d      	str	r1, [sp, #244]	; 0xf4
 801791a:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 801791e:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 8017922:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 8017926:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8017928:	910e      	str	r1, [sp, #56]	; 0x38
 801792a:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 801792e:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8017932:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 8017936:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 801793a:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 801793e:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8017942:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8017946:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 801794a:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 801794e:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8017952:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 8017956:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 801795a:	f04f 0800 	mov.w	r8, #0
 801795e:	f1be 0f00 	cmp.w	lr, #0
 8017962:	d030      	beq.n	80179c6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 8017964:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8017966:	4431      	add	r1, r6
 8017968:	4549      	cmp	r1, r9
 801796a:	4450      	add	r0, sl
 801796c:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8017970:	ee37 7a04 	vadd.f32	s14, s14, s8
 8017974:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8017978:	db08      	blt.n	801798c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 801797a:	ee77 7a85 	vadd.f32	s15, s15, s10
 801797e:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8017982:	ee37 7a06 	vadd.f32	s14, s14, s12
 8017986:	3001      	adds	r0, #1
 8017988:	eba1 0109 	sub.w	r1, r1, r9
 801798c:	f10e 3eff 	add.w	lr, lr, #4294967295
 8017990:	f04f 0801 	mov.w	r8, #1
 8017994:	e7e3      	b.n	801795e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 8017996:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8017998:	4431      	add	r1, r6
 801799a:	4541      	cmp	r1, r8
 801799c:	4450      	add	r0, sl
 801799e:	ee37 7a24 	vadd.f32	s14, s14, s9
 80179a2:	ee77 7a84 	vadd.f32	s15, s15, s8
 80179a6:	ee76 6aa3 	vadd.f32	s13, s13, s7
 80179aa:	db08      	blt.n	80179be <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 80179ac:	ee76 6a85 	vadd.f32	s13, s13, s10
 80179b0:	ee37 7a25 	vadd.f32	s14, s14, s11
 80179b4:	ee77 7a86 	vadd.f32	s15, s15, s12
 80179b8:	3001      	adds	r0, #1
 80179ba:	eba1 0108 	sub.w	r1, r1, r8
 80179be:	3f01      	subs	r7, #1
 80179c0:	f04f 0901 	mov.w	r9, #1
 80179c4:	e79e      	b.n	8017904 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 80179c6:	449c      	add	ip, r3
 80179c8:	1aff      	subs	r7, r7, r3
 80179ca:	f1b8 0f00 	cmp.w	r8, #0
 80179ce:	d009      	beq.n	80179e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 80179d0:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 80179d4:	9019      	str	r0, [sp, #100]	; 0x64
 80179d6:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 80179da:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 80179de:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 80179e2:	911d      	str	r1, [sp, #116]	; 0x74
 80179e4:	1ad2      	subs	r2, r2, r3
 80179e6:	e6b5      	b.n	8017754 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 80179e8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80179ea:	681b      	ldr	r3, [r3, #0]
 80179ec:	b923      	cbnz	r3, 80179f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80179ee:	4b04      	ldr	r3, [pc, #16]	; (8017a00 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 80179f0:	6818      	ldr	r0, [r3, #0]
 80179f2:	6803      	ldr	r3, [r0, #0]
 80179f4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80179f6:	4798      	blx	r3
 80179f8:	b05b      	add	sp, #364	; 0x16c
 80179fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80179fe:	bf00      	nop
 8017a00:	2001383c 	.word	0x2001383c

08017a04 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 8017a04:	b570      	push	{r4, r5, r6, lr}
 8017a06:	4604      	mov	r4, r0
 8017a08:	f89d 601c 	ldrb.w	r6, [sp, #28]
 8017a0c:	9805      	ldr	r0, [sp, #20]
 8017a0e:	6061      	str	r1, [r4, #4]
 8017a10:	2500      	movs	r5, #0
 8017a12:	f89d 1010 	ldrb.w	r1, [sp, #16]
 8017a16:	8263      	strh	r3, [r4, #18]
 8017a18:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8017a1c:	8025      	strh	r5, [r4, #0]
 8017a1e:	7221      	strb	r1, [r4, #8]
 8017a20:	7266      	strb	r6, [r4, #9]
 8017a22:	60e0      	str	r0, [r4, #12]
 8017a24:	8222      	strh	r2, [r4, #16]
 8017a26:	82a3      	strh	r3, [r4, #20]
 8017a28:	82e5      	strh	r5, [r4, #22]
 8017a2a:	8325      	strh	r5, [r4, #24]
 8017a2c:	8365      	strh	r5, [r4, #26]
 8017a2e:	83a5      	strh	r5, [r4, #28]
 8017a30:	83e5      	strh	r5, [r4, #30]
 8017a32:	8425      	strh	r5, [r4, #32]
 8017a34:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 8017a38:	b32e      	cbz	r6, 8017a86 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8017a3a:	6803      	ldr	r3, [r0, #0]
 8017a3c:	695b      	ldr	r3, [r3, #20]
 8017a3e:	4798      	blx	r3
 8017a40:	4606      	mov	r6, r0
 8017a42:	b300      	cbz	r0, 8017a86 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8017a44:	68e0      	ldr	r0, [r4, #12]
 8017a46:	6803      	ldr	r3, [r0, #0]
 8017a48:	4631      	mov	r1, r6
 8017a4a:	68db      	ldr	r3, [r3, #12]
 8017a4c:	4798      	blx	r3
 8017a4e:	4605      	mov	r5, r0
 8017a50:	b1c8      	cbz	r0, 8017a86 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8017a52:	7b43      	ldrb	r3, [r0, #13]
 8017a54:	7a82      	ldrb	r2, [r0, #10]
 8017a56:	005b      	lsls	r3, r3, #1
 8017a58:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8017a5c:	4313      	orrs	r3, r2
 8017a5e:	8423      	strh	r3, [r4, #32]
 8017a60:	7a63      	ldrb	r3, [r4, #9]
 8017a62:	2b06      	cmp	r3, #6
 8017a64:	d10f      	bne.n	8017a86 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8017a66:	68e0      	ldr	r0, [r4, #12]
 8017a68:	6803      	ldr	r3, [r0, #0]
 8017a6a:	462a      	mov	r2, r5
 8017a6c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8017a6e:	4631      	mov	r1, r6
 8017a70:	4798      	blx	r3
 8017a72:	7b6b      	ldrb	r3, [r5, #13]
 8017a74:	005b      	lsls	r3, r3, #1
 8017a76:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8017a7a:	7aab      	ldrb	r3, [r5, #10]
 8017a7c:	4313      	orrs	r3, r2
 8017a7e:	4418      	add	r0, r3
 8017a80:	8c23      	ldrh	r3, [r4, #32]
 8017a82:	4418      	add	r0, r3
 8017a84:	8420      	strh	r0, [r4, #32]
 8017a86:	4620      	mov	r0, r4
 8017a88:	bd70      	pop	{r4, r5, r6, pc}

08017a8a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 8017a8a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017a8e:	2400      	movs	r4, #0
 8017a90:	b085      	sub	sp, #20
 8017a92:	4681      	mov	r9, r0
 8017a94:	4688      	mov	r8, r1
 8017a96:	4692      	mov	sl, r2
 8017a98:	469b      	mov	fp, r3
 8017a9a:	4627      	mov	r7, r4
 8017a9c:	4625      	mov	r5, r4
 8017a9e:	4626      	mov	r6, r4
 8017aa0:	4554      	cmp	r4, sl
 8017aa2:	da2a      	bge.n	8017afa <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8017aa4:	2300      	movs	r3, #0
 8017aa6:	9303      	str	r3, [sp, #12]
 8017aa8:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8017aac:	429d      	cmp	r5, r3
 8017aae:	d004      	beq.n	8017aba <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 8017ab0:	f242 030b 	movw	r3, #8203	; 0x200b
 8017ab4:	429d      	cmp	r5, r3
 8017ab6:	bf18      	it	ne
 8017ab8:	462f      	movne	r7, r5
 8017aba:	ab03      	add	r3, sp, #12
 8017abc:	4642      	mov	r2, r8
 8017abe:	4659      	mov	r1, fp
 8017ac0:	4648      	mov	r0, r9
 8017ac2:	f003 f9a3 	bl	801ae0c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8017ac6:	4605      	mov	r5, r0
 8017ac8:	b1b8      	cbz	r0, 8017afa <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8017aca:	280a      	cmp	r0, #10
 8017acc:	d015      	beq.n	8017afa <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8017ace:	9a03      	ldr	r2, [sp, #12]
 8017ad0:	b18a      	cbz	r2, 8017af6 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 8017ad2:	7b50      	ldrb	r0, [r2, #13]
 8017ad4:	7a93      	ldrb	r3, [r2, #10]
 8017ad6:	8895      	ldrh	r5, [r2, #4]
 8017ad8:	0040      	lsls	r0, r0, #1
 8017ada:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8017ade:	4303      	orrs	r3, r0
 8017ae0:	9301      	str	r3, [sp, #4]
 8017ae2:	f8d8 3000 	ldr.w	r3, [r8]
 8017ae6:	4639      	mov	r1, r7
 8017ae8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8017aea:	4640      	mov	r0, r8
 8017aec:	4798      	blx	r3
 8017aee:	9b01      	ldr	r3, [sp, #4]
 8017af0:	4418      	add	r0, r3
 8017af2:	4406      	add	r6, r0
 8017af4:	b2b6      	uxth	r6, r6
 8017af6:	3401      	adds	r4, #1
 8017af8:	e7d2      	b.n	8017aa0 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 8017afa:	4630      	mov	r0, r6
 8017afc:	b005      	add	sp, #20
 8017afe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08017b02 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 8017b02:	2a02      	cmp	r2, #2
 8017b04:	b530      	push	{r4, r5, lr}
 8017b06:	d011      	beq.n	8017b2c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 8017b08:	2a03      	cmp	r2, #3
 8017b0a:	d01c      	beq.n	8017b46 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 8017b0c:	2a01      	cmp	r2, #1
 8017b0e:	d10c      	bne.n	8017b2a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8017b10:	888b      	ldrh	r3, [r1, #4]
 8017b12:	8801      	ldrh	r1, [r0, #0]
 8017b14:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 8017b18:	8844      	ldrh	r4, [r0, #2]
 8017b1a:	8004      	strh	r4, [r0, #0]
 8017b1c:	1a5b      	subs	r3, r3, r1
 8017b1e:	1a9b      	subs	r3, r3, r2
 8017b20:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8017b24:	8043      	strh	r3, [r0, #2]
 8017b26:	8081      	strh	r1, [r0, #4]
 8017b28:	80c2      	strh	r2, [r0, #6]
 8017b2a:	bd30      	pop	{r4, r5, pc}
 8017b2c:	88cb      	ldrh	r3, [r1, #6]
 8017b2e:	8842      	ldrh	r2, [r0, #2]
 8017b30:	1a9b      	subs	r3, r3, r2
 8017b32:	88c2      	ldrh	r2, [r0, #6]
 8017b34:	1a9b      	subs	r3, r3, r2
 8017b36:	888a      	ldrh	r2, [r1, #4]
 8017b38:	8801      	ldrh	r1, [r0, #0]
 8017b3a:	8043      	strh	r3, [r0, #2]
 8017b3c:	1a52      	subs	r2, r2, r1
 8017b3e:	8881      	ldrh	r1, [r0, #4]
 8017b40:	1a52      	subs	r2, r2, r1
 8017b42:	8002      	strh	r2, [r0, #0]
 8017b44:	e7f1      	b.n	8017b2a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8017b46:	88cb      	ldrh	r3, [r1, #6]
 8017b48:	8841      	ldrh	r1, [r0, #2]
 8017b4a:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8017b4e:	f9b0 5000 	ldrsh.w	r5, [r0]
 8017b52:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8017b56:	8045      	strh	r5, [r0, #2]
 8017b58:	1a5b      	subs	r3, r3, r1
 8017b5a:	1a9b      	subs	r3, r3, r2
 8017b5c:	8003      	strh	r3, [r0, #0]
 8017b5e:	8082      	strh	r2, [r0, #4]
 8017b60:	80c4      	strh	r4, [r0, #6]
 8017b62:	e7e2      	b.n	8017b2a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

08017b64 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 8017b64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017b68:	b09f      	sub	sp, #124	; 0x7c
 8017b6a:	9116      	str	r1, [sp, #88]	; 0x58
 8017b6c:	9317      	str	r3, [sp, #92]	; 0x5c
 8017b6e:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8017b70:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8017b72:	8809      	ldrh	r1, [r1, #0]
 8017b74:	889b      	ldrh	r3, [r3, #4]
 8017b76:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 8017b7a:	9212      	str	r2, [sp, #72]	; 0x48
 8017b7c:	440b      	add	r3, r1
 8017b7e:	b21b      	sxth	r3, r3
 8017b80:	9310      	str	r3, [sp, #64]	; 0x40
 8017b82:	f8d8 3000 	ldr.w	r3, [r8]
 8017b86:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 8017b8a:	7b19      	ldrb	r1, [r3, #12]
 8017b8c:	7adb      	ldrb	r3, [r3, #11]
 8017b8e:	9011      	str	r0, [sp, #68]	; 0x44
 8017b90:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 8017b94:	9114      	str	r1, [sp, #80]	; 0x50
 8017b96:	9315      	str	r3, [sp, #84]	; 0x54
 8017b98:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	; 0xa0
 8017b9c:	2a00      	cmp	r2, #0
 8017b9e:	d06a      	beq.n	8017c76 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 8017ba0:	f898 3010 	ldrb.w	r3, [r8, #16]
 8017ba4:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8017ba6:	2b06      	cmp	r3, #6
 8017ba8:	bf14      	ite	ne
 8017baa:	2301      	movne	r3, #1
 8017bac:	2302      	moveq	r3, #2
 8017bae:	4413      	add	r3, r2
 8017bb0:	f04f 0900 	mov.w	r9, #0
 8017bb4:	930f      	str	r3, [sp, #60]	; 0x3c
 8017bb6:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 8017bba:	464c      	mov	r4, r9
 8017bbc:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8017bc0:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 8017bc4:	4293      	cmp	r3, r2
 8017bc6:	f280 808f 	bge.w	8017ce8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8017bca:	2300      	movs	r3, #0
 8017bcc:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 8017bd0:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 8017bd4:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8017bd8:	429c      	cmp	r4, r3
 8017bda:	d006      	beq.n	8017bea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 8017bdc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017bde:	f242 020b 	movw	r2, #8203	; 0x200b
 8017be2:	4294      	cmp	r4, r2
 8017be4:	bf18      	it	ne
 8017be6:	4623      	movne	r3, r4
 8017be8:	930d      	str	r3, [sp, #52]	; 0x34
 8017bea:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017bec:	992d      	ldr	r1, [sp, #180]	; 0xb4
 8017bee:	f8d8 2000 	ldr.w	r2, [r8]
 8017bf2:	428b      	cmp	r3, r1
 8017bf4:	db41      	blt.n	8017c7a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 8017bf6:	6813      	ldr	r3, [r2, #0]
 8017bf8:	4610      	mov	r0, r2
 8017bfa:	695b      	ldr	r3, [r3, #20]
 8017bfc:	4798      	blx	r3
 8017bfe:	4604      	mov	r4, r0
 8017c00:	f8d8 0000 	ldr.w	r0, [r8]
 8017c04:	6803      	ldr	r3, [r0, #0]
 8017c06:	aa1d      	add	r2, sp, #116	; 0x74
 8017c08:	689d      	ldr	r5, [r3, #8]
 8017c0a:	4621      	mov	r1, r4
 8017c0c:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8017c10:	47a8      	blx	r5
 8017c12:	901c      	str	r0, [sp, #112]	; 0x70
 8017c14:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8017c18:	429c      	cmp	r4, r3
 8017c1a:	f000 80eb 	beq.w	8017df4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8017c1e:	f242 030b 	movw	r3, #8203	; 0x200b
 8017c22:	429c      	cmp	r4, r3
 8017c24:	f000 80e6 	beq.w	8017df4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8017c28:	2c00      	cmp	r4, #0
 8017c2a:	f000 80f8 	beq.w	8017e1e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8017c2e:	2c0a      	cmp	r4, #10
 8017c30:	d060      	beq.n	8017cf4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8017c32:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8017c34:	b36a      	cbz	r2, 8017c92 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 8017c36:	8894      	ldrh	r4, [r2, #4]
 8017c38:	f1bb 0f00 	cmp.w	fp, #0
 8017c3c:	d03b      	beq.n	8017cb6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 8017c3e:	f892 900d 	ldrb.w	r9, [r2, #13]
 8017c42:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8017c46:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8017c4a:	f892 900a 	ldrb.w	r9, [r2, #10]
 8017c4e:	f1bb 0f01 	cmp.w	fp, #1
 8017c52:	ea49 0903 	orr.w	r9, r9, r3
 8017c56:	d134      	bne.n	8017cc2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 8017c58:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017c5a:	eba6 0609 	sub.w	r6, r6, r9
 8017c5e:	2b00      	cmp	r3, #0
 8017c60:	d14f      	bne.n	8017d02 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8017c62:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8017c64:	eb09 0306 	add.w	r3, r9, r6
 8017c68:	4413      	add	r3, r2
 8017c6a:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8017c6c:	f9b2 2000 	ldrsh.w	r2, [r2]
 8017c70:	4293      	cmp	r3, r2
 8017c72:	da51      	bge.n	8017d18 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8017c74:	e038      	b.n	8017ce8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8017c76:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8017c78:	e79a      	b.n	8017bb0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 8017c7a:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8017c7e:	9301      	str	r3, [sp, #4]
 8017c80:	ab1d      	add	r3, sp, #116	; 0x74
 8017c82:	9300      	str	r3, [sp, #0]
 8017c84:	4659      	mov	r1, fp
 8017c86:	ab1c      	add	r3, sp, #112	; 0x70
 8017c88:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8017c8a:	f003 f908 	bl	801ae9e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 8017c8e:	4604      	mov	r4, r0
 8017c90:	e7c0      	b.n	8017c14 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 8017c92:	f8d8 0000 	ldr.w	r0, [r8]
 8017c96:	6803      	ldr	r3, [r0, #0]
 8017c98:	691b      	ldr	r3, [r3, #16]
 8017c9a:	4798      	blx	r3
 8017c9c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8017ca0:	4298      	cmp	r0, r3
 8017ca2:	f000 80a7 	beq.w	8017df4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8017ca6:	f242 030b 	movw	r3, #8203	; 0x200b
 8017caa:	4298      	cmp	r0, r3
 8017cac:	f000 80a2 	beq.w	8017df4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8017cb0:	f1bb 0f00 	cmp.w	fp, #0
 8017cb4:	d100      	bne.n	8017cb8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 8017cb6:	444e      	add	r6, r9
 8017cb8:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8017cba:	2a00      	cmp	r2, #0
 8017cbc:	d1bf      	bne.n	8017c3e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 8017cbe:	4691      	mov	r9, r2
 8017cc0:	e098      	b.n	8017df4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8017cc2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017cc4:	2b00      	cmp	r3, #0
 8017cc6:	f000 80ac 	beq.w	8017e22 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2be>
 8017cca:	f1bb 0f00 	cmp.w	fp, #0
 8017cce:	d118      	bne.n	8017d02 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8017cd0:	f8d8 0000 	ldr.w	r0, [r8]
 8017cd4:	990d      	ldr	r1, [sp, #52]	; 0x34
 8017cd6:	6803      	ldr	r3, [r0, #0]
 8017cd8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8017cda:	4798      	blx	r3
 8017cdc:	4406      	add	r6, r0
 8017cde:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8017ce0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8017ce2:	1af3      	subs	r3, r6, r3
 8017ce4:	4293      	cmp	r3, r2
 8017ce6:	dd17      	ble.n	8017d18 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8017ce8:	2c00      	cmp	r4, #0
 8017cea:	f000 8098 	beq.w	8017e1e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8017cee:	2c0a      	cmp	r4, #10
 8017cf0:	f040 8086 	bne.w	8017e00 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
 8017cf4:	240a      	movs	r4, #10
 8017cf6:	fab4 f084 	clz	r0, r4
 8017cfa:	0940      	lsrs	r0, r0, #5
 8017cfc:	b01f      	add	sp, #124	; 0x7c
 8017cfe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017d02:	f8d8 0000 	ldr.w	r0, [r8]
 8017d06:	990d      	ldr	r1, [sp, #52]	; 0x34
 8017d08:	6803      	ldr	r3, [r0, #0]
 8017d0a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8017d0c:	4798      	blx	r3
 8017d0e:	f1bb 0f01 	cmp.w	fp, #1
 8017d12:	eba6 0600 	sub.w	r6, r6, r0
 8017d16:	d0a4      	beq.n	8017c62 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 8017d18:	981c      	ldr	r0, [sp, #112]	; 0x70
 8017d1a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8017d1c:	f990 1009 	ldrsb.w	r1, [r0, #9]
 8017d20:	f9b3 7000 	ldrsh.w	r7, [r3]
 8017d24:	7b43      	ldrb	r3, [r0, #13]
 8017d26:	015b      	lsls	r3, r3, #5
 8017d28:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8017d2c:	7983      	ldrb	r3, [r0, #6]
 8017d2e:	4431      	add	r1, r6
 8017d30:	4313      	orrs	r3, r2
 8017d32:	440b      	add	r3, r1
 8017d34:	42bb      	cmp	r3, r7
 8017d36:	db5d      	blt.n	8017df4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8017d38:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017d3a:	4299      	cmp	r1, r3
 8017d3c:	da5a      	bge.n	8017df4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8017d3e:	f8d8 0000 	ldr.w	r0, [r8]
 8017d42:	6803      	ldr	r3, [r0, #0]
 8017d44:	42b7      	cmp	r7, r6
 8017d46:	bfc8      	it	gt
 8017d48:	1bbf      	subgt	r7, r7, r6
 8017d4a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8017d4c:	bfcc      	ite	gt
 8017d4e:	b2bf      	uxthgt	r7, r7
 8017d50:	2700      	movle	r7, #0
 8017d52:	4798      	blx	r3
 8017d54:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8017d56:	7b5a      	ldrb	r2, [r3, #13]
 8017d58:	00d1      	lsls	r1, r2, #3
 8017d5a:	f401 7580 	and.w	r5, r1, #256	; 0x100
 8017d5e:	7a19      	ldrb	r1, [r3, #8]
 8017d60:	4329      	orrs	r1, r5
 8017d62:	0655      	lsls	r5, r2, #25
 8017d64:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 8017d66:	bf44      	itt	mi
 8017d68:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 8017d6c:	b209      	sxthmi	r1, r1
 8017d6e:	1945      	adds	r5, r0, r5
 8017d70:	1a6d      	subs	r5, r5, r1
 8017d72:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8017d74:	b2ad      	uxth	r5, r5
 8017d76:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 8017d7a:	fa0f fa85 	sxth.w	sl, r5
 8017d7e:	4551      	cmp	r1, sl
 8017d80:	dd3c      	ble.n	8017dfc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 8017d82:	0112      	lsls	r2, r2, #4
 8017d84:	79d8      	ldrb	r0, [r3, #7]
 8017d86:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8017d8a:	4302      	orrs	r2, r0
 8017d8c:	4492      	add	sl, r2
 8017d8e:	4551      	cmp	r1, sl
 8017d90:	dc30      	bgt.n	8017df4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8017d92:	1b4d      	subs	r5, r1, r5
 8017d94:	b22d      	sxth	r5, r5
 8017d96:	468a      	mov	sl, r1
 8017d98:	9319      	str	r3, [sp, #100]	; 0x64
 8017d9a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8017d9c:	f8d8 0000 	ldr.w	r0, [r8]
 8017da0:	681a      	ldr	r2, [r3, #0]
 8017da2:	6801      	ldr	r1, [r0, #0]
 8017da4:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 8017da6:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8017da8:	9313      	str	r3, [sp, #76]	; 0x4c
 8017daa:	9218      	str	r2, [sp, #96]	; 0x60
 8017dac:	6c09      	ldr	r1, [r1, #64]	; 0x40
 8017dae:	4788      	blx	r1
 8017db0:	f898 1006 	ldrb.w	r1, [r8, #6]
 8017db4:	910b      	str	r1, [sp, #44]	; 0x2c
 8017db6:	f898 100e 	ldrb.w	r1, [r8, #14]
 8017dba:	910a      	str	r1, [sp, #40]	; 0x28
 8017dbc:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 8017dc0:	9109      	str	r1, [sp, #36]	; 0x24
 8017dc2:	f8d8 1008 	ldr.w	r1, [r8, #8]
 8017dc6:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8017dc8:	9305      	str	r3, [sp, #20]
 8017dca:	b2ad      	uxth	r5, r5
 8017dcc:	e9cd 0107 	strd	r0, r1, [sp, #28]
 8017dd0:	e9cd 7502 	strd	r7, r5, [sp, #8]
 8017dd4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8017dd6:	9304      	str	r3, [sp, #16]
 8017dd8:	4437      	add	r7, r6
 8017dda:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8017ddc:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8017dde:	9206      	str	r2, [sp, #24]
 8017de0:	b23f      	sxth	r7, r7
 8017de2:	f8cd a004 	str.w	sl, [sp, #4]
 8017de6:	9700      	str	r7, [sp, #0]
 8017de8:	681a      	ldr	r2, [r3, #0]
 8017dea:	9916      	ldr	r1, [sp, #88]	; 0x58
 8017dec:	685b      	ldr	r3, [r3, #4]
 8017dee:	9811      	ldr	r0, [sp, #68]	; 0x44
 8017df0:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8017df2:	47a8      	blx	r5
 8017df4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017df6:	3301      	adds	r3, #1
 8017df8:	930e      	str	r3, [sp, #56]	; 0x38
 8017dfa:	e6e1      	b.n	8017bc0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 8017dfc:	2500      	movs	r5, #0
 8017dfe:	e7cb      	b.n	8017d98 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 8017e00:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8017e02:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8017e04:	3501      	adds	r5, #1
 8017e06:	429d      	cmp	r5, r3
 8017e08:	f6bf af75 	bge.w	8017cf6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8017e0c:	4659      	mov	r1, fp
 8017e0e:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8017e10:	f7f2 fbb0 	bl	800a574 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8017e14:	4604      	mov	r4, r0
 8017e16:	b110      	cbz	r0, 8017e1e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8017e18:	280a      	cmp	r0, #10
 8017e1a:	d1f2      	bne.n	8017e02 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29e>
 8017e1c:	e76a      	b.n	8017cf4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8017e1e:	2400      	movs	r4, #0
 8017e20:	e769      	b.n	8017cf6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8017e22:	f1bb 0f00 	cmp.w	fp, #0
 8017e26:	f43f af5a 	beq.w	8017cde <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 8017e2a:	e775      	b.n	8017d18 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

08017e2c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 8017e2c:	b530      	push	{r4, r5, lr}
 8017e2e:	8ac4      	ldrh	r4, [r0, #22]
 8017e30:	8b45      	ldrh	r5, [r0, #26]
 8017e32:	8343      	strh	r3, [r0, #26]
 8017e34:	442c      	add	r4, r5
 8017e36:	1ae4      	subs	r4, r4, r3
 8017e38:	82c4      	strh	r4, [r0, #22]
 8017e3a:	8b83      	ldrh	r3, [r0, #28]
 8017e3c:	8b04      	ldrh	r4, [r0, #24]
 8017e3e:	4422      	add	r2, r4
 8017e40:	440c      	add	r4, r1
 8017e42:	1a59      	subs	r1, r3, r1
 8017e44:	83c2      	strh	r2, [r0, #30]
 8017e46:	8304      	strh	r4, [r0, #24]
 8017e48:	8381      	strh	r1, [r0, #28]
 8017e4a:	bd30      	pop	{r4, r5, pc}

08017e4c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 8017e4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017e50:	4604      	mov	r4, r0
 8017e52:	8a47      	ldrh	r7, [r0, #18]
 8017e54:	68c0      	ldr	r0, [r0, #12]
 8017e56:	6803      	ldr	r3, [r0, #0]
 8017e58:	b085      	sub	sp, #20
 8017e5a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017e5c:	4798      	blx	r3
 8017e5e:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 8017e62:	7a63      	ldrb	r3, [r4, #9]
 8017e64:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 8017e68:	42b7      	cmp	r7, r6
 8017e6a:	f103 33ff 	add.w	r3, r3, #4294967295
 8017e6e:	bfac      	ite	ge
 8017e70:	f04f 0900 	movge.w	r9, #0
 8017e74:	f04f 0901 	movlt.w	r9, #1
 8017e78:	2b05      	cmp	r3, #5
 8017e7a:	d804      	bhi.n	8017e86 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3a>
 8017e7c:	e8df f003 	tbb	[pc, r3]
 8017e80:	470e0854 	.word	0x470e0854
 8017e84:	4c4c      	.short	0x4c4c
 8017e86:	2500      	movs	r5, #0
 8017e88:	46a9      	mov	r9, r5
 8017e8a:	462e      	mov	r6, r5
 8017e8c:	462f      	mov	r7, r5
 8017e8e:	e00d      	b.n	8017eac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8017e90:	42b7      	cmp	r7, r6
 8017e92:	bfb4      	ite	lt
 8017e94:	2600      	movlt	r6, #0
 8017e96:	2601      	movge	r6, #1
 8017e98:	2500      	movs	r5, #0
 8017e9a:	e7f7      	b.n	8017e8c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 8017e9c:	42b7      	cmp	r7, r6
 8017e9e:	464d      	mov	r5, r9
 8017ea0:	f04f 0900 	mov.w	r9, #0
 8017ea4:	bfb4      	ite	lt
 8017ea6:	2600      	movlt	r6, #0
 8017ea8:	2601      	movge	r6, #1
 8017eaa:	464f      	mov	r7, r9
 8017eac:	f04f 0800 	mov.w	r8, #0
 8017eb0:	f8a4 8016 	strh.w	r8, [r4, #22]
 8017eb4:	f8a4 8018 	strh.w	r8, [r4, #24]
 8017eb8:	f8cd 8004 	str.w	r8, [sp, #4]
 8017ebc:	2300      	movs	r3, #0
 8017ebe:	9303      	str	r3, [sp, #12]
 8017ec0:	8823      	ldrh	r3, [r4, #0]
 8017ec2:	2b20      	cmp	r3, #32
 8017ec4:	d034      	beq.n	8017f30 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe4>
 8017ec6:	f242 010b 	movw	r1, #8203	; 0x200b
 8017eca:	1a5a      	subs	r2, r3, r1
 8017ecc:	f1d2 0a00 	rsbs	sl, r2, #0
 8017ed0:	eb4a 0a02 	adc.w	sl, sl, r2
 8017ed4:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8017ed8:	4293      	cmp	r3, r2
 8017eda:	d009      	beq.n	8017ef0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 8017edc:	428b      	cmp	r3, r1
 8017ede:	9a01      	ldr	r2, [sp, #4]
 8017ee0:	bf18      	it	ne
 8017ee2:	461a      	movne	r2, r3
 8017ee4:	9201      	str	r2, [sp, #4]
 8017ee6:	bf0c      	ite	eq
 8017ee8:	f04f 0a01 	moveq.w	sl, #1
 8017eec:	f04f 0a00 	movne.w	sl, #0
 8017ef0:	ab03      	add	r3, sp, #12
 8017ef2:	68e2      	ldr	r2, [r4, #12]
 8017ef4:	7a21      	ldrb	r1, [r4, #8]
 8017ef6:	6860      	ldr	r0, [r4, #4]
 8017ef8:	f002 ff88 	bl	801ae0c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8017efc:	8020      	strh	r0, [r4, #0]
 8017efe:	b9d8      	cbnz	r0, 8017f38 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xec>
 8017f00:	8ba2      	ldrh	r2, [r4, #28]
 8017f02:	2300      	movs	r3, #0
 8017f04:	4611      	mov	r1, r2
 8017f06:	4620      	mov	r0, r4
 8017f08:	f7ff ff90 	bl	8017e2c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8017f0c:	e06e      	b.n	8017fec <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 8017f0e:	2500      	movs	r5, #0
 8017f10:	46a9      	mov	r9, r5
 8017f12:	462e      	mov	r6, r5
 8017f14:	2701      	movs	r7, #1
 8017f16:	e7c9      	b.n	8017eac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8017f18:	42b7      	cmp	r7, r6
 8017f1a:	f04f 0500 	mov.w	r5, #0
 8017f1e:	bfb4      	ite	lt
 8017f20:	2700      	movlt	r7, #0
 8017f22:	2701      	movge	r7, #1
 8017f24:	462e      	mov	r6, r5
 8017f26:	e7c1      	b.n	8017eac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8017f28:	2500      	movs	r5, #0
 8017f2a:	46a9      	mov	r9, r5
 8017f2c:	2601      	movs	r6, #1
 8017f2e:	e7ad      	b.n	8017e8c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 8017f30:	9301      	str	r3, [sp, #4]
 8017f32:	f04f 0a01 	mov.w	sl, #1
 8017f36:	e7db      	b.n	8017ef0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 8017f38:	8b63      	ldrh	r3, [r4, #26]
 8017f3a:	280a      	cmp	r0, #10
 8017f3c:	f103 0301 	add.w	r3, r3, #1
 8017f40:	8363      	strh	r3, [r4, #26]
 8017f42:	d0dd      	beq.n	8017f00 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb4>
 8017f44:	9a03      	ldr	r2, [sp, #12]
 8017f46:	bb62      	cbnz	r2, 8017fa2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x156>
 8017f48:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8017f4c:	4298      	cmp	r0, r3
 8017f4e:	d003      	beq.n	8017f58 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 8017f50:	f242 030b 	movw	r3, #8203	; 0x200b
 8017f54:	4298      	cmp	r0, r3
 8017f56:	d1b1      	bne.n	8017ebc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8017f58:	8823      	ldrh	r3, [r4, #0]
 8017f5a:	8ba1      	ldrh	r1, [r4, #28]
 8017f5c:	2b20      	cmp	r3, #32
 8017f5e:	d003      	beq.n	8017f68 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11c>
 8017f60:	f242 000b 	movw	r0, #8203	; 0x200b
 8017f64:	4283      	cmp	r3, r0
 8017f66:	d131      	bne.n	8017fcc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x180>
 8017f68:	f1ba 0f00 	cmp.w	sl, #0
 8017f6c:	bf0a      	itet	eq
 8017f6e:	4688      	moveq	r8, r1
 8017f70:	4650      	movne	r0, sl
 8017f72:	2001      	moveq	r0, #1
 8017f74:	440a      	add	r2, r1
 8017f76:	8b23      	ldrh	r3, [r4, #24]
 8017f78:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 8017f7c:	b292      	uxth	r2, r2
 8017f7e:	83a2      	strh	r2, [r4, #28]
 8017f80:	4413      	add	r3, r2
 8017f82:	f1b9 0f00 	cmp.w	r9, #0
 8017f86:	d102      	bne.n	8017f8e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x142>
 8017f88:	2d00      	cmp	r5, #0
 8017f8a:	d042      	beq.n	8018012 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c6>
 8017f8c:	b300      	cbz	r0, 8017fd0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x184>
 8017f8e:	8c21      	ldrh	r1, [r4, #32]
 8017f90:	4419      	add	r1, r3
 8017f92:	458c      	cmp	ip, r1
 8017f94:	da37      	bge.n	8018006 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 8017f96:	8ae1      	ldrh	r1, [r4, #22]
 8017f98:	2900      	cmp	r1, #0
 8017f9a:	d034      	beq.n	8018006 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 8017f9c:	4563      	cmp	r3, ip
 8017f9e:	dd8d      	ble.n	8017ebc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8017fa0:	e01d      	b.n	8017fde <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x192>
 8017fa2:	8893      	ldrh	r3, [r2, #4]
 8017fa4:	8023      	strh	r3, [r4, #0]
 8017fa6:	f892 b00d 	ldrb.w	fp, [r2, #13]
 8017faa:	9901      	ldr	r1, [sp, #4]
 8017fac:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 8017fb0:	f40b 7080 	and.w	r0, fp, #256	; 0x100
 8017fb4:	f892 b00a 	ldrb.w	fp, [r2, #10]
 8017fb8:	ea4b 0b00 	orr.w	fp, fp, r0
 8017fbc:	68e0      	ldr	r0, [r4, #12]
 8017fbe:	6803      	ldr	r3, [r0, #0]
 8017fc0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8017fc2:	4798      	blx	r3
 8017fc4:	eb0b 0200 	add.w	r2, fp, r0
 8017fc8:	b292      	uxth	r2, r2
 8017fca:	e7c5      	b.n	8017f58 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 8017fcc:	2000      	movs	r0, #0
 8017fce:	e7d1      	b.n	8017f74 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x128>
 8017fd0:	4563      	cmp	r3, ip
 8017fd2:	f77f af73 	ble.w	8017ebc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8017fd6:	8ae3      	ldrh	r3, [r4, #22]
 8017fd8:	2b00      	cmp	r3, #0
 8017fda:	f43f af6f 	beq.w	8017ebc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8017fde:	2301      	movs	r3, #1
 8017fe0:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
 8017fe4:	8c22      	ldrh	r2, [r4, #32]
 8017fe6:	8be3      	ldrh	r3, [r4, #30]
 8017fe8:	4413      	add	r3, r2
 8017fea:	83e3      	strh	r3, [r4, #30]
 8017fec:	68e0      	ldr	r0, [r4, #12]
 8017fee:	6803      	ldr	r3, [r0, #0]
 8017ff0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017ff2:	4798      	blx	r3
 8017ff4:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 8017ff8:	4418      	add	r0, r3
 8017ffa:	8a63      	ldrh	r3, [r4, #18]
 8017ffc:	1a18      	subs	r0, r3, r0
 8017ffe:	8260      	strh	r0, [r4, #18]
 8018000:	b005      	add	sp, #20
 8018002:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018006:	2300      	movs	r3, #0
 8018008:	4611      	mov	r1, r2
 801800a:	4620      	mov	r0, r4
 801800c:	f7ff ff0e 	bl	8017e2c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8018010:	e754      	b.n	8017ebc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8018012:	4563      	cmp	r3, ip
 8018014:	dd14      	ble.n	8018040 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f4>
 8018016:	b117      	cbz	r7, 801801e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d2>
 8018018:	2301      	movs	r3, #1
 801801a:	460a      	mov	r2, r1
 801801c:	e772      	b.n	8017f04 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 801801e:	2e00      	cmp	r6, #0
 8018020:	f43f af4c 	beq.w	8017ebc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8018024:	2800      	cmp	r0, #0
 8018026:	f47f af49 	bne.w	8017ebc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801802a:	f1ba 0f00 	cmp.w	sl, #0
 801802e:	d002      	beq.n	8018036 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ea>
 8018030:	2301      	movs	r3, #1
 8018032:	4642      	mov	r2, r8
 8018034:	e767      	b.n	8017f06 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xba>
 8018036:	8ae3      	ldrh	r3, [r4, #22]
 8018038:	2b00      	cmp	r3, #0
 801803a:	f43f af3f 	beq.w	8017ebc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801803e:	e7d5      	b.n	8017fec <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 8018040:	2800      	cmp	r0, #0
 8018042:	f47f af3b 	bne.w	8017ebc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8018046:	f1ba 0f00 	cmp.w	sl, #0
 801804a:	f43f af37 	beq.w	8017ebc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801804e:	2301      	movs	r3, #1
 8018050:	4642      	mov	r2, r8
 8018052:	e7da      	b.n	801800a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1be>

08018054 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 8018054:	b5f0      	push	{r4, r5, r6, r7, lr}
 8018056:	4605      	mov	r5, r0
 8018058:	b08f      	sub	sp, #60	; 0x3c
 801805a:	4617      	mov	r7, r2
 801805c:	461c      	mov	r4, r3
 801805e:	460e      	mov	r6, r1
 8018060:	b1d1      	cbz	r1, 8018098 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 8018062:	681b      	ldr	r3, [r3, #0]
 8018064:	4620      	mov	r0, r4
 8018066:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8018068:	4798      	blx	r3
 801806a:	4240      	negs	r0, r0
 801806c:	b200      	sxth	r0, r0
 801806e:	e9cd 4001 	strd	r4, r0, [sp, #4]
 8018072:	9603      	str	r6, [sp, #12]
 8018074:	9700      	str	r7, [sp, #0]
 8018076:	f64f 73ff 	movw	r3, #65535	; 0xffff
 801807a:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 801807e:	4629      	mov	r1, r5
 8018080:	a805      	add	r0, sp, #20
 8018082:	f7ff fcbf 	bl	8017a04 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8018086:	2401      	movs	r4, #1
 8018088:	a805      	add	r0, sp, #20
 801808a:	f7ff fedf 	bl	8017e4c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 801808e:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8018092:	b163      	cbz	r3, 80180ae <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 8018094:	3401      	adds	r4, #1
 8018096:	e7f7      	b.n	8018088 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 8018098:	f002 ff86 	bl	801afa8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801809c:	2401      	movs	r4, #1
 801809e:	280a      	cmp	r0, #10
 80180a0:	4628      	mov	r0, r5
 80180a2:	bf08      	it	eq
 80180a4:	3401      	addeq	r4, #1
 80180a6:	f002 ff7f 	bl	801afa8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80180aa:	2800      	cmp	r0, #0
 80180ac:	d1f7      	bne.n	801809e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 80180ae:	b2a0      	uxth	r0, r4
 80180b0:	b00f      	add	sp, #60	; 0x3c
 80180b2:	bdf0      	pop	{r4, r5, r6, r7, pc}

080180b4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 80180b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80180b8:	b0e3      	sub	sp, #396	; 0x18c
 80180ba:	461c      	mov	r4, r3
 80180bc:	9b6c      	ldr	r3, [sp, #432]	; 0x1b0
 80180be:	4683      	mov	fp, r0
 80180c0:	4688      	mov	r8, r1
 80180c2:	2b00      	cmp	r3, #0
 80180c4:	f000 8112 	beq.w	80182ec <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80180c8:	6823      	ldr	r3, [r4, #0]
 80180ca:	2b00      	cmp	r3, #0
 80180cc:	f000 810e 	beq.w	80182ec <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80180d0:	7ba3      	ldrb	r3, [r4, #14]
 80180d2:	2b00      	cmp	r3, #0
 80180d4:	f000 810a 	beq.w	80182ec <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80180d8:	6810      	ldr	r0, [r2, #0]
 80180da:	6851      	ldr	r1, [r2, #4]
 80180dc:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 80180e0:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 80180e4:	ad0a      	add	r5, sp, #40	; 0x28
 80180e6:	462b      	mov	r3, r5
 80180e8:	c303      	stmia	r3!, {r0, r1}
 80180ea:	2100      	movs	r1, #0
 80180ec:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 80180f0:	910c      	str	r1, [sp, #48]	; 0x30
 80180f2:	79a2      	ldrb	r2, [r4, #6]
 80180f4:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80180f8:	a90c      	add	r1, sp, #48	; 0x30
 80180fa:	4628      	mov	r0, r5
 80180fc:	f7ff fd01 	bl	8017b02 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8018100:	a90c      	add	r1, sp, #48	; 0x30
 8018102:	4608      	mov	r0, r1
 8018104:	79a2      	ldrb	r2, [r4, #6]
 8018106:	f7ff fcfc 	bl	8017b02 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 801810a:	a817      	add	r0, sp, #92	; 0x5c
 801810c:	f002 fb20 	bl	801a750 <_ZN8touchgfx12TextProviderC1Ev>
 8018110:	6820      	ldr	r0, [r4, #0]
 8018112:	6803      	ldr	r3, [r0, #0]
 8018114:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8018116:	4798      	blx	r3
 8018118:	4606      	mov	r6, r0
 801811a:	6820      	ldr	r0, [r4, #0]
 801811c:	6803      	ldr	r3, [r0, #0]
 801811e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8018120:	4798      	blx	r3
 8018122:	4633      	mov	r3, r6
 8018124:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 8018126:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 8018128:	9000      	str	r0, [sp, #0]
 801812a:	a817      	add	r0, sp, #92	; 0x5c
 801812c:	f002 fb6b 	bl	801a806 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8018130:	6820      	ldr	r0, [r4, #0]
 8018132:	f894 a004 	ldrb.w	sl, [r4, #4]
 8018136:	6803      	ldr	r3, [r0, #0]
 8018138:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801813a:	4798      	blx	r3
 801813c:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 8018140:	6823      	ldr	r3, [r4, #0]
 8018142:	4607      	mov	r7, r0
 8018144:	4406      	add	r6, r0
 8018146:	a830      	add	r0, sp, #192	; 0xc0
 8018148:	f893 9009 	ldrb.w	r9, [r3, #9]
 801814c:	f002 fb00 	bl	801a750 <_ZN8touchgfx12TextProviderC1Ev>
 8018150:	7c23      	ldrb	r3, [r4, #16]
 8018152:	b17b      	cbz	r3, 8018174 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 8018154:	6820      	ldr	r0, [r4, #0]
 8018156:	6803      	ldr	r3, [r0, #0]
 8018158:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801815a:	4798      	blx	r3
 801815c:	9009      	str	r0, [sp, #36]	; 0x24
 801815e:	6820      	ldr	r0, [r4, #0]
 8018160:	6802      	ldr	r2, [r0, #0]
 8018162:	6d12      	ldr	r2, [r2, #80]	; 0x50
 8018164:	4790      	blx	r2
 8018166:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018168:	9000      	str	r0, [sp, #0]
 801816a:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 801816c:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 801816e:	a830      	add	r0, sp, #192	; 0xc0
 8018170:	f002 fb49 	bl	801a806 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8018174:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8018178:	7be2      	ldrb	r2, [r4, #15]
 801817a:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 801817e:	1a8a      	subs	r2, r1, r2
 8018180:	7c21      	ldrb	r1, [r4, #16]
 8018182:	9103      	str	r1, [sp, #12]
 8018184:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8018188:	9102      	str	r1, [sp, #8]
 801818a:	6821      	ldr	r1, [r4, #0]
 801818c:	9101      	str	r1, [sp, #4]
 801818e:	7961      	ldrb	r1, [r4, #5]
 8018190:	9100      	str	r1, [sp, #0]
 8018192:	b292      	uxth	r2, r2
 8018194:	a930      	add	r1, sp, #192	; 0xc0
 8018196:	a80e      	add	r0, sp, #56	; 0x38
 8018198:	f7ff fc34 	bl	8017a04 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 801819c:	2e00      	cmp	r6, #0
 801819e:	dc5b      	bgt.n	8018258 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 80181a0:	af17      	add	r7, sp, #92	; 0x5c
 80181a2:	f04f 0900 	mov.w	r9, #0
 80181a6:	7c23      	ldrb	r3, [r4, #16]
 80181a8:	2b00      	cmp	r3, #0
 80181aa:	f000 80b1 	beq.w	8018310 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 80181ae:	a80e      	add	r0, sp, #56	; 0x38
 80181b0:	f7ff fe4c 	bl	8017e4c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 80181b4:	f1ba 0f00 	cmp.w	sl, #0
 80181b8:	f000 80a5 	beq.w	8018306 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 80181bc:	7c23      	ldrb	r3, [r4, #16]
 80181be:	9309      	str	r3, [sp, #36]	; 0x24
 80181c0:	2264      	movs	r2, #100	; 0x64
 80181c2:	4639      	mov	r1, r7
 80181c4:	a849      	add	r0, sp, #292	; 0x124
 80181c6:	f015 feee 	bl	802dfa6 <memcpy>
 80181ca:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80181cc:	2b00      	cmp	r3, #0
 80181ce:	f000 80a7 	beq.w	8018320 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 80181d2:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 80181d6:	7922      	ldrb	r2, [r4, #4]
 80181d8:	2a01      	cmp	r2, #1
 80181da:	f040 808a 	bne.w	80182f2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 80181de:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	; 0x34
 80181e2:	1ac0      	subs	r0, r0, r3
 80181e4:	2302      	movs	r3, #2
 80181e6:	fb90 f0f3 	sdiv	r0, r0, r3
 80181ea:	b200      	sxth	r0, r0
 80181ec:	7c23      	ldrb	r3, [r4, #16]
 80181ee:	2b00      	cmp	r3, #0
 80181f0:	f000 808b 	beq.w	801830a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 80181f4:	f8bd 204e 	ldrh.w	r2, [sp, #78]	; 0x4e
 80181f8:	f89d 105a 	ldrb.w	r1, [sp, #90]	; 0x5a
 80181fc:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8018200:	e9cd 2105 	strd	r2, r1, [sp, #20]
 8018204:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 8018208:	4410      	add	r0, r2
 801820a:	b200      	sxth	r0, r0
 801820c:	9000      	str	r0, [sp, #0]
 801820e:	e9cd 9703 	strd	r9, r7, [sp, #12]
 8018212:	e9cd 5401 	strd	r5, r4, [sp, #4]
 8018216:	4642      	mov	r2, r8
 8018218:	2100      	movs	r1, #0
 801821a:	4658      	mov	r0, fp
 801821c:	f7ff fca2 	bl	8017b64 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 8018220:	2800      	cmp	r0, #0
 8018222:	d163      	bne.n	80182ec <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8018224:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8018228:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 801822c:	b2b2      	uxth	r2, r6
 801822e:	4413      	add	r3, r2
 8018230:	1a8a      	subs	r2, r1, r2
 8018232:	f8ad 2036 	strh.w	r2, [sp, #54]	; 0x36
 8018236:	f89d 205a 	ldrb.w	r2, [sp, #90]	; 0x5a
 801823a:	b21b      	sxth	r3, r3
 801823c:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8018240:	2a00      	cmp	r2, #0
 8018242:	d153      	bne.n	80182ec <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8018244:	6822      	ldr	r2, [r4, #0]
 8018246:	8869      	ldrh	r1, [r5, #2]
 8018248:	7a12      	ldrb	r2, [r2, #8]
 801824a:	1a9b      	subs	r3, r3, r2
 801824c:	88ea      	ldrh	r2, [r5, #6]
 801824e:	440a      	add	r2, r1
 8018250:	b212      	sxth	r2, r2
 8018252:	4293      	cmp	r3, r2
 8018254:	dda7      	ble.n	80181a6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 8018256:	e049      	b.n	80182ec <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8018258:	7c23      	ldrb	r3, [r4, #16]
 801825a:	444f      	add	r7, r9
 801825c:	b1c3      	cbz	r3, 8018290 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 801825e:	f64f 79ff 	movw	r9, #65535	; 0xffff
 8018262:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8018266:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801826a:	443b      	add	r3, r7
 801826c:	4293      	cmp	r3, r2
 801826e:	da97      	bge.n	80181a0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8018270:	a80e      	add	r0, sp, #56	; 0x38
 8018272:	f7ff fdeb 	bl	8017e4c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8018276:	f8bd 304e 	ldrh.w	r3, [sp, #78]	; 0x4e
 801827a:	3b01      	subs	r3, #1
 801827c:	b29b      	uxth	r3, r3
 801827e:	454b      	cmp	r3, r9
 8018280:	9309      	str	r3, [sp, #36]	; 0x24
 8018282:	d021      	beq.n	80182c8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 8018284:	7961      	ldrb	r1, [r4, #5]
 8018286:	a817      	add	r0, sp, #92	; 0x5c
 8018288:	f7f2 f974 	bl	800a574 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801828c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801828e:	e7f4      	b.n	801827a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 8018290:	fa1f f986 	uxth.w	r9, r6
 8018294:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8018298:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801829c:	443b      	add	r3, r7
 801829e:	4293      	cmp	r3, r2
 80182a0:	f6bf af7e 	bge.w	80181a0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 80182a4:	a817      	add	r0, sp, #92	; 0x5c
 80182a6:	f002 fe7f 	bl	801afa8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80182aa:	b1f8      	cbz	r0, 80182ec <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80182ac:	280a      	cmp	r0, #10
 80182ae:	d1f1      	bne.n	8018294 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 80182b0:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 80182b4:	444b      	add	r3, r9
 80182b6:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 80182ba:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 80182be:	eba3 0309 	sub.w	r3, r3, r9
 80182c2:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80182c6:	e7e5      	b.n	8018294 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 80182c8:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 80182cc:	b2b3      	uxth	r3, r6
 80182ce:	441a      	add	r2, r3
 80182d0:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 80182d4:	f8bd 2036 	ldrh.w	r2, [sp, #54]	; 0x36
 80182d8:	1ad3      	subs	r3, r2, r3
 80182da:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80182de:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80182e2:	b11b      	cbz	r3, 80182ec <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80182e4:	f89d 305a 	ldrb.w	r3, [sp, #90]	; 0x5a
 80182e8:	2b00      	cmp	r3, #0
 80182ea:	d0ba      	beq.n	8018262 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 80182ec:	b063      	add	sp, #396	; 0x18c
 80182ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80182f2:	2a02      	cmp	r2, #2
 80182f4:	d105      	bne.n	8018302 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 80182f6:	7be2      	ldrb	r2, [r4, #15]
 80182f8:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 80182fc:	1a80      	subs	r0, r0, r2
 80182fe:	1ac0      	subs	r0, r0, r3
 8018300:	e773      	b.n	80181ea <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 8018302:	2000      	movs	r0, #0
 8018304:	e772      	b.n	80181ec <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 8018306:	7be0      	ldrb	r0, [r4, #15]
 8018308:	e770      	b.n	80181ec <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 801830a:	f647 72ff 	movw	r2, #32767	; 0x7fff
 801830e:	e773      	b.n	80181f8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 8018310:	f1ba 0f00 	cmp.w	sl, #0
 8018314:	d0f7      	beq.n	8018306 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8018316:	2264      	movs	r2, #100	; 0x64
 8018318:	4639      	mov	r1, r7
 801831a:	a849      	add	r0, sp, #292	; 0x124
 801831c:	f015 fe43 	bl	802dfa6 <memcpy>
 8018320:	2300      	movs	r3, #0
 8018322:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8018326:	6821      	ldr	r1, [r4, #0]
 8018328:	a849      	add	r0, sp, #292	; 0x124
 801832a:	f7ff fbae 	bl	8017a8a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 801832e:	b203      	sxth	r3, r0
 8018330:	e751      	b.n	80181d6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

08018332 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 8018332:	2b03      	cmp	r3, #3
 8018334:	d818      	bhi.n	8018368 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 8018336:	e8df f003 	tbb	[pc, r3]
 801833a:	0602      	.short	0x0602
 801833c:	130d      	.short	0x130d
 801833e:	f9b0 2000 	ldrsh.w	r2, [r0]
 8018342:	1850      	adds	r0, r2, r1
 8018344:	4770      	bx	lr
 8018346:	8803      	ldrh	r3, [r0, #0]
 8018348:	8880      	ldrh	r0, [r0, #4]
 801834a:	4418      	add	r0, r3
 801834c:	b200      	sxth	r0, r0
 801834e:	1a80      	subs	r0, r0, r2
 8018350:	3801      	subs	r0, #1
 8018352:	4770      	bx	lr
 8018354:	8803      	ldrh	r3, [r0, #0]
 8018356:	8880      	ldrh	r0, [r0, #4]
 8018358:	4418      	add	r0, r3
 801835a:	b200      	sxth	r0, r0
 801835c:	1a40      	subs	r0, r0, r1
 801835e:	e7f7      	b.n	8018350 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 8018360:	f9b0 0000 	ldrsh.w	r0, [r0]
 8018364:	4410      	add	r0, r2
 8018366:	4770      	bx	lr
 8018368:	2000      	movs	r0, #0
 801836a:	4770      	bx	lr

0801836c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 801836c:	2b03      	cmp	r3, #3
 801836e:	d817      	bhi.n	80183a0 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 8018370:	e8df f003 	tbb	[pc, r3]
 8018374:	10090602 	.word	0x10090602
 8018378:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 801837c:	1850      	adds	r0, r2, r1
 801837e:	4770      	bx	lr
 8018380:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8018384:	e7fa      	b.n	801837c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 8018386:	8843      	ldrh	r3, [r0, #2]
 8018388:	88c0      	ldrh	r0, [r0, #6]
 801838a:	4418      	add	r0, r3
 801838c:	b200      	sxth	r0, r0
 801838e:	1a80      	subs	r0, r0, r2
 8018390:	3801      	subs	r0, #1
 8018392:	4770      	bx	lr
 8018394:	8843      	ldrh	r3, [r0, #2]
 8018396:	88c0      	ldrh	r0, [r0, #6]
 8018398:	4418      	add	r0, r3
 801839a:	b200      	sxth	r0, r0
 801839c:	1a40      	subs	r0, r0, r1
 801839e:	e7f7      	b.n	8018390 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 80183a0:	2000      	movs	r0, #0
 80183a2:	4770      	bx	lr

080183a4 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 80183a4:	4b01      	ldr	r3, [pc, #4]	; (80183ac <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 80183a6:	2200      	movs	r2, #0
 80183a8:	601a      	str	r2, [r3, #0]
 80183aa:	4770      	bx	lr
 80183ac:	2001384c 	.word	0x2001384c

080183b0 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 80183b0:	4603      	mov	r3, r0
 80183b2:	b1c8      	cbz	r0, 80183e8 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 80183b4:	0c02      	lsrs	r2, r0, #16
 80183b6:	0412      	lsls	r2, r2, #16
 80183b8:	b9a2      	cbnz	r2, 80183e4 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 80183ba:	0403      	lsls	r3, r0, #16
 80183bc:	2010      	movs	r0, #16
 80183be:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 80183c2:	bf04      	itt	eq
 80183c4:	021b      	lsleq	r3, r3, #8
 80183c6:	3008      	addeq	r0, #8
 80183c8:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 80183cc:	bf04      	itt	eq
 80183ce:	011b      	lsleq	r3, r3, #4
 80183d0:	3004      	addeq	r0, #4
 80183d2:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 80183d6:	bf04      	itt	eq
 80183d8:	009b      	lsleq	r3, r3, #2
 80183da:	3002      	addeq	r0, #2
 80183dc:	2b00      	cmp	r3, #0
 80183de:	db04      	blt.n	80183ea <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 80183e0:	3001      	adds	r0, #1
 80183e2:	4770      	bx	lr
 80183e4:	2000      	movs	r0, #0
 80183e6:	e7ea      	b.n	80183be <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 80183e8:	2020      	movs	r0, #32
 80183ea:	4770      	bx	lr

080183ec <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 80183ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80183f0:	b087      	sub	sp, #28
 80183f2:	460d      	mov	r5, r1
 80183f4:	4616      	mov	r6, r2
 80183f6:	4698      	mov	r8, r3
 80183f8:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 80183fc:	4601      	mov	r1, r0
 80183fe:	b120      	cbz	r0, 801840a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8018400:	b11a      	cbz	r2, 801840a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8018402:	2d1f      	cmp	r5, #31
 8018404:	d801      	bhi.n	801840a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8018406:	2b1f      	cmp	r3, #31
 8018408:	d904      	bls.n	8018414 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 801840a:	2000      	movs	r0, #0
 801840c:	6038      	str	r0, [r7, #0]
 801840e:	b007      	add	sp, #28
 8018410:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018414:	b97d      	cbnz	r5, 8018436 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 8018416:	b143      	cbz	r3, 801842a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 8018418:	4602      	mov	r2, r0
 801841a:	e9cd 4700 	strd	r4, r7, [sp]
 801841e:	462b      	mov	r3, r5
 8018420:	4641      	mov	r1, r8
 8018422:	4630      	mov	r0, r6
 8018424:	f7ff ffe2 	bl	80183ec <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8018428:	e7f1      	b.n	801840e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 801842a:	f04f 33ff 	mov.w	r3, #4294967295
 801842e:	603b      	str	r3, [r7, #0]
 8018430:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8018434:	e7eb      	b.n	801840e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8018436:	fa32 fa05 	lsrs.w	sl, r2, r5
 801843a:	d106      	bne.n	801844a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 801843c:	4346      	muls	r6, r0
 801843e:	fbb6 f0f4 	udiv	r0, r6, r4
 8018442:	fb04 6610 	mls	r6, r4, r0, r6
 8018446:	603e      	str	r6, [r7, #0]
 8018448:	e7e1      	b.n	801840e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 801844a:	2201      	movs	r2, #1
 801844c:	40aa      	lsls	r2, r5
 801844e:	3a01      	subs	r2, #1
 8018450:	4016      	ands	r6, r2
 8018452:	fa00 fb05 	lsl.w	fp, r0, r5
 8018456:	4630      	mov	r0, r6
 8018458:	fbbb f9f4 	udiv	r9, fp, r4
 801845c:	fb0a f309 	mul.w	r3, sl, r9
 8018460:	9303      	str	r3, [sp, #12]
 8018462:	f7ff ffa5 	bl	80183b0 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8018466:	462b      	mov	r3, r5
 8018468:	460a      	mov	r2, r1
 801846a:	e9cd 4700 	strd	r4, r7, [sp]
 801846e:	4601      	mov	r1, r0
 8018470:	4630      	mov	r0, r6
 8018472:	f7ff ffbb 	bl	80183ec <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8018476:	fb04 b919 	mls	r9, r4, r9, fp
 801847a:	4606      	mov	r6, r0
 801847c:	4648      	mov	r0, r9
 801847e:	eb05 0108 	add.w	r1, r5, r8
 8018482:	f7ff ff95 	bl	80183b0 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8018486:	ab05      	add	r3, sp, #20
 8018488:	e9cd 4300 	strd	r4, r3, [sp]
 801848c:	464a      	mov	r2, r9
 801848e:	4603      	mov	r3, r0
 8018490:	4650      	mov	r0, sl
 8018492:	f7ff ffab 	bl	80183ec <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8018496:	6839      	ldr	r1, [r7, #0]
 8018498:	9a05      	ldr	r2, [sp, #20]
 801849a:	9b03      	ldr	r3, [sp, #12]
 801849c:	4411      	add	r1, r2
 801849e:	fbb1 f2f4 	udiv	r2, r1, r4
 80184a2:	18d3      	adds	r3, r2, r3
 80184a4:	441e      	add	r6, r3
 80184a6:	fb04 1412 	mls	r4, r4, r2, r1
 80184aa:	4430      	add	r0, r6
 80184ac:	603c      	str	r4, [r7, #0]
 80184ae:	e7ae      	b.n	801840e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

080184b0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 80184b0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80184b4:	b085      	sub	sp, #20
 80184b6:	f1b0 0900 	subs.w	r9, r0, #0
 80184ba:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80184bc:	461d      	mov	r5, r3
 80184be:	bfbf      	itttt	lt
 80184c0:	6823      	ldrlt	r3, [r4, #0]
 80184c2:	425b      	neglt	r3, r3
 80184c4:	f1c9 0900 	rsblt	r9, r9, #0
 80184c8:	6023      	strlt	r3, [r4, #0]
 80184ca:	bfb4      	ite	lt
 80184cc:	f04f 36ff 	movlt.w	r6, #4294967295
 80184d0:	2601      	movge	r6, #1
 80184d2:	2a00      	cmp	r2, #0
 80184d4:	4617      	mov	r7, r2
 80184d6:	da04      	bge.n	80184e2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 80184d8:	6823      	ldr	r3, [r4, #0]
 80184da:	425b      	negs	r3, r3
 80184dc:	4257      	negs	r7, r2
 80184de:	4276      	negs	r6, r6
 80184e0:	6023      	str	r3, [r4, #0]
 80184e2:	2d00      	cmp	r5, #0
 80184e4:	4638      	mov	r0, r7
 80184e6:	bfba      	itte	lt
 80184e8:	426d      	neglt	r5, r5
 80184ea:	f04f 38ff 	movlt.w	r8, #4294967295
 80184ee:	f04f 0801 	movge.w	r8, #1
 80184f2:	f7ff ff5d 	bl	80183b0 <_ZN8touchgfx16TouchCalibration4clzuEm>
 80184f6:	ab03      	add	r3, sp, #12
 80184f8:	e9cd 5300 	strd	r5, r3, [sp]
 80184fc:	463a      	mov	r2, r7
 80184fe:	4603      	mov	r3, r0
 8018500:	4648      	mov	r0, r9
 8018502:	f7ff ff73 	bl	80183ec <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8018506:	6823      	ldr	r3, [r4, #0]
 8018508:	9a03      	ldr	r2, [sp, #12]
 801850a:	4546      	cmp	r6, r8
 801850c:	441a      	add	r2, r3
 801850e:	fb92 f3f5 	sdiv	r3, r2, r5
 8018512:	4418      	add	r0, r3
 8018514:	bf18      	it	ne
 8018516:	4240      	negne	r0, r0
 8018518:	fb05 2313 	mls	r3, r5, r3, r2
 801851c:	1c72      	adds	r2, r6, #1
 801851e:	6023      	str	r3, [r4, #0]
 8018520:	d105      	bne.n	801852e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 8018522:	2b00      	cmp	r3, #0
 8018524:	f1c3 0200 	rsb	r2, r3, #0
 8018528:	db0b      	blt.n	8018542 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 801852a:	6022      	str	r2, [r4, #0]
 801852c:	e006      	b.n	801853c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 801852e:	2e01      	cmp	r6, #1
 8018530:	d104      	bne.n	801853c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8018532:	2b00      	cmp	r3, #0
 8018534:	da02      	bge.n	801853c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8018536:	442b      	add	r3, r5
 8018538:	3801      	subs	r0, #1
 801853a:	6023      	str	r3, [r4, #0]
 801853c:	b005      	add	sp, #20
 801853e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8018542:	3801      	subs	r0, #1
 8018544:	1b52      	subs	r2, r2, r5
 8018546:	e7f0      	b.n	801852a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

08018548 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 8018548:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801854c:	4c1c      	ldr	r4, [pc, #112]	; (80185c0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 801854e:	6807      	ldr	r7, [r0, #0]
 8018550:	69a3      	ldr	r3, [r4, #24]
 8018552:	4605      	mov	r5, r0
 8018554:	b92b      	cbnz	r3, 8018562 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 8018556:	6840      	ldr	r0, [r0, #4]
 8018558:	e9c5 7000 	strd	r7, r0, [r5]
 801855c:	b004      	add	sp, #16
 801855e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8018562:	68a2      	ldr	r2, [r4, #8]
 8018564:	6820      	ldr	r0, [r4, #0]
 8018566:	ae04      	add	r6, sp, #16
 8018568:	f04f 0802 	mov.w	r8, #2
 801856c:	fb93 f1f8 	sdiv	r1, r3, r8
 8018570:	440a      	add	r2, r1
 8018572:	f846 2d04 	str.w	r2, [r6, #-4]!
 8018576:	69e1      	ldr	r1, [r4, #28]
 8018578:	9600      	str	r6, [sp, #0]
 801857a:	463a      	mov	r2, r7
 801857c:	f7ff ff98 	bl	80184b0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8018580:	69a3      	ldr	r3, [r4, #24]
 8018582:	686a      	ldr	r2, [r5, #4]
 8018584:	6a21      	ldr	r1, [r4, #32]
 8018586:	9600      	str	r6, [sp, #0]
 8018588:	4607      	mov	r7, r0
 801858a:	6860      	ldr	r0, [r4, #4]
 801858c:	f7ff ff90 	bl	80184b0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8018590:	6962      	ldr	r2, [r4, #20]
 8018592:	69a3      	ldr	r3, [r4, #24]
 8018594:	fb93 f8f8 	sdiv	r8, r3, r8
 8018598:	4442      	add	r2, r8
 801859a:	9203      	str	r2, [sp, #12]
 801859c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 801859e:	682a      	ldr	r2, [r5, #0]
 80185a0:	9600      	str	r6, [sp, #0]
 80185a2:	4407      	add	r7, r0
 80185a4:	68e0      	ldr	r0, [r4, #12]
 80185a6:	f7ff ff83 	bl	80184b0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80185aa:	9600      	str	r6, [sp, #0]
 80185ac:	4680      	mov	r8, r0
 80185ae:	69a3      	ldr	r3, [r4, #24]
 80185b0:	686a      	ldr	r2, [r5, #4]
 80185b2:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 80185b4:	6920      	ldr	r0, [r4, #16]
 80185b6:	f7ff ff7b 	bl	80184b0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80185ba:	4440      	add	r0, r8
 80185bc:	e7cc      	b.n	8018558 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 80185be:	bf00      	nop
 80185c0:	20013850 	.word	0x20013850

080185c4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 80185c4:	4b07      	ldr	r3, [pc, #28]	; (80185e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 80185c6:	781b      	ldrb	r3, [r3, #0]
 80185c8:	2b01      	cmp	r3, #1
 80185ca:	d109      	bne.n	80185e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 80185cc:	f9b1 3000 	ldrsh.w	r3, [r1]
 80185d0:	f9b0 2000 	ldrsh.w	r2, [r0]
 80185d4:	8003      	strh	r3, [r0, #0]
 80185d6:	4b04      	ldr	r3, [pc, #16]	; (80185e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 80185d8:	881b      	ldrh	r3, [r3, #0]
 80185da:	3b01      	subs	r3, #1
 80185dc:	1a9b      	subs	r3, r3, r2
 80185de:	800b      	strh	r3, [r1, #0]
 80185e0:	4770      	bx	lr
 80185e2:	bf00      	nop
 80185e4:	20013834 	.word	0x20013834
 80185e8:	20013830 	.word	0x20013830

080185ec <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 80185ec:	b510      	push	{r4, lr}
 80185ee:	4b07      	ldr	r3, [pc, #28]	; (801860c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 80185f0:	781b      	ldrb	r3, [r3, #0]
 80185f2:	2b01      	cmp	r3, #1
 80185f4:	d108      	bne.n	8018608 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 80185f6:	4b06      	ldr	r3, [pc, #24]	; (8018610 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 80185f8:	880c      	ldrh	r4, [r1, #0]
 80185fa:	881b      	ldrh	r3, [r3, #0]
 80185fc:	f9b0 2000 	ldrsh.w	r2, [r0]
 8018600:	3b01      	subs	r3, #1
 8018602:	1b1b      	subs	r3, r3, r4
 8018604:	8003      	strh	r3, [r0, #0]
 8018606:	800a      	strh	r2, [r1, #0]
 8018608:	bd10      	pop	{r4, pc}
 801860a:	bf00      	nop
 801860c:	20013834 	.word	0x20013834
 8018610:	20013830 	.word	0x20013830

08018614 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 8018614:	b510      	push	{r4, lr}
 8018616:	4b0a      	ldr	r3, [pc, #40]	; (8018640 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 8018618:	781b      	ldrb	r3, [r3, #0]
 801861a:	2b01      	cmp	r3, #1
 801861c:	d10e      	bne.n	801863c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 801861e:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8018622:	8843      	ldrh	r3, [r0, #2]
 8018624:	f9b0 4000 	ldrsh.w	r4, [r0]
 8018628:	8044      	strh	r4, [r0, #2]
 801862a:	18ca      	adds	r2, r1, r3
 801862c:	4b05      	ldr	r3, [pc, #20]	; (8018644 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 801862e:	881b      	ldrh	r3, [r3, #0]
 8018630:	1a9b      	subs	r3, r3, r2
 8018632:	8003      	strh	r3, [r0, #0]
 8018634:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8018638:	80c3      	strh	r3, [r0, #6]
 801863a:	8081      	strh	r1, [r0, #4]
 801863c:	bd10      	pop	{r4, pc}
 801863e:	bf00      	nop
 8018640:	20013834 	.word	0x20013834
 8018644:	20013830 	.word	0x20013830

08018648 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 8018648:	4b08      	ldr	r3, [pc, #32]	; (801866c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 801864a:	781b      	ldrb	r3, [r3, #0]
 801864c:	2b01      	cmp	r3, #1
 801864e:	d10c      	bne.n	801866a <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 8018650:	8803      	ldrh	r3, [r0, #0]
 8018652:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 8018656:	8842      	ldrh	r2, [r0, #2]
 8018658:	8002      	strh	r2, [r0, #0]
 801865a:	185a      	adds	r2, r3, r1
 801865c:	4b04      	ldr	r3, [pc, #16]	; (8018670 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 801865e:	881b      	ldrh	r3, [r3, #0]
 8018660:	1a9b      	subs	r3, r3, r2
 8018662:	8043      	strh	r3, [r0, #2]
 8018664:	88c3      	ldrh	r3, [r0, #6]
 8018666:	8083      	strh	r3, [r0, #4]
 8018668:	80c1      	strh	r1, [r0, #6]
 801866a:	4770      	bx	lr
 801866c:	20013834 	.word	0x20013834
 8018670:	20013830 	.word	0x20013830

08018674 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8018674:	b510      	push	{r4, lr}
 8018676:	4b07      	ldr	r3, [pc, #28]	; (8018694 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 8018678:	781b      	ldrb	r3, [r3, #0]
 801867a:	2b01      	cmp	r3, #1
 801867c:	d108      	bne.n	8018690 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 801867e:	f9b1 3000 	ldrsh.w	r3, [r1]
 8018682:	f9b0 4000 	ldrsh.w	r4, [r0]
 8018686:	8003      	strh	r3, [r0, #0]
 8018688:	8893      	ldrh	r3, [r2, #4]
 801868a:	3b01      	subs	r3, #1
 801868c:	1b1b      	subs	r3, r3, r4
 801868e:	800b      	strh	r3, [r1, #0]
 8018690:	bd10      	pop	{r4, pc}
 8018692:	bf00      	nop
 8018694:	20013834 	.word	0x20013834

08018698 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
 8018698:	4b0b      	ldr	r3, [pc, #44]	; (80186c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
 801869a:	781b      	ldrb	r3, [r3, #0]
 801869c:	2b01      	cmp	r3, #1
 801869e:	d111      	bne.n	80186c4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
 80186a0:	680b      	ldr	r3, [r1, #0]
 80186a2:	ed90 7a00 	vldr	s14, [r0]
 80186a6:	6003      	str	r3, [r0, #0]
 80186a8:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 80186ac:	eddf 6a07 	vldr	s13, [pc, #28]	; 80186cc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
 80186b0:	ee07 3a90 	vmov	s15, r3
 80186b4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80186b8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80186bc:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80186c0:	edc1 7a00 	vstr	s15, [r1]
 80186c4:	4770      	bx	lr
 80186c6:	bf00      	nop
 80186c8:	20013834 	.word	0x20013834
 80186cc:	38d1b717 	.word	0x38d1b717

080186d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 80186d0:	b510      	push	{r4, lr}
 80186d2:	4b0a      	ldr	r3, [pc, #40]	; (80186fc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 80186d4:	781b      	ldrb	r3, [r3, #0]
 80186d6:	2b01      	cmp	r3, #1
 80186d8:	460a      	mov	r2, r1
 80186da:	d10d      	bne.n	80186f8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 80186dc:	8881      	ldrh	r1, [r0, #4]
 80186de:	8803      	ldrh	r3, [r0, #0]
 80186e0:	440b      	add	r3, r1
 80186e2:	4601      	mov	r1, r0
 80186e4:	3b01      	subs	r3, #1
 80186e6:	f821 3b02 	strh.w	r3, [r1], #2
 80186ea:	f7ff ffc3 	bl	8018674 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 80186ee:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80186f2:	88c2      	ldrh	r2, [r0, #6]
 80186f4:	8082      	strh	r2, [r0, #4]
 80186f6:	80c3      	strh	r3, [r0, #6]
 80186f8:	bd10      	pop	{r4, pc}
 80186fa:	bf00      	nop
 80186fc:	20013834 	.word	0x20013834

08018700 <_ZN8touchgfx11Application13requestRedrawEv>:
 8018700:	4b06      	ldr	r3, [pc, #24]	; (801871c <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 8018702:	f9b3 2000 	ldrsh.w	r2, [r3]
 8018706:	4b06      	ldr	r3, [pc, #24]	; (8018720 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 8018708:	f8a0 2134 	strh.w	r2, [r0, #308]	; 0x134
 801870c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8018710:	f8a0 3136 	strh.w	r3, [r0, #310]	; 0x136
 8018714:	2100      	movs	r1, #0
 8018716:	f8c0 1130 	str.w	r1, [r0, #304]	; 0x130
 801871a:	4770      	bx	lr
 801871c:	20013830 	.word	0x20013830
 8018720:	20013832 	.word	0x20013832

08018724 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 8018724:	4b03      	ldr	r3, [pc, #12]	; (8018734 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 8018726:	6818      	ldr	r0, [r3, #0]
 8018728:	b110      	cbz	r0, 8018730 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 801872a:	6803      	ldr	r3, [r0, #0]
 801872c:	699b      	ldr	r3, [r3, #24]
 801872e:	4718      	bx	r3
 8018730:	4770      	bx	lr
 8018732:	bf00      	nop
 8018734:	20013880 	.word	0x20013880

08018738 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 8018738:	4770      	bx	lr
	...

0801873c <_ZN8touchgfx11Application4drawEv>:
 801873c:	b507      	push	{r0, r1, r2, lr}
 801873e:	4b09      	ldr	r3, [pc, #36]	; (8018764 <_ZN8touchgfx11Application4drawEv+0x28>)
 8018740:	f9b3 2000 	ldrsh.w	r2, [r3]
 8018744:	4b08      	ldr	r3, [pc, #32]	; (8018768 <_ZN8touchgfx11Application4drawEv+0x2c>)
 8018746:	f8ad 2004 	strh.w	r2, [sp, #4]
 801874a:	f9b3 3000 	ldrsh.w	r3, [r3]
 801874e:	f8ad 3006 	strh.w	r3, [sp, #6]
 8018752:	6803      	ldr	r3, [r0, #0]
 8018754:	2100      	movs	r1, #0
 8018756:	9100      	str	r1, [sp, #0]
 8018758:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801875a:	4669      	mov	r1, sp
 801875c:	4798      	blx	r3
 801875e:	b003      	add	sp, #12
 8018760:	f85d fb04 	ldr.w	pc, [sp], #4
 8018764:	20013830 	.word	0x20013830
 8018768:	20013832 	.word	0x20013832

0801876c <_ZN8touchgfx11Application10invalidateEv>:
 801876c:	4b09      	ldr	r3, [pc, #36]	; (8018794 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 801876e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8018772:	4b09      	ldr	r3, [pc, #36]	; (8018798 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 8018774:	b082      	sub	sp, #8
 8018776:	f9b3 3000 	ldrsh.w	r3, [r3]
 801877a:	f8ad 2004 	strh.w	r2, [sp, #4]
 801877e:	2100      	movs	r1, #0
 8018780:	f8ad 3006 	strh.w	r3, [sp, #6]
 8018784:	9100      	str	r1, [sp, #0]
 8018786:	6803      	ldr	r3, [r0, #0]
 8018788:	aa02      	add	r2, sp, #8
 801878a:	e912 0006 	ldmdb	r2, {r1, r2}
 801878e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8018790:	b002      	add	sp, #8
 8018792:	4718      	bx	r3
 8018794:	20013830 	.word	0x20013830
 8018798:	20013832 	.word	0x20013832

0801879c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 801879c:	4b03      	ldr	r3, [pc, #12]	; (80187ac <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 801879e:	6818      	ldr	r0, [r3, #0]
 80187a0:	b110      	cbz	r0, 80187a8 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 80187a2:	6803      	ldr	r3, [r0, #0]
 80187a4:	69db      	ldr	r3, [r3, #28]
 80187a6:	4718      	bx	r3
 80187a8:	4770      	bx	lr
 80187aa:	bf00      	nop
 80187ac:	20013880 	.word	0x20013880

080187b0 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 80187b0:	4b03      	ldr	r3, [pc, #12]	; (80187c0 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 80187b2:	6818      	ldr	r0, [r3, #0]
 80187b4:	b110      	cbz	r0, 80187bc <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 80187b6:	6803      	ldr	r3, [r0, #0]
 80187b8:	6a1b      	ldr	r3, [r3, #32]
 80187ba:	4718      	bx	r3
 80187bc:	4770      	bx	lr
 80187be:	bf00      	nop
 80187c0:	20013880 	.word	0x20013880

080187c4 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 80187c4:	2300      	movs	r3, #0
 80187c6:	f8a0 30ec 	strh.w	r3, [r0, #236]	; 0xec
 80187ca:	4770      	bx	lr

080187cc <_ZN8touchgfx11Application14handleKeyEventEh>:
 80187cc:	4b03      	ldr	r3, [pc, #12]	; (80187dc <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 80187ce:	6818      	ldr	r0, [r3, #0]
 80187d0:	b110      	cbz	r0, 80187d8 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 80187d2:	6803      	ldr	r3, [r0, #0]
 80187d4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80187d6:	4718      	bx	r3
 80187d8:	4770      	bx	lr
 80187da:	bf00      	nop
 80187dc:	20013880 	.word	0x20013880

080187e0 <_ZN8touchgfx11ApplicationD1Ev>:
 80187e0:	4770      	bx	lr

080187e2 <_ZN8touchgfx11ApplicationD0Ev>:
 80187e2:	b510      	push	{r4, lr}
 80187e4:	f44f 719e 	mov.w	r1, #316	; 0x13c
 80187e8:	4604      	mov	r4, r0
 80187ea:	f014 f9ca 	bl	802cb82 <_ZdlPvj>
 80187ee:	4620      	mov	r0, r4
 80187f0:	bd10      	pop	{r4, pc}

080187f2 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 80187f2:	b510      	push	{r4, lr}
 80187f4:	f9b1 4000 	ldrsh.w	r4, [r1]
 80187f8:	888a      	ldrh	r2, [r1, #4]
 80187fa:	f9b0 3000 	ldrsh.w	r3, [r0]
 80187fe:	4422      	add	r2, r4
 8018800:	b212      	sxth	r2, r2
 8018802:	4293      	cmp	r3, r2
 8018804:	da15      	bge.n	8018832 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8018806:	8882      	ldrh	r2, [r0, #4]
 8018808:	4413      	add	r3, r2
 801880a:	b21b      	sxth	r3, r3
 801880c:	429c      	cmp	r4, r3
 801880e:	da10      	bge.n	8018832 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8018810:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8018814:	88c9      	ldrh	r1, [r1, #6]
 8018816:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 801881a:	4419      	add	r1, r3
 801881c:	b209      	sxth	r1, r1
 801881e:	428a      	cmp	r2, r1
 8018820:	da07      	bge.n	8018832 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8018822:	88c0      	ldrh	r0, [r0, #6]
 8018824:	4410      	add	r0, r2
 8018826:	b200      	sxth	r0, r0
 8018828:	4283      	cmp	r3, r0
 801882a:	bfac      	ite	ge
 801882c:	2000      	movge	r0, #0
 801882e:	2001      	movlt	r0, #1
 8018830:	bd10      	pop	{r4, pc}
 8018832:	2000      	movs	r0, #0
 8018834:	e7fc      	b.n	8018830 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

08018836 <_ZN8touchgfx4Rect10restrictToEss>:
 8018836:	f9b0 3000 	ldrsh.w	r3, [r0]
 801883a:	2b00      	cmp	r3, #0
 801883c:	b510      	push	{r4, lr}
 801883e:	da04      	bge.n	801884a <_ZN8touchgfx4Rect10restrictToEss+0x14>
 8018840:	8884      	ldrh	r4, [r0, #4]
 8018842:	4423      	add	r3, r4
 8018844:	8083      	strh	r3, [r0, #4]
 8018846:	2300      	movs	r3, #0
 8018848:	8003      	strh	r3, [r0, #0]
 801884a:	f9b0 4000 	ldrsh.w	r4, [r0]
 801884e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8018852:	1b09      	subs	r1, r1, r4
 8018854:	428b      	cmp	r3, r1
 8018856:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 801885a:	bfc8      	it	gt
 801885c:	8081      	strhgt	r1, [r0, #4]
 801885e:	2b00      	cmp	r3, #0
 8018860:	da04      	bge.n	801886c <_ZN8touchgfx4Rect10restrictToEss+0x36>
 8018862:	88c1      	ldrh	r1, [r0, #6]
 8018864:	440b      	add	r3, r1
 8018866:	80c3      	strh	r3, [r0, #6]
 8018868:	2300      	movs	r3, #0
 801886a:	8043      	strh	r3, [r0, #2]
 801886c:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8018870:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8018874:	1a52      	subs	r2, r2, r1
 8018876:	4293      	cmp	r3, r2
 8018878:	bfc8      	it	gt
 801887a:	80c2      	strhgt	r2, [r0, #6]
 801887c:	bd10      	pop	{r4, pc}
	...

08018880 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 8018880:	b510      	push	{r4, lr}
 8018882:	4b10      	ldr	r3, [pc, #64]	; (80188c4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 8018884:	f9b3 2000 	ldrsh.w	r2, [r3]
 8018888:	4b0f      	ldr	r3, [pc, #60]	; (80188c8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 801888a:	460c      	mov	r4, r1
 801888c:	4620      	mov	r0, r4
 801888e:	f9b3 1000 	ldrsh.w	r1, [r3]
 8018892:	f7ff ffd0 	bl	8018836 <_ZN8touchgfx4Rect10restrictToEss>
 8018896:	4b0d      	ldr	r3, [pc, #52]	; (80188cc <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 8018898:	6818      	ldr	r0, [r3, #0]
 801889a:	b190      	cbz	r0, 80188c2 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 801889c:	6803      	ldr	r3, [r0, #0]
 801889e:	4621      	mov	r1, r4
 80188a0:	689b      	ldr	r3, [r3, #8]
 80188a2:	4798      	blx	r3
 80188a4:	4b0a      	ldr	r3, [pc, #40]	; (80188d0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 80188a6:	6818      	ldr	r0, [r3, #0]
 80188a8:	b118      	cbz	r0, 80188b2 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 80188aa:	6803      	ldr	r3, [r0, #0]
 80188ac:	4621      	mov	r1, r4
 80188ae:	689b      	ldr	r3, [r3, #8]
 80188b0:	4798      	blx	r3
 80188b2:	4b08      	ldr	r3, [pc, #32]	; (80188d4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 80188b4:	6818      	ldr	r0, [r3, #0]
 80188b6:	6803      	ldr	r3, [r0, #0]
 80188b8:	4621      	mov	r1, r4
 80188ba:	69db      	ldr	r3, [r3, #28]
 80188bc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80188c0:	4718      	bx	r3
 80188c2:	bd10      	pop	{r4, pc}
 80188c4:	20013832 	.word	0x20013832
 80188c8:	20013830 	.word	0x20013830
 80188cc:	20013880 	.word	0x20013880
 80188d0:	2001387c 	.word	0x2001387c
 80188d4:	2001383c 	.word	0x2001383c

080188d8 <_ZNK8touchgfx4Rect8includesERKS0_>:
 80188d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80188da:	4606      	mov	r6, r0
 80188dc:	4608      	mov	r0, r1
 80188de:	460f      	mov	r7, r1
 80188e0:	f7fa f957 	bl	8012b92 <_ZNK8touchgfx4Rect7isEmptyEv>
 80188e4:	b9e8      	cbnz	r0, 8018922 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80188e6:	f9b7 5000 	ldrsh.w	r5, [r7]
 80188ea:	f9b6 4000 	ldrsh.w	r4, [r6]
 80188ee:	42a5      	cmp	r5, r4
 80188f0:	db17      	blt.n	8018922 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80188f2:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 80188f6:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 80188fa:	429a      	cmp	r2, r3
 80188fc:	db11      	blt.n	8018922 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80188fe:	88b9      	ldrh	r1, [r7, #4]
 8018900:	440d      	add	r5, r1
 8018902:	88b1      	ldrh	r1, [r6, #4]
 8018904:	440c      	add	r4, r1
 8018906:	b22d      	sxth	r5, r5
 8018908:	b224      	sxth	r4, r4
 801890a:	42a5      	cmp	r5, r4
 801890c:	dc09      	bgt.n	8018922 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801890e:	88f8      	ldrh	r0, [r7, #6]
 8018910:	4410      	add	r0, r2
 8018912:	88f2      	ldrh	r2, [r6, #6]
 8018914:	4413      	add	r3, r2
 8018916:	b200      	sxth	r0, r0
 8018918:	b21b      	sxth	r3, r3
 801891a:	4298      	cmp	r0, r3
 801891c:	bfcc      	ite	gt
 801891e:	2000      	movgt	r0, #0
 8018920:	2001      	movle	r0, #1
 8018922:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08018924 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 8018924:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8018926:	4604      	mov	r4, r0
 8018928:	4608      	mov	r0, r1
 801892a:	460d      	mov	r5, r1
 801892c:	f7fa f931 	bl	8012b92 <_ZNK8touchgfx4Rect7isEmptyEv>
 8018930:	b978      	cbnz	r0, 8018952 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 8018932:	4620      	mov	r0, r4
 8018934:	f7fa f92d 	bl	8012b92 <_ZNK8touchgfx4Rect7isEmptyEv>
 8018938:	f9b5 6000 	ldrsh.w	r6, [r5]
 801893c:	b150      	cbz	r0, 8018954 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 801893e:	8026      	strh	r6, [r4, #0]
 8018940:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8018944:	8063      	strh	r3, [r4, #2]
 8018946:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 801894a:	80a3      	strh	r3, [r4, #4]
 801894c:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8018950:	80e3      	strh	r3, [r4, #6]
 8018952:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8018954:	f9b4 1000 	ldrsh.w	r1, [r4]
 8018958:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801895c:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 8018960:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 8018964:	88ed      	ldrh	r5, [r5, #6]
 8018966:	42b1      	cmp	r1, r6
 8018968:	460f      	mov	r7, r1
 801896a:	bfa8      	it	ge
 801896c:	4637      	movge	r7, r6
 801896e:	4293      	cmp	r3, r2
 8018970:	4618      	mov	r0, r3
 8018972:	4466      	add	r6, ip
 8018974:	bfa8      	it	ge
 8018976:	4610      	movge	r0, r2
 8018978:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 801897c:	8027      	strh	r7, [r4, #0]
 801897e:	442a      	add	r2, r5
 8018980:	88e5      	ldrh	r5, [r4, #6]
 8018982:	8060      	strh	r0, [r4, #2]
 8018984:	4461      	add	r1, ip
 8018986:	442b      	add	r3, r5
 8018988:	b236      	sxth	r6, r6
 801898a:	b209      	sxth	r1, r1
 801898c:	b212      	sxth	r2, r2
 801898e:	b21b      	sxth	r3, r3
 8018990:	428e      	cmp	r6, r1
 8018992:	bfac      	ite	ge
 8018994:	ebc7 0106 	rsbge	r1, r7, r6
 8018998:	ebc7 0101 	rsblt	r1, r7, r1
 801899c:	429a      	cmp	r2, r3
 801899e:	bfac      	ite	ge
 80189a0:	ebc0 0202 	rsbge	r2, r0, r2
 80189a4:	ebc0 0203 	rsblt	r2, r0, r3
 80189a8:	80a1      	strh	r1, [r4, #4]
 80189aa:	80e2      	strh	r2, [r4, #6]
 80189ac:	e7d1      	b.n	8018952 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

080189b0 <_ZN8touchgfx11Application11getInstanceEv>:
 80189b0:	4b01      	ldr	r3, [pc, #4]	; (80189b8 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 80189b2:	6818      	ldr	r0, [r3, #0]
 80189b4:	4770      	bx	lr
 80189b6:	bf00      	nop
 80189b8:	20013890 	.word	0x20013890

080189bc <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>:
 80189bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80189be:	4b10      	ldr	r3, [pc, #64]	; (8018a00 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x44>)
 80189c0:	781b      	ldrb	r3, [r3, #0]
 80189c2:	4605      	mov	r5, r0
 80189c4:	b1d3      	cbz	r3, 80189fc <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x40>
 80189c6:	4b0f      	ldr	r3, [pc, #60]	; (8018a04 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x48>)
 80189c8:	4f0f      	ldr	r7, [pc, #60]	; (8018a08 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x4c>)
 80189ca:	881c      	ldrh	r4, [r3, #0]
 80189cc:	f100 06ee 	add.w	r6, r0, #238	; 0xee
 80189d0:	f8b5 312e 	ldrh.w	r3, [r5, #302]	; 0x12e
 80189d4:	42a3      	cmp	r3, r4
 80189d6:	d90e      	bls.n	80189f6 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x3a>
 80189d8:	683b      	ldr	r3, [r7, #0]
 80189da:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80189de:	b10a      	cbz	r2, 80189e4 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x28>
 80189e0:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80189e2:	b900      	cbnz	r0, 80189e6 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x2a>
 80189e4:	6898      	ldr	r0, [r3, #8]
 80189e6:	6803      	ldr	r3, [r0, #0]
 80189e8:	eb06 01c4 	add.w	r1, r6, r4, lsl #3
 80189ec:	69db      	ldr	r3, [r3, #28]
 80189ee:	3401      	adds	r4, #1
 80189f0:	4798      	blx	r3
 80189f2:	b2a4      	uxth	r4, r4
 80189f4:	e7ec      	b.n	80189d0 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x14>
 80189f6:	2300      	movs	r3, #0
 80189f8:	f8a5 312e 	strh.w	r3, [r5, #302]	; 0x12e
 80189fc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80189fe:	bf00      	nop
 8018a00:	2001383a 	.word	0x2001383a
 8018a04:	2000008c 	.word	0x2000008c
 8018a08:	2001383c 	.word	0x2001383c

08018a0c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 8018a0c:	b510      	push	{r4, lr}
 8018a0e:	2300      	movs	r3, #0
 8018a10:	f8a0 30a4 	strh.w	r3, [r0, #164]	; 0xa4
 8018a14:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8018a18:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8018a1c:	4604      	mov	r4, r0
 8018a1e:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8018a22:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	; 0xa6
 8018a26:	429a      	cmp	r2, r3
 8018a28:	d90e      	bls.n	8018a48 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 8018a2a:	18e2      	adds	r2, r4, r3
 8018a2c:	f892 2084 	ldrb.w	r2, [r2, #132]	; 0x84
 8018a30:	b122      	cbz	r2, 8018a3c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 8018a32:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8018a36:	6803      	ldr	r3, [r0, #0]
 8018a38:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8018a3a:	4798      	blx	r3
 8018a3c:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8018a40:	3301      	adds	r3, #1
 8018a42:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8018a46:	e7ea      	b.n	8018a1e <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 8018a48:	bd10      	pop	{r4, pc}

08018a4a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>:
 8018a4a:	b530      	push	{r4, r5, lr}
 8018a4c:	f8b0 5080 	ldrh.w	r5, [r0, #128]	; 0x80
 8018a50:	2200      	movs	r2, #0
 8018a52:	b293      	uxth	r3, r2
 8018a54:	429d      	cmp	r5, r3
 8018a56:	d90e      	bls.n	8018a76 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8018a58:	f850 3022 	ldr.w	r3, [r0, r2, lsl #2]
 8018a5c:	428b      	cmp	r3, r1
 8018a5e:	d10b      	bne.n	8018a78 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8018a60:	1884      	adds	r4, r0, r2
 8018a62:	f894 3084 	ldrb.w	r3, [r4, #132]	; 0x84
 8018a66:	b13b      	cbz	r3, 8018a78 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8018a68:	3b01      	subs	r3, #1
 8018a6a:	b2db      	uxtb	r3, r3
 8018a6c:	f884 3084 	strb.w	r3, [r4, #132]	; 0x84
 8018a70:	b90b      	cbnz	r3, 8018a76 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8018a72:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
 8018a76:	bd30      	pop	{r4, r5, pc}
 8018a78:	3201      	adds	r2, #1
 8018a7a:	e7ea      	b.n	8018a52 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x8>

08018a7c <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 8018a7c:	2300      	movs	r3, #0
 8018a7e:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8018a82:	f100 0284 	add.w	r2, r0, #132	; 0x84
 8018a86:	30a4      	adds	r0, #164	; 0xa4
 8018a88:	f802 3b01 	strb.w	r3, [r2], #1
 8018a8c:	4282      	cmp	r2, r0
 8018a8e:	d1fb      	bne.n	8018a88 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 8018a90:	4770      	bx	lr
	...

08018a94 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 8018a94:	b570      	push	{r4, r5, r6, lr}
 8018a96:	4c0b      	ldr	r4, [pc, #44]	; (8018ac4 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 8018a98:	4605      	mov	r5, r0
 8018a9a:	6820      	ldr	r0, [r4, #0]
 8018a9c:	460e      	mov	r6, r1
 8018a9e:	b110      	cbz	r0, 8018aa6 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 8018aa0:	6803      	ldr	r3, [r0, #0]
 8018aa2:	695b      	ldr	r3, [r3, #20]
 8018aa4:	4798      	blx	r3
 8018aa6:	1d28      	adds	r0, r5, #4
 8018aa8:	f7ff ffe8 	bl	8018a7c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8018aac:	6026      	str	r6, [r4, #0]
 8018aae:	6833      	ldr	r3, [r6, #0]
 8018ab0:	4630      	mov	r0, r6
 8018ab2:	68db      	ldr	r3, [r3, #12]
 8018ab4:	4798      	blx	r3
 8018ab6:	682b      	ldr	r3, [r5, #0]
 8018ab8:	4628      	mov	r0, r5
 8018aba:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8018abc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8018ac0:	4718      	bx	r3
 8018ac2:	bf00      	nop
 8018ac4:	20013880 	.word	0x20013880

08018ac8 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 8018ac8:	2300      	movs	r3, #0
 8018aca:	f8b0 c080 	ldrh.w	ip, [r0, #128]	; 0x80
 8018ace:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	; 0xa4
 8018ad2:	b5f0      	push	{r4, r5, r6, r7, lr}
 8018ad4:	461a      	mov	r2, r3
 8018ad6:	461c      	mov	r4, r3
 8018ad8:	461d      	mov	r5, r3
 8018ada:	459c      	cmp	ip, r3
 8018adc:	dd1a      	ble.n	8018b14 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 8018ade:	18c6      	adds	r6, r0, r3
 8018ae0:	f896 6084 	ldrb.w	r6, [r6, #132]	; 0x84
 8018ae4:	b16e      	cbz	r6, 8018b02 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 8018ae6:	429a      	cmp	r2, r3
 8018ae8:	d008      	beq.n	8018afc <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 8018aea:	fa1f fe82 	uxth.w	lr, r2
 8018aee:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 8018af2:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 8018af6:	1887      	adds	r7, r0, r2
 8018af8:	f887 6084 	strb.w	r6, [r7, #132]	; 0x84
 8018afc:	3201      	adds	r2, #1
 8018afe:	3301      	adds	r3, #1
 8018b00:	e7eb      	b.n	8018ada <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 8018b02:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	; 0xa6
 8018b06:	4299      	cmp	r1, r3
 8018b08:	bfa8      	it	ge
 8018b0a:	3501      	addge	r5, #1
 8018b0c:	429e      	cmp	r6, r3
 8018b0e:	bfc8      	it	gt
 8018b10:	3401      	addgt	r4, #1
 8018b12:	e7f4      	b.n	8018afe <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 8018b14:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	; 0xa6
 8018b18:	1b49      	subs	r1, r1, r5
 8018b1a:	1b1b      	subs	r3, r3, r4
 8018b1c:	f8a0 10a4 	strh.w	r1, [r0, #164]	; 0xa4
 8018b20:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8018b24:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8018b28:	4293      	cmp	r3, r2
 8018b2a:	dd03      	ble.n	8018b34 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 8018b2c:	3b01      	subs	r3, #1
 8018b2e:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8018b32:	e7f7      	b.n	8018b24 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 8018b34:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08018b38 <_ZN8touchgfx11Application15handleTickEventEv>:
 8018b38:	b570      	push	{r4, r5, r6, lr}
 8018b3a:	4d16      	ldr	r5, [pc, #88]	; (8018b94 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 8018b3c:	4604      	mov	r4, r0
 8018b3e:	6828      	ldr	r0, [r5, #0]
 8018b40:	b140      	cbz	r0, 8018b54 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8018b42:	7a03      	ldrb	r3, [r0, #8]
 8018b44:	b933      	cbnz	r3, 8018b54 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8018b46:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 8018b4a:	6803      	ldr	r3, [r0, #0]
 8018b4c:	689b      	ldr	r3, [r3, #8]
 8018b4e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8018b52:	4718      	bx	r3
 8018b54:	f894 3138 	ldrb.w	r3, [r4, #312]	; 0x138
 8018b58:	4e0f      	ldr	r6, [pc, #60]	; (8018b98 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 8018b5a:	b973      	cbnz	r3, 8018b7a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8018b5c:	b168      	cbz	r0, 8018b7a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8018b5e:	7a03      	ldrb	r3, [r0, #8]
 8018b60:	b15b      	cbz	r3, 8018b7a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8018b62:	6830      	ldr	r0, [r6, #0]
 8018b64:	b110      	cbz	r0, 8018b6c <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 8018b66:	6803      	ldr	r3, [r0, #0]
 8018b68:	691b      	ldr	r3, [r3, #16]
 8018b6a:	4798      	blx	r3
 8018b6c:	6828      	ldr	r0, [r5, #0]
 8018b6e:	6803      	ldr	r3, [r0, #0]
 8018b70:	68db      	ldr	r3, [r3, #12]
 8018b72:	4798      	blx	r3
 8018b74:	2301      	movs	r3, #1
 8018b76:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 8018b7a:	3404      	adds	r4, #4
 8018b7c:	4620      	mov	r0, r4
 8018b7e:	f7ff ff45 	bl	8018a0c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 8018b82:	4620      	mov	r0, r4
 8018b84:	f7ff ffa0 	bl	8018ac8 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8018b88:	6830      	ldr	r0, [r6, #0]
 8018b8a:	b110      	cbz	r0, 8018b92 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 8018b8c:	6803      	ldr	r3, [r0, #0]
 8018b8e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8018b90:	e7dd      	b.n	8018b4e <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 8018b92:	bd70      	pop	{r4, r5, r6, pc}
 8018b94:	20013884 	.word	0x20013884
 8018b98:	20013880 	.word	0x20013880

08018b9c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>:
 8018b9c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8018b9e:	2300      	movs	r3, #0
 8018ba0:	4604      	mov	r4, r0
 8018ba2:	460d      	mov	r5, r1
 8018ba4:	f8b0 1080 	ldrh.w	r1, [r0, #128]	; 0x80
 8018ba8:	4618      	mov	r0, r3
 8018baa:	b29a      	uxth	r2, r3
 8018bac:	4291      	cmp	r1, r2
 8018bae:	d911      	bls.n	8018bd4 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x38>
 8018bb0:	f854 7023 	ldr.w	r7, [r4, r3, lsl #2]
 8018bb4:	18e6      	adds	r6, r4, r3
 8018bb6:	42af      	cmp	r7, r5
 8018bb8:	f896 2084 	ldrb.w	r2, [r6, #132]	; 0x84
 8018bbc:	d105      	bne.n	8018bca <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2e>
 8018bbe:	2aff      	cmp	r2, #255	; 0xff
 8018bc0:	d002      	beq.n	8018bc8 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8018bc2:	3201      	adds	r2, #1
 8018bc4:	f886 2084 	strb.w	r2, [r6, #132]	; 0x84
 8018bc8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8018bca:	2a00      	cmp	r2, #0
 8018bcc:	bf08      	it	eq
 8018bce:	2001      	moveq	r0, #1
 8018bd0:	3301      	adds	r3, #1
 8018bd2:	e7ea      	b.n	8018baa <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0xe>
 8018bd4:	b120      	cbz	r0, 8018be0 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 8018bd6:	2920      	cmp	r1, #32
 8018bd8:	d102      	bne.n	8018be0 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 8018bda:	4620      	mov	r0, r4
 8018bdc:	f7ff ff74 	bl	8018ac8 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8018be0:	f8b4 3080 	ldrh.w	r3, [r4, #128]	; 0x80
 8018be4:	2b1f      	cmp	r3, #31
 8018be6:	d8ef      	bhi.n	8018bc8 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8018be8:	18e2      	adds	r2, r4, r3
 8018bea:	2101      	movs	r1, #1
 8018bec:	f882 1084 	strb.w	r1, [r2, #132]	; 0x84
 8018bf0:	185a      	adds	r2, r3, r1
 8018bf2:	f8a4 2080 	strh.w	r2, [r4, #128]	; 0x80
 8018bf6:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 8018bfa:	e7e5      	b.n	8018bc8 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>

08018bfc <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 8018bfc:	4603      	mov	r3, r0
 8018bfe:	f100 0140 	add.w	r1, r0, #64	; 0x40
 8018c02:	2200      	movs	r2, #0
 8018c04:	801a      	strh	r2, [r3, #0]
 8018c06:	805a      	strh	r2, [r3, #2]
 8018c08:	809a      	strh	r2, [r3, #4]
 8018c0a:	80da      	strh	r2, [r3, #6]
 8018c0c:	3308      	adds	r3, #8
 8018c0e:	428b      	cmp	r3, r1
 8018c10:	d1f8      	bne.n	8018c04 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 8018c12:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 8018c16:	4770      	bx	lr

08018c18 <_ZN8touchgfx11ApplicationC1Ev>:
 8018c18:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8018c1a:	4606      	mov	r6, r0
 8018c1c:	4b1c      	ldr	r3, [pc, #112]	; (8018c90 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 8018c1e:	f846 3b04 	str.w	r3, [r6], #4
 8018c22:	4604      	mov	r4, r0
 8018c24:	2500      	movs	r5, #0
 8018c26:	22a8      	movs	r2, #168	; 0xa8
 8018c28:	2100      	movs	r1, #0
 8018c2a:	4630      	mov	r0, r6
 8018c2c:	f015 f895 	bl	802dd5a <memset>
 8018c30:	f8a4 5084 	strh.w	r5, [r4, #132]	; 0x84
 8018c34:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8018c38:	f7ff ffe0 	bl	8018bfc <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8018c3c:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8018c40:	f7ff ffdc 	bl	8018bfc <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8018c44:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 8018c48:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 8018c4c:	f8a4 5134 	strh.w	r5, [r4, #308]	; 0x134
 8018c50:	f8a4 5136 	strh.w	r5, [r4, #310]	; 0x136
 8018c54:	f884 5138 	strb.w	r5, [r4, #312]	; 0x138
 8018c58:	490e      	ldr	r1, [pc, #56]	; (8018c94 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 8018c5a:	480f      	ldr	r0, [pc, #60]	; (8018c98 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 8018c5c:	4f0f      	ldr	r7, [pc, #60]	; (8018c9c <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 8018c5e:	f010 fe27 	bl	80298b0 <CRC_Lock>
 8018c62:	4b0f      	ldr	r3, [pc, #60]	; (8018ca0 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 8018c64:	b158      	cbz	r0, 8018c7e <_ZN8touchgfx11ApplicationC1Ev+0x66>
 8018c66:	801d      	strh	r5, [r3, #0]
 8018c68:	4a0e      	ldr	r2, [pc, #56]	; (8018ca4 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 8018c6a:	2300      	movs	r3, #0
 8018c6c:	6013      	str	r3, [r2, #0]
 8018c6e:	4a0e      	ldr	r2, [pc, #56]	; (8018ca8 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 8018c70:	603b      	str	r3, [r7, #0]
 8018c72:	4630      	mov	r0, r6
 8018c74:	6013      	str	r3, [r2, #0]
 8018c76:	f7ff ff01 	bl	8018a7c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8018c7a:	4620      	mov	r0, r4
 8018c7c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8018c7e:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8018c82:	2002      	movs	r0, #2
 8018c84:	801a      	strh	r2, [r3, #0]
 8018c86:	6038      	str	r0, [r7, #0]
 8018c88:	f001 fb4a 	bl	801a320 <_ZN8touchgfx6Screen4drawEv>
 8018c8c:	e7ec      	b.n	8018c68 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 8018c8e:	bf00      	nop
 8018c90:	08031d94 	.word	0x08031d94
 8018c94:	b5e8b5cd 	.word	0xb5e8b5cd
 8018c98:	f407a5c2 	.word	0xf407a5c2
 8018c9c:	20013880 	.word	0x20013880
 8018ca0:	2000008c 	.word	0x2000008c
 8018ca4:	20013890 	.word	0x20013890
 8018ca8:	20013884 	.word	0x20013884

08018cac <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 8018cac:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 8018cb0:	3b01      	subs	r3, #1
 8018cb2:	b29b      	uxth	r3, r3
 8018cb4:	428b      	cmp	r3, r1
 8018cb6:	b510      	push	{r4, lr}
 8018cb8:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 8018cbc:	d908      	bls.n	8018cd0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 8018cbe:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8018cc2:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 8018cc6:	681a      	ldr	r2, [r3, #0]
 8018cc8:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 8018ccc:	685a      	ldr	r2, [r3, #4]
 8018cce:	6062      	str	r2, [r4, #4]
 8018cd0:	bd10      	pop	{r4, pc}
	...

08018cd4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 8018cd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018cd8:	4b8f      	ldr	r3, [pc, #572]	; (8018f18 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 8018cda:	b08f      	sub	sp, #60	; 0x3c
 8018cdc:	ac0a      	add	r4, sp, #40	; 0x28
 8018cde:	e884 0006 	stmia.w	r4, {r1, r2}
 8018ce2:	f9b3 2000 	ldrsh.w	r2, [r3]
 8018ce6:	4b8d      	ldr	r3, [pc, #564]	; (8018f1c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 8018ce8:	4683      	mov	fp, r0
 8018cea:	f9b3 1000 	ldrsh.w	r1, [r3]
 8018cee:	4620      	mov	r0, r4
 8018cf0:	f7ff fda1 	bl	8018836 <_ZN8touchgfx4Rect10restrictToEss>
 8018cf4:	4620      	mov	r0, r4
 8018cf6:	f7f9 ff4c 	bl	8012b92 <_ZNK8touchgfx4Rect7isEmptyEv>
 8018cfa:	2800      	cmp	r0, #0
 8018cfc:	d16a      	bne.n	8018dd4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8018cfe:	9403      	str	r4, [sp, #12]
 8018d00:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8018d04:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 8018d08:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 8018d0c:	35a4      	adds	r5, #164	; 0xa4
 8018d0e:	9301      	str	r3, [sp, #4]
 8018d10:	b15c      	cbz	r4, 8018d2a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 8018d12:	4629      	mov	r1, r5
 8018d14:	9803      	ldr	r0, [sp, #12]
 8018d16:	f7ff fddf 	bl	80188d8 <_ZNK8touchgfx4Rect8includesERKS0_>
 8018d1a:	3c01      	subs	r4, #1
 8018d1c:	b118      	cbz	r0, 8018d26 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 8018d1e:	b2a1      	uxth	r1, r4
 8018d20:	9801      	ldr	r0, [sp, #4]
 8018d22:	f7ff ffc3 	bl	8018cac <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8018d26:	3d08      	subs	r5, #8
 8018d28:	e7f2      	b.n	8018d10 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 8018d2a:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	; 0xec
 8018d2e:	f8cd a010 	str.w	sl, [sp, #16]
 8018d32:	f10a 33ff 	add.w	r3, sl, #4294967295
 8018d36:	9302      	str	r3, [sp, #8]
 8018d38:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 8018d3c:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
 8018d40:	9306      	str	r3, [sp, #24]
 8018d42:	445c      	add	r4, fp
 8018d44:	2500      	movs	r5, #0
 8018d46:	4626      	mov	r6, r4
 8018d48:	f8cd a014 	str.w	sl, [sp, #20]
 8018d4c:	462f      	mov	r7, r5
 8018d4e:	9b05      	ldr	r3, [sp, #20]
 8018d50:	2b00      	cmp	r3, #0
 8018d52:	d073      	beq.n	8018e3c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 8018d54:	9903      	ldr	r1, [sp, #12]
 8018d56:	4630      	mov	r0, r6
 8018d58:	f7ff fd4b 	bl	80187f2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8018d5c:	b350      	cbz	r0, 8018db4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8018d5e:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 8018d62:	f9b6 c000 	ldrsh.w	ip, [r6]
 8018d66:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	; 0x2a
 8018d6a:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 8018d6e:	45e6      	cmp	lr, ip
 8018d70:	db33      	blt.n	8018dda <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8018d72:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8018d76:	88b3      	ldrh	r3, [r6, #4]
 8018d78:	4472      	add	r2, lr
 8018d7a:	4463      	add	r3, ip
 8018d7c:	b212      	sxth	r2, r2
 8018d7e:	b21b      	sxth	r3, r3
 8018d80:	429a      	cmp	r2, r3
 8018d82:	dc2a      	bgt.n	8018dda <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8018d84:	88f3      	ldrh	r3, [r6, #6]
 8018d86:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8018d8a:	fa1f f289 	uxth.w	r2, r9
 8018d8e:	4413      	add	r3, r2
 8018d90:	b29b      	uxth	r3, r3
 8018d92:	45c8      	cmp	r8, r9
 8018d94:	fa1f fc88 	uxth.w	ip, r8
 8018d98:	fa0f fe83 	sxth.w	lr, r3
 8018d9c:	db0f      	blt.n	8018dbe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 8018d9e:	eba3 030c 	sub.w	r3, r3, ip
 8018da2:	1ac9      	subs	r1, r1, r3
 8018da4:	b209      	sxth	r1, r1
 8018da6:	2900      	cmp	r1, #0
 8018da8:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8018dac:	dd12      	ble.n	8018dd4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8018dae:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 8018db2:	4605      	mov	r5, r0
 8018db4:	9b05      	ldr	r3, [sp, #20]
 8018db6:	3b01      	subs	r3, #1
 8018db8:	9305      	str	r3, [sp, #20]
 8018dba:	3e08      	subs	r6, #8
 8018dbc:	e7c7      	b.n	8018d4e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 8018dbe:	4461      	add	r1, ip
 8018dc0:	b209      	sxth	r1, r1
 8018dc2:	4571      	cmp	r1, lr
 8018dc4:	dc38      	bgt.n	8018e38 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8018dc6:	eba2 020c 	sub.w	r2, r2, ip
 8018dca:	b212      	sxth	r2, r2
 8018dcc:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8018dd0:	2a00      	cmp	r2, #0
 8018dd2:	dcee      	bgt.n	8018db2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8018dd4:	b00f      	add	sp, #60	; 0x3c
 8018dd6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018dda:	45c8      	cmp	r8, r9
 8018ddc:	db2c      	blt.n	8018e38 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8018dde:	88f3      	ldrh	r3, [r6, #6]
 8018de0:	4499      	add	r9, r3
 8018de2:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 8018de6:	4498      	add	r8, r3
 8018de8:	fa0f f989 	sxth.w	r9, r9
 8018dec:	fa0f f888 	sxth.w	r8, r8
 8018df0:	45c1      	cmp	r9, r8
 8018df2:	db21      	blt.n	8018e38 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8018df4:	88b3      	ldrh	r3, [r6, #4]
 8018df6:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8018dfa:	fa1f f28c 	uxth.w	r2, ip
 8018dfe:	4413      	add	r3, r2
 8018e00:	b29b      	uxth	r3, r3
 8018e02:	45e6      	cmp	lr, ip
 8018e04:	fa1f f88e 	uxth.w	r8, lr
 8018e08:	fa0f f983 	sxth.w	r9, r3
 8018e0c:	db0a      	blt.n	8018e24 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 8018e0e:	eba3 0308 	sub.w	r3, r3, r8
 8018e12:	1ac9      	subs	r1, r1, r3
 8018e14:	b209      	sxth	r1, r1
 8018e16:	2900      	cmp	r1, #0
 8018e18:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 8018e1c:	ddda      	ble.n	8018dd4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8018e1e:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8018e22:	e7c6      	b.n	8018db2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8018e24:	4441      	add	r1, r8
 8018e26:	b209      	sxth	r1, r1
 8018e28:	4549      	cmp	r1, r9
 8018e2a:	dc05      	bgt.n	8018e38 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8018e2c:	eba2 0208 	sub.w	r2, r2, r8
 8018e30:	b212      	sxth	r2, r2
 8018e32:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 8018e36:	e7cb      	b.n	8018dd0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 8018e38:	4607      	mov	r7, r0
 8018e3a:	e7bb      	b.n	8018db4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8018e3c:	2d00      	cmp	r5, #0
 8018e3e:	d181      	bne.n	8018d44 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 8018e40:	2f00      	cmp	r7, #0
 8018e42:	f000 81dd 	beq.w	8019200 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8018e46:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 8018e4a:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 8018e4e:	f8bd a02e 	ldrh.w	sl, [sp, #46]	; 0x2e
 8018e52:	b2b3      	uxth	r3, r6
 8018e54:	9305      	str	r3, [sp, #20]
 8018e56:	9a05      	ldr	r2, [sp, #20]
 8018e58:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8018e5c:	4413      	add	r3, r2
 8018e5e:	b2ba      	uxth	r2, r7
 8018e60:	4492      	add	sl, r2
 8018e62:	b29b      	uxth	r3, r3
 8018e64:	fa1f fa8a 	uxth.w	sl, sl
 8018e68:	fa0f f883 	sxth.w	r8, r3
 8018e6c:	fa0f f98a 	sxth.w	r9, sl
 8018e70:	e9cd 2307 	strd	r2, r3, [sp, #28]
 8018e74:	9b04      	ldr	r3, [sp, #16]
 8018e76:	2b00      	cmp	r3, #0
 8018e78:	d052      	beq.n	8018f20 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 8018e7a:	9903      	ldr	r1, [sp, #12]
 8018e7c:	4620      	mov	r0, r4
 8018e7e:	f7ff fcb8 	bl	80187f2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8018e82:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 8018e86:	b1c0      	cbz	r0, 8018eba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8018e88:	f9b4 e000 	ldrsh.w	lr, [r4]
 8018e8c:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8018e90:	4576      	cmp	r6, lr
 8018e92:	dc22      	bgt.n	8018eda <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8018e94:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8018e98:	44f4      	add	ip, lr
 8018e9a:	fa0f fc8c 	sxth.w	ip, ip
 8018e9e:	45e0      	cmp	r8, ip
 8018ea0:	db1b      	blt.n	8018eda <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8018ea2:	428f      	cmp	r7, r1
 8018ea4:	fa1f fc81 	uxth.w	ip, r1
 8018ea8:	88e1      	ldrh	r1, [r4, #6]
 8018eaa:	dc0d      	bgt.n	8018ec8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 8018eac:	ebaa 0c0c 	sub.w	ip, sl, ip
 8018eb0:	eba1 010c 	sub.w	r1, r1, ip
 8018eb4:	f8a4 9002 	strh.w	r9, [r4, #2]
 8018eb8:	80e1      	strh	r1, [r4, #6]
 8018eba:	4628      	mov	r0, r5
 8018ebc:	9904      	ldr	r1, [sp, #16]
 8018ebe:	3901      	subs	r1, #1
 8018ec0:	9104      	str	r1, [sp, #16]
 8018ec2:	3c08      	subs	r4, #8
 8018ec4:	4605      	mov	r5, r0
 8018ec6:	e7d3      	b.n	8018e70 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 8018ec8:	4461      	add	r1, ip
 8018eca:	b209      	sxth	r1, r1
 8018ecc:	4549      	cmp	r1, r9
 8018ece:	dcf5      	bgt.n	8018ebc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8018ed0:	eba2 0c0c 	sub.w	ip, r2, ip
 8018ed4:	f8a4 c006 	strh.w	ip, [r4, #6]
 8018ed8:	e7ef      	b.n	8018eba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8018eda:	428f      	cmp	r7, r1
 8018edc:	dcee      	bgt.n	8018ebc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8018ede:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 8018ee2:	4461      	add	r1, ip
 8018ee4:	b209      	sxth	r1, r1
 8018ee6:	4589      	cmp	r9, r1
 8018ee8:	dbe8      	blt.n	8018ebc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8018eea:	4576      	cmp	r6, lr
 8018eec:	fa1f fc8e 	uxth.w	ip, lr
 8018ef0:	88a1      	ldrh	r1, [r4, #4]
 8018ef2:	dc07      	bgt.n	8018f04 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 8018ef4:	eba3 0c0c 	sub.w	ip, r3, ip
 8018ef8:	eba1 010c 	sub.w	r1, r1, ip
 8018efc:	f8a4 8000 	strh.w	r8, [r4]
 8018f00:	80a1      	strh	r1, [r4, #4]
 8018f02:	e7da      	b.n	8018eba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8018f04:	4461      	add	r1, ip
 8018f06:	b209      	sxth	r1, r1
 8018f08:	4588      	cmp	r8, r1
 8018f0a:	dbd7      	blt.n	8018ebc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8018f0c:	9905      	ldr	r1, [sp, #20]
 8018f0e:	eba1 0c0c 	sub.w	ip, r1, ip
 8018f12:	f8a4 c004 	strh.w	ip, [r4, #4]
 8018f16:	e7d0      	b.n	8018eba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8018f18:	20013832 	.word	0x20013832
 8018f1c:	20013830 	.word	0x20013830
 8018f20:	2d00      	cmp	r5, #0
 8018f22:	f000 816d 	beq.w	8019200 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8018f26:	9b06      	ldr	r3, [sp, #24]
 8018f28:	445b      	add	r3, fp
 8018f2a:	461c      	mov	r4, r3
 8018f2c:	9b02      	ldr	r3, [sp, #8]
 8018f2e:	3301      	adds	r3, #1
 8018f30:	f000 8166 	beq.w	8019200 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8018f34:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
 8018f38:	4629      	mov	r1, r5
 8018f3a:	9803      	ldr	r0, [sp, #12]
 8018f3c:	f7ff fccc 	bl	80188d8 <_ZNK8touchgfx4Rect8includesERKS0_>
 8018f40:	b120      	cbz	r0, 8018f4c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 8018f42:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8018f46:	9801      	ldr	r0, [sp, #4]
 8018f48:	f7ff feb0 	bl	8018cac <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8018f4c:	9903      	ldr	r1, [sp, #12]
 8018f4e:	4628      	mov	r0, r5
 8018f50:	f7ff fc4f 	bl	80187f2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8018f54:	2800      	cmp	r0, #0
 8018f56:	f000 809c 	beq.w	8019092 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8018f5a:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	; 0xa4
 8018f5e:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8018f62:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8018f66:	9309      	str	r3, [sp, #36]	; 0x24
 8018f68:	fa1f f189 	uxth.w	r1, r9
 8018f6c:	eb01 0c03 	add.w	ip, r1, r3
 8018f70:	fa1f fa8c 	uxth.w	sl, ip
 8018f74:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 8018f78:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 8018f7c:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	; 0xa6
 8018f80:	b283      	uxth	r3, r0
 8018f82:	eb03 050c 	add.w	r5, r3, ip
 8018f86:	b2ad      	uxth	r5, r5
 8018f88:	9505      	str	r5, [sp, #20]
 8018f8a:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 8018f8e:	9504      	str	r5, [sp, #16]
 8018f90:	4548      	cmp	r0, r9
 8018f92:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	; 0xec
 8018f96:	f340 8099 	ble.w	80190cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 8018f9a:	1a5b      	subs	r3, r3, r1
 8018f9c:	b29b      	uxth	r3, r3
 8018f9e:	4596      	cmp	lr, r2
 8018fa0:	fa0f f08a 	sxth.w	r0, sl
 8018fa4:	b21e      	sxth	r6, r3
 8018fa6:	dd2e      	ble.n	8019006 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 8018fa8:	9f02      	ldr	r7, [sp, #8]
 8018faa:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 8018fae:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 8018fb2:	9f04      	ldr	r7, [sp, #16]
 8018fb4:	1a3f      	subs	r7, r7, r0
 8018fb6:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	; 0xb2
 8018fba:	fa1f fe8e 	uxth.w	lr, lr
 8018fbe:	b292      	uxth	r2, r2
 8018fc0:	ebae 0102 	sub.w	r1, lr, r2
 8018fc4:	44a6      	add	lr, r4
 8018fc6:	4402      	add	r2, r0
 8018fc8:	b289      	uxth	r1, r1
 8018fca:	fa0f fe8e 	sxth.w	lr, lr
 8018fce:	b212      	sxth	r2, r2
 8018fd0:	b20d      	sxth	r5, r1
 8018fd2:	ebae 0202 	sub.w	r2, lr, r2
 8018fd6:	436f      	muls	r7, r5
 8018fd8:	4372      	muls	r2, r6
 8018fda:	4297      	cmp	r7, r2
 8018fdc:	db09      	blt.n	8018ff2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 8018fde:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	; 0xac
 8018fe2:	f8a8 50b2 	strh.w	r5, [r8, #178]	; 0xb2
 8018fe6:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8018fea:	449c      	add	ip, r3
 8018fec:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8018ff0:	e686      	b.n	8018d00 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8018ff2:	4421      	add	r1, r4
 8018ff4:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
 8018ff8:	f8a8 60b0 	strh.w	r6, [r8, #176]	; 0xb0
 8018ffc:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8019000:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8019004:	e67c      	b.n	8018d00 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8019006:	9f04      	ldr	r7, [sp, #16]
 8019008:	42b8      	cmp	r0, r7
 801900a:	da27      	bge.n	801905c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 801900c:	9902      	ldr	r1, [sp, #8]
 801900e:	f8bd 502e 	ldrh.w	r5, [sp, #46]	; 0x2e
 8019012:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 8019016:	eb05 010e 	add.w	r1, r5, lr
 801901a:	fa1f f881 	uxth.w	r8, r1
 801901e:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	; 0xb2
 8019022:	4411      	add	r1, r2
 8019024:	eba1 0108 	sub.w	r1, r1, r8
 8019028:	b289      	uxth	r1, r1
 801902a:	fa0f f988 	sxth.w	r9, r8
 801902e:	eba2 020e 	sub.w	r2, r2, lr
 8019032:	fa0f f881 	sxth.w	r8, r1
 8019036:	1a3f      	subs	r7, r7, r0
 8019038:	4372      	muls	r2, r6
 801903a:	fb08 f707 	mul.w	r7, r8, r7
 801903e:	42ba      	cmp	r2, r7
 8019040:	dc06      	bgt.n	8019050 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 8019042:	f8a4 90ae 	strh.w	r9, [r4, #174]	; 0xae
 8019046:	f8a4 80b2 	strh.w	r8, [r4, #178]	; 0xb2
 801904a:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	; 0xac
 801904e:	e7ca      	b.n	8018fe6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 8019050:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
 8019054:	4429      	add	r1, r5
 8019056:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 801905a:	e651      	b.n	8018d00 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801905c:	9805      	ldr	r0, [sp, #20]
 801905e:	ebaa 0000 	sub.w	r0, sl, r0
 8019062:	b280      	uxth	r0, r0
 8019064:	2d06      	cmp	r5, #6
 8019066:	fa0f fe80 	sxth.w	lr, r0
 801906a:	d817      	bhi.n	801909c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 801906c:	9b04      	ldr	r3, [sp, #16]
 801906e:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8019072:	1c6b      	adds	r3, r5, #1
 8019074:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	; 0xaa
 8019078:	f8a4 e0a8 	strh.w	lr, [r4, #168]	; 0xa8
 801907c:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 8019080:	9b01      	ldr	r3, [sp, #4]
 8019082:	9801      	ldr	r0, [sp, #4]
 8019084:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8019088:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 801908c:	805a      	strh	r2, [r3, #2]
 801908e:	809e      	strh	r6, [r3, #4]
 8019090:	80d9      	strh	r1, [r3, #6]
 8019092:	9b02      	ldr	r3, [sp, #8]
 8019094:	3b01      	subs	r3, #1
 8019096:	9302      	str	r3, [sp, #8]
 8019098:	3c08      	subs	r4, #8
 801909a:	e747      	b.n	8018f2c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 801909c:	9a02      	ldr	r2, [sp, #8]
 801909e:	45b6      	cmp	lr, r6
 80190a0:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80190a4:	db0d      	blt.n	80190c2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 80190a6:	449c      	add	ip, r3
 80190a8:	fa1f fc8c 	uxth.w	ip, ip
 80190ac:	445a      	add	r2, fp
 80190ae:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 80190b2:	448c      	add	ip, r1
 80190b4:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 80190b8:	f8a2 c0ac 	strh.w	ip, [r2, #172]	; 0xac
 80190bc:	f8a2 e0b0 	strh.w	lr, [r2, #176]	; 0xb0
 80190c0:	e61e      	b.n	8018d00 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80190c2:	445a      	add	r2, fp
 80190c4:	4484      	add	ip, r0
 80190c6:	f8a2 60b0 	strh.w	r6, [r2, #176]	; 0xb0
 80190ca:	e78f      	b.n	8018fec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 80190cc:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 80190d0:	fa1f f18e 	uxth.w	r1, lr
 80190d4:	eb01 0806 	add.w	r8, r1, r6
 80190d8:	b293      	uxth	r3, r2
 80190da:	fa1f f888 	uxth.w	r8, r8
 80190de:	9306      	str	r3, [sp, #24]
 80190e0:	fa0f f388 	sxth.w	r3, r8
 80190e4:	9307      	str	r3, [sp, #28]
 80190e6:	9f06      	ldr	r7, [sp, #24]
 80190e8:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 80190ec:	443b      	add	r3, r7
 80190ee:	b29b      	uxth	r3, r3
 80190f0:	4596      	cmp	lr, r2
 80190f2:	9308      	str	r3, [sp, #32]
 80190f4:	da24      	bge.n	8019140 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 80190f6:	9905      	ldr	r1, [sp, #20]
 80190f8:	eba3 0308 	sub.w	r3, r3, r8
 80190fc:	ebaa 0401 	sub.w	r4, sl, r1
 8019100:	b2a4      	uxth	r4, r4
 8019102:	b29b      	uxth	r3, r3
 8019104:	b225      	sxth	r5, r4
 8019106:	b219      	sxth	r1, r3
 8019108:	eba2 020e 	sub.w	r2, r2, lr
 801910c:	eba9 0000 	sub.w	r0, r9, r0
 8019110:	436a      	muls	r2, r5
 8019112:	4348      	muls	r0, r1
 8019114:	4282      	cmp	r2, r0
 8019116:	9a02      	ldr	r2, [sp, #8]
 8019118:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 801911c:	445a      	add	r2, fp
 801911e:	dc06      	bgt.n	801912e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 8019120:	9b07      	ldr	r3, [sp, #28]
 8019122:	f8a2 10b2 	strh.w	r1, [r2, #178]	; 0xb2
 8019126:	f8a2 30ae 	strh.w	r3, [r2, #174]	; 0xae
 801912a:	44a4      	add	ip, r4
 801912c:	e75e      	b.n	8018fec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 801912e:	9904      	ldr	r1, [sp, #16]
 8019130:	f8a2 50b0 	strh.w	r5, [r2, #176]	; 0xb0
 8019134:	f8a2 10ac 	strh.w	r1, [r2, #172]	; 0xac
 8019138:	4433      	add	r3, r6
 801913a:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 801913e:	e5df      	b.n	8018d00 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8019140:	9f06      	ldr	r7, [sp, #24]
 8019142:	9b04      	ldr	r3, [sp, #16]
 8019144:	1bc9      	subs	r1, r1, r7
 8019146:	fa0f f78a 	sxth.w	r7, sl
 801914a:	b289      	uxth	r1, r1
 801914c:	429f      	cmp	r7, r3
 801914e:	fa0f fe81 	sxth.w	lr, r1
 8019152:	dd23      	ble.n	801919c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 8019154:	9a05      	ldr	r2, [sp, #20]
 8019156:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 801915a:	9d07      	ldr	r5, [sp, #28]
 801915c:	ebaa 0202 	sub.w	r2, sl, r2
 8019160:	b292      	uxth	r2, r2
 8019162:	eba5 0a03 	sub.w	sl, r5, r3
 8019166:	b214      	sxth	r4, r2
 8019168:	eba9 0000 	sub.w	r0, r9, r0
 801916c:	9b02      	ldr	r3, [sp, #8]
 801916e:	fb0e f000 	mul.w	r0, lr, r0
 8019172:	fb04 fa0a 	mul.w	sl, r4, sl
 8019176:	00db      	lsls	r3, r3, #3
 8019178:	4550      	cmp	r0, sl
 801917a:	445b      	add	r3, fp
 801917c:	db03      	blt.n	8019186 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 801917e:	f8a3 e0b2 	strh.w	lr, [r3, #178]	; 0xb2
 8019182:	4494      	add	ip, r2
 8019184:	e732      	b.n	8018fec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8019186:	9a04      	ldr	r2, [sp, #16]
 8019188:	f8a3 20ac 	strh.w	r2, [r3, #172]	; 0xac
 801918c:	f8a3 40b0 	strh.w	r4, [r3, #176]	; 0xb0
 8019190:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	; 0xae
 8019194:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8019198:	4431      	add	r1, r6
 801919a:	e75c      	b.n	8019056 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 801919c:	9b08      	ldr	r3, [sp, #32]
 801919e:	eba3 0308 	sub.w	r3, r3, r8
 80191a2:	b29b      	uxth	r3, r3
 80191a4:	2d06      	cmp	r5, #6
 80191a6:	b218      	sxth	r0, r3
 80191a8:	d813      	bhi.n	80191d2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 80191aa:	9b07      	ldr	r3, [sp, #28]
 80191ac:	f8a4 30a6 	strh.w	r3, [r4, #166]	; 0xa6
 80191b0:	1c6b      	adds	r3, r5, #1
 80191b2:	f8a4 00aa 	strh.w	r0, [r4, #170]	; 0xaa
 80191b6:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 80191ba:	9b01      	ldr	r3, [sp, #4]
 80191bc:	9901      	ldr	r1, [sp, #4]
 80191be:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 80191c2:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 80191c6:	805a      	strh	r2, [r3, #2]
 80191c8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80191ca:	809a      	strh	r2, [r3, #4]
 80191cc:	f8a3 e006 	strh.w	lr, [r3, #6]
 80191d0:	e75f      	b.n	8019092 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 80191d2:	9c02      	ldr	r4, [sp, #8]
 80191d4:	4570      	cmp	r0, lr
 80191d6:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 80191da:	db0d      	blt.n	80191f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 80191dc:	4431      	add	r1, r6
 80191de:	9b06      	ldr	r3, [sp, #24]
 80191e0:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 80191e4:	b289      	uxth	r1, r1
 80191e6:	445c      	add	r4, fp
 80191e8:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80191ec:	4419      	add	r1, r3
 80191ee:	f8a4 10ae 	strh.w	r1, [r4, #174]	; 0xae
 80191f2:	f8a4 00b2 	strh.w	r0, [r4, #178]	; 0xb2
 80191f6:	e583      	b.n	8018d00 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80191f8:	445c      	add	r4, fp
 80191fa:	f8a4 e0b2 	strh.w	lr, [r4, #178]	; 0xb2
 80191fe:	e79b      	b.n	8019138 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 8019200:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8019204:	1e65      	subs	r5, r4, #1
 8019206:	b2ad      	uxth	r5, r5
 8019208:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 801920c:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8019210:	42b5      	cmp	r5, r6
 8019212:	d044      	beq.n	801929e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 8019214:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8019218:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	; 0xa6
 801921c:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8019220:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	; 0xa4
 8019224:	4282      	cmp	r2, r0
 8019226:	d11f      	bne.n	8019268 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8019228:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
 801922c:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8019230:	459c      	cmp	ip, r3
 8019232:	d119      	bne.n	8019268 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8019234:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	; 0xa8
 8019238:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 801923c:	19d8      	adds	r0, r3, r7
 801923e:	b200      	sxth	r0, r0
 8019240:	4288      	cmp	r0, r1
 8019242:	d109      	bne.n	8019258 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 8019244:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 8019248:	4413      	add	r3, r2
 801924a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 801924e:	4629      	mov	r1, r5
 8019250:	9801      	ldr	r0, [sp, #4]
 8019252:	f7ff fd2b 	bl	8018cac <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8019256:	e003      	b.n	8019260 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8019258:	4411      	add	r1, r2
 801925a:	b209      	sxth	r1, r1
 801925c:	42b9      	cmp	r1, r7
 801925e:	d0f3      	beq.n	8019248 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 8019260:	3d01      	subs	r5, #1
 8019262:	b2ad      	uxth	r5, r5
 8019264:	3c08      	subs	r4, #8
 8019266:	e7d3      	b.n	8019210 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 8019268:	42b9      	cmp	r1, r7
 801926a:	d1f9      	bne.n	8019260 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 801926c:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	; 0x2c
 8019270:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8019274:	4299      	cmp	r1, r3
 8019276:	d1f3      	bne.n	8019260 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8019278:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 801927c:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8019280:	181f      	adds	r7, r3, r0
 8019282:	b23f      	sxth	r7, r7
 8019284:	42ba      	cmp	r2, r7
 8019286:	d105      	bne.n	8019294 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 8019288:	f8ad 002a 	strh.w	r0, [sp, #42]	; 0x2a
 801928c:	440b      	add	r3, r1
 801928e:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8019292:	e7dc      	b.n	801924e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 8019294:	440a      	add	r2, r1
 8019296:	b212      	sxth	r2, r2
 8019298:	4290      	cmp	r0, r2
 801929a:	d1e1      	bne.n	8019260 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 801929c:	e7f6      	b.n	801928c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 801929e:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	; 0xec
 80192a2:	2e07      	cmp	r6, #7
 80192a4:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 80192a8:	d812      	bhi.n	80192d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 80192aa:	1c75      	adds	r5, r6, #1
 80192ac:	f8ab 50ec 	strh.w	r5, [fp, #236]	; 0xec
 80192b0:	9d01      	ldr	r5, [sp, #4]
 80192b2:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 80192b6:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 80192ba:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 80192be:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 80192c2:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 80192c6:	442c      	add	r4, r5
 80192c8:	8061      	strh	r1, [r4, #2]
 80192ca:	80a2      	strh	r2, [r4, #4]
 80192cc:	80e3      	strh	r3, [r4, #6]
 80192ce:	e581      	b.n	8018dd4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80192d0:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 80192d4:	3e01      	subs	r6, #1
 80192d6:	445c      	add	r4, fp
 80192d8:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 80192dc:	f04f 37ff 	mov.w	r7, #4294967295
 80192e0:	2500      	movs	r5, #0
 80192e2:	9305      	str	r3, [sp, #20]
 80192e4:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 80192e8:	9302      	str	r3, [sp, #8]
 80192ea:	1e72      	subs	r2, r6, #1
 80192ec:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 80192f0:	9304      	str	r3, [sp, #16]
 80192f2:	4691      	mov	r9, r2
 80192f4:	f104 03a4 	add.w	r3, r4, #164	; 0xa4
 80192f8:	f1b9 3fff 	cmp.w	r9, #4294967295
 80192fc:	bf14      	ite	ne
 80192fe:	9905      	ldrne	r1, [sp, #20]
 8019300:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 8019304:	6818      	ldr	r0, [r3, #0]
 8019306:	9207      	str	r2, [sp, #28]
 8019308:	bf18      	it	ne
 801930a:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 801930e:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8019312:	f8be 1006 	ldrh.w	r1, [lr, #6]
 8019316:	f8be 8004 	ldrh.w	r8, [lr, #4]
 801931a:	9306      	str	r3, [sp, #24]
 801931c:	fb18 f801 	smulbb	r8, r8, r1
 8019320:	6859      	ldr	r1, [r3, #4]
 8019322:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8019326:	4671      	mov	r1, lr
 8019328:	a80c      	add	r0, sp, #48	; 0x30
 801932a:	f7ff fafb 	bl	8018924 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801932e:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 8019332:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 8019336:	9b04      	ldr	r3, [sp, #16]
 8019338:	9a02      	ldr	r2, [sp, #8]
 801933a:	fb10 f001 	smulbb	r0, r0, r1
 801933e:	fb02 8803 	mla	r8, r2, r3, r8
 8019342:	eba0 0108 	sub.w	r1, r0, r8
 8019346:	f04f 0c08 	mov.w	ip, #8
 801934a:	fb90 f0fc 	sdiv	r0, r0, ip
 801934e:	4288      	cmp	r0, r1
 8019350:	dc20      	bgt.n	8019394 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 8019352:	4551      	cmp	r1, sl
 8019354:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8019358:	da03      	bge.n	8019362 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68e>
 801935a:	b1d9      	cbz	r1, 8019394 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 801935c:	468a      	mov	sl, r1
 801935e:	464f      	mov	r7, r9
 8019360:	4635      	mov	r5, r6
 8019362:	f109 39ff 	add.w	r9, r9, #4294967295
 8019366:	f119 0f02 	cmn.w	r9, #2
 801936a:	d1c5      	bne.n	80192f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 801936c:	4616      	mov	r6, r2
 801936e:	3201      	adds	r2, #1
 8019370:	f1a4 0408 	sub.w	r4, r4, #8
 8019374:	d1b6      	bne.n	80192e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 8019376:	9b01      	ldr	r3, [sp, #4]
 8019378:	b2ac      	uxth	r4, r5
 801937a:	00ed      	lsls	r5, r5, #3
 801937c:	1958      	adds	r0, r3, r5
 801937e:	1c7b      	adds	r3, r7, #1
 8019380:	d10b      	bne.n	801939a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>
 8019382:	4601      	mov	r1, r0
 8019384:	9803      	ldr	r0, [sp, #12]
 8019386:	f7ff facd 	bl	8018924 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801938a:	4621      	mov	r1, r4
 801938c:	9801      	ldr	r0, [sp, #4]
 801938e:	f7ff fc8d 	bl	8018cac <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8019392:	e4b5      	b.n	8018d00 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8019394:	464f      	mov	r7, r9
 8019396:	4635      	mov	r5, r6
 8019398:	e7ed      	b.n	8019376 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a2>
 801939a:	9b01      	ldr	r3, [sp, #4]
 801939c:	00ff      	lsls	r7, r7, #3
 801939e:	19d9      	adds	r1, r3, r7
 80193a0:	f7ff fac0 	bl	8018924 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 80193a4:	9b03      	ldr	r3, [sp, #12]
 80193a6:	cb03      	ldmia	r3!, {r0, r1}
 80193a8:	445f      	add	r7, fp
 80193aa:	445d      	add	r5, fp
 80193ac:	f8c7 00ac 	str.w	r0, [r7, #172]	; 0xac
 80193b0:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
 80193b4:	f855 0fac 	ldr.w	r0, [r5, #172]!
 80193b8:	9b03      	ldr	r3, [sp, #12]
 80193ba:	6869      	ldr	r1, [r5, #4]
 80193bc:	c303      	stmia	r3!, {r0, r1}
 80193be:	e7e4      	b.n	801938a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b6>

080193c0 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 80193c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80193c4:	f500 7698 	add.w	r6, r0, #304	; 0x130
 80193c8:	b09b      	sub	sp, #108	; 0x6c
 80193ca:	4604      	mov	r4, r0
 80193cc:	4630      	mov	r0, r6
 80193ce:	f7f9 fbe0 	bl	8012b92 <_ZNK8touchgfx4Rect7isEmptyEv>
 80193d2:	4605      	mov	r5, r0
 80193d4:	b948      	cbnz	r0, 80193ea <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 80193d6:	6823      	ldr	r3, [r4, #0]
 80193d8:	e896 0006 	ldmia.w	r6, {r1, r2}
 80193dc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80193de:	4620      	mov	r0, r4
 80193e0:	4798      	blx	r3
 80193e2:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 80193e6:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 80193ea:	4bc6      	ldr	r3, [pc, #792]	; (8019704 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 80193ec:	681b      	ldr	r3, [r3, #0]
 80193ee:	2b00      	cmp	r3, #0
 80193f0:	d03f      	beq.n	8019472 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 80193f2:	4dc5      	ldr	r5, [pc, #788]	; (8019708 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 80193f4:	4628      	mov	r0, r5
 80193f6:	f7f9 fbcc 	bl	8012b92 <_ZNK8touchgfx4Rect7isEmptyEv>
 80193fa:	4606      	mov	r6, r0
 80193fc:	2800      	cmp	r0, #0
 80193fe:	d138      	bne.n	8019472 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8019400:	4628      	mov	r0, r5
 8019402:	f7ff f907 	bl	8018614 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8019406:	6823      	ldr	r3, [r4, #0]
 8019408:	6829      	ldr	r1, [r5, #0]
 801940a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801940c:	686a      	ldr	r2, [r5, #4]
 801940e:	4620      	mov	r0, r4
 8019410:	4798      	blx	r3
 8019412:	802e      	strh	r6, [r5, #0]
 8019414:	806e      	strh	r6, [r5, #2]
 8019416:	80ae      	strh	r6, [r5, #4]
 8019418:	80ee      	strh	r6, [r5, #6]
 801941a:	f10d 0824 	add.w	r8, sp, #36	; 0x24
 801941e:	4dbb      	ldr	r5, [pc, #748]	; (801970c <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 8019420:	4640      	mov	r0, r8
 8019422:	f7ff fbeb 	bl	8018bfc <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8019426:	882e      	ldrh	r6, [r5, #0]
 8019428:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 801942c:	4633      	mov	r3, r6
 801942e:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8019432:	42bb      	cmp	r3, r7
 8019434:	d224      	bcs.n	8019480 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8019436:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 801943a:	2907      	cmp	r1, #7
 801943c:	d816      	bhi.n	801946c <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 801943e:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 8019442:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 8019446:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 801944a:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 801944e:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 8019452:	1c4a      	adds	r2, r1, #1
 8019454:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 8019458:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 801945c:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 8019460:	f8a2 a002 	strh.w	sl, [r2, #2]
 8019464:	f8a2 e004 	strh.w	lr, [r2, #4]
 8019468:	f8a2 c006 	strh.w	ip, [r2, #6]
 801946c:	3301      	adds	r3, #1
 801946e:	b29b      	uxth	r3, r3
 8019470:	e7df      	b.n	8019432 <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 8019472:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8019476:	2b00      	cmp	r3, #0
 8019478:	d1cf      	bne.n	801941a <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 801947a:	b01b      	add	sp, #108	; 0x6c
 801947c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019480:	f8b4 312e 	ldrh.w	r3, [r4, #302]	; 0x12e
 8019484:	42b3      	cmp	r3, r6
 8019486:	d90c      	bls.n	80194a2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 8019488:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 801948c:	6822      	ldr	r2, [r4, #0]
 801948e:	f8d3 10ee 	ldr.w	r1, [r3, #238]	; 0xee
 8019492:	6c17      	ldr	r7, [r2, #64]	; 0x40
 8019494:	f8d3 20f2 	ldr.w	r2, [r3, #242]	; 0xf2
 8019498:	4620      	mov	r0, r4
 801949a:	3601      	adds	r6, #1
 801949c:	47b8      	blx	r7
 801949e:	b2b6      	uxth	r6, r6
 80194a0:	e7ee      	b.n	8019480 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 80194a2:	4a9b      	ldr	r2, [pc, #620]	; (8019710 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 80194a4:	6813      	ldr	r3, [r2, #0]
 80194a6:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 80194aa:	2b01      	cmp	r3, #1
 80194ac:	4691      	mov	r9, r2
 80194ae:	f040 80e2 	bne.w	8019676 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b6>
 80194b2:	8829      	ldrh	r1, [r5, #0]
 80194b4:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 80194b8:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 80194bc:	33ae      	adds	r3, #174	; 0xae
 80194be:	2600      	movs	r6, #0
 80194c0:	428f      	cmp	r7, r1
 80194c2:	f103 0308 	add.w	r3, r3, #8
 80194c6:	dd0a      	ble.n	80194de <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 80194c8:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 80194cc:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 80194d0:	4402      	add	r2, r0
 80194d2:	b212      	sxth	r2, r2
 80194d4:	4296      	cmp	r6, r2
 80194d6:	bfb8      	it	lt
 80194d8:	4616      	movlt	r6, r2
 80194da:	3101      	adds	r1, #1
 80194dc:	e7f0      	b.n	80194c0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 80194de:	4b8d      	ldr	r3, [pc, #564]	; (8019714 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 80194e0:	f8df 922c 	ldr.w	r9, [pc, #556]	; 8019710 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>
 80194e4:	881b      	ldrh	r3, [r3, #0]
 80194e6:	2b0f      	cmp	r3, #15
 80194e8:	bf88      	it	hi
 80194ea:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 80194ee:	f04f 0300 	mov.w	r3, #0
 80194f2:	e9cd 3305 	strd	r3, r3, [sp, #20]
 80194f6:	bf98      	it	ls
 80194f8:	f04f 0b01 	movls.w	fp, #1
 80194fc:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 8019500:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 8019504:	4b82      	ldr	r3, [pc, #520]	; (8019710 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8019506:	4438      	add	r0, r7
 8019508:	b207      	sxth	r7, r0
 801950a:	6818      	ldr	r0, [r3, #0]
 801950c:	42b7      	cmp	r7, r6
 801950e:	6803      	ldr	r3, [r0, #0]
 8019510:	f280 8083 	bge.w	801961a <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 8019514:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8019518:	4798      	blx	r3
 801951a:	eb07 030b 	add.w	r3, r7, fp
 801951e:	4298      	cmp	r0, r3
 8019520:	da07      	bge.n	8019532 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8019522:	42b0      	cmp	r0, r6
 8019524:	da05      	bge.n	8019532 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8019526:	4287      	cmp	r7, r0
 8019528:	dd6c      	ble.n	8019604 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 801952a:	2f00      	cmp	r7, #0
 801952c:	dd6a      	ble.n	8019604 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 801952e:	4630      	mov	r0, r6
 8019530:	e004      	b.n	801953c <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
 8019532:	4287      	cmp	r7, r0
 8019534:	dcfb      	bgt.n	801952e <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 8019536:	42b0      	cmp	r0, r6
 8019538:	bfa8      	it	ge
 801953a:	4630      	movge	r0, r6
 801953c:	4b76      	ldr	r3, [pc, #472]	; (8019718 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 801953e:	f8ad 7016 	strh.w	r7, [sp, #22]
 8019542:	1bc0      	subs	r0, r0, r7
 8019544:	f9b3 3000 	ldrsh.w	r3, [r3]
 8019548:	882f      	ldrh	r7, [r5, #0]
 801954a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801954e:	2200      	movs	r2, #0
 8019550:	f8ad 2014 	strh.w	r2, [sp, #20]
 8019554:	f8ad 001a 	strh.w	r0, [sp, #26]
 8019558:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 801955c:	42bb      	cmp	r3, r7
 801955e:	d9cd      	bls.n	80194fc <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8019560:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 8019564:	ab07      	add	r3, sp, #28
 8019566:	f852 0fac 	ldr.w	r0, [r2, #172]!
 801956a:	6851      	ldr	r1, [r2, #4]
 801956c:	c303      	stmia	r3!, {r0, r1}
 801956e:	a905      	add	r1, sp, #20
 8019570:	a807      	add	r0, sp, #28
 8019572:	f7ff f93e 	bl	80187f2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8019576:	2800      	cmp	r0, #0
 8019578:	d04c      	beq.n	8019614 <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 801957a:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 801957e:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 8019582:	f8bd a020 	ldrh.w	sl, [sp, #32]
 8019586:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 801958a:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 801958e:	9302      	str	r3, [sp, #8]
 8019590:	4686      	mov	lr, r0
 8019592:	4290      	cmp	r0, r2
 8019594:	4450      	add	r0, sl
 8019596:	f8bd a018 	ldrh.w	sl, [sp, #24]
 801959a:	bfb8      	it	lt
 801959c:	4696      	movlt	lr, r2
 801959e:	4452      	add	r2, sl
 80195a0:	4299      	cmp	r1, r3
 80195a2:	b280      	uxth	r0, r0
 80195a4:	b292      	uxth	r2, r2
 80195a6:	468c      	mov	ip, r1
 80195a8:	fa0f fa82 	sxth.w	sl, r2
 80195ac:	bfb8      	it	lt
 80195ae:	469c      	movlt	ip, r3
 80195b0:	b203      	sxth	r3, r0
 80195b2:	4553      	cmp	r3, sl
 80195b4:	bfb8      	it	lt
 80195b6:	4602      	movlt	r2, r0
 80195b8:	eba2 020e 	sub.w	r2, r2, lr
 80195bc:	f8ad 2020 	strh.w	r2, [sp, #32]
 80195c0:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 80195c4:	9b02      	ldr	r3, [sp, #8]
 80195c6:	f8ad e01c 	strh.w	lr, [sp, #28]
 80195ca:	4411      	add	r1, r2
 80195cc:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 80195d0:	f8ad c01e 	strh.w	ip, [sp, #30]
 80195d4:	4413      	add	r3, r2
 80195d6:	b289      	uxth	r1, r1
 80195d8:	b29b      	uxth	r3, r3
 80195da:	b208      	sxth	r0, r1
 80195dc:	b21a      	sxth	r2, r3
 80195de:	4290      	cmp	r0, r2
 80195e0:	bfb8      	it	lt
 80195e2:	460b      	movlt	r3, r1
 80195e4:	eba3 030c 	sub.w	r3, r3, ip
 80195e8:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 80195ec:	a807      	add	r0, sp, #28
 80195ee:	f7f9 fad0 	bl	8012b92 <_ZNK8touchgfx4Rect7isEmptyEv>
 80195f2:	b920      	cbnz	r0, 80195fe <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 80195f4:	6823      	ldr	r3, [r4, #0]
 80195f6:	a907      	add	r1, sp, #28
 80195f8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80195fa:	4620      	mov	r0, r4
 80195fc:	4798      	blx	r3
 80195fe:	3701      	adds	r7, #1
 8019600:	b2bf      	uxth	r7, r7
 8019602:	e7a9      	b.n	8019558 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 8019604:	f8d9 0000 	ldr.w	r0, [r9]
 8019608:	6803      	ldr	r3, [r0, #0]
 801960a:	2101      	movs	r1, #1
 801960c:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8019610:	4798      	blx	r3
 8019612:	e773      	b.n	80194fc <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8019614:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8019618:	e7e8      	b.n	80195ec <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 801961a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801961c:	4798      	blx	r3
 801961e:	4b3f      	ldr	r3, [pc, #252]	; (801971c <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 8019620:	781b      	ldrb	r3, [r3, #0]
 8019622:	2b00      	cmp	r3, #0
 8019624:	f43f af29 	beq.w	801947a <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8019628:	2300      	movs	r3, #0
 801962a:	f8a4 312e 	strh.w	r3, [r4, #302]	; 0x12e
 801962e:	882b      	ldrh	r3, [r5, #0]
 8019630:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 8019634:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8019638:	42ab      	cmp	r3, r5
 801963a:	f4bf af1e 	bcs.w	801947a <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 801963e:	f8b4 112e 	ldrh.w	r1, [r4, #302]	; 0x12e
 8019642:	2907      	cmp	r1, #7
 8019644:	d814      	bhi.n	8019670 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b0>
 8019646:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 801964a:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 801964e:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 8019652:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 8019656:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 801965a:	1c4a      	adds	r2, r1, #1
 801965c:	f8a4 212e 	strh.w	r2, [r4, #302]	; 0x12e
 8019660:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 8019664:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 8019668:	f8a2 c002 	strh.w	ip, [r2, #2]
 801966c:	8097      	strh	r7, [r2, #4]
 801966e:	80d6      	strh	r6, [r2, #6]
 8019670:	3301      	adds	r3, #1
 8019672:	b29b      	uxth	r3, r3
 8019674:	e7e0      	b.n	8019638 <_ZN8touchgfx11Application15drawCachedAreasEv+0x278>
 8019676:	2b02      	cmp	r3, #2
 8019678:	f040 8133 	bne.w	80198e2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 801967c:	4b28      	ldr	r3, [pc, #160]	; (8019720 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 801967e:	781b      	ldrb	r3, [r3, #0]
 8019680:	2b01      	cmp	r3, #1
 8019682:	f104 0aac 	add.w	sl, r4, #172	; 0xac
 8019686:	f000 8098 	beq.w	80197ba <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 801968a:	882a      	ldrh	r2, [r5, #0]
 801968c:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	; 0xec
 8019690:	3201      	adds	r2, #1
 8019692:	b292      	uxth	r2, r2
 8019694:	2900      	cmp	r1, #0
 8019696:	d0c2      	beq.n	801961e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8019698:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	; 0xae
 801969c:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
 80196a0:	441e      	add	r6, r3
 80196a2:	b236      	sxth	r6, r6
 80196a4:	4694      	mov	ip, r2
 80196a6:	f04f 0900 	mov.w	r9, #0
 80196aa:	fa1f f38c 	uxth.w	r3, ip
 80196ae:	4299      	cmp	r1, r3
 80196b0:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 80196b4:	f240 80bf 	bls.w	8019836 <_ZN8touchgfx11Application15drawCachedAreasEv+0x476>
 80196b8:	4427      	add	r7, r4
 80196ba:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 80196be:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	; 0xae
 80196c2:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	; 0xae
 80196c6:	4283      	cmp	r3, r0
 80196c8:	f340 80a1 	ble.w	801980e <_ZN8touchgfx11Application15drawCachedAreasEv+0x44e>
 80196cc:	f8be 60b2 	ldrh.w	r6, [lr, #178]	; 0xb2
 80196d0:	4406      	add	r6, r0
 80196d2:	b236      	sxth	r6, r6
 80196d4:	429e      	cmp	r6, r3
 80196d6:	bfa8      	it	ge
 80196d8:	461e      	movge	r6, r3
 80196da:	46e1      	mov	r9, ip
 80196dc:	f10c 0c01 	add.w	ip, ip, #1
 80196e0:	e7e3      	b.n	80196aa <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ea>
 80196e2:	d10a      	bne.n	80196fa <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 80196e4:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	; 0xb2
 80196e8:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	; 0xb2
 80196ec:	4562      	cmp	r2, ip
 80196ee:	bfb8      	it	lt
 80196f0:	4662      	movlt	r2, ip
 80196f2:	4288      	cmp	r0, r1
 80196f4:	bfb8      	it	lt
 80196f6:	461f      	movlt	r7, r3
 80196f8:	e087      	b.n	801980a <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 80196fa:	428a      	cmp	r2, r1
 80196fc:	bfb8      	it	lt
 80196fe:	460a      	movlt	r2, r1
 8019700:	e083      	b.n	801980a <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 8019702:	bf00      	nop
 8019704:	2001387c 	.word	0x2001387c
 8019708:	20013888 	.word	0x20013888
 801970c:	2000008c 	.word	0x2000008c
 8019710:	2001383c 	.word	0x2001383c
 8019714:	20013832 	.word	0x20013832
 8019718:	20013830 	.word	0x20013830
 801971c:	2001383a 	.word	0x2001383a
 8019720:	20013834 	.word	0x20013834
 8019724:	19a1      	adds	r1, r4, r6
 8019726:	ab07      	add	r3, sp, #28
 8019728:	f851 0fac 	ldr.w	r0, [r1, #172]!
 801972c:	6849      	ldr	r1, [r1, #4]
 801972e:	c303      	stmia	r3!, {r0, r1}
 8019730:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8019734:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8019738:	2b13      	cmp	r3, #19
 801973a:	bfd8      	it	le
 801973c:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 8019740:	f8ad 201c 	strh.w	r2, [sp, #28]
 8019744:	440b      	add	r3, r1
 8019746:	1a9b      	subs	r3, r3, r2
 8019748:	a807      	add	r0, sp, #28
 801974a:	f8ad 3020 	strh.w	r3, [sp, #32]
 801974e:	f7fe ff7b 	bl	8018648 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8019752:	a807      	add	r0, sp, #28
 8019754:	f7f9 fa1d 	bl	8012b92 <_ZNK8touchgfx4Rect7isEmptyEv>
 8019758:	bb78      	cbnz	r0, 80197ba <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 801975a:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 801975e:	f8d9 0000 	ldr.w	r0, [r9]
 8019762:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8019766:	f8d0 e000 	ldr.w	lr, [r0]
 801976a:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 801976e:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8019772:	f1bc 0f14 	cmp.w	ip, #20
 8019776:	bfa8      	it	ge
 8019778:	f04f 0c14 	movge.w	ip, #20
 801977c:	fa1f fc8c 	uxth.w	ip, ip
 8019780:	f8cd c000 	str.w	ip, [sp]
 8019784:	f8de b090 	ldr.w	fp, [lr, #144]	; 0x90
 8019788:	47d8      	blx	fp
 801978a:	4683      	mov	fp, r0
 801978c:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8019790:	a807      	add	r0, sp, #28
 8019792:	f7fe ff3f 	bl	8018614 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8019796:	6823      	ldr	r3, [r4, #0]
 8019798:	4426      	add	r6, r4
 801979a:	4620      	mov	r0, r4
 801979c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801979e:	a907      	add	r1, sp, #28
 80197a0:	4798      	blx	r3
 80197a2:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 80197a6:	eba0 000b 	sub.w	r0, r0, fp
 80197aa:	b200      	sxth	r0, r0
 80197ac:	f8a6 00b0 	strh.w	r0, [r6, #176]	; 0xb0
 80197b0:	b918      	cbnz	r0, 80197ba <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 80197b2:	b2b9      	uxth	r1, r7
 80197b4:	4650      	mov	r0, sl
 80197b6:	f7ff fa79 	bl	8018cac <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80197ba:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	; 0xec
 80197be:	f1bb 0f00 	cmp.w	fp, #0
 80197c2:	f43f af2c 	beq.w	801961e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 80197c6:	882b      	ldrh	r3, [r5, #0]
 80197c8:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	; 0xac
 80197cc:	3301      	adds	r3, #1
 80197ce:	b29b      	uxth	r3, r3
 80197d0:	2700      	movs	r7, #0
 80197d2:	b299      	uxth	r1, r3
 80197d4:	458b      	cmp	fp, r1
 80197d6:	ea4f 06c7 	mov.w	r6, r7, lsl #3
 80197da:	d9a3      	bls.n	8019724 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 80197dc:	4426      	add	r6, r4
 80197de:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 80197e2:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	; 0xac
 80197e6:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 80197ea:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	; 0xac
 80197ee:	4408      	add	r0, r1
 80197f0:	f8be 10b0 	ldrh.w	r1, [lr, #176]	; 0xb0
 80197f4:	4461      	add	r1, ip
 80197f6:	b200      	sxth	r0, r0
 80197f8:	b209      	sxth	r1, r1
 80197fa:	4288      	cmp	r0, r1
 80197fc:	f6bf af71 	bge.w	80196e2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x322>
 8019800:	4584      	cmp	ip, r0
 8019802:	4662      	mov	r2, ip
 8019804:	461f      	mov	r7, r3
 8019806:	bfb8      	it	lt
 8019808:	4602      	movlt	r2, r0
 801980a:	3301      	adds	r3, #1
 801980c:	e7e1      	b.n	80197d2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x412>
 801980e:	d10e      	bne.n	801982e <_ZN8touchgfx11Application15drawCachedAreasEv+0x46e>
 8019810:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	; 0xb0
 8019814:	f8be e0b2 	ldrh.w	lr, [lr, #178]	; 0xb2
 8019818:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	; 0xb0
 801981c:	4473      	add	r3, lr
 801981e:	b21b      	sxth	r3, r3
 8019820:	429e      	cmp	r6, r3
 8019822:	bfa8      	it	ge
 8019824:	461e      	movge	r6, r3
 8019826:	4287      	cmp	r7, r0
 8019828:	bfb8      	it	lt
 801982a:	46e1      	movlt	r9, ip
 801982c:	e756      	b.n	80196dc <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 801982e:	4286      	cmp	r6, r0
 8019830:	bfa8      	it	ge
 8019832:	4606      	movge	r6, r0
 8019834:	e752      	b.n	80196dc <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8019836:	eb0a 0007 	add.w	r0, sl, r7
 801983a:	4427      	add	r7, r4
 801983c:	e9cd 2102 	strd	r2, r1, [sp, #8]
 8019840:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	; 0xb2
 8019844:	f1bb 0f13 	cmp.w	fp, #19
 8019848:	bfde      	ittt	le
 801984a:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	; 0xae
 801984e:	445e      	addle	r6, fp
 8019850:	b236      	sxthle	r6, r6
 8019852:	f7f9 f99e 	bl	8012b92 <_ZNK8touchgfx4Rect7isEmptyEv>
 8019856:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 801985a:	2800      	cmp	r0, #0
 801985c:	f47f af1a 	bne.w	8019694 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d4>
 8019860:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	; 0xae
 8019864:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8019868:	482a      	ldr	r0, [pc, #168]	; (8019914 <_ZN8touchgfx11Application15drawCachedAreasEv+0x554>)
 801986a:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	; 0xac
 801986e:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	; 0xb0
 8019872:	6800      	ldr	r0, [r0, #0]
 8019874:	f8ad 101c 	strh.w	r1, [sp, #28]
 8019878:	1ab6      	subs	r6, r6, r2
 801987a:	2e14      	cmp	r6, #20
 801987c:	f8ad 201e 	strh.w	r2, [sp, #30]
 8019880:	f8ad 3020 	strh.w	r3, [sp, #32]
 8019884:	bfa8      	it	ge
 8019886:	2614      	movge	r6, #20
 8019888:	f8d0 c000 	ldr.w	ip, [r0]
 801988c:	b2b6      	uxth	r6, r6
 801988e:	fa1f fb8b 	uxth.w	fp, fp
 8019892:	455e      	cmp	r6, fp
 8019894:	bf94      	ite	ls
 8019896:	9600      	strls	r6, [sp, #0]
 8019898:	f8cd b000 	strhi.w	fp, [sp]
 801989c:	b292      	uxth	r2, r2
 801989e:	f8dc 6090 	ldr.w	r6, [ip, #144]	; 0x90
 80198a2:	b29b      	uxth	r3, r3
 80198a4:	b289      	uxth	r1, r1
 80198a6:	47b0      	blx	r6
 80198a8:	6823      	ldr	r3, [r4, #0]
 80198aa:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 80198ae:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80198b0:	a907      	add	r1, sp, #28
 80198b2:	4620      	mov	r0, r4
 80198b4:	4798      	blx	r3
 80198b6:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 80198ba:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	; 0xb2
 80198be:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	; 0xae
 80198c2:	1a5b      	subs	r3, r3, r1
 80198c4:	440a      	add	r2, r1
 80198c6:	b21b      	sxth	r3, r3
 80198c8:	f8a7 20ae 	strh.w	r2, [r7, #174]	; 0xae
 80198cc:	f8a7 30b2 	strh.w	r3, [r7, #178]	; 0xb2
 80198d0:	2b00      	cmp	r3, #0
 80198d2:	f47f aeda 	bne.w	801968a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 80198d6:	fa1f f189 	uxth.w	r1, r9
 80198da:	4650      	mov	r0, sl
 80198dc:	f7ff f9e6 	bl	8018cac <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80198e0:	e6d3      	b.n	801968a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 80198e2:	882e      	ldrh	r6, [r5, #0]
 80198e4:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 80198e8:	42b3      	cmp	r3, r6
 80198ea:	f67f ae98 	bls.w	801961e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 80198ee:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 80198f2:	ab07      	add	r3, sp, #28
 80198f4:	f852 0fac 	ldr.w	r0, [r2, #172]!
 80198f8:	6851      	ldr	r1, [r2, #4]
 80198fa:	c303      	stmia	r3!, {r0, r1}
 80198fc:	a807      	add	r0, sp, #28
 80198fe:	f7f9 f948 	bl	8012b92 <_ZNK8touchgfx4Rect7isEmptyEv>
 8019902:	b920      	cbnz	r0, 801990e <_ZN8touchgfx11Application15drawCachedAreasEv+0x54e>
 8019904:	6823      	ldr	r3, [r4, #0]
 8019906:	a907      	add	r1, sp, #28
 8019908:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801990a:	4620      	mov	r0, r4
 801990c:	4798      	blx	r3
 801990e:	3601      	adds	r6, #1
 8019910:	b2b6      	uxth	r6, r6
 8019912:	e7e7      	b.n	80198e4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x524>
 8019914:	2001383c 	.word	0x2001383c

08019918 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8019918:	4b03      	ldr	r3, [pc, #12]	; (8019928 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 801991a:	2200      	movs	r2, #0
 801991c:	801a      	strh	r2, [r3, #0]
 801991e:	805a      	strh	r2, [r3, #2]
 8019920:	809a      	strh	r2, [r3, #4]
 8019922:	80da      	strh	r2, [r3, #6]
 8019924:	4770      	bx	lr
 8019926:	bf00      	nop
 8019928:	20013888 	.word	0x20013888

0801992c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 801992c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019930:	4606      	mov	r6, r0
 8019932:	b09d      	sub	sp, #116	; 0x74
 8019934:	a803      	add	r0, sp, #12
 8019936:	4614      	mov	r4, r2
 8019938:	468a      	mov	sl, r1
 801993a:	461d      	mov	r5, r3
 801993c:	f000 ff08 	bl	801a750 <_ZN8touchgfx12TextProviderC1Ev>
 8019940:	6833      	ldr	r3, [r6, #0]
 8019942:	4630      	mov	r0, r6
 8019944:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8019946:	4798      	blx	r3
 8019948:	6833      	ldr	r3, [r6, #0]
 801994a:	4607      	mov	r7, r0
 801994c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801994e:	4630      	mov	r0, r6
 8019950:	4798      	blx	r3
 8019952:	462a      	mov	r2, r5
 8019954:	9000      	str	r0, [sp, #0]
 8019956:	4621      	mov	r1, r4
 8019958:	463b      	mov	r3, r7
 801995a:	a803      	add	r0, sp, #12
 801995c:	f000 ff53 	bl	801a806 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8019960:	2500      	movs	r5, #0
 8019962:	462c      	mov	r4, r5
 8019964:	46a9      	mov	r9, r5
 8019966:	46a8      	mov	r8, r5
 8019968:	f242 0b0b 	movw	fp, #8203	; 0x200b
 801996c:	2300      	movs	r3, #0
 801996e:	9302      	str	r3, [sp, #8]
 8019970:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8019974:	429c      	cmp	r4, r3
 8019976:	d002      	beq.n	801997e <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8019978:	455c      	cmp	r4, fp
 801997a:	bf18      	it	ne
 801997c:	4625      	movne	r5, r4
 801997e:	ab02      	add	r3, sp, #8
 8019980:	4632      	mov	r2, r6
 8019982:	4651      	mov	r1, sl
 8019984:	a803      	add	r0, sp, #12
 8019986:	f001 fa41 	bl	801ae0c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801998a:	4604      	mov	r4, r0
 801998c:	b108      	cbz	r0, 8019992 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 801998e:	280a      	cmp	r0, #10
 8019990:	d10a      	bne.n	80199a8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 8019992:	45c1      	cmp	r9, r8
 8019994:	bf38      	it	cc
 8019996:	46c1      	movcc	r9, r8
 8019998:	f04f 0800 	mov.w	r8, #0
 801999c:	2c00      	cmp	r4, #0
 801999e:	d1e5      	bne.n	801996c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 80199a0:	4648      	mov	r0, r9
 80199a2:	b01d      	add	sp, #116	; 0x74
 80199a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80199a8:	9a02      	ldr	r2, [sp, #8]
 80199aa:	2a00      	cmp	r2, #0
 80199ac:	d0de      	beq.n	801996c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 80199ae:	7b57      	ldrb	r7, [r2, #13]
 80199b0:	6833      	ldr	r3, [r6, #0]
 80199b2:	8894      	ldrh	r4, [r2, #4]
 80199b4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80199b6:	007f      	lsls	r7, r7, #1
 80199b8:	f407 7080 	and.w	r0, r7, #256	; 0x100
 80199bc:	7a97      	ldrb	r7, [r2, #10]
 80199be:	4629      	mov	r1, r5
 80199c0:	4307      	orrs	r7, r0
 80199c2:	4630      	mov	r0, r6
 80199c4:	4798      	blx	r3
 80199c6:	4438      	add	r0, r7
 80199c8:	4480      	add	r8, r0
 80199ca:	fa1f f888 	uxth.w	r8, r8
 80199ce:	e7e5      	b.n	801999c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

080199d0 <_ZNK8touchgfx4Font12getCharWidthEt>:
 80199d0:	b508      	push	{r3, lr}
 80199d2:	6803      	ldr	r3, [r0, #0]
 80199d4:	68db      	ldr	r3, [r3, #12]
 80199d6:	4798      	blx	r3
 80199d8:	b128      	cbz	r0, 80199e6 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 80199da:	7b43      	ldrb	r3, [r0, #13]
 80199dc:	7a80      	ldrb	r0, [r0, #10]
 80199de:	005b      	lsls	r3, r3, #1
 80199e0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80199e4:	4318      	orrs	r0, r3
 80199e6:	bd08      	pop	{r3, pc}

080199e8 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 80199e8:	b40e      	push	{r1, r2, r3}
 80199ea:	b5f0      	push	{r4, r5, r6, r7, lr}
 80199ec:	b09e      	sub	sp, #120	; 0x78
 80199ee:	ab23      	add	r3, sp, #140	; 0x8c
 80199f0:	4605      	mov	r5, r0
 80199f2:	f853 4b04 	ldr.w	r4, [r3], #4
 80199f6:	9303      	str	r3, [sp, #12]
 80199f8:	a805      	add	r0, sp, #20
 80199fa:	f000 fea9 	bl	801a750 <_ZN8touchgfx12TextProviderC1Ev>
 80199fe:	682b      	ldr	r3, [r5, #0]
 8019a00:	4628      	mov	r0, r5
 8019a02:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8019a04:	4798      	blx	r3
 8019a06:	682b      	ldr	r3, [r5, #0]
 8019a08:	4606      	mov	r6, r0
 8019a0a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8019a0c:	4628      	mov	r0, r5
 8019a0e:	4798      	blx	r3
 8019a10:	4633      	mov	r3, r6
 8019a12:	ae1e      	add	r6, sp, #120	; 0x78
 8019a14:	4621      	mov	r1, r4
 8019a16:	9000      	str	r0, [sp, #0]
 8019a18:	9a03      	ldr	r2, [sp, #12]
 8019a1a:	2400      	movs	r4, #0
 8019a1c:	a805      	add	r0, sp, #20
 8019a1e:	f000 fef2 	bl	801a806 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8019a22:	f846 4d68 	str.w	r4, [r6, #-104]!
 8019a26:	462a      	mov	r2, r5
 8019a28:	4633      	mov	r3, r6
 8019a2a:	4621      	mov	r1, r4
 8019a2c:	a805      	add	r0, sp, #20
 8019a2e:	f001 f9ed 	bl	801ae0c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8019a32:	b1f0      	cbz	r0, 8019a72 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 8019a34:	280a      	cmp	r0, #10
 8019a36:	d018      	beq.n	8019a6a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8019a38:	9f04      	ldr	r7, [sp, #16]
 8019a3a:	b1b7      	cbz	r7, 8019a6a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8019a3c:	7b78      	ldrb	r0, [r7, #13]
 8019a3e:	7a3b      	ldrb	r3, [r7, #8]
 8019a40:	88ea      	ldrh	r2, [r5, #6]
 8019a42:	00c1      	lsls	r1, r0, #3
 8019a44:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8019a48:	4319      	orrs	r1, r3
 8019a4a:	0643      	lsls	r3, r0, #25
 8019a4c:	bf44      	itt	mi
 8019a4e:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 8019a52:	b219      	sxthmi	r1, r3
 8019a54:	0100      	lsls	r0, r0, #4
 8019a56:	79fb      	ldrb	r3, [r7, #7]
 8019a58:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8019a5c:	4303      	orrs	r3, r0
 8019a5e:	4413      	add	r3, r2
 8019a60:	1a5b      	subs	r3, r3, r1
 8019a62:	b21b      	sxth	r3, r3
 8019a64:	429c      	cmp	r4, r3
 8019a66:	bfb8      	it	lt
 8019a68:	461c      	movlt	r4, r3
 8019a6a:	4633      	mov	r3, r6
 8019a6c:	462a      	mov	r2, r5
 8019a6e:	2100      	movs	r1, #0
 8019a70:	e7dc      	b.n	8019a2c <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8019a72:	b2a0      	uxth	r0, r4
 8019a74:	b01e      	add	sp, #120	; 0x78
 8019a76:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8019a7a:	b003      	add	sp, #12
 8019a7c:	4770      	bx	lr

08019a7e <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 8019a7e:	7a43      	ldrb	r3, [r0, #9]
 8019a80:	8880      	ldrh	r0, [r0, #4]
 8019a82:	4418      	add	r0, r3
 8019a84:	b280      	uxth	r0, r0
 8019a86:	4770      	bx	lr

08019a88 <_ZNK8touchgfx4Font13getFontHeightEv>:
 8019a88:	6803      	ldr	r3, [r0, #0]
 8019a8a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8019a8c:	4718      	bx	r3

08019a8e <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 8019a8e:	b40e      	push	{r1, r2, r3}
 8019a90:	b570      	push	{r4, r5, r6, lr}
 8019a92:	b09d      	sub	sp, #116	; 0x74
 8019a94:	ab21      	add	r3, sp, #132	; 0x84
 8019a96:	4604      	mov	r4, r0
 8019a98:	f853 5b04 	ldr.w	r5, [r3], #4
 8019a9c:	9302      	str	r3, [sp, #8]
 8019a9e:	a803      	add	r0, sp, #12
 8019aa0:	f000 fe56 	bl	801a750 <_ZN8touchgfx12TextProviderC1Ev>
 8019aa4:	6823      	ldr	r3, [r4, #0]
 8019aa6:	4620      	mov	r0, r4
 8019aa8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8019aaa:	4798      	blx	r3
 8019aac:	6823      	ldr	r3, [r4, #0]
 8019aae:	4606      	mov	r6, r0
 8019ab0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8019ab2:	4620      	mov	r0, r4
 8019ab4:	4798      	blx	r3
 8019ab6:	4633      	mov	r3, r6
 8019ab8:	9000      	str	r0, [sp, #0]
 8019aba:	9a02      	ldr	r2, [sp, #8]
 8019abc:	4629      	mov	r1, r5
 8019abe:	a803      	add	r0, sp, #12
 8019ac0:	f000 fea1 	bl	801a806 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8019ac4:	a803      	add	r0, sp, #12
 8019ac6:	f001 fa6f 	bl	801afa8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8019aca:	2401      	movs	r4, #1
 8019acc:	b2a3      	uxth	r3, r4
 8019ace:	b140      	cbz	r0, 8019ae2 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 8019ad0:	280a      	cmp	r0, #10
 8019ad2:	bf08      	it	eq
 8019ad4:	3301      	addeq	r3, #1
 8019ad6:	a803      	add	r0, sp, #12
 8019ad8:	bf08      	it	eq
 8019ada:	b21c      	sxtheq	r4, r3
 8019adc:	f001 fa64 	bl	801afa8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8019ae0:	e7f4      	b.n	8019acc <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 8019ae2:	4618      	mov	r0, r3
 8019ae4:	b01d      	add	sp, #116	; 0x74
 8019ae6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8019aea:	b003      	add	sp, #12
 8019aec:	4770      	bx	lr

08019aee <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 8019aee:	b40e      	push	{r1, r2, r3}
 8019af0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8019af2:	b09e      	sub	sp, #120	; 0x78
 8019af4:	ab23      	add	r3, sp, #140	; 0x8c
 8019af6:	4604      	mov	r4, r0
 8019af8:	f853 5b04 	ldr.w	r5, [r3], #4
 8019afc:	9303      	str	r3, [sp, #12]
 8019afe:	a805      	add	r0, sp, #20
 8019b00:	f000 fe26 	bl	801a750 <_ZN8touchgfx12TextProviderC1Ev>
 8019b04:	6823      	ldr	r3, [r4, #0]
 8019b06:	4620      	mov	r0, r4
 8019b08:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8019b0a:	4798      	blx	r3
 8019b0c:	6823      	ldr	r3, [r4, #0]
 8019b0e:	4606      	mov	r6, r0
 8019b10:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8019b12:	4620      	mov	r0, r4
 8019b14:	4798      	blx	r3
 8019b16:	4633      	mov	r3, r6
 8019b18:	4629      	mov	r1, r5
 8019b1a:	9000      	str	r0, [sp, #0]
 8019b1c:	9a03      	ldr	r2, [sp, #12]
 8019b1e:	a805      	add	r0, sp, #20
 8019b20:	ad1e      	add	r5, sp, #120	; 0x78
 8019b22:	f000 fe70 	bl	801a806 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8019b26:	2100      	movs	r1, #0
 8019b28:	f845 1d68 	str.w	r1, [r5, #-104]!
 8019b2c:	4622      	mov	r2, r4
 8019b2e:	462b      	mov	r3, r5
 8019b30:	a805      	add	r0, sp, #20
 8019b32:	f001 f96b 	bl	801ae0c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8019b36:	f647 76ff 	movw	r6, #32767	; 0x7fff
 8019b3a:	b1d8      	cbz	r0, 8019b74 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 8019b3c:	280a      	cmp	r0, #10
 8019b3e:	d012      	beq.n	8019b66 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8019b40:	9804      	ldr	r0, [sp, #16]
 8019b42:	b180      	cbz	r0, 8019b66 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8019b44:	7b47      	ldrb	r7, [r0, #13]
 8019b46:	88e2      	ldrh	r2, [r4, #6]
 8019b48:	00fb      	lsls	r3, r7, #3
 8019b4a:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8019b4e:	7a03      	ldrb	r3, [r0, #8]
 8019b50:	430b      	orrs	r3, r1
 8019b52:	0679      	lsls	r1, r7, #25
 8019b54:	bf44      	itt	mi
 8019b56:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8019b5a:	b21b      	sxthmi	r3, r3
 8019b5c:	1ad3      	subs	r3, r2, r3
 8019b5e:	b21b      	sxth	r3, r3
 8019b60:	429e      	cmp	r6, r3
 8019b62:	bfa8      	it	ge
 8019b64:	461e      	movge	r6, r3
 8019b66:	462b      	mov	r3, r5
 8019b68:	4622      	mov	r2, r4
 8019b6a:	2100      	movs	r1, #0
 8019b6c:	a805      	add	r0, sp, #20
 8019b6e:	f001 f94d 	bl	801ae0c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8019b72:	e7e2      	b.n	8019b3a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 8019b74:	4630      	mov	r0, r6
 8019b76:	b01e      	add	sp, #120	; 0x78
 8019b78:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8019b7c:	b003      	add	sp, #12
 8019b7e:	4770      	bx	lr

08019b80 <_ZNK8touchgfx8Drawable10invalidateEv>:
 8019b80:	b513      	push	{r0, r1, r4, lr}
 8019b82:	6803      	ldr	r3, [r0, #0]
 8019b84:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8019b88:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8019b8c:	f8ad 1004 	strh.w	r1, [sp, #4]
 8019b90:	2400      	movs	r4, #0
 8019b92:	9400      	str	r4, [sp, #0]
 8019b94:	f8ad 2006 	strh.w	r2, [sp, #6]
 8019b98:	691b      	ldr	r3, [r3, #16]
 8019b9a:	4669      	mov	r1, sp
 8019b9c:	4798      	blx	r3
 8019b9e:	b002      	add	sp, #8
 8019ba0:	bd10      	pop	{r4, pc}

08019ba2 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 8019ba2:	b538      	push	{r3, r4, r5, lr}
 8019ba4:	680b      	ldr	r3, [r1, #0]
 8019ba6:	460c      	mov	r4, r1
 8019ba8:	68db      	ldr	r3, [r3, #12]
 8019baa:	4605      	mov	r5, r0
 8019bac:	4798      	blx	r3
 8019bae:	6823      	ldr	r3, [r4, #0]
 8019bb0:	4620      	mov	r0, r4
 8019bb2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8019bb4:	4629      	mov	r1, r5
 8019bb6:	4798      	blx	r3
 8019bb8:	4628      	mov	r0, r5
 8019bba:	bd38      	pop	{r3, r4, r5, pc}

08019bbc <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 8019bbc:	b410      	push	{r4}
 8019bbe:	880a      	ldrh	r2, [r1, #0]
 8019bc0:	8884      	ldrh	r4, [r0, #4]
 8019bc2:	4422      	add	r2, r4
 8019bc4:	800a      	strh	r2, [r1, #0]
 8019bc6:	88c4      	ldrh	r4, [r0, #6]
 8019bc8:	884a      	ldrh	r2, [r1, #2]
 8019bca:	4422      	add	r2, r4
 8019bcc:	804a      	strh	r2, [r1, #2]
 8019bce:	6940      	ldr	r0, [r0, #20]
 8019bd0:	b120      	cbz	r0, 8019bdc <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 8019bd2:	6803      	ldr	r3, [r0, #0]
 8019bd4:	f85d 4b04 	ldr.w	r4, [sp], #4
 8019bd8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8019bda:	4718      	bx	r3
 8019bdc:	f85d 4b04 	ldr.w	r4, [sp], #4
 8019be0:	4770      	bx	lr

08019be2 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 8019be2:	b570      	push	{r4, r5, r6, lr}
 8019be4:	8882      	ldrh	r2, [r0, #4]
 8019be6:	880b      	ldrh	r3, [r1, #0]
 8019be8:	4413      	add	r3, r2
 8019bea:	800b      	strh	r3, [r1, #0]
 8019bec:	88c2      	ldrh	r2, [r0, #6]
 8019bee:	884b      	ldrh	r3, [r1, #2]
 8019bf0:	460c      	mov	r4, r1
 8019bf2:	4413      	add	r3, r2
 8019bf4:	804b      	strh	r3, [r1, #2]
 8019bf6:	4605      	mov	r5, r0
 8019bf8:	1d01      	adds	r1, r0, #4
 8019bfa:	4620      	mov	r0, r4
 8019bfc:	f7f8 ff86 	bl	8012b0c <_ZN8touchgfx4RectaNERKS0_>
 8019c00:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8019c04:	2b00      	cmp	r3, #0
 8019c06:	dd0b      	ble.n	8019c20 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8019c08:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8019c0c:	2b00      	cmp	r3, #0
 8019c0e:	dd07      	ble.n	8019c20 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8019c10:	6968      	ldr	r0, [r5, #20]
 8019c12:	b128      	cbz	r0, 8019c20 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8019c14:	6803      	ldr	r3, [r0, #0]
 8019c16:	4621      	mov	r1, r4
 8019c18:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8019c1a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8019c1e:	4718      	bx	r3
 8019c20:	bd70      	pop	{r4, r5, r6, pc}
	...

08019c24 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8019c24:	b570      	push	{r4, r5, r6, lr}
 8019c26:	8882      	ldrh	r2, [r0, #4]
 8019c28:	880b      	ldrh	r3, [r1, #0]
 8019c2a:	4413      	add	r3, r2
 8019c2c:	800b      	strh	r3, [r1, #0]
 8019c2e:	88c2      	ldrh	r2, [r0, #6]
 8019c30:	884b      	ldrh	r3, [r1, #2]
 8019c32:	460c      	mov	r4, r1
 8019c34:	4413      	add	r3, r2
 8019c36:	804b      	strh	r3, [r1, #2]
 8019c38:	4605      	mov	r5, r0
 8019c3a:	1d01      	adds	r1, r0, #4
 8019c3c:	4620      	mov	r0, r4
 8019c3e:	f7f8 ff65 	bl	8012b0c <_ZN8touchgfx4RectaNERKS0_>
 8019c42:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8019c46:	2b00      	cmp	r3, #0
 8019c48:	dd19      	ble.n	8019c7e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8019c4a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8019c4e:	2b00      	cmp	r3, #0
 8019c50:	dd15      	ble.n	8019c7e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8019c52:	6968      	ldr	r0, [r5, #20]
 8019c54:	b128      	cbz	r0, 8019c62 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 8019c56:	6803      	ldr	r3, [r0, #0]
 8019c58:	4621      	mov	r1, r4
 8019c5a:	691b      	ldr	r3, [r3, #16]
 8019c5c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8019c60:	4718      	bx	r3
 8019c62:	4b07      	ldr	r3, [pc, #28]	; (8019c80 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 8019c64:	681b      	ldr	r3, [r3, #0]
 8019c66:	3304      	adds	r3, #4
 8019c68:	429d      	cmp	r5, r3
 8019c6a:	d108      	bne.n	8019c7e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8019c6c:	f7fe fea0 	bl	80189b0 <_ZN8touchgfx11Application11getInstanceEv>
 8019c70:	6803      	ldr	r3, [r0, #0]
 8019c72:	6821      	ldr	r1, [r4, #0]
 8019c74:	6862      	ldr	r2, [r4, #4]
 8019c76:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8019c78:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8019c7c:	4718      	bx	r3
 8019c7e:	bd70      	pop	{r4, r5, r6, pc}
 8019c80:	20013880 	.word	0x20013880

08019c84 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8019c84:	b570      	push	{r4, r5, r6, lr}
 8019c86:	4604      	mov	r4, r0
 8019c88:	4616      	mov	r6, r2
 8019c8a:	460d      	mov	r5, r1
 8019c8c:	b901      	cbnz	r1, 8019c90 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 8019c8e:	b192      	cbz	r2, 8019cb6 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 8019c90:	6823      	ldr	r3, [r4, #0]
 8019c92:	4620      	mov	r0, r4
 8019c94:	699b      	ldr	r3, [r3, #24]
 8019c96:	4798      	blx	r3
 8019c98:	88e2      	ldrh	r2, [r4, #6]
 8019c9a:	88a1      	ldrh	r1, [r4, #4]
 8019c9c:	4432      	add	r2, r6
 8019c9e:	4429      	add	r1, r5
 8019ca0:	4620      	mov	r0, r4
 8019ca2:	b212      	sxth	r2, r2
 8019ca4:	b209      	sxth	r1, r1
 8019ca6:	f7e9 fce5 	bl	8003674 <_ZN8touchgfx8Drawable5setXYEss>
 8019caa:	6823      	ldr	r3, [r4, #0]
 8019cac:	4620      	mov	r0, r4
 8019cae:	699b      	ldr	r3, [r3, #24]
 8019cb0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8019cb4:	4718      	bx	r3
 8019cb6:	bd70      	pop	{r4, r5, r6, pc}

08019cb8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 8019cb8:	b510      	push	{r4, lr}
 8019cba:	4604      	mov	r4, r0
 8019cbc:	4608      	mov	r0, r1
 8019cbe:	2300      	movs	r3, #0
 8019cc0:	8023      	strh	r3, [r4, #0]
 8019cc2:	8063      	strh	r3, [r4, #2]
 8019cc4:	6803      	ldr	r3, [r0, #0]
 8019cc6:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8019cca:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 8019cce:	80a1      	strh	r1, [r4, #4]
 8019cd0:	80e2      	strh	r2, [r4, #6]
 8019cd2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8019cd4:	4621      	mov	r1, r4
 8019cd6:	4798      	blx	r3
 8019cd8:	4620      	mov	r0, r4
 8019cda:	bd10      	pop	{r4, pc}

08019cdc <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 8019cdc:	b530      	push	{r4, r5, lr}
 8019cde:	8083      	strh	r3, [r0, #4]
 8019ce0:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8019ce4:	80c3      	strh	r3, [r0, #6]
 8019ce6:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8019cea:	7203      	strb	r3, [r0, #8]
 8019cec:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8019cf0:	f89d 5018 	ldrb.w	r5, [sp, #24]
 8019cf4:	7243      	strb	r3, [r0, #9]
 8019cf6:	7a83      	ldrb	r3, [r0, #10]
 8019cf8:	6141      	str	r1, [r0, #20]
 8019cfa:	f365 0306 	bfi	r3, r5, #0, #7
 8019cfe:	f89d 501c 	ldrb.w	r5, [sp, #28]
 8019d02:	8302      	strh	r2, [r0, #24]
 8019d04:	f365 13c7 	bfi	r3, r5, #7, #1
 8019d08:	7283      	strb	r3, [r0, #10]
 8019d0a:	f89d 3020 	ldrb.w	r3, [sp, #32]
 8019d0e:	72c3      	strb	r3, [r0, #11]
 8019d10:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
 8019d14:	7303      	strb	r3, [r0, #12]
 8019d16:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8019d1a:	81c3      	strh	r3, [r0, #14]
 8019d1c:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8019d20:	8203      	strh	r3, [r0, #16]
 8019d22:	4b01      	ldr	r3, [pc, #4]	; (8019d28 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 8019d24:	6003      	str	r3, [r0, #0]
 8019d26:	bd30      	pop	{r4, r5, pc}
 8019d28:	08031e50 	.word	0x08031e50

08019d2c <_ZNK8touchgfx9ConstFont4findEt>:
 8019d2c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8019d2e:	6944      	ldr	r4, [r0, #20]
 8019d30:	b3bc      	cbz	r4, 8019da2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8019d32:	88a3      	ldrh	r3, [r4, #4]
 8019d34:	8b02      	ldrh	r2, [r0, #24]
 8019d36:	1acb      	subs	r3, r1, r3
 8019d38:	f102 32ff 	add.w	r2, r2, #4294967295
 8019d3c:	d431      	bmi.n	8019da2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8019d3e:	4293      	cmp	r3, r2
 8019d40:	dd0c      	ble.n	8019d5c <_ZNK8touchgfx9ConstFont4findEt+0x30>
 8019d42:	230e      	movs	r3, #14
 8019d44:	fb03 4302 	mla	r3, r3, r2, r4
 8019d48:	889b      	ldrh	r3, [r3, #4]
 8019d4a:	1a5b      	subs	r3, r3, r1
 8019d4c:	1ad3      	subs	r3, r2, r3
 8019d4e:	429a      	cmp	r2, r3
 8019d50:	db27      	blt.n	8019da2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8019d52:	2b00      	cmp	r3, #0
 8019d54:	bfbc      	itt	lt
 8019d56:	2302      	movlt	r3, #2
 8019d58:	fb92 f3f3 	sdivlt	r3, r2, r3
 8019d5c:	2500      	movs	r5, #0
 8019d5e:	260e      	movs	r6, #14
 8019d60:	4295      	cmp	r5, r2
 8019d62:	dc1e      	bgt.n	8019da2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8019d64:	fb06 4003 	mla	r0, r6, r3, r4
 8019d68:	8887      	ldrh	r7, [r0, #4]
 8019d6a:	42b9      	cmp	r1, r7
 8019d6c:	d01a      	beq.n	8019da4 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 8019d6e:	d20d      	bcs.n	8019d8c <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8019d70:	1e5a      	subs	r2, r3, #1
 8019d72:	4295      	cmp	r5, r2
 8019d74:	dc15      	bgt.n	8019da2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8019d76:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 8019d7a:	1a5b      	subs	r3, r3, r1
 8019d7c:	1ad3      	subs	r3, r2, r3
 8019d7e:	429a      	cmp	r2, r3
 8019d80:	db0f      	blt.n	8019da2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8019d82:	429d      	cmp	r5, r3
 8019d84:	ddec      	ble.n	8019d60 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8019d86:	1953      	adds	r3, r2, r5
 8019d88:	105b      	asrs	r3, r3, #1
 8019d8a:	e7e9      	b.n	8019d60 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8019d8c:	1c5d      	adds	r5, r3, #1
 8019d8e:	42aa      	cmp	r2, r5
 8019d90:	db07      	blt.n	8019da2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8019d92:	8a43      	ldrh	r3, [r0, #18]
 8019d94:	1acb      	subs	r3, r1, r3
 8019d96:	442b      	add	r3, r5
 8019d98:	429d      	cmp	r5, r3
 8019d9a:	dc02      	bgt.n	8019da2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8019d9c:	429a      	cmp	r2, r3
 8019d9e:	dadf      	bge.n	8019d60 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8019da0:	e7f1      	b.n	8019d86 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 8019da2:	2000      	movs	r0, #0
 8019da4:	bdf0      	pop	{r4, r5, r6, r7, pc}

08019da6 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 8019da6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8019da8:	4604      	mov	r4, r0
 8019daa:	4617      	mov	r7, r2
 8019dac:	461e      	mov	r6, r3
 8019dae:	b911      	cbnz	r1, 8019db6 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 8019db0:	2500      	movs	r5, #0
 8019db2:	4628      	mov	r0, r5
 8019db4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8019db6:	290a      	cmp	r1, #10
 8019db8:	d0fa      	beq.n	8019db0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8019dba:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8019dbe:	4291      	cmp	r1, r2
 8019dc0:	d0f6      	beq.n	8019db0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8019dc2:	f242 020b 	movw	r2, #8203	; 0x200b
 8019dc6:	4291      	cmp	r1, r2
 8019dc8:	d0f2      	beq.n	8019db0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8019dca:	f7ff ffaf 	bl	8019d2c <_ZNK8touchgfx9ConstFont4findEt>
 8019dce:	4605      	mov	r5, r0
 8019dd0:	b950      	cbnz	r0, 8019de8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 8019dd2:	6823      	ldr	r3, [r4, #0]
 8019dd4:	4620      	mov	r0, r4
 8019dd6:	691b      	ldr	r3, [r3, #16]
 8019dd8:	4798      	blx	r3
 8019dda:	4601      	mov	r1, r0
 8019ddc:	4620      	mov	r0, r4
 8019dde:	f7ff ffa5 	bl	8019d2c <_ZNK8touchgfx9ConstFont4findEt>
 8019de2:	4605      	mov	r5, r0
 8019de4:	2800      	cmp	r0, #0
 8019de6:	d0e3      	beq.n	8019db0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8019de8:	6823      	ldr	r3, [r4, #0]
 8019dea:	4629      	mov	r1, r5
 8019dec:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8019dee:	4620      	mov	r0, r4
 8019df0:	4798      	blx	r3
 8019df2:	6038      	str	r0, [r7, #0]
 8019df4:	6823      	ldr	r3, [r4, #0]
 8019df6:	4620      	mov	r0, r4
 8019df8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8019dfa:	4798      	blx	r3
 8019dfc:	7030      	strb	r0, [r6, #0]
 8019dfe:	e7d8      	b.n	8019db2 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

08019e00 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
 8019e00:	b538      	push	{r3, r4, r5, lr}
 8019e02:	4605      	mov	r5, r0
 8019e04:	f002 fb94 	bl	801c530 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8019e08:	4604      	mov	r4, r0
 8019e0a:	4628      	mov	r0, r5
 8019e0c:	f002 fad4 	bl	801c3b8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8019e10:	2800      	cmp	r0, #0
 8019e12:	bf14      	ite	ne
 8019e14:	2002      	movne	r0, #2
 8019e16:	2000      	moveq	r0, #0
 8019e18:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 8019e1c:	b280      	uxth	r0, r0
 8019e1e:	bd38      	pop	{r3, r4, r5, pc}

08019e20 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
 8019e20:	b538      	push	{r3, r4, r5, lr}
 8019e22:	4605      	mov	r5, r0
 8019e24:	f002 fb84 	bl	801c530 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8019e28:	4604      	mov	r4, r0
 8019e2a:	4628      	mov	r0, r5
 8019e2c:	f002 fac4 	bl	801c3b8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8019e30:	2800      	cmp	r0, #0
 8019e32:	bf14      	ite	ne
 8019e34:	2002      	movne	r0, #2
 8019e36:	2000      	moveq	r0, #0
 8019e38:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 8019e3c:	f040 0001 	orr.w	r0, r0, #1
 8019e40:	b280      	uxth	r0, r0
 8019e42:	bd38      	pop	{r3, r4, r5, pc}

08019e44 <_ZN8touchgfx4clzuEm>:
 8019e44:	4603      	mov	r3, r0
 8019e46:	b1c8      	cbz	r0, 8019e7c <_ZN8touchgfx4clzuEm+0x38>
 8019e48:	0c02      	lsrs	r2, r0, #16
 8019e4a:	0412      	lsls	r2, r2, #16
 8019e4c:	b9a2      	cbnz	r2, 8019e78 <_ZN8touchgfx4clzuEm+0x34>
 8019e4e:	0403      	lsls	r3, r0, #16
 8019e50:	2010      	movs	r0, #16
 8019e52:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8019e56:	bf04      	itt	eq
 8019e58:	021b      	lsleq	r3, r3, #8
 8019e5a:	3008      	addeq	r0, #8
 8019e5c:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8019e60:	bf04      	itt	eq
 8019e62:	011b      	lsleq	r3, r3, #4
 8019e64:	3004      	addeq	r0, #4
 8019e66:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8019e6a:	bf04      	itt	eq
 8019e6c:	009b      	lsleq	r3, r3, #2
 8019e6e:	3002      	addeq	r0, #2
 8019e70:	2b00      	cmp	r3, #0
 8019e72:	db04      	blt.n	8019e7e <_ZN8touchgfx4clzuEm+0x3a>
 8019e74:	3001      	adds	r0, #1
 8019e76:	4770      	bx	lr
 8019e78:	2000      	movs	r0, #0
 8019e7a:	e7ea      	b.n	8019e52 <_ZN8touchgfx4clzuEm+0xe>
 8019e7c:	2020      	movs	r0, #32
 8019e7e:	4770      	bx	lr

08019e80 <_ZN8touchgfx7muldivuEmmmRm>:
 8019e80:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8019e84:	460f      	mov	r7, r1
 8019e86:	4615      	mov	r5, r2
 8019e88:	461e      	mov	r6, r3
 8019e8a:	4601      	mov	r1, r0
 8019e8c:	b100      	cbz	r0, 8019e90 <_ZN8touchgfx7muldivuEmmmRm+0x10>
 8019e8e:	b927      	cbnz	r7, 8019e9a <_ZN8touchgfx7muldivuEmmmRm+0x1a>
 8019e90:	2000      	movs	r0, #0
 8019e92:	6030      	str	r0, [r6, #0]
 8019e94:	b002      	add	sp, #8
 8019e96:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8019e9a:	f7ff ffd3 	bl	8019e44 <_ZN8touchgfx4clzuEm>
 8019e9e:	b980      	cbnz	r0, 8019ec2 <_ZN8touchgfx7muldivuEmmmRm+0x42>
 8019ea0:	4638      	mov	r0, r7
 8019ea2:	f7ff ffcf 	bl	8019e44 <_ZN8touchgfx4clzuEm>
 8019ea6:	2800      	cmp	r0, #0
 8019ea8:	dd05      	ble.n	8019eb6 <_ZN8touchgfx7muldivuEmmmRm+0x36>
 8019eaa:	4633      	mov	r3, r6
 8019eac:	462a      	mov	r2, r5
 8019eae:	4638      	mov	r0, r7
 8019eb0:	f7ff ffe6 	bl	8019e80 <_ZN8touchgfx7muldivuEmmmRm>
 8019eb4:	e7ee      	b.n	8019e94 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8019eb6:	f04f 33ff 	mov.w	r3, #4294967295
 8019eba:	6033      	str	r3, [r6, #0]
 8019ebc:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8019ec0:	e7e8      	b.n	8019e94 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8019ec2:	fa37 f800 	lsrs.w	r8, r7, r0
 8019ec6:	fb07 f301 	mul.w	r3, r7, r1
 8019eca:	d105      	bne.n	8019ed8 <_ZN8touchgfx7muldivuEmmmRm+0x58>
 8019ecc:	fbb3 f0f5 	udiv	r0, r3, r5
 8019ed0:	fb05 3510 	mls	r5, r5, r0, r3
 8019ed4:	6035      	str	r5, [r6, #0]
 8019ed6:	e7dd      	b.n	8019e94 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8019ed8:	2301      	movs	r3, #1
 8019eda:	fa01 fa00 	lsl.w	sl, r1, r0
 8019ede:	fa03 f000 	lsl.w	r0, r3, r0
 8019ee2:	3801      	subs	r0, #1
 8019ee4:	462a      	mov	r2, r5
 8019ee6:	4633      	mov	r3, r6
 8019ee8:	4038      	ands	r0, r7
 8019eea:	f7ff ffc9 	bl	8019e80 <_ZN8touchgfx7muldivuEmmmRm>
 8019eee:	fbba f9f5 	udiv	r9, sl, r5
 8019ef2:	462a      	mov	r2, r5
 8019ef4:	4607      	mov	r7, r0
 8019ef6:	ab01      	add	r3, sp, #4
 8019ef8:	fb05 a119 	mls	r1, r5, r9, sl
 8019efc:	4640      	mov	r0, r8
 8019efe:	f7ff ffbf 	bl	8019e80 <_ZN8touchgfx7muldivuEmmmRm>
 8019f02:	9b01      	ldr	r3, [sp, #4]
 8019f04:	6832      	ldr	r2, [r6, #0]
 8019f06:	fb08 f409 	mul.w	r4, r8, r9
 8019f0a:	441a      	add	r2, r3
 8019f0c:	fbb2 f3f5 	udiv	r3, r2, r5
 8019f10:	441c      	add	r4, r3
 8019f12:	443c      	add	r4, r7
 8019f14:	4420      	add	r0, r4
 8019f16:	fb05 2513 	mls	r5, r5, r3, r2
 8019f1a:	e7db      	b.n	8019ed4 <_ZN8touchgfx7muldivuEmmmRm+0x54>

08019f1c <_ZN8touchgfx6muldivElllRl>:
 8019f1c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8019f1e:	2800      	cmp	r0, #0
 8019f20:	bfba      	itte	lt
 8019f22:	4240      	neglt	r0, r0
 8019f24:	f04f 34ff 	movlt.w	r4, #4294967295
 8019f28:	2401      	movge	r4, #1
 8019f2a:	2900      	cmp	r1, #0
 8019f2c:	bfbc      	itt	lt
 8019f2e:	4249      	neglt	r1, r1
 8019f30:	4264      	neglt	r4, r4
 8019f32:	2a00      	cmp	r2, #0
 8019f34:	bfb6      	itet	lt
 8019f36:	4265      	neglt	r5, r4
 8019f38:	4625      	movge	r5, r4
 8019f3a:	4252      	neglt	r2, r2
 8019f3c:	4288      	cmp	r0, r1
 8019f3e:	461e      	mov	r6, r3
 8019f40:	bfc2      	ittt	gt
 8019f42:	4603      	movgt	r3, r0
 8019f44:	4608      	movgt	r0, r1
 8019f46:	4619      	movgt	r1, r3
 8019f48:	ab01      	add	r3, sp, #4
 8019f4a:	f7ff ff99 	bl	8019e80 <_ZN8touchgfx7muldivuEmmmRm>
 8019f4e:	9b01      	ldr	r3, [sp, #4]
 8019f50:	4368      	muls	r0, r5
 8019f52:	435c      	muls	r4, r3
 8019f54:	6034      	str	r4, [r6, #0]
 8019f56:	b002      	add	sp, #8
 8019f58:	bd70      	pop	{r4, r5, r6, pc}

08019f5a <_ZN8touchgfx6muldivElll>:
 8019f5a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8019f5c:	4606      	mov	r6, r0
 8019f5e:	ab01      	add	r3, sp, #4
 8019f60:	460d      	mov	r5, r1
 8019f62:	4614      	mov	r4, r2
 8019f64:	f7ff ffda 	bl	8019f1c <_ZN8touchgfx6muldivElllRl>
 8019f68:	2e00      	cmp	r6, #0
 8019f6a:	db20      	blt.n	8019fae <_ZN8touchgfx6muldivElll+0x54>
 8019f6c:	bf14      	ite	ne
 8019f6e:	2301      	movne	r3, #1
 8019f70:	2300      	moveq	r3, #0
 8019f72:	2d00      	cmp	r5, #0
 8019f74:	db1e      	blt.n	8019fb4 <_ZN8touchgfx6muldivElll+0x5a>
 8019f76:	bf14      	ite	ne
 8019f78:	2201      	movne	r2, #1
 8019f7a:	2200      	moveq	r2, #0
 8019f7c:	2c00      	cmp	r4, #0
 8019f7e:	fb03 f202 	mul.w	r2, r3, r2
 8019f82:	db1a      	blt.n	8019fba <_ZN8touchgfx6muldivElll+0x60>
 8019f84:	bf14      	ite	ne
 8019f86:	2301      	movne	r3, #1
 8019f88:	2300      	moveq	r3, #0
 8019f8a:	4353      	muls	r3, r2
 8019f8c:	2b01      	cmp	r3, #1
 8019f8e:	d117      	bne.n	8019fc0 <_ZN8touchgfx6muldivElll+0x66>
 8019f90:	9b01      	ldr	r3, [sp, #4]
 8019f92:	2c00      	cmp	r4, #0
 8019f94:	bfb8      	it	lt
 8019f96:	4264      	neglt	r4, r4
 8019f98:	2b00      	cmp	r3, #0
 8019f9a:	f104 0401 	add.w	r4, r4, #1
 8019f9e:	bfb8      	it	lt
 8019fa0:	425b      	neglt	r3, r3
 8019fa2:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 8019fa6:	db00      	blt.n	8019faa <_ZN8touchgfx6muldivElll+0x50>
 8019fa8:	3001      	adds	r0, #1
 8019faa:	b002      	add	sp, #8
 8019fac:	bd70      	pop	{r4, r5, r6, pc}
 8019fae:	f04f 33ff 	mov.w	r3, #4294967295
 8019fb2:	e7de      	b.n	8019f72 <_ZN8touchgfx6muldivElll+0x18>
 8019fb4:	f04f 32ff 	mov.w	r2, #4294967295
 8019fb8:	e7e0      	b.n	8019f7c <_ZN8touchgfx6muldivElll+0x22>
 8019fba:	f04f 33ff 	mov.w	r3, #4294967295
 8019fbe:	e7e4      	b.n	8019f8a <_ZN8touchgfx6muldivElll+0x30>
 8019fc0:	3301      	adds	r3, #1
 8019fc2:	d1f2      	bne.n	8019faa <_ZN8touchgfx6muldivElll+0x50>
 8019fc4:	9b01      	ldr	r3, [sp, #4]
 8019fc6:	2c00      	cmp	r4, #0
 8019fc8:	bfb8      	it	lt
 8019fca:	4264      	neglt	r4, r4
 8019fcc:	2b00      	cmp	r3, #0
 8019fce:	bfb8      	it	lt
 8019fd0:	425b      	neglt	r3, r3
 8019fd2:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 8019fd6:	bfc8      	it	gt
 8019fd8:	f100 30ff 	addgt.w	r0, r0, #4294967295
 8019fdc:	e7e5      	b.n	8019faa <_ZN8touchgfx6muldivElll+0x50>

08019fde <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 8019fde:	2000      	movs	r0, #0
 8019fe0:	4770      	bx	lr

08019fe2 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 8019fe2:	2001      	movs	r0, #1
 8019fe4:	4770      	bx	lr

08019fe6 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 8019fe6:	2002      	movs	r0, #2
 8019fe8:	4770      	bx	lr

08019fea <_ZN8touchgfx6ScreenD1Ev>:
 8019fea:	4770      	bx	lr

08019fec <_ZN8touchgfx12GestureEventD1Ev>:
 8019fec:	4770      	bx	lr

08019fee <_ZN8touchgfx9DragEventD1Ev>:
 8019fee:	4770      	bx	lr

08019ff0 <_ZN8touchgfx10ClickEventD1Ev>:
 8019ff0:	4770      	bx	lr

08019ff2 <_ZN8touchgfx10ClickEventD0Ev>:
 8019ff2:	b510      	push	{r4, lr}
 8019ff4:	210c      	movs	r1, #12
 8019ff6:	4604      	mov	r4, r0
 8019ff8:	f012 fdc3 	bl	802cb82 <_ZdlPvj>
 8019ffc:	4620      	mov	r0, r4
 8019ffe:	bd10      	pop	{r4, pc}

0801a000 <_ZN8touchgfx9DragEventD0Ev>:
 801a000:	b510      	push	{r4, lr}
 801a002:	2110      	movs	r1, #16
 801a004:	4604      	mov	r4, r0
 801a006:	f012 fdbc 	bl	802cb82 <_ZdlPvj>
 801a00a:	4620      	mov	r0, r4
 801a00c:	bd10      	pop	{r4, pc}

0801a00e <_ZN8touchgfx12GestureEventD0Ev>:
 801a00e:	b510      	push	{r4, lr}
 801a010:	210c      	movs	r1, #12
 801a012:	4604      	mov	r4, r0
 801a014:	f012 fdb5 	bl	802cb82 <_ZdlPvj>
 801a018:	4620      	mov	r0, r4
 801a01a:	bd10      	pop	{r4, pc}

0801a01c <_ZN8touchgfx6ScreenD0Ev>:
 801a01c:	b510      	push	{r4, lr}
 801a01e:	213c      	movs	r1, #60	; 0x3c
 801a020:	4604      	mov	r4, r0
 801a022:	f012 fdae 	bl	802cb82 <_ZdlPvj>
 801a026:	4620      	mov	r0, r4
 801a028:	bd10      	pop	{r4, pc}
	...

0801a02c <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 801a02c:	b530      	push	{r4, r5, lr}
 801a02e:	460d      	mov	r5, r1
 801a030:	6b01      	ldr	r1, [r0, #48]	; 0x30
 801a032:	b087      	sub	sp, #28
 801a034:	4604      	mov	r4, r0
 801a036:	b301      	cbz	r1, 801a07a <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 801a038:	a801      	add	r0, sp, #4
 801a03a:	f7ff fe3d 	bl	8019cb8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a03e:	892a      	ldrh	r2, [r5, #8]
 801a040:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 801a044:	7928      	ldrb	r0, [r5, #4]
 801a046:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 801a04a:	f88d 0010 	strb.w	r0, [sp, #16]
 801a04e:	1ad2      	subs	r2, r2, r3
 801a050:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 801a052:	6b20      	ldr	r0, [r4, #48]	; 0x30
 801a054:	f8ad 1012 	strh.w	r1, [sp, #18]
 801a058:	441a      	add	r2, r3
 801a05a:	896b      	ldrh	r3, [r5, #10]
 801a05c:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 801a060:	f8ad 2014 	strh.w	r2, [sp, #20]
 801a064:	1b5b      	subs	r3, r3, r5
 801a066:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 801a068:	442b      	add	r3, r5
 801a06a:	4d05      	ldr	r5, [pc, #20]	; (801a080 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 801a06c:	9503      	str	r5, [sp, #12]
 801a06e:	f8ad 3016 	strh.w	r3, [sp, #22]
 801a072:	6803      	ldr	r3, [r0, #0]
 801a074:	a903      	add	r1, sp, #12
 801a076:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801a078:	4798      	blx	r3
 801a07a:	b007      	add	sp, #28
 801a07c:	bd30      	pop	{r4, r5, pc}
 801a07e:	bf00      	nop
 801a080:	08031ed8 	.word	0x08031ed8

0801a084 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 801a084:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801a088:	6b03      	ldr	r3, [r0, #48]	; 0x30
 801a08a:	b08a      	sub	sp, #40	; 0x28
 801a08c:	4604      	mov	r4, r0
 801a08e:	460d      	mov	r5, r1
 801a090:	b113      	cbz	r3, 801a098 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 801a092:	790b      	ldrb	r3, [r1, #4]
 801a094:	2b00      	cmp	r3, #0
 801a096:	d044      	beq.n	801a122 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801a098:	f104 0804 	add.w	r8, r4, #4
 801a09c:	4641      	mov	r1, r8
 801a09e:	a803      	add	r0, sp, #12
 801a0a0:	f7ff fe0a 	bl	8019cb8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a0a4:	792b      	ldrb	r3, [r5, #4]
 801a0a6:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801a0aa:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 801a0ae:	b983      	cbnz	r3, 801a0d2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 801a0b0:	892a      	ldrh	r2, [r5, #8]
 801a0b2:	88e9      	ldrh	r1, [r5, #6]
 801a0b4:	f104 0336 	add.w	r3, r4, #54	; 0x36
 801a0b8:	1b92      	subs	r2, r2, r6
 801a0ba:	1bc9      	subs	r1, r1, r7
 801a0bc:	9301      	str	r3, [sp, #4]
 801a0be:	f104 0334 	add.w	r3, r4, #52	; 0x34
 801a0c2:	9300      	str	r3, [sp, #0]
 801a0c4:	b212      	sxth	r2, r2
 801a0c6:	f104 0330 	add.w	r3, r4, #48	; 0x30
 801a0ca:	b209      	sxth	r1, r1
 801a0cc:	4640      	mov	r0, r8
 801a0ce:	f7f8 fc39 	bl	8012944 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 801a0d2:	6b21      	ldr	r1, [r4, #48]	; 0x30
 801a0d4:	b329      	cbz	r1, 801a122 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801a0d6:	a805      	add	r0, sp, #20
 801a0d8:	f7ff fdee 	bl	8019cb8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a0dc:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 801a0e0:	792b      	ldrb	r3, [r5, #4]
 801a0e2:	6b20      	ldr	r0, [r4, #48]	; 0x30
 801a0e4:	f88d 3020 	strb.w	r3, [sp, #32]
 801a0e8:	1abf      	subs	r7, r7, r2
 801a0ea:	88ea      	ldrh	r2, [r5, #6]
 801a0ec:	4417      	add	r7, r2
 801a0ee:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 801a0f0:	4417      	add	r7, r2
 801a0f2:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 801a0f6:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 801a0fa:	1ab6      	subs	r6, r6, r2
 801a0fc:	892a      	ldrh	r2, [r5, #8]
 801a0fe:	4416      	add	r6, r2
 801a100:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 801a102:	4416      	add	r6, r2
 801a104:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 801a108:	4a07      	ldr	r2, [pc, #28]	; (801a128 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 801a10a:	9207      	str	r2, [sp, #28]
 801a10c:	2600      	movs	r6, #0
 801a10e:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 801a112:	6803      	ldr	r3, [r0, #0]
 801a114:	a907      	add	r1, sp, #28
 801a116:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801a118:	4798      	blx	r3
 801a11a:	792b      	ldrb	r3, [r5, #4]
 801a11c:	b10b      	cbz	r3, 801a122 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801a11e:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 801a122:	b00a      	add	sp, #40	; 0x28
 801a124:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801a128:	08031eb0 	.word	0x08031eb0

0801a12c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 801a12c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801a130:	460c      	mov	r4, r1
 801a132:	6b01      	ldr	r1, [r0, #48]	; 0x30
 801a134:	b088      	sub	sp, #32
 801a136:	4605      	mov	r5, r0
 801a138:	2900      	cmp	r1, #0
 801a13a:	d06d      	beq.n	801a218 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 801a13c:	4668      	mov	r0, sp
 801a13e:	f7ff fdbb 	bl	8019cb8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a142:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 801a144:	88e3      	ldrh	r3, [r4, #6]
 801a146:	f9bd 8000 	ldrsh.w	r8, [sp]
 801a14a:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 801a14e:	440b      	add	r3, r1
 801a150:	b21b      	sxth	r3, r3
 801a152:	4543      	cmp	r3, r8
 801a154:	db31      	blt.n	801a1ba <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801a156:	f8bd c004 	ldrh.w	ip, [sp, #4]
 801a15a:	44c4      	add	ip, r8
 801a15c:	fa0f fc8c 	sxth.w	ip, ip
 801a160:	4563      	cmp	r3, ip
 801a162:	da2a      	bge.n	801a1ba <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801a164:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 801a166:	8926      	ldrh	r6, [r4, #8]
 801a168:	4416      	add	r6, r2
 801a16a:	b236      	sxth	r6, r6
 801a16c:	42be      	cmp	r6, r7
 801a16e:	db24      	blt.n	801a1ba <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801a170:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 801a174:	4438      	add	r0, r7
 801a176:	b200      	sxth	r0, r0
 801a178:	4286      	cmp	r6, r0
 801a17a:	da1e      	bge.n	801a1ba <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801a17c:	8963      	ldrh	r3, [r4, #10]
 801a17e:	4419      	add	r1, r3
 801a180:	b209      	sxth	r1, r1
 801a182:	4541      	cmp	r1, r8
 801a184:	db08      	blt.n	801a198 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801a186:	4561      	cmp	r1, ip
 801a188:	da06      	bge.n	801a198 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801a18a:	89a3      	ldrh	r3, [r4, #12]
 801a18c:	441a      	add	r2, r3
 801a18e:	b212      	sxth	r2, r2
 801a190:	42ba      	cmp	r2, r7
 801a192:	db01      	blt.n	801a198 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801a194:	4282      	cmp	r2, r0
 801a196:	db10      	blt.n	801a1ba <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801a198:	4b21      	ldr	r3, [pc, #132]	; (801a220 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 801a19a:	9304      	str	r3, [sp, #16]
 801a19c:	2302      	movs	r3, #2
 801a19e:	f88d 3014 	strb.w	r3, [sp, #20]
 801a1a2:	6b28      	ldr	r0, [r5, #48]	; 0x30
 801a1a4:	2300      	movs	r3, #0
 801a1a6:	f8ad 3016 	strh.w	r3, [sp, #22]
 801a1aa:	f8ad 3018 	strh.w	r3, [sp, #24]
 801a1ae:	f8ad 301a 	strh.w	r3, [sp, #26]
 801a1b2:	6803      	ldr	r3, [r0, #0]
 801a1b4:	a904      	add	r1, sp, #16
 801a1b6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801a1b8:	4798      	blx	r3
 801a1ba:	1d29      	adds	r1, r5, #4
 801a1bc:	a802      	add	r0, sp, #8
 801a1be:	f7ff fd7b 	bl	8019cb8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a1c2:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801a1c6:	88e0      	ldrh	r0, [r4, #6]
 801a1c8:	7921      	ldrb	r1, [r4, #4]
 801a1ca:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 801a1ce:	8922      	ldrh	r2, [r4, #8]
 801a1d0:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 801a1d2:	f88d 1014 	strb.w	r1, [sp, #20]
 801a1d6:	eba3 0808 	sub.w	r8, r3, r8
 801a1da:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801a1de:	1bdf      	subs	r7, r3, r7
 801a1e0:	b2bb      	uxth	r3, r7
 801a1e2:	fa1f f888 	uxth.w	r8, r8
 801a1e6:	8967      	ldrh	r7, [r4, #10]
 801a1e8:	89a4      	ldrh	r4, [r4, #12]
 801a1ea:	4440      	add	r0, r8
 801a1ec:	4460      	add	r0, ip
 801a1ee:	441a      	add	r2, r3
 801a1f0:	44b8      	add	r8, r7
 801a1f2:	4423      	add	r3, r4
 801a1f4:	f8ad 0016 	strh.w	r0, [sp, #22]
 801a1f8:	4433      	add	r3, r6
 801a1fa:	4432      	add	r2, r6
 801a1fc:	44e0      	add	r8, ip
 801a1fe:	4c09      	ldr	r4, [pc, #36]	; (801a224 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 801a200:	6b28      	ldr	r0, [r5, #48]	; 0x30
 801a202:	9404      	str	r4, [sp, #16]
 801a204:	f8ad 2018 	strh.w	r2, [sp, #24]
 801a208:	f8ad 801a 	strh.w	r8, [sp, #26]
 801a20c:	f8ad 301c 	strh.w	r3, [sp, #28]
 801a210:	6803      	ldr	r3, [r0, #0]
 801a212:	a904      	add	r1, sp, #16
 801a214:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801a216:	4798      	blx	r3
 801a218:	b008      	add	sp, #32
 801a21a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801a21e:	bf00      	nop
 801a220:	08031eb0 	.word	0x08031eb0
 801a224:	08031ec4 	.word	0x08031ec4

0801a228 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 801a228:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801a22a:	4604      	mov	r4, r0
 801a22c:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 801a230:	3201      	adds	r2, #1
 801a232:	d112      	bne.n	801a25a <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 801a234:	6803      	ldr	r3, [r0, #0]
 801a236:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 801a23a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801a23e:	f8ad 1004 	strh.w	r1, [sp, #4]
 801a242:	2500      	movs	r5, #0
 801a244:	9500      	str	r5, [sp, #0]
 801a246:	466d      	mov	r5, sp
 801a248:	4629      	mov	r1, r5
 801a24a:	f8ad 2006 	strh.w	r2, [sp, #6]
 801a24e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801a250:	4798      	blx	r3
 801a252:	e895 0003 	ldmia.w	r5, {r0, r1}
 801a256:	e884 0003 	stmia.w	r4, {r0, r1}
 801a25a:	4620      	mov	r0, r4
 801a25c:	b003      	add	sp, #12
 801a25e:	bd30      	pop	{r4, r5, pc}

0801a260 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 801a260:	b513      	push	{r0, r1, r4, lr}
 801a262:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 801a266:	3301      	adds	r3, #1
 801a268:	4604      	mov	r4, r0
 801a26a:	d109      	bne.n	801a280 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 801a26c:	4601      	mov	r1, r0
 801a26e:	4668      	mov	r0, sp
 801a270:	f7ff fd22 	bl	8019cb8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a274:	f8bd 3000 	ldrh.w	r3, [sp]
 801a278:	8423      	strh	r3, [r4, #32]
 801a27a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801a27e:	8463      	strh	r3, [r4, #34]	; 0x22
 801a280:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 801a284:	b002      	add	sp, #8
 801a286:	bd10      	pop	{r4, pc}

0801a288 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 801a288:	b513      	push	{r0, r1, r4, lr}
 801a28a:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 801a28e:	3301      	adds	r3, #1
 801a290:	4604      	mov	r4, r0
 801a292:	d109      	bne.n	801a2a8 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 801a294:	4601      	mov	r1, r0
 801a296:	4668      	mov	r0, sp
 801a298:	f7ff fd0e 	bl	8019cb8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a29c:	f8bd 3000 	ldrh.w	r3, [sp]
 801a2a0:	8423      	strh	r3, [r4, #32]
 801a2a2:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801a2a6:	8463      	strh	r3, [r4, #34]	; 0x22
 801a2a8:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 801a2ac:	b002      	add	sp, #8
 801a2ae:	bd10      	pop	{r4, pc}

0801a2b0 <_ZN8touchgfx6ScreenC1Ev>:
 801a2b0:	b570      	push	{r4, r5, r6, lr}
 801a2b2:	4605      	mov	r5, r0
 801a2b4:	4b16      	ldr	r3, [pc, #88]	; (801a310 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 801a2b6:	f845 3b04 	str.w	r3, [r5], #4
 801a2ba:	2300      	movs	r3, #0
 801a2bc:	8103      	strh	r3, [r0, #8]
 801a2be:	8143      	strh	r3, [r0, #10]
 801a2c0:	8183      	strh	r3, [r0, #12]
 801a2c2:	81c3      	strh	r3, [r0, #14]
 801a2c4:	8203      	strh	r3, [r0, #16]
 801a2c6:	8243      	strh	r3, [r0, #18]
 801a2c8:	8283      	strh	r3, [r0, #20]
 801a2ca:	82c3      	strh	r3, [r0, #22]
 801a2cc:	e9c0 3306 	strd	r3, r3, [r0, #24]
 801a2d0:	6203      	str	r3, [r0, #32]
 801a2d2:	8483      	strh	r3, [r0, #36]	; 0x24
 801a2d4:	84c3      	strh	r3, [r0, #38]	; 0x26
 801a2d6:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 801a2da:	4a0e      	ldr	r2, [pc, #56]	; (801a314 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 801a2dc:	6343      	str	r3, [r0, #52]	; 0x34
 801a2de:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 801a2e2:	4b0d      	ldr	r3, [pc, #52]	; (801a318 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 801a2e4:	6042      	str	r2, [r0, #4]
 801a2e6:	f9b3 6000 	ldrsh.w	r6, [r3]
 801a2ea:	6b93      	ldr	r3, [r2, #56]	; 0x38
 801a2ec:	4a0b      	ldr	r2, [pc, #44]	; (801a31c <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 801a2ee:	4604      	mov	r4, r0
 801a2f0:	2101      	movs	r1, #1
 801a2f2:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 801a2f6:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 801a2fa:	f9b2 1000 	ldrsh.w	r1, [r2]
 801a2fe:	4628      	mov	r0, r5
 801a300:	4798      	blx	r3
 801a302:	6863      	ldr	r3, [r4, #4]
 801a304:	4628      	mov	r0, r5
 801a306:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801a308:	4631      	mov	r1, r6
 801a30a:	4798      	blx	r3
 801a30c:	4620      	mov	r0, r4
 801a30e:	bd70      	pop	{r4, r5, r6, pc}
 801a310:	08031eec 	.word	0x08031eec
 801a314:	08031570 	.word	0x08031570
 801a318:	20013832 	.word	0x20013832
 801a31c:	20013830 	.word	0x20013830

0801a320 <_ZN8touchgfx6Screen4drawEv>:
 801a320:	b507      	push	{r0, r1, r2, lr}
 801a322:	4b09      	ldr	r3, [pc, #36]	; (801a348 <_ZN8touchgfx6Screen4drawEv+0x28>)
 801a324:	f9b3 2000 	ldrsh.w	r2, [r3]
 801a328:	4b08      	ldr	r3, [pc, #32]	; (801a34c <_ZN8touchgfx6Screen4drawEv+0x2c>)
 801a32a:	f8ad 2004 	strh.w	r2, [sp, #4]
 801a32e:	f9b3 3000 	ldrsh.w	r3, [r3]
 801a332:	f8ad 3006 	strh.w	r3, [sp, #6]
 801a336:	6803      	ldr	r3, [r0, #0]
 801a338:	2100      	movs	r1, #0
 801a33a:	9100      	str	r1, [sp, #0]
 801a33c:	689b      	ldr	r3, [r3, #8]
 801a33e:	4669      	mov	r1, sp
 801a340:	4798      	blx	r3
 801a342:	b003      	add	sp, #12
 801a344:	f85d fb04 	ldr.w	pc, [sp], #4
 801a348:	20013830 	.word	0x20013830
 801a34c:	20013832 	.word	0x20013832

0801a350 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 801a350:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a354:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 801a358:	2b00      	cmp	r3, #0
 801a35a:	b089      	sub	sp, #36	; 0x24
 801a35c:	4680      	mov	r8, r0
 801a35e:	460c      	mov	r4, r1
 801a360:	4615      	mov	r5, r2
 801a362:	dd0e      	ble.n	801a382 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801a364:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 801a368:	2b00      	cmp	r3, #0
 801a36a:	dd0a      	ble.n	801a382 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801a36c:	4628      	mov	r0, r5
 801a36e:	f7ff ff5b 	bl	801a228 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801a372:	4621      	mov	r1, r4
 801a374:	f7fe fa3d 	bl	80187f2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 801a378:	69eb      	ldr	r3, [r5, #28]
 801a37a:	b928      	cbnz	r0, 801a388 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 801a37c:	461d      	mov	r5, r3
 801a37e:	2b00      	cmp	r3, #0
 801a380:	d1f4      	bne.n	801a36c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 801a382:	b009      	add	sp, #36	; 0x24
 801a384:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a388:	ae04      	add	r6, sp, #16
 801a38a:	2b00      	cmp	r3, #0
 801a38c:	f000 80b5 	beq.w	801a4fa <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801a390:	682b      	ldr	r3, [r5, #0]
 801a392:	4629      	mov	r1, r5
 801a394:	68db      	ldr	r3, [r3, #12]
 801a396:	a802      	add	r0, sp, #8
 801a398:	4798      	blx	r3
 801a39a:	4628      	mov	r0, r5
 801a39c:	f7ff ff60 	bl	801a260 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 801a3a0:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 801a3a4:	4407      	add	r7, r0
 801a3a6:	4628      	mov	r0, r5
 801a3a8:	f7ff ff6e 	bl	801a288 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801a3ac:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801a3b0:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 801a3b4:	f8ad 2014 	strh.w	r2, [sp, #20]
 801a3b8:	4418      	add	r0, r3
 801a3ba:	4621      	mov	r1, r4
 801a3bc:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 801a3c0:	f8ad 0012 	strh.w	r0, [sp, #18]
 801a3c4:	b23f      	sxth	r7, r7
 801a3c6:	4630      	mov	r0, r6
 801a3c8:	f8ad 3016 	strh.w	r3, [sp, #22]
 801a3cc:	f8ad 7010 	strh.w	r7, [sp, #16]
 801a3d0:	f7f8 fb9c 	bl	8012b0c <_ZN8touchgfx4RectaNERKS0_>
 801a3d4:	4628      	mov	r0, r5
 801a3d6:	f7ff ff27 	bl	801a228 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801a3da:	4602      	mov	r2, r0
 801a3dc:	e896 0003 	ldmia.w	r6, {r0, r1}
 801a3e0:	ab06      	add	r3, sp, #24
 801a3e2:	e883 0003 	stmia.w	r3, {r0, r1}
 801a3e6:	4611      	mov	r1, r2
 801a3e8:	4618      	mov	r0, r3
 801a3ea:	f7f8 fb8f 	bl	8012b0c <_ZN8touchgfx4RectaNERKS0_>
 801a3ee:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801a3f2:	f9b4 1000 	ldrsh.w	r1, [r4]
 801a3f6:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 801a3fa:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 801a3fe:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 801a402:	4299      	cmp	r1, r3
 801a404:	d10b      	bne.n	801a41e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801a406:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801a40a:	4552      	cmp	r2, sl
 801a40c:	d107      	bne.n	801a41e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801a40e:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 801a412:	455a      	cmp	r2, fp
 801a414:	d103      	bne.n	801a41e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801a416:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 801a41a:	454a      	cmp	r2, r9
 801a41c:	d06d      	beq.n	801a4fa <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801a41e:	f1bb 0f00 	cmp.w	fp, #0
 801a422:	dd65      	ble.n	801a4f0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 801a424:	f1b9 0f00 	cmp.w	r9, #0
 801a428:	dd62      	ble.n	801a4f0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 801a42a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801a42e:	fa1f f08a 	uxth.w	r0, sl
 801a432:	4552      	cmp	r2, sl
 801a434:	9000      	str	r0, [sp, #0]
 801a436:	da12      	bge.n	801a45e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 801a438:	9301      	str	r3, [sp, #4]
 801a43a:	9b00      	ldr	r3, [sp, #0]
 801a43c:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801a440:	f8ad 2012 	strh.w	r2, [sp, #18]
 801a444:	1a9a      	subs	r2, r3, r2
 801a446:	f8ad 1010 	strh.w	r1, [sp, #16]
 801a44a:	f8ad 0014 	strh.w	r0, [sp, #20]
 801a44e:	f8ad 2016 	strh.w	r2, [sp, #22]
 801a452:	69ea      	ldr	r2, [r5, #28]
 801a454:	4631      	mov	r1, r6
 801a456:	4640      	mov	r0, r8
 801a458:	f7ff ff7a 	bl	801a350 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801a45c:	9b01      	ldr	r3, [sp, #4]
 801a45e:	f9b4 2000 	ldrsh.w	r2, [r4]
 801a462:	429a      	cmp	r2, r3
 801a464:	b29f      	uxth	r7, r3
 801a466:	da0d      	bge.n	801a484 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 801a468:	f8ad 2010 	strh.w	r2, [sp, #16]
 801a46c:	1aba      	subs	r2, r7, r2
 801a46e:	f8ad a012 	strh.w	sl, [sp, #18]
 801a472:	f8ad 2014 	strh.w	r2, [sp, #20]
 801a476:	f8ad 9016 	strh.w	r9, [sp, #22]
 801a47a:	69ea      	ldr	r2, [r5, #28]
 801a47c:	4631      	mov	r1, r6
 801a47e:	4640      	mov	r0, r8
 801a480:	f7ff ff66 	bl	801a350 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801a484:	8822      	ldrh	r2, [r4, #0]
 801a486:	88a3      	ldrh	r3, [r4, #4]
 801a488:	445f      	add	r7, fp
 801a48a:	4413      	add	r3, r2
 801a48c:	b29b      	uxth	r3, r3
 801a48e:	b2bf      	uxth	r7, r7
 801a490:	b23a      	sxth	r2, r7
 801a492:	b219      	sxth	r1, r3
 801a494:	4291      	cmp	r1, r2
 801a496:	dd0d      	ble.n	801a4b4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 801a498:	1bdb      	subs	r3, r3, r7
 801a49a:	f8ad 2010 	strh.w	r2, [sp, #16]
 801a49e:	f8ad a012 	strh.w	sl, [sp, #18]
 801a4a2:	f8ad 3014 	strh.w	r3, [sp, #20]
 801a4a6:	f8ad 9016 	strh.w	r9, [sp, #22]
 801a4aa:	69ea      	ldr	r2, [r5, #28]
 801a4ac:	4631      	mov	r1, r6
 801a4ae:	4640      	mov	r0, r8
 801a4b0:	f7ff ff4e 	bl	801a350 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801a4b4:	88e2      	ldrh	r2, [r4, #6]
 801a4b6:	8863      	ldrh	r3, [r4, #2]
 801a4b8:	4413      	add	r3, r2
 801a4ba:	9a00      	ldr	r2, [sp, #0]
 801a4bc:	444a      	add	r2, r9
 801a4be:	b29b      	uxth	r3, r3
 801a4c0:	fa1f f982 	uxth.w	r9, r2
 801a4c4:	fa0f f289 	sxth.w	r2, r9
 801a4c8:	b219      	sxth	r1, r3
 801a4ca:	428a      	cmp	r2, r1
 801a4cc:	da15      	bge.n	801a4fa <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801a4ce:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801a4d2:	f9b4 0000 	ldrsh.w	r0, [r4]
 801a4d6:	f8ad 1014 	strh.w	r1, [sp, #20]
 801a4da:	eba3 0309 	sub.w	r3, r3, r9
 801a4de:	f8ad 0010 	strh.w	r0, [sp, #16]
 801a4e2:	f8ad 2012 	strh.w	r2, [sp, #18]
 801a4e6:	f8ad 3016 	strh.w	r3, [sp, #22]
 801a4ea:	69ea      	ldr	r2, [r5, #28]
 801a4ec:	4631      	mov	r1, r6
 801a4ee:	e001      	b.n	801a4f4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 801a4f0:	69ea      	ldr	r2, [r5, #28]
 801a4f2:	4621      	mov	r1, r4
 801a4f4:	4640      	mov	r0, r8
 801a4f6:	f7ff ff2b 	bl	801a350 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801a4fa:	4628      	mov	r0, r5
 801a4fc:	f7ff fe94 	bl	801a228 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801a500:	6861      	ldr	r1, [r4, #4]
 801a502:	4602      	mov	r2, r0
 801a504:	6820      	ldr	r0, [r4, #0]
 801a506:	4633      	mov	r3, r6
 801a508:	c303      	stmia	r3!, {r0, r1}
 801a50a:	4611      	mov	r1, r2
 801a50c:	4630      	mov	r0, r6
 801a50e:	f7f8 fafd 	bl	8012b0c <_ZN8touchgfx4RectaNERKS0_>
 801a512:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 801a516:	2b00      	cmp	r3, #0
 801a518:	f77f af33 	ble.w	801a382 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801a51c:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 801a520:	2b00      	cmp	r3, #0
 801a522:	f77f af2e 	ble.w	801a382 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801a526:	4628      	mov	r0, r5
 801a528:	f7ff fe9a 	bl	801a260 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 801a52c:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 801a530:	1a18      	subs	r0, r3, r0
 801a532:	f8ad 0010 	strh.w	r0, [sp, #16]
 801a536:	4628      	mov	r0, r5
 801a538:	f7ff fea6 	bl	801a288 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801a53c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801a540:	1a18      	subs	r0, r3, r0
 801a542:	f8ad 0012 	strh.w	r0, [sp, #18]
 801a546:	682b      	ldr	r3, [r5, #0]
 801a548:	4631      	mov	r1, r6
 801a54a:	689b      	ldr	r3, [r3, #8]
 801a54c:	4628      	mov	r0, r5
 801a54e:	4798      	blx	r3
 801a550:	e717      	b.n	801a382 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

0801a552 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 801a552:	b570      	push	{r4, r5, r6, lr}
 801a554:	460c      	mov	r4, r1
 801a556:	b086      	sub	sp, #24
 801a558:	1d06      	adds	r6, r0, #4
 801a55a:	2300      	movs	r3, #0
 801a55c:	4631      	mov	r1, r6
 801a55e:	4605      	mov	r5, r0
 801a560:	a802      	add	r0, sp, #8
 801a562:	9301      	str	r3, [sp, #4]
 801a564:	f7ff fba8 	bl	8019cb8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a568:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801a56c:	8822      	ldrh	r2, [r4, #0]
 801a56e:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 801a572:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801a576:	f8ad 0014 	strh.w	r0, [sp, #20]
 801a57a:	1ad2      	subs	r2, r2, r3
 801a57c:	8863      	ldrh	r3, [r4, #2]
 801a57e:	f8ad 2010 	strh.w	r2, [sp, #16]
 801a582:	1a5b      	subs	r3, r3, r1
 801a584:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 801a588:	f8ad 1016 	strh.w	r1, [sp, #22]
 801a58c:	aa01      	add	r2, sp, #4
 801a58e:	a904      	add	r1, sp, #16
 801a590:	4630      	mov	r0, r6
 801a592:	f8ad 3012 	strh.w	r3, [sp, #18]
 801a596:	f7f8 fb91 	bl	8012cbc <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 801a59a:	9a01      	ldr	r2, [sp, #4]
 801a59c:	b11a      	cbz	r2, 801a5a6 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 801a59e:	4621      	mov	r1, r4
 801a5a0:	4628      	mov	r0, r5
 801a5a2:	f7ff fed5 	bl	801a350 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801a5a6:	b006      	add	sp, #24
 801a5a8:	bd70      	pop	{r4, r5, r6, pc}

0801a5aa <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 801a5aa:	b530      	push	{r4, r5, lr}
 801a5ac:	4602      	mov	r2, r0
 801a5ae:	4604      	mov	r4, r0
 801a5b0:	f852 0f08 	ldr.w	r0, [r2, #8]!
 801a5b4:	b085      	sub	sp, #20
 801a5b6:	460d      	mov	r5, r1
 801a5b8:	6851      	ldr	r1, [r2, #4]
 801a5ba:	466b      	mov	r3, sp
 801a5bc:	c303      	stmia	r3!, {r0, r1}
 801a5be:	4629      	mov	r1, r5
 801a5c0:	4668      	mov	r0, sp
 801a5c2:	f7f8 faa3 	bl	8012b0c <_ZN8touchgfx4RectaNERKS0_>
 801a5c6:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 801a5ca:	b12b      	cbz	r3, 801a5d8 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 801a5cc:	4669      	mov	r1, sp
 801a5ce:	4620      	mov	r0, r4
 801a5d0:	f7ff ffbf 	bl	801a552 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 801a5d4:	b005      	add	sp, #20
 801a5d6:	bd30      	pop	{r4, r5, pc}
 801a5d8:	3404      	adds	r4, #4
 801a5da:	4621      	mov	r1, r4
 801a5dc:	a802      	add	r0, sp, #8
 801a5de:	f7ff fb6b 	bl	8019cb8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a5e2:	f8bd 3000 	ldrh.w	r3, [sp]
 801a5e6:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 801a5ea:	1a9b      	subs	r3, r3, r2
 801a5ec:	f8ad 3000 	strh.w	r3, [sp]
 801a5f0:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801a5f4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801a5f8:	4669      	mov	r1, sp
 801a5fa:	1a9b      	subs	r3, r3, r2
 801a5fc:	4620      	mov	r0, r4
 801a5fe:	f8ad 3002 	strh.w	r3, [sp, #2]
 801a602:	f7f8 fb22 	bl	8012c4a <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 801a606:	e7e5      	b.n	801a5d4 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

0801a608 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 801a608:	680a      	ldr	r2, [r1, #0]
 801a60a:	460b      	mov	r3, r1
 801a60c:	6992      	ldr	r2, [r2, #24]
 801a60e:	1d01      	adds	r1, r0, #4
 801a610:	4618      	mov	r0, r3
 801a612:	4710      	bx	r2

0801a614 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst>:
 801a614:	4298      	cmp	r0, r3
 801a616:	d200      	bcs.n	801a61a <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0x6>
 801a618:	b913      	cbnz	r3, 801a620 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0xc>
 801a61a:	440a      	add	r2, r1
 801a61c:	b210      	sxth	r0, r2
 801a61e:	4770      	bx	lr
 801a620:	ee07 0a90 	vmov	s15, r0
 801a624:	eef8 6a67 	vcvt.f32.u32	s13, s15
 801a628:	ee07 3a90 	vmov	s15, r3
 801a62c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801a630:	eddf 4a15 	vldr	s9, [pc, #84]	; 801a688 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0x74>
 801a634:	eddf 5a15 	vldr	s11, [pc, #84]	; 801a68c <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0x78>
 801a638:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 801a63c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a640:	ee37 7a66 	vsub.f32	s14, s14, s13
 801a644:	ee07 2a90 	vmov	s15, r2
 801a648:	eee7 5a24 	vfma.f32	s11, s14, s9
 801a64c:	ee27 5a07 	vmul.f32	s10, s14, s14
 801a650:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 801a654:	eee5 6a25 	vfma.f32	s13, s10, s11
 801a658:	ee07 1a90 	vmov	s15, r1
 801a65c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801a660:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 801a664:	eee6 7a26 	vfma.f32	s15, s12, s13
 801a668:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801a66c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a670:	bfcc      	ite	gt
 801a672:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 801a676:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 801a67a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801a67e:	ee17 3a90 	vmov	r3, s15
 801a682:	b218      	sxth	r0, r3
 801a684:	4770      	bx	lr
 801a686:	bf00      	nop
 801a688:	402ce6b0 	.word	0x402ce6b0
 801a68c:	3fd9cd60 	.word	0x3fd9cd60

0801a690 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 801a690:	4298      	cmp	r0, r3
 801a692:	d200      	bcs.n	801a696 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 801a694:	b913      	cbnz	r3, 801a69c <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 801a696:	440a      	add	r2, r1
 801a698:	b210      	sxth	r0, r2
 801a69a:	4770      	bx	lr
 801a69c:	ee07 0a90 	vmov	s15, r0
 801a6a0:	eef8 6a67 	vcvt.f32.u32	s13, s15
 801a6a4:	ee07 3a90 	vmov	s15, r3
 801a6a8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801a6ac:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 801a6b0:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a6b4:	ee37 7a66 	vsub.f32	s14, s14, s13
 801a6b8:	ee07 2a90 	vmov	s15, r2
 801a6bc:	ee67 5a07 	vmul.f32	s11, s14, s14
 801a6c0:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 801a6c4:	eee5 6a87 	vfma.f32	s13, s11, s14
 801a6c8:	ee07 1a90 	vmov	s15, r1
 801a6cc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801a6d0:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 801a6d4:	eee6 7a26 	vfma.f32	s15, s12, s13
 801a6d8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801a6dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a6e0:	bfcc      	ite	gt
 801a6e2:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 801a6e6:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 801a6ea:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801a6ee:	ee17 3a90 	vmov	r3, s15
 801a6f2:	b218      	sxth	r0, r3
 801a6f4:	4770      	bx	lr

0801a6f6 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>:
 801a6f6:	4298      	cmp	r0, r3
 801a6f8:	d200      	bcs.n	801a6fc <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x6>
 801a6fa:	b913      	cbnz	r3, 801a702 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0xc>
 801a6fc:	440a      	add	r2, r1
 801a6fe:	b210      	sxth	r0, r2
 801a700:	4770      	bx	lr
 801a702:	ee07 2a90 	vmov	s15, r2
 801a706:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 801a70a:	ee07 0a90 	vmov	s15, r0
 801a70e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 801a712:	ee67 7a27 	vmul.f32	s15, s14, s15
 801a716:	ee07 3a10 	vmov	s14, r3
 801a71a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 801a71e:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 801a722:	ee07 1a90 	vmov	s15, r1
 801a726:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801a72a:	ee77 7a27 	vadd.f32	s15, s14, s15
 801a72e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 801a732:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801a736:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a73a:	bfcc      	ite	gt
 801a73c:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 801a740:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 801a744:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801a748:	ee17 3a90 	vmov	r3, s15
 801a74c:	b218      	sxth	r0, r3
 801a74e:	4770      	bx	lr

0801a750 <_ZN8touchgfx12TextProviderC1Ev>:
 801a750:	b538      	push	{r3, r4, r5, lr}
 801a752:	2500      	movs	r5, #0
 801a754:	2302      	movs	r3, #2
 801a756:	4604      	mov	r4, r0
 801a758:	e9c0 5500 	strd	r5, r5, [r0]
 801a75c:	7403      	strb	r3, [r0, #16]
 801a75e:	6145      	str	r5, [r0, #20]
 801a760:	7605      	strb	r5, [r0, #24]
 801a762:	83c5      	strh	r5, [r0, #30]
 801a764:	8405      	strh	r5, [r0, #32]
 801a766:	86c5      	strh	r5, [r0, #54]	; 0x36
 801a768:	8705      	strh	r5, [r0, #56]	; 0x38
 801a76a:	87c5      	strh	r5, [r0, #62]	; 0x3e
 801a76c:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 801a770:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 801a774:	220e      	movs	r2, #14
 801a776:	4629      	mov	r1, r5
 801a778:	304c      	adds	r0, #76	; 0x4c
 801a77a:	f013 faee 	bl	802dd5a <memset>
 801a77e:	2301      	movs	r3, #1
 801a780:	4620      	mov	r0, r4
 801a782:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 801a786:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801a78a:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 801a78e:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 801a792:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 801a796:	f7ef ff2f 	bl	800a5f8 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 801a79a:	4620      	mov	r0, r4
 801a79c:	bd38      	pop	{r3, r4, r5, pc}

0801a79e <_ZN8touchgfx12TextProvider11endOfStringEv>:
 801a79e:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801a7a0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801a7a4:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 801a7a6:	fab0 f080 	clz	r0, r0
 801a7aa:	0940      	lsrs	r0, r0, #5
 801a7ac:	4770      	bx	lr

0801a7ae <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 801a7ae:	b530      	push	{r4, r5, lr}
 801a7b0:	2500      	movs	r5, #0
 801a7b2:	2401      	movs	r4, #1
 801a7b4:	6843      	ldr	r3, [r0, #4]
 801a7b6:	b913      	cbnz	r3, 801a7be <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 801a7b8:	6803      	ldr	r3, [r0, #0]
 801a7ba:	b313      	cbz	r3, 801a802 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 801a7bc:	6043      	str	r3, [r0, #4]
 801a7be:	7e03      	ldrb	r3, [r0, #24]
 801a7c0:	b143      	cbz	r3, 801a7d4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 801a7c2:	6943      	ldr	r3, [r0, #20]
 801a7c4:	b12b      	cbz	r3, 801a7d2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 801a7c6:	881a      	ldrh	r2, [r3, #0]
 801a7c8:	b11a      	cbz	r2, 801a7d2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 801a7ca:	1c9a      	adds	r2, r3, #2
 801a7cc:	6142      	str	r2, [r0, #20]
 801a7ce:	8818      	ldrh	r0, [r3, #0]
 801a7d0:	bd30      	pop	{r4, r5, pc}
 801a7d2:	7605      	strb	r5, [r0, #24]
 801a7d4:	6843      	ldr	r3, [r0, #4]
 801a7d6:	8819      	ldrh	r1, [r3, #0]
 801a7d8:	b199      	cbz	r1, 801a802 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 801a7da:	1c9a      	adds	r2, r3, #2
 801a7dc:	2902      	cmp	r1, #2
 801a7de:	6042      	str	r2, [r0, #4]
 801a7e0:	d1f5      	bne.n	801a7ce <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 801a7e2:	7c03      	ldrb	r3, [r0, #16]
 801a7e4:	2b01      	cmp	r3, #1
 801a7e6:	d8e5      	bhi.n	801a7b4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801a7e8:	1c5a      	adds	r2, r3, #1
 801a7ea:	3302      	adds	r3, #2
 801a7ec:	7402      	strb	r2, [r0, #16]
 801a7ee:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 801a7f2:	6143      	str	r3, [r0, #20]
 801a7f4:	2b00      	cmp	r3, #0
 801a7f6:	d0dd      	beq.n	801a7b4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801a7f8:	881b      	ldrh	r3, [r3, #0]
 801a7fa:	2b00      	cmp	r3, #0
 801a7fc:	d0da      	beq.n	801a7b4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801a7fe:	7604      	strb	r4, [r0, #24]
 801a800:	e7d8      	b.n	801a7b4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801a802:	2000      	movs	r0, #0
 801a804:	e7e4      	b.n	801a7d0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

0801a806 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 801a806:	b430      	push	{r4, r5}
 801a808:	6001      	str	r1, [r0, #0]
 801a80a:	2100      	movs	r1, #0
 801a80c:	6041      	str	r1, [r0, #4]
 801a80e:	6815      	ldr	r5, [r2, #0]
 801a810:	6085      	str	r5, [r0, #8]
 801a812:	6852      	ldr	r2, [r2, #4]
 801a814:	6443      	str	r3, [r0, #68]	; 0x44
 801a816:	9b02      	ldr	r3, [sp, #8]
 801a818:	60c2      	str	r2, [r0, #12]
 801a81a:	7401      	strb	r1, [r0, #16]
 801a81c:	6141      	str	r1, [r0, #20]
 801a81e:	7601      	strb	r1, [r0, #24]
 801a820:	8701      	strh	r1, [r0, #56]	; 0x38
 801a822:	8401      	strh	r1, [r0, #32]
 801a824:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 801a828:	6483      	str	r3, [r0, #72]	; 0x48
 801a82a:	bc30      	pop	{r4, r5}
 801a82c:	f7ef bee4 	b.w	800a5f8 <_ZN8touchgfx12TextProvider18initializeInternalEv>

0801a830 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 801a830:	b408      	push	{r3}
 801a832:	b510      	push	{r4, lr}
 801a834:	b085      	sub	sp, #20
 801a836:	ac07      	add	r4, sp, #28
 801a838:	f854 3b04 	ldr.w	r3, [r4], #4
 801a83c:	9300      	str	r3, [sp, #0]
 801a83e:	4613      	mov	r3, r2
 801a840:	4622      	mov	r2, r4
 801a842:	9403      	str	r4, [sp, #12]
 801a844:	f7ff ffdf 	bl	801a806 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801a848:	b005      	add	sp, #20
 801a84a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801a84e:	b001      	add	sp, #4
 801a850:	4770      	bx	lr

0801a852 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 801a852:	b5f0      	push	{r4, r5, r6, r7, lr}
 801a854:	4605      	mov	r5, r0
 801a856:	4608      	mov	r0, r1
 801a858:	b1e9      	cbz	r1, 801a896 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 801a85a:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 801a85e:	460b      	mov	r3, r1
 801a860:	f101 0708 	add.w	r7, r1, #8
 801a864:	4622      	mov	r2, r4
 801a866:	6818      	ldr	r0, [r3, #0]
 801a868:	6859      	ldr	r1, [r3, #4]
 801a86a:	4626      	mov	r6, r4
 801a86c:	c603      	stmia	r6!, {r0, r1}
 801a86e:	3308      	adds	r3, #8
 801a870:	42bb      	cmp	r3, r7
 801a872:	4634      	mov	r4, r6
 801a874:	d1f7      	bne.n	801a866 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 801a876:	6818      	ldr	r0, [r3, #0]
 801a878:	6030      	str	r0, [r6, #0]
 801a87a:	889b      	ldrh	r3, [r3, #4]
 801a87c:	80b3      	strh	r3, [r6, #4]
 801a87e:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 801a882:	015b      	lsls	r3, r3, #5
 801a884:	f403 7180 	and.w	r1, r3, #256	; 0x100
 801a888:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 801a88c:	430b      	orrs	r3, r1
 801a88e:	425b      	negs	r3, r3
 801a890:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 801a894:	4610      	mov	r0, r2
 801a896:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801a898 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 801a898:	b538      	push	{r3, r4, r5, lr}
 801a89a:	460c      	mov	r4, r1
 801a89c:	6811      	ldr	r1, [r2, #0]
 801a89e:	4610      	mov	r0, r2
 801a8a0:	68cd      	ldr	r5, [r1, #12]
 801a8a2:	4619      	mov	r1, r3
 801a8a4:	47a8      	blx	r5
 801a8a6:	2800      	cmp	r0, #0
 801a8a8:	bf08      	it	eq
 801a8aa:	4620      	moveq	r0, r4
 801a8ac:	bd38      	pop	{r3, r4, r5, pc}
	...

0801a8b0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 801a8b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801a8b2:	4604      	mov	r4, r0
 801a8b4:	4615      	mov	r5, r2
 801a8b6:	4608      	mov	r0, r1
 801a8b8:	b93a      	cbnz	r2, 801a8ca <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 801a8ba:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 801a8be:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 801a8c2:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 801a8c6:	4628      	mov	r0, r5
 801a8c8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801a8ca:	f892 c00d 	ldrb.w	ip, [r2, #13]
 801a8ce:	8893      	ldrh	r3, [r2, #4]
 801a8d0:	ea4f 160c 	mov.w	r6, ip, lsl #4
 801a8d4:	f406 7280 	and.w	r2, r6, #256	; 0x100
 801a8d8:	79ee      	ldrb	r6, [r5, #7]
 801a8da:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 801a8de:	4316      	orrs	r6, r2
 801a8e0:	19da      	adds	r2, r3, r7
 801a8e2:	b291      	uxth	r1, r2
 801a8e4:	291d      	cmp	r1, #29
 801a8e6:	b2b7      	uxth	r7, r6
 801a8e8:	d87a      	bhi.n	801a9e0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 801a8ea:	2201      	movs	r2, #1
 801a8ec:	408a      	lsls	r2, r1
 801a8ee:	4975      	ldr	r1, [pc, #468]	; (801aac4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 801a8f0:	420a      	tst	r2, r1
 801a8f2:	ea4f 06e6 	mov.w	r6, r6, asr #3
 801a8f6:	d12d      	bne.n	801a954 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 801a8f8:	f412 7f60 	tst.w	r2, #896	; 0x380
 801a8fc:	d070      	beq.n	801a9e0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 801a8fe:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 801a902:	462b      	mov	r3, r5
 801a904:	f105 0e08 	add.w	lr, r5, #8
 801a908:	4615      	mov	r5, r2
 801a90a:	6818      	ldr	r0, [r3, #0]
 801a90c:	6859      	ldr	r1, [r3, #4]
 801a90e:	4694      	mov	ip, r2
 801a910:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 801a914:	3308      	adds	r3, #8
 801a916:	4573      	cmp	r3, lr
 801a918:	4662      	mov	r2, ip
 801a91a:	d1f6      	bne.n	801a90a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 801a91c:	6818      	ldr	r0, [r3, #0]
 801a91e:	f8cc 0000 	str.w	r0, [ip]
 801a922:	889b      	ldrh	r3, [r3, #4]
 801a924:	f8ac 3004 	strh.w	r3, [ip, #4]
 801a928:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 801a92c:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 801a930:	b2b3      	uxth	r3, r6
 801a932:	1aca      	subs	r2, r1, r3
 801a934:	b292      	uxth	r2, r2
 801a936:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 801a93a:	10d2      	asrs	r2, r2, #3
 801a93c:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 801a940:	f002 0260 	and.w	r2, r2, #96	; 0x60
 801a944:	4302      	orrs	r2, r0
 801a946:	1bcf      	subs	r7, r1, r7
 801a948:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 801a94c:	1afb      	subs	r3, r7, r3
 801a94e:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 801a952:	e7b8      	b.n	801a8c6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 801a954:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 801a956:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801a95a:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 801a95c:	f640 6333 	movw	r3, #3635	; 0xe33
 801a960:	4299      	cmp	r1, r3
 801a962:	d110      	bne.n	801a986 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 801a964:	6803      	ldr	r3, [r0, #0]
 801a966:	68db      	ldr	r3, [r3, #12]
 801a968:	4798      	blx	r3
 801a96a:	7b41      	ldrb	r1, [r0, #13]
 801a96c:	00cb      	lsls	r3, r1, #3
 801a96e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801a972:	7a03      	ldrb	r3, [r0, #8]
 801a974:	0648      	lsls	r0, r1, #25
 801a976:	ea43 0302 	orr.w	r3, r3, r2
 801a97a:	bf44      	itt	mi
 801a97c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801a980:	b21b      	sxthmi	r3, r3
 801a982:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801a986:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 801a98a:	443b      	add	r3, r7
 801a98c:	4433      	add	r3, r6
 801a98e:	b29b      	uxth	r3, r3
 801a990:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 801a994:	462a      	mov	r2, r5
 801a996:	f105 0c08 	add.w	ip, r5, #8
 801a99a:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801a99e:	4635      	mov	r5, r6
 801a9a0:	6810      	ldr	r0, [r2, #0]
 801a9a2:	6851      	ldr	r1, [r2, #4]
 801a9a4:	4637      	mov	r7, r6
 801a9a6:	c703      	stmia	r7!, {r0, r1}
 801a9a8:	3208      	adds	r2, #8
 801a9aa:	4562      	cmp	r2, ip
 801a9ac:	463e      	mov	r6, r7
 801a9ae:	d1f7      	bne.n	801a9a0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 801a9b0:	6810      	ldr	r0, [r2, #0]
 801a9b2:	6038      	str	r0, [r7, #0]
 801a9b4:	8892      	ldrh	r2, [r2, #4]
 801a9b6:	80ba      	strh	r2, [r7, #4]
 801a9b8:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 801a9bc:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 801a9c0:	10db      	asrs	r3, r3, #3
 801a9c2:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 801a9c6:	f003 0360 	and.w	r3, r3, #96	; 0x60
 801a9ca:	4313      	orrs	r3, r2
 801a9cc:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 801a9d0:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 801a9d4:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 801a9d8:	1a9b      	subs	r3, r3, r2
 801a9da:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 801a9de:	e772      	b.n	801a8c6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 801a9e0:	f023 0204 	bic.w	r2, r3, #4
 801a9e4:	f640 611b 	movw	r1, #3611	; 0xe1b
 801a9e8:	428a      	cmp	r2, r1
 801a9ea:	d003      	beq.n	801a9f4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 801a9ec:	f640 621d 	movw	r2, #3613	; 0xe1d
 801a9f0:	4293      	cmp	r3, r2
 801a9f2:	d120      	bne.n	801aa36 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x186>
 801a9f4:	3b01      	subs	r3, #1
 801a9f6:	4602      	mov	r2, r0
 801a9f8:	b29b      	uxth	r3, r3
 801a9fa:	4629      	mov	r1, r5
 801a9fc:	4620      	mov	r0, r4
 801a9fe:	f7ff ff4b 	bl	801a898 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 801aa02:	7b41      	ldrb	r1, [r0, #13]
 801aa04:	00cb      	lsls	r3, r1, #3
 801aa06:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801aa0a:	7a03      	ldrb	r3, [r0, #8]
 801aa0c:	0649      	lsls	r1, r1, #25
 801aa0e:	ea43 0302 	orr.w	r3, r3, r2
 801aa12:	bf44      	itt	mi
 801aa14:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801aa18:	b21b      	sxthmi	r3, r3
 801aa1a:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801aa1e:	7b6b      	ldrb	r3, [r5, #13]
 801aa20:	7aaa      	ldrb	r2, [r5, #10]
 801aa22:	005b      	lsls	r3, r3, #1
 801aa24:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801aa28:	4313      	orrs	r3, r2
 801aa2a:	115a      	asrs	r2, r3, #5
 801aa2c:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 801aa30:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 801aa34:	e036      	b.n	801aaa4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 801aa36:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 801aa3a:	f402 7180 	and.w	r1, r2, #256	; 0x100
 801aa3e:	7a2a      	ldrb	r2, [r5, #8]
 801aa40:	f01c 0f40 	tst.w	ip, #64	; 0x40
 801aa44:	ea42 0201 	orr.w	r2, r2, r1
 801aa48:	bf1c      	itt	ne
 801aa4a:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 801aa4e:	b212      	sxthne	r2, r2
 801aa50:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 801aa54:	f640 6109 	movw	r1, #3593	; 0xe09
 801aa58:	f023 0210 	bic.w	r2, r3, #16
 801aa5c:	428a      	cmp	r2, r1
 801aa5e:	d003      	beq.n	801aa68 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b8>
 801aa60:	f640 6213 	movw	r2, #3603	; 0xe13
 801aa64:	4293      	cmp	r3, r2
 801aa66:	d12a      	bne.n	801aabe <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 801aa68:	7b6e      	ldrb	r6, [r5, #13]
 801aa6a:	0076      	lsls	r6, r6, #1
 801aa6c:	f406 7280 	and.w	r2, r6, #256	; 0x100
 801aa70:	7aae      	ldrb	r6, [r5, #10]
 801aa72:	4316      	orrs	r6, r2
 801aa74:	f640 6213 	movw	r2, #3603	; 0xe13
 801aa78:	4293      	cmp	r3, r2
 801aa7a:	bf18      	it	ne
 801aa7c:	f103 33ff 	addne.w	r3, r3, #4294967295
 801aa80:	4602      	mov	r2, r0
 801aa82:	bf14      	ite	ne
 801aa84:	b29b      	uxthne	r3, r3
 801aa86:	f640 630c 	movweq	r3, #3596	; 0xe0c
 801aa8a:	4629      	mov	r1, r5
 801aa8c:	4620      	mov	r0, r4
 801aa8e:	f7ff ff03 	bl	801a898 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 801aa92:	7b43      	ldrb	r3, [r0, #13]
 801aa94:	7a82      	ldrb	r2, [r0, #10]
 801aa96:	005b      	lsls	r3, r3, #1
 801aa98:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801aa9c:	4313      	orrs	r3, r2
 801aa9e:	1af6      	subs	r6, r6, r3
 801aaa0:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 801aaa4:	7b69      	ldrb	r1, [r5, #13]
 801aaa6:	00cb      	lsls	r3, r1, #3
 801aaa8:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801aaac:	7a2b      	ldrb	r3, [r5, #8]
 801aaae:	4313      	orrs	r3, r2
 801aab0:	064a      	lsls	r2, r1, #25
 801aab2:	bf44      	itt	mi
 801aab4:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801aab8:	b21b      	sxthmi	r3, r3
 801aaba:	1bdb      	subs	r3, r3, r7
 801aabc:	e747      	b.n	801a94e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 801aabe:	2300      	movs	r3, #0
 801aac0:	e7b6      	b.n	801aa30 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x180>
 801aac2:	bf00      	nop
 801aac4:	3fc00079 	.word	0x3fc00079

0801aac8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 801aac8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801aacc:	4604      	mov	r4, r0
 801aace:	b942      	cbnz	r2, 801aae2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 801aad0:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801aad4:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 801aad8:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 801aadc:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 801aae0:	e047      	b.n	801ab72 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 801aae2:	7b51      	ldrb	r1, [r2, #13]
 801aae4:	8893      	ldrh	r3, [r2, #4]
 801aae6:	010d      	lsls	r5, r1, #4
 801aae8:	f405 7080 	and.w	r0, r5, #256	; 0x100
 801aaec:	79d5      	ldrb	r5, [r2, #7]
 801aaee:	4305      	orrs	r5, r0
 801aaf0:	2d04      	cmp	r5, #4
 801aaf2:	bfcc      	ite	gt
 801aaf4:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 801aaf8:	f04f 0e01 	movle.w	lr, #1
 801aafc:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 801ab00:	f200 80ab 	bhi.w	801ac5a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 801ab04:	f240 60e7 	movw	r0, #1767	; 0x6e7
 801ab08:	4283      	cmp	r3, r0
 801ab0a:	d216      	bcs.n	801ab3a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801ab0c:	f240 605b 	movw	r0, #1627	; 0x65b
 801ab10:	4283      	cmp	r3, r0
 801ab12:	d859      	bhi.n	801abc8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 801ab14:	f240 6057 	movw	r0, #1623	; 0x657
 801ab18:	4283      	cmp	r3, r0
 801ab1a:	d20e      	bcs.n	801ab3a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801ab1c:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 801ab20:	d24a      	bcs.n	801abb8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 801ab22:	f240 604e 	movw	r0, #1614	; 0x64e
 801ab26:	4283      	cmp	r3, r0
 801ab28:	d207      	bcs.n	801ab3a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801ab2a:	f240 601a 	movw	r0, #1562	; 0x61a
 801ab2e:	4283      	cmp	r3, r0
 801ab30:	d02a      	beq.n	801ab88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801ab32:	d821      	bhi.n	801ab78 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 801ab34:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 801ab38:	d35b      	bcc.n	801abf2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801ab3a:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 801ab3e:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801ab42:	f040 80d0 	bne.w	801ace6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 801ab46:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 801ab4a:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801ab4e:	f040 80ca 	bne.w	801ace6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 801ab52:	00cb      	lsls	r3, r1, #3
 801ab54:	f403 7080 	and.w	r0, r3, #256	; 0x100
 801ab58:	7a13      	ldrb	r3, [r2, #8]
 801ab5a:	0649      	lsls	r1, r1, #25
 801ab5c:	ea43 0300 	orr.w	r3, r3, r0
 801ab60:	bf44      	itt	mi
 801ab62:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801ab66:	b21b      	sxthmi	r3, r3
 801ab68:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801ab6c:	1b5d      	subs	r5, r3, r5
 801ab6e:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801ab72:	4610      	mov	r0, r2
 801ab74:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801ab78:	f240 604b 	movw	r0, #1611	; 0x64b
 801ab7c:	4283      	cmp	r3, r0
 801ab7e:	d338      	bcc.n	801abf2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801ab80:	f240 604c 	movw	r0, #1612	; 0x64c
 801ab84:	4283      	cmp	r3, r0
 801ab86:	d9d8      	bls.n	801ab3a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801ab88:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 801ab8c:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 801ab90:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801ab94:	f040 80f2 	bne.w	801ad7c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 801ab98:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801ab9c:	f040 80ee 	bne.w	801ad7c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 801aba0:	00cb      	lsls	r3, r1, #3
 801aba2:	f403 7080 	and.w	r0, r3, #256	; 0x100
 801aba6:	7a13      	ldrb	r3, [r2, #8]
 801aba8:	064e      	lsls	r6, r1, #25
 801abaa:	ea43 0300 	orr.w	r3, r3, r0
 801abae:	bf44      	itt	mi
 801abb0:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801abb4:	b21b      	sxthmi	r3, r3
 801abb6:	e7d9      	b.n	801ab6c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 801abb8:	f240 6054 	movw	r0, #1620	; 0x654
 801abbc:	4283      	cmp	r3, r0
 801abbe:	d8e3      	bhi.n	801ab88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801abc0:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 801abc4:	d9e0      	bls.n	801ab88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801abc6:	e7b8      	b.n	801ab3a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801abc8:	f240 6074 	movw	r0, #1652	; 0x674
 801abcc:	4283      	cmp	r3, r0
 801abce:	d0b4      	beq.n	801ab3a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801abd0:	d82d      	bhi.n	801ac2e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 801abd2:	f240 605e 	movw	r0, #1630	; 0x65e
 801abd6:	4283      	cmp	r3, r0
 801abd8:	d804      	bhi.n	801abe4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 801abda:	f240 605d 	movw	r0, #1629	; 0x65d
 801abde:	4283      	cmp	r3, r0
 801abe0:	d3d2      	bcc.n	801ab88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801abe2:	e7aa      	b.n	801ab3a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801abe4:	f240 605f 	movw	r0, #1631	; 0x65f
 801abe8:	4283      	cmp	r3, r0
 801abea:	d0cd      	beq.n	801ab88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801abec:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 801abf0:	d0a3      	beq.n	801ab3a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801abf2:	00cb      	lsls	r3, r1, #3
 801abf4:	f403 7080 	and.w	r0, r3, #256	; 0x100
 801abf8:	7a13      	ldrb	r3, [r2, #8]
 801abfa:	0649      	lsls	r1, r1, #25
 801abfc:	ea43 0300 	orr.w	r3, r3, r0
 801ac00:	bf44      	itt	mi
 801ac02:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801ac06:	b21b      	sxthmi	r3, r3
 801ac08:	1b5d      	subs	r5, r3, r5
 801ac0a:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801ac0e:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801ac12:	7b53      	ldrb	r3, [r2, #13]
 801ac14:	015b      	lsls	r3, r3, #5
 801ac16:	f403 7180 	and.w	r1, r3, #256	; 0x100
 801ac1a:	7993      	ldrb	r3, [r2, #6]
 801ac1c:	430b      	orrs	r3, r1
 801ac1e:	005b      	lsls	r3, r3, #1
 801ac20:	2105      	movs	r1, #5
 801ac22:	fb93 f3f1 	sdiv	r3, r3, r1
 801ac26:	f992 1009 	ldrsb.w	r1, [r2, #9]
 801ac2a:	440b      	add	r3, r1
 801ac2c:	e756      	b.n	801aadc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 801ac2e:	f240 60e2 	movw	r0, #1762	; 0x6e2
 801ac32:	4283      	cmp	r3, r0
 801ac34:	d809      	bhi.n	801ac4a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 801ac36:	f240 60df 	movw	r0, #1759	; 0x6df
 801ac3a:	4283      	cmp	r3, r0
 801ac3c:	f4bf af7d 	bcs.w	801ab3a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801ac40:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 801ac44:	2b05      	cmp	r3, #5
 801ac46:	d8d4      	bhi.n	801abf2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801ac48:	e777      	b.n	801ab3a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801ac4a:	f240 60e3 	movw	r0, #1763	; 0x6e3
 801ac4e:	4283      	cmp	r3, r0
 801ac50:	d09a      	beq.n	801ab88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801ac52:	f240 60e4 	movw	r0, #1764	; 0x6e4
 801ac56:	4283      	cmp	r3, r0
 801ac58:	e7ca      	b.n	801abf0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 801ac5a:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 801ac5e:	d22b      	bcs.n	801acb8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 801ac60:	f640 00ed 	movw	r0, #2285	; 0x8ed
 801ac64:	4283      	cmp	r3, r0
 801ac66:	d28f      	bcs.n	801ab88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801ac68:	f640 00e5 	movw	r0, #2277	; 0x8e5
 801ac6c:	4283      	cmp	r3, r0
 801ac6e:	d816      	bhi.n	801ac9e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 801ac70:	f640 00e4 	movw	r0, #2276	; 0x8e4
 801ac74:	4283      	cmp	r3, r0
 801ac76:	f4bf af60 	bcs.w	801ab3a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801ac7a:	f240 60ec 	movw	r0, #1772	; 0x6ec
 801ac7e:	4283      	cmp	r3, r0
 801ac80:	d80a      	bhi.n	801ac98 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 801ac82:	f240 60eb 	movw	r0, #1771	; 0x6eb
 801ac86:	4283      	cmp	r3, r0
 801ac88:	f4bf af57 	bcs.w	801ab3a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801ac8c:	f240 60ea 	movw	r0, #1770	; 0x6ea
 801ac90:	4283      	cmp	r3, r0
 801ac92:	f43f af79 	beq.w	801ab88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801ac96:	e7ac      	b.n	801abf2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801ac98:	f240 60ed 	movw	r0, #1773	; 0x6ed
 801ac9c:	e7f8      	b.n	801ac90 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 801ac9e:	f640 00e8 	movw	r0, #2280	; 0x8e8
 801aca2:	4283      	cmp	r3, r0
 801aca4:	d802      	bhi.n	801acac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 801aca6:	f640 00e7 	movw	r0, #2279	; 0x8e7
 801acaa:	e798      	b.n	801abde <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 801acac:	f640 00e9 	movw	r0, #2281	; 0x8e9
 801acb0:	4283      	cmp	r3, r0
 801acb2:	f47f af42 	bne.w	801ab3a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801acb6:	e767      	b.n	801ab88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801acb8:	f640 00f6 	movw	r0, #2294	; 0x8f6
 801acbc:	4283      	cmp	r3, r0
 801acbe:	f43f af63 	beq.w	801ab88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801acc2:	d802      	bhi.n	801acca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 801acc4:	f640 00f2 	movw	r0, #2290	; 0x8f2
 801acc8:	e7f2      	b.n	801acb0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 801acca:	f640 00fa 	movw	r0, #2298	; 0x8fa
 801acce:	4283      	cmp	r3, r0
 801acd0:	d805      	bhi.n	801acde <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 801acd2:	f640 00f9 	movw	r0, #2297	; 0x8f9
 801acd6:	4283      	cmp	r3, r0
 801acd8:	f4ff af2f 	bcc.w	801ab3a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801acdc:	e754      	b.n	801ab88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801acde:	f640 00fe 	movw	r0, #2302	; 0x8fe
 801ace2:	4283      	cmp	r3, r0
 801ace4:	e7af      	b.n	801ac46 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 801ace6:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 801acea:	4617      	mov	r7, r2
 801acec:	f102 0808 	add.w	r8, r2, #8
 801acf0:	4666      	mov	r6, ip
 801acf2:	6838      	ldr	r0, [r7, #0]
 801acf4:	6879      	ldr	r1, [r7, #4]
 801acf6:	46e6      	mov	lr, ip
 801acf8:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 801acfc:	3708      	adds	r7, #8
 801acfe:	4547      	cmp	r7, r8
 801ad00:	46f4      	mov	ip, lr
 801ad02:	d1f6      	bne.n	801acf2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 801ad04:	6838      	ldr	r0, [r7, #0]
 801ad06:	f8ce 0000 	str.w	r0, [lr]
 801ad0a:	88b9      	ldrh	r1, [r7, #4]
 801ad0c:	f8ae 1004 	strh.w	r1, [lr, #4]
 801ad10:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 801ad14:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801ad18:	d009      	beq.n	801ad2e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 801ad1a:	7b51      	ldrb	r1, [r2, #13]
 801ad1c:	7992      	ldrb	r2, [r2, #6]
 801ad1e:	0149      	lsls	r1, r1, #5
 801ad20:	f401 7180 	and.w	r1, r1, #256	; 0x100
 801ad24:	4311      	orrs	r1, r2
 801ad26:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 801ad2a:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 801ad2e:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801ad32:	b2ad      	uxth	r5, r5
 801ad34:	d00d      	beq.n	801ad52 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 801ad36:	442b      	add	r3, r5
 801ad38:	b29b      	uxth	r3, r3
 801ad3a:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 801ad3e:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 801ad42:	10db      	asrs	r3, r3, #3
 801ad44:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 801ad48:	f003 0360 	and.w	r3, r3, #96	; 0x60
 801ad4c:	4313      	orrs	r3, r2
 801ad4e:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 801ad52:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 801ad56:	00cb      	lsls	r3, r1, #3
 801ad58:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801ad5c:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 801ad60:	064f      	lsls	r7, r1, #25
 801ad62:	ea43 0302 	orr.w	r3, r3, r2
 801ad66:	bf44      	itt	mi
 801ad68:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801ad6c:	b21b      	sxthmi	r3, r3
 801ad6e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801ad72:	1b5b      	subs	r3, r3, r5
 801ad74:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 801ad78:	4632      	mov	r2, r6
 801ad7a:	e6fa      	b.n	801ab72 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 801ad7c:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 801ad80:	4617      	mov	r7, r2
 801ad82:	f102 0908 	add.w	r9, r2, #8
 801ad86:	4666      	mov	r6, ip
 801ad88:	6838      	ldr	r0, [r7, #0]
 801ad8a:	6879      	ldr	r1, [r7, #4]
 801ad8c:	46e0      	mov	r8, ip
 801ad8e:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 801ad92:	3708      	adds	r7, #8
 801ad94:	454f      	cmp	r7, r9
 801ad96:	46c4      	mov	ip, r8
 801ad98:	d1f6      	bne.n	801ad88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 801ad9a:	6838      	ldr	r0, [r7, #0]
 801ad9c:	f8c8 0000 	str.w	r0, [r8]
 801ada0:	88b9      	ldrh	r1, [r7, #4]
 801ada2:	f8a8 1004 	strh.w	r1, [r8, #4]
 801ada6:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 801adaa:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801adae:	d009      	beq.n	801adc4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 801adb0:	7b51      	ldrb	r1, [r2, #13]
 801adb2:	7992      	ldrb	r2, [r2, #6]
 801adb4:	0149      	lsls	r1, r1, #5
 801adb6:	f401 7180 	and.w	r1, r1, #256	; 0x100
 801adba:	4311      	orrs	r1, r2
 801adbc:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 801adc0:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 801adc4:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801adc8:	d00e      	beq.n	801ade8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 801adca:	eba3 030e 	sub.w	r3, r3, lr
 801adce:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 801add2:	b29b      	uxth	r3, r3
 801add4:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 801add8:	10db      	asrs	r3, r3, #3
 801adda:	f003 0360 	and.w	r3, r3, #96	; 0x60
 801adde:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 801ade2:	4313      	orrs	r3, r2
 801ade4:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 801ade8:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 801adec:	00cb      	lsls	r3, r1, #3
 801adee:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801adf2:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 801adf6:	0648      	lsls	r0, r1, #25
 801adf8:	ea43 0302 	orr.w	r3, r3, r2
 801adfc:	bf44      	itt	mi
 801adfe:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801ae02:	b21b      	sxthmi	r3, r3
 801ae04:	1b5d      	subs	r5, r3, r5
 801ae06:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801ae0a:	e7b5      	b.n	801ad78 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

0801ae0c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 801ae0c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801ae10:	461e      	mov	r6, r3
 801ae12:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801ae14:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801ae18:	4604      	mov	r4, r0
 801ae1a:	4617      	mov	r7, r2
 801ae1c:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 801ae20:	f7ef fba8 	bl	800a574 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801ae24:	4605      	mov	r5, r0
 801ae26:	b918      	cbnz	r0, 801ae30 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 801ae28:	6030      	str	r0, [r6, #0]
 801ae2a:	4628      	mov	r0, r5
 801ae2c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801ae30:	683b      	ldr	r3, [r7, #0]
 801ae32:	4601      	mov	r1, r0
 801ae34:	68db      	ldr	r3, [r3, #12]
 801ae36:	4638      	mov	r0, r7
 801ae38:	4798      	blx	r3
 801ae3a:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 801ae3e:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 801ae42:	4602      	mov	r2, r0
 801ae44:	6030      	str	r0, [r6, #0]
 801ae46:	d213      	bcs.n	801ae70 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 801ae48:	4643      	mov	r3, r8
 801ae4a:	4639      	mov	r1, r7
 801ae4c:	4620      	mov	r0, r4
 801ae4e:	f7ff fe3b 	bl	801aac8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801ae52:	6030      	str	r0, [r6, #0]
 801ae54:	6833      	ldr	r3, [r6, #0]
 801ae56:	b143      	cbz	r3, 801ae6a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 801ae58:	7b5a      	ldrb	r2, [r3, #13]
 801ae5a:	7a9b      	ldrb	r3, [r3, #10]
 801ae5c:	0052      	lsls	r2, r2, #1
 801ae5e:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801ae62:	4313      	orrs	r3, r2
 801ae64:	bf0c      	ite	eq
 801ae66:	2301      	moveq	r3, #1
 801ae68:	2300      	movne	r3, #0
 801ae6a:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 801ae6e:	e7dc      	b.n	801ae2a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 801ae70:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 801ae74:	b29b      	uxth	r3, r3
 801ae76:	2b7f      	cmp	r3, #127	; 0x7f
 801ae78:	d804      	bhi.n	801ae84 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 801ae7a:	4639      	mov	r1, r7
 801ae7c:	4620      	mov	r0, r4
 801ae7e:	f7ff fd17 	bl	801a8b0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801ae82:	e7e6      	b.n	801ae52 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 801ae84:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 801ae88:	2b00      	cmp	r3, #0
 801ae8a:	d0e3      	beq.n	801ae54 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 801ae8c:	f640 1302 	movw	r3, #2306	; 0x902
 801ae90:	429d      	cmp	r5, r3
 801ae92:	d1df      	bne.n	801ae54 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 801ae94:	4601      	mov	r1, r0
 801ae96:	4620      	mov	r0, r4
 801ae98:	f7ff fcdb 	bl	801a852 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 801ae9c:	e7d9      	b.n	801ae52 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

0801ae9e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 801ae9e:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801aea2:	461e      	mov	r6, r3
 801aea4:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801aea6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801aeaa:	4604      	mov	r4, r0
 801aeac:	4617      	mov	r7, r2
 801aeae:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 801aeb2:	f7ef fb5f 	bl	800a574 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801aeb6:	4605      	mov	r5, r0
 801aeb8:	b918      	cbnz	r0, 801aec2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 801aeba:	6030      	str	r0, [r6, #0]
 801aebc:	4628      	mov	r0, r5
 801aebe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801aec2:	683b      	ldr	r3, [r7, #0]
 801aec4:	4601      	mov	r1, r0
 801aec6:	f8d3 9008 	ldr.w	r9, [r3, #8]
 801aeca:	4638      	mov	r0, r7
 801aecc:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 801aed0:	47c8      	blx	r9
 801aed2:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 801aed6:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 801aeda:	4602      	mov	r2, r0
 801aedc:	6030      	str	r0, [r6, #0]
 801aede:	d213      	bcs.n	801af08 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 801aee0:	4643      	mov	r3, r8
 801aee2:	4639      	mov	r1, r7
 801aee4:	4620      	mov	r0, r4
 801aee6:	f7ff fdef 	bl	801aac8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801aeea:	6030      	str	r0, [r6, #0]
 801aeec:	6833      	ldr	r3, [r6, #0]
 801aeee:	b143      	cbz	r3, 801af02 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 801aef0:	7b5a      	ldrb	r2, [r3, #13]
 801aef2:	7a9b      	ldrb	r3, [r3, #10]
 801aef4:	0052      	lsls	r2, r2, #1
 801aef6:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801aefa:	4313      	orrs	r3, r2
 801aefc:	bf0c      	ite	eq
 801aefe:	2301      	moveq	r3, #1
 801af00:	2300      	movne	r3, #0
 801af02:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 801af06:	e7d9      	b.n	801aebc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 801af08:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 801af0c:	b29b      	uxth	r3, r3
 801af0e:	2b7f      	cmp	r3, #127	; 0x7f
 801af10:	d804      	bhi.n	801af1c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 801af12:	4639      	mov	r1, r7
 801af14:	4620      	mov	r0, r4
 801af16:	f7ff fccb 	bl	801a8b0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801af1a:	e7e6      	b.n	801aeea <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 801af1c:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 801af20:	2b00      	cmp	r3, #0
 801af22:	d0e3      	beq.n	801aeec <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 801af24:	f640 1302 	movw	r3, #2306	; 0x902
 801af28:	429d      	cmp	r5, r3
 801af2a:	d1df      	bne.n	801aeec <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 801af2c:	4601      	mov	r1, r0
 801af2e:	4620      	mov	r0, r4
 801af30:	f7ff fc8f 	bl	801a852 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 801af34:	e7d9      	b.n	801aeea <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

0801af36 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 801af36:	b510      	push	{r4, lr}
 801af38:	4604      	mov	r4, r0
 801af3a:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 801af3e:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801af40:	b1f1      	cbz	r1, 801af80 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 801af42:	2b0a      	cmp	r3, #10
 801af44:	d02f      	beq.n	801afa6 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 801af46:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 801af48:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 801af4c:	3901      	subs	r1, #1
 801af4e:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 801af50:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 801af54:	1c51      	adds	r1, r2, #1
 801af56:	b289      	uxth	r1, r1
 801af58:	2901      	cmp	r1, #1
 801af5a:	bf84      	itt	hi
 801af5c:	f102 32ff 	addhi.w	r2, r2, #4294967295
 801af60:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 801af62:	f103 0201 	add.w	r2, r3, #1
 801af66:	8722      	strh	r2, [r4, #56]	; 0x38
 801af68:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 801af6a:	bf98      	it	ls
 801af6c:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 801af6e:	4413      	add	r3, r2
 801af70:	b29b      	uxth	r3, r3
 801af72:	2b09      	cmp	r3, #9
 801af74:	bf88      	it	hi
 801af76:	3b0a      	subhi	r3, #10
 801af78:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801af7c:	8458      	strh	r0, [r3, #34]	; 0x22
 801af7e:	e7dc      	b.n	801af3a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 801af80:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801af82:	2b0a      	cmp	r3, #10
 801af84:	d00f      	beq.n	801afa6 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 801af86:	4620      	mov	r0, r4
 801af88:	f7ff fc11 	bl	801a7ae <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 801af8c:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801af8e:	1c5a      	adds	r2, r3, #1
 801af90:	8722      	strh	r2, [r4, #56]	; 0x38
 801af92:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 801af94:	4413      	add	r3, r2
 801af96:	b29b      	uxth	r3, r3
 801af98:	2b09      	cmp	r3, #9
 801af9a:	bf88      	it	hi
 801af9c:	3b0a      	subhi	r3, #10
 801af9e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801afa2:	8458      	strh	r0, [r3, #34]	; 0x22
 801afa4:	e7ec      	b.n	801af80 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 801afa6:	bd10      	pop	{r4, pc}

0801afa8 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 801afa8:	b538      	push	{r3, r4, r5, lr}
 801afaa:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801afac:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 801afb0:	4604      	mov	r4, r0
 801afb2:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 801afb4:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 801afb6:	3a01      	subs	r2, #1
 801afb8:	8702      	strh	r2, [r0, #56]	; 0x38
 801afba:	1c5a      	adds	r2, r3, #1
 801afbc:	b292      	uxth	r2, r2
 801afbe:	2a09      	cmp	r2, #9
 801afc0:	bf86      	itte	hi
 801afc2:	3b09      	subhi	r3, #9
 801afc4:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 801afc6:	86c2      	strhls	r2, [r0, #54]	; 0x36
 801afc8:	f7ff ffb5 	bl	801af36 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 801afcc:	8c23      	ldrh	r3, [r4, #32]
 801afce:	2b01      	cmp	r3, #1
 801afd0:	bf9c      	itt	ls
 801afd2:	3301      	addls	r3, #1
 801afd4:	8423      	strhls	r3, [r4, #32]
 801afd6:	8be3      	ldrh	r3, [r4, #30]
 801afd8:	b90b      	cbnz	r3, 801afde <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 801afda:	2302      	movs	r3, #2
 801afdc:	83e3      	strh	r3, [r4, #30]
 801afde:	8be3      	ldrh	r3, [r4, #30]
 801afe0:	3b01      	subs	r3, #1
 801afe2:	b29b      	uxth	r3, r3
 801afe4:	83e3      	strh	r3, [r4, #30]
 801afe6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801afea:	4628      	mov	r0, r5
 801afec:	8365      	strh	r5, [r4, #26]
 801afee:	bd38      	pop	{r3, r4, r5, pc}

0801aff0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 801aff0:	428a      	cmp	r2, r1
 801aff2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801aff6:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 801aff8:	d931      	bls.n	801b05e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 801affa:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 801affc:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 801b000:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 801b004:	19ee      	adds	r6, r5, r7
 801b006:	1a54      	subs	r4, r2, r1
 801b008:	3e01      	subs	r6, #1
 801b00a:	fa1f fe84 	uxth.w	lr, r4
 801b00e:	b2b4      	uxth	r4, r6
 801b010:	eba4 090e 	sub.w	r9, r4, lr
 801b014:	fa1f f989 	uxth.w	r9, r9
 801b018:	2c09      	cmp	r4, #9
 801b01a:	4626      	mov	r6, r4
 801b01c:	bf88      	it	hi
 801b01e:	f1a4 060a 	subhi.w	r6, r4, #10
 801b022:	f1bc 0f00 	cmp.w	ip, #0
 801b026:	bf08      	it	eq
 801b028:	f04f 0c02 	moveq.w	ip, #2
 801b02c:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801b030:	f10c 3cff 	add.w	ip, ip, #4294967295
 801b034:	fa1f fc8c 	uxth.w	ip, ip
 801b038:	3c01      	subs	r4, #1
 801b03a:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 801b03e:	b2a4      	uxth	r4, r4
 801b040:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 801b044:	454c      	cmp	r4, r9
 801b046:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 801b04a:	d1e5      	bne.n	801b018 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 801b04c:	eba5 050e 	sub.w	r5, r5, lr
 801b050:	eb0e 0408 	add.w	r4, lr, r8
 801b054:	8705      	strh	r5, [r0, #56]	; 0x38
 801b056:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 801b05a:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 801b05e:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 801b060:	1a64      	subs	r4, r4, r1
 801b062:	4439      	add	r1, r7
 801b064:	b289      	uxth	r1, r1
 801b066:	2909      	cmp	r1, #9
 801b068:	bf88      	it	hi
 801b06a:	390a      	subhi	r1, #10
 801b06c:	8704      	strh	r4, [r0, #56]	; 0x38
 801b06e:	86c1      	strh	r1, [r0, #54]	; 0x36
 801b070:	250a      	movs	r5, #10
 801b072:	b18a      	cbz	r2, 801b098 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 801b074:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 801b076:	3a01      	subs	r2, #1
 801b078:	b292      	uxth	r2, r2
 801b07a:	3101      	adds	r1, #1
 801b07c:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 801b080:	8701      	strh	r1, [r0, #56]	; 0x38
 801b082:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 801b084:	b901      	cbnz	r1, 801b088 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 801b086:	86c5      	strh	r5, [r0, #54]	; 0x36
 801b088:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 801b08a:	3901      	subs	r1, #1
 801b08c:	b289      	uxth	r1, r1
 801b08e:	86c1      	strh	r1, [r0, #54]	; 0x36
 801b090:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 801b094:	844c      	strh	r4, [r1, #34]	; 0x22
 801b096:	e7ec      	b.n	801b072 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 801b098:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801b09c:	f7ff bf4b 	b.w	801af36 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

0801b0a0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 801b0a0:	b570      	push	{r4, r5, r6, lr}
 801b0a2:	2500      	movs	r5, #0
 801b0a4:	4295      	cmp	r5, r2
 801b0a6:	d011      	beq.n	801b0cc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 801b0a8:	8bc4      	ldrh	r4, [r0, #30]
 801b0aa:	f831 6b02 	ldrh.w	r6, [r1], #2
 801b0ae:	4414      	add	r4, r2
 801b0b0:	3c01      	subs	r4, #1
 801b0b2:	1b64      	subs	r4, r4, r5
 801b0b4:	b2a4      	uxth	r4, r4
 801b0b6:	2c01      	cmp	r4, #1
 801b0b8:	bf88      	it	hi
 801b0ba:	3c02      	subhi	r4, #2
 801b0bc:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801b0c0:	8b64      	ldrh	r4, [r4, #26]
 801b0c2:	42b4      	cmp	r4, r6
 801b0c4:	d117      	bne.n	801b0f6 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 801b0c6:	3501      	adds	r5, #1
 801b0c8:	b2ad      	uxth	r5, r5
 801b0ca:	e7eb      	b.n	801b0a4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 801b0cc:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801b0d0:	2400      	movs	r4, #0
 801b0d2:	4413      	add	r3, r2
 801b0d4:	b2a2      	uxth	r2, r4
 801b0d6:	429a      	cmp	r2, r3
 801b0d8:	da0f      	bge.n	801b0fa <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 801b0da:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 801b0dc:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 801b0e0:	4432      	add	r2, r6
 801b0e2:	b292      	uxth	r2, r2
 801b0e4:	2a09      	cmp	r2, #9
 801b0e6:	bf88      	it	hi
 801b0e8:	3a0a      	subhi	r2, #10
 801b0ea:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801b0ee:	3401      	adds	r4, #1
 801b0f0:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 801b0f2:	42aa      	cmp	r2, r5
 801b0f4:	d0ee      	beq.n	801b0d4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 801b0f6:	2000      	movs	r0, #0
 801b0f8:	bd70      	pop	{r4, r5, r6, pc}
 801b0fa:	2001      	movs	r0, #1
 801b0fc:	e7fc      	b.n	801b0f8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

0801b0fe <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 801b0fe:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b102:	4605      	mov	r5, r0
 801b104:	4616      	mov	r6, r2
 801b106:	1c8c      	adds	r4, r1, #2
 801b108:	8809      	ldrh	r1, [r1, #0]
 801b10a:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 801b10e:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 801b112:	42b3      	cmp	r3, r6
 801b114:	d124      	bne.n	801b160 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 801b116:	f3c1 2903 	ubfx	r9, r1, #8, #4
 801b11a:	f3c1 1803 	ubfx	r8, r1, #4, #4
 801b11e:	f001 070f 	and.w	r7, r1, #15
 801b122:	f8cd 8000 	str.w	r8, [sp]
 801b126:	464b      	mov	r3, r9
 801b128:	4652      	mov	r2, sl
 801b12a:	4621      	mov	r1, r4
 801b12c:	4628      	mov	r0, r5
 801b12e:	f7ff ffb7 	bl	801b0a0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 801b132:	4683      	mov	fp, r0
 801b134:	b168      	cbz	r0, 801b152 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 801b136:	eb0a 0109 	add.w	r1, sl, r9
 801b13a:	4441      	add	r1, r8
 801b13c:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 801b140:	463a      	mov	r2, r7
 801b142:	4649      	mov	r1, r9
 801b144:	4628      	mov	r0, r5
 801b146:	f7ff ff53 	bl	801aff0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 801b14a:	4658      	mov	r0, fp
 801b14c:	b003      	add	sp, #12
 801b14e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b152:	eb07 010a 	add.w	r1, r7, sl
 801b156:	4449      	add	r1, r9
 801b158:	4441      	add	r1, r8
 801b15a:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 801b15e:	e7d2      	b.n	801b106 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 801b160:	f04f 0b00 	mov.w	fp, #0
 801b164:	e7f1      	b.n	801b14a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0801b166 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 801b166:	b570      	push	{r4, r5, r6, lr}
 801b168:	8810      	ldrh	r0, [r2, #0]
 801b16a:	4298      	cmp	r0, r3
 801b16c:	d817      	bhi.n	801b19e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801b16e:	1e48      	subs	r0, r1, #1
 801b170:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 801b174:	4298      	cmp	r0, r3
 801b176:	d312      	bcc.n	801b19e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801b178:	2400      	movs	r4, #0
 801b17a:	428c      	cmp	r4, r1
 801b17c:	d20f      	bcs.n	801b19e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801b17e:	1860      	adds	r0, r4, r1
 801b180:	1040      	asrs	r0, r0, #1
 801b182:	0085      	lsls	r5, r0, #2
 801b184:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 801b188:	42b3      	cmp	r3, r6
 801b18a:	d902      	bls.n	801b192 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 801b18c:	3001      	adds	r0, #1
 801b18e:	b284      	uxth	r4, r0
 801b190:	e7f3      	b.n	801b17a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 801b192:	d201      	bcs.n	801b198 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 801b194:	b281      	uxth	r1, r0
 801b196:	e7f0      	b.n	801b17a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 801b198:	442a      	add	r2, r5
 801b19a:	8850      	ldrh	r0, [r2, #2]
 801b19c:	bd70      	pop	{r4, r5, r6, pc}
 801b19e:	2000      	movs	r0, #0
 801b1a0:	e7fc      	b.n	801b19c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

0801b1a2 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 801b1a2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801b1a6:	6c45      	ldr	r5, [r0, #68]	; 0x44
 801b1a8:	886f      	ldrh	r7, [r5, #2]
 801b1aa:	4604      	mov	r4, r0
 801b1ac:	087f      	lsrs	r7, r7, #1
 801b1ae:	260b      	movs	r6, #11
 801b1b0:	3e01      	subs	r6, #1
 801b1b2:	d013      	beq.n	801b1dc <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 801b1b4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 801b1b6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801b1ba:	462a      	mov	r2, r5
 801b1bc:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 801b1c0:	4639      	mov	r1, r7
 801b1c2:	4643      	mov	r3, r8
 801b1c4:	4620      	mov	r0, r4
 801b1c6:	f7ff ffce 	bl	801b166 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 801b1ca:	b138      	cbz	r0, 801b1dc <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 801b1cc:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 801b1d0:	4642      	mov	r2, r8
 801b1d2:	4620      	mov	r0, r4
 801b1d4:	f7ff ff93 	bl	801b0fe <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 801b1d8:	2800      	cmp	r0, #0
 801b1da:	d1e9      	bne.n	801b1b0 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 801b1dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801b1e0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 801b1e0:	b570      	push	{r4, r5, r6, lr}
 801b1e2:	694a      	ldr	r2, [r1, #20]
 801b1e4:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 801b1e6:	684b      	ldr	r3, [r1, #4]
 801b1e8:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 801b1ea:	1b54      	subs	r4, r2, r5
 801b1ec:	f000 8106 	beq.w	801b3fc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 801b1f0:	1b9b      	subs	r3, r3, r6
 801b1f2:	d003      	beq.n	801b1fc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 801b1f4:	4363      	muls	r3, r4
 801b1f6:	2210      	movs	r2, #16
 801b1f8:	fb93 f3f2 	sdiv	r3, r3, r2
 801b1fc:	680c      	ldr	r4, [r1, #0]
 801b1fe:	698a      	ldr	r2, [r1, #24]
 801b200:	1b65      	subs	r5, r4, r5
 801b202:	f000 80fd 	beq.w	801b400 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 801b206:	1b92      	subs	r2, r2, r6
 801b208:	d003      	beq.n	801b212 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 801b20a:	436a      	muls	r2, r5
 801b20c:	2410      	movs	r4, #16
 801b20e:	fb92 f2f4 	sdiv	r2, r2, r4
 801b212:	1a9b      	subs	r3, r3, r2
 801b214:	ee07 3a90 	vmov	s15, r3
 801b218:	ed9f 4a88 	vldr	s8, [pc, #544]	; 801b43c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 801b21c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801b220:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801b224:	ee67 7a84 	vmul.f32	s15, s15, s8
 801b228:	460a      	mov	r2, r1
 801b22a:	ee87 3a27 	vdiv.f32	s6, s14, s15
 801b22e:	4603      	mov	r3, r0
 801b230:	f100 040c 	add.w	r4, r0, #12
 801b234:	eeb1 6a43 	vneg.f32	s12, s6
 801b238:	edd2 7a02 	vldr	s15, [r2, #8]
 801b23c:	eec7 6a27 	vdiv.f32	s13, s14, s15
 801b240:	3214      	adds	r2, #20
 801b242:	ece3 6a01 	vstmia	r3!, {s13}
 801b246:	ed52 7a02 	vldr	s15, [r2, #-8]
 801b24a:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801b24e:	429c      	cmp	r4, r3
 801b250:	edc3 7a02 	vstr	s15, [r3, #8]
 801b254:	ed52 7a01 	vldr	s15, [r2, #-4]
 801b258:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801b25c:	edc3 7a05 	vstr	s15, [r3, #20]
 801b260:	d1ea      	bne.n	801b238 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 801b262:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801b264:	698b      	ldr	r3, [r1, #24]
 801b266:	edd0 4a02 	vldr	s9, [r0, #8]
 801b26a:	edd0 3a00 	vldr	s7, [r0]
 801b26e:	edd0 6a01 	vldr	s13, [r0, #4]
 801b272:	ed90 5a05 	vldr	s10, [r0, #20]
 801b276:	ed90 2a03 	vldr	s4, [r0, #12]
 801b27a:	edd0 5a04 	vldr	s11, [r0, #16]
 801b27e:	ed90 1a07 	vldr	s2, [r0, #28]
 801b282:	edd0 2a06 	vldr	s5, [r0, #24]
 801b286:	1a9b      	subs	r3, r3, r2
 801b288:	ee07 3a90 	vmov	s15, r3
 801b28c:	684b      	ldr	r3, [r1, #4]
 801b28e:	1a9b      	subs	r3, r3, r2
 801b290:	ee07 3a10 	vmov	s14, r3
 801b294:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801b298:	ee76 6ae4 	vsub.f32	s13, s13, s9
 801b29c:	ee67 7a84 	vmul.f32	s15, s15, s8
 801b2a0:	ee73 4ae4 	vsub.f32	s9, s7, s9
 801b2a4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801b2a8:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 801b2ac:	ee27 7a04 	vmul.f32	s14, s14, s8
 801b2b0:	ee75 5ac5 	vsub.f32	s11, s11, s10
 801b2b4:	eee6 7a87 	vfma.f32	s15, s13, s14
 801b2b8:	ee32 5a45 	vsub.f32	s10, s4, s10
 801b2bc:	ee67 7a83 	vmul.f32	s15, s15, s6
 801b2c0:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 801b2c4:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801b2c6:	694a      	ldr	r2, [r1, #20]
 801b2c8:	1b13      	subs	r3, r2, r4
 801b2ca:	ee07 3a10 	vmov	s14, r3
 801b2ce:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801b2d2:	680b      	ldr	r3, [r1, #0]
 801b2d4:	ee27 7a04 	vmul.f32	s14, s14, s8
 801b2d8:	1b1b      	subs	r3, r3, r4
 801b2da:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 801b2de:	ee07 3a10 	vmov	s14, r3
 801b2e2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801b2e6:	ee27 7a04 	vmul.f32	s14, s14, s8
 801b2ea:	eee6 4a87 	vfma.f32	s9, s13, s14
 801b2ee:	ee64 4a86 	vmul.f32	s9, s9, s12
 801b2f2:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 801b2f6:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801b2f8:	698b      	ldr	r3, [r1, #24]
 801b2fa:	1a9b      	subs	r3, r3, r2
 801b2fc:	ee06 3a90 	vmov	s13, r3
 801b300:	684b      	ldr	r3, [r1, #4]
 801b302:	1a9b      	subs	r3, r3, r2
 801b304:	ee07 3a10 	vmov	s14, r3
 801b308:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801b30c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801b310:	ee66 6a84 	vmul.f32	s13, s13, s8
 801b314:	ee27 7a04 	vmul.f32	s14, s14, s8
 801b318:	ee65 6a66 	vnmul.f32	s13, s10, s13
 801b31c:	eee5 6a87 	vfma.f32	s13, s11, s14
 801b320:	ee66 6a83 	vmul.f32	s13, s13, s6
 801b324:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 801b328:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801b32a:	694a      	ldr	r2, [r1, #20]
 801b32c:	1b13      	subs	r3, r2, r4
 801b32e:	ee07 3a10 	vmov	s14, r3
 801b332:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801b336:	680b      	ldr	r3, [r1, #0]
 801b338:	ee27 7a04 	vmul.f32	s14, s14, s8
 801b33c:	1b1b      	subs	r3, r3, r4
 801b33e:	ee25 5a47 	vnmul.f32	s10, s10, s14
 801b342:	ee07 3a10 	vmov	s14, r3
 801b346:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801b34a:	ee27 7a04 	vmul.f32	s14, s14, s8
 801b34e:	eea5 5a87 	vfma.f32	s10, s11, s14
 801b352:	edd0 5a08 	vldr	s11, [r0, #32]
 801b356:	ee25 5a06 	vmul.f32	s10, s10, s12
 801b35a:	ee31 1a65 	vsub.f32	s2, s2, s11
 801b35e:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 801b362:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801b364:	698b      	ldr	r3, [r1, #24]
 801b366:	1a9b      	subs	r3, r3, r2
 801b368:	ee07 3a10 	vmov	s14, r3
 801b36c:	684b      	ldr	r3, [r1, #4]
 801b36e:	1a9b      	subs	r3, r3, r2
 801b370:	ee01 3a90 	vmov	s3, r3
 801b374:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801b378:	ee72 5ae5 	vsub.f32	s11, s5, s11
 801b37c:	ee27 7a04 	vmul.f32	s14, s14, s8
 801b380:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 801b384:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 801b388:	ee61 1a84 	vmul.f32	s3, s3, s8
 801b38c:	eea1 7a21 	vfma.f32	s14, s2, s3
 801b390:	ee27 7a03 	vmul.f32	s14, s14, s6
 801b394:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 801b398:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801b39a:	694a      	ldr	r2, [r1, #20]
 801b39c:	1b13      	subs	r3, r2, r4
 801b39e:	ee03 3a10 	vmov	s6, r3
 801b3a2:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801b3a6:	680b      	ldr	r3, [r1, #0]
 801b3a8:	ee23 3a04 	vmul.f32	s6, s6, s8
 801b3ac:	1b1b      	subs	r3, r3, r4
 801b3ae:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 801b3b2:	ee03 3a10 	vmov	s6, r3
 801b3b6:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801b3ba:	ee23 4a04 	vmul.f32	s8, s6, s8
 801b3be:	eee1 5a04 	vfma.f32	s11, s2, s8
 801b3c2:	ee25 6a86 	vmul.f32	s12, s11, s12
 801b3c6:	ee62 5a67 	vnmul.f32	s11, s4, s15
 801b3ca:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 801b3ce:	eee3 5aa6 	vfma.f32	s11, s7, s13
 801b3d2:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 801b3d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b3da:	dd13      	ble.n	801b404 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 801b3dc:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801b3e0:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 801b3e4:	63c3      	str	r3, [r0, #60]	; 0x3c
 801b3e6:	eee3 7a87 	vfma.f32	s15, s7, s14
 801b3ea:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801b3ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b3f2:	dd15      	ble.n	801b420 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 801b3f4:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801b3f8:	6403      	str	r3, [r0, #64]	; 0x40
 801b3fa:	bd70      	pop	{r4, r5, r6, pc}
 801b3fc:	4623      	mov	r3, r4
 801b3fe:	e6fd      	b.n	801b1fc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 801b400:	462a      	mov	r2, r5
 801b402:	e706      	b.n	801b212 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 801b404:	d502      	bpl.n	801b40c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 801b406:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801b40a:	e7e9      	b.n	801b3e0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 801b40c:	ee22 2a64 	vnmul.f32	s4, s4, s9
 801b410:	eea3 2a85 	vfma.f32	s4, s7, s10
 801b414:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 801b418:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b41c:	dade      	bge.n	801b3dc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 801b41e:	e7f2      	b.n	801b406 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 801b420:	d502      	bpl.n	801b428 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 801b422:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801b426:	e7e7      	b.n	801b3f8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 801b428:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 801b42c:	eee3 4a86 	vfma.f32	s9, s7, s12
 801b430:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 801b434:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b438:	dadc      	bge.n	801b3f4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 801b43a:	e7f2      	b.n	801b422 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 801b43c:	3d800000 	.word	0x3d800000

0801b440 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 801b440:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801b444:	2714      	movs	r7, #20
 801b446:	435f      	muls	r7, r3
 801b448:	eb02 0c07 	add.w	ip, r2, r7
 801b44c:	f8dc 5004 	ldr.w	r5, [ip, #4]
 801b450:	f115 0e0f 	adds.w	lr, r5, #15
 801b454:	f100 80a2 	bmi.w	801b59c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 801b458:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 801b45c:	9c08      	ldr	r4, [sp, #32]
 801b45e:	f8c0 e014 	str.w	lr, [r0, #20]
 801b462:	2614      	movs	r6, #20
 801b464:	4366      	muls	r6, r4
 801b466:	eb02 0806 	add.w	r8, r2, r6
 801b46a:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801b46e:	f115 040f 	adds.w	r4, r5, #15
 801b472:	f100 809f 	bmi.w	801b5b4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 801b476:	1124      	asrs	r4, r4, #4
 801b478:	eba4 040e 	sub.w	r4, r4, lr
 801b47c:	6184      	str	r4, [r0, #24]
 801b47e:	2c00      	cmp	r4, #0
 801b480:	f000 808a 	beq.w	801b598 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 801b484:	f8dc 9004 	ldr.w	r9, [ip, #4]
 801b488:	f8d8 4004 	ldr.w	r4, [r8, #4]
 801b48c:	5995      	ldr	r5, [r2, r6]
 801b48e:	eba4 0809 	sub.w	r8, r4, r9
 801b492:	59d4      	ldr	r4, [r2, r7]
 801b494:	eba5 0a04 	sub.w	sl, r5, r4
 801b498:	ea4f 150a 	mov.w	r5, sl, lsl #4
 801b49c:	fb0e fe05 	mul.w	lr, lr, r5
 801b4a0:	fb0a ee19 	mls	lr, sl, r9, lr
 801b4a4:	fb08 e404 	mla	r4, r8, r4, lr
 801b4a8:	ea4f 1608 	mov.w	r6, r8, lsl #4
 801b4ac:	3c01      	subs	r4, #1
 801b4ae:	19a4      	adds	r4, r4, r6
 801b4b0:	f100 808c 	bmi.w	801b5cc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 801b4b4:	fb94 fef6 	sdiv	lr, r4, r6
 801b4b8:	f8c0 e000 	str.w	lr, [r0]
 801b4bc:	fb06 441e 	mls	r4, r6, lr, r4
 801b4c0:	6104      	str	r4, [r0, #16]
 801b4c2:	2d00      	cmp	r5, #0
 801b4c4:	f2c0 8095 	blt.w	801b5f2 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 801b4c8:	fb95 f4f6 	sdiv	r4, r5, r6
 801b4cc:	6044      	str	r4, [r0, #4]
 801b4ce:	fb06 5514 	mls	r5, r6, r4, r5
 801b4d2:	6085      	str	r5, [r0, #8]
 801b4d4:	60c6      	str	r6, [r0, #12]
 801b4d6:	f8dc 4004 	ldr.w	r4, [ip, #4]
 801b4da:	6945      	ldr	r5, [r0, #20]
 801b4dc:	59d2      	ldr	r2, [r2, r7]
 801b4de:	eddf 6a4d 	vldr	s13, [pc, #308]	; 801b614 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 801b4e2:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 801b4e6:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 801b4ea:	ee07 4a10 	vmov	s14, r4
 801b4ee:	6804      	ldr	r4, [r0, #0]
 801b4f0:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 801b4f4:	ee07 2a90 	vmov	s15, r2
 801b4f8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801b4fc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801b500:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801b504:	ee27 7a26 	vmul.f32	s14, s14, s13
 801b508:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801b50c:	edd3 6a00 	vldr	s13, [r3]
 801b510:	eee6 6a07 	vfma.f32	s13, s12, s14
 801b514:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 801b518:	eee6 6a27 	vfma.f32	s13, s12, s15
 801b51c:	edc0 6a07 	vstr	s13, [r0, #28]
 801b520:	edd0 6a01 	vldr	s13, [r0, #4]
 801b524:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 801b528:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 801b52c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801b530:	eea6 6aa5 	vfma.f32	s12, s13, s11
 801b534:	ed80 6a08 	vstr	s12, [r0, #32]
 801b538:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 801b53a:	6242      	str	r2, [r0, #36]	; 0x24
 801b53c:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 801b540:	ed93 6a03 	vldr	s12, [r3, #12]
 801b544:	eea5 6a87 	vfma.f32	s12, s11, s14
 801b548:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 801b54c:	eea5 6aa7 	vfma.f32	s12, s11, s15
 801b550:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 801b554:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 801b558:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 801b55c:	eea6 6aa5 	vfma.f32	s12, s13, s11
 801b560:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 801b564:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801b566:	6302      	str	r2, [r0, #48]	; 0x30
 801b568:	ed93 6a06 	vldr	s12, [r3, #24]
 801b56c:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 801b570:	eea5 6a87 	vfma.f32	s12, s11, s14
 801b574:	eeb0 7a46 	vmov.f32	s14, s12
 801b578:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 801b57c:	eea6 7a27 	vfma.f32	s14, s12, s15
 801b580:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 801b584:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 801b588:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 801b58c:	eee6 7a87 	vfma.f32	s15, s13, s14
 801b590:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 801b594:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 801b596:	63c3      	str	r3, [r0, #60]	; 0x3c
 801b598:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801b59c:	f1c5 0501 	rsb	r5, r5, #1
 801b5a0:	f015 050f 	ands.w	r5, r5, #15
 801b5a4:	bf18      	it	ne
 801b5a6:	2501      	movne	r5, #1
 801b5a8:	2410      	movs	r4, #16
 801b5aa:	fb9e fef4 	sdiv	lr, lr, r4
 801b5ae:	ebae 0e05 	sub.w	lr, lr, r5
 801b5b2:	e753      	b.n	801b45c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 801b5b4:	f1c5 0501 	rsb	r5, r5, #1
 801b5b8:	f015 050f 	ands.w	r5, r5, #15
 801b5bc:	bf18      	it	ne
 801b5be:	2501      	movne	r5, #1
 801b5c0:	f04f 0910 	mov.w	r9, #16
 801b5c4:	fb94 f4f9 	sdiv	r4, r4, r9
 801b5c8:	1b64      	subs	r4, r4, r5
 801b5ca:	e755      	b.n	801b478 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 801b5cc:	4264      	negs	r4, r4
 801b5ce:	fb94 fef6 	sdiv	lr, r4, r6
 801b5d2:	f1ce 0800 	rsb	r8, lr, #0
 801b5d6:	fb06 441e 	mls	r4, r6, lr, r4
 801b5da:	f8c0 8000 	str.w	r8, [r0]
 801b5de:	6104      	str	r4, [r0, #16]
 801b5e0:	2c00      	cmp	r4, #0
 801b5e2:	f43f af6e 	beq.w	801b4c2 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 801b5e6:	ea6f 0e0e 	mvn.w	lr, lr
 801b5ea:	f8c0 e000 	str.w	lr, [r0]
 801b5ee:	1b34      	subs	r4, r6, r4
 801b5f0:	e766      	b.n	801b4c0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 801b5f2:	426d      	negs	r5, r5
 801b5f4:	fb95 f4f6 	sdiv	r4, r5, r6
 801b5f8:	f1c4 0e00 	rsb	lr, r4, #0
 801b5fc:	fb06 5514 	mls	r5, r6, r4, r5
 801b600:	f8c0 e004 	str.w	lr, [r0, #4]
 801b604:	6085      	str	r5, [r0, #8]
 801b606:	2d00      	cmp	r5, #0
 801b608:	f43f af64 	beq.w	801b4d4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 801b60c:	43e4      	mvns	r4, r4
 801b60e:	6044      	str	r4, [r0, #4]
 801b610:	1b75      	subs	r5, r6, r5
 801b612:	e75e      	b.n	801b4d2 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 801b614:	3d800000 	.word	0x3d800000

0801b618 <_ZN8touchgfx7Unicode6strlenEPKt>:
 801b618:	4602      	mov	r2, r0
 801b61a:	b148      	cbz	r0, 801b630 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 801b61c:	2300      	movs	r3, #0
 801b61e:	b298      	uxth	r0, r3
 801b620:	3301      	adds	r3, #1
 801b622:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 801b626:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 801b62a:	2900      	cmp	r1, #0
 801b62c:	d1f7      	bne.n	801b61e <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 801b62e:	4770      	bx	lr
 801b630:	4770      	bx	lr

0801b632 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 801b632:	b530      	push	{r4, r5, lr}
 801b634:	4604      	mov	r4, r0
 801b636:	b159      	cbz	r1, 801b650 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 801b638:	b148      	cbz	r0, 801b64e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 801b63a:	2300      	movs	r3, #0
 801b63c:	b298      	uxth	r0, r3
 801b63e:	4282      	cmp	r2, r0
 801b640:	d905      	bls.n	801b64e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 801b642:	5ccd      	ldrb	r5, [r1, r3]
 801b644:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 801b648:	3301      	adds	r3, #1
 801b64a:	2d00      	cmp	r5, #0
 801b64c:	d1f6      	bne.n	801b63c <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 801b64e:	bd30      	pop	{r4, r5, pc}
 801b650:	4608      	mov	r0, r1
 801b652:	e7fc      	b.n	801b64e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

0801b654 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
 801b654:	b5f0      	push	{r4, r5, r6, r7, lr}
 801b656:	b08b      	sub	sp, #44	; 0x2c
 801b658:	468c      	mov	ip, r1
 801b65a:	2100      	movs	r1, #0
 801b65c:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 801b660:	4604      	mov	r4, r0
 801b662:	261f      	movs	r6, #31
 801b664:	af01      	add	r7, sp, #4
 801b666:	fb94 fef3 	sdiv	lr, r4, r3
 801b66a:	fb03 441e 	mls	r4, r3, lr, r4
 801b66e:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 801b672:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 801b676:	b2ec      	uxtb	r4, r5
 801b678:	2d09      	cmp	r5, #9
 801b67a:	bfd4      	ite	le
 801b67c:	3430      	addle	r4, #48	; 0x30
 801b67e:	3457      	addgt	r4, #87	; 0x57
 801b680:	b2e4      	uxtb	r4, r4
 801b682:	55bc      	strb	r4, [r7, r6]
 801b684:	4674      	mov	r4, lr
 801b686:	1e71      	subs	r1, r6, #1
 801b688:	b974      	cbnz	r4, 801b6a8 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
 801b68a:	2800      	cmp	r0, #0
 801b68c:	da05      	bge.n	801b69a <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
 801b68e:	ab0a      	add	r3, sp, #40	; 0x28
 801b690:	4419      	add	r1, r3
 801b692:	232d      	movs	r3, #45	; 0x2d
 801b694:	f801 3c24 	strb.w	r3, [r1, #-36]
 801b698:	1eb1      	subs	r1, r6, #2
 801b69a:	3101      	adds	r1, #1
 801b69c:	4439      	add	r1, r7
 801b69e:	4660      	mov	r0, ip
 801b6a0:	f7ff ffc7 	bl	801b632 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 801b6a4:	b00b      	add	sp, #44	; 0x2c
 801b6a6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801b6a8:	460e      	mov	r6, r1
 801b6aa:	e7dc      	b.n	801b666 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

0801b6ac <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 801b6ac:	b5f0      	push	{r4, r5, r6, r7, lr}
 801b6ae:	b08b      	sub	sp, #44	; 0x2c
 801b6b0:	468c      	mov	ip, r1
 801b6b2:	2100      	movs	r1, #0
 801b6b4:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 801b6b8:	ae01      	add	r6, sp, #4
 801b6ba:	211f      	movs	r1, #31
 801b6bc:	fbb0 f7f3 	udiv	r7, r0, r3
 801b6c0:	fb03 0517 	mls	r5, r3, r7, r0
 801b6c4:	b2ec      	uxtb	r4, r5
 801b6c6:	2d09      	cmp	r5, #9
 801b6c8:	bfd4      	ite	le
 801b6ca:	3430      	addle	r4, #48	; 0x30
 801b6cc:	3457      	addgt	r4, #87	; 0x57
 801b6ce:	b2e4      	uxtb	r4, r4
 801b6d0:	558c      	strb	r4, [r1, r6]
 801b6d2:	4638      	mov	r0, r7
 801b6d4:	1e4c      	subs	r4, r1, #1
 801b6d6:	b92f      	cbnz	r7, 801b6e4 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
 801b6d8:	4431      	add	r1, r6
 801b6da:	4660      	mov	r0, ip
 801b6dc:	f7ff ffa9 	bl	801b632 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 801b6e0:	b00b      	add	sp, #44	; 0x2c
 801b6e2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801b6e4:	4621      	mov	r1, r4
 801b6e6:	e7e9      	b.n	801b6bc <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

0801b6e8 <_ZN8touchgfx7Unicode4itoaElPtti>:
 801b6e8:	b410      	push	{r4}
 801b6ea:	b131      	cbz	r1, 801b6fa <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 801b6ec:	1e9c      	subs	r4, r3, #2
 801b6ee:	2c22      	cmp	r4, #34	; 0x22
 801b6f0:	d803      	bhi.n	801b6fa <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 801b6f2:	f85d 4b04 	ldr.w	r4, [sp], #4
 801b6f6:	f7ff bfad 	b.w	801b654 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 801b6fa:	f85d 4b04 	ldr.w	r4, [sp], #4
 801b6fe:	4770      	bx	lr

0801b700 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 801b700:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b704:	4691      	mov	r9, r2
 801b706:	b085      	sub	sp, #20
 801b708:	6802      	ldr	r2, [r0, #0]
 801b70a:	9201      	str	r2, [sp, #4]
 801b70c:	4688      	mov	r8, r1
 801b70e:	4683      	mov	fp, r0
 801b710:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 801b714:	9103      	str	r1, [sp, #12]
 801b716:	4610      	mov	r0, r2
 801b718:	461c      	mov	r4, r3
 801b71a:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 801b71e:	9302      	str	r3, [sp, #8]
 801b720:	f7ff ff7a 	bl	801b618 <_ZN8touchgfx7Unicode6strlenEPKt>
 801b724:	f1b8 0f00 	cmp.w	r8, #0
 801b728:	bf0c      	ite	eq
 801b72a:	4684      	moveq	ip, r0
 801b72c:	f100 0c01 	addne.w	ip, r0, #1
 801b730:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 801b734:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 801b738:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801b73a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801b73c:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 801b740:	9903      	ldr	r1, [sp, #12]
 801b742:	fa1f fc8c 	uxth.w	ip, ip
 801b746:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 801b74a:	d041      	beq.n	801b7d0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 801b74c:	d834      	bhi.n	801b7b8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 801b74e:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 801b752:	d059      	beq.n	801b808 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 801b754:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 801b758:	d03a      	beq.n	801b7d0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 801b75a:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 801b75e:	d034      	beq.n	801b7ca <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 801b760:	2400      	movs	r4, #0
 801b762:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 801b766:	3a01      	subs	r2, #1
 801b768:	b169      	cbz	r1, 801b786 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801b76a:	9911      	ldr	r1, [sp, #68]	; 0x44
 801b76c:	458c      	cmp	ip, r1
 801b76e:	da09      	bge.n	801b784 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 801b770:	eba1 010c 	sub.w	r1, r1, ip
 801b774:	b289      	uxth	r1, r1
 801b776:	b933      	cbnz	r3, 801b786 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801b778:	2e00      	cmp	r6, #0
 801b77a:	d051      	beq.n	801b820 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 801b77c:	2800      	cmp	r0, #0
 801b77e:	d04f      	beq.n	801b820 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 801b780:	440c      	add	r4, r1
 801b782:	b2a4      	uxth	r4, r4
 801b784:	2100      	movs	r1, #0
 801b786:	682b      	ldr	r3, [r5, #0]
 801b788:	4293      	cmp	r3, r2
 801b78a:	da07      	bge.n	801b79c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 801b78c:	f1b8 0f00 	cmp.w	r8, #0
 801b790:	d004      	beq.n	801b79c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 801b792:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 801b796:	682b      	ldr	r3, [r5, #0]
 801b798:	3301      	adds	r3, #1
 801b79a:	602b      	str	r3, [r5, #0]
 801b79c:	2730      	movs	r7, #48	; 0x30
 801b79e:	2c00      	cmp	r4, #0
 801b7a0:	d04e      	beq.n	801b840 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801b7a2:	682e      	ldr	r6, [r5, #0]
 801b7a4:	3c01      	subs	r4, #1
 801b7a6:	42b2      	cmp	r2, r6
 801b7a8:	b2a4      	uxth	r4, r4
 801b7aa:	dd49      	ble.n	801b840 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801b7ac:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 801b7b0:	682b      	ldr	r3, [r5, #0]
 801b7b2:	3301      	adds	r3, #1
 801b7b4:	602b      	str	r3, [r5, #0]
 801b7b6:	e7f2      	b.n	801b79e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 801b7b8:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 801b7bc:	d01d      	beq.n	801b7fa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 801b7be:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 801b7c2:	d002      	beq.n	801b7ca <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 801b7c4:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 801b7c8:	e7c9      	b.n	801b75e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 801b7ca:	4684      	mov	ip, r0
 801b7cc:	f04f 0800 	mov.w	r8, #0
 801b7d0:	2c00      	cmp	r4, #0
 801b7d2:	d0c6      	beq.n	801b762 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801b7d4:	b947      	cbnz	r7, 801b7e8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 801b7d6:	2801      	cmp	r0, #1
 801b7d8:	d106      	bne.n	801b7e8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 801b7da:	8814      	ldrh	r4, [r2, #0]
 801b7dc:	2c30      	cmp	r4, #48	; 0x30
 801b7de:	bf02      	ittt	eq
 801b7e0:	3202      	addeq	r2, #2
 801b7e2:	f8cb 2000 	streq.w	r2, [fp]
 801b7e6:	4638      	moveq	r0, r7
 801b7e8:	45bc      	cmp	ip, r7
 801b7ea:	da14      	bge.n	801b816 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 801b7ec:	b2bf      	uxth	r7, r7
 801b7ee:	eba7 040c 	sub.w	r4, r7, ip
 801b7f2:	b2a4      	uxth	r4, r4
 801b7f4:	46bc      	mov	ip, r7
 801b7f6:	2600      	movs	r6, #0
 801b7f8:	e7b3      	b.n	801b762 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801b7fa:	4684      	mov	ip, r0
 801b7fc:	b16c      	cbz	r4, 801b81a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 801b7fe:	42b8      	cmp	r0, r7
 801b800:	dd00      	ble.n	801b804 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 801b802:	b2b8      	uxth	r0, r7
 801b804:	2400      	movs	r4, #0
 801b806:	e003      	b.n	801b810 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 801b808:	f04f 0c01 	mov.w	ip, #1
 801b80c:	2400      	movs	r4, #0
 801b80e:	4660      	mov	r0, ip
 801b810:	4626      	mov	r6, r4
 801b812:	46a0      	mov	r8, r4
 801b814:	e7a5      	b.n	801b762 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801b816:	2400      	movs	r4, #0
 801b818:	e7ed      	b.n	801b7f6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 801b81a:	4626      	mov	r6, r4
 801b81c:	46a0      	mov	r8, r4
 801b81e:	e7a0      	b.n	801b762 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801b820:	2900      	cmp	r1, #0
 801b822:	d0b0      	beq.n	801b786 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801b824:	2720      	movs	r7, #32
 801b826:	682e      	ldr	r6, [r5, #0]
 801b828:	2900      	cmp	r1, #0
 801b82a:	d0ac      	beq.n	801b786 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801b82c:	3901      	subs	r1, #1
 801b82e:	4296      	cmp	r6, r2
 801b830:	b289      	uxth	r1, r1
 801b832:	daa7      	bge.n	801b784 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 801b834:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 801b838:	682b      	ldr	r3, [r5, #0]
 801b83a:	3301      	adds	r3, #1
 801b83c:	602b      	str	r3, [r5, #0]
 801b83e:	e7f2      	b.n	801b826 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 801b840:	b188      	cbz	r0, 801b866 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 801b842:	682b      	ldr	r3, [r5, #0]
 801b844:	3801      	subs	r0, #1
 801b846:	429a      	cmp	r2, r3
 801b848:	b280      	uxth	r0, r0
 801b84a:	dd0c      	ble.n	801b866 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 801b84c:	f8db 3000 	ldr.w	r3, [fp]
 801b850:	1c9c      	adds	r4, r3, #2
 801b852:	f8cb 4000 	str.w	r4, [fp]
 801b856:	881c      	ldrh	r4, [r3, #0]
 801b858:	682b      	ldr	r3, [r5, #0]
 801b85a:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 801b85e:	682b      	ldr	r3, [r5, #0]
 801b860:	3301      	adds	r3, #1
 801b862:	602b      	str	r3, [r5, #0]
 801b864:	e7ec      	b.n	801b840 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801b866:	2620      	movs	r6, #32
 801b868:	b151      	cbz	r1, 801b880 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 801b86a:	6828      	ldr	r0, [r5, #0]
 801b86c:	3901      	subs	r1, #1
 801b86e:	4282      	cmp	r2, r0
 801b870:	b289      	uxth	r1, r1
 801b872:	dd05      	ble.n	801b880 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 801b874:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 801b878:	682b      	ldr	r3, [r5, #0]
 801b87a:	3301      	adds	r3, #1
 801b87c:	602b      	str	r3, [r5, #0]
 801b87e:	e7f3      	b.n	801b868 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 801b880:	b005      	add	sp, #20
 801b882:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b886 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 801b886:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801b88a:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 801b88e:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 801b892:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 801b896:	2400      	movs	r4, #0
 801b898:	8014      	strh	r4, [r2, #0]
 801b89a:	701c      	strb	r4, [r3, #0]
 801b89c:	f888 4000 	strb.w	r4, [r8]
 801b8a0:	f88c 4000 	strb.w	r4, [ip]
 801b8a4:	f88e 4000 	strb.w	r4, [lr]
 801b8a8:	703c      	strb	r4, [r7, #0]
 801b8aa:	6804      	ldr	r4, [r0, #0]
 801b8ac:	b1a4      	cbz	r4, 801b8d8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 801b8ae:	8824      	ldrh	r4, [r4, #0]
 801b8b0:	f04f 0901 	mov.w	r9, #1
 801b8b4:	b314      	cbz	r4, 801b8fc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 801b8b6:	2c2b      	cmp	r4, #43	; 0x2b
 801b8b8:	d001      	beq.n	801b8be <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 801b8ba:	2c20      	cmp	r4, #32
 801b8bc:	d110      	bne.n	801b8e0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 801b8be:	8014      	strh	r4, [r2, #0]
 801b8c0:	6804      	ldr	r4, [r0, #0]
 801b8c2:	b10c      	cbz	r4, 801b8c8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 801b8c4:	3402      	adds	r4, #2
 801b8c6:	6004      	str	r4, [r0, #0]
 801b8c8:	680c      	ldr	r4, [r1, #0]
 801b8ca:	b10c      	cbz	r4, 801b8d0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 801b8cc:	3401      	adds	r4, #1
 801b8ce:	600c      	str	r4, [r1, #0]
 801b8d0:	6804      	ldr	r4, [r0, #0]
 801b8d2:	b17c      	cbz	r4, 801b8f4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 801b8d4:	8824      	ldrh	r4, [r4, #0]
 801b8d6:	e7ed      	b.n	801b8b4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 801b8d8:	680c      	ldr	r4, [r1, #0]
 801b8da:	b17c      	cbz	r4, 801b8fc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 801b8dc:	7824      	ldrb	r4, [r4, #0]
 801b8de:	e7e7      	b.n	801b8b0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 801b8e0:	2c2d      	cmp	r4, #45	; 0x2d
 801b8e2:	d102      	bne.n	801b8ea <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 801b8e4:	f883 9000 	strb.w	r9, [r3]
 801b8e8:	e7ea      	b.n	801b8c0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 801b8ea:	2c23      	cmp	r4, #35	; 0x23
 801b8ec:	d107      	bne.n	801b8fe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 801b8ee:	f888 9000 	strb.w	r9, [r8]
 801b8f2:	e7e5      	b.n	801b8c0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 801b8f4:	680c      	ldr	r4, [r1, #0]
 801b8f6:	b10c      	cbz	r4, 801b8fc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 801b8f8:	7824      	ldrb	r4, [r4, #0]
 801b8fa:	e7db      	b.n	801b8b4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 801b8fc:	2400      	movs	r4, #0
 801b8fe:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 801b902:	2b09      	cmp	r3, #9
 801b904:	d901      	bls.n	801b90a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 801b906:	2c2a      	cmp	r4, #42	; 0x2a
 801b908:	d122      	bne.n	801b950 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801b90a:	2301      	movs	r3, #1
 801b90c:	2c30      	cmp	r4, #48	; 0x30
 801b90e:	f88e 3000 	strb.w	r3, [lr]
 801b912:	d10d      	bne.n	801b930 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 801b914:	f88c 3000 	strb.w	r3, [ip]
 801b918:	6803      	ldr	r3, [r0, #0]
 801b91a:	b10b      	cbz	r3, 801b920 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 801b91c:	3302      	adds	r3, #2
 801b91e:	6003      	str	r3, [r0, #0]
 801b920:	680b      	ldr	r3, [r1, #0]
 801b922:	b10b      	cbz	r3, 801b928 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 801b924:	3301      	adds	r3, #1
 801b926:	600b      	str	r3, [r1, #0]
 801b928:	6803      	ldr	r3, [r0, #0]
 801b92a:	2b00      	cmp	r3, #0
 801b92c:	d02f      	beq.n	801b98e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 801b92e:	881c      	ldrh	r4, [r3, #0]
 801b930:	2c2a      	cmp	r4, #42	; 0x2a
 801b932:	d135      	bne.n	801b9a0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 801b934:	f04f 33ff 	mov.w	r3, #4294967295
 801b938:	6033      	str	r3, [r6, #0]
 801b93a:	6803      	ldr	r3, [r0, #0]
 801b93c:	b10b      	cbz	r3, 801b942 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 801b93e:	3302      	adds	r3, #2
 801b940:	6003      	str	r3, [r0, #0]
 801b942:	680b      	ldr	r3, [r1, #0]
 801b944:	b10b      	cbz	r3, 801b94a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 801b946:	3301      	adds	r3, #1
 801b948:	600b      	str	r3, [r1, #0]
 801b94a:	6803      	ldr	r3, [r0, #0]
 801b94c:	b31b      	cbz	r3, 801b996 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 801b94e:	881c      	ldrh	r4, [r3, #0]
 801b950:	2c2e      	cmp	r4, #46	; 0x2e
 801b952:	d11a      	bne.n	801b98a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801b954:	2301      	movs	r3, #1
 801b956:	703b      	strb	r3, [r7, #0]
 801b958:	6803      	ldr	r3, [r0, #0]
 801b95a:	b10b      	cbz	r3, 801b960 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 801b95c:	3302      	adds	r3, #2
 801b95e:	6003      	str	r3, [r0, #0]
 801b960:	680b      	ldr	r3, [r1, #0]
 801b962:	b10b      	cbz	r3, 801b968 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 801b964:	3301      	adds	r3, #1
 801b966:	600b      	str	r3, [r1, #0]
 801b968:	6803      	ldr	r3, [r0, #0]
 801b96a:	2b00      	cmp	r3, #0
 801b96c:	d036      	beq.n	801b9dc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 801b96e:	881b      	ldrh	r3, [r3, #0]
 801b970:	2b2a      	cmp	r3, #42	; 0x2a
 801b972:	d137      	bne.n	801b9e4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 801b974:	f04f 33ff 	mov.w	r3, #4294967295
 801b978:	602b      	str	r3, [r5, #0]
 801b97a:	6803      	ldr	r3, [r0, #0]
 801b97c:	b10b      	cbz	r3, 801b982 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 801b97e:	3302      	adds	r3, #2
 801b980:	6003      	str	r3, [r0, #0]
 801b982:	680b      	ldr	r3, [r1, #0]
 801b984:	b10b      	cbz	r3, 801b98a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801b986:	3301      	adds	r3, #1
 801b988:	600b      	str	r3, [r1, #0]
 801b98a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801b98e:	680c      	ldr	r4, [r1, #0]
 801b990:	b134      	cbz	r4, 801b9a0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 801b992:	7824      	ldrb	r4, [r4, #0]
 801b994:	e7cc      	b.n	801b930 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 801b996:	680b      	ldr	r3, [r1, #0]
 801b998:	2b00      	cmp	r3, #0
 801b99a:	d0f6      	beq.n	801b98a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801b99c:	781c      	ldrb	r4, [r3, #0]
 801b99e:	e7d7      	b.n	801b950 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801b9a0:	2300      	movs	r3, #0
 801b9a2:	6033      	str	r3, [r6, #0]
 801b9a4:	220a      	movs	r2, #10
 801b9a6:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 801b9aa:	fa1f f38c 	uxth.w	r3, ip
 801b9ae:	2b09      	cmp	r3, #9
 801b9b0:	d8ce      	bhi.n	801b950 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801b9b2:	6833      	ldr	r3, [r6, #0]
 801b9b4:	fb02 c303 	mla	r3, r2, r3, ip
 801b9b8:	6033      	str	r3, [r6, #0]
 801b9ba:	6803      	ldr	r3, [r0, #0]
 801b9bc:	b10b      	cbz	r3, 801b9c2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 801b9be:	3302      	adds	r3, #2
 801b9c0:	6003      	str	r3, [r0, #0]
 801b9c2:	680b      	ldr	r3, [r1, #0]
 801b9c4:	b10b      	cbz	r3, 801b9ca <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 801b9c6:	3301      	adds	r3, #1
 801b9c8:	600b      	str	r3, [r1, #0]
 801b9ca:	6803      	ldr	r3, [r0, #0]
 801b9cc:	b10b      	cbz	r3, 801b9d2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 801b9ce:	881c      	ldrh	r4, [r3, #0]
 801b9d0:	e7e9      	b.n	801b9a6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 801b9d2:	680c      	ldr	r4, [r1, #0]
 801b9d4:	2c00      	cmp	r4, #0
 801b9d6:	d0e6      	beq.n	801b9a6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 801b9d8:	7824      	ldrb	r4, [r4, #0]
 801b9da:	e7e4      	b.n	801b9a6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 801b9dc:	680b      	ldr	r3, [r1, #0]
 801b9de:	b10b      	cbz	r3, 801b9e4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 801b9e0:	781b      	ldrb	r3, [r3, #0]
 801b9e2:	e7c5      	b.n	801b970 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 801b9e4:	2200      	movs	r2, #0
 801b9e6:	602a      	str	r2, [r5, #0]
 801b9e8:	240a      	movs	r4, #10
 801b9ea:	3b30      	subs	r3, #48	; 0x30
 801b9ec:	b29e      	uxth	r6, r3
 801b9ee:	2e09      	cmp	r6, #9
 801b9f0:	682a      	ldr	r2, [r5, #0]
 801b9f2:	d813      	bhi.n	801ba1c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 801b9f4:	fb04 3302 	mla	r3, r4, r2, r3
 801b9f8:	602b      	str	r3, [r5, #0]
 801b9fa:	6803      	ldr	r3, [r0, #0]
 801b9fc:	b10b      	cbz	r3, 801ba02 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 801b9fe:	3302      	adds	r3, #2
 801ba00:	6003      	str	r3, [r0, #0]
 801ba02:	680b      	ldr	r3, [r1, #0]
 801ba04:	b10b      	cbz	r3, 801ba0a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 801ba06:	3301      	adds	r3, #1
 801ba08:	600b      	str	r3, [r1, #0]
 801ba0a:	6803      	ldr	r3, [r0, #0]
 801ba0c:	b10b      	cbz	r3, 801ba12 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 801ba0e:	881b      	ldrh	r3, [r3, #0]
 801ba10:	e7eb      	b.n	801b9ea <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 801ba12:	680b      	ldr	r3, [r1, #0]
 801ba14:	2b00      	cmp	r3, #0
 801ba16:	d0e8      	beq.n	801b9ea <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 801ba18:	781b      	ldrb	r3, [r3, #0]
 801ba1a:	e7e6      	b.n	801b9ea <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 801ba1c:	2a06      	cmp	r2, #6
 801ba1e:	bfa8      	it	ge
 801ba20:	2206      	movge	r2, #6
 801ba22:	602a      	str	r2, [r5, #0]
 801ba24:	e7b1      	b.n	801b98a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

0801ba26 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 801ba26:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ba2a:	b0a3      	sub	sp, #140	; 0x8c
 801ba2c:	2600      	movs	r6, #0
 801ba2e:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 801ba32:	4607      	mov	r7, r0
 801ba34:	4688      	mov	r8, r1
 801ba36:	e9cd 3208 	strd	r3, r2, [sp, #32]
 801ba3a:	4631      	mov	r1, r6
 801ba3c:	2242      	movs	r2, #66	; 0x42
 801ba3e:	4648      	mov	r0, r9
 801ba40:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 801ba42:	960d      	str	r6, [sp, #52]	; 0x34
 801ba44:	f012 f989 	bl	802dd5a <memset>
 801ba48:	b15f      	cbz	r7, 801ba62 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 801ba4a:	f108 3aff 	add.w	sl, r8, #4294967295
 801ba4e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801ba50:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ba52:	b152      	cbz	r2, 801ba6a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 801ba54:	8812      	ldrh	r2, [r2, #0]
 801ba56:	b10a      	cbz	r2, 801ba5c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 801ba58:	459a      	cmp	sl, r3
 801ba5a:	dc2e      	bgt.n	801baba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 801ba5c:	2200      	movs	r2, #0
 801ba5e:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 801ba62:	4638      	mov	r0, r7
 801ba64:	b023      	add	sp, #140	; 0x8c
 801ba66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ba6a:	9a08      	ldr	r2, [sp, #32]
 801ba6c:	2a00      	cmp	r2, #0
 801ba6e:	d0f5      	beq.n	801ba5c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 801ba70:	7812      	ldrb	r2, [r2, #0]
 801ba72:	e7f0      	b.n	801ba56 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 801ba74:	2d00      	cmp	r5, #0
 801ba76:	d0ea      	beq.n	801ba4e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801ba78:	782a      	ldrb	r2, [r5, #0]
 801ba7a:	b142      	cbz	r2, 801ba8e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 801ba7c:	2a25      	cmp	r2, #37	; 0x25
 801ba7e:	d001      	beq.n	801ba84 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 801ba80:	459a      	cmp	sl, r3
 801ba82:	dc08      	bgt.n	801ba96 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 801ba84:	f1bb 0f00 	cmp.w	fp, #0
 801ba88:	d121      	bne.n	801bace <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 801ba8a:	2d00      	cmp	r5, #0
 801ba8c:	d0df      	beq.n	801ba4e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801ba8e:	782a      	ldrb	r2, [r5, #0]
 801ba90:	f04f 0b00 	mov.w	fp, #0
 801ba94:	e01d      	b.n	801bad2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 801ba96:	f1bb 0f00 	cmp.w	fp, #0
 801ba9a:	d078      	beq.n	801bb8e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 801ba9c:	f8bb 2000 	ldrh.w	r2, [fp]
 801baa0:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 801baa4:	f1bb 0f00 	cmp.w	fp, #0
 801baa8:	d002      	beq.n	801bab0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 801baaa:	f10b 0202 	add.w	r2, fp, #2
 801baae:	9209      	str	r2, [sp, #36]	; 0x24
 801bab0:	b10d      	cbz	r5, 801bab6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 801bab2:	3501      	adds	r5, #1
 801bab4:	9508      	str	r5, [sp, #32]
 801bab6:	3301      	adds	r3, #1
 801bab8:	930d      	str	r3, [sp, #52]	; 0x34
 801baba:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 801babe:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801bac0:	f1bb 0f00 	cmp.w	fp, #0
 801bac4:	d0d6      	beq.n	801ba74 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 801bac6:	f8bb 2000 	ldrh.w	r2, [fp]
 801baca:	2a00      	cmp	r2, #0
 801bacc:	d1d6      	bne.n	801ba7c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 801bace:	f8bb 2000 	ldrh.w	r2, [fp]
 801bad2:	2a00      	cmp	r2, #0
 801bad4:	d0bb      	beq.n	801ba4e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801bad6:	459a      	cmp	sl, r3
 801bad8:	ddb9      	ble.n	801ba4e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801bada:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 801bade:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 801bae2:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 801bae6:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 801baea:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 801baee:	960e      	str	r6, [sp, #56]	; 0x38
 801baf0:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 801baf4:	960f      	str	r6, [sp, #60]	; 0x3c
 801baf6:	f1bb 0f00 	cmp.w	fp, #0
 801bafa:	d002      	beq.n	801bb02 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 801bafc:	f10b 0302 	add.w	r3, fp, #2
 801bb00:	9309      	str	r3, [sp, #36]	; 0x24
 801bb02:	b10d      	cbz	r5, 801bb08 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 801bb04:	1c6b      	adds	r3, r5, #1
 801bb06:	9308      	str	r3, [sp, #32]
 801bb08:	ab0f      	add	r3, sp, #60	; 0x3c
 801bb0a:	9305      	str	r3, [sp, #20]
 801bb0c:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 801bb10:	9304      	str	r3, [sp, #16]
 801bb12:	ab0e      	add	r3, sp, #56	; 0x38
 801bb14:	9303      	str	r3, [sp, #12]
 801bb16:	ab0c      	add	r3, sp, #48	; 0x30
 801bb18:	9302      	str	r3, [sp, #8]
 801bb1a:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 801bb1e:	9301      	str	r3, [sp, #4]
 801bb20:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 801bb24:	9300      	str	r3, [sp, #0]
 801bb26:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 801bb2a:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 801bb2e:	a908      	add	r1, sp, #32
 801bb30:	a809      	add	r0, sp, #36	; 0x24
 801bb32:	f7ff fea8 	bl	801b886 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 801bb36:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801bb38:	2b00      	cmp	r3, #0
 801bb3a:	bfbe      	ittt	lt
 801bb3c:	6823      	ldrlt	r3, [r4, #0]
 801bb3e:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 801bb42:	930e      	strlt	r3, [sp, #56]	; 0x38
 801bb44:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801bb46:	bfb8      	it	lt
 801bb48:	3404      	addlt	r4, #4
 801bb4a:	2b00      	cmp	r3, #0
 801bb4c:	bfb8      	it	lt
 801bb4e:	6823      	ldrlt	r3, [r4, #0]
 801bb50:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801bb54:	bfbe      	ittt	lt
 801bb56:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 801bb5a:	930f      	strlt	r3, [sp, #60]	; 0x3c
 801bb5c:	3404      	addlt	r4, #4
 801bb5e:	b1d9      	cbz	r1, 801bb98 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 801bb60:	880b      	ldrh	r3, [r1, #0]
 801bb62:	2b69      	cmp	r3, #105	; 0x69
 801bb64:	d01f      	beq.n	801bba6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801bb66:	d82f      	bhi.n	801bbc8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 801bb68:	2b58      	cmp	r3, #88	; 0x58
 801bb6a:	d01c      	beq.n	801bba6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801bb6c:	d818      	bhi.n	801bba0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 801bb6e:	2b25      	cmp	r3, #37	; 0x25
 801bb70:	d034      	beq.n	801bbdc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 801bb72:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 801bb76:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801bb78:	f1bb 0f00 	cmp.w	fp, #0
 801bb7c:	f000 80b8 	beq.w	801bcf0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 801bb80:	f8bb 5000 	ldrh.w	r5, [fp]
 801bb84:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 801bb88:	3301      	adds	r3, #1
 801bb8a:	930d      	str	r3, [sp, #52]	; 0x34
 801bb8c:	e029      	b.n	801bbe2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 801bb8e:	b10d      	cbz	r5, 801bb94 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 801bb90:	782a      	ldrb	r2, [r5, #0]
 801bb92:	e785      	b.n	801baa0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 801bb94:	462a      	mov	r2, r5
 801bb96:	e783      	b.n	801baa0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 801bb98:	2a00      	cmp	r2, #0
 801bb9a:	d0ea      	beq.n	801bb72 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801bb9c:	7813      	ldrb	r3, [r2, #0]
 801bb9e:	e7e0      	b.n	801bb62 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 801bba0:	3b63      	subs	r3, #99	; 0x63
 801bba2:	2b01      	cmp	r3, #1
 801bba4:	d8e5      	bhi.n	801bb72 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801bba6:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 801bbaa:	b329      	cbz	r1, 801bbf8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 801bbac:	880b      	ldrh	r3, [r1, #0]
 801bbae:	2b69      	cmp	r3, #105	; 0x69
 801bbb0:	d063      	beq.n	801bc7a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 801bbb2:	d825      	bhi.n	801bc00 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 801bbb4:	2b63      	cmp	r3, #99	; 0x63
 801bbb6:	d038      	beq.n	801bc2a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 801bbb8:	2b64      	cmp	r3, #100	; 0x64
 801bbba:	d05e      	beq.n	801bc7a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 801bbbc:	2b58      	cmp	r3, #88	; 0x58
 801bbbe:	d07b      	beq.n	801bcb8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 801bbc0:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 801bbc4:	4625      	mov	r5, r4
 801bbc6:	e036      	b.n	801bc36 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801bbc8:	2b73      	cmp	r3, #115	; 0x73
 801bbca:	d0ec      	beq.n	801bba6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801bbcc:	d802      	bhi.n	801bbd4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 801bbce:	2b6f      	cmp	r3, #111	; 0x6f
 801bbd0:	d1cf      	bne.n	801bb72 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801bbd2:	e7e8      	b.n	801bba6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801bbd4:	2b75      	cmp	r3, #117	; 0x75
 801bbd6:	d0e6      	beq.n	801bba6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801bbd8:	2b78      	cmp	r3, #120	; 0x78
 801bbda:	e7f9      	b.n	801bbd0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 801bbdc:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801bbde:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 801bbe2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801bbe4:	b10b      	cbz	r3, 801bbea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 801bbe6:	3302      	adds	r3, #2
 801bbe8:	9309      	str	r3, [sp, #36]	; 0x24
 801bbea:	9b08      	ldr	r3, [sp, #32]
 801bbec:	2b00      	cmp	r3, #0
 801bbee:	f43f af2e 	beq.w	801ba4e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801bbf2:	3301      	adds	r3, #1
 801bbf4:	9308      	str	r3, [sp, #32]
 801bbf6:	e72a      	b.n	801ba4e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801bbf8:	2a00      	cmp	r2, #0
 801bbfa:	d0e1      	beq.n	801bbc0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801bbfc:	7813      	ldrb	r3, [r2, #0]
 801bbfe:	e7d6      	b.n	801bbae <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 801bc00:	2b73      	cmp	r3, #115	; 0x73
 801bc02:	d036      	beq.n	801bc72 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 801bc04:	d807      	bhi.n	801bc16 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 801bc06:	2b6f      	cmp	r3, #111	; 0x6f
 801bc08:	d1da      	bne.n	801bbc0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801bc0a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801bc0c:	1d25      	adds	r5, r4, #4
 801bc0e:	eba8 0202 	sub.w	r2, r8, r2
 801bc12:	2308      	movs	r3, #8
 801bc14:	e04a      	b.n	801bcac <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 801bc16:	2b75      	cmp	r3, #117	; 0x75
 801bc18:	d043      	beq.n	801bca2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 801bc1a:	2b78      	cmp	r3, #120	; 0x78
 801bc1c:	d1d0      	bne.n	801bbc0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801bc1e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801bc20:	1d25      	adds	r5, r4, #4
 801bc22:	eba8 0202 	sub.w	r2, r8, r2
 801bc26:	2310      	movs	r3, #16
 801bc28:	e040      	b.n	801bcac <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 801bc2a:	6823      	ldr	r3, [r4, #0]
 801bc2c:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 801bc30:	1d25      	adds	r5, r4, #4
 801bc32:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 801bc36:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801bc38:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 801bc3c:	2b00      	cmp	r3, #0
 801bc3e:	d052      	beq.n	801bce6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 801bc40:	881a      	ldrh	r2, [r3, #0]
 801bc42:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 801bc46:	a80d      	add	r0, sp, #52	; 0x34
 801bc48:	9005      	str	r0, [sp, #20]
 801bc4a:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 801bc4e:	9004      	str	r0, [sp, #16]
 801bc50:	980e      	ldr	r0, [sp, #56]	; 0x38
 801bc52:	9003      	str	r0, [sp, #12]
 801bc54:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 801bc58:	9002      	str	r0, [sp, #8]
 801bc5a:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801bc5c:	9001      	str	r0, [sp, #4]
 801bc5e:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 801bc62:	9000      	str	r0, [sp, #0]
 801bc64:	e9cd 8706 	strd	r8, r7, [sp, #24]
 801bc68:	a810      	add	r0, sp, #64	; 0x40
 801bc6a:	f7ff fd49 	bl	801b700 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 801bc6e:	462c      	mov	r4, r5
 801bc70:	e7b7      	b.n	801bbe2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 801bc72:	6823      	ldr	r3, [r4, #0]
 801bc74:	1d25      	adds	r5, r4, #4
 801bc76:	9310      	str	r3, [sp, #64]	; 0x40
 801bc78:	e7dd      	b.n	801bc36 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801bc7a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801bc7c:	6820      	ldr	r0, [r4, #0]
 801bc7e:	eba8 0202 	sub.w	r2, r8, r2
 801bc82:	230a      	movs	r3, #10
 801bc84:	b292      	uxth	r2, r2
 801bc86:	4649      	mov	r1, r9
 801bc88:	f7ff fce4 	bl	801b654 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 801bc8c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 801bc90:	2b2d      	cmp	r3, #45	; 0x2d
 801bc92:	f104 0504 	add.w	r5, r4, #4
 801bc96:	d1ce      	bne.n	801bc36 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801bc98:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801bc9c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801bc9e:	3302      	adds	r3, #2
 801bca0:	e7e9      	b.n	801bc76 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 801bca2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801bca4:	1d25      	adds	r5, r4, #4
 801bca6:	eba8 0202 	sub.w	r2, r8, r2
 801bcaa:	230a      	movs	r3, #10
 801bcac:	b292      	uxth	r2, r2
 801bcae:	4649      	mov	r1, r9
 801bcb0:	6820      	ldr	r0, [r4, #0]
 801bcb2:	f7ff fcfb 	bl	801b6ac <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 801bcb6:	e7be      	b.n	801bc36 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801bcb8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801bcba:	6820      	ldr	r0, [r4, #0]
 801bcbc:	eba8 0202 	sub.w	r2, r8, r2
 801bcc0:	b292      	uxth	r2, r2
 801bcc2:	2310      	movs	r3, #16
 801bcc4:	4649      	mov	r1, r9
 801bcc6:	f7ff fcf1 	bl	801b6ac <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 801bcca:	1d25      	adds	r5, r4, #4
 801bccc:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 801bcd0:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 801bcd4:	2b00      	cmp	r3, #0
 801bcd6:	d0ae      	beq.n	801bc36 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801bcd8:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 801bcdc:	2919      	cmp	r1, #25
 801bcde:	d8f7      	bhi.n	801bcd0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 801bce0:	3b20      	subs	r3, #32
 801bce2:	8013      	strh	r3, [r2, #0]
 801bce4:	e7f4      	b.n	801bcd0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 801bce6:	9a08      	ldr	r2, [sp, #32]
 801bce8:	2a00      	cmp	r2, #0
 801bcea:	d0aa      	beq.n	801bc42 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 801bcec:	7812      	ldrb	r2, [r2, #0]
 801bcee:	e7a8      	b.n	801bc42 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 801bcf0:	2d00      	cmp	r5, #0
 801bcf2:	f43f af47 	beq.w	801bb84 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 801bcf6:	782d      	ldrb	r5, [r5, #0]
 801bcf8:	e744      	b.n	801bb84 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

0801bcfa <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 801bcfa:	b507      	push	{r0, r1, r2, lr}
 801bcfc:	9300      	str	r3, [sp, #0]
 801bcfe:	4613      	mov	r3, r2
 801bd00:	2200      	movs	r2, #0
 801bd02:	f7ff fe90 	bl	801ba26 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 801bd06:	b003      	add	sp, #12
 801bd08:	f85d fb04 	ldr.w	pc, [sp], #4

0801bd0c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 801bd0c:	b40c      	push	{r2, r3}
 801bd0e:	b507      	push	{r0, r1, r2, lr}
 801bd10:	ab04      	add	r3, sp, #16
 801bd12:	f853 2b04 	ldr.w	r2, [r3], #4
 801bd16:	9301      	str	r3, [sp, #4]
 801bd18:	f7ff ffef 	bl	801bcfa <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 801bd1c:	b003      	add	sp, #12
 801bd1e:	f85d eb04 	ldr.w	lr, [sp], #4
 801bd22:	b002      	add	sp, #8
 801bd24:	4770      	bx	lr
	...

0801bd28 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>:
 801bd28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bd2c:	b0c5      	sub	sp, #276	; 0x114
 801bd2e:	2400      	movs	r4, #0
 801bd30:	af11      	add	r7, sp, #68	; 0x44
 801bd32:	4606      	mov	r6, r0
 801bd34:	468a      	mov	sl, r1
 801bd36:	e9cd 3208 	strd	r3, r2, [sp, #32]
 801bd3a:	4621      	mov	r1, r4
 801bd3c:	22c8      	movs	r2, #200	; 0xc8
 801bd3e:	4638      	mov	r0, r7
 801bd40:	f8dd b138 	ldr.w	fp, [sp, #312]	; 0x138
 801bd44:	940d      	str	r4, [sp, #52]	; 0x34
 801bd46:	f012 f808 	bl	802dd5a <memset>
 801bd4a:	b16e      	cbz	r6, 801bd68 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x40>
 801bd4c:	ed9f 5aa8 	vldr	s10, [pc, #672]	; 801bff0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c8>
 801bd50:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801bd52:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801bd54:	b162      	cbz	r2, 801bd70 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x48>
 801bd56:	8812      	ldrh	r2, [r2, #0]
 801bd58:	b11a      	cbz	r2, 801bd62 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 801bd5a:	f10a 31ff 	add.w	r1, sl, #4294967295
 801bd5e:	4299      	cmp	r1, r3
 801bd60:	dc2e      	bgt.n	801bdc0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x98>
 801bd62:	2200      	movs	r2, #0
 801bd64:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 801bd68:	4630      	mov	r0, r6
 801bd6a:	b045      	add	sp, #276	; 0x114
 801bd6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bd70:	9a08      	ldr	r2, [sp, #32]
 801bd72:	2a00      	cmp	r2, #0
 801bd74:	d0f5      	beq.n	801bd62 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 801bd76:	7812      	ldrb	r2, [r2, #0]
 801bd78:	e7ee      	b.n	801bd58 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x30>
 801bd7a:	2d00      	cmp	r5, #0
 801bd7c:	d0e8      	beq.n	801bd50 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801bd7e:	782a      	ldrb	r2, [r5, #0]
 801bd80:	b142      	cbz	r2, 801bd94 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x6c>
 801bd82:	2a25      	cmp	r2, #37	; 0x25
 801bd84:	d001      	beq.n	801bd8a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x62>
 801bd86:	4299      	cmp	r1, r3
 801bd88:	dc08      	bgt.n	801bd9c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x74>
 801bd8a:	f1b8 0f00 	cmp.w	r8, #0
 801bd8e:	d121      	bne.n	801bdd4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xac>
 801bd90:	2d00      	cmp	r5, #0
 801bd92:	d0dd      	beq.n	801bd50 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801bd94:	782a      	ldrb	r2, [r5, #0]
 801bd96:	f04f 0800 	mov.w	r8, #0
 801bd9a:	e01d      	b.n	801bdd8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xb0>
 801bd9c:	f1b8 0f00 	cmp.w	r8, #0
 801bda0:	d07f      	beq.n	801bea2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x17a>
 801bda2:	f8b8 2000 	ldrh.w	r2, [r8]
 801bda6:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 801bdaa:	f1b8 0f00 	cmp.w	r8, #0
 801bdae:	d002      	beq.n	801bdb6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x8e>
 801bdb0:	f108 0202 	add.w	r2, r8, #2
 801bdb4:	9209      	str	r2, [sp, #36]	; 0x24
 801bdb6:	b10d      	cbz	r5, 801bdbc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x94>
 801bdb8:	3501      	adds	r5, #1
 801bdba:	9508      	str	r5, [sp, #32]
 801bdbc:	3301      	adds	r3, #1
 801bdbe:	930d      	str	r3, [sp, #52]	; 0x34
 801bdc0:	e9dd 5808 	ldrd	r5, r8, [sp, #32]
 801bdc4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801bdc6:	f1b8 0f00 	cmp.w	r8, #0
 801bdca:	d0d6      	beq.n	801bd7a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x52>
 801bdcc:	f8b8 2000 	ldrh.w	r2, [r8]
 801bdd0:	2a00      	cmp	r2, #0
 801bdd2:	d1d6      	bne.n	801bd82 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x5a>
 801bdd4:	f8b8 2000 	ldrh.w	r2, [r8]
 801bdd8:	2a00      	cmp	r2, #0
 801bdda:	d0b9      	beq.n	801bd50 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801bddc:	4299      	cmp	r1, r3
 801bdde:	ddb7      	ble.n	801bd50 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801bde0:	2300      	movs	r3, #0
 801bde2:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801bde6:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
 801bdea:	f88d 302e 	strb.w	r3, [sp, #46]	; 0x2e
 801bdee:	f88d 302f 	strb.w	r3, [sp, #47]	; 0x2f
 801bdf2:	f88d 3030 	strb.w	r3, [sp, #48]	; 0x30
 801bdf6:	930e      	str	r3, [sp, #56]	; 0x38
 801bdf8:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
 801bdfc:	930f      	str	r3, [sp, #60]	; 0x3c
 801bdfe:	f1b8 0f00 	cmp.w	r8, #0
 801be02:	d002      	beq.n	801be0a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe2>
 801be04:	f108 0302 	add.w	r3, r8, #2
 801be08:	9309      	str	r3, [sp, #36]	; 0x24
 801be0a:	b10d      	cbz	r5, 801be10 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe8>
 801be0c:	1c6b      	adds	r3, r5, #1
 801be0e:	9308      	str	r3, [sp, #32]
 801be10:	ab0f      	add	r3, sp, #60	; 0x3c
 801be12:	9305      	str	r3, [sp, #20]
 801be14:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 801be18:	9304      	str	r3, [sp, #16]
 801be1a:	ab0e      	add	r3, sp, #56	; 0x38
 801be1c:	9303      	str	r3, [sp, #12]
 801be1e:	ab0c      	add	r3, sp, #48	; 0x30
 801be20:	9302      	str	r3, [sp, #8]
 801be22:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 801be26:	9301      	str	r3, [sp, #4]
 801be28:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 801be2c:	9300      	str	r3, [sp, #0]
 801be2e:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 801be32:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 801be36:	a908      	add	r1, sp, #32
 801be38:	a809      	add	r0, sp, #36	; 0x24
 801be3a:	f7ff fd24 	bl	801b886 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 801be3e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801be40:	2b00      	cmp	r3, #0
 801be42:	da0b      	bge.n	801be5c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x134>
 801be44:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 801be48:	edd3 7a00 	vldr	s15, [r3]
 801be4c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801be50:	3401      	adds	r4, #1
 801be52:	ee17 3a90 	vmov	r3, s15
 801be56:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801be5a:	930e      	str	r3, [sp, #56]	; 0x38
 801be5c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801be5e:	2b00      	cmp	r3, #0
 801be60:	da0b      	bge.n	801be7a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x152>
 801be62:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 801be66:	edd3 7a00 	vldr	s15, [r3]
 801be6a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801be6e:	3401      	adds	r4, #1
 801be70:	ee17 3a90 	vmov	r3, s15
 801be74:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801be78:	930f      	str	r3, [sp, #60]	; 0x3c
 801be7a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801be7c:	b1b3      	cbz	r3, 801beac <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x184>
 801be7e:	881a      	ldrh	r2, [r3, #0]
 801be80:	2a25      	cmp	r2, #37	; 0x25
 801be82:	d018      	beq.n	801beb6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x18e>
 801be84:	2a66      	cmp	r2, #102	; 0x66
 801be86:	d01c      	beq.n	801bec2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x19a>
 801be88:	e9cd 5808 	strd	r5, r8, [sp, #32]
 801be8c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801be8e:	f1b8 0f00 	cmp.w	r8, #0
 801be92:	f000 8121 	beq.w	801c0d8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3b0>
 801be96:	f8b8 5000 	ldrh.w	r5, [r8]
 801be9a:	f826 5013 	strh.w	r5, [r6, r3, lsl #1]
 801be9e:	3301      	adds	r3, #1
 801bea0:	e00d      	b.n	801bebe <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x196>
 801bea2:	b10d      	cbz	r5, 801bea8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x180>
 801bea4:	782a      	ldrb	r2, [r5, #0]
 801bea6:	e77e      	b.n	801bda6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 801bea8:	462a      	mov	r2, r5
 801beaa:	e77c      	b.n	801bda6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 801beac:	9b08      	ldr	r3, [sp, #32]
 801beae:	2b00      	cmp	r3, #0
 801beb0:	d0ea      	beq.n	801be88 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x160>
 801beb2:	781a      	ldrb	r2, [r3, #0]
 801beb4:	e7e4      	b.n	801be80 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x158>
 801beb6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801beb8:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 801bebc:	3302      	adds	r3, #2
 801bebe:	930d      	str	r3, [sp, #52]	; 0x34
 801bec0:	e041      	b.n	801bf46 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x21e>
 801bec2:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 801bec6:	edd3 7a00 	vldr	s15, [r3]
 801beca:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 801bece:	9710      	str	r7, [sp, #64]	; 0x40
 801bed0:	3401      	adds	r4, #1
 801bed2:	b923      	cbnz	r3, 801bede <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1b6>
 801bed4:	2301      	movs	r3, #1
 801bed6:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
 801beda:	2306      	movs	r3, #6
 801bedc:	930f      	str	r3, [sp, #60]	; 0x3c
 801bede:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801bee2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bee6:	bf48      	it	mi
 801bee8:	eef1 7a67 	vnegmi.f32	s15, s15
 801beec:	eeb0 7ae7 	vabs.f32	s14, s15
 801bef0:	bf48      	it	mi
 801bef2:	232d      	movmi	r3, #45	; 0x2d
 801bef4:	eeb4 7a45 	vcmp.f32	s14, s10
 801bef8:	bf48      	it	mi
 801befa:	f8ad 3032 	strhmi.w	r3, [sp, #50]	; 0x32
 801befe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bf02:	dd2b      	ble.n	801bf5c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x234>
 801bf04:	4b3b      	ldr	r3, [pc, #236]	; (801bff4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2cc>)
 801bf06:	9311      	str	r3, [sp, #68]	; 0x44
 801bf08:	2366      	movs	r3, #102	; 0x66
 801bf0a:	9312      	str	r3, [sp, #72]	; 0x48
 801bf0c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801bf0e:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 801bf12:	2b00      	cmp	r3, #0
 801bf14:	f000 80da 	beq.w	801c0cc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a4>
 801bf18:	881a      	ldrh	r2, [r3, #0]
 801bf1a:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 801bf1e:	a80d      	add	r0, sp, #52	; 0x34
 801bf20:	9005      	str	r0, [sp, #20]
 801bf22:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 801bf26:	9004      	str	r0, [sp, #16]
 801bf28:	980e      	ldr	r0, [sp, #56]	; 0x38
 801bf2a:	9003      	str	r0, [sp, #12]
 801bf2c:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 801bf30:	9002      	str	r0, [sp, #8]
 801bf32:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801bf34:	9001      	str	r0, [sp, #4]
 801bf36:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 801bf3a:	9000      	str	r0, [sp, #0]
 801bf3c:	e9cd a606 	strd	sl, r6, [sp, #24]
 801bf40:	a810      	add	r0, sp, #64	; 0x40
 801bf42:	f7ff fbdd 	bl	801b700 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 801bf46:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801bf48:	b10b      	cbz	r3, 801bf4e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x226>
 801bf4a:	3302      	adds	r3, #2
 801bf4c:	9309      	str	r3, [sp, #36]	; 0x24
 801bf4e:	9b08      	ldr	r3, [sp, #32]
 801bf50:	2b00      	cmp	r3, #0
 801bf52:	f43f aefd 	beq.w	801bd50 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801bf56:	3301      	adds	r3, #1
 801bf58:	9308      	str	r3, [sp, #32]
 801bf5a:	e6f9      	b.n	801bd50 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801bf5c:	eef4 7a67 	vcmp.f32	s15, s15
 801bf60:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bf64:	d63a      	bvs.n	801bfdc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2b4>
 801bf66:	f10d 0846 	add.w	r8, sp, #70	; 0x46
 801bf6a:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 801bf6e:	f8cd 8040 	str.w	r8, [sp, #64]	; 0x40
 801bf72:	eeb0 6a67 	vmov.f32	s12, s15
 801bf76:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801bf7a:	eef0 5a47 	vmov.f32	s11, s14
 801bf7e:	eeb4 6ac7 	vcmpe.f32	s12, s14
 801bf82:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bf86:	da2d      	bge.n	801bfe4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2bc>
 801bf88:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801bf8a:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 801bf8e:	2100      	movs	r1, #0
 801bf90:	eef0 4a46 	vmov.f32	s9, s12
 801bf94:	ebaa 0202 	sub.w	r2, sl, r2
 801bf98:	eef4 6ac6 	vcmpe.f32	s13, s12
 801bf9c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bfa0:	b28d      	uxth	r5, r1
 801bfa2:	db2c      	blt.n	801bffe <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 801bfa4:	1a53      	subs	r3, r2, r1
 801bfa6:	2b00      	cmp	r3, #0
 801bfa8:	dd29      	ble.n	801bffe <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 801bfaa:	3101      	adds	r1, #1
 801bfac:	2964      	cmp	r1, #100	; 0x64
 801bfae:	d025      	beq.n	801bffc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d4>
 801bfb0:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 801bfb4:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 801bfb8:	ee17 3a10 	vmov	r3, s14
 801bfbc:	2b09      	cmp	r3, #9
 801bfbe:	bfa8      	it	ge
 801bfc0:	2309      	movge	r3, #9
 801bfc2:	ee07 3a10 	vmov	s14, r3
 801bfc6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801bfca:	f103 0030 	add.w	r0, r3, #48	; 0x30
 801bfce:	eee7 7a66 	vfms.f32	s15, s14, s13
 801bfd2:	f827 0011 	strh.w	r0, [r7, r1, lsl #1]
 801bfd6:	eec6 6aa5 	vdiv.f32	s13, s13, s11
 801bfda:	e7dd      	b.n	801bf98 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x270>
 801bfdc:	4b06      	ldr	r3, [pc, #24]	; (801bff8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d0>)
 801bfde:	9311      	str	r3, [sp, #68]	; 0x44
 801bfe0:	236e      	movs	r3, #110	; 0x6e
 801bfe2:	e792      	b.n	801bf0a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e2>
 801bfe4:	ee66 6a87 	vmul.f32	s13, s13, s14
 801bfe8:	ee86 6a07 	vdiv.f32	s12, s12, s14
 801bfec:	e7c7      	b.n	801bf7e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x256>
 801bfee:	bf00      	nop
 801bff0:	7f7fffff 	.word	0x7f7fffff
 801bff4:	006e0069 	.word	0x006e0069
 801bff8:	0061006e 	.word	0x0061006e
 801bffc:	2563      	movs	r5, #99	; 0x63
 801bffe:	2a63      	cmp	r2, #99	; 0x63
 801c000:	bfd4      	ite	le
 801c002:	ebc5 0202 	rsble	r2, r5, r2
 801c006:	f1c5 0263 	rsbgt	r2, r5, #99	; 0x63
 801c00a:	2a00      	cmp	r2, #0
 801c00c:	dd43      	ble.n	801c096 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36e>
 801c00e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801c010:	2b00      	cmp	r3, #0
 801c012:	dd40      	ble.n	801c096 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36e>
 801c014:	f04f 0901 	mov.w	r9, #1
 801c018:	210a      	movs	r1, #10
 801c01a:	f113 33ff 	adds.w	r3, r3, #4294967295
 801c01e:	d30c      	bcc.n	801c03a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x312>
 801c020:	ee67 7aa5 	vmul.f32	s15, s15, s11
 801c024:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 801c028:	ee17 0a10 	vmov	r0, s14
 801c02c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801c030:	fb01 0909 	mla	r9, r1, r9, r0
 801c034:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801c038:	e7ef      	b.n	801c01a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2f2>
 801c03a:	3501      	adds	r5, #1
 801c03c:	930f      	str	r3, [sp, #60]	; 0x3c
 801c03e:	b292      	uxth	r2, r2
 801c040:	230a      	movs	r3, #10
 801c042:	eb07 0145 	add.w	r1, r7, r5, lsl #1
 801c046:	4648      	mov	r0, r9
 801c048:	f7ff fb4e 	bl	801b6e8 <_ZN8touchgfx7Unicode4itoaElPtti>
 801c04c:	f1b9 0f01 	cmp.w	r9, #1
 801c050:	dc1f      	bgt.n	801c092 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36a>
 801c052:	f89d 302e 	ldrb.w	r3, [sp, #46]	; 0x2e
 801c056:	2b00      	cmp	r3, #0
 801c058:	bf0c      	ite	eq
 801c05a:	2300      	moveq	r3, #0
 801c05c:	232e      	movne	r3, #46	; 0x2e
 801c05e:	aa44      	add	r2, sp, #272	; 0x110
 801c060:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801c064:	eef4 7ae4 	vcmpe.f32	s15, s9
 801c068:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c06c:	f825 3ccc 	strh.w	r3, [r5, #-204]
 801c070:	f6ff af4c 	blt.w	801bf0c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 801c074:	2300      	movs	r3, #0
 801c076:	f838 2b02 	ldrh.w	r2, [r8], #2
 801c07a:	1c59      	adds	r1, r3, #1
 801c07c:	b98a      	cbnz	r2, 801c0a2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x37a>
 801c07e:	b29b      	uxth	r3, r3
 801c080:	2130      	movs	r1, #48	; 0x30
 801c082:	b983      	cbnz	r3, 801c0a6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x37e>
 801c084:	2331      	movs	r3, #49	; 0x31
 801c086:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 801c08a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c08c:	3b02      	subs	r3, #2
 801c08e:	9310      	str	r3, [sp, #64]	; 0x40
 801c090:	e73c      	b.n	801bf0c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 801c092:	232e      	movs	r3, #46	; 0x2e
 801c094:	e7e3      	b.n	801c05e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x336>
 801c096:	ab44      	add	r3, sp, #272	; 0x110
 801c098:	3501      	adds	r5, #1
 801c09a:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 801c09e:	2300      	movs	r3, #0
 801c0a0:	e7e0      	b.n	801c064 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x33c>
 801c0a2:	460b      	mov	r3, r1
 801c0a4:	e7e7      	b.n	801c076 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x34e>
 801c0a6:	f837 2013 	ldrh.w	r2, [r7, r3, lsl #1]
 801c0aa:	f1a2 0030 	sub.w	r0, r2, #48	; 0x30
 801c0ae:	2808      	cmp	r0, #8
 801c0b0:	d806      	bhi.n	801c0c0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x398>
 801c0b2:	a944      	add	r1, sp, #272	; 0x110
 801c0b4:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 801c0b8:	3201      	adds	r2, #1
 801c0ba:	f823 2ccc 	strh.w	r2, [r3, #-204]
 801c0be:	e725      	b.n	801bf0c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 801c0c0:	2a39      	cmp	r2, #57	; 0x39
 801c0c2:	bf08      	it	eq
 801c0c4:	f827 1013 	strheq.w	r1, [r7, r3, lsl #1]
 801c0c8:	3b01      	subs	r3, #1
 801c0ca:	e7da      	b.n	801c082 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x35a>
 801c0cc:	9a08      	ldr	r2, [sp, #32]
 801c0ce:	2a00      	cmp	r2, #0
 801c0d0:	f43f af23 	beq.w	801bf1a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 801c0d4:	7812      	ldrb	r2, [r2, #0]
 801c0d6:	e720      	b.n	801bf1a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 801c0d8:	2d00      	cmp	r5, #0
 801c0da:	f43f aede 	beq.w	801be9a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>
 801c0de:	782d      	ldrb	r5, [r5, #0]
 801c0e0:	e6db      	b.n	801be9a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>
 801c0e2:	bf00      	nop

0801c0e4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>:
 801c0e4:	b507      	push	{r0, r1, r2, lr}
 801c0e6:	9300      	str	r3, [sp, #0]
 801c0e8:	4613      	mov	r3, r2
 801c0ea:	2200      	movs	r2, #0
 801c0ec:	f7ff fe1c 	bl	801bd28 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>
 801c0f0:	b003      	add	sp, #12
 801c0f2:	f85d fb04 	ldr.w	pc, [sp], #4
	...

0801c0f8 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 801c0f8:	4b01      	ldr	r3, [pc, #4]	; (801c100 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 801c0fa:	6018      	str	r0, [r3, #0]
 801c0fc:	4770      	bx	lr
 801c0fe:	bf00      	nop
 801c100:	200138a4 	.word	0x200138a4

0801c104 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 801c104:	4b06      	ldr	r3, [pc, #24]	; (801c120 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 801c106:	881a      	ldrh	r2, [r3, #0]
 801c108:	4282      	cmp	r2, r0
 801c10a:	d807      	bhi.n	801c11c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 801c10c:	4b05      	ldr	r3, [pc, #20]	; (801c124 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 801c10e:	881b      	ldrh	r3, [r3, #0]
 801c110:	4413      	add	r3, r2
 801c112:	4298      	cmp	r0, r3
 801c114:	bfac      	ite	ge
 801c116:	2000      	movge	r0, #0
 801c118:	2001      	movlt	r0, #1
 801c11a:	4770      	bx	lr
 801c11c:	2000      	movs	r0, #0
 801c11e:	4770      	bx	lr
 801c120:	200138c4 	.word	0x200138c4
 801c124:	200138c8 	.word	0x200138c8

0801c128 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 801c128:	b508      	push	{r3, lr}
 801c12a:	4601      	mov	r1, r0
 801c12c:	f7ff ffea 	bl	801c104 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 801c130:	b118      	cbz	r0, 801c13a <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 801c132:	4b02      	ldr	r3, [pc, #8]	; (801c13c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 801c134:	681b      	ldr	r3, [r3, #0]
 801c136:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 801c13a:	bd08      	pop	{r3, pc}
 801c13c:	200138a8 	.word	0x200138a8

0801c140 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 801c140:	b5f0      	push	{r4, r5, r6, r7, lr}
 801c142:	4c24      	ldr	r4, [pc, #144]	; (801c1d4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 801c144:	6823      	ldr	r3, [r4, #0]
 801c146:	2b00      	cmp	r3, #0
 801c148:	d042      	beq.n	801c1d0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 801c14a:	4a23      	ldr	r2, [pc, #140]	; (801c1d8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 801c14c:	4d23      	ldr	r5, [pc, #140]	; (801c1dc <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 801c14e:	8811      	ldrh	r1, [r2, #0]
 801c150:	f8b5 c000 	ldrh.w	ip, [r5]
 801c154:	4822      	ldr	r0, [pc, #136]	; (801c1e0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 801c156:	4461      	add	r1, ip
 801c158:	1c4a      	adds	r2, r1, #1
 801c15a:	f022 0201 	bic.w	r2, r2, #1
 801c15e:	008f      	lsls	r7, r1, #2
 801c160:	0412      	lsls	r2, r2, #16
 801c162:	19de      	adds	r6, r3, r7
 801c164:	0c12      	lsrs	r2, r2, #16
 801c166:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 801c16a:	6006      	str	r6, [r0, #0]
 801c16c:	4e1d      	ldr	r6, [pc, #116]	; (801c1e4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 801c16e:	19da      	adds	r2, r3, r7
 801c170:	6032      	str	r2, [r6, #0]
 801c172:	220e      	movs	r2, #14
 801c174:	fb02 f20c 	mul.w	r2, r2, ip
 801c178:	3203      	adds	r2, #3
 801c17a:	f022 0203 	bic.w	r2, r2, #3
 801c17e:	443a      	add	r2, r7
 801c180:	4f19      	ldr	r7, [pc, #100]	; (801c1e8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 801c182:	4413      	add	r3, r2
 801c184:	603b      	str	r3, [r7, #0]
 801c186:	4f19      	ldr	r7, [pc, #100]	; (801c1ec <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 801c188:	2300      	movs	r3, #0
 801c18a:	803b      	strh	r3, [r7, #0]
 801c18c:	4f18      	ldr	r7, [pc, #96]	; (801c1f0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 801c18e:	683f      	ldr	r7, [r7, #0]
 801c190:	1aba      	subs	r2, r7, r2
 801c192:	4f18      	ldr	r7, [pc, #96]	; (801c1f4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 801c194:	603a      	str	r2, [r7, #0]
 801c196:	4a18      	ldr	r2, [pc, #96]	; (801c1f8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 801c198:	469c      	mov	ip, r3
 801c19a:	8013      	strh	r3, [r2, #0]
 801c19c:	f64f 77ff 	movw	r7, #65535	; 0xffff
 801c1a0:	428b      	cmp	r3, r1
 801c1a2:	d10d      	bne.n	801c1c0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 801c1a4:	882d      	ldrh	r5, [r5, #0]
 801c1a6:	6830      	ldr	r0, [r6, #0]
 801c1a8:	2300      	movs	r3, #0
 801c1aa:	240e      	movs	r4, #14
 801c1ac:	429d      	cmp	r5, r3
 801c1ae:	d90f      	bls.n	801c1d0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 801c1b0:	fb04 0203 	mla	r2, r4, r3, r0
 801c1b4:	3301      	adds	r3, #1
 801c1b6:	7b11      	ldrb	r1, [r2, #12]
 801c1b8:	f36f 1145 	bfc	r1, #5, #1
 801c1bc:	7311      	strb	r1, [r2, #12]
 801c1be:	e7f5      	b.n	801c1ac <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 801c1c0:	6822      	ldr	r2, [r4, #0]
 801c1c2:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 801c1c6:	6802      	ldr	r2, [r0, #0]
 801c1c8:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 801c1cc:	3301      	adds	r3, #1
 801c1ce:	e7e7      	b.n	801c1a0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 801c1d0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801c1d2:	bf00      	nop
 801c1d4:	200138a8 	.word	0x200138a8
 801c1d8:	200138c4 	.word	0x200138c4
 801c1dc:	200138c8 	.word	0x200138c8
 801c1e0:	200138bc 	.word	0x200138bc
 801c1e4:	200138ac 	.word	0x200138ac
 801c1e8:	200138b4 	.word	0x200138b4
 801c1ec:	200138c6 	.word	0x200138c6
 801c1f0:	200138b0 	.word	0x200138b0
 801c1f4:	200138c0 	.word	0x200138c0
 801c1f8:	200138b8 	.word	0x200138b8

0801c1fc <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 801c1fc:	4b06      	ldr	r3, [pc, #24]	; (801c218 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 801c1fe:	681b      	ldr	r3, [r3, #0]
 801c200:	b943      	cbnz	r3, 801c214 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 801c202:	b139      	cbz	r1, 801c214 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 801c204:	4b05      	ldr	r3, [pc, #20]	; (801c21c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 801c206:	801a      	strh	r2, [r3, #0]
 801c208:	4b05      	ldr	r3, [pc, #20]	; (801c220 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 801c20a:	6019      	str	r1, [r3, #0]
 801c20c:	4b05      	ldr	r3, [pc, #20]	; (801c224 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 801c20e:	6018      	str	r0, [r3, #0]
 801c210:	f7ff bf96 	b.w	801c140 <_ZN8touchgfx6Bitmap10clearCacheEv>
 801c214:	4770      	bx	lr
 801c216:	bf00      	nop
 801c218:	200138b4 	.word	0x200138b4
 801c21c:	200138c8 	.word	0x200138c8
 801c220:	200138b0 	.word	0x200138b0
 801c224:	200138a8 	.word	0x200138a8

0801c228 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 801c228:	b470      	push	{r4, r5, r6}
 801c22a:	4c07      	ldr	r4, [pc, #28]	; (801c248 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 801c22c:	6826      	ldr	r6, [r4, #0]
 801c22e:	4605      	mov	r5, r0
 801c230:	4610      	mov	r0, r2
 801c232:	9a03      	ldr	r2, [sp, #12]
 801c234:	b936      	cbnz	r6, 801c244 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 801c236:	6025      	str	r5, [r4, #0]
 801c238:	4c04      	ldr	r4, [pc, #16]	; (801c24c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 801c23a:	8021      	strh	r1, [r4, #0]
 801c23c:	bc70      	pop	{r4, r5, r6}
 801c23e:	4619      	mov	r1, r3
 801c240:	f7ff bfdc 	b.w	801c1fc <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 801c244:	bc70      	pop	{r4, r5, r6}
 801c246:	4770      	bx	lr
 801c248:	200138cc 	.word	0x200138cc
 801c24c:	200138c4 	.word	0x200138c4

0801c250 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 801c250:	4a12      	ldr	r2, [pc, #72]	; (801c29c <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 801c252:	8803      	ldrh	r3, [r0, #0]
 801c254:	8812      	ldrh	r2, [r2, #0]
 801c256:	4293      	cmp	r3, r2
 801c258:	d207      	bcs.n	801c26a <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 801c25a:	4a11      	ldr	r2, [pc, #68]	; (801c2a0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 801c25c:	6812      	ldr	r2, [r2, #0]
 801c25e:	2114      	movs	r1, #20
 801c260:	fb01 2303 	mla	r3, r1, r3, r2
 801c264:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 801c268:	4770      	bx	lr
 801c26a:	490e      	ldr	r1, [pc, #56]	; (801c2a4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 801c26c:	8809      	ldrh	r1, [r1, #0]
 801c26e:	4411      	add	r1, r2
 801c270:	428b      	cmp	r3, r1
 801c272:	da04      	bge.n	801c27e <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 801c274:	1a9b      	subs	r3, r3, r2
 801c276:	4a0c      	ldr	r2, [pc, #48]	; (801c2a8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 801c278:	210e      	movs	r1, #14
 801c27a:	6812      	ldr	r2, [r2, #0]
 801c27c:	e7f0      	b.n	801c260 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 801c27e:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801c282:	4293      	cmp	r3, r2
 801c284:	d108      	bne.n	801c298 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 801c286:	4b09      	ldr	r3, [pc, #36]	; (801c2ac <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 801c288:	781b      	ldrb	r3, [r3, #0]
 801c28a:	b91b      	cbnz	r3, 801c294 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 801c28c:	4b08      	ldr	r3, [pc, #32]	; (801c2b0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 801c28e:	f9b3 0000 	ldrsh.w	r0, [r3]
 801c292:	4770      	bx	lr
 801c294:	4b07      	ldr	r3, [pc, #28]	; (801c2b4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 801c296:	e7fa      	b.n	801c28e <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 801c298:	2000      	movs	r0, #0
 801c29a:	4770      	bx	lr
 801c29c:	200138c4 	.word	0x200138c4
 801c2a0:	200138cc 	.word	0x200138cc
 801c2a4:	200138c8 	.word	0x200138c8
 801c2a8:	200138ac 	.word	0x200138ac
 801c2ac:	20013834 	.word	0x20013834
 801c2b0:	20013836 	.word	0x20013836
 801c2b4:	20013838 	.word	0x20013838

0801c2b8 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 801c2b8:	4a12      	ldr	r2, [pc, #72]	; (801c304 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 801c2ba:	8803      	ldrh	r3, [r0, #0]
 801c2bc:	8812      	ldrh	r2, [r2, #0]
 801c2be:	4293      	cmp	r3, r2
 801c2c0:	d207      	bcs.n	801c2d2 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 801c2c2:	4a11      	ldr	r2, [pc, #68]	; (801c308 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 801c2c4:	6812      	ldr	r2, [r2, #0]
 801c2c6:	2114      	movs	r1, #20
 801c2c8:	fb01 2303 	mla	r3, r1, r3, r2
 801c2cc:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 801c2d0:	4770      	bx	lr
 801c2d2:	490e      	ldr	r1, [pc, #56]	; (801c30c <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 801c2d4:	8809      	ldrh	r1, [r1, #0]
 801c2d6:	4411      	add	r1, r2
 801c2d8:	428b      	cmp	r3, r1
 801c2da:	da04      	bge.n	801c2e6 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 801c2dc:	1a9b      	subs	r3, r3, r2
 801c2de:	4a0c      	ldr	r2, [pc, #48]	; (801c310 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 801c2e0:	210e      	movs	r1, #14
 801c2e2:	6812      	ldr	r2, [r2, #0]
 801c2e4:	e7f0      	b.n	801c2c8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 801c2e6:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801c2ea:	4293      	cmp	r3, r2
 801c2ec:	d108      	bne.n	801c300 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 801c2ee:	4b09      	ldr	r3, [pc, #36]	; (801c314 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 801c2f0:	781b      	ldrb	r3, [r3, #0]
 801c2f2:	b91b      	cbnz	r3, 801c2fc <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 801c2f4:	4b08      	ldr	r3, [pc, #32]	; (801c318 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 801c2f6:	f9b3 0000 	ldrsh.w	r0, [r3]
 801c2fa:	4770      	bx	lr
 801c2fc:	4b07      	ldr	r3, [pc, #28]	; (801c31c <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 801c2fe:	e7fa      	b.n	801c2f6 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 801c300:	2000      	movs	r0, #0
 801c302:	4770      	bx	lr
 801c304:	200138c4 	.word	0x200138c4
 801c308:	200138cc 	.word	0x200138cc
 801c30c:	200138c8 	.word	0x200138c8
 801c310:	200138ac 	.word	0x200138ac
 801c314:	20013834 	.word	0x20013834
 801c318:	20013838 	.word	0x20013838
 801c31c:	20013836 	.word	0x20013836

0801c320 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 801c320:	b510      	push	{r4, lr}
 801c322:	4a1f      	ldr	r2, [pc, #124]	; (801c3a0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 801c324:	880b      	ldrh	r3, [r1, #0]
 801c326:	8812      	ldrh	r2, [r2, #0]
 801c328:	4293      	cmp	r3, r2
 801c32a:	d213      	bcs.n	801c354 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 801c32c:	4a1d      	ldr	r2, [pc, #116]	; (801c3a4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 801c32e:	6812      	ldr	r2, [r2, #0]
 801c330:	2114      	movs	r1, #20
 801c332:	fb01 2303 	mla	r3, r1, r3, r2
 801c336:	8a1a      	ldrh	r2, [r3, #16]
 801c338:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 801c33c:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 801c340:	8a5b      	ldrh	r3, [r3, #18]
 801c342:	8004      	strh	r4, [r0, #0]
 801c344:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801c348:	f3c3 030c 	ubfx	r3, r3, #0, #13
 801c34c:	8041      	strh	r1, [r0, #2]
 801c34e:	8082      	strh	r2, [r0, #4]
 801c350:	80c3      	strh	r3, [r0, #6]
 801c352:	e00e      	b.n	801c372 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 801c354:	4914      	ldr	r1, [pc, #80]	; (801c3a8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 801c356:	8809      	ldrh	r1, [r1, #0]
 801c358:	4411      	add	r1, r2
 801c35a:	428b      	cmp	r3, r1
 801c35c:	da0a      	bge.n	801c374 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 801c35e:	1a9b      	subs	r3, r3, r2
 801c360:	4a12      	ldr	r2, [pc, #72]	; (801c3ac <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 801c362:	6812      	ldr	r2, [r2, #0]
 801c364:	210e      	movs	r1, #14
 801c366:	fb01 2303 	mla	r3, r1, r3, r2
 801c36a:	681a      	ldr	r2, [r3, #0]
 801c36c:	6002      	str	r2, [r0, #0]
 801c36e:	685a      	ldr	r2, [r3, #4]
 801c370:	6042      	str	r2, [r0, #4]
 801c372:	bd10      	pop	{r4, pc}
 801c374:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801c378:	4293      	cmp	r3, r2
 801c37a:	d10b      	bne.n	801c394 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 801c37c:	4b0c      	ldr	r3, [pc, #48]	; (801c3b0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 801c37e:	f9b3 1000 	ldrsh.w	r1, [r3]
 801c382:	4b0c      	ldr	r3, [pc, #48]	; (801c3b4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 801c384:	8081      	strh	r1, [r0, #4]
 801c386:	f9b3 2000 	ldrsh.w	r2, [r3]
 801c38a:	80c2      	strh	r2, [r0, #6]
 801c38c:	2300      	movs	r3, #0
 801c38e:	8003      	strh	r3, [r0, #0]
 801c390:	8043      	strh	r3, [r0, #2]
 801c392:	e7ee      	b.n	801c372 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 801c394:	2300      	movs	r3, #0
 801c396:	8003      	strh	r3, [r0, #0]
 801c398:	8043      	strh	r3, [r0, #2]
 801c39a:	8083      	strh	r3, [r0, #4]
 801c39c:	e7d8      	b.n	801c350 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 801c39e:	bf00      	nop
 801c3a0:	200138c4 	.word	0x200138c4
 801c3a4:	200138cc 	.word	0x200138cc
 801c3a8:	200138c8 	.word	0x200138c8
 801c3ac:	200138ac 	.word	0x200138ac
 801c3b0:	20013830 	.word	0x20013830
 801c3b4:	20013832 	.word	0x20013832

0801c3b8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 801c3b8:	4a17      	ldr	r2, [pc, #92]	; (801c418 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 801c3ba:	8803      	ldrh	r3, [r0, #0]
 801c3bc:	8812      	ldrh	r2, [r2, #0]
 801c3be:	4293      	cmp	r3, r2
 801c3c0:	d213      	bcs.n	801c3ea <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 801c3c2:	4a16      	ldr	r2, [pc, #88]	; (801c41c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 801c3c4:	6812      	ldr	r2, [r2, #0]
 801c3c6:	2114      	movs	r1, #20
 801c3c8:	fb01 2303 	mla	r3, r1, r3, r2
 801c3cc:	8a1a      	ldrh	r2, [r3, #16]
 801c3ce:	8919      	ldrh	r1, [r3, #8]
 801c3d0:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801c3d4:	428a      	cmp	r2, r1
 801c3d6:	db1d      	blt.n	801c414 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 801c3d8:	8a58      	ldrh	r0, [r3, #18]
 801c3da:	f3c0 000c 	ubfx	r0, r0, #0, #13
 801c3de:	895b      	ldrh	r3, [r3, #10]
 801c3e0:	4298      	cmp	r0, r3
 801c3e2:	bfac      	ite	ge
 801c3e4:	2000      	movge	r0, #0
 801c3e6:	2001      	movlt	r0, #1
 801c3e8:	4770      	bx	lr
 801c3ea:	490d      	ldr	r1, [pc, #52]	; (801c420 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 801c3ec:	8809      	ldrh	r1, [r1, #0]
 801c3ee:	4411      	add	r1, r2
 801c3f0:	428b      	cmp	r3, r1
 801c3f2:	da0d      	bge.n	801c410 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 801c3f4:	1a9b      	subs	r3, r3, r2
 801c3f6:	4a0b      	ldr	r2, [pc, #44]	; (801c424 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 801c3f8:	6812      	ldr	r2, [r2, #0]
 801c3fa:	210e      	movs	r1, #14
 801c3fc:	fb01 2303 	mla	r3, r1, r3, r2
 801c400:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 801c404:	891a      	ldrh	r2, [r3, #8]
 801c406:	4291      	cmp	r1, r2
 801c408:	db04      	blt.n	801c414 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 801c40a:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 801c40e:	e7e6      	b.n	801c3de <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 801c410:	2000      	movs	r0, #0
 801c412:	4770      	bx	lr
 801c414:	2001      	movs	r0, #1
 801c416:	4770      	bx	lr
 801c418:	200138c4 	.word	0x200138c4
 801c41c:	200138cc 	.word	0x200138cc
 801c420:	200138c8 	.word	0x200138c8
 801c424:	200138ac 	.word	0x200138ac

0801c428 <_ZNK8touchgfx6Bitmap7getDataEv>:
 801c428:	4a12      	ldr	r2, [pc, #72]	; (801c474 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 801c42a:	8803      	ldrh	r3, [r0, #0]
 801c42c:	8811      	ldrh	r1, [r2, #0]
 801c42e:	428b      	cmp	r3, r1
 801c430:	d20b      	bcs.n	801c44a <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 801c432:	4a11      	ldr	r2, [pc, #68]	; (801c478 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801c434:	6812      	ldr	r2, [r2, #0]
 801c436:	b112      	cbz	r2, 801c43e <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 801c438:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 801c43c:	b9c0      	cbnz	r0, 801c470 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 801c43e:	4a0f      	ldr	r2, [pc, #60]	; (801c47c <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 801c440:	6811      	ldr	r1, [r2, #0]
 801c442:	2214      	movs	r2, #20
 801c444:	4353      	muls	r3, r2
 801c446:	58c8      	ldr	r0, [r1, r3]
 801c448:	4770      	bx	lr
 801c44a:	4a0d      	ldr	r2, [pc, #52]	; (801c480 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 801c44c:	8812      	ldrh	r2, [r2, #0]
 801c44e:	440a      	add	r2, r1
 801c450:	4293      	cmp	r3, r2
 801c452:	da04      	bge.n	801c45e <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 801c454:	4a08      	ldr	r2, [pc, #32]	; (801c478 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801c456:	6812      	ldr	r2, [r2, #0]
 801c458:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 801c45c:	4770      	bx	lr
 801c45e:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801c462:	4293      	cmp	r3, r2
 801c464:	d103      	bne.n	801c46e <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 801c466:	4b07      	ldr	r3, [pc, #28]	; (801c484 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 801c468:	681b      	ldr	r3, [r3, #0]
 801c46a:	6c58      	ldr	r0, [r3, #68]	; 0x44
 801c46c:	4770      	bx	lr
 801c46e:	2000      	movs	r0, #0
 801c470:	4770      	bx	lr
 801c472:	bf00      	nop
 801c474:	200138c4 	.word	0x200138c4
 801c478:	200138a8 	.word	0x200138a8
 801c47c:	200138cc 	.word	0x200138cc
 801c480:	200138c8 	.word	0x200138c8
 801c484:	2001383c 	.word	0x2001383c

0801c488 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 801c488:	4b24      	ldr	r3, [pc, #144]	; (801c51c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 801c48a:	8802      	ldrh	r2, [r0, #0]
 801c48c:	8818      	ldrh	r0, [r3, #0]
 801c48e:	4282      	cmp	r2, r0
 801c490:	d221      	bcs.n	801c4d6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 801c492:	4b23      	ldr	r3, [pc, #140]	; (801c520 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 801c494:	6819      	ldr	r1, [r3, #0]
 801c496:	2314      	movs	r3, #20
 801c498:	fb03 1302 	mla	r3, r3, r2, r1
 801c49c:	6858      	ldr	r0, [r3, #4]
 801c49e:	2800      	cmp	r0, #0
 801c4a0:	d03a      	beq.n	801c518 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801c4a2:	4920      	ldr	r1, [pc, #128]	; (801c524 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801c4a4:	6809      	ldr	r1, [r1, #0]
 801c4a6:	2900      	cmp	r1, #0
 801c4a8:	d036      	beq.n	801c518 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801c4aa:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 801c4ae:	2900      	cmp	r1, #0
 801c4b0:	d032      	beq.n	801c518 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801c4b2:	891a      	ldrh	r2, [r3, #8]
 801c4b4:	8958      	ldrh	r0, [r3, #10]
 801c4b6:	4350      	muls	r0, r2
 801c4b8:	7c5a      	ldrb	r2, [r3, #17]
 801c4ba:	7cdb      	ldrb	r3, [r3, #19]
 801c4bc:	0952      	lsrs	r2, r2, #5
 801c4be:	f3c3 1342 	ubfx	r3, r3, #5, #3
 801c4c2:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 801c4c6:	2b0b      	cmp	r3, #11
 801c4c8:	bf18      	it	ne
 801c4ca:	0040      	lslne	r0, r0, #1
 801c4cc:	3003      	adds	r0, #3
 801c4ce:	f020 0003 	bic.w	r0, r0, #3
 801c4d2:	4408      	add	r0, r1
 801c4d4:	4770      	bx	lr
 801c4d6:	4b14      	ldr	r3, [pc, #80]	; (801c528 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 801c4d8:	881b      	ldrh	r3, [r3, #0]
 801c4da:	4403      	add	r3, r0
 801c4dc:	429a      	cmp	r2, r3
 801c4de:	da1a      	bge.n	801c516 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801c4e0:	4b12      	ldr	r3, [pc, #72]	; (801c52c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 801c4e2:	681b      	ldr	r3, [r3, #0]
 801c4e4:	1a10      	subs	r0, r2, r0
 801c4e6:	210e      	movs	r1, #14
 801c4e8:	fb01 3000 	mla	r0, r1, r0, r3
 801c4ec:	7b03      	ldrb	r3, [r0, #12]
 801c4ee:	f003 031f 	and.w	r3, r3, #31
 801c4f2:	2b0b      	cmp	r3, #11
 801c4f4:	d10b      	bne.n	801c50e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 801c4f6:	8903      	ldrh	r3, [r0, #8]
 801c4f8:	8940      	ldrh	r0, [r0, #10]
 801c4fa:	4358      	muls	r0, r3
 801c4fc:	4b09      	ldr	r3, [pc, #36]	; (801c524 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801c4fe:	6819      	ldr	r1, [r3, #0]
 801c500:	3003      	adds	r0, #3
 801c502:	f020 0303 	bic.w	r3, r0, #3
 801c506:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 801c50a:	4418      	add	r0, r3
 801c50c:	4770      	bx	lr
 801c50e:	2b0d      	cmp	r3, #13
 801c510:	d101      	bne.n	801c516 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801c512:	300d      	adds	r0, #13
 801c514:	4770      	bx	lr
 801c516:	2000      	movs	r0, #0
 801c518:	4770      	bx	lr
 801c51a:	bf00      	nop
 801c51c:	200138c4 	.word	0x200138c4
 801c520:	200138cc 	.word	0x200138cc
 801c524:	200138a8 	.word	0x200138a8
 801c528:	200138c8 	.word	0x200138c8
 801c52c:	200138ac 	.word	0x200138ac

0801c530 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 801c530:	b510      	push	{r4, lr}
 801c532:	4a17      	ldr	r2, [pc, #92]	; (801c590 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 801c534:	8803      	ldrh	r3, [r0, #0]
 801c536:	8812      	ldrh	r2, [r2, #0]
 801c538:	4293      	cmp	r3, r2
 801c53a:	d20c      	bcs.n	801c556 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 801c53c:	4a15      	ldr	r2, [pc, #84]	; (801c594 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 801c53e:	6812      	ldr	r2, [r2, #0]
 801c540:	2114      	movs	r1, #20
 801c542:	fb01 2303 	mla	r3, r1, r3, r2
 801c546:	7c58      	ldrb	r0, [r3, #17]
 801c548:	0942      	lsrs	r2, r0, #5
 801c54a:	7cd8      	ldrb	r0, [r3, #19]
 801c54c:	f3c0 1042 	ubfx	r0, r0, #5, #3
 801c550:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 801c554:	bd10      	pop	{r4, pc}
 801c556:	4910      	ldr	r1, [pc, #64]	; (801c598 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 801c558:	8809      	ldrh	r1, [r1, #0]
 801c55a:	4411      	add	r1, r2
 801c55c:	428b      	cmp	r3, r1
 801c55e:	da09      	bge.n	801c574 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 801c560:	1a9b      	subs	r3, r3, r2
 801c562:	4a0e      	ldr	r2, [pc, #56]	; (801c59c <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 801c564:	6812      	ldr	r2, [r2, #0]
 801c566:	210e      	movs	r1, #14
 801c568:	fb01 2303 	mla	r3, r1, r3, r2
 801c56c:	7b18      	ldrb	r0, [r3, #12]
 801c56e:	f000 001f 	and.w	r0, r0, #31
 801c572:	e7ef      	b.n	801c554 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 801c574:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801c578:	4293      	cmp	r3, r2
 801c57a:	d106      	bne.n	801c58a <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 801c57c:	f7e8 ffb4 	bl	80054e8 <_ZN8touchgfx3HAL3lcdEv>
 801c580:	6803      	ldr	r3, [r0, #0]
 801c582:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801c586:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c588:	4718      	bx	r3
 801c58a:	2000      	movs	r0, #0
 801c58c:	e7e2      	b.n	801c554 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 801c58e:	bf00      	nop
 801c590:	200138c4 	.word	0x200138c4
 801c594:	200138cc 	.word	0x200138cc
 801c598:	200138c8 	.word	0x200138c8
 801c59c:	200138ac 	.word	0x200138ac

0801c5a0 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 801c5a0:	2010      	movs	r0, #16
 801c5a2:	4770      	bx	lr

0801c5a4 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 801c5a4:	2000      	movs	r0, #0
 801c5a6:	4770      	bx	lr

0801c5a8 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 801c5a8:	4b02      	ldr	r3, [pc, #8]	; (801c5b4 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 801c5aa:	8818      	ldrh	r0, [r3, #0]
 801c5ac:	0040      	lsls	r0, r0, #1
 801c5ae:	b280      	uxth	r0, r0
 801c5b0:	4770      	bx	lr
 801c5b2:	bf00      	nop
 801c5b4:	20013836 	.word	0x20013836

0801c5b8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 801c5b8:	2bff      	cmp	r3, #255	; 0xff
 801c5ba:	d050      	beq.n	801c65e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 801c5bc:	2a0b      	cmp	r2, #11
 801c5be:	d04a      	beq.n	801c656 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 801c5c0:	d80e      	bhi.n	801c5e0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 801c5c2:	2a03      	cmp	r2, #3
 801c5c4:	d03f      	beq.n	801c646 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 801c5c6:	d804      	bhi.n	801c5d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 801c5c8:	2a01      	cmp	r2, #1
 801c5ca:	d03e      	beq.n	801c64a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 801c5cc:	d93f      	bls.n	801c64e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 801c5ce:	6b80      	ldr	r0, [r0, #56]	; 0x38
 801c5d0:	4770      	bx	lr
 801c5d2:	2a09      	cmp	r2, #9
 801c5d4:	d03f      	beq.n	801c656 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 801c5d6:	d83c      	bhi.n	801c652 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 801c5d8:	2a08      	cmp	r2, #8
 801c5da:	d03a      	beq.n	801c652 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 801c5dc:	2000      	movs	r0, #0
 801c5de:	4770      	bx	lr
 801c5e0:	2a2f      	cmp	r2, #47	; 0x2f
 801c5e2:	d024      	beq.n	801c62e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 801c5e4:	d80d      	bhi.n	801c602 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 801c5e6:	2a2d      	cmp	r2, #45	; 0x2d
 801c5e8:	d014      	beq.n	801c614 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 801c5ea:	d826      	bhi.n	801c63a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 801c5ec:	2a2c      	cmp	r2, #44	; 0x2c
 801c5ee:	d1f5      	bne.n	801c5dc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c5f0:	684b      	ldr	r3, [r1, #4]
 801c5f2:	781b      	ldrb	r3, [r3, #0]
 801c5f4:	2b01      	cmp	r3, #1
 801c5f6:	d018      	beq.n	801c62a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 801c5f8:	d323      	bcc.n	801c642 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 801c5fa:	2b02      	cmp	r3, #2
 801c5fc:	d1ee      	bne.n	801c5dc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c5fe:	6880      	ldr	r0, [r0, #8]
 801c600:	4770      	bx	lr
 801c602:	2a31      	cmp	r2, #49	; 0x31
 801c604:	d004      	beq.n	801c610 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 801c606:	d328      	bcc.n	801c65a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 801c608:	2a32      	cmp	r2, #50	; 0x32
 801c60a:	d026      	beq.n	801c65a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 801c60c:	2a33      	cmp	r2, #51	; 0x33
 801c60e:	d1e5      	bne.n	801c5dc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c610:	6f00      	ldr	r0, [r0, #112]	; 0x70
 801c612:	4770      	bx	lr
 801c614:	684b      	ldr	r3, [r1, #4]
 801c616:	781b      	ldrb	r3, [r3, #0]
 801c618:	2b01      	cmp	r3, #1
 801c61a:	d004      	beq.n	801c626 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 801c61c:	d30b      	bcc.n	801c636 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801c61e:	2b02      	cmp	r3, #2
 801c620:	d1dc      	bne.n	801c5dc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c622:	6900      	ldr	r0, [r0, #16]
 801c624:	4770      	bx	lr
 801c626:	6a00      	ldr	r0, [r0, #32]
 801c628:	4770      	bx	lr
 801c62a:	6980      	ldr	r0, [r0, #24]
 801c62c:	4770      	bx	lr
 801c62e:	684b      	ldr	r3, [r1, #4]
 801c630:	781b      	ldrb	r3, [r3, #0]
 801c632:	2b00      	cmp	r3, #0
 801c634:	d1d2      	bne.n	801c5dc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c636:	6b00      	ldr	r0, [r0, #48]	; 0x30
 801c638:	4770      	bx	lr
 801c63a:	684b      	ldr	r3, [r1, #4]
 801c63c:	781b      	ldrb	r3, [r3, #0]
 801c63e:	2b00      	cmp	r3, #0
 801c640:	d1cc      	bne.n	801c5dc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c642:	6a80      	ldr	r0, [r0, #40]	; 0x28
 801c644:	4770      	bx	lr
 801c646:	6c80      	ldr	r0, [r0, #72]	; 0x48
 801c648:	4770      	bx	lr
 801c64a:	6d00      	ldr	r0, [r0, #80]	; 0x50
 801c64c:	4770      	bx	lr
 801c64e:	6c00      	ldr	r0, [r0, #64]	; 0x40
 801c650:	4770      	bx	lr
 801c652:	6d80      	ldr	r0, [r0, #88]	; 0x58
 801c654:	4770      	bx	lr
 801c656:	6e00      	ldr	r0, [r0, #96]	; 0x60
 801c658:	4770      	bx	lr
 801c65a:	6e80      	ldr	r0, [r0, #104]	; 0x68
 801c65c:	4770      	bx	lr
 801c65e:	2a0b      	cmp	r2, #11
 801c660:	d049      	beq.n	801c6f6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801c662:	d80e      	bhi.n	801c682 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 801c664:	2a03      	cmp	r2, #3
 801c666:	d040      	beq.n	801c6ea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 801c668:	d804      	bhi.n	801c674 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 801c66a:	2a01      	cmp	r2, #1
 801c66c:	d03f      	beq.n	801c6ee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 801c66e:	d940      	bls.n	801c6f2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 801c670:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 801c672:	4770      	bx	lr
 801c674:	2a09      	cmp	r2, #9
 801c676:	d03e      	beq.n	801c6f6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801c678:	d801      	bhi.n	801c67e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 801c67a:	2a08      	cmp	r2, #8
 801c67c:	d1ae      	bne.n	801c5dc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c67e:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 801c680:	4770      	bx	lr
 801c682:	2a2f      	cmp	r2, #47	; 0x2f
 801c684:	d024      	beq.n	801c6d0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 801c686:	d80d      	bhi.n	801c6a4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 801c688:	2a2d      	cmp	r2, #45	; 0x2d
 801c68a:	d014      	beq.n	801c6b6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 801c68c:	d826      	bhi.n	801c6dc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 801c68e:	2a2c      	cmp	r2, #44	; 0x2c
 801c690:	d1a4      	bne.n	801c5dc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c692:	684b      	ldr	r3, [r1, #4]
 801c694:	781b      	ldrb	r3, [r3, #0]
 801c696:	2b01      	cmp	r3, #1
 801c698:	d018      	beq.n	801c6cc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 801c69a:	d324      	bcc.n	801c6e6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 801c69c:	2b02      	cmp	r3, #2
 801c69e:	d19d      	bne.n	801c5dc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c6a0:	68c0      	ldr	r0, [r0, #12]
 801c6a2:	4770      	bx	lr
 801c6a4:	2a31      	cmp	r2, #49	; 0x31
 801c6a6:	d004      	beq.n	801c6b2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 801c6a8:	d327      	bcc.n	801c6fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801c6aa:	2a32      	cmp	r2, #50	; 0x32
 801c6ac:	d025      	beq.n	801c6fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801c6ae:	2a33      	cmp	r2, #51	; 0x33
 801c6b0:	d194      	bne.n	801c5dc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c6b2:	6f40      	ldr	r0, [r0, #116]	; 0x74
 801c6b4:	4770      	bx	lr
 801c6b6:	684b      	ldr	r3, [r1, #4]
 801c6b8:	781b      	ldrb	r3, [r3, #0]
 801c6ba:	2b01      	cmp	r3, #1
 801c6bc:	d004      	beq.n	801c6c8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 801c6be:	d30b      	bcc.n	801c6d8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 801c6c0:	2b02      	cmp	r3, #2
 801c6c2:	d18b      	bne.n	801c5dc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c6c4:	6940      	ldr	r0, [r0, #20]
 801c6c6:	4770      	bx	lr
 801c6c8:	6a40      	ldr	r0, [r0, #36]	; 0x24
 801c6ca:	4770      	bx	lr
 801c6cc:	69c0      	ldr	r0, [r0, #28]
 801c6ce:	4770      	bx	lr
 801c6d0:	684b      	ldr	r3, [r1, #4]
 801c6d2:	781b      	ldrb	r3, [r3, #0]
 801c6d4:	2b00      	cmp	r3, #0
 801c6d6:	d181      	bne.n	801c5dc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c6d8:	6b40      	ldr	r0, [r0, #52]	; 0x34
 801c6da:	4770      	bx	lr
 801c6dc:	684b      	ldr	r3, [r1, #4]
 801c6de:	781b      	ldrb	r3, [r3, #0]
 801c6e0:	2b00      	cmp	r3, #0
 801c6e2:	f47f af7b 	bne.w	801c5dc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c6e6:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 801c6e8:	4770      	bx	lr
 801c6ea:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 801c6ec:	4770      	bx	lr
 801c6ee:	6d40      	ldr	r0, [r0, #84]	; 0x54
 801c6f0:	4770      	bx	lr
 801c6f2:	6c40      	ldr	r0, [r0, #68]	; 0x44
 801c6f4:	4770      	bx	lr
 801c6f6:	6e40      	ldr	r0, [r0, #100]	; 0x64
 801c6f8:	4770      	bx	lr
 801c6fa:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 801c6fc:	4770      	bx	lr

0801c6fe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c6fe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c702:	b087      	sub	sp, #28
 801c704:	9815      	ldr	r0, [sp, #84]	; 0x54
 801c706:	9205      	str	r2, [sp, #20]
 801c708:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801c70c:	9202      	str	r2, [sp, #8]
 801c70e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801c712:	9101      	str	r1, [sp, #4]
 801c714:	6841      	ldr	r1, [r0, #4]
 801c716:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801c71a:	fb01 2404 	mla	r4, r1, r4, r2
 801c71e:	6802      	ldr	r2, [r0, #0]
 801c720:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801c724:	f8de 2000 	ldr.w	r2, [lr]
 801c728:	9203      	str	r2, [sp, #12]
 801c72a:	f8de 2004 	ldr.w	r2, [lr, #4]
 801c72e:	3204      	adds	r2, #4
 801c730:	9204      	str	r2, [sp, #16]
 801c732:	9a02      	ldr	r2, [sp, #8]
 801c734:	43d6      	mvns	r6, r2
 801c736:	b2f6      	uxtb	r6, r6
 801c738:	9a01      	ldr	r2, [sp, #4]
 801c73a:	2a00      	cmp	r2, #0
 801c73c:	dc03      	bgt.n	801c746 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801c73e:	9a05      	ldr	r2, [sp, #20]
 801c740:	2a00      	cmp	r2, #0
 801c742:	f340 8129 	ble.w	801c998 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801c746:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801c748:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801c74c:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801c750:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801c754:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801c756:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801c75a:	2b00      	cmp	r3, #0
 801c75c:	dd0e      	ble.n	801c77c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801c75e:	1408      	asrs	r0, r1, #16
 801c760:	d405      	bmi.n	801c76e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801c762:	4560      	cmp	r0, ip
 801c764:	da03      	bge.n	801c76e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801c766:	1410      	asrs	r0, r2, #16
 801c768:	d401      	bmi.n	801c76e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801c76a:	42b8      	cmp	r0, r7
 801c76c:	db07      	blt.n	801c77e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801c76e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801c770:	4401      	add	r1, r0
 801c772:	9814      	ldr	r0, [sp, #80]	; 0x50
 801c774:	3b01      	subs	r3, #1
 801c776:	4402      	add	r2, r0
 801c778:	3402      	adds	r4, #2
 801c77a:	e7ee      	b.n	801c75a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801c77c:	d071      	beq.n	801c862 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801c77e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801c780:	1e58      	subs	r0, r3, #1
 801c782:	fb05 1500 	mla	r5, r5, r0, r1
 801c786:	142d      	asrs	r5, r5, #16
 801c788:	d45f      	bmi.n	801c84a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801c78a:	4565      	cmp	r5, ip
 801c78c:	da5d      	bge.n	801c84a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801c78e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801c790:	fb05 2000 	mla	r0, r5, r0, r2
 801c794:	1400      	asrs	r0, r0, #16
 801c796:	d458      	bmi.n	801c84a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801c798:	42b8      	cmp	r0, r7
 801c79a:	da56      	bge.n	801c84a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801c79c:	f8bd b008 	ldrh.w	fp, [sp, #8]
 801c7a0:	4699      	mov	r9, r3
 801c7a2:	46a2      	mov	sl, r4
 801c7a4:	f1b9 0f00 	cmp.w	r9, #0
 801c7a8:	dd57      	ble.n	801c85a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 801c7aa:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801c7ae:	9803      	ldr	r0, [sp, #12]
 801c7b0:	ea4f 4c22 	mov.w	ip, r2, asr #16
 801c7b4:	140d      	asrs	r5, r1, #16
 801c7b6:	fb07 000c 	mla	r0, r7, ip, r0
 801c7ba:	f109 39ff 	add.w	r9, r9, #4294967295
 801c7be:	5d40      	ldrb	r0, [r0, r5]
 801c7c0:	9d04      	ldr	r5, [sp, #16]
 801c7c2:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801c7c6:	f8ba 5000 	ldrh.w	r5, [sl]
 801c7ca:	122f      	asrs	r7, r5, #8
 801c7cc:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801c7d0:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801c7d4:	fb17 f706 	smulbb	r7, r7, r6
 801c7d8:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801c7dc:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801c7e0:	00ed      	lsls	r5, r5, #3
 801c7e2:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801c7e6:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801c7ea:	10c7      	asrs	r7, r0, #3
 801c7ec:	b2ed      	uxtb	r5, r5
 801c7ee:	00c0      	lsls	r0, r0, #3
 801c7f0:	fb18 f806 	smulbb	r8, r8, r6
 801c7f4:	fb15 f506 	smulbb	r5, r5, r6
 801c7f8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801c7fc:	b2c0      	uxtb	r0, r0
 801c7fe:	fa1f fc8c 	uxth.w	ip, ip
 801c802:	fb07 870b 	mla	r7, r7, fp, r8
 801c806:	fb00 500b 	mla	r0, r0, fp, r5
 801c80a:	b280      	uxth	r0, r0
 801c80c:	b2bf      	uxth	r7, r7
 801c80e:	f10c 0501 	add.w	r5, ip, #1
 801c812:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801c816:	f107 0801 	add.w	r8, r7, #1
 801c81a:	1c45      	adds	r5, r0, #1
 801c81c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801c820:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801c824:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801c826:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801c82a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801c82e:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801c832:	ea45 0c0c 	orr.w	ip, r5, ip
 801c836:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801c83a:	4401      	add	r1, r0
 801c83c:	9814      	ldr	r0, [sp, #80]	; 0x50
 801c83e:	ea4c 0c08 	orr.w	ip, ip, r8
 801c842:	f82a cb02 	strh.w	ip, [sl], #2
 801c846:	4402      	add	r2, r0
 801c848:	e7ac      	b.n	801c7a4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801c84a:	f8bd a008 	ldrh.w	sl, [sp, #8]
 801c84e:	f04f 0800 	mov.w	r8, #0
 801c852:	eb03 0008 	add.w	r0, r3, r8
 801c856:	2800      	cmp	r0, #0
 801c858:	dc41      	bgt.n	801c8de <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801c85a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801c85e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c862:	9b01      	ldr	r3, [sp, #4]
 801c864:	2b00      	cmp	r3, #0
 801c866:	f340 8097 	ble.w	801c998 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801c86a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c86e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801c872:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801c876:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c878:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c87c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c880:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c884:	eef0 6a62 	vmov.f32	s13, s5
 801c888:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c88c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c890:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c894:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 801c898:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c89c:	eef0 6a43 	vmov.f32	s13, s6
 801c8a0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c8a4:	ee12 2a90 	vmov	r2, s5
 801c8a8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c8ac:	fb92 f3f3 	sdiv	r3, r2, r3
 801c8b0:	ee13 2a10 	vmov	r2, s6
 801c8b4:	9313      	str	r3, [sp, #76]	; 0x4c
 801c8b6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c8b8:	fb92 f3f3 	sdiv	r3, r2, r3
 801c8bc:	9314      	str	r3, [sp, #80]	; 0x50
 801c8be:	9b01      	ldr	r3, [sp, #4]
 801c8c0:	9a05      	ldr	r2, [sp, #20]
 801c8c2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c8c6:	3b01      	subs	r3, #1
 801c8c8:	9301      	str	r3, [sp, #4]
 801c8ca:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801c8ce:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c8d0:	eeb0 3a67 	vmov.f32	s6, s15
 801c8d4:	bf08      	it	eq
 801c8d6:	4613      	moveq	r3, r2
 801c8d8:	eef0 2a47 	vmov.f32	s5, s14
 801c8dc:	e72c      	b.n	801c738 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801c8de:	140f      	asrs	r7, r1, #16
 801c8e0:	d453      	bmi.n	801c98a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801c8e2:	f8de 5008 	ldr.w	r5, [lr, #8]
 801c8e6:	42bd      	cmp	r5, r7
 801c8e8:	dd4f      	ble.n	801c98a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801c8ea:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801c8ee:	d44c      	bmi.n	801c98a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801c8f0:	f8de 000c 	ldr.w	r0, [lr, #12]
 801c8f4:	4560      	cmp	r0, ip
 801c8f6:	dd48      	ble.n	801c98a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801c8f8:	9803      	ldr	r0, [sp, #12]
 801c8fa:	b22d      	sxth	r5, r5
 801c8fc:	fb0c 0505 	mla	r5, ip, r5, r0
 801c900:	5de8      	ldrb	r0, [r5, r7]
 801c902:	9d04      	ldr	r5, [sp, #16]
 801c904:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801c908:	f06f 0501 	mvn.w	r5, #1
 801c90c:	fb05 fb08 	mul.w	fp, r5, r8
 801c910:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801c914:	f834 500b 	ldrh.w	r5, [r4, fp]
 801c918:	122f      	asrs	r7, r5, #8
 801c91a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801c91e:	fb17 f706 	smulbb	r7, r7, r6
 801c922:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801c926:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801c92a:	00ed      	lsls	r5, r5, #3
 801c92c:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801c930:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801c934:	10c7      	asrs	r7, r0, #3
 801c936:	b2ed      	uxtb	r5, r5
 801c938:	00c0      	lsls	r0, r0, #3
 801c93a:	fb19 f906 	smulbb	r9, r9, r6
 801c93e:	fb15 f506 	smulbb	r5, r5, r6
 801c942:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801c946:	b2c0      	uxtb	r0, r0
 801c948:	fa1f fc8c 	uxth.w	ip, ip
 801c94c:	fb07 970a 	mla	r7, r7, sl, r9
 801c950:	fb00 500a 	mla	r0, r0, sl, r5
 801c954:	b2bf      	uxth	r7, r7
 801c956:	b280      	uxth	r0, r0
 801c958:	f10c 0501 	add.w	r5, ip, #1
 801c95c:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801c960:	f107 0901 	add.w	r9, r7, #1
 801c964:	1c45      	adds	r5, r0, #1
 801c966:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801c96a:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801c96e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801c972:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801c976:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801c97a:	ea45 0c0c 	orr.w	ip, r5, ip
 801c97e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801c982:	ea4c 0c09 	orr.w	ip, ip, r9
 801c986:	f824 c00b 	strh.w	ip, [r4, fp]
 801c98a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801c98c:	4401      	add	r1, r0
 801c98e:	9814      	ldr	r0, [sp, #80]	; 0x50
 801c990:	f108 38ff 	add.w	r8, r8, #4294967295
 801c994:	4402      	add	r2, r0
 801c996:	e75c      	b.n	801c852 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 801c998:	b007      	add	sp, #28
 801c99a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c99e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c99e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c9a2:	b085      	sub	sp, #20
 801c9a4:	4693      	mov	fp, r2
 801c9a6:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801c9a8:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801c9aa:	6870      	ldr	r0, [r6, #4]
 801c9ac:	9100      	str	r1, [sp, #0]
 801c9ae:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801c9b2:	fb00 2404 	mla	r4, r0, r4, r2
 801c9b6:	6832      	ldr	r2, [r6, #0]
 801c9b8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801c9bc:	682a      	ldr	r2, [r5, #0]
 801c9be:	9201      	str	r2, [sp, #4]
 801c9c0:	686a      	ldr	r2, [r5, #4]
 801c9c2:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801c9c6:	3204      	adds	r2, #4
 801c9c8:	9202      	str	r2, [sp, #8]
 801c9ca:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801c9ce:	9a00      	ldr	r2, [sp, #0]
 801c9d0:	2a00      	cmp	r2, #0
 801c9d2:	dc03      	bgt.n	801c9dc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801c9d4:	f1bb 0f00 	cmp.w	fp, #0
 801c9d8:	f340 80a0 	ble.w	801cb1c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801c9dc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801c9de:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801c9e2:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801c9e6:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801c9ea:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801c9ec:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801c9f0:	2b00      	cmp	r3, #0
 801c9f2:	dd0c      	ble.n	801ca0e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801c9f4:	1406      	asrs	r6, r0, #16
 801c9f6:	d405      	bmi.n	801ca04 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801c9f8:	454e      	cmp	r6, r9
 801c9fa:	da03      	bge.n	801ca04 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801c9fc:	1416      	asrs	r6, r2, #16
 801c9fe:	d401      	bmi.n	801ca04 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801ca00:	4546      	cmp	r6, r8
 801ca02:	db05      	blt.n	801ca10 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801ca04:	4470      	add	r0, lr
 801ca06:	4462      	add	r2, ip
 801ca08:	3b01      	subs	r3, #1
 801ca0a:	3402      	adds	r4, #2
 801ca0c:	e7f0      	b.n	801c9f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801ca0e:	d00f      	beq.n	801ca30 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801ca10:	1e5e      	subs	r6, r3, #1
 801ca12:	fb0e 0706 	mla	r7, lr, r6, r0
 801ca16:	143f      	asrs	r7, r7, #16
 801ca18:	d541      	bpl.n	801ca9e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 801ca1a:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801ca1e:	4698      	mov	r8, r3
 801ca20:	9603      	str	r6, [sp, #12]
 801ca22:	f1b8 0f00 	cmp.w	r8, #0
 801ca26:	dc59      	bgt.n	801cadc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801ca28:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801ca2c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ca30:	9b00      	ldr	r3, [sp, #0]
 801ca32:	2b00      	cmp	r3, #0
 801ca34:	dd72      	ble.n	801cb1c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801ca36:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ca3a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ca3e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801ca42:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ca44:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ca48:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ca4c:	eeb0 6a62 	vmov.f32	s12, s5
 801ca50:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ca54:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ca58:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ca5c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801ca60:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ca64:	eeb0 6a43 	vmov.f32	s12, s6
 801ca68:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ca6c:	ee12 2a90 	vmov	r2, s5
 801ca70:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ca74:	fb92 fef3 	sdiv	lr, r2, r3
 801ca78:	ee13 2a10 	vmov	r2, s6
 801ca7c:	fb92 fcf3 	sdiv	ip, r2, r3
 801ca80:	9b00      	ldr	r3, [sp, #0]
 801ca82:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ca86:	3b01      	subs	r3, #1
 801ca88:	9300      	str	r3, [sp, #0]
 801ca8a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801ca8e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ca90:	eeb0 3a67 	vmov.f32	s6, s15
 801ca94:	bf08      	it	eq
 801ca96:	465b      	moveq	r3, fp
 801ca98:	eef0 2a47 	vmov.f32	s5, s14
 801ca9c:	e797      	b.n	801c9ce <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801ca9e:	454f      	cmp	r7, r9
 801caa0:	dabb      	bge.n	801ca1a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801caa2:	fb0c 2606 	mla	r6, ip, r6, r2
 801caa6:	1436      	asrs	r6, r6, #16
 801caa8:	d4b7      	bmi.n	801ca1a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801caaa:	4546      	cmp	r6, r8
 801caac:	dab5      	bge.n	801ca1a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801caae:	461e      	mov	r6, r3
 801cab0:	46a0      	mov	r8, r4
 801cab2:	2e00      	cmp	r6, #0
 801cab4:	ddb8      	ble.n	801ca28 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801cab6:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801caba:	9901      	ldr	r1, [sp, #4]
 801cabc:	1417      	asrs	r7, r2, #16
 801cabe:	ea4f 4920 	mov.w	r9, r0, asr #16
 801cac2:	fb0a 1707 	mla	r7, sl, r7, r1
 801cac6:	9902      	ldr	r1, [sp, #8]
 801cac8:	f817 7009 	ldrb.w	r7, [r7, r9]
 801cacc:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801cad0:	f828 7b02 	strh.w	r7, [r8], #2
 801cad4:	4470      	add	r0, lr
 801cad6:	4462      	add	r2, ip
 801cad8:	3e01      	subs	r6, #1
 801cada:	e7ea      	b.n	801cab2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 801cadc:	ea5f 4920 	movs.w	r9, r0, asr #16
 801cae0:	d417      	bmi.n	801cb12 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801cae2:	68ae      	ldr	r6, [r5, #8]
 801cae4:	454e      	cmp	r6, r9
 801cae6:	dd14      	ble.n	801cb12 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801cae8:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801caec:	d411      	bmi.n	801cb12 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801caee:	68ef      	ldr	r7, [r5, #12]
 801caf0:	4557      	cmp	r7, sl
 801caf2:	dd0e      	ble.n	801cb12 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801caf4:	9f01      	ldr	r7, [sp, #4]
 801caf6:	b236      	sxth	r6, r6
 801caf8:	fb0a 7606 	mla	r6, sl, r6, r7
 801cafc:	9f02      	ldr	r7, [sp, #8]
 801cafe:	f816 6009 	ldrb.w	r6, [r6, r9]
 801cb02:	f06f 0101 	mvn.w	r1, #1
 801cb06:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801cb0a:	fb01 f608 	mul.w	r6, r1, r8
 801cb0e:	9903      	ldr	r1, [sp, #12]
 801cb10:	538f      	strh	r7, [r1, r6]
 801cb12:	4470      	add	r0, lr
 801cb14:	4462      	add	r2, ip
 801cb16:	f108 38ff 	add.w	r8, r8, #4294967295
 801cb1a:	e782      	b.n	801ca22 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801cb1c:	b005      	add	sp, #20
 801cb1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801cb22 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801cb22:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cb26:	b087      	sub	sp, #28
 801cb28:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801cb2a:	9205      	str	r2, [sp, #20]
 801cb2c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801cb30:	9203      	str	r2, [sp, #12]
 801cb32:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801cb36:	9102      	str	r1, [sp, #8]
 801cb38:	6861      	ldr	r1, [r4, #4]
 801cb3a:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 801cb3e:	fb01 2000 	mla	r0, r1, r0, r2
 801cb42:	6822      	ldr	r2, [r4, #0]
 801cb44:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 801cb48:	9200      	str	r2, [sp, #0]
 801cb4a:	f8dc 2000 	ldr.w	r2, [ip]
 801cb4e:	9204      	str	r2, [sp, #16]
 801cb50:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801cb54:	3204      	adds	r2, #4
 801cb56:	9201      	str	r2, [sp, #4]
 801cb58:	9a03      	ldr	r2, [sp, #12]
 801cb5a:	43d5      	mvns	r5, r2
 801cb5c:	b2ed      	uxtb	r5, r5
 801cb5e:	9a02      	ldr	r2, [sp, #8]
 801cb60:	2a00      	cmp	r2, #0
 801cb62:	dc03      	bgt.n	801cb6c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801cb64:	9a05      	ldr	r2, [sp, #20]
 801cb66:	2a00      	cmp	r2, #0
 801cb68:	f340 812c 	ble.w	801cdc4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801cb6c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801cb6e:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 801cb72:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 801cb76:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801cb7a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801cb7c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801cb80:	2b00      	cmp	r3, #0
 801cb82:	dd10      	ble.n	801cba6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801cb84:	140c      	asrs	r4, r1, #16
 801cb86:	d405      	bmi.n	801cb94 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801cb88:	4574      	cmp	r4, lr
 801cb8a:	da03      	bge.n	801cb94 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801cb8c:	1414      	asrs	r4, r2, #16
 801cb8e:	d401      	bmi.n	801cb94 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801cb90:	42bc      	cmp	r4, r7
 801cb92:	db09      	blt.n	801cba8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801cb94:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801cb96:	9800      	ldr	r0, [sp, #0]
 801cb98:	4421      	add	r1, r4
 801cb9a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801cb9c:	3002      	adds	r0, #2
 801cb9e:	4422      	add	r2, r4
 801cba0:	3b01      	subs	r3, #1
 801cba2:	9000      	str	r0, [sp, #0]
 801cba4:	e7ec      	b.n	801cb80 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801cba6:	d071      	beq.n	801cc8c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 801cba8:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801cbaa:	1e5c      	subs	r4, r3, #1
 801cbac:	fb06 1604 	mla	r6, r6, r4, r1
 801cbb0:	1436      	asrs	r6, r6, #16
 801cbb2:	d45d      	bmi.n	801cc70 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801cbb4:	4576      	cmp	r6, lr
 801cbb6:	da5b      	bge.n	801cc70 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801cbb8:	9e14      	ldr	r6, [sp, #80]	; 0x50
 801cbba:	fb06 2404 	mla	r4, r6, r4, r2
 801cbbe:	1424      	asrs	r4, r4, #16
 801cbc0:	d456      	bmi.n	801cc70 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801cbc2:	42bc      	cmp	r4, r7
 801cbc4:	da54      	bge.n	801cc70 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801cbc6:	f8dd 9000 	ldr.w	r9, [sp]
 801cbca:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 801cbce:	4698      	mov	r8, r3
 801cbd0:	f1b8 0f00 	cmp.w	r8, #0
 801cbd4:	dd54      	ble.n	801cc80 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801cbd6:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801cbda:	9804      	ldr	r0, [sp, #16]
 801cbdc:	1414      	asrs	r4, r2, #16
 801cbde:	fb07 0404 	mla	r4, r7, r4, r0
 801cbe2:	140e      	asrs	r6, r1, #16
 801cbe4:	9801      	ldr	r0, [sp, #4]
 801cbe6:	f814 e006 	ldrb.w	lr, [r4, r6]
 801cbea:	f8b9 4000 	ldrh.w	r4, [r9]
 801cbee:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801cbf2:	eb00 0b0e 	add.w	fp, r0, lr
 801cbf6:	1227      	asrs	r7, r4, #8
 801cbf8:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801cbfc:	f89b b001 	ldrb.w	fp, [fp, #1]
 801cc00:	f810 e00e 	ldrb.w	lr, [r0, lr]
 801cc04:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801cc06:	fb16 f60a 	smulbb	r6, r6, sl
 801cc0a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801cc0e:	fb07 6705 	mla	r7, r7, r5, r6
 801cc12:	10e6      	asrs	r6, r4, #3
 801cc14:	00e4      	lsls	r4, r4, #3
 801cc16:	b2e4      	uxtb	r4, r4
 801cc18:	fb1b fb0a 	smulbb	fp, fp, sl
 801cc1c:	fb14 f405 	smulbb	r4, r4, r5
 801cc20:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801cc24:	b2bf      	uxth	r7, r7
 801cc26:	fb06 b605 	mla	r6, r6, r5, fp
 801cc2a:	fb0e 4e0a 	mla	lr, lr, sl, r4
 801cc2e:	b2b6      	uxth	r6, r6
 801cc30:	fa1f fe8e 	uxth.w	lr, lr
 801cc34:	1c7c      	adds	r4, r7, #1
 801cc36:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801cc3a:	f106 0b01 	add.w	fp, r6, #1
 801cc3e:	f10e 0401 	add.w	r4, lr, #1
 801cc42:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 801cc46:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801cc4a:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801cc4e:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801cc52:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801cc56:	4327      	orrs	r7, r4
 801cc58:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801cc5c:	4401      	add	r1, r0
 801cc5e:	9814      	ldr	r0, [sp, #80]	; 0x50
 801cc60:	ea47 070b 	orr.w	r7, r7, fp
 801cc64:	f829 7b02 	strh.w	r7, [r9], #2
 801cc68:	4402      	add	r2, r0
 801cc6a:	f108 38ff 	add.w	r8, r8, #4294967295
 801cc6e:	e7af      	b.n	801cbd0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801cc70:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 801cc74:	f04f 0e00 	mov.w	lr, #0
 801cc78:	eb03 040e 	add.w	r4, r3, lr
 801cc7c:	2c00      	cmp	r4, #0
 801cc7e:	dc43      	bgt.n	801cd08 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801cc80:	9a00      	ldr	r2, [sp, #0]
 801cc82:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801cc86:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801cc8a:	9300      	str	r3, [sp, #0]
 801cc8c:	9b02      	ldr	r3, [sp, #8]
 801cc8e:	2b00      	cmp	r3, #0
 801cc90:	f340 8098 	ble.w	801cdc4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801cc94:	ee30 0a04 	vadd.f32	s0, s0, s8
 801cc98:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801cc9c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801cca0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801cca2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801cca6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ccaa:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ccae:	eef0 6a62 	vmov.f32	s13, s5
 801ccb2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ccb6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ccba:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ccbe:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 801ccc2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ccc6:	eef0 6a43 	vmov.f32	s13, s6
 801ccca:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ccce:	ee12 2a90 	vmov	r2, s5
 801ccd2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ccd6:	fb92 f3f3 	sdiv	r3, r2, r3
 801ccda:	ee13 2a10 	vmov	r2, s6
 801ccde:	9313      	str	r3, [sp, #76]	; 0x4c
 801cce0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801cce2:	fb92 f3f3 	sdiv	r3, r2, r3
 801cce6:	9314      	str	r3, [sp, #80]	; 0x50
 801cce8:	9b02      	ldr	r3, [sp, #8]
 801ccea:	9a05      	ldr	r2, [sp, #20]
 801ccec:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ccf0:	3b01      	subs	r3, #1
 801ccf2:	9302      	str	r3, [sp, #8]
 801ccf4:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801ccf8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ccfa:	eeb0 3a67 	vmov.f32	s6, s15
 801ccfe:	bf08      	it	eq
 801cd00:	4613      	moveq	r3, r2
 801cd02:	eef0 2a47 	vmov.f32	s5, s14
 801cd06:	e72a      	b.n	801cb5e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801cd08:	140f      	asrs	r7, r1, #16
 801cd0a:	d454      	bmi.n	801cdb6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801cd0c:	f8dc 6008 	ldr.w	r6, [ip, #8]
 801cd10:	42be      	cmp	r6, r7
 801cd12:	dd50      	ble.n	801cdb6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801cd14:	ea5f 4822 	movs.w	r8, r2, asr #16
 801cd18:	d44d      	bmi.n	801cdb6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801cd1a:	f8dc 400c 	ldr.w	r4, [ip, #12]
 801cd1e:	4544      	cmp	r4, r8
 801cd20:	dd49      	ble.n	801cdb6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801cd22:	9c04      	ldr	r4, [sp, #16]
 801cd24:	b236      	sxth	r6, r6
 801cd26:	fb08 4606 	mla	r6, r8, r6, r4
 801cd2a:	f06f 0001 	mvn.w	r0, #1
 801cd2e:	f816 8007 	ldrb.w	r8, [r6, r7]
 801cd32:	9c01      	ldr	r4, [sp, #4]
 801cd34:	fb00 fa0e 	mul.w	sl, r0, lr
 801cd38:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801cd3c:	9800      	ldr	r0, [sp, #0]
 801cd3e:	eb04 0b08 	add.w	fp, r4, r8
 801cd42:	f830 400a 	ldrh.w	r4, [r0, sl]
 801cd46:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801cd4a:	9801      	ldr	r0, [sp, #4]
 801cd4c:	f89b b001 	ldrb.w	fp, [fp, #1]
 801cd50:	f810 8008 	ldrb.w	r8, [r0, r8]
 801cd54:	9800      	ldr	r0, [sp, #0]
 801cd56:	1227      	asrs	r7, r4, #8
 801cd58:	fb16 f609 	smulbb	r6, r6, r9
 801cd5c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801cd60:	fb07 6705 	mla	r7, r7, r5, r6
 801cd64:	10e6      	asrs	r6, r4, #3
 801cd66:	00e4      	lsls	r4, r4, #3
 801cd68:	b2e4      	uxtb	r4, r4
 801cd6a:	fb1b fb09 	smulbb	fp, fp, r9
 801cd6e:	fb14 f405 	smulbb	r4, r4, r5
 801cd72:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801cd76:	b2bf      	uxth	r7, r7
 801cd78:	fb06 b605 	mla	r6, r6, r5, fp
 801cd7c:	fb08 4809 	mla	r8, r8, r9, r4
 801cd80:	b2b6      	uxth	r6, r6
 801cd82:	fa1f f888 	uxth.w	r8, r8
 801cd86:	1c7c      	adds	r4, r7, #1
 801cd88:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801cd8c:	f106 0b01 	add.w	fp, r6, #1
 801cd90:	f108 0401 	add.w	r4, r8, #1
 801cd94:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 801cd98:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801cd9c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801cda0:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801cda4:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801cda8:	4327      	orrs	r7, r4
 801cdaa:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801cdae:	ea47 070b 	orr.w	r7, r7, fp
 801cdb2:	f820 700a 	strh.w	r7, [r0, sl]
 801cdb6:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801cdb8:	4401      	add	r1, r0
 801cdba:	9814      	ldr	r0, [sp, #80]	; 0x50
 801cdbc:	f10e 3eff 	add.w	lr, lr, #4294967295
 801cdc0:	4402      	add	r2, r0
 801cdc2:	e759      	b.n	801cc78 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801cdc4:	b007      	add	sp, #28
 801cdc6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801cdcc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801cdcc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cdd0:	b085      	sub	sp, #20
 801cdd2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801cdd6:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801cdd8:	9203      	str	r2, [sp, #12]
 801cdda:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801cdde:	6870      	ldr	r0, [r6, #4]
 801cde0:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801cde2:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 801cde6:	686f      	ldr	r7, [r5, #4]
 801cde8:	9101      	str	r1, [sp, #4]
 801cdea:	fb00 2404 	mla	r4, r0, r4, r2
 801cdee:	6832      	ldr	r2, [r6, #0]
 801cdf0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801cdf4:	682a      	ldr	r2, [r5, #0]
 801cdf6:	9202      	str	r2, [sp, #8]
 801cdf8:	3704      	adds	r7, #4
 801cdfa:	9a01      	ldr	r2, [sp, #4]
 801cdfc:	2a00      	cmp	r2, #0
 801cdfe:	dc03      	bgt.n	801ce08 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801ce00:	9a03      	ldr	r2, [sp, #12]
 801ce02:	2a00      	cmp	r2, #0
 801ce04:	f340 80cc 	ble.w	801cfa0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801ce08:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801ce0a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801ce0e:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801ce12:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801ce16:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801ce18:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801ce1c:	2b00      	cmp	r3, #0
 801ce1e:	dd0d      	ble.n	801ce3c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801ce20:	1406      	asrs	r6, r0, #16
 801ce22:	d405      	bmi.n	801ce30 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801ce24:	454e      	cmp	r6, r9
 801ce26:	da03      	bge.n	801ce30 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801ce28:	1416      	asrs	r6, r2, #16
 801ce2a:	d401      	bmi.n	801ce30 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801ce2c:	4546      	cmp	r6, r8
 801ce2e:	db06      	blt.n	801ce3e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801ce30:	9e12      	ldr	r6, [sp, #72]	; 0x48
 801ce32:	4460      	add	r0, ip
 801ce34:	4432      	add	r2, r6
 801ce36:	3b01      	subs	r3, #1
 801ce38:	3402      	adds	r4, #2
 801ce3a:	e7ef      	b.n	801ce1c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 801ce3c:	d00f      	beq.n	801ce5e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801ce3e:	1e5e      	subs	r6, r3, #1
 801ce40:	fb0c 0e06 	mla	lr, ip, r6, r0
 801ce44:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 801ce48:	d543      	bpl.n	801ced2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801ce4a:	4698      	mov	r8, r3
 801ce4c:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 801ce50:	f1b8 0f00 	cmp.w	r8, #0
 801ce54:	dc71      	bgt.n	801cf3a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801ce56:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801ce5a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ce5e:	9b01      	ldr	r3, [sp, #4]
 801ce60:	2b00      	cmp	r3, #0
 801ce62:	f340 809d 	ble.w	801cfa0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801ce66:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ce6a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ce6e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801ce72:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ce74:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ce78:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ce7c:	eeb0 6a62 	vmov.f32	s12, s5
 801ce80:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ce84:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ce88:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ce8c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801ce90:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ce94:	eeb0 6a43 	vmov.f32	s12, s6
 801ce98:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ce9c:	ee12 2a90 	vmov	r2, s5
 801cea0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801cea4:	fb92 fcf3 	sdiv	ip, r2, r3
 801cea8:	ee13 2a10 	vmov	r2, s6
 801ceac:	fb92 f3f3 	sdiv	r3, r2, r3
 801ceb0:	9312      	str	r3, [sp, #72]	; 0x48
 801ceb2:	9b01      	ldr	r3, [sp, #4]
 801ceb4:	9a03      	ldr	r2, [sp, #12]
 801ceb6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ceba:	3b01      	subs	r3, #1
 801cebc:	9301      	str	r3, [sp, #4]
 801cebe:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801cec2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801cec4:	eeb0 3a67 	vmov.f32	s6, s15
 801cec8:	bf08      	it	eq
 801ceca:	4613      	moveq	r3, r2
 801cecc:	eef0 2a47 	vmov.f32	s5, s14
 801ced0:	e793      	b.n	801cdfa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801ced2:	45ce      	cmp	lr, r9
 801ced4:	dab9      	bge.n	801ce4a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801ced6:	9912      	ldr	r1, [sp, #72]	; 0x48
 801ced8:	fb01 2606 	mla	r6, r1, r6, r2
 801cedc:	1436      	asrs	r6, r6, #16
 801cede:	d4b4      	bmi.n	801ce4a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801cee0:	4546      	cmp	r6, r8
 801cee2:	dab2      	bge.n	801ce4a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801cee4:	4698      	mov	r8, r3
 801cee6:	46a2      	mov	sl, r4
 801cee8:	f1b8 0f00 	cmp.w	r8, #0
 801ceec:	ddb3      	ble.n	801ce56 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801ceee:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801cef2:	9902      	ldr	r1, [sp, #8]
 801cef4:	1416      	asrs	r6, r2, #16
 801cef6:	fb09 1606 	mla	r6, r9, r6, r1
 801cefa:	ea4f 4e20 	mov.w	lr, r0, asr #16
 801cefe:	492a      	ldr	r1, [pc, #168]	; (801cfa8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 801cf00:	f816 e00e 	ldrb.w	lr, [r6, lr]
 801cf04:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801cf08:	eb07 0b0e 	add.w	fp, r7, lr
 801cf0c:	4460      	add	r0, ip
 801cf0e:	f89b 6001 	ldrb.w	r6, [fp, #1]
 801cf12:	f89b 9002 	ldrb.w	r9, [fp, #2]
 801cf16:	00f6      	lsls	r6, r6, #3
 801cf18:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 801cf1c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801cf20:	ea49 0606 	orr.w	r6, r9, r6
 801cf24:	f817 900e 	ldrb.w	r9, [r7, lr]
 801cf28:	9912      	ldr	r1, [sp, #72]	; 0x48
 801cf2a:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 801cf2e:	f82a 6b02 	strh.w	r6, [sl], #2
 801cf32:	440a      	add	r2, r1
 801cf34:	f108 38ff 	add.w	r8, r8, #4294967295
 801cf38:	e7d6      	b.n	801cee8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801cf3a:	ea5f 4920 	movs.w	r9, r0, asr #16
 801cf3e:	d429      	bmi.n	801cf94 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801cf40:	68ae      	ldr	r6, [r5, #8]
 801cf42:	454e      	cmp	r6, r9
 801cf44:	dd26      	ble.n	801cf94 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801cf46:	ea5f 4b22 	movs.w	fp, r2, asr #16
 801cf4a:	d423      	bmi.n	801cf94 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801cf4c:	68e9      	ldr	r1, [r5, #12]
 801cf4e:	4559      	cmp	r1, fp
 801cf50:	dd20      	ble.n	801cf94 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801cf52:	9902      	ldr	r1, [sp, #8]
 801cf54:	fa0f fe86 	sxth.w	lr, r6
 801cf58:	fb0b 1e0e 	mla	lr, fp, lr, r1
 801cf5c:	f06f 0101 	mvn.w	r1, #1
 801cf60:	f81e e009 	ldrb.w	lr, [lr, r9]
 801cf64:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801cf68:	eb07 060e 	add.w	r6, r7, lr
 801cf6c:	fb01 f908 	mul.w	r9, r1, r8
 801cf70:	f896 b002 	ldrb.w	fp, [r6, #2]
 801cf74:	7876      	ldrb	r6, [r6, #1]
 801cf76:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 801cf7a:	00f6      	lsls	r6, r6, #3
 801cf7c:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 801cf80:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801cf84:	ea4b 0606 	orr.w	r6, fp, r6
 801cf88:	f817 b00e 	ldrb.w	fp, [r7, lr]
 801cf8c:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 801cf90:	f82a 6009 	strh.w	r6, [sl, r9]
 801cf94:	9912      	ldr	r1, [sp, #72]	; 0x48
 801cf96:	4460      	add	r0, ip
 801cf98:	440a      	add	r2, r1
 801cf9a:	f108 38ff 	add.w	r8, r8, #4294967295
 801cf9e:	e757      	b.n	801ce50 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801cfa0:	b005      	add	sp, #20
 801cfa2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cfa6:	bf00      	nop
 801cfa8:	fffff800 	.word	0xfffff800

0801cfac <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801cfac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cfb0:	b087      	sub	sp, #28
 801cfb2:	468b      	mov	fp, r1
 801cfb4:	9815      	ldr	r0, [sp, #84]	; 0x54
 801cfb6:	9204      	str	r2, [sp, #16]
 801cfb8:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801cfbc:	9205      	str	r2, [sp, #20]
 801cfbe:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801cfc2:	6841      	ldr	r1, [r0, #4]
 801cfc4:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 801cfc8:	fb01 2404 	mla	r4, r1, r4, r2
 801cfcc:	6802      	ldr	r2, [r0, #0]
 801cfce:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801cfd2:	f8dc 2000 	ldr.w	r2, [ip]
 801cfd6:	9201      	str	r2, [sp, #4]
 801cfd8:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801cfdc:	3204      	adds	r2, #4
 801cfde:	9202      	str	r2, [sp, #8]
 801cfe0:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801cfe4:	f1bb 0f00 	cmp.w	fp, #0
 801cfe8:	dc03      	bgt.n	801cff2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801cfea:	9a04      	ldr	r2, [sp, #16]
 801cfec:	2a00      	cmp	r2, #0
 801cfee:	f340 8138 	ble.w	801d262 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801cff2:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801cff4:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801cff8:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 801cffc:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801d000:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801d002:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801d006:	2b00      	cmp	r3, #0
 801d008:	dd0e      	ble.n	801d028 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801d00a:	1402      	asrs	r2, r0, #16
 801d00c:	d405      	bmi.n	801d01a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801d00e:	42ba      	cmp	r2, r7
 801d010:	da03      	bge.n	801d01a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801d012:	140a      	asrs	r2, r1, #16
 801d014:	d401      	bmi.n	801d01a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801d016:	42b2      	cmp	r2, r6
 801d018:	db07      	blt.n	801d02a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801d01a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801d01c:	4410      	add	r0, r2
 801d01e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801d020:	3b01      	subs	r3, #1
 801d022:	4411      	add	r1, r2
 801d024:	3402      	adds	r4, #2
 801d026:	e7ee      	b.n	801d006 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801d028:	d019      	beq.n	801d05e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801d02a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801d02c:	1e5a      	subs	r2, r3, #1
 801d02e:	fb05 0502 	mla	r5, r5, r2, r0
 801d032:	142d      	asrs	r5, r5, #16
 801d034:	d409      	bmi.n	801d04a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801d036:	42bd      	cmp	r5, r7
 801d038:	da07      	bge.n	801d04a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801d03a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801d03c:	fb05 1202 	mla	r2, r5, r2, r1
 801d040:	1412      	asrs	r2, r2, #16
 801d042:	d402      	bmi.n	801d04a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801d044:	42b2      	cmp	r2, r6
 801d046:	f2c0 80ac 	blt.w	801d1a2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 801d04a:	f04f 0e00 	mov.w	lr, #0
 801d04e:	eb03 020e 	add.w	r2, r3, lr
 801d052:	2a00      	cmp	r2, #0
 801d054:	dc3e      	bgt.n	801d0d4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801d056:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801d05a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801d05e:	f1bb 0f00 	cmp.w	fp, #0
 801d062:	f340 80fe 	ble.w	801d262 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801d066:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d06a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d06e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801d072:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d074:	f1bb 0b01 	subs.w	fp, fp, #1
 801d078:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d07c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d080:	eeb0 6a62 	vmov.f32	s12, s5
 801d084:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d088:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d08c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d090:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801d094:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d098:	eeb0 6a43 	vmov.f32	s12, s6
 801d09c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d0a0:	ee12 2a90 	vmov	r2, s5
 801d0a4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d0a8:	fb92 f3f3 	sdiv	r3, r2, r3
 801d0ac:	ee13 2a10 	vmov	r2, s6
 801d0b0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d0b4:	9313      	str	r3, [sp, #76]	; 0x4c
 801d0b6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d0b8:	fb92 f3f3 	sdiv	r3, r2, r3
 801d0bc:	9a04      	ldr	r2, [sp, #16]
 801d0be:	9314      	str	r3, [sp, #80]	; 0x50
 801d0c0:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801d0c4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d0c6:	eeb0 3a67 	vmov.f32	s6, s15
 801d0ca:	bf08      	it	eq
 801d0cc:	4613      	moveq	r3, r2
 801d0ce:	eef0 2a47 	vmov.f32	s5, s14
 801d0d2:	e787      	b.n	801cfe4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801d0d4:	1406      	asrs	r6, r0, #16
 801d0d6:	d45d      	bmi.n	801d194 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801d0d8:	f8dc 5008 	ldr.w	r5, [ip, #8]
 801d0dc:	42b5      	cmp	r5, r6
 801d0de:	dd59      	ble.n	801d194 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801d0e0:	140f      	asrs	r7, r1, #16
 801d0e2:	d457      	bmi.n	801d194 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801d0e4:	f8dc 200c 	ldr.w	r2, [ip, #12]
 801d0e8:	42ba      	cmp	r2, r7
 801d0ea:	dd53      	ble.n	801d194 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801d0ec:	9a01      	ldr	r2, [sp, #4]
 801d0ee:	b22d      	sxth	r5, r5
 801d0f0:	fb07 2505 	mla	r5, r7, r5, r2
 801d0f4:	5daa      	ldrb	r2, [r5, r6]
 801d0f6:	9d02      	ldr	r5, [sp, #8]
 801d0f8:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801d0fc:	0e2e      	lsrs	r6, r5, #24
 801d0fe:	d049      	beq.n	801d194 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801d100:	f06f 0201 	mvn.w	r2, #1
 801d104:	fb02 f20e 	mul.w	r2, r2, lr
 801d108:	9203      	str	r2, [sp, #12]
 801d10a:	f834 8002 	ldrh.w	r8, [r4, r2]
 801d10e:	9a05      	ldr	r2, [sp, #20]
 801d110:	4356      	muls	r6, r2
 801d112:	1c72      	adds	r2, r6, #1
 801d114:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801d118:	1212      	asrs	r2, r2, #8
 801d11a:	fa1f f982 	uxth.w	r9, r2
 801d11e:	ea4f 2728 	mov.w	r7, r8, asr #8
 801d122:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801d126:	43d2      	mvns	r2, r2
 801d128:	b2d2      	uxtb	r2, r2
 801d12a:	fb16 f609 	smulbb	r6, r6, r9
 801d12e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d132:	fb07 6702 	mla	r7, r7, r2, r6
 801d136:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801d13a:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801d13e:	b2ed      	uxtb	r5, r5
 801d140:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801d144:	fa5f f888 	uxtb.w	r8, r8
 801d148:	fb15 f509 	smulbb	r5, r5, r9
 801d14c:	fb08 5502 	mla	r5, r8, r2, r5
 801d150:	b2bf      	uxth	r7, r7
 801d152:	fb1a fa09 	smulbb	sl, sl, r9
 801d156:	b2ad      	uxth	r5, r5
 801d158:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d15c:	fb06 a602 	mla	r6, r6, r2, sl
 801d160:	1c7a      	adds	r2, r7, #1
 801d162:	f105 0a01 	add.w	sl, r5, #1
 801d166:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801d16a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801d16e:	b2b6      	uxth	r6, r6
 801d170:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801d174:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801d178:	ea4a 0707 	orr.w	r7, sl, r7
 801d17c:	f106 0a01 	add.w	sl, r6, #1
 801d180:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801d184:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d188:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801d18c:	9a03      	ldr	r2, [sp, #12]
 801d18e:	ea47 070a 	orr.w	r7, r7, sl
 801d192:	52a7      	strh	r7, [r4, r2]
 801d194:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801d196:	4410      	add	r0, r2
 801d198:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801d19a:	f10e 3eff 	add.w	lr, lr, #4294967295
 801d19e:	4411      	add	r1, r2
 801d1a0:	e755      	b.n	801d04e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801d1a2:	f04f 0800 	mov.w	r8, #0
 801d1a6:	eba3 0208 	sub.w	r2, r3, r8
 801d1aa:	2a00      	cmp	r2, #0
 801d1ac:	f77f af53 	ble.w	801d056 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801d1b0:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 801d1b4:	9f01      	ldr	r7, [sp, #4]
 801d1b6:	140a      	asrs	r2, r1, #16
 801d1b8:	1405      	asrs	r5, r0, #16
 801d1ba:	fb06 7202 	mla	r2, r6, r2, r7
 801d1be:	5d52      	ldrb	r2, [r2, r5]
 801d1c0:	9d02      	ldr	r5, [sp, #8]
 801d1c2:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801d1c6:	0e2e      	lsrs	r6, r5, #24
 801d1c8:	d044      	beq.n	801d254 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801d1ca:	9a05      	ldr	r2, [sp, #20]
 801d1cc:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801d1d0:	4356      	muls	r6, r2
 801d1d2:	1c72      	adds	r2, r6, #1
 801d1d4:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801d1d8:	1212      	asrs	r2, r2, #8
 801d1da:	fa1f f982 	uxth.w	r9, r2
 801d1de:	ea4f 272e 	mov.w	r7, lr, asr #8
 801d1e2:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801d1e6:	43d2      	mvns	r2, r2
 801d1e8:	b2d2      	uxtb	r2, r2
 801d1ea:	fb16 f609 	smulbb	r6, r6, r9
 801d1ee:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d1f2:	fb07 6702 	mla	r7, r7, r2, r6
 801d1f6:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801d1fa:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801d1fe:	b2ed      	uxtb	r5, r5
 801d200:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801d204:	fa5f fe8e 	uxtb.w	lr, lr
 801d208:	fb15 f509 	smulbb	r5, r5, r9
 801d20c:	fb0e 5502 	mla	r5, lr, r2, r5
 801d210:	b2bf      	uxth	r7, r7
 801d212:	fb1a fa09 	smulbb	sl, sl, r9
 801d216:	b2ad      	uxth	r5, r5
 801d218:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d21c:	fb06 a602 	mla	r6, r6, r2, sl
 801d220:	1c7a      	adds	r2, r7, #1
 801d222:	f105 0a01 	add.w	sl, r5, #1
 801d226:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801d22a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801d22e:	b2b6      	uxth	r6, r6
 801d230:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801d234:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801d238:	ea4a 0707 	orr.w	r7, sl, r7
 801d23c:	f106 0a01 	add.w	sl, r6, #1
 801d240:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801d244:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d248:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801d24c:	ea47 070a 	orr.w	r7, r7, sl
 801d250:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801d254:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801d256:	4410      	add	r0, r2
 801d258:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801d25a:	f108 0801 	add.w	r8, r8, #1
 801d25e:	4411      	add	r1, r2
 801d260:	e7a1      	b.n	801d1a6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801d262:	b007      	add	sp, #28
 801d264:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801d268 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d268:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d26c:	b085      	sub	sp, #20
 801d26e:	468b      	mov	fp, r1
 801d270:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801d272:	9203      	str	r2, [sp, #12]
 801d274:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801d278:	6841      	ldr	r1, [r0, #4]
 801d27a:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801d27e:	fb01 2404 	mla	r4, r1, r4, r2
 801d282:	6802      	ldr	r2, [r0, #0]
 801d284:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801d288:	f8de 2000 	ldr.w	r2, [lr]
 801d28c:	9200      	str	r2, [sp, #0]
 801d28e:	f8de 2004 	ldr.w	r2, [lr, #4]
 801d292:	3204      	adds	r2, #4
 801d294:	9201      	str	r2, [sp, #4]
 801d296:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801d29a:	f1bb 0f00 	cmp.w	fp, #0
 801d29e:	dc03      	bgt.n	801d2a8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801d2a0:	9a03      	ldr	r2, [sp, #12]
 801d2a2:	2a00      	cmp	r2, #0
 801d2a4:	f340 8153 	ble.w	801d54e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801d2a8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801d2aa:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801d2ae:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801d2b2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801d2b6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801d2b8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801d2bc:	2b00      	cmp	r3, #0
 801d2be:	dd0e      	ble.n	801d2de <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801d2c0:	1408      	asrs	r0, r1, #16
 801d2c2:	d405      	bmi.n	801d2d0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801d2c4:	42b8      	cmp	r0, r7
 801d2c6:	da03      	bge.n	801d2d0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801d2c8:	1410      	asrs	r0, r2, #16
 801d2ca:	d401      	bmi.n	801d2d0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801d2cc:	42b0      	cmp	r0, r6
 801d2ce:	db07      	blt.n	801d2e0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801d2d0:	9811      	ldr	r0, [sp, #68]	; 0x44
 801d2d2:	4401      	add	r1, r0
 801d2d4:	9812      	ldr	r0, [sp, #72]	; 0x48
 801d2d6:	3b01      	subs	r3, #1
 801d2d8:	4402      	add	r2, r0
 801d2da:	3402      	adds	r4, #2
 801d2dc:	e7ee      	b.n	801d2bc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801d2de:	d017      	beq.n	801d310 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801d2e0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801d2e2:	1e58      	subs	r0, r3, #1
 801d2e4:	fb05 1500 	mla	r5, r5, r0, r1
 801d2e8:	142d      	asrs	r5, r5, #16
 801d2ea:	d409      	bmi.n	801d300 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801d2ec:	42bd      	cmp	r5, r7
 801d2ee:	da07      	bge.n	801d300 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801d2f0:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801d2f2:	fb05 2000 	mla	r0, r5, r0, r2
 801d2f6:	1400      	asrs	r0, r0, #16
 801d2f8:	d402      	bmi.n	801d300 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801d2fa:	42b0      	cmp	r0, r6
 801d2fc:	f2c0 80bc 	blt.w	801d478 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 801d300:	2600      	movs	r6, #0
 801d302:	1998      	adds	r0, r3, r6
 801d304:	2800      	cmp	r0, #0
 801d306:	dc3e      	bgt.n	801d386 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 801d308:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801d30c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801d310:	f1bb 0f00 	cmp.w	fp, #0
 801d314:	f340 811b 	ble.w	801d54e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801d318:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d31c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d320:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801d324:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d326:	f1bb 0b01 	subs.w	fp, fp, #1
 801d32a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d32e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d332:	eeb0 6a62 	vmov.f32	s12, s5
 801d336:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d33a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d33e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d342:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801d346:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d34a:	eeb0 6a43 	vmov.f32	s12, s6
 801d34e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d352:	ee12 2a90 	vmov	r2, s5
 801d356:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d35a:	fb92 f3f3 	sdiv	r3, r2, r3
 801d35e:	ee13 2a10 	vmov	r2, s6
 801d362:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d366:	9311      	str	r3, [sp, #68]	; 0x44
 801d368:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d36a:	fb92 f3f3 	sdiv	r3, r2, r3
 801d36e:	9a03      	ldr	r2, [sp, #12]
 801d370:	9312      	str	r3, [sp, #72]	; 0x48
 801d372:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801d376:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d378:	eeb0 3a67 	vmov.f32	s6, s15
 801d37c:	bf08      	it	eq
 801d37e:	4613      	moveq	r3, r2
 801d380:	eef0 2a47 	vmov.f32	s5, s14
 801d384:	e789      	b.n	801d29a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801d386:	140f      	asrs	r7, r1, #16
 801d388:	d426      	bmi.n	801d3d8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801d38a:	f8de 5008 	ldr.w	r5, [lr, #8]
 801d38e:	42bd      	cmp	r5, r7
 801d390:	dd22      	ble.n	801d3d8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801d392:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801d396:	d41f      	bmi.n	801d3d8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801d398:	f8de 000c 	ldr.w	r0, [lr, #12]
 801d39c:	4560      	cmp	r0, ip
 801d39e:	dd1b      	ble.n	801d3d8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801d3a0:	9800      	ldr	r0, [sp, #0]
 801d3a2:	b22d      	sxth	r5, r5
 801d3a4:	fb0c 0505 	mla	r5, ip, r5, r0
 801d3a8:	5de8      	ldrb	r0, [r5, r7]
 801d3aa:	9d01      	ldr	r5, [sp, #4]
 801d3ac:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 801d3b0:	0e07      	lsrs	r7, r0, #24
 801d3b2:	2fff      	cmp	r7, #255	; 0xff
 801d3b4:	d116      	bne.n	801d3e4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801d3b6:	f06f 0501 	mvn.w	r5, #1
 801d3ba:	fb05 f706 	mul.w	r7, r5, r6
 801d3be:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801d3c2:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801d3c6:	0945      	lsrs	r5, r0, #5
 801d3c8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d3cc:	ea4c 0505 	orr.w	r5, ip, r5
 801d3d0:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801d3d4:	4305      	orrs	r5, r0
 801d3d6:	53e5      	strh	r5, [r4, r7]
 801d3d8:	9811      	ldr	r0, [sp, #68]	; 0x44
 801d3da:	4401      	add	r1, r0
 801d3dc:	9812      	ldr	r0, [sp, #72]	; 0x48
 801d3de:	3e01      	subs	r6, #1
 801d3e0:	4402      	add	r2, r0
 801d3e2:	e78e      	b.n	801d302 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801d3e4:	b2fd      	uxtb	r5, r7
 801d3e6:	2f00      	cmp	r7, #0
 801d3e8:	d0f6      	beq.n	801d3d8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801d3ea:	f06f 0701 	mvn.w	r7, #1
 801d3ee:	4377      	muls	r7, r6
 801d3f0:	fa1f f985 	uxth.w	r9, r5
 801d3f4:	f834 8007 	ldrh.w	r8, [r4, r7]
 801d3f8:	9702      	str	r7, [sp, #8]
 801d3fa:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801d3fe:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801d402:	43ed      	mvns	r5, r5
 801d404:	b2ed      	uxtb	r5, r5
 801d406:	fb17 f709 	smulbb	r7, r7, r9
 801d40a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d40e:	fb0c 7c05 	mla	ip, ip, r5, r7
 801d412:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801d416:	ea4f 07e8 	mov.w	r7, r8, asr #3
 801d41a:	b2c0      	uxtb	r0, r0
 801d41c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801d420:	fa5f f888 	uxtb.w	r8, r8
 801d424:	fb10 f009 	smulbb	r0, r0, r9
 801d428:	fb08 0005 	mla	r0, r8, r5, r0
 801d42c:	b280      	uxth	r0, r0
 801d42e:	fa1f fc8c 	uxth.w	ip, ip
 801d432:	fb1a fa09 	smulbb	sl, sl, r9
 801d436:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801d43a:	fb07 a705 	mla	r7, r7, r5, sl
 801d43e:	f100 0a01 	add.w	sl, r0, #1
 801d442:	f10c 0501 	add.w	r5, ip, #1
 801d446:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801d44a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801d44e:	b2bf      	uxth	r7, r7
 801d450:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801d454:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801d458:	ea4a 0c0c 	orr.w	ip, sl, ip
 801d45c:	f107 0a01 	add.w	sl, r7, #1
 801d460:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801d464:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d468:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801d46c:	9802      	ldr	r0, [sp, #8]
 801d46e:	ea4c 0c0a 	orr.w	ip, ip, sl
 801d472:	f824 c000 	strh.w	ip, [r4, r0]
 801d476:	e7af      	b.n	801d3d8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801d478:	f04f 0800 	mov.w	r8, #0
 801d47c:	eba3 0008 	sub.w	r0, r3, r8
 801d480:	2800      	cmp	r0, #0
 801d482:	f77f af41 	ble.w	801d308 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801d486:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801d48a:	9f00      	ldr	r7, [sp, #0]
 801d48c:	1410      	asrs	r0, r2, #16
 801d48e:	140d      	asrs	r5, r1, #16
 801d490:	fb06 7000 	mla	r0, r6, r0, r7
 801d494:	5d40      	ldrb	r0, [r0, r5]
 801d496:	9d01      	ldr	r5, [sp, #4]
 801d498:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801d49c:	0e2e      	lsrs	r6, r5, #24
 801d49e:	2eff      	cmp	r6, #255	; 0xff
 801d4a0:	d112      	bne.n	801d4c8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 801d4a2:	482c      	ldr	r0, [pc, #176]	; (801d554 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 801d4a4:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801d4a8:	0968      	lsrs	r0, r5, #5
 801d4aa:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d4ae:	4330      	orrs	r0, r6
 801d4b0:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801d4b4:	4328      	orrs	r0, r5
 801d4b6:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 801d4ba:	9811      	ldr	r0, [sp, #68]	; 0x44
 801d4bc:	4401      	add	r1, r0
 801d4be:	9812      	ldr	r0, [sp, #72]	; 0x48
 801d4c0:	f108 0801 	add.w	r8, r8, #1
 801d4c4:	4402      	add	r2, r0
 801d4c6:	e7d9      	b.n	801d47c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801d4c8:	b2f0      	uxtb	r0, r6
 801d4ca:	2e00      	cmp	r6, #0
 801d4cc:	d0f5      	beq.n	801d4ba <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801d4ce:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 801d4d2:	fa1f f980 	uxth.w	r9, r0
 801d4d6:	ea4f 272c 	mov.w	r7, ip, asr #8
 801d4da:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801d4de:	43c0      	mvns	r0, r0
 801d4e0:	b2c0      	uxtb	r0, r0
 801d4e2:	fb16 f609 	smulbb	r6, r6, r9
 801d4e6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d4ea:	fb07 6700 	mla	r7, r7, r0, r6
 801d4ee:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801d4f2:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801d4f6:	b2ed      	uxtb	r5, r5
 801d4f8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801d4fc:	fa5f fc8c 	uxtb.w	ip, ip
 801d500:	fb15 f509 	smulbb	r5, r5, r9
 801d504:	fb0c 5500 	mla	r5, ip, r0, r5
 801d508:	b2bf      	uxth	r7, r7
 801d50a:	fb1a fa09 	smulbb	sl, sl, r9
 801d50e:	b2ad      	uxth	r5, r5
 801d510:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d514:	fb06 a600 	mla	r6, r6, r0, sl
 801d518:	1c78      	adds	r0, r7, #1
 801d51a:	f105 0a01 	add.w	sl, r5, #1
 801d51e:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801d522:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801d526:	b2b6      	uxth	r6, r6
 801d528:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801d52c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801d530:	ea4a 0707 	orr.w	r7, sl, r7
 801d534:	f106 0a01 	add.w	sl, r6, #1
 801d538:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801d53c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d540:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801d544:	ea47 070a 	orr.w	r7, r7, sl
 801d548:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801d54c:	e7b5      	b.n	801d4ba <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801d54e:	b005      	add	sp, #20
 801d550:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d554:	fffff800 	.word	0xfffff800

0801d558 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d558:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d55c:	b087      	sub	sp, #28
 801d55e:	468b      	mov	fp, r1
 801d560:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801d562:	9204      	str	r2, [sp, #16]
 801d564:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801d568:	9205      	str	r2, [sp, #20]
 801d56a:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801d56e:	6861      	ldr	r1, [r4, #4]
 801d570:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801d574:	fb01 2000 	mla	r0, r1, r0, r2
 801d578:	6822      	ldr	r2, [r4, #0]
 801d57a:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801d57e:	f8de 2000 	ldr.w	r2, [lr]
 801d582:	9201      	str	r2, [sp, #4]
 801d584:	f8de 2004 	ldr.w	r2, [lr, #4]
 801d588:	9202      	str	r2, [sp, #8]
 801d58a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801d58e:	f1bb 0f00 	cmp.w	fp, #0
 801d592:	dc03      	bgt.n	801d59c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 801d594:	9a04      	ldr	r2, [sp, #16]
 801d596:	2a00      	cmp	r2, #0
 801d598:	f340 8142 	ble.w	801d820 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801d59c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801d59e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801d5a2:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801d5a6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801d5aa:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801d5ac:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801d5b0:	2b00      	cmp	r3, #0
 801d5b2:	dd0e      	ble.n	801d5d2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801d5b4:	140c      	asrs	r4, r1, #16
 801d5b6:	d405      	bmi.n	801d5c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801d5b8:	42bc      	cmp	r4, r7
 801d5ba:	da03      	bge.n	801d5c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801d5bc:	1414      	asrs	r4, r2, #16
 801d5be:	d401      	bmi.n	801d5c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801d5c0:	42b4      	cmp	r4, r6
 801d5c2:	db07      	blt.n	801d5d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801d5c4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801d5c6:	4421      	add	r1, r4
 801d5c8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801d5ca:	3b01      	subs	r3, #1
 801d5cc:	4422      	add	r2, r4
 801d5ce:	3002      	adds	r0, #2
 801d5d0:	e7ee      	b.n	801d5b0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801d5d2:	d019      	beq.n	801d608 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801d5d4:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801d5d6:	1e5c      	subs	r4, r3, #1
 801d5d8:	fb05 1504 	mla	r5, r5, r4, r1
 801d5dc:	142d      	asrs	r5, r5, #16
 801d5de:	d409      	bmi.n	801d5f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801d5e0:	42bd      	cmp	r5, r7
 801d5e2:	da07      	bge.n	801d5f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801d5e4:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801d5e6:	fb05 2404 	mla	r4, r5, r4, r2
 801d5ea:	1424      	asrs	r4, r4, #16
 801d5ec:	d402      	bmi.n	801d5f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801d5ee:	42b4      	cmp	r4, r6
 801d5f0:	f2c0 80b1 	blt.w	801d756 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801d5f4:	f04f 0800 	mov.w	r8, #0
 801d5f8:	eb03 0408 	add.w	r4, r3, r8
 801d5fc:	2c00      	cmp	r4, #0
 801d5fe:	dc3e      	bgt.n	801d67e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801d600:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801d604:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d608:	f1bb 0f00 	cmp.w	fp, #0
 801d60c:	f340 8108 	ble.w	801d820 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801d610:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d614:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d618:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801d61c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d61e:	f1bb 0b01 	subs.w	fp, fp, #1
 801d622:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d626:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d62a:	eeb0 6a62 	vmov.f32	s12, s5
 801d62e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d632:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d636:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d63a:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801d63e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d642:	eeb0 6a43 	vmov.f32	s12, s6
 801d646:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d64a:	ee12 2a90 	vmov	r2, s5
 801d64e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d652:	fb92 f3f3 	sdiv	r3, r2, r3
 801d656:	ee13 2a10 	vmov	r2, s6
 801d65a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d65e:	9313      	str	r3, [sp, #76]	; 0x4c
 801d660:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d662:	fb92 f3f3 	sdiv	r3, r2, r3
 801d666:	9a04      	ldr	r2, [sp, #16]
 801d668:	9314      	str	r3, [sp, #80]	; 0x50
 801d66a:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801d66e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d670:	eeb0 3a67 	vmov.f32	s6, s15
 801d674:	bf08      	it	eq
 801d676:	4613      	moveq	r3, r2
 801d678:	eef0 2a47 	vmov.f32	s5, s14
 801d67c:	e787      	b.n	801d58e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 801d67e:	140e      	asrs	r6, r1, #16
 801d680:	d462      	bmi.n	801d748 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801d682:	f8de 5008 	ldr.w	r5, [lr, #8]
 801d686:	42b5      	cmp	r5, r6
 801d688:	dd5e      	ble.n	801d748 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801d68a:	1417      	asrs	r7, r2, #16
 801d68c:	d45c      	bmi.n	801d748 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801d68e:	f8de 400c 	ldr.w	r4, [lr, #12]
 801d692:	42bc      	cmp	r4, r7
 801d694:	dd58      	ble.n	801d748 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801d696:	b22d      	sxth	r5, r5
 801d698:	fb07 6505 	mla	r5, r7, r5, r6
 801d69c:	9c02      	ldr	r4, [sp, #8]
 801d69e:	5d66      	ldrb	r6, [r4, r5]
 801d6a0:	2e00      	cmp	r6, #0
 801d6a2:	d051      	beq.n	801d748 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801d6a4:	9c01      	ldr	r4, [sp, #4]
 801d6a6:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 801d6aa:	f06f 0401 	mvn.w	r4, #1
 801d6ae:	fb04 f408 	mul.w	r4, r4, r8
 801d6b2:	9403      	str	r4, [sp, #12]
 801d6b4:	5b05      	ldrh	r5, [r0, r4]
 801d6b6:	9c05      	ldr	r4, [sp, #20]
 801d6b8:	4366      	muls	r6, r4
 801d6ba:	1c74      	adds	r4, r6, #1
 801d6bc:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801d6c0:	1224      	asrs	r4, r4, #8
 801d6c2:	b2a7      	uxth	r7, r4
 801d6c4:	122e      	asrs	r6, r5, #8
 801d6c6:	43e4      	mvns	r4, r4
 801d6c8:	b2e4      	uxtb	r4, r4
 801d6ca:	ea4f 2c29 	mov.w	ip, r9, asr #8
 801d6ce:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801d6d2:	fb16 f604 	smulbb	r6, r6, r4
 801d6d6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801d6da:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d6de:	00ed      	lsls	r5, r5, #3
 801d6e0:	fb0c 6c07 	mla	ip, ip, r7, r6
 801d6e4:	b2ed      	uxtb	r5, r5
 801d6e6:	ea4f 06e9 	mov.w	r6, r9, asr #3
 801d6ea:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801d6ee:	fb15 f504 	smulbb	r5, r5, r4
 801d6f2:	fa5f f989 	uxtb.w	r9, r9
 801d6f6:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801d6fa:	fb09 5507 	mla	r5, r9, r7, r5
 801d6fe:	fb1a fa04 	smulbb	sl, sl, r4
 801d702:	fa1f fc8c 	uxth.w	ip, ip
 801d706:	b2ad      	uxth	r5, r5
 801d708:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d70c:	fb06 a607 	mla	r6, r6, r7, sl
 801d710:	f10c 0401 	add.w	r4, ip, #1
 801d714:	f105 0a01 	add.w	sl, r5, #1
 801d718:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801d71c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801d720:	b2b6      	uxth	r6, r6
 801d722:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801d726:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801d72a:	ea4a 0c0c 	orr.w	ip, sl, ip
 801d72e:	f106 0a01 	add.w	sl, r6, #1
 801d732:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801d736:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d73a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801d73e:	9c03      	ldr	r4, [sp, #12]
 801d740:	ea4c 0c0a 	orr.w	ip, ip, sl
 801d744:	f820 c004 	strh.w	ip, [r0, r4]
 801d748:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801d74a:	4421      	add	r1, r4
 801d74c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801d74e:	f108 38ff 	add.w	r8, r8, #4294967295
 801d752:	4422      	add	r2, r4
 801d754:	e750      	b.n	801d5f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801d756:	f04f 0900 	mov.w	r9, #0
 801d75a:	eba3 0409 	sub.w	r4, r3, r9
 801d75e:	2c00      	cmp	r4, #0
 801d760:	f77f af4e 	ble.w	801d600 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801d764:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801d768:	140d      	asrs	r5, r1, #16
 801d76a:	1414      	asrs	r4, r2, #16
 801d76c:	fb06 5404 	mla	r4, r6, r4, r5
 801d770:	9d02      	ldr	r5, [sp, #8]
 801d772:	5d2e      	ldrb	r6, [r5, r4]
 801d774:	2e00      	cmp	r6, #0
 801d776:	d04c      	beq.n	801d812 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 801d778:	9d01      	ldr	r5, [sp, #4]
 801d77a:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 801d77e:	9c05      	ldr	r4, [sp, #20]
 801d780:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801d784:	4366      	muls	r6, r4
 801d786:	1c74      	adds	r4, r6, #1
 801d788:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801d78c:	1224      	asrs	r4, r4, #8
 801d78e:	b2a7      	uxth	r7, r4
 801d790:	122e      	asrs	r6, r5, #8
 801d792:	43e4      	mvns	r4, r4
 801d794:	b2e4      	uxtb	r4, r4
 801d796:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801d79a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801d79e:	fb16 f604 	smulbb	r6, r6, r4
 801d7a2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801d7a6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d7aa:	00ed      	lsls	r5, r5, #3
 801d7ac:	fb0c 6c07 	mla	ip, ip, r7, r6
 801d7b0:	b2ed      	uxtb	r5, r5
 801d7b2:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801d7b6:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801d7ba:	fb15 f504 	smulbb	r5, r5, r4
 801d7be:	fa5f f888 	uxtb.w	r8, r8
 801d7c2:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801d7c6:	fb08 5507 	mla	r5, r8, r7, r5
 801d7ca:	fb1a fa04 	smulbb	sl, sl, r4
 801d7ce:	fa1f fc8c 	uxth.w	ip, ip
 801d7d2:	b2ad      	uxth	r5, r5
 801d7d4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d7d8:	fb06 a607 	mla	r6, r6, r7, sl
 801d7dc:	f10c 0401 	add.w	r4, ip, #1
 801d7e0:	f105 0a01 	add.w	sl, r5, #1
 801d7e4:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801d7e8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801d7ec:	b2b6      	uxth	r6, r6
 801d7ee:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801d7f2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801d7f6:	ea4a 0c0c 	orr.w	ip, sl, ip
 801d7fa:	f106 0a01 	add.w	sl, r6, #1
 801d7fe:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801d802:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d806:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801d80a:	ea4c 0c0a 	orr.w	ip, ip, sl
 801d80e:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801d812:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801d814:	4421      	add	r1, r4
 801d816:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801d818:	f109 0901 	add.w	r9, r9, #1
 801d81c:	4422      	add	r2, r4
 801d81e:	e79c      	b.n	801d75a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 801d820:	b007      	add	sp, #28
 801d822:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801d826 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d826:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d82a:	b085      	sub	sp, #20
 801d82c:	468b      	mov	fp, r1
 801d82e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801d830:	9203      	str	r2, [sp, #12]
 801d832:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 801d836:	6861      	ldr	r1, [r4, #4]
 801d838:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801d83c:	fb01 2000 	mla	r0, r1, r0, r2
 801d840:	6822      	ldr	r2, [r4, #0]
 801d842:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801d846:	f8d8 2000 	ldr.w	r2, [r8]
 801d84a:	9200      	str	r2, [sp, #0]
 801d84c:	f8d8 2004 	ldr.w	r2, [r8, #4]
 801d850:	9201      	str	r2, [sp, #4]
 801d852:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801d856:	f1bb 0f00 	cmp.w	fp, #0
 801d85a:	dc03      	bgt.n	801d864 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801d85c:	9a03      	ldr	r2, [sp, #12]
 801d85e:	2a00      	cmp	r2, #0
 801d860:	f340 8146 	ble.w	801daf0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801d864:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801d866:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801d86a:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801d86e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801d872:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801d874:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801d878:	2b00      	cmp	r3, #0
 801d87a:	dd0e      	ble.n	801d89a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801d87c:	140c      	asrs	r4, r1, #16
 801d87e:	d405      	bmi.n	801d88c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801d880:	42bc      	cmp	r4, r7
 801d882:	da03      	bge.n	801d88c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801d884:	1414      	asrs	r4, r2, #16
 801d886:	d401      	bmi.n	801d88c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801d888:	42b4      	cmp	r4, r6
 801d88a:	db07      	blt.n	801d89c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801d88c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801d88e:	4421      	add	r1, r4
 801d890:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801d892:	3b01      	subs	r3, #1
 801d894:	4422      	add	r2, r4
 801d896:	3002      	adds	r0, #2
 801d898:	e7ee      	b.n	801d878 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801d89a:	d017      	beq.n	801d8cc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801d89c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801d89e:	1e5c      	subs	r4, r3, #1
 801d8a0:	fb05 1504 	mla	r5, r5, r4, r1
 801d8a4:	142d      	asrs	r5, r5, #16
 801d8a6:	d409      	bmi.n	801d8bc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801d8a8:	42bd      	cmp	r5, r7
 801d8aa:	da07      	bge.n	801d8bc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801d8ac:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801d8ae:	fb05 2404 	mla	r4, r5, r4, r2
 801d8b2:	1424      	asrs	r4, r4, #16
 801d8b4:	d402      	bmi.n	801d8bc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801d8b6:	42b4      	cmp	r4, r6
 801d8b8:	f2c0 80b3 	blt.w	801da22 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801d8bc:	2600      	movs	r6, #0
 801d8be:	199c      	adds	r4, r3, r6
 801d8c0:	2c00      	cmp	r4, #0
 801d8c2:	dc3e      	bgt.n	801d942 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801d8c4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801d8c8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d8cc:	f1bb 0f00 	cmp.w	fp, #0
 801d8d0:	f340 810e 	ble.w	801daf0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801d8d4:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d8d8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d8dc:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801d8e0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d8e2:	f1bb 0b01 	subs.w	fp, fp, #1
 801d8e6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d8ea:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d8ee:	eeb0 6a62 	vmov.f32	s12, s5
 801d8f2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d8f6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d8fa:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d8fe:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801d902:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d906:	eeb0 6a43 	vmov.f32	s12, s6
 801d90a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d90e:	ee12 2a90 	vmov	r2, s5
 801d912:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d916:	fb92 f3f3 	sdiv	r3, r2, r3
 801d91a:	ee13 2a10 	vmov	r2, s6
 801d91e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d922:	9311      	str	r3, [sp, #68]	; 0x44
 801d924:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d926:	fb92 f3f3 	sdiv	r3, r2, r3
 801d92a:	9a03      	ldr	r2, [sp, #12]
 801d92c:	9312      	str	r3, [sp, #72]	; 0x48
 801d92e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801d932:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d934:	eeb0 3a67 	vmov.f32	s6, s15
 801d938:	bf08      	it	eq
 801d93a:	4613      	moveq	r3, r2
 801d93c:	eef0 2a47 	vmov.f32	s5, s14
 801d940:	e789      	b.n	801d856 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801d942:	140f      	asrs	r7, r1, #16
 801d944:	d418      	bmi.n	801d978 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801d946:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801d94a:	42bd      	cmp	r5, r7
 801d94c:	dd14      	ble.n	801d978 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801d94e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801d952:	d411      	bmi.n	801d978 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801d954:	f8d8 400c 	ldr.w	r4, [r8, #12]
 801d958:	4564      	cmp	r4, ip
 801d95a:	dd0d      	ble.n	801d978 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801d95c:	b22d      	sxth	r5, r5
 801d95e:	fb0c 7505 	mla	r5, ip, r5, r7
 801d962:	9c01      	ldr	r4, [sp, #4]
 801d964:	5d64      	ldrb	r4, [r4, r5]
 801d966:	2cff      	cmp	r4, #255	; 0xff
 801d968:	d10c      	bne.n	801d984 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801d96a:	9c00      	ldr	r4, [sp, #0]
 801d96c:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 801d970:	f06f 0401 	mvn.w	r4, #1
 801d974:	4374      	muls	r4, r6
 801d976:	5305      	strh	r5, [r0, r4]
 801d978:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801d97a:	4421      	add	r1, r4
 801d97c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801d97e:	3e01      	subs	r6, #1
 801d980:	4422      	add	r2, r4
 801d982:	e79c      	b.n	801d8be <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801d984:	2c00      	cmp	r4, #0
 801d986:	d0f7      	beq.n	801d978 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801d988:	9f00      	ldr	r7, [sp, #0]
 801d98a:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 801d98e:	f06f 0501 	mvn.w	r5, #1
 801d992:	4375      	muls	r5, r6
 801d994:	9502      	str	r5, [sp, #8]
 801d996:	5b45      	ldrh	r5, [r0, r5]
 801d998:	fa1f fc84 	uxth.w	ip, r4
 801d99c:	122f      	asrs	r7, r5, #8
 801d99e:	43e4      	mvns	r4, r4
 801d9a0:	b2e4      	uxtb	r4, r4
 801d9a2:	ea4f 2e29 	mov.w	lr, r9, asr #8
 801d9a6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d9aa:	fb17 f704 	smulbb	r7, r7, r4
 801d9ae:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801d9b2:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801d9b6:	00ed      	lsls	r5, r5, #3
 801d9b8:	fb0e 7e0c 	mla	lr, lr, ip, r7
 801d9bc:	b2ed      	uxtb	r5, r5
 801d9be:	ea4f 07e9 	mov.w	r7, r9, asr #3
 801d9c2:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801d9c6:	fb15 f504 	smulbb	r5, r5, r4
 801d9ca:	fa5f f989 	uxtb.w	r9, r9
 801d9ce:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801d9d2:	fb09 550c 	mla	r5, r9, ip, r5
 801d9d6:	fb1a fa04 	smulbb	sl, sl, r4
 801d9da:	fa1f fe8e 	uxth.w	lr, lr
 801d9de:	b2ad      	uxth	r5, r5
 801d9e0:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801d9e4:	fb07 a70c 	mla	r7, r7, ip, sl
 801d9e8:	f10e 0401 	add.w	r4, lr, #1
 801d9ec:	f105 0a01 	add.w	sl, r5, #1
 801d9f0:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 801d9f4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801d9f8:	b2bf      	uxth	r7, r7
 801d9fa:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801d9fe:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801da02:	ea4a 0e0e 	orr.w	lr, sl, lr
 801da06:	f107 0a01 	add.w	sl, r7, #1
 801da0a:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801da0e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801da12:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801da16:	9c02      	ldr	r4, [sp, #8]
 801da18:	ea4e 0e0a 	orr.w	lr, lr, sl
 801da1c:	f820 e004 	strh.w	lr, [r0, r4]
 801da20:	e7aa      	b.n	801d978 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801da22:	f04f 0900 	mov.w	r9, #0
 801da26:	eba3 0409 	sub.w	r4, r3, r9
 801da2a:	2c00      	cmp	r4, #0
 801da2c:	f77f af4a 	ble.w	801d8c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801da30:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801da34:	1414      	asrs	r4, r2, #16
 801da36:	140d      	asrs	r5, r1, #16
 801da38:	fb06 5504 	mla	r5, r6, r4, r5
 801da3c:	9c01      	ldr	r4, [sp, #4]
 801da3e:	5d64      	ldrb	r4, [r4, r5]
 801da40:	2cff      	cmp	r4, #255	; 0xff
 801da42:	d10b      	bne.n	801da5c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801da44:	9c00      	ldr	r4, [sp, #0]
 801da46:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 801da4a:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 801da4e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801da50:	4421      	add	r1, r4
 801da52:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801da54:	f109 0901 	add.w	r9, r9, #1
 801da58:	4422      	add	r2, r4
 801da5a:	e7e4      	b.n	801da26 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801da5c:	2c00      	cmp	r4, #0
 801da5e:	d0f6      	beq.n	801da4e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801da60:	9e00      	ldr	r6, [sp, #0]
 801da62:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 801da66:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801da6a:	b2a7      	uxth	r7, r4
 801da6c:	122e      	asrs	r6, r5, #8
 801da6e:	43e4      	mvns	r4, r4
 801da70:	b2e4      	uxtb	r4, r4
 801da72:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801da76:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801da7a:	fb16 f604 	smulbb	r6, r6, r4
 801da7e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801da82:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801da86:	00ed      	lsls	r5, r5, #3
 801da88:	fb0c 6c07 	mla	ip, ip, r7, r6
 801da8c:	b2ed      	uxtb	r5, r5
 801da8e:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801da92:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801da96:	fb15 f504 	smulbb	r5, r5, r4
 801da9a:	fa5f fe8e 	uxtb.w	lr, lr
 801da9e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801daa2:	fb0e 5507 	mla	r5, lr, r7, r5
 801daa6:	fb1a fa04 	smulbb	sl, sl, r4
 801daaa:	fa1f fc8c 	uxth.w	ip, ip
 801daae:	b2ad      	uxth	r5, r5
 801dab0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801dab4:	fb06 a607 	mla	r6, r6, r7, sl
 801dab8:	f10c 0401 	add.w	r4, ip, #1
 801dabc:	f105 0a01 	add.w	sl, r5, #1
 801dac0:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801dac4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801dac8:	b2b6      	uxth	r6, r6
 801daca:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801dace:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801dad2:	ea4a 0c0c 	orr.w	ip, sl, ip
 801dad6:	f106 0a01 	add.w	sl, r6, #1
 801dada:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801dade:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801dae2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801dae6:	ea4c 0c0a 	orr.w	ip, ip, sl
 801daea:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801daee:	e7ae      	b.n	801da4e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801daf0:	b005      	add	sp, #20
 801daf2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801daf6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801daf6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dafa:	b085      	sub	sp, #20
 801dafc:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801dafe:	9203      	str	r2, [sp, #12]
 801db00:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 801db04:	9201      	str	r2, [sp, #4]
 801db06:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801db0a:	9100      	str	r1, [sp, #0]
 801db0c:	6841      	ldr	r1, [r0, #4]
 801db0e:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801db12:	fb01 2404 	mla	r4, r1, r4, r2
 801db16:	6802      	ldr	r2, [r0, #0]
 801db18:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801db1c:	f8de 2000 	ldr.w	r2, [lr]
 801db20:	9202      	str	r2, [sp, #8]
 801db22:	9a01      	ldr	r2, [sp, #4]
 801db24:	43d6      	mvns	r6, r2
 801db26:	b2f6      	uxtb	r6, r6
 801db28:	9a00      	ldr	r2, [sp, #0]
 801db2a:	2a00      	cmp	r2, #0
 801db2c:	dc03      	bgt.n	801db36 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801db2e:	9a03      	ldr	r2, [sp, #12]
 801db30:	2a00      	cmp	r2, #0
 801db32:	f340 8124 	ble.w	801dd7e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801db36:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801db38:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801db3c:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801db40:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801db44:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801db46:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801db4a:	2b00      	cmp	r3, #0
 801db4c:	dd0e      	ble.n	801db6c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801db4e:	1408      	asrs	r0, r1, #16
 801db50:	d405      	bmi.n	801db5e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801db52:	4560      	cmp	r0, ip
 801db54:	da03      	bge.n	801db5e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801db56:	1410      	asrs	r0, r2, #16
 801db58:	d401      	bmi.n	801db5e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801db5a:	42b8      	cmp	r0, r7
 801db5c:	db07      	blt.n	801db6e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801db5e:	9811      	ldr	r0, [sp, #68]	; 0x44
 801db60:	4401      	add	r1, r0
 801db62:	9812      	ldr	r0, [sp, #72]	; 0x48
 801db64:	3b01      	subs	r3, #1
 801db66:	4402      	add	r2, r0
 801db68:	3402      	adds	r4, #2
 801db6a:	e7ee      	b.n	801db4a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801db6c:	d06e      	beq.n	801dc4c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801db6e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801db70:	1e58      	subs	r0, r3, #1
 801db72:	fb05 1500 	mla	r5, r5, r0, r1
 801db76:	142d      	asrs	r5, r5, #16
 801db78:	d45c      	bmi.n	801dc34 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801db7a:	4565      	cmp	r5, ip
 801db7c:	da5a      	bge.n	801dc34 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801db7e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801db80:	fb05 2000 	mla	r0, r5, r0, r2
 801db84:	1400      	asrs	r0, r0, #16
 801db86:	d455      	bmi.n	801dc34 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801db88:	42b8      	cmp	r0, r7
 801db8a:	da53      	bge.n	801dc34 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801db8c:	f8bd b004 	ldrh.w	fp, [sp, #4]
 801db90:	4699      	mov	r9, r3
 801db92:	46a2      	mov	sl, r4
 801db94:	f1b9 0f00 	cmp.w	r9, #0
 801db98:	dd54      	ble.n	801dc44 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801db9a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801db9e:	140d      	asrs	r5, r1, #16
 801dba0:	1410      	asrs	r0, r2, #16
 801dba2:	fb07 5000 	mla	r0, r7, r0, r5
 801dba6:	9d02      	ldr	r5, [sp, #8]
 801dba8:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801dbac:	f8ba 5000 	ldrh.w	r5, [sl]
 801dbb0:	122f      	asrs	r7, r5, #8
 801dbb2:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801dbb6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801dbba:	fb17 f706 	smulbb	r7, r7, r6
 801dbbe:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801dbc2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801dbc6:	00ed      	lsls	r5, r5, #3
 801dbc8:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801dbcc:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801dbd0:	10c7      	asrs	r7, r0, #3
 801dbd2:	b2ed      	uxtb	r5, r5
 801dbd4:	00c0      	lsls	r0, r0, #3
 801dbd6:	fb18 f806 	smulbb	r8, r8, r6
 801dbda:	fb15 f506 	smulbb	r5, r5, r6
 801dbde:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801dbe2:	b2c0      	uxtb	r0, r0
 801dbe4:	fa1f fc8c 	uxth.w	ip, ip
 801dbe8:	fb07 870b 	mla	r7, r7, fp, r8
 801dbec:	fb00 500b 	mla	r0, r0, fp, r5
 801dbf0:	b280      	uxth	r0, r0
 801dbf2:	b2bf      	uxth	r7, r7
 801dbf4:	f10c 0501 	add.w	r5, ip, #1
 801dbf8:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801dbfc:	f107 0801 	add.w	r8, r7, #1
 801dc00:	1c45      	adds	r5, r0, #1
 801dc02:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801dc06:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801dc0a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801dc0c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801dc10:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801dc14:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801dc18:	ea45 0c0c 	orr.w	ip, r5, ip
 801dc1c:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801dc20:	4401      	add	r1, r0
 801dc22:	9812      	ldr	r0, [sp, #72]	; 0x48
 801dc24:	ea4c 0c08 	orr.w	ip, ip, r8
 801dc28:	f82a cb02 	strh.w	ip, [sl], #2
 801dc2c:	4402      	add	r2, r0
 801dc2e:	f109 39ff 	add.w	r9, r9, #4294967295
 801dc32:	e7af      	b.n	801db94 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801dc34:	f8bd a004 	ldrh.w	sl, [sp, #4]
 801dc38:	f04f 0800 	mov.w	r8, #0
 801dc3c:	eb03 0008 	add.w	r0, r3, r8
 801dc40:	2800      	cmp	r0, #0
 801dc42:	dc41      	bgt.n	801dcc8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801dc44:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801dc48:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801dc4c:	9b00      	ldr	r3, [sp, #0]
 801dc4e:	2b00      	cmp	r3, #0
 801dc50:	f340 8095 	ble.w	801dd7e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801dc54:	ee30 0a04 	vadd.f32	s0, s0, s8
 801dc58:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801dc5c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801dc60:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801dc62:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801dc66:	ee31 1a05 	vadd.f32	s2, s2, s10
 801dc6a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801dc6e:	eef0 6a62 	vmov.f32	s13, s5
 801dc72:	ee61 7a27 	vmul.f32	s15, s2, s15
 801dc76:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801dc7a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801dc7e:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 801dc82:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801dc86:	eef0 6a43 	vmov.f32	s13, s6
 801dc8a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801dc8e:	ee12 2a90 	vmov	r2, s5
 801dc92:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801dc96:	fb92 f3f3 	sdiv	r3, r2, r3
 801dc9a:	ee13 2a10 	vmov	r2, s6
 801dc9e:	9311      	str	r3, [sp, #68]	; 0x44
 801dca0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801dca2:	fb92 f3f3 	sdiv	r3, r2, r3
 801dca6:	9312      	str	r3, [sp, #72]	; 0x48
 801dca8:	9b00      	ldr	r3, [sp, #0]
 801dcaa:	9a03      	ldr	r2, [sp, #12]
 801dcac:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801dcb0:	3b01      	subs	r3, #1
 801dcb2:	9300      	str	r3, [sp, #0]
 801dcb4:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 801dcb8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801dcba:	eeb0 3a67 	vmov.f32	s6, s15
 801dcbe:	bf08      	it	eq
 801dcc0:	4613      	moveq	r3, r2
 801dcc2:	eef0 2a47 	vmov.f32	s5, s14
 801dcc6:	e72f      	b.n	801db28 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801dcc8:	140f      	asrs	r7, r1, #16
 801dcca:	d451      	bmi.n	801dd70 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801dccc:	f8de 5008 	ldr.w	r5, [lr, #8]
 801dcd0:	42bd      	cmp	r5, r7
 801dcd2:	dd4d      	ble.n	801dd70 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801dcd4:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801dcd8:	d44a      	bmi.n	801dd70 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801dcda:	f8de 000c 	ldr.w	r0, [lr, #12]
 801dcde:	4560      	cmp	r0, ip
 801dce0:	dd46      	ble.n	801dd70 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801dce2:	b22d      	sxth	r5, r5
 801dce4:	fb0c 7505 	mla	r5, ip, r5, r7
 801dce8:	9802      	ldr	r0, [sp, #8]
 801dcea:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 801dcee:	f06f 0501 	mvn.w	r5, #1
 801dcf2:	fb05 fb08 	mul.w	fp, r5, r8
 801dcf6:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801dcfa:	f834 500b 	ldrh.w	r5, [r4, fp]
 801dcfe:	122f      	asrs	r7, r5, #8
 801dd00:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801dd04:	fb17 f706 	smulbb	r7, r7, r6
 801dd08:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801dd0c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801dd10:	00ed      	lsls	r5, r5, #3
 801dd12:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801dd16:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801dd1a:	10c7      	asrs	r7, r0, #3
 801dd1c:	b2ed      	uxtb	r5, r5
 801dd1e:	00c0      	lsls	r0, r0, #3
 801dd20:	fb19 f906 	smulbb	r9, r9, r6
 801dd24:	fb15 f506 	smulbb	r5, r5, r6
 801dd28:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801dd2c:	b2c0      	uxtb	r0, r0
 801dd2e:	fa1f fc8c 	uxth.w	ip, ip
 801dd32:	fb07 970a 	mla	r7, r7, sl, r9
 801dd36:	fb00 500a 	mla	r0, r0, sl, r5
 801dd3a:	b2bf      	uxth	r7, r7
 801dd3c:	b280      	uxth	r0, r0
 801dd3e:	f10c 0501 	add.w	r5, ip, #1
 801dd42:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801dd46:	f107 0901 	add.w	r9, r7, #1
 801dd4a:	1c45      	adds	r5, r0, #1
 801dd4c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801dd50:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801dd54:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801dd58:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801dd5c:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801dd60:	ea45 0c0c 	orr.w	ip, r5, ip
 801dd64:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801dd68:	ea4c 0c09 	orr.w	ip, ip, r9
 801dd6c:	f824 c00b 	strh.w	ip, [r4, fp]
 801dd70:	9811      	ldr	r0, [sp, #68]	; 0x44
 801dd72:	4401      	add	r1, r0
 801dd74:	9812      	ldr	r0, [sp, #72]	; 0x48
 801dd76:	f108 38ff 	add.w	r8, r8, #4294967295
 801dd7a:	4402      	add	r2, r0
 801dd7c:	e75e      	b.n	801dc3c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 801dd7e:	b005      	add	sp, #20
 801dd80:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801dd84 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801dd84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dd88:	b085      	sub	sp, #20
 801dd8a:	4693      	mov	fp, r2
 801dd8c:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801dd8e:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801dd90:	6870      	ldr	r0, [r6, #4]
 801dd92:	9101      	str	r1, [sp, #4]
 801dd94:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801dd98:	fb00 2404 	mla	r4, r0, r4, r2
 801dd9c:	6832      	ldr	r2, [r6, #0]
 801dd9e:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801dda2:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801dda6:	682a      	ldr	r2, [r5, #0]
 801dda8:	9202      	str	r2, [sp, #8]
 801ddaa:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801ddae:	9a01      	ldr	r2, [sp, #4]
 801ddb0:	2a00      	cmp	r2, #0
 801ddb2:	dc03      	bgt.n	801ddbc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801ddb4:	f1bb 0f00 	cmp.w	fp, #0
 801ddb8:	f340 809a 	ble.w	801def0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801ddbc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801ddbe:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801ddc2:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801ddc6:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801ddca:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801ddcc:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801ddd0:	2b00      	cmp	r3, #0
 801ddd2:	dd0c      	ble.n	801ddee <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801ddd4:	1406      	asrs	r6, r0, #16
 801ddd6:	d405      	bmi.n	801dde4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801ddd8:	454e      	cmp	r6, r9
 801ddda:	da03      	bge.n	801dde4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801dddc:	1416      	asrs	r6, r2, #16
 801ddde:	d401      	bmi.n	801dde4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801dde0:	4546      	cmp	r6, r8
 801dde2:	db05      	blt.n	801ddf0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801dde4:	4470      	add	r0, lr
 801dde6:	4462      	add	r2, ip
 801dde8:	3b01      	subs	r3, #1
 801ddea:	3402      	adds	r4, #2
 801ddec:	e7f0      	b.n	801ddd0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801ddee:	d00f      	beq.n	801de10 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801ddf0:	1e5e      	subs	r6, r3, #1
 801ddf2:	fb0e 0706 	mla	r7, lr, r6, r0
 801ddf6:	143f      	asrs	r7, r7, #16
 801ddf8:	d541      	bpl.n	801de7e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 801ddfa:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801ddfe:	4698      	mov	r8, r3
 801de00:	9603      	str	r6, [sp, #12]
 801de02:	f1b8 0f00 	cmp.w	r8, #0
 801de06:	dc56      	bgt.n	801deb6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 801de08:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801de0c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801de10:	9b01      	ldr	r3, [sp, #4]
 801de12:	2b00      	cmp	r3, #0
 801de14:	dd6c      	ble.n	801def0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801de16:	ee30 0a04 	vadd.f32	s0, s0, s8
 801de1a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801de1e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801de22:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801de24:	ee31 1a05 	vadd.f32	s2, s2, s10
 801de28:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801de2c:	eeb0 6a62 	vmov.f32	s12, s5
 801de30:	ee61 7a27 	vmul.f32	s15, s2, s15
 801de34:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801de38:	ee77 2a62 	vsub.f32	s5, s14, s5
 801de3c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801de40:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801de44:	eeb0 6a43 	vmov.f32	s12, s6
 801de48:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801de4c:	ee12 2a90 	vmov	r2, s5
 801de50:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801de54:	fb92 fef3 	sdiv	lr, r2, r3
 801de58:	ee13 2a10 	vmov	r2, s6
 801de5c:	fb92 fcf3 	sdiv	ip, r2, r3
 801de60:	9b01      	ldr	r3, [sp, #4]
 801de62:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801de66:	3b01      	subs	r3, #1
 801de68:	9301      	str	r3, [sp, #4]
 801de6a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801de6e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801de70:	eeb0 3a67 	vmov.f32	s6, s15
 801de74:	bf08      	it	eq
 801de76:	465b      	moveq	r3, fp
 801de78:	eef0 2a47 	vmov.f32	s5, s14
 801de7c:	e797      	b.n	801ddae <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801de7e:	454f      	cmp	r7, r9
 801de80:	dabb      	bge.n	801ddfa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801de82:	fb0c 2606 	mla	r6, ip, r6, r2
 801de86:	1436      	asrs	r6, r6, #16
 801de88:	d4b7      	bmi.n	801ddfa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801de8a:	4546      	cmp	r6, r8
 801de8c:	dab5      	bge.n	801ddfa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801de8e:	461e      	mov	r6, r3
 801de90:	46a0      	mov	r8, r4
 801de92:	2e00      	cmp	r6, #0
 801de94:	ddb8      	ble.n	801de08 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801de96:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801de9a:	9902      	ldr	r1, [sp, #8]
 801de9c:	1417      	asrs	r7, r2, #16
 801de9e:	ea4f 4920 	mov.w	r9, r0, asr #16
 801dea2:	fb0a 9707 	mla	r7, sl, r7, r9
 801dea6:	4470      	add	r0, lr
 801dea8:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801deac:	f828 7b02 	strh.w	r7, [r8], #2
 801deb0:	4462      	add	r2, ip
 801deb2:	3e01      	subs	r6, #1
 801deb4:	e7ed      	b.n	801de92 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801deb6:	ea5f 4920 	movs.w	r9, r0, asr #16
 801deba:	d414      	bmi.n	801dee6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801debc:	68ae      	ldr	r6, [r5, #8]
 801debe:	454e      	cmp	r6, r9
 801dec0:	dd11      	ble.n	801dee6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801dec2:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801dec6:	d40e      	bmi.n	801dee6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801dec8:	68ef      	ldr	r7, [r5, #12]
 801deca:	4557      	cmp	r7, sl
 801decc:	dd0b      	ble.n	801dee6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801dece:	b236      	sxth	r6, r6
 801ded0:	fb0a 9606 	mla	r6, sl, r6, r9
 801ded4:	9f02      	ldr	r7, [sp, #8]
 801ded6:	f06f 0101 	mvn.w	r1, #1
 801deda:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801dede:	fb01 f608 	mul.w	r6, r1, r8
 801dee2:	9903      	ldr	r1, [sp, #12]
 801dee4:	538f      	strh	r7, [r1, r6]
 801dee6:	4470      	add	r0, lr
 801dee8:	4462      	add	r2, ip
 801deea:	f108 38ff 	add.w	r8, r8, #4294967295
 801deee:	e788      	b.n	801de02 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801def0:	b005      	add	sp, #20
 801def2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801def6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801def6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801defa:	b087      	sub	sp, #28
 801defc:	468b      	mov	fp, r1
 801defe:	9815      	ldr	r0, [sp, #84]	; 0x54
 801df00:	9203      	str	r2, [sp, #12]
 801df02:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801df06:	9204      	str	r2, [sp, #16]
 801df08:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 801df0c:	6841      	ldr	r1, [r0, #4]
 801df0e:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801df12:	fb01 2505 	mla	r5, r1, r5, r2
 801df16:	6802      	ldr	r2, [r0, #0]
 801df18:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801df1c:	f8d9 2000 	ldr.w	r2, [r9]
 801df20:	9201      	str	r2, [sp, #4]
 801df22:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801df26:	f1bb 0f00 	cmp.w	fp, #0
 801df2a:	dc03      	bgt.n	801df34 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801df2c:	9a03      	ldr	r2, [sp, #12]
 801df2e:	2a00      	cmp	r2, #0
 801df30:	f340 8159 	ble.w	801e1e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801df34:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801df36:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801df3a:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801df3e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801df42:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801df44:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801df48:	2b00      	cmp	r3, #0
 801df4a:	dd0e      	ble.n	801df6a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801df4c:	1402      	asrs	r2, r0, #16
 801df4e:	d405      	bmi.n	801df5c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801df50:	42ba      	cmp	r2, r7
 801df52:	da03      	bge.n	801df5c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801df54:	140a      	asrs	r2, r1, #16
 801df56:	d401      	bmi.n	801df5c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801df58:	42b2      	cmp	r2, r6
 801df5a:	db07      	blt.n	801df6c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801df5c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801df5e:	4410      	add	r0, r2
 801df60:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801df62:	3b01      	subs	r3, #1
 801df64:	4411      	add	r1, r2
 801df66:	3502      	adds	r5, #2
 801df68:	e7ee      	b.n	801df48 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801df6a:	d017      	beq.n	801df9c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801df6c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801df6e:	1e5a      	subs	r2, r3, #1
 801df70:	fb04 0402 	mla	r4, r4, r2, r0
 801df74:	1424      	asrs	r4, r4, #16
 801df76:	d409      	bmi.n	801df8c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801df78:	42bc      	cmp	r4, r7
 801df7a:	da07      	bge.n	801df8c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801df7c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801df7e:	fb04 1202 	mla	r2, r4, r2, r1
 801df82:	1412      	asrs	r2, r2, #16
 801df84:	d402      	bmi.n	801df8c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801df86:	42b2      	cmp	r2, r6
 801df88:	f2c0 80bf 	blt.w	801e10a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801df8c:	2700      	movs	r7, #0
 801df8e:	19da      	adds	r2, r3, r7
 801df90:	2a00      	cmp	r2, #0
 801df92:	dc3e      	bgt.n	801e012 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801df94:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801df98:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801df9c:	f1bb 0f00 	cmp.w	fp, #0
 801dfa0:	f340 8121 	ble.w	801e1e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801dfa4:	ee30 0a04 	vadd.f32	s0, s0, s8
 801dfa8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801dfac:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801dfb0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801dfb2:	f1bb 0b01 	subs.w	fp, fp, #1
 801dfb6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801dfba:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801dfbe:	eeb0 6a62 	vmov.f32	s12, s5
 801dfc2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801dfc6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801dfca:	ee77 2a62 	vsub.f32	s5, s14, s5
 801dfce:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801dfd2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801dfd6:	eeb0 6a43 	vmov.f32	s12, s6
 801dfda:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801dfde:	ee12 2a90 	vmov	r2, s5
 801dfe2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801dfe6:	fb92 f3f3 	sdiv	r3, r2, r3
 801dfea:	ee13 2a10 	vmov	r2, s6
 801dfee:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801dff2:	9313      	str	r3, [sp, #76]	; 0x4c
 801dff4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801dff6:	fb92 f3f3 	sdiv	r3, r2, r3
 801dffa:	9a03      	ldr	r2, [sp, #12]
 801dffc:	9314      	str	r3, [sp, #80]	; 0x50
 801dffe:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801e002:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e004:	eeb0 3a67 	vmov.f32	s6, s15
 801e008:	bf08      	it	eq
 801e00a:	4613      	moveq	r3, r2
 801e00c:	eef0 2a47 	vmov.f32	s5, s14
 801e010:	e789      	b.n	801df26 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801e012:	1406      	asrs	r6, r0, #16
 801e014:	d42d      	bmi.n	801e072 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801e016:	f8d9 4008 	ldr.w	r4, [r9, #8]
 801e01a:	42b4      	cmp	r4, r6
 801e01c:	dd29      	ble.n	801e072 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801e01e:	ea5f 4c21 	movs.w	ip, r1, asr #16
 801e022:	d426      	bmi.n	801e072 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801e024:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801e028:	4562      	cmp	r2, ip
 801e02a:	dd22      	ble.n	801e072 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801e02c:	b224      	sxth	r4, r4
 801e02e:	9a01      	ldr	r2, [sp, #4]
 801e030:	fb0c 6404 	mla	r4, ip, r4, r6
 801e034:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 801e038:	0e22      	lsrs	r2, r4, #24
 801e03a:	d01a      	beq.n	801e072 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801e03c:	9e04      	ldr	r6, [sp, #16]
 801e03e:	4372      	muls	r2, r6
 801e040:	1c56      	adds	r6, r2, #1
 801e042:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801e046:	1212      	asrs	r2, r2, #8
 801e048:	0a26      	lsrs	r6, r4, #8
 801e04a:	2aff      	cmp	r2, #255	; 0xff
 801e04c:	9605      	str	r6, [sp, #20]
 801e04e:	d116      	bne.n	801e07e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801e050:	f06f 0201 	mvn.w	r2, #1
 801e054:	fb02 fc07 	mul.w	ip, r2, r7
 801e058:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801e05c:	0962      	lsrs	r2, r4, #5
 801e05e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e062:	f026 0607 	bic.w	r6, r6, #7
 801e066:	4316      	orrs	r6, r2
 801e068:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801e06c:	4326      	orrs	r6, r4
 801e06e:	f825 600c 	strh.w	r6, [r5, ip]
 801e072:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801e074:	4410      	add	r0, r2
 801e076:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e078:	3f01      	subs	r7, #1
 801e07a:	4411      	add	r1, r2
 801e07c:	e787      	b.n	801df8e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801e07e:	f06f 0601 	mvn.w	r6, #1
 801e082:	437e      	muls	r6, r7
 801e084:	fa1f fa82 	uxth.w	sl, r2
 801e088:	f835 8006 	ldrh.w	r8, [r5, r6]
 801e08c:	9602      	str	r6, [sp, #8]
 801e08e:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801e092:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 801e096:	43d2      	mvns	r2, r2
 801e098:	b2d2      	uxtb	r2, r2
 801e09a:	fb1c fc0a 	smulbb	ip, ip, sl
 801e09e:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801e0a2:	fb0e ce02 	mla	lr, lr, r2, ip
 801e0a6:	b2e4      	uxtb	r4, r4
 801e0a8:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801e0ac:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801e0b0:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801e0b4:	fa5f f888 	uxtb.w	r8, r8
 801e0b8:	fb14 f40a 	smulbb	r4, r4, sl
 801e0bc:	fb08 4402 	mla	r4, r8, r2, r4
 801e0c0:	fa1f fe8e 	uxth.w	lr, lr
 801e0c4:	fb16 f60a 	smulbb	r6, r6, sl
 801e0c8:	b2a4      	uxth	r4, r4
 801e0ca:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801e0ce:	fb0c 6c02 	mla	ip, ip, r2, r6
 801e0d2:	f10e 0201 	add.w	r2, lr, #1
 801e0d6:	1c66      	adds	r6, r4, #1
 801e0d8:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801e0dc:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801e0e0:	fa1f fc8c 	uxth.w	ip, ip
 801e0e4:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801e0e8:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801e0ec:	ea46 0e0e 	orr.w	lr, r6, lr
 801e0f0:	f10c 0601 	add.w	r6, ip, #1
 801e0f4:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801e0f8:	0976      	lsrs	r6, r6, #5
 801e0fa:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801e0fe:	9a02      	ldr	r2, [sp, #8]
 801e100:	ea4e 0e06 	orr.w	lr, lr, r6
 801e104:	f825 e002 	strh.w	lr, [r5, r2]
 801e108:	e7b3      	b.n	801e072 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801e10a:	f04f 0800 	mov.w	r8, #0
 801e10e:	eba3 0208 	sub.w	r2, r3, r8
 801e112:	2a00      	cmp	r2, #0
 801e114:	f77f af3e 	ble.w	801df94 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801e118:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 801e11c:	1404      	asrs	r4, r0, #16
 801e11e:	140a      	asrs	r2, r1, #16
 801e120:	fb06 4202 	mla	r2, r6, r2, r4
 801e124:	9c01      	ldr	r4, [sp, #4]
 801e126:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 801e12a:	0e22      	lsrs	r2, r4, #24
 801e12c:	d016      	beq.n	801e15c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801e12e:	9e04      	ldr	r6, [sp, #16]
 801e130:	4372      	muls	r2, r6
 801e132:	1c56      	adds	r6, r2, #1
 801e134:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801e138:	1212      	asrs	r2, r2, #8
 801e13a:	2aff      	cmp	r2, #255	; 0xff
 801e13c:	ea4f 2614 	mov.w	r6, r4, lsr #8
 801e140:	d113      	bne.n	801e16a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801e142:	0962      	lsrs	r2, r4, #5
 801e144:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801e148:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e14c:	f026 0607 	bic.w	r6, r6, #7
 801e150:	4316      	orrs	r6, r2
 801e152:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801e156:	4326      	orrs	r6, r4
 801e158:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 801e15c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801e15e:	4410      	add	r0, r2
 801e160:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e162:	f108 0801 	add.w	r8, r8, #1
 801e166:	4411      	add	r1, r2
 801e168:	e7d1      	b.n	801e10e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 801e16a:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 801e16e:	fa1f fa82 	uxth.w	sl, r2
 801e172:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801e176:	f3c4 4707 	ubfx	r7, r4, #16, #8
 801e17a:	43d2      	mvns	r2, r2
 801e17c:	b2d2      	uxtb	r2, r2
 801e17e:	fb17 f70a 	smulbb	r7, r7, sl
 801e182:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801e186:	fb0c 7c02 	mla	ip, ip, r2, r7
 801e18a:	b2e4      	uxtb	r4, r4
 801e18c:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801e190:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801e194:	fa5f fe8e 	uxtb.w	lr, lr
 801e198:	fb14 f40a 	smulbb	r4, r4, sl
 801e19c:	fb0e 4402 	mla	r4, lr, r2, r4
 801e1a0:	b2f6      	uxtb	r6, r6
 801e1a2:	fa1f fc8c 	uxth.w	ip, ip
 801e1a6:	fb16 f60a 	smulbb	r6, r6, sl
 801e1aa:	b2a4      	uxth	r4, r4
 801e1ac:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801e1b0:	fb07 6702 	mla	r7, r7, r2, r6
 801e1b4:	f10c 0201 	add.w	r2, ip, #1
 801e1b8:	1c66      	adds	r6, r4, #1
 801e1ba:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801e1be:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801e1c2:	b2bf      	uxth	r7, r7
 801e1c4:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801e1c8:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801e1cc:	ea46 0c0c 	orr.w	ip, r6, ip
 801e1d0:	1c7e      	adds	r6, r7, #1
 801e1d2:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801e1d6:	0976      	lsrs	r6, r6, #5
 801e1d8:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801e1dc:	ea4c 0c06 	orr.w	ip, ip, r6
 801e1e0:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 801e1e4:	e7ba      	b.n	801e15c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801e1e6:	b007      	add	sp, #28
 801e1e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e1ec <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e1ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e1f0:	b085      	sub	sp, #20
 801e1f2:	468b      	mov	fp, r1
 801e1f4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801e1f6:	9203      	str	r2, [sp, #12]
 801e1f8:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801e1fc:	6841      	ldr	r1, [r0, #4]
 801e1fe:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801e202:	fb01 2404 	mla	r4, r1, r4, r2
 801e206:	6802      	ldr	r2, [r0, #0]
 801e208:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801e20c:	f8d8 2000 	ldr.w	r2, [r8]
 801e210:	9201      	str	r2, [sp, #4]
 801e212:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801e216:	f1bb 0f00 	cmp.w	fp, #0
 801e21a:	dc03      	bgt.n	801e224 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801e21c:	9a03      	ldr	r2, [sp, #12]
 801e21e:	2a00      	cmp	r2, #0
 801e220:	f340 814f 	ble.w	801e4c2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801e224:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801e226:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801e22a:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801e22e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801e232:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801e234:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801e238:	2b00      	cmp	r3, #0
 801e23a:	dd0e      	ble.n	801e25a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801e23c:	1408      	asrs	r0, r1, #16
 801e23e:	d405      	bmi.n	801e24c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801e240:	42b8      	cmp	r0, r7
 801e242:	da03      	bge.n	801e24c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801e244:	1410      	asrs	r0, r2, #16
 801e246:	d401      	bmi.n	801e24c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801e248:	42b0      	cmp	r0, r6
 801e24a:	db07      	blt.n	801e25c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801e24c:	9811      	ldr	r0, [sp, #68]	; 0x44
 801e24e:	4401      	add	r1, r0
 801e250:	9812      	ldr	r0, [sp, #72]	; 0x48
 801e252:	3b01      	subs	r3, #1
 801e254:	4402      	add	r2, r0
 801e256:	3402      	adds	r4, #2
 801e258:	e7ee      	b.n	801e238 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801e25a:	d017      	beq.n	801e28c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801e25c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801e25e:	1e58      	subs	r0, r3, #1
 801e260:	fb05 1500 	mla	r5, r5, r0, r1
 801e264:	142d      	asrs	r5, r5, #16
 801e266:	d409      	bmi.n	801e27c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e268:	42bd      	cmp	r5, r7
 801e26a:	da07      	bge.n	801e27c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e26c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e26e:	fb05 2000 	mla	r0, r5, r0, r2
 801e272:	1400      	asrs	r0, r0, #16
 801e274:	d402      	bmi.n	801e27c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e276:	42b0      	cmp	r0, r6
 801e278:	f2c0 80ba 	blt.w	801e3f0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801e27c:	2600      	movs	r6, #0
 801e27e:	1998      	adds	r0, r3, r6
 801e280:	2800      	cmp	r0, #0
 801e282:	dc3e      	bgt.n	801e302 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801e284:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801e288:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801e28c:	f1bb 0f00 	cmp.w	fp, #0
 801e290:	f340 8117 	ble.w	801e4c2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801e294:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e298:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e29c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801e2a0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e2a2:	f1bb 0b01 	subs.w	fp, fp, #1
 801e2a6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e2aa:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e2ae:	eeb0 6a62 	vmov.f32	s12, s5
 801e2b2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e2b6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e2ba:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e2be:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801e2c2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e2c6:	eeb0 6a43 	vmov.f32	s12, s6
 801e2ca:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e2ce:	ee12 2a90 	vmov	r2, s5
 801e2d2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e2d6:	fb92 f3f3 	sdiv	r3, r2, r3
 801e2da:	ee13 2a10 	vmov	r2, s6
 801e2de:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e2e2:	9311      	str	r3, [sp, #68]	; 0x44
 801e2e4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e2e6:	fb92 f3f3 	sdiv	r3, r2, r3
 801e2ea:	9a03      	ldr	r2, [sp, #12]
 801e2ec:	9312      	str	r3, [sp, #72]	; 0x48
 801e2ee:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801e2f2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e2f4:	eeb0 3a67 	vmov.f32	s6, s15
 801e2f8:	bf08      	it	eq
 801e2fa:	4613      	moveq	r3, r2
 801e2fc:	eef0 2a47 	vmov.f32	s5, s14
 801e300:	e789      	b.n	801e216 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801e302:	140f      	asrs	r7, r1, #16
 801e304:	d424      	bmi.n	801e350 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e306:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801e30a:	42bd      	cmp	r5, r7
 801e30c:	dd20      	ble.n	801e350 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e30e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801e312:	d41d      	bmi.n	801e350 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e314:	f8d8 000c 	ldr.w	r0, [r8, #12]
 801e318:	4560      	cmp	r0, ip
 801e31a:	dd19      	ble.n	801e350 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e31c:	b22d      	sxth	r5, r5
 801e31e:	fb0c 7505 	mla	r5, ip, r5, r7
 801e322:	9801      	ldr	r0, [sp, #4]
 801e324:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 801e328:	0e07      	lsrs	r7, r0, #24
 801e32a:	2fff      	cmp	r7, #255	; 0xff
 801e32c:	d116      	bne.n	801e35c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801e32e:	f06f 0501 	mvn.w	r5, #1
 801e332:	fb05 f706 	mul.w	r7, r5, r6
 801e336:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801e33a:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801e33e:	0945      	lsrs	r5, r0, #5
 801e340:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801e344:	ea4c 0505 	orr.w	r5, ip, r5
 801e348:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801e34c:	4305      	orrs	r5, r0
 801e34e:	53e5      	strh	r5, [r4, r7]
 801e350:	9811      	ldr	r0, [sp, #68]	; 0x44
 801e352:	4401      	add	r1, r0
 801e354:	9812      	ldr	r0, [sp, #72]	; 0x48
 801e356:	3e01      	subs	r6, #1
 801e358:	4402      	add	r2, r0
 801e35a:	e790      	b.n	801e27e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801e35c:	b2fd      	uxtb	r5, r7
 801e35e:	2f00      	cmp	r7, #0
 801e360:	d0f6      	beq.n	801e350 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e362:	f06f 0701 	mvn.w	r7, #1
 801e366:	4377      	muls	r7, r6
 801e368:	fa1f f985 	uxth.w	r9, r5
 801e36c:	f834 e007 	ldrh.w	lr, [r4, r7]
 801e370:	9702      	str	r7, [sp, #8]
 801e372:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801e376:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801e37a:	43ed      	mvns	r5, r5
 801e37c:	b2ed      	uxtb	r5, r5
 801e37e:	fb17 f709 	smulbb	r7, r7, r9
 801e382:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801e386:	fb0c 7c05 	mla	ip, ip, r5, r7
 801e38a:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801e38e:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801e392:	b2c0      	uxtb	r0, r0
 801e394:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801e398:	fa5f fe8e 	uxtb.w	lr, lr
 801e39c:	fb10 f009 	smulbb	r0, r0, r9
 801e3a0:	fb0e 0005 	mla	r0, lr, r5, r0
 801e3a4:	b280      	uxth	r0, r0
 801e3a6:	fa1f fc8c 	uxth.w	ip, ip
 801e3aa:	fb1a fa09 	smulbb	sl, sl, r9
 801e3ae:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801e3b2:	fb07 a705 	mla	r7, r7, r5, sl
 801e3b6:	f100 0a01 	add.w	sl, r0, #1
 801e3ba:	f10c 0501 	add.w	r5, ip, #1
 801e3be:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801e3c2:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801e3c6:	b2bf      	uxth	r7, r7
 801e3c8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801e3cc:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801e3d0:	ea4a 0c0c 	orr.w	ip, sl, ip
 801e3d4:	f107 0a01 	add.w	sl, r7, #1
 801e3d8:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801e3dc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801e3e0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801e3e4:	9802      	ldr	r0, [sp, #8]
 801e3e6:	ea4c 0c0a 	orr.w	ip, ip, sl
 801e3ea:	f824 c000 	strh.w	ip, [r4, r0]
 801e3ee:	e7af      	b.n	801e350 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e3f0:	f04f 0e00 	mov.w	lr, #0
 801e3f4:	eba3 000e 	sub.w	r0, r3, lr
 801e3f8:	2800      	cmp	r0, #0
 801e3fa:	f77f af43 	ble.w	801e284 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801e3fe:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801e402:	140d      	asrs	r5, r1, #16
 801e404:	1410      	asrs	r0, r2, #16
 801e406:	fb06 5000 	mla	r0, r6, r0, r5
 801e40a:	9d01      	ldr	r5, [sp, #4]
 801e40c:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801e410:	0e2e      	lsrs	r6, r5, #24
 801e412:	2eff      	cmp	r6, #255	; 0xff
 801e414:	d112      	bne.n	801e43c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 801e416:	482c      	ldr	r0, [pc, #176]	; (801e4c8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 801e418:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801e41c:	0968      	lsrs	r0, r5, #5
 801e41e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801e422:	4330      	orrs	r0, r6
 801e424:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801e428:	4328      	orrs	r0, r5
 801e42a:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 801e42e:	9811      	ldr	r0, [sp, #68]	; 0x44
 801e430:	4401      	add	r1, r0
 801e432:	9812      	ldr	r0, [sp, #72]	; 0x48
 801e434:	f10e 0e01 	add.w	lr, lr, #1
 801e438:	4402      	add	r2, r0
 801e43a:	e7db      	b.n	801e3f4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 801e43c:	b2f0      	uxtb	r0, r6
 801e43e:	2e00      	cmp	r6, #0
 801e440:	d0f5      	beq.n	801e42e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801e442:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801e446:	fa1f f980 	uxth.w	r9, r0
 801e44a:	ea4f 272c 	mov.w	r7, ip, asr #8
 801e44e:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801e452:	43c0      	mvns	r0, r0
 801e454:	b2c0      	uxtb	r0, r0
 801e456:	fb16 f609 	smulbb	r6, r6, r9
 801e45a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801e45e:	fb07 6700 	mla	r7, r7, r0, r6
 801e462:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801e466:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801e46a:	b2ed      	uxtb	r5, r5
 801e46c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801e470:	fa5f fc8c 	uxtb.w	ip, ip
 801e474:	fb15 f509 	smulbb	r5, r5, r9
 801e478:	fb0c 5500 	mla	r5, ip, r0, r5
 801e47c:	b2bf      	uxth	r7, r7
 801e47e:	fb1a fa09 	smulbb	sl, sl, r9
 801e482:	b2ad      	uxth	r5, r5
 801e484:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801e488:	fb06 a600 	mla	r6, r6, r0, sl
 801e48c:	1c78      	adds	r0, r7, #1
 801e48e:	f105 0a01 	add.w	sl, r5, #1
 801e492:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801e496:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801e49a:	b2b6      	uxth	r6, r6
 801e49c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801e4a0:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801e4a4:	ea4a 0707 	orr.w	r7, sl, r7
 801e4a8:	f106 0a01 	add.w	sl, r6, #1
 801e4ac:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801e4b0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801e4b4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801e4b8:	ea47 070a 	orr.w	r7, r7, sl
 801e4bc:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 801e4c0:	e7b5      	b.n	801e42e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801e4c2:	b005      	add	sp, #20
 801e4c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e4c8:	fffff800 	.word	0xfffff800

0801e4cc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e4cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e4d0:	b087      	sub	sp, #28
 801e4d2:	468b      	mov	fp, r1
 801e4d4:	9815      	ldr	r0, [sp, #84]	; 0x54
 801e4d6:	9203      	str	r2, [sp, #12]
 801e4d8:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801e4dc:	9204      	str	r2, [sp, #16]
 801e4de:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801e4e2:	6841      	ldr	r1, [r0, #4]
 801e4e4:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801e4e8:	fb01 2404 	mla	r4, r1, r4, r2
 801e4ec:	6802      	ldr	r2, [r0, #0]
 801e4ee:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801e4f2:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801e4f6:	3201      	adds	r2, #1
 801e4f8:	f022 0201 	bic.w	r2, r2, #1
 801e4fc:	9200      	str	r2, [sp, #0]
 801e4fe:	f8d9 2000 	ldr.w	r2, [r9]
 801e502:	9201      	str	r2, [sp, #4]
 801e504:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801e508:	f1bb 0f00 	cmp.w	fp, #0
 801e50c:	dc03      	bgt.n	801e516 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801e50e:	9a03      	ldr	r2, [sp, #12]
 801e510:	2a00      	cmp	r2, #0
 801e512:	f340 8169 	ble.w	801e7e8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801e516:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801e518:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801e51c:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801e520:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801e524:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801e526:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801e52a:	2b00      	cmp	r3, #0
 801e52c:	dd0e      	ble.n	801e54c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801e52e:	1402      	asrs	r2, r0, #16
 801e530:	d405      	bmi.n	801e53e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801e532:	42ba      	cmp	r2, r7
 801e534:	da03      	bge.n	801e53e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801e536:	140a      	asrs	r2, r1, #16
 801e538:	d401      	bmi.n	801e53e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801e53a:	42b2      	cmp	r2, r6
 801e53c:	db07      	blt.n	801e54e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801e53e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801e540:	4410      	add	r0, r2
 801e542:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e544:	3b01      	subs	r3, #1
 801e546:	4411      	add	r1, r2
 801e548:	3402      	adds	r4, #2
 801e54a:	e7ee      	b.n	801e52a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801e54c:	d017      	beq.n	801e57e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801e54e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801e550:	1e5a      	subs	r2, r3, #1
 801e552:	fb05 0502 	mla	r5, r5, r2, r0
 801e556:	142d      	asrs	r5, r5, #16
 801e558:	d409      	bmi.n	801e56e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801e55a:	42bd      	cmp	r5, r7
 801e55c:	da07      	bge.n	801e56e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801e55e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801e560:	fb05 1202 	mla	r2, r5, r2, r1
 801e564:	1412      	asrs	r2, r2, #16
 801e566:	d402      	bmi.n	801e56e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801e568:	42b2      	cmp	r2, r6
 801e56a:	f2c0 80c7 	blt.w	801e6fc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 801e56e:	2700      	movs	r7, #0
 801e570:	19da      	adds	r2, r3, r7
 801e572:	2a00      	cmp	r2, #0
 801e574:	dc3e      	bgt.n	801e5f4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801e576:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801e57a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801e57e:	f1bb 0f00 	cmp.w	fp, #0
 801e582:	f340 8131 	ble.w	801e7e8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801e586:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e58a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e58e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801e592:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e594:	f1bb 0b01 	subs.w	fp, fp, #1
 801e598:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e59c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e5a0:	eeb0 6a62 	vmov.f32	s12, s5
 801e5a4:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e5a8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e5ac:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e5b0:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801e5b4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e5b8:	eeb0 6a43 	vmov.f32	s12, s6
 801e5bc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e5c0:	ee12 2a90 	vmov	r2, s5
 801e5c4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e5c8:	fb92 f3f3 	sdiv	r3, r2, r3
 801e5cc:	ee13 2a10 	vmov	r2, s6
 801e5d0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e5d4:	9313      	str	r3, [sp, #76]	; 0x4c
 801e5d6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e5d8:	fb92 f3f3 	sdiv	r3, r2, r3
 801e5dc:	9a03      	ldr	r2, [sp, #12]
 801e5de:	9314      	str	r3, [sp, #80]	; 0x50
 801e5e0:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801e5e4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e5e6:	eeb0 3a67 	vmov.f32	s6, s15
 801e5ea:	bf08      	it	eq
 801e5ec:	4613      	moveq	r3, r2
 801e5ee:	eef0 2a47 	vmov.f32	s5, s14
 801e5f2:	e789      	b.n	801e508 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801e5f4:	1405      	asrs	r5, r0, #16
 801e5f6:	d435      	bmi.n	801e664 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801e5f8:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801e5fc:	42aa      	cmp	r2, r5
 801e5fe:	dd31      	ble.n	801e664 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801e600:	140e      	asrs	r6, r1, #16
 801e602:	d42f      	bmi.n	801e664 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801e604:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801e608:	42b2      	cmp	r2, r6
 801e60a:	dd2b      	ble.n	801e664 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801e60c:	9a00      	ldr	r2, [sp, #0]
 801e60e:	fb06 5502 	mla	r5, r6, r2, r5
 801e612:	086a      	lsrs	r2, r5, #1
 801e614:	9e01      	ldr	r6, [sp, #4]
 801e616:	5cb2      	ldrb	r2, [r6, r2]
 801e618:	07ee      	lsls	r6, r5, #31
 801e61a:	bf54      	ite	pl
 801e61c:	f002 020f 	andpl.w	r2, r2, #15
 801e620:	1112      	asrmi	r2, r2, #4
 801e622:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801e626:	b2d2      	uxtb	r2, r2
 801e628:	b1e2      	cbz	r2, 801e664 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801e62a:	9d04      	ldr	r5, [sp, #16]
 801e62c:	436a      	muls	r2, r5
 801e62e:	1c55      	adds	r5, r2, #1
 801e630:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801e634:	4d6e      	ldr	r5, [pc, #440]	; (801e7f0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801e636:	682d      	ldr	r5, [r5, #0]
 801e638:	1212      	asrs	r2, r2, #8
 801e63a:	0a2e      	lsrs	r6, r5, #8
 801e63c:	2aff      	cmp	r2, #255	; 0xff
 801e63e:	9605      	str	r6, [sp, #20]
 801e640:	d116      	bne.n	801e670 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801e642:	f06f 0201 	mvn.w	r2, #1
 801e646:	fb02 fc07 	mul.w	ip, r2, r7
 801e64a:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801e64e:	096a      	lsrs	r2, r5, #5
 801e650:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e654:	f026 0607 	bic.w	r6, r6, #7
 801e658:	4316      	orrs	r6, r2
 801e65a:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801e65e:	432e      	orrs	r6, r5
 801e660:	f824 600c 	strh.w	r6, [r4, ip]
 801e664:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801e666:	4410      	add	r0, r2
 801e668:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e66a:	3f01      	subs	r7, #1
 801e66c:	4411      	add	r1, r2
 801e66e:	e77f      	b.n	801e570 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801e670:	f06f 0601 	mvn.w	r6, #1
 801e674:	437e      	muls	r6, r7
 801e676:	fa1f fa82 	uxth.w	sl, r2
 801e67a:	f834 8006 	ldrh.w	r8, [r4, r6]
 801e67e:	9602      	str	r6, [sp, #8]
 801e680:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801e684:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 801e688:	43d2      	mvns	r2, r2
 801e68a:	b2d2      	uxtb	r2, r2
 801e68c:	fb1c fc0a 	smulbb	ip, ip, sl
 801e690:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801e694:	fb0e ce02 	mla	lr, lr, r2, ip
 801e698:	b2ed      	uxtb	r5, r5
 801e69a:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801e69e:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801e6a2:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801e6a6:	fa5f f888 	uxtb.w	r8, r8
 801e6aa:	fb15 f50a 	smulbb	r5, r5, sl
 801e6ae:	fb08 5502 	mla	r5, r8, r2, r5
 801e6b2:	fa1f fe8e 	uxth.w	lr, lr
 801e6b6:	fb16 f60a 	smulbb	r6, r6, sl
 801e6ba:	b2ad      	uxth	r5, r5
 801e6bc:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801e6c0:	fb0c 6c02 	mla	ip, ip, r2, r6
 801e6c4:	f10e 0201 	add.w	r2, lr, #1
 801e6c8:	1c6e      	adds	r6, r5, #1
 801e6ca:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801e6ce:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 801e6d2:	fa1f fc8c 	uxth.w	ip, ip
 801e6d6:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801e6da:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801e6de:	ea46 0e0e 	orr.w	lr, r6, lr
 801e6e2:	f10c 0601 	add.w	r6, ip, #1
 801e6e6:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801e6ea:	0976      	lsrs	r6, r6, #5
 801e6ec:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801e6f0:	9a02      	ldr	r2, [sp, #8]
 801e6f2:	ea4e 0e06 	orr.w	lr, lr, r6
 801e6f6:	f824 e002 	strh.w	lr, [r4, r2]
 801e6fa:	e7b3      	b.n	801e664 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801e6fc:	f04f 0800 	mov.w	r8, #0
 801e700:	eba3 0208 	sub.w	r2, r3, r8
 801e704:	2a00      	cmp	r2, #0
 801e706:	f77f af36 	ble.w	801e576 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801e70a:	9e00      	ldr	r6, [sp, #0]
 801e70c:	1402      	asrs	r2, r0, #16
 801e70e:	140d      	asrs	r5, r1, #16
 801e710:	fb06 2505 	mla	r5, r6, r5, r2
 801e714:	086a      	lsrs	r2, r5, #1
 801e716:	9e01      	ldr	r6, [sp, #4]
 801e718:	5cb2      	ldrb	r2, [r6, r2]
 801e71a:	07ed      	lsls	r5, r5, #31
 801e71c:	bf54      	ite	pl
 801e71e:	f002 020f 	andpl.w	r2, r2, #15
 801e722:	1112      	asrmi	r2, r2, #4
 801e724:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801e728:	b2d2      	uxtb	r2, r2
 801e72a:	b1c2      	cbz	r2, 801e75e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801e72c:	9d04      	ldr	r5, [sp, #16]
 801e72e:	436a      	muls	r2, r5
 801e730:	1c55      	adds	r5, r2, #1
 801e732:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801e736:	4d2e      	ldr	r5, [pc, #184]	; (801e7f0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801e738:	1212      	asrs	r2, r2, #8
 801e73a:	682e      	ldr	r6, [r5, #0]
 801e73c:	2aff      	cmp	r2, #255	; 0xff
 801e73e:	ea4f 2516 	mov.w	r5, r6, lsr #8
 801e742:	d113      	bne.n	801e76c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801e744:	0972      	lsrs	r2, r6, #5
 801e746:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801e74a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e74e:	f025 0507 	bic.w	r5, r5, #7
 801e752:	4315      	orrs	r5, r2
 801e754:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801e758:	4335      	orrs	r5, r6
 801e75a:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 801e75e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801e760:	4410      	add	r0, r2
 801e762:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e764:	f108 0801 	add.w	r8, r8, #1
 801e768:	4411      	add	r1, r2
 801e76a:	e7c9      	b.n	801e700 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801e76c:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801e770:	fa1f fa82 	uxth.w	sl, r2
 801e774:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801e778:	f3c6 4707 	ubfx	r7, r6, #16, #8
 801e77c:	43d2      	mvns	r2, r2
 801e77e:	b2d2      	uxtb	r2, r2
 801e780:	fb17 f70a 	smulbb	r7, r7, sl
 801e784:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801e788:	fb0c 7c02 	mla	ip, ip, r2, r7
 801e78c:	b2f6      	uxtb	r6, r6
 801e78e:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801e792:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801e796:	fa5f fe8e 	uxtb.w	lr, lr
 801e79a:	fb16 f60a 	smulbb	r6, r6, sl
 801e79e:	fb0e 6602 	mla	r6, lr, r2, r6
 801e7a2:	b2ed      	uxtb	r5, r5
 801e7a4:	fa1f fc8c 	uxth.w	ip, ip
 801e7a8:	fb15 f50a 	smulbb	r5, r5, sl
 801e7ac:	b2b6      	uxth	r6, r6
 801e7ae:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801e7b2:	fb07 5702 	mla	r7, r7, r2, r5
 801e7b6:	f10c 0201 	add.w	r2, ip, #1
 801e7ba:	1c75      	adds	r5, r6, #1
 801e7bc:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801e7c0:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801e7c4:	b2bf      	uxth	r7, r7
 801e7c6:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801e7ca:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801e7ce:	ea45 0c0c 	orr.w	ip, r5, ip
 801e7d2:	1c7d      	adds	r5, r7, #1
 801e7d4:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 801e7d8:	096d      	lsrs	r5, r5, #5
 801e7da:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801e7de:	ea4c 0c05 	orr.w	ip, ip, r5
 801e7e2:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 801e7e6:	e7ba      	b.n	801e75e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801e7e8:	b007      	add	sp, #28
 801e7ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e7ee:	bf00      	nop
 801e7f0:	2001384c 	.word	0x2001384c

0801e7f4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e7f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e7f8:	b087      	sub	sp, #28
 801e7fa:	f8df 830c 	ldr.w	r8, [pc, #780]	; 801eb08 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801e7fe:	9815      	ldr	r0, [sp, #84]	; 0x54
 801e800:	9205      	str	r2, [sp, #20]
 801e802:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801e806:	9101      	str	r1, [sp, #4]
 801e808:	6841      	ldr	r1, [r0, #4]
 801e80a:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 801e80e:	fb01 2404 	mla	r4, r1, r4, r2
 801e812:	6802      	ldr	r2, [r0, #0]
 801e814:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801e818:	f8db 2008 	ldr.w	r2, [fp, #8]
 801e81c:	3201      	adds	r2, #1
 801e81e:	f022 0201 	bic.w	r2, r2, #1
 801e822:	9202      	str	r2, [sp, #8]
 801e824:	f8db 2000 	ldr.w	r2, [fp]
 801e828:	9203      	str	r2, [sp, #12]
 801e82a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801e82e:	9a01      	ldr	r2, [sp, #4]
 801e830:	2a00      	cmp	r2, #0
 801e832:	dc03      	bgt.n	801e83c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801e834:	9a05      	ldr	r2, [sp, #20]
 801e836:	2a00      	cmp	r2, #0
 801e838:	f340 8162 	ble.w	801eb00 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801e83c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801e83e:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 801e842:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 801e846:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801e84a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801e84c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801e850:	2b00      	cmp	r3, #0
 801e852:	dd0e      	ble.n	801e872 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801e854:	1402      	asrs	r2, r0, #16
 801e856:	d405      	bmi.n	801e864 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801e858:	42ba      	cmp	r2, r7
 801e85a:	da03      	bge.n	801e864 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801e85c:	140a      	asrs	r2, r1, #16
 801e85e:	d401      	bmi.n	801e864 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801e860:	42b2      	cmp	r2, r6
 801e862:	db07      	blt.n	801e874 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801e864:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801e866:	4410      	add	r0, r2
 801e868:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e86a:	3b01      	subs	r3, #1
 801e86c:	4411      	add	r1, r2
 801e86e:	3402      	adds	r4, #2
 801e870:	e7ee      	b.n	801e850 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801e872:	d017      	beq.n	801e8a4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801e874:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801e876:	1e5a      	subs	r2, r3, #1
 801e878:	fb05 0502 	mla	r5, r5, r2, r0
 801e87c:	142d      	asrs	r5, r5, #16
 801e87e:	d409      	bmi.n	801e894 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801e880:	42bd      	cmp	r5, r7
 801e882:	da07      	bge.n	801e894 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801e884:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801e886:	fb05 1202 	mla	r2, r5, r2, r1
 801e88a:	1412      	asrs	r2, r2, #16
 801e88c:	d402      	bmi.n	801e894 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801e88e:	42b2      	cmp	r2, r6
 801e890:	f2c0 80c3 	blt.w	801ea1a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 801e894:	2500      	movs	r5, #0
 801e896:	195a      	adds	r2, r3, r5
 801e898:	2a00      	cmp	r2, #0
 801e89a:	dc3f      	bgt.n	801e91c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801e89c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801e8a0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801e8a4:	9b01      	ldr	r3, [sp, #4]
 801e8a6:	2b00      	cmp	r3, #0
 801e8a8:	f340 812a 	ble.w	801eb00 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801e8ac:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e8b0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e8b4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801e8b8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e8ba:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e8be:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e8c2:	eeb0 6a62 	vmov.f32	s12, s5
 801e8c6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e8ca:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e8ce:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e8d2:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801e8d6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e8da:	eeb0 6a43 	vmov.f32	s12, s6
 801e8de:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e8e2:	ee12 2a90 	vmov	r2, s5
 801e8e6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e8ea:	fb92 f3f3 	sdiv	r3, r2, r3
 801e8ee:	ee13 2a10 	vmov	r2, s6
 801e8f2:	9313      	str	r3, [sp, #76]	; 0x4c
 801e8f4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e8f6:	fb92 f3f3 	sdiv	r3, r2, r3
 801e8fa:	9314      	str	r3, [sp, #80]	; 0x50
 801e8fc:	9b01      	ldr	r3, [sp, #4]
 801e8fe:	9a05      	ldr	r2, [sp, #20]
 801e900:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e904:	3b01      	subs	r3, #1
 801e906:	9301      	str	r3, [sp, #4]
 801e908:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801e90c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e90e:	eeb0 3a67 	vmov.f32	s6, s15
 801e912:	bf08      	it	eq
 801e914:	4613      	moveq	r3, r2
 801e916:	eef0 2a47 	vmov.f32	s5, s14
 801e91a:	e788      	b.n	801e82e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801e91c:	1406      	asrs	r6, r0, #16
 801e91e:	d42c      	bmi.n	801e97a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801e920:	f8db 2008 	ldr.w	r2, [fp, #8]
 801e924:	42b2      	cmp	r2, r6
 801e926:	dd28      	ble.n	801e97a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801e928:	140f      	asrs	r7, r1, #16
 801e92a:	d426      	bmi.n	801e97a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801e92c:	f8db 200c 	ldr.w	r2, [fp, #12]
 801e930:	42ba      	cmp	r2, r7
 801e932:	dd22      	ble.n	801e97a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801e934:	9a02      	ldr	r2, [sp, #8]
 801e936:	fb07 6602 	mla	r6, r7, r2, r6
 801e93a:	0872      	lsrs	r2, r6, #1
 801e93c:	9f03      	ldr	r7, [sp, #12]
 801e93e:	5cba      	ldrb	r2, [r7, r2]
 801e940:	07f6      	lsls	r6, r6, #31
 801e942:	bf54      	ite	pl
 801e944:	f002 020f 	andpl.w	r2, r2, #15
 801e948:	1112      	asrmi	r2, r2, #4
 801e94a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801e94e:	b2d2      	uxtb	r2, r2
 801e950:	2aff      	cmp	r2, #255	; 0xff
 801e952:	d118      	bne.n	801e986 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 801e954:	f8d8 2000 	ldr.w	r2, [r8]
 801e958:	f06f 0601 	mvn.w	r6, #1
 801e95c:	fb06 f705 	mul.w	r7, r6, r5
 801e960:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 801e964:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 801e968:	0956      	lsrs	r6, r2, #5
 801e96a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801e96e:	ea4c 0606 	orr.w	r6, ip, r6
 801e972:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801e976:	4316      	orrs	r6, r2
 801e978:	53e6      	strh	r6, [r4, r7]
 801e97a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801e97c:	4410      	add	r0, r2
 801e97e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e980:	3d01      	subs	r5, #1
 801e982:	4411      	add	r1, r2
 801e984:	e787      	b.n	801e896 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801e986:	2a00      	cmp	r2, #0
 801e988:	d0f7      	beq.n	801e97a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801e98a:	f06f 0601 	mvn.w	r6, #1
 801e98e:	436e      	muls	r6, r5
 801e990:	f8d8 c000 	ldr.w	ip, [r8]
 801e994:	f834 e006 	ldrh.w	lr, [r4, r6]
 801e998:	9604      	str	r6, [sp, #16]
 801e99a:	fa1f f982 	uxth.w	r9, r2
 801e99e:	ea4f 272e 	mov.w	r7, lr, asr #8
 801e9a2:	f3cc 4607 	ubfx	r6, ip, #16, #8
 801e9a6:	43d2      	mvns	r2, r2
 801e9a8:	b2d2      	uxtb	r2, r2
 801e9aa:	fb16 f609 	smulbb	r6, r6, r9
 801e9ae:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801e9b2:	fb07 6702 	mla	r7, r7, r2, r6
 801e9b6:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 801e9ba:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801e9be:	fa5f fc8c 	uxtb.w	ip, ip
 801e9c2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801e9c6:	fa5f fe8e 	uxtb.w	lr, lr
 801e9ca:	fb1c fc09 	smulbb	ip, ip, r9
 801e9ce:	fb0e cc02 	mla	ip, lr, r2, ip
 801e9d2:	b2bf      	uxth	r7, r7
 801e9d4:	fb1a fa09 	smulbb	sl, sl, r9
 801e9d8:	fa1f fc8c 	uxth.w	ip, ip
 801e9dc:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801e9e0:	fb06 a602 	mla	r6, r6, r2, sl
 801e9e4:	1c7a      	adds	r2, r7, #1
 801e9e6:	f10c 0a01 	add.w	sl, ip, #1
 801e9ea:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801e9ee:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 801e9f2:	b2b6      	uxth	r6, r6
 801e9f4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801e9f8:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801e9fc:	ea4a 0707 	orr.w	r7, sl, r7
 801ea00:	f106 0a01 	add.w	sl, r6, #1
 801ea04:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801ea08:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801ea0c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801ea10:	9a04      	ldr	r2, [sp, #16]
 801ea12:	ea47 070a 	orr.w	r7, r7, sl
 801ea16:	52a7      	strh	r7, [r4, r2]
 801ea18:	e7af      	b.n	801e97a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ea1a:	f04f 0e00 	mov.w	lr, #0
 801ea1e:	eba3 020e 	sub.w	r2, r3, lr
 801ea22:	2a00      	cmp	r2, #0
 801ea24:	f77f af3a 	ble.w	801e89c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801ea28:	9e02      	ldr	r6, [sp, #8]
 801ea2a:	1402      	asrs	r2, r0, #16
 801ea2c:	140d      	asrs	r5, r1, #16
 801ea2e:	fb06 2505 	mla	r5, r6, r5, r2
 801ea32:	086a      	lsrs	r2, r5, #1
 801ea34:	9e03      	ldr	r6, [sp, #12]
 801ea36:	5cb2      	ldrb	r2, [r6, r2]
 801ea38:	07ed      	lsls	r5, r5, #31
 801ea3a:	bf54      	ite	pl
 801ea3c:	f002 020f 	andpl.w	r2, r2, #15
 801ea40:	1112      	asrmi	r2, r2, #4
 801ea42:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801ea46:	b2d2      	uxtb	r2, r2
 801ea48:	2aff      	cmp	r2, #255	; 0xff
 801ea4a:	d115      	bne.n	801ea78 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 801ea4c:	f8d8 5000 	ldr.w	r5, [r8]
 801ea50:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 801ea54:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 801ea58:	096a      	lsrs	r2, r5, #5
 801ea5a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ea5e:	4332      	orrs	r2, r6
 801ea60:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801ea64:	432a      	orrs	r2, r5
 801ea66:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 801ea6a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801ea6c:	4410      	add	r0, r2
 801ea6e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ea70:	f10e 0e01 	add.w	lr, lr, #1
 801ea74:	4411      	add	r1, r2
 801ea76:	e7d2      	b.n	801ea1e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801ea78:	2a00      	cmp	r2, #0
 801ea7a:	d0f6      	beq.n	801ea6a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801ea7c:	f8d8 7000 	ldr.w	r7, [r8]
 801ea80:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801ea84:	fa1f f982 	uxth.w	r9, r2
 801ea88:	ea4f 262c 	mov.w	r6, ip, asr #8
 801ea8c:	f3c7 4507 	ubfx	r5, r7, #16, #8
 801ea90:	43d2      	mvns	r2, r2
 801ea92:	b2d2      	uxtb	r2, r2
 801ea94:	fb15 f509 	smulbb	r5, r5, r9
 801ea98:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801ea9c:	fb06 5602 	mla	r6, r6, r2, r5
 801eaa0:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 801eaa4:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801eaa8:	b2ff      	uxtb	r7, r7
 801eaaa:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801eaae:	fa5f fc8c 	uxtb.w	ip, ip
 801eab2:	fb17 f709 	smulbb	r7, r7, r9
 801eab6:	fb0c 7702 	mla	r7, ip, r2, r7
 801eaba:	b2b6      	uxth	r6, r6
 801eabc:	fb1a fa09 	smulbb	sl, sl, r9
 801eac0:	b2bf      	uxth	r7, r7
 801eac2:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801eac6:	fb05 a502 	mla	r5, r5, r2, sl
 801eaca:	1c72      	adds	r2, r6, #1
 801eacc:	f107 0a01 	add.w	sl, r7, #1
 801ead0:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801ead4:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801ead8:	b2ad      	uxth	r5, r5
 801eada:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801eade:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801eae2:	ea4a 0606 	orr.w	r6, sl, r6
 801eae6:	f105 0a01 	add.w	sl, r5, #1
 801eaea:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801eaee:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801eaf2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801eaf6:	ea46 060a 	orr.w	r6, r6, sl
 801eafa:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 801eafe:	e7b4      	b.n	801ea6a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801eb00:	b007      	add	sp, #28
 801eb02:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801eb06:	bf00      	nop
 801eb08:	2001384c 	.word	0x2001384c

0801eb0c <_ZN8touchgfx8LCD16bppD1Ev>:
 801eb0c:	4770      	bx	lr

0801eb0e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 801eb0e:	4770      	bx	lr

0801eb10 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 801eb10:	4770      	bx	lr

0801eb12 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 801eb12:	4770      	bx	lr

0801eb14 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 801eb14:	4770      	bx	lr

0801eb16 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 801eb16:	4770      	bx	lr

0801eb18 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 801eb18:	4770      	bx	lr

0801eb1a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 801eb1a:	4770      	bx	lr

0801eb1c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801eb1c:	4770      	bx	lr

0801eb1e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801eb1e:	4770      	bx	lr

0801eb20 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801eb20:	4770      	bx	lr

0801eb22 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801eb22:	4770      	bx	lr

0801eb24 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801eb24:	4770      	bx	lr

0801eb26 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801eb26:	4770      	bx	lr

0801eb28 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801eb28:	4770      	bx	lr

0801eb2a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801eb2a:	4770      	bx	lr

0801eb2c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801eb2c:	4770      	bx	lr

0801eb2e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801eb2e:	4770      	bx	lr

0801eb30 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801eb30:	4770      	bx	lr

0801eb32 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 801eb32:	4770      	bx	lr

0801eb34 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801eb34:	4770      	bx	lr

0801eb36 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801eb36:	4770      	bx	lr

0801eb38 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801eb38:	4770      	bx	lr

0801eb3a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801eb3a:	4770      	bx	lr

0801eb3c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801eb3c:	4770      	bx	lr

0801eb3e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 801eb3e:	4770      	bx	lr

0801eb40 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801eb40:	4770      	bx	lr

0801eb42 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 801eb42:	4770      	bx	lr

0801eb44 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801eb44:	4770      	bx	lr

0801eb46 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801eb46:	4770      	bx	lr

0801eb48 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801eb48:	4770      	bx	lr

0801eb4a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801eb4a:	4770      	bx	lr

0801eb4c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 801eb4c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801eb50:	b088      	sub	sp, #32
 801eb52:	ac08      	add	r4, sp, #32
 801eb54:	4606      	mov	r6, r0
 801eb56:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 801eb5a:	4620      	mov	r0, r4
 801eb5c:	4688      	mov	r8, r1
 801eb5e:	4691      	mov	r9, r2
 801eb60:	f7fd fc62 	bl	801c428 <_ZNK8touchgfx6Bitmap7getDataEv>
 801eb64:	6833      	ldr	r3, [r6, #0]
 801eb66:	4605      	mov	r5, r0
 801eb68:	4620      	mov	r0, r4
 801eb6a:	699f      	ldr	r7, [r3, #24]
 801eb6c:	f7fd fb70 	bl	801c250 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801eb70:	4682      	mov	sl, r0
 801eb72:	4620      	mov	r0, r4
 801eb74:	f7fd fba0 	bl	801c2b8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801eb78:	9500      	str	r5, [sp, #0]
 801eb7a:	e9cd a001 	strd	sl, r0, [sp, #4]
 801eb7e:	464b      	mov	r3, r9
 801eb80:	a806      	add	r0, sp, #24
 801eb82:	4642      	mov	r2, r8
 801eb84:	4631      	mov	r1, r6
 801eb86:	47b8      	blx	r7
 801eb88:	4628      	mov	r0, r5
 801eb8a:	b008      	add	sp, #32
 801eb8c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0801eb90 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 801eb90:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801eb94:	2300      	movs	r3, #0
 801eb96:	9300      	str	r3, [sp, #0]
 801eb98:	4b3d      	ldr	r3, [pc, #244]	; (801ec90 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 801eb9a:	781b      	ldrb	r3, [r3, #0]
 801eb9c:	2b00      	cmp	r3, #0
 801eb9e:	d137      	bne.n	801ec10 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 801eba0:	4a3c      	ldr	r2, [pc, #240]	; (801ec94 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801eba2:	f9b2 2000 	ldrsh.w	r2, [r2]
 801eba6:	f8ad 2004 	strh.w	r2, [sp, #4]
 801ebaa:	2b00      	cmp	r3, #0
 801ebac:	d132      	bne.n	801ec14 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 801ebae:	4b3a      	ldr	r3, [pc, #232]	; (801ec98 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801ebb0:	f9b3 3000 	ldrsh.w	r3, [r3]
 801ebb4:	6808      	ldr	r0, [r1, #0]
 801ebb6:	6849      	ldr	r1, [r1, #4]
 801ebb8:	f8ad 3006 	strh.w	r3, [sp, #6]
 801ebbc:	ac02      	add	r4, sp, #8
 801ebbe:	ab02      	add	r3, sp, #8
 801ebc0:	c303      	stmia	r3!, {r0, r1}
 801ebc2:	4669      	mov	r1, sp
 801ebc4:	4620      	mov	r0, r4
 801ebc6:	f7f9 fd83 	bl	80186d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ebca:	4668      	mov	r0, sp
 801ebcc:	f7f9 fd3c 	bl	8018648 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ebd0:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801ebd4:	f8bd 2000 	ldrh.w	r2, [sp]
 801ebd8:	4d30      	ldr	r5, [pc, #192]	; (801ec9c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 801ebda:	4413      	add	r3, r2
 801ebdc:	f8ad 3008 	strh.w	r3, [sp, #8]
 801ebe0:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801ebe4:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801ebe8:	6828      	ldr	r0, [r5, #0]
 801ebea:	4413      	add	r3, r2
 801ebec:	f8ad 300a 	strh.w	r3, [sp, #10]
 801ebf0:	6803      	ldr	r3, [r0, #0]
 801ebf2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801ebf4:	4798      	blx	r3
 801ebf6:	f010 0f01 	tst.w	r0, #1
 801ebfa:	462f      	mov	r7, r5
 801ebfc:	d00c      	beq.n	801ec18 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 801ebfe:	6828      	ldr	r0, [r5, #0]
 801ec00:	6803      	ldr	r3, [r0, #0]
 801ec02:	e894 0006 	ldmia.w	r4, {r1, r2}
 801ec06:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801ec08:	4798      	blx	r3
 801ec0a:	b004      	add	sp, #16
 801ec0c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801ec10:	4a21      	ldr	r2, [pc, #132]	; (801ec98 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801ec12:	e7c6      	b.n	801eba2 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 801ec14:	4b1f      	ldr	r3, [pc, #124]	; (801ec94 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801ec16:	e7cb      	b.n	801ebb0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 801ec18:	6838      	ldr	r0, [r7, #0]
 801ec1a:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801ec1e:	6803      	ldr	r3, [r0, #0]
 801ec20:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 801ec24:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801ec26:	4798      	blx	r3
 801ec28:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 801ec2c:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801ec30:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 801ec34:	fb16 3602 	smlabb	r6, r6, r2, r3
 801ec38:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801ec3c:	6838      	ldr	r0, [r7, #0]
 801ec3e:	6803      	ldr	r3, [r0, #0]
 801ec40:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ec42:	4798      	blx	r3
 801ec44:	4a13      	ldr	r2, [pc, #76]	; (801ec94 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801ec46:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 801ec4a:	8813      	ldrh	r3, [r2, #0]
 801ec4c:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801ec50:	fb03 1404 	mla	r4, r3, r4, r1
 801ec54:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801ec58:	435d      	muls	r5, r3
 801ec5a:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801ec5e:	ea4f 0848 	mov.w	r8, r8, lsl #1
 801ec62:	4691      	mov	r9, r2
 801ec64:	6838      	ldr	r0, [r7, #0]
 801ec66:	42ac      	cmp	r4, r5
 801ec68:	6803      	ldr	r3, [r0, #0]
 801ec6a:	d20e      	bcs.n	801ec8a <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 801ec6c:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 801ec70:	4632      	mov	r2, r6
 801ec72:	4643      	mov	r3, r8
 801ec74:	4621      	mov	r1, r4
 801ec76:	47d0      	blx	sl
 801ec78:	f8b9 3000 	ldrh.w	r3, [r9]
 801ec7c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ec80:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801ec84:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801ec88:	e7ec      	b.n	801ec64 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 801ec8a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ec8c:	4798      	blx	r3
 801ec8e:	e7bc      	b.n	801ec0a <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 801ec90:	20013834 	.word	0x20013834
 801ec94:	20013836 	.word	0x20013836
 801ec98:	20013838 	.word	0x20013838
 801ec9c:	2001383c 	.word	0x2001383c

0801eca0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801eca0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801eca4:	b08b      	sub	sp, #44	; 0x2c
 801eca6:	460f      	mov	r7, r1
 801eca8:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 801ecac:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 801ecb0:	4616      	mov	r6, r2
 801ecb2:	f1bb 0f00 	cmp.w	fp, #0
 801ecb6:	d04a      	beq.n	801ed4e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801ecb8:	6810      	ldr	r0, [r2, #0]
 801ecba:	6851      	ldr	r1, [r2, #4]
 801ecbc:	ad06      	add	r5, sp, #24
 801ecbe:	c503      	stmia	r5!, {r0, r1}
 801ecc0:	6818      	ldr	r0, [r3, #0]
 801ecc2:	6859      	ldr	r1, [r3, #4]
 801ecc4:	ad08      	add	r5, sp, #32
 801ecc6:	c503      	stmia	r5!, {r0, r1}
 801ecc8:	a806      	add	r0, sp, #24
 801ecca:	f7f9 fcbd 	bl	8018648 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ecce:	4631      	mov	r1, r6
 801ecd0:	a808      	add	r0, sp, #32
 801ecd2:	f7f9 fcfd 	bl	80186d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ecd6:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801ecda:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801ecde:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801ece2:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 801ece6:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 801ecea:	fb16 2103 	smlabb	r1, r6, r3, r2
 801ecee:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801ecf2:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801ecf6:	4f5f      	ldr	r7, [pc, #380]	; (801ee74 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801ecf8:	440a      	add	r2, r1
 801ecfa:	f8ad 2020 	strh.w	r2, [sp, #32]
 801ecfe:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801ed02:	6838      	ldr	r0, [r7, #0]
 801ed04:	4413      	add	r3, r2
 801ed06:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801ed0a:	6803      	ldr	r3, [r0, #0]
 801ed0c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801ed0e:	4798      	blx	r3
 801ed10:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801ed14:	46b9      	mov	r9, r7
 801ed16:	d11d      	bne.n	801ed54 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 801ed18:	b9fc      	cbnz	r4, 801ed5a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801ed1a:	f010 0f01 	tst.w	r0, #1
 801ed1e:	d01c      	beq.n	801ed5a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801ed20:	f8d9 0000 	ldr.w	r0, [r9]
 801ed24:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 801ed28:	6801      	ldr	r1, [r0, #0]
 801ed2a:	f8cd b00c 	str.w	fp, [sp, #12]
 801ed2e:	2700      	movs	r7, #0
 801ed30:	e9cd 4704 	strd	r4, r7, [sp, #16]
 801ed34:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 801ed38:	9402      	str	r4, [sp, #8]
 801ed3a:	b2ad      	uxth	r5, r5
 801ed3c:	fa1f f488 	uxth.w	r4, r8
 801ed40:	9501      	str	r5, [sp, #4]
 801ed42:	9400      	str	r4, [sp, #0]
 801ed44:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 801ed46:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801ed4a:	4631      	mov	r1, r6
 801ed4c:	47a0      	blx	r4
 801ed4e:	b00b      	add	sp, #44	; 0x2c
 801ed50:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ed54:	f010 0f04 	tst.w	r0, #4
 801ed58:	e7e1      	b.n	801ed1e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 801ed5a:	f8d9 0000 	ldr.w	r0, [r9]
 801ed5e:	6803      	ldr	r3, [r0, #0]
 801ed60:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ed62:	4798      	blx	r3
 801ed64:	4b44      	ldr	r3, [pc, #272]	; (801ee78 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 801ed66:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 801ed6a:	881a      	ldrh	r2, [r3, #0]
 801ed6c:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801ed70:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801ed74:	fb02 1404 	mla	r4, r2, r4, r1
 801ed78:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801ed7c:	469a      	mov	sl, r3
 801ed7e:	fb05 f502 	mul.w	r5, r5, r2
 801ed82:	ea4f 0748 	mov.w	r7, r8, lsl #1
 801ed86:	d059      	beq.n	801ee3c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 801ed88:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 801ed8c:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801ed90:	fa1f f28b 	uxth.w	r2, fp
 801ed94:	fa1f f989 	uxth.w	r9, r9
 801ed98:	469e      	mov	lr, r3
 801ed9a:	42ac      	cmp	r4, r5
 801ed9c:	d264      	bcs.n	801ee68 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801ed9e:	eb04 0a07 	add.w	sl, r4, r7
 801eda2:	4554      	cmp	r4, sl
 801eda4:	d23d      	bcs.n	801ee22 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 801eda6:	8821      	ldrh	r1, [r4, #0]
 801eda8:	f836 3b02 	ldrh.w	r3, [r6], #2
 801edac:	1208      	asrs	r0, r1, #8
 801edae:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801edb2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801edb6:	fb10 f009 	smulbb	r0, r0, r9
 801edba:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801edbe:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801edc2:	00c9      	lsls	r1, r1, #3
 801edc4:	fb0c 0c02 	mla	ip, ip, r2, r0
 801edc8:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801edcc:	10d8      	asrs	r0, r3, #3
 801edce:	b2c9      	uxtb	r1, r1
 801edd0:	00db      	lsls	r3, r3, #3
 801edd2:	fa1f fc8c 	uxth.w	ip, ip
 801edd6:	fb1b fb09 	smulbb	fp, fp, r9
 801edda:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801edde:	b2db      	uxtb	r3, r3
 801ede0:	fb11 f109 	smulbb	r1, r1, r9
 801ede4:	fb00 b002 	mla	r0, r0, r2, fp
 801ede8:	fb03 1302 	mla	r3, r3, r2, r1
 801edec:	f10c 0b01 	add.w	fp, ip, #1
 801edf0:	b29b      	uxth	r3, r3
 801edf2:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 801edf6:	b280      	uxth	r0, r0
 801edf8:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 801edfc:	f103 0c01 	add.w	ip, r3, #1
 801ee00:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801ee04:	1c43      	adds	r3, r0, #1
 801ee06:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801ee0a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801ee0e:	0940      	lsrs	r0, r0, #5
 801ee10:	ea4c 0c0b 	orr.w	ip, ip, fp
 801ee14:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ee18:	ea4c 0c00 	orr.w	ip, ip, r0
 801ee1c:	f824 cb02 	strh.w	ip, [r4], #2
 801ee20:	e7bf      	b.n	801eda2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 801ee22:	f8be 3000 	ldrh.w	r3, [lr]
 801ee26:	eba3 0308 	sub.w	r3, r3, r8
 801ee2a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ee2e:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801ee32:	eba3 0308 	sub.w	r3, r3, r8
 801ee36:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801ee3a:	e7ae      	b.n	801ed9a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 801ee3c:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801ee40:	f8d9 0000 	ldr.w	r0, [r9]
 801ee44:	42ac      	cmp	r4, r5
 801ee46:	6803      	ldr	r3, [r0, #0]
 801ee48:	d20e      	bcs.n	801ee68 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801ee4a:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 801ee4e:	4632      	mov	r2, r6
 801ee50:	463b      	mov	r3, r7
 801ee52:	4621      	mov	r1, r4
 801ee54:	47c0      	blx	r8
 801ee56:	f8ba 3000 	ldrh.w	r3, [sl]
 801ee5a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ee5e:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801ee62:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801ee66:	e7eb      	b.n	801ee40 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 801ee68:	4b02      	ldr	r3, [pc, #8]	; (801ee74 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801ee6a:	6818      	ldr	r0, [r3, #0]
 801ee6c:	6803      	ldr	r3, [r0, #0]
 801ee6e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ee70:	4798      	blx	r3
 801ee72:	e76c      	b.n	801ed4e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801ee74:	2001383c 	.word	0x2001383c
 801ee78:	20013836 	.word	0x20013836

0801ee7c <_ZN8touchgfx8LCD16bppD0Ev>:
 801ee7c:	b510      	push	{r4, lr}
 801ee7e:	2184      	movs	r1, #132	; 0x84
 801ee80:	4604      	mov	r4, r0
 801ee82:	f00d fe7e 	bl	802cb82 <_ZdlPvj>
 801ee86:	4620      	mov	r0, r4
 801ee88:	bd10      	pop	{r4, pc}

0801ee8a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 801ee8a:	b510      	push	{r4, lr}
 801ee8c:	2104      	movs	r1, #4
 801ee8e:	4604      	mov	r4, r0
 801ee90:	f00d fe77 	bl	802cb82 <_ZdlPvj>
 801ee94:	4620      	mov	r0, r4
 801ee96:	bd10      	pop	{r4, pc}

0801ee98 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 801ee98:	b510      	push	{r4, lr}
 801ee9a:	2104      	movs	r1, #4
 801ee9c:	4604      	mov	r4, r0
 801ee9e:	f00d fe70 	bl	802cb82 <_ZdlPvj>
 801eea2:	4620      	mov	r0, r4
 801eea4:	bd10      	pop	{r4, pc}

0801eea6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 801eea6:	b510      	push	{r4, lr}
 801eea8:	f640 0144 	movw	r1, #2116	; 0x844
 801eeac:	4604      	mov	r4, r0
 801eeae:	f00d fe68 	bl	802cb82 <_ZdlPvj>
 801eeb2:	4620      	mov	r0, r4
 801eeb4:	bd10      	pop	{r4, pc}

0801eeb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801eeb6:	b510      	push	{r4, lr}
 801eeb8:	2104      	movs	r1, #4
 801eeba:	4604      	mov	r4, r0
 801eebc:	f00d fe61 	bl	802cb82 <_ZdlPvj>
 801eec0:	4620      	mov	r0, r4
 801eec2:	bd10      	pop	{r4, pc}

0801eec4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801eec4:	b510      	push	{r4, lr}
 801eec6:	2104      	movs	r1, #4
 801eec8:	4604      	mov	r4, r0
 801eeca:	f00d fe5a 	bl	802cb82 <_ZdlPvj>
 801eece:	4620      	mov	r0, r4
 801eed0:	bd10      	pop	{r4, pc}

0801eed2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801eed2:	b510      	push	{r4, lr}
 801eed4:	2104      	movs	r1, #4
 801eed6:	4604      	mov	r4, r0
 801eed8:	f00d fe53 	bl	802cb82 <_ZdlPvj>
 801eedc:	4620      	mov	r0, r4
 801eede:	bd10      	pop	{r4, pc}

0801eee0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801eee0:	b510      	push	{r4, lr}
 801eee2:	2104      	movs	r1, #4
 801eee4:	4604      	mov	r4, r0
 801eee6:	f00d fe4c 	bl	802cb82 <_ZdlPvj>
 801eeea:	4620      	mov	r0, r4
 801eeec:	bd10      	pop	{r4, pc}

0801eeee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801eeee:	b510      	push	{r4, lr}
 801eef0:	2104      	movs	r1, #4
 801eef2:	4604      	mov	r4, r0
 801eef4:	f00d fe45 	bl	802cb82 <_ZdlPvj>
 801eef8:	4620      	mov	r0, r4
 801eefa:	bd10      	pop	{r4, pc}

0801eefc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801eefc:	b510      	push	{r4, lr}
 801eefe:	2104      	movs	r1, #4
 801ef00:	4604      	mov	r4, r0
 801ef02:	f00d fe3e 	bl	802cb82 <_ZdlPvj>
 801ef06:	4620      	mov	r0, r4
 801ef08:	bd10      	pop	{r4, pc}

0801ef0a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801ef0a:	b510      	push	{r4, lr}
 801ef0c:	2104      	movs	r1, #4
 801ef0e:	4604      	mov	r4, r0
 801ef10:	f00d fe37 	bl	802cb82 <_ZdlPvj>
 801ef14:	4620      	mov	r0, r4
 801ef16:	bd10      	pop	{r4, pc}

0801ef18 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 801ef18:	b510      	push	{r4, lr}
 801ef1a:	2104      	movs	r1, #4
 801ef1c:	4604      	mov	r4, r0
 801ef1e:	f00d fe30 	bl	802cb82 <_ZdlPvj>
 801ef22:	4620      	mov	r0, r4
 801ef24:	bd10      	pop	{r4, pc}

0801ef26 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801ef26:	b510      	push	{r4, lr}
 801ef28:	2104      	movs	r1, #4
 801ef2a:	4604      	mov	r4, r0
 801ef2c:	f00d fe29 	bl	802cb82 <_ZdlPvj>
 801ef30:	4620      	mov	r0, r4
 801ef32:	bd10      	pop	{r4, pc}

0801ef34 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801ef34:	b510      	push	{r4, lr}
 801ef36:	2104      	movs	r1, #4
 801ef38:	4604      	mov	r4, r0
 801ef3a:	f00d fe22 	bl	802cb82 <_ZdlPvj>
 801ef3e:	4620      	mov	r0, r4
 801ef40:	bd10      	pop	{r4, pc}

0801ef42 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801ef42:	b510      	push	{r4, lr}
 801ef44:	2104      	movs	r1, #4
 801ef46:	4604      	mov	r4, r0
 801ef48:	f00d fe1b 	bl	802cb82 <_ZdlPvj>
 801ef4c:	4620      	mov	r0, r4
 801ef4e:	bd10      	pop	{r4, pc}

0801ef50 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801ef50:	b510      	push	{r4, lr}
 801ef52:	2104      	movs	r1, #4
 801ef54:	4604      	mov	r4, r0
 801ef56:	f00d fe14 	bl	802cb82 <_ZdlPvj>
 801ef5a:	4620      	mov	r0, r4
 801ef5c:	bd10      	pop	{r4, pc}

0801ef5e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801ef5e:	b510      	push	{r4, lr}
 801ef60:	2104      	movs	r1, #4
 801ef62:	4604      	mov	r4, r0
 801ef64:	f00d fe0d 	bl	802cb82 <_ZdlPvj>
 801ef68:	4620      	mov	r0, r4
 801ef6a:	bd10      	pop	{r4, pc}

0801ef6c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801ef6c:	b510      	push	{r4, lr}
 801ef6e:	2104      	movs	r1, #4
 801ef70:	4604      	mov	r4, r0
 801ef72:	f00d fe06 	bl	802cb82 <_ZdlPvj>
 801ef76:	4620      	mov	r0, r4
 801ef78:	bd10      	pop	{r4, pc}

0801ef7a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801ef7a:	b510      	push	{r4, lr}
 801ef7c:	2104      	movs	r1, #4
 801ef7e:	4604      	mov	r4, r0
 801ef80:	f00d fdff 	bl	802cb82 <_ZdlPvj>
 801ef84:	4620      	mov	r0, r4
 801ef86:	bd10      	pop	{r4, pc}

0801ef88 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801ef88:	b510      	push	{r4, lr}
 801ef8a:	2104      	movs	r1, #4
 801ef8c:	4604      	mov	r4, r0
 801ef8e:	f00d fdf8 	bl	802cb82 <_ZdlPvj>
 801ef92:	4620      	mov	r0, r4
 801ef94:	bd10      	pop	{r4, pc}

0801ef96 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801ef96:	b510      	push	{r4, lr}
 801ef98:	2104      	movs	r1, #4
 801ef9a:	4604      	mov	r4, r0
 801ef9c:	f00d fdf1 	bl	802cb82 <_ZdlPvj>
 801efa0:	4620      	mov	r0, r4
 801efa2:	bd10      	pop	{r4, pc}

0801efa4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801efa4:	b510      	push	{r4, lr}
 801efa6:	2104      	movs	r1, #4
 801efa8:	4604      	mov	r4, r0
 801efaa:	f00d fdea 	bl	802cb82 <_ZdlPvj>
 801efae:	4620      	mov	r0, r4
 801efb0:	bd10      	pop	{r4, pc}

0801efb2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801efb2:	b510      	push	{r4, lr}
 801efb4:	2104      	movs	r1, #4
 801efb6:	4604      	mov	r4, r0
 801efb8:	f00d fde3 	bl	802cb82 <_ZdlPvj>
 801efbc:	4620      	mov	r0, r4
 801efbe:	bd10      	pop	{r4, pc}

0801efc0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 801efc0:	b510      	push	{r4, lr}
 801efc2:	2104      	movs	r1, #4
 801efc4:	4604      	mov	r4, r0
 801efc6:	f00d fddc 	bl	802cb82 <_ZdlPvj>
 801efca:	4620      	mov	r0, r4
 801efcc:	bd10      	pop	{r4, pc}

0801efce <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801efce:	b510      	push	{r4, lr}
 801efd0:	2104      	movs	r1, #4
 801efd2:	4604      	mov	r4, r0
 801efd4:	f00d fdd5 	bl	802cb82 <_ZdlPvj>
 801efd8:	4620      	mov	r0, r4
 801efda:	bd10      	pop	{r4, pc}

0801efdc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801efdc:	b510      	push	{r4, lr}
 801efde:	2104      	movs	r1, #4
 801efe0:	4604      	mov	r4, r0
 801efe2:	f00d fdce 	bl	802cb82 <_ZdlPvj>
 801efe6:	4620      	mov	r0, r4
 801efe8:	bd10      	pop	{r4, pc}

0801efea <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801efea:	b510      	push	{r4, lr}
 801efec:	2104      	movs	r1, #4
 801efee:	4604      	mov	r4, r0
 801eff0:	f00d fdc7 	bl	802cb82 <_ZdlPvj>
 801eff4:	4620      	mov	r0, r4
 801eff6:	bd10      	pop	{r4, pc}

0801eff8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801eff8:	b510      	push	{r4, lr}
 801effa:	2104      	movs	r1, #4
 801effc:	4604      	mov	r4, r0
 801effe:	f00d fdc0 	bl	802cb82 <_ZdlPvj>
 801f002:	4620      	mov	r0, r4
 801f004:	bd10      	pop	{r4, pc}

0801f006 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 801f006:	b510      	push	{r4, lr}
 801f008:	2104      	movs	r1, #4
 801f00a:	4604      	mov	r4, r0
 801f00c:	f00d fdb9 	bl	802cb82 <_ZdlPvj>
 801f010:	4620      	mov	r0, r4
 801f012:	bd10      	pop	{r4, pc}

0801f014 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 801f014:	b510      	push	{r4, lr}
 801f016:	2104      	movs	r1, #4
 801f018:	4604      	mov	r4, r0
 801f01a:	f00d fdb2 	bl	802cb82 <_ZdlPvj>
 801f01e:	4620      	mov	r0, r4
 801f020:	bd10      	pop	{r4, pc}

0801f022 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801f022:	b510      	push	{r4, lr}
 801f024:	2104      	movs	r1, #4
 801f026:	4604      	mov	r4, r0
 801f028:	f00d fdab 	bl	802cb82 <_ZdlPvj>
 801f02c:	4620      	mov	r0, r4
 801f02e:	bd10      	pop	{r4, pc}

0801f030 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 801f030:	b510      	push	{r4, lr}
 801f032:	2104      	movs	r1, #4
 801f034:	4604      	mov	r4, r0
 801f036:	f00d fda4 	bl	802cb82 <_ZdlPvj>
 801f03a:	4620      	mov	r0, r4
 801f03c:	bd10      	pop	{r4, pc}
	...

0801f040 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801f040:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f044:	b08f      	sub	sp, #60	; 0x3c
 801f046:	461c      	mov	r4, r3
 801f048:	9205      	str	r2, [sp, #20]
 801f04a:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801f04e:	9100      	str	r1, [sp, #0]
 801f050:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801f052:	9201      	str	r2, [sp, #4]
 801f054:	2a00      	cmp	r2, #0
 801f056:	f000 8115 	beq.w	801f284 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 801f05a:	6820      	ldr	r0, [r4, #0]
 801f05c:	6861      	ldr	r1, [r4, #4]
 801f05e:	aa0a      	add	r2, sp, #40	; 0x28
 801f060:	c203      	stmia	r2!, {r0, r1}
 801f062:	6818      	ldr	r0, [r3, #0]
 801f064:	6859      	ldr	r1, [r3, #4]
 801f066:	aa0c      	add	r2, sp, #48	; 0x30
 801f068:	c203      	stmia	r2!, {r0, r1}
 801f06a:	a80a      	add	r0, sp, #40	; 0x28
 801f06c:	f7f9 faec 	bl	8018648 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f070:	4621      	mov	r1, r4
 801f072:	a80c      	add	r0, sp, #48	; 0x30
 801f074:	f7f9 fb2c 	bl	80186d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f078:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801f07c:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801f080:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801f084:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801f088:	bfde      	ittt	le
 801f08a:	b2b3      	uxthle	r3, r6
 801f08c:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801f090:	fb92 f3f3 	sdivle	r3, r2, r3
 801f094:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801f098:	bfc8      	it	gt
 801f09a:	2301      	movgt	r3, #1
 801f09c:	fb92 f1f3 	sdiv	r1, r2, r3
 801f0a0:	fa1f fc81 	uxth.w	ip, r1
 801f0a4:	fb0c 2413 	mls	r4, ip, r3, r2
 801f0a8:	fb14 f406 	smulbb	r4, r4, r6
 801f0ac:	441d      	add	r5, r3
 801f0ae:	4404      	add	r4, r0
 801f0b0:	4661      	mov	r1, ip
 801f0b2:	3d01      	subs	r5, #1
 801f0b4:	b2a4      	uxth	r4, r4
 801f0b6:	fb95 f5f3 	sdiv	r5, r5, r3
 801f0ba:	b131      	cbz	r1, 801f0ca <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 801f0bc:	9b05      	ldr	r3, [sp, #20]
 801f0be:	9900      	ldr	r1, [sp, #0]
 801f0c0:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801f0c4:	ba1b      	rev	r3, r3
 801f0c6:	4419      	add	r1, r3
 801f0c8:	9100      	str	r1, [sp, #0]
 801f0ca:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801f0ce:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
 801f0d2:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801f0d6:	4418      	add	r0, r3
 801f0d8:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801f0dc:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801f0e0:	441a      	add	r2, r3
 801f0e2:	4b6a      	ldr	r3, [pc, #424]	; (801f28c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801f0e4:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801f0e8:	6818      	ldr	r0, [r3, #0]
 801f0ea:	6803      	ldr	r3, [r0, #0]
 801f0ec:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f0ee:	4798      	blx	r3
 801f0f0:	4967      	ldr	r1, [pc, #412]	; (801f290 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 801f0f2:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801f0f6:	880b      	ldrh	r3, [r1, #0]
 801f0f8:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801f0fc:	9109      	str	r1, [sp, #36]	; 0x24
 801f0fe:	fb03 c202 	mla	r2, r3, r2, ip
 801f102:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801f106:	4373      	muls	r3, r6
 801f108:	b2ad      	uxth	r5, r5
 801f10a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801f10e:	00ad      	lsls	r5, r5, #2
 801f110:	9306      	str	r3, [sp, #24]
 801f112:	1d2b      	adds	r3, r5, #4
 801f114:	9307      	str	r3, [sp, #28]
 801f116:	9b01      	ldr	r3, [sp, #4]
 801f118:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801f11c:	9103      	str	r1, [sp, #12]
 801f11e:	f1c3 02ff 	rsb	r2, r3, #255	; 0xff
 801f122:	2c00      	cmp	r4, #0
 801f124:	bf0c      	ite	eq
 801f126:	46c6      	moveq	lr, r8
 801f128:	f04f 0e00 	movne.w	lr, #0
 801f12c:	2300      	movs	r3, #0
 801f12e:	b292      	uxth	r2, r2
 801f130:	fa1f fe8e 	uxth.w	lr, lr
 801f134:	9302      	str	r3, [sp, #8]
 801f136:	9204      	str	r2, [sp, #16]
 801f138:	9a06      	ldr	r2, [sp, #24]
 801f13a:	4282      	cmp	r2, r0
 801f13c:	f240 809d 	bls.w	801f27a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 801f140:	b963      	cbnz	r3, 801f15c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801f142:	9b00      	ldr	r3, [sp, #0]
 801f144:	781a      	ldrb	r2, [r3, #0]
 801f146:	0993      	lsrs	r3, r2, #6
 801f148:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801f14c:	9202      	str	r2, [sp, #8]
 801f14e:	1e5a      	subs	r2, r3, #1
 801f150:	2a02      	cmp	r2, #2
 801f152:	d815      	bhi.n	801f180 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 801f154:	9a00      	ldr	r2, [sp, #0]
 801f156:	3201      	adds	r2, #1
 801f158:	9200      	str	r2, [sp, #0]
 801f15a:	b29b      	uxth	r3, r3
 801f15c:	b1b4      	cbz	r4, 801f18c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 801f15e:	429c      	cmp	r4, r3
 801f160:	bf95      	itete	ls
 801f162:	1b1c      	subls	r4, r3, r4
 801f164:	1ae4      	subhi	r4, r4, r3
 801f166:	fa1f fa84 	uxthls.w	sl, r4
 801f16a:	b2a4      	uxthhi	r4, r4
 801f16c:	bf87      	ittee	hi
 801f16e:	4671      	movhi	r1, lr
 801f170:	f04f 0a00 	movhi.w	sl, #0
 801f174:	fa1f f188 	uxthls.w	r1, r8
 801f178:	2400      	movls	r4, #0
 801f17a:	4653      	mov	r3, sl
 801f17c:	468e      	mov	lr, r1
 801f17e:	e7db      	b.n	801f138 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 801f180:	9a00      	ldr	r2, [sp, #0]
 801f182:	9b00      	ldr	r3, [sp, #0]
 801f184:	3202      	adds	r2, #2
 801f186:	785b      	ldrb	r3, [r3, #1]
 801f188:	9200      	str	r2, [sp, #0]
 801f18a:	e7e7      	b.n	801f15c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801f18c:	2202      	movs	r2, #2
 801f18e:	4615      	mov	r5, r2
 801f190:	9907      	ldr	r1, [sp, #28]
 801f192:	9a02      	ldr	r2, [sp, #8]
 801f194:	fb15 1202 	smlabb	r2, r5, r2, r1
 801f198:	9905      	ldr	r1, [sp, #20]
 801f19a:	4573      	cmp	r3, lr
 801f19c:	f831 c002 	ldrh.w	ip, [r1, r2]
 801f1a0:	9a01      	ldr	r2, [sp, #4]
 801f1a2:	bf2b      	itete	cs
 801f1a4:	eba3 0a0e 	subcs.w	sl, r3, lr
 801f1a8:	ebae 0103 	subcc.w	r1, lr, r3
 801f1ac:	46f1      	movcs	r9, lr
 801f1ae:	4699      	movcc	r9, r3
 801f1b0:	bf27      	ittee	cs
 801f1b2:	fa1f fa8a 	uxthcs.w	sl, sl
 801f1b6:	4621      	movcs	r1, r4
 801f1b8:	b289      	uxthcc	r1, r1
 801f1ba:	46a2      	movcc	sl, r4
 801f1bc:	2aff      	cmp	r2, #255	; 0xff
 801f1be:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801f1c2:	d105      	bne.n	801f1d0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801f1c4:	4481      	add	r9, r0
 801f1c6:	4581      	cmp	r9, r0
 801f1c8:	d045      	beq.n	801f256 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801f1ca:	f820 cb02 	strh.w	ip, [r0], #2
 801f1ce:	e7fa      	b.n	801f1c6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 801f1d0:	9d03      	ldr	r5, [sp, #12]
 801f1d2:	ea4f 222c 	mov.w	r2, ip, asr #8
 801f1d6:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801f1da:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801f1de:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801f1e2:	436a      	muls	r2, r5
 801f1e4:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801f1e8:	fa5f fc8c 	uxtb.w	ip, ip
 801f1ec:	9208      	str	r2, [sp, #32]
 801f1ee:	fb0b fb05 	mul.w	fp, fp, r5
 801f1f2:	fb0c fc05 	mul.w	ip, ip, r5
 801f1f6:	4481      	add	r9, r0
 801f1f8:	4581      	cmp	r9, r0
 801f1fa:	d02c      	beq.n	801f256 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801f1fc:	8802      	ldrh	r2, [r0, #0]
 801f1fe:	9d04      	ldr	r5, [sp, #16]
 801f200:	9f04      	ldr	r7, [sp, #16]
 801f202:	1216      	asrs	r6, r2, #8
 801f204:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801f208:	fb16 f605 	smulbb	r6, r6, r5
 801f20c:	9d08      	ldr	r5, [sp, #32]
 801f20e:	442e      	add	r6, r5
 801f210:	10d5      	asrs	r5, r2, #3
 801f212:	00d2      	lsls	r2, r2, #3
 801f214:	b2d2      	uxtb	r2, r2
 801f216:	fb12 f207 	smulbb	r2, r2, r7
 801f21a:	b2b6      	uxth	r6, r6
 801f21c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801f220:	4462      	add	r2, ip
 801f222:	fb15 f507 	smulbb	r5, r5, r7
 801f226:	b292      	uxth	r2, r2
 801f228:	1c77      	adds	r7, r6, #1
 801f22a:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 801f22e:	1c57      	adds	r7, r2, #1
 801f230:	445d      	add	r5, fp
 801f232:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 801f236:	b2ad      	uxth	r5, r5
 801f238:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801f23c:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801f240:	4316      	orrs	r6, r2
 801f242:	1c6a      	adds	r2, r5, #1
 801f244:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801f248:	096d      	lsrs	r5, r5, #5
 801f24a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801f24e:	432e      	orrs	r6, r5
 801f250:	f820 6b02 	strh.w	r6, [r0], #2
 801f254:	e7d0      	b.n	801f1f8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 801f256:	4573      	cmp	r3, lr
 801f258:	d38f      	bcc.n	801f17a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801f25a:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801f25e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f260:	fa1f f188 	uxth.w	r1, r8
 801f264:	1a64      	subs	r4, r4, r1
 801f266:	881b      	ldrh	r3, [r3, #0]
 801f268:	b2a4      	uxth	r4, r4
 801f26a:	2c00      	cmp	r4, #0
 801f26c:	eba3 0308 	sub.w	r3, r3, r8
 801f270:	bf18      	it	ne
 801f272:	2100      	movne	r1, #0
 801f274:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f278:	e77f      	b.n	801f17a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801f27a:	4b04      	ldr	r3, [pc, #16]	; (801f28c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801f27c:	6818      	ldr	r0, [r3, #0]
 801f27e:	6803      	ldr	r3, [r0, #0]
 801f280:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f282:	4798      	blx	r3
 801f284:	b00f      	add	sp, #60	; 0x3c
 801f286:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f28a:	bf00      	nop
 801f28c:	2001383c 	.word	0x2001383c
 801f290:	20013836 	.word	0x20013836

0801f294 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801f294:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f298:	b09f      	sub	sp, #124	; 0x7c
 801f29a:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801f29e:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801f2a2:	9209      	str	r2, [sp, #36]	; 0x24
 801f2a4:	461d      	mov	r5, r3
 801f2a6:	4604      	mov	r4, r0
 801f2a8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f2aa:	2a00      	cmp	r2, #0
 801f2ac:	f000 81eb 	beq.w	801f686 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 801f2b0:	6828      	ldr	r0, [r5, #0]
 801f2b2:	6869      	ldr	r1, [r5, #4]
 801f2b4:	aa1a      	add	r2, sp, #104	; 0x68
 801f2b6:	c203      	stmia	r2!, {r0, r1}
 801f2b8:	6818      	ldr	r0, [r3, #0]
 801f2ba:	6859      	ldr	r1, [r3, #4]
 801f2bc:	aa1c      	add	r2, sp, #112	; 0x70
 801f2be:	c203      	stmia	r2!, {r0, r1}
 801f2c0:	a81a      	add	r0, sp, #104	; 0x68
 801f2c2:	f7f9 f9c1 	bl	8018648 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f2c6:	4629      	mov	r1, r5
 801f2c8:	a81c      	add	r0, sp, #112	; 0x70
 801f2ca:	f7f9 fa01 	bl	80186d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f2ce:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801f2d2:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	; 0x6e
 801f2d6:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	; 0x76
 801f2da:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801f2de:	bfd7      	itett	le
 801f2e0:	b29a      	uxthle	r2, r3
 801f2e2:	2201      	movgt	r2, #1
 801f2e4:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801f2e8:	fb91 f2f2 	sdivle	r2, r1, r2
 801f2ec:	9202      	str	r2, [sp, #8]
 801f2ee:	9802      	ldr	r0, [sp, #8]
 801f2f0:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801f2f4:	fb92 f0f0 	sdiv	r0, r2, r0
 801f2f8:	b280      	uxth	r0, r0
 801f2fa:	9010      	str	r0, [sp, #64]	; 0x40
 801f2fc:	9902      	ldr	r1, [sp, #8]
 801f2fe:	9802      	ldr	r0, [sp, #8]
 801f300:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801f302:	4488      	add	r8, r1
 801f304:	fb05 2510 	mls	r5, r5, r0, r2
 801f308:	fb15 f503 	smulbb	r5, r5, r3
 801f30c:	f108 38ff 	add.w	r8, r8, #4294967295
 801f310:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801f314:	fb98 f8f1 	sdiv	r8, r8, r1
 801f318:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801f31c:	440d      	add	r5, r1
 801f31e:	4419      	add	r1, r3
 801f320:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801f324:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801f328:	441a      	add	r2, r3
 801f32a:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801f32e:	9304      	str	r3, [sp, #16]
 801f330:	4b95      	ldr	r3, [pc, #596]	; (801f588 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801f332:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801f336:	6818      	ldr	r0, [r3, #0]
 801f338:	6803      	ldr	r3, [r0, #0]
 801f33a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f33c:	4798      	blx	r3
 801f33e:	4b93      	ldr	r3, [pc, #588]	; (801f58c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801f340:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801f344:	881a      	ldrh	r2, [r3, #0]
 801f346:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801f34a:	9318      	str	r3, [sp, #96]	; 0x60
 801f34c:	fb02 7101 	mla	r1, r2, r1, r7
 801f350:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801f354:	4356      	muls	r6, r2
 801f356:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 801f35a:	f108 0801 	add.w	r8, r8, #1
 801f35e:	920a      	str	r2, [sp, #40]	; 0x28
 801f360:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801f362:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 801f366:	930f      	str	r3, [sp, #60]	; 0x3c
 801f368:	fa1f f888 	uxth.w	r8, r8
 801f36c:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 801f370:	f108 0204 	add.w	r2, r8, #4
 801f374:	9211      	str	r2, [sp, #68]	; 0x44
 801f376:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801f378:	4b85      	ldr	r3, [pc, #532]	; (801f590 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801f37a:	f1c2 02ff 	rsb	r2, r2, #255	; 0xff
 801f37e:	b2ad      	uxth	r5, r5
 801f380:	9215      	str	r2, [sp, #84]	; 0x54
 801f382:	2d00      	cmp	r5, #0
 801f384:	9a04      	ldr	r2, [sp, #16]
 801f386:	f04f 0100 	mov.w	r1, #0
 801f38a:	bf18      	it	ne
 801f38c:	2200      	movne	r2, #0
 801f38e:	1b1b      	subs	r3, r3, r4
 801f390:	b292      	uxth	r2, r2
 801f392:	910d      	str	r1, [sp, #52]	; 0x34
 801f394:	9319      	str	r3, [sp, #100]	; 0x64
 801f396:	9910      	ldr	r1, [sp, #64]	; 0x40
 801f398:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f39a:	fa11 f383 	uxtah	r3, r1, r3
 801f39e:	9914      	ldr	r1, [sp, #80]	; 0x50
 801f3a0:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801f3a4:	3304      	adds	r3, #4
 801f3a6:	9306      	str	r3, [sp, #24]
 801f3a8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f3aa:	4283      	cmp	r3, r0
 801f3ac:	f240 8166 	bls.w	801f67c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 801f3b0:	9902      	ldr	r1, [sp, #8]
 801f3b2:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801f3b6:	fbb5 f3f3 	udiv	r3, r5, r3
 801f3ba:	1acb      	subs	r3, r1, r3
 801f3bc:	b29b      	uxth	r3, r3
 801f3be:	9316      	str	r3, [sp, #88]	; 0x58
 801f3c0:	9b06      	ldr	r3, [sp, #24]
 801f3c2:	9e06      	ldr	r6, [sp, #24]
 801f3c4:	7859      	ldrb	r1, [r3, #1]
 801f3c6:	789b      	ldrb	r3, [r3, #2]
 801f3c8:	7836      	ldrb	r6, [r6, #0]
 801f3ca:	9612      	str	r6, [sp, #72]	; 0x48
 801f3cc:	021b      	lsls	r3, r3, #8
 801f3ce:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 801f3d2:	9906      	ldr	r1, [sp, #24]
 801f3d4:	78c9      	ldrb	r1, [r1, #3]
 801f3d6:	430b      	orrs	r3, r1
 801f3d8:	9913      	ldr	r1, [sp, #76]	; 0x4c
 801f3da:	3601      	adds	r6, #1
 801f3dc:	4419      	add	r1, r3
 801f3de:	9605      	str	r6, [sp, #20]
 801f3e0:	1c4e      	adds	r6, r1, #1
 801f3e2:	9603      	str	r6, [sp, #12]
 801f3e4:	7849      	ldrb	r1, [r1, #1]
 801f3e6:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801f3e8:	0209      	lsls	r1, r1, #8
 801f3ea:	5cf3      	ldrb	r3, [r6, r3]
 801f3ec:	f401 71ff 	and.w	r1, r1, #510	; 0x1fe
 801f3f0:	4319      	orrs	r1, r3
 801f3f2:	b28b      	uxth	r3, r1
 801f3f4:	930c      	str	r3, [sp, #48]	; 0x30
 801f3f6:	2300      	movs	r3, #0
 801f3f8:	f04f 0a01 	mov.w	sl, #1
 801f3fc:	9307      	str	r3, [sp, #28]
 801f3fe:	469c      	mov	ip, r3
 801f400:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801f404:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801f408:	46d3      	mov	fp, sl
 801f40a:	4657      	mov	r7, sl
 801f40c:	930e      	str	r3, [sp, #56]	; 0x38
 801f40e:	2d00      	cmp	r5, #0
 801f410:	d07e      	beq.n	801f510 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 801f412:	42af      	cmp	r7, r5
 801f414:	d26e      	bcs.n	801f4f4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 801f416:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f418:	9201      	str	r2, [sp, #4]
 801f41a:	1bed      	subs	r5, r5, r7
 801f41c:	4283      	cmp	r3, r0
 801f41e:	b2ad      	uxth	r5, r5
 801f420:	d802      	bhi.n	801f428 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 801f422:	e073      	b.n	801f50c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 801f424:	2b00      	cmp	r3, #0
 801f426:	d15f      	bne.n	801f4e8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 801f428:	9b03      	ldr	r3, [sp, #12]
 801f42a:	785b      	ldrb	r3, [r3, #1]
 801f42c:	f1cb 0207 	rsb	r2, fp, #7
 801f430:	4093      	lsls	r3, r2
 801f432:	005b      	lsls	r3, r3, #1
 801f434:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801f438:	9b03      	ldr	r3, [sp, #12]
 801f43a:	781b      	ldrb	r3, [r3, #0]
 801f43c:	fa43 f30b 	asr.w	r3, r3, fp
 801f440:	b2db      	uxtb	r3, r3
 801f442:	4313      	orrs	r3, r2
 801f444:	f10b 0201 	add.w	r2, fp, #1
 801f448:	fa5f fb82 	uxtb.w	fp, r2
 801f44c:	9a03      	ldr	r2, [sp, #12]
 801f44e:	f1bb 0f08 	cmp.w	fp, #8
 801f452:	bf15      	itete	ne
 801f454:	3201      	addne	r2, #1
 801f456:	3202      	addeq	r2, #2
 801f458:	9203      	strne	r2, [sp, #12]
 801f45a:	9203      	streq	r2, [sp, #12]
 801f45c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801f45e:	b29f      	uxth	r7, r3
 801f460:	bf08      	it	eq
 801f462:	f04f 0b00 	moveq.w	fp, #0
 801f466:	42ba      	cmp	r2, r7
 801f468:	d309      	bcc.n	801f47e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 801f46a:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801f46e:	2301      	movs	r3, #1
 801f470:	9a05      	ldr	r2, [sp, #20]
 801f472:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 801f476:	d30e      	bcc.n	801f496 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 801f478:	469a      	mov	sl, r3
 801f47a:	2600      	movs	r6, #0
 801f47c:	e035      	b.n	801f4ea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 801f47e:	9b05      	ldr	r3, [sp, #20]
 801f480:	429f      	cmp	r7, r3
 801f482:	d318      	bcc.n	801f4b6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 801f484:	eb04 030a 	add.w	r3, r4, sl
 801f488:	f894 2804 	ldrb.w	r2, [r4, #2052]	; 0x804
 801f48c:	f883 2804 	strb.w	r2, [r3, #2052]	; 0x804
 801f490:	f10a 0301 	add.w	r3, sl, #1
 801f494:	b29b      	uxth	r3, r3
 801f496:	9a05      	ldr	r2, [sp, #20]
 801f498:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801f49c:	990c      	ldr	r1, [sp, #48]	; 0x30
 801f49e:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801f4a2:	7116      	strb	r6, [r2, #4]
 801f4a4:	f10a 0601 	add.w	r6, sl, #1
 801f4a8:	80d1      	strh	r1, [r2, #6]
 801f4aa:	7156      	strb	r6, [r2, #5]
 801f4ac:	9a05      	ldr	r2, [sp, #20]
 801f4ae:	3201      	adds	r2, #1
 801f4b0:	b292      	uxth	r2, r2
 801f4b2:	9205      	str	r2, [sp, #20]
 801f4b4:	e7e0      	b.n	801f478 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 801f4b6:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 801f4ba:	463a      	mov	r2, r7
 801f4bc:	795b      	ldrb	r3, [r3, #5]
 801f4be:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801f4c2:	4426      	add	r6, r4
 801f4c4:	9919      	ldr	r1, [sp, #100]	; 0x64
 801f4c6:	eb01 0c06 	add.w	ip, r1, r6
 801f4ca:	f1bc 0f00 	cmp.w	ip, #0
 801f4ce:	dd07      	ble.n	801f4e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 801f4d0:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801f4d4:	f892 c004 	ldrb.w	ip, [r2, #4]
 801f4d8:	f806 cd01 	strb.w	ip, [r6, #-1]!
 801f4dc:	88d2      	ldrh	r2, [r2, #6]
 801f4de:	e7f1      	b.n	801f4c4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 801f4e0:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801f4e4:	b29b      	uxth	r3, r3
 801f4e6:	e7c3      	b.n	801f470 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 801f4e8:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801f4ea:	970c      	str	r7, [sp, #48]	; 0x30
 801f4ec:	9a01      	ldr	r2, [sp, #4]
 801f4ee:	46b4      	mov	ip, r6
 801f4f0:	461f      	mov	r7, r3
 801f4f2:	e78c      	b.n	801f40e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 801f4f4:	1b7b      	subs	r3, r7, r5
 801f4f6:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801f4fa:	9201      	str	r2, [sp, #4]
 801f4fc:	eb0c 0605 	add.w	r6, ip, r5
 801f500:	b29b      	uxth	r3, r3
 801f502:	b2b6      	uxth	r6, r6
 801f504:	2500      	movs	r5, #0
 801f506:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801f508:	4282      	cmp	r2, r0
 801f50a:	d88b      	bhi.n	801f424 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801f50c:	9a01      	ldr	r2, [sp, #4]
 801f50e:	e74b      	b.n	801f3a8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 801f510:	4297      	cmp	r7, r2
 801f512:	d332      	bcc.n	801f57a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 801f514:	1abb      	subs	r3, r7, r2
 801f516:	b29b      	uxth	r3, r3
 801f518:	9208      	str	r2, [sp, #32]
 801f51a:	9501      	str	r5, [sp, #4]
 801f51c:	9909      	ldr	r1, [sp, #36]	; 0x24
 801f51e:	29ff      	cmp	r1, #255	; 0xff
 801f520:	9908      	ldr	r1, [sp, #32]
 801f522:	eb0c 0601 	add.w	r6, ip, r1
 801f526:	d135      	bne.n	801f594 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 801f528:	f1a0 0e02 	sub.w	lr, r0, #2
 801f52c:	b2b6      	uxth	r6, r6
 801f52e:	45b4      	cmp	ip, r6
 801f530:	f040 808c 	bne.w	801f64c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 801f534:	9908      	ldr	r1, [sp, #32]
 801f536:	4297      	cmp	r7, r2
 801f538:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801f53c:	d3e2      	bcc.n	801f504 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 801f53e:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801f540:	9904      	ldr	r1, [sp, #16]
 801f542:	8812      	ldrh	r2, [r2, #0]
 801f544:	1a52      	subs	r2, r2, r1
 801f546:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801f54a:	9a07      	ldr	r2, [sp, #28]
 801f54c:	9916      	ldr	r1, [sp, #88]	; 0x58
 801f54e:	3201      	adds	r2, #1
 801f550:	428a      	cmp	r2, r1
 801f552:	9207      	str	r2, [sp, #28]
 801f554:	f040 8087 	bne.w	801f666 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 801f558:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801f55c:	f8bd 7068 	ldrh.w	r7, [sp, #104]	; 0x68
 801f560:	9b04      	ldr	r3, [sp, #16]
 801f562:	1bed      	subs	r5, r5, r7
 801f564:	b2ad      	uxth	r5, r5
 801f566:	2d00      	cmp	r5, #0
 801f568:	bf08      	it	eq
 801f56a:	461a      	moveq	r2, r3
 801f56c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f56e:	bf18      	it	ne
 801f570:	2200      	movne	r2, #0
 801f572:	3301      	adds	r3, #1
 801f574:	930d      	str	r3, [sp, #52]	; 0x34
 801f576:	b292      	uxth	r2, r2
 801f578:	e70d      	b.n	801f396 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 801f57a:	1bd1      	subs	r1, r2, r7
 801f57c:	b28b      	uxth	r3, r1
 801f57e:	9301      	str	r3, [sp, #4]
 801f580:	9708      	str	r7, [sp, #32]
 801f582:	462b      	mov	r3, r5
 801f584:	e7ca      	b.n	801f51c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 801f586:	bf00      	nop
 801f588:	2001383c 	.word	0x2001383c
 801f58c:	20013836 	.word	0x20013836
 801f590:	fffff7fb 	.word	0xfffff7fb
 801f594:	b2b6      	uxth	r6, r6
 801f596:	900b      	str	r0, [sp, #44]	; 0x2c
 801f598:	45b4      	cmp	ip, r6
 801f59a:	d0cb      	beq.n	801f534 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 801f59c:	f10c 0101 	add.w	r1, ip, #1
 801f5a0:	44a4      	add	ip, r4
 801f5a2:	9117      	str	r1, [sp, #92]	; 0x5c
 801f5a4:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801f5a8:	9911      	ldr	r1, [sp, #68]	; 0x44
 801f5aa:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801f5ae:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801f5b0:	f8b1 c000 	ldrh.w	ip, [r1]
 801f5b4:	990e      	ldr	r1, [sp, #56]	; 0x38
 801f5b6:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 801f5ba:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801f5be:	fb1e fe01 	smulbb	lr, lr, r1
 801f5c2:	ea4f 2825 	mov.w	r8, r5, asr #8
 801f5c6:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801f5c8:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801f5cc:	fb08 e801 	mla	r8, r8, r1, lr
 801f5d0:	ea4f 09ec 	mov.w	r9, ip, asr #3
 801f5d4:	990e      	ldr	r1, [sp, #56]	; 0x38
 801f5d6:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801f5da:	fb19 f901 	smulbb	r9, r9, r1
 801f5de:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 801f5e2:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801f5e4:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801f5e8:	fb0e 9e01 	mla	lr, lr, r1, r9
 801f5ec:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801f5f0:	990e      	ldr	r1, [sp, #56]	; 0x38
 801f5f2:	fa5f fc8c 	uxtb.w	ip, ip
 801f5f6:	fb1c fc01 	smulbb	ip, ip, r1
 801f5fa:	00ed      	lsls	r5, r5, #3
 801f5fc:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801f5fe:	b2ed      	uxtb	r5, r5
 801f600:	fb05 c501 	mla	r5, r5, r1, ip
 801f604:	fa1f f888 	uxth.w	r8, r8
 801f608:	fa1f fe8e 	uxth.w	lr, lr
 801f60c:	b2ad      	uxth	r5, r5
 801f60e:	f108 0c01 	add.w	ip, r8, #1
 801f612:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 801f616:	f10e 0901 	add.w	r9, lr, #1
 801f61a:	f105 0c01 	add.w	ip, r5, #1
 801f61e:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 801f622:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 801f626:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801f62a:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801f62e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801f632:	ea4c 0808 	orr.w	r8, ip, r8
 801f636:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801f638:	f8bd c05c 	ldrh.w	ip, [sp, #92]	; 0x5c
 801f63c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801f640:	ea48 0809 	orr.w	r8, r8, r9
 801f644:	f821 8b02 	strh.w	r8, [r1], #2
 801f648:	910b      	str	r1, [sp, #44]	; 0x2c
 801f64a:	e7a5      	b.n	801f598 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 801f64c:	f10c 0801 	add.w	r8, ip, #1
 801f650:	44a4      	add	ip, r4
 801f652:	9911      	ldr	r1, [sp, #68]	; 0x44
 801f654:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801f658:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801f65c:	f82e 5f02 	strh.w	r5, [lr, #2]!
 801f660:	fa1f fc88 	uxth.w	ip, r8
 801f664:	e763      	b.n	801f52e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 801f666:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801f66a:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801f66e:	1aad      	subs	r5, r5, r2
 801f670:	b2ad      	uxth	r5, r5
 801f672:	2d00      	cmp	r5, #0
 801f674:	bf18      	it	ne
 801f676:	2200      	movne	r2, #0
 801f678:	9201      	str	r2, [sp, #4]
 801f67a:	e744      	b.n	801f506 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 801f67c:	4b03      	ldr	r3, [pc, #12]	; (801f68c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 801f67e:	6818      	ldr	r0, [r3, #0]
 801f680:	6803      	ldr	r3, [r0, #0]
 801f682:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f684:	4798      	blx	r3
 801f686:	b01f      	add	sp, #124	; 0x7c
 801f688:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f68c:	2001383c 	.word	0x2001383c

0801f690 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801f690:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f694:	b08f      	sub	sp, #60	; 0x3c
 801f696:	461c      	mov	r4, r3
 801f698:	9203      	str	r2, [sp, #12]
 801f69a:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801f69e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801f6a0:	9202      	str	r2, [sp, #8]
 801f6a2:	460f      	mov	r7, r1
 801f6a4:	2a00      	cmp	r2, #0
 801f6a6:	f000 8128 	beq.w	801f8fa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 801f6aa:	6820      	ldr	r0, [r4, #0]
 801f6ac:	6861      	ldr	r1, [r4, #4]
 801f6ae:	aa0a      	add	r2, sp, #40	; 0x28
 801f6b0:	c203      	stmia	r2!, {r0, r1}
 801f6b2:	6818      	ldr	r0, [r3, #0]
 801f6b4:	6859      	ldr	r1, [r3, #4]
 801f6b6:	aa0c      	add	r2, sp, #48	; 0x30
 801f6b8:	c203      	stmia	r2!, {r0, r1}
 801f6ba:	a80a      	add	r0, sp, #40	; 0x28
 801f6bc:	f7f8 ffc4 	bl	8018648 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f6c0:	4621      	mov	r1, r4
 801f6c2:	a80c      	add	r0, sp, #48	; 0x30
 801f6c4:	f7f9 f804 	bl	80186d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f6c8:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801f6cc:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801f6d0:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801f6d4:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801f6d8:	bfde      	ittt	le
 801f6da:	b2b3      	uxthle	r3, r6
 801f6dc:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801f6e0:	fb92 f3f3 	sdivle	r3, r2, r3
 801f6e4:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801f6e8:	bfc8      	it	gt
 801f6ea:	2301      	movgt	r3, #1
 801f6ec:	fb92 f1f3 	sdiv	r1, r2, r3
 801f6f0:	fa1f fc81 	uxth.w	ip, r1
 801f6f4:	fb0c 2413 	mls	r4, ip, r3, r2
 801f6f8:	fb14 f406 	smulbb	r4, r4, r6
 801f6fc:	441d      	add	r5, r3
 801f6fe:	4404      	add	r4, r0
 801f700:	4661      	mov	r1, ip
 801f702:	3d01      	subs	r5, #1
 801f704:	b2a4      	uxth	r4, r4
 801f706:	fb95 f5f3 	sdiv	r5, r5, r3
 801f70a:	b121      	cbz	r1, 801f716 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 801f70c:	9b03      	ldr	r3, [sp, #12]
 801f70e:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801f712:	ba1b      	rev	r3, r3
 801f714:	441f      	add	r7, r3
 801f716:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801f71a:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801f71e:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801f722:	4418      	add	r0, r3
 801f724:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801f728:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801f72c:	441a      	add	r2, r3
 801f72e:	4b74      	ldr	r3, [pc, #464]	; (801f900 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801f730:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801f734:	6818      	ldr	r0, [r3, #0]
 801f736:	6803      	ldr	r3, [r0, #0]
 801f738:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f73a:	4798      	blx	r3
 801f73c:	4a71      	ldr	r2, [pc, #452]	; (801f904 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 801f73e:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 801f742:	8813      	ldrh	r3, [r2, #0]
 801f744:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801f748:	9209      	str	r2, [sp, #36]	; 0x24
 801f74a:	fb03 c101 	mla	r1, r3, r1, ip
 801f74e:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801f752:	4373      	muls	r3, r6
 801f754:	b2ad      	uxth	r5, r5
 801f756:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801f75a:	00ad      	lsls	r5, r5, #2
 801f75c:	2c00      	cmp	r4, #0
 801f75e:	9304      	str	r3, [sp, #16]
 801f760:	f105 0304 	add.w	r3, r5, #4
 801f764:	9305      	str	r3, [sp, #20]
 801f766:	bf0c      	ite	eq
 801f768:	46c8      	moveq	r8, r9
 801f76a:	f04f 0800 	movne.w	r8, #0
 801f76e:	2300      	movs	r3, #0
 801f770:	fa1f f888 	uxth.w	r8, r8
 801f774:	9301      	str	r3, [sp, #4]
 801f776:	9a04      	ldr	r2, [sp, #16]
 801f778:	4282      	cmp	r2, r0
 801f77a:	f240 80b9 	bls.w	801f8f0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 801f77e:	b95b      	cbnz	r3, 801f798 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 801f780:	783a      	ldrb	r2, [r7, #0]
 801f782:	0993      	lsrs	r3, r2, #6
 801f784:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801f788:	9201      	str	r2, [sp, #4]
 801f78a:	1e5a      	subs	r2, r3, #1
 801f78c:	2a02      	cmp	r2, #2
 801f78e:	bf8d      	iteet	hi
 801f790:	787b      	ldrbhi	r3, [r7, #1]
 801f792:	3701      	addls	r7, #1
 801f794:	b29b      	uxthls	r3, r3
 801f796:	3702      	addhi	r7, #2
 801f798:	b184      	cbz	r4, 801f7bc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 801f79a:	429c      	cmp	r4, r3
 801f79c:	bf95      	itete	ls
 801f79e:	1b1c      	subls	r4, r3, r4
 801f7a0:	1ae4      	subhi	r4, r4, r3
 801f7a2:	fa1f fa84 	uxthls.w	sl, r4
 801f7a6:	b2a4      	uxthhi	r4, r4
 801f7a8:	bf87      	ittee	hi
 801f7aa:	46c4      	movhi	ip, r8
 801f7ac:	f04f 0a00 	movhi.w	sl, #0
 801f7b0:	fa1f fc89 	uxthls.w	ip, r9
 801f7b4:	2400      	movls	r4, #0
 801f7b6:	4653      	mov	r3, sl
 801f7b8:	46e0      	mov	r8, ip
 801f7ba:	e7dc      	b.n	801f776 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 801f7bc:	2204      	movs	r2, #4
 801f7be:	4615      	mov	r5, r2
 801f7c0:	9905      	ldr	r1, [sp, #20]
 801f7c2:	9a01      	ldr	r2, [sp, #4]
 801f7c4:	fb15 1202 	smlabb	r2, r5, r2, r1
 801f7c8:	9903      	ldr	r1, [sp, #12]
 801f7ca:	588a      	ldr	r2, [r1, r2]
 801f7cc:	4543      	cmp	r3, r8
 801f7ce:	bf27      	ittee	cs
 801f7d0:	eba3 0a08 	subcs.w	sl, r3, r8
 801f7d4:	46c6      	movcs	lr, r8
 801f7d6:	eba8 0c03 	subcc.w	ip, r8, r3
 801f7da:	469e      	movcc	lr, r3
 801f7dc:	ea4f 6112 	mov.w	r1, r2, lsr #24
 801f7e0:	bf27      	ittee	cs
 801f7e2:	fa1f fa8a 	uxthcs.w	sl, sl
 801f7e6:	46a4      	movcs	ip, r4
 801f7e8:	fa1f fc8c 	uxthcc.w	ip, ip
 801f7ec:	46a2      	movcc	sl, r4
 801f7ee:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 801f7f2:	2900      	cmp	r1, #0
 801f7f4:	d066      	beq.n	801f8c4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 801f7f6:	29ff      	cmp	r1, #255	; 0xff
 801f7f8:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801f7fc:	d114      	bne.n	801f828 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801f7fe:	9d02      	ldr	r5, [sp, #8]
 801f800:	2dff      	cmp	r5, #255	; 0xff
 801f802:	d111      	bne.n	801f828 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801f804:	0951      	lsrs	r1, r2, #5
 801f806:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801f80a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801f80e:	f026 0607 	bic.w	r6, r6, #7
 801f812:	430e      	orrs	r6, r1
 801f814:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f818:	4316      	orrs	r6, r2
 801f81a:	b2b6      	uxth	r6, r6
 801f81c:	4486      	add	lr, r0
 801f81e:	4586      	cmp	lr, r0
 801f820:	d051      	beq.n	801f8c6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801f822:	f820 6b02 	strh.w	r6, [r0], #2
 801f826:	e7fa      	b.n	801f81e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 801f828:	9d02      	ldr	r5, [sp, #8]
 801f82a:	4369      	muls	r1, r5
 801f82c:	1c4d      	adds	r5, r1, #1
 801f82e:	eb05 2521 	add.w	r5, r5, r1, asr #8
 801f832:	122d      	asrs	r5, r5, #8
 801f834:	ea6f 0b05 	mvn.w	fp, r5
 801f838:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801f83c:	b2ad      	uxth	r5, r5
 801f83e:	b2f6      	uxtb	r6, r6
 801f840:	b2d2      	uxtb	r2, r2
 801f842:	fb11 f105 	smulbb	r1, r1, r5
 801f846:	fb16 f605 	smulbb	r6, r6, r5
 801f84a:	fb12 f205 	smulbb	r2, r2, r5
 801f84e:	b289      	uxth	r1, r1
 801f850:	b2b6      	uxth	r6, r6
 801f852:	b292      	uxth	r2, r2
 801f854:	9106      	str	r1, [sp, #24]
 801f856:	9607      	str	r6, [sp, #28]
 801f858:	9208      	str	r2, [sp, #32]
 801f85a:	4486      	add	lr, r0
 801f85c:	fa5f fb8b 	uxtb.w	fp, fp
 801f860:	4586      	cmp	lr, r0
 801f862:	d030      	beq.n	801f8c6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801f864:	8802      	ldrh	r2, [r0, #0]
 801f866:	9906      	ldr	r1, [sp, #24]
 801f868:	1216      	asrs	r6, r2, #8
 801f86a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801f86e:	10d5      	asrs	r5, r2, #3
 801f870:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801f874:	fb06 160b 	mla	r6, r6, fp, r1
 801f878:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801f87c:	9907      	ldr	r1, [sp, #28]
 801f87e:	00d2      	lsls	r2, r2, #3
 801f880:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801f884:	fb05 150b 	mla	r5, r5, fp, r1
 801f888:	b2d2      	uxtb	r2, r2
 801f88a:	9908      	ldr	r1, [sp, #32]
 801f88c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801f890:	b2b6      	uxth	r6, r6
 801f892:	fb02 120b 	mla	r2, r2, fp, r1
 801f896:	b292      	uxth	r2, r2
 801f898:	1c71      	adds	r1, r6, #1
 801f89a:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 801f89e:	1c51      	adds	r1, r2, #1
 801f8a0:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801f8a4:	b2ad      	uxth	r5, r5
 801f8a6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801f8aa:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801f8ae:	4316      	orrs	r6, r2
 801f8b0:	1c6a      	adds	r2, r5, #1
 801f8b2:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801f8b6:	096d      	lsrs	r5, r5, #5
 801f8b8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801f8bc:	432e      	orrs	r6, r5
 801f8be:	f820 6b02 	strh.w	r6, [r0], #2
 801f8c2:	e7cd      	b.n	801f860 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 801f8c4:	4470      	add	r0, lr
 801f8c6:	4543      	cmp	r3, r8
 801f8c8:	f4ff af75 	bcc.w	801f7b6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801f8cc:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801f8d0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f8d2:	fa1f fc89 	uxth.w	ip, r9
 801f8d6:	eba4 040c 	sub.w	r4, r4, ip
 801f8da:	881b      	ldrh	r3, [r3, #0]
 801f8dc:	b2a4      	uxth	r4, r4
 801f8de:	2c00      	cmp	r4, #0
 801f8e0:	eba3 0309 	sub.w	r3, r3, r9
 801f8e4:	bf18      	it	ne
 801f8e6:	f04f 0c00 	movne.w	ip, #0
 801f8ea:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f8ee:	e762      	b.n	801f7b6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801f8f0:	4b03      	ldr	r3, [pc, #12]	; (801f900 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801f8f2:	6818      	ldr	r0, [r3, #0]
 801f8f4:	6803      	ldr	r3, [r0, #0]
 801f8f6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f8f8:	4798      	blx	r3
 801f8fa:	b00f      	add	sp, #60	; 0x3c
 801f8fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f900:	2001383c 	.word	0x2001383c
 801f904:	20013836 	.word	0x20013836

0801f908 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801f908:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f90c:	b093      	sub	sp, #76	; 0x4c
 801f90e:	461c      	mov	r4, r3
 801f910:	9205      	str	r2, [sp, #20]
 801f912:	f89d 2074 	ldrb.w	r2, [sp, #116]	; 0x74
 801f916:	9101      	str	r1, [sp, #4]
 801f918:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801f91a:	9202      	str	r2, [sp, #8]
 801f91c:	2a00      	cmp	r2, #0
 801f91e:	f000 812c 	beq.w	801fb7a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801f922:	6820      	ldr	r0, [r4, #0]
 801f924:	6861      	ldr	r1, [r4, #4]
 801f926:	aa0e      	add	r2, sp, #56	; 0x38
 801f928:	c203      	stmia	r2!, {r0, r1}
 801f92a:	6818      	ldr	r0, [r3, #0]
 801f92c:	6859      	ldr	r1, [r3, #4]
 801f92e:	aa10      	add	r2, sp, #64	; 0x40
 801f930:	c203      	stmia	r2!, {r0, r1}
 801f932:	a80e      	add	r0, sp, #56	; 0x38
 801f934:	f7f8 fe88 	bl	8018648 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f938:	4621      	mov	r1, r4
 801f93a:	a810      	add	r0, sp, #64	; 0x40
 801f93c:	f7f8 fec8 	bl	80186d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f940:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801f944:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
 801f948:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 801f94c:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801f950:	bfde      	ittt	le
 801f952:	b2b3      	uxthle	r3, r6
 801f954:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801f958:	fb92 f3f3 	sdivle	r3, r2, r3
 801f95c:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801f960:	bfc8      	it	gt
 801f962:	2301      	movgt	r3, #1
 801f964:	fb92 f1f3 	sdiv	r1, r2, r3
 801f968:	fa1f fc81 	uxth.w	ip, r1
 801f96c:	fb0c 2413 	mls	r4, ip, r3, r2
 801f970:	fb14 f406 	smulbb	r4, r4, r6
 801f974:	441d      	add	r5, r3
 801f976:	4404      	add	r4, r0
 801f978:	4661      	mov	r1, ip
 801f97a:	3d01      	subs	r5, #1
 801f97c:	b2a4      	uxth	r4, r4
 801f97e:	fb95 f5f3 	sdiv	r5, r5, r3
 801f982:	b131      	cbz	r1, 801f992 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 801f984:	9b05      	ldr	r3, [sp, #20]
 801f986:	9901      	ldr	r1, [sp, #4]
 801f988:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801f98c:	ba1b      	rev	r3, r3
 801f98e:	4419      	add	r1, r3
 801f990:	9101      	str	r1, [sp, #4]
 801f992:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801f996:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801f99a:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	; 0x46
 801f99e:	4418      	add	r0, r3
 801f9a0:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 801f9a4:	f8ad 0040 	strh.w	r0, [sp, #64]	; 0x40
 801f9a8:	441a      	add	r2, r3
 801f9aa:	4b75      	ldr	r3, [pc, #468]	; (801fb80 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801f9ac:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 801f9b0:	6818      	ldr	r0, [r3, #0]
 801f9b2:	6803      	ldr	r3, [r0, #0]
 801f9b4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f9b6:	4798      	blx	r3
 801f9b8:	4972      	ldr	r1, [pc, #456]	; (801fb84 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 801f9ba:	f9bd c040 	ldrsh.w	ip, [sp, #64]	; 0x40
 801f9be:	880b      	ldrh	r3, [r1, #0]
 801f9c0:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801f9c4:	910d      	str	r1, [sp, #52]	; 0x34
 801f9c6:	fb03 c202 	mla	r2, r3, r2, ip
 801f9ca:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801f9ce:	4373      	muls	r3, r6
 801f9d0:	b2ad      	uxth	r5, r5
 801f9d2:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801f9d6:	00ad      	lsls	r5, r5, #2
 801f9d8:	9308      	str	r3, [sp, #32]
 801f9da:	1d2b      	adds	r3, r5, #4
 801f9dc:	9309      	str	r3, [sp, #36]	; 0x24
 801f9de:	9b02      	ldr	r3, [sp, #8]
 801f9e0:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801f9e4:	9106      	str	r1, [sp, #24]
 801f9e6:	43da      	mvns	r2, r3
 801f9e8:	2c00      	cmp	r4, #0
 801f9ea:	bf0c      	ite	eq
 801f9ec:	46dc      	moveq	ip, fp
 801f9ee:	f04f 0c00 	movne.w	ip, #0
 801f9f2:	2300      	movs	r3, #0
 801f9f4:	b2d2      	uxtb	r2, r2
 801f9f6:	fa1f fc8c 	uxth.w	ip, ip
 801f9fa:	9303      	str	r3, [sp, #12]
 801f9fc:	9207      	str	r2, [sp, #28]
 801f9fe:	9a08      	ldr	r2, [sp, #32]
 801fa00:	4282      	cmp	r2, r0
 801fa02:	f240 80b5 	bls.w	801fb70 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801fa06:	b963      	cbnz	r3, 801fa22 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801fa08:	9b01      	ldr	r3, [sp, #4]
 801fa0a:	781a      	ldrb	r2, [r3, #0]
 801fa0c:	0993      	lsrs	r3, r2, #6
 801fa0e:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801fa12:	9203      	str	r2, [sp, #12]
 801fa14:	1e5a      	subs	r2, r3, #1
 801fa16:	2a02      	cmp	r2, #2
 801fa18:	d815      	bhi.n	801fa46 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 801fa1a:	9a01      	ldr	r2, [sp, #4]
 801fa1c:	3201      	adds	r2, #1
 801fa1e:	9201      	str	r2, [sp, #4]
 801fa20:	b29b      	uxth	r3, r3
 801fa22:	b1b4      	cbz	r4, 801fa52 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 801fa24:	429c      	cmp	r4, r3
 801fa26:	bf95      	itete	ls
 801fa28:	1b1c      	subls	r4, r3, r4
 801fa2a:	1ae4      	subhi	r4, r4, r3
 801fa2c:	fa1f f884 	uxthls.w	r8, r4
 801fa30:	b2a4      	uxthhi	r4, r4
 801fa32:	bf87      	ittee	hi
 801fa34:	4666      	movhi	r6, ip
 801fa36:	f04f 0800 	movhi.w	r8, #0
 801fa3a:	fa1f f68b 	uxthls.w	r6, fp
 801fa3e:	2400      	movls	r4, #0
 801fa40:	4643      	mov	r3, r8
 801fa42:	46b4      	mov	ip, r6
 801fa44:	e7db      	b.n	801f9fe <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 801fa46:	9a01      	ldr	r2, [sp, #4]
 801fa48:	9b01      	ldr	r3, [sp, #4]
 801fa4a:	3202      	adds	r2, #2
 801fa4c:	785b      	ldrb	r3, [r3, #1]
 801fa4e:	9201      	str	r2, [sp, #4]
 801fa50:	e7e7      	b.n	801fa22 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801fa52:	2203      	movs	r2, #3
 801fa54:	4615      	mov	r5, r2
 801fa56:	9909      	ldr	r1, [sp, #36]	; 0x24
 801fa58:	9a03      	ldr	r2, [sp, #12]
 801fa5a:	fb15 1202 	smlabb	r2, r5, r2, r1
 801fa5e:	9905      	ldr	r1, [sp, #20]
 801fa60:	4563      	cmp	r3, ip
 801fa62:	eb01 0502 	add.w	r5, r1, r2
 801fa66:	9902      	ldr	r1, [sp, #8]
 801fa68:	bf29      	itett	cs
 801fa6a:	eba3 080c 	subcs.w	r8, r3, ip
 801fa6e:	ebac 0603 	subcc.w	r6, ip, r3
 801fa72:	fa1f f888 	uxthcs.w	r8, r8
 801fa76:	46e1      	movcs	r9, ip
 801fa78:	bf2f      	iteee	cs
 801fa7a:	4626      	movcs	r6, r4
 801fa7c:	b2b6      	uxthcc	r6, r6
 801fa7e:	4699      	movcc	r9, r3
 801fa80:	46a0      	movcc	r8, r4
 801fa82:	29ff      	cmp	r1, #255	; 0xff
 801fa84:	d04a      	beq.n	801fb1c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 801fa86:	9f06      	ldr	r7, [sp, #24]
 801fa88:	78a9      	ldrb	r1, [r5, #2]
 801fa8a:	9004      	str	r0, [sp, #16]
 801fa8c:	4379      	muls	r1, r7
 801fa8e:	910a      	str	r1, [sp, #40]	; 0x28
 801fa90:	7869      	ldrb	r1, [r5, #1]
 801fa92:	4379      	muls	r1, r7
 801fa94:	910b      	str	r1, [sp, #44]	; 0x2c
 801fa96:	9905      	ldr	r1, [sp, #20]
 801fa98:	5c8a      	ldrb	r2, [r1, r2]
 801fa9a:	437a      	muls	r2, r7
 801fa9c:	920c      	str	r2, [sp, #48]	; 0x30
 801fa9e:	46ca      	mov	sl, r9
 801faa0:	f1ba 0f00 	cmp.w	sl, #0
 801faa4:	d03d      	beq.n	801fb22 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 801faa6:	9a04      	ldr	r2, [sp, #16]
 801faa8:	9f07      	ldr	r7, [sp, #28]
 801faaa:	8812      	ldrh	r2, [r2, #0]
 801faac:	1215      	asrs	r5, r2, #8
 801faae:	46be      	mov	lr, r7
 801fab0:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801fab4:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801fab6:	10d1      	asrs	r1, r2, #3
 801fab8:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801fabc:	fb05 750e 	mla	r5, r5, lr, r7
 801fac0:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801fac4:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801fac6:	00d2      	lsls	r2, r2, #3
 801fac8:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801facc:	fb01 710e 	mla	r1, r1, lr, r7
 801fad0:	b2d2      	uxtb	r2, r2
 801fad2:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801fad4:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801fad8:	b2ad      	uxth	r5, r5
 801fada:	fb02 720e 	mla	r2, r2, lr, r7
 801fade:	b292      	uxth	r2, r2
 801fae0:	f105 0e01 	add.w	lr, r5, #1
 801fae4:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801fae8:	f102 0e01 	add.w	lr, r2, #1
 801faec:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801faf0:	b289      	uxth	r1, r1
 801faf2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801faf6:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801fafa:	4315      	orrs	r5, r2
 801fafc:	1c4a      	adds	r2, r1, #1
 801fafe:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801fb02:	0949      	lsrs	r1, r1, #5
 801fb04:	9a04      	ldr	r2, [sp, #16]
 801fb06:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801fb0a:	430d      	orrs	r5, r1
 801fb0c:	f822 5b02 	strh.w	r5, [r2], #2
 801fb10:	f10a 3aff 	add.w	sl, sl, #4294967295
 801fb14:	9204      	str	r2, [sp, #16]
 801fb16:	fa1f fa8a 	uxth.w	sl, sl
 801fb1a:	e7c1      	b.n	801faa0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 801fb1c:	4649      	mov	r1, r9
 801fb1e:	4686      	mov	lr, r0
 801fb20:	b999      	cbnz	r1, 801fb4a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801fb22:	4563      	cmp	r3, ip
 801fb24:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 801fb28:	d38a      	bcc.n	801fa40 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801fb2a:	f8bd 403c 	ldrh.w	r4, [sp, #60]	; 0x3c
 801fb2e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801fb30:	fa1f f68b 	uxth.w	r6, fp
 801fb34:	1ba4      	subs	r4, r4, r6
 801fb36:	881b      	ldrh	r3, [r3, #0]
 801fb38:	b2a4      	uxth	r4, r4
 801fb3a:	2c00      	cmp	r4, #0
 801fb3c:	eba3 030b 	sub.w	r3, r3, fp
 801fb40:	bf18      	it	ne
 801fb42:	2600      	movne	r6, #0
 801fb44:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801fb48:	e77a      	b.n	801fa40 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801fb4a:	78aa      	ldrb	r2, [r5, #2]
 801fb4c:	4f0e      	ldr	r7, [pc, #56]	; (801fb88 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 801fb4e:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 801fb52:	786a      	ldrb	r2, [r5, #1]
 801fb54:	00d2      	lsls	r2, r2, #3
 801fb56:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801fb5a:	ea4a 0202 	orr.w	r2, sl, r2
 801fb5e:	f895 a000 	ldrb.w	sl, [r5]
 801fb62:	3901      	subs	r1, #1
 801fb64:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 801fb68:	f82e 2b02 	strh.w	r2, [lr], #2
 801fb6c:	b289      	uxth	r1, r1
 801fb6e:	e7d7      	b.n	801fb20 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 801fb70:	4b03      	ldr	r3, [pc, #12]	; (801fb80 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801fb72:	6818      	ldr	r0, [r3, #0]
 801fb74:	6803      	ldr	r3, [r0, #0]
 801fb76:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801fb78:	4798      	blx	r3
 801fb7a:	b013      	add	sp, #76	; 0x4c
 801fb7c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fb80:	2001383c 	.word	0x2001383c
 801fb84:	20013836 	.word	0x20013836
 801fb88:	fffff800 	.word	0xfffff800

0801fb8c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801fb8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fb90:	b09d      	sub	sp, #116	; 0x74
 801fb92:	e9cd 1211 	strd	r1, r2, [sp, #68]	; 0x44
 801fb96:	f89d 209c 	ldrb.w	r2, [sp, #156]	; 0x9c
 801fb9a:	920e      	str	r2, [sp, #56]	; 0x38
 801fb9c:	461c      	mov	r4, r3
 801fb9e:	4683      	mov	fp, r0
 801fba0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801fba2:	2a00      	cmp	r2, #0
 801fba4:	f000 81e0 	beq.w	801ff68 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 801fba8:	6820      	ldr	r0, [r4, #0]
 801fbaa:	6861      	ldr	r1, [r4, #4]
 801fbac:	aa18      	add	r2, sp, #96	; 0x60
 801fbae:	c203      	stmia	r2!, {r0, r1}
 801fbb0:	6818      	ldr	r0, [r3, #0]
 801fbb2:	6859      	ldr	r1, [r3, #4]
 801fbb4:	aa1a      	add	r2, sp, #104	; 0x68
 801fbb6:	c203      	stmia	r2!, {r0, r1}
 801fbb8:	a818      	add	r0, sp, #96	; 0x60
 801fbba:	f7f8 fd45 	bl	8018648 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801fbbe:	4621      	mov	r1, r4
 801fbc0:	a81a      	add	r0, sp, #104	; 0x68
 801fbc2:	f7f8 fd85 	bl	80186d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801fbc6:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	; 0x64
 801fbca:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	; 0x66
 801fbce:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801fbd2:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801fbd6:	bfd7      	itett	le
 801fbd8:	b29a      	uxthle	r2, r3
 801fbda:	2201      	movgt	r2, #1
 801fbdc:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801fbe0:	fb91 f2f2 	sdivle	r2, r1, r2
 801fbe4:	9202      	str	r2, [sp, #8]
 801fbe6:	9802      	ldr	r0, [sp, #8]
 801fbe8:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	; 0x6a
 801fbec:	fb92 f0f0 	sdiv	r0, r2, r0
 801fbf0:	b280      	uxth	r0, r0
 801fbf2:	900f      	str	r0, [sp, #60]	; 0x3c
 801fbf4:	9902      	ldr	r1, [sp, #8]
 801fbf6:	9802      	ldr	r0, [sp, #8]
 801fbf8:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801fbfa:	440c      	add	r4, r1
 801fbfc:	fb05 2510 	mls	r5, r5, r0, r2
 801fc00:	fb15 f503 	smulbb	r5, r5, r3
 801fc04:	3c01      	subs	r4, #1
 801fc06:	f8bd 3060 	ldrh.w	r3, [sp, #96]	; 0x60
 801fc0a:	fb94 f4f1 	sdiv	r4, r4, r1
 801fc0e:	f8bd 1068 	ldrh.w	r1, [sp, #104]	; 0x68
 801fc12:	440d      	add	r5, r1
 801fc14:	4419      	add	r1, r3
 801fc16:	f8bd 3062 	ldrh.w	r3, [sp, #98]	; 0x62
 801fc1a:	f8ad 1068 	strh.w	r1, [sp, #104]	; 0x68
 801fc1e:	441a      	add	r2, r3
 801fc20:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801fc24:	9306      	str	r3, [sp, #24]
 801fc26:	4bb3      	ldr	r3, [pc, #716]	; (801fef4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 801fc28:	f8ad 206a 	strh.w	r2, [sp, #106]	; 0x6a
 801fc2c:	6818      	ldr	r0, [r3, #0]
 801fc2e:	6803      	ldr	r3, [r0, #0]
 801fc30:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801fc32:	4798      	blx	r3
 801fc34:	4bb0      	ldr	r3, [pc, #704]	; (801fef8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 801fc36:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	; 0x6a
 801fc3a:	881a      	ldrh	r2, [r3, #0]
 801fc3c:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	; 0x68
 801fc40:	9316      	str	r3, [sp, #88]	; 0x58
 801fc42:	fb02 7101 	mla	r1, r2, r1, r7
 801fc46:	3401      	adds	r4, #1
 801fc48:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 801fc4c:	b2a4      	uxth	r4, r4
 801fc4e:	4356      	muls	r6, r2
 801fc50:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 801fc54:	00a4      	lsls	r4, r4, #2
 801fc56:	920a      	str	r2, [sp, #40]	; 0x28
 801fc58:	1d22      	adds	r2, r4, #4
 801fc5a:	b2ad      	uxth	r5, r5
 801fc5c:	9213      	str	r2, [sp, #76]	; 0x4c
 801fc5e:	4ba7      	ldr	r3, [pc, #668]	; (801fefc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 801fc60:	9a06      	ldr	r2, [sp, #24]
 801fc62:	2d00      	cmp	r5, #0
 801fc64:	bf0c      	ite	eq
 801fc66:	4611      	moveq	r1, r2
 801fc68:	2100      	movne	r1, #0
 801fc6a:	2200      	movs	r2, #0
 801fc6c:	eba3 030b 	sub.w	r3, r3, fp
 801fc70:	b289      	uxth	r1, r1
 801fc72:	920d      	str	r2, [sp, #52]	; 0x34
 801fc74:	9317      	str	r3, [sp, #92]	; 0x5c
 801fc76:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801fc78:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801fc7a:	fa12 f383 	uxtah	r3, r2, r3
 801fc7e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801fc80:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801fc84:	3304      	adds	r3, #4
 801fc86:	9308      	str	r3, [sp, #32]
 801fc88:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fc8a:	4543      	cmp	r3, r8
 801fc8c:	f240 8167 	bls.w	801ff5e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 801fc90:	9a02      	ldr	r2, [sp, #8]
 801fc92:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 801fc96:	fbb5 f3f3 	udiv	r3, r5, r3
 801fc9a:	1ad3      	subs	r3, r2, r3
 801fc9c:	b29b      	uxth	r3, r3
 801fc9e:	9314      	str	r3, [sp, #80]	; 0x50
 801fca0:	9b08      	ldr	r3, [sp, #32]
 801fca2:	9808      	ldr	r0, [sp, #32]
 801fca4:	785a      	ldrb	r2, [r3, #1]
 801fca6:	789b      	ldrb	r3, [r3, #2]
 801fca8:	7800      	ldrb	r0, [r0, #0]
 801fcaa:	9010      	str	r0, [sp, #64]	; 0x40
 801fcac:	021b      	lsls	r3, r3, #8
 801fcae:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801fcb2:	9a08      	ldr	r2, [sp, #32]
 801fcb4:	78d2      	ldrb	r2, [r2, #3]
 801fcb6:	4313      	orrs	r3, r2
 801fcb8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801fcba:	3001      	adds	r0, #1
 801fcbc:	441a      	add	r2, r3
 801fcbe:	9007      	str	r0, [sp, #28]
 801fcc0:	1c50      	adds	r0, r2, #1
 801fcc2:	9005      	str	r0, [sp, #20]
 801fcc4:	7852      	ldrb	r2, [r2, #1]
 801fcc6:	9811      	ldr	r0, [sp, #68]	; 0x44
 801fcc8:	0212      	lsls	r2, r2, #8
 801fcca:	5cc3      	ldrb	r3, [r0, r3]
 801fccc:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801fcd0:	431a      	orrs	r2, r3
 801fcd2:	b293      	uxth	r3, r2
 801fcd4:	930b      	str	r3, [sp, #44]	; 0x2c
 801fcd6:	2300      	movs	r3, #0
 801fcd8:	9309      	str	r3, [sp, #36]	; 0x24
 801fcda:	2301      	movs	r3, #1
 801fcdc:	9301      	str	r3, [sp, #4]
 801fcde:	9304      	str	r3, [sp, #16]
 801fce0:	2300      	movs	r3, #0
 801fce2:	f88b 2804 	strb.w	r2, [fp, #2052]	; 0x804
 801fce6:	9303      	str	r3, [sp, #12]
 801fce8:	f04f 0e01 	mov.w	lr, #1
 801fcec:	2d00      	cmp	r5, #0
 801fcee:	d07c      	beq.n	801fdea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 801fcf0:	45ae      	cmp	lr, r5
 801fcf2:	d26b      	bcs.n	801fdcc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 801fcf4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fcf6:	eba5 050e 	sub.w	r5, r5, lr
 801fcfa:	4543      	cmp	r3, r8
 801fcfc:	b2ad      	uxth	r5, r5
 801fcfe:	460c      	mov	r4, r1
 801fd00:	d802      	bhi.n	801fd08 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 801fd02:	e070      	b.n	801fde6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 801fd04:	2b00      	cmp	r3, #0
 801fd06:	d15c      	bne.n	801fdc2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801fd08:	9b05      	ldr	r3, [sp, #20]
 801fd0a:	9a04      	ldr	r2, [sp, #16]
 801fd0c:	785b      	ldrb	r3, [r3, #1]
 801fd0e:	9904      	ldr	r1, [sp, #16]
 801fd10:	f1c2 0207 	rsb	r2, r2, #7
 801fd14:	4093      	lsls	r3, r2
 801fd16:	005b      	lsls	r3, r3, #1
 801fd18:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801fd1c:	9b05      	ldr	r3, [sp, #20]
 801fd1e:	781b      	ldrb	r3, [r3, #0]
 801fd20:	410b      	asrs	r3, r1
 801fd22:	3101      	adds	r1, #1
 801fd24:	b2c9      	uxtb	r1, r1
 801fd26:	2908      	cmp	r1, #8
 801fd28:	9104      	str	r1, [sp, #16]
 801fd2a:	9905      	ldr	r1, [sp, #20]
 801fd2c:	bf0a      	itet	eq
 801fd2e:	3102      	addeq	r1, #2
 801fd30:	3101      	addne	r1, #1
 801fd32:	9105      	streq	r1, [sp, #20]
 801fd34:	b2db      	uxtb	r3, r3
 801fd36:	bf0a      	itet	eq
 801fd38:	2100      	moveq	r1, #0
 801fd3a:	9105      	strne	r1, [sp, #20]
 801fd3c:	9104      	streq	r1, [sp, #16]
 801fd3e:	4313      	orrs	r3, r2
 801fd40:	9910      	ldr	r1, [sp, #64]	; 0x40
 801fd42:	b29a      	uxth	r2, r3
 801fd44:	4291      	cmp	r1, r2
 801fd46:	d30a      	bcc.n	801fd5e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 801fd48:	f88b 3804 	strb.w	r3, [fp, #2052]	; 0x804
 801fd4c:	2301      	movs	r3, #1
 801fd4e:	9907      	ldr	r1, [sp, #28]
 801fd50:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801fd54:	d30f      	bcc.n	801fd76 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 801fd56:	2100      	movs	r1, #0
 801fd58:	9301      	str	r3, [sp, #4]
 801fd5a:	9103      	str	r1, [sp, #12]
 801fd5c:	e032      	b.n	801fdc4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 801fd5e:	9b07      	ldr	r3, [sp, #28]
 801fd60:	429a      	cmp	r2, r3
 801fd62:	d318      	bcc.n	801fd96 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 801fd64:	9b01      	ldr	r3, [sp, #4]
 801fd66:	f89b 1804 	ldrb.w	r1, [fp, #2052]	; 0x804
 801fd6a:	445b      	add	r3, fp
 801fd6c:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801fd70:	9b01      	ldr	r3, [sp, #4]
 801fd72:	3301      	adds	r3, #1
 801fd74:	b29b      	uxth	r3, r3
 801fd76:	9907      	ldr	r1, [sp, #28]
 801fd78:	f89b 0804 	ldrb.w	r0, [fp, #2052]	; 0x804
 801fd7c:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801fd80:	7108      	strb	r0, [r1, #4]
 801fd82:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801fd84:	80c8      	strh	r0, [r1, #6]
 801fd86:	9801      	ldr	r0, [sp, #4]
 801fd88:	3001      	adds	r0, #1
 801fd8a:	7148      	strb	r0, [r1, #5]
 801fd8c:	9907      	ldr	r1, [sp, #28]
 801fd8e:	3101      	adds	r1, #1
 801fd90:	b289      	uxth	r1, r1
 801fd92:	9107      	str	r1, [sp, #28]
 801fd94:	e7df      	b.n	801fd56 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 801fd96:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 801fd9a:	4611      	mov	r1, r2
 801fd9c:	795b      	ldrb	r3, [r3, #5]
 801fd9e:	f603 0004 	addw	r0, r3, #2052	; 0x804
 801fda2:	4458      	add	r0, fp
 801fda4:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 801fda6:	4406      	add	r6, r0
 801fda8:	2e00      	cmp	r6, #0
 801fdaa:	dd06      	ble.n	801fdba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 801fdac:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801fdb0:	790e      	ldrb	r6, [r1, #4]
 801fdb2:	f800 6d01 	strb.w	r6, [r0, #-1]!
 801fdb6:	88c9      	ldrh	r1, [r1, #6]
 801fdb8:	e7f4      	b.n	801fda4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 801fdba:	f88b 1804 	strb.w	r1, [fp, #2052]	; 0x804
 801fdbe:	b29b      	uxth	r3, r3
 801fdc0:	e7c5      	b.n	801fd4e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 801fdc2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801fdc4:	920b      	str	r2, [sp, #44]	; 0x2c
 801fdc6:	4621      	mov	r1, r4
 801fdc8:	469e      	mov	lr, r3
 801fdca:	e78f      	b.n	801fcec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 801fdcc:	9a03      	ldr	r2, [sp, #12]
 801fdce:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801fdd2:	442a      	add	r2, r5
 801fdd4:	ebae 0305 	sub.w	r3, lr, r5
 801fdd8:	b292      	uxth	r2, r2
 801fdda:	b29b      	uxth	r3, r3
 801fddc:	9203      	str	r2, [sp, #12]
 801fdde:	2500      	movs	r5, #0
 801fde0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801fde2:	4542      	cmp	r2, r8
 801fde4:	d88e      	bhi.n	801fd04 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 801fde6:	4621      	mov	r1, r4
 801fde8:	e74e      	b.n	801fc88 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 801fdea:	458e      	cmp	lr, r1
 801fdec:	bf29      	itett	cs
 801fdee:	ebae 0301 	subcs.w	r3, lr, r1
 801fdf2:	eba1 040e 	subcc.w	r4, r1, lr
 801fdf6:	b29b      	uxthcs	r3, r3
 801fdf8:	910c      	strcs	r1, [sp, #48]	; 0x30
 801fdfa:	bf2f      	iteee	cs
 801fdfc:	462c      	movcs	r4, r5
 801fdfe:	b2a4      	uxthcc	r4, r4
 801fe00:	f8cd e030 	strcc.w	lr, [sp, #48]	; 0x30
 801fe04:	462b      	movcc	r3, r5
 801fe06:	f04f 0900 	mov.w	r9, #0
 801fe0a:	9a03      	ldr	r2, [sp, #12]
 801fe0c:	980c      	ldr	r0, [sp, #48]	; 0x30
 801fe0e:	444a      	add	r2, r9
 801fe10:	4548      	cmp	r0, r9
 801fe12:	b292      	uxth	r2, r2
 801fe14:	d074      	beq.n	801ff00 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 801fe16:	445a      	add	r2, fp
 801fe18:	2004      	movs	r0, #4
 801fe1a:	4605      	mov	r5, r0
 801fe1c:	f892 2804 	ldrb.w	r2, [r2, #2052]	; 0x804
 801fe20:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801fe22:	fb15 0202 	smlabb	r2, r5, r2, r0
 801fe26:	9812      	ldr	r0, [sp, #72]	; 0x48
 801fe28:	5880      	ldr	r0, [r0, r2]
 801fe2a:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 801fe2e:	d014      	beq.n	801fe5a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801fe30:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801fe34:	ea4f 2510 	mov.w	r5, r0, lsr #8
 801fe38:	d112      	bne.n	801fe60 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801fe3a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801fe3c:	2aff      	cmp	r2, #255	; 0xff
 801fe3e:	d10f      	bne.n	801fe60 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801fe40:	0942      	lsrs	r2, r0, #5
 801fe42:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801fe46:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801fe4a:	f025 0507 	bic.w	r5, r5, #7
 801fe4e:	4315      	orrs	r5, r2
 801fe50:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801fe54:	4305      	orrs	r5, r0
 801fe56:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 801fe5a:	f109 0901 	add.w	r9, r9, #1
 801fe5e:	e7d4      	b.n	801fe0a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 801fe60:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 801fe64:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801fe68:	f006 02fc 	and.w	r2, r6, #252	; 0xfc
 801fe6c:	9215      	str	r2, [sp, #84]	; 0x54
 801fe6e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801fe70:	fb02 fa0a 	mul.w	sl, r2, sl
 801fe74:	f10a 0201 	add.w	r2, sl, #1
 801fe78:	eb02 222a 	add.w	r2, r2, sl, asr #8
 801fe7c:	ea4f 272c 	mov.w	r7, ip, asr #8
 801fe80:	1212      	asrs	r2, r2, #8
 801fe82:	fa1f fa82 	uxth.w	sl, r2
 801fe86:	f3c0 4607 	ubfx	r6, r0, #16, #8
 801fe8a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801fe8e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801fe92:	43d2      	mvns	r2, r2
 801fe94:	b2d2      	uxtb	r2, r2
 801fe96:	fb16 f60a 	smulbb	r6, r6, sl
 801fe9a:	fa5f fc8c 	uxtb.w	ip, ip
 801fe9e:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801fea2:	b2c0      	uxtb	r0, r0
 801fea4:	fb07 6702 	mla	r7, r7, r2, r6
 801fea8:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 801feac:	9e15      	ldr	r6, [sp, #84]	; 0x54
 801feae:	fb10 f00a 	smulbb	r0, r0, sl
 801feb2:	fb0c 0002 	mla	r0, ip, r2, r0
 801feb6:	b2ed      	uxtb	r5, r5
 801feb8:	b2bf      	uxth	r7, r7
 801feba:	fb15 f50a 	smulbb	r5, r5, sl
 801febe:	b280      	uxth	r0, r0
 801fec0:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801fec4:	fb06 5602 	mla	r6, r6, r2, r5
 801fec8:	1c7a      	adds	r2, r7, #1
 801feca:	1c45      	adds	r5, r0, #1
 801fecc:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801fed0:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801fed4:	b2b6      	uxth	r6, r6
 801fed6:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801feda:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801fede:	432f      	orrs	r7, r5
 801fee0:	1c75      	adds	r5, r6, #1
 801fee2:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801fee6:	096d      	lsrs	r5, r5, #5
 801fee8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801feec:	432f      	orrs	r7, r5
 801feee:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 801fef2:	e7b2      	b.n	801fe5a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801fef4:	2001383c 	.word	0x2001383c
 801fef8:	20013836 	.word	0x20013836
 801fefc:	fffff7fb 	.word	0xfffff7fb
 801ff00:	9203      	str	r2, [sp, #12]
 801ff02:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801ff04:	458e      	cmp	lr, r1
 801ff06:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801ff0a:	f4ff af68 	bcc.w	801fdde <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 801ff0e:	9a16      	ldr	r2, [sp, #88]	; 0x58
 801ff10:	9906      	ldr	r1, [sp, #24]
 801ff12:	8812      	ldrh	r2, [r2, #0]
 801ff14:	1a52      	subs	r2, r2, r1
 801ff16:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801ff1a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801ff1c:	9914      	ldr	r1, [sp, #80]	; 0x50
 801ff1e:	3201      	adds	r2, #1
 801ff20:	428a      	cmp	r2, r1
 801ff22:	9209      	str	r2, [sp, #36]	; 0x24
 801ff24:	d111      	bne.n	801ff4a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 801ff26:	f8bd 5068 	ldrh.w	r5, [sp, #104]	; 0x68
 801ff2a:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 801ff2e:	9b06      	ldr	r3, [sp, #24]
 801ff30:	eba5 0509 	sub.w	r5, r5, r9
 801ff34:	b2ad      	uxth	r5, r5
 801ff36:	2d00      	cmp	r5, #0
 801ff38:	bf08      	it	eq
 801ff3a:	4619      	moveq	r1, r3
 801ff3c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ff3e:	bf18      	it	ne
 801ff40:	2100      	movne	r1, #0
 801ff42:	3301      	adds	r3, #1
 801ff44:	930d      	str	r3, [sp, #52]	; 0x34
 801ff46:	b289      	uxth	r1, r1
 801ff48:	e695      	b.n	801fc76 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 801ff4a:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801ff4e:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 801ff52:	1b2d      	subs	r5, r5, r4
 801ff54:	b2ad      	uxth	r5, r5
 801ff56:	2d00      	cmp	r5, #0
 801ff58:	bf18      	it	ne
 801ff5a:	2400      	movne	r4, #0
 801ff5c:	e740      	b.n	801fde0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 801ff5e:	4b04      	ldr	r3, [pc, #16]	; (801ff70 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 801ff60:	6818      	ldr	r0, [r3, #0]
 801ff62:	6803      	ldr	r3, [r0, #0]
 801ff64:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ff66:	4798      	blx	r3
 801ff68:	b01d      	add	sp, #116	; 0x74
 801ff6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ff6e:	bf00      	nop
 801ff70:	2001383c 	.word	0x2001383c

0801ff74 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801ff74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ff78:	b09f      	sub	sp, #124	; 0x7c
 801ff7a:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801ff7e:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801ff82:	920a      	str	r2, [sp, #40]	; 0x28
 801ff84:	461d      	mov	r5, r3
 801ff86:	4604      	mov	r4, r0
 801ff88:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ff8a:	2a00      	cmp	r2, #0
 801ff8c:	f000 81fa 	beq.w	8020384 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 801ff90:	6828      	ldr	r0, [r5, #0]
 801ff92:	6869      	ldr	r1, [r5, #4]
 801ff94:	aa1a      	add	r2, sp, #104	; 0x68
 801ff96:	c203      	stmia	r2!, {r0, r1}
 801ff98:	6818      	ldr	r0, [r3, #0]
 801ff9a:	6859      	ldr	r1, [r3, #4]
 801ff9c:	aa1c      	add	r2, sp, #112	; 0x70
 801ff9e:	c203      	stmia	r2!, {r0, r1}
 801ffa0:	a81a      	add	r0, sp, #104	; 0x68
 801ffa2:	f7f8 fb51 	bl	8018648 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ffa6:	4629      	mov	r1, r5
 801ffa8:	a81c      	add	r0, sp, #112	; 0x70
 801ffaa:	f7f8 fb91 	bl	80186d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ffae:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801ffb2:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801ffb6:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	; 0x76
 801ffba:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801ffbe:	bfd7      	itett	le
 801ffc0:	b29a      	uxthle	r2, r3
 801ffc2:	2201      	movgt	r2, #1
 801ffc4:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801ffc8:	fb91 f2f2 	sdivle	r2, r1, r2
 801ffcc:	9201      	str	r2, [sp, #4]
 801ffce:	9801      	ldr	r0, [sp, #4]
 801ffd0:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801ffd4:	fb92 f0f0 	sdiv	r0, r2, r0
 801ffd8:	b280      	uxth	r0, r0
 801ffda:	9010      	str	r0, [sp, #64]	; 0x40
 801ffdc:	9901      	ldr	r1, [sp, #4]
 801ffde:	9801      	ldr	r0, [sp, #4]
 801ffe0:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801ffe2:	440e      	add	r6, r1
 801ffe4:	fb05 2510 	mls	r5, r5, r0, r2
 801ffe8:	fb15 f503 	smulbb	r5, r5, r3
 801ffec:	3e01      	subs	r6, #1
 801ffee:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801fff2:	fb96 f6f1 	sdiv	r6, r6, r1
 801fff6:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801fffa:	440d      	add	r5, r1
 801fffc:	4419      	add	r1, r3
 801fffe:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 8020002:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 8020006:	441a      	add	r2, r3
 8020008:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 802000c:	9304      	str	r3, [sp, #16]
 802000e:	4b96      	ldr	r3, [pc, #600]	; (8020268 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 8020010:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 8020014:	6818      	ldr	r0, [r3, #0]
 8020016:	6803      	ldr	r3, [r0, #0]
 8020018:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 802001a:	4798      	blx	r3
 802001c:	4b93      	ldr	r3, [pc, #588]	; (802026c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 802001e:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 8020022:	881a      	ldrh	r2, [r3, #0]
 8020024:	f9bd c070 	ldrsh.w	ip, [sp, #112]	; 0x70
 8020028:	9318      	str	r3, [sp, #96]	; 0x60
 802002a:	fb02 c101 	mla	r1, r2, r1, ip
 802002e:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 8020032:	4357      	muls	r7, r2
 8020034:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 8020038:	3601      	adds	r6, #1
 802003a:	920b      	str	r2, [sp, #44]	; 0x2c
 802003c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 802003e:	4b8c      	ldr	r3, [pc, #560]	; (8020270 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 8020040:	b2b6      	uxth	r6, r6
 8020042:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 8020046:	1d32      	adds	r2, r6, #4
 8020048:	9206      	str	r2, [sp, #24]
 802004a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802004c:	43d2      	mvns	r2, r2
 802004e:	b2d2      	uxtb	r2, r2
 8020050:	b2ad      	uxth	r5, r5
 8020052:	9215      	str	r2, [sp, #84]	; 0x54
 8020054:	9a04      	ldr	r2, [sp, #16]
 8020056:	2d00      	cmp	r5, #0
 8020058:	bf0c      	ite	eq
 802005a:	4611      	moveq	r1, r2
 802005c:	2100      	movne	r1, #0
 802005e:	2200      	movs	r2, #0
 8020060:	1b1b      	subs	r3, r3, r4
 8020062:	b289      	uxth	r1, r1
 8020064:	920d      	str	r2, [sp, #52]	; 0x34
 8020066:	9319      	str	r3, [sp, #100]	; 0x64
 8020068:	9a10      	ldr	r2, [sp, #64]	; 0x40
 802006a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802006c:	fa12 f383 	uxtah	r3, r2, r3
 8020070:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8020072:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8020076:	3304      	adds	r3, #4
 8020078:	9307      	str	r3, [sp, #28]
 802007a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802007c:	455b      	cmp	r3, fp
 802007e:	f240 817c 	bls.w	802037a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 8020082:	9a01      	ldr	r2, [sp, #4]
 8020084:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 8020088:	fbb5 f3f3 	udiv	r3, r5, r3
 802008c:	1ad3      	subs	r3, r2, r3
 802008e:	b29b      	uxth	r3, r3
 8020090:	9316      	str	r3, [sp, #88]	; 0x58
 8020092:	9b07      	ldr	r3, [sp, #28]
 8020094:	9807      	ldr	r0, [sp, #28]
 8020096:	785a      	ldrb	r2, [r3, #1]
 8020098:	789b      	ldrb	r3, [r3, #2]
 802009a:	7800      	ldrb	r0, [r0, #0]
 802009c:	9011      	str	r0, [sp, #68]	; 0x44
 802009e:	021b      	lsls	r3, r3, #8
 80200a0:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80200a4:	9a07      	ldr	r2, [sp, #28]
 80200a6:	78d2      	ldrb	r2, [r2, #3]
 80200a8:	4313      	orrs	r3, r2
 80200aa:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80200ac:	3001      	adds	r0, #1
 80200ae:	441a      	add	r2, r3
 80200b0:	9005      	str	r0, [sp, #20]
 80200b2:	1c50      	adds	r0, r2, #1
 80200b4:	9003      	str	r0, [sp, #12]
 80200b6:	7852      	ldrb	r2, [r2, #1]
 80200b8:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80200ba:	0212      	lsls	r2, r2, #8
 80200bc:	5cc3      	ldrb	r3, [r0, r3]
 80200be:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 80200c2:	431a      	orrs	r2, r3
 80200c4:	b293      	uxth	r3, r2
 80200c6:	930c      	str	r3, [sp, #48]	; 0x30
 80200c8:	2300      	movs	r3, #0
 80200ca:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 80200ce:	9308      	str	r3, [sp, #32]
 80200d0:	461a      	mov	r2, r3
 80200d2:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80200d6:	930e      	str	r3, [sp, #56]	; 0x38
 80200d8:	f04f 0801 	mov.w	r8, #1
 80200dc:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 80200e0:	f8cd 8008 	str.w	r8, [sp, #8]
 80200e4:	46c4      	mov	ip, r8
 80200e6:	930f      	str	r3, [sp, #60]	; 0x3c
 80200e8:	2d00      	cmp	r5, #0
 80200ea:	d07c      	beq.n	80201e6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 80200ec:	45ac      	cmp	ip, r5
 80200ee:	d26c      	bcs.n	80201ca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 80200f0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80200f2:	eba5 050c 	sub.w	r5, r5, ip
 80200f6:	455b      	cmp	r3, fp
 80200f8:	b2ad      	uxth	r5, r5
 80200fa:	4608      	mov	r0, r1
 80200fc:	d802      	bhi.n	8020104 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 80200fe:	e070      	b.n	80201e2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 8020100:	2b00      	cmp	r3, #0
 8020102:	d15c      	bne.n	80201be <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 8020104:	9b03      	ldr	r3, [sp, #12]
 8020106:	9a02      	ldr	r2, [sp, #8]
 8020108:	785b      	ldrb	r3, [r3, #1]
 802010a:	9902      	ldr	r1, [sp, #8]
 802010c:	f1c2 0207 	rsb	r2, r2, #7
 8020110:	4093      	lsls	r3, r2
 8020112:	005b      	lsls	r3, r3, #1
 8020114:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 8020118:	9b03      	ldr	r3, [sp, #12]
 802011a:	781b      	ldrb	r3, [r3, #0]
 802011c:	410b      	asrs	r3, r1
 802011e:	3101      	adds	r1, #1
 8020120:	b2c9      	uxtb	r1, r1
 8020122:	2908      	cmp	r1, #8
 8020124:	9102      	str	r1, [sp, #8]
 8020126:	9903      	ldr	r1, [sp, #12]
 8020128:	bf0a      	itet	eq
 802012a:	3102      	addeq	r1, #2
 802012c:	3101      	addne	r1, #1
 802012e:	9103      	streq	r1, [sp, #12]
 8020130:	b2db      	uxtb	r3, r3
 8020132:	bf0a      	itet	eq
 8020134:	2100      	moveq	r1, #0
 8020136:	9103      	strne	r1, [sp, #12]
 8020138:	9102      	streq	r1, [sp, #8]
 802013a:	4313      	orrs	r3, r2
 802013c:	9911      	ldr	r1, [sp, #68]	; 0x44
 802013e:	b29a      	uxth	r2, r3
 8020140:	4291      	cmp	r1, r2
 8020142:	d30a      	bcc.n	802015a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 8020144:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 8020148:	2301      	movs	r3, #1
 802014a:	9905      	ldr	r1, [sp, #20]
 802014c:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 8020150:	d30f      	bcc.n	8020172 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 8020152:	2100      	movs	r1, #0
 8020154:	4698      	mov	r8, r3
 8020156:	9100      	str	r1, [sp, #0]
 8020158:	e032      	b.n	80201c0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 802015a:	9b05      	ldr	r3, [sp, #20]
 802015c:	429a      	cmp	r2, r3
 802015e:	d318      	bcc.n	8020192 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 8020160:	eb04 0308 	add.w	r3, r4, r8
 8020164:	f894 1804 	ldrb.w	r1, [r4, #2052]	; 0x804
 8020168:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 802016c:	f108 0301 	add.w	r3, r8, #1
 8020170:	b29b      	uxth	r3, r3
 8020172:	9905      	ldr	r1, [sp, #20]
 8020174:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 8020178:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 802017c:	710e      	strb	r6, [r1, #4]
 802017e:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8020180:	80ce      	strh	r6, [r1, #6]
 8020182:	f108 0601 	add.w	r6, r8, #1
 8020186:	714e      	strb	r6, [r1, #5]
 8020188:	9905      	ldr	r1, [sp, #20]
 802018a:	3101      	adds	r1, #1
 802018c:	b289      	uxth	r1, r1
 802018e:	9105      	str	r1, [sp, #20]
 8020190:	e7df      	b.n	8020152 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 8020192:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8020196:	4611      	mov	r1, r2
 8020198:	795b      	ldrb	r3, [r3, #5]
 802019a:	f603 0604 	addw	r6, r3, #2052	; 0x804
 802019e:	4426      	add	r6, r4
 80201a0:	9f19      	ldr	r7, [sp, #100]	; 0x64
 80201a2:	4437      	add	r7, r6
 80201a4:	2f00      	cmp	r7, #0
 80201a6:	dd06      	ble.n	80201b6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 80201a8:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 80201ac:	790f      	ldrb	r7, [r1, #4]
 80201ae:	f806 7d01 	strb.w	r7, [r6, #-1]!
 80201b2:	88c9      	ldrh	r1, [r1, #6]
 80201b4:	e7f4      	b.n	80201a0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 80201b6:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 80201ba:	b29b      	uxth	r3, r3
 80201bc:	e7c5      	b.n	802014a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 80201be:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80201c0:	920c      	str	r2, [sp, #48]	; 0x30
 80201c2:	4601      	mov	r1, r0
 80201c4:	9a00      	ldr	r2, [sp, #0]
 80201c6:	469c      	mov	ip, r3
 80201c8:	e78e      	b.n	80200e8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 80201ca:	1957      	adds	r7, r2, r5
 80201cc:	ebac 0305 	sub.w	r3, ip, r5
 80201d0:	b2ba      	uxth	r2, r7
 80201d2:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 80201d6:	9200      	str	r2, [sp, #0]
 80201d8:	b29b      	uxth	r3, r3
 80201da:	2500      	movs	r5, #0
 80201dc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80201de:	455a      	cmp	r2, fp
 80201e0:	d88e      	bhi.n	8020100 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 80201e2:	4601      	mov	r1, r0
 80201e4:	e749      	b.n	802007a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 80201e6:	458c      	cmp	ip, r1
 80201e8:	bf2c      	ite	cs
 80201ea:	4628      	movcs	r0, r5
 80201ec:	462b      	movcc	r3, r5
 80201ee:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80201f0:	bf27      	ittee	cs
 80201f2:	9109      	strcs	r1, [sp, #36]	; 0x24
 80201f4:	ebac 0301 	subcs.w	r3, ip, r1
 80201f8:	eba1 000c 	subcc.w	r0, r1, ip
 80201fc:	f8cd c024 	strcc.w	ip, [sp, #36]	; 0x24
 8020200:	bf2c      	ite	cs
 8020202:	b29b      	uxthcs	r3, r3
 8020204:	b280      	uxthcc	r0, r0
 8020206:	2dff      	cmp	r5, #255	; 0xff
 8020208:	9d09      	ldr	r5, [sp, #36]	; 0x24
 802020a:	eb02 0705 	add.w	r7, r2, r5
 802020e:	b2bd      	uxth	r5, r7
 8020210:	9500      	str	r5, [sp, #0]
 8020212:	d12f      	bne.n	8020274 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 8020214:	465e      	mov	r6, fp
 8020216:	9d00      	ldr	r5, [sp, #0]
 8020218:	42aa      	cmp	r2, r5
 802021a:	f040 8084 	bne.w	8020326 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 802021e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8020220:	458c      	cmp	ip, r1
 8020222:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 8020226:	d3d8      	bcc.n	80201da <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 8020228:	9a18      	ldr	r2, [sp, #96]	; 0x60
 802022a:	9904      	ldr	r1, [sp, #16]
 802022c:	8812      	ldrh	r2, [r2, #0]
 802022e:	1a52      	subs	r2, r2, r1
 8020230:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 8020234:	9a08      	ldr	r2, [sp, #32]
 8020236:	9916      	ldr	r1, [sp, #88]	; 0x58
 8020238:	3201      	adds	r2, #1
 802023a:	428a      	cmp	r2, r1
 802023c:	9208      	str	r2, [sp, #32]
 802023e:	f040 8092 	bne.w	8020366 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 8020242:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 8020246:	f8bd c068 	ldrh.w	ip, [sp, #104]	; 0x68
 802024a:	9b04      	ldr	r3, [sp, #16]
 802024c:	eba5 050c 	sub.w	r5, r5, ip
 8020250:	b2ad      	uxth	r5, r5
 8020252:	2d00      	cmp	r5, #0
 8020254:	bf08      	it	eq
 8020256:	4619      	moveq	r1, r3
 8020258:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802025a:	bf18      	it	ne
 802025c:	2100      	movne	r1, #0
 802025e:	3301      	adds	r3, #1
 8020260:	930d      	str	r3, [sp, #52]	; 0x34
 8020262:	b289      	uxth	r1, r1
 8020264:	e700      	b.n	8020068 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8020266:	bf00      	nop
 8020268:	2001383c 	.word	0x2001383c
 802026c:	20013836 	.word	0x20013836
 8020270:	fffff7fb 	.word	0xfffff7fb
 8020274:	46d9      	mov	r9, fp
 8020276:	9d00      	ldr	r5, [sp, #0]
 8020278:	42aa      	cmp	r2, r5
 802027a:	d0d0      	beq.n	802021e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 802027c:	1c55      	adds	r5, r2, #1
 802027e:	4422      	add	r2, r4
 8020280:	9517      	str	r5, [sp, #92]	; 0x5c
 8020282:	f892 e804 	ldrb.w	lr, [r2, #2052]	; 0x804
 8020286:	9a06      	ldr	r2, [sp, #24]
 8020288:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 802028c:	4472      	add	r2, lr
 802028e:	9212      	str	r2, [sp, #72]	; 0x48
 8020290:	9f12      	ldr	r7, [sp, #72]	; 0x48
 8020292:	f8b9 2000 	ldrh.w	r2, [r9]
 8020296:	f897 a002 	ldrb.w	sl, [r7, #2]
 802029a:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 802029c:	1216      	asrs	r6, r2, #8
 802029e:	fb1a fa07 	smulbb	sl, sl, r7
 80202a2:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80202a6:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 80202a8:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 80202ac:	fb06 a607 	mla	r6, r6, r7, sl
 80202b0:	9f12      	ldr	r7, [sp, #72]	; 0x48
 80202b2:	f897 a001 	ldrb.w	sl, [r7, #1]
 80202b6:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 80202b8:	10d5      	asrs	r5, r2, #3
 80202ba:	fb1a fa07 	smulbb	sl, sl, r7
 80202be:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80202c2:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 80202c4:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 80202c8:	fb05 a507 	mla	r5, r5, r7, sl
 80202cc:	9f06      	ldr	r7, [sp, #24]
 80202ce:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80202d2:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 80202d4:	00d2      	lsls	r2, r2, #3
 80202d6:	fb1e fe07 	smulbb	lr, lr, r7
 80202da:	b2d2      	uxtb	r2, r2
 80202dc:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 80202de:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80202e2:	b2b6      	uxth	r6, r6
 80202e4:	fb02 e207 	mla	r2, r2, r7, lr
 80202e8:	b292      	uxth	r2, r2
 80202ea:	b2ad      	uxth	r5, r5
 80202ec:	f106 0a01 	add.w	sl, r6, #1
 80202f0:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 80202f4:	f102 0e01 	add.w	lr, r2, #1
 80202f8:	f105 0a01 	add.w	sl, r5, #1
 80202fc:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 8020300:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8020304:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8020308:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 802030c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8020310:	ea4e 0606 	orr.w	r6, lr, r6
 8020314:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8020318:	ea46 060a 	orr.w	r6, r6, sl
 802031c:	f829 6b02 	strh.w	r6, [r9], #2
 8020320:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 8020324:	e7a7      	b.n	8020276 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 8020326:	f102 0e01 	add.w	lr, r2, #1
 802032a:	4422      	add	r2, r4
 802032c:	9f06      	ldr	r7, [sp, #24]
 802032e:	f892 5804 	ldrb.w	r5, [r2, #2052]	; 0x804
 8020332:	9a06      	ldr	r2, [sp, #24]
 8020334:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8020338:	eb02 0a05 	add.w	sl, r2, r5
 802033c:	4a13      	ldr	r2, [pc, #76]	; (802038c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 802033e:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8020342:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 8020346:	f89a 2001 	ldrb.w	r2, [sl, #1]
 802034a:	00d2      	lsls	r2, r2, #3
 802034c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8020350:	ea49 0202 	orr.w	r2, r9, r2
 8020354:	f817 9005 	ldrb.w	r9, [r7, r5]
 8020358:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 802035c:	f826 2b02 	strh.w	r2, [r6], #2
 8020360:	fa1f f28e 	uxth.w	r2, lr
 8020364:	e757      	b.n	8020216 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 8020366:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 802036a:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 802036e:	1a2d      	subs	r5, r5, r0
 8020370:	b2ad      	uxth	r5, r5
 8020372:	2d00      	cmp	r5, #0
 8020374:	bf18      	it	ne
 8020376:	2000      	movne	r0, #0
 8020378:	e730      	b.n	80201dc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 802037a:	4b05      	ldr	r3, [pc, #20]	; (8020390 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 802037c:	6818      	ldr	r0, [r3, #0]
 802037e:	6803      	ldr	r3, [r0, #0]
 8020380:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8020382:	4798      	blx	r3
 8020384:	b01f      	add	sp, #124	; 0x7c
 8020386:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802038a:	bf00      	nop
 802038c:	fffff800 	.word	0xfffff800
 8020390:	2001383c 	.word	0x2001383c

08020394 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 8020394:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020398:	b091      	sub	sp, #68	; 0x44
 802039a:	469b      	mov	fp, r3
 802039c:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 80203a0:	4616      	mov	r6, r2
 80203a2:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 80203a6:	f9b3 2000 	ldrsh.w	r2, [r3]
 80203aa:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 80203ae:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80203b2:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80203b6:	4604      	mov	r4, r0
 80203b8:	460d      	mov	r5, r1
 80203ba:	4640      	mov	r0, r8
 80203bc:	4659      	mov	r1, fp
 80203be:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 80203c2:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 80203c6:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 80203ca:	f7f2 fb9f 	bl	8012b0c <_ZN8touchgfx4RectaNERKS0_>
 80203ce:	4631      	mov	r1, r6
 80203d0:	4640      	mov	r0, r8
 80203d2:	f7f2 fb9b 	bl	8012b0c <_ZN8touchgfx4RectaNERKS0_>
 80203d6:	4b74      	ldr	r3, [pc, #464]	; (80205a8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 80203d8:	8818      	ldrh	r0, [r3, #0]
 80203da:	4b74      	ldr	r3, [pc, #464]	; (80205ac <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 80203dc:	8819      	ldrh	r1, [r3, #0]
 80203de:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 80203e2:	2b00      	cmp	r3, #0
 80203e4:	b202      	sxth	r2, r0
 80203e6:	b20e      	sxth	r6, r1
 80203e8:	da07      	bge.n	80203fa <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 80203ea:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 80203ee:	4463      	add	r3, ip
 80203f0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80203f4:	2300      	movs	r3, #0
 80203f6:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80203fa:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 80203fe:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 8020402:	1ad2      	subs	r2, r2, r3
 8020404:	4594      	cmp	ip, r2
 8020406:	bfc4      	itt	gt
 8020408:	1ac2      	subgt	r2, r0, r3
 802040a:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 802040e:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8020412:	2a00      	cmp	r2, #0
 8020414:	da07      	bge.n	8020426 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 8020416:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 802041a:	4462      	add	r2, ip
 802041c:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8020420:	2200      	movs	r2, #0
 8020422:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 8020426:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 802042a:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 802042e:	eba6 060a 	sub.w	r6, r6, sl
 8020432:	42b2      	cmp	r2, r6
 8020434:	bfc4      	itt	gt
 8020436:	eba1 020a 	subgt.w	r2, r1, sl
 802043a:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 802043e:	4a5c      	ldr	r2, [pc, #368]	; (80205b0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 8020440:	7812      	ldrb	r2, [r2, #0]
 8020442:	b9a2      	cbnz	r2, 802046e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 8020444:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 8020448:	4286      	cmp	r6, r0
 802044a:	4640      	mov	r0, r8
 802044c:	9303      	str	r3, [sp, #12]
 802044e:	bf14      	ite	ne
 8020450:	2600      	movne	r6, #0
 8020452:	2601      	moveq	r6, #1
 8020454:	f7f2 fb9d 	bl	8012b92 <_ZNK8touchgfx4Rect7isEmptyEv>
 8020458:	9b03      	ldr	r3, [sp, #12]
 802045a:	b160      	cbz	r0, 8020476 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 802045c:	2300      	movs	r3, #0
 802045e:	8023      	strh	r3, [r4, #0]
 8020460:	8063      	strh	r3, [r4, #2]
 8020462:	80a3      	strh	r3, [r4, #4]
 8020464:	4620      	mov	r0, r4
 8020466:	80e3      	strh	r3, [r4, #6]
 8020468:	b011      	add	sp, #68	; 0x44
 802046a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802046e:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 8020472:	428e      	cmp	r6, r1
 8020474:	e7e9      	b.n	802044a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 8020476:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 802047a:	9205      	str	r2, [sp, #20]
 802047c:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 8020480:	9206      	str	r2, [sp, #24]
 8020482:	f8bb 2000 	ldrh.w	r2, [fp]
 8020486:	900e      	str	r0, [sp, #56]	; 0x38
 8020488:	1a9b      	subs	r3, r3, r2
 802048a:	b21b      	sxth	r3, r3
 802048c:	9303      	str	r3, [sp, #12]
 802048e:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8020492:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 8020496:	ebaa 0a03 	sub.w	sl, sl, r3
 802049a:	fa0f f38a 	sxth.w	r3, sl
 802049e:	9304      	str	r3, [sp, #16]
 80204a0:	9b03      	ldr	r3, [sp, #12]
 80204a2:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 80204a6:	9b04      	ldr	r3, [sp, #16]
 80204a8:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 80204ac:	9b05      	ldr	r3, [sp, #20]
 80204ae:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80204b2:	a90e      	add	r1, sp, #56	; 0x38
 80204b4:	9b06      	ldr	r3, [sp, #24]
 80204b6:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80204ba:	a80c      	add	r0, sp, #48	; 0x30
 80204bc:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 80204c0:	f7f8 f906 	bl	80186d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80204c4:	4640      	mov	r0, r8
 80204c6:	f7f8 f8bf 	bl	8018648 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80204ca:	a80e      	add	r0, sp, #56	; 0x38
 80204cc:	f7f8 f8bc 	bl	8018648 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80204d0:	4b38      	ldr	r3, [pc, #224]	; (80205b4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 80204d2:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 80204d6:	881b      	ldrh	r3, [r3, #0]
 80204d8:	9307      	str	r3, [sp, #28]
 80204da:	682b      	ldr	r3, [r5, #0]
 80204dc:	f8df b0d8 	ldr.w	fp, [pc, #216]	; 80205b8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 80204e0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80204e2:	4628      	mov	r0, r5
 80204e4:	4798      	blx	r3
 80204e6:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 80204ea:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 80204ee:	4681      	mov	r9, r0
 80204f0:	fb1a 3305 	smlabb	r3, sl, r5, r3
 80204f4:	f8db 0000 	ldr.w	r0, [fp]
 80204f8:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 80204fa:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 80204fe:	6803      	ldr	r3, [r0, #0]
 8020500:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8020502:	4798      	blx	r3
 8020504:	4607      	mov	r7, r0
 8020506:	f8db 0000 	ldr.w	r0, [fp]
 802050a:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 802050e:	6803      	ldr	r3, [r0, #0]
 8020510:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8020514:	9109      	str	r1, [sp, #36]	; 0x24
 8020516:	9208      	str	r2, [sp, #32]
 8020518:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 802051a:	4798      	blx	r3
 802051c:	f010 0f01 	tst.w	r0, #1
 8020520:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8020524:	d012      	beq.n	802054c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 8020526:	f8db 0000 	ldr.w	r0, [fp]
 802052a:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 802052e:	6803      	ldr	r3, [r0, #0]
 8020530:	9200      	str	r2, [sp, #0]
 8020532:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 8020534:	e898 0006 	ldmia.w	r8, {r1, r2}
 8020538:	462b      	mov	r3, r5
 802053a:	47b0      	blx	r6
 802053c:	9b03      	ldr	r3, [sp, #12]
 802053e:	8023      	strh	r3, [r4, #0]
 8020540:	9b04      	ldr	r3, [sp, #16]
 8020542:	8063      	strh	r3, [r4, #2]
 8020544:	9b05      	ldr	r3, [sp, #20]
 8020546:	80a3      	strh	r3, [r4, #4]
 8020548:	9b06      	ldr	r3, [sp, #24]
 802054a:	e78b      	b.n	8020464 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 802054c:	fb09 f202 	mul.w	r2, r9, r2
 8020550:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 8020554:	440f      	add	r7, r1
 8020556:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 802055a:	b166      	cbz	r6, 8020576 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 802055c:	9a07      	ldr	r2, [sp, #28]
 802055e:	4592      	cmp	sl, r2
 8020560:	d109      	bne.n	8020576 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 8020562:	f8db 0000 	ldr.w	r0, [fp]
 8020566:	6802      	ldr	r2, [r0, #0]
 8020568:	fb09 f303 	mul.w	r3, r9, r3
 802056c:	6b56      	ldr	r6, [r2, #52]	; 0x34
 802056e:	4629      	mov	r1, r5
 8020570:	463a      	mov	r2, r7
 8020572:	47b0      	blx	r6
 8020574:	e7e2      	b.n	802053c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 8020576:	fb0a f303 	mul.w	r3, sl, r3
 802057a:	f8df b03c 	ldr.w	fp, [pc, #60]	; 80205b8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 802057e:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 8020582:	ea4f 064a 	mov.w	r6, sl, lsl #1
 8020586:	4545      	cmp	r5, r8
 8020588:	d2d8      	bcs.n	802053c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 802058a:	f8db 0000 	ldr.w	r0, [fp]
 802058e:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8020592:	6802      	ldr	r2, [r0, #0]
 8020594:	4629      	mov	r1, r5
 8020596:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 802059a:	005b      	lsls	r3, r3, #1
 802059c:	463a      	mov	r2, r7
 802059e:	47d0      	blx	sl
 80205a0:	444f      	add	r7, r9
 80205a2:	4435      	add	r5, r6
 80205a4:	e7ef      	b.n	8020586 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 80205a6:	bf00      	nop
 80205a8:	20013830 	.word	0x20013830
 80205ac:	20013832 	.word	0x20013832
 80205b0:	20013834 	.word	0x20013834
 80205b4:	20013836 	.word	0x20013836
 80205b8:	2001383c 	.word	0x2001383c

080205bc <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 80205bc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80205be:	4606      	mov	r6, r0
 80205c0:	b087      	sub	sp, #28
 80205c2:	460c      	mov	r4, r1
 80205c4:	4617      	mov	r7, r2
 80205c6:	461d      	mov	r5, r3
 80205c8:	b333      	cbz	r3, 8020618 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 80205ca:	4608      	mov	r0, r1
 80205cc:	f7f2 fae1 	bl	8012b92 <_ZNK8touchgfx4Rect7isEmptyEv>
 80205d0:	bb10      	cbnz	r0, 8020618 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 80205d2:	6820      	ldr	r0, [r4, #0]
 80205d4:	6861      	ldr	r1, [r4, #4]
 80205d6:	4c1c      	ldr	r4, [pc, #112]	; (8020648 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 80205d8:	ab04      	add	r3, sp, #16
 80205da:	c303      	stmia	r3!, {r0, r1}
 80205dc:	a804      	add	r0, sp, #16
 80205de:	f7f8 f833 	bl	8018648 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80205e2:	6820      	ldr	r0, [r4, #0]
 80205e4:	6803      	ldr	r3, [r0, #0]
 80205e6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80205e8:	4798      	blx	r3
 80205ea:	2dff      	cmp	r5, #255	; 0xff
 80205ec:	d016      	beq.n	802061c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 80205ee:	f010 0f08 	tst.w	r0, #8
 80205f2:	6820      	ldr	r0, [r4, #0]
 80205f4:	d015      	beq.n	8020622 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 80205f6:	2400      	movs	r4, #0
 80205f8:	6801      	ldr	r1, [r0, #0]
 80205fa:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80205fe:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8020602:	e9cd 5402 	strd	r5, r4, [sp, #8]
 8020606:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 802060a:	9401      	str	r4, [sp, #4]
 802060c:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 8020610:	9400      	str	r4, [sp, #0]
 8020612:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 8020614:	4639      	mov	r1, r7
 8020616:	47a0      	blx	r4
 8020618:	b007      	add	sp, #28
 802061a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802061c:	f010 0f02 	tst.w	r0, #2
 8020620:	e7e7      	b.n	80205f2 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 8020622:	6803      	ldr	r3, [r0, #0]
 8020624:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8020626:	4798      	blx	r3
 8020628:	4b08      	ldr	r3, [pc, #32]	; (802064c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 802062a:	881a      	ldrh	r2, [r3, #0]
 802062c:	6833      	ldr	r3, [r6, #0]
 802062e:	e9cd 7500 	strd	r7, r5, [sp]
 8020632:	4601      	mov	r1, r0
 8020634:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 8020636:	4630      	mov	r0, r6
 8020638:	ab04      	add	r3, sp, #16
 802063a:	47a8      	blx	r5
 802063c:	6820      	ldr	r0, [r4, #0]
 802063e:	6803      	ldr	r3, [r0, #0]
 8020640:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8020642:	4798      	blx	r3
 8020644:	e7e8      	b.n	8020618 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8020646:	bf00      	nop
 8020648:	2001383c 	.word	0x2001383c
 802064c:	20013836 	.word	0x20013836

08020650 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 8020650:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8020654:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 8020658:	9e08      	ldr	r6, [sp, #32]
 802065a:	4688      	mov	r8, r1
 802065c:	4614      	mov	r4, r2
 802065e:	461d      	mov	r5, r3
 8020660:	2f00      	cmp	r7, #0
 8020662:	f000 80a9 	beq.w	80207b8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8020666:	4618      	mov	r0, r3
 8020668:	f7f2 fa93 	bl	8012b92 <_ZNK8touchgfx4Rect7isEmptyEv>
 802066c:	2800      	cmp	r0, #0
 802066e:	f040 80a3 	bne.w	80207b8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8020672:	f9b5 1000 	ldrsh.w	r1, [r5]
 8020676:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 802067a:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 802067e:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 8020682:	fb04 1303 	mla	r3, r4, r3, r1
 8020686:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 802068a:	4365      	muls	r5, r4
 802068c:	2fff      	cmp	r7, #255	; 0xff
 802068e:	eba4 0200 	sub.w	r2, r4, r0
 8020692:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 8020696:	ea4f 2816 	mov.w	r8, r6, lsr #8
 802069a:	d04a      	beq.n	8020732 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 802069c:	b2bc      	uxth	r4, r7
 802069e:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 80206a2:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 80206a6:	fa5f f788 	uxtb.w	r7, r8
 80206aa:	b2f3      	uxtb	r3, r6
 80206ac:	0040      	lsls	r0, r0, #1
 80206ae:	fb0e fe04 	mul.w	lr, lr, r4
 80206b2:	4367      	muls	r7, r4
 80206b4:	4363      	muls	r3, r4
 80206b6:	ea4f 0842 	mov.w	r8, r2, lsl #1
 80206ba:	fa1f fc8c 	uxth.w	ip, ip
 80206be:	42a9      	cmp	r1, r5
 80206c0:	d27a      	bcs.n	80207b8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 80206c2:	eb01 0900 	add.w	r9, r1, r0
 80206c6:	4549      	cmp	r1, r9
 80206c8:	d231      	bcs.n	802072e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 80206ca:	880a      	ldrh	r2, [r1, #0]
 80206cc:	1214      	asrs	r4, r2, #8
 80206ce:	10d6      	asrs	r6, r2, #3
 80206d0:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80206d4:	00d2      	lsls	r2, r2, #3
 80206d6:	b2d2      	uxtb	r2, r2
 80206d8:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80206dc:	fb14 f40c 	smulbb	r4, r4, ip
 80206e0:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80206e4:	4474      	add	r4, lr
 80206e6:	fb12 f20c 	smulbb	r2, r2, ip
 80206ea:	b2a4      	uxth	r4, r4
 80206ec:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80206f0:	441a      	add	r2, r3
 80206f2:	b292      	uxth	r2, r2
 80206f4:	f104 0a01 	add.w	sl, r4, #1
 80206f8:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 80206fc:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8020700:	fb16 f60c 	smulbb	r6, r6, ip
 8020704:	f102 0a01 	add.w	sl, r2, #1
 8020708:	443e      	add	r6, r7
 802070a:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 802070e:	b2b6      	uxth	r6, r6
 8020710:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8020714:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8020718:	4322      	orrs	r2, r4
 802071a:	1c74      	adds	r4, r6, #1
 802071c:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 8020720:	0976      	lsrs	r6, r6, #5
 8020722:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8020726:	4332      	orrs	r2, r6
 8020728:	f821 2b02 	strh.w	r2, [r1], #2
 802072c:	e7cb      	b.n	80206c6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 802072e:	4441      	add	r1, r8
 8020730:	e7c5      	b.n	80206be <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 8020732:	4f22      	ldr	r7, [pc, #136]	; (80207bc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 8020734:	0973      	lsrs	r3, r6, #5
 8020736:	ea08 0707 	and.w	r7, r8, r7
 802073a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802073e:	433b      	orrs	r3, r7
 8020740:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8020744:	4333      	orrs	r3, r6
 8020746:	07e7      	lsls	r7, r4, #31
 8020748:	b29b      	uxth	r3, r3
 802074a:	d50b      	bpl.n	8020764 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 802074c:	0040      	lsls	r0, r0, #1
 802074e:	0052      	lsls	r2, r2, #1
 8020750:	42a9      	cmp	r1, r5
 8020752:	d231      	bcs.n	80207b8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8020754:	180c      	adds	r4, r1, r0
 8020756:	42a1      	cmp	r1, r4
 8020758:	d202      	bcs.n	8020760 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 802075a:	f821 3b02 	strh.w	r3, [r1], #2
 802075e:	e7fa      	b.n	8020756 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 8020760:	4411      	add	r1, r2
 8020762:	e7f5      	b.n	8020750 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 8020764:	078e      	lsls	r6, r1, #30
 8020766:	d008      	beq.n	802077a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 8020768:	0066      	lsls	r6, r4, #1
 802076a:	460a      	mov	r2, r1
 802076c:	42aa      	cmp	r2, r5
 802076e:	d202      	bcs.n	8020776 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 8020770:	8013      	strh	r3, [r2, #0]
 8020772:	4432      	add	r2, r6
 8020774:	e7fa      	b.n	802076c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 8020776:	3102      	adds	r1, #2
 8020778:	3801      	subs	r0, #1
 802077a:	07c2      	lsls	r2, r0, #31
 802077c:	d50b      	bpl.n	8020796 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 802077e:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 8020782:	3a01      	subs	r2, #1
 8020784:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 8020788:	0066      	lsls	r6, r4, #1
 802078a:	42aa      	cmp	r2, r5
 802078c:	d202      	bcs.n	8020794 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 802078e:	8013      	strh	r3, [r2, #0]
 8020790:	4432      	add	r2, r6
 8020792:	e7fa      	b.n	802078a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 8020794:	3801      	subs	r0, #1
 8020796:	b178      	cbz	r0, 80207b8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8020798:	1040      	asrs	r0, r0, #1
 802079a:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 802079e:	0080      	lsls	r0, r0, #2
 80207a0:	0064      	lsls	r4, r4, #1
 80207a2:	42a9      	cmp	r1, r5
 80207a4:	d208      	bcs.n	80207b8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 80207a6:	180e      	adds	r6, r1, r0
 80207a8:	460a      	mov	r2, r1
 80207aa:	42b2      	cmp	r2, r6
 80207ac:	d202      	bcs.n	80207b4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 80207ae:	f842 3b04 	str.w	r3, [r2], #4
 80207b2:	e7fa      	b.n	80207aa <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 80207b4:	4421      	add	r1, r4
 80207b6:	e7f4      	b.n	80207a2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 80207b8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80207bc:	00fff800 	.word	0x00fff800

080207c0 <_ZN8touchgfx8LCD16bppC1Ev>:
 80207c0:	2200      	movs	r2, #0
 80207c2:	4912      	ldr	r1, [pc, #72]	; (802080c <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 80207c4:	6042      	str	r2, [r0, #4]
 80207c6:	6001      	str	r1, [r0, #0]
 80207c8:	e9c0 2202 	strd	r2, r2, [r0, #8]
 80207cc:	e9c0 2204 	strd	r2, r2, [r0, #16]
 80207d0:	e9c0 2206 	strd	r2, r2, [r0, #24]
 80207d4:	e9c0 2208 	strd	r2, r2, [r0, #32]
 80207d8:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 80207dc:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 80207e0:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 80207e4:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 80207e8:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 80207ec:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 80207f0:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 80207f4:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 80207f8:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 80207fc:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 8020800:	e9c0 221e 	strd	r2, r2, [r0, #120]	; 0x78
 8020804:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 8020808:	4770      	bx	lr
 802080a:	bf00      	nop
 802080c:	080321a4 	.word	0x080321a4

08020810 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 8020810:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020814:	460d      	mov	r5, r1
 8020816:	b08d      	sub	sp, #52	; 0x34
 8020818:	4604      	mov	r4, r0
 802081a:	6808      	ldr	r0, [r1, #0]
 802081c:	6849      	ldr	r1, [r1, #4]
 802081e:	4699      	mov	r9, r3
 8020820:	ab08      	add	r3, sp, #32
 8020822:	c303      	stmia	r3!, {r0, r1}
 8020824:	6810      	ldr	r0, [r2, #0]
 8020826:	6851      	ldr	r1, [r2, #4]
 8020828:	ab0a      	add	r3, sp, #40	; 0x28
 802082a:	c303      	stmia	r3!, {r0, r1}
 802082c:	a808      	add	r0, sp, #32
 802082e:	f7f7 ff0b 	bl	8018648 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020832:	4629      	mov	r1, r5
 8020834:	a80a      	add	r0, sp, #40	; 0x28
 8020836:	f7f7 ff4b 	bl	80186d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802083a:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 802083e:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 8020842:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 8020846:	4d63      	ldr	r5, [pc, #396]	; (80209d4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8020848:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 802084c:	6828      	ldr	r0, [r5, #0]
 802084e:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 8020852:	fb11 2103 	smlabb	r1, r1, r3, r2
 8020856:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 802085a:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 802085e:	440a      	add	r2, r1
 8020860:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8020864:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8020868:	4413      	add	r3, r2
 802086a:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 802086e:	6803      	ldr	r3, [r0, #0]
 8020870:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8020872:	4798      	blx	r3
 8020874:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8020878:	d119      	bne.n	80208ae <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 802087a:	f010 0f20 	tst.w	r0, #32
 802087e:	6828      	ldr	r0, [r5, #0]
 8020880:	d018      	beq.n	80208b4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 8020882:	2500      	movs	r5, #0
 8020884:	6801      	ldr	r1, [r0, #0]
 8020886:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 802088a:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 802088e:	e9cd 9503 	strd	r9, r5, [sp, #12]
 8020892:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 8020896:	9502      	str	r5, [sp, #8]
 8020898:	b2b6      	uxth	r6, r6
 802089a:	fa1f f588 	uxth.w	r5, r8
 802089e:	9601      	str	r6, [sp, #4]
 80208a0:	9500      	str	r5, [sp, #0]
 80208a2:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 80208a4:	4621      	mov	r1, r4
 80208a6:	47a8      	blx	r5
 80208a8:	b00d      	add	sp, #52	; 0x34
 80208aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80208ae:	f010 0f40 	tst.w	r0, #64	; 0x40
 80208b2:	e7e4      	b.n	802087e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 80208b4:	6803      	ldr	r3, [r0, #0]
 80208b6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80208b8:	4798      	blx	r3
 80208ba:	4947      	ldr	r1, [pc, #284]	; (80209d8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 80208bc:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 80208c0:	880b      	ldrh	r3, [r1, #0]
 80208c2:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 80208c6:	fb03 5202 	mla	r2, r3, r2, r5
 80208ca:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80208ce:	4373      	muls	r3, r6
 80208d0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80208d4:	9307      	str	r3, [sp, #28]
 80208d6:	ea4f 0348 	mov.w	r3, r8, lsl #1
 80208da:	9306      	str	r3, [sp, #24]
 80208dc:	468a      	mov	sl, r1
 80208de:	9b07      	ldr	r3, [sp, #28]
 80208e0:	4298      	cmp	r0, r3
 80208e2:	d270      	bcs.n	80209c6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 80208e4:	9b06      	ldr	r3, [sp, #24]
 80208e6:	4621      	mov	r1, r4
 80208e8:	eb00 0b03 	add.w	fp, r0, r3
 80208ec:	4558      	cmp	r0, fp
 80208ee:	d25d      	bcs.n	80209ac <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 80208f0:	f851 4b04 	ldr.w	r4, [r1], #4
 80208f4:	0e23      	lsrs	r3, r4, #24
 80208f6:	d014      	beq.n	8020922 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 80208f8:	2bff      	cmp	r3, #255	; 0xff
 80208fa:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 80208fe:	d112      	bne.n	8020926 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8020900:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8020904:	d10f      	bne.n	8020926 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8020906:	0963      	lsrs	r3, r4, #5
 8020908:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 802090c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020910:	f02c 0c07 	bic.w	ip, ip, #7
 8020914:	ea43 0c0c 	orr.w	ip, r3, ip
 8020918:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 802091c:	ea4c 0404 	orr.w	r4, ip, r4
 8020920:	8004      	strh	r4, [r0, #0]
 8020922:	3002      	adds	r0, #2
 8020924:	e7e2      	b.n	80208ec <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 8020926:	fb09 f303 	mul.w	r3, r9, r3
 802092a:	8807      	ldrh	r7, [r0, #0]
 802092c:	1c5a      	adds	r2, r3, #1
 802092e:	eb02 2223 	add.w	r2, r2, r3, asr #8
 8020932:	1212      	asrs	r2, r2, #8
 8020934:	123e      	asrs	r6, r7, #8
 8020936:	b293      	uxth	r3, r2
 8020938:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 802093c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8020940:	43d2      	mvns	r2, r2
 8020942:	b2d2      	uxtb	r2, r2
 8020944:	10fd      	asrs	r5, r7, #3
 8020946:	fb1e fe03 	smulbb	lr, lr, r3
 802094a:	00ff      	lsls	r7, r7, #3
 802094c:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8020950:	fb06 e602 	mla	r6, r6, r2, lr
 8020954:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8020958:	b2ff      	uxtb	r7, r7
 802095a:	fa5f fc8c 	uxtb.w	ip, ip
 802095e:	b2e4      	uxtb	r4, r4
 8020960:	b2b6      	uxth	r6, r6
 8020962:	fb1c fc03 	smulbb	ip, ip, r3
 8020966:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 802096a:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 802096e:	fb14 f403 	smulbb	r4, r4, r3
 8020972:	fb05 c502 	mla	r5, r5, r2, ip
 8020976:	f106 0e01 	add.w	lr, r6, #1
 802097a:	fb07 4702 	mla	r7, r7, r2, r4
 802097e:	b2ad      	uxth	r5, r5
 8020980:	b2bf      	uxth	r7, r7
 8020982:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 8020986:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 802098a:	f105 0c01 	add.w	ip, r5, #1
 802098e:	1c7e      	adds	r6, r7, #1
 8020990:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8020994:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8020998:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 802099c:	096d      	lsrs	r5, r5, #5
 802099e:	ea46 060e 	orr.w	r6, r6, lr
 80209a2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80209a6:	432e      	orrs	r6, r5
 80209a8:	8006      	strh	r6, [r0, #0]
 80209aa:	e7ba      	b.n	8020922 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 80209ac:	f8ba 3000 	ldrh.w	r3, [sl]
 80209b0:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 80209b4:	eba3 0308 	sub.w	r3, r3, r8
 80209b8:	eba4 0408 	sub.w	r4, r4, r8
 80209bc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80209c0:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 80209c4:	e78b      	b.n	80208de <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 80209c6:	4b03      	ldr	r3, [pc, #12]	; (80209d4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 80209c8:	6818      	ldr	r0, [r3, #0]
 80209ca:	6803      	ldr	r3, [r0, #0]
 80209cc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80209ce:	4798      	blx	r3
 80209d0:	e76a      	b.n	80208a8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 80209d2:	bf00      	nop
 80209d4:	2001383c 	.word	0x2001383c
 80209d8:	20013836 	.word	0x20013836

080209dc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 80209dc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80209e0:	460c      	mov	r4, r1
 80209e2:	b085      	sub	sp, #20
 80209e4:	6810      	ldr	r0, [r2, #0]
 80209e6:	6851      	ldr	r1, [r2, #4]
 80209e8:	466d      	mov	r5, sp
 80209ea:	c503      	stmia	r5!, {r0, r1}
 80209ec:	6818      	ldr	r0, [r3, #0]
 80209ee:	6859      	ldr	r1, [r3, #4]
 80209f0:	4616      	mov	r6, r2
 80209f2:	c503      	stmia	r5!, {r0, r1}
 80209f4:	4668      	mov	r0, sp
 80209f6:	f7f7 fe27 	bl	8018648 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80209fa:	4631      	mov	r1, r6
 80209fc:	a802      	add	r0, sp, #8
 80209fe:	f7f7 fe67 	bl	80186d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8020a02:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 8020a06:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 8020a0a:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8020a0e:	4d28      	ldr	r5, [pc, #160]	; (8020ab0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 8020a10:	4e28      	ldr	r6, [pc, #160]	; (8020ab4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 8020a12:	6828      	ldr	r0, [r5, #0]
 8020a14:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8020a18:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 8020a1c:	fb11 2103 	smlabb	r1, r1, r3, r2
 8020a20:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8020a24:	f8bd 1000 	ldrh.w	r1, [sp]
 8020a28:	440a      	add	r2, r1
 8020a2a:	f8ad 2008 	strh.w	r2, [sp, #8]
 8020a2e:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8020a32:	4413      	add	r3, r2
 8020a34:	f8ad 300a 	strh.w	r3, [sp, #10]
 8020a38:	6803      	ldr	r3, [r0, #0]
 8020a3a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8020a3c:	4798      	blx	r3
 8020a3e:	8833      	ldrh	r3, [r6, #0]
 8020a40:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 8020a44:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8020a48:	f8df e06c 	ldr.w	lr, [pc, #108]	; 8020ab8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 8020a4c:	fb03 1202 	mla	r2, r3, r2, r1
 8020a50:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8020a54:	fb08 f303 	mul.w	r3, r8, r3
 8020a58:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8020a5c:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 8020a60:	4298      	cmp	r0, r3
 8020a62:	d21d      	bcs.n	8020aa0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 8020a64:	eb00 080c 	add.w	r8, r0, ip
 8020a68:	4540      	cmp	r0, r8
 8020a6a:	d20f      	bcs.n	8020a8c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 8020a6c:	f854 1b04 	ldr.w	r1, [r4], #4
 8020a70:	ea4f 1951 	mov.w	r9, r1, lsr #5
 8020a74:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 8020a78:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8020a7c:	ea42 0209 	orr.w	r2, r2, r9
 8020a80:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8020a84:	430a      	orrs	r2, r1
 8020a86:	f820 2b02 	strh.w	r2, [r0], #2
 8020a8a:	e7ed      	b.n	8020a68 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 8020a8c:	8832      	ldrh	r2, [r6, #0]
 8020a8e:	1bd2      	subs	r2, r2, r7
 8020a90:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8020a94:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 8020a98:	1bd2      	subs	r2, r2, r7
 8020a9a:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 8020a9e:	e7df      	b.n	8020a60 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 8020aa0:	6828      	ldr	r0, [r5, #0]
 8020aa2:	6803      	ldr	r3, [r0, #0]
 8020aa4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8020aa6:	4798      	blx	r3
 8020aa8:	b005      	add	sp, #20
 8020aaa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8020aae:	bf00      	nop
 8020ab0:	2001383c 	.word	0x2001383c
 8020ab4:	20013836 	.word	0x20013836
 8020ab8:	fffff800 	.word	0xfffff800

08020abc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 8020abc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8020ac0:	460e      	mov	r6, r1
 8020ac2:	b08e      	sub	sp, #56	; 0x38
 8020ac4:	4604      	mov	r4, r0
 8020ac6:	6808      	ldr	r0, [r1, #0]
 8020ac8:	6849      	ldr	r1, [r1, #4]
 8020aca:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 8020ca4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 8020ace:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 8020ca8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 8020ad2:	461d      	mov	r5, r3
 8020ad4:	ab0a      	add	r3, sp, #40	; 0x28
 8020ad6:	c303      	stmia	r3!, {r0, r1}
 8020ad8:	6810      	ldr	r0, [r2, #0]
 8020ada:	6851      	ldr	r1, [r2, #4]
 8020adc:	ab0c      	add	r3, sp, #48	; 0x30
 8020ade:	c303      	stmia	r3!, {r0, r1}
 8020ae0:	a80a      	add	r0, sp, #40	; 0x28
 8020ae2:	f7f7 fdb1 	bl	8018648 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020ae6:	4631      	mov	r1, r6
 8020ae8:	a80c      	add	r0, sp, #48	; 0x30
 8020aea:	f7f7 fdf1 	bl	80186d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8020aee:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8020af2:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8020af6:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8020afa:	f8d8 0000 	ldr.w	r0, [r8]
 8020afe:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 8020b02:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 8020b06:	fb11 2103 	smlabb	r1, r1, r3, r2
 8020b0a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8020b0e:	440c      	add	r4, r1
 8020b10:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 8020b14:	440a      	add	r2, r1
 8020b16:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8020b1a:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 8020b1e:	4413      	add	r3, r2
 8020b20:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8020b24:	6803      	ldr	r3, [r0, #0]
 8020b26:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8020b28:	4798      	blx	r3
 8020b2a:	2dff      	cmp	r5, #255	; 0xff
 8020b2c:	d124      	bne.n	8020b78 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 8020b2e:	f010 0f01 	tst.w	r0, #1
 8020b32:	f8d8 0000 	ldr.w	r0, [r8]
 8020b36:	d022      	beq.n	8020b7e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 8020b38:	2100      	movs	r1, #0
 8020b3a:	f8d0 c000 	ldr.w	ip, [r0]
 8020b3e:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8020b42:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 8020b46:	e9cd 1107 	strd	r1, r1, [sp, #28]
 8020b4a:	f04f 0e01 	mov.w	lr, #1
 8020b4e:	f8cd e018 	str.w	lr, [sp, #24]
 8020b52:	f8b9 e000 	ldrh.w	lr, [r9]
 8020b56:	9503      	str	r5, [sp, #12]
 8020b58:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 8020b5c:	b2b6      	uxth	r6, r6
 8020b5e:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8020b62:	9102      	str	r1, [sp, #8]
 8020b64:	b2bf      	uxth	r7, r7
 8020b66:	9601      	str	r6, [sp, #4]
 8020b68:	9700      	str	r7, [sp, #0]
 8020b6a:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 8020b6e:	4621      	mov	r1, r4
 8020b70:	47a8      	blx	r5
 8020b72:	b00e      	add	sp, #56	; 0x38
 8020b74:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8020b78:	f010 0f04 	tst.w	r0, #4
 8020b7c:	e7d9      	b.n	8020b32 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 8020b7e:	6803      	ldr	r3, [r0, #0]
 8020b80:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8020b82:	4798      	blx	r3
 8020b84:	f8b9 3000 	ldrh.w	r3, [r9]
 8020b88:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 8020b8c:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 8020b90:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 8020b94:	fb03 1202 	mla	r2, r3, r2, r1
 8020b98:	ebac 0c07 	sub.w	ip, ip, r7
 8020b9c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8020ba0:	435e      	muls	r6, r3
 8020ba2:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 8020ba6:	2dff      	cmp	r5, #255	; 0xff
 8020ba8:	eba3 0707 	sub.w	r7, r3, r7
 8020bac:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8020bb0:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8020bb4:	ea4f 0747 	mov.w	r7, r7, lsl #1
 8020bb8:	d049      	beq.n	8020c4e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 8020bba:	43eb      	mvns	r3, r5
 8020bbc:	fa1f f985 	uxth.w	r9, r5
 8020bc0:	b2db      	uxtb	r3, r3
 8020bc2:	42b0      	cmp	r0, r6
 8020bc4:	d266      	bcs.n	8020c94 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8020bc6:	eb00 0a0e 	add.w	sl, r0, lr
 8020bca:	4550      	cmp	r0, sl
 8020bcc:	4621      	mov	r1, r4
 8020bce:	f104 0403 	add.w	r4, r4, #3
 8020bd2:	d25b      	bcs.n	8020c8c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 8020bd4:	8802      	ldrh	r2, [r0, #0]
 8020bd6:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8020bda:	ea4f 2822 	mov.w	r8, r2, asr #8
 8020bde:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 8020be2:	fb11 f109 	smulbb	r1, r1, r9
 8020be6:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 8020bea:	10d5      	asrs	r5, r2, #3
 8020bec:	fb08 1803 	mla	r8, r8, r3, r1
 8020bf0:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 8020bf4:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8020bf8:	fb11 f109 	smulbb	r1, r1, r9
 8020bfc:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8020c00:	fb05 1503 	mla	r5, r5, r3, r1
 8020c04:	00d2      	lsls	r2, r2, #3
 8020c06:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8020c0a:	b2d2      	uxtb	r2, r2
 8020c0c:	fb11 f109 	smulbb	r1, r1, r9
 8020c10:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8020c14:	fa1f f888 	uxth.w	r8, r8
 8020c18:	fb02 1203 	mla	r2, r2, r3, r1
 8020c1c:	b292      	uxth	r2, r2
 8020c1e:	f108 0101 	add.w	r1, r8, #1
 8020c22:	b2ad      	uxth	r5, r5
 8020c24:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 8020c28:	1c51      	adds	r1, r2, #1
 8020c2a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8020c2e:	1c69      	adds	r1, r5, #1
 8020c30:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8020c34:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 8020c38:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8020c3c:	096d      	lsrs	r5, r5, #5
 8020c3e:	ea42 0208 	orr.w	r2, r2, r8
 8020c42:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8020c46:	432a      	orrs	r2, r5
 8020c48:	f820 2b02 	strh.w	r2, [r0], #2
 8020c4c:	e7bd      	b.n	8020bca <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 8020c4e:	4a14      	ldr	r2, [pc, #80]	; (8020ca0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 8020c50:	42b0      	cmp	r0, r6
 8020c52:	d21f      	bcs.n	8020c94 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8020c54:	eb00 050e 	add.w	r5, r0, lr
 8020c58:	42a8      	cmp	r0, r5
 8020c5a:	4621      	mov	r1, r4
 8020c5c:	f104 0403 	add.w	r4, r4, #3
 8020c60:	d210      	bcs.n	8020c84 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 8020c62:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 8020c66:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8020c6a:	00db      	lsls	r3, r3, #3
 8020c6c:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 8020c70:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020c74:	430b      	orrs	r3, r1
 8020c76:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8020c7a:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 8020c7e:	f820 3b02 	strh.w	r3, [r0], #2
 8020c82:	e7e9      	b.n	8020c58 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 8020c84:	4438      	add	r0, r7
 8020c86:	eb01 040c 	add.w	r4, r1, ip
 8020c8a:	e7e1      	b.n	8020c50 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 8020c8c:	4438      	add	r0, r7
 8020c8e:	eb01 040c 	add.w	r4, r1, ip
 8020c92:	e796      	b.n	8020bc2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 8020c94:	4b03      	ldr	r3, [pc, #12]	; (8020ca4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 8020c96:	6818      	ldr	r0, [r3, #0]
 8020c98:	6803      	ldr	r3, [r0, #0]
 8020c9a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8020c9c:	4798      	blx	r3
 8020c9e:	e768      	b.n	8020b72 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 8020ca0:	fffff800 	.word	0xfffff800
 8020ca4:	2001383c 	.word	0x2001383c
 8020ca8:	20013836 	.word	0x20013836

08020cac <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 8020cac:	b4f0      	push	{r4, r5, r6, r7}
 8020cae:	4616      	mov	r6, r2
 8020cb0:	2e01      	cmp	r6, #1
 8020cb2:	461c      	mov	r4, r3
 8020cb4:	460d      	mov	r5, r1
 8020cb6:	9a04      	ldr	r2, [sp, #16]
 8020cb8:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8020cbc:	f89d 7018 	ldrb.w	r7, [sp, #24]
 8020cc0:	d012      	beq.n	8020ce8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 8020cc2:	d303      	bcc.n	8020ccc <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 8020cc4:	2e02      	cmp	r6, #2
 8020cc6:	d00a      	beq.n	8020cde <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 8020cc8:	bcf0      	pop	{r4, r5, r6, r7}
 8020cca:	4770      	bx	lr
 8020ccc:	6805      	ldr	r5, [r0, #0]
 8020cce:	e9cd 3704 	strd	r3, r7, [sp, #16]
 8020cd2:	68ed      	ldr	r5, [r5, #12]
 8020cd4:	4613      	mov	r3, r2
 8020cd6:	46ac      	mov	ip, r5
 8020cd8:	4622      	mov	r2, r4
 8020cda:	bcf0      	pop	{r4, r5, r6, r7}
 8020cdc:	4760      	bx	ip
 8020cde:	4621      	mov	r1, r4
 8020ce0:	4628      	mov	r0, r5
 8020ce2:	bcf0      	pop	{r4, r5, r6, r7}
 8020ce4:	f7ff bd94 	b.w	8020810 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8020ce8:	4621      	mov	r1, r4
 8020cea:	4628      	mov	r0, r5
 8020cec:	bcf0      	pop	{r4, r5, r6, r7}
 8020cee:	f7ff bee5 	b.w	8020abc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

08020cf4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 8020cf4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020cf8:	4681      	mov	r9, r0
 8020cfa:	b093      	sub	sp, #76	; 0x4c
 8020cfc:	6810      	ldr	r0, [r2, #0]
 8020cfe:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 8020d02:	4f6d      	ldr	r7, [pc, #436]	; (8020eb8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 8020d04:	4688      	mov	r8, r1
 8020d06:	6851      	ldr	r1, [r2, #4]
 8020d08:	ac0e      	add	r4, sp, #56	; 0x38
 8020d0a:	c403      	stmia	r4!, {r0, r1}
 8020d0c:	6818      	ldr	r0, [r3, #0]
 8020d0e:	6859      	ldr	r1, [r3, #4]
 8020d10:	ac10      	add	r4, sp, #64	; 0x40
 8020d12:	4616      	mov	r6, r2
 8020d14:	c403      	stmia	r4!, {r0, r1}
 8020d16:	a80e      	add	r0, sp, #56	; 0x38
 8020d18:	f7f7 fc96 	bl	8018648 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020d1c:	4631      	mov	r1, r6
 8020d1e:	a810      	add	r0, sp, #64	; 0x40
 8020d20:	f7f7 fcd6 	bl	80186d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8020d24:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8020d28:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 8020d2c:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 8020d30:	4e62      	ldr	r6, [pc, #392]	; (8020ebc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8020d32:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 8020d36:	6830      	ldr	r0, [r6, #0]
 8020d38:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 8020d3c:	fb11 2103 	smlabb	r1, r1, r3, r2
 8020d40:	4489      	add	r9, r1
 8020d42:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 8020d46:	440a      	add	r2, r1
 8020d48:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8020d4c:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8020d50:	4413      	add	r3, r2
 8020d52:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8020d56:	6803      	ldr	r3, [r0, #0]
 8020d58:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8020d5a:	4798      	blx	r3
 8020d5c:	f010 0f80 	tst.w	r0, #128	; 0x80
 8020d60:	6830      	ldr	r0, [r6, #0]
 8020d62:	d01d      	beq.n	8020da0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 8020d64:	2200      	movs	r2, #0
 8020d66:	6801      	ldr	r1, [r0, #0]
 8020d68:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8020d6c:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8020d70:	220b      	movs	r2, #11
 8020d72:	9207      	str	r2, [sp, #28]
 8020d74:	883a      	ldrh	r2, [r7, #0]
 8020d76:	9206      	str	r2, [sp, #24]
 8020d78:	2201      	movs	r2, #1
 8020d7a:	e9cd a204 	strd	sl, r2, [sp, #16]
 8020d7e:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 8020d82:	9203      	str	r2, [sp, #12]
 8020d84:	b2a4      	uxth	r4, r4
 8020d86:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 8020d8a:	9200      	str	r2, [sp, #0]
 8020d8c:	b2ad      	uxth	r5, r5
 8020d8e:	9502      	str	r5, [sp, #8]
 8020d90:	9401      	str	r4, [sp, #4]
 8020d92:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 8020d94:	4642      	mov	r2, r8
 8020d96:	4649      	mov	r1, r9
 8020d98:	47a0      	blx	r4
 8020d9a:	b013      	add	sp, #76	; 0x4c
 8020d9c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020da0:	6803      	ldr	r3, [r0, #0]
 8020da2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8020da4:	4798      	blx	r3
 8020da6:	883b      	ldrh	r3, [r7, #0]
 8020da8:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 8020dac:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 8020db0:	fb03 1202 	mla	r2, r3, r2, r1
 8020db4:	435d      	muls	r5, r3
 8020db6:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8020dba:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 8020dbe:	920c      	str	r2, [sp, #48]	; 0x30
 8020dc0:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 8020dc4:	1b12      	subs	r2, r2, r4
 8020dc6:	920d      	str	r2, [sp, #52]	; 0x34
 8020dc8:	0062      	lsls	r2, r4, #1
 8020dca:	1b1c      	subs	r4, r3, r4
 8020dcc:	0063      	lsls	r3, r4, #1
 8020dce:	920a      	str	r2, [sp, #40]	; 0x28
 8020dd0:	930b      	str	r3, [sp, #44]	; 0x2c
 8020dd2:	f04f 0e04 	mov.w	lr, #4
 8020dd6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020dd8:	4298      	cmp	r0, r3
 8020dda:	d266      	bcs.n	8020eaa <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 8020ddc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020dde:	eb00 0b03 	add.w	fp, r0, r3
 8020de2:	4558      	cmp	r0, fp
 8020de4:	d25c      	bcs.n	8020ea0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 8020de6:	f819 3b01 	ldrb.w	r3, [r9], #1
 8020dea:	fb1e e303 	smlabb	r3, lr, r3, lr
 8020dee:	f858 2003 	ldr.w	r2, [r8, r3]
 8020df2:	0e11      	lsrs	r1, r2, #24
 8020df4:	d012      	beq.n	8020e1c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8020df6:	29ff      	cmp	r1, #255	; 0xff
 8020df8:	ea4f 2712 	mov.w	r7, r2, lsr #8
 8020dfc:	d110      	bne.n	8020e20 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8020dfe:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8020e02:	d10d      	bne.n	8020e20 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8020e04:	0953      	lsrs	r3, r2, #5
 8020e06:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 8020e0a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020e0e:	f027 0707 	bic.w	r7, r7, #7
 8020e12:	431f      	orrs	r7, r3
 8020e14:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8020e18:	433a      	orrs	r2, r7
 8020e1a:	8002      	strh	r2, [r0, #0]
 8020e1c:	3002      	adds	r0, #2
 8020e1e:	e7e0      	b.n	8020de2 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 8020e20:	fb0a f101 	mul.w	r1, sl, r1
 8020e24:	8806      	ldrh	r6, [r0, #0]
 8020e26:	1c4b      	adds	r3, r1, #1
 8020e28:	eb03 2321 	add.w	r3, r3, r1, asr #8
 8020e2c:	1235      	asrs	r5, r6, #8
 8020e2e:	10f4      	asrs	r4, r6, #3
 8020e30:	121b      	asrs	r3, r3, #8
 8020e32:	00f6      	lsls	r6, r6, #3
 8020e34:	b299      	uxth	r1, r3
 8020e36:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 8020e3a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8020e3e:	b2f6      	uxtb	r6, r6
 8020e40:	43db      	mvns	r3, r3
 8020e42:	b2d2      	uxtb	r2, r2
 8020e44:	b2db      	uxtb	r3, r3
 8020e46:	fb1c fc01 	smulbb	ip, ip, r1
 8020e4a:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8020e4e:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8020e52:	fb12 f201 	smulbb	r2, r2, r1
 8020e56:	fb05 c503 	mla	r5, r5, r3, ip
 8020e5a:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8020e5e:	b2ff      	uxtb	r7, r7
 8020e60:	fb06 2203 	mla	r2, r6, r3, r2
 8020e64:	b2ad      	uxth	r5, r5
 8020e66:	fb17 f701 	smulbb	r7, r7, r1
 8020e6a:	b292      	uxth	r2, r2
 8020e6c:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 8020e70:	fb04 7403 	mla	r4, r4, r3, r7
 8020e74:	f105 0c01 	add.w	ip, r5, #1
 8020e78:	1c57      	adds	r7, r2, #1
 8020e7a:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8020e7e:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8020e82:	b2a4      	uxth	r4, r4
 8020e84:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8020e88:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8020e8c:	433d      	orrs	r5, r7
 8020e8e:	1c67      	adds	r7, r4, #1
 8020e90:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 8020e94:	0964      	lsrs	r4, r4, #5
 8020e96:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8020e9a:	4325      	orrs	r5, r4
 8020e9c:	8005      	strh	r5, [r0, #0]
 8020e9e:	e7bd      	b.n	8020e1c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8020ea0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020ea2:	4418      	add	r0, r3
 8020ea4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8020ea6:	4499      	add	r9, r3
 8020ea8:	e795      	b.n	8020dd6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 8020eaa:	4b04      	ldr	r3, [pc, #16]	; (8020ebc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8020eac:	6818      	ldr	r0, [r3, #0]
 8020eae:	6803      	ldr	r3, [r0, #0]
 8020eb0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8020eb2:	4798      	blx	r3
 8020eb4:	e771      	b.n	8020d9a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 8020eb6:	bf00      	nop
 8020eb8:	20013836 	.word	0x20013836
 8020ebc:	2001383c 	.word	0x2001383c

08020ec0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 8020ec0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020ec4:	b087      	sub	sp, #28
 8020ec6:	4680      	mov	r8, r0
 8020ec8:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 8020ecc:	460d      	mov	r5, r1
 8020ece:	4614      	mov	r4, r2
 8020ed0:	2e00      	cmp	r6, #0
 8020ed2:	f000 80b9 	beq.w	8021048 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 8020ed6:	6810      	ldr	r0, [r2, #0]
 8020ed8:	6851      	ldr	r1, [r2, #4]
 8020eda:	af02      	add	r7, sp, #8
 8020edc:	c703      	stmia	r7!, {r0, r1}
 8020ede:	6818      	ldr	r0, [r3, #0]
 8020ee0:	6859      	ldr	r1, [r3, #4]
 8020ee2:	af04      	add	r7, sp, #16
 8020ee4:	c703      	stmia	r7!, {r0, r1}
 8020ee6:	a802      	add	r0, sp, #8
 8020ee8:	f7f7 fbae 	bl	8018648 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020eec:	4621      	mov	r1, r4
 8020eee:	a804      	add	r0, sp, #16
 8020ef0:	f7f7 fbee 	bl	80186d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8020ef4:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8020ef8:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8020efc:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 8020f00:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 8020f04:	fb14 2103 	smlabb	r1, r4, r3, r2
 8020f08:	eb08 0401 	add.w	r4, r8, r1
 8020f0c:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8020f10:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8020f14:	440a      	add	r2, r1
 8020f16:	f8ad 2010 	strh.w	r2, [sp, #16]
 8020f1a:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8020f1e:	4413      	add	r3, r2
 8020f20:	f8ad 3012 	strh.w	r3, [sp, #18]
 8020f24:	4b4a      	ldr	r3, [pc, #296]	; (8021050 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8020f26:	6818      	ldr	r0, [r3, #0]
 8020f28:	6803      	ldr	r3, [r0, #0]
 8020f2a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8020f2c:	4798      	blx	r3
 8020f2e:	4b49      	ldr	r3, [pc, #292]	; (8021054 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 8020f30:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 8020f34:	881a      	ldrh	r2, [r3, #0]
 8020f36:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 8020f3a:	2eff      	cmp	r6, #255	; 0xff
 8020f3c:	fb02 c101 	mla	r1, r2, r1, ip
 8020f40:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8020f44:	fb02 f207 	mul.w	r2, r2, r7
 8020f48:	f105 0104 	add.w	r1, r5, #4
 8020f4c:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 8020f50:	461d      	mov	r5, r3
 8020f52:	d05a      	beq.n	802100a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 8020f54:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 8020f58:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8020f5c:	b2b6      	uxth	r6, r6
 8020f5e:	fa1f fe8e 	uxth.w	lr, lr
 8020f62:	9301      	str	r3, [sp, #4]
 8020f64:	4282      	cmp	r2, r0
 8020f66:	d96a      	bls.n	802103e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8020f68:	eb00 0b0a 	add.w	fp, r0, sl
 8020f6c:	4583      	cmp	fp, r0
 8020f6e:	d940      	bls.n	8020ff2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 8020f70:	f814 3b01 	ldrb.w	r3, [r4], #1
 8020f74:	8805      	ldrh	r5, [r0, #0]
 8020f76:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8020f7a:	122f      	asrs	r7, r5, #8
 8020f7c:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8020f80:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8020f84:	fb17 f70e 	smulbb	r7, r7, lr
 8020f88:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8020f8c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8020f90:	00ed      	lsls	r5, r5, #3
 8020f92:	fb0c 7c06 	mla	ip, ip, r6, r7
 8020f96:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8020f9a:	10df      	asrs	r7, r3, #3
 8020f9c:	b2ed      	uxtb	r5, r5
 8020f9e:	00db      	lsls	r3, r3, #3
 8020fa0:	fa1f fc8c 	uxth.w	ip, ip
 8020fa4:	fb19 f90e 	smulbb	r9, r9, lr
 8020fa8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8020fac:	b2db      	uxtb	r3, r3
 8020fae:	fb15 f50e 	smulbb	r5, r5, lr
 8020fb2:	fb07 9706 	mla	r7, r7, r6, r9
 8020fb6:	fb03 5306 	mla	r3, r3, r6, r5
 8020fba:	f10c 0901 	add.w	r9, ip, #1
 8020fbe:	b29b      	uxth	r3, r3
 8020fc0:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8020fc4:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 8020fc8:	f103 0c01 	add.w	ip, r3, #1
 8020fcc:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8020fd0:	b2bf      	uxth	r7, r7
 8020fd2:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8020fd6:	ea4c 0c09 	orr.w	ip, ip, r9
 8020fda:	f107 0901 	add.w	r9, r7, #1
 8020fde:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 8020fe2:	097f      	lsrs	r7, r7, #5
 8020fe4:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8020fe8:	ea4c 0c07 	orr.w	ip, ip, r7
 8020fec:	f820 cb02 	strh.w	ip, [r0], #2
 8020ff0:	e7bc      	b.n	8020f6c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 8020ff2:	9b01      	ldr	r3, [sp, #4]
 8020ff4:	881b      	ldrh	r3, [r3, #0]
 8020ff6:	eba3 0308 	sub.w	r3, r3, r8
 8020ffa:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8020ffe:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8021002:	eba3 0308 	sub.w	r3, r3, r8
 8021006:	441c      	add	r4, r3
 8021008:	e7ac      	b.n	8020f64 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 802100a:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 802100e:	4282      	cmp	r2, r0
 8021010:	d915      	bls.n	802103e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8021012:	eb00 060a 	add.w	r6, r0, sl
 8021016:	4286      	cmp	r6, r0
 8021018:	d906      	bls.n	8021028 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 802101a:	f814 3b01 	ldrb.w	r3, [r4], #1
 802101e:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8021022:	f820 3b02 	strh.w	r3, [r0], #2
 8021026:	e7f6      	b.n	8021016 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 8021028:	882b      	ldrh	r3, [r5, #0]
 802102a:	eba3 0308 	sub.w	r3, r3, r8
 802102e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8021032:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8021036:	eba3 0308 	sub.w	r3, r3, r8
 802103a:	441c      	add	r4, r3
 802103c:	e7e7      	b.n	802100e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 802103e:	4b04      	ldr	r3, [pc, #16]	; (8021050 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8021040:	6818      	ldr	r0, [r3, #0]
 8021042:	6803      	ldr	r3, [r0, #0]
 8021044:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8021046:	4798      	blx	r3
 8021048:	b007      	add	sp, #28
 802104a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802104e:	bf00      	nop
 8021050:	2001383c 	.word	0x2001383c
 8021054:	20013836 	.word	0x20013836

08021058 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 8021058:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802105c:	b091      	sub	sp, #68	; 0x44
 802105e:	4680      	mov	r8, r0
 8021060:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 8021064:	460f      	mov	r7, r1
 8021066:	4614      	mov	r4, r2
 8021068:	2d00      	cmp	r5, #0
 802106a:	d051      	beq.n	8021110 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 802106c:	6810      	ldr	r0, [r2, #0]
 802106e:	6851      	ldr	r1, [r2, #4]
 8021070:	f8df 9200 	ldr.w	r9, [pc, #512]	; 8021274 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 8021074:	ae0c      	add	r6, sp, #48	; 0x30
 8021076:	c603      	stmia	r6!, {r0, r1}
 8021078:	6818      	ldr	r0, [r3, #0]
 802107a:	6859      	ldr	r1, [r3, #4]
 802107c:	ae0e      	add	r6, sp, #56	; 0x38
 802107e:	c603      	stmia	r6!, {r0, r1}
 8021080:	a80c      	add	r0, sp, #48	; 0x30
 8021082:	f7f7 fae1 	bl	8018648 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8021086:	4621      	mov	r1, r4
 8021088:	a80e      	add	r0, sp, #56	; 0x38
 802108a:	f7f7 fb21 	bl	80186d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802108e:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 8021092:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8021096:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 802109a:	f8d9 0000 	ldr.w	r0, [r9]
 802109e:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 80210a2:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 80210a6:	fb11 2103 	smlabb	r1, r1, r3, r2
 80210aa:	eb08 0401 	add.w	r4, r8, r1
 80210ae:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 80210b2:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 8021278 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 80210b6:	440a      	add	r2, r1
 80210b8:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 80210bc:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 80210c0:	4413      	add	r3, r2
 80210c2:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 80210c6:	6803      	ldr	r3, [r0, #0]
 80210c8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80210ca:	4798      	blx	r3
 80210cc:	f010 0f80 	tst.w	r0, #128	; 0x80
 80210d0:	f8d9 0000 	ldr.w	r0, [r9]
 80210d4:	d01f      	beq.n	8021116 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 80210d6:	2200      	movs	r2, #0
 80210d8:	6801      	ldr	r1, [r0, #0]
 80210da:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80210de:	e9cd 2208 	strd	r2, r2, [sp, #32]
 80210e2:	220b      	movs	r2, #11
 80210e4:	9207      	str	r2, [sp, #28]
 80210e6:	f8b8 2000 	ldrh.w	r2, [r8]
 80210ea:	9206      	str	r2, [sp, #24]
 80210ec:	2201      	movs	r2, #1
 80210ee:	e9cd 5204 	strd	r5, r2, [sp, #16]
 80210f2:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 80210f6:	9203      	str	r2, [sp, #12]
 80210f8:	fa1f f28a 	uxth.w	r2, sl
 80210fc:	9202      	str	r2, [sp, #8]
 80210fe:	b2b6      	uxth	r6, r6
 8021100:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8021104:	9200      	str	r2, [sp, #0]
 8021106:	9601      	str	r6, [sp, #4]
 8021108:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 802110a:	463a      	mov	r2, r7
 802110c:	4621      	mov	r1, r4
 802110e:	47a8      	blx	r5
 8021110:	b011      	add	sp, #68	; 0x44
 8021112:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021116:	6803      	ldr	r3, [r0, #0]
 8021118:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 802111a:	4798      	blx	r3
 802111c:	f8b8 2000 	ldrh.w	r2, [r8]
 8021120:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8021124:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 8021128:	2dff      	cmp	r5, #255	; 0xff
 802112a:	fb02 1303 	mla	r3, r2, r3, r1
 802112e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8021132:	ea4f 0946 	mov.w	r9, r6, lsl #1
 8021136:	fb0a fa02 	mul.w	sl, sl, r2
 802113a:	d062      	beq.n	8021202 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 802113c:	ea6f 0c05 	mvn.w	ip, r5
 8021140:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 8021144:	930a      	str	r3, [sp, #40]	; 0x28
 8021146:	b2ad      	uxth	r5, r5
 8021148:	fa5f fc8c 	uxtb.w	ip, ip
 802114c:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 8021150:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021152:	4298      	cmp	r0, r3
 8021154:	f080 8085 	bcs.w	8021262 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8021158:	eb00 0b09 	add.w	fp, r0, r9
 802115c:	4558      	cmp	r0, fp
 802115e:	d246      	bcs.n	80211ee <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 8021160:	f814 eb01 	ldrb.w	lr, [r4], #1
 8021164:	2303      	movs	r3, #3
 8021166:	2204      	movs	r2, #4
 8021168:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 802116c:	eb07 0a0e 	add.w	sl, r7, lr
 8021170:	8803      	ldrh	r3, [r0, #0]
 8021172:	f89a 8002 	ldrb.w	r8, [sl, #2]
 8021176:	f817 e00e 	ldrb.w	lr, [r7, lr]
 802117a:	1219      	asrs	r1, r3, #8
 802117c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8021180:	fb18 f805 	smulbb	r8, r8, r5
 8021184:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 8021188:	10da      	asrs	r2, r3, #3
 802118a:	fb01 810c 	mla	r1, r1, ip, r8
 802118e:	00db      	lsls	r3, r3, #3
 8021190:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8021194:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8021198:	b2db      	uxtb	r3, r3
 802119a:	fb18 f805 	smulbb	r8, r8, r5
 802119e:	fb1e fe05 	smulbb	lr, lr, r5
 80211a2:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 80211a6:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 80211aa:	b289      	uxth	r1, r1
 80211ac:	fb02 820c 	mla	r2, r2, ip, r8
 80211b0:	fb03 e30c 	mla	r3, r3, ip, lr
 80211b4:	b292      	uxth	r2, r2
 80211b6:	b29b      	uxth	r3, r3
 80211b8:	f101 0801 	add.w	r8, r1, #1
 80211bc:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 80211c0:	f103 0e01 	add.w	lr, r3, #1
 80211c4:	f102 0801 	add.w	r8, r2, #1
 80211c8:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 80211cc:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 80211d0:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 80211d4:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 80211d8:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80211dc:	ea4e 0101 	orr.w	r1, lr, r1
 80211e0:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80211e4:	ea41 0108 	orr.w	r1, r1, r8
 80211e8:	f820 1b02 	strh.w	r1, [r0], #2
 80211ec:	e7b6      	b.n	802115c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 80211ee:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80211f0:	881b      	ldrh	r3, [r3, #0]
 80211f2:	1b9b      	subs	r3, r3, r6
 80211f4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80211f8:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 80211fc:	1b9b      	subs	r3, r3, r6
 80211fe:	441c      	add	r4, r3
 8021200:	e7a6      	b.n	8021150 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 8021202:	491b      	ldr	r1, [pc, #108]	; (8021270 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 8021204:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 8021208:	2203      	movs	r2, #3
 802120a:	2504      	movs	r5, #4
 802120c:	4550      	cmp	r0, sl
 802120e:	d228      	bcs.n	8021262 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8021210:	eb00 0c09 	add.w	ip, r0, r9
 8021214:	4560      	cmp	r0, ip
 8021216:	4623      	mov	r3, r4
 8021218:	d219      	bcs.n	802124e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 802121a:	f893 e000 	ldrb.w	lr, [r3]
 802121e:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 8021222:	eb07 0b0e 	add.w	fp, r7, lr
 8021226:	f817 e00e 	ldrb.w	lr, [r7, lr]
 802122a:	f89b 3002 	ldrb.w	r3, [fp, #2]
 802122e:	f89b b001 	ldrb.w	fp, [fp, #1]
 8021232:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 8021236:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 802123a:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 802123e:	ea43 030b 	orr.w	r3, r3, fp
 8021242:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 8021246:	3401      	adds	r4, #1
 8021248:	f820 3b02 	strh.w	r3, [r0], #2
 802124c:	e7e2      	b.n	8021214 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 802124e:	f8b8 3000 	ldrh.w	r3, [r8]
 8021252:	1b9b      	subs	r3, r3, r6
 8021254:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8021258:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 802125c:	1b9b      	subs	r3, r3, r6
 802125e:	441c      	add	r4, r3
 8021260:	e7d4      	b.n	802120c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 8021262:	4b04      	ldr	r3, [pc, #16]	; (8021274 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 8021264:	6818      	ldr	r0, [r3, #0]
 8021266:	6803      	ldr	r3, [r0, #0]
 8021268:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802126a:	4798      	blx	r3
 802126c:	e750      	b.n	8021110 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 802126e:	bf00      	nop
 8021270:	fffff800 	.word	0xfffff800
 8021274:	2001383c 	.word	0x2001383c
 8021278:	20013836 	.word	0x20013836

0802127c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 802127c:	b4f0      	push	{r4, r5, r6, r7}
 802127e:	460c      	mov	r4, r1
 8021280:	4611      	mov	r1, r2
 8021282:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8021286:	780f      	ldrb	r7, [r1, #0]
 8021288:	784e      	ldrb	r6, [r1, #1]
 802128a:	2f01      	cmp	r7, #1
 802128c:	461a      	mov	r2, r3
 802128e:	9b04      	ldr	r3, [sp, #16]
 8021290:	d036      	beq.n	8021300 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x84>
 8021292:	d31e      	bcc.n	80212d2 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x56>
 8021294:	2f02      	cmp	r7, #2
 8021296:	d14a      	bne.n	802132e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 8021298:	2e03      	cmp	r6, #3
 802129a:	d848      	bhi.n	802132e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 802129c:	e8df f006 	tbb	[pc, r6]
 80212a0:	16140702 	.word	0x16140702
 80212a4:	9504      	str	r5, [sp, #16]
 80212a6:	4620      	mov	r0, r4
 80212a8:	bcf0      	pop	{r4, r5, r6, r7}
 80212aa:	f7ff be09 	b.w	8020ec0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 80212ae:	6f80      	ldr	r0, [r0, #120]	; 0x78
 80212b0:	2800      	cmp	r0, #0
 80212b2:	d03c      	beq.n	802132e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 80212b4:	6806      	ldr	r6, [r0, #0]
 80212b6:	e9cd 3504 	strd	r3, r5, [sp, #16]
 80212ba:	68b5      	ldr	r5, [r6, #8]
 80212bc:	4613      	mov	r3, r2
 80212be:	46ac      	mov	ip, r5
 80212c0:	460a      	mov	r2, r1
 80212c2:	4621      	mov	r1, r4
 80212c4:	bcf0      	pop	{r4, r5, r6, r7}
 80212c6:	4760      	bx	ip
 80212c8:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 80212ca:	e7f1      	b.n	80212b0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 80212cc:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 80212d0:	e7ee      	b.n	80212b0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 80212d2:	2e03      	cmp	r6, #3
 80212d4:	d82b      	bhi.n	802132e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 80212d6:	e8df f006 	tbb	[pc, r6]
 80212da:	0702      	.short	0x0702
 80212dc:	100e      	.short	0x100e
 80212de:	9504      	str	r5, [sp, #16]
 80212e0:	4620      	mov	r0, r4
 80212e2:	bcf0      	pop	{r4, r5, r6, r7}
 80212e4:	f7ff bd06 	b.w	8020cf4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 80212e8:	6f80      	ldr	r0, [r0, #120]	; 0x78
 80212ea:	b300      	cbz	r0, 802132e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 80212ec:	6806      	ldr	r6, [r0, #0]
 80212ee:	e9cd 3504 	strd	r3, r5, [sp, #16]
 80212f2:	68f5      	ldr	r5, [r6, #12]
 80212f4:	e7e2      	b.n	80212bc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 80212f6:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 80212f8:	e7f7      	b.n	80212ea <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 80212fa:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 80212fe:	e7f4      	b.n	80212ea <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 8021300:	2e03      	cmp	r6, #3
 8021302:	d814      	bhi.n	802132e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 8021304:	e8df f006 	tbb	[pc, r6]
 8021308:	100e0702 	.word	0x100e0702
 802130c:	9504      	str	r5, [sp, #16]
 802130e:	4620      	mov	r0, r4
 8021310:	bcf0      	pop	{r4, r5, r6, r7}
 8021312:	f7ff bea1 	b.w	8021058 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 8021316:	6f80      	ldr	r0, [r0, #120]	; 0x78
 8021318:	b148      	cbz	r0, 802132e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 802131a:	6806      	ldr	r6, [r0, #0]
 802131c:	e9cd 3504 	strd	r3, r5, [sp, #16]
 8021320:	6935      	ldr	r5, [r6, #16]
 8021322:	e7cb      	b.n	80212bc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 8021324:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 8021326:	e7f7      	b.n	8021318 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 8021328:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 802132c:	e7f4      	b.n	8021318 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 802132e:	bcf0      	pop	{r4, r5, r6, r7}
 8021330:	4770      	bx	lr
	...

08021334 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 8021334:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021338:	4604      	mov	r4, r0
 802133a:	b087      	sub	sp, #28
 802133c:	6810      	ldr	r0, [r2, #0]
 802133e:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 8021342:	f8df 9238 	ldr.w	r9, [pc, #568]	; 802157c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 8021346:	460e      	mov	r6, r1
 8021348:	6851      	ldr	r1, [r2, #4]
 802134a:	ad02      	add	r5, sp, #8
 802134c:	c503      	stmia	r5!, {r0, r1}
 802134e:	6818      	ldr	r0, [r3, #0]
 8021350:	6859      	ldr	r1, [r3, #4]
 8021352:	ad04      	add	r5, sp, #16
 8021354:	4617      	mov	r7, r2
 8021356:	c503      	stmia	r5!, {r0, r1}
 8021358:	a802      	add	r0, sp, #8
 802135a:	f7f7 f975 	bl	8018648 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802135e:	4639      	mov	r1, r7
 8021360:	a804      	add	r0, sp, #16
 8021362:	f7f7 f9b5 	bl	80186d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8021366:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 802136a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 802136e:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 8021372:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8021376:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 802137a:	fb11 2103 	smlabb	r1, r1, r3, r2
 802137e:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 8021382:	440e      	add	r6, r1
 8021384:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8021388:	440a      	add	r2, r1
 802138a:	f8ad 2010 	strh.w	r2, [sp, #16]
 802138e:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8021392:	4413      	add	r3, r2
 8021394:	f8ad 3012 	strh.w	r3, [sp, #18]
 8021398:	4b77      	ldr	r3, [pc, #476]	; (8021578 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 802139a:	6818      	ldr	r0, [r3, #0]
 802139c:	6803      	ldr	r3, [r0, #0]
 802139e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80213a0:	4798      	blx	r3
 80213a2:	f8b9 b000 	ldrh.w	fp, [r9]
 80213a6:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80213aa:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80213ae:	fb0b 2303 	mla	r3, fp, r3, r2
 80213b2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80213b6:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 80213ba:	ea4f 0348 	mov.w	r3, r8, lsl #1
 80213be:	fb05 f50b 	mul.w	r5, r5, fp
 80213c2:	9300      	str	r3, [sp, #0]
 80213c4:	d069      	beq.n	802149a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 80213c6:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 80213ca:	4558      	cmp	r0, fp
 80213cc:	f080 80cc 	bcs.w	8021568 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 80213d0:	9b00      	ldr	r3, [sp, #0]
 80213d2:	18c3      	adds	r3, r0, r3
 80213d4:	9301      	str	r3, [sp, #4]
 80213d6:	4631      	mov	r1, r6
 80213d8:	9b01      	ldr	r3, [sp, #4]
 80213da:	4298      	cmp	r0, r3
 80213dc:	d24f      	bcs.n	802147e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 80213de:	f811 2b01 	ldrb.w	r2, [r1], #1
 80213e2:	2a00      	cmp	r2, #0
 80213e4:	d048      	beq.n	8021478 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 80213e6:	fb0a f202 	mul.w	r2, sl, r2
 80213ea:	1c53      	adds	r3, r2, #1
 80213ec:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80213f0:	121b      	asrs	r3, r3, #8
 80213f2:	d041      	beq.n	8021478 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 80213f4:	8802      	ldrh	r2, [r0, #0]
 80213f6:	f8b4 c000 	ldrh.w	ip, [r4]
 80213fa:	b29e      	uxth	r6, r3
 80213fc:	1215      	asrs	r5, r2, #8
 80213fe:	43db      	mvns	r3, r3
 8021400:	b2db      	uxtb	r3, r3
 8021402:	ea4f 272c 	mov.w	r7, ip, asr #8
 8021406:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 802140a:	fb15 f503 	smulbb	r5, r5, r3
 802140e:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 8021412:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8021416:	00d2      	lsls	r2, r2, #3
 8021418:	fb07 5706 	mla	r7, r7, r6, r5
 802141c:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8021420:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8021424:	b2d2      	uxtb	r2, r2
 8021426:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 802142a:	b2bf      	uxth	r7, r7
 802142c:	fb1e fe03 	smulbb	lr, lr, r3
 8021430:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8021434:	fa5f fc8c 	uxtb.w	ip, ip
 8021438:	fb12 f203 	smulbb	r2, r2, r3
 802143c:	fb05 e506 	mla	r5, r5, r6, lr
 8021440:	fb0c 2c06 	mla	ip, ip, r6, r2
 8021444:	f107 0e01 	add.w	lr, r7, #1
 8021448:	fa1f fc8c 	uxth.w	ip, ip
 802144c:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 8021450:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 8021454:	f10c 0701 	add.w	r7, ip, #1
 8021458:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 802145c:	b2ad      	uxth	r5, r5
 802145e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8021462:	ea47 070e 	orr.w	r7, r7, lr
 8021466:	f105 0e01 	add.w	lr, r5, #1
 802146a:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 802146e:	096d      	lsrs	r5, r5, #5
 8021470:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8021474:	432f      	orrs	r7, r5
 8021476:	8007      	strh	r7, [r0, #0]
 8021478:	3002      	adds	r0, #2
 802147a:	3402      	adds	r4, #2
 802147c:	e7ac      	b.n	80213d8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 802147e:	f8b9 3000 	ldrh.w	r3, [r9]
 8021482:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8021486:	eba3 0308 	sub.w	r3, r3, r8
 802148a:	eba6 0608 	sub.w	r6, r6, r8
 802148e:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8021492:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8021496:	440e      	add	r6, r1
 8021498:	e797      	b.n	80213ca <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 802149a:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 802149e:	42a8      	cmp	r0, r5
 80214a0:	d262      	bcs.n	8021568 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 80214a2:	9b00      	ldr	r3, [sp, #0]
 80214a4:	4631      	mov	r1, r6
 80214a6:	eb00 0b03 	add.w	fp, r0, r3
 80214aa:	4558      	cmp	r0, fp
 80214ac:	d24e      	bcs.n	802154c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 80214ae:	f811 3b01 	ldrb.w	r3, [r1], #1
 80214b2:	b12b      	cbz	r3, 80214c0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 80214b4:	2bff      	cmp	r3, #255	; 0xff
 80214b6:	f8b4 e000 	ldrh.w	lr, [r4]
 80214ba:	d104      	bne.n	80214c6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 80214bc:	f8a0 e000 	strh.w	lr, [r0]
 80214c0:	3002      	adds	r0, #2
 80214c2:	3402      	adds	r4, #2
 80214c4:	e7f1      	b.n	80214aa <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 80214c6:	8802      	ldrh	r2, [r0, #0]
 80214c8:	b29f      	uxth	r7, r3
 80214ca:	1216      	asrs	r6, r2, #8
 80214cc:	43db      	mvns	r3, r3
 80214ce:	b2db      	uxtb	r3, r3
 80214d0:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80214d4:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80214d8:	fb16 f603 	smulbb	r6, r6, r3
 80214dc:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 80214e0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80214e4:	00d2      	lsls	r2, r2, #3
 80214e6:	fb0c 6c07 	mla	ip, ip, r7, r6
 80214ea:	b2d2      	uxtb	r2, r2
 80214ec:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80214f0:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80214f4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80214f8:	fb1a fa03 	smulbb	sl, sl, r3
 80214fc:	fa1f fc8c 	uxth.w	ip, ip
 8021500:	fb12 f303 	smulbb	r3, r2, r3
 8021504:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8021508:	fa5f fe8e 	uxtb.w	lr, lr
 802150c:	fb06 a607 	mla	r6, r6, r7, sl
 8021510:	f10c 0201 	add.w	r2, ip, #1
 8021514:	fb0e 3307 	mla	r3, lr, r7, r3
 8021518:	b2b6      	uxth	r6, r6
 802151a:	b29b      	uxth	r3, r3
 802151c:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8021520:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 8021524:	f106 0a01 	add.w	sl, r6, #1
 8021528:	f103 0c01 	add.w	ip, r3, #1
 802152c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8021530:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8021534:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8021538:	0976      	lsrs	r6, r6, #5
 802153a:	ea4c 0c02 	orr.w	ip, ip, r2
 802153e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8021542:	ea4c 0c06 	orr.w	ip, ip, r6
 8021546:	f8a0 c000 	strh.w	ip, [r0]
 802154a:	e7b9      	b.n	80214c0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 802154c:	f8b9 3000 	ldrh.w	r3, [r9]
 8021550:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8021554:	eba3 0308 	sub.w	r3, r3, r8
 8021558:	eba6 0608 	sub.w	r6, r6, r8
 802155c:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8021560:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8021564:	440e      	add	r6, r1
 8021566:	e79a      	b.n	802149e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 8021568:	4b03      	ldr	r3, [pc, #12]	; (8021578 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 802156a:	6818      	ldr	r0, [r3, #0]
 802156c:	6803      	ldr	r3, [r0, #0]
 802156e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8021570:	4798      	blx	r3
 8021572:	b007      	add	sp, #28
 8021574:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021578:	2001383c 	.word	0x2001383c
 802157c:	20013836 	.word	0x20013836

08021580 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 8021580:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021584:	b089      	sub	sp, #36	; 0x24
 8021586:	4682      	mov	sl, r0
 8021588:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 802158c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 802158e:	460f      	mov	r7, r1
 8021590:	4691      	mov	r9, r2
 8021592:	4698      	mov	r8, r3
 8021594:	2e00      	cmp	r6, #0
 8021596:	d03d      	beq.n	8021614 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8021598:	4608      	mov	r0, r1
 802159a:	f7fa fe59 	bl	801c250 <_ZNK8touchgfx6Bitmap8getWidthEv>
 802159e:	4605      	mov	r5, r0
 80215a0:	4638      	mov	r0, r7
 80215a2:	f7fa fe89 	bl	801c2b8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80215a6:	f8ad 000e 	strh.w	r0, [sp, #14]
 80215aa:	4638      	mov	r0, r7
 80215ac:	f8ad 9008 	strh.w	r9, [sp, #8]
 80215b0:	f8ad 500c 	strh.w	r5, [sp, #12]
 80215b4:	f8ad 800a 	strh.w	r8, [sp, #10]
 80215b8:	f7fa ff36 	bl	801c428 <_ZNK8touchgfx6Bitmap7getDataEv>
 80215bc:	4605      	mov	r5, r0
 80215be:	4638      	mov	r0, r7
 80215c0:	f7fa ff62 	bl	801c488 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 80215c4:	4681      	mov	r9, r0
 80215c6:	4638      	mov	r0, r7
 80215c8:	f7fa ffb2 	bl	801c530 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80215cc:	280b      	cmp	r0, #11
 80215ce:	d821      	bhi.n	8021614 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 80215d0:	e8df f000 	tbb	[pc, r0]
 80215d4:	2006aebe 	.word	0x2006aebe
 80215d8:	20202020 	.word	0x20202020
 80215dc:	b5202020 	.word	0xb5202020
 80215e0:	4bb0      	ldr	r3, [pc, #704]	; (80218a4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 80215e2:	6818      	ldr	r0, [r3, #0]
 80215e4:	6803      	ldr	r3, [r0, #0]
 80215e6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80215e8:	4798      	blx	r3
 80215ea:	2eff      	cmp	r6, #255	; 0xff
 80215ec:	d101      	bne.n	80215f2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 80215ee:	0683      	lsls	r3, r0, #26
 80215f0:	d506      	bpl.n	8021600 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
 80215f2:	4633      	mov	r3, r6
 80215f4:	4622      	mov	r2, r4
 80215f6:	a902      	add	r1, sp, #8
 80215f8:	4628      	mov	r0, r5
 80215fa:	f7ff f909 	bl	8020810 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80215fe:	e009      	b.n	8021614 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8021600:	4638      	mov	r0, r7
 8021602:	f7fa fed9 	bl	801c3b8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8021606:	b940      	cbnz	r0, 802161a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 8021608:	4623      	mov	r3, r4
 802160a:	aa02      	add	r2, sp, #8
 802160c:	4629      	mov	r1, r5
 802160e:	4650      	mov	r0, sl
 8021610:	f7ff f9e4 	bl	80209dc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8021614:	b009      	add	sp, #36	; 0x24
 8021616:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802161a:	f10d 0818 	add.w	r8, sp, #24
 802161e:	4639      	mov	r1, r7
 8021620:	4640      	mov	r0, r8
 8021622:	f7fa fe7d 	bl	801c320 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8021626:	e898 0003 	ldmia.w	r8, {r0, r1}
 802162a:	af04      	add	r7, sp, #16
 802162c:	e887 0003 	stmia.w	r7, {r0, r1}
 8021630:	4638      	mov	r0, r7
 8021632:	4621      	mov	r1, r4
 8021634:	f7f1 fa6a 	bl	8012b0c <_ZN8touchgfx4RectaNERKS0_>
 8021638:	4638      	mov	r0, r7
 802163a:	f7f1 faaa 	bl	8012b92 <_ZNK8touchgfx4Rect7isEmptyEv>
 802163e:	2800      	cmp	r0, #0
 8021640:	d1d7      	bne.n	80215f2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 8021642:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8021646:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 802164a:	4293      	cmp	r3, r2
 802164c:	dd12      	ble.n	8021674 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
 802164e:	1a9b      	subs	r3, r3, r2
 8021650:	f9b4 0000 	ldrsh.w	r0, [r4]
 8021654:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8021658:	f8ad 0018 	strh.w	r0, [sp, #24]
 802165c:	f8ad 201a 	strh.w	r2, [sp, #26]
 8021660:	f8ad 101c 	strh.w	r1, [sp, #28]
 8021664:	f8ad 301e 	strh.w	r3, [sp, #30]
 8021668:	4642      	mov	r2, r8
 802166a:	4633      	mov	r3, r6
 802166c:	a902      	add	r1, sp, #8
 802166e:	4628      	mov	r0, r5
 8021670:	f7ff f8ce 	bl	8020810 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8021674:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8021678:	f9b4 2000 	ldrsh.w	r2, [r4]
 802167c:	4293      	cmp	r3, r2
 802167e:	dd12      	ble.n	80216a6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
 8021680:	1a9b      	subs	r3, r3, r2
 8021682:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8021686:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 802168a:	f8ad 2018 	strh.w	r2, [sp, #24]
 802168e:	f8ad 001a 	strh.w	r0, [sp, #26]
 8021692:	f8ad 301c 	strh.w	r3, [sp, #28]
 8021696:	f8ad 101e 	strh.w	r1, [sp, #30]
 802169a:	23ff      	movs	r3, #255	; 0xff
 802169c:	4642      	mov	r2, r8
 802169e:	a902      	add	r1, sp, #8
 80216a0:	4628      	mov	r0, r5
 80216a2:	f7ff f8b5 	bl	8020810 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80216a6:	463b      	mov	r3, r7
 80216a8:	aa02      	add	r2, sp, #8
 80216aa:	4629      	mov	r1, r5
 80216ac:	4650      	mov	r0, sl
 80216ae:	f7ff f995 	bl	80209dc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 80216b2:	88a2      	ldrh	r2, [r4, #4]
 80216b4:	8823      	ldrh	r3, [r4, #0]
 80216b6:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 80216ba:	4413      	add	r3, r2
 80216bc:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80216c0:	440a      	add	r2, r1
 80216c2:	b29b      	uxth	r3, r3
 80216c4:	b292      	uxth	r2, r2
 80216c6:	b211      	sxth	r1, r2
 80216c8:	b218      	sxth	r0, r3
 80216ca:	4288      	cmp	r0, r1
 80216cc:	dd12      	ble.n	80216f4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 80216ce:	1a9b      	subs	r3, r3, r2
 80216d0:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 80216d4:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 80216d8:	f8ad 1018 	strh.w	r1, [sp, #24]
 80216dc:	f8ad 301c 	strh.w	r3, [sp, #28]
 80216e0:	f8ad 001e 	strh.w	r0, [sp, #30]
 80216e4:	23ff      	movs	r3, #255	; 0xff
 80216e6:	4642      	mov	r2, r8
 80216e8:	a902      	add	r1, sp, #8
 80216ea:	4628      	mov	r0, r5
 80216ec:	f8ad 601a 	strh.w	r6, [sp, #26]
 80216f0:	f7ff f88e 	bl	8020810 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80216f4:	88e2      	ldrh	r2, [r4, #6]
 80216f6:	8863      	ldrh	r3, [r4, #2]
 80216f8:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 80216fc:	4413      	add	r3, r2
 80216fe:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8021702:	440a      	add	r2, r1
 8021704:	b29b      	uxth	r3, r3
 8021706:	b292      	uxth	r2, r2
 8021708:	b211      	sxth	r1, r2
 802170a:	b218      	sxth	r0, r3
 802170c:	4288      	cmp	r0, r1
 802170e:	dd81      	ble.n	8021614 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8021710:	1a9b      	subs	r3, r3, r2
 8021712:	f9b4 6000 	ldrsh.w	r6, [r4]
 8021716:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 802171a:	f8ad 301e 	strh.w	r3, [sp, #30]
 802171e:	f8ad 6018 	strh.w	r6, [sp, #24]
 8021722:	f8ad 101a 	strh.w	r1, [sp, #26]
 8021726:	f8ad 001c 	strh.w	r0, [sp, #28]
 802172a:	23ff      	movs	r3, #255	; 0xff
 802172c:	4642      	mov	r2, r8
 802172e:	e762      	b.n	80215f6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
 8021730:	4633      	mov	r3, r6
 8021732:	4622      	mov	r2, r4
 8021734:	a902      	add	r1, sp, #8
 8021736:	4628      	mov	r0, r5
 8021738:	f7ff f9c0 	bl	8020abc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 802173c:	e76a      	b.n	8021614 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 802173e:	e9cd 4600 	strd	r4, r6, [sp]
 8021742:	ab02      	add	r3, sp, #8
 8021744:	464a      	mov	r2, r9
 8021746:	4629      	mov	r1, r5
 8021748:	4650      	mov	r0, sl
 802174a:	f7ff fd97 	bl	802127c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 802174e:	e761      	b.n	8021614 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8021750:	4638      	mov	r0, r7
 8021752:	f7fa fe31 	bl	801c3b8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8021756:	b950      	cbnz	r0, 802176e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
 8021758:	e9cd 6000 	strd	r6, r0, [sp]
 802175c:	f8da 3000 	ldr.w	r3, [sl]
 8021760:	aa02      	add	r2, sp, #8
 8021762:	68de      	ldr	r6, [r3, #12]
 8021764:	4629      	mov	r1, r5
 8021766:	4623      	mov	r3, r4
 8021768:	4650      	mov	r0, sl
 802176a:	47b0      	blx	r6
 802176c:	e752      	b.n	8021614 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 802176e:	f10d 0818 	add.w	r8, sp, #24
 8021772:	4639      	mov	r1, r7
 8021774:	4640      	mov	r0, r8
 8021776:	f7fa fdd3 	bl	801c320 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 802177a:	e898 0003 	ldmia.w	r8, {r0, r1}
 802177e:	af04      	add	r7, sp, #16
 8021780:	e887 0003 	stmia.w	r7, {r0, r1}
 8021784:	4638      	mov	r0, r7
 8021786:	4621      	mov	r1, r4
 8021788:	f7f1 f9c0 	bl	8012b0c <_ZN8touchgfx4RectaNERKS0_>
 802178c:	4638      	mov	r0, r7
 802178e:	f7f1 fa00 	bl	8012b92 <_ZNK8touchgfx4Rect7isEmptyEv>
 8021792:	b138      	cbz	r0, 80217a4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 8021794:	9600      	str	r6, [sp, #0]
 8021796:	4623      	mov	r3, r4
 8021798:	aa02      	add	r2, sp, #8
 802179a:	4649      	mov	r1, r9
 802179c:	4628      	mov	r0, r5
 802179e:	f7ff fdc9 	bl	8021334 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80217a2:	e737      	b.n	8021614 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 80217a4:	e9cd 6000 	strd	r6, r0, [sp]
 80217a8:	f8da 3000 	ldr.w	r3, [sl]
 80217ac:	aa02      	add	r2, sp, #8
 80217ae:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 80217b2:	4629      	mov	r1, r5
 80217b4:	463b      	mov	r3, r7
 80217b6:	4650      	mov	r0, sl
 80217b8:	47d8      	blx	fp
 80217ba:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80217be:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80217c2:	4293      	cmp	r3, r2
 80217c4:	dd13      	ble.n	80217ee <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
 80217c6:	f9b4 0000 	ldrsh.w	r0, [r4]
 80217ca:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80217ce:	f8ad 0018 	strh.w	r0, [sp, #24]
 80217d2:	1a9b      	subs	r3, r3, r2
 80217d4:	f8ad 201a 	strh.w	r2, [sp, #26]
 80217d8:	f8ad 101c 	strh.w	r1, [sp, #28]
 80217dc:	f8ad 301e 	strh.w	r3, [sp, #30]
 80217e0:	9600      	str	r6, [sp, #0]
 80217e2:	4643      	mov	r3, r8
 80217e4:	aa02      	add	r2, sp, #8
 80217e6:	4649      	mov	r1, r9
 80217e8:	4628      	mov	r0, r5
 80217ea:	f7ff fda3 	bl	8021334 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80217ee:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 80217f2:	f9b4 2000 	ldrsh.w	r2, [r4]
 80217f6:	4293      	cmp	r3, r2
 80217f8:	dd13      	ble.n	8021822 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
 80217fa:	1a9b      	subs	r3, r3, r2
 80217fc:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8021800:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8021804:	f8ad 2018 	strh.w	r2, [sp, #24]
 8021808:	f8ad 001a 	strh.w	r0, [sp, #26]
 802180c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8021810:	f8ad 101e 	strh.w	r1, [sp, #30]
 8021814:	9600      	str	r6, [sp, #0]
 8021816:	4643      	mov	r3, r8
 8021818:	aa02      	add	r2, sp, #8
 802181a:	4649      	mov	r1, r9
 802181c:	4628      	mov	r0, r5
 802181e:	f7ff fd89 	bl	8021334 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8021822:	88a2      	ldrh	r2, [r4, #4]
 8021824:	8823      	ldrh	r3, [r4, #0]
 8021826:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 802182a:	4413      	add	r3, r2
 802182c:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8021830:	440a      	add	r2, r1
 8021832:	b29b      	uxth	r3, r3
 8021834:	b292      	uxth	r2, r2
 8021836:	b211      	sxth	r1, r2
 8021838:	b218      	sxth	r0, r3
 802183a:	4288      	cmp	r0, r1
 802183c:	dd13      	ble.n	8021866 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
 802183e:	1a9b      	subs	r3, r3, r2
 8021840:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8021844:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 8021848:	f8ad 1018 	strh.w	r1, [sp, #24]
 802184c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8021850:	f8ad 001e 	strh.w	r0, [sp, #30]
 8021854:	9600      	str	r6, [sp, #0]
 8021856:	4643      	mov	r3, r8
 8021858:	aa02      	add	r2, sp, #8
 802185a:	4649      	mov	r1, r9
 802185c:	4628      	mov	r0, r5
 802185e:	f8ad 701a 	strh.w	r7, [sp, #26]
 8021862:	f7ff fd67 	bl	8021334 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8021866:	88e2      	ldrh	r2, [r4, #6]
 8021868:	8863      	ldrh	r3, [r4, #2]
 802186a:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 802186e:	4413      	add	r3, r2
 8021870:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8021874:	440a      	add	r2, r1
 8021876:	b29b      	uxth	r3, r3
 8021878:	b292      	uxth	r2, r2
 802187a:	b211      	sxth	r1, r2
 802187c:	b218      	sxth	r0, r3
 802187e:	4288      	cmp	r0, r1
 8021880:	f77f aec8 	ble.w	8021614 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8021884:	f9b4 7000 	ldrsh.w	r7, [r4]
 8021888:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 802188c:	f8ad 7018 	strh.w	r7, [sp, #24]
 8021890:	1a9b      	subs	r3, r3, r2
 8021892:	f8ad 301e 	strh.w	r3, [sp, #30]
 8021896:	f8ad 101a 	strh.w	r1, [sp, #26]
 802189a:	f8ad 001c 	strh.w	r0, [sp, #28]
 802189e:	9600      	str	r6, [sp, #0]
 80218a0:	4643      	mov	r3, r8
 80218a2:	e779      	b.n	8021798 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
 80218a4:	2001383c 	.word	0x2001383c

080218a8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 80218a8:	b180      	cbz	r0, 80218cc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 80218aa:	2903      	cmp	r1, #3
 80218ac:	d81c      	bhi.n	80218e8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 80218ae:	e8df f001 	tbb	[pc, r1]
 80218b2:	1d02      	.short	0x1d02
 80218b4:	1f08      	.short	0x1f08
 80218b6:	4b10      	ldr	r3, [pc, #64]	; (80218f8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 80218b8:	8818      	ldrh	r0, [r3, #0]
 80218ba:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80218be:	4240      	negs	r0, r0
 80218c0:	4770      	bx	lr
 80218c2:	4b0d      	ldr	r3, [pc, #52]	; (80218f8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 80218c4:	8818      	ldrh	r0, [r3, #0]
 80218c6:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80218ca:	4770      	bx	lr
 80218cc:	2903      	cmp	r1, #3
 80218ce:	d80b      	bhi.n	80218e8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 80218d0:	a301      	add	r3, pc, #4	; (adr r3, 80218d8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 80218d2:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 80218d6:	bf00      	nop
 80218d8:	080218ed 	.word	0x080218ed
 80218dc:	080218c3 	.word	0x080218c3
 80218e0:	080218f1 	.word	0x080218f1
 80218e4:	080218b7 	.word	0x080218b7
 80218e8:	2000      	movs	r0, #0
 80218ea:	4770      	bx	lr
 80218ec:	2001      	movs	r0, #1
 80218ee:	4770      	bx	lr
 80218f0:	f04f 30ff 	mov.w	r0, #4294967295
 80218f4:	4770      	bx	lr
 80218f6:	bf00      	nop
 80218f8:	20013836 	.word	0x20013836

080218fc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 80218fc:	b180      	cbz	r0, 8021920 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 80218fe:	2903      	cmp	r1, #3
 8021900:	d81c      	bhi.n	802193c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 8021902:	e8df f001 	tbb	[pc, r1]
 8021906:	021d      	.short	0x021d
 8021908:	071f      	.short	0x071f
 802190a:	4b10      	ldr	r3, [pc, #64]	; (802194c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 802190c:	8818      	ldrh	r0, [r3, #0]
 802190e:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8021912:	4770      	bx	lr
 8021914:	4b0d      	ldr	r3, [pc, #52]	; (802194c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8021916:	8818      	ldrh	r0, [r3, #0]
 8021918:	f3c0 000e 	ubfx	r0, r0, #0, #15
 802191c:	4240      	negs	r0, r0
 802191e:	4770      	bx	lr
 8021920:	2903      	cmp	r1, #3
 8021922:	d80b      	bhi.n	802193c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 8021924:	a301      	add	r3, pc, #4	; (adr r3, 802192c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 8021926:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 802192a:	bf00      	nop
 802192c:	0802190b 	.word	0x0802190b
 8021930:	08021945 	.word	0x08021945
 8021934:	08021915 	.word	0x08021915
 8021938:	08021941 	.word	0x08021941
 802193c:	2000      	movs	r0, #0
 802193e:	4770      	bx	lr
 8021940:	2001      	movs	r0, #1
 8021942:	4770      	bx	lr
 8021944:	f04f 30ff 	mov.w	r0, #4294967295
 8021948:	4770      	bx	lr
 802194a:	bf00      	nop
 802194c:	20013836 	.word	0x20013836

08021950 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8021950:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021954:	b099      	sub	sp, #100	; 0x64
 8021956:	910b      	str	r1, [sp, #44]	; 0x2c
 8021958:	a914      	add	r1, sp, #80	; 0x50
 802195a:	e881 000c 	stmia.w	r1, {r2, r3}
 802195e:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 8021962:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 8021966:	f891 900d 	ldrb.w	r9, [r1, #13]
 802196a:	9309      	str	r3, [sp, #36]	; 0x24
 802196c:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8021970:	9310      	str	r3, [sp, #64]	; 0x40
 8021972:	ea4f 1749 	mov.w	r7, r9, lsl #5
 8021976:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 802197a:	930c      	str	r3, [sp, #48]	; 0x30
 802197c:	f407 7380 	and.w	r3, r7, #256	; 0x100
 8021980:	798f      	ldrb	r7, [r1, #6]
 8021982:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 8021986:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 802198a:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 802198e:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 8021992:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 8021996:	431f      	orrs	r7, r3
 8021998:	f000 8195 	beq.w	8021cc6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 802199c:	ea4f 1909 	mov.w	r9, r9, lsl #4
 80219a0:	f409 7380 	and.w	r3, r9, #256	; 0x100
 80219a4:	f891 9007 	ldrb.w	r9, [r1, #7]
 80219a8:	ea59 0903 	orrs.w	r9, r9, r3
 80219ac:	f000 818b 	beq.w	8021cc6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 80219b0:	f991 3009 	ldrsb.w	r3, [r1, #9]
 80219b4:	b29b      	uxth	r3, r3
 80219b6:	2d00      	cmp	r5, #0
 80219b8:	f000 812e 	beq.w	8021c18 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 80219bc:	1aed      	subs	r5, r5, r3
 80219be:	b2ad      	uxth	r5, r5
 80219c0:	042b      	lsls	r3, r5, #16
 80219c2:	d502      	bpl.n	80219ca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 80219c4:	1b64      	subs	r4, r4, r5
 80219c6:	b224      	sxth	r4, r4
 80219c8:	2500      	movs	r5, #0
 80219ca:	f9b2 1000 	ldrsh.w	r1, [r2]
 80219ce:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80219d2:	428c      	cmp	r4, r1
 80219d4:	b28b      	uxth	r3, r1
 80219d6:	bfbf      	itttt	lt
 80219d8:	18ed      	addlt	r5, r5, r3
 80219da:	1b2c      	sublt	r4, r5, r4
 80219dc:	b2a5      	uxthlt	r5, r4
 80219de:	460c      	movlt	r4, r1
 80219e0:	8891      	ldrh	r1, [r2, #4]
 80219e2:	440b      	add	r3, r1
 80219e4:	b21b      	sxth	r3, r3
 80219e6:	930f      	str	r3, [sp, #60]	; 0x3c
 80219e8:	88d3      	ldrh	r3, [r2, #6]
 80219ea:	8852      	ldrh	r2, [r2, #2]
 80219ec:	4413      	add	r3, r2
 80219ee:	b21b      	sxth	r3, r3
 80219f0:	930d      	str	r3, [sp, #52]	; 0x34
 80219f2:	4bbe      	ldr	r3, [pc, #760]	; (8021cec <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 80219f4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80219f6:	f893 b000 	ldrb.w	fp, [r3]
 80219fa:	f10b 3cff 	add.w	ip, fp, #4294967295
 80219fe:	f1dc 0300 	rsbs	r3, ip, #0
 8021a02:	eb43 030c 	adc.w	r3, r3, ip
 8021a06:	930e      	str	r3, [sp, #56]	; 0x38
 8021a08:	4621      	mov	r1, r4
 8021a0a:	4653      	mov	r3, sl
 8021a0c:	a814      	add	r0, sp, #80	; 0x50
 8021a0e:	f7f6 fc90 	bl	8018332 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 8021a12:	4621      	mov	r1, r4
 8021a14:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 8021a18:	4653      	mov	r3, sl
 8021a1a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8021a1c:	a814      	add	r0, sp, #80	; 0x50
 8021a1e:	f7f6 fca5 	bl	801836c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 8021a22:	a918      	add	r1, sp, #96	; 0x60
 8021a24:	f821 0d02 	strh.w	r0, [r1, #-2]!
 8021a28:	a817      	add	r0, sp, #92	; 0x5c
 8021a2a:	f7f6 fdcb 	bl	80185c4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 8021a2e:	f1ba 0f00 	cmp.w	sl, #0
 8021a32:	f040 80f4 	bne.w	8021c1e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 8021a36:	f1bb 0f01 	cmp.w	fp, #1
 8021a3a:	f040 80f8 	bne.w	8021c2e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 8021a3e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8021a40:	2b00      	cmp	r3, #0
 8021a42:	f040 8145 	bne.w	8021cd0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 8021a46:	b2ba      	uxth	r2, r7
 8021a48:	b905      	cbnz	r5, 8021a4c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 8021a4a:	b16e      	cbz	r6, 8021a68 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 8021a4c:	fb06 5302 	mla	r3, r6, r2, r5
 8021a50:	9828      	ldr	r0, [sp, #160]	; 0xa0
 8021a52:	fb08 f303 	mul.w	r3, r8, r3
 8021a56:	4631      	mov	r1, r6
 8021a58:	f003 0607 	and.w	r6, r3, #7
 8021a5c:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 8021a60:	9328      	str	r3, [sp, #160]	; 0xa0
 8021a62:	eba9 0301 	sub.w	r3, r9, r1
 8021a66:	930a      	str	r3, [sp, #40]	; 0x28
 8021a68:	4651      	mov	r1, sl
 8021a6a:	980e      	ldr	r0, [sp, #56]	; 0x38
 8021a6c:	f7ff ff1c 	bl	80218a8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 8021a70:	4681      	mov	r9, r0
 8021a72:	980e      	ldr	r0, [sp, #56]	; 0x38
 8021a74:	f7ff ff42 	bl	80218fc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 8021a78:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8021a7a:	9909      	ldr	r1, [sp, #36]	; 0x24
 8021a7c:	eba3 0a01 	sub.w	sl, r3, r1
 8021a80:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021a82:	459a      	cmp	sl, r3
 8021a84:	bfa8      	it	ge
 8021a86:	469a      	movge	sl, r3
 8021a88:	f1ba 0f00 	cmp.w	sl, #0
 8021a8c:	4683      	mov	fp, r0
 8021a8e:	f340 811a 	ble.w	8021cc6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8021a92:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8021a94:	1b64      	subs	r4, r4, r5
 8021a96:	1b1c      	subs	r4, r3, r4
 8021a98:	42bc      	cmp	r4, r7
 8021a9a:	bfd4      	ite	le
 8021a9c:	ebc5 0504 	rsble	r5, r5, r4
 8021aa0:	ebc5 0507 	rsbgt	r5, r5, r7
 8021aa4:	2d00      	cmp	r5, #0
 8021aa6:	f340 810e 	ble.w	8021cc6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8021aaa:	1b52      	subs	r2, r2, r5
 8021aac:	fb08 f302 	mul.w	r3, r8, r2
 8021ab0:	930f      	str	r3, [sp, #60]	; 0x3c
 8021ab2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8021ab4:	2b00      	cmp	r3, #0
 8021ab6:	f040 8116 	bne.w	8021ce6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 8021aba:	4b8d      	ldr	r3, [pc, #564]	; (8021cf0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 8021abc:	6818      	ldr	r0, [r3, #0]
 8021abe:	6803      	ldr	r3, [r0, #0]
 8021ac0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8021ac2:	4798      	blx	r3
 8021ac4:	2301      	movs	r3, #1
 8021ac6:	fa03 f308 	lsl.w	r3, r3, r8
 8021aca:	4a8a      	ldr	r2, [pc, #552]	; (8021cf4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 8021acc:	3b01      	subs	r3, #1
 8021ace:	b2db      	uxtb	r3, r3
 8021ad0:	8811      	ldrh	r1, [r2, #0]
 8021ad2:	930e      	str	r3, [sp, #56]	; 0x38
 8021ad4:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 8021ad8:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 8021adc:	fb01 2303 	mla	r3, r1, r3, r2
 8021ae0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8021ae4:	930a      	str	r3, [sp, #40]	; 0x28
 8021ae6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8021ae8:	f3c3 4307 	ubfx	r3, r3, #16, #8
 8021aec:	9313      	str	r3, [sp, #76]	; 0x4c
 8021aee:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8021af0:	0a19      	lsrs	r1, r3, #8
 8021af2:	b2cb      	uxtb	r3, r1
 8021af4:	9312      	str	r3, [sp, #72]	; 0x48
 8021af6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8021af8:	b2db      	uxtb	r3, r3
 8021afa:	9311      	str	r3, [sp, #68]	; 0x44
 8021afc:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8021afe:	095a      	lsrs	r2, r3, #5
 8021b00:	4b7d      	ldr	r3, [pc, #500]	; (8021cf8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 8021b02:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021b06:	400b      	ands	r3, r1
 8021b08:	4313      	orrs	r3, r2
 8021b0a:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8021b0c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8021b10:	4313      	orrs	r3, r2
 8021b12:	b29b      	uxth	r3, r3
 8021b14:	9310      	str	r3, [sp, #64]	; 0x40
 8021b16:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021b18:	781a      	ldrb	r2, [r3, #0]
 8021b1a:	ea4f 0349 	mov.w	r3, r9, lsl #1
 8021b1e:	4132      	asrs	r2, r6
 8021b20:	fb05 b919 	mls	r9, r5, r9, fp
 8021b24:	fb03 fb05 	mul.w	fp, r3, r5
 8021b28:	b2d2      	uxtb	r2, r2
 8021b2a:	930d      	str	r3, [sp, #52]	; 0x34
 8021b2c:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 8021b30:	f11a 3aff 	adds.w	sl, sl, #4294967295
 8021b34:	f0c0 80f5 	bcc.w	8021d22 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 8021b38:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 8021b3c:	46ae      	mov	lr, r5
 8021b3e:	f11e 3eff 	adds.w	lr, lr, #4294967295
 8021b42:	f0c0 80dd 	bcc.w	8021d00 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 8021b46:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8021b48:	4013      	ands	r3, r2
 8021b4a:	d055      	beq.n	8021bf8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 8021b4c:	20ff      	movs	r0, #255	; 0xff
 8021b4e:	990e      	ldr	r1, [sp, #56]	; 0x38
 8021b50:	fb90 f1f1 	sdiv	r1, r0, r1
 8021b54:	434b      	muls	r3, r1
 8021b56:	2bfe      	cmp	r3, #254	; 0xfe
 8021b58:	dd03      	ble.n	8021b62 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 8021b5a:	990c      	ldr	r1, [sp, #48]	; 0x30
 8021b5c:	4281      	cmp	r1, r0
 8021b5e:	f000 80cd 	beq.w	8021cfc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 8021b62:	990c      	ldr	r1, [sp, #48]	; 0x30
 8021b64:	f8bc 4000 	ldrh.w	r4, [ip]
 8021b68:	fb11 f303 	smulbb	r3, r1, r3
 8021b6c:	b29b      	uxth	r3, r3
 8021b6e:	1c59      	adds	r1, r3, #1
 8021b70:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8021b74:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8021b78:	b29f      	uxth	r7, r3
 8021b7a:	43db      	mvns	r3, r3
 8021b7c:	b2db      	uxtb	r3, r3
 8021b7e:	9309      	str	r3, [sp, #36]	; 0x24
 8021b80:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8021b82:	1220      	asrs	r0, r4, #8
 8021b84:	fb13 f907 	smulbb	r9, r3, r7
 8021b88:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8021b8c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021b8e:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 8021b92:	fb00 9003 	mla	r0, r0, r3, r9
 8021b96:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8021b98:	10e1      	asrs	r1, r4, #3
 8021b9a:	fb13 f907 	smulbb	r9, r3, r7
 8021b9e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8021ba2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021ba4:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 8021ba8:	fb01 9103 	mla	r1, r1, r3, r9
 8021bac:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8021bae:	00e4      	lsls	r4, r4, #3
 8021bb0:	fb13 f707 	smulbb	r7, r3, r7
 8021bb4:	b2e4      	uxtb	r4, r4
 8021bb6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021bb8:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8021bbc:	fb04 7403 	mla	r4, r4, r3, r7
 8021bc0:	b280      	uxth	r0, r0
 8021bc2:	b2a4      	uxth	r4, r4
 8021bc4:	1c43      	adds	r3, r0, #1
 8021bc6:	f104 0901 	add.w	r9, r4, #1
 8021bca:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8021bce:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 8021bd2:	b289      	uxth	r1, r1
 8021bd4:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 8021bd8:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8021bdc:	ea49 0000 	orr.w	r0, r9, r0
 8021be0:	f101 0901 	add.w	r9, r1, #1
 8021be4:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 8021be8:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8021bec:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8021bf0:	ea40 0009 	orr.w	r0, r0, r9
 8021bf4:	f8ac 0000 	strh.w	r0, [ip]
 8021bf8:	4446      	add	r6, r8
 8021bfa:	b2b6      	uxth	r6, r6
 8021bfc:	2e07      	cmp	r6, #7
 8021bfe:	bf81      	itttt	hi
 8021c00:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 8021c02:	785a      	ldrbhi	r2, [r3, #1]
 8021c04:	3301      	addhi	r3, #1
 8021c06:	9328      	strhi	r3, [sp, #160]	; 0xa0
 8021c08:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8021c0a:	bf9a      	itte	ls
 8021c0c:	fa42 f208 	asrls.w	r2, r2, r8
 8021c10:	b2d2      	uxtbls	r2, r2
 8021c12:	2600      	movhi	r6, #0
 8021c14:	449c      	add	ip, r3
 8021c16:	e792      	b.n	8021b3e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 8021c18:	441c      	add	r4, r3
 8021c1a:	b224      	sxth	r4, r4
 8021c1c:	e6d5      	b.n	80219ca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 8021c1e:	f1ba 0f01 	cmp.w	sl, #1
 8021c22:	f47f af0c 	bne.w	8021a3e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8021c26:	f1bb 0f01 	cmp.w	fp, #1
 8021c2a:	f47f af08 	bne.w	8021a3e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8021c2e:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 8021cf0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 8021c32:	f8db 0000 	ldr.w	r0, [fp]
 8021c36:	6803      	ldr	r3, [r0, #0]
 8021c38:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8021c3a:	4798      	blx	r3
 8021c3c:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 8021c40:	465a      	mov	r2, fp
 8021c42:	d006      	beq.n	8021c52 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 8021c44:	f1b8 0f04 	cmp.w	r8, #4
 8021c48:	d140      	bne.n	8021ccc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 8021c4a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8021c4c:	3300      	adds	r3, #0
 8021c4e:	bf18      	it	ne
 8021c50:	2301      	movne	r3, #1
 8021c52:	0580      	lsls	r0, r0, #22
 8021c54:	d56e      	bpl.n	8021d34 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 8021c56:	f1b8 0f08 	cmp.w	r8, #8
 8021c5a:	d16b      	bne.n	8021d34 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 8021c5c:	2b00      	cmp	r3, #0
 8021c5e:	bf0c      	ite	eq
 8021c60:	f44f 7100 	moveq.w	r1, #512	; 0x200
 8021c64:	f44f 7180 	movne.w	r1, #256	; 0x100
 8021c68:	2d00      	cmp	r5, #0
 8021c6a:	f47f aee8 	bne.w	8021a3e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8021c6e:	2e00      	cmp	r6, #0
 8021c70:	f47f aee5 	bne.w	8021a3e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8021c74:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8021c76:	19e3      	adds	r3, r4, r7
 8021c78:	4283      	cmp	r3, r0
 8021c7a:	f73f aee0 	bgt.w	8021a3e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8021c7e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021c80:	980d      	ldr	r0, [sp, #52]	; 0x34
 8021c82:	444b      	add	r3, r9
 8021c84:	4283      	cmp	r3, r0
 8021c86:	f73f aeda 	bgt.w	8021a3e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8021c8a:	6810      	ldr	r0, [r2, #0]
 8021c8c:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 8021c90:	6804      	ldr	r4, [r0, #0]
 8021c92:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 8021c96:	b2bf      	uxth	r7, r7
 8021c98:	f1b8 0f08 	cmp.w	r8, #8
 8021c9c:	f04f 0500 	mov.w	r5, #0
 8021ca0:	bf18      	it	ne
 8021ca2:	3701      	addne	r7, #1
 8021ca4:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8021ca8:	990c      	ldr	r1, [sp, #48]	; 0x30
 8021caa:	9104      	str	r1, [sp, #16]
 8021cac:	bf18      	it	ne
 8021cae:	f027 0701 	bicne.w	r7, r7, #1
 8021cb2:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8021cb4:	bf18      	it	ne
 8021cb6:	b2bf      	uxthne	r7, r7
 8021cb8:	e9cd 7102 	strd	r7, r1, [sp, #8]
 8021cbc:	e9cd 7900 	strd	r7, r9, [sp]
 8021cc0:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8021cc2:	6d64      	ldr	r4, [r4, #84]	; 0x54
 8021cc4:	47a0      	blx	r4
 8021cc6:	b019      	add	sp, #100	; 0x64
 8021cc8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021ccc:	2300      	movs	r3, #0
 8021cce:	e7c0      	b.n	8021c52 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 8021cd0:	2208      	movs	r2, #8
 8021cd2:	fb92 f3f8 	sdiv	r3, r2, r8
 8021cd6:	1e5a      	subs	r2, r3, #1
 8021cd8:	443a      	add	r2, r7
 8021cda:	fb92 f2f3 	sdiv	r2, r2, r3
 8021cde:	fb12 f203 	smulbb	r2, r2, r3
 8021ce2:	b292      	uxth	r2, r2
 8021ce4:	e6b0      	b.n	8021a48 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 8021ce6:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8021ce8:	e6ec      	b.n	8021ac4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 8021cea:	bf00      	nop
 8021cec:	20013834 	.word	0x20013834
 8021cf0:	2001383c 	.word	0x2001383c
 8021cf4:	20013836 	.word	0x20013836
 8021cf8:	00fff800 	.word	0x00fff800
 8021cfc:	9810      	ldr	r0, [sp, #64]	; 0x40
 8021cfe:	e779      	b.n	8021bf4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 8021d00:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8021d02:	b153      	cbz	r3, 8021d1a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 8021d04:	441e      	add	r6, r3
 8021d06:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021d08:	b2b6      	uxth	r6, r6
 8021d0a:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 8021d0e:	f006 0607 	and.w	r6, r6, #7
 8021d12:	781a      	ldrb	r2, [r3, #0]
 8021d14:	9328      	str	r3, [sp, #160]	; 0xa0
 8021d16:	4132      	asrs	r2, r6
 8021d18:	b2d2      	uxtb	r2, r2
 8021d1a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021d1c:	445b      	add	r3, fp
 8021d1e:	930a      	str	r3, [sp, #40]	; 0x28
 8021d20:	e706      	b.n	8021b30 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 8021d22:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8021d24:	2b00      	cmp	r3, #0
 8021d26:	d1ce      	bne.n	8021cc6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8021d28:	4b05      	ldr	r3, [pc, #20]	; (8021d40 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 8021d2a:	6818      	ldr	r0, [r3, #0]
 8021d2c:	6803      	ldr	r3, [r0, #0]
 8021d2e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8021d30:	4798      	blx	r3
 8021d32:	e7c8      	b.n	8021cc6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8021d34:	2b00      	cmp	r3, #0
 8021d36:	f43f ae82 	beq.w	8021a3e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8021d3a:	f44f 7180 	mov.w	r1, #256	; 0x100
 8021d3e:	e793      	b.n	8021c68 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 8021d40:	2001383c 	.word	0x2001383c

08021d44 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 8021d44:	b538      	push	{r3, r4, r5, lr}
 8021d46:	4c15      	ldr	r4, [pc, #84]	; (8021d9c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 8021d48:	7823      	ldrb	r3, [r4, #0]
 8021d4a:	f3bf 8f5b 	dmb	ish
 8021d4e:	07da      	lsls	r2, r3, #31
 8021d50:	4605      	mov	r5, r0
 8021d52:	d40b      	bmi.n	8021d6c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8021d54:	4620      	mov	r0, r4
 8021d56:	f00a ff16 	bl	802cb86 <__cxa_guard_acquire>
 8021d5a:	b138      	cbz	r0, 8021d6c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8021d5c:	4620      	mov	r0, r4
 8021d5e:	f00a ff1e 	bl	802cb9e <__cxa_guard_release>
 8021d62:	4a0f      	ldr	r2, [pc, #60]	; (8021da0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8021d64:	490f      	ldr	r1, [pc, #60]	; (8021da4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 8021d66:	4810      	ldr	r0, [pc, #64]	; (8021da8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8021d68:	f00a ff06 	bl	802cb78 <__aeabi_atexit>
 8021d6c:	4c0f      	ldr	r4, [pc, #60]	; (8021dac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 8021d6e:	7823      	ldrb	r3, [r4, #0]
 8021d70:	f3bf 8f5b 	dmb	ish
 8021d74:	07db      	lsls	r3, r3, #31
 8021d76:	d40b      	bmi.n	8021d90 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8021d78:	4620      	mov	r0, r4
 8021d7a:	f00a ff04 	bl	802cb86 <__cxa_guard_acquire>
 8021d7e:	b138      	cbz	r0, 8021d90 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8021d80:	4620      	mov	r0, r4
 8021d82:	f00a ff0c 	bl	802cb9e <__cxa_guard_release>
 8021d86:	4a06      	ldr	r2, [pc, #24]	; (8021da0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8021d88:	4909      	ldr	r1, [pc, #36]	; (8021db0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 8021d8a:	480a      	ldr	r0, [pc, #40]	; (8021db4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8021d8c:	f00a fef4 	bl	802cb78 <__aeabi_atexit>
 8021d90:	4b05      	ldr	r3, [pc, #20]	; (8021da8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8021d92:	612b      	str	r3, [r5, #16]
 8021d94:	4b07      	ldr	r3, [pc, #28]	; (8021db4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8021d96:	616b      	str	r3, [r5, #20]
 8021d98:	bd38      	pop	{r3, r4, r5, pc}
 8021d9a:	bf00      	nop
 8021d9c:	2001391c 	.word	0x2001391c
 8021da0:	20000000 	.word	0x20000000
 8021da4:	0801eb47 	.word	0x0801eb47
 8021da8:	200000d8 	.word	0x200000d8
 8021dac:	20013920 	.word	0x20013920
 8021db0:	0801eb45 	.word	0x0801eb45
 8021db4:	200000dc 	.word	0x200000dc

08021db8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 8021db8:	b538      	push	{r3, r4, r5, lr}
 8021dba:	4c15      	ldr	r4, [pc, #84]	; (8021e10 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 8021dbc:	7823      	ldrb	r3, [r4, #0]
 8021dbe:	f3bf 8f5b 	dmb	ish
 8021dc2:	07da      	lsls	r2, r3, #31
 8021dc4:	4605      	mov	r5, r0
 8021dc6:	d40b      	bmi.n	8021de0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8021dc8:	4620      	mov	r0, r4
 8021dca:	f00a fedc 	bl	802cb86 <__cxa_guard_acquire>
 8021dce:	b138      	cbz	r0, 8021de0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8021dd0:	4620      	mov	r0, r4
 8021dd2:	f00a fee4 	bl	802cb9e <__cxa_guard_release>
 8021dd6:	4a0f      	ldr	r2, [pc, #60]	; (8021e14 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8021dd8:	490f      	ldr	r1, [pc, #60]	; (8021e18 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 8021dda:	4810      	ldr	r0, [pc, #64]	; (8021e1c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8021ddc:	f00a fecc 	bl	802cb78 <__aeabi_atexit>
 8021de0:	4c0f      	ldr	r4, [pc, #60]	; (8021e20 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 8021de2:	7823      	ldrb	r3, [r4, #0]
 8021de4:	f3bf 8f5b 	dmb	ish
 8021de8:	07db      	lsls	r3, r3, #31
 8021dea:	d40b      	bmi.n	8021e04 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8021dec:	4620      	mov	r0, r4
 8021dee:	f00a feca 	bl	802cb86 <__cxa_guard_acquire>
 8021df2:	b138      	cbz	r0, 8021e04 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8021df4:	4620      	mov	r0, r4
 8021df6:	f00a fed2 	bl	802cb9e <__cxa_guard_release>
 8021dfa:	4a06      	ldr	r2, [pc, #24]	; (8021e14 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8021dfc:	4909      	ldr	r1, [pc, #36]	; (8021e24 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 8021dfe:	480a      	ldr	r0, [pc, #40]	; (8021e28 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8021e00:	f00a feba 	bl	802cb78 <__aeabi_atexit>
 8021e04:	4b05      	ldr	r3, [pc, #20]	; (8021e1c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8021e06:	60ab      	str	r3, [r5, #8]
 8021e08:	4b07      	ldr	r3, [pc, #28]	; (8021e28 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8021e0a:	60eb      	str	r3, [r5, #12]
 8021e0c:	bd38      	pop	{r3, r4, r5, pc}
 8021e0e:	bf00      	nop
 8021e10:	200138f4 	.word	0x200138f4
 8021e14:	20000000 	.word	0x20000000
 8021e18:	0801eb4b 	.word	0x0801eb4b
 8021e1c:	200000b0 	.word	0x200000b0
 8021e20:	200138f8 	.word	0x200138f8
 8021e24:	0801eb49 	.word	0x0801eb49
 8021e28:	200000b4 	.word	0x200000b4

08021e2c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 8021e2c:	b510      	push	{r4, lr}
 8021e2e:	4604      	mov	r4, r0
 8021e30:	f7ff ff88 	bl	8021d44 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 8021e34:	4620      	mov	r0, r4
 8021e36:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8021e3a:	f7ff bfbd 	b.w	8021db8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

08021e40 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 8021e40:	b538      	push	{r3, r4, r5, lr}
 8021e42:	4c15      	ldr	r4, [pc, #84]	; (8021e98 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8021e44:	7823      	ldrb	r3, [r4, #0]
 8021e46:	f3bf 8f5b 	dmb	ish
 8021e4a:	07da      	lsls	r2, r3, #31
 8021e4c:	4605      	mov	r5, r0
 8021e4e:	d40b      	bmi.n	8021e68 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8021e50:	4620      	mov	r0, r4
 8021e52:	f00a fe98 	bl	802cb86 <__cxa_guard_acquire>
 8021e56:	b138      	cbz	r0, 8021e68 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8021e58:	4620      	mov	r0, r4
 8021e5a:	f00a fea0 	bl	802cb9e <__cxa_guard_release>
 8021e5e:	4a0f      	ldr	r2, [pc, #60]	; (8021e9c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8021e60:	490f      	ldr	r1, [pc, #60]	; (8021ea0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 8021e62:	4810      	ldr	r0, [pc, #64]	; (8021ea4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8021e64:	f00a fe88 	bl	802cb78 <__aeabi_atexit>
 8021e68:	4c0f      	ldr	r4, [pc, #60]	; (8021ea8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 8021e6a:	7823      	ldrb	r3, [r4, #0]
 8021e6c:	f3bf 8f5b 	dmb	ish
 8021e70:	07db      	lsls	r3, r3, #31
 8021e72:	d40b      	bmi.n	8021e8c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8021e74:	4620      	mov	r0, r4
 8021e76:	f00a fe86 	bl	802cb86 <__cxa_guard_acquire>
 8021e7a:	b138      	cbz	r0, 8021e8c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8021e7c:	4620      	mov	r0, r4
 8021e7e:	f00a fe8e 	bl	802cb9e <__cxa_guard_release>
 8021e82:	4a06      	ldr	r2, [pc, #24]	; (8021e9c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8021e84:	4909      	ldr	r1, [pc, #36]	; (8021eac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 8021e86:	480a      	ldr	r0, [pc, #40]	; (8021eb0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8021e88:	f00a fe76 	bl	802cb78 <__aeabi_atexit>
 8021e8c:	4b05      	ldr	r3, [pc, #20]	; (8021ea4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8021e8e:	622b      	str	r3, [r5, #32]
 8021e90:	4b07      	ldr	r3, [pc, #28]	; (8021eb0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8021e92:	626b      	str	r3, [r5, #36]	; 0x24
 8021e94:	bd38      	pop	{r3, r4, r5, pc}
 8021e96:	bf00      	nop
 8021e98:	20013924 	.word	0x20013924
 8021e9c:	20000000 	.word	0x20000000
 8021ea0:	0801eb3f 	.word	0x0801eb3f
 8021ea4:	200000e0 	.word	0x200000e0
 8021ea8:	20013928 	.word	0x20013928
 8021eac:	0801eb3d 	.word	0x0801eb3d
 8021eb0:	200000e4 	.word	0x200000e4

08021eb4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8021eb4:	b538      	push	{r3, r4, r5, lr}
 8021eb6:	4c15      	ldr	r4, [pc, #84]	; (8021f0c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8021eb8:	7823      	ldrb	r3, [r4, #0]
 8021eba:	f3bf 8f5b 	dmb	ish
 8021ebe:	07da      	lsls	r2, r3, #31
 8021ec0:	4605      	mov	r5, r0
 8021ec2:	d40b      	bmi.n	8021edc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8021ec4:	4620      	mov	r0, r4
 8021ec6:	f00a fe5e 	bl	802cb86 <__cxa_guard_acquire>
 8021eca:	b138      	cbz	r0, 8021edc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8021ecc:	4620      	mov	r0, r4
 8021ece:	f00a fe66 	bl	802cb9e <__cxa_guard_release>
 8021ed2:	4a0f      	ldr	r2, [pc, #60]	; (8021f10 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8021ed4:	490f      	ldr	r1, [pc, #60]	; (8021f14 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 8021ed6:	4810      	ldr	r0, [pc, #64]	; (8021f18 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8021ed8:	f00a fe4e 	bl	802cb78 <__aeabi_atexit>
 8021edc:	4c0f      	ldr	r4, [pc, #60]	; (8021f1c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 8021ede:	7823      	ldrb	r3, [r4, #0]
 8021ee0:	f3bf 8f5b 	dmb	ish
 8021ee4:	07db      	lsls	r3, r3, #31
 8021ee6:	d40b      	bmi.n	8021f00 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8021ee8:	4620      	mov	r0, r4
 8021eea:	f00a fe4c 	bl	802cb86 <__cxa_guard_acquire>
 8021eee:	b138      	cbz	r0, 8021f00 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8021ef0:	4620      	mov	r0, r4
 8021ef2:	f00a fe54 	bl	802cb9e <__cxa_guard_release>
 8021ef6:	4a06      	ldr	r2, [pc, #24]	; (8021f10 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8021ef8:	4909      	ldr	r1, [pc, #36]	; (8021f20 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 8021efa:	480a      	ldr	r0, [pc, #40]	; (8021f24 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8021efc:	f00a fe3c 	bl	802cb78 <__aeabi_atexit>
 8021f00:	4b05      	ldr	r3, [pc, #20]	; (8021f18 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8021f02:	61ab      	str	r3, [r5, #24]
 8021f04:	4b07      	ldr	r3, [pc, #28]	; (8021f24 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8021f06:	61eb      	str	r3, [r5, #28]
 8021f08:	bd38      	pop	{r3, r4, r5, pc}
 8021f0a:	bf00      	nop
 8021f0c:	200138fc 	.word	0x200138fc
 8021f10:	20000000 	.word	0x20000000
 8021f14:	0801eb43 	.word	0x0801eb43
 8021f18:	200000b8 	.word	0x200000b8
 8021f1c:	20013900 	.word	0x20013900
 8021f20:	0801eb41 	.word	0x0801eb41
 8021f24:	200000bc 	.word	0x200000bc

08021f28 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 8021f28:	b510      	push	{r4, lr}
 8021f2a:	4604      	mov	r4, r0
 8021f2c:	f7ff ff88 	bl	8021e40 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8021f30:	4620      	mov	r0, r4
 8021f32:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8021f36:	f7ff bfbd 	b.w	8021eb4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

08021f3c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 8021f3c:	b538      	push	{r3, r4, r5, lr}
 8021f3e:	4c15      	ldr	r4, [pc, #84]	; (8021f94 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8021f40:	7823      	ldrb	r3, [r4, #0]
 8021f42:	f3bf 8f5b 	dmb	ish
 8021f46:	07da      	lsls	r2, r3, #31
 8021f48:	4605      	mov	r5, r0
 8021f4a:	d40b      	bmi.n	8021f64 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8021f4c:	4620      	mov	r0, r4
 8021f4e:	f00a fe1a 	bl	802cb86 <__cxa_guard_acquire>
 8021f52:	b138      	cbz	r0, 8021f64 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8021f54:	4620      	mov	r0, r4
 8021f56:	f00a fe22 	bl	802cb9e <__cxa_guard_release>
 8021f5a:	4a0f      	ldr	r2, [pc, #60]	; (8021f98 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8021f5c:	490f      	ldr	r1, [pc, #60]	; (8021f9c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 8021f5e:	4810      	ldr	r0, [pc, #64]	; (8021fa0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8021f60:	f00a fe0a 	bl	802cb78 <__aeabi_atexit>
 8021f64:	4c0f      	ldr	r4, [pc, #60]	; (8021fa4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 8021f66:	7823      	ldrb	r3, [r4, #0]
 8021f68:	f3bf 8f5b 	dmb	ish
 8021f6c:	07db      	lsls	r3, r3, #31
 8021f6e:	d40b      	bmi.n	8021f88 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8021f70:	4620      	mov	r0, r4
 8021f72:	f00a fe08 	bl	802cb86 <__cxa_guard_acquire>
 8021f76:	b138      	cbz	r0, 8021f88 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8021f78:	4620      	mov	r0, r4
 8021f7a:	f00a fe10 	bl	802cb9e <__cxa_guard_release>
 8021f7e:	4a06      	ldr	r2, [pc, #24]	; (8021f98 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8021f80:	4909      	ldr	r1, [pc, #36]	; (8021fa8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 8021f82:	480a      	ldr	r0, [pc, #40]	; (8021fac <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8021f84:	f00a fdf8 	bl	802cb78 <__aeabi_atexit>
 8021f88:	4b05      	ldr	r3, [pc, #20]	; (8021fa0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8021f8a:	632b      	str	r3, [r5, #48]	; 0x30
 8021f8c:	4b07      	ldr	r3, [pc, #28]	; (8021fac <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8021f8e:	636b      	str	r3, [r5, #52]	; 0x34
 8021f90:	bd38      	pop	{r3, r4, r5, pc}
 8021f92:	bf00      	nop
 8021f94:	20013934 	.word	0x20013934
 8021f98:	20000000 	.word	0x20000000
 8021f9c:	0801eb37 	.word	0x0801eb37
 8021fa0:	200000f0 	.word	0x200000f0
 8021fa4:	20013938 	.word	0x20013938
 8021fa8:	0801eb35 	.word	0x0801eb35
 8021fac:	200000f4 	.word	0x200000f4

08021fb0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 8021fb0:	b538      	push	{r3, r4, r5, lr}
 8021fb2:	4c15      	ldr	r4, [pc, #84]	; (8022008 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 8021fb4:	7823      	ldrb	r3, [r4, #0]
 8021fb6:	f3bf 8f5b 	dmb	ish
 8021fba:	07da      	lsls	r2, r3, #31
 8021fbc:	4605      	mov	r5, r0
 8021fbe:	d40b      	bmi.n	8021fd8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8021fc0:	4620      	mov	r0, r4
 8021fc2:	f00a fde0 	bl	802cb86 <__cxa_guard_acquire>
 8021fc6:	b138      	cbz	r0, 8021fd8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8021fc8:	4620      	mov	r0, r4
 8021fca:	f00a fde8 	bl	802cb9e <__cxa_guard_release>
 8021fce:	4a0f      	ldr	r2, [pc, #60]	; (802200c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8021fd0:	490f      	ldr	r1, [pc, #60]	; (8022010 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 8021fd2:	4810      	ldr	r0, [pc, #64]	; (8022014 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8021fd4:	f00a fdd0 	bl	802cb78 <__aeabi_atexit>
 8021fd8:	4c0f      	ldr	r4, [pc, #60]	; (8022018 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 8021fda:	7823      	ldrb	r3, [r4, #0]
 8021fdc:	f3bf 8f5b 	dmb	ish
 8021fe0:	07db      	lsls	r3, r3, #31
 8021fe2:	d40b      	bmi.n	8021ffc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8021fe4:	4620      	mov	r0, r4
 8021fe6:	f00a fdce 	bl	802cb86 <__cxa_guard_acquire>
 8021fea:	b138      	cbz	r0, 8021ffc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8021fec:	4620      	mov	r0, r4
 8021fee:	f00a fdd6 	bl	802cb9e <__cxa_guard_release>
 8021ff2:	4a06      	ldr	r2, [pc, #24]	; (802200c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8021ff4:	4909      	ldr	r1, [pc, #36]	; (802201c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 8021ff6:	480a      	ldr	r0, [pc, #40]	; (8022020 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8021ff8:	f00a fdbe 	bl	802cb78 <__aeabi_atexit>
 8021ffc:	4b05      	ldr	r3, [pc, #20]	; (8022014 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8021ffe:	62ab      	str	r3, [r5, #40]	; 0x28
 8022000:	4b07      	ldr	r3, [pc, #28]	; (8022020 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8022002:	62eb      	str	r3, [r5, #44]	; 0x2c
 8022004:	bd38      	pop	{r3, r4, r5, pc}
 8022006:	bf00      	nop
 8022008:	20013904 	.word	0x20013904
 802200c:	20000000 	.word	0x20000000
 8022010:	0801eb3b 	.word	0x0801eb3b
 8022014:	200000c0 	.word	0x200000c0
 8022018:	20013908 	.word	0x20013908
 802201c:	0801eb39 	.word	0x0801eb39
 8022020:	200000c4 	.word	0x200000c4

08022024 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 8022024:	b510      	push	{r4, lr}
 8022026:	4604      	mov	r4, r0
 8022028:	f7ff ff88 	bl	8021f3c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 802202c:	4620      	mov	r0, r4
 802202e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8022032:	f7ff bfbd 	b.w	8021fb0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

08022038 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 8022038:	b538      	push	{r3, r4, r5, lr}
 802203a:	4c15      	ldr	r4, [pc, #84]	; (8022090 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 802203c:	7823      	ldrb	r3, [r4, #0]
 802203e:	f3bf 8f5b 	dmb	ish
 8022042:	07da      	lsls	r2, r3, #31
 8022044:	4605      	mov	r5, r0
 8022046:	d40b      	bmi.n	8022060 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8022048:	4620      	mov	r0, r4
 802204a:	f00a fd9c 	bl	802cb86 <__cxa_guard_acquire>
 802204e:	b138      	cbz	r0, 8022060 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8022050:	4620      	mov	r0, r4
 8022052:	f00a fda4 	bl	802cb9e <__cxa_guard_release>
 8022056:	4a0f      	ldr	r2, [pc, #60]	; (8022094 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8022058:	490f      	ldr	r1, [pc, #60]	; (8022098 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 802205a:	4810      	ldr	r0, [pc, #64]	; (802209c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 802205c:	f00a fd8c 	bl	802cb78 <__aeabi_atexit>
 8022060:	4c0f      	ldr	r4, [pc, #60]	; (80220a0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 8022062:	7823      	ldrb	r3, [r4, #0]
 8022064:	f3bf 8f5b 	dmb	ish
 8022068:	07db      	lsls	r3, r3, #31
 802206a:	d40b      	bmi.n	8022084 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 802206c:	4620      	mov	r0, r4
 802206e:	f00a fd8a 	bl	802cb86 <__cxa_guard_acquire>
 8022072:	b138      	cbz	r0, 8022084 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8022074:	4620      	mov	r0, r4
 8022076:	f00a fd92 	bl	802cb9e <__cxa_guard_release>
 802207a:	4a06      	ldr	r2, [pc, #24]	; (8022094 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 802207c:	4909      	ldr	r1, [pc, #36]	; (80220a4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 802207e:	480a      	ldr	r0, [pc, #40]	; (80220a8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8022080:	f00a fd7a 	bl	802cb78 <__aeabi_atexit>
 8022084:	4b05      	ldr	r3, [pc, #20]	; (802209c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8022086:	652b      	str	r3, [r5, #80]	; 0x50
 8022088:	4b07      	ldr	r3, [pc, #28]	; (80220a8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 802208a:	656b      	str	r3, [r5, #84]	; 0x54
 802208c:	bd38      	pop	{r3, r4, r5, pc}
 802208e:	bf00      	nop
 8022090:	2001393c 	.word	0x2001393c
 8022094:	20000000 	.word	0x20000000
 8022098:	0801eb27 	.word	0x0801eb27
 802209c:	200000f8 	.word	0x200000f8
 80220a0:	20013940 	.word	0x20013940
 80220a4:	0801eb25 	.word	0x0801eb25
 80220a8:	200000fc 	.word	0x200000fc

080220ac <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 80220ac:	b538      	push	{r3, r4, r5, lr}
 80220ae:	4c15      	ldr	r4, [pc, #84]	; (8022104 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 80220b0:	7823      	ldrb	r3, [r4, #0]
 80220b2:	f3bf 8f5b 	dmb	ish
 80220b6:	07da      	lsls	r2, r3, #31
 80220b8:	4605      	mov	r5, r0
 80220ba:	d40b      	bmi.n	80220d4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 80220bc:	4620      	mov	r0, r4
 80220be:	f00a fd62 	bl	802cb86 <__cxa_guard_acquire>
 80220c2:	b138      	cbz	r0, 80220d4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 80220c4:	4620      	mov	r0, r4
 80220c6:	f00a fd6a 	bl	802cb9e <__cxa_guard_release>
 80220ca:	4a0f      	ldr	r2, [pc, #60]	; (8022108 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 80220cc:	490f      	ldr	r1, [pc, #60]	; (802210c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 80220ce:	4810      	ldr	r0, [pc, #64]	; (8022110 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 80220d0:	f00a fd52 	bl	802cb78 <__aeabi_atexit>
 80220d4:	4c0f      	ldr	r4, [pc, #60]	; (8022114 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 80220d6:	7823      	ldrb	r3, [r4, #0]
 80220d8:	f3bf 8f5b 	dmb	ish
 80220dc:	07db      	lsls	r3, r3, #31
 80220de:	d40b      	bmi.n	80220f8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 80220e0:	4620      	mov	r0, r4
 80220e2:	f00a fd50 	bl	802cb86 <__cxa_guard_acquire>
 80220e6:	b138      	cbz	r0, 80220f8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 80220e8:	4620      	mov	r0, r4
 80220ea:	f00a fd58 	bl	802cb9e <__cxa_guard_release>
 80220ee:	4a06      	ldr	r2, [pc, #24]	; (8022108 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 80220f0:	4909      	ldr	r1, [pc, #36]	; (8022118 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 80220f2:	480a      	ldr	r0, [pc, #40]	; (802211c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 80220f4:	f00a fd40 	bl	802cb78 <__aeabi_atexit>
 80220f8:	4b05      	ldr	r3, [pc, #20]	; (8022110 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 80220fa:	64ab      	str	r3, [r5, #72]	; 0x48
 80220fc:	4b07      	ldr	r3, [pc, #28]	; (802211c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 80220fe:	64eb      	str	r3, [r5, #76]	; 0x4c
 8022100:	bd38      	pop	{r3, r4, r5, pc}
 8022102:	bf00      	nop
 8022104:	20013944 	.word	0x20013944
 8022108:	20000000 	.word	0x20000000
 802210c:	0801eb2b 	.word	0x0801eb2b
 8022110:	20000100 	.word	0x20000100
 8022114:	20013948 	.word	0x20013948
 8022118:	0801eb29 	.word	0x0801eb29
 802211c:	20000104 	.word	0x20000104

08022120 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 8022120:	b538      	push	{r3, r4, r5, lr}
 8022122:	4c15      	ldr	r4, [pc, #84]	; (8022178 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 8022124:	7823      	ldrb	r3, [r4, #0]
 8022126:	f3bf 8f5b 	dmb	ish
 802212a:	07da      	lsls	r2, r3, #31
 802212c:	4605      	mov	r5, r0
 802212e:	d40b      	bmi.n	8022148 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8022130:	4620      	mov	r0, r4
 8022132:	f00a fd28 	bl	802cb86 <__cxa_guard_acquire>
 8022136:	b138      	cbz	r0, 8022148 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8022138:	4620      	mov	r0, r4
 802213a:	f00a fd30 	bl	802cb9e <__cxa_guard_release>
 802213e:	4a0f      	ldr	r2, [pc, #60]	; (802217c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8022140:	490f      	ldr	r1, [pc, #60]	; (8022180 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 8022142:	4810      	ldr	r0, [pc, #64]	; (8022184 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8022144:	f00a fd18 	bl	802cb78 <__aeabi_atexit>
 8022148:	4c0f      	ldr	r4, [pc, #60]	; (8022188 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 802214a:	7823      	ldrb	r3, [r4, #0]
 802214c:	f3bf 8f5b 	dmb	ish
 8022150:	07db      	lsls	r3, r3, #31
 8022152:	d40b      	bmi.n	802216c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8022154:	4620      	mov	r0, r4
 8022156:	f00a fd16 	bl	802cb86 <__cxa_guard_acquire>
 802215a:	b138      	cbz	r0, 802216c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 802215c:	4620      	mov	r0, r4
 802215e:	f00a fd1e 	bl	802cb9e <__cxa_guard_release>
 8022162:	4a06      	ldr	r2, [pc, #24]	; (802217c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8022164:	4909      	ldr	r1, [pc, #36]	; (802218c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 8022166:	480a      	ldr	r0, [pc, #40]	; (8022190 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8022168:	f00a fd06 	bl	802cb78 <__aeabi_atexit>
 802216c:	4b05      	ldr	r3, [pc, #20]	; (8022184 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 802216e:	642b      	str	r3, [r5, #64]	; 0x40
 8022170:	4b07      	ldr	r3, [pc, #28]	; (8022190 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8022172:	646b      	str	r3, [r5, #68]	; 0x44
 8022174:	bd38      	pop	{r3, r4, r5, pc}
 8022176:	bf00      	nop
 8022178:	2001390c 	.word	0x2001390c
 802217c:	20000000 	.word	0x20000000
 8022180:	0801eb2f 	.word	0x0801eb2f
 8022184:	200000c8 	.word	0x200000c8
 8022188:	20013910 	.word	0x20013910
 802218c:	0801eb2d 	.word	0x0801eb2d
 8022190:	200000cc 	.word	0x200000cc

08022194 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 8022194:	b538      	push	{r3, r4, r5, lr}
 8022196:	4c15      	ldr	r4, [pc, #84]	; (80221ec <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 8022198:	7823      	ldrb	r3, [r4, #0]
 802219a:	f3bf 8f5b 	dmb	ish
 802219e:	07da      	lsls	r2, r3, #31
 80221a0:	4605      	mov	r5, r0
 80221a2:	d40b      	bmi.n	80221bc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 80221a4:	4620      	mov	r0, r4
 80221a6:	f00a fcee 	bl	802cb86 <__cxa_guard_acquire>
 80221aa:	b138      	cbz	r0, 80221bc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 80221ac:	4620      	mov	r0, r4
 80221ae:	f00a fcf6 	bl	802cb9e <__cxa_guard_release>
 80221b2:	4a0f      	ldr	r2, [pc, #60]	; (80221f0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 80221b4:	490f      	ldr	r1, [pc, #60]	; (80221f4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 80221b6:	4810      	ldr	r0, [pc, #64]	; (80221f8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 80221b8:	f00a fcde 	bl	802cb78 <__aeabi_atexit>
 80221bc:	4c0f      	ldr	r4, [pc, #60]	; (80221fc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 80221be:	7823      	ldrb	r3, [r4, #0]
 80221c0:	f3bf 8f5b 	dmb	ish
 80221c4:	07db      	lsls	r3, r3, #31
 80221c6:	d40b      	bmi.n	80221e0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 80221c8:	4620      	mov	r0, r4
 80221ca:	f00a fcdc 	bl	802cb86 <__cxa_guard_acquire>
 80221ce:	b138      	cbz	r0, 80221e0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 80221d0:	4620      	mov	r0, r4
 80221d2:	f00a fce4 	bl	802cb9e <__cxa_guard_release>
 80221d6:	4a06      	ldr	r2, [pc, #24]	; (80221f0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 80221d8:	4909      	ldr	r1, [pc, #36]	; (8022200 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 80221da:	480a      	ldr	r0, [pc, #40]	; (8022204 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 80221dc:	f00a fccc 	bl	802cb78 <__aeabi_atexit>
 80221e0:	4b05      	ldr	r3, [pc, #20]	; (80221f8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 80221e2:	63ab      	str	r3, [r5, #56]	; 0x38
 80221e4:	4b07      	ldr	r3, [pc, #28]	; (8022204 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 80221e6:	63eb      	str	r3, [r5, #60]	; 0x3c
 80221e8:	bd38      	pop	{r3, r4, r5, pc}
 80221ea:	bf00      	nop
 80221ec:	2001392c 	.word	0x2001392c
 80221f0:	20000000 	.word	0x20000000
 80221f4:	0801eb33 	.word	0x0801eb33
 80221f8:	200000e8 	.word	0x200000e8
 80221fc:	20013930 	.word	0x20013930
 8022200:	0801eb31 	.word	0x0801eb31
 8022204:	200000ec 	.word	0x200000ec

08022208 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 8022208:	b510      	push	{r4, lr}
 802220a:	4604      	mov	r4, r0
 802220c:	f7ff ff14 	bl	8022038 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 8022210:	4620      	mov	r0, r4
 8022212:	f7ff ff85 	bl	8022120 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 8022216:	4620      	mov	r0, r4
 8022218:	f7ff ff48 	bl	80220ac <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 802221c:	4620      	mov	r0, r4
 802221e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8022222:	f7ff bfb7 	b.w	8022194 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

08022228 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 8022228:	b538      	push	{r3, r4, r5, lr}
 802222a:	4c15      	ldr	r4, [pc, #84]	; (8022280 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 802222c:	7823      	ldrb	r3, [r4, #0]
 802222e:	f3bf 8f5b 	dmb	ish
 8022232:	07da      	lsls	r2, r3, #31
 8022234:	4605      	mov	r5, r0
 8022236:	d40b      	bmi.n	8022250 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8022238:	4620      	mov	r0, r4
 802223a:	f00a fca4 	bl	802cb86 <__cxa_guard_acquire>
 802223e:	b138      	cbz	r0, 8022250 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8022240:	4620      	mov	r0, r4
 8022242:	f00a fcac 	bl	802cb9e <__cxa_guard_release>
 8022246:	4a0f      	ldr	r2, [pc, #60]	; (8022284 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8022248:	490f      	ldr	r1, [pc, #60]	; (8022288 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 802224a:	4810      	ldr	r0, [pc, #64]	; (802228c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 802224c:	f00a fc94 	bl	802cb78 <__aeabi_atexit>
 8022250:	4c0f      	ldr	r4, [pc, #60]	; (8022290 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 8022252:	7823      	ldrb	r3, [r4, #0]
 8022254:	f3bf 8f5b 	dmb	ish
 8022258:	07db      	lsls	r3, r3, #31
 802225a:	d40b      	bmi.n	8022274 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 802225c:	4620      	mov	r0, r4
 802225e:	f00a fc92 	bl	802cb86 <__cxa_guard_acquire>
 8022262:	b138      	cbz	r0, 8022274 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8022264:	4620      	mov	r0, r4
 8022266:	f00a fc9a 	bl	802cb9e <__cxa_guard_release>
 802226a:	4a06      	ldr	r2, [pc, #24]	; (8022284 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 802226c:	4909      	ldr	r1, [pc, #36]	; (8022294 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 802226e:	480a      	ldr	r0, [pc, #40]	; (8022298 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8022270:	f00a fc82 	bl	802cb78 <__aeabi_atexit>
 8022274:	4b05      	ldr	r3, [pc, #20]	; (802228c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8022276:	662b      	str	r3, [r5, #96]	; 0x60
 8022278:	4b07      	ldr	r3, [pc, #28]	; (8022298 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 802227a:	666b      	str	r3, [r5, #100]	; 0x64
 802227c:	bd38      	pop	{r3, r4, r5, pc}
 802227e:	bf00      	nop
 8022280:	20013914 	.word	0x20013914
 8022284:	20000000 	.word	0x20000000
 8022288:	0801eb1f 	.word	0x0801eb1f
 802228c:	200000d0 	.word	0x200000d0
 8022290:	20013918 	.word	0x20013918
 8022294:	0801eb1d 	.word	0x0801eb1d
 8022298:	200000d4 	.word	0x200000d4

0802229c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 802229c:	b538      	push	{r3, r4, r5, lr}
 802229e:	4c15      	ldr	r4, [pc, #84]	; (80222f4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 80222a0:	7823      	ldrb	r3, [r4, #0]
 80222a2:	f3bf 8f5b 	dmb	ish
 80222a6:	07da      	lsls	r2, r3, #31
 80222a8:	4605      	mov	r5, r0
 80222aa:	d40b      	bmi.n	80222c4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 80222ac:	4620      	mov	r0, r4
 80222ae:	f00a fc6a 	bl	802cb86 <__cxa_guard_acquire>
 80222b2:	b138      	cbz	r0, 80222c4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 80222b4:	4620      	mov	r0, r4
 80222b6:	f00a fc72 	bl	802cb9e <__cxa_guard_release>
 80222ba:	4a0f      	ldr	r2, [pc, #60]	; (80222f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 80222bc:	490f      	ldr	r1, [pc, #60]	; (80222fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 80222be:	4810      	ldr	r0, [pc, #64]	; (8022300 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 80222c0:	f00a fc5a 	bl	802cb78 <__aeabi_atexit>
 80222c4:	4c0f      	ldr	r4, [pc, #60]	; (8022304 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 80222c6:	7823      	ldrb	r3, [r4, #0]
 80222c8:	f3bf 8f5b 	dmb	ish
 80222cc:	07db      	lsls	r3, r3, #31
 80222ce:	d40b      	bmi.n	80222e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 80222d0:	4620      	mov	r0, r4
 80222d2:	f00a fc58 	bl	802cb86 <__cxa_guard_acquire>
 80222d6:	b138      	cbz	r0, 80222e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 80222d8:	4620      	mov	r0, r4
 80222da:	f00a fc60 	bl	802cb9e <__cxa_guard_release>
 80222de:	4a06      	ldr	r2, [pc, #24]	; (80222f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 80222e0:	4909      	ldr	r1, [pc, #36]	; (8022308 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 80222e2:	480a      	ldr	r0, [pc, #40]	; (802230c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 80222e4:	f00a fc48 	bl	802cb78 <__aeabi_atexit>
 80222e8:	4b05      	ldr	r3, [pc, #20]	; (8022300 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 80222ea:	65ab      	str	r3, [r5, #88]	; 0x58
 80222ec:	4b07      	ldr	r3, [pc, #28]	; (802230c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 80222ee:	65eb      	str	r3, [r5, #92]	; 0x5c
 80222f0:	bd38      	pop	{r3, r4, r5, pc}
 80222f2:	bf00      	nop
 80222f4:	200138ec 	.word	0x200138ec
 80222f8:	20000000 	.word	0x20000000
 80222fc:	0801eb23 	.word	0x0801eb23
 8022300:	200000a8 	.word	0x200000a8
 8022304:	200138f0 	.word	0x200138f0
 8022308:	0801eb21 	.word	0x0801eb21
 802230c:	200000ac 	.word	0x200000ac

08022310 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 8022310:	b510      	push	{r4, lr}
 8022312:	4604      	mov	r4, r0
 8022314:	f7ff ff88 	bl	8022228 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 8022318:	4620      	mov	r0, r4
 802231a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802231e:	f7ff bfbd 	b.w	802229c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

08022324 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 8022324:	b538      	push	{r3, r4, r5, lr}
 8022326:	4c15      	ldr	r4, [pc, #84]	; (802237c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 8022328:	7823      	ldrb	r3, [r4, #0]
 802232a:	f3bf 8f5b 	dmb	ish
 802232e:	07da      	lsls	r2, r3, #31
 8022330:	4605      	mov	r5, r0
 8022332:	d40b      	bmi.n	802234c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8022334:	4620      	mov	r0, r4
 8022336:	f00a fc26 	bl	802cb86 <__cxa_guard_acquire>
 802233a:	b138      	cbz	r0, 802234c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 802233c:	4620      	mov	r0, r4
 802233e:	f00a fc2e 	bl	802cb9e <__cxa_guard_release>
 8022342:	4a0f      	ldr	r2, [pc, #60]	; (8022380 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8022344:	490f      	ldr	r1, [pc, #60]	; (8022384 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 8022346:	4810      	ldr	r0, [pc, #64]	; (8022388 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8022348:	f00a fc16 	bl	802cb78 <__aeabi_atexit>
 802234c:	4c0f      	ldr	r4, [pc, #60]	; (802238c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 802234e:	7823      	ldrb	r3, [r4, #0]
 8022350:	f3bf 8f5b 	dmb	ish
 8022354:	07db      	lsls	r3, r3, #31
 8022356:	d40b      	bmi.n	8022370 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8022358:	4620      	mov	r0, r4
 802235a:	f00a fc14 	bl	802cb86 <__cxa_guard_acquire>
 802235e:	b138      	cbz	r0, 8022370 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8022360:	4620      	mov	r0, r4
 8022362:	f00a fc1c 	bl	802cb9e <__cxa_guard_release>
 8022366:	4a06      	ldr	r2, [pc, #24]	; (8022380 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8022368:	4909      	ldr	r1, [pc, #36]	; (8022390 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 802236a:	480a      	ldr	r0, [pc, #40]	; (8022394 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 802236c:	f00a fc04 	bl	802cb78 <__aeabi_atexit>
 8022370:	4b05      	ldr	r3, [pc, #20]	; (8022388 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8022372:	672b      	str	r3, [r5, #112]	; 0x70
 8022374:	4b07      	ldr	r3, [pc, #28]	; (8022394 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8022376:	676b      	str	r3, [r5, #116]	; 0x74
 8022378:	bd38      	pop	{r3, r4, r5, pc}
 802237a:	bf00      	nop
 802237c:	200138e4 	.word	0x200138e4
 8022380:	20000000 	.word	0x20000000
 8022384:	0801eb17 	.word	0x0801eb17
 8022388:	200000a0 	.word	0x200000a0
 802238c:	200138e8 	.word	0x200138e8
 8022390:	0801eb15 	.word	0x0801eb15
 8022394:	200000a4 	.word	0x200000a4

08022398 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 8022398:	b538      	push	{r3, r4, r5, lr}
 802239a:	4c15      	ldr	r4, [pc, #84]	; (80223f0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 802239c:	7823      	ldrb	r3, [r4, #0]
 802239e:	f3bf 8f5b 	dmb	ish
 80223a2:	07da      	lsls	r2, r3, #31
 80223a4:	4605      	mov	r5, r0
 80223a6:	d40b      	bmi.n	80223c0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 80223a8:	4620      	mov	r0, r4
 80223aa:	f00a fbec 	bl	802cb86 <__cxa_guard_acquire>
 80223ae:	b138      	cbz	r0, 80223c0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 80223b0:	4620      	mov	r0, r4
 80223b2:	f00a fbf4 	bl	802cb9e <__cxa_guard_release>
 80223b6:	4a0f      	ldr	r2, [pc, #60]	; (80223f4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 80223b8:	490f      	ldr	r1, [pc, #60]	; (80223f8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 80223ba:	4810      	ldr	r0, [pc, #64]	; (80223fc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 80223bc:	f00a fbdc 	bl	802cb78 <__aeabi_atexit>
 80223c0:	4c0f      	ldr	r4, [pc, #60]	; (8022400 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 80223c2:	7823      	ldrb	r3, [r4, #0]
 80223c4:	f3bf 8f5b 	dmb	ish
 80223c8:	07db      	lsls	r3, r3, #31
 80223ca:	d40b      	bmi.n	80223e4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 80223cc:	4620      	mov	r0, r4
 80223ce:	f00a fbda 	bl	802cb86 <__cxa_guard_acquire>
 80223d2:	b138      	cbz	r0, 80223e4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 80223d4:	4620      	mov	r0, r4
 80223d6:	f00a fbe2 	bl	802cb9e <__cxa_guard_release>
 80223da:	4a06      	ldr	r2, [pc, #24]	; (80223f4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 80223dc:	4909      	ldr	r1, [pc, #36]	; (8022404 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 80223de:	480a      	ldr	r0, [pc, #40]	; (8022408 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 80223e0:	f00a fbca 	bl	802cb78 <__aeabi_atexit>
 80223e4:	4b05      	ldr	r3, [pc, #20]	; (80223fc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 80223e6:	66ab      	str	r3, [r5, #104]	; 0x68
 80223e8:	4b07      	ldr	r3, [pc, #28]	; (8022408 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 80223ea:	66eb      	str	r3, [r5, #108]	; 0x6c
 80223ec:	bd38      	pop	{r3, r4, r5, pc}
 80223ee:	bf00      	nop
 80223f0:	200138dc 	.word	0x200138dc
 80223f4:	20000000 	.word	0x20000000
 80223f8:	0801eb1b 	.word	0x0801eb1b
 80223fc:	20000098 	.word	0x20000098
 8022400:	200138e0 	.word	0x200138e0
 8022404:	0801eb19 	.word	0x0801eb19
 8022408:	2000009c 	.word	0x2000009c

0802240c <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 802240c:	b510      	push	{r4, lr}
 802240e:	4604      	mov	r4, r0
 8022410:	f7ff ff88 	bl	8022324 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 8022414:	4620      	mov	r0, r4
 8022416:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802241a:	f7ff bfbd 	b.w	8022398 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0802241e <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 802241e:	b510      	push	{r4, lr}
 8022420:	4604      	mov	r4, r0
 8022422:	f7ff fff3 	bl	802240c <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 8022426:	4620      	mov	r0, r4
 8022428:	f7ff ff72 	bl	8022310 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 802242c:	4620      	mov	r0, r4
 802242e:	f7ff fdf9 	bl	8022024 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 8022432:	4620      	mov	r0, r4
 8022434:	f7ff fcfa 	bl	8021e2c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 8022438:	4620      	mov	r0, r4
 802243a:	f7ff fd75 	bl	8021f28 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 802243e:	4620      	mov	r0, r4
 8022440:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8022444:	f7ff bee0 	b.w	8022208 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

08022448 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 8022448:	b538      	push	{r3, r4, r5, lr}
 802244a:	4c0b      	ldr	r4, [pc, #44]	; (8022478 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 802244c:	7823      	ldrb	r3, [r4, #0]
 802244e:	f3bf 8f5b 	dmb	ish
 8022452:	07db      	lsls	r3, r3, #31
 8022454:	4605      	mov	r5, r0
 8022456:	d40b      	bmi.n	8022470 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 8022458:	4620      	mov	r0, r4
 802245a:	f00a fb94 	bl	802cb86 <__cxa_guard_acquire>
 802245e:	b138      	cbz	r0, 8022470 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 8022460:	4620      	mov	r0, r4
 8022462:	f00a fb9c 	bl	802cb9e <__cxa_guard_release>
 8022466:	4a05      	ldr	r2, [pc, #20]	; (802247c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 8022468:	4905      	ldr	r1, [pc, #20]	; (8022480 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 802246a:	4806      	ldr	r0, [pc, #24]	; (8022484 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 802246c:	f00a fb84 	bl	802cb78 <__aeabi_atexit>
 8022470:	4b04      	ldr	r3, [pc, #16]	; (8022484 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 8022472:	67ab      	str	r3, [r5, #120]	; 0x78
 8022474:	bd38      	pop	{r3, r4, r5, pc}
 8022476:	bf00      	nop
 8022478:	200138d0 	.word	0x200138d0
 802247c:	20000000 	.word	0x20000000
 8022480:	0801eb13 	.word	0x0801eb13
 8022484:	20000090 	.word	0x20000090

08022488 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 8022488:	b538      	push	{r3, r4, r5, lr}
 802248a:	4c0b      	ldr	r4, [pc, #44]	; (80224b8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 802248c:	7823      	ldrb	r3, [r4, #0]
 802248e:	f3bf 8f5b 	dmb	ish
 8022492:	07db      	lsls	r3, r3, #31
 8022494:	4605      	mov	r5, r0
 8022496:	d40b      	bmi.n	80224b0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 8022498:	4620      	mov	r0, r4
 802249a:	f00a fb74 	bl	802cb86 <__cxa_guard_acquire>
 802249e:	b138      	cbz	r0, 80224b0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 80224a0:	4620      	mov	r0, r4
 80224a2:	f00a fb7c 	bl	802cb9e <__cxa_guard_release>
 80224a6:	4a05      	ldr	r2, [pc, #20]	; (80224bc <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 80224a8:	4905      	ldr	r1, [pc, #20]	; (80224c0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 80224aa:	4806      	ldr	r0, [pc, #24]	; (80224c4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 80224ac:	f00a fb64 	bl	802cb78 <__aeabi_atexit>
 80224b0:	4b04      	ldr	r3, [pc, #16]	; (80224c4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 80224b2:	67eb      	str	r3, [r5, #124]	; 0x7c
 80224b4:	bd38      	pop	{r3, r4, r5, pc}
 80224b6:	bf00      	nop
 80224b8:	200138d4 	.word	0x200138d4
 80224bc:	20000000 	.word	0x20000000
 80224c0:	0801eb11 	.word	0x0801eb11
 80224c4:	20000094 	.word	0x20000094

080224c8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 80224c8:	b570      	push	{r4, r5, r6, lr}
 80224ca:	4d0d      	ldr	r5, [pc, #52]	; (8022500 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 80224cc:	4c0d      	ldr	r4, [pc, #52]	; (8022504 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 80224ce:	782b      	ldrb	r3, [r5, #0]
 80224d0:	f3bf 8f5b 	dmb	ish
 80224d4:	f013 0f01 	tst.w	r3, #1
 80224d8:	4606      	mov	r6, r0
 80224da:	d10d      	bne.n	80224f8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 80224dc:	4628      	mov	r0, r5
 80224de:	f00a fb52 	bl	802cb86 <__cxa_guard_acquire>
 80224e2:	b148      	cbz	r0, 80224f8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 80224e4:	4b08      	ldr	r3, [pc, #32]	; (8022508 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 80224e6:	6023      	str	r3, [r4, #0]
 80224e8:	4628      	mov	r0, r5
 80224ea:	f00a fb58 	bl	802cb9e <__cxa_guard_release>
 80224ee:	4a07      	ldr	r2, [pc, #28]	; (802250c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 80224f0:	4907      	ldr	r1, [pc, #28]	; (8022510 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 80224f2:	4620      	mov	r0, r4
 80224f4:	f00a fb40 	bl	802cb78 <__aeabi_atexit>
 80224f8:	f8c6 4080 	str.w	r4, [r6, #128]	; 0x80
 80224fc:	bd70      	pop	{r4, r5, r6, pc}
 80224fe:	bf00      	nop
 8022500:	200138d8 	.word	0x200138d8
 8022504:	2001394c 	.word	0x2001394c
 8022508:	08031f58 	.word	0x08031f58
 802250c:	20000000 	.word	0x20000000
 8022510:	0801eb0f 	.word	0x0801eb0f

08022514 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 8022514:	b510      	push	{r4, lr}
 8022516:	4604      	mov	r4, r0
 8022518:	f7ff ff96 	bl	8022448 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 802251c:	4620      	mov	r0, r4
 802251e:	f7ff ffb3 	bl	8022488 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 8022522:	4620      	mov	r0, r4
 8022524:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8022528:	f7ff bfce 	b.w	80224c8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

0802252c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 802252c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022530:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 8022534:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 8022538:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 802253c:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 8022540:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 8022544:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 8022548:	8808      	ldrh	r0, [r1, #0]
 802254a:	fb05 4c0e 	mla	ip, r5, lr, r4
 802254e:	2d00      	cmp	r5, #0
 8022550:	eb02 0a0c 	add.w	sl, r2, ip
 8022554:	f2c0 80b0 	blt.w	80226b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 8022558:	45ab      	cmp	fp, r5
 802255a:	f340 80ad 	ble.w	80226b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 802255e:	2c00      	cmp	r4, #0
 8022560:	f2c0 80a8 	blt.w	80226b4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 8022564:	45a6      	cmp	lr, r4
 8022566:	f340 80a5 	ble.w	80226b4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 802256a:	f812 200c 	ldrb.w	r2, [r2, ip]
 802256e:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 8022572:	1c62      	adds	r2, r4, #1
 8022574:	f100 80a3 	bmi.w	80226be <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8022578:	4596      	cmp	lr, r2
 802257a:	f340 80a0 	ble.w	80226be <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 802257e:	f1b9 0f00 	cmp.w	r9, #0
 8022582:	f000 809c 	beq.w	80226be <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8022586:	f89a 2001 	ldrb.w	r2, [sl, #1]
 802258a:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 802258e:	3501      	adds	r5, #1
 8022590:	f100 8099 	bmi.w	80226c6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8022594:	45ab      	cmp	fp, r5
 8022596:	f340 8096 	ble.w	80226c6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 802259a:	2f00      	cmp	r7, #0
 802259c:	f000 8093 	beq.w	80226c6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 80225a0:	2c00      	cmp	r4, #0
 80225a2:	f2c0 808e 	blt.w	80226c2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 80225a6:	45a6      	cmp	lr, r4
 80225a8:	f340 808b 	ble.w	80226c2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 80225ac:	f81a 200e 	ldrb.w	r2, [sl, lr]
 80225b0:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 80225b4:	3401      	adds	r4, #1
 80225b6:	f100 8089 	bmi.w	80226cc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 80225ba:	45a6      	cmp	lr, r4
 80225bc:	f340 8086 	ble.w	80226cc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 80225c0:	f1b9 0f00 	cmp.w	r9, #0
 80225c4:	f000 8082 	beq.w	80226cc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 80225c8:	44d6      	add	lr, sl
 80225ca:	f89e 2001 	ldrb.w	r2, [lr, #1]
 80225ce:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 80225d2:	ea4f 4408 	mov.w	r4, r8, lsl #16
 80225d6:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80225da:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 80225de:	fb19 fe07 	smulbb	lr, r9, r7
 80225e2:	ea44 0808 	orr.w	r8, r4, r8
 80225e6:	ea4f 440c 	mov.w	r4, ip, lsl #16
 80225ea:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 80225ee:	f1c7 0210 	rsb	r2, r7, #16
 80225f2:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80225f6:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80225fa:	ea44 0c0c 	orr.w	ip, r4, ip
 80225fe:	eba2 0209 	sub.w	r2, r2, r9
 8022602:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8022606:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 802260a:	fb04 f40c 	mul.w	r4, r4, ip
 802260e:	fb02 4808 	mla	r8, r2, r8, r4
 8022612:	041a      	lsls	r2, r3, #16
 8022614:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8022618:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 802261c:	4313      	orrs	r3, r2
 802261e:	042a      	lsls	r2, r5, #16
 8022620:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8022624:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8022628:	fb0e 8303 	mla	r3, lr, r3, r8
 802262c:	432a      	orrs	r2, r5
 802262e:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 8022632:	fb07 3202 	mla	r2, r7, r2, r3
 8022636:	0d53      	lsrs	r3, r2, #21
 8022638:	0952      	lsrs	r2, r2, #5
 802263a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802263e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022642:	431a      	orrs	r2, r3
 8022644:	b293      	uxth	r3, r2
 8022646:	b2b4      	uxth	r4, r6
 8022648:	1202      	asrs	r2, r0, #8
 802264a:	43f6      	mvns	r6, r6
 802264c:	b2f6      	uxtb	r6, r6
 802264e:	121d      	asrs	r5, r3, #8
 8022650:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8022654:	fb12 f206 	smulbb	r2, r2, r6
 8022658:	10c7      	asrs	r7, r0, #3
 802265a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 802265e:	00c0      	lsls	r0, r0, #3
 8022660:	fb05 2504 	mla	r5, r5, r4, r2
 8022664:	b2c0      	uxtb	r0, r0
 8022666:	10da      	asrs	r2, r3, #3
 8022668:	00db      	lsls	r3, r3, #3
 802266a:	b2db      	uxtb	r3, r3
 802266c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8022670:	fb10 f006 	smulbb	r0, r0, r6
 8022674:	b2ad      	uxth	r5, r5
 8022676:	fb03 0004 	mla	r0, r3, r4, r0
 802267a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802267e:	fb17 f706 	smulbb	r7, r7, r6
 8022682:	b280      	uxth	r0, r0
 8022684:	1c6b      	adds	r3, r5, #1
 8022686:	fb02 7204 	mla	r2, r2, r4, r7
 802268a:	b292      	uxth	r2, r2
 802268c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8022690:	1c43      	adds	r3, r0, #1
 8022692:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8022696:	1c50      	adds	r0, r2, #1
 8022698:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 802269c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80226a0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80226a4:	0952      	lsrs	r2, r2, #5
 80226a6:	432b      	orrs	r3, r5
 80226a8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80226ac:	4313      	orrs	r3, r2
 80226ae:	800b      	strh	r3, [r1, #0]
 80226b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80226b4:	4680      	mov	r8, r0
 80226b6:	e75c      	b.n	8022572 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 80226b8:	4684      	mov	ip, r0
 80226ba:	4680      	mov	r8, r0
 80226bc:	e767      	b.n	802258e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 80226be:	4684      	mov	ip, r0
 80226c0:	e765      	b.n	802258e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 80226c2:	4605      	mov	r5, r0
 80226c4:	e776      	b.n	80225b4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 80226c6:	4603      	mov	r3, r0
 80226c8:	4605      	mov	r5, r0
 80226ca:	e782      	b.n	80225d2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 80226cc:	4603      	mov	r3, r0
 80226ce:	e780      	b.n	80225d2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

080226d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80226d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80226d4:	b099      	sub	sp, #100	; 0x64
 80226d6:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 80226da:	9215      	str	r2, [sp, #84]	; 0x54
 80226dc:	9309      	str	r3, [sp, #36]	; 0x24
 80226de:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 80226e0:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 80226e4:	930d      	str	r3, [sp, #52]	; 0x34
 80226e6:	910c      	str	r1, [sp, #48]	; 0x30
 80226e8:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 80226ec:	9016      	str	r0, [sp, #88]	; 0x58
 80226ee:	6850      	ldr	r0, [r2, #4]
 80226f0:	6812      	ldr	r2, [r2, #0]
 80226f2:	fb00 1303 	mla	r3, r0, r3, r1
 80226f6:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 80226fa:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80226fc:	681b      	ldr	r3, [r3, #0]
 80226fe:	930b      	str	r3, [sp, #44]	; 0x2c
 8022700:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8022702:	685e      	ldr	r6, [r3, #4]
 8022704:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8022706:	43db      	mvns	r3, r3
 8022708:	b2db      	uxtb	r3, r3
 802270a:	3604      	adds	r6, #4
 802270c:	930a      	str	r3, [sp, #40]	; 0x28
 802270e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8022710:	2b00      	cmp	r3, #0
 8022712:	dc03      	bgt.n	802271c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8022714:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8022716:	2b00      	cmp	r3, #0
 8022718:	f340 8225 	ble.w	8022b66 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 802271c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 802271e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022722:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022726:	1e48      	subs	r0, r1, #1
 8022728:	1e57      	subs	r7, r2, #1
 802272a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802272c:	2b00      	cmp	r3, #0
 802272e:	f340 80e3 	ble.w	80228f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8022732:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 8022736:	ea4f 4325 	mov.w	r3, r5, asr #16
 802273a:	d406      	bmi.n	802274a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802273c:	4584      	cmp	ip, r0
 802273e:	da04      	bge.n	802274a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8022740:	2b00      	cmp	r3, #0
 8022742:	db02      	blt.n	802274a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8022744:	42bb      	cmp	r3, r7
 8022746:	f2c0 80d8 	blt.w	80228fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 802274a:	f11c 0c01 	adds.w	ip, ip, #1
 802274e:	f100 80c9 	bmi.w	80228e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8022752:	4561      	cmp	r1, ip
 8022754:	f2c0 80c6 	blt.w	80228e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8022758:	3301      	adds	r3, #1
 802275a:	f100 80c3 	bmi.w	80228e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 802275e:	429a      	cmp	r2, r3
 8022760:	f2c0 80c0 	blt.w	80228e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8022764:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8022768:	4647      	mov	r7, r8
 802276a:	f1bb 0f00 	cmp.w	fp, #0
 802276e:	f340 80e3 	ble.w	8022938 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 8022772:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8022774:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8022776:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 802277a:	689b      	ldr	r3, [r3, #8]
 802277c:	ea5f 422a 	movs.w	r2, sl, asr #16
 8022780:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8022784:	f3ca 3003 	ubfx	r0, sl, #12, #4
 8022788:	f3c5 3103 	ubfx	r1, r5, #12, #4
 802278c:	f100 8121 	bmi.w	80229d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8022790:	f103 39ff 	add.w	r9, r3, #4294967295
 8022794:	454a      	cmp	r2, r9
 8022796:	f280 811c 	bge.w	80229d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 802279a:	f1bc 0f00 	cmp.w	ip, #0
 802279e:	f2c0 8118 	blt.w	80229d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 80227a2:	f10e 39ff 	add.w	r9, lr, #4294967295
 80227a6:	45cc      	cmp	ip, r9
 80227a8:	f280 8113 	bge.w	80229d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 80227ac:	b21b      	sxth	r3, r3
 80227ae:	fb0c 2203 	mla	r2, ip, r3, r2
 80227b2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80227b4:	eb04 0902 	add.w	r9, r4, r2
 80227b8:	5ca2      	ldrb	r2, [r4, r2]
 80227ba:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 80227be:	2800      	cmp	r0, #0
 80227c0:	f000 80fe 	beq.w	80229c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 80227c4:	f899 2001 	ldrb.w	r2, [r9, #1]
 80227c8:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 80227cc:	9211      	str	r2, [sp, #68]	; 0x44
 80227ce:	b151      	cbz	r1, 80227e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80227d0:	eb09 0203 	add.w	r2, r9, r3
 80227d4:	f819 3003 	ldrb.w	r3, [r9, r3]
 80227d8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80227dc:	930f      	str	r3, [sp, #60]	; 0x3c
 80227de:	7853      	ldrb	r3, [r2, #1]
 80227e0:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80227e4:	9312      	str	r3, [sp, #72]	; 0x48
 80227e6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80227e8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80227ea:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80227ee:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80227f2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80227f6:	ea4c 0c03 	orr.w	ip, ip, r3
 80227fa:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80227fc:	041b      	lsls	r3, r3, #16
 80227fe:	fb10 f201 	smulbb	r2, r0, r1
 8022802:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8022806:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 802280a:	10d2      	asrs	r2, r2, #3
 802280c:	4323      	orrs	r3, r4
 802280e:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 8022812:	4353      	muls	r3, r2
 8022814:	fb09 330c 	mla	r3, r9, ip, r3
 8022818:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 802281c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8022820:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8022824:	ea4c 0e0e 	orr.w	lr, ip, lr
 8022828:	f1c1 0c10 	rsb	ip, r1, #16
 802282c:	ebac 0c00 	sub.w	ip, ip, r0
 8022830:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8022834:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8022838:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 802283a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 802283c:	0418      	lsls	r0, r3, #16
 802283e:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8022842:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8022846:	4318      	orrs	r0, r3
 8022848:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 802284c:	fb02 c200 	mla	r2, r2, r0, ip
 8022850:	0d53      	lsrs	r3, r2, #21
 8022852:	0952      	lsrs	r2, r2, #5
 8022854:	8838      	ldrh	r0, [r7, #0]
 8022856:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802285a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802285e:	431a      	orrs	r2, r3
 8022860:	b292      	uxth	r2, r2
 8022862:	1201      	asrs	r1, r0, #8
 8022864:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 8022868:	ea4f 2c22 	mov.w	ip, r2, asr #8
 802286c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8022870:	fb11 f104 	smulbb	r1, r1, r4
 8022874:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8022878:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 802287c:	00c0      	lsls	r0, r0, #3
 802287e:	fb0c 1c03 	mla	ip, ip, r3, r1
 8022882:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8022886:	10d1      	asrs	r1, r2, #3
 8022888:	b2c0      	uxtb	r0, r0
 802288a:	00d2      	lsls	r2, r2, #3
 802288c:	b2d2      	uxtb	r2, r2
 802288e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8022892:	fb1e fe04 	smulbb	lr, lr, r4
 8022896:	fb10 f004 	smulbb	r0, r0, r4
 802289a:	fa1f fc8c 	uxth.w	ip, ip
 802289e:	fb01 e103 	mla	r1, r1, r3, lr
 80228a2:	fb02 0303 	mla	r3, r2, r3, r0
 80228a6:	b29a      	uxth	r2, r3
 80228a8:	f10c 0301 	add.w	r3, ip, #1
 80228ac:	b289      	uxth	r1, r1
 80228ae:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 80228b2:	1c53      	adds	r3, r2, #1
 80228b4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80228b8:	1c4a      	adds	r2, r1, #1
 80228ba:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80228be:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80228c2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80228c6:	0949      	lsrs	r1, r1, #5
 80228c8:	ea43 030c 	orr.w	r3, r3, ip
 80228cc:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80228d0:	430b      	orrs	r3, r1
 80228d2:	803b      	strh	r3, [r7, #0]
 80228d4:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80228d6:	449a      	add	sl, r3
 80228d8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80228da:	3702      	adds	r7, #2
 80228dc:	441d      	add	r5, r3
 80228de:	f10b 3bff 	add.w	fp, fp, #4294967295
 80228e2:	e742      	b.n	802276a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80228e4:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80228e6:	449a      	add	sl, r3
 80228e8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80228ea:	441d      	add	r5, r3
 80228ec:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80228ee:	3b01      	subs	r3, #1
 80228f0:	9309      	str	r3, [sp, #36]	; 0x24
 80228f2:	f108 0802 	add.w	r8, r8, #2
 80228f6:	e718      	b.n	802272a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 80228f8:	d023      	beq.n	8022942 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 80228fa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80228fc:	9825      	ldr	r0, [sp, #148]	; 0x94
 80228fe:	3b01      	subs	r3, #1
 8022900:	fb00 a003 	mla	r0, r0, r3, sl
 8022904:	1400      	asrs	r0, r0, #16
 8022906:	f53f af2d 	bmi.w	8022764 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802290a:	3901      	subs	r1, #1
 802290c:	4288      	cmp	r0, r1
 802290e:	f6bf af29 	bge.w	8022764 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8022912:	9926      	ldr	r1, [sp, #152]	; 0x98
 8022914:	fb01 5303 	mla	r3, r1, r3, r5
 8022918:	141b      	asrs	r3, r3, #16
 802291a:	f53f af23 	bmi.w	8022764 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802291e:	3a01      	subs	r2, #1
 8022920:	4293      	cmp	r3, r2
 8022922:	f6bf af1f 	bge.w	8022764 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8022926:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 802292a:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 802292e:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 8022932:	f1be 0f00 	cmp.w	lr, #0
 8022936:	dc6c      	bgt.n	8022a12 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8022938:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802293a:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 802293e:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8022942:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8022944:	2b00      	cmp	r3, #0
 8022946:	f340 810e 	ble.w	8022b66 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 802294a:	ee30 0a04 	vadd.f32	s0, s0, s8
 802294e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8022952:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022956:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8022958:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802295c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022960:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022964:	eef0 6a62 	vmov.f32	s13, s5
 8022968:	ee61 7a27 	vmul.f32	s15, s2, s15
 802296c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022970:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022974:	ee16 aa90 	vmov	sl, s13
 8022978:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802297c:	eef0 6a43 	vmov.f32	s13, s6
 8022980:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022984:	ee12 2a90 	vmov	r2, s5
 8022988:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802298c:	fb92 f3f3 	sdiv	r3, r2, r3
 8022990:	ee13 2a10 	vmov	r2, s6
 8022994:	9325      	str	r3, [sp, #148]	; 0x94
 8022996:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8022998:	fb92 f3f3 	sdiv	r3, r2, r3
 802299c:	9326      	str	r3, [sp, #152]	; 0x98
 802299e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80229a0:	9a15      	ldr	r2, [sp, #84]	; 0x54
 80229a2:	3b01      	subs	r3, #1
 80229a4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80229a8:	930c      	str	r3, [sp, #48]	; 0x30
 80229aa:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80229ac:	bf08      	it	eq
 80229ae:	4613      	moveq	r3, r2
 80229b0:	ee16 5a90 	vmov	r5, s13
 80229b4:	9309      	str	r3, [sp, #36]	; 0x24
 80229b6:	eeb0 3a67 	vmov.f32	s6, s15
 80229ba:	eef0 2a47 	vmov.f32	s5, s14
 80229be:	e6a6      	b.n	802270e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80229c0:	2900      	cmp	r1, #0
 80229c2:	f43f af10 	beq.w	80227e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80229c6:	f819 3003 	ldrb.w	r3, [r9, r3]
 80229ca:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80229ce:	930f      	str	r3, [sp, #60]	; 0x3c
 80229d0:	e709      	b.n	80227e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80229d2:	f112 0901 	adds.w	r9, r2, #1
 80229d6:	f53f af7d 	bmi.w	80228d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80229da:	454b      	cmp	r3, r9
 80229dc:	f6ff af7a 	blt.w	80228d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80229e0:	f11c 0901 	adds.w	r9, ip, #1
 80229e4:	f53f af76 	bmi.w	80228d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80229e8:	45ce      	cmp	lr, r9
 80229ea:	f6ff af73 	blt.w	80228d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80229ee:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80229f0:	9202      	str	r2, [sp, #8]
 80229f2:	b21b      	sxth	r3, r3
 80229f4:	fa0f f28e 	sxth.w	r2, lr
 80229f8:	e9cd 1405 	strd	r1, r4, [sp, #20]
 80229fc:	e9cd c003 	strd	ip, r0, [sp, #12]
 8022a00:	9201      	str	r2, [sp, #4]
 8022a02:	9300      	str	r3, [sp, #0]
 8022a04:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8022a06:	9816      	ldr	r0, [sp, #88]	; 0x58
 8022a08:	4633      	mov	r3, r6
 8022a0a:	4639      	mov	r1, r7
 8022a0c:	f7ff fd8e 	bl	802252c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 8022a10:	e760      	b.n	80228d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8022a12:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8022a14:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022a16:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8022a1a:	ea4f 422a 	mov.w	r2, sl, asr #16
 8022a1e:	1429      	asrs	r1, r5, #16
 8022a20:	fb03 2101 	mla	r1, r3, r1, r2
 8022a24:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8022a26:	440a      	add	r2, r1
 8022a28:	5c61      	ldrb	r1, [r4, r1]
 8022a2a:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 8022a2e:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8022a32:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 8022a36:	f1bc 0f00 	cmp.w	ip, #0
 8022a3a:	f000 808c 	beq.w	8022b56 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 8022a3e:	7857      	ldrb	r7, [r2, #1]
 8022a40:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 8022a44:	9413      	str	r4, [sp, #76]	; 0x4c
 8022a46:	b140      	cbz	r0, 8022a5a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8022a48:	18d7      	adds	r7, r2, r3
 8022a4a:	5cd3      	ldrb	r3, [r2, r3]
 8022a4c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8022a50:	9310      	str	r3, [sp, #64]	; 0x40
 8022a52:	787b      	ldrb	r3, [r7, #1]
 8022a54:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8022a58:	9314      	str	r3, [sp, #80]	; 0x50
 8022a5a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8022a5c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8022a5e:	fb1c f200 	smulbb	r2, ip, r0
 8022a62:	041f      	lsls	r7, r3, #16
 8022a64:	10d2      	asrs	r2, r2, #3
 8022a66:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8022a6a:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 8022a6e:	431f      	orrs	r7, r3
 8022a70:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 8022a74:	9317      	str	r3, [sp, #92]	; 0x5c
 8022a76:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8022a78:	041b      	lsls	r3, r3, #16
 8022a7a:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 8022a7e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8022a82:	ea43 030b 	orr.w	r3, r3, fp
 8022a86:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8022a88:	4353      	muls	r3, r2
 8022a8a:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8022a8e:	fb04 3707 	mla	r7, r4, r7, r3
 8022a92:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8022a96:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8022a9a:	ea43 0b01 	orr.w	fp, r3, r1
 8022a9e:	f1c0 0110 	rsb	r1, r0, #16
 8022aa2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8022aa4:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8022aa6:	eba1 0c0c 	sub.w	ip, r1, ip
 8022aaa:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8022aae:	fb0c 770b 	mla	r7, ip, fp, r7
 8022ab2:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8022ab6:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 8022aba:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8022abe:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8022ac2:	ea4c 0c0b 	orr.w	ip, ip, fp
 8022ac6:	fb02 770c 	mla	r7, r2, ip, r7
 8022aca:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8022acc:	0d79      	lsrs	r1, r7, #21
 8022ace:	097f      	lsrs	r7, r7, #5
 8022ad0:	8812      	ldrh	r2, [r2, #0]
 8022ad2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022ad6:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8022ada:	430f      	orrs	r7, r1
 8022adc:	b2bb      	uxth	r3, r7
 8022ade:	1211      	asrs	r1, r2, #8
 8022ae0:	1218      	asrs	r0, r3, #8
 8022ae2:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8022ae6:	fb11 f104 	smulbb	r1, r1, r4
 8022aea:	10d7      	asrs	r7, r2, #3
 8022aec:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8022af0:	00d2      	lsls	r2, r2, #3
 8022af2:	fb00 1009 	mla	r0, r0, r9, r1
 8022af6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8022afa:	10d9      	asrs	r1, r3, #3
 8022afc:	b2d2      	uxtb	r2, r2
 8022afe:	00db      	lsls	r3, r3, #3
 8022b00:	fb17 f704 	smulbb	r7, r7, r4
 8022b04:	fb12 f204 	smulbb	r2, r2, r4
 8022b08:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8022b0c:	b2db      	uxtb	r3, r3
 8022b0e:	b280      	uxth	r0, r0
 8022b10:	fb01 7109 	mla	r1, r1, r9, r7
 8022b14:	fb03 2309 	mla	r3, r3, r9, r2
 8022b18:	b29b      	uxth	r3, r3
 8022b1a:	b289      	uxth	r1, r1
 8022b1c:	1c42      	adds	r2, r0, #1
 8022b1e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8022b22:	1c4f      	adds	r7, r1, #1
 8022b24:	1c5a      	adds	r2, r3, #1
 8022b26:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8022b2a:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8022b2e:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8022b32:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8022b36:	0949      	lsrs	r1, r1, #5
 8022b38:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8022b3a:	4310      	orrs	r0, r2
 8022b3c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022b40:	4308      	orrs	r0, r1
 8022b42:	f823 0b02 	strh.w	r0, [r3], #2
 8022b46:	930e      	str	r3, [sp, #56]	; 0x38
 8022b48:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8022b4a:	449a      	add	sl, r3
 8022b4c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8022b4e:	f10e 3eff 	add.w	lr, lr, #4294967295
 8022b52:	441d      	add	r5, r3
 8022b54:	e6ed      	b.n	8022932 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 8022b56:	2800      	cmp	r0, #0
 8022b58:	f43f af7f 	beq.w	8022a5a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8022b5c:	5cd3      	ldrb	r3, [r2, r3]
 8022b5e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8022b62:	9310      	str	r3, [sp, #64]	; 0x40
 8022b64:	e779      	b.n	8022a5a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8022b66:	b019      	add	sp, #100	; 0x64
 8022b68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08022b6c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8022b6c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8022b70:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 8022b74:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 8022b78:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 8022b7c:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8022b80:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 8022b84:	8808      	ldrh	r0, [r1, #0]
 8022b86:	fb08 470e 	mla	r7, r8, lr, r4
 8022b8a:	f1b8 0f00 	cmp.w	r8, #0
 8022b8e:	eb02 0907 	add.w	r9, r2, r7
 8022b92:	db67      	blt.n	8022c64 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8022b94:	45c2      	cmp	sl, r8
 8022b96:	dd65      	ble.n	8022c64 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8022b98:	2c00      	cmp	r4, #0
 8022b9a:	db61      	blt.n	8022c60 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8022b9c:	45a6      	cmp	lr, r4
 8022b9e:	dd5f      	ble.n	8022c60 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8022ba0:	5dd2      	ldrb	r2, [r2, r7]
 8022ba2:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 8022ba6:	1c62      	adds	r2, r4, #1
 8022ba8:	d45f      	bmi.n	8022c6a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8022baa:	4596      	cmp	lr, r2
 8022bac:	dd5d      	ble.n	8022c6a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8022bae:	2d00      	cmp	r5, #0
 8022bb0:	d05b      	beq.n	8022c6a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8022bb2:	f899 2001 	ldrb.w	r2, [r9, #1]
 8022bb6:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8022bba:	f118 0801 	adds.w	r8, r8, #1
 8022bbe:	d458      	bmi.n	8022c72 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8022bc0:	45c2      	cmp	sl, r8
 8022bc2:	dd56      	ble.n	8022c72 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8022bc4:	2e00      	cmp	r6, #0
 8022bc6:	d054      	beq.n	8022c72 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8022bc8:	2c00      	cmp	r4, #0
 8022bca:	db50      	blt.n	8022c6e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8022bcc:	45a6      	cmp	lr, r4
 8022bce:	dd4e      	ble.n	8022c6e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8022bd0:	f819 200e 	ldrb.w	r2, [r9, lr]
 8022bd4:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8022bd8:	3401      	adds	r4, #1
 8022bda:	d407      	bmi.n	8022bec <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8022bdc:	45a6      	cmp	lr, r4
 8022bde:	dd05      	ble.n	8022bec <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8022be0:	b125      	cbz	r5, 8022bec <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8022be2:	44ce      	add	lr, r9
 8022be4:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8022be8:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8022bec:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8022bf0:	fb15 f406 	smulbb	r4, r5, r6
 8022bf4:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8022bf8:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8022bfc:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8022c00:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8022c04:	ea43 0c0c 	orr.w	ip, r3, ip
 8022c08:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8022c0c:	f1c6 0310 	rsb	r3, r6, #16
 8022c10:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8022c14:	1b5b      	subs	r3, r3, r5
 8022c16:	ea4e 0707 	orr.w	r7, lr, r7
 8022c1a:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8022c1e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8022c22:	437d      	muls	r5, r7
 8022c24:	fb03 5c0c 	mla	ip, r3, ip, r5
 8022c28:	0403      	lsls	r3, r0, #16
 8022c2a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8022c2e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022c32:	4318      	orrs	r0, r3
 8022c34:	0413      	lsls	r3, r2, #16
 8022c36:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8022c3a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022c3e:	4313      	orrs	r3, r2
 8022c40:	fb04 c000 	mla	r0, r4, r0, ip
 8022c44:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8022c48:	fb06 0003 	mla	r0, r6, r3, r0
 8022c4c:	0d43      	lsrs	r3, r0, #21
 8022c4e:	0940      	lsrs	r0, r0, #5
 8022c50:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022c54:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022c58:	4318      	orrs	r0, r3
 8022c5a:	8008      	strh	r0, [r1, #0]
 8022c5c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8022c60:	4684      	mov	ip, r0
 8022c62:	e7a0      	b.n	8022ba6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 8022c64:	4607      	mov	r7, r0
 8022c66:	4684      	mov	ip, r0
 8022c68:	e7a7      	b.n	8022bba <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 8022c6a:	4607      	mov	r7, r0
 8022c6c:	e7a5      	b.n	8022bba <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 8022c6e:	4602      	mov	r2, r0
 8022c70:	e7b2      	b.n	8022bd8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 8022c72:	4602      	mov	r2, r0
 8022c74:	e7ba      	b.n	8022bec <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

08022c76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022c76:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022c7a:	b093      	sub	sp, #76	; 0x4c
 8022c7c:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8022c80:	920f      	str	r2, [sp, #60]	; 0x3c
 8022c82:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8022c84:	9108      	str	r1, [sp, #32]
 8022c86:	9306      	str	r3, [sp, #24]
 8022c88:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8022c8c:	9010      	str	r0, [sp, #64]	; 0x40
 8022c8e:	6850      	ldr	r0, [r2, #4]
 8022c90:	6812      	ldr	r2, [r2, #0]
 8022c92:	fb00 1303 	mla	r3, r0, r3, r1
 8022c96:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8022c9a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022c9c:	681b      	ldr	r3, [r3, #0]
 8022c9e:	9307      	str	r3, [sp, #28]
 8022ca0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022ca2:	685f      	ldr	r7, [r3, #4]
 8022ca4:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8022ca8:	3704      	adds	r7, #4
 8022caa:	9b08      	ldr	r3, [sp, #32]
 8022cac:	2b00      	cmp	r3, #0
 8022cae:	dc03      	bgt.n	8022cb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8022cb0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8022cb2:	2b00      	cmp	r3, #0
 8022cb4:	f340 81b2 	ble.w	802301c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8022cb8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022cba:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022cbe:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022cc2:	1e48      	subs	r0, r1, #1
 8022cc4:	f102 3cff 	add.w	ip, r2, #4294967295
 8022cc8:	9b06      	ldr	r3, [sp, #24]
 8022cca:	2b00      	cmp	r3, #0
 8022ccc:	f340 80a9 	ble.w	8022e22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 8022cd0:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8022cd4:	ea4f 4326 	mov.w	r3, r6, asr #16
 8022cd8:	d406      	bmi.n	8022ce8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8022cda:	4586      	cmp	lr, r0
 8022cdc:	da04      	bge.n	8022ce8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8022cde:	2b00      	cmp	r3, #0
 8022ce0:	db02      	blt.n	8022ce8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8022ce2:	4563      	cmp	r3, ip
 8022ce4:	f2c0 809e 	blt.w	8022e24 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8022ce8:	f11e 0e01 	adds.w	lr, lr, #1
 8022cec:	f100 808f 	bmi.w	8022e0e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8022cf0:	4571      	cmp	r1, lr
 8022cf2:	f2c0 808c 	blt.w	8022e0e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8022cf6:	3301      	adds	r3, #1
 8022cf8:	f100 8089 	bmi.w	8022e0e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8022cfc:	429a      	cmp	r2, r3
 8022cfe:	f2c0 8086 	blt.w	8022e0e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8022d02:	f8dd b018 	ldr.w	fp, [sp, #24]
 8022d06:	46c8      	mov	r8, r9
 8022d08:	f1bb 0f00 	cmp.w	fp, #0
 8022d0c:	f340 80a6 	ble.w	8022e5c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8022d10:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8022d12:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022d14:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8022d18:	689b      	ldr	r3, [r3, #8]
 8022d1a:	1422      	asrs	r2, r4, #16
 8022d1c:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8022d20:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8022d24:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8022d28:	f100 80e3 	bmi.w	8022ef2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8022d2c:	f103 3aff 	add.w	sl, r3, #4294967295
 8022d30:	4552      	cmp	r2, sl
 8022d32:	f280 80de 	bge.w	8022ef2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8022d36:	f1bc 0f00 	cmp.w	ip, #0
 8022d3a:	f2c0 80da 	blt.w	8022ef2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8022d3e:	f10e 3aff 	add.w	sl, lr, #4294967295
 8022d42:	45d4      	cmp	ip, sl
 8022d44:	f280 80d5 	bge.w	8022ef2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8022d48:	b21b      	sxth	r3, r3
 8022d4a:	fb0c 2203 	mla	r2, ip, r3, r2
 8022d4e:	9d07      	ldr	r5, [sp, #28]
 8022d50:	eb05 0a02 	add.w	sl, r5, r2
 8022d54:	5caa      	ldrb	r2, [r5, r2]
 8022d56:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 8022d5a:	2800      	cmp	r0, #0
 8022d5c:	f000 80c0 	beq.w	8022ee0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 8022d60:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8022d64:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 8022d68:	920b      	str	r2, [sp, #44]	; 0x2c
 8022d6a:	b151      	cbz	r1, 8022d82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8022d6c:	eb0a 0203 	add.w	r2, sl, r3
 8022d70:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8022d74:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8022d78:	9309      	str	r3, [sp, #36]	; 0x24
 8022d7a:	7853      	ldrb	r3, [r2, #1]
 8022d7c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8022d80:	930c      	str	r3, [sp, #48]	; 0x30
 8022d82:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8022d84:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8022d86:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8022d8a:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8022d8e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8022d92:	ea4c 0c03 	orr.w	ip, ip, r3
 8022d96:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8022d98:	041b      	lsls	r3, r3, #16
 8022d9a:	fb10 f201 	smulbb	r2, r0, r1
 8022d9e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8022da2:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8022da6:	10d2      	asrs	r2, r2, #3
 8022da8:	432b      	orrs	r3, r5
 8022daa:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 8022dae:	4353      	muls	r3, r2
 8022db0:	fb0a 330c 	mla	r3, sl, ip, r3
 8022db4:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8022db8:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8022dbc:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8022dc0:	ea4c 0e0e 	orr.w	lr, ip, lr
 8022dc4:	f1c1 0c10 	rsb	ip, r1, #16
 8022dc8:	ebac 0c00 	sub.w	ip, ip, r0
 8022dcc:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8022dd0:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8022dd4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022dd6:	0418      	lsls	r0, r3, #16
 8022dd8:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8022ddc:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8022de0:	4318      	orrs	r0, r3
 8022de2:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8022de6:	fb02 c200 	mla	r2, r2, r0, ip
 8022dea:	0d53      	lsrs	r3, r2, #21
 8022dec:	0952      	lsrs	r2, r2, #5
 8022dee:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022df2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022df6:	431a      	orrs	r2, r3
 8022df8:	f8a8 2000 	strh.w	r2, [r8]
 8022dfc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8022dfe:	441c      	add	r4, r3
 8022e00:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022e02:	f108 0802 	add.w	r8, r8, #2
 8022e06:	441e      	add	r6, r3
 8022e08:	f10b 3bff 	add.w	fp, fp, #4294967295
 8022e0c:	e77c      	b.n	8022d08 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8022e0e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8022e10:	441c      	add	r4, r3
 8022e12:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022e14:	441e      	add	r6, r3
 8022e16:	9b06      	ldr	r3, [sp, #24]
 8022e18:	3b01      	subs	r3, #1
 8022e1a:	9306      	str	r3, [sp, #24]
 8022e1c:	f109 0902 	add.w	r9, r9, #2
 8022e20:	e752      	b.n	8022cc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8022e22:	d020      	beq.n	8022e66 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8022e24:	9b06      	ldr	r3, [sp, #24]
 8022e26:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8022e28:	3b01      	subs	r3, #1
 8022e2a:	fb00 4003 	mla	r0, r0, r3, r4
 8022e2e:	1400      	asrs	r0, r0, #16
 8022e30:	f53f af67 	bmi.w	8022d02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8022e34:	3901      	subs	r1, #1
 8022e36:	4288      	cmp	r0, r1
 8022e38:	f6bf af63 	bge.w	8022d02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8022e3c:	9920      	ldr	r1, [sp, #128]	; 0x80
 8022e3e:	fb01 6303 	mla	r3, r1, r3, r6
 8022e42:	141b      	asrs	r3, r3, #16
 8022e44:	f53f af5d 	bmi.w	8022d02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8022e48:	3a01      	subs	r2, #1
 8022e4a:	4293      	cmp	r3, r2
 8022e4c:	f6bf af59 	bge.w	8022d02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8022e50:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8022e54:	46ca      	mov	sl, r9
 8022e56:	f1b8 0f00 	cmp.w	r8, #0
 8022e5a:	dc67      	bgt.n	8022f2c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8022e5c:	9b06      	ldr	r3, [sp, #24]
 8022e5e:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8022e62:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8022e66:	9b08      	ldr	r3, [sp, #32]
 8022e68:	2b00      	cmp	r3, #0
 8022e6a:	f340 80d7 	ble.w	802301c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8022e6e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022e72:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022e76:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8022e7a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022e7c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022e80:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022e84:	eeb0 6a62 	vmov.f32	s12, s5
 8022e88:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022e8c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8022e90:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022e94:	ee16 4a10 	vmov	r4, s12
 8022e98:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8022e9c:	eeb0 6a43 	vmov.f32	s12, s6
 8022ea0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022ea4:	ee12 2a90 	vmov	r2, s5
 8022ea8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022eac:	fb92 f3f3 	sdiv	r3, r2, r3
 8022eb0:	ee13 2a10 	vmov	r2, s6
 8022eb4:	931f      	str	r3, [sp, #124]	; 0x7c
 8022eb6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022eb8:	fb92 f3f3 	sdiv	r3, r2, r3
 8022ebc:	9320      	str	r3, [sp, #128]	; 0x80
 8022ebe:	9b08      	ldr	r3, [sp, #32]
 8022ec0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8022ec2:	3b01      	subs	r3, #1
 8022ec4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8022ec8:	9308      	str	r3, [sp, #32]
 8022eca:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022ecc:	bf08      	it	eq
 8022ece:	4613      	moveq	r3, r2
 8022ed0:	ee16 6a10 	vmov	r6, s12
 8022ed4:	9306      	str	r3, [sp, #24]
 8022ed6:	eeb0 3a67 	vmov.f32	s6, s15
 8022eda:	eef0 2a47 	vmov.f32	s5, s14
 8022ede:	e6e4      	b.n	8022caa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8022ee0:	2900      	cmp	r1, #0
 8022ee2:	f43f af4e 	beq.w	8022d82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8022ee6:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8022eea:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8022eee:	9309      	str	r3, [sp, #36]	; 0x24
 8022ef0:	e747      	b.n	8022d82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8022ef2:	f112 0a01 	adds.w	sl, r2, #1
 8022ef6:	d481      	bmi.n	8022dfc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8022ef8:	4553      	cmp	r3, sl
 8022efa:	f6ff af7f 	blt.w	8022dfc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8022efe:	f11c 0a01 	adds.w	sl, ip, #1
 8022f02:	f53f af7b 	bmi.w	8022dfc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8022f06:	45d6      	cmp	lr, sl
 8022f08:	f6ff af78 	blt.w	8022dfc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8022f0c:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 8022f10:	b21b      	sxth	r3, r3
 8022f12:	fa0f f28e 	sxth.w	r2, lr
 8022f16:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8022f1a:	9201      	str	r2, [sp, #4]
 8022f1c:	9300      	str	r3, [sp, #0]
 8022f1e:	9a07      	ldr	r2, [sp, #28]
 8022f20:	9810      	ldr	r0, [sp, #64]	; 0x40
 8022f22:	463b      	mov	r3, r7
 8022f24:	4641      	mov	r1, r8
 8022f26:	f7ff fe21 	bl	8022b6c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8022f2a:	e767      	b.n	8022dfc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8022f2c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022f2e:	9d07      	ldr	r5, [sp, #28]
 8022f30:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8022f34:	1422      	asrs	r2, r4, #16
 8022f36:	1431      	asrs	r1, r6, #16
 8022f38:	fb03 2101 	mla	r1, r3, r1, r2
 8022f3c:	9a07      	ldr	r2, [sp, #28]
 8022f3e:	440a      	add	r2, r1
 8022f40:	5c69      	ldrb	r1, [r5, r1]
 8022f42:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 8022f46:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8022f4a:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 8022f4e:	f1be 0f00 	cmp.w	lr, #0
 8022f52:	d05c      	beq.n	802300e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8022f54:	f892 c001 	ldrb.w	ip, [r2, #1]
 8022f58:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 8022f5c:	950d      	str	r5, [sp, #52]	; 0x34
 8022f5e:	b150      	cbz	r0, 8022f76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8022f60:	eb02 0c03 	add.w	ip, r2, r3
 8022f64:	5cd3      	ldrb	r3, [r2, r3]
 8022f66:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8022f6a:	930a      	str	r3, [sp, #40]	; 0x28
 8022f6c:	f89c 3001 	ldrb.w	r3, [ip, #1]
 8022f70:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8022f74:	930e      	str	r3, [sp, #56]	; 0x38
 8022f76:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8022f78:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8022f7a:	fb1e f200 	smulbb	r2, lr, r0
 8022f7e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8022f82:	10d2      	asrs	r2, r2, #3
 8022f84:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8022f88:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8022f8c:	ea4c 0c03 	orr.w	ip, ip, r3
 8022f90:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 8022f94:	9311      	str	r3, [sp, #68]	; 0x44
 8022f96:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8022f98:	041b      	lsls	r3, r3, #16
 8022f9a:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 8022f9e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8022fa2:	ea43 030b 	orr.w	r3, r3, fp
 8022fa6:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8022fa8:	4353      	muls	r3, r2
 8022faa:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8022fae:	fb05 3c0c 	mla	ip, r5, ip, r3
 8022fb2:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8022fb6:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8022fba:	ea43 0b01 	orr.w	fp, r3, r1
 8022fbe:	f1c0 0110 	rsb	r1, r0, #16
 8022fc2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022fc4:	eba1 0e0e 	sub.w	lr, r1, lr
 8022fc8:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8022fcc:	fb0e cc0b 	mla	ip, lr, fp, ip
 8022fd0:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8022fd4:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 8022fd8:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022fdc:	ea4b 0e0e 	orr.w	lr, fp, lr
 8022fe0:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8022fe4:	fb02 cc0e 	mla	ip, r2, lr, ip
 8022fe8:	ea4f 535c 	mov.w	r3, ip, lsr #21
 8022fec:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8022ff0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022ff4:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8022ff8:	ea43 0c0c 	orr.w	ip, r3, ip
 8022ffc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8022ffe:	f82a cb02 	strh.w	ip, [sl], #2
 8023002:	441c      	add	r4, r3
 8023004:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023006:	f108 38ff 	add.w	r8, r8, #4294967295
 802300a:	441e      	add	r6, r3
 802300c:	e723      	b.n	8022e56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 802300e:	2800      	cmp	r0, #0
 8023010:	d0b1      	beq.n	8022f76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8023012:	5cd3      	ldrb	r3, [r2, r3]
 8023014:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8023018:	930a      	str	r3, [sp, #40]	; 0x28
 802301a:	e7ac      	b.n	8022f76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 802301c:	b013      	add	sp, #76	; 0x4c
 802301e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08023022 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 8023022:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023026:	880d      	ldrh	r5, [r1, #0]
 8023028:	b087      	sub	sp, #28
 802302a:	10ef      	asrs	r7, r5, #3
 802302c:	ea4f 2a25 	mov.w	sl, r5, asr #8
 8023030:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8023034:	00ed      	lsls	r5, r5, #3
 8023036:	9701      	str	r7, [sp, #4]
 8023038:	b2ed      	uxtb	r5, r5
 802303a:	9502      	str	r5, [sp, #8]
 802303c:	9d01      	ldr	r5, [sp, #4]
 802303e:	9103      	str	r1, [sp, #12]
 8023040:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 8023044:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 8023048:	9902      	ldr	r1, [sp, #8]
 802304a:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 802304e:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 8023052:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 8023056:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 802305a:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 802305e:	022d      	lsls	r5, r5, #8
 8023060:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 8023064:	fb06 0709 	mla	r7, r6, r9, r0
 8023068:	430d      	orrs	r5, r1
 802306a:	2e00      	cmp	r6, #0
 802306c:	eb02 0c07 	add.w	ip, r2, r7
 8023070:	9505      	str	r5, [sp, #20]
 8023072:	f2c0 80b6 	blt.w	80231e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8023076:	45b3      	cmp	fp, r6
 8023078:	f340 80b3 	ble.w	80231e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 802307c:	2800      	cmp	r0, #0
 802307e:	f2c0 80ae 	blt.w	80231de <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8023082:	4581      	cmp	r9, r0
 8023084:	f340 80ab 	ble.w	80231de <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8023088:	5dd7      	ldrb	r7, [r2, r7]
 802308a:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 802308e:	441f      	add	r7, r3
 8023090:	1c42      	adds	r2, r0, #1
 8023092:	f100 80a9 	bmi.w	80231e8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8023096:	4591      	cmp	r9, r2
 8023098:	f340 80a6 	ble.w	80231e8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 802309c:	2c00      	cmp	r4, #0
 802309e:	f000 80a3 	beq.w	80231e8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 80230a2:	f89c 5001 	ldrb.w	r5, [ip, #1]
 80230a6:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80230aa:	441d      	add	r5, r3
 80230ac:	3601      	adds	r6, #1
 80230ae:	f100 809f 	bmi.w	80231f0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 80230b2:	45b3      	cmp	fp, r6
 80230b4:	f340 809c 	ble.w	80231f0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 80230b8:	f1be 0f00 	cmp.w	lr, #0
 80230bc:	f000 8098 	beq.w	80231f0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 80230c0:	2800      	cmp	r0, #0
 80230c2:	f2c0 8093 	blt.w	80231ec <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 80230c6:	4581      	cmp	r9, r0
 80230c8:	f340 8090 	ble.w	80231ec <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 80230cc:	f81c 6009 	ldrb.w	r6, [ip, r9]
 80230d0:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 80230d4:	441e      	add	r6, r3
 80230d6:	3001      	adds	r0, #1
 80230d8:	f100 808d 	bmi.w	80231f6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 80230dc:	4581      	cmp	r9, r0
 80230de:	f340 808a 	ble.w	80231f6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 80230e2:	2c00      	cmp	r4, #0
 80230e4:	f000 8087 	beq.w	80231f6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 80230e8:	44e1      	add	r9, ip
 80230ea:	f899 2001 	ldrb.w	r2, [r9, #1]
 80230ee:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80230f2:	4413      	add	r3, r2
 80230f4:	b2a4      	uxth	r4, r4
 80230f6:	fa1f fe8e 	uxth.w	lr, lr
 80230fa:	fb04 fb0e 	mul.w	fp, r4, lr
 80230fe:	0124      	lsls	r4, r4, #4
 8023100:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 8023104:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 8023108:	eba4 040b 	sub.w	r4, r4, fp
 802310c:	fa1f f08e 	uxth.w	r0, lr
 8023110:	b2a2      	uxth	r2, r4
 8023112:	78ac      	ldrb	r4, [r5, #2]
 8023114:	f897 c002 	ldrb.w	ip, [r7, #2]
 8023118:	9901      	ldr	r1, [sp, #4]
 802311a:	eba9 0900 	sub.w	r9, r9, r0
 802311e:	fa1f f989 	uxth.w	r9, r9
 8023122:	4354      	muls	r4, r2
 8023124:	fb09 440c 	mla	r4, r9, ip, r4
 8023128:	f896 c002 	ldrb.w	ip, [r6, #2]
 802312c:	fb00 440c 	mla	r4, r0, ip, r4
 8023130:	f893 c002 	ldrb.w	ip, [r3, #2]
 8023134:	fa1f fe88 	uxth.w	lr, r8
 8023138:	ea6f 0808 	mvn.w	r8, r8
 802313c:	fa5f f888 	uxtb.w	r8, r8
 8023140:	fb0b 4c0c 	mla	ip, fp, ip, r4
 8023144:	fb1a fa08 	smulbb	sl, sl, r8
 8023148:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 802314c:	fb0c ac0e 	mla	ip, ip, lr, sl
 8023150:	f895 a001 	ldrb.w	sl, [r5, #1]
 8023154:	787c      	ldrb	r4, [r7, #1]
 8023156:	782d      	ldrb	r5, [r5, #0]
 8023158:	783f      	ldrb	r7, [r7, #0]
 802315a:	fb02 fa0a 	mul.w	sl, r2, sl
 802315e:	fb09 aa04 	mla	sl, r9, r4, sl
 8023162:	7874      	ldrb	r4, [r6, #1]
 8023164:	436a      	muls	r2, r5
 8023166:	7835      	ldrb	r5, [r6, #0]
 8023168:	fb00 aa04 	mla	sl, r0, r4, sl
 802316c:	fb09 2207 	mla	r2, r9, r7, r2
 8023170:	785c      	ldrb	r4, [r3, #1]
 8023172:	781b      	ldrb	r3, [r3, #0]
 8023174:	fb00 2005 	mla	r0, r0, r5, r2
 8023178:	fb0b a404 	mla	r4, fp, r4, sl
 802317c:	fb0b 0b03 	mla	fp, fp, r3, r0
 8023180:	9b02      	ldr	r3, [sp, #8]
 8023182:	fb11 fa08 	smulbb	sl, r1, r8
 8023186:	fa1f fc8c 	uxth.w	ip, ip
 802318a:	fb13 f808 	smulbb	r8, r3, r8
 802318e:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 8023192:	f3c4 2407 	ubfx	r4, r4, #8, #8
 8023196:	fb04 a40e 	mla	r4, r4, lr, sl
 802319a:	f10c 0301 	add.w	r3, ip, #1
 802319e:	fb0b 8e0e 	mla	lr, fp, lr, r8
 80231a2:	fa1f fe8e 	uxth.w	lr, lr
 80231a6:	b2a4      	uxth	r4, r4
 80231a8:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 80231ac:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 80231b0:	f104 0a01 	add.w	sl, r4, #1
 80231b4:	f10e 0c01 	add.w	ip, lr, #1
 80231b8:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80231bc:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 80231c0:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80231c4:	0964      	lsrs	r4, r4, #5
 80231c6:	ea4c 0c03 	orr.w	ip, ip, r3
 80231ca:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80231ce:	9b03      	ldr	r3, [sp, #12]
 80231d0:	ea4c 0c04 	orr.w	ip, ip, r4
 80231d4:	f8a3 c000 	strh.w	ip, [r3]
 80231d8:	b007      	add	sp, #28
 80231da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80231de:	af05      	add	r7, sp, #20
 80231e0:	e756      	b.n	8023090 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 80231e2:	ad05      	add	r5, sp, #20
 80231e4:	462f      	mov	r7, r5
 80231e6:	e761      	b.n	80230ac <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 80231e8:	ad05      	add	r5, sp, #20
 80231ea:	e75f      	b.n	80230ac <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 80231ec:	ae05      	add	r6, sp, #20
 80231ee:	e772      	b.n	80230d6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 80231f0:	ab05      	add	r3, sp, #20
 80231f2:	461e      	mov	r6, r3
 80231f4:	e77e      	b.n	80230f4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 80231f6:	ab05      	add	r3, sp, #20
 80231f8:	e77c      	b.n	80230f4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

080231fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80231fa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80231fe:	b095      	sub	sp, #84	; 0x54
 8023200:	9212      	str	r2, [sp, #72]	; 0x48
 8023202:	9309      	str	r3, [sp, #36]	; 0x24
 8023204:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8023206:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 802320a:	930f      	str	r3, [sp, #60]	; 0x3c
 802320c:	910e      	str	r1, [sp, #56]	; 0x38
 802320e:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 8023212:	9013      	str	r0, [sp, #76]	; 0x4c
 8023214:	6850      	ldr	r0, [r2, #4]
 8023216:	6812      	ldr	r2, [r2, #0]
 8023218:	fb00 1303 	mla	r3, r0, r3, r1
 802321c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8023220:	930a      	str	r3, [sp, #40]	; 0x28
 8023222:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8023224:	681b      	ldr	r3, [r3, #0]
 8023226:	930d      	str	r3, [sp, #52]	; 0x34
 8023228:	9b26      	ldr	r3, [sp, #152]	; 0x98
 802322a:	685c      	ldr	r4, [r3, #4]
 802322c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 802322e:	43db      	mvns	r3, r3
 8023230:	b2db      	uxtb	r3, r3
 8023232:	3404      	adds	r4, #4
 8023234:	930b      	str	r3, [sp, #44]	; 0x2c
 8023236:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8023238:	2b00      	cmp	r3, #0
 802323a:	dc03      	bgt.n	8023244 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 802323c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 802323e:	2b00      	cmp	r3, #0
 8023240:	f340 8255 	ble.w	80236ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 8023244:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8023246:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802324a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802324e:	1e48      	subs	r0, r1, #1
 8023250:	1e55      	subs	r5, r2, #1
 8023252:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023254:	2b00      	cmp	r3, #0
 8023256:	f340 80f9 	ble.w	802344c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 802325a:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 802325c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802325e:	1436      	asrs	r6, r6, #16
 8023260:	ea4f 4323 	mov.w	r3, r3, asr #16
 8023264:	d406      	bmi.n	8023274 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8023266:	4286      	cmp	r6, r0
 8023268:	da04      	bge.n	8023274 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802326a:	2b00      	cmp	r3, #0
 802326c:	db02      	blt.n	8023274 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802326e:	42ab      	cmp	r3, r5
 8023270:	f2c0 80ed 	blt.w	802344e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 8023274:	3601      	adds	r6, #1
 8023276:	f100 80da 	bmi.w	802342e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 802327a:	42b1      	cmp	r1, r6
 802327c:	f2c0 80d7 	blt.w	802342e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8023280:	3301      	adds	r3, #1
 8023282:	f100 80d4 	bmi.w	802342e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8023286:	429a      	cmp	r2, r3
 8023288:	f2c0 80d1 	blt.w	802342e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 802328c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802328e:	9311      	str	r3, [sp, #68]	; 0x44
 8023290:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023292:	930c      	str	r3, [sp, #48]	; 0x30
 8023294:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8023296:	2b00      	cmp	r3, #0
 8023298:	f340 80fa 	ble.w	8023490 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 802329c:	9826      	ldr	r0, [sp, #152]	; 0x98
 802329e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80232a0:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80232a2:	68c6      	ldr	r6, [r0, #12]
 80232a4:	981f      	ldr	r0, [sp, #124]	; 0x7c
 80232a6:	141d      	asrs	r5, r3, #16
 80232a8:	f3c2 3103 	ubfx	r1, r2, #12, #4
 80232ac:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80232ae:	9a26      	ldr	r2, [sp, #152]	; 0x98
 80232b0:	1400      	asrs	r0, r0, #16
 80232b2:	f3c3 3303 	ubfx	r3, r3, #12, #4
 80232b6:	6892      	ldr	r2, [r2, #8]
 80232b8:	f100 813e 	bmi.w	8023538 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 80232bc:	1e57      	subs	r7, r2, #1
 80232be:	42b8      	cmp	r0, r7
 80232c0:	f280 813a 	bge.w	8023538 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 80232c4:	2d00      	cmp	r5, #0
 80232c6:	f2c0 8137 	blt.w	8023538 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 80232ca:	1e77      	subs	r7, r6, #1
 80232cc:	42bd      	cmp	r5, r7
 80232ce:	f280 8133 	bge.w	8023538 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 80232d2:	b212      	sxth	r2, r2
 80232d4:	fb05 0002 	mla	r0, r5, r2, r0
 80232d8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80232da:	f815 a000 	ldrb.w	sl, [r5, r0]
 80232de:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 80232e2:	182e      	adds	r6, r5, r0
 80232e4:	eb04 050a 	add.w	r5, r4, sl
 80232e8:	2b00      	cmp	r3, #0
 80232ea:	f000 8117 	beq.w	802351c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 80232ee:	f896 c001 	ldrb.w	ip, [r6, #1]
 80232f2:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 80232f6:	44a4      	add	ip, r4
 80232f8:	2900      	cmp	r1, #0
 80232fa:	f000 8117 	beq.w	802352c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 80232fe:	18b0      	adds	r0, r6, r2
 8023300:	5cb2      	ldrb	r2, [r6, r2]
 8023302:	7840      	ldrb	r0, [r0, #1]
 8023304:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8023308:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802330c:	4422      	add	r2, r4
 802330e:	4420      	add	r0, r4
 8023310:	b29b      	uxth	r3, r3
 8023312:	b289      	uxth	r1, r1
 8023314:	fb03 f901 	mul.w	r9, r3, r1
 8023318:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 802331c:	011b      	lsls	r3, r3, #4
 802331e:	b289      	uxth	r1, r1
 8023320:	f89c 7002 	ldrb.w	r7, [ip, #2]
 8023324:	f895 b002 	ldrb.w	fp, [r5, #2]
 8023328:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 802332a:	f814 a00a 	ldrb.w	sl, [r4, sl]
 802332e:	f8b6 e000 	ldrh.w	lr, [r6]
 8023332:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 8023336:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 802333a:	eba3 0309 	sub.w	r3, r3, r9
 802333e:	b29b      	uxth	r3, r3
 8023340:	eba8 0801 	sub.w	r8, r8, r1
 8023344:	fa1f f888 	uxth.w	r8, r8
 8023348:	435f      	muls	r7, r3
 802334a:	fb08 770b 	mla	r7, r8, fp, r7
 802334e:	f892 b002 	ldrb.w	fp, [r2, #2]
 8023352:	9310      	str	r3, [sp, #64]	; 0x40
 8023354:	fb01 770b 	mla	r7, r1, fp, r7
 8023358:	f890 b002 	ldrb.w	fp, [r0, #2]
 802335c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802335e:	fb09 770b 	mla	r7, r9, fp, r7
 8023362:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 8023366:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 802336a:	fb1b fb03 	smulbb	fp, fp, r3
 802336e:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8023372:	fb07 b706 	mla	r7, r7, r6, fp
 8023376:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8023378:	f895 b001 	ldrb.w	fp, [r5, #1]
 802337c:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8023380:	f89c c000 	ldrb.w	ip, [ip]
 8023384:	435d      	muls	r5, r3
 8023386:	fb08 550b 	mla	r5, r8, fp, r5
 802338a:	f892 b001 	ldrb.w	fp, [r2, #1]
 802338e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8023390:	fb01 550b 	mla	r5, r1, fp, r5
 8023394:	f890 b001 	ldrb.w	fp, [r0, #1]
 8023398:	fb09 550b 	mla	r5, r9, fp, r5
 802339c:	ea4f 0bee 	mov.w	fp, lr, asr #3
 80233a0:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 80233a4:	fb1b fb03 	smulbb	fp, fp, r3
 80233a8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80233aa:	fb03 f30c 	mul.w	r3, r3, ip
 80233ae:	f892 c000 	ldrb.w	ip, [r2]
 80233b2:	fb08 330a 	mla	r3, r8, sl, r3
 80233b6:	fb01 330c 	mla	r3, r1, ip, r3
 80233ba:	f890 c000 	ldrb.w	ip, [r0]
 80233be:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80233c2:	fb09 3c0c 	mla	ip, r9, ip, r3
 80233c6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80233c8:	fa5f fe8e 	uxtb.w	lr, lr
 80233cc:	b2bf      	uxth	r7, r7
 80233ce:	fb1e fe03 	smulbb	lr, lr, r3
 80233d2:	f3c5 2507 	ubfx	r5, r5, #8, #8
 80233d6:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 80233da:	fb05 b506 	mla	r5, r5, r6, fp
 80233de:	1c7b      	adds	r3, r7, #1
 80233e0:	fb0c e606 	mla	r6, ip, r6, lr
 80233e4:	b2ad      	uxth	r5, r5
 80233e6:	b2b6      	uxth	r6, r6
 80233e8:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 80233ec:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 80233f0:	f105 0b01 	add.w	fp, r5, #1
 80233f4:	1c77      	adds	r7, r6, #1
 80233f6:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 80233fa:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 80233fe:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8023402:	096d      	lsrs	r5, r5, #5
 8023404:	431f      	orrs	r7, r3
 8023406:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 802340a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802340c:	433d      	orrs	r5, r7
 802340e:	801d      	strh	r5, [r3, #0]
 8023410:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8023412:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8023414:	3302      	adds	r3, #2
 8023416:	930c      	str	r3, [sp, #48]	; 0x30
 8023418:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802341a:	4413      	add	r3, r2
 802341c:	931f      	str	r3, [sp, #124]	; 0x7c
 802341e:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8023420:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023422:	4413      	add	r3, r2
 8023424:	9320      	str	r3, [sp, #128]	; 0x80
 8023426:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8023428:	3b01      	subs	r3, #1
 802342a:	9311      	str	r3, [sp, #68]	; 0x44
 802342c:	e732      	b.n	8023294 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 802342e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8023430:	9e21      	ldr	r6, [sp, #132]	; 0x84
 8023432:	4433      	add	r3, r6
 8023434:	931f      	str	r3, [sp, #124]	; 0x7c
 8023436:	9e22      	ldr	r6, [sp, #136]	; 0x88
 8023438:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802343a:	4433      	add	r3, r6
 802343c:	9320      	str	r3, [sp, #128]	; 0x80
 802343e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023440:	3b01      	subs	r3, #1
 8023442:	9309      	str	r3, [sp, #36]	; 0x24
 8023444:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023446:	3302      	adds	r3, #2
 8023448:	930a      	str	r3, [sp, #40]	; 0x28
 802344a:	e702      	b.n	8023252 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 802344c:	d027      	beq.n	802349e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 802344e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023450:	9821      	ldr	r0, [sp, #132]	; 0x84
 8023452:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 8023454:	3b01      	subs	r3, #1
 8023456:	fb00 5003 	mla	r0, r0, r3, r5
 802345a:	1400      	asrs	r0, r0, #16
 802345c:	f53f af16 	bmi.w	802328c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8023460:	3901      	subs	r1, #1
 8023462:	4288      	cmp	r0, r1
 8023464:	f6bf af12 	bge.w	802328c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8023468:	9922      	ldr	r1, [sp, #136]	; 0x88
 802346a:	9820      	ldr	r0, [sp, #128]	; 0x80
 802346c:	fb01 0303 	mla	r3, r1, r3, r0
 8023470:	141b      	asrs	r3, r3, #16
 8023472:	f53f af0b 	bmi.w	802328c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8023476:	3a01      	subs	r2, #1
 8023478:	4293      	cmp	r3, r2
 802347a:	f6bf af07 	bge.w	802328c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802347e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023480:	9311      	str	r3, [sp, #68]	; 0x44
 8023482:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 8023486:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023488:	930c      	str	r3, [sp, #48]	; 0x30
 802348a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 802348c:	2b00      	cmp	r3, #0
 802348e:	dc70      	bgt.n	8023572 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8023490:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023492:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8023494:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8023498:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802349c:	930a      	str	r3, [sp, #40]	; 0x28
 802349e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80234a0:	2b00      	cmp	r3, #0
 80234a2:	f340 8124 	ble.w	80236ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 80234a6:	ee30 0a04 	vadd.f32	s0, s0, s8
 80234aa:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80234ae:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80234b2:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80234b4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80234b8:	ee31 1a05 	vadd.f32	s2, s2, s10
 80234bc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80234c0:	eef0 6a62 	vmov.f32	s13, s5
 80234c4:	ee61 7a27 	vmul.f32	s15, s2, s15
 80234c8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80234cc:	ee77 2a62 	vsub.f32	s5, s14, s5
 80234d0:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 80234d4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80234d8:	eef0 6a43 	vmov.f32	s13, s6
 80234dc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80234e0:	ee12 2a90 	vmov	r2, s5
 80234e4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80234e8:	fb92 f3f3 	sdiv	r3, r2, r3
 80234ec:	ee13 2a10 	vmov	r2, s6
 80234f0:	9321      	str	r3, [sp, #132]	; 0x84
 80234f2:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80234f4:	fb92 f3f3 	sdiv	r3, r2, r3
 80234f8:	9322      	str	r3, [sp, #136]	; 0x88
 80234fa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80234fc:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80234fe:	3b01      	subs	r3, #1
 8023500:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023504:	930e      	str	r3, [sp, #56]	; 0x38
 8023506:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8023508:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 802350c:	bf08      	it	eq
 802350e:	4613      	moveq	r3, r2
 8023510:	9309      	str	r3, [sp, #36]	; 0x24
 8023512:	eeb0 3a67 	vmov.f32	s6, s15
 8023516:	eef0 2a47 	vmov.f32	s5, s14
 802351a:	e68c      	b.n	8023236 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 802351c:	b149      	cbz	r1, 8023532 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 802351e:	5cb2      	ldrb	r2, [r6, r2]
 8023520:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8023524:	4422      	add	r2, r4
 8023526:	4628      	mov	r0, r5
 8023528:	46ac      	mov	ip, r5
 802352a:	e6f1      	b.n	8023310 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 802352c:	4628      	mov	r0, r5
 802352e:	462a      	mov	r2, r5
 8023530:	e6ee      	b.n	8023310 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8023532:	4628      	mov	r0, r5
 8023534:	462a      	mov	r2, r5
 8023536:	e7f7      	b.n	8023528 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 8023538:	1c47      	adds	r7, r0, #1
 802353a:	f53f af69 	bmi.w	8023410 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 802353e:	42ba      	cmp	r2, r7
 8023540:	f6ff af66 	blt.w	8023410 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8023544:	1c6f      	adds	r7, r5, #1
 8023546:	f53f af63 	bmi.w	8023410 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 802354a:	42be      	cmp	r6, r7
 802354c:	f6ff af60 	blt.w	8023410 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8023550:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8023552:	9002      	str	r0, [sp, #8]
 8023554:	b236      	sxth	r6, r6
 8023556:	b212      	sxth	r2, r2
 8023558:	e9cd 1705 	strd	r1, r7, [sp, #20]
 802355c:	e9cd 5303 	strd	r5, r3, [sp, #12]
 8023560:	9200      	str	r2, [sp, #0]
 8023562:	9601      	str	r6, [sp, #4]
 8023564:	4623      	mov	r3, r4
 8023566:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 802356a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 802356c:	f7ff fd59 	bl	8023022 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 8023570:	e74e      	b.n	8023410 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8023572:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8023574:	9820      	ldr	r0, [sp, #128]	; 0x80
 8023576:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 8023578:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802357a:	f3c2 3103 	ubfx	r1, r2, #12, #4
 802357e:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8023580:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8023584:	142d      	asrs	r5, r5, #16
 8023586:	1400      	asrs	r0, r0, #16
 8023588:	fb02 5000 	mla	r0, r2, r0, r5
 802358c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802358e:	f815 9000 	ldrb.w	r9, [r5, r0]
 8023592:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8023596:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 802359a:	182e      	adds	r6, r5, r0
 802359c:	eb04 0509 	add.w	r5, r4, r9
 80235a0:	2b00      	cmp	r3, #0
 80235a2:	f000 8096 	beq.w	80236d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 80235a6:	7877      	ldrb	r7, [r6, #1]
 80235a8:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 80235ac:	4427      	add	r7, r4
 80235ae:	2900      	cmp	r1, #0
 80235b0:	f000 8097 	beq.w	80236e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 80235b4:	18b0      	adds	r0, r6, r2
 80235b6:	5cb2      	ldrb	r2, [r6, r2]
 80235b8:	7840      	ldrb	r0, [r0, #1]
 80235ba:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80235be:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80235c2:	4422      	add	r2, r4
 80235c4:	4420      	add	r0, r4
 80235c6:	b29b      	uxth	r3, r3
 80235c8:	b289      	uxth	r1, r1
 80235ca:	fb03 f801 	mul.w	r8, r3, r1
 80235ce:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 80235d0:	f895 b002 	ldrb.w	fp, [r5, #2]
 80235d4:	f8b6 c000 	ldrh.w	ip, [r6]
 80235d8:	78be      	ldrb	r6, [r7, #2]
 80235da:	f814 9009 	ldrb.w	r9, [r4, r9]
 80235de:	011b      	lsls	r3, r3, #4
 80235e0:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 80235e4:	b289      	uxth	r1, r1
 80235e6:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 80235ea:	eba3 0308 	sub.w	r3, r3, r8
 80235ee:	b29b      	uxth	r3, r3
 80235f0:	ebae 0e01 	sub.w	lr, lr, r1
 80235f4:	fa1f fe8e 	uxth.w	lr, lr
 80235f8:	435e      	muls	r6, r3
 80235fa:	fb0e 660b 	mla	r6, lr, fp, r6
 80235fe:	f892 b002 	ldrb.w	fp, [r2, #2]
 8023602:	9310      	str	r3, [sp, #64]	; 0x40
 8023604:	fb01 660b 	mla	r6, r1, fp, r6
 8023608:	f890 b002 	ldrb.w	fp, [r0, #2]
 802360c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802360e:	fb08 660b 	mla	r6, r8, fp, r6
 8023612:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 8023616:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 802361a:	fb1b fb03 	smulbb	fp, fp, r3
 802361e:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8023622:	fb06 b60a 	mla	r6, r6, sl, fp
 8023626:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8023628:	f895 b001 	ldrb.w	fp, [r5, #1]
 802362c:	787d      	ldrb	r5, [r7, #1]
 802362e:	783f      	ldrb	r7, [r7, #0]
 8023630:	435d      	muls	r5, r3
 8023632:	fb0e 550b 	mla	r5, lr, fp, r5
 8023636:	f892 b001 	ldrb.w	fp, [r2, #1]
 802363a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802363c:	fb01 550b 	mla	r5, r1, fp, r5
 8023640:	f890 b001 	ldrb.w	fp, [r0, #1]
 8023644:	fb08 550b 	mla	r5, r8, fp, r5
 8023648:	ea4f 0bec 	mov.w	fp, ip, asr #3
 802364c:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8023650:	fb1b fb03 	smulbb	fp, fp, r3
 8023654:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8023656:	437b      	muls	r3, r7
 8023658:	7817      	ldrb	r7, [r2, #0]
 802365a:	fb0e 3309 	mla	r3, lr, r9, r3
 802365e:	fb01 3307 	mla	r3, r1, r7, r3
 8023662:	7807      	ldrb	r7, [r0, #0]
 8023664:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8023668:	fb08 3707 	mla	r7, r8, r7, r3
 802366c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802366e:	fa5f fc8c 	uxtb.w	ip, ip
 8023672:	fb1c fc03 	smulbb	ip, ip, r3
 8023676:	f3c5 2507 	ubfx	r5, r5, #8, #8
 802367a:	f3c7 2707 	ubfx	r7, r7, #8, #8
 802367e:	fb05 b50a 	mla	r5, r5, sl, fp
 8023682:	fb07 c70a 	mla	r7, r7, sl, ip
 8023686:	b2b6      	uxth	r6, r6
 8023688:	b2ad      	uxth	r5, r5
 802368a:	b2bf      	uxth	r7, r7
 802368c:	1c73      	adds	r3, r6, #1
 802368e:	1c7a      	adds	r2, r7, #1
 8023690:	f105 0b01 	add.w	fp, r5, #1
 8023694:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8023698:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 802369c:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 80236a0:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80236a4:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 80236a8:	096d      	lsrs	r5, r5, #5
 80236aa:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80236ac:	4316      	orrs	r6, r2
 80236ae:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80236b2:	432e      	orrs	r6, r5
 80236b4:	f823 6b02 	strh.w	r6, [r3], #2
 80236b8:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80236ba:	930c      	str	r3, [sp, #48]	; 0x30
 80236bc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80236be:	4413      	add	r3, r2
 80236c0:	931f      	str	r3, [sp, #124]	; 0x7c
 80236c2:	9a22      	ldr	r2, [sp, #136]	; 0x88
 80236c4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80236c6:	4413      	add	r3, r2
 80236c8:	9320      	str	r3, [sp, #128]	; 0x80
 80236ca:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80236cc:	3b01      	subs	r3, #1
 80236ce:	9311      	str	r3, [sp, #68]	; 0x44
 80236d0:	e6db      	b.n	802348a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 80236d2:	b149      	cbz	r1, 80236e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 80236d4:	5cb2      	ldrb	r2, [r6, r2]
 80236d6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80236da:	4422      	add	r2, r4
 80236dc:	4628      	mov	r0, r5
 80236de:	462f      	mov	r7, r5
 80236e0:	e771      	b.n	80235c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 80236e2:	4628      	mov	r0, r5
 80236e4:	462a      	mov	r2, r5
 80236e6:	e76e      	b.n	80235c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 80236e8:	4628      	mov	r0, r5
 80236ea:	462a      	mov	r2, r5
 80236ec:	e7f7      	b.n	80236de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80236ee:	b015      	add	sp, #84	; 0x54
 80236f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080236f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 80236f4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80236f8:	880f      	ldrh	r7, [r1, #0]
 80236fa:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 80236fe:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 8023702:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 8023706:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 802370a:	023c      	lsls	r4, r7, #8
 802370c:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 8023710:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 8023714:	017c      	lsls	r4, r7, #5
 8023716:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 802371a:	00ff      	lsls	r7, r7, #3
 802371c:	ea4b 0404 	orr.w	r4, fp, r4
 8023720:	b2ff      	uxtb	r7, r7
 8023722:	fb05 ca0e 	mla	sl, r5, lr, ip
 8023726:	4327      	orrs	r7, r4
 8023728:	2d00      	cmp	r5, #0
 802372a:	eb02 080a 	add.w	r8, r2, sl
 802372e:	9701      	str	r7, [sp, #4]
 8023730:	db7e      	blt.n	8023830 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 8023732:	45a9      	cmp	r9, r5
 8023734:	dd7c      	ble.n	8023830 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 8023736:	f1bc 0f00 	cmp.w	ip, #0
 802373a:	db77      	blt.n	802382c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 802373c:	45e6      	cmp	lr, ip
 802373e:	dd75      	ble.n	802382c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8023740:	f812 700a 	ldrb.w	r7, [r2, sl]
 8023744:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8023748:	441f      	add	r7, r3
 802374a:	f11c 0201 	adds.w	r2, ip, #1
 802374e:	d472      	bmi.n	8023836 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8023750:	4596      	cmp	lr, r2
 8023752:	dd70      	ble.n	8023836 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8023754:	2800      	cmp	r0, #0
 8023756:	d06e      	beq.n	8023836 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8023758:	f898 4001 	ldrb.w	r4, [r8, #1]
 802375c:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8023760:	441c      	add	r4, r3
 8023762:	3501      	adds	r5, #1
 8023764:	d46b      	bmi.n	802383e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8023766:	45a9      	cmp	r9, r5
 8023768:	dd69      	ble.n	802383e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 802376a:	2e00      	cmp	r6, #0
 802376c:	d067      	beq.n	802383e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 802376e:	f1bc 0f00 	cmp.w	ip, #0
 8023772:	db62      	blt.n	802383a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8023774:	45e6      	cmp	lr, ip
 8023776:	dd60      	ble.n	802383a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8023778:	f818 500e 	ldrb.w	r5, [r8, lr]
 802377c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8023780:	441d      	add	r5, r3
 8023782:	f11c 0201 	adds.w	r2, ip, #1
 8023786:	d45d      	bmi.n	8023844 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8023788:	4596      	cmp	lr, r2
 802378a:	dd5b      	ble.n	8023844 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 802378c:	2800      	cmp	r0, #0
 802378e:	d059      	beq.n	8023844 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8023790:	44c6      	add	lr, r8
 8023792:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8023796:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802379a:	4413      	add	r3, r2
 802379c:	b280      	uxth	r0, r0
 802379e:	b2b2      	uxth	r2, r6
 80237a0:	fb00 f602 	mul.w	r6, r0, r2
 80237a4:	0100      	lsls	r0, r0, #4
 80237a6:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 80237aa:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 80237ae:	1b80      	subs	r0, r0, r6
 80237b0:	fa1f fc82 	uxth.w	ip, r2
 80237b4:	b282      	uxth	r2, r0
 80237b6:	78a0      	ldrb	r0, [r4, #2]
 80237b8:	f897 e002 	ldrb.w	lr, [r7, #2]
 80237bc:	f897 9000 	ldrb.w	r9, [r7]
 80237c0:	787f      	ldrb	r7, [r7, #1]
 80237c2:	eba8 080c 	sub.w	r8, r8, ip
 80237c6:	fa1f f888 	uxth.w	r8, r8
 80237ca:	4350      	muls	r0, r2
 80237cc:	fb08 0e0e 	mla	lr, r8, lr, r0
 80237d0:	78a8      	ldrb	r0, [r5, #2]
 80237d2:	fb0c e000 	mla	r0, ip, r0, lr
 80237d6:	f893 e002 	ldrb.w	lr, [r3, #2]
 80237da:	fb06 0e0e 	mla	lr, r6, lr, r0
 80237de:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 80237e2:	f894 e000 	ldrb.w	lr, [r4]
 80237e6:	fb02 fe0e 	mul.w	lr, r2, lr
 80237ea:	fb08 e909 	mla	r9, r8, r9, lr
 80237ee:	f895 e000 	ldrb.w	lr, [r5]
 80237f2:	fb0c 990e 	mla	r9, ip, lr, r9
 80237f6:	f893 e000 	ldrb.w	lr, [r3]
 80237fa:	785b      	ldrb	r3, [r3, #1]
 80237fc:	fb06 9e0e 	mla	lr, r6, lr, r9
 8023800:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8023804:	ea4e 0e00 	orr.w	lr, lr, r0
 8023808:	7860      	ldrb	r0, [r4, #1]
 802380a:	4350      	muls	r0, r2
 802380c:	786a      	ldrb	r2, [r5, #1]
 802380e:	fb08 0007 	mla	r0, r8, r7, r0
 8023812:	fb0c 0202 	mla	r2, ip, r2, r0
 8023816:	fb06 2303 	mla	r3, r6, r3, r2
 802381a:	095b      	lsrs	r3, r3, #5
 802381c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023820:	ea4e 0303 	orr.w	r3, lr, r3
 8023824:	800b      	strh	r3, [r1, #0]
 8023826:	b003      	add	sp, #12
 8023828:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802382c:	af01      	add	r7, sp, #4
 802382e:	e78c      	b.n	802374a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 8023830:	ac01      	add	r4, sp, #4
 8023832:	4627      	mov	r7, r4
 8023834:	e795      	b.n	8023762 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8023836:	ac01      	add	r4, sp, #4
 8023838:	e793      	b.n	8023762 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 802383a:	ad01      	add	r5, sp, #4
 802383c:	e7a1      	b.n	8023782 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 802383e:	ab01      	add	r3, sp, #4
 8023840:	461d      	mov	r5, r3
 8023842:	e7ab      	b.n	802379c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 8023844:	ab01      	add	r3, sp, #4
 8023846:	e7a9      	b.n	802379c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

08023848 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023848:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802384c:	b08f      	sub	sp, #60	; 0x3c
 802384e:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 8023852:	920c      	str	r2, [sp, #48]	; 0x30
 8023854:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8023856:	910a      	str	r1, [sp, #40]	; 0x28
 8023858:	9306      	str	r3, [sp, #24]
 802385a:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 802385e:	900d      	str	r0, [sp, #52]	; 0x34
 8023860:	6850      	ldr	r0, [r2, #4]
 8023862:	6812      	ldr	r2, [r2, #0]
 8023864:	fb00 1303 	mla	r3, r0, r3, r1
 8023868:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802386c:	9307      	str	r3, [sp, #28]
 802386e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023870:	681b      	ldr	r3, [r3, #0]
 8023872:	9308      	str	r3, [sp, #32]
 8023874:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023876:	685c      	ldr	r4, [r3, #4]
 8023878:	3404      	adds	r4, #4
 802387a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802387c:	2b00      	cmp	r3, #0
 802387e:	dc03      	bgt.n	8023888 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8023880:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8023882:	2b00      	cmp	r3, #0
 8023884:	f340 81d6 	ble.w	8023c34 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8023888:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802388a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802388e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023892:	1e48      	subs	r0, r1, #1
 8023894:	1e56      	subs	r6, r2, #1
 8023896:	9b06      	ldr	r3, [sp, #24]
 8023898:	2b00      	cmp	r3, #0
 802389a:	f340 80b7 	ble.w	8023a0c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 802389e:	ea5f 472b 	movs.w	r7, fp, asr #16
 80238a2:	ea4f 4325 	mov.w	r3, r5, asr #16
 80238a6:	d406      	bmi.n	80238b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80238a8:	4287      	cmp	r7, r0
 80238aa:	da04      	bge.n	80238b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80238ac:	2b00      	cmp	r3, #0
 80238ae:	db02      	blt.n	80238b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80238b0:	42b3      	cmp	r3, r6
 80238b2:	f2c0 80ac 	blt.w	8023a0e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 80238b6:	3701      	adds	r7, #1
 80238b8:	f100 809d 	bmi.w	80239f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 80238bc:	42b9      	cmp	r1, r7
 80238be:	f2c0 809a 	blt.w	80239f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 80238c2:	3301      	adds	r3, #1
 80238c4:	f100 8097 	bmi.w	80239f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 80238c8:	429a      	cmp	r2, r3
 80238ca:	f2c0 8094 	blt.w	80239f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 80238ce:	9b06      	ldr	r3, [sp, #24]
 80238d0:	930b      	str	r3, [sp, #44]	; 0x2c
 80238d2:	9b07      	ldr	r3, [sp, #28]
 80238d4:	9309      	str	r3, [sp, #36]	; 0x24
 80238d6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80238d8:	2b00      	cmp	r3, #0
 80238da:	f340 80b5 	ble.w	8023a48 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80238de:	9820      	ldr	r0, [sp, #128]	; 0x80
 80238e0:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80238e2:	68c7      	ldr	r7, [r0, #12]
 80238e4:	6892      	ldr	r2, [r2, #8]
 80238e6:	ea5f 402b 	movs.w	r0, fp, asr #16
 80238ea:	ea4f 4625 	mov.w	r6, r5, asr #16
 80238ee:	f3cb 3303 	ubfx	r3, fp, #12, #4
 80238f2:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80238f6:	f100 80fb 	bmi.w	8023af0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 80238fa:	f102 3cff 	add.w	ip, r2, #4294967295
 80238fe:	4560      	cmp	r0, ip
 8023900:	f280 80f6 	bge.w	8023af0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8023904:	2e00      	cmp	r6, #0
 8023906:	f2c0 80f3 	blt.w	8023af0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 802390a:	f107 3cff 	add.w	ip, r7, #4294967295
 802390e:	4566      	cmp	r6, ip
 8023910:	f280 80ee 	bge.w	8023af0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8023914:	b212      	sxth	r2, r2
 8023916:	fb06 0002 	mla	r0, r6, r2, r0
 802391a:	9e08      	ldr	r6, [sp, #32]
 802391c:	1837      	adds	r7, r6, r0
 802391e:	5c30      	ldrb	r0, [r6, r0]
 8023920:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 8023924:	eb04 0c08 	add.w	ip, r4, r8
 8023928:	2b00      	cmp	r3, #0
 802392a:	f000 80d3 	beq.w	8023ad4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 802392e:	787e      	ldrb	r6, [r7, #1]
 8023930:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8023934:	4426      	add	r6, r4
 8023936:	2900      	cmp	r1, #0
 8023938:	f000 80d4 	beq.w	8023ae4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 802393c:	18b8      	adds	r0, r7, r2
 802393e:	5cba      	ldrb	r2, [r7, r2]
 8023940:	7840      	ldrb	r0, [r0, #1]
 8023942:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8023946:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802394a:	4422      	add	r2, r4
 802394c:	4420      	add	r0, r4
 802394e:	b29b      	uxth	r3, r3
 8023950:	b289      	uxth	r1, r1
 8023952:	fb03 f901 	mul.w	r9, r3, r1
 8023956:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 802395a:	011b      	lsls	r3, r3, #4
 802395c:	b289      	uxth	r1, r1
 802395e:	78b7      	ldrb	r7, [r6, #2]
 8023960:	f89c a002 	ldrb.w	sl, [ip, #2]
 8023964:	f89c c001 	ldrb.w	ip, [ip, #1]
 8023968:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 802396c:	eba3 0309 	sub.w	r3, r3, r9
 8023970:	b29b      	uxth	r3, r3
 8023972:	ebae 0e01 	sub.w	lr, lr, r1
 8023976:	fa1f fe8e 	uxth.w	lr, lr
 802397a:	435f      	muls	r7, r3
 802397c:	fb0e 770a 	mla	r7, lr, sl, r7
 8023980:	f892 a002 	ldrb.w	sl, [r2, #2]
 8023984:	fb01 770a 	mla	r7, r1, sl, r7
 8023988:	f890 a002 	ldrb.w	sl, [r0, #2]
 802398c:	fb09 7a0a 	mla	sl, r9, sl, r7
 8023990:	f814 7008 	ldrb.w	r7, [r4, r8]
 8023994:	f896 8000 	ldrb.w	r8, [r6]
 8023998:	7876      	ldrb	r6, [r6, #1]
 802399a:	fb03 f808 	mul.w	r8, r3, r8
 802399e:	fb0e 8807 	mla	r8, lr, r7, r8
 80239a2:	7817      	ldrb	r7, [r2, #0]
 80239a4:	fb01 8807 	mla	r8, r1, r7, r8
 80239a8:	7807      	ldrb	r7, [r0, #0]
 80239aa:	fb09 8707 	mla	r7, r9, r7, r8
 80239ae:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 80239b2:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80239b6:	ea47 070a 	orr.w	r7, r7, sl
 80239ba:	4373      	muls	r3, r6
 80239bc:	f892 a001 	ldrb.w	sl, [r2, #1]
 80239c0:	fb0e 330c 	mla	r3, lr, ip, r3
 80239c4:	fb01 310a 	mla	r1, r1, sl, r3
 80239c8:	f890 a001 	ldrb.w	sl, [r0, #1]
 80239cc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80239ce:	fb09 1a0a 	mla	sl, r9, sl, r1
 80239d2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80239d6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80239da:	ea47 070a 	orr.w	r7, r7, sl
 80239de:	801f      	strh	r7, [r3, #0]
 80239e0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80239e2:	3302      	adds	r3, #2
 80239e4:	9309      	str	r3, [sp, #36]	; 0x24
 80239e6:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80239e8:	449b      	add	fp, r3
 80239ea:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80239ec:	441d      	add	r5, r3
 80239ee:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80239f0:	3b01      	subs	r3, #1
 80239f2:	930b      	str	r3, [sp, #44]	; 0x2c
 80239f4:	e76f      	b.n	80238d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80239f6:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80239f8:	449b      	add	fp, r3
 80239fa:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80239fc:	441d      	add	r5, r3
 80239fe:	9b06      	ldr	r3, [sp, #24]
 8023a00:	3b01      	subs	r3, #1
 8023a02:	9306      	str	r3, [sp, #24]
 8023a04:	9b07      	ldr	r3, [sp, #28]
 8023a06:	3302      	adds	r3, #2
 8023a08:	9307      	str	r3, [sp, #28]
 8023a0a:	e744      	b.n	8023896 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 8023a0c:	d023      	beq.n	8023a56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8023a0e:	9b06      	ldr	r3, [sp, #24]
 8023a10:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8023a12:	3b01      	subs	r3, #1
 8023a14:	fb00 b003 	mla	r0, r0, r3, fp
 8023a18:	1400      	asrs	r0, r0, #16
 8023a1a:	f53f af58 	bmi.w	80238ce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8023a1e:	3901      	subs	r1, #1
 8023a20:	4288      	cmp	r0, r1
 8023a22:	f6bf af54 	bge.w	80238ce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8023a26:	991c      	ldr	r1, [sp, #112]	; 0x70
 8023a28:	fb01 5303 	mla	r3, r1, r3, r5
 8023a2c:	141b      	asrs	r3, r3, #16
 8023a2e:	f53f af4e 	bmi.w	80238ce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8023a32:	3a01      	subs	r2, #1
 8023a34:	4293      	cmp	r3, r2
 8023a36:	f6bf af4a 	bge.w	80238ce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8023a3a:	9b06      	ldr	r3, [sp, #24]
 8023a3c:	9309      	str	r3, [sp, #36]	; 0x24
 8023a3e:	9b07      	ldr	r3, [sp, #28]
 8023a40:	930b      	str	r3, [sp, #44]	; 0x2c
 8023a42:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023a44:	2b00      	cmp	r3, #0
 8023a46:	dc70      	bgt.n	8023b2a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 8023a48:	9b06      	ldr	r3, [sp, #24]
 8023a4a:	9a07      	ldr	r2, [sp, #28]
 8023a4c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8023a50:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8023a54:	9307      	str	r3, [sp, #28]
 8023a56:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023a58:	2b00      	cmp	r3, #0
 8023a5a:	f340 80eb 	ble.w	8023c34 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8023a5e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023a62:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8023a66:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023a6a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8023a6c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023a70:	ee31 1a05 	vadd.f32	s2, s2, s10
 8023a74:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023a78:	eef0 6a62 	vmov.f32	s13, s5
 8023a7c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023a80:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023a84:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023a88:	ee16 ba90 	vmov	fp, s13
 8023a8c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023a90:	eef0 6a43 	vmov.f32	s13, s6
 8023a94:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8023a98:	ee12 2a90 	vmov	r2, s5
 8023a9c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023aa0:	fb92 f3f3 	sdiv	r3, r2, r3
 8023aa4:	ee13 2a10 	vmov	r2, s6
 8023aa8:	931b      	str	r3, [sp, #108]	; 0x6c
 8023aaa:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8023aac:	fb92 f3f3 	sdiv	r3, r2, r3
 8023ab0:	931c      	str	r3, [sp, #112]	; 0x70
 8023ab2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023ab4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8023ab6:	3b01      	subs	r3, #1
 8023ab8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023abc:	930a      	str	r3, [sp, #40]	; 0x28
 8023abe:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8023ac0:	bf08      	it	eq
 8023ac2:	4613      	moveq	r3, r2
 8023ac4:	ee16 5a90 	vmov	r5, s13
 8023ac8:	9306      	str	r3, [sp, #24]
 8023aca:	eeb0 3a67 	vmov.f32	s6, s15
 8023ace:	eef0 2a47 	vmov.f32	s5, s14
 8023ad2:	e6d2      	b.n	802387a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8023ad4:	b149      	cbz	r1, 8023aea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8023ad6:	5cba      	ldrb	r2, [r7, r2]
 8023ad8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8023adc:	4422      	add	r2, r4
 8023ade:	4660      	mov	r0, ip
 8023ae0:	4666      	mov	r6, ip
 8023ae2:	e734      	b.n	802394e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8023ae4:	4660      	mov	r0, ip
 8023ae6:	4662      	mov	r2, ip
 8023ae8:	e731      	b.n	802394e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8023aea:	4660      	mov	r0, ip
 8023aec:	4662      	mov	r2, ip
 8023aee:	e7f7      	b.n	8023ae0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 8023af0:	f110 0c01 	adds.w	ip, r0, #1
 8023af4:	f53f af74 	bmi.w	80239e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8023af8:	4562      	cmp	r2, ip
 8023afa:	f6ff af71 	blt.w	80239e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8023afe:	f116 0c01 	adds.w	ip, r6, #1
 8023b02:	f53f af6d 	bmi.w	80239e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8023b06:	4567      	cmp	r7, ip
 8023b08:	f6ff af6a 	blt.w	80239e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8023b0c:	b23f      	sxth	r7, r7
 8023b0e:	b212      	sxth	r2, r2
 8023b10:	e9cd 3104 	strd	r3, r1, [sp, #16]
 8023b14:	e9cd 0602 	strd	r0, r6, [sp, #8]
 8023b18:	9200      	str	r2, [sp, #0]
 8023b1a:	9701      	str	r7, [sp, #4]
 8023b1c:	4623      	mov	r3, r4
 8023b1e:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8023b22:	980d      	ldr	r0, [sp, #52]	; 0x34
 8023b24:	f7ff fde6 	bl	80236f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 8023b28:	e75a      	b.n	80239e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8023b2a:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8023b2c:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8023b30:	ea4f 462b 	mov.w	r6, fp, asr #16
 8023b34:	1428      	asrs	r0, r5, #16
 8023b36:	fb02 6000 	mla	r0, r2, r0, r6
 8023b3a:	9e08      	ldr	r6, [sp, #32]
 8023b3c:	f816 8000 	ldrb.w	r8, [r6, r0]
 8023b40:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8023b44:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8023b48:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8023b4c:	1837      	adds	r7, r6, r0
 8023b4e:	eb04 0c08 	add.w	ip, r4, r8
 8023b52:	2b00      	cmp	r3, #0
 8023b54:	d060      	beq.n	8023c18 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 8023b56:	787e      	ldrb	r6, [r7, #1]
 8023b58:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8023b5c:	4426      	add	r6, r4
 8023b5e:	2900      	cmp	r1, #0
 8023b60:	d062      	beq.n	8023c28 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 8023b62:	18b8      	adds	r0, r7, r2
 8023b64:	5cba      	ldrb	r2, [r7, r2]
 8023b66:	7840      	ldrb	r0, [r0, #1]
 8023b68:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8023b6c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8023b70:	4422      	add	r2, r4
 8023b72:	4420      	add	r0, r4
 8023b74:	b29b      	uxth	r3, r3
 8023b76:	b289      	uxth	r1, r1
 8023b78:	fb03 f901 	mul.w	r9, r3, r1
 8023b7c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8023b80:	011b      	lsls	r3, r3, #4
 8023b82:	b289      	uxth	r1, r1
 8023b84:	78b7      	ldrb	r7, [r6, #2]
 8023b86:	f89c a002 	ldrb.w	sl, [ip, #2]
 8023b8a:	f89c c001 	ldrb.w	ip, [ip, #1]
 8023b8e:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8023b92:	eba3 0309 	sub.w	r3, r3, r9
 8023b96:	b29b      	uxth	r3, r3
 8023b98:	ebae 0e01 	sub.w	lr, lr, r1
 8023b9c:	fa1f fe8e 	uxth.w	lr, lr
 8023ba0:	435f      	muls	r7, r3
 8023ba2:	fb0e 770a 	mla	r7, lr, sl, r7
 8023ba6:	f892 a002 	ldrb.w	sl, [r2, #2]
 8023baa:	fb01 770a 	mla	r7, r1, sl, r7
 8023bae:	f890 a002 	ldrb.w	sl, [r0, #2]
 8023bb2:	fb09 7a0a 	mla	sl, r9, sl, r7
 8023bb6:	f814 7008 	ldrb.w	r7, [r4, r8]
 8023bba:	f896 8000 	ldrb.w	r8, [r6]
 8023bbe:	7876      	ldrb	r6, [r6, #1]
 8023bc0:	fb03 f808 	mul.w	r8, r3, r8
 8023bc4:	fb0e 8807 	mla	r8, lr, r7, r8
 8023bc8:	7817      	ldrb	r7, [r2, #0]
 8023bca:	fb01 8807 	mla	r8, r1, r7, r8
 8023bce:	7807      	ldrb	r7, [r0, #0]
 8023bd0:	fb09 8707 	mla	r7, r9, r7, r8
 8023bd4:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8023bd8:	4373      	muls	r3, r6
 8023bda:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8023bde:	7856      	ldrb	r6, [r2, #1]
 8023be0:	ea47 070a 	orr.w	r7, r7, sl
 8023be4:	fb0e 330c 	mla	r3, lr, ip, r3
 8023be8:	f890 a001 	ldrb.w	sl, [r0, #1]
 8023bec:	fb01 3306 	mla	r3, r1, r6, r3
 8023bf0:	fb09 3a0a 	mla	sl, r9, sl, r3
 8023bf4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8023bf8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8023bfa:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8023bfe:	ea47 070a 	orr.w	r7, r7, sl
 8023c02:	f823 7b02 	strh.w	r7, [r3], #2
 8023c06:	930b      	str	r3, [sp, #44]	; 0x2c
 8023c08:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8023c0a:	449b      	add	fp, r3
 8023c0c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023c0e:	441d      	add	r5, r3
 8023c10:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023c12:	3b01      	subs	r3, #1
 8023c14:	9309      	str	r3, [sp, #36]	; 0x24
 8023c16:	e714      	b.n	8023a42 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8023c18:	b149      	cbz	r1, 8023c2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8023c1a:	5cba      	ldrb	r2, [r7, r2]
 8023c1c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8023c20:	4422      	add	r2, r4
 8023c22:	4660      	mov	r0, ip
 8023c24:	4666      	mov	r6, ip
 8023c26:	e7a5      	b.n	8023b74 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8023c28:	4660      	mov	r0, ip
 8023c2a:	4662      	mov	r2, ip
 8023c2c:	e7a2      	b.n	8023b74 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8023c2e:	4660      	mov	r0, ip
 8023c30:	4662      	mov	r2, ip
 8023c32:	e7f7      	b.n	8023c24 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 8023c34:	b00f      	add	sp, #60	; 0x3c
 8023c36:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08023c3a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 8023c3a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023c3e:	b085      	sub	sp, #20
 8023c40:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 8023c44:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8023c48:	9102      	str	r1, [sp, #8]
 8023c4a:	2c00      	cmp	r4, #0
 8023c4c:	fb04 710c 	mla	r1, r4, ip, r7
 8023c50:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8023c54:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 8023c58:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 8023c5c:	eb02 0e01 	add.w	lr, r2, r1
 8023c60:	f2c0 8122 	blt.w	8023ea8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 8023c64:	45a0      	cmp	r8, r4
 8023c66:	f340 811f 	ble.w	8023ea8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 8023c6a:	2f00      	cmp	r7, #0
 8023c6c:	f2c0 811a 	blt.w	8023ea4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 8023c70:	45bc      	cmp	ip, r7
 8023c72:	f340 8117 	ble.w	8023ea4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 8023c76:	5c52      	ldrb	r2, [r2, r1]
 8023c78:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8023c7c:	1c7a      	adds	r2, r7, #1
 8023c7e:	f100 8116 	bmi.w	8023eae <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 8023c82:	4594      	cmp	ip, r2
 8023c84:	f340 8113 	ble.w	8023eae <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 8023c88:	2e00      	cmp	r6, #0
 8023c8a:	f000 8112 	beq.w	8023eb2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 8023c8e:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8023c92:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8023c96:	3401      	adds	r4, #1
 8023c98:	f100 810f 	bmi.w	8023eba <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 8023c9c:	45a0      	cmp	r8, r4
 8023c9e:	f340 810c 	ble.w	8023eba <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 8023ca2:	2800      	cmp	r0, #0
 8023ca4:	f000 810c 	beq.w	8023ec0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 8023ca8:	2f00      	cmp	r7, #0
 8023caa:	f2c0 8104 	blt.w	8023eb6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8023cae:	45bc      	cmp	ip, r7
 8023cb0:	f340 8101 	ble.w	8023eb6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8023cb4:	f81e 200c 	ldrb.w	r2, [lr, ip]
 8023cb8:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 8023cbc:	3701      	adds	r7, #1
 8023cbe:	f100 8102 	bmi.w	8023ec6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8023cc2:	45bc      	cmp	ip, r7
 8023cc4:	f340 80ff 	ble.w	8023ec6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8023cc8:	2e00      	cmp	r6, #0
 8023cca:	f000 80fe 	beq.w	8023eca <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 8023cce:	44f4      	add	ip, lr
 8023cd0:	f89c 2001 	ldrb.w	r2, [ip, #1]
 8023cd4:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8023cd8:	b2b6      	uxth	r6, r6
 8023cda:	b280      	uxth	r0, r0
 8023cdc:	fb00 fe06 	mul.w	lr, r0, r6
 8023ce0:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8023ce4:	0136      	lsls	r6, r6, #4
 8023ce6:	eba6 070e 	sub.w	r7, r6, lr
 8023cea:	b280      	uxth	r0, r0
 8023cec:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8023cf0:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8023cf4:	b2bf      	uxth	r7, r7
 8023cf6:	1a1b      	subs	r3, r3, r0
 8023cf8:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8023cfc:	b29b      	uxth	r3, r3
 8023cfe:	fb0a f607 	mul.w	r6, sl, r7
 8023d02:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8023d06:	fb0b 6603 	mla	r6, fp, r3, r6
 8023d0a:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8023d0e:	fb00 6609 	mla	r6, r0, r9, r6
 8023d12:	fb0e 6608 	mla	r6, lr, r8, r6
 8023d16:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8023d1a:	9600      	str	r6, [sp, #0]
 8023d1c:	2e00      	cmp	r6, #0
 8023d1e:	f000 80be 	beq.w	8023e9e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 8023d22:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8023d26:	fb0b fc0c 	mul.w	ip, fp, ip
 8023d2a:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8023d2e:	fb0b f505 	mul.w	r5, fp, r5
 8023d32:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8023d36:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8023d3a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8023d3e:	44dc      	add	ip, fp
 8023d40:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023d44:	9501      	str	r5, [sp, #4]
 8023d46:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8023d4a:	9503      	str	r5, [sp, #12]
 8023d4c:	9d01      	ldr	r5, [sp, #4]
 8023d4e:	9e02      	ldr	r6, [sp, #8]
 8023d50:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8023d54:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8023d58:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8023d5c:	fb0a fc0c 	mul.w	ip, sl, ip
 8023d60:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8023d64:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8023d68:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8023d6c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8023d70:	4465      	add	r5, ip
 8023d72:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8023d76:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8023d7a:	fb09 fc0c 	mul.w	ip, r9, ip
 8023d7e:	fb09 f904 	mul.w	r9, r9, r4
 8023d82:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8023d86:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8023d8a:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8023d8e:	fb08 f404 	mul.w	r4, r8, r4
 8023d92:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8023d96:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8023d9a:	fb08 f802 	mul.w	r8, r8, r2
 8023d9e:	fb0a fa01 	mul.w	sl, sl, r1
 8023da2:	0a22      	lsrs	r2, r4, #8
 8023da4:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8023da8:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8023dac:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8023db0:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8023db4:	4414      	add	r4, r2
 8023db6:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8023dba:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8023dbe:	0a2d      	lsrs	r5, r5, #8
 8023dc0:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8023dc4:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8023dc8:	9a03      	ldr	r2, [sp, #12]
 8023dca:	8836      	ldrh	r6, [r6, #0]
 8023dcc:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8023dd0:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8023dd4:	437d      	muls	r5, r7
 8023dd6:	4461      	add	r1, ip
 8023dd8:	0a24      	lsrs	r4, r4, #8
 8023dda:	fb02 5503 	mla	r5, r2, r3, r5
 8023dde:	0a09      	lsrs	r1, r1, #8
 8023de0:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8023de4:	fb04 540e 	mla	r4, r4, lr, r5
 8023de8:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8023dec:	fb01 4100 	mla	r1, r1, r0, r4
 8023df0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023df4:	0a09      	lsrs	r1, r1, #8
 8023df6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023dfa:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8023dfe:	fb07 f70a 	mul.w	r7, r7, sl
 8023e02:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8023e06:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8023e0a:	fb03 7101 	mla	r1, r3, r1, r7
 8023e0e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023e12:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8023e16:	fb0e 1e08 	mla	lr, lr, r8, r1
 8023e1a:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8023e1e:	fb00 e101 	mla	r1, r0, r1, lr
 8023e22:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 8023e26:	9a00      	ldr	r2, [sp, #0]
 8023e28:	b287      	uxth	r7, r0
 8023e2a:	437a      	muls	r2, r7
 8023e2c:	0a09      	lsrs	r1, r1, #8
 8023e2e:	1c53      	adds	r3, r2, #1
 8023e30:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8023e34:	4321      	orrs	r1, r4
 8023e36:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8023e3a:	1235      	asrs	r5, r6, #8
 8023e3c:	0c0a      	lsrs	r2, r1, #16
 8023e3e:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8023e42:	b2db      	uxtb	r3, r3
 8023e44:	fb12 f207 	smulbb	r2, r2, r7
 8023e48:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8023e4c:	fb05 2503 	mla	r5, r5, r3, r2
 8023e50:	f3c1 2407 	ubfx	r4, r1, #8, #8
 8023e54:	10f2      	asrs	r2, r6, #3
 8023e56:	b2c8      	uxtb	r0, r1
 8023e58:	00f6      	lsls	r6, r6, #3
 8023e5a:	fb14 f407 	smulbb	r4, r4, r7
 8023e5e:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8023e62:	b2f6      	uxtb	r6, r6
 8023e64:	fb10 f007 	smulbb	r0, r0, r7
 8023e68:	fb02 4203 	mla	r2, r2, r3, r4
 8023e6c:	b2ad      	uxth	r5, r5
 8023e6e:	fb06 0303 	mla	r3, r6, r3, r0
 8023e72:	b299      	uxth	r1, r3
 8023e74:	b294      	uxth	r4, r2
 8023e76:	1c6b      	adds	r3, r5, #1
 8023e78:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8023e7c:	1c62      	adds	r2, r4, #1
 8023e7e:	1c4b      	adds	r3, r1, #1
 8023e80:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8023e84:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8023e88:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8023e8c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8023e90:	0952      	lsrs	r2, r2, #5
 8023e92:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023e96:	432b      	orrs	r3, r5
 8023e98:	4313      	orrs	r3, r2
 8023e9a:	9a02      	ldr	r2, [sp, #8]
 8023e9c:	8013      	strh	r3, [r2, #0]
 8023e9e:	b005      	add	sp, #20
 8023ea0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023ea4:	2500      	movs	r5, #0
 8023ea6:	e6e9      	b.n	8023c7c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 8023ea8:	2100      	movs	r1, #0
 8023eaa:	460d      	mov	r5, r1
 8023eac:	e6f3      	b.n	8023c96 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8023eae:	2100      	movs	r1, #0
 8023eb0:	e6f1      	b.n	8023c96 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8023eb2:	4631      	mov	r1, r6
 8023eb4:	e6ef      	b.n	8023c96 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8023eb6:	2400      	movs	r4, #0
 8023eb8:	e700      	b.n	8023cbc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 8023eba:	2200      	movs	r2, #0
 8023ebc:	4614      	mov	r4, r2
 8023ebe:	e70b      	b.n	8023cd8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8023ec0:	4602      	mov	r2, r0
 8023ec2:	4604      	mov	r4, r0
 8023ec4:	e708      	b.n	8023cd8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8023ec6:	2200      	movs	r2, #0
 8023ec8:	e706      	b.n	8023cd8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8023eca:	4632      	mov	r2, r6
 8023ecc:	e704      	b.n	8023cd8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

08023ece <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023ece:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023ed2:	b09f      	sub	sp, #124	; 0x7c
 8023ed4:	921b      	str	r2, [sp, #108]	; 0x6c
 8023ed6:	9309      	str	r3, [sp, #36]	; 0x24
 8023ed8:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8023eda:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 8023ede:	931c      	str	r3, [sp, #112]	; 0x70
 8023ee0:	9119      	str	r1, [sp, #100]	; 0x64
 8023ee2:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8023ee6:	901d      	str	r0, [sp, #116]	; 0x74
 8023ee8:	6850      	ldr	r0, [r2, #4]
 8023eea:	6812      	ldr	r2, [r2, #0]
 8023eec:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 8023eee:	fb00 1303 	mla	r3, r0, r3, r1
 8023ef2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8023ef6:	930c      	str	r3, [sp, #48]	; 0x30
 8023ef8:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8023efa:	681b      	ldr	r3, [r3, #0]
 8023efc:	9312      	str	r3, [sp, #72]	; 0x48
 8023efe:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8023f00:	685e      	ldr	r6, [r3, #4]
 8023f02:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 8023f06:	930d      	str	r3, [sp, #52]	; 0x34
 8023f08:	3604      	adds	r6, #4
 8023f0a:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8023f0c:	2b00      	cmp	r3, #0
 8023f0e:	dc03      	bgt.n	8023f18 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8023f10:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8023f12:	2b00      	cmp	r3, #0
 8023f14:	f340 8388 	ble.w	8024628 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 8023f18:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8023f1a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023f1e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023f22:	1e48      	subs	r0, r1, #1
 8023f24:	1e57      	subs	r7, r2, #1
 8023f26:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023f28:	2b00      	cmp	r3, #0
 8023f2a:	f340 8195 	ble.w	8024258 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8023f2e:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8023f30:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8023f34:	ea4f 4325 	mov.w	r3, r5, asr #16
 8023f38:	d406      	bmi.n	8023f48 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8023f3a:	4584      	cmp	ip, r0
 8023f3c:	da04      	bge.n	8023f48 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8023f3e:	2b00      	cmp	r3, #0
 8023f40:	db02      	blt.n	8023f48 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8023f42:	42bb      	cmp	r3, r7
 8023f44:	f2c0 8189 	blt.w	802425a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 8023f48:	f11c 0c01 	adds.w	ip, ip, #1
 8023f4c:	f100 8177 	bmi.w	802423e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8023f50:	4561      	cmp	r1, ip
 8023f52:	f2c0 8174 	blt.w	802423e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8023f56:	3301      	adds	r3, #1
 8023f58:	f100 8171 	bmi.w	802423e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8023f5c:	429a      	cmp	r2, r3
 8023f5e:	f2c0 816e 	blt.w	802423e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8023f62:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023f64:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8023f66:	931a      	str	r3, [sp, #104]	; 0x68
 8023f68:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8023f6a:	2b00      	cmp	r3, #0
 8023f6c:	f340 8193 	ble.w	8024296 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 8023f70:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8023f72:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8023f76:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8023f78:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 8023f7c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8023f7e:	141b      	asrs	r3, r3, #16
 8023f80:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8023f84:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8023f88:	f100 81d6 	bmi.w	8024338 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8023f8c:	f100 38ff 	add.w	r8, r0, #4294967295
 8023f90:	4543      	cmp	r3, r8
 8023f92:	f280 81d1 	bge.w	8024338 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8023f96:	f1bc 0f00 	cmp.w	ip, #0
 8023f9a:	f2c0 81cd 	blt.w	8024338 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8023f9e:	f10e 38ff 	add.w	r8, lr, #4294967295
 8023fa2:	45c4      	cmp	ip, r8
 8023fa4:	f280 81c8 	bge.w	8024338 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8023fa8:	b200      	sxth	r0, r0
 8023faa:	fb0c 3300 	mla	r3, ip, r0, r3
 8023fae:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8023fb0:	eb04 0803 	add.w	r8, r4, r3
 8023fb4:	5ce3      	ldrb	r3, [r4, r3]
 8023fb6:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8023fba:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8023fbe:	2a00      	cmp	r2, #0
 8023fc0:	f000 81af 	beq.w	8024322 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8023fc4:	f898 c001 	ldrb.w	ip, [r8, #1]
 8023fc8:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8023fcc:	940e      	str	r4, [sp, #56]	; 0x38
 8023fce:	0e24      	lsrs	r4, r4, #24
 8023fd0:	9415      	str	r4, [sp, #84]	; 0x54
 8023fd2:	b179      	cbz	r1, 8023ff4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8023fd4:	eb08 0c00 	add.w	ip, r8, r0
 8023fd8:	f818 0000 	ldrb.w	r0, [r8, r0]
 8023fdc:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8023fe0:	900a      	str	r0, [sp, #40]	; 0x28
 8023fe2:	0e00      	lsrs	r0, r0, #24
 8023fe4:	9013      	str	r0, [sp, #76]	; 0x4c
 8023fe6:	f89c 0001 	ldrb.w	r0, [ip, #1]
 8023fea:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8023fee:	900f      	str	r0, [sp, #60]	; 0x3c
 8023ff0:	0e00      	lsrs	r0, r0, #24
 8023ff2:	9016      	str	r0, [sp, #88]	; 0x58
 8023ff4:	b292      	uxth	r2, r2
 8023ff6:	b289      	uxth	r1, r1
 8023ff8:	fb02 f901 	mul.w	r9, r2, r1
 8023ffc:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8024000:	0112      	lsls	r2, r2, #4
 8024002:	eba2 0809 	sub.w	r8, r2, r9
 8024006:	b289      	uxth	r1, r1
 8024008:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 802400c:	9815      	ldr	r0, [sp, #84]	; 0x54
 802400e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8024010:	fa1f f888 	uxth.w	r8, r8
 8024014:	1a52      	subs	r2, r2, r1
 8024016:	b292      	uxth	r2, r2
 8024018:	fb08 f000 	mul.w	r0, r8, r0
 802401c:	fb02 000e 	mla	r0, r2, lr, r0
 8024020:	fb01 0004 	mla	r0, r1, r4, r0
 8024024:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8024026:	fb09 0004 	mla	r0, r9, r4, r0
 802402a:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802402e:	2800      	cmp	r0, #0
 8024030:	f000 80fa 	beq.w	8024228 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024034:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8024038:	d01b      	beq.n	8024072 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802403a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 802403e:	fb0e fa0a 	mul.w	sl, lr, sl
 8024042:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024046:	fb0e fe03 	mul.w	lr, lr, r3
 802404a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802404e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024052:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8024056:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 802405a:	4453      	add	r3, sl
 802405c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8024060:	0a1b      	lsrs	r3, r3, #8
 8024062:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024066:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802406a:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802406e:	ea43 030c 	orr.w	r3, r3, ip
 8024072:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8024074:	2cff      	cmp	r4, #255	; 0xff
 8024076:	d021      	beq.n	80240bc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8024078:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802407a:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 802407e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8024080:	fb04 fb0b 	mul.w	fp, r4, fp
 8024084:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8024086:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 802408a:	9c15      	ldr	r4, [sp, #84]	; 0x54
 802408c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024090:	fb04 fa0a 	mul.w	sl, r4, sl
 8024094:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024098:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802409c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80240a0:	44de      	add	lr, fp
 80240a2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80240a6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80240aa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80240ae:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80240b2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80240b6:	ea4e 040a 	orr.w	r4, lr, sl
 80240ba:	940e      	str	r4, [sp, #56]	; 0x38
 80240bc:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80240be:	2cff      	cmp	r4, #255	; 0xff
 80240c0:	d021      	beq.n	8024106 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 80240c2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80240c4:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80240c8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80240ca:	fb04 fb0b 	mul.w	fp, r4, fp
 80240ce:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80240d0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80240d4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80240d6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80240da:	fb04 fa0a 	mul.w	sl, r4, sl
 80240de:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80240e2:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80240e6:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80240ea:	44de      	add	lr, fp
 80240ec:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80240f0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80240f4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80240f8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80240fc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024100:	ea4e 040a 	orr.w	r4, lr, sl
 8024104:	940a      	str	r4, [sp, #40]	; 0x28
 8024106:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8024108:	2cff      	cmp	r4, #255	; 0xff
 802410a:	d021      	beq.n	8024150 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 802410c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 802410e:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8024112:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8024114:	fb04 fb0b 	mul.w	fp, r4, fp
 8024118:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 802411a:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 802411e:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8024120:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024124:	fb04 fa0a 	mul.w	sl, r4, sl
 8024128:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802412c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8024130:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024134:	44de      	add	lr, fp
 8024136:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802413a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802413e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024142:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024146:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802414a:	ea4e 040a 	orr.w	r4, lr, sl
 802414e:	940f      	str	r4, [sp, #60]	; 0x3c
 8024150:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8024152:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8024156:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8024158:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 802415c:	fb08 fc0c 	mul.w	ip, r8, ip
 8024160:	fb02 cc0e 	mla	ip, r2, lr, ip
 8024164:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8024168:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 802416a:	fb01 cc0e 	mla	ip, r1, lr, ip
 802416e:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8024172:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8024174:	fb09 cc0e 	mla	ip, r9, lr, ip
 8024178:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 802417c:	fb08 f80e 	mul.w	r8, r8, lr
 8024180:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024184:	fb02 8303 	mla	r3, r2, r3, r8
 8024188:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802418a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802418c:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8024190:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8024192:	fb01 330a 	mla	r3, r1, sl, r3
 8024196:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 802419a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 802419c:	fb09 3901 	mla	r9, r9, r1, r3
 80241a0:	4342      	muls	r2, r0
 80241a2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80241a6:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80241aa:	883b      	ldrh	r3, [r7, #0]
 80241ac:	1c50      	adds	r0, r2, #1
 80241ae:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80241b2:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80241b6:	ea4c 0c09 	orr.w	ip, ip, r9
 80241ba:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 80241be:	1219      	asrs	r1, r3, #8
 80241c0:	ea4f 421c 	mov.w	r2, ip, lsr #16
 80241c4:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 80241c8:	b2c0      	uxtb	r0, r0
 80241ca:	fb12 f204 	smulbb	r2, r2, r4
 80241ce:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80241d2:	fb01 2100 	mla	r1, r1, r0, r2
 80241d6:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 80241da:	10da      	asrs	r2, r3, #3
 80241dc:	fa5f fc8c 	uxtb.w	ip, ip
 80241e0:	00db      	lsls	r3, r3, #3
 80241e2:	fb1c fc04 	smulbb	ip, ip, r4
 80241e6:	b2db      	uxtb	r3, r3
 80241e8:	b289      	uxth	r1, r1
 80241ea:	fb03 c300 	mla	r3, r3, r0, ip
 80241ee:	fa1f fc83 	uxth.w	ip, r3
 80241f2:	1c4b      	adds	r3, r1, #1
 80241f4:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80241f8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80241fc:	fb1e fe04 	smulbb	lr, lr, r4
 8024200:	f10c 0301 	add.w	r3, ip, #1
 8024204:	fb02 e200 	mla	r2, r2, r0, lr
 8024208:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 802420c:	b292      	uxth	r2, r2
 802420e:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8024212:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8024216:	430b      	orrs	r3, r1
 8024218:	1c51      	adds	r1, r2, #1
 802421a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802421e:	0952      	lsrs	r2, r2, #5
 8024220:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024224:	4313      	orrs	r3, r2
 8024226:	803b      	strh	r3, [r7, #0]
 8024228:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 802422a:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 802422c:	441a      	add	r2, r3
 802422e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024230:	9229      	str	r2, [sp, #164]	; 0xa4
 8024232:	441d      	add	r5, r3
 8024234:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8024236:	3b01      	subs	r3, #1
 8024238:	3702      	adds	r7, #2
 802423a:	931a      	str	r3, [sp, #104]	; 0x68
 802423c:	e694      	b.n	8023f68 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 802423e:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8024240:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8024242:	441c      	add	r4, r3
 8024244:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024246:	9429      	str	r4, [sp, #164]	; 0xa4
 8024248:	441d      	add	r5, r3
 802424a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802424c:	3b01      	subs	r3, #1
 802424e:	9309      	str	r3, [sp, #36]	; 0x24
 8024250:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8024252:	3302      	adds	r3, #2
 8024254:	930c      	str	r3, [sp, #48]	; 0x30
 8024256:	e666      	b.n	8023f26 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8024258:	d024      	beq.n	80242a4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 802425a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802425c:	982b      	ldr	r0, [sp, #172]	; 0xac
 802425e:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8024260:	3b01      	subs	r3, #1
 8024262:	fb00 4003 	mla	r0, r0, r3, r4
 8024266:	1400      	asrs	r0, r0, #16
 8024268:	f53f ae7b 	bmi.w	8023f62 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802426c:	3901      	subs	r1, #1
 802426e:	4288      	cmp	r0, r1
 8024270:	f6bf ae77 	bge.w	8023f62 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8024274:	992c      	ldr	r1, [sp, #176]	; 0xb0
 8024276:	fb01 5303 	mla	r3, r1, r3, r5
 802427a:	141b      	asrs	r3, r3, #16
 802427c:	f53f ae71 	bmi.w	8023f62 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8024280:	3a01      	subs	r2, #1
 8024282:	4293      	cmp	r3, r2
 8024284:	f6bf ae6d 	bge.w	8023f62 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8024288:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 802428c:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 8024290:	f1bb 0f00 	cmp.w	fp, #0
 8024294:	dc70      	bgt.n	8024378 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 8024296:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024298:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 802429c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802429e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80242a2:	930c      	str	r3, [sp, #48]	; 0x30
 80242a4:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80242a6:	2b00      	cmp	r3, #0
 80242a8:	f340 81be 	ble.w	8024628 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 80242ac:	ee30 0a04 	vadd.f32	s0, s0, s8
 80242b0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80242b4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80242b8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80242ba:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80242be:	ee31 1a05 	vadd.f32	s2, s2, s10
 80242c2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80242c6:	eef0 6a62 	vmov.f32	s13, s5
 80242ca:	ee61 7a27 	vmul.f32	s15, s2, s15
 80242ce:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80242d2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80242d6:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 80242da:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80242de:	eef0 6a43 	vmov.f32	s13, s6
 80242e2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80242e6:	ee12 2a90 	vmov	r2, s5
 80242ea:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80242ee:	fb92 f3f3 	sdiv	r3, r2, r3
 80242f2:	ee13 2a10 	vmov	r2, s6
 80242f6:	932b      	str	r3, [sp, #172]	; 0xac
 80242f8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80242fa:	fb92 f3f3 	sdiv	r3, r2, r3
 80242fe:	932c      	str	r3, [sp, #176]	; 0xb0
 8024300:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8024302:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8024304:	3b01      	subs	r3, #1
 8024306:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802430a:	9319      	str	r3, [sp, #100]	; 0x64
 802430c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802430e:	bf08      	it	eq
 8024310:	4613      	moveq	r3, r2
 8024312:	ee16 5a90 	vmov	r5, s13
 8024316:	9309      	str	r3, [sp, #36]	; 0x24
 8024318:	eeb0 3a67 	vmov.f32	s6, s15
 802431c:	eef0 2a47 	vmov.f32	s5, s14
 8024320:	e5f3      	b.n	8023f0a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8024322:	2900      	cmp	r1, #0
 8024324:	f43f ae66 	beq.w	8023ff4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8024328:	f818 0000 	ldrb.w	r0, [r8, r0]
 802432c:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8024330:	900a      	str	r0, [sp, #40]	; 0x28
 8024332:	0e00      	lsrs	r0, r0, #24
 8024334:	9013      	str	r0, [sp, #76]	; 0x4c
 8024336:	e65d      	b.n	8023ff4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8024338:	f113 0801 	adds.w	r8, r3, #1
 802433c:	f53f af74 	bmi.w	8024228 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024340:	4540      	cmp	r0, r8
 8024342:	f6ff af71 	blt.w	8024228 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024346:	f11c 0801 	adds.w	r8, ip, #1
 802434a:	f53f af6d 	bmi.w	8024228 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 802434e:	45c6      	cmp	lr, r8
 8024350:	f6ff af6a 	blt.w	8024228 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024354:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 8024356:	9302      	str	r3, [sp, #8]
 8024358:	b200      	sxth	r0, r0
 802435a:	fa0f f38e 	sxth.w	r3, lr
 802435e:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8024362:	e9cd c203 	strd	ip, r2, [sp, #12]
 8024366:	9301      	str	r3, [sp, #4]
 8024368:	9000      	str	r0, [sp, #0]
 802436a:	4633      	mov	r3, r6
 802436c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 802436e:	981d      	ldr	r0, [sp, #116]	; 0x74
 8024370:	4639      	mov	r1, r7
 8024372:	f7ff fc62 	bl	8023c3a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 8024376:	e757      	b.n	8024228 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024378:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802437a:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 802437c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8024380:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8024382:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024386:	1427      	asrs	r7, r4, #16
 8024388:	142b      	asrs	r3, r5, #16
 802438a:	fb01 7303 	mla	r3, r1, r3, r7
 802438e:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8024390:	18e7      	adds	r7, r4, r3
 8024392:	5ce3      	ldrb	r3, [r4, r3]
 8024394:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8024398:	f3c5 3003 	ubfx	r0, r5, #12, #4
 802439c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80243a0:	2a00      	cmp	r2, #0
 80243a2:	f000 8137 	beq.w	8024614 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 80243a6:	f897 e001 	ldrb.w	lr, [r7, #1]
 80243aa:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 80243ae:	9410      	str	r4, [sp, #64]	; 0x40
 80243b0:	0e24      	lsrs	r4, r4, #24
 80243b2:	9417      	str	r4, [sp, #92]	; 0x5c
 80243b4:	b170      	cbz	r0, 80243d4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 80243b6:	eb07 0e01 	add.w	lr, r7, r1
 80243ba:	5c79      	ldrb	r1, [r7, r1]
 80243bc:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80243c0:	910b      	str	r1, [sp, #44]	; 0x2c
 80243c2:	0e09      	lsrs	r1, r1, #24
 80243c4:	9114      	str	r1, [sp, #80]	; 0x50
 80243c6:	f89e 1001 	ldrb.w	r1, [lr, #1]
 80243ca:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80243ce:	9111      	str	r1, [sp, #68]	; 0x44
 80243d0:	0e09      	lsrs	r1, r1, #24
 80243d2:	9118      	str	r1, [sp, #96]	; 0x60
 80243d4:	b292      	uxth	r2, r2
 80243d6:	b280      	uxth	r0, r0
 80243d8:	fb02 f800 	mul.w	r8, r2, r0
 80243dc:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80243e0:	0112      	lsls	r2, r2, #4
 80243e2:	eba2 0e08 	sub.w	lr, r2, r8
 80243e6:	b280      	uxth	r0, r0
 80243e8:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80243ec:	9917      	ldr	r1, [sp, #92]	; 0x5c
 80243ee:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80243f0:	fa1f fe8e 	uxth.w	lr, lr
 80243f4:	1a12      	subs	r2, r2, r0
 80243f6:	b292      	uxth	r2, r2
 80243f8:	fb0e f101 	mul.w	r1, lr, r1
 80243fc:	fb02 110c 	mla	r1, r2, ip, r1
 8024400:	fb00 1104 	mla	r1, r0, r4, r1
 8024404:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8024406:	fb08 1104 	mla	r1, r8, r4, r1
 802440a:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802440e:	2900      	cmp	r1, #0
 8024410:	f000 80f5 	beq.w	80245fe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8024414:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8024418:	d019      	beq.n	802444e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 802441a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 802441e:	fb0c fa0a 	mul.w	sl, ip, sl
 8024422:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024426:	fb0c fc03 	mul.w	ip, ip, r3
 802442a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802442e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024432:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8024436:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 802443a:	4453      	add	r3, sl
 802443c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8024440:	0a1b      	lsrs	r3, r3, #8
 8024442:	0a3f      	lsrs	r7, r7, #8
 8024444:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024448:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 802444c:	433b      	orrs	r3, r7
 802444e:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8024450:	2cff      	cmp	r4, #255	; 0xff
 8024452:	d020      	beq.n	8024496 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 8024454:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8024456:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802445a:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 802445c:	4367      	muls	r7, r4
 802445e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8024460:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8024464:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8024466:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802446a:	fb04 fa0a 	mul.w	sl, r4, sl
 802446e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024472:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024476:	44bc      	add	ip, r7
 8024478:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802447c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024480:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024484:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024488:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802448c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024490:	ea4c 040a 	orr.w	r4, ip, sl
 8024494:	9410      	str	r4, [sp, #64]	; 0x40
 8024496:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8024498:	2cff      	cmp	r4, #255	; 0xff
 802449a:	d020      	beq.n	80244de <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 802449c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802449e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80244a2:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80244a4:	4367      	muls	r7, r4
 80244a6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80244a8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80244ac:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80244ae:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80244b2:	fb04 fa0a 	mul.w	sl, r4, sl
 80244b6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80244ba:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80244be:	44bc      	add	ip, r7
 80244c0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80244c4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80244c8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80244cc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80244d0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80244d4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80244d8:	ea4c 040a 	orr.w	r4, ip, sl
 80244dc:	940b      	str	r4, [sp, #44]	; 0x2c
 80244de:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80244e0:	2cff      	cmp	r4, #255	; 0xff
 80244e2:	d020      	beq.n	8024526 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 80244e4:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80244e6:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80244ea:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80244ec:	4367      	muls	r7, r4
 80244ee:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80244f0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80244f4:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80244f6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80244fa:	fb04 fa0a 	mul.w	sl, r4, sl
 80244fe:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024502:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024506:	44bc      	add	ip, r7
 8024508:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802450c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024510:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024514:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024518:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802451c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024520:	ea4c 040a 	orr.w	r4, ip, sl
 8024524:	9411      	str	r4, [sp, #68]	; 0x44
 8024526:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8024528:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802452c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802452e:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8024532:	fb0e f707 	mul.w	r7, lr, r7
 8024536:	fb02 770c 	mla	r7, r2, ip, r7
 802453a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802453e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8024540:	fb00 770c 	mla	r7, r0, ip, r7
 8024544:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8024548:	9c10      	ldr	r4, [sp, #64]	; 0x40
 802454a:	fb08 770c 	mla	r7, r8, ip, r7
 802454e:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8024552:	fb0e fe0c 	mul.w	lr, lr, ip
 8024556:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802455a:	fb02 e303 	mla	r3, r2, r3, lr
 802455e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8024560:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8024562:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8024566:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8024568:	fb00 330a 	mla	r3, r0, sl, r3
 802456c:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8024570:	fb08 3c0c 	mla	ip, r8, ip, r3
 8024574:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8024576:	f8b9 0000 	ldrh.w	r0, [r9]
 802457a:	434b      	muls	r3, r1
 802457c:	0a3f      	lsrs	r7, r7, #8
 802457e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024582:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8024586:	1c59      	adds	r1, r3, #1
 8024588:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 802458c:	ea47 070c 	orr.w	r7, r7, ip
 8024590:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8024594:	1202      	asrs	r2, r0, #8
 8024596:	0c3b      	lsrs	r3, r7, #16
 8024598:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 802459c:	b2c9      	uxtb	r1, r1
 802459e:	fb13 f304 	smulbb	r3, r3, r4
 80245a2:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80245a6:	fb02 3201 	mla	r2, r2, r1, r3
 80245aa:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 80245ae:	10c3      	asrs	r3, r0, #3
 80245b0:	b2ff      	uxtb	r7, r7
 80245b2:	00c0      	lsls	r0, r0, #3
 80245b4:	b292      	uxth	r2, r2
 80245b6:	fb1c fc04 	smulbb	ip, ip, r4
 80245ba:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80245be:	b2c0      	uxtb	r0, r0
 80245c0:	fb17 f704 	smulbb	r7, r7, r4
 80245c4:	fb03 c301 	mla	r3, r3, r1, ip
 80245c8:	fb00 7001 	mla	r0, r0, r1, r7
 80245cc:	f102 0c01 	add.w	ip, r2, #1
 80245d0:	b280      	uxth	r0, r0
 80245d2:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 80245d6:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 80245da:	1c42      	adds	r2, r0, #1
 80245dc:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 80245e0:	b29b      	uxth	r3, r3
 80245e2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80245e6:	ea42 020c 	orr.w	r2, r2, ip
 80245ea:	f103 0c01 	add.w	ip, r3, #1
 80245ee:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 80245f2:	095b      	lsrs	r3, r3, #5
 80245f4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80245f8:	431a      	orrs	r2, r3
 80245fa:	f8a9 2000 	strh.w	r2, [r9]
 80245fe:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8024600:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8024602:	441a      	add	r2, r3
 8024604:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024606:	9229      	str	r2, [sp, #164]	; 0xa4
 8024608:	f109 0902 	add.w	r9, r9, #2
 802460c:	441d      	add	r5, r3
 802460e:	f10b 3bff 	add.w	fp, fp, #4294967295
 8024612:	e63d      	b.n	8024290 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8024614:	2800      	cmp	r0, #0
 8024616:	f43f aedd 	beq.w	80243d4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 802461a:	5c79      	ldrb	r1, [r7, r1]
 802461c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8024620:	910b      	str	r1, [sp, #44]	; 0x2c
 8024622:	0e09      	lsrs	r1, r1, #24
 8024624:	9114      	str	r1, [sp, #80]	; 0x50
 8024626:	e6d5      	b.n	80243d4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8024628:	b01f      	add	sp, #124	; 0x7c
 802462a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802462e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 802462e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024632:	b089      	sub	sp, #36	; 0x24
 8024634:	9101      	str	r1, [sp, #4]
 8024636:	9801      	ldr	r0, [sp, #4]
 8024638:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 802463c:	8800      	ldrh	r0, [r0, #0]
 802463e:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 8024642:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 8024646:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 802464a:	1206      	asrs	r6, r0, #8
 802464c:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 8024650:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8024654:	9602      	str	r6, [sp, #8]
 8024656:	10c6      	asrs	r6, r0, #3
 8024658:	00c0      	lsls	r0, r0, #3
 802465a:	b2c0      	uxtb	r0, r0
 802465c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8024660:	9004      	str	r0, [sp, #16]
 8024662:	2f00      	cmp	r7, #0
 8024664:	fb07 100c 	mla	r0, r7, ip, r1
 8024668:	9603      	str	r6, [sp, #12]
 802466a:	eb02 0e00 	add.w	lr, r2, r0
 802466e:	f2c0 810a 	blt.w	8024886 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8024672:	45b8      	cmp	r8, r7
 8024674:	f340 8107 	ble.w	8024886 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8024678:	2900      	cmp	r1, #0
 802467a:	f2c0 8102 	blt.w	8024882 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 802467e:	458c      	cmp	ip, r1
 8024680:	f340 80ff 	ble.w	8024882 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8024684:	5c12      	ldrb	r2, [r2, r0]
 8024686:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 802468a:	1c4a      	adds	r2, r1, #1
 802468c:	f100 80fe 	bmi.w	802488c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8024690:	4594      	cmp	ip, r2
 8024692:	f340 80fb 	ble.w	802488c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8024696:	2d00      	cmp	r5, #0
 8024698:	f000 80fa 	beq.w	8024890 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 802469c:	f89e 2001 	ldrb.w	r2, [lr, #1]
 80246a0:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 80246a4:	3701      	adds	r7, #1
 80246a6:	f100 80f7 	bmi.w	8024898 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 80246aa:	45b8      	cmp	r8, r7
 80246ac:	f340 80f4 	ble.w	8024898 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 80246b0:	2c00      	cmp	r4, #0
 80246b2:	f000 80f4 	beq.w	802489e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 80246b6:	2900      	cmp	r1, #0
 80246b8:	eb0e 020c 	add.w	r2, lr, ip
 80246bc:	f2c0 80ea 	blt.w	8024894 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 80246c0:	458c      	cmp	ip, r1
 80246c2:	f340 80e7 	ble.w	8024894 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 80246c6:	f81e 700c 	ldrb.w	r7, [lr, ip]
 80246ca:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 80246ce:	3101      	adds	r1, #1
 80246d0:	f100 80e8 	bmi.w	80248a4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 80246d4:	458c      	cmp	ip, r1
 80246d6:	f340 80e5 	ble.w	80248a4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 80246da:	2d00      	cmp	r5, #0
 80246dc:	f000 80e4 	beq.w	80248a8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 80246e0:	7852      	ldrb	r2, [r2, #1]
 80246e2:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80246e6:	0e0b      	lsrs	r3, r1, #24
 80246e8:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 80246ec:	9300      	str	r3, [sp, #0]
 80246ee:	b2a4      	uxth	r4, r4
 80246f0:	b2ab      	uxth	r3, r5
 80246f2:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 80246f6:	fb03 f904 	mul.w	r9, r3, r4
 80246fa:	fb0a f505 	mul.w	r5, sl, r5
 80246fe:	011b      	lsls	r3, r3, #4
 8024700:	eba3 0e09 	sub.w	lr, r3, r9
 8024704:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 8024708:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 802470c:	0a28      	lsrs	r0, r5, #8
 802470e:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8024712:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 8024716:	4405      	add	r5, r0
 8024718:	0a2d      	lsrs	r5, r5, #8
 802471a:	fb0a f303 	mul.w	r3, sl, r3
 802471e:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 8024722:	9005      	str	r0, [sp, #20]
 8024724:	f503 7080 	add.w	r0, r3, #256	; 0x100
 8024728:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 802472c:	0a1b      	lsrs	r3, r3, #8
 802472e:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 8024732:	9306      	str	r3, [sp, #24]
 8024734:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 8024738:	fb0b f303 	mul.w	r3, fp, r3
 802473c:	0a1d      	lsrs	r5, r3, #8
 802473e:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8024742:	ea4f 6817 	mov.w	r8, r7, lsr #24
 8024746:	fb0b f606 	mul.w	r6, fp, r6
 802474a:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 802474e:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 8024752:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8024756:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 802475a:	fb08 f707 	mul.w	r7, r8, r7
 802475e:	441d      	add	r5, r3
 8024760:	f506 7380 	add.w	r3, r6, #256	; 0x100
 8024764:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8024768:	f507 7380 	add.w	r3, r7, #256	; 0x100
 802476c:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 8024770:	fb08 fc0c 	mul.w	ip, r8, ip
 8024774:	0a1b      	lsrs	r3, r3, #8
 8024776:	9307      	str	r3, [sp, #28]
 8024778:	ea4f 201c 	mov.w	r0, ip, lsr #8
 802477c:	0e0b      	lsrs	r3, r1, #24
 802477e:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 8024782:	435f      	muls	r7, r3
 8024784:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8024788:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 802478c:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 8024790:	4460      	add	r0, ip
 8024792:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024796:	b2a4      	uxth	r4, r4
 8024798:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802479c:	0a2d      	lsrs	r5, r5, #8
 802479e:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80247a2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80247a6:	fa1f fe8e 	uxth.w	lr, lr
 80247aa:	4359      	muls	r1, r3
 80247ac:	1b12      	subs	r2, r2, r4
 80247ae:	9b05      	ldr	r3, [sp, #20]
 80247b0:	44bc      	add	ip, r7
 80247b2:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80247b6:	b292      	uxth	r2, r2
 80247b8:	fb05 f50e 	mul.w	r5, r5, lr
 80247bc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80247c0:	fb03 5502 	mla	r5, r3, r2, r5
 80247c4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80247c8:	9b06      	ldr	r3, [sp, #24]
 80247ca:	f501 7780 	add.w	r7, r1, #256	; 0x100
 80247ce:	0a36      	lsrs	r6, r6, #8
 80247d0:	0a00      	lsrs	r0, r0, #8
 80247d2:	fb0c 5509 	mla	r5, ip, r9, r5
 80247d6:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 80247da:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 80247de:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80247e2:	fb00 5504 	mla	r5, r0, r4, r5
 80247e6:	fb0e f606 	mul.w	r6, lr, r6
 80247ea:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 80247ee:	0a09      	lsrs	r1, r1, #8
 80247f0:	9b07      	ldr	r3, [sp, #28]
 80247f2:	fb02 6000 	mla	r0, r2, r0, r6
 80247f6:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80247fa:	fb09 0001 	mla	r0, r9, r1, r0
 80247fe:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024802:	fb0e fe0b 	mul.w	lr, lr, fp
 8024806:	fb04 0003 	mla	r0, r4, r3, r0
 802480a:	fb02 e20a 	mla	r2, r2, sl, lr
 802480e:	9b00      	ldr	r3, [sp, #0]
 8024810:	fb04 2408 	mla	r4, r4, r8, r2
 8024814:	fb09 4903 	mla	r9, r9, r3, r4
 8024818:	ea6f 2929 	mvn.w	r9, r9, asr #8
 802481c:	9b02      	ldr	r3, [sp, #8]
 802481e:	9a04      	ldr	r2, [sp, #16]
 8024820:	fa5f f989 	uxtb.w	r9, r9
 8024824:	fb03 f109 	mul.w	r1, r3, r9
 8024828:	9b03      	ldr	r3, [sp, #12]
 802482a:	0a2d      	lsrs	r5, r5, #8
 802482c:	0a00      	lsrs	r0, r0, #8
 802482e:	fb03 f309 	mul.w	r3, r3, r9
 8024832:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8024836:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 802483a:	4305      	orrs	r5, r0
 802483c:	fb02 f909 	mul.w	r9, r2, r9
 8024840:	1c58      	adds	r0, r3, #1
 8024842:	1c4a      	adds	r2, r1, #1
 8024844:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8024848:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 802484c:	0a2b      	lsrs	r3, r5, #8
 802484e:	0c2a      	lsrs	r2, r5, #16
 8024850:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8024854:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8024858:	00db      	lsls	r3, r3, #3
 802485a:	0212      	lsls	r2, r2, #8
 802485c:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8024860:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024864:	4313      	orrs	r3, r2
 8024866:	f109 0201 	add.w	r2, r9, #1
 802486a:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 802486e:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 8024872:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8024876:	431d      	orrs	r5, r3
 8024878:	9b01      	ldr	r3, [sp, #4]
 802487a:	801d      	strh	r5, [r3, #0]
 802487c:	b009      	add	sp, #36	; 0x24
 802487e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024882:	2000      	movs	r0, #0
 8024884:	e701      	b.n	802468a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 8024886:	2600      	movs	r6, #0
 8024888:	4630      	mov	r0, r6
 802488a:	e70b      	b.n	80246a4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 802488c:	2600      	movs	r6, #0
 802488e:	e709      	b.n	80246a4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8024890:	462e      	mov	r6, r5
 8024892:	e707      	b.n	80246a4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8024894:	2700      	movs	r7, #0
 8024896:	e71a      	b.n	80246ce <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 8024898:	2100      	movs	r1, #0
 802489a:	460f      	mov	r7, r1
 802489c:	e723      	b.n	80246e6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 802489e:	4621      	mov	r1, r4
 80248a0:	4627      	mov	r7, r4
 80248a2:	e720      	b.n	80246e6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 80248a4:	2100      	movs	r1, #0
 80248a6:	e71e      	b.n	80246e6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 80248a8:	4629      	mov	r1, r5
 80248aa:	e71c      	b.n	80246e6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

080248ac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80248ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80248b0:	b09b      	sub	sp, #108	; 0x6c
 80248b2:	9218      	str	r2, [sp, #96]	; 0x60
 80248b4:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80248b6:	9116      	str	r1, [sp, #88]	; 0x58
 80248b8:	9307      	str	r3, [sp, #28]
 80248ba:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 80248be:	9019      	str	r0, [sp, #100]	; 0x64
 80248c0:	6850      	ldr	r0, [r2, #4]
 80248c2:	6812      	ldr	r2, [r2, #0]
 80248c4:	9d26      	ldr	r5, [sp, #152]	; 0x98
 80248c6:	fb00 1303 	mla	r3, r0, r3, r1
 80248ca:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80248ce:	930a      	str	r3, [sp, #40]	; 0x28
 80248d0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80248d2:	681b      	ldr	r3, [r3, #0]
 80248d4:	930f      	str	r3, [sp, #60]	; 0x3c
 80248d6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80248d8:	685e      	ldr	r6, [r3, #4]
 80248da:	3604      	adds	r6, #4
 80248dc:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80248de:	2b00      	cmp	r3, #0
 80248e0:	dc03      	bgt.n	80248ea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80248e2:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80248e4:	2b00      	cmp	r3, #0
 80248e6:	f340 8373 	ble.w	8024fd0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 80248ea:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80248ec:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80248f0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80248f4:	1e48      	subs	r0, r1, #1
 80248f6:	1e57      	subs	r7, r2, #1
 80248f8:	9b07      	ldr	r3, [sp, #28]
 80248fa:	2b00      	cmp	r3, #0
 80248fc:	f340 8190 	ble.w	8024c20 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8024900:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8024902:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8024906:	ea4f 4325 	mov.w	r3, r5, asr #16
 802490a:	d406      	bmi.n	802491a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 802490c:	4584      	cmp	ip, r0
 802490e:	da04      	bge.n	802491a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8024910:	2b00      	cmp	r3, #0
 8024912:	db02      	blt.n	802491a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8024914:	42bb      	cmp	r3, r7
 8024916:	f2c0 8184 	blt.w	8024c22 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 802491a:	f11c 0c01 	adds.w	ip, ip, #1
 802491e:	f100 8172 	bmi.w	8024c06 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024922:	4561      	cmp	r1, ip
 8024924:	f2c0 816f 	blt.w	8024c06 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024928:	3301      	adds	r3, #1
 802492a:	f100 816c 	bmi.w	8024c06 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 802492e:	429a      	cmp	r2, r3
 8024930:	f2c0 8169 	blt.w	8024c06 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024934:	9b07      	ldr	r3, [sp, #28]
 8024936:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8024938:	9317      	str	r3, [sp, #92]	; 0x5c
 802493a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 802493c:	2b00      	cmp	r3, #0
 802493e:	f340 818e 	ble.w	8024c5e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 8024942:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8024944:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8024948:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802494a:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 802494e:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8024950:	141b      	asrs	r3, r3, #16
 8024952:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8024956:	f3c5 3003 	ubfx	r0, r5, #12, #4
 802495a:	f100 81d1 	bmi.w	8024d00 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 802495e:	f101 38ff 	add.w	r8, r1, #4294967295
 8024962:	4543      	cmp	r3, r8
 8024964:	f280 81cc 	bge.w	8024d00 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8024968:	f1bc 0f00 	cmp.w	ip, #0
 802496c:	f2c0 81c8 	blt.w	8024d00 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8024970:	f10e 38ff 	add.w	r8, lr, #4294967295
 8024974:	45c4      	cmp	ip, r8
 8024976:	f280 81c3 	bge.w	8024d00 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 802497a:	b209      	sxth	r1, r1
 802497c:	fb0c 3301 	mla	r3, ip, r1, r3
 8024980:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8024982:	eb04 0803 	add.w	r8, r4, r3
 8024986:	5ce3      	ldrb	r3, [r4, r3]
 8024988:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 802498c:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8024990:	2a00      	cmp	r2, #0
 8024992:	f000 81aa 	beq.w	8024cea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 8024996:	f898 c001 	ldrb.w	ip, [r8, #1]
 802499a:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 802499e:	940b      	str	r4, [sp, #44]	; 0x2c
 80249a0:	0e24      	lsrs	r4, r4, #24
 80249a2:	9412      	str	r4, [sp, #72]	; 0x48
 80249a4:	b178      	cbz	r0, 80249c6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 80249a6:	eb08 0c01 	add.w	ip, r8, r1
 80249aa:	f818 1001 	ldrb.w	r1, [r8, r1]
 80249ae:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80249b2:	9108      	str	r1, [sp, #32]
 80249b4:	0e09      	lsrs	r1, r1, #24
 80249b6:	9110      	str	r1, [sp, #64]	; 0x40
 80249b8:	f89c 1001 	ldrb.w	r1, [ip, #1]
 80249bc:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80249c0:	910c      	str	r1, [sp, #48]	; 0x30
 80249c2:	0e09      	lsrs	r1, r1, #24
 80249c4:	9113      	str	r1, [sp, #76]	; 0x4c
 80249c6:	b292      	uxth	r2, r2
 80249c8:	b280      	uxth	r0, r0
 80249ca:	fb02 f900 	mul.w	r9, r2, r0
 80249ce:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 80249d2:	0112      	lsls	r2, r2, #4
 80249d4:	eba2 0809 	sub.w	r8, r2, r9
 80249d8:	b280      	uxth	r0, r0
 80249da:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80249de:	9912      	ldr	r1, [sp, #72]	; 0x48
 80249e0:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80249e2:	fa1f f888 	uxth.w	r8, r8
 80249e6:	1a12      	subs	r2, r2, r0
 80249e8:	b292      	uxth	r2, r2
 80249ea:	fb08 f101 	mul.w	r1, r8, r1
 80249ee:	fb02 110e 	mla	r1, r2, lr, r1
 80249f2:	fb00 1104 	mla	r1, r0, r4, r1
 80249f6:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80249f8:	fb09 1104 	mla	r1, r9, r4, r1
 80249fc:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8024a00:	2900      	cmp	r1, #0
 8024a02:	f000 80f5 	beq.w	8024bf0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8024a06:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8024a0a:	d01b      	beq.n	8024a44 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8024a0c:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8024a10:	fb0e fa0a 	mul.w	sl, lr, sl
 8024a14:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024a18:	fb0e fe03 	mul.w	lr, lr, r3
 8024a1c:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8024a20:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024a24:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8024a28:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8024a2c:	4453      	add	r3, sl
 8024a2e:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8024a32:	0a1b      	lsrs	r3, r3, #8
 8024a34:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024a38:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024a3c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8024a40:	ea43 030c 	orr.w	r3, r3, ip
 8024a44:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8024a46:	2cff      	cmp	r4, #255	; 0xff
 8024a48:	d021      	beq.n	8024a8e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 8024a4a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8024a4c:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8024a50:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8024a52:	fb04 fb0b 	mul.w	fp, r4, fp
 8024a56:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8024a58:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8024a5c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8024a5e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024a62:	fb04 fa0a 	mul.w	sl, r4, sl
 8024a66:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024a6a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8024a6e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024a72:	44de      	add	lr, fp
 8024a74:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8024a78:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024a7c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024a80:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024a84:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024a88:	ea4e 040a 	orr.w	r4, lr, sl
 8024a8c:	940b      	str	r4, [sp, #44]	; 0x2c
 8024a8e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8024a90:	2cff      	cmp	r4, #255	; 0xff
 8024a92:	d021      	beq.n	8024ad8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 8024a94:	9c08      	ldr	r4, [sp, #32]
 8024a96:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8024a9a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8024a9c:	fb04 fb0b 	mul.w	fp, r4, fp
 8024aa0:	9c08      	ldr	r4, [sp, #32]
 8024aa2:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8024aa6:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8024aa8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024aac:	fb04 fa0a 	mul.w	sl, r4, sl
 8024ab0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024ab4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8024ab8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024abc:	44de      	add	lr, fp
 8024abe:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8024ac2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024ac6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024aca:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024ace:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024ad2:	ea4e 040a 	orr.w	r4, lr, sl
 8024ad6:	9408      	str	r4, [sp, #32]
 8024ad8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8024ada:	2cff      	cmp	r4, #255	; 0xff
 8024adc:	d021      	beq.n	8024b22 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8024ade:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8024ae0:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8024ae4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8024ae6:	fb04 fb0b 	mul.w	fp, r4, fp
 8024aea:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8024aec:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8024af0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8024af2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024af6:	fb04 fa0a 	mul.w	sl, r4, sl
 8024afa:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024afe:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8024b02:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024b06:	44de      	add	lr, fp
 8024b08:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8024b0c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024b10:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024b14:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024b18:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024b1c:	ea4e 040a 	orr.w	r4, lr, sl
 8024b20:	940c      	str	r4, [sp, #48]	; 0x30
 8024b22:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8024b24:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8024b28:	9c08      	ldr	r4, [sp, #32]
 8024b2a:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8024b2e:	fb08 fc0c 	mul.w	ip, r8, ip
 8024b32:	fb02 cc0e 	mla	ip, r2, lr, ip
 8024b36:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8024b3a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8024b3c:	fb00 cc0e 	mla	ip, r0, lr, ip
 8024b40:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8024b44:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8024b46:	fb09 cc0e 	mla	ip, r9, lr, ip
 8024b4a:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8024b4e:	fb08 f80e 	mul.w	r8, r8, lr
 8024b52:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024b56:	fb02 8303 	mla	r3, r2, r3, r8
 8024b5a:	9a08      	ldr	r2, [sp, #32]
 8024b5c:	f8b7 8000 	ldrh.w	r8, [r7]
 8024b60:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8024b64:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8024b66:	fb00 330a 	mla	r3, r0, sl, r3
 8024b6a:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 8024b6e:	fb09 3900 	mla	r9, r9, r0, r3
 8024b72:	43c9      	mvns	r1, r1
 8024b74:	ea4f 2228 	mov.w	r2, r8, asr #8
 8024b78:	fa5f fe81 	uxtb.w	lr, r1
 8024b7c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024b80:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8024b84:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8024b88:	fb02 f20e 	mul.w	r2, r2, lr
 8024b8c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024b90:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8024b94:	ea4c 0c09 	orr.w	ip, ip, r9
 8024b98:	1c53      	adds	r3, r2, #1
 8024b9a:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 8024b9e:	ea4f 00e8 	mov.w	r0, r8, asr #3
 8024ba2:	ea4f 431c 	mov.w	r3, ip, lsr #16
 8024ba6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024baa:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8024bae:	4a63      	ldr	r2, [pc, #396]	; (8024d3c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 8024bb0:	fb00 f00e 	mul.w	r0, r0, lr
 8024bb4:	b2db      	uxtb	r3, r3
 8024bb6:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 8024bba:	1c43      	adds	r3, r0, #1
 8024bbc:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8024bc0:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8024bc4:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8024bc8:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8024bcc:	b2c9      	uxtb	r1, r1
 8024bce:	00db      	lsls	r3, r3, #3
 8024bd0:	fb01 f10e 	mul.w	r1, r1, lr
 8024bd4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024bd8:	4313      	orrs	r3, r2
 8024bda:	1c4a      	adds	r2, r1, #1
 8024bdc:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8024be0:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8024be4:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8024be8:	ea4c 0c03 	orr.w	ip, ip, r3
 8024bec:	f8a7 c000 	strh.w	ip, [r7]
 8024bf0:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8024bf2:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8024bf4:	441a      	add	r2, r3
 8024bf6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024bf8:	9225      	str	r2, [sp, #148]	; 0x94
 8024bfa:	441d      	add	r5, r3
 8024bfc:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8024bfe:	3b01      	subs	r3, #1
 8024c00:	3702      	adds	r7, #2
 8024c02:	9317      	str	r3, [sp, #92]	; 0x5c
 8024c04:	e699      	b.n	802493a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8024c06:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8024c08:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8024c0a:	441c      	add	r4, r3
 8024c0c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024c0e:	9425      	str	r4, [sp, #148]	; 0x94
 8024c10:	441d      	add	r5, r3
 8024c12:	9b07      	ldr	r3, [sp, #28]
 8024c14:	3b01      	subs	r3, #1
 8024c16:	9307      	str	r3, [sp, #28]
 8024c18:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8024c1a:	3302      	adds	r3, #2
 8024c1c:	930a      	str	r3, [sp, #40]	; 0x28
 8024c1e:	e66b      	b.n	80248f8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8024c20:	d024      	beq.n	8024c6c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 8024c22:	9b07      	ldr	r3, [sp, #28]
 8024c24:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8024c26:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8024c28:	3b01      	subs	r3, #1
 8024c2a:	fb00 4003 	mla	r0, r0, r3, r4
 8024c2e:	1400      	asrs	r0, r0, #16
 8024c30:	f53f ae80 	bmi.w	8024934 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8024c34:	3901      	subs	r1, #1
 8024c36:	4288      	cmp	r0, r1
 8024c38:	f6bf ae7c 	bge.w	8024934 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8024c3c:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8024c3e:	fb01 5303 	mla	r3, r1, r3, r5
 8024c42:	141b      	asrs	r3, r3, #16
 8024c44:	f53f ae76 	bmi.w	8024934 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8024c48:	3a01      	subs	r2, #1
 8024c4a:	4293      	cmp	r3, r2
 8024c4c:	f6bf ae72 	bge.w	8024934 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8024c50:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8024c54:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8024c58:	f1bb 0f00 	cmp.w	fp, #0
 8024c5c:	dc70      	bgt.n	8024d40 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 8024c5e:	9b07      	ldr	r3, [sp, #28]
 8024c60:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8024c64:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8024c66:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8024c6a:	930a      	str	r3, [sp, #40]	; 0x28
 8024c6c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8024c6e:	2b00      	cmp	r3, #0
 8024c70:	f340 81ae 	ble.w	8024fd0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8024c74:	ee30 0a04 	vadd.f32	s0, s0, s8
 8024c78:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8024c7c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8024c80:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024c82:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8024c86:	ee31 1a05 	vadd.f32	s2, s2, s10
 8024c8a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8024c8e:	eef0 6a62 	vmov.f32	s13, s5
 8024c92:	ee61 7a27 	vmul.f32	s15, s2, s15
 8024c96:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024c9a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8024c9e:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 8024ca2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8024ca6:	eef0 6a43 	vmov.f32	s13, s6
 8024caa:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8024cae:	ee12 2a90 	vmov	r2, s5
 8024cb2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8024cb6:	fb92 f3f3 	sdiv	r3, r2, r3
 8024cba:	ee13 2a10 	vmov	r2, s6
 8024cbe:	9327      	str	r3, [sp, #156]	; 0x9c
 8024cc0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024cc2:	fb92 f3f3 	sdiv	r3, r2, r3
 8024cc6:	9328      	str	r3, [sp, #160]	; 0xa0
 8024cc8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8024cca:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8024ccc:	3b01      	subs	r3, #1
 8024cce:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024cd2:	9316      	str	r3, [sp, #88]	; 0x58
 8024cd4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024cd6:	bf08      	it	eq
 8024cd8:	4613      	moveq	r3, r2
 8024cda:	ee16 5a90 	vmov	r5, s13
 8024cde:	9307      	str	r3, [sp, #28]
 8024ce0:	eeb0 3a67 	vmov.f32	s6, s15
 8024ce4:	eef0 2a47 	vmov.f32	s5, s14
 8024ce8:	e5f8      	b.n	80248dc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8024cea:	2800      	cmp	r0, #0
 8024cec:	f43f ae6b 	beq.w	80249c6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8024cf0:	f818 1001 	ldrb.w	r1, [r8, r1]
 8024cf4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8024cf8:	9108      	str	r1, [sp, #32]
 8024cfa:	0e09      	lsrs	r1, r1, #24
 8024cfc:	9110      	str	r1, [sp, #64]	; 0x40
 8024cfe:	e662      	b.n	80249c6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8024d00:	f113 0801 	adds.w	r8, r3, #1
 8024d04:	f53f af74 	bmi.w	8024bf0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8024d08:	4541      	cmp	r1, r8
 8024d0a:	f6ff af71 	blt.w	8024bf0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8024d0e:	f11c 0801 	adds.w	r8, ip, #1
 8024d12:	f53f af6d 	bmi.w	8024bf0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8024d16:	45c6      	cmp	lr, r8
 8024d18:	f6ff af6a 	blt.w	8024bf0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8024d1c:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 8024d20:	b209      	sxth	r1, r1
 8024d22:	fa0f f38e 	sxth.w	r3, lr
 8024d26:	e9cd 2004 	strd	r2, r0, [sp, #16]
 8024d2a:	9301      	str	r3, [sp, #4]
 8024d2c:	9100      	str	r1, [sp, #0]
 8024d2e:	4633      	mov	r3, r6
 8024d30:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8024d32:	9819      	ldr	r0, [sp, #100]	; 0x64
 8024d34:	4639      	mov	r1, r7
 8024d36:	f7ff fc7a 	bl	802462e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 8024d3a:	e759      	b.n	8024bf0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8024d3c:	fffff800 	.word	0xfffff800
 8024d40:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8024d42:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8024d44:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8024d48:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024d4a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024d4e:	1427      	asrs	r7, r4, #16
 8024d50:	142b      	asrs	r3, r5, #16
 8024d52:	fb01 7303 	mla	r3, r1, r3, r7
 8024d56:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8024d58:	18e7      	adds	r7, r4, r3
 8024d5a:	5ce3      	ldrb	r3, [r4, r3]
 8024d5c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8024d60:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8024d64:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8024d68:	2a00      	cmp	r2, #0
 8024d6a:	f000 8127 	beq.w	8024fbc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8024d6e:	f897 e001 	ldrb.w	lr, [r7, #1]
 8024d72:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8024d76:	940d      	str	r4, [sp, #52]	; 0x34
 8024d78:	0e24      	lsrs	r4, r4, #24
 8024d7a:	9414      	str	r4, [sp, #80]	; 0x50
 8024d7c:	b170      	cbz	r0, 8024d9c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8024d7e:	eb07 0e01 	add.w	lr, r7, r1
 8024d82:	5c79      	ldrb	r1, [r7, r1]
 8024d84:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8024d88:	9109      	str	r1, [sp, #36]	; 0x24
 8024d8a:	0e09      	lsrs	r1, r1, #24
 8024d8c:	9111      	str	r1, [sp, #68]	; 0x44
 8024d8e:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8024d92:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8024d96:	910e      	str	r1, [sp, #56]	; 0x38
 8024d98:	0e09      	lsrs	r1, r1, #24
 8024d9a:	9115      	str	r1, [sp, #84]	; 0x54
 8024d9c:	b292      	uxth	r2, r2
 8024d9e:	b280      	uxth	r0, r0
 8024da0:	fb02 f800 	mul.w	r8, r2, r0
 8024da4:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8024da8:	0112      	lsls	r2, r2, #4
 8024daa:	eba2 0e08 	sub.w	lr, r2, r8
 8024dae:	b280      	uxth	r0, r0
 8024db0:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8024db4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8024db6:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8024db8:	fa1f fe8e 	uxth.w	lr, lr
 8024dbc:	1a09      	subs	r1, r1, r0
 8024dbe:	b289      	uxth	r1, r1
 8024dc0:	fb0e f202 	mul.w	r2, lr, r2
 8024dc4:	fb01 220c 	mla	r2, r1, ip, r2
 8024dc8:	fb00 2204 	mla	r2, r0, r4, r2
 8024dcc:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8024dce:	fb08 2204 	mla	r2, r8, r4, r2
 8024dd2:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8024dd6:	2a00      	cmp	r2, #0
 8024dd8:	f000 80e5 	beq.w	8024fa6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 8024ddc:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8024de0:	d019      	beq.n	8024e16 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 8024de2:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8024de6:	fb0c fa0a 	mul.w	sl, ip, sl
 8024dea:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024dee:	fb0c fc03 	mul.w	ip, ip, r3
 8024df2:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8024df6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024dfa:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8024dfe:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8024e02:	4453      	add	r3, sl
 8024e04:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8024e08:	0a1b      	lsrs	r3, r3, #8
 8024e0a:	0a3f      	lsrs	r7, r7, #8
 8024e0c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024e10:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8024e14:	433b      	orrs	r3, r7
 8024e16:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8024e18:	2cff      	cmp	r4, #255	; 0xff
 8024e1a:	d020      	beq.n	8024e5e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 8024e1c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8024e1e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8024e22:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8024e24:	4367      	muls	r7, r4
 8024e26:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8024e28:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8024e2c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8024e2e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024e32:	fb04 fa0a 	mul.w	sl, r4, sl
 8024e36:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024e3a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024e3e:	44bc      	add	ip, r7
 8024e40:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024e44:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024e48:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024e4c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024e50:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024e54:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024e58:	ea4c 040a 	orr.w	r4, ip, sl
 8024e5c:	940d      	str	r4, [sp, #52]	; 0x34
 8024e5e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8024e60:	2cff      	cmp	r4, #255	; 0xff
 8024e62:	d020      	beq.n	8024ea6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 8024e64:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8024e66:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8024e6a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8024e6c:	4367      	muls	r7, r4
 8024e6e:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8024e70:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8024e74:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8024e76:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024e7a:	fb04 fa0a 	mul.w	sl, r4, sl
 8024e7e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024e82:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024e86:	44bc      	add	ip, r7
 8024e88:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024e8c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024e90:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024e94:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024e98:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024e9c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024ea0:	ea4c 040a 	orr.w	r4, ip, sl
 8024ea4:	9409      	str	r4, [sp, #36]	; 0x24
 8024ea6:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8024ea8:	2cff      	cmp	r4, #255	; 0xff
 8024eaa:	d020      	beq.n	8024eee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 8024eac:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8024eae:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8024eb2:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8024eb4:	4367      	muls	r7, r4
 8024eb6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8024eb8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8024ebc:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8024ebe:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024ec2:	fb04 fa0a 	mul.w	sl, r4, sl
 8024ec6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024eca:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024ece:	44bc      	add	ip, r7
 8024ed0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024ed4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024ed8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024edc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024ee0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024ee4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024ee8:	ea4c 040a 	orr.w	r4, ip, sl
 8024eec:	940e      	str	r4, [sp, #56]	; 0x38
 8024eee:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8024ef0:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8024ef4:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8024ef6:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8024efa:	fb0e f707 	mul.w	r7, lr, r7
 8024efe:	fb01 770c 	mla	r7, r1, ip, r7
 8024f02:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8024f06:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8024f08:	fb00 770c 	mla	r7, r0, ip, r7
 8024f0c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8024f10:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8024f12:	fb08 770c 	mla	r7, r8, ip, r7
 8024f16:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8024f1a:	fb0e fe0c 	mul.w	lr, lr, ip
 8024f1e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024f22:	fb01 e303 	mla	r3, r1, r3, lr
 8024f26:	9909      	ldr	r1, [sp, #36]	; 0x24
 8024f28:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8024f2c:	990e      	ldr	r1, [sp, #56]	; 0x38
 8024f2e:	fb00 330a 	mla	r3, r0, sl, r3
 8024f32:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8024f36:	fb08 3c0c 	mla	ip, r8, ip, r3
 8024f3a:	f8b9 3000 	ldrh.w	r3, [r9]
 8024f3e:	43d2      	mvns	r2, r2
 8024f40:	1218      	asrs	r0, r3, #8
 8024f42:	b2d2      	uxtb	r2, r2
 8024f44:	10d9      	asrs	r1, r3, #3
 8024f46:	0a3f      	lsrs	r7, r7, #8
 8024f48:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024f4c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8024f50:	00db      	lsls	r3, r3, #3
 8024f52:	4350      	muls	r0, r2
 8024f54:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8024f58:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8024f5c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8024f60:	b2db      	uxtb	r3, r3
 8024f62:	ea47 070c 	orr.w	r7, r7, ip
 8024f66:	4351      	muls	r1, r2
 8024f68:	4353      	muls	r3, r2
 8024f6a:	1c42      	adds	r2, r0, #1
 8024f6c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8024f70:	0c3a      	lsrs	r2, r7, #16
 8024f72:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8024f76:	4a18      	ldr	r2, [pc, #96]	; (8024fd8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 8024f78:	b2c0      	uxtb	r0, r0
 8024f7a:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 8024f7e:	1c4a      	adds	r2, r1, #1
 8024f80:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8024f84:	0a3a      	lsrs	r2, r7, #8
 8024f86:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8024f8a:	00c9      	lsls	r1, r1, #3
 8024f8c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8024f90:	4301      	orrs	r1, r0
 8024f92:	1c58      	adds	r0, r3, #1
 8024f94:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8024f98:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8024f9c:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 8024fa0:	4308      	orrs	r0, r1
 8024fa2:	f8a9 0000 	strh.w	r0, [r9]
 8024fa6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8024fa8:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8024faa:	441a      	add	r2, r3
 8024fac:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024fae:	9225      	str	r2, [sp, #148]	; 0x94
 8024fb0:	f109 0902 	add.w	r9, r9, #2
 8024fb4:	441d      	add	r5, r3
 8024fb6:	f10b 3bff 	add.w	fp, fp, #4294967295
 8024fba:	e64d      	b.n	8024c58 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 8024fbc:	2800      	cmp	r0, #0
 8024fbe:	f43f aeed 	beq.w	8024d9c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8024fc2:	5c79      	ldrb	r1, [r7, r1]
 8024fc4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8024fc8:	9109      	str	r1, [sp, #36]	; 0x24
 8024fca:	0e09      	lsrs	r1, r1, #24
 8024fcc:	9111      	str	r1, [sp, #68]	; 0x44
 8024fce:	e6e5      	b.n	8024d9c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8024fd0:	b01b      	add	sp, #108	; 0x6c
 8024fd2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024fd6:	bf00      	nop
 8024fd8:	fffff800 	.word	0xfffff800

08024fdc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 8024fdc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024fe0:	b085      	sub	sp, #20
 8024fe2:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 8024fe6:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8024fea:	9103      	str	r1, [sp, #12]
 8024fec:	fb00 7406 	mla	r4, r0, r6, r7
 8024ff0:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 8024ff4:	2800      	cmp	r0, #0
 8024ff6:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 8024ffa:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 8024ffe:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8025002:	9501      	str	r5, [sp, #4]
 8025004:	eb03 0904 	add.w	r9, r3, r4
 8025008:	f2c0 8150 	blt.w	80252ac <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 802500c:	4583      	cmp	fp, r0
 802500e:	f340 814d 	ble.w	80252ac <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8025012:	2f00      	cmp	r7, #0
 8025014:	f2c0 8146 	blt.w	80252a4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8025018:	42be      	cmp	r6, r7
 802501a:	f340 8143 	ble.w	80252a4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 802501e:	f813 c004 	ldrb.w	ip, [r3, r4]
 8025022:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 8025026:	ea4f 02ec 	mov.w	r2, ip, asr #3
 802502a:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 802502e:	4355      	muls	r5, r2
 8025030:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8025034:	f64f 041f 	movw	r4, #63519	; 0xf81f
 8025038:	fb0c f203 	mul.w	r2, ip, r3
 802503c:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8025040:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8025044:	441d      	add	r5, r3
 8025046:	f102 0320 	add.w	r3, r2, #32
 802504a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802504e:	0a1b      	lsrs	r3, r3, #8
 8025050:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8025054:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8025058:	431c      	orrs	r4, r3
 802505a:	1c7b      	adds	r3, r7, #1
 802505c:	f100 812b 	bmi.w	80252b6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8025060:	429e      	cmp	r6, r3
 8025062:	f340 8128 	ble.w	80252b6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8025066:	2900      	cmp	r1, #0
 8025068:	f000 8128 	beq.w	80252bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 802506c:	9a01      	ldr	r2, [sp, #4]
 802506e:	f899 3001 	ldrb.w	r3, [r9, #1]
 8025072:	8855      	ldrh	r5, [r2, #2]
 8025074:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8025078:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 802507c:	fb08 f802 	mul.w	r8, r8, r2
 8025080:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8025084:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8025088:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 802508c:	435d      	muls	r5, r3
 802508e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8025092:	44d0      	add	r8, sl
 8025094:	f105 0a20 	add.w	sl, r5, #32
 8025098:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 802509c:	0a2d      	lsrs	r5, r5, #8
 802509e:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 80250a2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80250a6:	432a      	orrs	r2, r5
 80250a8:	3001      	adds	r0, #1
 80250aa:	f100 810d 	bmi.w	80252c8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 80250ae:	4583      	cmp	fp, r0
 80250b0:	f340 810a 	ble.w	80252c8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 80250b4:	f1be 0f00 	cmp.w	lr, #0
 80250b8:	f000 810b 	beq.w	80252d2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 80250bc:	2f00      	cmp	r7, #0
 80250be:	f2c0 8100 	blt.w	80252c2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 80250c2:	42be      	cmp	r6, r7
 80250c4:	f340 80fd 	ble.w	80252c2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 80250c8:	9801      	ldr	r0, [sp, #4]
 80250ca:	f819 5006 	ldrb.w	r5, [r9, r6]
 80250ce:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 80250d2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80250d6:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 80250da:	fb0a fa00 	mul.w	sl, sl, r0
 80250de:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 80250e2:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80250e6:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 80250ea:	fb05 f808 	mul.w	r8, r5, r8
 80250ee:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 80250f2:	4482      	add	sl, r0
 80250f4:	f108 0020 	add.w	r0, r8, #32
 80250f8:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 80250fc:	0a00      	lsrs	r0, r0, #8
 80250fe:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8025102:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025106:	ea4b 0b00 	orr.w	fp, fp, r0
 802510a:	3701      	adds	r7, #1
 802510c:	f100 80e6 	bmi.w	80252dc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8025110:	42be      	cmp	r6, r7
 8025112:	f340 80e3 	ble.w	80252dc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8025116:	2900      	cmp	r1, #0
 8025118:	f000 80e3 	beq.w	80252e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 802511c:	3601      	adds	r6, #1
 802511e:	9801      	ldr	r0, [sp, #4]
 8025120:	f819 7006 	ldrb.w	r7, [r9, r6]
 8025124:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8025128:	ea4f 09e7 	mov.w	r9, r7, asr #3
 802512c:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 8025130:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025134:	fb09 f906 	mul.w	r9, r9, r6
 8025138:	fb07 f800 	mul.w	r8, r7, r0
 802513c:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8025140:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8025144:	f609 0901 	addw	r9, r9, #2049	; 0x801
 8025148:	44d1      	add	r9, sl
 802514a:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 802514e:	f108 0020 	add.w	r0, r8, #32
 8025152:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8025156:	0a00      	lsrs	r0, r0, #8
 8025158:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802515c:	4330      	orrs	r0, r6
 802515e:	b28e      	uxth	r6, r1
 8025160:	fa1f f98e 	uxth.w	r9, lr
 8025164:	fb06 f809 	mul.w	r8, r6, r9
 8025168:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 802516c:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8025170:	0136      	lsls	r6, r6, #4
 8025172:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025176:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 802517a:	9601      	str	r6, [sp, #4]
 802517c:	ea4a 0404 	orr.w	r4, sl, r4
 8025180:	fa1f f689 	uxth.w	r6, r9
 8025184:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8025188:	fb11 f90e 	smulbb	r9, r1, lr
 802518c:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8025190:	9602      	str	r6, [sp, #8]
 8025192:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025196:	4626      	mov	r6, r4
 8025198:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802519c:	f1ce 0410 	rsb	r4, lr, #16
 80251a0:	1a64      	subs	r4, r4, r1
 80251a2:	ea4a 0202 	orr.w	r2, sl, r2
 80251a6:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 80251aa:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80251ae:	434a      	muls	r2, r1
 80251b0:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 80251b4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80251b8:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80251bc:	fb04 2406 	mla	r4, r4, r6, r2
 80251c0:	ea4a 0000 	orr.w	r0, sl, r0
 80251c4:	fb09 4200 	mla	r2, r9, r0, r4
 80251c8:	ea4f 440b 	mov.w	r4, fp, lsl #16
 80251cc:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80251d0:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 80251d4:	ea44 0b0b 	orr.w	fp, r4, fp
 80251d8:	9c01      	ldr	r4, [sp, #4]
 80251da:	9e02      	ldr	r6, [sp, #8]
 80251dc:	9903      	ldr	r1, [sp, #12]
 80251de:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 80251e2:	1ba4      	subs	r4, r4, r6
 80251e4:	9e01      	ldr	r6, [sp, #4]
 80251e6:	8808      	ldrh	r0, [r1, #0]
 80251e8:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 80251ec:	eba6 0608 	sub.w	r6, r6, r8
 80251f0:	b2b6      	uxth	r6, r6
 80251f2:	b2a4      	uxth	r4, r4
 80251f4:	4373      	muls	r3, r6
 80251f6:	fb0c 3304 	mla	r3, ip, r4, r3
 80251fa:	9c02      	ldr	r4, [sp, #8]
 80251fc:	fb04 3505 	mla	r5, r4, r5, r3
 8025200:	fb08 5707 	mla	r7, r8, r7, r5
 8025204:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8025208:	b289      	uxth	r1, r1
 802520a:	fb0e 2e0b 	mla	lr, lr, fp, r2
 802520e:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8025212:	434f      	muls	r7, r1
 8025214:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8025218:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 802521c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025220:	1c7b      	adds	r3, r7, #1
 8025222:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8025226:	ea42 0e0e 	orr.w	lr, r2, lr
 802522a:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 802522e:	fa1f f28e 	uxth.w	r2, lr
 8025232:	1203      	asrs	r3, r0, #8
 8025234:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 8025238:	b2ff      	uxtb	r7, r7
 802523a:	1215      	asrs	r5, r2, #8
 802523c:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8025240:	fb13 f307 	smulbb	r3, r3, r7
 8025244:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8025248:	fb05 3501 	mla	r5, r5, r1, r3
 802524c:	10c3      	asrs	r3, r0, #3
 802524e:	10d4      	asrs	r4, r2, #3
 8025250:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8025254:	fb13 f307 	smulbb	r3, r3, r7
 8025258:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 802525c:	fb04 3401 	mla	r4, r4, r1, r3
 8025260:	00c3      	lsls	r3, r0, #3
 8025262:	00d2      	lsls	r2, r2, #3
 8025264:	b2db      	uxtb	r3, r3
 8025266:	fb13 f307 	smulbb	r3, r3, r7
 802526a:	b2d2      	uxtb	r2, r2
 802526c:	fb02 3101 	mla	r1, r2, r1, r3
 8025270:	b2ad      	uxth	r5, r5
 8025272:	b289      	uxth	r1, r1
 8025274:	b2a4      	uxth	r4, r4
 8025276:	1c6b      	adds	r3, r5, #1
 8025278:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802527c:	1c62      	adds	r2, r4, #1
 802527e:	1c4b      	adds	r3, r1, #1
 8025280:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8025284:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8025288:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 802528c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8025290:	0964      	lsrs	r4, r4, #5
 8025292:	432b      	orrs	r3, r5
 8025294:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8025298:	9a03      	ldr	r2, [sp, #12]
 802529a:	4323      	orrs	r3, r4
 802529c:	8013      	strh	r3, [r2, #0]
 802529e:	b005      	add	sp, #20
 80252a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80252a4:	f04f 0c00 	mov.w	ip, #0
 80252a8:	4664      	mov	r4, ip
 80252aa:	e6d6      	b.n	802505a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 80252ac:	2300      	movs	r3, #0
 80252ae:	469c      	mov	ip, r3
 80252b0:	461a      	mov	r2, r3
 80252b2:	461c      	mov	r4, r3
 80252b4:	e6f8      	b.n	80250a8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80252b6:	2300      	movs	r3, #0
 80252b8:	461a      	mov	r2, r3
 80252ba:	e6f5      	b.n	80250a8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80252bc:	460b      	mov	r3, r1
 80252be:	460a      	mov	r2, r1
 80252c0:	e6f2      	b.n	80250a8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80252c2:	2500      	movs	r5, #0
 80252c4:	46ab      	mov	fp, r5
 80252c6:	e720      	b.n	802510a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 80252c8:	2700      	movs	r7, #0
 80252ca:	463d      	mov	r5, r7
 80252cc:	4638      	mov	r0, r7
 80252ce:	46bb      	mov	fp, r7
 80252d0:	e745      	b.n	802515e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 80252d2:	4677      	mov	r7, lr
 80252d4:	4675      	mov	r5, lr
 80252d6:	4670      	mov	r0, lr
 80252d8:	46f3      	mov	fp, lr
 80252da:	e740      	b.n	802515e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 80252dc:	2700      	movs	r7, #0
 80252de:	4638      	mov	r0, r7
 80252e0:	e73d      	b.n	802515e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 80252e2:	460f      	mov	r7, r1
 80252e4:	4608      	mov	r0, r1
 80252e6:	e73a      	b.n	802515e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

080252e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80252e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80252ec:	b097      	sub	sp, #92	; 0x5c
 80252ee:	9214      	str	r2, [sp, #80]	; 0x50
 80252f0:	9308      	str	r3, [sp, #32]
 80252f2:	9a25      	ldr	r2, [sp, #148]	; 0x94
 80252f4:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 80252f8:	9312      	str	r3, [sp, #72]	; 0x48
 80252fa:	9111      	str	r1, [sp, #68]	; 0x44
 80252fc:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8025300:	9015      	str	r0, [sp, #84]	; 0x54
 8025302:	6850      	ldr	r0, [r2, #4]
 8025304:	6812      	ldr	r2, [r2, #0]
 8025306:	fb00 1303 	mla	r3, r0, r3, r1
 802530a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802530e:	9309      	str	r3, [sp, #36]	; 0x24
 8025310:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025312:	681b      	ldr	r3, [r3, #0]
 8025314:	930b      	str	r3, [sp, #44]	; 0x2c
 8025316:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025318:	685b      	ldr	r3, [r3, #4]
 802531a:	930c      	str	r3, [sp, #48]	; 0x30
 802531c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8025320:	930a      	str	r3, [sp, #40]	; 0x28
 8025322:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8025324:	2b00      	cmp	r3, #0
 8025326:	dc03      	bgt.n	8025330 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8025328:	9b14      	ldr	r3, [sp, #80]	; 0x50
 802532a:	2b00      	cmp	r3, #0
 802532c:	f340 83cb 	ble.w	8025ac6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8025330:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025332:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025336:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802533a:	1e48      	subs	r0, r1, #1
 802533c:	1e55      	subs	r5, r2, #1
 802533e:	9b08      	ldr	r3, [sp, #32]
 8025340:	2b00      	cmp	r3, #0
 8025342:	f340 81a3 	ble.w	802568c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 8025346:	9e21      	ldr	r6, [sp, #132]	; 0x84
 8025348:	9b22      	ldr	r3, [sp, #136]	; 0x88
 802534a:	1436      	asrs	r6, r6, #16
 802534c:	ea4f 4323 	mov.w	r3, r3, asr #16
 8025350:	d406      	bmi.n	8025360 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8025352:	4286      	cmp	r6, r0
 8025354:	da04      	bge.n	8025360 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8025356:	2b00      	cmp	r3, #0
 8025358:	db02      	blt.n	8025360 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802535a:	42ab      	cmp	r3, r5
 802535c:	f2c0 8197 	blt.w	802568e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8025360:	3601      	adds	r6, #1
 8025362:	f100 8184 	bmi.w	802566e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8025366:	42b1      	cmp	r1, r6
 8025368:	f2c0 8181 	blt.w	802566e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 802536c:	3301      	adds	r3, #1
 802536e:	f100 817e 	bmi.w	802566e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8025372:	429a      	cmp	r2, r3
 8025374:	f2c0 817b 	blt.w	802566e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8025378:	9b08      	ldr	r3, [sp, #32]
 802537a:	9f09      	ldr	r7, [sp, #36]	; 0x24
 802537c:	9313      	str	r3, [sp, #76]	; 0x4c
 802537e:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8025382:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8025384:	2b00      	cmp	r3, #0
 8025386:	f340 81a4 	ble.w	80256d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 802538a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 802538c:	9d21      	ldr	r5, [sp, #132]	; 0x84
 802538e:	1418      	asrs	r0, r3, #16
 8025390:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8025392:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8025396:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8025398:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 802539c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802539e:	142d      	asrs	r5, r5, #16
 80253a0:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 80253a4:	f100 81f8 	bmi.w	8025798 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80253a8:	f102 3eff 	add.w	lr, r2, #4294967295
 80253ac:	4575      	cmp	r5, lr
 80253ae:	f280 81f3 	bge.w	8025798 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80253b2:	2800      	cmp	r0, #0
 80253b4:	f2c0 81f0 	blt.w	8025798 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80253b8:	f103 3eff 	add.w	lr, r3, #4294967295
 80253bc:	4570      	cmp	r0, lr
 80253be:	f280 81eb 	bge.w	8025798 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80253c2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80253c4:	b212      	sxth	r2, r2
 80253c6:	fb00 5002 	mla	r0, r0, r2, r5
 80253ca:	fa1f fe81 	uxth.w	lr, r1
 80253ce:	eb03 0a00 	add.w	sl, r3, r0
 80253d2:	ea4f 150e 	mov.w	r5, lr, lsl #4
 80253d6:	f813 9000 	ldrb.w	r9, [r3, r0]
 80253da:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80253de:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 80253e2:	b29b      	uxth	r3, r3
 80253e4:	f1bc 0f00 	cmp.w	ip, #0
 80253e8:	f000 81b9 	beq.w	802575e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 80253ec:	f81a 4002 	ldrb.w	r4, [sl, r2]
 80253f0:	940d      	str	r4, [sp, #52]	; 0x34
 80253f2:	eb0a 0b02 	add.w	fp, sl, r2
 80253f6:	fa1f fa8c 	uxth.w	sl, ip
 80253fa:	fb0a fe0e 	mul.w	lr, sl, lr
 80253fe:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8025402:	fa1f fa8a 	uxth.w	sl, sl
 8025406:	eba5 050e 	sub.w	r5, r5, lr
 802540a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 802540e:	940e      	str	r4, [sp, #56]	; 0x38
 8025410:	eba3 030a 	sub.w	r3, r3, sl
 8025414:	b2ad      	uxth	r5, r5
 8025416:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8025418:	b29b      	uxth	r3, r3
 802541a:	fb08 f505 	mul.w	r5, r8, r5
 802541e:	fb09 5303 	mla	r3, r9, r3, r5
 8025422:	fb0a 3304 	mla	r3, sl, r4, r3
 8025426:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8025428:	fb0e 3304 	mla	r3, lr, r4, r3
 802542c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025430:	2b00      	cmp	r3, #0
 8025432:	f000 810f 	beq.w	8025654 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8025436:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8025438:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 802543c:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8025440:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8025444:	f000 8190 	beq.w	8025768 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 8025448:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 802544c:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8025450:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025454:	fb09 f000 	mul.w	r0, r9, r0
 8025458:	fb0a fe0e 	mul.w	lr, sl, lr
 802545c:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8025460:	f100 0b20 	add.w	fp, r0, #32
 8025464:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8025468:	44ce      	add	lr, r9
 802546a:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 802546e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8025472:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8025476:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 802547a:	ea4e 0909 	orr.w	r9, lr, r9
 802547e:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8025482:	8868      	ldrh	r0, [r5, #2]
 8025484:	d019      	beq.n	80254ba <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8025486:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 802548a:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 802548e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025492:	fb08 f800 	mul.w	r8, r8, r0
 8025496:	fb0a fe0e 	mul.w	lr, sl, lr
 802549a:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 802549e:	f108 0b20 	add.w	fp, r8, #32
 80254a2:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80254a6:	4486      	add	lr, r0
 80254a8:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 80254ac:	0a00      	lsrs	r0, r0, #8
 80254ae:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80254b2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80254b6:	ea4e 0000 	orr.w	r0, lr, r0
 80254ba:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 80254be:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80254c2:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80254c6:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80254ca:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80254ce:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80254d2:	ea4e 0909 	orr.w	r9, lr, r9
 80254d6:	ea4a 0000 	orr.w	r0, sl, r0
 80254da:	f1bc 0f00 	cmp.w	ip, #0
 80254de:	f000 8145 	beq.w	802576c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 80254e2:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 80254e6:	3a01      	subs	r2, #1
 80254e8:	0052      	lsls	r2, r2, #1
 80254ea:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80254ec:	3202      	adds	r2, #2
 80254ee:	2cff      	cmp	r4, #255	; 0xff
 80254f0:	eb05 0e02 	add.w	lr, r5, r2
 80254f4:	5aaa      	ldrh	r2, [r5, r2]
 80254f6:	d018      	beq.n	802552a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 80254f8:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 80254fc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025500:	fb04 fa02 	mul.w	sl, r4, r2
 8025504:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8025508:	fb08 f805 	mul.w	r8, r8, r5
 802550c:	f10a 0520 	add.w	r5, sl, #32
 8025510:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8025514:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8025518:	f608 0801 	addw	r8, r8, #2049	; 0x801
 802551c:	4442      	add	r2, r8
 802551e:	0a2d      	lsrs	r5, r5, #8
 8025520:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8025524:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8025528:	432a      	orrs	r2, r5
 802552a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802552c:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8025530:	2cff      	cmp	r4, #255	; 0xff
 8025532:	d01a      	beq.n	802556a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8025534:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8025538:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 802553c:	fb04 fa05 	mul.w	sl, r4, r5
 8025540:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8025544:	fb08 f80e 	mul.w	r8, r8, lr
 8025548:	f10a 0e20 	add.w	lr, sl, #32
 802554c:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8025550:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8025554:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8025558:	4445      	add	r5, r8
 802555a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802555e:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8025562:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8025566:	ea45 050e 	orr.w	r5, r5, lr
 802556a:	fb1c fe01 	smulbb	lr, ip, r1
 802556e:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8025572:	f1cc 0810 	rsb	r8, ip, #16
 8025576:	eba8 0801 	sub.w	r8, r8, r1
 802557a:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 802557e:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8025582:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8025586:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 802558a:	4341      	muls	r1, r0
 802558c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025590:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8025594:	ea4a 0202 	orr.w	r2, sl, r2
 8025598:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 802559c:	fb09 1108 	mla	r1, r9, r8, r1
 80255a0:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80255a4:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80255a8:	fb0c 1102 	mla	r1, ip, r2, r1
 80255ac:	ea4b 0505 	orr.w	r5, fp, r5
 80255b0:	fb0e 1e05 	mla	lr, lr, r5, r1
 80255b4:	ea4f 525e 	mov.w	r2, lr, lsr #21
 80255b8:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80255bc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80255c0:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80255c4:	ea42 0e0e 	orr.w	lr, r2, lr
 80255c8:	fa1f f28e 	uxth.w	r2, lr
 80255cc:	2bff      	cmp	r3, #255	; 0xff
 80255ce:	d103      	bne.n	80255d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 80255d0:	9912      	ldr	r1, [sp, #72]	; 0x48
 80255d2:	29ff      	cmp	r1, #255	; 0xff
 80255d4:	f000 80de 	beq.w	8025794 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 80255d8:	990a      	ldr	r1, [sp, #40]	; 0x28
 80255da:	8838      	ldrh	r0, [r7, #0]
 80255dc:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80255de:	434b      	muls	r3, r1
 80255e0:	f103 0c01 	add.w	ip, r3, #1
 80255e4:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 80255e8:	ea6f 2323 	mvn.w	r3, r3, asr #8
 80255ec:	fa5f fc83 	uxtb.w	ip, r3
 80255f0:	1203      	asrs	r3, r0, #8
 80255f2:	1215      	asrs	r5, r2, #8
 80255f4:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80255f8:	fb13 f30c 	smulbb	r3, r3, ip
 80255fc:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8025600:	fb05 3501 	mla	r5, r5, r1, r3
 8025604:	10c3      	asrs	r3, r0, #3
 8025606:	10d1      	asrs	r1, r2, #3
 8025608:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 802560c:	fb13 f30c 	smulbb	r3, r3, ip
 8025610:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8025614:	fb01 3104 	mla	r1, r1, r4, r3
 8025618:	00c3      	lsls	r3, r0, #3
 802561a:	00d2      	lsls	r2, r2, #3
 802561c:	b2db      	uxtb	r3, r3
 802561e:	b2d2      	uxtb	r2, r2
 8025620:	fb13 f30c 	smulbb	r3, r3, ip
 8025624:	b2ad      	uxth	r5, r5
 8025626:	fb02 3304 	mla	r3, r2, r4, r3
 802562a:	b29a      	uxth	r2, r3
 802562c:	1c6b      	adds	r3, r5, #1
 802562e:	b289      	uxth	r1, r1
 8025630:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8025634:	1c53      	adds	r3, r2, #1
 8025636:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802563a:	1c4a      	adds	r2, r1, #1
 802563c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8025640:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8025644:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8025648:	0949      	lsrs	r1, r1, #5
 802564a:	432b      	orrs	r3, r5
 802564c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8025650:	430b      	orrs	r3, r1
 8025652:	803b      	strh	r3, [r7, #0]
 8025654:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8025656:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8025658:	4413      	add	r3, r2
 802565a:	9321      	str	r3, [sp, #132]	; 0x84
 802565c:	9a22      	ldr	r2, [sp, #136]	; 0x88
 802565e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025660:	441a      	add	r2, r3
 8025662:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8025664:	9222      	str	r2, [sp, #136]	; 0x88
 8025666:	3b01      	subs	r3, #1
 8025668:	3702      	adds	r7, #2
 802566a:	9313      	str	r3, [sp, #76]	; 0x4c
 802566c:	e689      	b.n	8025382 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 802566e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8025670:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 8025672:	9c22      	ldr	r4, [sp, #136]	; 0x88
 8025674:	4433      	add	r3, r6
 8025676:	9321      	str	r3, [sp, #132]	; 0x84
 8025678:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802567a:	441c      	add	r4, r3
 802567c:	9b08      	ldr	r3, [sp, #32]
 802567e:	9422      	str	r4, [sp, #136]	; 0x88
 8025680:	3b01      	subs	r3, #1
 8025682:	9308      	str	r3, [sp, #32]
 8025684:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025686:	3302      	adds	r3, #2
 8025688:	9309      	str	r3, [sp, #36]	; 0x24
 802568a:	e658      	b.n	802533e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 802568c:	d028      	beq.n	80256e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 802568e:	9b08      	ldr	r3, [sp, #32]
 8025690:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8025692:	9d21      	ldr	r5, [sp, #132]	; 0x84
 8025694:	3b01      	subs	r3, #1
 8025696:	fb00 5003 	mla	r0, r0, r3, r5
 802569a:	1400      	asrs	r0, r0, #16
 802569c:	f53f ae6c 	bmi.w	8025378 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80256a0:	3901      	subs	r1, #1
 80256a2:	4288      	cmp	r0, r1
 80256a4:	f6bf ae68 	bge.w	8025378 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80256a8:	9924      	ldr	r1, [sp, #144]	; 0x90
 80256aa:	9822      	ldr	r0, [sp, #136]	; 0x88
 80256ac:	fb01 0303 	mla	r3, r1, r3, r0
 80256b0:	141b      	asrs	r3, r3, #16
 80256b2:	f53f ae61 	bmi.w	8025378 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80256b6:	3a01      	subs	r2, #1
 80256b8:	4293      	cmp	r3, r2
 80256ba:	f6bf ae5d 	bge.w	8025378 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80256be:	9b08      	ldr	r3, [sp, #32]
 80256c0:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 80256c4:	9313      	str	r3, [sp, #76]	; 0x4c
 80256c6:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80256ca:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80256cc:	2b00      	cmp	r3, #0
 80256ce:	f300 8082 	bgt.w	80257d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 80256d2:	9b08      	ldr	r3, [sp, #32]
 80256d4:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80256d8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80256da:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80256de:	9309      	str	r3, [sp, #36]	; 0x24
 80256e0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80256e2:	2b00      	cmp	r3, #0
 80256e4:	f340 81ef 	ble.w	8025ac6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 80256e8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80256ec:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80256f0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80256f4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80256f6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80256fa:	ee31 1a05 	vadd.f32	s2, s2, s10
 80256fe:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8025702:	eef0 6a62 	vmov.f32	s13, s5
 8025706:	ee61 7a27 	vmul.f32	s15, s2, s15
 802570a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802570e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8025712:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 8025716:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802571a:	eef0 6a43 	vmov.f32	s13, s6
 802571e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8025722:	ee12 2a90 	vmov	r2, s5
 8025726:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802572a:	fb92 f3f3 	sdiv	r3, r2, r3
 802572e:	ee13 2a10 	vmov	r2, s6
 8025732:	9323      	str	r3, [sp, #140]	; 0x8c
 8025734:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8025736:	fb92 f3f3 	sdiv	r3, r2, r3
 802573a:	9324      	str	r3, [sp, #144]	; 0x90
 802573c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 802573e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8025740:	3b01      	subs	r3, #1
 8025742:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025746:	9311      	str	r3, [sp, #68]	; 0x44
 8025748:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802574a:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 802574e:	bf08      	it	eq
 8025750:	4613      	moveq	r3, r2
 8025752:	9308      	str	r3, [sp, #32]
 8025754:	eeb0 3a67 	vmov.f32	s6, s15
 8025758:	eef0 2a47 	vmov.f32	s5, s14
 802575c:	e5e1      	b.n	8025322 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 802575e:	fb08 f505 	mul.w	r5, r8, r5
 8025762:	fb09 5303 	mla	r3, r9, r3, r5
 8025766:	e661      	b.n	802542c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 8025768:	4681      	mov	r9, r0
 802576a:	e688      	b.n	802547e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 802576c:	f1c1 0210 	rsb	r2, r1, #16
 8025770:	4341      	muls	r1, r0
 8025772:	fb09 1902 	mla	r9, r9, r2, r1
 8025776:	ea4f 0949 	mov.w	r9, r9, lsl #1
 802577a:	ea4f 5259 	mov.w	r2, r9, lsr #21
 802577e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8025782:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025786:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 802578a:	ea42 0909 	orr.w	r9, r2, r9
 802578e:	fa1f f289 	uxth.w	r2, r9
 8025792:	e71b      	b.n	80255cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8025794:	803a      	strh	r2, [r7, #0]
 8025796:	e75d      	b.n	8025654 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8025798:	f115 0e01 	adds.w	lr, r5, #1
 802579c:	f53f af5a 	bmi.w	8025654 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80257a0:	4572      	cmp	r2, lr
 80257a2:	f6ff af57 	blt.w	8025654 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80257a6:	f110 0e01 	adds.w	lr, r0, #1
 80257aa:	f53f af53 	bmi.w	8025654 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80257ae:	4573      	cmp	r3, lr
 80257b0:	f6ff af50 	blt.w	8025654 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80257b4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80257b6:	9502      	str	r5, [sp, #8]
 80257b8:	b21b      	sxth	r3, r3
 80257ba:	b212      	sxth	r2, r2
 80257bc:	e9cd 0103 	strd	r0, r1, [sp, #12]
 80257c0:	9301      	str	r3, [sp, #4]
 80257c2:	9200      	str	r2, [sp, #0]
 80257c4:	e9cd c405 	strd	ip, r4, [sp, #20]
 80257c8:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 80257cc:	4639      	mov	r1, r7
 80257ce:	9815      	ldr	r0, [sp, #84]	; 0x54
 80257d0:	f7ff fc04 	bl	8024fdc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 80257d4:	e73e      	b.n	8025654 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80257d6:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80257d8:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80257dc:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80257de:	f3c3 3503 	ubfx	r5, r3, #12, #4
 80257e2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80257e4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80257e8:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80257ea:	141f      	asrs	r7, r3, #16
 80257ec:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80257ee:	141b      	asrs	r3, r3, #16
 80257f0:	fb01 3707 	mla	r7, r1, r7, r3
 80257f4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80257f6:	fa1f fc82 	uxth.w	ip, r2
 80257fa:	eb03 0a07 	add.w	sl, r3, r7
 80257fe:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8025802:	f813 9007 	ldrb.w	r9, [r3, r7]
 8025806:	f89a 8001 	ldrb.w	r8, [sl, #1]
 802580a:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 802580e:	b29b      	uxth	r3, r3
 8025810:	2d00      	cmp	r5, #0
 8025812:	f000 813d 	beq.w	8025a90 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 8025816:	f81a 4001 	ldrb.w	r4, [sl, r1]
 802581a:	940f      	str	r4, [sp, #60]	; 0x3c
 802581c:	eb0a 0b01 	add.w	fp, sl, r1
 8025820:	fa1f fa85 	uxth.w	sl, r5
 8025824:	fb0a fc0c 	mul.w	ip, sl, ip
 8025828:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 802582c:	fa1f fa8a 	uxth.w	sl, sl
 8025830:	eba0 000c 	sub.w	r0, r0, ip
 8025834:	eba3 030a 	sub.w	r3, r3, sl
 8025838:	b280      	uxth	r0, r0
 802583a:	fb08 f000 	mul.w	r0, r8, r0
 802583e:	b29b      	uxth	r3, r3
 8025840:	fb09 0303 	mla	r3, r9, r3, r0
 8025844:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8025846:	f89b 4001 	ldrb.w	r4, [fp, #1]
 802584a:	9410      	str	r4, [sp, #64]	; 0x40
 802584c:	fb0a 3300 	mla	r3, sl, r0, r3
 8025850:	fb0c 3304 	mla	r3, ip, r4, r3
 8025854:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025858:	2b00      	cmp	r3, #0
 802585a:	f000 810b 	beq.w	8025a74 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 802585e:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8025860:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8025862:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8025866:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 802586a:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 802586e:	f000 8114 	beq.w	8025a9a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 8025872:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8025876:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 802587a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802587e:	fb09 f707 	mul.w	r7, r9, r7
 8025882:	fb0a fc0c 	mul.w	ip, sl, ip
 8025886:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 802588a:	f107 0b20 	add.w	fp, r7, #32
 802588e:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8025892:	44cc      	add	ip, r9
 8025894:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8025898:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802589c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80258a0:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80258a4:	ea4c 0909 	orr.w	r9, ip, r9
 80258a8:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80258ac:	8847      	ldrh	r7, [r0, #2]
 80258ae:	d019      	beq.n	80258e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 80258b0:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80258b4:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80258b8:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80258bc:	fb08 f807 	mul.w	r8, r8, r7
 80258c0:	fb0a fc0c 	mul.w	ip, sl, ip
 80258c4:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 80258c8:	f108 0b20 	add.w	fp, r8, #32
 80258cc:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80258d0:	44bc      	add	ip, r7
 80258d2:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 80258d6:	0a3f      	lsrs	r7, r7, #8
 80258d8:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80258dc:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80258e0:	ea4c 0707 	orr.w	r7, ip, r7
 80258e4:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 80258e8:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 80258ec:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80258f0:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80258f4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80258f8:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80258fc:	ea4c 0909 	orr.w	r9, ip, r9
 8025900:	ea4a 0707 	orr.w	r7, sl, r7
 8025904:	2d00      	cmp	r5, #0
 8025906:	f000 80ca 	beq.w	8025a9e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 802590a:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 802590e:	3901      	subs	r1, #1
 8025910:	0049      	lsls	r1, r1, #1
 8025912:	3102      	adds	r1, #2
 8025914:	eb00 0c01 	add.w	ip, r0, r1
 8025918:	5a41      	ldrh	r1, [r0, r1]
 802591a:	980f      	ldr	r0, [sp, #60]	; 0x3c
 802591c:	28ff      	cmp	r0, #255	; 0xff
 802591e:	d019      	beq.n	8025954 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 8025920:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8025922:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8025926:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802592a:	fb04 fa01 	mul.w	sl, r4, r1
 802592e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8025932:	fb08 f800 	mul.w	r8, r8, r0
 8025936:	f10a 0020 	add.w	r0, sl, #32
 802593a:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 802593e:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8025942:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8025946:	4441      	add	r1, r8
 8025948:	0a00      	lsrs	r0, r0, #8
 802594a:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 802594e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025952:	4301      	orrs	r1, r0
 8025954:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8025956:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 802595a:	2cff      	cmp	r4, #255	; 0xff
 802595c:	d01a      	beq.n	8025994 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 802595e:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8025962:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025966:	fb04 fa00 	mul.w	sl, r4, r0
 802596a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802596e:	fb08 f80c 	mul.w	r8, r8, ip
 8025972:	f10a 0c20 	add.w	ip, sl, #32
 8025976:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 802597a:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 802597e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8025982:	4440      	add	r0, r8
 8025984:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025988:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 802598c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8025990:	ea40 000c 	orr.w	r0, r0, ip
 8025994:	fb15 fc02 	smulbb	ip, r5, r2
 8025998:	ea4f 0cec 	mov.w	ip, ip, asr #3
 802599c:	f1c5 0810 	rsb	r8, r5, #16
 80259a0:	eba8 0802 	sub.w	r8, r8, r2
 80259a4:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80259a8:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 80259ac:	437a      	muls	r2, r7
 80259ae:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 80259b2:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 80259b6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80259ba:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80259be:	fb09 2208 	mla	r2, r9, r8, r2
 80259c2:	ea4a 0101 	orr.w	r1, sl, r1
 80259c6:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 80259ca:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80259ce:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80259d2:	fb05 2201 	mla	r2, r5, r1, r2
 80259d6:	ea4b 0000 	orr.w	r0, fp, r0
 80259da:	fb0c 2200 	mla	r2, ip, r0, r2
 80259de:	0d57      	lsrs	r7, r2, #21
 80259e0:	0952      	lsrs	r2, r2, #5
 80259e2:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80259e6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80259ea:	433a      	orrs	r2, r7
 80259ec:	2bff      	cmp	r3, #255	; 0xff
 80259ee:	b292      	uxth	r2, r2
 80259f0:	d102      	bne.n	80259f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 80259f2:	9912      	ldr	r1, [sp, #72]	; 0x48
 80259f4:	29ff      	cmp	r1, #255	; 0xff
 80259f6:	d063      	beq.n	8025ac0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 80259f8:	980a      	ldr	r0, [sp, #40]	; 0x28
 80259fa:	f8be 1000 	ldrh.w	r1, [lr]
 80259fe:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8025a00:	4343      	muls	r3, r0
 8025a02:	1c58      	adds	r0, r3, #1
 8025a04:	eb00 2323 	add.w	r3, r0, r3, asr #8
 8025a08:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8025a0c:	1208      	asrs	r0, r1, #8
 8025a0e:	b2db      	uxtb	r3, r3
 8025a10:	1215      	asrs	r5, r2, #8
 8025a12:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8025a16:	fb10 f003 	smulbb	r0, r0, r3
 8025a1a:	10cf      	asrs	r7, r1, #3
 8025a1c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8025a20:	00c9      	lsls	r1, r1, #3
 8025a22:	fb05 0504 	mla	r5, r5, r4, r0
 8025a26:	b2c9      	uxtb	r1, r1
 8025a28:	10d0      	asrs	r0, r2, #3
 8025a2a:	00d2      	lsls	r2, r2, #3
 8025a2c:	fb11 f103 	smulbb	r1, r1, r3
 8025a30:	b2d2      	uxtb	r2, r2
 8025a32:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8025a36:	fb02 1204 	mla	r2, r2, r4, r1
 8025a3a:	fb17 f703 	smulbb	r7, r7, r3
 8025a3e:	b2ad      	uxth	r5, r5
 8025a40:	b292      	uxth	r2, r2
 8025a42:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8025a46:	fb00 7004 	mla	r0, r0, r4, r7
 8025a4a:	1c6b      	adds	r3, r5, #1
 8025a4c:	1c57      	adds	r7, r2, #1
 8025a4e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8025a52:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8025a56:	b280      	uxth	r0, r0
 8025a58:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8025a5c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8025a60:	433d      	orrs	r5, r7
 8025a62:	1c47      	adds	r7, r0, #1
 8025a64:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8025a68:	097f      	lsrs	r7, r7, #5
 8025a6a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8025a6e:	433d      	orrs	r5, r7
 8025a70:	f8ae 5000 	strh.w	r5, [lr]
 8025a74:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8025a76:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8025a78:	4413      	add	r3, r2
 8025a7a:	9321      	str	r3, [sp, #132]	; 0x84
 8025a7c:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8025a7e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025a80:	441a      	add	r2, r3
 8025a82:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8025a84:	9222      	str	r2, [sp, #136]	; 0x88
 8025a86:	3b01      	subs	r3, #1
 8025a88:	f10e 0e02 	add.w	lr, lr, #2
 8025a8c:	9313      	str	r3, [sp, #76]	; 0x4c
 8025a8e:	e61c      	b.n	80256ca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 8025a90:	fb08 f000 	mul.w	r0, r8, r0
 8025a94:	fb09 0303 	mla	r3, r9, r3, r0
 8025a98:	e6dc      	b.n	8025854 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 8025a9a:	46b9      	mov	r9, r7
 8025a9c:	e704      	b.n	80258a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 8025a9e:	f1c2 0110 	rsb	r1, r2, #16
 8025aa2:	437a      	muls	r2, r7
 8025aa4:	fb09 2901 	mla	r9, r9, r1, r2
 8025aa8:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8025aac:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8025ab0:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8025ab4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025ab8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8025abc:	4302      	orrs	r2, r0
 8025abe:	e795      	b.n	80259ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 8025ac0:	f8ae 2000 	strh.w	r2, [lr]
 8025ac4:	e7d6      	b.n	8025a74 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8025ac6:	b017      	add	sp, #92	; 0x5c
 8025ac8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08025acc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8025acc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025ad0:	b085      	sub	sp, #20
 8025ad2:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 8025ad6:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8025ada:	9103      	str	r1, [sp, #12]
 8025adc:	fb00 7406 	mla	r4, r0, r6, r7
 8025ae0:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 8025ae4:	2800      	cmp	r0, #0
 8025ae6:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 8025aea:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 8025aee:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8025af2:	9501      	str	r5, [sp, #4]
 8025af4:	eb02 0904 	add.w	r9, r2, r4
 8025af8:	f2c0 8141 	blt.w	8025d7e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8025afc:	4583      	cmp	fp, r0
 8025afe:	f340 813e 	ble.w	8025d7e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8025b02:	2f00      	cmp	r7, #0
 8025b04:	f2c0 8137 	blt.w	8025d76 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8025b08:	42be      	cmp	r6, r7
 8025b0a:	f340 8134 	ble.w	8025d76 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8025b0e:	f812 c004 	ldrb.w	ip, [r2, r4]
 8025b12:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 8025b16:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8025b1a:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 8025b1e:	4355      	muls	r5, r2
 8025b20:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8025b24:	f64f 041f 	movw	r4, #63519	; 0xf81f
 8025b28:	fb0c f203 	mul.w	r2, ip, r3
 8025b2c:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8025b30:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8025b34:	441d      	add	r5, r3
 8025b36:	f102 0320 	add.w	r3, r2, #32
 8025b3a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8025b3e:	0a1b      	lsrs	r3, r3, #8
 8025b40:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8025b44:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8025b48:	431c      	orrs	r4, r3
 8025b4a:	1c7b      	adds	r3, r7, #1
 8025b4c:	f100 811c 	bmi.w	8025d88 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8025b50:	429e      	cmp	r6, r3
 8025b52:	f340 8119 	ble.w	8025d88 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8025b56:	2900      	cmp	r1, #0
 8025b58:	f000 8119 	beq.w	8025d8e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 8025b5c:	9a01      	ldr	r2, [sp, #4]
 8025b5e:	f899 3001 	ldrb.w	r3, [r9, #1]
 8025b62:	8855      	ldrh	r5, [r2, #2]
 8025b64:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8025b68:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 8025b6c:	fb08 f802 	mul.w	r8, r8, r2
 8025b70:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8025b74:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8025b78:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8025b7c:	435d      	muls	r5, r3
 8025b7e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8025b82:	44d0      	add	r8, sl
 8025b84:	f105 0a20 	add.w	sl, r5, #32
 8025b88:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8025b8c:	0a2d      	lsrs	r5, r5, #8
 8025b8e:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8025b92:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8025b96:	432a      	orrs	r2, r5
 8025b98:	3001      	adds	r0, #1
 8025b9a:	f100 80fe 	bmi.w	8025d9a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8025b9e:	4583      	cmp	fp, r0
 8025ba0:	f340 80fb 	ble.w	8025d9a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8025ba4:	f1be 0f00 	cmp.w	lr, #0
 8025ba8:	f000 80fc 	beq.w	8025da4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 8025bac:	2f00      	cmp	r7, #0
 8025bae:	f2c0 80f1 	blt.w	8025d94 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8025bb2:	42be      	cmp	r6, r7
 8025bb4:	f340 80ee 	ble.w	8025d94 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8025bb8:	9801      	ldr	r0, [sp, #4]
 8025bba:	f819 5006 	ldrb.w	r5, [r9, r6]
 8025bbe:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8025bc2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8025bc6:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 8025bca:	fb0a fa00 	mul.w	sl, sl, r0
 8025bce:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8025bd2:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8025bd6:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8025bda:	fb05 f808 	mul.w	r8, r5, r8
 8025bde:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8025be2:	4482      	add	sl, r0
 8025be4:	f108 0020 	add.w	r0, r8, #32
 8025be8:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8025bec:	0a00      	lsrs	r0, r0, #8
 8025bee:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8025bf2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025bf6:	ea4b 0b00 	orr.w	fp, fp, r0
 8025bfa:	3701      	adds	r7, #1
 8025bfc:	f100 80d7 	bmi.w	8025dae <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8025c00:	42be      	cmp	r6, r7
 8025c02:	f340 80d4 	ble.w	8025dae <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8025c06:	2900      	cmp	r1, #0
 8025c08:	f000 80d4 	beq.w	8025db4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 8025c0c:	3601      	adds	r6, #1
 8025c0e:	9801      	ldr	r0, [sp, #4]
 8025c10:	f819 7006 	ldrb.w	r7, [r9, r6]
 8025c14:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8025c18:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8025c1c:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 8025c20:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025c24:	fb09 f906 	mul.w	r9, r9, r6
 8025c28:	fb07 f800 	mul.w	r8, r7, r0
 8025c2c:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8025c30:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8025c34:	f609 0901 	addw	r9, r9, #2049	; 0x801
 8025c38:	44d1      	add	r9, sl
 8025c3a:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8025c3e:	f108 0020 	add.w	r0, r8, #32
 8025c42:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8025c46:	0a00      	lsrs	r0, r0, #8
 8025c48:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025c4c:	4330      	orrs	r0, r6
 8025c4e:	b28e      	uxth	r6, r1
 8025c50:	fa1f f98e 	uxth.w	r9, lr
 8025c54:	fb06 f809 	mul.w	r8, r6, r9
 8025c58:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8025c5c:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8025c60:	0136      	lsls	r6, r6, #4
 8025c62:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025c66:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8025c6a:	9601      	str	r6, [sp, #4]
 8025c6c:	ea4a 0404 	orr.w	r4, sl, r4
 8025c70:	fa1f f689 	uxth.w	r6, r9
 8025c74:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8025c78:	fb11 f90e 	smulbb	r9, r1, lr
 8025c7c:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8025c80:	9602      	str	r6, [sp, #8]
 8025c82:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025c86:	4626      	mov	r6, r4
 8025c88:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8025c8c:	f1ce 0410 	rsb	r4, lr, #16
 8025c90:	1a64      	subs	r4, r4, r1
 8025c92:	ea4a 0202 	orr.w	r2, sl, r2
 8025c96:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 8025c9a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8025c9e:	434a      	muls	r2, r1
 8025ca0:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8025ca4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025ca8:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8025cac:	fb04 2406 	mla	r4, r4, r6, r2
 8025cb0:	ea4a 0000 	orr.w	r0, sl, r0
 8025cb4:	fb09 4200 	mla	r2, r9, r0, r4
 8025cb8:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8025cbc:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8025cc0:	9801      	ldr	r0, [sp, #4]
 8025cc2:	9903      	ldr	r1, [sp, #12]
 8025cc4:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8025cc8:	ea44 0b0b 	orr.w	fp, r4, fp
 8025ccc:	9c02      	ldr	r4, [sp, #8]
 8025cce:	8809      	ldrh	r1, [r1, #0]
 8025cd0:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 8025cd4:	1b00      	subs	r0, r0, r4
 8025cd6:	9c01      	ldr	r4, [sp, #4]
 8025cd8:	eba4 0608 	sub.w	r6, r4, r8
 8025cdc:	b2b6      	uxth	r6, r6
 8025cde:	b280      	uxth	r0, r0
 8025ce0:	4373      	muls	r3, r6
 8025ce2:	fb0c 3300 	mla	r3, ip, r0, r3
 8025ce6:	9802      	ldr	r0, [sp, #8]
 8025ce8:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8025cec:	fb00 3505 	mla	r5, r0, r5, r3
 8025cf0:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8025cf4:	fb08 5707 	mla	r7, r8, r7, r5
 8025cf8:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8025cfc:	120b      	asrs	r3, r1, #8
 8025cfe:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8025d02:	ea6f 2727 	mvn.w	r7, r7, asr #8
 8025d06:	b2ff      	uxtb	r7, r7
 8025d08:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025d0c:	10c8      	asrs	r0, r1, #3
 8025d0e:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8025d12:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8025d16:	00c9      	lsls	r1, r1, #3
 8025d18:	437b      	muls	r3, r7
 8025d1a:	ea42 0e0e 	orr.w	lr, r2, lr
 8025d1e:	b2c9      	uxtb	r1, r1
 8025d20:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8025d24:	fa1f f28e 	uxth.w	r2, lr
 8025d28:	4378      	muls	r0, r7
 8025d2a:	434f      	muls	r7, r1
 8025d2c:	1c59      	adds	r1, r3, #1
 8025d2e:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8025d32:	1213      	asrs	r3, r2, #8
 8025d34:	f023 0307 	bic.w	r3, r3, #7
 8025d38:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8025d3c:	1c41      	adds	r1, r0, #1
 8025d3e:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8025d42:	10d1      	asrs	r1, r2, #3
 8025d44:	f021 0103 	bic.w	r1, r1, #3
 8025d48:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8025d4c:	021b      	lsls	r3, r3, #8
 8025d4e:	00c9      	lsls	r1, r1, #3
 8025d50:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8025d54:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8025d58:	430b      	orrs	r3, r1
 8025d5a:	1c79      	adds	r1, r7, #1
 8025d5c:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 8025d60:	00d2      	lsls	r2, r2, #3
 8025d62:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8025d66:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8025d6a:	431a      	orrs	r2, r3
 8025d6c:	9b03      	ldr	r3, [sp, #12]
 8025d6e:	801a      	strh	r2, [r3, #0]
 8025d70:	b005      	add	sp, #20
 8025d72:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025d76:	f04f 0c00 	mov.w	ip, #0
 8025d7a:	4664      	mov	r4, ip
 8025d7c:	e6e5      	b.n	8025b4a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 8025d7e:	2300      	movs	r3, #0
 8025d80:	469c      	mov	ip, r3
 8025d82:	461a      	mov	r2, r3
 8025d84:	461c      	mov	r4, r3
 8025d86:	e707      	b.n	8025b98 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8025d88:	2300      	movs	r3, #0
 8025d8a:	461a      	mov	r2, r3
 8025d8c:	e704      	b.n	8025b98 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8025d8e:	460b      	mov	r3, r1
 8025d90:	460a      	mov	r2, r1
 8025d92:	e701      	b.n	8025b98 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8025d94:	2500      	movs	r5, #0
 8025d96:	46ab      	mov	fp, r5
 8025d98:	e72f      	b.n	8025bfa <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 8025d9a:	2700      	movs	r7, #0
 8025d9c:	463d      	mov	r5, r7
 8025d9e:	4638      	mov	r0, r7
 8025da0:	46bb      	mov	fp, r7
 8025da2:	e754      	b.n	8025c4e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8025da4:	4677      	mov	r7, lr
 8025da6:	4675      	mov	r5, lr
 8025da8:	4670      	mov	r0, lr
 8025daa:	46f3      	mov	fp, lr
 8025dac:	e74f      	b.n	8025c4e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8025dae:	2700      	movs	r7, #0
 8025db0:	4638      	mov	r0, r7
 8025db2:	e74c      	b.n	8025c4e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8025db4:	460f      	mov	r7, r1
 8025db6:	4608      	mov	r0, r1
 8025db8:	e749      	b.n	8025c4e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

08025dbc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8025dbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025dc0:	b093      	sub	sp, #76	; 0x4c
 8025dc2:	9210      	str	r2, [sp, #64]	; 0x40
 8025dc4:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8025dc6:	910e      	str	r1, [sp, #56]	; 0x38
 8025dc8:	9306      	str	r3, [sp, #24]
 8025dca:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8025dce:	9011      	str	r0, [sp, #68]	; 0x44
 8025dd0:	6850      	ldr	r0, [r2, #4]
 8025dd2:	6812      	ldr	r2, [r2, #0]
 8025dd4:	fb00 1303 	mla	r3, r0, r3, r1
 8025dd8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8025ddc:	9307      	str	r3, [sp, #28]
 8025dde:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025de0:	681b      	ldr	r3, [r3, #0]
 8025de2:	9308      	str	r3, [sp, #32]
 8025de4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025de6:	685b      	ldr	r3, [r3, #4]
 8025de8:	9309      	str	r3, [sp, #36]	; 0x24
 8025dea:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8025dec:	2b00      	cmp	r3, #0
 8025dee:	dc03      	bgt.n	8025df8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8025df0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8025df2:	2b00      	cmp	r3, #0
 8025df4:	f340 83b4 	ble.w	8026560 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8025df8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025dfa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025dfe:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8025e02:	1e48      	subs	r0, r1, #1
 8025e04:	1e55      	subs	r5, r2, #1
 8025e06:	9b06      	ldr	r3, [sp, #24]
 8025e08:	2b00      	cmp	r3, #0
 8025e0a:	f340 8163 	ble.w	80260d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 8025e0e:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 8025e10:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8025e12:	1436      	asrs	r6, r6, #16
 8025e14:	ea4f 4323 	mov.w	r3, r3, asr #16
 8025e18:	d406      	bmi.n	8025e28 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8025e1a:	4286      	cmp	r6, r0
 8025e1c:	da04      	bge.n	8025e28 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8025e1e:	2b00      	cmp	r3, #0
 8025e20:	db02      	blt.n	8025e28 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8025e22:	42ab      	cmp	r3, r5
 8025e24:	f2c0 8157 	blt.w	80260d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 8025e28:	3601      	adds	r6, #1
 8025e2a:	f100 8144 	bmi.w	80260b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8025e2e:	42b1      	cmp	r1, r6
 8025e30:	f2c0 8141 	blt.w	80260b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8025e34:	3301      	adds	r3, #1
 8025e36:	f100 813e 	bmi.w	80260b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8025e3a:	429a      	cmp	r2, r3
 8025e3c:	f2c0 813b 	blt.w	80260b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8025e40:	9b06      	ldr	r3, [sp, #24]
 8025e42:	9f07      	ldr	r7, [sp, #28]
 8025e44:	930f      	str	r3, [sp, #60]	; 0x3c
 8025e46:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8025e4a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8025e4c:	2b00      	cmp	r3, #0
 8025e4e:	f340 8164 	ble.w	802611a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 8025e52:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8025e54:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8025e56:	1418      	asrs	r0, r3, #16
 8025e58:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8025e5a:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8025e5e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8025e60:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8025e64:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025e66:	142d      	asrs	r5, r5, #16
 8025e68:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8025e6c:	f100 81ee 	bmi.w	802624c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8025e70:	f102 3eff 	add.w	lr, r2, #4294967295
 8025e74:	4575      	cmp	r5, lr
 8025e76:	f280 81e9 	bge.w	802624c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8025e7a:	2800      	cmp	r0, #0
 8025e7c:	f2c0 81e6 	blt.w	802624c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8025e80:	f103 3eff 	add.w	lr, r3, #4294967295
 8025e84:	4570      	cmp	r0, lr
 8025e86:	f280 81e1 	bge.w	802624c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8025e8a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025e8c:	b212      	sxth	r2, r2
 8025e8e:	fb00 5002 	mla	r0, r0, r2, r5
 8025e92:	fa1f fe81 	uxth.w	lr, r1
 8025e96:	eb03 0a00 	add.w	sl, r3, r0
 8025e9a:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8025e9e:	f813 9000 	ldrb.w	r9, [r3, r0]
 8025ea2:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8025ea6:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8025eaa:	b29b      	uxth	r3, r3
 8025eac:	f1bc 0f00 	cmp.w	ip, #0
 8025eb0:	f000 8179 	beq.w	80261a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8025eb4:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8025eb8:	940a      	str	r4, [sp, #40]	; 0x28
 8025eba:	eb0a 0b02 	add.w	fp, sl, r2
 8025ebe:	fa1f fa8c 	uxth.w	sl, ip
 8025ec2:	fb0a fe0e 	mul.w	lr, sl, lr
 8025ec6:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8025eca:	fa1f fa8a 	uxth.w	sl, sl
 8025ece:	eba5 050e 	sub.w	r5, r5, lr
 8025ed2:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8025ed6:	940b      	str	r4, [sp, #44]	; 0x2c
 8025ed8:	eba3 030a 	sub.w	r3, r3, sl
 8025edc:	b2ad      	uxth	r5, r5
 8025ede:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8025ee0:	b29b      	uxth	r3, r3
 8025ee2:	fb08 f505 	mul.w	r5, r8, r5
 8025ee6:	fb09 5303 	mla	r3, r9, r3, r5
 8025eea:	fb0a 3304 	mla	r3, sl, r4, r3
 8025eee:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8025ef0:	fb0e 3304 	mla	r3, lr, r4, r3
 8025ef4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025ef8:	2b00      	cmp	r3, #0
 8025efa:	f000 80cf 	beq.w	802609c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8025efe:	9c08      	ldr	r4, [sp, #32]
 8025f00:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8025f04:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8025f08:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8025f0c:	f000 8150 	beq.w	80261b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8025f10:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8025f14:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8025f18:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025f1c:	fb09 f000 	mul.w	r0, r9, r0
 8025f20:	fb0a fe0e 	mul.w	lr, sl, lr
 8025f24:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8025f28:	f100 0b20 	add.w	fp, r0, #32
 8025f2c:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8025f30:	44ce      	add	lr, r9
 8025f32:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8025f36:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8025f3a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8025f3e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8025f42:	ea4e 0909 	orr.w	r9, lr, r9
 8025f46:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8025f4a:	8868      	ldrh	r0, [r5, #2]
 8025f4c:	d019      	beq.n	8025f82 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8025f4e:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8025f52:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8025f56:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025f5a:	fb08 f800 	mul.w	r8, r8, r0
 8025f5e:	fb0a fe0e 	mul.w	lr, sl, lr
 8025f62:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8025f66:	f108 0b20 	add.w	fp, r8, #32
 8025f6a:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8025f6e:	4486      	add	lr, r0
 8025f70:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8025f74:	0a00      	lsrs	r0, r0, #8
 8025f76:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8025f7a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025f7e:	ea4e 0000 	orr.w	r0, lr, r0
 8025f82:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8025f86:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8025f8a:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8025f8e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8025f92:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025f96:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8025f9a:	ea4e 0909 	orr.w	r9, lr, r9
 8025f9e:	ea4a 0000 	orr.w	r0, sl, r0
 8025fa2:	f1bc 0f00 	cmp.w	ip, #0
 8025fa6:	f000 8105 	beq.w	80261b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8025faa:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8025fae:	3a01      	subs	r2, #1
 8025fb0:	0052      	lsls	r2, r2, #1
 8025fb2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8025fb4:	3202      	adds	r2, #2
 8025fb6:	2cff      	cmp	r4, #255	; 0xff
 8025fb8:	eb05 0e02 	add.w	lr, r5, r2
 8025fbc:	5aaa      	ldrh	r2, [r5, r2]
 8025fbe:	d018      	beq.n	8025ff2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8025fc0:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8025fc4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025fc8:	fb04 fa02 	mul.w	sl, r4, r2
 8025fcc:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8025fd0:	fb08 f805 	mul.w	r8, r8, r5
 8025fd4:	f10a 0520 	add.w	r5, sl, #32
 8025fd8:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8025fdc:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8025fe0:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8025fe4:	4442      	add	r2, r8
 8025fe6:	0a2d      	lsrs	r5, r5, #8
 8025fe8:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8025fec:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8025ff0:	432a      	orrs	r2, r5
 8025ff2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8025ff4:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8025ff8:	2cff      	cmp	r4, #255	; 0xff
 8025ffa:	d01a      	beq.n	8026032 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8025ffc:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8026000:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8026004:	fb04 fa05 	mul.w	sl, r4, r5
 8026008:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802600c:	fb08 f80e 	mul.w	r8, r8, lr
 8026010:	f10a 0e20 	add.w	lr, sl, #32
 8026014:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8026018:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 802601c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8026020:	4445      	add	r5, r8
 8026022:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8026026:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 802602a:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 802602e:	ea45 050e 	orr.w	r5, r5, lr
 8026032:	fb1c fe01 	smulbb	lr, ip, r1
 8026036:	ea4f 0eee 	mov.w	lr, lr, asr #3
 802603a:	f1cc 0810 	rsb	r8, ip, #16
 802603e:	eba8 0801 	sub.w	r8, r8, r1
 8026042:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8026046:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 802604a:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 802604e:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8026052:	4341      	muls	r1, r0
 8026054:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8026058:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802605c:	ea4a 0202 	orr.w	r2, sl, r2
 8026060:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8026064:	fb09 1108 	mla	r1, r9, r8, r1
 8026068:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802606c:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8026070:	fb0c 1102 	mla	r1, ip, r2, r1
 8026074:	ea4b 0505 	orr.w	r5, fp, r5
 8026078:	fb0e 1e05 	mla	lr, lr, r5, r1
 802607c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8026080:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8026084:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8026088:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 802608c:	ea42 0e0e 	orr.w	lr, r2, lr
 8026090:	fa1f f28e 	uxth.w	r2, lr
 8026094:	2bff      	cmp	r3, #255	; 0xff
 8026096:	f040 80a1 	bne.w	80261dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 802609a:	803a      	strh	r2, [r7, #0]
 802609c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802609e:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 80260a0:	4413      	add	r3, r2
 80260a2:	931d      	str	r3, [sp, #116]	; 0x74
 80260a4:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 80260a6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80260a8:	441a      	add	r2, r3
 80260aa:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80260ac:	921e      	str	r2, [sp, #120]	; 0x78
 80260ae:	3b01      	subs	r3, #1
 80260b0:	3702      	adds	r7, #2
 80260b2:	930f      	str	r3, [sp, #60]	; 0x3c
 80260b4:	e6c9      	b.n	8025e4a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80260b6:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80260b8:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 80260ba:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 80260bc:	4433      	add	r3, r6
 80260be:	931d      	str	r3, [sp, #116]	; 0x74
 80260c0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80260c2:	441c      	add	r4, r3
 80260c4:	9b06      	ldr	r3, [sp, #24]
 80260c6:	941e      	str	r4, [sp, #120]	; 0x78
 80260c8:	3b01      	subs	r3, #1
 80260ca:	9306      	str	r3, [sp, #24]
 80260cc:	9b07      	ldr	r3, [sp, #28]
 80260ce:	3302      	adds	r3, #2
 80260d0:	9307      	str	r3, [sp, #28]
 80260d2:	e698      	b.n	8025e06 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80260d4:	d028      	beq.n	8026128 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80260d6:	9b06      	ldr	r3, [sp, #24]
 80260d8:	981f      	ldr	r0, [sp, #124]	; 0x7c
 80260da:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 80260dc:	3b01      	subs	r3, #1
 80260de:	fb00 5003 	mla	r0, r0, r3, r5
 80260e2:	1400      	asrs	r0, r0, #16
 80260e4:	f53f aeac 	bmi.w	8025e40 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80260e8:	3901      	subs	r1, #1
 80260ea:	4288      	cmp	r0, r1
 80260ec:	f6bf aea8 	bge.w	8025e40 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80260f0:	9920      	ldr	r1, [sp, #128]	; 0x80
 80260f2:	981e      	ldr	r0, [sp, #120]	; 0x78
 80260f4:	fb01 0303 	mla	r3, r1, r3, r0
 80260f8:	141b      	asrs	r3, r3, #16
 80260fa:	f53f aea1 	bmi.w	8025e40 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80260fe:	3a01      	subs	r2, #1
 8026100:	4293      	cmp	r3, r2
 8026102:	f6bf ae9d 	bge.w	8025e40 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8026106:	9b06      	ldr	r3, [sp, #24]
 8026108:	f8dd e01c 	ldr.w	lr, [sp, #28]
 802610c:	930f      	str	r3, [sp, #60]	; 0x3c
 802610e:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8026112:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8026114:	2b00      	cmp	r3, #0
 8026116:	f300 80b6 	bgt.w	8026286 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 802611a:	9b06      	ldr	r3, [sp, #24]
 802611c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8026120:	9b07      	ldr	r3, [sp, #28]
 8026122:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8026126:	9307      	str	r3, [sp, #28]
 8026128:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802612a:	2b00      	cmp	r3, #0
 802612c:	f340 8218 	ble.w	8026560 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8026130:	ee30 0a04 	vadd.f32	s0, s0, s8
 8026134:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8026138:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802613c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802613e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8026142:	ee31 1a05 	vadd.f32	s2, s2, s10
 8026146:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802614a:	eef0 6a62 	vmov.f32	s13, s5
 802614e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8026152:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026156:	ee77 2a62 	vsub.f32	s5, s14, s5
 802615a:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 802615e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8026162:	eef0 6a43 	vmov.f32	s13, s6
 8026166:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802616a:	ee12 2a90 	vmov	r2, s5
 802616e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8026172:	fb92 f3f3 	sdiv	r3, r2, r3
 8026176:	ee13 2a10 	vmov	r2, s6
 802617a:	931f      	str	r3, [sp, #124]	; 0x7c
 802617c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802617e:	fb92 f3f3 	sdiv	r3, r2, r3
 8026182:	9320      	str	r3, [sp, #128]	; 0x80
 8026184:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8026186:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8026188:	3b01      	subs	r3, #1
 802618a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802618e:	930e      	str	r3, [sp, #56]	; 0x38
 8026190:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8026192:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 8026196:	bf08      	it	eq
 8026198:	4613      	moveq	r3, r2
 802619a:	9306      	str	r3, [sp, #24]
 802619c:	eeb0 3a67 	vmov.f32	s6, s15
 80261a0:	eef0 2a47 	vmov.f32	s5, s14
 80261a4:	e621      	b.n	8025dea <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 80261a6:	fb08 f505 	mul.w	r5, r8, r5
 80261aa:	fb09 5303 	mla	r3, r9, r3, r5
 80261ae:	e6a1      	b.n	8025ef4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 80261b0:	4681      	mov	r9, r0
 80261b2:	e6c8      	b.n	8025f46 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 80261b4:	f1c1 0210 	rsb	r2, r1, #16
 80261b8:	4341      	muls	r1, r0
 80261ba:	fb09 1902 	mla	r9, r9, r2, r1
 80261be:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80261c2:	ea4f 5259 	mov.w	r2, r9, lsr #21
 80261c6:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80261ca:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80261ce:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80261d2:	ea42 0909 	orr.w	r9, r2, r9
 80261d6:	fa1f f289 	uxth.w	r2, r9
 80261da:	e75b      	b.n	8026094 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80261dc:	f8b7 c000 	ldrh.w	ip, [r7]
 80261e0:	43db      	mvns	r3, r3
 80261e2:	ea4f 202c 	mov.w	r0, ip, asr #8
 80261e6:	fa5f fe83 	uxtb.w	lr, r3
 80261ea:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80261ee:	fb00 f00e 	mul.w	r0, r0, lr
 80261f2:	1c41      	adds	r1, r0, #1
 80261f4:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 80261f8:	1211      	asrs	r1, r2, #8
 80261fa:	ea4f 05ec 	mov.w	r5, ip, asr #3
 80261fe:	f021 0107 	bic.w	r1, r1, #7
 8026202:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8026206:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 802620a:	48d7      	ldr	r0, [pc, #860]	; (8026568 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 802620c:	fb05 f50e 	mul.w	r5, r5, lr
 8026210:	b2c9      	uxtb	r1, r1
 8026212:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 8026216:	1c69      	adds	r1, r5, #1
 8026218:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 802621c:	10d1      	asrs	r1, r2, #3
 802621e:	f021 0103 	bic.w	r1, r1, #3
 8026222:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 8026226:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 802622a:	b2db      	uxtb	r3, r3
 802622c:	00c9      	lsls	r1, r1, #3
 802622e:	fb03 f30e 	mul.w	r3, r3, lr
 8026232:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8026236:	4301      	orrs	r1, r0
 8026238:	1c58      	adds	r0, r3, #1
 802623a:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 802623e:	00d2      	lsls	r2, r2, #3
 8026240:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8026244:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8026248:	430a      	orrs	r2, r1
 802624a:	e726      	b.n	802609a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 802624c:	f115 0e01 	adds.w	lr, r5, #1
 8026250:	f53f af24 	bmi.w	802609c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8026254:	4572      	cmp	r2, lr
 8026256:	f6ff af21 	blt.w	802609c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 802625a:	f110 0e01 	adds.w	lr, r0, #1
 802625e:	f53f af1d 	bmi.w	802609c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8026262:	4573      	cmp	r3, lr
 8026264:	f6ff af1a 	blt.w	802609c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8026268:	b21b      	sxth	r3, r3
 802626a:	b212      	sxth	r2, r2
 802626c:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 8026270:	e9cd 5002 	strd	r5, r0, [sp, #8]
 8026274:	9301      	str	r3, [sp, #4]
 8026276:	9200      	str	r2, [sp, #0]
 8026278:	4639      	mov	r1, r7
 802627a:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 802627e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8026280:	f7ff fc24 	bl	8025acc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8026284:	e70a      	b.n	802609c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8026286:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8026288:	f3c3 3203 	ubfx	r2, r3, #12, #4
 802628c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 802628e:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8026292:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026294:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8026298:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 802629a:	141f      	asrs	r7, r3, #16
 802629c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802629e:	141b      	asrs	r3, r3, #16
 80262a0:	fb01 3707 	mla	r7, r1, r7, r3
 80262a4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80262a6:	fa1f fc82 	uxth.w	ip, r2
 80262aa:	eb03 0a07 	add.w	sl, r3, r7
 80262ae:	ea4f 100c 	mov.w	r0, ip, lsl #4
 80262b2:	f813 9007 	ldrb.w	r9, [r3, r7]
 80262b6:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80262ba:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 80262be:	b29b      	uxth	r3, r3
 80262c0:	2d00      	cmp	r5, #0
 80262c2:	f000 80fe 	beq.w	80264c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 80262c6:	f81a 4001 	ldrb.w	r4, [sl, r1]
 80262ca:	940c      	str	r4, [sp, #48]	; 0x30
 80262cc:	eb0a 0b01 	add.w	fp, sl, r1
 80262d0:	fa1f fa85 	uxth.w	sl, r5
 80262d4:	fb0a fc0c 	mul.w	ip, sl, ip
 80262d8:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 80262dc:	fa1f fa8a 	uxth.w	sl, sl
 80262e0:	eba0 000c 	sub.w	r0, r0, ip
 80262e4:	eba3 030a 	sub.w	r3, r3, sl
 80262e8:	b280      	uxth	r0, r0
 80262ea:	fb08 f000 	mul.w	r0, r8, r0
 80262ee:	b29b      	uxth	r3, r3
 80262f0:	fb09 0303 	mla	r3, r9, r3, r0
 80262f4:	980c      	ldr	r0, [sp, #48]	; 0x30
 80262f6:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80262fa:	940d      	str	r4, [sp, #52]	; 0x34
 80262fc:	fb0a 3300 	mla	r3, sl, r0, r3
 8026300:	fb0c 3304 	mla	r3, ip, r4, r3
 8026304:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8026308:	2b00      	cmp	r3, #0
 802630a:	f000 80cc 	beq.w	80264a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 802630e:	9808      	ldr	r0, [sp, #32]
 8026310:	9c08      	ldr	r4, [sp, #32]
 8026312:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8026316:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 802631a:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 802631e:	f000 80d5 	beq.w	80264cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8026322:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8026326:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 802632a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802632e:	fb09 f707 	mul.w	r7, r9, r7
 8026332:	fb0a fc0c 	mul.w	ip, sl, ip
 8026336:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 802633a:	f107 0b20 	add.w	fp, r7, #32
 802633e:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8026342:	44cc      	add	ip, r9
 8026344:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8026348:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802634c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8026350:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8026354:	ea4c 0909 	orr.w	r9, ip, r9
 8026358:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 802635c:	8847      	ldrh	r7, [r0, #2]
 802635e:	d019      	beq.n	8026394 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 8026360:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8026364:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8026368:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802636c:	fb08 f807 	mul.w	r8, r8, r7
 8026370:	fb0a fc0c 	mul.w	ip, sl, ip
 8026374:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8026378:	f108 0b20 	add.w	fp, r8, #32
 802637c:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8026380:	44bc      	add	ip, r7
 8026382:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8026386:	0a3f      	lsrs	r7, r7, #8
 8026388:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 802638c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8026390:	ea4c 0707 	orr.w	r7, ip, r7
 8026394:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8026398:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 802639c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80263a0:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80263a4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80263a8:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80263ac:	ea4c 0909 	orr.w	r9, ip, r9
 80263b0:	ea4a 0707 	orr.w	r7, sl, r7
 80263b4:	2d00      	cmp	r5, #0
 80263b6:	f000 808b 	beq.w	80264d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 80263ba:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 80263be:	3901      	subs	r1, #1
 80263c0:	0049      	lsls	r1, r1, #1
 80263c2:	3102      	adds	r1, #2
 80263c4:	eb00 0c01 	add.w	ip, r0, r1
 80263c8:	5a41      	ldrh	r1, [r0, r1]
 80263ca:	980c      	ldr	r0, [sp, #48]	; 0x30
 80263cc:	28ff      	cmp	r0, #255	; 0xff
 80263ce:	d019      	beq.n	8026404 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 80263d0:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80263d2:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 80263d6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80263da:	fb04 fa01 	mul.w	sl, r4, r1
 80263de:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80263e2:	fb08 f800 	mul.w	r8, r8, r0
 80263e6:	f10a 0020 	add.w	r0, sl, #32
 80263ea:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 80263ee:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 80263f2:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80263f6:	4441      	add	r1, r8
 80263f8:	0a00      	lsrs	r0, r0, #8
 80263fa:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 80263fe:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8026402:	4301      	orrs	r1, r0
 8026404:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8026406:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 802640a:	2cff      	cmp	r4, #255	; 0xff
 802640c:	d01a      	beq.n	8026444 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 802640e:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8026412:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8026416:	fb04 fa00 	mul.w	sl, r4, r0
 802641a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802641e:	fb08 f80c 	mul.w	r8, r8, ip
 8026422:	f10a 0c20 	add.w	ip, sl, #32
 8026426:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 802642a:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 802642e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8026432:	4440      	add	r0, r8
 8026434:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8026438:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 802643c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8026440:	ea40 000c 	orr.w	r0, r0, ip
 8026444:	fb15 fc02 	smulbb	ip, r5, r2
 8026448:	ea4f 0cec 	mov.w	ip, ip, asr #3
 802644c:	f1c5 0810 	rsb	r8, r5, #16
 8026450:	eba8 0802 	sub.w	r8, r8, r2
 8026454:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8026458:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 802645c:	437a      	muls	r2, r7
 802645e:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8026462:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8026466:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802646a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802646e:	fb09 2208 	mla	r2, r9, r8, r2
 8026472:	ea4a 0101 	orr.w	r1, sl, r1
 8026476:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 802647a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802647e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8026482:	fb05 2201 	mla	r2, r5, r1, r2
 8026486:	ea4b 0000 	orr.w	r0, fp, r0
 802648a:	fb0c 2200 	mla	r2, ip, r0, r2
 802648e:	0d57      	lsrs	r7, r2, #21
 8026490:	0952      	lsrs	r2, r2, #5
 8026492:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8026496:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802649a:	433a      	orrs	r2, r7
 802649c:	2bff      	cmp	r3, #255	; 0xff
 802649e:	b292      	uxth	r2, r2
 80264a0:	d127      	bne.n	80264f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 80264a2:	f8ae 2000 	strh.w	r2, [lr]
 80264a6:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80264a8:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 80264aa:	4413      	add	r3, r2
 80264ac:	931d      	str	r3, [sp, #116]	; 0x74
 80264ae:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 80264b0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80264b2:	441a      	add	r2, r3
 80264b4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80264b6:	921e      	str	r2, [sp, #120]	; 0x78
 80264b8:	3b01      	subs	r3, #1
 80264ba:	f10e 0e02 	add.w	lr, lr, #2
 80264be:	930f      	str	r3, [sp, #60]	; 0x3c
 80264c0:	e627      	b.n	8026112 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80264c2:	fb08 f000 	mul.w	r0, r8, r0
 80264c6:	fb09 0303 	mla	r3, r9, r3, r0
 80264ca:	e71b      	b.n	8026304 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 80264cc:	46b9      	mov	r9, r7
 80264ce:	e743      	b.n	8026358 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 80264d0:	f1c2 0110 	rsb	r1, r2, #16
 80264d4:	437a      	muls	r2, r7
 80264d6:	fb09 2901 	mla	r9, r9, r1, r2
 80264da:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80264de:	ea4f 5059 	mov.w	r0, r9, lsr #21
 80264e2:	ea4f 1259 	mov.w	r2, r9, lsr #5
 80264e6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80264ea:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80264ee:	4302      	orrs	r2, r0
 80264f0:	e7d4      	b.n	802649c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 80264f2:	f8be 7000 	ldrh.w	r7, [lr]
 80264f6:	4c1c      	ldr	r4, [pc, #112]	; (8026568 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 80264f8:	43db      	mvns	r3, r3
 80264fa:	1238      	asrs	r0, r7, #8
 80264fc:	fa5f fc83 	uxtb.w	ip, r3
 8026500:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8026504:	10fd      	asrs	r5, r7, #3
 8026506:	fb00 f00c 	mul.w	r0, r0, ip
 802650a:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 802650e:	fb05 f10c 	mul.w	r1, r5, ip
 8026512:	1c45      	adds	r5, r0, #1
 8026514:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8026518:	1215      	asrs	r5, r2, #8
 802651a:	f025 0507 	bic.w	r5, r5, #7
 802651e:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8026522:	1c4d      	adds	r5, r1, #1
 8026524:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8026528:	10d1      	asrs	r1, r2, #3
 802652a:	f021 0103 	bic.w	r1, r1, #3
 802652e:	00fb      	lsls	r3, r7, #3
 8026530:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8026534:	b2db      	uxtb	r3, r3
 8026536:	b2c0      	uxtb	r0, r0
 8026538:	00c9      	lsls	r1, r1, #3
 802653a:	fb03 f30c 	mul.w	r3, r3, ip
 802653e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8026542:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 8026546:	4308      	orrs	r0, r1
 8026548:	1c59      	adds	r1, r3, #1
 802654a:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 802654e:	00d2      	lsls	r2, r2, #3
 8026550:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8026554:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8026558:	4318      	orrs	r0, r3
 802655a:	f8ae 0000 	strh.w	r0, [lr]
 802655e:	e7a2      	b.n	80264a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 8026560:	b013      	add	sp, #76	; 0x4c
 8026562:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026566:	bf00      	nop
 8026568:	fffff800 	.word	0xfffff800

0802656c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 802656c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8026570:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 8026574:	fb05 4c03 	mla	ip, r5, r3, r4
 8026578:	2d00      	cmp	r5, #0
 802657a:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 802657e:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 8026582:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8026586:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 802658a:	8808      	ldrh	r0, [r1, #0]
 802658c:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 8026590:	f2c0 80a7 	blt.w	80266e2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8026594:	45aa      	cmp	sl, r5
 8026596:	f340 80a4 	ble.w	80266e2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 802659a:	2c00      	cmp	r4, #0
 802659c:	f2c0 809f 	blt.w	80266de <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 80265a0:	42a3      	cmp	r3, r4
 80265a2:	f340 809c 	ble.w	80266de <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 80265a6:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 80265aa:	1c62      	adds	r2, r4, #1
 80265ac:	f100 809c 	bmi.w	80266e8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 80265b0:	4293      	cmp	r3, r2
 80265b2:	f340 8099 	ble.w	80266e8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 80265b6:	f1b9 0f00 	cmp.w	r9, #0
 80265ba:	f000 8095 	beq.w	80266e8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 80265be:	f8be c002 	ldrh.w	ip, [lr, #2]
 80265c2:	3501      	adds	r5, #1
 80265c4:	f100 8094 	bmi.w	80266f0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 80265c8:	45aa      	cmp	sl, r5
 80265ca:	f340 8091 	ble.w	80266f0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 80265ce:	2f00      	cmp	r7, #0
 80265d0:	f000 808e 	beq.w	80266f0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 80265d4:	2c00      	cmp	r4, #0
 80265d6:	f2c0 8089 	blt.w	80266ec <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 80265da:	42a3      	cmp	r3, r4
 80265dc:	f340 8086 	ble.w	80266ec <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 80265e0:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 80265e4:	3401      	adds	r4, #1
 80265e6:	f100 8086 	bmi.w	80266f6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 80265ea:	42a3      	cmp	r3, r4
 80265ec:	f340 8083 	ble.w	80266f6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 80265f0:	f1b9 0f00 	cmp.w	r9, #0
 80265f4:	d07f      	beq.n	80266f6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 80265f6:	3301      	adds	r3, #1
 80265f8:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 80265fc:	ea4f 4408 	mov.w	r4, r8, lsl #16
 8026600:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8026604:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8026608:	fb19 fe07 	smulbb	lr, r9, r7
 802660c:	ea44 0808 	orr.w	r8, r4, r8
 8026610:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8026614:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 8026618:	f1c7 0210 	rsb	r2, r7, #16
 802661c:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8026620:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8026624:	ea44 0c0c 	orr.w	ip, r4, ip
 8026628:	eba2 0209 	sub.w	r2, r2, r9
 802662c:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8026630:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8026634:	fb04 f40c 	mul.w	r4, r4, ip
 8026638:	fb02 4808 	mla	r8, r2, r8, r4
 802663c:	041a      	lsls	r2, r3, #16
 802663e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8026642:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8026646:	4313      	orrs	r3, r2
 8026648:	042a      	lsls	r2, r5, #16
 802664a:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 802664e:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8026652:	fb0e 8303 	mla	r3, lr, r3, r8
 8026656:	432a      	orrs	r2, r5
 8026658:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 802665c:	fb07 3202 	mla	r2, r7, r2, r3
 8026660:	0d53      	lsrs	r3, r2, #21
 8026662:	0952      	lsrs	r2, r2, #5
 8026664:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8026668:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802666c:	431a      	orrs	r2, r3
 802666e:	b293      	uxth	r3, r2
 8026670:	b2b4      	uxth	r4, r6
 8026672:	1202      	asrs	r2, r0, #8
 8026674:	43f6      	mvns	r6, r6
 8026676:	b2f6      	uxtb	r6, r6
 8026678:	121d      	asrs	r5, r3, #8
 802667a:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 802667e:	fb12 f206 	smulbb	r2, r2, r6
 8026682:	10c7      	asrs	r7, r0, #3
 8026684:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8026688:	00c0      	lsls	r0, r0, #3
 802668a:	fb05 2504 	mla	r5, r5, r4, r2
 802668e:	b2c0      	uxtb	r0, r0
 8026690:	10da      	asrs	r2, r3, #3
 8026692:	00db      	lsls	r3, r3, #3
 8026694:	b2db      	uxtb	r3, r3
 8026696:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 802669a:	fb10 f006 	smulbb	r0, r0, r6
 802669e:	b2ad      	uxth	r5, r5
 80266a0:	fb03 0004 	mla	r0, r3, r4, r0
 80266a4:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80266a8:	fb17 f706 	smulbb	r7, r7, r6
 80266ac:	b280      	uxth	r0, r0
 80266ae:	1c6b      	adds	r3, r5, #1
 80266b0:	fb02 7204 	mla	r2, r2, r4, r7
 80266b4:	b292      	uxth	r2, r2
 80266b6:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80266ba:	1c43      	adds	r3, r0, #1
 80266bc:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80266c0:	1c50      	adds	r0, r2, #1
 80266c2:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 80266c6:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80266ca:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80266ce:	0952      	lsrs	r2, r2, #5
 80266d0:	432b      	orrs	r3, r5
 80266d2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80266d6:	4313      	orrs	r3, r2
 80266d8:	800b      	strh	r3, [r1, #0]
 80266da:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80266de:	4680      	mov	r8, r0
 80266e0:	e763      	b.n	80265aa <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 80266e2:	4684      	mov	ip, r0
 80266e4:	4680      	mov	r8, r0
 80266e6:	e76c      	b.n	80265c2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 80266e8:	4684      	mov	ip, r0
 80266ea:	e76a      	b.n	80265c2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 80266ec:	4605      	mov	r5, r0
 80266ee:	e779      	b.n	80265e4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 80266f0:	4603      	mov	r3, r0
 80266f2:	4605      	mov	r5, r0
 80266f4:	e782      	b.n	80265fc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 80266f6:	4603      	mov	r3, r0
 80266f8:	e780      	b.n	80265fc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

080266fa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80266fa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80266fe:	b093      	sub	sp, #76	; 0x4c
 8026700:	461d      	mov	r5, r3
 8026702:	9210      	str	r2, [sp, #64]	; 0x40
 8026704:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8026706:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 802670a:	920b      	str	r2, [sp, #44]	; 0x2c
 802670c:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 8026710:	910a      	str	r1, [sp, #40]	; 0x28
 8026712:	6859      	ldr	r1, [r3, #4]
 8026714:	681b      	ldr	r3, [r3, #0]
 8026716:	9011      	str	r0, [sp, #68]	; 0x44
 8026718:	fb01 2707 	mla	r7, r1, r7, r2
 802671c:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 8026720:	9307      	str	r3, [sp, #28]
 8026722:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026724:	681b      	ldr	r3, [r3, #0]
 8026726:	9309      	str	r3, [sp, #36]	; 0x24
 8026728:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802672a:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 802672e:	43db      	mvns	r3, r3
 8026730:	b2db      	uxtb	r3, r3
 8026732:	9308      	str	r3, [sp, #32]
 8026734:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8026736:	2b00      	cmp	r3, #0
 8026738:	dc03      	bgt.n	8026742 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 802673a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 802673c:	2b00      	cmp	r3, #0
 802673e:	f340 8203 	ble.w	8026b48 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8026742:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026744:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8026748:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802674c:	1e48      	subs	r0, r1, #1
 802674e:	f102 3cff 	add.w	ip, r2, #4294967295
 8026752:	2d00      	cmp	r5, #0
 8026754:	f340 80da 	ble.w	802690c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8026758:	ea5f 4e24 	movs.w	lr, r4, asr #16
 802675c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8026760:	d406      	bmi.n	8026770 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8026762:	4586      	cmp	lr, r0
 8026764:	da04      	bge.n	8026770 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8026766:	2b00      	cmp	r3, #0
 8026768:	db02      	blt.n	8026770 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 802676a:	4563      	cmp	r3, ip
 802676c:	f2c0 80cf 	blt.w	802690e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8026770:	f11e 0e01 	adds.w	lr, lr, #1
 8026774:	f100 80c1 	bmi.w	80268fa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8026778:	4571      	cmp	r1, lr
 802677a:	f2c0 80be 	blt.w	80268fa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 802677e:	3301      	adds	r3, #1
 8026780:	f100 80bb 	bmi.w	80268fa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8026784:	429a      	cmp	r2, r3
 8026786:	f2c0 80b8 	blt.w	80268fa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 802678a:	f8dd 801c 	ldr.w	r8, [sp, #28]
 802678e:	46a9      	mov	r9, r5
 8026790:	f1b9 0f00 	cmp.w	r9, #0
 8026794:	f340 80d8 	ble.w	8026948 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 8026798:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802679a:	1421      	asrs	r1, r4, #16
 802679c:	ea4f 4026 	mov.w	r0, r6, asr #16
 80267a0:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80267a4:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 80267a8:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 80267ac:	f100 8111 	bmi.w	80269d2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80267b0:	f10e 3aff 	add.w	sl, lr, #4294967295
 80267b4:	4551      	cmp	r1, sl
 80267b6:	f280 810c 	bge.w	80269d2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80267ba:	2800      	cmp	r0, #0
 80267bc:	f2c0 8109 	blt.w	80269d2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80267c0:	f103 3aff 	add.w	sl, r3, #4294967295
 80267c4:	4550      	cmp	r0, sl
 80267c6:	f280 8104 	bge.w	80269d2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80267ca:	fa0f f38e 	sxth.w	r3, lr
 80267ce:	fb00 1103 	mla	r1, r0, r3, r1
 80267d2:	9809      	ldr	r0, [sp, #36]	; 0x24
 80267d4:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 80267d8:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 80267dc:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 80267e0:	f1bc 0f00 	cmp.w	ip, #0
 80267e4:	d007      	beq.n	80267f6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 80267e6:	005b      	lsls	r3, r3, #1
 80267e8:	eb0a 0003 	add.w	r0, sl, r3
 80267ec:	f83a 3003 	ldrh.w	r3, [sl, r3]
 80267f0:	930c      	str	r3, [sp, #48]	; 0x30
 80267f2:	8843      	ldrh	r3, [r0, #2]
 80267f4:	930d      	str	r3, [sp, #52]	; 0x34
 80267f6:	ea4f 400e 	mov.w	r0, lr, lsl #16
 80267fa:	fb12 f30c 	smulbb	r3, r2, ip
 80267fe:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8026802:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8026806:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 802680a:	10db      	asrs	r3, r3, #3
 802680c:	ea40 000e 	orr.w	r0, r0, lr
 8026810:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8026814:	f1cc 0e10 	rsb	lr, ip, #16
 8026818:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802681c:	ebae 0e02 	sub.w	lr, lr, r2
 8026820:	ea4a 0101 	orr.w	r1, sl, r1
 8026824:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8026828:	4351      	muls	r1, r2
 802682a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 802682c:	9f08      	ldr	r7, [sp, #32]
 802682e:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8026832:	fb0e 1e00 	mla	lr, lr, r0, r1
 8026836:	0410      	lsls	r0, r2, #16
 8026838:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 802683c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8026840:	4310      	orrs	r0, r2
 8026842:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8026844:	990c      	ldr	r1, [sp, #48]	; 0x30
 8026846:	0412      	lsls	r2, r2, #16
 8026848:	fb03 e000 	mla	r0, r3, r0, lr
 802684c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8026850:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8026854:	ea42 020e 	orr.w	r2, r2, lr
 8026858:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 802685c:	fb03 0302 	mla	r3, r3, r2, r0
 8026860:	0d5a      	lsrs	r2, r3, #21
 8026862:	095b      	lsrs	r3, r3, #5
 8026864:	f8b8 0000 	ldrh.w	r0, [r8]
 8026868:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802686c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8026870:	4313      	orrs	r3, r2
 8026872:	b29b      	uxth	r3, r3
 8026874:	1201      	asrs	r1, r0, #8
 8026876:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 802687a:	ea4f 2c23 	mov.w	ip, r3, asr #8
 802687e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8026882:	fb11 f107 	smulbb	r1, r1, r7
 8026886:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 802688a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 802688e:	00c0      	lsls	r0, r0, #3
 8026890:	fb0c 1c02 	mla	ip, ip, r2, r1
 8026894:	b2c0      	uxtb	r0, r0
 8026896:	10d9      	asrs	r1, r3, #3
 8026898:	00db      	lsls	r3, r3, #3
 802689a:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 802689e:	b2db      	uxtb	r3, r3
 80268a0:	fb10 f007 	smulbb	r0, r0, r7
 80268a4:	fa1f fc8c 	uxth.w	ip, ip
 80268a8:	fb03 0302 	mla	r3, r3, r2, r0
 80268ac:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80268b0:	fb1e fe07 	smulbb	lr, lr, r7
 80268b4:	fb01 e102 	mla	r1, r1, r2, lr
 80268b8:	b29a      	uxth	r2, r3
 80268ba:	f10c 0301 	add.w	r3, ip, #1
 80268be:	b289      	uxth	r1, r1
 80268c0:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 80268c4:	1c53      	adds	r3, r2, #1
 80268c6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80268ca:	1c4a      	adds	r2, r1, #1
 80268cc:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80268d0:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80268d4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80268d8:	0949      	lsrs	r1, r1, #5
 80268da:	ea43 030c 	orr.w	r3, r3, ip
 80268de:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80268e2:	430b      	orrs	r3, r1
 80268e4:	f8a8 3000 	strh.w	r3, [r8]
 80268e8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80268ea:	441c      	add	r4, r3
 80268ec:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80268ee:	f108 0802 	add.w	r8, r8, #2
 80268f2:	441e      	add	r6, r3
 80268f4:	f109 39ff 	add.w	r9, r9, #4294967295
 80268f8:	e74a      	b.n	8026790 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80268fa:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80268fc:	441c      	add	r4, r3
 80268fe:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026900:	441e      	add	r6, r3
 8026902:	9b07      	ldr	r3, [sp, #28]
 8026904:	3302      	adds	r3, #2
 8026906:	3d01      	subs	r5, #1
 8026908:	9307      	str	r3, [sp, #28]
 802690a:	e722      	b.n	8026752 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 802690c:	d022      	beq.n	8026954 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 802690e:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8026910:	1e6b      	subs	r3, r5, #1
 8026912:	fb00 4003 	mla	r0, r0, r3, r4
 8026916:	1400      	asrs	r0, r0, #16
 8026918:	f53f af37 	bmi.w	802678a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802691c:	3901      	subs	r1, #1
 802691e:	4288      	cmp	r0, r1
 8026920:	f6bf af33 	bge.w	802678a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8026924:	9920      	ldr	r1, [sp, #128]	; 0x80
 8026926:	fb01 6303 	mla	r3, r1, r3, r6
 802692a:	141b      	asrs	r3, r3, #16
 802692c:	f53f af2d 	bmi.w	802678a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8026930:	3a01      	subs	r2, #1
 8026932:	4293      	cmp	r3, r2
 8026934:	f6bf af29 	bge.w	802678a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8026938:	f8dd 901c 	ldr.w	r9, [sp, #28]
 802693c:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 8026940:	46a8      	mov	r8, r5
 8026942:	f1b8 0f00 	cmp.w	r8, #0
 8026946:	dc5e      	bgt.n	8026a06 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8026948:	9b07      	ldr	r3, [sp, #28]
 802694a:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 802694e:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8026952:	9307      	str	r3, [sp, #28]
 8026954:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8026956:	2b00      	cmp	r3, #0
 8026958:	f340 80f6 	ble.w	8026b48 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 802695c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8026960:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8026964:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8026968:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802696a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802696e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8026972:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8026976:	eef0 6a62 	vmov.f32	s13, s5
 802697a:	ee61 7a27 	vmul.f32	s15, s2, s15
 802697e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026982:	ee77 2a62 	vsub.f32	s5, s14, s5
 8026986:	ee16 4a90 	vmov	r4, s13
 802698a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802698e:	eef0 6a43 	vmov.f32	s13, s6
 8026992:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8026996:	ee12 2a90 	vmov	r2, s5
 802699a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802699e:	fb92 f3f3 	sdiv	r3, r2, r3
 80269a2:	ee13 2a10 	vmov	r2, s6
 80269a6:	931f      	str	r3, [sp, #124]	; 0x7c
 80269a8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80269aa:	fb92 f3f3 	sdiv	r3, r2, r3
 80269ae:	9320      	str	r3, [sp, #128]	; 0x80
 80269b0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80269b2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80269b4:	3b01      	subs	r3, #1
 80269b6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80269ba:	930a      	str	r3, [sp, #40]	; 0x28
 80269bc:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80269be:	ee16 6a90 	vmov	r6, s13
 80269c2:	bf14      	ite	ne
 80269c4:	461d      	movne	r5, r3
 80269c6:	4615      	moveq	r5, r2
 80269c8:	eeb0 3a67 	vmov.f32	s6, s15
 80269cc:	eef0 2a47 	vmov.f32	s5, s14
 80269d0:	e6b0      	b.n	8026734 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80269d2:	f111 0a01 	adds.w	sl, r1, #1
 80269d6:	d487      	bmi.n	80268e8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80269d8:	45d6      	cmp	lr, sl
 80269da:	db85      	blt.n	80268e8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80269dc:	f110 0a01 	adds.w	sl, r0, #1
 80269e0:	d482      	bmi.n	80268e8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80269e2:	4553      	cmp	r3, sl
 80269e4:	db80      	blt.n	80268e8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80269e6:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 80269e8:	9101      	str	r1, [sp, #4]
 80269ea:	b21b      	sxth	r3, r3
 80269ec:	e9cd 0202 	strd	r0, r2, [sp, #8]
 80269f0:	9300      	str	r3, [sp, #0]
 80269f2:	e9cd c704 	strd	ip, r7, [sp, #16]
 80269f6:	fa0f f38e 	sxth.w	r3, lr
 80269fa:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80269fc:	9811      	ldr	r0, [sp, #68]	; 0x44
 80269fe:	4641      	mov	r1, r8
 8026a00:	f7ff fdb4 	bl	802656c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8026a04:	e770      	b.n	80268e8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8026a06:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026a08:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8026a0a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8026a0e:	1430      	asrs	r0, r6, #16
 8026a10:	1423      	asrs	r3, r4, #16
 8026a12:	fb01 3000 	mla	r0, r1, r0, r3
 8026a16:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026a18:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 8026a1c:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8026a20:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8026a24:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8026a28:	8858      	ldrh	r0, [r3, #2]
 8026a2a:	f1be 0f00 	cmp.w	lr, #0
 8026a2e:	d00b      	beq.n	8026a48 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 8026a30:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8026a34:	3901      	subs	r1, #1
 8026a36:	0049      	lsls	r1, r1, #1
 8026a38:	3102      	adds	r1, #2
 8026a3a:	eb03 0b01 	add.w	fp, r3, r1
 8026a3e:	5a5b      	ldrh	r3, [r3, r1]
 8026a40:	930e      	str	r3, [sp, #56]	; 0x38
 8026a42:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8026a46:	930f      	str	r3, [sp, #60]	; 0x3c
 8026a48:	ea4f 410c 	mov.w	r1, ip, lsl #16
 8026a4c:	fb12 f30e 	smulbb	r3, r2, lr
 8026a50:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8026a54:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8026a58:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 8026a5c:	10db      	asrs	r3, r3, #3
 8026a5e:	ea41 010c 	orr.w	r1, r1, ip
 8026a62:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8026a66:	f1ce 0c10 	rsb	ip, lr, #16
 8026a6a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8026a6e:	ebac 0c02 	sub.w	ip, ip, r2
 8026a72:	ea4b 0000 	orr.w	r0, fp, r0
 8026a76:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8026a7a:	4350      	muls	r0, r2
 8026a7c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8026a7e:	9f08      	ldr	r7, [sp, #32]
 8026a80:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8026a84:	fb0c 0c01 	mla	ip, ip, r1, r0
 8026a88:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8026a8c:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 8026a90:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8026a92:	980e      	ldr	r0, [sp, #56]	; 0x38
 8026a94:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8026a98:	0412      	lsls	r2, r2, #16
 8026a9a:	ea4b 0101 	orr.w	r1, fp, r1
 8026a9e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8026aa2:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8026aa6:	fb03 c101 	mla	r1, r3, r1, ip
 8026aaa:	4302      	orrs	r2, r0
 8026aac:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8026ab0:	fb03 1202 	mla	r2, r3, r2, r1
 8026ab4:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 8026ab8:	0952      	lsrs	r2, r2, #5
 8026aba:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 8026abe:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8026ac2:	f8b9 2000 	ldrh.w	r2, [r9]
 8026ac6:	ea4b 0303 	orr.w	r3, fp, r3
 8026aca:	b29b      	uxth	r3, r3
 8026acc:	1211      	asrs	r1, r2, #8
 8026ace:	1218      	asrs	r0, r3, #8
 8026ad0:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8026ad4:	fb11 f107 	smulbb	r1, r1, r7
 8026ad8:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8026adc:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8026ae0:	00d2      	lsls	r2, r2, #3
 8026ae2:	fb00 100a 	mla	r0, r0, sl, r1
 8026ae6:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8026aea:	10d9      	asrs	r1, r3, #3
 8026aec:	b2d2      	uxtb	r2, r2
 8026aee:	00db      	lsls	r3, r3, #3
 8026af0:	fb1c fc07 	smulbb	ip, ip, r7
 8026af4:	fb12 f207 	smulbb	r2, r2, r7
 8026af8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8026afc:	b2db      	uxtb	r3, r3
 8026afe:	b280      	uxth	r0, r0
 8026b00:	fb01 c10a 	mla	r1, r1, sl, ip
 8026b04:	fb03 230a 	mla	r3, r3, sl, r2
 8026b08:	b29b      	uxth	r3, r3
 8026b0a:	b289      	uxth	r1, r1
 8026b0c:	1c42      	adds	r2, r0, #1
 8026b0e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8026b12:	f101 0c01 	add.w	ip, r1, #1
 8026b16:	1c5a      	adds	r2, r3, #1
 8026b18:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8026b1c:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8026b20:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8026b22:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8026b26:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8026b2a:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8026b2e:	4310      	orrs	r0, r2
 8026b30:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8026b34:	441c      	add	r4, r3
 8026b36:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026b38:	ea40 000c 	orr.w	r0, r0, ip
 8026b3c:	f829 0b02 	strh.w	r0, [r9], #2
 8026b40:	441e      	add	r6, r3
 8026b42:	f108 38ff 	add.w	r8, r8, #4294967295
 8026b46:	e6fc      	b.n	8026942 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 8026b48:	b013      	add	sp, #76	; 0x4c
 8026b4a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08026b4e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 8026b4e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8026b52:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 8026b56:	fb0e 4703 	mla	r7, lr, r3, r4
 8026b5a:	f1be 0f00 	cmp.w	lr, #0
 8026b5e:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 8026b62:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 8026b66:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 8026b6a:	8808      	ldrh	r0, [r1, #0]
 8026b6c:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 8026b70:	db60      	blt.n	8026c34 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8026b72:	45f1      	cmp	r9, lr
 8026b74:	dd5e      	ble.n	8026c34 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8026b76:	2c00      	cmp	r4, #0
 8026b78:	db5a      	blt.n	8026c30 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8026b7a:	42a3      	cmp	r3, r4
 8026b7c:	dd58      	ble.n	8026c30 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8026b7e:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 8026b82:	1c62      	adds	r2, r4, #1
 8026b84:	d459      	bmi.n	8026c3a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8026b86:	4293      	cmp	r3, r2
 8026b88:	dd57      	ble.n	8026c3a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8026b8a:	2d00      	cmp	r5, #0
 8026b8c:	d055      	beq.n	8026c3a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8026b8e:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 8026b92:	f11e 0e01 	adds.w	lr, lr, #1
 8026b96:	d454      	bmi.n	8026c42 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8026b98:	45f1      	cmp	r9, lr
 8026b9a:	dd52      	ble.n	8026c42 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8026b9c:	2e00      	cmp	r6, #0
 8026b9e:	d050      	beq.n	8026c42 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8026ba0:	2c00      	cmp	r4, #0
 8026ba2:	db4c      	blt.n	8026c3e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8026ba4:	42a3      	cmp	r3, r4
 8026ba6:	dd4a      	ble.n	8026c3e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8026ba8:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 8026bac:	3401      	adds	r4, #1
 8026bae:	d405      	bmi.n	8026bbc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8026bb0:	42a3      	cmp	r3, r4
 8026bb2:	dd03      	ble.n	8026bbc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8026bb4:	b115      	cbz	r5, 8026bbc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8026bb6:	3301      	adds	r3, #1
 8026bb8:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 8026bbc:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8026bc0:	fb15 f406 	smulbb	r4, r5, r6
 8026bc4:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8026bc8:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8026bcc:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8026bd0:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8026bd4:	ea43 0c0c 	orr.w	ip, r3, ip
 8026bd8:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8026bdc:	f1c6 0310 	rsb	r3, r6, #16
 8026be0:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8026be4:	1b5b      	subs	r3, r3, r5
 8026be6:	ea4e 0707 	orr.w	r7, lr, r7
 8026bea:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8026bee:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8026bf2:	437d      	muls	r5, r7
 8026bf4:	fb03 5c0c 	mla	ip, r3, ip, r5
 8026bf8:	0403      	lsls	r3, r0, #16
 8026bfa:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8026bfe:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8026c02:	4318      	orrs	r0, r3
 8026c04:	0413      	lsls	r3, r2, #16
 8026c06:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8026c0a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8026c0e:	4313      	orrs	r3, r2
 8026c10:	fb04 c000 	mla	r0, r4, r0, ip
 8026c14:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8026c18:	fb06 0003 	mla	r0, r6, r3, r0
 8026c1c:	0d43      	lsrs	r3, r0, #21
 8026c1e:	0940      	lsrs	r0, r0, #5
 8026c20:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8026c24:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8026c28:	4318      	orrs	r0, r3
 8026c2a:	8008      	strh	r0, [r1, #0]
 8026c2c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8026c30:	4684      	mov	ip, r0
 8026c32:	e7a6      	b.n	8026b82 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 8026c34:	4607      	mov	r7, r0
 8026c36:	4684      	mov	ip, r0
 8026c38:	e7ab      	b.n	8026b92 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8026c3a:	4607      	mov	r7, r0
 8026c3c:	e7a9      	b.n	8026b92 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8026c3e:	4602      	mov	r2, r0
 8026c40:	e7b4      	b.n	8026bac <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 8026c42:	4602      	mov	r2, r0
 8026c44:	e7ba      	b.n	8026bbc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

08026c46 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8026c46:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026c4a:	b08f      	sub	sp, #60	; 0x3c
 8026c4c:	461d      	mov	r5, r3
 8026c4e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8026c50:	920c      	str	r2, [sp, #48]	; 0x30
 8026c52:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 8026c56:	9107      	str	r1, [sp, #28]
 8026c58:	6859      	ldr	r1, [r3, #4]
 8026c5a:	681b      	ldr	r3, [r3, #0]
 8026c5c:	900d      	str	r0, [sp, #52]	; 0x34
 8026c5e:	fb01 2707 	mla	r7, r1, r7, r2
 8026c62:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 8026c66:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026c68:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 8026c6c:	f8d3 8000 	ldr.w	r8, [r3]
 8026c70:	9b07      	ldr	r3, [sp, #28]
 8026c72:	2b00      	cmp	r3, #0
 8026c74:	dc03      	bgt.n	8026c7e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8026c76:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8026c78:	2b00      	cmp	r3, #0
 8026c7a:	f340 8181 	ble.w	8026f80 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8026c7e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026c80:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8026c84:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8026c88:	1e48      	subs	r0, r1, #1
 8026c8a:	f102 3cff 	add.w	ip, r2, #4294967295
 8026c8e:	2d00      	cmp	r5, #0
 8026c90:	f340 809b 	ble.w	8026dca <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 8026c94:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8026c98:	ea4f 4326 	mov.w	r3, r6, asr #16
 8026c9c:	d406      	bmi.n	8026cac <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8026c9e:	4586      	cmp	lr, r0
 8026ca0:	da04      	bge.n	8026cac <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8026ca2:	2b00      	cmp	r3, #0
 8026ca4:	db02      	blt.n	8026cac <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8026ca6:	4563      	cmp	r3, ip
 8026ca8:	f2c0 8090 	blt.w	8026dcc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8026cac:	f11e 0e01 	adds.w	lr, lr, #1
 8026cb0:	f100 8084 	bmi.w	8026dbc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8026cb4:	4571      	cmp	r1, lr
 8026cb6:	f2c0 8081 	blt.w	8026dbc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8026cba:	3301      	adds	r3, #1
 8026cbc:	d47e      	bmi.n	8026dbc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8026cbe:	429a      	cmp	r2, r3
 8026cc0:	db7c      	blt.n	8026dbc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8026cc2:	46aa      	mov	sl, r5
 8026cc4:	46b9      	mov	r9, r7
 8026cc6:	f1ba 0f00 	cmp.w	sl, #0
 8026cca:	f340 8099 	ble.w	8026e00 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8026cce:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026cd0:	1421      	asrs	r1, r4, #16
 8026cd2:	ea4f 4026 	mov.w	r0, r6, asr #16
 8026cd6:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8026cda:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8026cde:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8026ce2:	f100 80d0 	bmi.w	8026e86 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8026ce6:	f10e 3bff 	add.w	fp, lr, #4294967295
 8026cea:	4559      	cmp	r1, fp
 8026cec:	f280 80cb 	bge.w	8026e86 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8026cf0:	2800      	cmp	r0, #0
 8026cf2:	f2c0 80c8 	blt.w	8026e86 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8026cf6:	f103 3bff 	add.w	fp, r3, #4294967295
 8026cfa:	4558      	cmp	r0, fp
 8026cfc:	f280 80c3 	bge.w	8026e86 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8026d00:	fa0f fe8e 	sxth.w	lr, lr
 8026d04:	fb00 110e 	mla	r1, r0, lr, r1
 8026d08:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8026d0c:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 8026d10:	8841      	ldrh	r1, [r0, #2]
 8026d12:	f1bc 0f00 	cmp.w	ip, #0
 8026d16:	d00b      	beq.n	8026d30 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 8026d18:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 8026d1c:	3b01      	subs	r3, #1
 8026d1e:	005b      	lsls	r3, r3, #1
 8026d20:	3302      	adds	r3, #2
 8026d22:	eb00 0e03 	add.w	lr, r0, r3
 8026d26:	5ac3      	ldrh	r3, [r0, r3]
 8026d28:	9308      	str	r3, [sp, #32]
 8026d2a:	f8be 3002 	ldrh.w	r3, [lr, #2]
 8026d2e:	9309      	str	r3, [sp, #36]	; 0x24
 8026d30:	ea4f 400b 	mov.w	r0, fp, lsl #16
 8026d34:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8026d38:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8026d3c:	ea40 000b 	orr.w	r0, r0, fp
 8026d40:	fb12 f30c 	smulbb	r3, r2, ip
 8026d44:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8026d48:	10db      	asrs	r3, r3, #3
 8026d4a:	f1cc 0e10 	rsb	lr, ip, #16
 8026d4e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8026d52:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8026d56:	ebae 0e02 	sub.w	lr, lr, r2
 8026d5a:	ea4b 0101 	orr.w	r1, fp, r1
 8026d5e:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8026d62:	4351      	muls	r1, r2
 8026d64:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8026d66:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8026d6a:	fb0e 1e00 	mla	lr, lr, r0, r1
 8026d6e:	0410      	lsls	r0, r2, #16
 8026d70:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8026d74:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8026d78:	4310      	orrs	r0, r2
 8026d7a:	9a08      	ldr	r2, [sp, #32]
 8026d7c:	9908      	ldr	r1, [sp, #32]
 8026d7e:	0412      	lsls	r2, r2, #16
 8026d80:	fb03 e000 	mla	r0, r3, r0, lr
 8026d84:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8026d88:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8026d8c:	ea42 020e 	orr.w	r2, r2, lr
 8026d90:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8026d94:	fb03 0302 	mla	r3, r3, r2, r0
 8026d98:	0d5a      	lsrs	r2, r3, #21
 8026d9a:	095b      	lsrs	r3, r3, #5
 8026d9c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8026da0:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8026da4:	4313      	orrs	r3, r2
 8026da6:	f8a9 3000 	strh.w	r3, [r9]
 8026daa:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8026dac:	441c      	add	r4, r3
 8026dae:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8026db0:	f109 0902 	add.w	r9, r9, #2
 8026db4:	441e      	add	r6, r3
 8026db6:	f10a 3aff 	add.w	sl, sl, #4294967295
 8026dba:	e784      	b.n	8026cc6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8026dbc:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8026dbe:	441c      	add	r4, r3
 8026dc0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8026dc2:	3d01      	subs	r5, #1
 8026dc4:	441e      	add	r6, r3
 8026dc6:	3702      	adds	r7, #2
 8026dc8:	e761      	b.n	8026c8e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8026dca:	d01d      	beq.n	8026e08 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8026dcc:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8026dce:	1e6b      	subs	r3, r5, #1
 8026dd0:	fb00 4003 	mla	r0, r0, r3, r4
 8026dd4:	1400      	asrs	r0, r0, #16
 8026dd6:	f53f af74 	bmi.w	8026cc2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8026dda:	3901      	subs	r1, #1
 8026ddc:	4288      	cmp	r0, r1
 8026dde:	f6bf af70 	bge.w	8026cc2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8026de2:	991c      	ldr	r1, [sp, #112]	; 0x70
 8026de4:	fb01 6303 	mla	r3, r1, r3, r6
 8026de8:	141b      	asrs	r3, r3, #16
 8026dea:	f53f af6a 	bmi.w	8026cc2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8026dee:	3a01      	subs	r2, #1
 8026df0:	4293      	cmp	r3, r2
 8026df2:	f6bf af66 	bge.w	8026cc2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8026df6:	46a9      	mov	r9, r5
 8026df8:	46ba      	mov	sl, r7
 8026dfa:	f1b9 0f00 	cmp.w	r9, #0
 8026dfe:	dc5a      	bgt.n	8026eb6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 8026e00:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8026e04:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 8026e08:	9b07      	ldr	r3, [sp, #28]
 8026e0a:	2b00      	cmp	r3, #0
 8026e0c:	f340 80b8 	ble.w	8026f80 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8026e10:	ee30 0a04 	vadd.f32	s0, s0, s8
 8026e14:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8026e18:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8026e1c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8026e1e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8026e22:	ee31 1a05 	vadd.f32	s2, s2, s10
 8026e26:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8026e2a:	eef0 6a62 	vmov.f32	s13, s5
 8026e2e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8026e32:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026e36:	ee77 2a62 	vsub.f32	s5, s14, s5
 8026e3a:	ee16 4a90 	vmov	r4, s13
 8026e3e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8026e42:	eef0 6a43 	vmov.f32	s13, s6
 8026e46:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8026e4a:	ee12 2a90 	vmov	r2, s5
 8026e4e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8026e52:	fb92 f3f3 	sdiv	r3, r2, r3
 8026e56:	ee13 2a10 	vmov	r2, s6
 8026e5a:	931b      	str	r3, [sp, #108]	; 0x6c
 8026e5c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8026e5e:	fb92 f3f3 	sdiv	r3, r2, r3
 8026e62:	931c      	str	r3, [sp, #112]	; 0x70
 8026e64:	9b07      	ldr	r3, [sp, #28]
 8026e66:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8026e68:	3b01      	subs	r3, #1
 8026e6a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026e6e:	9307      	str	r3, [sp, #28]
 8026e70:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8026e72:	ee16 6a90 	vmov	r6, s13
 8026e76:	bf14      	ite	ne
 8026e78:	461d      	movne	r5, r3
 8026e7a:	4615      	moveq	r5, r2
 8026e7c:	eeb0 3a67 	vmov.f32	s6, s15
 8026e80:	eef0 2a47 	vmov.f32	s5, s14
 8026e84:	e6f4      	b.n	8026c70 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8026e86:	f111 0b01 	adds.w	fp, r1, #1
 8026e8a:	d48e      	bmi.n	8026daa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8026e8c:	45de      	cmp	lr, fp
 8026e8e:	db8c      	blt.n	8026daa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8026e90:	f110 0b01 	adds.w	fp, r0, #1
 8026e94:	d489      	bmi.n	8026daa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8026e96:	455b      	cmp	r3, fp
 8026e98:	db87      	blt.n	8026daa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8026e9a:	b21b      	sxth	r3, r3
 8026e9c:	e9cd 1001 	strd	r1, r0, [sp, #4]
 8026ea0:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 8026ea4:	9300      	str	r3, [sp, #0]
 8026ea6:	4642      	mov	r2, r8
 8026ea8:	fa0f f38e 	sxth.w	r3, lr
 8026eac:	4649      	mov	r1, r9
 8026eae:	980d      	ldr	r0, [sp, #52]	; 0x34
 8026eb0:	f7ff fe4d 	bl	8026b4e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 8026eb4:	e779      	b.n	8026daa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8026eb6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026eb8:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8026ebc:	1420      	asrs	r0, r4, #16
 8026ebe:	1431      	asrs	r1, r6, #16
 8026ec0:	fb03 0101 	mla	r1, r3, r1, r0
 8026ec4:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8026ec8:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8026ecc:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 8026ed0:	8841      	ldrh	r1, [r0, #2]
 8026ed2:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8026ed6:	f1be 0f00 	cmp.w	lr, #0
 8026eda:	d00b      	beq.n	8026ef4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8026edc:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8026ee0:	3b01      	subs	r3, #1
 8026ee2:	005b      	lsls	r3, r3, #1
 8026ee4:	3302      	adds	r3, #2
 8026ee6:	eb00 0b03 	add.w	fp, r0, r3
 8026eea:	5ac3      	ldrh	r3, [r0, r3]
 8026eec:	930a      	str	r3, [sp, #40]	; 0x28
 8026eee:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8026ef2:	930b      	str	r3, [sp, #44]	; 0x2c
 8026ef4:	ea4f 400c 	mov.w	r0, ip, lsl #16
 8026ef8:	fb12 f30e 	smulbb	r3, r2, lr
 8026efc:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8026f00:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8026f04:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8026f08:	10db      	asrs	r3, r3, #3
 8026f0a:	ea40 000c 	orr.w	r0, r0, ip
 8026f0e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8026f12:	f1ce 0c10 	rsb	ip, lr, #16
 8026f16:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8026f1a:	ebac 0c02 	sub.w	ip, ip, r2
 8026f1e:	ea4b 0101 	orr.w	r1, fp, r1
 8026f22:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8026f26:	4351      	muls	r1, r2
 8026f28:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8026f2a:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8026f2e:	fb0c 1c00 	mla	ip, ip, r0, r1
 8026f32:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8026f36:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 8026f3a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8026f3c:	990a      	ldr	r1, [sp, #40]	; 0x28
 8026f3e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8026f42:	0412      	lsls	r2, r2, #16
 8026f44:	ea4b 0000 	orr.w	r0, fp, r0
 8026f48:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8026f4c:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 8026f50:	fb03 c000 	mla	r0, r3, r0, ip
 8026f54:	ea42 0b0b 	orr.w	fp, r2, fp
 8026f58:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8026f5c:	fb03 000b 	mla	r0, r3, fp, r0
 8026f60:	0d43      	lsrs	r3, r0, #21
 8026f62:	0940      	lsrs	r0, r0, #5
 8026f64:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8026f68:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8026f6c:	4318      	orrs	r0, r3
 8026f6e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8026f70:	f82a 0b02 	strh.w	r0, [sl], #2
 8026f74:	441c      	add	r4, r3
 8026f76:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8026f78:	f109 39ff 	add.w	r9, r9, #4294967295
 8026f7c:	441e      	add	r6, r3
 8026f7e:	e73c      	b.n	8026dfa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8026f80:	b00f      	add	sp, #60	; 0x3c
 8026f82:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08026f86 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 8026f86:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026f8a:	b085      	sub	sp, #20
 8026f8c:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 8026f90:	9102      	str	r1, [sp, #8]
 8026f92:	2c00      	cmp	r4, #0
 8026f94:	fb04 7103 	mla	r1, r4, r3, r7
 8026f98:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8026f9c:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8026fa0:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8026fa4:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8026fa8:	f2c0 811b 	blt.w	80271e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8026fac:	45a6      	cmp	lr, r4
 8026fae:	f340 8118 	ble.w	80271e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8026fb2:	2f00      	cmp	r7, #0
 8026fb4:	f2c0 8113 	blt.w	80271de <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8026fb8:	42bb      	cmp	r3, r7
 8026fba:	f340 8110 	ble.w	80271de <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8026fbe:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8026fc2:	1c7a      	adds	r2, r7, #1
 8026fc4:	f100 8110 	bmi.w	80271e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8026fc8:	4293      	cmp	r3, r2
 8026fca:	f340 810d 	ble.w	80271e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8026fce:	2e00      	cmp	r6, #0
 8026fd0:	f000 810c 	beq.w	80271ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 8026fd4:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8026fd8:	3401      	adds	r4, #1
 8026fda:	f100 810b 	bmi.w	80271f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8026fde:	45a6      	cmp	lr, r4
 8026fe0:	f340 8108 	ble.w	80271f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8026fe4:	2800      	cmp	r0, #0
 8026fe6:	f000 8108 	beq.w	80271fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 8026fea:	2f00      	cmp	r7, #0
 8026fec:	f2c0 8100 	blt.w	80271f0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8026ff0:	42bb      	cmp	r3, r7
 8026ff2:	f340 80fd 	ble.w	80271f0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8026ff6:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8026ffa:	3701      	adds	r7, #1
 8026ffc:	f100 8100 	bmi.w	8027200 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8027000:	42bb      	cmp	r3, r7
 8027002:	f340 80fd 	ble.w	8027200 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8027006:	2e00      	cmp	r6, #0
 8027008:	f000 80fc 	beq.w	8027204 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 802700c:	3301      	adds	r3, #1
 802700e:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 8027012:	b2b6      	uxth	r6, r6
 8027014:	b280      	uxth	r0, r0
 8027016:	fb00 fe06 	mul.w	lr, r0, r6
 802701a:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 802701e:	0136      	lsls	r6, r6, #4
 8027020:	eba6 070e 	sub.w	r7, r6, lr
 8027024:	b280      	uxth	r0, r0
 8027026:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 802702a:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 802702e:	b2bf      	uxth	r7, r7
 8027030:	1a1b      	subs	r3, r3, r0
 8027032:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8027036:	b29b      	uxth	r3, r3
 8027038:	fb0a f607 	mul.w	r6, sl, r7
 802703c:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8027040:	fb0b 6603 	mla	r6, fp, r3, r6
 8027044:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8027048:	fb00 6609 	mla	r6, r0, r9, r6
 802704c:	fb0e 6608 	mla	r6, lr, r8, r6
 8027050:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8027054:	9600      	str	r6, [sp, #0]
 8027056:	2e00      	cmp	r6, #0
 8027058:	f000 80be 	beq.w	80271d8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 802705c:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8027060:	fb0b fc0c 	mul.w	ip, fp, ip
 8027064:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8027068:	fb0b f505 	mul.w	r5, fp, r5
 802706c:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8027070:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8027074:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8027078:	44dc      	add	ip, fp
 802707a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802707e:	9501      	str	r5, [sp, #4]
 8027080:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8027084:	9503      	str	r5, [sp, #12]
 8027086:	9d01      	ldr	r5, [sp, #4]
 8027088:	9e02      	ldr	r6, [sp, #8]
 802708a:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 802708e:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8027092:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8027096:	fb0a fc0c 	mul.w	ip, sl, ip
 802709a:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 802709e:	ea4f 251c 	mov.w	r5, ip, lsr #8
 80270a2:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80270a6:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80270aa:	4465      	add	r5, ip
 80270ac:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80270b0:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80270b4:	fb09 fc0c 	mul.w	ip, r9, ip
 80270b8:	fb09 f904 	mul.w	r9, r9, r4
 80270bc:	f509 7480 	add.w	r4, r9, #256	; 0x100
 80270c0:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 80270c4:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 80270c8:	fb08 f404 	mul.w	r4, r8, r4
 80270cc:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80270d0:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80270d4:	fb08 f802 	mul.w	r8, r8, r2
 80270d8:	fb0a fa01 	mul.w	sl, sl, r1
 80270dc:	0a22      	lsrs	r2, r4, #8
 80270de:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 80270e2:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80270e6:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 80270ea:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 80270ee:	4414      	add	r4, r2
 80270f0:	ea4f 211c 	mov.w	r1, ip, lsr #8
 80270f4:	f508 7280 	add.w	r2, r8, #256	; 0x100
 80270f8:	0a2d      	lsrs	r5, r5, #8
 80270fa:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 80270fe:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8027102:	9a03      	ldr	r2, [sp, #12]
 8027104:	8836      	ldrh	r6, [r6, #0]
 8027106:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 802710a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 802710e:	437d      	muls	r5, r7
 8027110:	4461      	add	r1, ip
 8027112:	0a24      	lsrs	r4, r4, #8
 8027114:	fb02 5503 	mla	r5, r2, r3, r5
 8027118:	0a09      	lsrs	r1, r1, #8
 802711a:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 802711e:	fb04 540e 	mla	r4, r4, lr, r5
 8027122:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8027126:	fb01 4100 	mla	r1, r1, r0, r4
 802712a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802712e:	0a09      	lsrs	r1, r1, #8
 8027130:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8027134:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8027138:	fb07 f70a 	mul.w	r7, r7, sl
 802713c:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8027140:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8027144:	fb03 7101 	mla	r1, r3, r1, r7
 8027148:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802714c:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8027150:	fb0e 1e08 	mla	lr, lr, r8, r1
 8027154:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8027158:	fb00 e101 	mla	r1, r0, r1, lr
 802715c:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 8027160:	9a00      	ldr	r2, [sp, #0]
 8027162:	b287      	uxth	r7, r0
 8027164:	437a      	muls	r2, r7
 8027166:	0a09      	lsrs	r1, r1, #8
 8027168:	1c53      	adds	r3, r2, #1
 802716a:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 802716e:	4321      	orrs	r1, r4
 8027170:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8027174:	1235      	asrs	r5, r6, #8
 8027176:	0c0a      	lsrs	r2, r1, #16
 8027178:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 802717c:	b2db      	uxtb	r3, r3
 802717e:	fb12 f207 	smulbb	r2, r2, r7
 8027182:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8027186:	fb05 2503 	mla	r5, r5, r3, r2
 802718a:	f3c1 2407 	ubfx	r4, r1, #8, #8
 802718e:	10f2      	asrs	r2, r6, #3
 8027190:	b2c8      	uxtb	r0, r1
 8027192:	00f6      	lsls	r6, r6, #3
 8027194:	fb14 f407 	smulbb	r4, r4, r7
 8027198:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802719c:	b2f6      	uxtb	r6, r6
 802719e:	fb10 f007 	smulbb	r0, r0, r7
 80271a2:	fb02 4203 	mla	r2, r2, r3, r4
 80271a6:	b2ad      	uxth	r5, r5
 80271a8:	fb06 0303 	mla	r3, r6, r3, r0
 80271ac:	b299      	uxth	r1, r3
 80271ae:	b294      	uxth	r4, r2
 80271b0:	1c6b      	adds	r3, r5, #1
 80271b2:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80271b6:	1c62      	adds	r2, r4, #1
 80271b8:	1c4b      	adds	r3, r1, #1
 80271ba:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80271be:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 80271c2:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80271c6:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80271ca:	0952      	lsrs	r2, r2, #5
 80271cc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80271d0:	432b      	orrs	r3, r5
 80271d2:	4313      	orrs	r3, r2
 80271d4:	9a02      	ldr	r2, [sp, #8]
 80271d6:	8013      	strh	r3, [r2, #0]
 80271d8:	b005      	add	sp, #20
 80271da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80271de:	2500      	movs	r5, #0
 80271e0:	e6ef      	b.n	8026fc2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 80271e2:	2100      	movs	r1, #0
 80271e4:	460d      	mov	r5, r1
 80271e6:	e6f7      	b.n	8026fd8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 80271e8:	2100      	movs	r1, #0
 80271ea:	e6f5      	b.n	8026fd8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 80271ec:	4631      	mov	r1, r6
 80271ee:	e6f3      	b.n	8026fd8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 80271f0:	2400      	movs	r4, #0
 80271f2:	e702      	b.n	8026ffa <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 80271f4:	2200      	movs	r2, #0
 80271f6:	4614      	mov	r4, r2
 80271f8:	e70b      	b.n	8027012 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 80271fa:	4602      	mov	r2, r0
 80271fc:	4604      	mov	r4, r0
 80271fe:	e708      	b.n	8027012 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8027200:	2200      	movs	r2, #0
 8027202:	e706      	b.n	8027012 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8027204:	4632      	mov	r2, r6
 8027206:	e704      	b.n	8027012 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

08027208 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8027208:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802720c:	b09d      	sub	sp, #116	; 0x74
 802720e:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 8027212:	9219      	str	r2, [sp, #100]	; 0x64
 8027214:	9307      	str	r3, [sp, #28]
 8027216:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8027218:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 802721c:	931a      	str	r3, [sp, #104]	; 0x68
 802721e:	9117      	str	r1, [sp, #92]	; 0x5c
 8027220:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8027224:	901b      	str	r0, [sp, #108]	; 0x6c
 8027226:	6850      	ldr	r0, [r2, #4]
 8027228:	6812      	ldr	r2, [r2, #0]
 802722a:	fb00 1303 	mla	r3, r0, r3, r1
 802722e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8027232:	930a      	str	r3, [sp, #40]	; 0x28
 8027234:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8027236:	681b      	ldr	r3, [r3, #0]
 8027238:	9310      	str	r3, [sp, #64]	; 0x40
 802723a:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 802723e:	930b      	str	r3, [sp, #44]	; 0x2c
 8027240:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8027242:	2b00      	cmp	r3, #0
 8027244:	dc03      	bgt.n	802724e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8027246:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8027248:	2b00      	cmp	r3, #0
 802724a:	f340 8375 	ble.w	8027938 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 802724e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8027250:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8027254:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8027258:	1e48      	subs	r0, r1, #1
 802725a:	1e57      	subs	r7, r2, #1
 802725c:	9b07      	ldr	r3, [sp, #28]
 802725e:	2b00      	cmp	r3, #0
 8027260:	f340 818e 	ble.w	8027580 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8027264:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8027268:	ea4f 4326 	mov.w	r3, r6, asr #16
 802726c:	d406      	bmi.n	802727c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 802726e:	4584      	cmp	ip, r0
 8027270:	da04      	bge.n	802727c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8027272:	2b00      	cmp	r3, #0
 8027274:	db02      	blt.n	802727c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8027276:	42bb      	cmp	r3, r7
 8027278:	f2c0 8183 	blt.w	8027582 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 802727c:	f11c 0c01 	adds.w	ip, ip, #1
 8027280:	f100 8173 	bmi.w	802756a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8027284:	4561      	cmp	r1, ip
 8027286:	f2c0 8170 	blt.w	802756a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 802728a:	3301      	adds	r3, #1
 802728c:	f100 816d 	bmi.w	802756a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8027290:	429a      	cmp	r2, r3
 8027292:	f2c0 816a 	blt.w	802756a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8027296:	9b07      	ldr	r3, [sp, #28]
 8027298:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 802729a:	9318      	str	r3, [sp, #96]	; 0x60
 802729c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802729e:	2b00      	cmp	r3, #0
 80272a0:	f340 818c 	ble.w	80275bc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 80272a4:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 80272a6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80272a8:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80272ac:	689b      	ldr	r3, [r3, #8]
 80272ae:	1422      	asrs	r2, r4, #16
 80272b0:	ea4f 4c26 	mov.w	ip, r6, asr #16
 80272b4:	f3c4 3003 	ubfx	r0, r4, #12, #4
 80272b8:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80272bc:	f100 81cd 	bmi.w	802765a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80272c0:	f103 38ff 	add.w	r8, r3, #4294967295
 80272c4:	4542      	cmp	r2, r8
 80272c6:	f280 81c8 	bge.w	802765a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80272ca:	f1bc 0f00 	cmp.w	ip, #0
 80272ce:	f2c0 81c4 	blt.w	802765a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80272d2:	f10e 38ff 	add.w	r8, lr, #4294967295
 80272d6:	45c4      	cmp	ip, r8
 80272d8:	f280 81bf 	bge.w	802765a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80272dc:	b21b      	sxth	r3, r3
 80272de:	fb0c 2203 	mla	r2, ip, r3, r2
 80272e2:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80272e4:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 80272e8:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 80272ec:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 80272f0:	2800      	cmp	r0, #0
 80272f2:	f000 81a9 	beq.w	8027648 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 80272f6:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80272fa:	950c      	str	r5, [sp, #48]	; 0x30
 80272fc:	0e2d      	lsrs	r5, r5, #24
 80272fe:	9513      	str	r5, [sp, #76]	; 0x4c
 8027300:	b181      	cbz	r1, 8027324 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8027302:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8027306:	3b01      	subs	r3, #1
 8027308:	009b      	lsls	r3, r3, #2
 802730a:	3304      	adds	r3, #4
 802730c:	eb08 0c03 	add.w	ip, r8, r3
 8027310:	f858 3003 	ldr.w	r3, [r8, r3]
 8027314:	9308      	str	r3, [sp, #32]
 8027316:	0e1b      	lsrs	r3, r3, #24
 8027318:	9311      	str	r3, [sp, #68]	; 0x44
 802731a:	f8dc 3004 	ldr.w	r3, [ip, #4]
 802731e:	930d      	str	r3, [sp, #52]	; 0x34
 8027320:	0e1b      	lsrs	r3, r3, #24
 8027322:	9314      	str	r3, [sp, #80]	; 0x50
 8027324:	b280      	uxth	r0, r0
 8027326:	b289      	uxth	r1, r1
 8027328:	fb00 f901 	mul.w	r9, r0, r1
 802732c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8027330:	0100      	lsls	r0, r0, #4
 8027332:	eba0 0809 	sub.w	r8, r0, r9
 8027336:	b289      	uxth	r1, r1
 8027338:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 802733c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 802733e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8027340:	fa1f f888 	uxth.w	r8, r8
 8027344:	1a5b      	subs	r3, r3, r1
 8027346:	b29b      	uxth	r3, r3
 8027348:	fb08 f000 	mul.w	r0, r8, r0
 802734c:	fb03 000e 	mla	r0, r3, lr, r0
 8027350:	fb01 0005 	mla	r0, r1, r5, r0
 8027354:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8027356:	fb09 0005 	mla	r0, r9, r5, r0
 802735a:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802735e:	2800      	cmp	r0, #0
 8027360:	f000 80fa 	beq.w	8027558 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8027364:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8027368:	d01b      	beq.n	80273a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 802736a:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 802736e:	fb0e fa0a 	mul.w	sl, lr, sl
 8027372:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8027376:	fb0e fe02 	mul.w	lr, lr, r2
 802737a:	ea4f 221a 	mov.w	r2, sl, lsr #8
 802737e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8027382:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8027386:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 802738a:	4452      	add	r2, sl
 802738c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8027390:	0a12      	lsrs	r2, r2, #8
 8027392:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027396:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802739a:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802739e:	ea42 020c 	orr.w	r2, r2, ip
 80273a2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80273a4:	2dff      	cmp	r5, #255	; 0xff
 80273a6:	d021      	beq.n	80273ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 80273a8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80273aa:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80273ae:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80273b0:	fb05 fb0b 	mul.w	fp, r5, fp
 80273b4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80273b6:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80273ba:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80273bc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80273c0:	fb05 fa0a 	mul.w	sl, r5, sl
 80273c4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80273c8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80273cc:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80273d0:	44de      	add	lr, fp
 80273d2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80273d6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80273da:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80273de:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80273e2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80273e6:	ea4e 050a 	orr.w	r5, lr, sl
 80273ea:	950c      	str	r5, [sp, #48]	; 0x30
 80273ec:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80273ee:	2dff      	cmp	r5, #255	; 0xff
 80273f0:	d021      	beq.n	8027436 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 80273f2:	9d08      	ldr	r5, [sp, #32]
 80273f4:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80273f8:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80273fa:	fb05 fb0b 	mul.w	fp, r5, fp
 80273fe:	9d08      	ldr	r5, [sp, #32]
 8027400:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8027404:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8027406:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802740a:	fb05 fa0a 	mul.w	sl, r5, sl
 802740e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027412:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8027416:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802741a:	44de      	add	lr, fp
 802741c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8027420:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8027424:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027428:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802742c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8027430:	ea4e 050a 	orr.w	r5, lr, sl
 8027434:	9508      	str	r5, [sp, #32]
 8027436:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8027438:	2dff      	cmp	r5, #255	; 0xff
 802743a:	d021      	beq.n	8027480 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 802743c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802743e:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8027442:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8027444:	fb05 fb0b 	mul.w	fp, r5, fp
 8027448:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802744a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802744e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8027450:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8027454:	fb05 fa0a 	mul.w	sl, r5, sl
 8027458:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802745c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8027460:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8027464:	44de      	add	lr, fp
 8027466:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802746a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802746e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027472:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027476:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802747a:	ea4e 050a 	orr.w	r5, lr, sl
 802747e:	950d      	str	r5, [sp, #52]	; 0x34
 8027480:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8027482:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8027486:	9d08      	ldr	r5, [sp, #32]
 8027488:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 802748c:	fb08 fc0c 	mul.w	ip, r8, ip
 8027490:	fb03 cc0e 	mla	ip, r3, lr, ip
 8027494:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8027498:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802749a:	fb01 cc0e 	mla	ip, r1, lr, ip
 802749e:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 80274a2:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80274a4:	fb09 cc0e 	mla	ip, r9, lr, ip
 80274a8:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 80274ac:	fb08 f80e 	mul.w	r8, r8, lr
 80274b0:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80274b4:	fb03 8202 	mla	r2, r3, r2, r8
 80274b8:	9b08      	ldr	r3, [sp, #32]
 80274ba:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80274bc:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 80274c0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80274c2:	fb01 220a 	mla	r2, r1, sl, r2
 80274c6:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 80274ca:	fb09 2901 	mla	r9, r9, r1, r2
 80274ce:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80274d0:	883b      	ldrh	r3, [r7, #0]
 80274d2:	4342      	muls	r2, r0
 80274d4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80274d8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80274dc:	1c50      	adds	r0, r2, #1
 80274de:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80274e2:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80274e6:	ea4c 0c09 	orr.w	ip, ip, r9
 80274ea:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 80274ee:	1219      	asrs	r1, r3, #8
 80274f0:	ea4f 421c 	mov.w	r2, ip, lsr #16
 80274f4:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 80274f8:	b2c0      	uxtb	r0, r0
 80274fa:	fb12 f205 	smulbb	r2, r2, r5
 80274fe:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8027502:	fb01 2100 	mla	r1, r1, r0, r2
 8027506:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 802750a:	10da      	asrs	r2, r3, #3
 802750c:	fa5f fc8c 	uxtb.w	ip, ip
 8027510:	00db      	lsls	r3, r3, #3
 8027512:	fb1c fc05 	smulbb	ip, ip, r5
 8027516:	b2db      	uxtb	r3, r3
 8027518:	b289      	uxth	r1, r1
 802751a:	fb03 c300 	mla	r3, r3, r0, ip
 802751e:	fa1f fc83 	uxth.w	ip, r3
 8027522:	1c4b      	adds	r3, r1, #1
 8027524:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8027528:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802752c:	fb1e fe05 	smulbb	lr, lr, r5
 8027530:	f10c 0301 	add.w	r3, ip, #1
 8027534:	fb02 e200 	mla	r2, r2, r0, lr
 8027538:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 802753c:	b292      	uxth	r2, r2
 802753e:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8027542:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8027546:	430b      	orrs	r3, r1
 8027548:	1c51      	adds	r1, r2, #1
 802754a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802754e:	0952      	lsrs	r2, r2, #5
 8027550:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8027554:	4313      	orrs	r3, r2
 8027556:	803b      	strh	r3, [r7, #0]
 8027558:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802755a:	441c      	add	r4, r3
 802755c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 802755e:	441e      	add	r6, r3
 8027560:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8027562:	3b01      	subs	r3, #1
 8027564:	3702      	adds	r7, #2
 8027566:	9318      	str	r3, [sp, #96]	; 0x60
 8027568:	e698      	b.n	802729c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802756a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802756c:	441c      	add	r4, r3
 802756e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8027570:	441e      	add	r6, r3
 8027572:	9b07      	ldr	r3, [sp, #28]
 8027574:	3b01      	subs	r3, #1
 8027576:	9307      	str	r3, [sp, #28]
 8027578:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802757a:	3302      	adds	r3, #2
 802757c:	930a      	str	r3, [sp, #40]	; 0x28
 802757e:	e66d      	b.n	802725c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8027580:	d023      	beq.n	80275ca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8027582:	9b07      	ldr	r3, [sp, #28]
 8027584:	9829      	ldr	r0, [sp, #164]	; 0xa4
 8027586:	3b01      	subs	r3, #1
 8027588:	fb00 4003 	mla	r0, r0, r3, r4
 802758c:	1400      	asrs	r0, r0, #16
 802758e:	f53f ae82 	bmi.w	8027296 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8027592:	3901      	subs	r1, #1
 8027594:	4288      	cmp	r0, r1
 8027596:	f6bf ae7e 	bge.w	8027296 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802759a:	992a      	ldr	r1, [sp, #168]	; 0xa8
 802759c:	fb01 6303 	mla	r3, r1, r3, r6
 80275a0:	141b      	asrs	r3, r3, #16
 80275a2:	f53f ae78 	bmi.w	8027296 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80275a6:	3a01      	subs	r2, #1
 80275a8:	4293      	cmp	r3, r2
 80275aa:	f6bf ae74 	bge.w	8027296 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80275ae:	f8dd b01c 	ldr.w	fp, [sp, #28]
 80275b2:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 80275b6:	f1bb 0f00 	cmp.w	fp, #0
 80275ba:	dc6c      	bgt.n	8027696 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 80275bc:	9b07      	ldr	r3, [sp, #28]
 80275be:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80275c2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80275c4:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 80275c8:	930a      	str	r3, [sp, #40]	; 0x28
 80275ca:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80275cc:	2b00      	cmp	r3, #0
 80275ce:	f340 81b3 	ble.w	8027938 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 80275d2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80275d6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80275da:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80275de:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80275e0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80275e4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80275e8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80275ec:	eef0 6a62 	vmov.f32	s13, s5
 80275f0:	ee61 7a27 	vmul.f32	s15, s2, s15
 80275f4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80275f8:	ee77 2a62 	vsub.f32	s5, s14, s5
 80275fc:	ee16 4a90 	vmov	r4, s13
 8027600:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8027604:	eef0 6a43 	vmov.f32	s13, s6
 8027608:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802760c:	ee12 2a90 	vmov	r2, s5
 8027610:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8027614:	fb92 f3f3 	sdiv	r3, r2, r3
 8027618:	ee13 2a10 	vmov	r2, s6
 802761c:	9329      	str	r3, [sp, #164]	; 0xa4
 802761e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8027620:	fb92 f3f3 	sdiv	r3, r2, r3
 8027624:	932a      	str	r3, [sp, #168]	; 0xa8
 8027626:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8027628:	9a19      	ldr	r2, [sp, #100]	; 0x64
 802762a:	3b01      	subs	r3, #1
 802762c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8027630:	9317      	str	r3, [sp, #92]	; 0x5c
 8027632:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8027634:	bf08      	it	eq
 8027636:	4613      	moveq	r3, r2
 8027638:	ee16 6a90 	vmov	r6, s13
 802763c:	9307      	str	r3, [sp, #28]
 802763e:	eeb0 3a67 	vmov.f32	s6, s15
 8027642:	eef0 2a47 	vmov.f32	s5, s14
 8027646:	e5fb      	b.n	8027240 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8027648:	2900      	cmp	r1, #0
 802764a:	f43f ae6b 	beq.w	8027324 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 802764e:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8027652:	9308      	str	r3, [sp, #32]
 8027654:	0e1b      	lsrs	r3, r3, #24
 8027656:	9311      	str	r3, [sp, #68]	; 0x44
 8027658:	e664      	b.n	8027324 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 802765a:	f112 0801 	adds.w	r8, r2, #1
 802765e:	f53f af7b 	bmi.w	8027558 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8027662:	4543      	cmp	r3, r8
 8027664:	f6ff af78 	blt.w	8027558 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8027668:	f11c 0801 	adds.w	r8, ip, #1
 802766c:	f53f af74 	bmi.w	8027558 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8027670:	45c6      	cmp	lr, r8
 8027672:	f6ff af71 	blt.w	8027558 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8027676:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8027678:	9201      	str	r2, [sp, #4]
 802767a:	fa0f f28e 	sxth.w	r2, lr
 802767e:	e9cd 1504 	strd	r1, r5, [sp, #16]
 8027682:	e9cd c002 	strd	ip, r0, [sp, #8]
 8027686:	9200      	str	r2, [sp, #0]
 8027688:	b21b      	sxth	r3, r3
 802768a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 802768c:	981b      	ldr	r0, [sp, #108]	; 0x6c
 802768e:	4639      	mov	r1, r7
 8027690:	f7ff fc79 	bl	8026f86 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 8027694:	e760      	b.n	8027558 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8027696:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8027698:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802769a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802769e:	1427      	asrs	r7, r4, #16
 80276a0:	1433      	asrs	r3, r6, #16
 80276a2:	fb01 7303 	mla	r3, r1, r3, r7
 80276a6:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 80276aa:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 80276ae:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80276b2:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80276b6:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80276ba:	2a00      	cmp	r2, #0
 80276bc:	f000 8133 	beq.w	8027926 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 80276c0:	687d      	ldr	r5, [r7, #4]
 80276c2:	950e      	str	r5, [sp, #56]	; 0x38
 80276c4:	0e2d      	lsrs	r5, r5, #24
 80276c6:	9515      	str	r5, [sp, #84]	; 0x54
 80276c8:	b178      	cbz	r0, 80276ea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 80276ca:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 80276ce:	3901      	subs	r1, #1
 80276d0:	0089      	lsls	r1, r1, #2
 80276d2:	3104      	adds	r1, #4
 80276d4:	eb07 0e01 	add.w	lr, r7, r1
 80276d8:	5879      	ldr	r1, [r7, r1]
 80276da:	9109      	str	r1, [sp, #36]	; 0x24
 80276dc:	0e09      	lsrs	r1, r1, #24
 80276de:	9112      	str	r1, [sp, #72]	; 0x48
 80276e0:	f8de 1004 	ldr.w	r1, [lr, #4]
 80276e4:	910f      	str	r1, [sp, #60]	; 0x3c
 80276e6:	0e09      	lsrs	r1, r1, #24
 80276e8:	9116      	str	r1, [sp, #88]	; 0x58
 80276ea:	b292      	uxth	r2, r2
 80276ec:	b280      	uxth	r0, r0
 80276ee:	fb02 f800 	mul.w	r8, r2, r0
 80276f2:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80276f6:	0112      	lsls	r2, r2, #4
 80276f8:	eba2 0e08 	sub.w	lr, r2, r8
 80276fc:	b280      	uxth	r0, r0
 80276fe:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8027702:	9915      	ldr	r1, [sp, #84]	; 0x54
 8027704:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8027706:	fa1f fe8e 	uxth.w	lr, lr
 802770a:	1a12      	subs	r2, r2, r0
 802770c:	b292      	uxth	r2, r2
 802770e:	fb0e f101 	mul.w	r1, lr, r1
 8027712:	fb02 110c 	mla	r1, r2, ip, r1
 8027716:	fb00 1105 	mla	r1, r0, r5, r1
 802771a:	9d16      	ldr	r5, [sp, #88]	; 0x58
 802771c:	fb08 1105 	mla	r1, r8, r5, r1
 8027720:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8027724:	2900      	cmp	r1, #0
 8027726:	f000 80f5 	beq.w	8027914 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 802772a:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 802772e:	d019      	beq.n	8027764 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 8027730:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8027734:	fb0c fa0a 	mul.w	sl, ip, sl
 8027738:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802773c:	fb0c fc03 	mul.w	ip, ip, r3
 8027740:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8027744:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8027748:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802774c:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8027750:	4453      	add	r3, sl
 8027752:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8027756:	0a1b      	lsrs	r3, r3, #8
 8027758:	0a3f      	lsrs	r7, r7, #8
 802775a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802775e:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8027762:	433b      	orrs	r3, r7
 8027764:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8027766:	2dff      	cmp	r5, #255	; 0xff
 8027768:	d020      	beq.n	80277ac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 802776a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802776c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8027770:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8027772:	436f      	muls	r7, r5
 8027774:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8027776:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802777a:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802777c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8027780:	fb05 fa0a 	mul.w	sl, r5, sl
 8027784:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8027788:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802778c:	44bc      	add	ip, r7
 802778e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8027792:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8027796:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802779a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802779e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80277a2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80277a6:	ea4c 050a 	orr.w	r5, ip, sl
 80277aa:	950e      	str	r5, [sp, #56]	; 0x38
 80277ac:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80277ae:	2dff      	cmp	r5, #255	; 0xff
 80277b0:	d020      	beq.n	80277f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 80277b2:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80277b4:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80277b8:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80277ba:	436f      	muls	r7, r5
 80277bc:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80277be:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80277c2:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80277c4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80277c8:	fb05 fa0a 	mul.w	sl, r5, sl
 80277cc:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80277d0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80277d4:	44bc      	add	ip, r7
 80277d6:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80277da:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80277de:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80277e2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80277e6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80277ea:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80277ee:	ea4c 050a 	orr.w	r5, ip, sl
 80277f2:	9509      	str	r5, [sp, #36]	; 0x24
 80277f4:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80277f6:	2dff      	cmp	r5, #255	; 0xff
 80277f8:	d020      	beq.n	802783c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 80277fa:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80277fc:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8027800:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8027802:	436f      	muls	r7, r5
 8027804:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8027806:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802780a:	9d16      	ldr	r5, [sp, #88]	; 0x58
 802780c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8027810:	fb05 fa0a 	mul.w	sl, r5, sl
 8027814:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8027818:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802781c:	44bc      	add	ip, r7
 802781e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8027822:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8027826:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802782a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802782e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8027832:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8027836:	ea4c 050a 	orr.w	r5, ip, sl
 802783a:	950f      	str	r5, [sp, #60]	; 0x3c
 802783c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802783e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8027842:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8027844:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8027848:	fb0e f707 	mul.w	r7, lr, r7
 802784c:	fb02 770c 	mla	r7, r2, ip, r7
 8027850:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8027854:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8027856:	fb00 770c 	mla	r7, r0, ip, r7
 802785a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802785e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8027860:	fb08 770c 	mla	r7, r8, ip, r7
 8027864:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8027868:	fb0e fe0c 	mul.w	lr, lr, ip
 802786c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8027870:	fb02 e303 	mla	r3, r2, r3, lr
 8027874:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8027876:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8027878:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 802787c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802787e:	fb00 330a 	mla	r3, r0, sl, r3
 8027882:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8027886:	fb08 3c0c 	mla	ip, r8, ip, r3
 802788a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802788c:	f8b9 0000 	ldrh.w	r0, [r9]
 8027890:	4359      	muls	r1, r3
 8027892:	0a3f      	lsrs	r7, r7, #8
 8027894:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027898:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802789c:	1c4b      	adds	r3, r1, #1
 802789e:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80278a2:	ea47 070c 	orr.w	r7, r7, ip
 80278a6:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80278aa:	1202      	asrs	r2, r0, #8
 80278ac:	0c3b      	lsrs	r3, r7, #16
 80278ae:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 80278b2:	b2c9      	uxtb	r1, r1
 80278b4:	fb13 f305 	smulbb	r3, r3, r5
 80278b8:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80278bc:	fb02 3201 	mla	r2, r2, r1, r3
 80278c0:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 80278c4:	10c3      	asrs	r3, r0, #3
 80278c6:	b2ff      	uxtb	r7, r7
 80278c8:	00c0      	lsls	r0, r0, #3
 80278ca:	b2c0      	uxtb	r0, r0
 80278cc:	fb17 f705 	smulbb	r7, r7, r5
 80278d0:	fb00 7001 	mla	r0, r0, r1, r7
 80278d4:	b292      	uxth	r2, r2
 80278d6:	fb1c fc05 	smulbb	ip, ip, r5
 80278da:	b280      	uxth	r0, r0
 80278dc:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80278e0:	fb03 c301 	mla	r3, r3, r1, ip
 80278e4:	1c51      	adds	r1, r2, #1
 80278e6:	f100 0c01 	add.w	ip, r0, #1
 80278ea:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80278ee:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 80278f2:	b29b      	uxth	r3, r3
 80278f4:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80278f8:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 80278fc:	ea4c 0202 	orr.w	r2, ip, r2
 8027900:	f103 0c01 	add.w	ip, r3, #1
 8027904:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8027908:	095b      	lsrs	r3, r3, #5
 802790a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802790e:	431a      	orrs	r2, r3
 8027910:	f8a9 2000 	strh.w	r2, [r9]
 8027914:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8027916:	441c      	add	r4, r3
 8027918:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 802791a:	f109 0902 	add.w	r9, r9, #2
 802791e:	441e      	add	r6, r3
 8027920:	f10b 3bff 	add.w	fp, fp, #4294967295
 8027924:	e647      	b.n	80275b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8027926:	2800      	cmp	r0, #0
 8027928:	f43f aedf 	beq.w	80276ea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 802792c:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 8027930:	9109      	str	r1, [sp, #36]	; 0x24
 8027932:	0e09      	lsrs	r1, r1, #24
 8027934:	9112      	str	r1, [sp, #72]	; 0x48
 8027936:	e6d8      	b.n	80276ea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8027938:	b01d      	add	sp, #116	; 0x74
 802793a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802793e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 802793e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027942:	b085      	sub	sp, #20
 8027944:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 8027948:	9102      	str	r1, [sp, #8]
 802794a:	2c00      	cmp	r4, #0
 802794c:	fb04 7103 	mla	r1, r4, r3, r7
 8027950:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8027954:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8027958:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 802795c:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8027960:	f2c0 810c 	blt.w	8027b7c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8027964:	45a6      	cmp	lr, r4
 8027966:	f340 8109 	ble.w	8027b7c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 802796a:	2f00      	cmp	r7, #0
 802796c:	f2c0 8104 	blt.w	8027b78 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8027970:	42bb      	cmp	r3, r7
 8027972:	f340 8101 	ble.w	8027b78 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8027976:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 802797a:	1c7a      	adds	r2, r7, #1
 802797c:	f100 8101 	bmi.w	8027b82 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8027980:	4293      	cmp	r3, r2
 8027982:	f340 80fe 	ble.w	8027b82 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8027986:	2e00      	cmp	r6, #0
 8027988:	f000 80fd 	beq.w	8027b86 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 802798c:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8027990:	3401      	adds	r4, #1
 8027992:	f100 80fc 	bmi.w	8027b8e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8027996:	45a6      	cmp	lr, r4
 8027998:	f340 80f9 	ble.w	8027b8e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 802799c:	2800      	cmp	r0, #0
 802799e:	f000 80f9 	beq.w	8027b94 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 80279a2:	2f00      	cmp	r7, #0
 80279a4:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 80279a8:	f2c0 80ef 	blt.w	8027b8a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 80279ac:	42bb      	cmp	r3, r7
 80279ae:	f340 80ec 	ble.w	8027b8a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 80279b2:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 80279b6:	3701      	adds	r7, #1
 80279b8:	f100 80ef 	bmi.w	8027b9a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 80279bc:	42bb      	cmp	r3, r7
 80279be:	f340 80ec 	ble.w	8027b9a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 80279c2:	2e00      	cmp	r6, #0
 80279c4:	f000 80eb 	beq.w	8027b9e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 80279c8:	6852      	ldr	r2, [r2, #4]
 80279ca:	b2b6      	uxth	r6, r6
 80279cc:	b280      	uxth	r0, r0
 80279ce:	fb00 fe06 	mul.w	lr, r0, r6
 80279d2:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 80279d6:	0136      	lsls	r6, r6, #4
 80279d8:	eba6 070e 	sub.w	r7, r6, lr
 80279dc:	b280      	uxth	r0, r0
 80279de:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 80279e2:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 80279e6:	b2bf      	uxth	r7, r7
 80279e8:	1a1b      	subs	r3, r3, r0
 80279ea:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 80279ee:	b29b      	uxth	r3, r3
 80279f0:	fb07 f60a 	mul.w	r6, r7, sl
 80279f4:	ea4f 6914 	mov.w	r9, r4, lsr #24
 80279f8:	fb0b 6603 	mla	r6, fp, r3, r6
 80279fc:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8027a00:	fb00 6609 	mla	r6, r0, r9, r6
 8027a04:	fb0e 6608 	mla	r6, lr, r8, r6
 8027a08:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8027a0c:	9600      	str	r6, [sp, #0]
 8027a0e:	2e00      	cmp	r6, #0
 8027a10:	f000 80af 	beq.w	8027b72 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 8027a14:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8027a18:	fb0b fc0c 	mul.w	ip, fp, ip
 8027a1c:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8027a20:	fb0b f505 	mul.w	r5, fp, r5
 8027a24:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8027a28:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8027a2c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8027a30:	44dc      	add	ip, fp
 8027a32:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027a36:	9501      	str	r5, [sp, #4]
 8027a38:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8027a3c:	9503      	str	r5, [sp, #12]
 8027a3e:	9d01      	ldr	r5, [sp, #4]
 8027a40:	9e02      	ldr	r6, [sp, #8]
 8027a42:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8027a46:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8027a4a:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8027a4e:	fb0a fc0c 	mul.w	ip, sl, ip
 8027a52:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8027a56:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8027a5a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8027a5e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8027a62:	4465      	add	r5, ip
 8027a64:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8027a68:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8027a6c:	fb09 fc0c 	mul.w	ip, r9, ip
 8027a70:	fb09 f904 	mul.w	r9, r9, r4
 8027a74:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8027a78:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8027a7c:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8027a80:	fb08 f404 	mul.w	r4, r8, r4
 8027a84:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8027a88:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8027a8c:	fb08 f802 	mul.w	r8, r8, r2
 8027a90:	fb0a fa01 	mul.w	sl, sl, r1
 8027a94:	0a22      	lsrs	r2, r4, #8
 8027a96:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8027a9a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8027a9e:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8027aa2:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8027aa6:	4414      	add	r4, r2
 8027aa8:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8027aac:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8027ab0:	0a2d      	lsrs	r5, r5, #8
 8027ab2:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8027ab6:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8027aba:	9a03      	ldr	r2, [sp, #12]
 8027abc:	8836      	ldrh	r6, [r6, #0]
 8027abe:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8027ac2:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8027ac6:	437d      	muls	r5, r7
 8027ac8:	4461      	add	r1, ip
 8027aca:	0a24      	lsrs	r4, r4, #8
 8027acc:	fb02 5503 	mla	r5, r2, r3, r5
 8027ad0:	0a09      	lsrs	r1, r1, #8
 8027ad2:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8027ad6:	fb04 540e 	mla	r4, r4, lr, r5
 8027ada:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8027ade:	fb01 4100 	mla	r1, r1, r0, r4
 8027ae2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027ae6:	0a09      	lsrs	r1, r1, #8
 8027ae8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8027aec:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8027af0:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8027af4:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8027af8:	fb07 f70a 	mul.w	r7, r7, sl
 8027afc:	fb03 7101 	mla	r1, r3, r1, r7
 8027b00:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8027b04:	9b00      	ldr	r3, [sp, #0]
 8027b06:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8027b0a:	fb0e 1e08 	mla	lr, lr, r8, r1
 8027b0e:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8027b12:	fb00 e101 	mla	r1, r0, r1, lr
 8027b16:	43da      	mvns	r2, r3
 8027b18:	1233      	asrs	r3, r6, #8
 8027b1a:	b2d2      	uxtb	r2, r2
 8027b1c:	10f0      	asrs	r0, r6, #3
 8027b1e:	0a09      	lsrs	r1, r1, #8
 8027b20:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8027b24:	00f6      	lsls	r6, r6, #3
 8027b26:	4353      	muls	r3, r2
 8027b28:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8027b2c:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8027b30:	b2f6      	uxtb	r6, r6
 8027b32:	4321      	orrs	r1, r4
 8027b34:	4350      	muls	r0, r2
 8027b36:	4356      	muls	r6, r2
 8027b38:	1c5a      	adds	r2, r3, #1
 8027b3a:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8027b3e:	0c0b      	lsrs	r3, r1, #16
 8027b40:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8027b44:	1c42      	adds	r2, r0, #1
 8027b46:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8027b4a:	0a0a      	lsrs	r2, r1, #8
 8027b4c:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8027b50:	021b      	lsls	r3, r3, #8
 8027b52:	00d2      	lsls	r2, r2, #3
 8027b54:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8027b58:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8027b5c:	4313      	orrs	r3, r2
 8027b5e:	1c72      	adds	r2, r6, #1
 8027b60:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8027b64:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 8027b68:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8027b6c:	4319      	orrs	r1, r3
 8027b6e:	9b02      	ldr	r3, [sp, #8]
 8027b70:	8019      	strh	r1, [r3, #0]
 8027b72:	b005      	add	sp, #20
 8027b74:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027b78:	2500      	movs	r5, #0
 8027b7a:	e6fe      	b.n	802797a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 8027b7c:	2100      	movs	r1, #0
 8027b7e:	460d      	mov	r5, r1
 8027b80:	e706      	b.n	8027990 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8027b82:	2100      	movs	r1, #0
 8027b84:	e704      	b.n	8027990 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8027b86:	4631      	mov	r1, r6
 8027b88:	e702      	b.n	8027990 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8027b8a:	2400      	movs	r4, #0
 8027b8c:	e713      	b.n	80279b6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 8027b8e:	2200      	movs	r2, #0
 8027b90:	4614      	mov	r4, r2
 8027b92:	e71a      	b.n	80279ca <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8027b94:	4602      	mov	r2, r0
 8027b96:	4604      	mov	r4, r0
 8027b98:	e717      	b.n	80279ca <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8027b9a:	2200      	movs	r2, #0
 8027b9c:	e715      	b.n	80279ca <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8027b9e:	4632      	mov	r2, r6
 8027ba0:	e713      	b.n	80279ca <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

08027ba4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8027ba4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027ba8:	b09b      	sub	sp, #108	; 0x6c
 8027baa:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 8027bae:	9218      	str	r2, [sp, #96]	; 0x60
 8027bb0:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8027bb2:	9116      	str	r1, [sp, #88]	; 0x58
 8027bb4:	9307      	str	r3, [sp, #28]
 8027bb6:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8027bba:	9019      	str	r0, [sp, #100]	; 0x64
 8027bbc:	6850      	ldr	r0, [r2, #4]
 8027bbe:	6812      	ldr	r2, [r2, #0]
 8027bc0:	fb00 1303 	mla	r3, r0, r3, r1
 8027bc4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8027bc8:	930a      	str	r3, [sp, #40]	; 0x28
 8027bca:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8027bcc:	681b      	ldr	r3, [r3, #0]
 8027bce:	930f      	str	r3, [sp, #60]	; 0x3c
 8027bd0:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8027bd2:	2b00      	cmp	r3, #0
 8027bd4:	dc03      	bgt.n	8027bde <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8027bd6:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8027bd8:	2b00      	cmp	r3, #0
 8027bda:	f340 8386 	ble.w	80282ea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8027bde:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8027be0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8027be4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8027be8:	1e48      	subs	r0, r1, #1
 8027bea:	1e57      	subs	r7, r2, #1
 8027bec:	9b07      	ldr	r3, [sp, #28]
 8027bee:	2b00      	cmp	r3, #0
 8027bf0:	f340 8166 	ble.w	8027ec0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8027bf4:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8027bf8:	ea4f 4326 	mov.w	r3, r6, asr #16
 8027bfc:	d406      	bmi.n	8027c0c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8027bfe:	4584      	cmp	ip, r0
 8027c00:	da04      	bge.n	8027c0c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8027c02:	2b00      	cmp	r3, #0
 8027c04:	db02      	blt.n	8027c0c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8027c06:	42bb      	cmp	r3, r7
 8027c08:	f2c0 815b 	blt.w	8027ec2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8027c0c:	f11c 0c01 	adds.w	ip, ip, #1
 8027c10:	f100 814b 	bmi.w	8027eaa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8027c14:	4561      	cmp	r1, ip
 8027c16:	f2c0 8148 	blt.w	8027eaa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8027c1a:	3301      	adds	r3, #1
 8027c1c:	f100 8145 	bmi.w	8027eaa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8027c20:	429a      	cmp	r2, r3
 8027c22:	f2c0 8142 	blt.w	8027eaa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8027c26:	9b07      	ldr	r3, [sp, #28]
 8027c28:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8027c2a:	9317      	str	r3, [sp, #92]	; 0x5c
 8027c2c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8027c2e:	2b00      	cmp	r3, #0
 8027c30:	f340 8165 	ble.w	8027efe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8027c34:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8027c36:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8027c38:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8027c3c:	689b      	ldr	r3, [r3, #8]
 8027c3e:	1422      	asrs	r2, r4, #16
 8027c40:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8027c44:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8027c48:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8027c4c:	f100 81d5 	bmi.w	8027ffa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8027c50:	f103 38ff 	add.w	r8, r3, #4294967295
 8027c54:	4542      	cmp	r2, r8
 8027c56:	f280 81d0 	bge.w	8027ffa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8027c5a:	f1bc 0f00 	cmp.w	ip, #0
 8027c5e:	f2c0 81cc 	blt.w	8027ffa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8027c62:	f10e 38ff 	add.w	r8, lr, #4294967295
 8027c66:	45c4      	cmp	ip, r8
 8027c68:	f280 81c7 	bge.w	8027ffa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8027c6c:	b21b      	sxth	r3, r3
 8027c6e:	fb0c 2203 	mla	r2, ip, r3, r2
 8027c72:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8027c74:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8027c78:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8027c7c:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8027c80:	2900      	cmp	r1, #0
 8027c82:	f000 8182 	beq.w	8027f8a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8027c86:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8027c8a:	950b      	str	r5, [sp, #44]	; 0x2c
 8027c8c:	0e2d      	lsrs	r5, r5, #24
 8027c8e:	9512      	str	r5, [sp, #72]	; 0x48
 8027c90:	b180      	cbz	r0, 8027cb4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8027c92:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8027c96:	3b01      	subs	r3, #1
 8027c98:	009b      	lsls	r3, r3, #2
 8027c9a:	3304      	adds	r3, #4
 8027c9c:	eb08 0c03 	add.w	ip, r8, r3
 8027ca0:	f858 3003 	ldr.w	r3, [r8, r3]
 8027ca4:	9308      	str	r3, [sp, #32]
 8027ca6:	0e1b      	lsrs	r3, r3, #24
 8027ca8:	9310      	str	r3, [sp, #64]	; 0x40
 8027caa:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8027cae:	930c      	str	r3, [sp, #48]	; 0x30
 8027cb0:	0e1b      	lsrs	r3, r3, #24
 8027cb2:	9313      	str	r3, [sp, #76]	; 0x4c
 8027cb4:	b289      	uxth	r1, r1
 8027cb6:	b280      	uxth	r0, r0
 8027cb8:	fb01 f900 	mul.w	r9, r1, r0
 8027cbc:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8027cc0:	0109      	lsls	r1, r1, #4
 8027cc2:	eba1 0809 	sub.w	r8, r1, r9
 8027cc6:	b280      	uxth	r0, r0
 8027cc8:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 8027ccc:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8027cce:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8027cd0:	fa1f f888 	uxth.w	r8, r8
 8027cd4:	1a09      	subs	r1, r1, r0
 8027cd6:	b289      	uxth	r1, r1
 8027cd8:	fb08 f303 	mul.w	r3, r8, r3
 8027cdc:	fb01 330e 	mla	r3, r1, lr, r3
 8027ce0:	fb00 3305 	mla	r3, r0, r5, r3
 8027ce4:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8027ce6:	fb09 3305 	mla	r3, r9, r5, r3
 8027cea:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8027cee:	2b00      	cmp	r3, #0
 8027cf0:	f000 80d2 	beq.w	8027e98 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8027cf4:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8027cf8:	d01b      	beq.n	8027d32 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 8027cfa:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8027cfe:	fb0e fa0a 	mul.w	sl, lr, sl
 8027d02:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8027d06:	fb0e fe02 	mul.w	lr, lr, r2
 8027d0a:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8027d0e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8027d12:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8027d16:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8027d1a:	4452      	add	r2, sl
 8027d1c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8027d20:	0a12      	lsrs	r2, r2, #8
 8027d22:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027d26:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8027d2a:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8027d2e:	ea42 020c 	orr.w	r2, r2, ip
 8027d32:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8027d34:	2dff      	cmp	r5, #255	; 0xff
 8027d36:	d021      	beq.n	8027d7c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 8027d38:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8027d3a:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8027d3e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8027d40:	fb05 fb0b 	mul.w	fp, r5, fp
 8027d44:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8027d46:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8027d4a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8027d4c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8027d50:	fb05 fa0a 	mul.w	sl, r5, sl
 8027d54:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027d58:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8027d5c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8027d60:	44de      	add	lr, fp
 8027d62:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8027d66:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8027d6a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027d6e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027d72:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8027d76:	ea4e 050a 	orr.w	r5, lr, sl
 8027d7a:	950b      	str	r5, [sp, #44]	; 0x2c
 8027d7c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8027d7e:	2dff      	cmp	r5, #255	; 0xff
 8027d80:	d021      	beq.n	8027dc6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8027d82:	9d08      	ldr	r5, [sp, #32]
 8027d84:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8027d88:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8027d8a:	fb05 fb0b 	mul.w	fp, r5, fp
 8027d8e:	9d08      	ldr	r5, [sp, #32]
 8027d90:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8027d94:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8027d96:	fb05 fa0e 	mul.w	sl, r5, lr
 8027d9a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8027d9e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027da2:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8027da6:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8027daa:	44de      	add	lr, fp
 8027dac:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8027db0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8027db4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027db8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027dbc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8027dc0:	ea4e 050a 	orr.w	r5, lr, sl
 8027dc4:	9508      	str	r5, [sp, #32]
 8027dc6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8027dc8:	2dff      	cmp	r5, #255	; 0xff
 8027dca:	d021      	beq.n	8027e10 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 8027dcc:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8027dce:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8027dd2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8027dd4:	fb05 fb0b 	mul.w	fp, r5, fp
 8027dd8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8027dda:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8027dde:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8027de0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8027de4:	fb05 fa0a 	mul.w	sl, r5, sl
 8027de8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027dec:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8027df0:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8027df4:	44de      	add	lr, fp
 8027df6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8027dfa:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8027dfe:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027e02:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027e06:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8027e0a:	ea4e 050a 	orr.w	r5, lr, sl
 8027e0e:	950c      	str	r5, [sp, #48]	; 0x30
 8027e10:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8027e12:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8027e16:	9d08      	ldr	r5, [sp, #32]
 8027e18:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8027e1c:	fb08 fc0c 	mul.w	ip, r8, ip
 8027e20:	fb01 cc0e 	mla	ip, r1, lr, ip
 8027e24:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8027e28:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8027e2a:	fb00 cc0e 	mla	ip, r0, lr, ip
 8027e2e:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8027e32:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8027e34:	fb09 cc0e 	mla	ip, r9, lr, ip
 8027e38:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8027e3c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8027e40:	fb08 f80e 	mul.w	r8, r8, lr
 8027e44:	fb01 8202 	mla	r2, r1, r2, r8
 8027e48:	9908      	ldr	r1, [sp, #32]
 8027e4a:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8027e4e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8027e50:	fb00 220a 	mla	r2, r0, sl, r2
 8027e54:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 8027e58:	fb09 2900 	mla	r9, r9, r0, r2
 8027e5c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027e60:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8027e64:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8027e68:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8027e6c:	ea4c 0c09 	orr.w	ip, ip, r9
 8027e70:	2bff      	cmp	r3, #255	; 0xff
 8027e72:	ea4f 221c 	mov.w	r2, ip, lsr #8
 8027e76:	f040 8091 	bne.w	8027f9c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8027e7a:	ea4f 135c 	mov.w	r3, ip, lsr #5
 8027e7e:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 8027e82:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8027e86:	f022 0207 	bic.w	r2, r2, #7
 8027e8a:	431a      	orrs	r2, r3
 8027e8c:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8027e90:	ea4c 0c02 	orr.w	ip, ip, r2
 8027e94:	f8a7 c000 	strh.w	ip, [r7]
 8027e98:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8027e9a:	441c      	add	r4, r3
 8027e9c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8027e9e:	441e      	add	r6, r3
 8027ea0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8027ea2:	3b01      	subs	r3, #1
 8027ea4:	3702      	adds	r7, #2
 8027ea6:	9317      	str	r3, [sp, #92]	; 0x5c
 8027ea8:	e6c0      	b.n	8027c2c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8027eaa:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8027eac:	441c      	add	r4, r3
 8027eae:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8027eb0:	441e      	add	r6, r3
 8027eb2:	9b07      	ldr	r3, [sp, #28]
 8027eb4:	3b01      	subs	r3, #1
 8027eb6:	9307      	str	r3, [sp, #28]
 8027eb8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8027eba:	3302      	adds	r3, #2
 8027ebc:	930a      	str	r3, [sp, #40]	; 0x28
 8027ebe:	e695      	b.n	8027bec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8027ec0:	d024      	beq.n	8027f0c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8027ec2:	9b07      	ldr	r3, [sp, #28]
 8027ec4:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8027ec6:	3b01      	subs	r3, #1
 8027ec8:	fb00 4003 	mla	r0, r0, r3, r4
 8027ecc:	1400      	asrs	r0, r0, #16
 8027ece:	f53f aeaa 	bmi.w	8027c26 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8027ed2:	3901      	subs	r1, #1
 8027ed4:	4288      	cmp	r0, r1
 8027ed6:	f6bf aea6 	bge.w	8027c26 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8027eda:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8027edc:	fb01 6303 	mla	r3, r1, r3, r6
 8027ee0:	141b      	asrs	r3, r3, #16
 8027ee2:	f53f aea0 	bmi.w	8027c26 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8027ee6:	3a01      	subs	r2, #1
 8027ee8:	4293      	cmp	r3, r2
 8027eea:	f6bf ae9c 	bge.w	8027c26 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8027eee:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8027ef2:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 8027ef6:	f1bb 0f00 	cmp.w	fp, #0
 8027efa:	f300 809a 	bgt.w	8028032 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8027efe:	9b07      	ldr	r3, [sp, #28]
 8027f00:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8027f04:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8027f06:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8027f0a:	930a      	str	r3, [sp, #40]	; 0x28
 8027f0c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8027f0e:	2b00      	cmp	r3, #0
 8027f10:	f340 81eb 	ble.w	80282ea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8027f14:	ee30 0a04 	vadd.f32	s0, s0, s8
 8027f18:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8027f1c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8027f20:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8027f22:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8027f26:	ee31 1a05 	vadd.f32	s2, s2, s10
 8027f2a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8027f2e:	eef0 6a62 	vmov.f32	s13, s5
 8027f32:	ee61 7a27 	vmul.f32	s15, s2, s15
 8027f36:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8027f3a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8027f3e:	ee16 4a90 	vmov	r4, s13
 8027f42:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8027f46:	eef0 6a43 	vmov.f32	s13, s6
 8027f4a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8027f4e:	ee12 2a90 	vmov	r2, s5
 8027f52:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8027f56:	fb92 f3f3 	sdiv	r3, r2, r3
 8027f5a:	ee13 2a10 	vmov	r2, s6
 8027f5e:	9327      	str	r3, [sp, #156]	; 0x9c
 8027f60:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8027f62:	fb92 f3f3 	sdiv	r3, r2, r3
 8027f66:	9328      	str	r3, [sp, #160]	; 0xa0
 8027f68:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8027f6a:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8027f6c:	3b01      	subs	r3, #1
 8027f6e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8027f72:	9316      	str	r3, [sp, #88]	; 0x58
 8027f74:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8027f76:	bf08      	it	eq
 8027f78:	4613      	moveq	r3, r2
 8027f7a:	ee16 6a90 	vmov	r6, s13
 8027f7e:	9307      	str	r3, [sp, #28]
 8027f80:	eeb0 3a67 	vmov.f32	s6, s15
 8027f84:	eef0 2a47 	vmov.f32	s5, s14
 8027f88:	e622      	b.n	8027bd0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 8027f8a:	2800      	cmp	r0, #0
 8027f8c:	f43f ae92 	beq.w	8027cb4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8027f90:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8027f94:	9308      	str	r3, [sp, #32]
 8027f96:	0e1b      	lsrs	r3, r3, #24
 8027f98:	9310      	str	r3, [sp, #64]	; 0x40
 8027f9a:	e68b      	b.n	8027cb4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8027f9c:	8839      	ldrh	r1, [r7, #0]
 8027f9e:	4dd4      	ldr	r5, [pc, #848]	; (80282f0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 8027fa0:	43db      	mvns	r3, r3
 8027fa2:	ea4f 2e21 	mov.w	lr, r1, asr #8
 8027fa6:	fa5f f883 	uxtb.w	r8, r3
 8027faa:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8027fae:	fb0e fe08 	mul.w	lr, lr, r8
 8027fb2:	10c8      	asrs	r0, r1, #3
 8027fb4:	00cb      	lsls	r3, r1, #3
 8027fb6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8027fba:	f10e 0101 	add.w	r1, lr, #1
 8027fbe:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 8027fc2:	fb00 f008 	mul.w	r0, r0, r8
 8027fc6:	ea4f 411c 	mov.w	r1, ip, lsr #16
 8027fca:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 8027fce:	f100 0e01 	add.w	lr, r0, #1
 8027fd2:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 8027fd6:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8027fda:	b2db      	uxtb	r3, r3
 8027fdc:	b2c9      	uxtb	r1, r1
 8027fde:	00d2      	lsls	r2, r2, #3
 8027fe0:	fb03 f308 	mul.w	r3, r3, r8
 8027fe4:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 8027fe8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8027fec:	430a      	orrs	r2, r1
 8027fee:	1c59      	adds	r1, r3, #1
 8027ff0:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8027ff4:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8027ff8:	e748      	b.n	8027e8c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 8027ffa:	f112 0801 	adds.w	r8, r2, #1
 8027ffe:	f53f af4b 	bmi.w	8027e98 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8028002:	4543      	cmp	r3, r8
 8028004:	f6ff af48 	blt.w	8027e98 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8028008:	f11c 0801 	adds.w	r8, ip, #1
 802800c:	f53f af44 	bmi.w	8027e98 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8028010:	45c6      	cmp	lr, r8
 8028012:	f6ff af41 	blt.w	8027e98 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8028016:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 802801a:	fa0f f28e 	sxth.w	r2, lr
 802801e:	e9cd 1003 	strd	r1, r0, [sp, #12]
 8028022:	9200      	str	r2, [sp, #0]
 8028024:	b21b      	sxth	r3, r3
 8028026:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8028028:	9819      	ldr	r0, [sp, #100]	; 0x64
 802802a:	4639      	mov	r1, r7
 802802c:	f7ff fc87 	bl	802793e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 8028030:	e732      	b.n	8027e98 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8028032:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8028034:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8028036:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 802803a:	1421      	asrs	r1, r4, #16
 802803c:	1433      	asrs	r3, r6, #16
 802803e:	fb07 1303 	mla	r3, r7, r3, r1
 8028042:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8028044:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8028048:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 802804c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8028050:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8028054:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8028058:	2a00      	cmp	r2, #0
 802805a:	f000 8107 	beq.w	802826c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 802805e:	684d      	ldr	r5, [r1, #4]
 8028060:	950d      	str	r5, [sp, #52]	; 0x34
 8028062:	0e2d      	lsrs	r5, r5, #24
 8028064:	9514      	str	r5, [sp, #80]	; 0x50
 8028066:	b178      	cbz	r0, 8028088 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8028068:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 802806c:	3f01      	subs	r7, #1
 802806e:	00bf      	lsls	r7, r7, #2
 8028070:	3704      	adds	r7, #4
 8028072:	eb01 0e07 	add.w	lr, r1, r7
 8028076:	59c9      	ldr	r1, [r1, r7]
 8028078:	9109      	str	r1, [sp, #36]	; 0x24
 802807a:	0e09      	lsrs	r1, r1, #24
 802807c:	9111      	str	r1, [sp, #68]	; 0x44
 802807e:	f8de 1004 	ldr.w	r1, [lr, #4]
 8028082:	910e      	str	r1, [sp, #56]	; 0x38
 8028084:	0e09      	lsrs	r1, r1, #24
 8028086:	9115      	str	r1, [sp, #84]	; 0x54
 8028088:	b292      	uxth	r2, r2
 802808a:	b280      	uxth	r0, r0
 802808c:	fb02 f900 	mul.w	r9, r2, r0
 8028090:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8028094:	0112      	lsls	r2, r2, #4
 8028096:	eba2 0e09 	sub.w	lr, r2, r9
 802809a:	b280      	uxth	r0, r0
 802809c:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 80280a0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80280a2:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80280a4:	fa1f fe8e 	uxth.w	lr, lr
 80280a8:	1a09      	subs	r1, r1, r0
 80280aa:	b289      	uxth	r1, r1
 80280ac:	fb0e f202 	mul.w	r2, lr, r2
 80280b0:	fb01 220c 	mla	r2, r1, ip, r2
 80280b4:	fb00 2205 	mla	r2, r0, r5, r2
 80280b8:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80280ba:	fb09 2205 	mla	r2, r9, r5, r2
 80280be:	f3c2 2207 	ubfx	r2, r2, #8, #8
 80280c2:	2a00      	cmp	r2, #0
 80280c4:	f000 80c9 	beq.w	802825a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 80280c8:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80280cc:	d019      	beq.n	8028102 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 80280ce:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80280d2:	fb0c fa0a 	mul.w	sl, ip, sl
 80280d6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80280da:	fb0c fc03 	mul.w	ip, ip, r3
 80280de:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80280e2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80280e6:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80280ea:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 80280ee:	4453      	add	r3, sl
 80280f0:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80280f4:	0a1b      	lsrs	r3, r3, #8
 80280f6:	0a3f      	lsrs	r7, r7, #8
 80280f8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80280fc:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8028100:	433b      	orrs	r3, r7
 8028102:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8028104:	2dff      	cmp	r5, #255	; 0xff
 8028106:	d020      	beq.n	802814a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 8028108:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802810a:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802810e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8028110:	436f      	muls	r7, r5
 8028112:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8028114:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8028118:	9d14      	ldr	r5, [sp, #80]	; 0x50
 802811a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802811e:	fb05 fa0a 	mul.w	sl, r5, sl
 8028122:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8028126:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802812a:	44bc      	add	ip, r7
 802812c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8028130:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8028134:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8028138:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802813c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8028140:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8028144:	ea4c 050a 	orr.w	r5, ip, sl
 8028148:	950d      	str	r5, [sp, #52]	; 0x34
 802814a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802814c:	2dff      	cmp	r5, #255	; 0xff
 802814e:	d020      	beq.n	8028192 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 8028150:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8028152:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8028156:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8028158:	436f      	muls	r7, r5
 802815a:	9d09      	ldr	r5, [sp, #36]	; 0x24
 802815c:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8028160:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8028162:	fb05 fa0c 	mul.w	sl, r5, ip
 8028166:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802816a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802816e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8028172:	44bc      	add	ip, r7
 8028174:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8028178:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802817c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8028180:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8028184:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8028188:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802818c:	ea4c 050a 	orr.w	r5, ip, sl
 8028190:	9509      	str	r5, [sp, #36]	; 0x24
 8028192:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8028194:	2dff      	cmp	r5, #255	; 0xff
 8028196:	d020      	beq.n	80281da <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 8028198:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802819a:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802819e:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80281a0:	436f      	muls	r7, r5
 80281a2:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80281a4:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80281a8:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80281aa:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80281ae:	fb05 fa0a 	mul.w	sl, r5, sl
 80281b2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80281b6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80281ba:	44bc      	add	ip, r7
 80281bc:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80281c0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80281c4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80281c8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80281cc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80281d0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80281d4:	ea4c 050a 	orr.w	r5, ip, sl
 80281d8:	950e      	str	r5, [sp, #56]	; 0x38
 80281da:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80281dc:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80281e0:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80281e2:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80281e6:	fb0e f707 	mul.w	r7, lr, r7
 80281ea:	fb01 770c 	mla	r7, r1, ip, r7
 80281ee:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80281f2:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80281f4:	fb00 770c 	mla	r7, r0, ip, r7
 80281f8:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80281fc:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80281fe:	fb09 770c 	mla	r7, r9, ip, r7
 8028202:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8028206:	fb0e fe0c 	mul.w	lr, lr, ip
 802820a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802820e:	fb01 e303 	mla	r3, r1, r3, lr
 8028212:	9909      	ldr	r1, [sp, #36]	; 0x24
 8028214:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8028218:	990e      	ldr	r1, [sp, #56]	; 0x38
 802821a:	fb00 330a 	mla	r3, r0, sl, r3
 802821e:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8028222:	fb09 3c0c 	mla	ip, r9, ip, r3
 8028226:	0a3f      	lsrs	r7, r7, #8
 8028228:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802822c:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8028230:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8028234:	ea47 070c 	orr.w	r7, r7, ip
 8028238:	2aff      	cmp	r2, #255	; 0xff
 802823a:	ea4f 2317 	mov.w	r3, r7, lsr #8
 802823e:	d11e      	bne.n	802827e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 8028240:	097a      	lsrs	r2, r7, #5
 8028242:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 8028246:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802824a:	f023 0307 	bic.w	r3, r3, #7
 802824e:	4313      	orrs	r3, r2
 8028250:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8028254:	431f      	orrs	r7, r3
 8028256:	f8a8 7000 	strh.w	r7, [r8]
 802825a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 802825c:	441c      	add	r4, r3
 802825e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8028260:	f108 0802 	add.w	r8, r8, #2
 8028264:	441e      	add	r6, r3
 8028266:	f10b 3bff 	add.w	fp, fp, #4294967295
 802826a:	e644      	b.n	8027ef6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 802826c:	2800      	cmp	r0, #0
 802826e:	f43f af0b 	beq.w	8028088 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8028272:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 8028276:	9109      	str	r1, [sp, #36]	; 0x24
 8028278:	0e09      	lsrs	r1, r1, #24
 802827a:	9111      	str	r1, [sp, #68]	; 0x44
 802827c:	e704      	b.n	8028088 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 802827e:	f8b8 1000 	ldrh.w	r1, [r8]
 8028282:	43d2      	mvns	r2, r2
 8028284:	ea4f 2c21 	mov.w	ip, r1, asr #8
 8028288:	fa5f fe82 	uxtb.w	lr, r2
 802828c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8028290:	fb0c fc0e 	mul.w	ip, ip, lr
 8028294:	10c8      	asrs	r0, r1, #3
 8028296:	00ca      	lsls	r2, r1, #3
 8028298:	f10c 0101 	add.w	r1, ip, #1
 802829c:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80282a0:	0c39      	lsrs	r1, r7, #16
 80282a2:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80282a6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80282aa:	4911      	ldr	r1, [pc, #68]	; (80282f0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 80282ac:	fb00 f00e 	mul.w	r0, r0, lr
 80282b0:	fa5f fc8c 	uxtb.w	ip, ip
 80282b4:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 80282b8:	b2d2      	uxtb	r2, r2
 80282ba:	1c41      	adds	r1, r0, #1
 80282bc:	fb02 f20e 	mul.w	r2, r2, lr
 80282c0:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 80282c4:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80282c8:	1c51      	adds	r1, r2, #1
 80282ca:	00c0      	lsls	r0, r0, #3
 80282cc:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80282d0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80282d4:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 80282d8:	ea4c 0c00 	orr.w	ip, ip, r0
 80282dc:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 80282e0:	ea47 0c0c 	orr.w	ip, r7, ip
 80282e4:	f8a8 c000 	strh.w	ip, [r8]
 80282e8:	e7b7      	b.n	802825a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 80282ea:	b01b      	add	sp, #108	; 0x6c
 80282ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80282f0:	fffff800 	.word	0xfffff800

080282f4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 80282f4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80282f8:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 80282fc:	2d00      	cmp	r5, #0
 80282fe:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8028302:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8028306:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 802830a:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 802830e:	fb05 0e03 	mla	lr, r5, r3, r0
 8028312:	f2c0 808c 	blt.w	802842e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8028316:	45a9      	cmp	r9, r5
 8028318:	f340 8089 	ble.w	802842e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 802831c:	2800      	cmp	r0, #0
 802831e:	f2c0 8084 	blt.w	802842a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8028322:	4580      	cmp	r8, r0
 8028324:	f340 8081 	ble.w	802842a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8028328:	ea4f 045e 	mov.w	r4, lr, lsr #1
 802832c:	f01e 0f01 	tst.w	lr, #1
 8028330:	5d16      	ldrb	r6, [r2, r4]
 8028332:	bf0c      	ite	eq
 8028334:	f006 060f 	andeq.w	r6, r6, #15
 8028338:	1136      	asrne	r6, r6, #4
 802833a:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 802833e:	b2f6      	uxtb	r6, r6
 8028340:	1c44      	adds	r4, r0, #1
 8028342:	d477      	bmi.n	8028434 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8028344:	45a0      	cmp	r8, r4
 8028346:	dd75      	ble.n	8028434 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8028348:	2f00      	cmp	r7, #0
 802834a:	d075      	beq.n	8028438 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 802834c:	f10e 0a01 	add.w	sl, lr, #1
 8028350:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8028354:	f01a 0f01 	tst.w	sl, #1
 8028358:	5d14      	ldrb	r4, [r2, r4]
 802835a:	bf0c      	ite	eq
 802835c:	f004 040f 	andeq.w	r4, r4, #15
 8028360:	1124      	asrne	r4, r4, #4
 8028362:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8028366:	b2e4      	uxtb	r4, r4
 8028368:	3501      	adds	r5, #1
 802836a:	d469      	bmi.n	8028440 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 802836c:	45a9      	cmp	r9, r5
 802836e:	dd67      	ble.n	8028440 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 8028370:	f1bc 0f00 	cmp.w	ip, #0
 8028374:	d067      	beq.n	8028446 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 8028376:	2800      	cmp	r0, #0
 8028378:	db60      	blt.n	802843c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 802837a:	4580      	cmp	r8, r0
 802837c:	dd5e      	ble.n	802843c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 802837e:	eb03 090e 	add.w	r9, r3, lr
 8028382:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8028386:	f019 0f01 	tst.w	r9, #1
 802838a:	5d55      	ldrb	r5, [r2, r5]
 802838c:	bf0c      	ite	eq
 802838e:	f005 050f 	andeq.w	r5, r5, #15
 8028392:	112d      	asrne	r5, r5, #4
 8028394:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8028398:	b2ed      	uxtb	r5, r5
 802839a:	3001      	adds	r0, #1
 802839c:	d456      	bmi.n	802844c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 802839e:	4580      	cmp	r8, r0
 80283a0:	dd54      	ble.n	802844c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 80283a2:	2f00      	cmp	r7, #0
 80283a4:	d054      	beq.n	8028450 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 80283a6:	3301      	adds	r3, #1
 80283a8:	449e      	add	lr, r3
 80283aa:	ea4f 035e 	mov.w	r3, lr, lsr #1
 80283ae:	f01e 0f01 	tst.w	lr, #1
 80283b2:	5cd0      	ldrb	r0, [r2, r3]
 80283b4:	bf0c      	ite	eq
 80283b6:	f000 000f 	andeq.w	r0, r0, #15
 80283ba:	1100      	asrne	r0, r0, #4
 80283bc:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80283c0:	b2c3      	uxtb	r3, r0
 80283c2:	b2ba      	uxth	r2, r7
 80283c4:	fa1f fc8c 	uxth.w	ip, ip
 80283c8:	fb02 f00c 	mul.w	r0, r2, ip
 80283cc:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 80283d0:	0112      	lsls	r2, r2, #4
 80283d2:	fa1f fc8c 	uxth.w	ip, ip
 80283d6:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 80283da:	1a12      	subs	r2, r2, r0
 80283dc:	eba7 070c 	sub.w	r7, r7, ip
 80283e0:	b292      	uxth	r2, r2
 80283e2:	b2bf      	uxth	r7, r7
 80283e4:	4362      	muls	r2, r4
 80283e6:	fb06 2207 	mla	r2, r6, r7, r2
 80283ea:	fb0c 2505 	mla	r5, ip, r5, r2
 80283ee:	fb00 5303 	mla	r3, r0, r3, r5
 80283f2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80283f6:	b1b3      	cbz	r3, 8028426 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 80283f8:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 80283fc:	435a      	muls	r2, r3
 80283fe:	1c53      	adds	r3, r2, #1
 8028400:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8028404:	4a2d      	ldr	r2, [pc, #180]	; (80284bc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 8028406:	121b      	asrs	r3, r3, #8
 8028408:	6812      	ldr	r2, [r2, #0]
 802840a:	2bff      	cmp	r3, #255	; 0xff
 802840c:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8028410:	d120      	bne.n	8028454 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 8028412:	4b2b      	ldr	r3, [pc, #172]	; (80284c0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 8028414:	0950      	lsrs	r0, r2, #5
 8028416:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802841a:	4033      	ands	r3, r6
 802841c:	4318      	orrs	r0, r3
 802841e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8028422:	4302      	orrs	r2, r0
 8028424:	800a      	strh	r2, [r1, #0]
 8028426:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802842a:	2600      	movs	r6, #0
 802842c:	e788      	b.n	8028340 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 802842e:	2400      	movs	r4, #0
 8028430:	4626      	mov	r6, r4
 8028432:	e799      	b.n	8028368 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8028434:	2400      	movs	r4, #0
 8028436:	e797      	b.n	8028368 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8028438:	463c      	mov	r4, r7
 802843a:	e795      	b.n	8028368 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 802843c:	2500      	movs	r5, #0
 802843e:	e7ac      	b.n	802839a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 8028440:	2300      	movs	r3, #0
 8028442:	461d      	mov	r5, r3
 8028444:	e7bd      	b.n	80283c2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8028446:	4663      	mov	r3, ip
 8028448:	4665      	mov	r5, ip
 802844a:	e7ba      	b.n	80283c2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 802844c:	2300      	movs	r3, #0
 802844e:	e7b8      	b.n	80283c2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8028450:	463b      	mov	r3, r7
 8028452:	e7b6      	b.n	80283c2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8028454:	880d      	ldrh	r5, [r1, #0]
 8028456:	b29f      	uxth	r7, r3
 8028458:	122c      	asrs	r4, r5, #8
 802845a:	f3c2 4007 	ubfx	r0, r2, #16, #8
 802845e:	43db      	mvns	r3, r3
 8028460:	b2db      	uxtb	r3, r3
 8028462:	fb10 f007 	smulbb	r0, r0, r7
 8028466:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 802846a:	fb04 0403 	mla	r4, r4, r3, r0
 802846e:	b2f6      	uxtb	r6, r6
 8028470:	10e8      	asrs	r0, r5, #3
 8028472:	b2d2      	uxtb	r2, r2
 8028474:	00ed      	lsls	r5, r5, #3
 8028476:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802847a:	fb12 f207 	smulbb	r2, r2, r7
 802847e:	fb16 f607 	smulbb	r6, r6, r7
 8028482:	b2ed      	uxtb	r5, r5
 8028484:	b2a4      	uxth	r4, r4
 8028486:	fb00 6603 	mla	r6, r0, r3, r6
 802848a:	fb05 2303 	mla	r3, r5, r3, r2
 802848e:	b29a      	uxth	r2, r3
 8028490:	1c63      	adds	r3, r4, #1
 8028492:	b2b0      	uxth	r0, r6
 8028494:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8028498:	1c53      	adds	r3, r2, #1
 802849a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802849e:	1c42      	adds	r2, r0, #1
 80284a0:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80284a4:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 80284a8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80284ac:	0940      	lsrs	r0, r0, #5
 80284ae:	4323      	orrs	r3, r4
 80284b0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80284b4:	4303      	orrs	r3, r0
 80284b6:	800b      	strh	r3, [r1, #0]
 80284b8:	e7b5      	b.n	8028426 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 80284ba:	bf00      	nop
 80284bc:	2001384c 	.word	0x2001384c
 80284c0:	00fff800 	.word	0x00fff800

080284c4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80284c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80284c8:	b097      	sub	sp, #92	; 0x5c
 80284ca:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 80284ce:	9214      	str	r2, [sp, #80]	; 0x50
 80284d0:	9309      	str	r3, [sp, #36]	; 0x24
 80284d2:	9a25      	ldr	r2, [sp, #148]	; 0x94
 80284d4:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 80284d8:	910d      	str	r1, [sp, #52]	; 0x34
 80284da:	930f      	str	r3, [sp, #60]	; 0x3c
 80284dc:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 80284e0:	9015      	str	r0, [sp, #84]	; 0x54
 80284e2:	6850      	ldr	r0, [r2, #4]
 80284e4:	6812      	ldr	r2, [r2, #0]
 80284e6:	fb00 1303 	mla	r3, r0, r3, r1
 80284ea:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 80284ee:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80284f0:	689b      	ldr	r3, [r3, #8]
 80284f2:	3301      	adds	r3, #1
 80284f4:	f023 0301 	bic.w	r3, r3, #1
 80284f8:	930a      	str	r3, [sp, #40]	; 0x28
 80284fa:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80284fc:	681f      	ldr	r7, [r3, #0]
 80284fe:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8028500:	2b00      	cmp	r3, #0
 8028502:	dc03      	bgt.n	802850c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8028504:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8028506:	2b00      	cmp	r3, #0
 8028508:	f340 8287 	ble.w	8028a1a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 802850c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802850e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8028512:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8028516:	1e48      	subs	r0, r1, #1
 8028518:	f102 3cff 	add.w	ip, r2, #4294967295
 802851c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802851e:	2b00      	cmp	r3, #0
 8028520:	f340 80c4 	ble.w	80286ac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8028524:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8028528:	ea4f 4326 	mov.w	r3, r6, asr #16
 802852c:	d406      	bmi.n	802853c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802852e:	4586      	cmp	lr, r0
 8028530:	da04      	bge.n	802853c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8028532:	2b00      	cmp	r3, #0
 8028534:	db02      	blt.n	802853c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8028536:	4563      	cmp	r3, ip
 8028538:	f2c0 80b9 	blt.w	80286ae <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 802853c:	f11e 0e01 	adds.w	lr, lr, #1
 8028540:	f100 80aa 	bmi.w	8028698 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8028544:	4571      	cmp	r1, lr
 8028546:	f2c0 80a7 	blt.w	8028698 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 802854a:	3301      	adds	r3, #1
 802854c:	f100 80a4 	bmi.w	8028698 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8028550:	429a      	cmp	r2, r3
 8028552:	f2c0 80a1 	blt.w	8028698 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8028556:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8028558:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 802855c:	930e      	str	r3, [sp, #56]	; 0x38
 802855e:	46c8      	mov	r8, r9
 8028560:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8028562:	2b00      	cmp	r3, #0
 8028564:	f340 80c3 	ble.w	80286ee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8028568:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802856a:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 802856e:	1423      	asrs	r3, r4, #16
 8028570:	ea4f 4026 	mov.w	r0, r6, asr #16
 8028574:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8028578:	f3c6 3103 	ubfx	r1, r6, #12, #4
 802857c:	f100 814d 	bmi.w	802881a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8028580:	f10c 3bff 	add.w	fp, ip, #4294967295
 8028584:	455b      	cmp	r3, fp
 8028586:	f280 8148 	bge.w	802881a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802858a:	2800      	cmp	r0, #0
 802858c:	f2c0 8145 	blt.w	802881a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8028590:	f10e 3bff 	add.w	fp, lr, #4294967295
 8028594:	4558      	cmp	r0, fp
 8028596:	f280 8140 	bge.w	802881a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802859a:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 802859c:	fb00 3305 	mla	r3, r0, r5, r3
 80285a0:	0858      	lsrs	r0, r3, #1
 80285a2:	07dd      	lsls	r5, r3, #31
 80285a4:	f817 c000 	ldrb.w	ip, [r7, r0]
 80285a8:	bf54      	ite	pl
 80285aa:	f00c 0c0f 	andpl.w	ip, ip, #15
 80285ae:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80285b2:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80285b6:	fa5f fc8c 	uxtb.w	ip, ip
 80285ba:	2a00      	cmp	r2, #0
 80285bc:	f000 80db 	beq.w	8028776 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 80285c0:	1c58      	adds	r0, r3, #1
 80285c2:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 80285c6:	07c0      	lsls	r0, r0, #31
 80285c8:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80285cc:	bf54      	ite	pl
 80285ce:	f00e 0e0f 	andpl.w	lr, lr, #15
 80285d2:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 80285d6:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 80285da:	fa5f f08e 	uxtb.w	r0, lr
 80285de:	9010      	str	r0, [sp, #64]	; 0x40
 80285e0:	b1c9      	cbz	r1, 8028616 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80285e2:	4453      	add	r3, sl
 80285e4:	0858      	lsrs	r0, r3, #1
 80285e6:	07dd      	lsls	r5, r3, #31
 80285e8:	5c38      	ldrb	r0, [r7, r0]
 80285ea:	bf54      	ite	pl
 80285ec:	f000 000f 	andpl.w	r0, r0, #15
 80285f0:	1100      	asrmi	r0, r0, #4
 80285f2:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80285f6:	3301      	adds	r3, #1
 80285f8:	b2c0      	uxtb	r0, r0
 80285fa:	900b      	str	r0, [sp, #44]	; 0x2c
 80285fc:	0858      	lsrs	r0, r3, #1
 80285fe:	07dd      	lsls	r5, r3, #31
 8028600:	f817 e000 	ldrb.w	lr, [r7, r0]
 8028604:	bf54      	ite	pl
 8028606:	f00e 030f 	andpl.w	r3, lr, #15
 802860a:	ea4f 132e 	movmi.w	r3, lr, asr #4
 802860e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8028612:	b2db      	uxtb	r3, r3
 8028614:	9311      	str	r3, [sp, #68]	; 0x44
 8028616:	b292      	uxth	r2, r2
 8028618:	b289      	uxth	r1, r1
 802861a:	fb02 f301 	mul.w	r3, r2, r1
 802861e:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8028622:	0112      	lsls	r2, r2, #4
 8028624:	b289      	uxth	r1, r1
 8028626:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 802862a:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802862c:	1ad2      	subs	r2, r2, r3
 802862e:	1a40      	subs	r0, r0, r1
 8028630:	b292      	uxth	r2, r2
 8028632:	436a      	muls	r2, r5
 8028634:	b280      	uxth	r0, r0
 8028636:	fb0c 2c00 	mla	ip, ip, r0, r2
 802863a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802863c:	fb01 c102 	mla	r1, r1, r2, ip
 8028640:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8028642:	fb03 1302 	mla	r3, r3, r2, r1
 8028646:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802864a:	b1db      	cbz	r3, 8028684 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802864c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802864e:	4353      	muls	r3, r2
 8028650:	1c5a      	adds	r2, r3, #1
 8028652:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8028656:	4ac6      	ldr	r2, [pc, #792]	; (8028970 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8028658:	121b      	asrs	r3, r3, #8
 802865a:	6812      	ldr	r2, [r2, #0]
 802865c:	2bff      	cmp	r3, #255	; 0xff
 802865e:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8028662:	f040 8099 	bne.w	8028798 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 8028666:	0953      	lsrs	r3, r2, #5
 8028668:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 802866c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8028670:	f02c 0c07 	bic.w	ip, ip, #7
 8028674:	ea43 0c0c 	orr.w	ip, r3, ip
 8028678:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802867c:	ea4c 0202 	orr.w	r2, ip, r2
 8028680:	f8a8 2000 	strh.w	r2, [r8]
 8028684:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8028686:	441c      	add	r4, r3
 8028688:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802868a:	441e      	add	r6, r3
 802868c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802868e:	3b01      	subs	r3, #1
 8028690:	f108 0802 	add.w	r8, r8, #2
 8028694:	930e      	str	r3, [sp, #56]	; 0x38
 8028696:	e763      	b.n	8028560 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8028698:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 802869a:	441c      	add	r4, r3
 802869c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802869e:	441e      	add	r6, r3
 80286a0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80286a2:	3b01      	subs	r3, #1
 80286a4:	9309      	str	r3, [sp, #36]	; 0x24
 80286a6:	f109 0902 	add.w	r9, r9, #2
 80286aa:	e737      	b.n	802851c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80286ac:	d024      	beq.n	80286f8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80286ae:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80286b0:	9823      	ldr	r0, [sp, #140]	; 0x8c
 80286b2:	3b01      	subs	r3, #1
 80286b4:	fb00 4003 	mla	r0, r0, r3, r4
 80286b8:	1400      	asrs	r0, r0, #16
 80286ba:	f53f af4c 	bmi.w	8028556 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80286be:	3901      	subs	r1, #1
 80286c0:	4288      	cmp	r0, r1
 80286c2:	f6bf af48 	bge.w	8028556 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80286c6:	9924      	ldr	r1, [sp, #144]	; 0x90
 80286c8:	fb01 6303 	mla	r3, r1, r3, r6
 80286cc:	141b      	asrs	r3, r3, #16
 80286ce:	f53f af42 	bmi.w	8028556 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80286d2:	3a01      	subs	r2, #1
 80286d4:	4293      	cmp	r3, r2
 80286d6:	f6bf af3e 	bge.w	8028556 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80286da:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 80286de:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 80286e2:	930e      	str	r3, [sp, #56]	; 0x38
 80286e4:	46c8      	mov	r8, r9
 80286e6:	f1bb 0f00 	cmp.w	fp, #0
 80286ea:	f300 80b7 	bgt.w	802885c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 80286ee:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80286f0:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80286f4:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 80286f8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80286fa:	2b00      	cmp	r3, #0
 80286fc:	f340 818d 	ble.w	8028a1a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 8028700:	ee30 0a04 	vadd.f32	s0, s0, s8
 8028704:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8028708:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802870c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802870e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8028712:	ee31 1a05 	vadd.f32	s2, s2, s10
 8028716:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802871a:	eef0 6a62 	vmov.f32	s13, s5
 802871e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8028722:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8028726:	ee77 2a62 	vsub.f32	s5, s14, s5
 802872a:	ee16 4a90 	vmov	r4, s13
 802872e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8028732:	eef0 6a43 	vmov.f32	s13, s6
 8028736:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802873a:	ee12 2a90 	vmov	r2, s5
 802873e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8028742:	fb92 f3f3 	sdiv	r3, r2, r3
 8028746:	ee13 2a10 	vmov	r2, s6
 802874a:	9323      	str	r3, [sp, #140]	; 0x8c
 802874c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802874e:	fb92 f3f3 	sdiv	r3, r2, r3
 8028752:	9324      	str	r3, [sp, #144]	; 0x90
 8028754:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8028756:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8028758:	3b01      	subs	r3, #1
 802875a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802875e:	930d      	str	r3, [sp, #52]	; 0x34
 8028760:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8028762:	bf08      	it	eq
 8028764:	4613      	moveq	r3, r2
 8028766:	ee16 6a90 	vmov	r6, s13
 802876a:	9309      	str	r3, [sp, #36]	; 0x24
 802876c:	eeb0 3a67 	vmov.f32	s6, s15
 8028770:	eef0 2a47 	vmov.f32	s5, s14
 8028774:	e6c3      	b.n	80284fe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8028776:	2900      	cmp	r1, #0
 8028778:	f43f af4d 	beq.w	8028616 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 802877c:	eb0a 0003 	add.w	r0, sl, r3
 8028780:	0843      	lsrs	r3, r0, #1
 8028782:	07c0      	lsls	r0, r0, #31
 8028784:	5cfb      	ldrb	r3, [r7, r3]
 8028786:	bf54      	ite	pl
 8028788:	f003 030f 	andpl.w	r3, r3, #15
 802878c:	111b      	asrmi	r3, r3, #4
 802878e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8028792:	b2db      	uxtb	r3, r3
 8028794:	930b      	str	r3, [sp, #44]	; 0x2c
 8028796:	e73e      	b.n	8028616 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8028798:	f8b8 e000 	ldrh.w	lr, [r8]
 802879c:	fa1f fb83 	uxth.w	fp, r3
 80287a0:	ea4f 202e 	mov.w	r0, lr, asr #8
 80287a4:	f3c2 4107 	ubfx	r1, r2, #16, #8
 80287a8:	43db      	mvns	r3, r3
 80287aa:	b2db      	uxtb	r3, r3
 80287ac:	fb11 f10b 	smulbb	r1, r1, fp
 80287b0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80287b4:	fb00 1003 	mla	r0, r0, r3, r1
 80287b8:	fa5f fc8c 	uxtb.w	ip, ip
 80287bc:	ea4f 01ee 	mov.w	r1, lr, asr #3
 80287c0:	b2d2      	uxtb	r2, r2
 80287c2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80287c6:	b280      	uxth	r0, r0
 80287c8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80287cc:	fb1c fc0b 	smulbb	ip, ip, fp
 80287d0:	fa5f fe8e 	uxtb.w	lr, lr
 80287d4:	fb12 fb0b 	smulbb	fp, r2, fp
 80287d8:	fb01 cc03 	mla	ip, r1, r3, ip
 80287dc:	fb0e bb03 	mla	fp, lr, r3, fp
 80287e0:	1c43      	adds	r3, r0, #1
 80287e2:	fa1f fc8c 	uxth.w	ip, ip
 80287e6:	fa1f fb8b 	uxth.w	fp, fp
 80287ea:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80287ee:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 80287f2:	f10c 0101 	add.w	r1, ip, #1
 80287f6:	f10b 0001 	add.w	r0, fp, #1
 80287fa:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 80287fe:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8028802:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8028806:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 802880a:	4318      	orrs	r0, r3
 802880c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8028810:	ea40 000c 	orr.w	r0, r0, ip
 8028814:	f8a8 0000 	strh.w	r0, [r8]
 8028818:	e734      	b.n	8028684 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802881a:	f113 0b01 	adds.w	fp, r3, #1
 802881e:	f53f af31 	bmi.w	8028684 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8028822:	45dc      	cmp	ip, fp
 8028824:	f6ff af2e 	blt.w	8028684 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8028828:	f110 0b01 	adds.w	fp, r0, #1
 802882c:	f53f af2a 	bmi.w	8028684 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8028830:	45de      	cmp	lr, fp
 8028832:	f6ff af27 	blt.w	8028684 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8028836:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8028838:	9302      	str	r3, [sp, #8]
 802883a:	fa0f f38e 	sxth.w	r3, lr
 802883e:	9301      	str	r3, [sp, #4]
 8028840:	fa0f f38c 	sxth.w	r3, ip
 8028844:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8028848:	e9cd 1505 	strd	r1, r5, [sp, #20]
 802884c:	9300      	str	r3, [sp, #0]
 802884e:	463a      	mov	r2, r7
 8028850:	4653      	mov	r3, sl
 8028852:	4641      	mov	r1, r8
 8028854:	9815      	ldr	r0, [sp, #84]	; 0x54
 8028856:	f7ff fd4d 	bl	80282f4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 802885a:	e713      	b.n	8028684 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802885c:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 802885e:	1422      	asrs	r2, r4, #16
 8028860:	1433      	asrs	r3, r6, #16
 8028862:	fb05 2303 	mla	r3, r5, r3, r2
 8028866:	085a      	lsrs	r2, r3, #1
 8028868:	07dd      	lsls	r5, r3, #31
 802886a:	5cba      	ldrb	r2, [r7, r2]
 802886c:	bf54      	ite	pl
 802886e:	f002 020f 	andpl.w	r2, r2, #15
 8028872:	1112      	asrmi	r2, r2, #4
 8028874:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8028878:	f3c4 3103 	ubfx	r1, r4, #12, #4
 802887c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8028880:	b2d2      	uxtb	r2, r2
 8028882:	2900      	cmp	r1, #0
 8028884:	d076      	beq.n	8028974 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8028886:	f103 0e01 	add.w	lr, r3, #1
 802888a:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 802888e:	f01e 0f01 	tst.w	lr, #1
 8028892:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8028896:	bf0c      	ite	eq
 8028898:	f00c 0c0f 	andeq.w	ip, ip, #15
 802889c:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 80288a0:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80288a4:	fa5f f58c 	uxtb.w	r5, ip
 80288a8:	9512      	str	r5, [sp, #72]	; 0x48
 80288aa:	b300      	cbz	r0, 80288ee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 80288ac:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80288ae:	442b      	add	r3, r5
 80288b0:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 80288b4:	07dd      	lsls	r5, r3, #31
 80288b6:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80288ba:	bf54      	ite	pl
 80288bc:	f00c 0c0f 	andpl.w	ip, ip, #15
 80288c0:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80288c4:	3301      	adds	r3, #1
 80288c6:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80288ca:	fa5f f58c 	uxtb.w	r5, ip
 80288ce:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 80288d2:	950c      	str	r5, [sp, #48]	; 0x30
 80288d4:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80288d8:	07dd      	lsls	r5, r3, #31
 80288da:	bf54      	ite	pl
 80288dc:	f00c 0c0f 	andpl.w	ip, ip, #15
 80288e0:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80288e4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80288e8:	fa5f f38c 	uxtb.w	r3, ip
 80288ec:	9313      	str	r3, [sp, #76]	; 0x4c
 80288ee:	b289      	uxth	r1, r1
 80288f0:	b280      	uxth	r0, r0
 80288f2:	fb01 f300 	mul.w	r3, r1, r0
 80288f6:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 80288fa:	0109      	lsls	r1, r1, #4
 80288fc:	b280      	uxth	r0, r0
 80288fe:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 8028902:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8028904:	1ac9      	subs	r1, r1, r3
 8028906:	ebac 0c00 	sub.w	ip, ip, r0
 802890a:	b289      	uxth	r1, r1
 802890c:	4369      	muls	r1, r5
 802890e:	fa1f fc8c 	uxth.w	ip, ip
 8028912:	fb02 120c 	mla	r2, r2, ip, r1
 8028916:	990c      	ldr	r1, [sp, #48]	; 0x30
 8028918:	fb00 2001 	mla	r0, r0, r1, r2
 802891c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 802891e:	fb03 0302 	mla	r3, r3, r2, r0
 8028922:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8028926:	b1d3      	cbz	r3, 802895e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8028928:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802892a:	4353      	muls	r3, r2
 802892c:	1c5a      	adds	r2, r3, #1
 802892e:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8028932:	4a0f      	ldr	r2, [pc, #60]	; (8028970 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8028934:	121b      	asrs	r3, r3, #8
 8028936:	6812      	ldr	r2, [r2, #0]
 8028938:	2bff      	cmp	r3, #255	; 0xff
 802893a:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 802893e:	d12d      	bne.n	802899c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8028940:	0953      	lsrs	r3, r2, #5
 8028942:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8028946:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802894a:	f02c 0c07 	bic.w	ip, ip, #7
 802894e:	ea43 0c0c 	orr.w	ip, r3, ip
 8028952:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8028956:	ea4c 0202 	orr.w	r2, ip, r2
 802895a:	f8a8 2000 	strh.w	r2, [r8]
 802895e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8028960:	441c      	add	r4, r3
 8028962:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8028964:	f108 0802 	add.w	r8, r8, #2
 8028968:	441e      	add	r6, r3
 802896a:	f10b 3bff 	add.w	fp, fp, #4294967295
 802896e:	e6ba      	b.n	80286e6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8028970:	2001384c 	.word	0x2001384c
 8028974:	2800      	cmp	r0, #0
 8028976:	d0ba      	beq.n	80288ee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8028978:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802897a:	442b      	add	r3, r5
 802897c:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8028980:	07db      	lsls	r3, r3, #31
 8028982:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8028986:	bf54      	ite	pl
 8028988:	f00c 0c0f 	andpl.w	ip, ip, #15
 802898c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8028990:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8028994:	fa5f f38c 	uxtb.w	r3, ip
 8028998:	930c      	str	r3, [sp, #48]	; 0x30
 802899a:	e7a8      	b.n	80288ee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 802899c:	f8b8 e000 	ldrh.w	lr, [r8]
 80289a0:	fa1f fa83 	uxth.w	sl, r3
 80289a4:	ea4f 202e 	mov.w	r0, lr, asr #8
 80289a8:	f3c2 4107 	ubfx	r1, r2, #16, #8
 80289ac:	43db      	mvns	r3, r3
 80289ae:	b2db      	uxtb	r3, r3
 80289b0:	fb11 f10a 	smulbb	r1, r1, sl
 80289b4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80289b8:	fb00 1003 	mla	r0, r0, r3, r1
 80289bc:	b2d2      	uxtb	r2, r2
 80289be:	ea4f 01ee 	mov.w	r1, lr, asr #3
 80289c2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80289c6:	fa5f fe8e 	uxtb.w	lr, lr
 80289ca:	fb12 f20a 	smulbb	r2, r2, sl
 80289ce:	fb0e 2203 	mla	r2, lr, r3, r2
 80289d2:	fa5f fc8c 	uxtb.w	ip, ip
 80289d6:	b280      	uxth	r0, r0
 80289d8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80289dc:	b292      	uxth	r2, r2
 80289de:	fb1c fc0a 	smulbb	ip, ip, sl
 80289e2:	fb01 cc03 	mla	ip, r1, r3, ip
 80289e6:	1c43      	adds	r3, r0, #1
 80289e8:	1c51      	adds	r1, r2, #1
 80289ea:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80289ee:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 80289f2:	fa1f fc8c 	uxth.w	ip, ip
 80289f6:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 80289fa:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 80289fe:	4308      	orrs	r0, r1
 8028a00:	f10c 0101 	add.w	r1, ip, #1
 8028a04:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8028a08:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8028a0c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8028a10:	ea40 000c 	orr.w	r0, r0, ip
 8028a14:	f8a8 0000 	strh.w	r0, [r8]
 8028a18:	e7a1      	b.n	802895e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8028a1a:	b017      	add	sp, #92	; 0x5c
 8028a1c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08028a20 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 8028a20:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8028a24:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 8028a28:	2d00      	cmp	r5, #0
 8028a2a:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8028a2e:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8028a32:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8028a36:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8028a3a:	fb05 0e03 	mla	lr, r5, r3, r0
 8028a3e:	f2c0 80b0 	blt.w	8028ba2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8028a42:	45a9      	cmp	r9, r5
 8028a44:	f340 80ad 	ble.w	8028ba2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8028a48:	2800      	cmp	r0, #0
 8028a4a:	f2c0 80a8 	blt.w	8028b9e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8028a4e:	4580      	cmp	r8, r0
 8028a50:	f340 80a5 	ble.w	8028b9e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8028a54:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8028a58:	f01e 0f01 	tst.w	lr, #1
 8028a5c:	5d16      	ldrb	r6, [r2, r4]
 8028a5e:	bf0c      	ite	eq
 8028a60:	f006 060f 	andeq.w	r6, r6, #15
 8028a64:	1136      	asrne	r6, r6, #4
 8028a66:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8028a6a:	b2f6      	uxtb	r6, r6
 8028a6c:	1c44      	adds	r4, r0, #1
 8028a6e:	f100 809b 	bmi.w	8028ba8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8028a72:	45a0      	cmp	r8, r4
 8028a74:	f340 8098 	ble.w	8028ba8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8028a78:	2f00      	cmp	r7, #0
 8028a7a:	f000 8097 	beq.w	8028bac <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 8028a7e:	f10e 0a01 	add.w	sl, lr, #1
 8028a82:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8028a86:	f01a 0f01 	tst.w	sl, #1
 8028a8a:	5d14      	ldrb	r4, [r2, r4]
 8028a8c:	bf0c      	ite	eq
 8028a8e:	f004 040f 	andeq.w	r4, r4, #15
 8028a92:	1124      	asrne	r4, r4, #4
 8028a94:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8028a98:	b2e4      	uxtb	r4, r4
 8028a9a:	3501      	adds	r5, #1
 8028a9c:	f100 808a 	bmi.w	8028bb4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8028aa0:	45a9      	cmp	r9, r5
 8028aa2:	f340 8087 	ble.w	8028bb4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8028aa6:	f1bc 0f00 	cmp.w	ip, #0
 8028aaa:	f000 8086 	beq.w	8028bba <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 8028aae:	2800      	cmp	r0, #0
 8028ab0:	db7e      	blt.n	8028bb0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8028ab2:	4580      	cmp	r8, r0
 8028ab4:	dd7c      	ble.n	8028bb0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8028ab6:	eb03 090e 	add.w	r9, r3, lr
 8028aba:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8028abe:	f019 0f01 	tst.w	r9, #1
 8028ac2:	5d55      	ldrb	r5, [r2, r5]
 8028ac4:	bf0c      	ite	eq
 8028ac6:	f005 050f 	andeq.w	r5, r5, #15
 8028aca:	112d      	asrne	r5, r5, #4
 8028acc:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8028ad0:	b2ed      	uxtb	r5, r5
 8028ad2:	3001      	adds	r0, #1
 8028ad4:	d474      	bmi.n	8028bc0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8028ad6:	4580      	cmp	r8, r0
 8028ad8:	dd72      	ble.n	8028bc0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8028ada:	2f00      	cmp	r7, #0
 8028adc:	d072      	beq.n	8028bc4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 8028ade:	3301      	adds	r3, #1
 8028ae0:	449e      	add	lr, r3
 8028ae2:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8028ae6:	f01e 0f01 	tst.w	lr, #1
 8028aea:	5cd0      	ldrb	r0, [r2, r3]
 8028aec:	bf0c      	ite	eq
 8028aee:	f000 000f 	andeq.w	r0, r0, #15
 8028af2:	1100      	asrne	r0, r0, #4
 8028af4:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8028af8:	b2c3      	uxtb	r3, r0
 8028afa:	b2ba      	uxth	r2, r7
 8028afc:	fa1f fc8c 	uxth.w	ip, ip
 8028b00:	fb02 f00c 	mul.w	r0, r2, ip
 8028b04:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8028b08:	0112      	lsls	r2, r2, #4
 8028b0a:	fa1f fc8c 	uxth.w	ip, ip
 8028b0e:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8028b12:	1a12      	subs	r2, r2, r0
 8028b14:	eba7 070c 	sub.w	r7, r7, ip
 8028b18:	b292      	uxth	r2, r2
 8028b1a:	b2bf      	uxth	r7, r7
 8028b1c:	4362      	muls	r2, r4
 8028b1e:	fb06 2207 	mla	r2, r6, r7, r2
 8028b22:	fb0c 2505 	mla	r5, ip, r5, r2
 8028b26:	fb00 5303 	mla	r3, r0, r3, r5
 8028b2a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8028b2e:	b3a3      	cbz	r3, 8028b9a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 8028b30:	4a25      	ldr	r2, [pc, #148]	; (8028bc8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 8028b32:	880e      	ldrh	r6, [r1, #0]
 8028b34:	6815      	ldr	r5, [r2, #0]
 8028b36:	1234      	asrs	r4, r6, #8
 8028b38:	b29a      	uxth	r2, r3
 8028b3a:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8028b3e:	43db      	mvns	r3, r3
 8028b40:	b2db      	uxtb	r3, r3
 8028b42:	fb10 f002 	smulbb	r0, r0, r2
 8028b46:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8028b4a:	fb04 0403 	mla	r4, r4, r3, r0
 8028b4e:	f3c5 2707 	ubfx	r7, r5, #8, #8
 8028b52:	10f0      	asrs	r0, r6, #3
 8028b54:	b2ed      	uxtb	r5, r5
 8028b56:	00f6      	lsls	r6, r6, #3
 8028b58:	fb17 f702 	smulbb	r7, r7, r2
 8028b5c:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8028b60:	fb15 f202 	smulbb	r2, r5, r2
 8028b64:	b2f6      	uxtb	r6, r6
 8028b66:	b2a4      	uxth	r4, r4
 8028b68:	fb00 7003 	mla	r0, r0, r3, r7
 8028b6c:	fb06 2303 	mla	r3, r6, r3, r2
 8028b70:	b29a      	uxth	r2, r3
 8028b72:	1c63      	adds	r3, r4, #1
 8028b74:	b280      	uxth	r0, r0
 8028b76:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8028b7a:	1c53      	adds	r3, r2, #1
 8028b7c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8028b80:	1c42      	adds	r2, r0, #1
 8028b82:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8028b86:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8028b8a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8028b8e:	0940      	lsrs	r0, r0, #5
 8028b90:	4323      	orrs	r3, r4
 8028b92:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8028b96:	4303      	orrs	r3, r0
 8028b98:	800b      	strh	r3, [r1, #0]
 8028b9a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8028b9e:	2600      	movs	r6, #0
 8028ba0:	e764      	b.n	8028a6c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 8028ba2:	2400      	movs	r4, #0
 8028ba4:	4626      	mov	r6, r4
 8028ba6:	e778      	b.n	8028a9a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8028ba8:	2400      	movs	r4, #0
 8028baa:	e776      	b.n	8028a9a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8028bac:	463c      	mov	r4, r7
 8028bae:	e774      	b.n	8028a9a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8028bb0:	2500      	movs	r5, #0
 8028bb2:	e78e      	b.n	8028ad2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 8028bb4:	2300      	movs	r3, #0
 8028bb6:	461d      	mov	r5, r3
 8028bb8:	e79f      	b.n	8028afa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8028bba:	4663      	mov	r3, ip
 8028bbc:	4665      	mov	r5, ip
 8028bbe:	e79c      	b.n	8028afa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8028bc0:	2300      	movs	r3, #0
 8028bc2:	e79a      	b.n	8028afa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8028bc4:	463b      	mov	r3, r7
 8028bc6:	e798      	b.n	8028afa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8028bc8:	2001384c 	.word	0x2001384c

08028bcc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8028bcc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028bd0:	b093      	sub	sp, #76	; 0x4c
 8028bd2:	461d      	mov	r5, r3
 8028bd4:	920c      	str	r2, [sp, #48]	; 0x30
 8028bd6:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8028bd8:	9107      	str	r1, [sp, #28]
 8028bda:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8028bde:	9011      	str	r0, [sp, #68]	; 0x44
 8028be0:	6850      	ldr	r0, [r2, #4]
 8028be2:	6812      	ldr	r2, [r2, #0]
 8028be4:	fb00 1303 	mla	r3, r0, r3, r1
 8028be8:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8028bec:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8028bee:	689b      	ldr	r3, [r3, #8]
 8028bf0:	3301      	adds	r3, #1
 8028bf2:	f023 0301 	bic.w	r3, r3, #1
 8028bf6:	9306      	str	r3, [sp, #24]
 8028bf8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8028bfa:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8028bfe:	681f      	ldr	r7, [r3, #0]
 8028c00:	9b07      	ldr	r3, [sp, #28]
 8028c02:	2b00      	cmp	r3, #0
 8028c04:	dc03      	bgt.n	8028c0e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8028c06:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8028c08:	2b00      	cmp	r3, #0
 8028c0a:	f340 8267 	ble.w	80290dc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8028c0e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8028c10:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8028c14:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8028c18:	1e48      	subs	r0, r1, #1
 8028c1a:	f102 3cff 	add.w	ip, r2, #4294967295
 8028c1e:	2d00      	cmp	r5, #0
 8028c20:	f340 80b8 	ble.w	8028d94 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8028c24:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8028c28:	ea4f 4326 	mov.w	r3, r6, asr #16
 8028c2c:	d406      	bmi.n	8028c3c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8028c2e:	4586      	cmp	lr, r0
 8028c30:	da04      	bge.n	8028c3c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8028c32:	2b00      	cmp	r3, #0
 8028c34:	db02      	blt.n	8028c3c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8028c36:	4563      	cmp	r3, ip
 8028c38:	f2c0 80ad 	blt.w	8028d96 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 8028c3c:	f11e 0e01 	adds.w	lr, lr, #1
 8028c40:	f100 80a0 	bmi.w	8028d84 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8028c44:	4571      	cmp	r1, lr
 8028c46:	f2c0 809d 	blt.w	8028d84 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8028c4a:	3301      	adds	r3, #1
 8028c4c:	f100 809a 	bmi.w	8028d84 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8028c50:	429a      	cmp	r2, r3
 8028c52:	f2c0 8097 	blt.w	8028d84 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8028c56:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 8028c5a:	9509      	str	r5, [sp, #36]	; 0x24
 8028c5c:	46c8      	mov	r8, r9
 8028c5e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8028c60:	2b00      	cmp	r3, #0
 8028c62:	f340 80b6 	ble.w	8028dd2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 8028c66:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8028c6a:	9308      	str	r3, [sp, #32]
 8028c6c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8028c6e:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8028c72:	1423      	asrs	r3, r4, #16
 8028c74:	ea4f 4026 	mov.w	r0, r6, asr #16
 8028c78:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8028c7c:	f100 813e 	bmi.w	8028efc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8028c80:	f10c 3bff 	add.w	fp, ip, #4294967295
 8028c84:	455b      	cmp	r3, fp
 8028c86:	f280 8139 	bge.w	8028efc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8028c8a:	2800      	cmp	r0, #0
 8028c8c:	f2c0 8136 	blt.w	8028efc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8028c90:	f10e 3bff 	add.w	fp, lr, #4294967295
 8028c94:	4558      	cmp	r0, fp
 8028c96:	f280 8131 	bge.w	8028efc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8028c9a:	9a06      	ldr	r2, [sp, #24]
 8028c9c:	fb00 3302 	mla	r3, r0, r2, r3
 8028ca0:	0858      	lsrs	r0, r3, #1
 8028ca2:	07da      	lsls	r2, r3, #31
 8028ca4:	f817 c000 	ldrb.w	ip, [r7, r0]
 8028ca8:	9a08      	ldr	r2, [sp, #32]
 8028caa:	bf54      	ite	pl
 8028cac:	f00c 0c0f 	andpl.w	ip, ip, #15
 8028cb0:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8028cb4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8028cb8:	fa5f fc8c 	uxtb.w	ip, ip
 8028cbc:	2a00      	cmp	r2, #0
 8028cbe:	f000 80cb 	beq.w	8028e58 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8028cc2:	1c58      	adds	r0, r3, #1
 8028cc4:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8028cc8:	07c0      	lsls	r0, r0, #31
 8028cca:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8028cce:	bf54      	ite	pl
 8028cd0:	f00e 0e0f 	andpl.w	lr, lr, #15
 8028cd4:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8028cd8:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8028cdc:	fa5f fe8e 	uxtb.w	lr, lr
 8028ce0:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 8028ce4:	b1b9      	cbz	r1, 8028d16 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8028ce6:	4453      	add	r3, sl
 8028ce8:	0858      	lsrs	r0, r3, #1
 8028cea:	07da      	lsls	r2, r3, #31
 8028cec:	5c38      	ldrb	r0, [r7, r0]
 8028cee:	bf54      	ite	pl
 8028cf0:	f000 000f 	andpl.w	r0, r0, #15
 8028cf4:	1100      	asrmi	r0, r0, #4
 8028cf6:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8028cfa:	b2c0      	uxtb	r0, r0
 8028cfc:	900a      	str	r0, [sp, #40]	; 0x28
 8028cfe:	1c58      	adds	r0, r3, #1
 8028d00:	0843      	lsrs	r3, r0, #1
 8028d02:	07c2      	lsls	r2, r0, #31
 8028d04:	5cfb      	ldrb	r3, [r7, r3]
 8028d06:	bf54      	ite	pl
 8028d08:	f003 030f 	andpl.w	r3, r3, #15
 8028d0c:	111b      	asrmi	r3, r3, #4
 8028d0e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8028d12:	b2db      	uxtb	r3, r3
 8028d14:	930e      	str	r3, [sp, #56]	; 0x38
 8028d16:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8028d1a:	b289      	uxth	r1, r1
 8028d1c:	fb02 f301 	mul.w	r3, r2, r1
 8028d20:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8028d24:	0112      	lsls	r2, r2, #4
 8028d26:	b289      	uxth	r1, r1
 8028d28:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8028d2c:	1a40      	subs	r0, r0, r1
 8028d2e:	fa1f fe80 	uxth.w	lr, r0
 8028d32:	1ad2      	subs	r2, r2, r3
 8028d34:	980d      	ldr	r0, [sp, #52]	; 0x34
 8028d36:	b292      	uxth	r2, r2
 8028d38:	4342      	muls	r2, r0
 8028d3a:	fb0c 2c0e 	mla	ip, ip, lr, r2
 8028d3e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8028d40:	fb01 c102 	mla	r1, r1, r2, ip
 8028d44:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8028d46:	fb03 1302 	mla	r3, r3, r2, r1
 8028d4a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8028d4e:	2bff      	cmp	r3, #255	; 0xff
 8028d50:	f040 8093 	bne.w	8028e7a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8028d54:	4bbe      	ldr	r3, [pc, #760]	; (8029050 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8028d56:	681a      	ldr	r2, [r3, #0]
 8028d58:	4bbe      	ldr	r3, [pc, #760]	; (8029054 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8028d5a:	0951      	lsrs	r1, r2, #5
 8028d5c:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8028d60:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8028d64:	430b      	orrs	r3, r1
 8028d66:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8028d6a:	4313      	orrs	r3, r2
 8028d6c:	f8a8 3000 	strh.w	r3, [r8]
 8028d70:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8028d72:	441c      	add	r4, r3
 8028d74:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8028d76:	441e      	add	r6, r3
 8028d78:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8028d7a:	3b01      	subs	r3, #1
 8028d7c:	f108 0802 	add.w	r8, r8, #2
 8028d80:	9309      	str	r3, [sp, #36]	; 0x24
 8028d82:	e76c      	b.n	8028c5e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8028d84:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8028d86:	441c      	add	r4, r3
 8028d88:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8028d8a:	3d01      	subs	r5, #1
 8028d8c:	441e      	add	r6, r3
 8028d8e:	f109 0902 	add.w	r9, r9, #2
 8028d92:	e744      	b.n	8028c1e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8028d94:	d021      	beq.n	8028dda <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8028d96:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8028d98:	1e6b      	subs	r3, r5, #1
 8028d9a:	fb00 4003 	mla	r0, r0, r3, r4
 8028d9e:	1400      	asrs	r0, r0, #16
 8028da0:	f53f af59 	bmi.w	8028c56 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8028da4:	3901      	subs	r1, #1
 8028da6:	4288      	cmp	r0, r1
 8028da8:	f6bf af55 	bge.w	8028c56 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8028dac:	9920      	ldr	r1, [sp, #128]	; 0x80
 8028dae:	fb01 6303 	mla	r3, r1, r3, r6
 8028db2:	141b      	asrs	r3, r3, #16
 8028db4:	f53f af4f 	bmi.w	8028c56 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8028db8:	3a01      	subs	r2, #1
 8028dba:	4293      	cmp	r3, r2
 8028dbc:	f6bf af4b 	bge.w	8028c56 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8028dc0:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8028dc4:	9308      	str	r3, [sp, #32]
 8028dc6:	46a8      	mov	r8, r5
 8028dc8:	46ce      	mov	lr, r9
 8028dca:	f1b8 0f00 	cmp.w	r8, #0
 8028dce:	f300 80b5 	bgt.w	8028f3c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8028dd2:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8028dd6:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8028dda:	9b07      	ldr	r3, [sp, #28]
 8028ddc:	2b00      	cmp	r3, #0
 8028dde:	f340 817d 	ble.w	80290dc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8028de2:	ee30 0a04 	vadd.f32	s0, s0, s8
 8028de6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8028dea:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8028dee:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8028df0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8028df4:	ee31 1a05 	vadd.f32	s2, s2, s10
 8028df8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8028dfc:	eef0 6a62 	vmov.f32	s13, s5
 8028e00:	ee61 7a27 	vmul.f32	s15, s2, s15
 8028e04:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8028e08:	ee77 2a62 	vsub.f32	s5, s14, s5
 8028e0c:	ee16 4a90 	vmov	r4, s13
 8028e10:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8028e14:	eef0 6a43 	vmov.f32	s13, s6
 8028e18:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8028e1c:	ee12 2a90 	vmov	r2, s5
 8028e20:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8028e24:	fb92 f3f3 	sdiv	r3, r2, r3
 8028e28:	ee13 2a10 	vmov	r2, s6
 8028e2c:	931f      	str	r3, [sp, #124]	; 0x7c
 8028e2e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8028e30:	fb92 f3f3 	sdiv	r3, r2, r3
 8028e34:	9320      	str	r3, [sp, #128]	; 0x80
 8028e36:	9b07      	ldr	r3, [sp, #28]
 8028e38:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8028e3a:	3b01      	subs	r3, #1
 8028e3c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8028e40:	9307      	str	r3, [sp, #28]
 8028e42:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8028e44:	ee16 6a90 	vmov	r6, s13
 8028e48:	bf14      	ite	ne
 8028e4a:	461d      	movne	r5, r3
 8028e4c:	4615      	moveq	r5, r2
 8028e4e:	eeb0 3a67 	vmov.f32	s6, s15
 8028e52:	eef0 2a47 	vmov.f32	s5, s14
 8028e56:	e6d3      	b.n	8028c00 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8028e58:	2900      	cmp	r1, #0
 8028e5a:	f43f af5c 	beq.w	8028d16 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8028e5e:	eb0a 0003 	add.w	r0, sl, r3
 8028e62:	0843      	lsrs	r3, r0, #1
 8028e64:	07c0      	lsls	r0, r0, #31
 8028e66:	5cfb      	ldrb	r3, [r7, r3]
 8028e68:	bf54      	ite	pl
 8028e6a:	f003 030f 	andpl.w	r3, r3, #15
 8028e6e:	111b      	asrmi	r3, r3, #4
 8028e70:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8028e74:	b2db      	uxtb	r3, r3
 8028e76:	930a      	str	r3, [sp, #40]	; 0x28
 8028e78:	e74d      	b.n	8028d16 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8028e7a:	2b00      	cmp	r3, #0
 8028e7c:	f43f af78 	beq.w	8028d70 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8028e80:	4a73      	ldr	r2, [pc, #460]	; (8029050 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8028e82:	f8b8 c000 	ldrh.w	ip, [r8]
 8028e86:	6810      	ldr	r0, [r2, #0]
 8028e88:	fa1f fe83 	uxth.w	lr, r3
 8028e8c:	ea4f 212c 	mov.w	r1, ip, asr #8
 8028e90:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8028e94:	43db      	mvns	r3, r3
 8028e96:	b2db      	uxtb	r3, r3
 8028e98:	fb12 f20e 	smulbb	r2, r2, lr
 8028e9c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8028ea0:	fb01 2103 	mla	r1, r1, r3, r2
 8028ea4:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8028ea8:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8028eac:	b2c0      	uxtb	r0, r0
 8028eae:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8028eb2:	fb1b fb0e 	smulbb	fp, fp, lr
 8028eb6:	b289      	uxth	r1, r1
 8028eb8:	fb10 fe0e 	smulbb	lr, r0, lr
 8028ebc:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8028ec0:	fa5f fc8c 	uxtb.w	ip, ip
 8028ec4:	fb02 b203 	mla	r2, r2, r3, fp
 8028ec8:	1c48      	adds	r0, r1, #1
 8028eca:	fb0c e303 	mla	r3, ip, r3, lr
 8028ece:	b292      	uxth	r2, r2
 8028ed0:	b29b      	uxth	r3, r3
 8028ed2:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 8028ed6:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 8028eda:	f102 0b01 	add.w	fp, r2, #1
 8028ede:	1c59      	adds	r1, r3, #1
 8028ee0:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8028ee4:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8028ee8:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8028eec:	0952      	lsrs	r2, r2, #5
 8028eee:	4301      	orrs	r1, r0
 8028ef0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8028ef4:	4311      	orrs	r1, r2
 8028ef6:	f8a8 1000 	strh.w	r1, [r8]
 8028efa:	e739      	b.n	8028d70 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8028efc:	f113 0b01 	adds.w	fp, r3, #1
 8028f00:	f53f af36 	bmi.w	8028d70 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8028f04:	45dc      	cmp	ip, fp
 8028f06:	f6ff af33 	blt.w	8028d70 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8028f0a:	f110 0b01 	adds.w	fp, r0, #1
 8028f0e:	f53f af2f 	bmi.w	8028d70 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8028f12:	45de      	cmp	lr, fp
 8028f14:	f6ff af2c 	blt.w	8028d70 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8028f18:	9a08      	ldr	r2, [sp, #32]
 8028f1a:	9302      	str	r3, [sp, #8]
 8028f1c:	fa0f f38e 	sxth.w	r3, lr
 8028f20:	9301      	str	r3, [sp, #4]
 8028f22:	fa0f f38c 	sxth.w	r3, ip
 8028f26:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8028f2a:	9105      	str	r1, [sp, #20]
 8028f2c:	9300      	str	r3, [sp, #0]
 8028f2e:	463a      	mov	r2, r7
 8028f30:	4653      	mov	r3, sl
 8028f32:	4641      	mov	r1, r8
 8028f34:	9811      	ldr	r0, [sp, #68]	; 0x44
 8028f36:	f7ff fd73 	bl	8028a20 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 8028f3a:	e719      	b.n	8028d70 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8028f3c:	9906      	ldr	r1, [sp, #24]
 8028f3e:	1422      	asrs	r2, r4, #16
 8028f40:	1433      	asrs	r3, r6, #16
 8028f42:	fb01 2303 	mla	r3, r1, r3, r2
 8028f46:	085a      	lsrs	r2, r3, #1
 8028f48:	07d9      	lsls	r1, r3, #31
 8028f4a:	5cba      	ldrb	r2, [r7, r2]
 8028f4c:	bf54      	ite	pl
 8028f4e:	f002 020f 	andpl.w	r2, r2, #15
 8028f52:	1112      	asrmi	r2, r2, #4
 8028f54:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8028f58:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8028f5c:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8028f60:	b2d2      	uxtb	r2, r2
 8028f62:	2800      	cmp	r0, #0
 8028f64:	d062      	beq.n	802902c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 8028f66:	f103 0a01 	add.w	sl, r3, #1
 8028f6a:	ea4f 015a 	mov.w	r1, sl, lsr #1
 8028f6e:	f01a 0f01 	tst.w	sl, #1
 8028f72:	5c79      	ldrb	r1, [r7, r1]
 8028f74:	bf0c      	ite	eq
 8028f76:	f001 010f 	andeq.w	r1, r1, #15
 8028f7a:	1109      	asrne	r1, r1, #4
 8028f7c:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8028f80:	b2c9      	uxtb	r1, r1
 8028f82:	910f      	str	r1, [sp, #60]	; 0x3c
 8028f84:	f1bc 0f00 	cmp.w	ip, #0
 8028f88:	d019      	beq.n	8028fbe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8028f8a:	9908      	ldr	r1, [sp, #32]
 8028f8c:	440b      	add	r3, r1
 8028f8e:	0859      	lsrs	r1, r3, #1
 8028f90:	f013 0f01 	tst.w	r3, #1
 8028f94:	5c79      	ldrb	r1, [r7, r1]
 8028f96:	bf0c      	ite	eq
 8028f98:	f001 010f 	andeq.w	r1, r1, #15
 8028f9c:	1109      	asrne	r1, r1, #4
 8028f9e:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8028fa2:	b2c9      	uxtb	r1, r1
 8028fa4:	3301      	adds	r3, #1
 8028fa6:	910b      	str	r1, [sp, #44]	; 0x2c
 8028fa8:	0859      	lsrs	r1, r3, #1
 8028faa:	07db      	lsls	r3, r3, #31
 8028fac:	5c79      	ldrb	r1, [r7, r1]
 8028fae:	bf54      	ite	pl
 8028fb0:	f001 010f 	andpl.w	r1, r1, #15
 8028fb4:	1109      	asrmi	r1, r1, #4
 8028fb6:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8028fba:	b2c9      	uxtb	r1, r1
 8028fbc:	9110      	str	r1, [sp, #64]	; 0x40
 8028fbe:	b280      	uxth	r0, r0
 8028fc0:	fa1f fc8c 	uxth.w	ip, ip
 8028fc4:	fb00 f30c 	mul.w	r3, r0, ip
 8028fc8:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 8028fcc:	0100      	lsls	r0, r0, #4
 8028fce:	fa1f fc8c 	uxth.w	ip, ip
 8028fd2:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 8028fd6:	eba1 010c 	sub.w	r1, r1, ip
 8028fda:	fa1f fa81 	uxth.w	sl, r1
 8028fde:	1ac0      	subs	r0, r0, r3
 8028fe0:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8028fe2:	b280      	uxth	r0, r0
 8028fe4:	4348      	muls	r0, r1
 8028fe6:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8028fe8:	fb02 020a 	mla	r2, r2, sl, r0
 8028fec:	fb0c 2c01 	mla	ip, ip, r1, r2
 8028ff0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8028ff2:	fb03 c302 	mla	r3, r3, r2, ip
 8028ff6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8028ffa:	2bff      	cmp	r3, #255	; 0xff
 8028ffc:	d12c      	bne.n	8029058 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 8028ffe:	4b14      	ldr	r3, [pc, #80]	; (8029050 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8029000:	681a      	ldr	r2, [r3, #0]
 8029002:	4b14      	ldr	r3, [pc, #80]	; (8029054 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8029004:	0951      	lsrs	r1, r2, #5
 8029006:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 802900a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802900e:	430b      	orrs	r3, r1
 8029010:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8029014:	4313      	orrs	r3, r2
 8029016:	f8ae 3000 	strh.w	r3, [lr]
 802901a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802901c:	441c      	add	r4, r3
 802901e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8029020:	f10e 0e02 	add.w	lr, lr, #2
 8029024:	441e      	add	r6, r3
 8029026:	f108 38ff 	add.w	r8, r8, #4294967295
 802902a:	e6ce      	b.n	8028dca <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 802902c:	f1bc 0f00 	cmp.w	ip, #0
 8029030:	d0c5      	beq.n	8028fbe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8029032:	9908      	ldr	r1, [sp, #32]
 8029034:	440b      	add	r3, r1
 8029036:	0859      	lsrs	r1, r3, #1
 8029038:	07db      	lsls	r3, r3, #31
 802903a:	5c79      	ldrb	r1, [r7, r1]
 802903c:	bf54      	ite	pl
 802903e:	f001 010f 	andpl.w	r1, r1, #15
 8029042:	1109      	asrmi	r1, r1, #4
 8029044:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8029048:	b2c9      	uxtb	r1, r1
 802904a:	910b      	str	r1, [sp, #44]	; 0x2c
 802904c:	e7b7      	b.n	8028fbe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802904e:	bf00      	nop
 8029050:	2001384c 	.word	0x2001384c
 8029054:	fffff800 	.word	0xfffff800
 8029058:	2b00      	cmp	r3, #0
 802905a:	d0de      	beq.n	802901a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 802905c:	4a21      	ldr	r2, [pc, #132]	; (80290e4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 802905e:	f8be c000 	ldrh.w	ip, [lr]
 8029062:	6810      	ldr	r0, [r2, #0]
 8029064:	fa1f fa83 	uxth.w	sl, r3
 8029068:	ea4f 212c 	mov.w	r1, ip, asr #8
 802906c:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8029070:	43db      	mvns	r3, r3
 8029072:	b2db      	uxtb	r3, r3
 8029074:	fb12 f20a 	smulbb	r2, r2, sl
 8029078:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 802907c:	fb01 2103 	mla	r1, r1, r3, r2
 8029080:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8029084:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8029088:	b2c0      	uxtb	r0, r0
 802908a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 802908e:	fa5f fc8c 	uxtb.w	ip, ip
 8029092:	fb10 f00a 	smulbb	r0, r0, sl
 8029096:	fb0c 0003 	mla	r0, ip, r3, r0
 802909a:	b289      	uxth	r1, r1
 802909c:	fb1b fb0a 	smulbb	fp, fp, sl
 80290a0:	b280      	uxth	r0, r0
 80290a2:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80290a6:	fb02 b203 	mla	r2, r2, r3, fp
 80290aa:	1c4b      	adds	r3, r1, #1
 80290ac:	f100 0b01 	add.w	fp, r0, #1
 80290b0:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80290b4:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 80290b8:	b292      	uxth	r2, r2
 80290ba:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 80290be:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 80290c2:	ea4b 0101 	orr.w	r1, fp, r1
 80290c6:	f102 0b01 	add.w	fp, r2, #1
 80290ca:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 80290ce:	0952      	lsrs	r2, r2, #5
 80290d0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80290d4:	4311      	orrs	r1, r2
 80290d6:	f8ae 1000 	strh.w	r1, [lr]
 80290da:	e79e      	b.n	802901a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 80290dc:	b013      	add	sp, #76	; 0x4c
 80290de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80290e2:	bf00      	nop
 80290e4:	2001384c 	.word	0x2001384c

080290e8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 80290e8:	b570      	push	{r4, r5, r6, lr}
 80290ea:	1208      	asrs	r0, r1, #8
 80290ec:	b29e      	uxth	r6, r3
 80290ee:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 80290f2:	1213      	asrs	r3, r2, #8
 80290f4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80290f8:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80290fc:	fb13 f305 	smulbb	r3, r3, r5
 8029100:	fb10 f006 	smulbb	r0, r0, r6
 8029104:	4418      	add	r0, r3
 8029106:	10cc      	asrs	r4, r1, #3
 8029108:	10d3      	asrs	r3, r2, #3
 802910a:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 802910e:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8029112:	fb13 f305 	smulbb	r3, r3, r5
 8029116:	fb14 f406 	smulbb	r4, r4, r6
 802911a:	00c9      	lsls	r1, r1, #3
 802911c:	00d2      	lsls	r2, r2, #3
 802911e:	441c      	add	r4, r3
 8029120:	b2d2      	uxtb	r2, r2
 8029122:	b2cb      	uxtb	r3, r1
 8029124:	fb12 f205 	smulbb	r2, r2, r5
 8029128:	b280      	uxth	r0, r0
 802912a:	fb13 f306 	smulbb	r3, r3, r6
 802912e:	4413      	add	r3, r2
 8029130:	1c42      	adds	r2, r0, #1
 8029132:	b29b      	uxth	r3, r3
 8029134:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8029138:	f400 4278 	and.w	r2, r0, #63488	; 0xf800
 802913c:	1c58      	adds	r0, r3, #1
 802913e:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8029142:	b2a4      	uxth	r4, r4
 8029144:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8029148:	4310      	orrs	r0, r2
 802914a:	1c62      	adds	r2, r4, #1
 802914c:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8029150:	0964      	lsrs	r4, r4, #5
 8029152:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8029156:	4320      	orrs	r0, r4
 8029158:	bd70      	pop	{r4, r5, r6, pc}
	...

0802915c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 802915c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029160:	b08f      	sub	sp, #60	; 0x3c
 8029162:	461c      	mov	r4, r3
 8029164:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 8029168:	9004      	str	r0, [sp, #16]
 802916a:	460d      	mov	r5, r1
 802916c:	4616      	mov	r6, r2
 802916e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8029170:	2f00      	cmp	r7, #0
 8029172:	f000 80f6 	beq.w	8029362 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 8029176:	6820      	ldr	r0, [r4, #0]
 8029178:	6861      	ldr	r1, [r4, #4]
 802917a:	aa0a      	add	r2, sp, #40	; 0x28
 802917c:	c203      	stmia	r2!, {r0, r1}
 802917e:	6818      	ldr	r0, [r3, #0]
 8029180:	6859      	ldr	r1, [r3, #4]
 8029182:	aa0c      	add	r2, sp, #48	; 0x30
 8029184:	c203      	stmia	r2!, {r0, r1}
 8029186:	a80a      	add	r0, sp, #40	; 0x28
 8029188:	f7ef fa5e 	bl	8018648 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802918c:	4621      	mov	r1, r4
 802918e:	a80c      	add	r0, sp, #48	; 0x30
 8029190:	f7ef fa9e 	bl	80186d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8029194:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8029198:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 802919c:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 80291a0:	f002 0301 	and.w	r3, r2, #1
 80291a4:	9306      	str	r3, [sp, #24]
 80291a6:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80291aa:	f003 0101 	and.w	r1, r3, #1
 80291ae:	9105      	str	r1, [sp, #20]
 80291b0:	9805      	ldr	r0, [sp, #20]
 80291b2:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 80291b6:	4403      	add	r3, r0
 80291b8:	fb01 2303 	mla	r3, r1, r3, r2
 80291bc:	f04f 0802 	mov.w	r8, #2
 80291c0:	fb93 f3f8 	sdiv	r3, r3, r8
 80291c4:	441d      	add	r5, r3
 80291c6:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80291ca:	441a      	add	r2, r3
 80291cc:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 80291d0:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 80291d4:	4419      	add	r1, r3
 80291d6:	4b64      	ldr	r3, [pc, #400]	; (8029368 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 80291d8:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 80291dc:	6818      	ldr	r0, [r3, #0]
 80291de:	6803      	ldr	r3, [r0, #0]
 80291e0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80291e2:	4798      	blx	r3
 80291e4:	4a61      	ldr	r2, [pc, #388]	; (802936c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 80291e6:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 80291ea:	8813      	ldrh	r3, [r2, #0]
 80291ec:	f9bd a030 	ldrsh.w	sl, [sp, #48]	; 0x30
 80291f0:	2fff      	cmp	r7, #255	; 0xff
 80291f2:	fb03 a404 	mla	r4, r3, r4, sl
 80291f6:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80291fa:	f106 0604 	add.w	r6, r6, #4
 80291fe:	4611      	mov	r1, r2
 8029200:	fb03 fb0b 	mul.w	fp, r3, fp
 8029204:	d06b      	beq.n	80292de <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 8029206:	f1c7 03ff 	rsb	r3, r7, #255	; 0xff
 802920a:	9303      	str	r3, [sp, #12]
 802920c:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 8029210:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8029214:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 8029218:	9b07      	ldr	r3, [sp, #28]
 802921a:	42a3      	cmp	r3, r4
 802921c:	f240 809c 	bls.w	8029358 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8029220:	9b06      	ldr	r3, [sp, #24]
 8029222:	2b00      	cmp	r3, #0
 8029224:	d039      	beq.n	802929a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 8029226:	782b      	ldrb	r3, [r5, #0]
 8029228:	8822      	ldrh	r2, [r4, #0]
 802922a:	9804      	ldr	r0, [sp, #16]
 802922c:	f003 030f 	and.w	r3, r3, #15
 8029230:	f105 0801 	add.w	r8, r5, #1
 8029234:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8029238:	9b03      	ldr	r3, [sp, #12]
 802923a:	9300      	str	r3, [sp, #0]
 802923c:	463b      	mov	r3, r7
 802923e:	f7ff ff53 	bl	80290e8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8029242:	f824 0b02 	strh.w	r0, [r4], #2
 8029246:	f109 3bff 	add.w	fp, r9, #4294967295
 802924a:	f1bb 0f01 	cmp.w	fp, #1
 802924e:	46a2      	mov	sl, r4
 8029250:	f104 0404 	add.w	r4, r4, #4
 8029254:	dd24      	ble.n	80292a0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 8029256:	f898 3000 	ldrb.w	r3, [r8]
 802925a:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 802925e:	9804      	ldr	r0, [sp, #16]
 8029260:	091b      	lsrs	r3, r3, #4
 8029262:	f1ab 0b02 	sub.w	fp, fp, #2
 8029266:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802926a:	9b03      	ldr	r3, [sp, #12]
 802926c:	9300      	str	r3, [sp, #0]
 802926e:	463b      	mov	r3, r7
 8029270:	f7ff ff3a 	bl	80290e8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8029274:	f824 0c04 	strh.w	r0, [r4, #-4]
 8029278:	f818 3b01 	ldrb.w	r3, [r8], #1
 802927c:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8029280:	9804      	ldr	r0, [sp, #16]
 8029282:	f003 030f 	and.w	r3, r3, #15
 8029286:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802928a:	9b03      	ldr	r3, [sp, #12]
 802928c:	9300      	str	r3, [sp, #0]
 802928e:	463b      	mov	r3, r7
 8029290:	f7ff ff2a 	bl	80290e8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8029294:	f824 0c02 	strh.w	r0, [r4, #-2]
 8029298:	e7d7      	b.n	802924a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 802929a:	46a8      	mov	r8, r5
 802929c:	46cb      	mov	fp, r9
 802929e:	e7d4      	b.n	802924a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 80292a0:	d10e      	bne.n	80292c0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 80292a2:	f898 3000 	ldrb.w	r3, [r8]
 80292a6:	f8ba 2000 	ldrh.w	r2, [sl]
 80292aa:	9804      	ldr	r0, [sp, #16]
 80292ac:	091b      	lsrs	r3, r3, #4
 80292ae:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80292b2:	9b03      	ldr	r3, [sp, #12]
 80292b4:	9300      	str	r3, [sp, #0]
 80292b6:	463b      	mov	r3, r7
 80292b8:	f7ff ff16 	bl	80290e8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80292bc:	f82a 0b02 	strh.w	r0, [sl], #2
 80292c0:	9b08      	ldr	r3, [sp, #32]
 80292c2:	9a05      	ldr	r2, [sp, #20]
 80292c4:	881c      	ldrh	r4, [r3, #0]
 80292c6:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80292ca:	eba4 0409 	sub.w	r4, r4, r9
 80292ce:	4413      	add	r3, r2
 80292d0:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 80292d4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80292d6:	fb93 f3f2 	sdiv	r3, r3, r2
 80292da:	441d      	add	r5, r3
 80292dc:	e79c      	b.n	8029218 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 80292de:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 80292e2:	45a3      	cmp	fp, r4
 80292e4:	d938      	bls.n	8029358 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 80292e6:	9b06      	ldr	r3, [sp, #24]
 80292e8:	b1f3      	cbz	r3, 8029328 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 80292ea:	782b      	ldrb	r3, [r5, #0]
 80292ec:	f003 030f 	and.w	r3, r3, #15
 80292f0:	1c6a      	adds	r2, r5, #1
 80292f2:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80292f6:	8023      	strh	r3, [r4, #0]
 80292f8:	f109 30ff 	add.w	r0, r9, #4294967295
 80292fc:	3402      	adds	r4, #2
 80292fe:	2801      	cmp	r0, #1
 8029300:	4623      	mov	r3, r4
 8029302:	f104 0404 	add.w	r4, r4, #4
 8029306:	dd12      	ble.n	802932e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 8029308:	7813      	ldrb	r3, [r2, #0]
 802930a:	091b      	lsrs	r3, r3, #4
 802930c:	3802      	subs	r0, #2
 802930e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8029312:	f824 3c04 	strh.w	r3, [r4, #-4]
 8029316:	f812 3b01 	ldrb.w	r3, [r2], #1
 802931a:	f003 030f 	and.w	r3, r3, #15
 802931e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8029322:	f824 3c02 	strh.w	r3, [r4, #-2]
 8029326:	e7ea      	b.n	80292fe <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8029328:	462a      	mov	r2, r5
 802932a:	4648      	mov	r0, r9
 802932c:	e7e7      	b.n	80292fe <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 802932e:	d106      	bne.n	802933e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 8029330:	7812      	ldrb	r2, [r2, #0]
 8029332:	0912      	lsrs	r2, r2, #4
 8029334:	3302      	adds	r3, #2
 8029336:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 802933a:	f823 2c02 	strh.w	r2, [r3, #-2]
 802933e:	880c      	ldrh	r4, [r1, #0]
 8029340:	9a05      	ldr	r2, [sp, #20]
 8029342:	eba4 0409 	sub.w	r4, r4, r9
 8029346:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 802934a:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 802934e:	4413      	add	r3, r2
 8029350:	fb93 f3f8 	sdiv	r3, r3, r8
 8029354:	441d      	add	r5, r3
 8029356:	e7c4      	b.n	80292e2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 8029358:	4b03      	ldr	r3, [pc, #12]	; (8029368 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 802935a:	6818      	ldr	r0, [r3, #0]
 802935c:	6803      	ldr	r3, [r0, #0]
 802935e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8029360:	4798      	blx	r3
 8029362:	b00f      	add	sp, #60	; 0x3c
 8029364:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8029368:	2001383c 	.word	0x2001383c
 802936c:	20013836 	.word	0x20013836

08029370 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 8029370:	b5f0      	push	{r4, r5, r6, r7, lr}
 8029372:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8029376:	2dff      	cmp	r5, #255	; 0xff
 8029378:	ea4f 2711 	mov.w	r7, r1, lsr #8
 802937c:	d10c      	bne.n	8029398 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 802937e:	2bff      	cmp	r3, #255	; 0xff
 8029380:	d10a      	bne.n	8029398 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 8029382:	4b25      	ldr	r3, [pc, #148]	; (8029418 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 8029384:	0948      	lsrs	r0, r1, #5
 8029386:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802938a:	403b      	ands	r3, r7
 802938c:	4318      	orrs	r0, r3
 802938e:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8029392:	4308      	orrs	r0, r1
 8029394:	b280      	uxth	r0, r0
 8029396:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8029398:	fb15 f503 	smulbb	r5, r5, r3
 802939c:	b2ab      	uxth	r3, r5
 802939e:	1c5d      	adds	r5, r3, #1
 80293a0:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 80293a4:	1214      	asrs	r4, r2, #8
 80293a6:	f3c5 2507 	ubfx	r5, r5, #8, #8
 80293aa:	fa1f fc85 	uxth.w	ip, r5
 80293ae:	10d6      	asrs	r6, r2, #3
 80293b0:	00d0      	lsls	r0, r2, #3
 80293b2:	43ed      	mvns	r5, r5
 80293b4:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80293b8:	f3c1 4207 	ubfx	r2, r1, #16, #8
 80293bc:	b2eb      	uxtb	r3, r5
 80293be:	b2c0      	uxtb	r0, r0
 80293c0:	fb12 f20c 	smulbb	r2, r2, ip
 80293c4:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80293c8:	fb04 2403 	mla	r4, r4, r3, r2
 80293cc:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 80293d0:	b2c8      	uxtb	r0, r1
 80293d2:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80293d6:	b2fd      	uxtb	r5, r7
 80293d8:	fb10 f00c 	smulbb	r0, r0, ip
 80293dc:	b2a4      	uxth	r4, r4
 80293de:	fb02 0003 	mla	r0, r2, r3, r0
 80293e2:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 80293e6:	fb15 f50c 	smulbb	r5, r5, ip
 80293ea:	fb06 5503 	mla	r5, r6, r3, r5
 80293ee:	b283      	uxth	r3, r0
 80293f0:	1c60      	adds	r0, r4, #1
 80293f2:	b2ad      	uxth	r5, r5
 80293f4:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 80293f8:	1c58      	adds	r0, r3, #1
 80293fa:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80293fe:	1c6b      	adds	r3, r5, #1
 8029400:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8029404:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8029408:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 802940c:	096d      	lsrs	r5, r5, #5
 802940e:	4320      	orrs	r0, r4
 8029410:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8029414:	4328      	orrs	r0, r5
 8029416:	e7be      	b.n	8029396 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 8029418:	00fff800 	.word	0x00fff800

0802941c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 802941c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029420:	461c      	mov	r4, r3
 8029422:	b08d      	sub	sp, #52	; 0x34
 8029424:	460d      	mov	r5, r1
 8029426:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8029428:	6861      	ldr	r1, [r4, #4]
 802942a:	f89d 905c 	ldrb.w	r9, [sp, #92]	; 0x5c
 802942e:	4680      	mov	r8, r0
 8029430:	6820      	ldr	r0, [r4, #0]
 8029432:	4616      	mov	r6, r2
 8029434:	aa08      	add	r2, sp, #32
 8029436:	c203      	stmia	r2!, {r0, r1}
 8029438:	6818      	ldr	r0, [r3, #0]
 802943a:	6859      	ldr	r1, [r3, #4]
 802943c:	aa0a      	add	r2, sp, #40	; 0x28
 802943e:	c203      	stmia	r2!, {r0, r1}
 8029440:	a808      	add	r0, sp, #32
 8029442:	f7ef f901 	bl	8018648 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8029446:	4621      	mov	r1, r4
 8029448:	a80a      	add	r0, sp, #40	; 0x28
 802944a:	f7ef f941 	bl	80186d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802944e:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8029452:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
 8029456:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 802945a:	f002 0301 	and.w	r3, r2, #1
 802945e:	9303      	str	r3, [sp, #12]
 8029460:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8029464:	f003 0101 	and.w	r1, r3, #1
 8029468:	9102      	str	r1, [sp, #8]
 802946a:	9802      	ldr	r0, [sp, #8]
 802946c:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8029470:	4403      	add	r3, r0
 8029472:	fb01 2303 	mla	r3, r1, r3, r2
 8029476:	f04f 0a02 	mov.w	sl, #2
 802947a:	fb93 f3fa 	sdiv	r3, r3, sl
 802947e:	441d      	add	r5, r3
 8029480:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8029484:	441a      	add	r2, r3
 8029486:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 802948a:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 802948e:	4a3f      	ldr	r2, [pc, #252]	; (802958c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 8029490:	9205      	str	r2, [sp, #20]
 8029492:	4419      	add	r1, r3
 8029494:	6810      	ldr	r0, [r2, #0]
 8029496:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
 802949a:	6803      	ldr	r3, [r0, #0]
 802949c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 802949e:	4798      	blx	r3
 80294a0:	4b3b      	ldr	r3, [pc, #236]	; (8029590 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 80294a2:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
 80294a6:	8819      	ldrh	r1, [r3, #0]
 80294a8:	f9bd c028 	ldrsh.w	ip, [sp, #40]	; 0x28
 80294ac:	fb01 c404 	mla	r4, r1, r4, ip
 80294b0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80294b4:	434f      	muls	r7, r1
 80294b6:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 80294ba:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 80294be:	3604      	adds	r6, #4
 80294c0:	9204      	str	r2, [sp, #16]
 80294c2:	9b04      	ldr	r3, [sp, #16]
 80294c4:	429c      	cmp	r4, r3
 80294c6:	d258      	bcs.n	802957a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 80294c8:	9b03      	ldr	r3, [sp, #12]
 80294ca:	2b00      	cmp	r3, #0
 80294cc:	d034      	beq.n	8029538 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 80294ce:	782b      	ldrb	r3, [r5, #0]
 80294d0:	f003 030f 	and.w	r3, r3, #15
 80294d4:	1c6f      	adds	r7, r5, #1
 80294d6:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80294da:	0e0b      	lsrs	r3, r1, #24
 80294dc:	d006      	beq.n	80294ec <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 80294de:	8822      	ldrh	r2, [r4, #0]
 80294e0:	9300      	str	r3, [sp, #0]
 80294e2:	4640      	mov	r0, r8
 80294e4:	464b      	mov	r3, r9
 80294e6:	f7ff ff43 	bl	8029370 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80294ea:	8020      	strh	r0, [r4, #0]
 80294ec:	3402      	adds	r4, #2
 80294ee:	f10b 3aff 	add.w	sl, fp, #4294967295
 80294f2:	f1ba 0f01 	cmp.w	sl, #1
 80294f6:	dd22      	ble.n	802953e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 80294f8:	783b      	ldrb	r3, [r7, #0]
 80294fa:	091b      	lsrs	r3, r3, #4
 80294fc:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8029500:	0e0b      	lsrs	r3, r1, #24
 8029502:	d006      	beq.n	8029512 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 8029504:	8822      	ldrh	r2, [r4, #0]
 8029506:	9300      	str	r3, [sp, #0]
 8029508:	4640      	mov	r0, r8
 802950a:	464b      	mov	r3, r9
 802950c:	f7ff ff30 	bl	8029370 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8029510:	8020      	strh	r0, [r4, #0]
 8029512:	f817 3b01 	ldrb.w	r3, [r7], #1
 8029516:	f003 030f 	and.w	r3, r3, #15
 802951a:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 802951e:	0e0b      	lsrs	r3, r1, #24
 8029520:	d006      	beq.n	8029530 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 8029522:	8862      	ldrh	r2, [r4, #2]
 8029524:	9300      	str	r3, [sp, #0]
 8029526:	4640      	mov	r0, r8
 8029528:	464b      	mov	r3, r9
 802952a:	f7ff ff21 	bl	8029370 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 802952e:	8060      	strh	r0, [r4, #2]
 8029530:	3404      	adds	r4, #4
 8029532:	f1aa 0a02 	sub.w	sl, sl, #2
 8029536:	e7dc      	b.n	80294f2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8029538:	462f      	mov	r7, r5
 802953a:	46da      	mov	sl, fp
 802953c:	e7d9      	b.n	80294f2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 802953e:	d10d      	bne.n	802955c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 8029540:	783b      	ldrb	r3, [r7, #0]
 8029542:	091b      	lsrs	r3, r3, #4
 8029544:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8029548:	0e0b      	lsrs	r3, r1, #24
 802954a:	d006      	beq.n	802955a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 802954c:	8822      	ldrh	r2, [r4, #0]
 802954e:	9300      	str	r3, [sp, #0]
 8029550:	4640      	mov	r0, r8
 8029552:	464b      	mov	r3, r9
 8029554:	f7ff ff0c 	bl	8029370 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8029558:	8020      	strh	r0, [r4, #0]
 802955a:	3402      	adds	r4, #2
 802955c:	9b06      	ldr	r3, [sp, #24]
 802955e:	9a02      	ldr	r2, [sp, #8]
 8029560:	881b      	ldrh	r3, [r3, #0]
 8029562:	eba3 030b 	sub.w	r3, r3, fp
 8029566:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 802956a:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 802956e:	4413      	add	r3, r2
 8029570:	9a07      	ldr	r2, [sp, #28]
 8029572:	fb93 f3f2 	sdiv	r3, r3, r2
 8029576:	441d      	add	r5, r3
 8029578:	e7a3      	b.n	80294c2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 802957a:	9b05      	ldr	r3, [sp, #20]
 802957c:	6818      	ldr	r0, [r3, #0]
 802957e:	6803      	ldr	r3, [r0, #0]
 8029580:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8029582:	4798      	blx	r3
 8029584:	b00d      	add	sp, #52	; 0x34
 8029586:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802958a:	bf00      	nop
 802958c:	2001383c 	.word	0x2001383c
 8029590:	20013836 	.word	0x20013836

08029594 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 8029594:	b570      	push	{r4, r5, r6, lr}
 8029596:	1214      	asrs	r4, r2, #8
 8029598:	788d      	ldrb	r5, [r1, #2]
 802959a:	f89d 6010 	ldrb.w	r6, [sp, #16]
 802959e:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80295a2:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80295a6:	fb15 f503 	smulbb	r5, r5, r3
 80295aa:	fb04 5506 	mla	r5, r4, r6, r5
 80295ae:	10d0      	asrs	r0, r2, #3
 80295b0:	784c      	ldrb	r4, [r1, #1]
 80295b2:	7809      	ldrb	r1, [r1, #0]
 80295b4:	00d2      	lsls	r2, r2, #3
 80295b6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80295ba:	b2d2      	uxtb	r2, r2
 80295bc:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 80295c0:	fb14 f403 	smulbb	r4, r4, r3
 80295c4:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80295c8:	fb11 f303 	smulbb	r3, r1, r3
 80295cc:	fb00 4406 	mla	r4, r0, r6, r4
 80295d0:	fb02 3306 	mla	r3, r2, r6, r3
 80295d4:	b2ad      	uxth	r5, r5
 80295d6:	b29b      	uxth	r3, r3
 80295d8:	b2a4      	uxth	r4, r4
 80295da:	1c68      	adds	r0, r5, #1
 80295dc:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 80295e0:	1c62      	adds	r2, r4, #1
 80295e2:	1c58      	adds	r0, r3, #1
 80295e4:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80295e8:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 80295ec:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80295f0:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80295f4:	0964      	lsrs	r4, r4, #5
 80295f6:	4328      	orrs	r0, r5
 80295f8:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80295fc:	4320      	orrs	r0, r4
 80295fe:	bd70      	pop	{r4, r5, r6, pc}

08029600 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8029600:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029604:	b08f      	sub	sp, #60	; 0x3c
 8029606:	461c      	mov	r4, r3
 8029608:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 802960c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802960e:	4682      	mov	sl, r0
 8029610:	460e      	mov	r6, r1
 8029612:	4615      	mov	r5, r2
 8029614:	2f00      	cmp	r7, #0
 8029616:	f000 8142 	beq.w	802989e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 802961a:	6820      	ldr	r0, [r4, #0]
 802961c:	6861      	ldr	r1, [r4, #4]
 802961e:	aa0a      	add	r2, sp, #40	; 0x28
 8029620:	c203      	stmia	r2!, {r0, r1}
 8029622:	6818      	ldr	r0, [r3, #0]
 8029624:	6859      	ldr	r1, [r3, #4]
 8029626:	aa0c      	add	r2, sp, #48	; 0x30
 8029628:	c203      	stmia	r2!, {r0, r1}
 802962a:	a80a      	add	r0, sp, #40	; 0x28
 802962c:	f7ef f80c 	bl	8018648 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8029630:	4621      	mov	r1, r4
 8029632:	a80c      	add	r0, sp, #48	; 0x30
 8029634:	f7ef f84c 	bl	80186d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8029638:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 802963c:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 8029640:	f002 0301 	and.w	r3, r2, #1
 8029644:	9306      	str	r3, [sp, #24]
 8029646:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 802964a:	f003 0101 	and.w	r1, r3, #1
 802964e:	9105      	str	r1, [sp, #20]
 8029650:	9805      	ldr	r0, [sp, #20]
 8029652:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 8029656:	4403      	add	r3, r0
 8029658:	fb01 2303 	mla	r3, r1, r3, r2
 802965c:	f04f 0802 	mov.w	r8, #2
 8029660:	fb93 f3f8 	sdiv	r3, r3, r8
 8029664:	441e      	add	r6, r3
 8029666:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 802966a:	441a      	add	r2, r3
 802966c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8029670:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8029674:	4419      	add	r1, r3
 8029676:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 802967a:	9303      	str	r3, [sp, #12]
 802967c:	4b89      	ldr	r3, [pc, #548]	; (80298a4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 802967e:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 8029682:	6818      	ldr	r0, [r3, #0]
 8029684:	6803      	ldr	r3, [r0, #0]
 8029686:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8029688:	4798      	blx	r3
 802968a:	4a87      	ldr	r2, [pc, #540]	; (80298a8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 802968c:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 8029690:	8813      	ldrh	r3, [r2, #0]
 8029692:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	; 0x30
 8029696:	2fff      	cmp	r7, #255	; 0xff
 8029698:	fb03 9404 	mla	r4, r3, r4, r9
 802969c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80296a0:	f105 0504 	add.w	r5, r5, #4
 80296a4:	4694      	mov	ip, r2
 80296a6:	fb03 f30b 	mul.w	r3, r3, fp
 80296aa:	d071      	beq.n	8029790 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 80296ac:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80296b0:	43f9      	mvns	r1, r7
 80296b2:	e9cd 3207 	strd	r3, r2, [sp, #28]
 80296b6:	b2c9      	uxtb	r1, r1
 80296b8:	9104      	str	r1, [sp, #16]
 80296ba:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 80296be:	9b07      	ldr	r3, [sp, #28]
 80296c0:	42a3      	cmp	r3, r4
 80296c2:	f240 80e7 	bls.w	8029894 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 80296c6:	9b06      	ldr	r3, [sp, #24]
 80296c8:	2b00      	cmp	r3, #0
 80296ca:	d03d      	beq.n	8029748 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 80296cc:	7831      	ldrb	r1, [r6, #0]
 80296ce:	9b04      	ldr	r3, [sp, #16]
 80296d0:	8822      	ldrh	r2, [r4, #0]
 80296d2:	9300      	str	r3, [sp, #0]
 80296d4:	f001 010f 	and.w	r1, r1, #15
 80296d8:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80296dc:	463b      	mov	r3, r7
 80296de:	4429      	add	r1, r5
 80296e0:	4650      	mov	r0, sl
 80296e2:	f7ff ff57 	bl	8029594 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80296e6:	9b03      	ldr	r3, [sp, #12]
 80296e8:	f824 0b02 	strh.w	r0, [r4], #2
 80296ec:	f106 0801 	add.w	r8, r6, #1
 80296f0:	f103 3bff 	add.w	fp, r3, #4294967295
 80296f4:	f1bb 0f01 	cmp.w	fp, #1
 80296f8:	46a1      	mov	r9, r4
 80296fa:	f104 0404 	add.w	r4, r4, #4
 80296fe:	dd27      	ble.n	8029750 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 8029700:	f898 1000 	ldrb.w	r1, [r8]
 8029704:	9b04      	ldr	r3, [sp, #16]
 8029706:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 802970a:	9300      	str	r3, [sp, #0]
 802970c:	0909      	lsrs	r1, r1, #4
 802970e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8029712:	463b      	mov	r3, r7
 8029714:	4429      	add	r1, r5
 8029716:	4650      	mov	r0, sl
 8029718:	f7ff ff3c 	bl	8029594 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 802971c:	f824 0c04 	strh.w	r0, [r4, #-4]
 8029720:	f818 1b01 	ldrb.w	r1, [r8], #1
 8029724:	9b04      	ldr	r3, [sp, #16]
 8029726:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 802972a:	9300      	str	r3, [sp, #0]
 802972c:	f001 010f 	and.w	r1, r1, #15
 8029730:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8029734:	463b      	mov	r3, r7
 8029736:	4429      	add	r1, r5
 8029738:	4650      	mov	r0, sl
 802973a:	f7ff ff2b 	bl	8029594 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 802973e:	f1ab 0b02 	sub.w	fp, fp, #2
 8029742:	f824 0c02 	strh.w	r0, [r4, #-2]
 8029746:	e7d5      	b.n	80296f4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8029748:	46b0      	mov	r8, r6
 802974a:	f8dd b00c 	ldr.w	fp, [sp, #12]
 802974e:	e7d1      	b.n	80296f4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8029750:	d10f      	bne.n	8029772 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 8029752:	f898 1000 	ldrb.w	r1, [r8]
 8029756:	9b04      	ldr	r3, [sp, #16]
 8029758:	f8b9 2000 	ldrh.w	r2, [r9]
 802975c:	9300      	str	r3, [sp, #0]
 802975e:	0909      	lsrs	r1, r1, #4
 8029760:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8029764:	463b      	mov	r3, r7
 8029766:	4429      	add	r1, r5
 8029768:	4650      	mov	r0, sl
 802976a:	f7ff ff13 	bl	8029594 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 802976e:	f829 0b02 	strh.w	r0, [r9], #2
 8029772:	9b08      	ldr	r3, [sp, #32]
 8029774:	9a05      	ldr	r2, [sp, #20]
 8029776:	881c      	ldrh	r4, [r3, #0]
 8029778:	9b03      	ldr	r3, [sp, #12]
 802977a:	1ae4      	subs	r4, r4, r3
 802977c:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8029780:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8029784:	4413      	add	r3, r2
 8029786:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8029788:	fb93 f3f2 	sdiv	r3, r3, r2
 802978c:	441e      	add	r6, r3
 802978e:	e796      	b.n	80296be <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 8029790:	4f46      	ldr	r7, [pc, #280]	; (80298ac <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 8029792:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8029796:	42a3      	cmp	r3, r4
 8029798:	d97c      	bls.n	8029894 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 802979a:	9a06      	ldr	r2, [sp, #24]
 802979c:	2a00      	cmp	r2, #0
 802979e:	d054      	beq.n	802984a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 80297a0:	7830      	ldrb	r0, [r6, #0]
 80297a2:	f000 000f 	and.w	r0, r0, #15
 80297a6:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80297aa:	eb05 0e00 	add.w	lr, r5, r0
 80297ae:	5c28      	ldrb	r0, [r5, r0]
 80297b0:	f89e 2002 	ldrb.w	r2, [lr, #2]
 80297b4:	f89e e001 	ldrb.w	lr, [lr, #1]
 80297b8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80297bc:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 80297c0:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 80297c4:	ea42 020e 	orr.w	r2, r2, lr
 80297c8:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 80297cc:	f824 2b02 	strh.w	r2, [r4], #2
 80297d0:	9a03      	ldr	r2, [sp, #12]
 80297d2:	1c71      	adds	r1, r6, #1
 80297d4:	f102 3eff 	add.w	lr, r2, #4294967295
 80297d8:	f1be 0f01 	cmp.w	lr, #1
 80297dc:	4620      	mov	r0, r4
 80297de:	f104 0404 	add.w	r4, r4, #4
 80297e2:	dd36      	ble.n	8029852 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 80297e4:	7808      	ldrb	r0, [r1, #0]
 80297e6:	0900      	lsrs	r0, r0, #4
 80297e8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80297ec:	eb05 0a00 	add.w	sl, r5, r0
 80297f0:	f1ae 0e02 	sub.w	lr, lr, #2
 80297f4:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80297f8:	f89a 9002 	ldrb.w	r9, [sl, #2]
 80297fc:	00d2      	lsls	r2, r2, #3
 80297fe:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8029802:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8029806:	ea49 0202 	orr.w	r2, r9, r2
 802980a:	f815 9000 	ldrb.w	r9, [r5, r0]
 802980e:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8029812:	f824 2c04 	strh.w	r2, [r4, #-4]
 8029816:	f811 0b01 	ldrb.w	r0, [r1], #1
 802981a:	f000 000f 	and.w	r0, r0, #15
 802981e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8029822:	eb05 0a00 	add.w	sl, r5, r0
 8029826:	f89a 2001 	ldrb.w	r2, [sl, #1]
 802982a:	f89a 9002 	ldrb.w	r9, [sl, #2]
 802982e:	00d2      	lsls	r2, r2, #3
 8029830:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8029834:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8029838:	ea49 0202 	orr.w	r2, r9, r2
 802983c:	f815 9000 	ldrb.w	r9, [r5, r0]
 8029840:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8029844:	f824 2c02 	strh.w	r2, [r4, #-2]
 8029848:	e7c6      	b.n	80297d8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 802984a:	4631      	mov	r1, r6
 802984c:	f8dd e00c 	ldr.w	lr, [sp, #12]
 8029850:	e7c2      	b.n	80297d8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8029852:	d111      	bne.n	8029878 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 8029854:	7809      	ldrb	r1, [r1, #0]
 8029856:	0909      	lsrs	r1, r1, #4
 8029858:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802985c:	186c      	adds	r4, r5, r1
 802985e:	5c69      	ldrb	r1, [r5, r1]
 8029860:	78a2      	ldrb	r2, [r4, #2]
 8029862:	7864      	ldrb	r4, [r4, #1]
 8029864:	00e4      	lsls	r4, r4, #3
 8029866:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 802986a:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 802986e:	4322      	orrs	r2, r4
 8029870:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 8029874:	f820 2b02 	strh.w	r2, [r0], #2
 8029878:	9a03      	ldr	r2, [sp, #12]
 802987a:	f8bc 4000 	ldrh.w	r4, [ip]
 802987e:	9905      	ldr	r1, [sp, #20]
 8029880:	1aa4      	subs	r4, r4, r2
 8029882:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8029886:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 802988a:	440a      	add	r2, r1
 802988c:	fb92 f2f8 	sdiv	r2, r2, r8
 8029890:	4416      	add	r6, r2
 8029892:	e780      	b.n	8029796 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 8029894:	4b03      	ldr	r3, [pc, #12]	; (80298a4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8029896:	6818      	ldr	r0, [r3, #0]
 8029898:	6803      	ldr	r3, [r0, #0]
 802989a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802989c:	4798      	blx	r3
 802989e:	b00f      	add	sp, #60	; 0x3c
 80298a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80298a4:	2001383c 	.word	0x2001383c
 80298a8:	20013836 	.word	0x20013836
 80298ac:	fffff800 	.word	0xfffff800

080298b0 <CRC_Lock>:
 80298b0:	b530      	push	{r4, r5, lr}
 80298b2:	4a20      	ldr	r2, [pc, #128]	; (8029934 <CRC_Lock+0x84>)
 80298b4:	6813      	ldr	r3, [r2, #0]
 80298b6:	f023 0301 	bic.w	r3, r3, #1
 80298ba:	6013      	str	r3, [r2, #0]
 80298bc:	4b1e      	ldr	r3, [pc, #120]	; (8029938 <CRC_Lock+0x88>)
 80298be:	681a      	ldr	r2, [r3, #0]
 80298c0:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 80298c4:	4022      	ands	r2, r4
 80298c6:	f24c 2540 	movw	r5, #49728	; 0xc240
 80298ca:	42aa      	cmp	r2, r5
 80298cc:	d005      	beq.n	80298da <CRC_Lock+0x2a>
 80298ce:	681b      	ldr	r3, [r3, #0]
 80298d0:	f24c 2270 	movw	r2, #49776	; 0xc270
 80298d4:	4023      	ands	r3, r4
 80298d6:	4293      	cmp	r3, r2
 80298d8:	d124      	bne.n	8029924 <CRC_Lock+0x74>
 80298da:	4b18      	ldr	r3, [pc, #96]	; (802993c <CRC_Lock+0x8c>)
 80298dc:	681b      	ldr	r3, [r3, #0]
 80298de:	bb0b      	cbnz	r3, 8029924 <CRC_Lock+0x74>
 80298e0:	4b17      	ldr	r3, [pc, #92]	; (8029940 <CRC_Lock+0x90>)
 80298e2:	681a      	ldr	r2, [r3, #0]
 80298e4:	f3c2 020b 	ubfx	r2, r2, #0, #12
 80298e8:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 80298ec:	d00d      	beq.n	802990a <CRC_Lock+0x5a>
 80298ee:	681a      	ldr	r2, [r3, #0]
 80298f0:	f240 4483 	movw	r4, #1155	; 0x483
 80298f4:	f3c2 020b 	ubfx	r2, r2, #0, #12
 80298f8:	42a2      	cmp	r2, r4
 80298fa:	d006      	beq.n	802990a <CRC_Lock+0x5a>
 80298fc:	681b      	ldr	r3, [r3, #0]
 80298fe:	f240 4285 	movw	r2, #1157	; 0x485
 8029902:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8029906:	4293      	cmp	r3, r2
 8029908:	d10c      	bne.n	8029924 <CRC_Lock+0x74>
 802990a:	4b0e      	ldr	r3, [pc, #56]	; (8029944 <CRC_Lock+0x94>)
 802990c:	2201      	movs	r2, #1
 802990e:	601a      	str	r2, [r3, #0]
 8029910:	681a      	ldr	r2, [r3, #0]
 8029912:	2a00      	cmp	r2, #0
 8029914:	d1fc      	bne.n	8029910 <CRC_Lock+0x60>
 8029916:	4b0c      	ldr	r3, [pc, #48]	; (8029948 <CRC_Lock+0x98>)
 8029918:	6018      	str	r0, [r3, #0]
 802991a:	6818      	ldr	r0, [r3, #0]
 802991c:	1a43      	subs	r3, r0, r1
 802991e:	4258      	negs	r0, r3
 8029920:	4158      	adcs	r0, r3
 8029922:	bd30      	pop	{r4, r5, pc}
 8029924:	4b09      	ldr	r3, [pc, #36]	; (802994c <CRC_Lock+0x9c>)
 8029926:	2201      	movs	r2, #1
 8029928:	601a      	str	r2, [r3, #0]
 802992a:	681a      	ldr	r2, [r3, #0]
 802992c:	2a00      	cmp	r2, #0
 802992e:	d1fc      	bne.n	802992a <CRC_Lock+0x7a>
 8029930:	4b07      	ldr	r3, [pc, #28]	; (8029950 <CRC_Lock+0xa0>)
 8029932:	e7f1      	b.n	8029918 <CRC_Lock+0x68>
 8029934:	e0002000 	.word	0xe0002000
 8029938:	e000ed00 	.word	0xe000ed00
 802993c:	e0042000 	.word	0xe0042000
 8029940:	5c001000 	.word	0x5c001000
 8029944:	58024c08 	.word	0x58024c08
 8029948:	58024c00 	.word	0x58024c00
 802994c:	40023008 	.word	0x40023008
 8029950:	40023000 	.word	0x40023000

08029954 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8029954:	6101      	str	r1, [r0, #16]
 8029956:	4770      	bx	lr

08029958 <_ZN8touchgfx8Gestures4tickEv>:
 8029958:	7b83      	ldrb	r3, [r0, #14]
 802995a:	b14b      	cbz	r3, 8029970 <_ZN8touchgfx8Gestures4tickEv+0x18>
 802995c:	8903      	ldrh	r3, [r0, #8]
 802995e:	3301      	adds	r3, #1
 8029960:	b29b      	uxth	r3, r3
 8029962:	2b07      	cmp	r3, #7
 8029964:	8103      	strh	r3, [r0, #8]
 8029966:	bf81      	itttt	hi
 8029968:	2300      	movhi	r3, #0
 802996a:	8143      	strhhi	r3, [r0, #10]
 802996c:	8183      	strhhi	r3, [r0, #12]
 802996e:	7383      	strbhi	r3, [r0, #14]
 8029970:	4770      	bx	lr
	...

08029974 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8029974:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8029978:	4698      	mov	r8, r3
 802997a:	8883      	ldrh	r3, [r0, #4]
 802997c:	f8ad 3006 	strh.w	r3, [sp, #6]
 8029980:	eba8 0303 	sub.w	r3, r8, r3
 8029984:	b21b      	sxth	r3, r3
 8029986:	4604      	mov	r4, r0
 8029988:	2b00      	cmp	r3, #0
 802998a:	4617      	mov	r7, r2
 802998c:	4a18      	ldr	r2, [pc, #96]	; (80299f0 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 802998e:	9200      	str	r2, [sp, #0]
 8029990:	bfb8      	it	lt
 8029992:	425b      	neglt	r3, r3
 8029994:	8aa2      	ldrh	r2, [r4, #20]
 8029996:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 802999a:	f8ad 800a 	strh.w	r8, [sp, #10]
 802999e:	b21b      	sxth	r3, r3
 80299a0:	460e      	mov	r6, r1
 80299a2:	4293      	cmp	r3, r2
 80299a4:	88c1      	ldrh	r1, [r0, #6]
 80299a6:	f8ad 1008 	strh.w	r1, [sp, #8]
 80299aa:	f04f 0000 	mov.w	r0, #0
 80299ae:	f88d 0004 	strb.w	r0, [sp, #4]
 80299b2:	f8ad 500c 	strh.w	r5, [sp, #12]
 80299b6:	dc07      	bgt.n	80299c8 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 80299b8:	1a69      	subs	r1, r5, r1
 80299ba:	b209      	sxth	r1, r1
 80299bc:	2900      	cmp	r1, #0
 80299be:	bfb8      	it	lt
 80299c0:	4249      	neglt	r1, r1
 80299c2:	b209      	sxth	r1, r1
 80299c4:	428a      	cmp	r2, r1
 80299c6:	da10      	bge.n	80299ea <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 80299c8:	6920      	ldr	r0, [r4, #16]
 80299ca:	6803      	ldr	r3, [r0, #0]
 80299cc:	4669      	mov	r1, sp
 80299ce:	685b      	ldr	r3, [r3, #4]
 80299d0:	4798      	blx	r3
 80299d2:	eba8 0606 	sub.w	r6, r8, r6
 80299d6:	2300      	movs	r3, #0
 80299d8:	1bef      	subs	r7, r5, r7
 80299da:	2001      	movs	r0, #1
 80299dc:	8123      	strh	r3, [r4, #8]
 80299de:	8166      	strh	r6, [r4, #10]
 80299e0:	81a7      	strh	r7, [r4, #12]
 80299e2:	f8a4 8004 	strh.w	r8, [r4, #4]
 80299e6:	80e5      	strh	r5, [r4, #6]
 80299e8:	73a0      	strb	r0, [r4, #14]
 80299ea:	b004      	add	sp, #16
 80299ec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80299f0:	08031ec4 	.word	0x08031ec4

080299f4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 80299f4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80299f6:	461e      	mov	r6, r3
 80299f8:	1e4b      	subs	r3, r1, #1
 80299fa:	2b01      	cmp	r3, #1
 80299fc:	b085      	sub	sp, #20
 80299fe:	4604      	mov	r4, r0
 8029a00:	460d      	mov	r5, r1
 8029a02:	4617      	mov	r7, r2
 8029a04:	d84b      	bhi.n	8029a9e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 8029a06:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8029a0a:	1cd3      	adds	r3, r2, #3
 8029a0c:	b29b      	uxth	r3, r3
 8029a0e:	2b06      	cmp	r3, #6
 8029a10:	d916      	bls.n	8029a40 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 8029a12:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 8029ab4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8029a16:	f8cd c004 	str.w	ip, [sp, #4]
 8029a1a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8029a1e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8029a22:	6900      	ldr	r0, [r0, #16]
 8029a24:	f8ad 100c 	strh.w	r1, [sp, #12]
 8029a28:	f04f 0c00 	mov.w	ip, #0
 8029a2c:	f88d c008 	strb.w	ip, [sp, #8]
 8029a30:	f8ad 200a 	strh.w	r2, [sp, #10]
 8029a34:	f8ad 300e 	strh.w	r3, [sp, #14]
 8029a38:	6803      	ldr	r3, [r0, #0]
 8029a3a:	a901      	add	r1, sp, #4
 8029a3c:	689b      	ldr	r3, [r3, #8]
 8029a3e:	4798      	blx	r3
 8029a40:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8029a44:	1cd3      	adds	r3, r2, #3
 8029a46:	b29b      	uxth	r3, r3
 8029a48:	2b06      	cmp	r3, #6
 8029a4a:	d916      	bls.n	8029a7a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8029a4c:	f8df c064 	ldr.w	ip, [pc, #100]	; 8029ab4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8029a50:	f8cd c004 	str.w	ip, [sp, #4]
 8029a54:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8029a58:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8029a5c:	6920      	ldr	r0, [r4, #16]
 8029a5e:	f8ad 100c 	strh.w	r1, [sp, #12]
 8029a62:	f04f 0c01 	mov.w	ip, #1
 8029a66:	f88d c008 	strb.w	ip, [sp, #8]
 8029a6a:	f8ad 200a 	strh.w	r2, [sp, #10]
 8029a6e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8029a72:	6803      	ldr	r3, [r0, #0]
 8029a74:	a901      	add	r1, sp, #4
 8029a76:	689b      	ldr	r3, [r3, #8]
 8029a78:	4798      	blx	r3
 8029a7a:	4b0d      	ldr	r3, [pc, #52]	; (8029ab0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 8029a7c:	9301      	str	r3, [sp, #4]
 8029a7e:	6920      	ldr	r0, [r4, #16]
 8029a80:	f88d 5008 	strb.w	r5, [sp, #8]
 8029a84:	2300      	movs	r3, #0
 8029a86:	f8ad 700a 	strh.w	r7, [sp, #10]
 8029a8a:	f8ad 600c 	strh.w	r6, [sp, #12]
 8029a8e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8029a92:	6803      	ldr	r3, [r0, #0]
 8029a94:	a901      	add	r1, sp, #4
 8029a96:	681b      	ldr	r3, [r3, #0]
 8029a98:	4798      	blx	r3
 8029a9a:	b005      	add	sp, #20
 8029a9c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8029a9e:	2900      	cmp	r1, #0
 8029aa0:	d1eb      	bne.n	8029a7a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8029aa2:	80a2      	strh	r2, [r4, #4]
 8029aa4:	80c6      	strh	r6, [r0, #6]
 8029aa6:	60a1      	str	r1, [r4, #8]
 8029aa8:	81a1      	strh	r1, [r4, #12]
 8029aaa:	73a1      	strb	r1, [r4, #14]
 8029aac:	e7e5      	b.n	8029a7a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8029aae:	bf00      	nop
 8029ab0:	08031eb0 	.word	0x08031eb0
 8029ab4:	08031ed8 	.word	0x08031ed8

08029ab8 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>:
 8029ab8:	10c9      	asrs	r1, r1, #3
 8029aba:	2900      	cmp	r1, #0
 8029abc:	bfb8      	it	lt
 8029abe:	4249      	neglt	r1, r1
 8029ac0:	2801      	cmp	r0, #1
 8029ac2:	d108      	bne.n	8029ad6 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8029ac4:	f3c1 0008 	ubfx	r0, r1, #0, #9
 8029ac8:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 8029acc:	4601      	mov	r1, r0
 8029ace:	dd02      	ble.n	8029ad6 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8029ad0:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
 8029ad4:	4770      	bx	lr
 8029ad6:	29ff      	cmp	r1, #255	; 0xff
 8029ad8:	bfa8      	it	ge
 8029ada:	21ff      	movge	r1, #255	; 0xff
 8029adc:	4608      	mov	r0, r1
 8029ade:	4770      	bx	lr

08029ae0 <_ZN8touchgfx10Rasterizer6lineToEii>:
 8029ae0:	b410      	push	{r4}
 8029ae2:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8029ae6:	429c      	cmp	r4, r3
 8029ae8:	d803      	bhi.n	8029af2 <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 8029aea:	f85d 4b04 	ldr.w	r4, [sp], #4
 8029aee:	f7ed b8b1 	b.w	8016c54 <_ZN8touchgfx7Outline6lineToEii>
 8029af2:	f85d 4b04 	ldr.w	r4, [sp], #4
 8029af6:	4770      	bx	lr

08029af8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 8029af8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029afc:	b08b      	sub	sp, #44	; 0x2c
 8029afe:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8029b02:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8029b06:	9308      	str	r3, [sp, #32]
 8029b08:	4606      	mov	r6, r0
 8029b0a:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8029b0e:	9309      	str	r3, [sp, #36]	; 0x24
 8029b10:	468a      	mov	sl, r1
 8029b12:	f7ed fa0c 	bl	8016f2e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 8029b16:	68b5      	ldr	r5, [r6, #8]
 8029b18:	4604      	mov	r4, r0
 8029b1a:	2d00      	cmp	r5, #0
 8029b1c:	d044      	beq.n	8029ba8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8029b1e:	6873      	ldr	r3, [r6, #4]
 8029b20:	42ab      	cmp	r3, r5
 8029b22:	d33d      	bcc.n	8029ba0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 8029b24:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8029b28:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	; 0x34
 8029b2c:	eb02 0b03 	add.w	fp, r2, r3
 8029b30:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 8029b34:	fb02 1203 	mla	r2, r2, r3, r1
 8029b38:	9205      	str	r2, [sp, #20]
 8029b3a:	1e6a      	subs	r2, r5, #1
 8029b3c:	9204      	str	r2, [sp, #16]
 8029b3e:	f04f 0800 	mov.w	r8, #0
 8029b42:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 8029b46:	f9b4 7000 	ldrsh.w	r7, [r4]
 8029b4a:	454b      	cmp	r3, r9
 8029b4c:	463a      	mov	r2, r7
 8029b4e:	d008      	beq.n	8029b62 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 8029b50:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	; 0x34
 8029b54:	eb03 0b09 	add.w	fp, r3, r9
 8029b58:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 8029b5c:	fb03 1309 	mla	r3, r3, r9, r1
 8029b60:	9305      	str	r3, [sp, #20]
 8029b62:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8029b66:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8029b6a:	4498      	add	r8, r3
 8029b6c:	9b04      	ldr	r3, [sp, #16]
 8029b6e:	3b01      	subs	r3, #1
 8029b70:	9304      	str	r3, [sp, #16]
 8029b72:	9b04      	ldr	r3, [sp, #16]
 8029b74:	3301      	adds	r3, #1
 8029b76:	d015      	beq.n	8029ba4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 8029b78:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 8029b7c:	42bb      	cmp	r3, r7
 8029b7e:	d117      	bne.n	8029bb0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 8029b80:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 8029b84:	9b04      	ldr	r3, [sp, #16]
 8029b86:	4548      	cmp	r0, r9
 8029b88:	f103 33ff 	add.w	r3, r3, #4294967295
 8029b8c:	d17f      	bne.n	8029c8e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 8029b8e:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 8029b92:	4401      	add	r1, r0
 8029b94:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8029b98:	4480      	add	r8, r0
 8029b9a:	e7e9      	b.n	8029b70 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 8029b9c:	461f      	mov	r7, r3
 8029b9e:	e044      	b.n	8029c2a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 8029ba0:	2000      	movs	r0, #0
 8029ba2:	e002      	b.n	8029baa <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 8029ba4:	2900      	cmp	r1, #0
 8029ba6:	d16f      	bne.n	8029c88 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 8029ba8:	2001      	movs	r0, #1
 8029baa:	b00b      	add	sp, #44	; 0x2c
 8029bac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8029bb0:	2900      	cmp	r1, #0
 8029bb2:	d030      	beq.n	8029c16 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 8029bb4:	2f00      	cmp	r7, #0
 8029bb6:	db29      	blt.n	8029c0c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8029bb8:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 8029bbc:	42bb      	cmp	r3, r7
 8029bbe:	dd25      	ble.n	8029c0c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8029bc0:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 8029bc4:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8029bc8:	f7ff ff76 	bl	8029ab8 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 8029bcc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8029bce:	fb10 f003 	smulbb	r0, r0, r3
 8029bd2:	b280      	uxth	r0, r0
 8029bd4:	1c41      	adds	r1, r0, #1
 8029bd6:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8029bda:	1209      	asrs	r1, r1, #8
 8029bdc:	f011 0fff 	tst.w	r1, #255	; 0xff
 8029be0:	d014      	beq.n	8029c0c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8029be2:	9808      	ldr	r0, [sp, #32]
 8029be4:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8029be6:	b2c9      	uxtb	r1, r1
 8029be8:	b2ba      	uxth	r2, r7
 8029bea:	9102      	str	r1, [sp, #8]
 8029bec:	2101      	movs	r1, #1
 8029bee:	4413      	add	r3, r2
 8029bf0:	9101      	str	r1, [sp, #4]
 8029bf2:	4402      	add	r2, r0
 8029bf4:	fa0f f18b 	sxth.w	r1, fp
 8029bf8:	f8da 0000 	ldr.w	r0, [sl]
 8029bfc:	9100      	str	r1, [sp, #0]
 8029bfe:	6941      	ldr	r1, [r0, #20]
 8029c00:	b21b      	sxth	r3, r3
 8029c02:	460d      	mov	r5, r1
 8029c04:	b212      	sxth	r2, r2
 8029c06:	9905      	ldr	r1, [sp, #20]
 8029c08:	4650      	mov	r0, sl
 8029c0a:	47a8      	blx	r5
 8029c0c:	9b04      	ldr	r3, [sp, #16]
 8029c0e:	3301      	adds	r3, #1
 8029c10:	f107 0201 	add.w	r2, r7, #1
 8029c14:	d0c8      	beq.n	8029ba8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8029c16:	f9b4 7000 	ldrsh.w	r7, [r4]
 8029c1a:	1abb      	subs	r3, r7, r2
 8029c1c:	2b00      	cmp	r3, #0
 8029c1e:	dd31      	ble.n	8029c84 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8029c20:	2a00      	cmp	r2, #0
 8029c22:	dabb      	bge.n	8029b9c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 8029c24:	2f00      	cmp	r7, #0
 8029c26:	dd2d      	ble.n	8029c84 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8029c28:	2200      	movs	r2, #0
 8029c2a:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 8029c2e:	19d1      	adds	r1, r2, r7
 8029c30:	4299      	cmp	r1, r3
 8029c32:	db02      	blt.n	8029c3a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 8029c34:	1a9f      	subs	r7, r3, r2
 8029c36:	2f00      	cmp	r7, #0
 8029c38:	dd24      	ble.n	8029c84 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8029c3a:	ea4f 1188 	mov.w	r1, r8, lsl #6
 8029c3e:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8029c42:	f7ff ff39 	bl	8029ab8 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 8029c46:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8029c48:	fb10 f003 	smulbb	r0, r0, r3
 8029c4c:	b280      	uxth	r0, r0
 8029c4e:	1c41      	adds	r1, r0, #1
 8029c50:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8029c54:	1209      	asrs	r1, r1, #8
 8029c56:	f011 0fff 	tst.w	r1, #255	; 0xff
 8029c5a:	d013      	beq.n	8029c84 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8029c5c:	9808      	ldr	r0, [sp, #32]
 8029c5e:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8029c60:	b292      	uxth	r2, r2
 8029c62:	b2c9      	uxtb	r1, r1
 8029c64:	4413      	add	r3, r2
 8029c66:	9102      	str	r1, [sp, #8]
 8029c68:	4402      	add	r2, r0
 8029c6a:	b23f      	sxth	r7, r7
 8029c6c:	f8da 0000 	ldr.w	r0, [sl]
 8029c70:	9701      	str	r7, [sp, #4]
 8029c72:	fa0f f18b 	sxth.w	r1, fp
 8029c76:	9100      	str	r1, [sp, #0]
 8029c78:	6947      	ldr	r7, [r0, #20]
 8029c7a:	9905      	ldr	r1, [sp, #20]
 8029c7c:	b21b      	sxth	r3, r3
 8029c7e:	b212      	sxth	r2, r2
 8029c80:	4650      	mov	r0, sl
 8029c82:	47b8      	blx	r7
 8029c84:	464b      	mov	r3, r9
 8029c86:	e75c      	b.n	8029b42 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 8029c88:	2f00      	cmp	r7, #0
 8029c8a:	da95      	bge.n	8029bb8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 8029c8c:	e78c      	b.n	8029ba8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8029c8e:	2900      	cmp	r1, #0
 8029c90:	d0f8      	beq.n	8029c84 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8029c92:	e78f      	b.n	8029bb4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

08029c94 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
 8029c94:	4b4b      	ldr	r3, [pc, #300]	; (8029dc4 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x130>)
 8029c96:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8029c9a:	2500      	movs	r5, #0
 8029c9c:	f100 0620 	add.w	r6, r0, #32
 8029ca0:	4604      	mov	r4, r0
 8029ca2:	e9c0 3100 	strd	r3, r1, [r0]
 8029ca6:	e9c0 5502 	strd	r5, r5, [r0, #8]
 8029caa:	e9c0 5504 	strd	r5, r5, [r0, #16]
 8029cae:	e9c0 5506 	strd	r5, r5, [r0, #24]
 8029cb2:	f100 0718 	add.w	r7, r0, #24
 8029cb6:	4630      	mov	r0, r6
 8029cb8:	4690      	mov	r8, r2
 8029cba:	f7ec fb03 	bl	80162c4 <_ZN8touchgfx7OutlineC1Ev>
 8029cbe:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
 8029cc2:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 8029cc6:	f884 5050 	strb.w	r5, [r4, #80]	; 0x50
 8029cca:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
 8029cce:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 8029cd2:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 8029cd6:	f884 5058 	strb.w	r5, [r4, #88]	; 0x58
 8029cda:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
 8029cde:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 8029ce2:	f9b8 2000 	ldrsh.w	r2, [r8]
 8029ce6:	f8b8 0004 	ldrh.w	r0, [r8, #4]
 8029cea:	f8d4 c004 	ldr.w	ip, [r4, #4]
 8029cee:	9500      	str	r5, [sp, #0]
 8029cf0:	4410      	add	r0, r2
 8029cf2:	b280      	uxth	r0, r0
 8029cf4:	fa0f fa80 	sxth.w	sl, r0
 8029cf8:	45aa      	cmp	sl, r5
 8029cfa:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
 8029cfe:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
 8029d02:	dd5c      	ble.n	8029dbe <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8029d04:	4591      	cmp	r9, r2
 8029d06:	dd5a      	ble.n	8029dbe <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8029d08:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
 8029d0c:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8029d10:	440b      	add	r3, r1
 8029d12:	b29b      	uxth	r3, r3
 8029d14:	b21d      	sxth	r5, r3
 8029d16:	2d00      	cmp	r5, #0
 8029d18:	dd51      	ble.n	8029dbe <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8029d1a:	458e      	cmp	lr, r1
 8029d1c:	dd4f      	ble.n	8029dbe <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8029d1e:	45d1      	cmp	r9, sl
 8029d20:	bfb8      	it	lt
 8029d22:	fa1f f089 	uxthlt.w	r0, r9
 8029d26:	45ae      	cmp	lr, r5
 8029d28:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 8029d2c:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 8029d30:	bfb8      	it	lt
 8029d32:	fa1f f38e 	uxthlt.w	r3, lr
 8029d36:	1a80      	subs	r0, r0, r2
 8029d38:	1a5b      	subs	r3, r3, r1
 8029d3a:	f8ad 0004 	strh.w	r0, [sp, #4]
 8029d3e:	f8ad 3006 	strh.w	r3, [sp, #6]
 8029d42:	f8ad 2000 	strh.w	r2, [sp]
 8029d46:	f8ad 1002 	strh.w	r1, [sp, #2]
 8029d4a:	466d      	mov	r5, sp
 8029d4c:	e895 0003 	ldmia.w	r5, {r0, r1}
 8029d50:	e887 0003 	stmia.w	r7, {r0, r1}
 8029d54:	f8dc 3000 	ldr.w	r3, [ip]
 8029d58:	4660      	mov	r0, ip
 8029d5a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8029d5c:	4639      	mov	r1, r7
 8029d5e:	4798      	blx	r3
 8029d60:	6861      	ldr	r1, [r4, #4]
 8029d62:	4628      	mov	r0, r5
 8029d64:	3104      	adds	r1, #4
 8029d66:	f7ee fcb3 	bl	80186d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8029d6a:	4638      	mov	r0, r7
 8029d6c:	f7ee fc6c 	bl	8018648 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8029d70:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8029d74:	f8bd 2000 	ldrh.w	r2, [sp]
 8029d78:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 8029d7c:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
 8029d80:	4630      	mov	r0, r6
 8029d82:	f7ec fa83 	bl	801628c <_ZN8touchgfx7Outline5resetEv>
 8029d86:	f9bd 3000 	ldrsh.w	r3, [sp]
 8029d8a:	f9b4 201e 	ldrsh.w	r2, [r4, #30]
 8029d8e:	015b      	lsls	r3, r3, #5
 8029d90:	60a3      	str	r3, [r4, #8]
 8029d92:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8029d96:	015b      	lsls	r3, r3, #5
 8029d98:	60e3      	str	r3, [r4, #12]
 8029d9a:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8029d9e:	015b      	lsls	r3, r3, #5
 8029da0:	6123      	str	r3, [r4, #16]
 8029da2:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8029da6:	015b      	lsls	r3, r3, #5
 8029da8:	6163      	str	r3, [r4, #20]
 8029daa:	f9b4 301c 	ldrsh.w	r3, [r4, #28]
 8029dae:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 8029db2:	4620      	mov	r0, r4
 8029db4:	e9c4 3212 	strd	r3, r2, [r4, #72]	; 0x48
 8029db8:	b002      	add	sp, #8
 8029dba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8029dbe:	2300      	movs	r3, #0
 8029dc0:	9301      	str	r3, [sp, #4]
 8029dc2:	e7c2      	b.n	8029d4a <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xb6>
 8029dc4:	080321fc 	.word	0x080321fc

08029dc8 <_ZN8touchgfx6Canvas5closeEv>:
 8029dc8:	b538      	push	{r3, r4, r5, lr}
 8029dca:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 8029dce:	4604      	mov	r4, r0
 8029dd0:	b193      	cbz	r3, 8029df8 <_ZN8touchgfx6Canvas5closeEv+0x30>
 8029dd2:	f890 3064 	ldrb.w	r3, [r0, #100]	; 0x64
 8029dd6:	f890 2065 	ldrb.w	r2, [r0, #101]	; 0x65
 8029dda:	4213      	tst	r3, r2
 8029ddc:	d10c      	bne.n	8029df8 <_ZN8touchgfx6Canvas5closeEv+0x30>
 8029dde:	f100 0520 	add.w	r5, r0, #32
 8029de2:	b123      	cbz	r3, 8029dee <_ZN8touchgfx6Canvas5closeEv+0x26>
 8029de4:	e9d0 1217 	ldrd	r1, r2, [r0, #92]	; 0x5c
 8029de8:	4628      	mov	r0, r5
 8029dea:	f7ff fe79 	bl	8029ae0 <_ZN8touchgfx10Rasterizer6lineToEii>
 8029dee:	e9d4 121a 	ldrd	r1, r2, [r4, #104]	; 0x68
 8029df2:	4628      	mov	r0, r5
 8029df4:	f7ff fe74 	bl	8029ae0 <_ZN8touchgfx10Rasterizer6lineToEii>
 8029df8:	2300      	movs	r3, #0
 8029dfa:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8029dfe:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
 8029e02:	4298      	cmp	r0, r3
 8029e04:	bf34      	ite	cc
 8029e06:	2000      	movcc	r0, #0
 8029e08:	2001      	movcs	r0, #1
 8029e0a:	bd38      	pop	{r3, r4, r5, pc}

08029e0c <_ZN8touchgfx6Canvas6renderEh>:
 8029e0c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8029e10:	4604      	mov	r4, r0
 8029e12:	6840      	ldr	r0, [r0, #4]
 8029e14:	6803      	ldr	r3, [r0, #0]
 8029e16:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8029e18:	460d      	mov	r5, r1
 8029e1a:	4798      	blx	r3
 8029e1c:	fb10 f105 	smulbb	r1, r0, r5
 8029e20:	b289      	uxth	r1, r1
 8029e22:	1c4d      	adds	r5, r1, #1
 8029e24:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8029e28:	122d      	asrs	r5, r5, #8
 8029e2a:	f000 809d 	beq.w	8029f68 <_ZN8touchgfx6Canvas6renderEh+0x15c>
 8029e2e:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
 8029e32:	2b00      	cmp	r3, #0
 8029e34:	f000 8098 	beq.w	8029f68 <_ZN8touchgfx6Canvas6renderEh+0x15c>
 8029e38:	4620      	mov	r0, r4
 8029e3a:	f7ff ffc5 	bl	8029dc8 <_ZN8touchgfx6Canvas5closeEv>
 8029e3e:	4607      	mov	r7, r0
 8029e40:	2800      	cmp	r0, #0
 8029e42:	d048      	beq.n	8029ed6 <_ZN8touchgfx6Canvas6renderEh+0xca>
 8029e44:	6863      	ldr	r3, [r4, #4]
 8029e46:	4e49      	ldr	r6, [pc, #292]	; (8029f6c <_ZN8touchgfx6Canvas6renderEh+0x160>)
 8029e48:	6a98      	ldr	r0, [r3, #40]	; 0x28
 8029e4a:	6837      	ldr	r7, [r6, #0]
 8029e4c:	6803      	ldr	r3, [r0, #0]
 8029e4e:	689b      	ldr	r3, [r3, #8]
 8029e50:	4798      	blx	r3
 8029e52:	4601      	mov	r1, r0
 8029e54:	4638      	mov	r0, r7
 8029e56:	f7ea f9bb 	bl	80141d0 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 8029e5a:	4607      	mov	r7, r0
 8029e5c:	f7db fb44 	bl	80054e8 <_ZN8touchgfx3HAL3lcdEv>
 8029e60:	6803      	ldr	r3, [r0, #0]
 8029e62:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8029e64:	4798      	blx	r3
 8029e66:	4680      	mov	r8, r0
 8029e68:	f7db fb3e 	bl	80054e8 <_ZN8touchgfx3HAL3lcdEv>
 8029e6c:	6803      	ldr	r3, [r0, #0]
 8029e6e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8029e70:	4798      	blx	r3
 8029e72:	280b      	cmp	r0, #11
 8029e74:	d85d      	bhi.n	8029f32 <_ZN8touchgfx6Canvas6renderEh+0x126>
 8029e76:	e8df f000 	tbb	[pc, r0]
 8029e7a:	5e53      	.short	0x5e53
 8029e7c:	325c066e 	.word	0x325c066e
 8029e80:	67676742 	.word	0x67676742
 8029e84:	6767      	.short	0x6767
 8029e86:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8029e8a:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8029e8e:	2208      	movs	r2, #8
 8029e90:	fb91 f2f2 	sdiv	r2, r1, r2
 8029e94:	fb08 2303 	mla	r3, r8, r3, r2
 8029e98:	441f      	add	r7, r3
 8029e9a:	424b      	negs	r3, r1
 8029e9c:	f003 0307 	and.w	r3, r3, #7
 8029ea0:	f001 0107 	and.w	r1, r1, #7
 8029ea4:	bf58      	it	pl
 8029ea6:	4259      	negpl	r1, r3
 8029ea8:	b2c9      	uxtb	r1, r1
 8029eaa:	b2ed      	uxtb	r5, r5
 8029eac:	e9cd 1500 	strd	r1, r5, [sp]
 8029eb0:	6860      	ldr	r0, [r4, #4]
 8029eb2:	463a      	mov	r2, r7
 8029eb4:	6a81      	ldr	r1, [r0, #40]	; 0x28
 8029eb6:	fa0f f388 	sxth.w	r3, r8
 8029eba:	f104 0020 	add.w	r0, r4, #32
 8029ebe:	f7ff fe1b 	bl	8029af8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 8029ec2:	6863      	ldr	r3, [r4, #4]
 8029ec4:	4607      	mov	r7, r0
 8029ec6:	6a98      	ldr	r0, [r3, #40]	; 0x28
 8029ec8:	6803      	ldr	r3, [r0, #0]
 8029eca:	691b      	ldr	r3, [r3, #16]
 8029ecc:	4798      	blx	r3
 8029ece:	6830      	ldr	r0, [r6, #0]
 8029ed0:	6803      	ldr	r3, [r0, #0]
 8029ed2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8029ed4:	4798      	blx	r3
 8029ed6:	4638      	mov	r0, r7
 8029ed8:	b002      	add	sp, #8
 8029eda:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8029ede:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8029ee2:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8029ee6:	2204      	movs	r2, #4
 8029ee8:	fb91 f2f2 	sdiv	r2, r1, r2
 8029eec:	fb08 2303 	mla	r3, r8, r3, r2
 8029ef0:	441f      	add	r7, r3
 8029ef2:	424b      	negs	r3, r1
 8029ef4:	f003 0303 	and.w	r3, r3, #3
 8029ef8:	f001 0103 	and.w	r1, r1, #3
 8029efc:	e7d2      	b.n	8029ea4 <_ZN8touchgfx6Canvas6renderEh+0x98>
 8029efe:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8029f02:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8029f06:	2900      	cmp	r1, #0
 8029f08:	f04f 0202 	mov.w	r2, #2
 8029f0c:	fb91 f2f2 	sdiv	r2, r1, r2
 8029f10:	f001 0101 	and.w	r1, r1, #1
 8029f14:	fb08 2303 	mla	r3, r8, r3, r2
 8029f18:	441f      	add	r7, r3
 8029f1a:	bfb8      	it	lt
 8029f1c:	4249      	neglt	r1, r1
 8029f1e:	e7c3      	b.n	8029ea8 <_ZN8touchgfx6Canvas6renderEh+0x9c>
 8029f20:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8029f24:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8029f28:	fb08 f303 	mul.w	r3, r8, r3
 8029f2c:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8029f30:	441f      	add	r7, r3
 8029f32:	2100      	movs	r1, #0
 8029f34:	e7b9      	b.n	8029eaa <_ZN8touchgfx6Canvas6renderEh+0x9e>
 8029f36:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8029f3a:	fb08 f203 	mul.w	r2, r8, r3
 8029f3e:	8b23      	ldrh	r3, [r4, #24]
 8029f40:	2103      	movs	r1, #3
 8029f42:	fb13 2301 	smlabb	r3, r3, r1, r2
 8029f46:	e7f3      	b.n	8029f30 <_ZN8touchgfx6Canvas6renderEh+0x124>
 8029f48:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8029f4c:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8029f50:	fb08 2303 	mla	r3, r8, r3, r2
 8029f54:	e7ec      	b.n	8029f30 <_ZN8touchgfx6Canvas6renderEh+0x124>
 8029f56:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8029f5a:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8029f5e:	fb08 f303 	mul.w	r3, r8, r3
 8029f62:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8029f66:	e7e3      	b.n	8029f30 <_ZN8touchgfx6Canvas6renderEh+0x124>
 8029f68:	2701      	movs	r7, #1
 8029f6a:	e7b4      	b.n	8029ed6 <_ZN8touchgfx6Canvas6renderEh+0xca>
 8029f6c:	2001383c 	.word	0x2001383c

08029f70 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 8029f70:	b510      	push	{r4, lr}
 8029f72:	4b07      	ldr	r3, [pc, #28]	; (8029f90 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
 8029f74:	781b      	ldrb	r3, [r3, #0]
 8029f76:	2b01      	cmp	r3, #1
 8029f78:	d108      	bne.n	8029f8c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
 8029f7a:	6843      	ldr	r3, [r0, #4]
 8029f7c:	6814      	ldr	r4, [r2, #0]
 8029f7e:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8029f82:	680b      	ldr	r3, [r1, #0]
 8029f84:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 8029f88:	6013      	str	r3, [r2, #0]
 8029f8a:	600c      	str	r4, [r1, #0]
 8029f8c:	bd10      	pop	{r4, pc}
 8029f8e:	bf00      	nop
 8029f90:	20013834 	.word	0x20013834

08029f94 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 8029f94:	b513      	push	{r0, r1, r4, lr}
 8029f96:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 8029f9a:	4604      	mov	r4, r0
 8029f9c:	e9cd 2100 	strd	r2, r1, [sp]
 8029fa0:	b9a3      	cbnz	r3, 8029fcc <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 8029fa2:	466a      	mov	r2, sp
 8029fa4:	a901      	add	r1, sp, #4
 8029fa6:	4620      	mov	r0, r4
 8029fa8:	f7ff ffe2 	bl	8029f70 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8029fac:	68a3      	ldr	r3, [r4, #8]
 8029fae:	9901      	ldr	r1, [sp, #4]
 8029fb0:	9a00      	ldr	r2, [sp, #0]
 8029fb2:	1ac9      	subs	r1, r1, r3
 8029fb4:	68e3      	ldr	r3, [r4, #12]
 8029fb6:	9101      	str	r1, [sp, #4]
 8029fb8:	1ad2      	subs	r2, r2, r3
 8029fba:	2a00      	cmp	r2, #0
 8029fbc:	9200      	str	r2, [sp, #0]
 8029fbe:	da0b      	bge.n	8029fd8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 8029fc0:	2301      	movs	r3, #1
 8029fc2:	2900      	cmp	r1, #0
 8029fc4:	da0e      	bge.n	8029fe4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 8029fc6:	f043 0304 	orr.w	r3, r3, #4
 8029fca:	e013      	b.n	8029ff4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 8029fcc:	f7ff fefc 	bl	8029dc8 <_ZN8touchgfx6Canvas5closeEv>
 8029fd0:	2800      	cmp	r0, #0
 8029fd2:	d1e6      	bne.n	8029fa2 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 8029fd4:	b002      	add	sp, #8
 8029fd6:	bd10      	pop	{r4, pc}
 8029fd8:	6963      	ldr	r3, [r4, #20]
 8029fda:	429a      	cmp	r2, r3
 8029fdc:	bfac      	ite	ge
 8029fde:	2302      	movge	r3, #2
 8029fe0:	2300      	movlt	r3, #0
 8029fe2:	e7ee      	b.n	8029fc2 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 8029fe4:	6920      	ldr	r0, [r4, #16]
 8029fe6:	4281      	cmp	r1, r0
 8029fe8:	bfac      	ite	ge
 8029fea:	2008      	movge	r0, #8
 8029fec:	2000      	movlt	r0, #0
 8029fee:	4318      	orrs	r0, r3
 8029ff0:	b2c3      	uxtb	r3, r0
 8029ff2:	b158      	cbz	r0, 802a00c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 8029ff4:	2200      	movs	r2, #0
 8029ff6:	f884 2058 	strb.w	r2, [r4, #88]	; 0x58
 8029ffa:	9901      	ldr	r1, [sp, #4]
 8029ffc:	9a00      	ldr	r2, [sp, #0]
 8029ffe:	66a1      	str	r1, [r4, #104]	; 0x68
 802a000:	66e2      	str	r2, [r4, #108]	; 0x6c
 802a002:	e9c4 1217 	strd	r1, r2, [r4, #92]	; 0x5c
 802a006:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 802a00a:	e7e3      	b.n	8029fd4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 802a00c:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 802a010:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 802a014:	4298      	cmp	r0, r3
 802a016:	d803      	bhi.n	802a020 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 802a018:	f104 0020 	add.w	r0, r4, #32
 802a01c:	f7ec fe34 	bl	8016c88 <_ZN8touchgfx7Outline6moveToEii>
 802a020:	2301      	movs	r3, #1
 802a022:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 802a026:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 802a02a:	2300      	movs	r3, #0
 802a02c:	e7e5      	b.n	8029ffa <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

0802a02e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 802a02e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 802a030:	ab02      	add	r3, sp, #8
 802a032:	4604      	mov	r4, r0
 802a034:	f843 2d08 	str.w	r2, [r3, #-8]!
 802a038:	9101      	str	r1, [sp, #4]
 802a03a:	461a      	mov	r2, r3
 802a03c:	a901      	add	r1, sp, #4
 802a03e:	f7ff ff97 	bl	8029f70 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 802a042:	68a3      	ldr	r3, [r4, #8]
 802a044:	9901      	ldr	r1, [sp, #4]
 802a046:	9a00      	ldr	r2, [sp, #0]
 802a048:	1ac9      	subs	r1, r1, r3
 802a04a:	68e3      	ldr	r3, [r4, #12]
 802a04c:	9101      	str	r1, [sp, #4]
 802a04e:	1ad2      	subs	r2, r2, r3
 802a050:	2a00      	cmp	r2, #0
 802a052:	9200      	str	r2, [sp, #0]
 802a054:	db1c      	blt.n	802a090 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 802a056:	6963      	ldr	r3, [r4, #20]
 802a058:	429a      	cmp	r2, r3
 802a05a:	bfac      	ite	ge
 802a05c:	2002      	movge	r0, #2
 802a05e:	2000      	movlt	r0, #0
 802a060:	2900      	cmp	r1, #0
 802a062:	db17      	blt.n	802a094 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 802a064:	6923      	ldr	r3, [r4, #16]
 802a066:	4299      	cmp	r1, r3
 802a068:	bfac      	ite	ge
 802a06a:	2308      	movge	r3, #8
 802a06c:	2300      	movlt	r3, #0
 802a06e:	4303      	orrs	r3, r0
 802a070:	f894 0064 	ldrb.w	r0, [r4, #100]	; 0x64
 802a074:	b2dd      	uxtb	r5, r3
 802a076:	b978      	cbnz	r0, 802a098 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 802a078:	f104 0020 	add.w	r0, r4, #32
 802a07c:	f7ff fd30 	bl	8029ae0 <_ZN8touchgfx10Rasterizer6lineToEii>
 802a080:	9b01      	ldr	r3, [sp, #4]
 802a082:	65e3      	str	r3, [r4, #92]	; 0x5c
 802a084:	9b00      	ldr	r3, [sp, #0]
 802a086:	6623      	str	r3, [r4, #96]	; 0x60
 802a088:	f884 5064 	strb.w	r5, [r4, #100]	; 0x64
 802a08c:	b002      	add	sp, #8
 802a08e:	bd70      	pop	{r4, r5, r6, pc}
 802a090:	2001      	movs	r0, #1
 802a092:	e7e5      	b.n	802a060 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 802a094:	2304      	movs	r3, #4
 802a096:	e7ea      	b.n	802a06e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 802a098:	b113      	cbz	r3, 802a0a0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 802a09a:	ea10 0305 	ands.w	r3, r0, r5
 802a09e:	d11c      	bne.n	802a0da <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
 802a0a0:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
 802a0a4:	f104 0620 	add.w	r6, r4, #32
 802a0a8:	e9d4 1217 	ldrd	r1, r2, [r4, #92]	; 0x5c
 802a0ac:	b98b      	cbnz	r3, 802a0d2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
 802a0ae:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 802a0b2:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 802a0b6:	4298      	cmp	r0, r3
 802a0b8:	d802      	bhi.n	802a0c0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 802a0ba:	4630      	mov	r0, r6
 802a0bc:	f7ec fde4 	bl	8016c88 <_ZN8touchgfx7Outline6moveToEii>
 802a0c0:	2301      	movs	r3, #1
 802a0c2:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 802a0c6:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 802a0ca:	e9dd 2100 	ldrd	r2, r1, [sp]
 802a0ce:	4630      	mov	r0, r6
 802a0d0:	e7d4      	b.n	802a07c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 802a0d2:	4630      	mov	r0, r6
 802a0d4:	f7ff fd04 	bl	8029ae0 <_ZN8touchgfx10Rasterizer6lineToEii>
 802a0d8:	e7f7      	b.n	802a0ca <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
 802a0da:	461d      	mov	r5, r3
 802a0dc:	e7d0      	b.n	802a080 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

0802a0e0 <_ZN8touchgfx6CanvasD1Ev>:
 802a0e0:	b510      	push	{r4, lr}
 802a0e2:	4b04      	ldr	r3, [pc, #16]	; (802a0f4 <_ZN8touchgfx6CanvasD1Ev+0x14>)
 802a0e4:	4604      	mov	r4, r0
 802a0e6:	f840 3b20 	str.w	r3, [r0], #32
 802a0ea:	f7ec f8c7 	bl	801627c <_ZN8touchgfx7OutlineD1Ev>
 802a0ee:	4620      	mov	r0, r4
 802a0f0:	bd10      	pop	{r4, pc}
 802a0f2:	bf00      	nop
 802a0f4:	080321fc 	.word	0x080321fc

0802a0f8 <_ZN8touchgfx6CanvasD0Ev>:
 802a0f8:	b510      	push	{r4, lr}
 802a0fa:	4604      	mov	r4, r0
 802a0fc:	f7ff fff0 	bl	802a0e0 <_ZN8touchgfx6CanvasD1Ev>
 802a100:	4620      	mov	r0, r4
 802a102:	2170      	movs	r1, #112	; 0x70
 802a104:	f002 fd3d 	bl	802cb82 <_ZdlPvj>
 802a108:	4620      	mov	r0, r4
 802a10a:	bd10      	pop	{r4, pc}

0802a10c <_ZN8touchgfx6CircleD1Ev>:
 802a10c:	4770      	bx	lr

0802a10e <_ZN8touchgfx6CircleD0Ev>:
 802a10e:	b510      	push	{r4, lr}
 802a110:	2148      	movs	r1, #72	; 0x48
 802a112:	4604      	mov	r4, r0
 802a114:	f002 fd35 	bl	802cb82 <_ZdlPvj>
 802a118:	4620      	mov	r0, r4
 802a11a:	bd10      	pop	{r4, pc}

0802a11c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>:
 802a11c:	b508      	push	{r3, lr}
 802a11e:	f5c0 6034 	rsb	r0, r0, #2880	; 0xb40
 802a122:	f7ea fbab 	bl	801487c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a126:	bd08      	pop	{r3, pc}

0802a128 <_ZN8touchgfx6CircleC1Ev>:
 802a128:	b510      	push	{r4, lr}
 802a12a:	4604      	mov	r4, r0
 802a12c:	f7ea fa42 	bl	80145b4 <_ZN8touchgfx12CanvasWidgetC1Ev>
 802a130:	4b08      	ldr	r3, [pc, #32]	; (802a154 <_ZN8touchgfx6CircleC1Ev+0x2c>)
 802a132:	6023      	str	r3, [r4, #0]
 802a134:	f44f 5234 	mov.w	r2, #11520	; 0x2d00
 802a138:	2300      	movs	r3, #0
 802a13a:	e9c4 230f 	strd	r2, r3, [r4, #60]	; 0x3c
 802a13e:	f24b 4205 	movw	r2, #46085	; 0xb405
 802a142:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 802a146:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 802a14a:	f8a4 2044 	strh.w	r2, [r4, #68]	; 0x44
 802a14e:	60a3      	str	r3, [r4, #8]
 802a150:	4620      	mov	r0, r4
 802a152:	bd10      	pop	{r4, pc}
 802a154:	08032210 	.word	0x08032210

0802a158 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>:
 802a158:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a15c:	428a      	cmp	r2, r1
 802a15e:	4680      	mov	r8, r0
 802a160:	4610      	mov	r0, r2
 802a162:	4699      	mov	r9, r3
 802a164:	bfa6      	itte	ge
 802a166:	460a      	movge	r2, r1
 802a168:	4603      	movge	r3, r0
 802a16a:	460b      	movlt	r3, r1
 802a16c:	1a99      	subs	r1, r3, r2
 802a16e:	b085      	sub	sp, #20
 802a170:	f5b1 5f34 	cmp.w	r1, #11520	; 0x2d00
 802a174:	f8d8 4040 	ldr.w	r4, [r8, #64]	; 0x40
 802a178:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802a17a:	bfa4      	itt	ge
 802a17c:	f44f 5334 	movge.w	r3, #11520	; 0x2d00
 802a180:	2200      	movge	r2, #0
 802a182:	e9dd 760e 	ldrd	r7, r6, [sp, #56]	; 0x38
 802a186:	9300      	str	r3, [sp, #0]
 802a188:	f108 0a34 	add.w	sl, r8, #52	; 0x34
 802a18c:	f102 0b01 	add.w	fp, r2, #1
 802a190:	2c00      	cmp	r4, #0
 802a192:	f040 80af 	bne.w	802a2f4 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x19c>
 802a196:	4610      	mov	r0, r2
 802a198:	9201      	str	r2, [sp, #4]
 802a19a:	f7ea fb6f 	bl	801487c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a19e:	a903      	add	r1, sp, #12
 802a1a0:	9003      	str	r0, [sp, #12]
 802a1a2:	4650      	mov	r0, sl
 802a1a4:	f7ea fa32 	bl	801460c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a1a8:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 802a1ac:	9a01      	ldr	r2, [sp, #4]
 802a1ae:	4408      	add	r0, r1
 802a1b0:	f8d9 1000 	ldr.w	r1, [r9]
 802a1b4:	4281      	cmp	r1, r0
 802a1b6:	bfc8      	it	gt
 802a1b8:	f8c9 0000 	strgt.w	r0, [r9]
 802a1bc:	6839      	ldr	r1, [r7, #0]
 802a1be:	4288      	cmp	r0, r1
 802a1c0:	bfc8      	it	gt
 802a1c2:	6038      	strgt	r0, [r7, #0]
 802a1c4:	4610      	mov	r0, r2
 802a1c6:	f7ff ffa9 	bl	802a11c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a1ca:	a903      	add	r1, sp, #12
 802a1cc:	9003      	str	r0, [sp, #12]
 802a1ce:	4650      	mov	r0, sl
 802a1d0:	f7ea fa1c 	bl	801460c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a1d4:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 802a1d8:	1a10      	subs	r0, r2, r0
 802a1da:	6832      	ldr	r2, [r6, #0]
 802a1dc:	4282      	cmp	r2, r0
 802a1de:	bfc8      	it	gt
 802a1e0:	6030      	strgt	r0, [r6, #0]
 802a1e2:	682a      	ldr	r2, [r5, #0]
 802a1e4:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 802a1e8:	4290      	cmp	r0, r2
 802a1ea:	fb9b f2f1 	sdiv	r2, fp, r1
 802a1ee:	fb01 b212 	mls	r2, r1, r2, fp
 802a1f2:	eba1 0202 	sub.w	r2, r1, r2
 802a1f6:	bfc8      	it	gt
 802a1f8:	6028      	strgt	r0, [r5, #0]
 802a1fa:	fb92 f0f1 	sdiv	r0, r2, r1
 802a1fe:	fb01 2210 	mls	r2, r1, r0, r2
 802a202:	4493      	add	fp, r2
 802a204:	9b00      	ldr	r3, [sp, #0]
 802a206:	455b      	cmp	r3, fp
 802a208:	db2a      	blt.n	802a260 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x108>
 802a20a:	4658      	mov	r0, fp
 802a20c:	f7ea fb36 	bl	801487c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a210:	a903      	add	r1, sp, #12
 802a212:	9003      	str	r0, [sp, #12]
 802a214:	4650      	mov	r0, sl
 802a216:	f7ea f9f9 	bl	801460c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a21a:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 802a21e:	4410      	add	r0, r2
 802a220:	f8d9 2000 	ldr.w	r2, [r9]
 802a224:	4282      	cmp	r2, r0
 802a226:	bfc8      	it	gt
 802a228:	f8c9 0000 	strgt.w	r0, [r9]
 802a22c:	683a      	ldr	r2, [r7, #0]
 802a22e:	4290      	cmp	r0, r2
 802a230:	bfc8      	it	gt
 802a232:	6038      	strgt	r0, [r7, #0]
 802a234:	4658      	mov	r0, fp
 802a236:	f7ff ff71 	bl	802a11c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a23a:	a903      	add	r1, sp, #12
 802a23c:	9003      	str	r0, [sp, #12]
 802a23e:	4650      	mov	r0, sl
 802a240:	f7ea f9e4 	bl	801460c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a244:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 802a248:	1a10      	subs	r0, r2, r0
 802a24a:	6832      	ldr	r2, [r6, #0]
 802a24c:	4282      	cmp	r2, r0
 802a24e:	bfc8      	it	gt
 802a250:	6030      	strgt	r0, [r6, #0]
 802a252:	682a      	ldr	r2, [r5, #0]
 802a254:	4290      	cmp	r0, r2
 802a256:	bfc8      	it	gt
 802a258:	6028      	strgt	r0, [r5, #0]
 802a25a:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 802a25e:	e7d1      	b.n	802a204 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xac>
 802a260:	9b00      	ldr	r3, [sp, #0]
 802a262:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 802a266:	455b      	cmp	r3, fp
 802a268:	dd27      	ble.n	802a2ba <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x162>
 802a26a:	4618      	mov	r0, r3
 802a26c:	f7ea fb06 	bl	801487c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a270:	a903      	add	r1, sp, #12
 802a272:	9003      	str	r0, [sp, #12]
 802a274:	4650      	mov	r0, sl
 802a276:	f7ea f9c9 	bl	801460c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a27a:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 802a27e:	4410      	add	r0, r2
 802a280:	f8d9 2000 	ldr.w	r2, [r9]
 802a284:	4282      	cmp	r2, r0
 802a286:	bfc8      	it	gt
 802a288:	f8c9 0000 	strgt.w	r0, [r9]
 802a28c:	683a      	ldr	r2, [r7, #0]
 802a28e:	4290      	cmp	r0, r2
 802a290:	bfc8      	it	gt
 802a292:	6038      	strgt	r0, [r7, #0]
 802a294:	9800      	ldr	r0, [sp, #0]
 802a296:	f7ff ff41 	bl	802a11c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a29a:	a903      	add	r1, sp, #12
 802a29c:	9003      	str	r0, [sp, #12]
 802a29e:	4650      	mov	r0, sl
 802a2a0:	f7ea f9b4 	bl	801460c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a2a4:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 802a2a8:	1a10      	subs	r0, r2, r0
 802a2aa:	6832      	ldr	r2, [r6, #0]
 802a2ac:	4282      	cmp	r2, r0
 802a2ae:	bfc8      	it	gt
 802a2b0:	6030      	strgt	r0, [r6, #0]
 802a2b2:	682a      	ldr	r2, [r5, #0]
 802a2b4:	4290      	cmp	r0, r2
 802a2b6:	bfc8      	it	gt
 802a2b8:	6028      	strgt	r0, [r5, #0]
 802a2ba:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 802a2be:	f8d9 1000 	ldr.w	r1, [r9]
 802a2c2:	4291      	cmp	r1, r2
 802a2c4:	bfc8      	it	gt
 802a2c6:	f8c9 2000 	strgt.w	r2, [r9]
 802a2ca:	683a      	ldr	r2, [r7, #0]
 802a2cc:	f8d8 302c 	ldr.w	r3, [r8, #44]	; 0x2c
 802a2d0:	429a      	cmp	r2, r3
 802a2d2:	bfb8      	it	lt
 802a2d4:	603b      	strlt	r3, [r7, #0]
 802a2d6:	6832      	ldr	r2, [r6, #0]
 802a2d8:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 802a2dc:	429a      	cmp	r2, r3
 802a2de:	bfc8      	it	gt
 802a2e0:	6033      	strgt	r3, [r6, #0]
 802a2e2:	682a      	ldr	r2, [r5, #0]
 802a2e4:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 802a2e8:	429a      	cmp	r2, r3
 802a2ea:	da00      	bge.n	802a2ee <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 802a2ec:	602b      	str	r3, [r5, #0]
 802a2ee:	b005      	add	sp, #20
 802a2f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802a2f4:	2002      	movs	r0, #2
 802a2f6:	3401      	adds	r4, #1
 802a2f8:	fb94 f4f0 	sdiv	r4, r4, r0
 802a2fc:	4610      	mov	r0, r2
 802a2fe:	9201      	str	r2, [sp, #4]
 802a300:	f7ea fabc 	bl	801487c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a304:	a903      	add	r1, sp, #12
 802a306:	9003      	str	r0, [sp, #12]
 802a308:	4650      	mov	r0, sl
 802a30a:	f7ea f97f 	bl	801460c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a30e:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 802a312:	9a01      	ldr	r2, [sp, #4]
 802a314:	4408      	add	r0, r1
 802a316:	f8d9 1000 	ldr.w	r1, [r9]
 802a31a:	1b03      	subs	r3, r0, r4
 802a31c:	4299      	cmp	r1, r3
 802a31e:	bfc8      	it	gt
 802a320:	f8c9 3000 	strgt.w	r3, [r9]
 802a324:	6839      	ldr	r1, [r7, #0]
 802a326:	428b      	cmp	r3, r1
 802a328:	bfc8      	it	gt
 802a32a:	603b      	strgt	r3, [r7, #0]
 802a32c:	f8d9 1000 	ldr.w	r1, [r9]
 802a330:	4420      	add	r0, r4
 802a332:	4281      	cmp	r1, r0
 802a334:	bfc8      	it	gt
 802a336:	f8c9 0000 	strgt.w	r0, [r9]
 802a33a:	6839      	ldr	r1, [r7, #0]
 802a33c:	4288      	cmp	r0, r1
 802a33e:	bfc8      	it	gt
 802a340:	6038      	strgt	r0, [r7, #0]
 802a342:	4610      	mov	r0, r2
 802a344:	f7ff feea 	bl	802a11c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a348:	a903      	add	r1, sp, #12
 802a34a:	9003      	str	r0, [sp, #12]
 802a34c:	4650      	mov	r0, sl
 802a34e:	f7ea f95d 	bl	801460c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a352:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 802a356:	1a10      	subs	r0, r2, r0
 802a358:	6832      	ldr	r2, [r6, #0]
 802a35a:	1b01      	subs	r1, r0, r4
 802a35c:	428a      	cmp	r2, r1
 802a35e:	bfc8      	it	gt
 802a360:	6031      	strgt	r1, [r6, #0]
 802a362:	682a      	ldr	r2, [r5, #0]
 802a364:	4291      	cmp	r1, r2
 802a366:	bfc8      	it	gt
 802a368:	6029      	strgt	r1, [r5, #0]
 802a36a:	6832      	ldr	r2, [r6, #0]
 802a36c:	4420      	add	r0, r4
 802a36e:	4282      	cmp	r2, r0
 802a370:	bfc8      	it	gt
 802a372:	6030      	strgt	r0, [r6, #0]
 802a374:	682a      	ldr	r2, [r5, #0]
 802a376:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 802a37a:	4290      	cmp	r0, r2
 802a37c:	fb9b f2f1 	sdiv	r2, fp, r1
 802a380:	fb01 b212 	mls	r2, r1, r2, fp
 802a384:	eba1 0202 	sub.w	r2, r1, r2
 802a388:	bfc8      	it	gt
 802a38a:	6028      	strgt	r0, [r5, #0]
 802a38c:	fb92 f0f1 	sdiv	r0, r2, r1
 802a390:	fb01 2210 	mls	r2, r1, r0, r2
 802a394:	4493      	add	fp, r2
 802a396:	9b00      	ldr	r3, [sp, #0]
 802a398:	455b      	cmp	r3, fp
 802a39a:	db40      	blt.n	802a41e <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x2c6>
 802a39c:	4658      	mov	r0, fp
 802a39e:	f7ea fa6d 	bl	801487c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a3a2:	a903      	add	r1, sp, #12
 802a3a4:	9003      	str	r0, [sp, #12]
 802a3a6:	4650      	mov	r0, sl
 802a3a8:	f7ea f930 	bl	801460c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a3ac:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 802a3b0:	4410      	add	r0, r2
 802a3b2:	f8d9 2000 	ldr.w	r2, [r9]
 802a3b6:	1b01      	subs	r1, r0, r4
 802a3b8:	428a      	cmp	r2, r1
 802a3ba:	bfc8      	it	gt
 802a3bc:	f8c9 1000 	strgt.w	r1, [r9]
 802a3c0:	683a      	ldr	r2, [r7, #0]
 802a3c2:	4291      	cmp	r1, r2
 802a3c4:	bfc8      	it	gt
 802a3c6:	6039      	strgt	r1, [r7, #0]
 802a3c8:	f8d9 2000 	ldr.w	r2, [r9]
 802a3cc:	4420      	add	r0, r4
 802a3ce:	4282      	cmp	r2, r0
 802a3d0:	bfc8      	it	gt
 802a3d2:	f8c9 0000 	strgt.w	r0, [r9]
 802a3d6:	683a      	ldr	r2, [r7, #0]
 802a3d8:	4290      	cmp	r0, r2
 802a3da:	bfc8      	it	gt
 802a3dc:	6038      	strgt	r0, [r7, #0]
 802a3de:	4658      	mov	r0, fp
 802a3e0:	f7ff fe9c 	bl	802a11c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a3e4:	a903      	add	r1, sp, #12
 802a3e6:	9003      	str	r0, [sp, #12]
 802a3e8:	4650      	mov	r0, sl
 802a3ea:	f7ea f90f 	bl	801460c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a3ee:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 802a3f2:	1a10      	subs	r0, r2, r0
 802a3f4:	6832      	ldr	r2, [r6, #0]
 802a3f6:	1b01      	subs	r1, r0, r4
 802a3f8:	428a      	cmp	r2, r1
 802a3fa:	bfc8      	it	gt
 802a3fc:	6031      	strgt	r1, [r6, #0]
 802a3fe:	682a      	ldr	r2, [r5, #0]
 802a400:	4291      	cmp	r1, r2
 802a402:	bfc8      	it	gt
 802a404:	6029      	strgt	r1, [r5, #0]
 802a406:	6832      	ldr	r2, [r6, #0]
 802a408:	4420      	add	r0, r4
 802a40a:	4282      	cmp	r2, r0
 802a40c:	bfc8      	it	gt
 802a40e:	6030      	strgt	r0, [r6, #0]
 802a410:	682a      	ldr	r2, [r5, #0]
 802a412:	4290      	cmp	r0, r2
 802a414:	bfc8      	it	gt
 802a416:	6028      	strgt	r0, [r5, #0]
 802a418:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 802a41c:	e7bb      	b.n	802a396 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x23e>
 802a41e:	9b00      	ldr	r3, [sp, #0]
 802a420:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 802a424:	455b      	cmp	r3, fp
 802a426:	f77f af62 	ble.w	802a2ee <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 802a42a:	4618      	mov	r0, r3
 802a42c:	f7ea fa26 	bl	801487c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a430:	a903      	add	r1, sp, #12
 802a432:	9003      	str	r0, [sp, #12]
 802a434:	4650      	mov	r0, sl
 802a436:	f7ea f8e9 	bl	801460c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a43a:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 802a43e:	4410      	add	r0, r2
 802a440:	f8d9 2000 	ldr.w	r2, [r9]
 802a444:	1b01      	subs	r1, r0, r4
 802a446:	428a      	cmp	r2, r1
 802a448:	bfc8      	it	gt
 802a44a:	f8c9 1000 	strgt.w	r1, [r9]
 802a44e:	683a      	ldr	r2, [r7, #0]
 802a450:	4291      	cmp	r1, r2
 802a452:	bfc8      	it	gt
 802a454:	6039      	strgt	r1, [r7, #0]
 802a456:	f8d9 2000 	ldr.w	r2, [r9]
 802a45a:	4420      	add	r0, r4
 802a45c:	4282      	cmp	r2, r0
 802a45e:	bfc8      	it	gt
 802a460:	f8c9 0000 	strgt.w	r0, [r9]
 802a464:	683b      	ldr	r3, [r7, #0]
 802a466:	4298      	cmp	r0, r3
 802a468:	bfc8      	it	gt
 802a46a:	6038      	strgt	r0, [r7, #0]
 802a46c:	9800      	ldr	r0, [sp, #0]
 802a46e:	f7ff fe55 	bl	802a11c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a472:	a903      	add	r1, sp, #12
 802a474:	9003      	str	r0, [sp, #12]
 802a476:	4650      	mov	r0, sl
 802a478:	f7ea f8c8 	bl	801460c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a47c:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 802a480:	6832      	ldr	r2, [r6, #0]
 802a482:	1a18      	subs	r0, r3, r0
 802a484:	1b03      	subs	r3, r0, r4
 802a486:	429a      	cmp	r2, r3
 802a488:	bfc8      	it	gt
 802a48a:	6033      	strgt	r3, [r6, #0]
 802a48c:	682a      	ldr	r2, [r5, #0]
 802a48e:	4293      	cmp	r3, r2
 802a490:	bfc8      	it	gt
 802a492:	602b      	strgt	r3, [r5, #0]
 802a494:	6833      	ldr	r3, [r6, #0]
 802a496:	4404      	add	r4, r0
 802a498:	42a3      	cmp	r3, r4
 802a49a:	bfc8      	it	gt
 802a49c:	6034      	strgt	r4, [r6, #0]
 802a49e:	682b      	ldr	r3, [r5, #0]
 802a4a0:	429c      	cmp	r4, r3
 802a4a2:	bfc8      	it	gt
 802a4a4:	602c      	strgt	r4, [r5, #0]
 802a4a6:	e722      	b.n	802a2ee <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>

0802a4a8 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>:
 802a4a8:	b530      	push	{r4, r5, lr}
 802a4aa:	4604      	mov	r4, r0
 802a4ac:	4608      	mov	r0, r1
 802a4ae:	4611      	mov	r1, r2
 802a4b0:	461a      	mov	r2, r3
 802a4b2:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 802a4b6:	b089      	sub	sp, #36	; 0x24
 802a4b8:	015b      	lsls	r3, r3, #5
 802a4ba:	9304      	str	r3, [sp, #16]
 802a4bc:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 802a4c0:	2500      	movs	r5, #0
 802a4c2:	015b      	lsls	r3, r3, #5
 802a4c4:	e9cd 3506 	strd	r3, r5, [sp, #24]
 802a4c8:	ab07      	add	r3, sp, #28
 802a4ca:	9302      	str	r3, [sp, #8]
 802a4cc:	ab06      	add	r3, sp, #24
 802a4ce:	9301      	str	r3, [sp, #4]
 802a4d0:	ab05      	add	r3, sp, #20
 802a4d2:	9300      	str	r3, [sp, #0]
 802a4d4:	ab04      	add	r3, sp, #16
 802a4d6:	9505      	str	r5, [sp, #20]
 802a4d8:	f7ff fe3e 	bl	802a158 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>
 802a4dc:	2520      	movs	r5, #32
 802a4de:	9a04      	ldr	r2, [sp, #16]
 802a4e0:	9805      	ldr	r0, [sp, #20]
 802a4e2:	fb92 f2f5 	sdiv	r2, r2, r5
 802a4e6:	fb90 f0f5 	sdiv	r0, r0, r5
 802a4ea:	b292      	uxth	r2, r2
 802a4ec:	3002      	adds	r0, #2
 802a4ee:	1a80      	subs	r0, r0, r2
 802a4f0:	9b06      	ldr	r3, [sp, #24]
 802a4f2:	9907      	ldr	r1, [sp, #28]
 802a4f4:	fb93 f3f5 	sdiv	r3, r3, r5
 802a4f8:	fb91 f1f5 	sdiv	r1, r1, r5
 802a4fc:	b29b      	uxth	r3, r3
 802a4fe:	3102      	adds	r1, #2
 802a500:	1ac9      	subs	r1, r1, r3
 802a502:	3a01      	subs	r2, #1
 802a504:	3b01      	subs	r3, #1
 802a506:	80a0      	strh	r0, [r4, #4]
 802a508:	4620      	mov	r0, r4
 802a50a:	8022      	strh	r2, [r4, #0]
 802a50c:	8063      	strh	r3, [r4, #2]
 802a50e:	80e1      	strh	r1, [r4, #6]
 802a510:	b009      	add	sp, #36	; 0x24
 802a512:	bd30      	pop	{r4, r5, pc}

0802a514 <_ZNK8touchgfx6Circle14getMinimalRectEv>:
 802a514:	b510      	push	{r4, lr}
 802a516:	e9d1 230e 	ldrd	r2, r3, [r1, #56]	; 0x38
 802a51a:	4604      	mov	r4, r0
 802a51c:	f7ff ffc4 	bl	802a4a8 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 802a520:	4620      	mov	r0, r4
 802a522:	bd10      	pop	{r4, pc}

0802a524 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>:
 802a524:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802a526:	e9d1 540e 	ldrd	r5, r4, [r1, #56]	; 0x38
 802a52a:	4606      	mov	r6, r0
 802a52c:	f891 0044 	ldrb.w	r0, [r1, #68]	; 0x44
 802a530:	6813      	ldr	r3, [r2, #0]
 802a532:	42a5      	cmp	r5, r4
 802a534:	ea4f 1040 	mov.w	r0, r0, lsl #5
 802a538:	da2b      	bge.n	802a592 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x6e>
 802a53a:	42a3      	cmp	r3, r4
 802a53c:	dd14      	ble.n	802a568 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x44>
 802a53e:	b168      	cbz	r0, 802a55c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 802a540:	4267      	negs	r7, r4
 802a542:	fb97 f2f0 	sdiv	r2, r7, r0
 802a546:	fb00 7212 	mls	r2, r0, r2, r7
 802a54a:	1a82      	subs	r2, r0, r2
 802a54c:	fb92 f7f0 	sdiv	r7, r2, r0
 802a550:	fb00 2017 	mls	r0, r0, r7, r2
 802a554:	1a24      	subs	r4, r4, r0
 802a556:	42ac      	cmp	r4, r5
 802a558:	bfb8      	it	lt
 802a55a:	462c      	movlt	r4, r5
 802a55c:	4630      	mov	r0, r6
 802a55e:	4622      	mov	r2, r4
 802a560:	f7ff ffa2 	bl	802a4a8 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 802a564:	4630      	mov	r0, r6
 802a566:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802a568:	42ab      	cmp	r3, r5
 802a56a:	dd0e      	ble.n	802a58a <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 802a56c:	b168      	cbz	r0, 802a58a <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 802a56e:	425f      	negs	r7, r3
 802a570:	fb97 f2f0 	sdiv	r2, r7, r0
 802a574:	fb00 7212 	mls	r2, r0, r2, r7
 802a578:	1a82      	subs	r2, r0, r2
 802a57a:	fb92 f7f0 	sdiv	r7, r2, r0
 802a57e:	fb00 2017 	mls	r0, r0, r7, r2
 802a582:	1a1b      	subs	r3, r3, r0
 802a584:	42ab      	cmp	r3, r5
 802a586:	bfb8      	it	lt
 802a588:	462b      	movlt	r3, r5
 802a58a:	4622      	mov	r2, r4
 802a58c:	461c      	mov	r4, r3
 802a58e:	4613      	mov	r3, r2
 802a590:	e7e4      	b.n	802a55c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 802a592:	42a3      	cmp	r3, r4
 802a594:	da10      	bge.n	802a5b8 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x94>
 802a596:	b148      	cbz	r0, 802a5ac <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x88>
 802a598:	fb94 f2f0 	sdiv	r2, r4, r0
 802a59c:	fb00 4212 	mls	r2, r0, r2, r4
 802a5a0:	1a82      	subs	r2, r0, r2
 802a5a2:	fb92 f7f0 	sdiv	r7, r2, r0
 802a5a6:	fb00 2017 	mls	r0, r0, r7, r2
 802a5aa:	4404      	add	r4, r0
 802a5ac:	42a5      	cmp	r5, r4
 802a5ae:	bfa8      	it	ge
 802a5b0:	4625      	movge	r5, r4
 802a5b2:	461c      	mov	r4, r3
 802a5b4:	462b      	mov	r3, r5
 802a5b6:	e7d1      	b.n	802a55c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 802a5b8:	42ab      	cmp	r3, r5
 802a5ba:	dacf      	bge.n	802a55c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 802a5bc:	2800      	cmp	r0, #0
 802a5be:	d0cd      	beq.n	802a55c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 802a5c0:	fb93 f2f0 	sdiv	r2, r3, r0
 802a5c4:	fb00 3212 	mls	r2, r0, r2, r3
 802a5c8:	1a82      	subs	r2, r0, r2
 802a5ca:	fb92 f7f0 	sdiv	r7, r2, r0
 802a5ce:	fb00 2017 	mls	r0, r0, r7, r2
 802a5d2:	4403      	add	r3, r0
 802a5d4:	42ab      	cmp	r3, r5
 802a5d6:	bfa8      	it	ge
 802a5d8:	462b      	movge	r3, r5
 802a5da:	e7bf      	b.n	802a55c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>

0802a5dc <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE>:
 802a5dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a5e0:	e9d0 560e 	ldrd	r5, r6, [r0, #56]	; 0x38
 802a5e4:	42ae      	cmp	r6, r5
 802a5e6:	bfa2      	ittt	ge
 802a5e8:	4633      	movge	r3, r6
 802a5ea:	462e      	movge	r6, r5
 802a5ec:	461d      	movge	r5, r3
 802a5ee:	1bab      	subs	r3, r5, r6
 802a5f0:	468b      	mov	fp, r1
 802a5f2:	6c01      	ldr	r1, [r0, #64]	; 0x40
 802a5f4:	f9b0 902c 	ldrsh.w	r9, [r0, #44]	; 0x2c
 802a5f8:	f9b0 a030 	ldrsh.w	sl, [r0, #48]	; 0x30
 802a5fc:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 802a600:	f04f 0220 	mov.w	r2, #32
 802a604:	b0ab      	sub	sp, #172	; 0xac
 802a606:	4604      	mov	r4, r0
 802a608:	bfa4      	itt	ge
 802a60a:	f44f 5534 	movge.w	r5, #11520	; 0x2d00
 802a60e:	2600      	movge	r6, #0
 802a610:	fb99 f9f2 	sdiv	r9, r9, r2
 802a614:	fb9a faf2 	sdiv	sl, sl, r2
 802a618:	6b43      	ldr	r3, [r0, #52]	; 0x34
 802a61a:	2900      	cmp	r1, #0
 802a61c:	f000 80f5 	beq.w	802a80a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x22e>
 802a620:	f9bb 0000 	ldrsh.w	r0, [fp]
 802a624:	f9bb 2002 	ldrsh.w	r2, [fp, #2]
 802a628:	eba9 0700 	sub.w	r7, r9, r0
 802a62c:	ea87 7ce7 	eor.w	ip, r7, r7, asr #31
 802a630:	ebac 7ce7 	sub.w	ip, ip, r7, asr #31
 802a634:	f8bb 7004 	ldrh.w	r7, [fp, #4]
 802a638:	ebaa 0802 	sub.w	r8, sl, r2
 802a63c:	4407      	add	r7, r0
 802a63e:	ea88 70e8 	eor.w	r0, r8, r8, asr #31
 802a642:	eba0 70e8 	sub.w	r0, r0, r8, asr #31
 802a646:	f8bb 8006 	ldrh.w	r8, [fp, #6]
 802a64a:	b23f      	sxth	r7, r7
 802a64c:	4490      	add	r8, r2
 802a64e:	eba9 0707 	sub.w	r7, r9, r7
 802a652:	fa0f f888 	sxth.w	r8, r8
 802a656:	ebaa 0808 	sub.w	r8, sl, r8
 802a65a:	2f00      	cmp	r7, #0
 802a65c:	bfb8      	it	lt
 802a65e:	427f      	neglt	r7, r7
 802a660:	f1b8 0f00 	cmp.w	r8, #0
 802a664:	bfb8      	it	lt
 802a666:	f1c8 0800 	rsblt	r8, r8, #0
 802a66a:	45bc      	cmp	ip, r7
 802a66c:	bfcc      	ite	gt
 802a66e:	f10c 0701 	addgt.w	r7, ip, #1
 802a672:	3701      	addle	r7, #1
 802a674:	4540      	cmp	r0, r8
 802a676:	bfc8      	it	gt
 802a678:	f100 0801 	addgt.w	r8, r0, #1
 802a67c:	f894 0044 	ldrb.w	r0, [r4, #68]	; 0x44
 802a680:	f100 0001 	add.w	r0, r0, #1
 802a684:	ea4f 0060 	mov.w	r0, r0, asr #1
 802a688:	f04f 0202 	mov.w	r2, #2
 802a68c:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 802a690:	fb91 f1f2 	sdiv	r1, r1, r2
 802a694:	eba3 0301 	sub.w	r3, r3, r1
 802a698:	bfd8      	it	le
 802a69a:	f108 0801 	addle.w	r8, r8, #1
 802a69e:	9201      	str	r2, [sp, #4]
 802a6a0:	930d      	str	r3, [sp, #52]	; 0x34
 802a6a2:	f7ea f8cb 	bl	801483c <_ZN8touchgfx7CWRUtil4sineEi>
 802a6a6:	a92a      	add	r1, sp, #168	; 0xa8
 802a6a8:	fb08 f808 	mul.w	r8, r8, r8
 802a6ac:	f841 0d70 	str.w	r0, [r1, #-112]!
 802a6b0:	a80d      	add	r0, sp, #52	; 0x34
 802a6b2:	f7e9 ffab 	bl	801460c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a6b6:	fb07 8707 	mla	r7, r7, r7, r8
 802a6ba:	f04f 0c20 	mov.w	ip, #32
 802a6be:	fb90 f0fc 	sdiv	r0, r0, ip
 802a6c2:	4340      	muls	r0, r0
 802a6c4:	4287      	cmp	r7, r0
 802a6c6:	9a01      	ldr	r2, [sp, #4]
 802a6c8:	da04      	bge.n	802a6d4 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf8>
 802a6ca:	2401      	movs	r4, #1
 802a6cc:	4620      	mov	r0, r4
 802a6ce:	b02b      	add	sp, #172	; 0xac
 802a6d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802a6d4:	6b60      	ldr	r0, [r4, #52]	; 0x34
 802a6d6:	6c21      	ldr	r1, [r4, #64]	; 0x40
 802a6d8:	fb91 f3f2 	sdiv	r3, r1, r2
 802a6dc:	4403      	add	r3, r0
 802a6de:	fb93 f3fc 	sdiv	r3, r3, ip
 802a6e2:	f9bb 1000 	ldrsh.w	r1, [fp]
 802a6e6:	f8bb 2004 	ldrh.w	r2, [fp, #4]
 802a6ea:	440a      	add	r2, r1
 802a6ec:	b212      	sxth	r2, r2
 802a6ee:	454a      	cmp	r2, r9
 802a6f0:	bfa8      	it	ge
 802a6f2:	464a      	movge	r2, r9
 802a6f4:	428a      	cmp	r2, r1
 802a6f6:	bfac      	ite	ge
 802a6f8:	eba9 0902 	subge.w	r9, r9, r2
 802a6fc:	eba9 0901 	sublt.w	r9, r9, r1
 802a700:	f8bb 2006 	ldrh.w	r2, [fp, #6]
 802a704:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 802a708:	440a      	add	r2, r1
 802a70a:	b212      	sxth	r2, r2
 802a70c:	4552      	cmp	r2, sl
 802a70e:	bfa8      	it	ge
 802a710:	4652      	movge	r2, sl
 802a712:	428a      	cmp	r2, r1
 802a714:	bfac      	ite	ge
 802a716:	ebaa 0a02 	subge.w	sl, sl, r2
 802a71a:	ebaa 0a01 	sublt.w	sl, sl, r1
 802a71e:	3301      	adds	r3, #1
 802a720:	fb0a fa0a 	mul.w	sl, sl, sl
 802a724:	fb09 a909 	mla	r9, r9, r9, sl
 802a728:	435b      	muls	r3, r3
 802a72a:	4599      	cmp	r9, r3
 802a72c:	dccd      	bgt.n	802a6ca <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xee>
 802a72e:	465a      	mov	r2, fp
 802a730:	4621      	mov	r1, r4
 802a732:	a80e      	add	r0, sp, #56	; 0x38
 802a734:	f7ff faae 	bl	8029c94 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 802a738:	6b62      	ldr	r2, [r4, #52]	; 0x34
 802a73a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 802a73c:	9209      	str	r2, [sp, #36]	; 0x24
 802a73e:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
 802a742:	930a      	str	r3, [sp, #40]	; 0x28
 802a744:	dd07      	ble.n	802a756 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x17a>
 802a746:	2102      	movs	r1, #2
 802a748:	fb93 f3f1 	sdiv	r3, r3, r1
 802a74c:	4413      	add	r3, r2
 802a74e:	930a      	str	r3, [sp, #40]	; 0x28
 802a750:	fb93 f3f1 	sdiv	r3, r3, r1
 802a754:	9309      	str	r3, [sp, #36]	; 0x24
 802a756:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 802a75a:	4630      	mov	r0, r6
 802a75c:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 802a760:	930b      	str	r3, [sp, #44]	; 0x2c
 802a762:	f894 7044 	ldrb.w	r7, [r4, #68]	; 0x44
 802a766:	f7ea f889 	bl	801487c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a76a:	f10d 09a8 	add.w	r9, sp, #168	; 0xa8
 802a76e:	f04f 0a02 	mov.w	sl, #2
 802a772:	f849 0d74 	str.w	r0, [r9, #-116]!
 802a776:	a80b      	add	r0, sp, #44	; 0x2c
 802a778:	4649      	mov	r1, r9
 802a77a:	f7e9 ff47 	bl	801460c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a77e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 802a780:	fb90 f0fa 	sdiv	r0, r0, sl
 802a784:	eb00 0b03 	add.w	fp, r0, r3
 802a788:	4630      	mov	r0, r6
 802a78a:	f7ff fcc7 	bl	802a11c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a78e:	f10d 08a8 	add.w	r8, sp, #168	; 0xa8
 802a792:	017f      	lsls	r7, r7, #5
 802a794:	f848 0d78 	str.w	r0, [r8, #-120]!
 802a798:	a80b      	add	r0, sp, #44	; 0x2c
 802a79a:	4641      	mov	r1, r8
 802a79c:	f7e9 ff36 	bl	801460c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a7a0:	6b22      	ldr	r2, [r4, #48]	; 0x30
 802a7a2:	fb90 f0fa 	sdiv	r0, r0, sl
 802a7a6:	4659      	mov	r1, fp
 802a7a8:	1a12      	subs	r2, r2, r0
 802a7aa:	a80e      	add	r0, sp, #56	; 0x38
 802a7ac:	f7ff fbf2 	bl	8029f94 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 802a7b0:	f106 0a20 	add.w	sl, r6, #32
 802a7b4:	bb67      	cbnz	r7, 802a810 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x234>
 802a7b6:	46b3      	mov	fp, r6
 802a7b8:	45aa      	cmp	sl, r5
 802a7ba:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802a7bc:	dc33      	bgt.n	802a826 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x24a>
 802a7be:	9909      	ldr	r1, [sp, #36]	; 0x24
 802a7c0:	4650      	mov	r0, sl
 802a7c2:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 802a7c6:	920b      	str	r2, [sp, #44]	; 0x2c
 802a7c8:	f7ea f858 	bl	801487c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a7cc:	4641      	mov	r1, r8
 802a7ce:	900c      	str	r0, [sp, #48]	; 0x30
 802a7d0:	a80b      	add	r0, sp, #44	; 0x2c
 802a7d2:	f7e9 ff1b 	bl	801460c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a7d6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 802a7d8:	2302      	movs	r3, #2
 802a7da:	fb90 f0f3 	sdiv	r0, r0, r3
 802a7de:	eb00 0b02 	add.w	fp, r0, r2
 802a7e2:	4650      	mov	r0, sl
 802a7e4:	f7ff fc9a 	bl	802a11c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a7e8:	4649      	mov	r1, r9
 802a7ea:	900d      	str	r0, [sp, #52]	; 0x34
 802a7ec:	a80b      	add	r0, sp, #44	; 0x2c
 802a7ee:	f7e9 ff0d 	bl	801460c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a7f2:	6b22      	ldr	r2, [r4, #48]	; 0x30
 802a7f4:	2302      	movs	r3, #2
 802a7f6:	4659      	mov	r1, fp
 802a7f8:	fb90 f0f3 	sdiv	r0, r0, r3
 802a7fc:	1a12      	subs	r2, r2, r0
 802a7fe:	a80e      	add	r0, sp, #56	; 0x38
 802a800:	46d3      	mov	fp, sl
 802a802:	f7ff fc14 	bl	802a02e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802a806:	44ba      	add	sl, r7
 802a808:	e7d6      	b.n	802a7b8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1dc>
 802a80a:	fb93 f3f2 	sdiv	r3, r3, r2
 802a80e:	e768      	b.n	802a6e2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x106>
 802a810:	fb9a f2f7 	sdiv	r2, sl, r7
 802a814:	fb07 a212 	mls	r2, r7, r2, sl
 802a818:	1aba      	subs	r2, r7, r2
 802a81a:	fb92 f1f7 	sdiv	r1, r2, r7
 802a81e:	fb07 2211 	mls	r2, r7, r1, r2
 802a822:	4492      	add	sl, r2
 802a824:	e7c7      	b.n	802a7b6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1da>
 802a826:	45ab      	cmp	fp, r5
 802a828:	da23      	bge.n	802a872 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x296>
 802a82a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802a82c:	4628      	mov	r0, r5
 802a82e:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 802a832:	920b      	str	r2, [sp, #44]	; 0x2c
 802a834:	f7ea f822 	bl	801487c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a838:	4641      	mov	r1, r8
 802a83a:	900c      	str	r0, [sp, #48]	; 0x30
 802a83c:	a80b      	add	r0, sp, #44	; 0x2c
 802a83e:	f7e9 fee5 	bl	801460c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a842:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 802a844:	f04f 0a02 	mov.w	sl, #2
 802a848:	fb90 f0fa 	sdiv	r0, r0, sl
 802a84c:	4403      	add	r3, r0
 802a84e:	4628      	mov	r0, r5
 802a850:	9301      	str	r3, [sp, #4]
 802a852:	f7ff fc63 	bl	802a11c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a856:	4649      	mov	r1, r9
 802a858:	900d      	str	r0, [sp, #52]	; 0x34
 802a85a:	a80b      	add	r0, sp, #44	; 0x2c
 802a85c:	f7e9 fed6 	bl	801460c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a860:	6b22      	ldr	r2, [r4, #48]	; 0x30
 802a862:	9b01      	ldr	r3, [sp, #4]
 802a864:	fb90 f0fa 	sdiv	r0, r0, sl
 802a868:	4619      	mov	r1, r3
 802a86a:	1a12      	subs	r2, r2, r0
 802a86c:	a80e      	add	r0, sp, #56	; 0x38
 802a86e:	f7ff fbde 	bl	802a02e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802a872:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802a874:	b99b      	cbnz	r3, 802a89e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c2>
 802a876:	1bad      	subs	r5, r5, r6
 802a878:	f5b5 5f34 	cmp.w	r5, #11520	; 0x2d00
 802a87c:	da04      	bge.n	802a888 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 802a87e:	e9d4 120b 	ldrd	r1, r2, [r4, #44]	; 0x2c
 802a882:	a80e      	add	r0, sp, #56	; 0x38
 802a884:	f7ff fbd3 	bl	802a02e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802a888:	21ff      	movs	r1, #255	; 0xff
 802a88a:	a80e      	add	r0, sp, #56	; 0x38
 802a88c:	f7ff fabe 	bl	8029e0c <_ZN8touchgfx6Canvas6renderEh>
 802a890:	4604      	mov	r4, r0
 802a892:	4b8a      	ldr	r3, [pc, #552]	; (802aabc <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4e0>)
 802a894:	930e      	str	r3, [sp, #56]	; 0x38
 802a896:	a816      	add	r0, sp, #88	; 0x58
 802a898:	f7eb fcf0 	bl	801627c <_ZN8touchgfx7OutlineD1Ev>
 802a89c:	e716      	b.n	802a6cc <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf0>
 802a89e:	e9dd 2317 	ldrd	r2, r3, [sp, #92]	; 0x5c
 802a8a2:	429a      	cmp	r2, r3
 802a8a4:	f0c0 8107 	bcc.w	802aab6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4da>
 802a8a8:	1bab      	subs	r3, r5, r6
 802a8aa:	f894 a045 	ldrb.w	sl, [r4, #69]	; 0x45
 802a8ae:	9301      	str	r3, [sp, #4]
 802a8b0:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 802a8b4:	ea4f 1a4a 	mov.w	sl, sl, lsl #5
 802a8b8:	da43      	bge.n	802a942 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 802a8ba:	4628      	mov	r0, r5
 802a8bc:	f7e9 ffde 	bl	801487c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a8c0:	4649      	mov	r1, r9
 802a8c2:	900d      	str	r0, [sp, #52]	; 0x34
 802a8c4:	a809      	add	r0, sp, #36	; 0x24
 802a8c6:	f7e9 fea1 	bl	801460c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a8ca:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 802a8cc:	18c3      	adds	r3, r0, r3
 802a8ce:	4628      	mov	r0, r5
 802a8d0:	9303      	str	r3, [sp, #12]
 802a8d2:	f7ff fc23 	bl	802a11c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a8d6:	4649      	mov	r1, r9
 802a8d8:	900d      	str	r0, [sp, #52]	; 0x34
 802a8da:	a809      	add	r0, sp, #36	; 0x24
 802a8dc:	f7e9 fe96 	bl	801460c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a8e0:	6b23      	ldr	r3, [r4, #48]	; 0x30
 802a8e2:	f505 52b4 	add.w	r2, r5, #5760	; 0x1680
 802a8e6:	1a1b      	subs	r3, r3, r0
 802a8e8:	9302      	str	r3, [sp, #8]
 802a8ea:	9204      	str	r2, [sp, #16]
 802a8ec:	eb0a 0305 	add.w	r3, sl, r5
 802a8f0:	9a04      	ldr	r2, [sp, #16]
 802a8f2:	4293      	cmp	r3, r2
 802a8f4:	da25      	bge.n	802a942 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 802a8f6:	4618      	mov	r0, r3
 802a8f8:	9306      	str	r3, [sp, #24]
 802a8fa:	f7e9 ffbf 	bl	801487c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a8fe:	4649      	mov	r1, r9
 802a900:	900d      	str	r0, [sp, #52]	; 0x34
 802a902:	a80a      	add	r0, sp, #40	; 0x28
 802a904:	f7e9 fe82 	bl	801460c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a908:	9b03      	ldr	r3, [sp, #12]
 802a90a:	2202      	movs	r2, #2
 802a90c:	fb90 f0f2 	sdiv	r0, r0, r2
 802a910:	18c3      	adds	r3, r0, r3
 802a912:	9305      	str	r3, [sp, #20]
 802a914:	9b06      	ldr	r3, [sp, #24]
 802a916:	9207      	str	r2, [sp, #28]
 802a918:	4618      	mov	r0, r3
 802a91a:	f7ff fbff 	bl	802a11c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a91e:	a92a      	add	r1, sp, #168	; 0xa8
 802a920:	f841 0d78 	str.w	r0, [r1, #-120]!
 802a924:	a80a      	add	r0, sp, #40	; 0x28
 802a926:	f7e9 fe71 	bl	801460c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a92a:	9b02      	ldr	r3, [sp, #8]
 802a92c:	9a07      	ldr	r2, [sp, #28]
 802a92e:	9905      	ldr	r1, [sp, #20]
 802a930:	fb90 f2f2 	sdiv	r2, r0, r2
 802a934:	a80e      	add	r0, sp, #56	; 0x38
 802a936:	1a9a      	subs	r2, r3, r2
 802a938:	f7ff fb79 	bl	802a02e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802a93c:	9b06      	ldr	r3, [sp, #24]
 802a93e:	4453      	add	r3, sl
 802a940:	e7d6      	b.n	802a8f0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x314>
 802a942:	45ab      	cmp	fp, r5
 802a944:	da25      	bge.n	802a992 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3b6>
 802a946:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 802a94a:	4628      	mov	r0, r5
 802a94c:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 802a950:	930b      	str	r3, [sp, #44]	; 0x2c
 802a952:	f7e9 ff93 	bl	801487c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a956:	4641      	mov	r1, r8
 802a958:	900c      	str	r0, [sp, #48]	; 0x30
 802a95a:	a80b      	add	r0, sp, #44	; 0x2c
 802a95c:	f7e9 fe56 	bl	801460c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a960:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 802a962:	2202      	movs	r2, #2
 802a964:	fb90 f0f2 	sdiv	r0, r0, r2
 802a968:	eb00 0903 	add.w	r9, r0, r3
 802a96c:	4628      	mov	r0, r5
 802a96e:	9202      	str	r2, [sp, #8]
 802a970:	f7ff fbd4 	bl	802a11c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a974:	a92a      	add	r1, sp, #168	; 0xa8
 802a976:	f841 0d74 	str.w	r0, [r1, #-116]!
 802a97a:	a80b      	add	r0, sp, #44	; 0x2c
 802a97c:	f7e9 fe46 	bl	801460c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a980:	6b23      	ldr	r3, [r4, #48]	; 0x30
 802a982:	9a02      	ldr	r2, [sp, #8]
 802a984:	fb90 f2f2 	sdiv	r2, r0, r2
 802a988:	4649      	mov	r1, r9
 802a98a:	1a9a      	subs	r2, r3, r2
 802a98c:	a80e      	add	r0, sp, #56	; 0x38
 802a98e:	f7ff fb4e 	bl	802a02e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802a992:	46d9      	mov	r9, fp
 802a994:	2502      	movs	r5, #2
 802a996:	45b1      	cmp	r9, r6
 802a998:	db25      	blt.n	802a9e6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x40a>
 802a99a:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 802a99e:	4648      	mov	r0, r9
 802a9a0:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 802a9a4:	930b      	str	r3, [sp, #44]	; 0x2c
 802a9a6:	f7e9 ff69 	bl	801487c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a9aa:	4641      	mov	r1, r8
 802a9ac:	900c      	str	r0, [sp, #48]	; 0x30
 802a9ae:	a80b      	add	r0, sp, #44	; 0x2c
 802a9b0:	f7e9 fe2c 	bl	801460c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a9b4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 802a9b6:	fb90 f0f5 	sdiv	r0, r0, r5
 802a9ba:	eb00 0b03 	add.w	fp, r0, r3
 802a9be:	4648      	mov	r0, r9
 802a9c0:	f7ff fbac 	bl	802a11c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a9c4:	a90d      	add	r1, sp, #52	; 0x34
 802a9c6:	900d      	str	r0, [sp, #52]	; 0x34
 802a9c8:	a80b      	add	r0, sp, #44	; 0x2c
 802a9ca:	f7e9 fe1f 	bl	801460c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a9ce:	6b22      	ldr	r2, [r4, #48]	; 0x30
 802a9d0:	fb90 f0f5 	sdiv	r0, r0, r5
 802a9d4:	4659      	mov	r1, fp
 802a9d6:	1a12      	subs	r2, r2, r0
 802a9d8:	a80e      	add	r0, sp, #56	; 0x38
 802a9da:	46cb      	mov	fp, r9
 802a9dc:	f7ff fb27 	bl	802a02e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802a9e0:	eba9 0907 	sub.w	r9, r9, r7
 802a9e4:	e7d7      	b.n	802a996 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3ba>
 802a9e6:	455e      	cmp	r6, fp
 802a9e8:	da22      	bge.n	802aa30 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x454>
 802a9ea:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 802a9ee:	4630      	mov	r0, r6
 802a9f0:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 802a9f4:	930b      	str	r3, [sp, #44]	; 0x2c
 802a9f6:	f7e9 ff41 	bl	801487c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a9fa:	4641      	mov	r1, r8
 802a9fc:	900c      	str	r0, [sp, #48]	; 0x30
 802a9fe:	a80b      	add	r0, sp, #44	; 0x2c
 802aa00:	f7e9 fe04 	bl	801460c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802aa04:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 802aa06:	2502      	movs	r5, #2
 802aa08:	fb90 f0f5 	sdiv	r0, r0, r5
 802aa0c:	4407      	add	r7, r0
 802aa0e:	4630      	mov	r0, r6
 802aa10:	f7ff fb84 	bl	802a11c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802aa14:	a92a      	add	r1, sp, #168	; 0xa8
 802aa16:	f841 0d74 	str.w	r0, [r1, #-116]!
 802aa1a:	a80b      	add	r0, sp, #44	; 0x2c
 802aa1c:	f7e9 fdf6 	bl	801460c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802aa20:	6b22      	ldr	r2, [r4, #48]	; 0x30
 802aa22:	fb90 f0f5 	sdiv	r0, r0, r5
 802aa26:	4639      	mov	r1, r7
 802aa28:	1a12      	subs	r2, r2, r0
 802aa2a:	a80e      	add	r0, sp, #56	; 0x38
 802aa2c:	f7ff faff 	bl	802a02e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802aa30:	9b01      	ldr	r3, [sp, #4]
 802aa32:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 802aa36:	f6bf af27 	bge.w	802a888 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 802aa3a:	4630      	mov	r0, r6
 802aa3c:	f7e9 ff1e 	bl	801487c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802aa40:	ad2a      	add	r5, sp, #168	; 0xa8
 802aa42:	f04f 0b02 	mov.w	fp, #2
 802aa46:	f845 0d74 	str.w	r0, [r5, #-116]!
 802aa4a:	a809      	add	r0, sp, #36	; 0x24
 802aa4c:	4629      	mov	r1, r5
 802aa4e:	f7e9 fddd 	bl	801460c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802aa52:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 802aa54:	eb00 0903 	add.w	r9, r0, r3
 802aa58:	4630      	mov	r0, r6
 802aa5a:	f7ff fb5f 	bl	802a11c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802aa5e:	4629      	mov	r1, r5
 802aa60:	900d      	str	r0, [sp, #52]	; 0x34
 802aa62:	a809      	add	r0, sp, #36	; 0x24
 802aa64:	f7e9 fdd2 	bl	801460c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802aa68:	6b23      	ldr	r3, [r4, #48]	; 0x30
 802aa6a:	f5a6 54b4 	sub.w	r4, r6, #5760	; 0x1680
 802aa6e:	eba3 0800 	sub.w	r8, r3, r0
 802aa72:	4454      	add	r4, sl
 802aa74:	42a6      	cmp	r6, r4
 802aa76:	f77f af07 	ble.w	802a888 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 802aa7a:	4620      	mov	r0, r4
 802aa7c:	f7e9 fefe 	bl	801487c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802aa80:	4629      	mov	r1, r5
 802aa82:	900d      	str	r0, [sp, #52]	; 0x34
 802aa84:	a80a      	add	r0, sp, #40	; 0x28
 802aa86:	f7e9 fdc1 	bl	801460c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802aa8a:	fb90 f0fb 	sdiv	r0, r0, fp
 802aa8e:	eb00 0709 	add.w	r7, r0, r9
 802aa92:	4620      	mov	r0, r4
 802aa94:	f7ff fb42 	bl	802a11c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802aa98:	a90c      	add	r1, sp, #48	; 0x30
 802aa9a:	900c      	str	r0, [sp, #48]	; 0x30
 802aa9c:	a80a      	add	r0, sp, #40	; 0x28
 802aa9e:	f7e9 fdb5 	bl	801460c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802aaa2:	4639      	mov	r1, r7
 802aaa4:	fb90 f2fb 	sdiv	r2, r0, fp
 802aaa8:	a80e      	add	r0, sp, #56	; 0x38
 802aaaa:	eba8 0202 	sub.w	r2, r8, r2
 802aaae:	f7ff fabe 	bl	802a02e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802aab2:	4454      	add	r4, sl
 802aab4:	e7de      	b.n	802aa74 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x498>
 802aab6:	2400      	movs	r4, #0
 802aab8:	e6eb      	b.n	802a892 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2b6>
 802aaba:	bf00      	nop
 802aabc:	080321fc 	.word	0x080321fc

0802aac0 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 802aac0:	b570      	push	{r4, r5, r6, lr}
 802aac2:	790b      	ldrb	r3, [r1, #4]
 802aac4:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 802aac8:	2b00      	cmp	r3, #0
 802aaca:	bf0c      	ite	eq
 802aacc:	2301      	moveq	r3, #1
 802aace:	2300      	movne	r3, #0
 802aad0:	4604      	mov	r4, r0
 802aad2:	460e      	mov	r6, r1
 802aad4:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 802aad8:	d109      	bne.n	802aaee <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 802aada:	b14d      	cbz	r5, 802aaf0 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 802aadc:	7933      	ldrb	r3, [r6, #4]
 802aade:	2b01      	cmp	r3, #1
 802aae0:	d10c      	bne.n	802aafc <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 802aae2:	6823      	ldr	r3, [r4, #0]
 802aae4:	4620      	mov	r0, r4
 802aae6:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 802aae8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 802aaec:	4718      	bx	r3
 802aaee:	b12d      	cbz	r5, 802aafc <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 802aaf0:	6823      	ldr	r3, [r4, #0]
 802aaf2:	4620      	mov	r0, r4
 802aaf4:	695b      	ldr	r3, [r3, #20]
 802aaf6:	4798      	blx	r3
 802aaf8:	2d00      	cmp	r5, #0
 802aafa:	d1ef      	bne.n	802aadc <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 802aafc:	bd70      	pop	{r4, r5, r6, pc}

0802aafe <_ZN8touchgfx13TextureMapper21setRenderingAlgorithmENS0_18RenderingAlgorithmE>:
 802aafe:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 802ab02:	4770      	bx	lr

0802ab04 <_ZNK8touchgfx13TextureMapper21getRenderingAlgorithmEv>:
 802ab04:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
 802ab08:	4770      	bx	lr

0802ab0a <_ZN8touchgfx13TextureMapper9setXAngleEf>:
 802ab0a:	6802      	ldr	r2, [r0, #0]
 802ab0c:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 802ab10:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 802ab12:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 802ab16:	4710      	bx	r2

0802ab18 <_ZN8touchgfx13TextureMapper9setYAngleEf>:
 802ab18:	6802      	ldr	r2, [r0, #0]
 802ab1a:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 802ab1e:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 802ab20:	eef0 0a40 	vmov.f32	s1, s0
 802ab24:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 802ab28:	4710      	bx	r2

0802ab2a <_ZN8touchgfx13TextureMapper9setZAngleEf>:
 802ab2a:	6802      	ldr	r2, [r0, #0]
 802ab2c:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 802ab30:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 802ab32:	eeb0 1a40 	vmov.f32	s2, s0
 802ab36:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 802ab3a:	4710      	bx	r2

0802ab3c <_ZN8touchgfx13TextureMapper12updateXAngleEf>:
 802ab3c:	6802      	ldr	r2, [r0, #0]
 802ab3e:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 802ab42:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 802ab44:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 802ab48:	4710      	bx	r2

0802ab4a <_ZN8touchgfx13TextureMapper12updateYAngleEf>:
 802ab4a:	6802      	ldr	r2, [r0, #0]
 802ab4c:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 802ab50:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 802ab52:	eef0 0a40 	vmov.f32	s1, s0
 802ab56:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 802ab5a:	4710      	bx	r2

0802ab5c <_ZN8touchgfx13TextureMapper12updateZAngleEf>:
 802ab5c:	6802      	ldr	r2, [r0, #0]
 802ab5e:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 802ab62:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 802ab64:	eeb0 1a40 	vmov.f32	s2, s0
 802ab68:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 802ab6c:	4710      	bx	r2

0802ab6e <_ZNK8touchgfx13TextureMapper9getXAngleEv>:
 802ab6e:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 802ab72:	4770      	bx	lr

0802ab74 <_ZNK8touchgfx13TextureMapper9getYAngleEv>:
 802ab74:	ed90 0a0e 	vldr	s0, [r0, #56]	; 0x38
 802ab78:	4770      	bx	lr

0802ab7a <_ZNK8touchgfx13TextureMapper9getZAngleEv>:
 802ab7a:	ed90 0a0f 	vldr	s0, [r0, #60]	; 0x3c
 802ab7e:	4770      	bx	lr

0802ab80 <_ZNK8touchgfx13TextureMapper8getScaleEv>:
 802ab80:	ed90 0a10 	vldr	s0, [r0, #64]	; 0x40
 802ab84:	4770      	bx	lr

0802ab86 <_ZNK8touchgfx13TextureMapper9getOrigoXEv>:
 802ab86:	ed90 0a11 	vldr	s0, [r0, #68]	; 0x44
 802ab8a:	4770      	bx	lr

0802ab8c <_ZNK8touchgfx13TextureMapper9getOrigoYEv>:
 802ab8c:	ed90 0a12 	vldr	s0, [r0, #72]	; 0x48
 802ab90:	4770      	bx	lr

0802ab92 <_ZNK8touchgfx13TextureMapper9getOrigoZEv>:
 802ab92:	ed90 0a13 	vldr	s0, [r0, #76]	; 0x4c
 802ab96:	4770      	bx	lr

0802ab98 <_ZNK8touchgfx13TextureMapper10getCameraXEv>:
 802ab98:	ed90 0a14 	vldr	s0, [r0, #80]	; 0x50
 802ab9c:	4770      	bx	lr

0802ab9e <_ZNK8touchgfx13TextureMapper10getCameraYEv>:
 802ab9e:	ed90 0a15 	vldr	s0, [r0, #84]	; 0x54
 802aba2:	4770      	bx	lr

0802aba4 <_ZNK8touchgfx13TextureMapper17getCameraDistanceEv>:
 802aba4:	ed90 0a16 	vldr	s0, [r0, #88]	; 0x58
 802aba8:	4770      	bx	lr

0802abaa <_ZN8touchgfx13TextureMapper17setBitmapPositionEii>:
 802abaa:	ee07 2a90 	vmov	s15, r2
 802abae:	6803      	ldr	r3, [r0, #0]
 802abb0:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 802abb4:	ee07 1a90 	vmov	s15, r1
 802abb8:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 802abbc:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 802abc0:	4718      	bx	r3

0802abc2 <_ZNK8touchgfx13TextureMapper18getBitmapPositionXEv>:
 802abc2:	ed90 0a0b 	vldr	s0, [r0, #44]	; 0x2c
 802abc6:	4770      	bx	lr

0802abc8 <_ZNK8touchgfx13TextureMapper18getBitmapPositionYEv>:
 802abc8:	ed90 0a0c 	vldr	s0, [r0, #48]	; 0x30
 802abcc:	4770      	bx	lr

0802abce <_ZNK8touchgfx13TextureMapper5getX0Ev>:
 802abce:	ed90 0a17 	vldr	s0, [r0, #92]	; 0x5c
 802abd2:	4770      	bx	lr

0802abd4 <_ZNK8touchgfx13TextureMapper5getX1Ev>:
 802abd4:	ed90 0a1a 	vldr	s0, [r0, #104]	; 0x68
 802abd8:	4770      	bx	lr

0802abda <_ZNK8touchgfx13TextureMapper5getX2Ev>:
 802abda:	ed90 0a1d 	vldr	s0, [r0, #116]	; 0x74
 802abde:	4770      	bx	lr

0802abe0 <_ZNK8touchgfx13TextureMapper5getX3Ev>:
 802abe0:	ed90 0a20 	vldr	s0, [r0, #128]	; 0x80
 802abe4:	4770      	bx	lr

0802abe6 <_ZNK8touchgfx13TextureMapper5getY0Ev>:
 802abe6:	ed90 0a18 	vldr	s0, [r0, #96]	; 0x60
 802abea:	4770      	bx	lr

0802abec <_ZNK8touchgfx13TextureMapper5getY1Ev>:
 802abec:	ed90 0a1b 	vldr	s0, [r0, #108]	; 0x6c
 802abf0:	4770      	bx	lr

0802abf2 <_ZNK8touchgfx13TextureMapper5getY2Ev>:
 802abf2:	ed90 0a1e 	vldr	s0, [r0, #120]	; 0x78
 802abf6:	4770      	bx	lr

0802abf8 <_ZNK8touchgfx13TextureMapper5getY3Ev>:
 802abf8:	ed90 0a21 	vldr	s0, [r0, #132]	; 0x84
 802abfc:	4770      	bx	lr

0802abfe <_ZNK8touchgfx13TextureMapper5getZ0Ev>:
 802abfe:	ed90 0a19 	vldr	s0, [r0, #100]	; 0x64
 802ac02:	4770      	bx	lr

0802ac04 <_ZNK8touchgfx13TextureMapper5getZ1Ev>:
 802ac04:	ed90 0a1c 	vldr	s0, [r0, #112]	; 0x70
 802ac08:	4770      	bx	lr

0802ac0a <_ZNK8touchgfx13TextureMapper5getZ2Ev>:
 802ac0a:	ed90 0a1f 	vldr	s0, [r0, #124]	; 0x7c
 802ac0e:	4770      	bx	lr

0802ac10 <_ZNK8touchgfx13TextureMapper5getZ3Ev>:
 802ac10:	ed90 0a22 	vldr	s0, [r0, #136]	; 0x88
 802ac14:	4770      	bx	lr

0802ac16 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>:
 802ac16:	b510      	push	{r4, lr}
 802ac18:	ed2d 8b04 	vpush	{d8-d9}
 802ac1c:	6803      	ldr	r3, [r0, #0]
 802ac1e:	4604      	mov	r4, r0
 802ac20:	699b      	ldr	r3, [r3, #24]
 802ac22:	eeb0 8a40 	vmov.f32	s16, s0
 802ac26:	eef0 8a60 	vmov.f32	s17, s1
 802ac2a:	eeb0 9a41 	vmov.f32	s18, s2
 802ac2e:	4798      	blx	r3
 802ac30:	6823      	ldr	r3, [r4, #0]
 802ac32:	4620      	mov	r0, r4
 802ac34:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 802ac36:	eeb0 1a49 	vmov.f32	s2, s18
 802ac3a:	eef0 0a68 	vmov.f32	s1, s17
 802ac3e:	eeb0 0a48 	vmov.f32	s0, s16
 802ac42:	4798      	blx	r3
 802ac44:	ecbd 8b04 	vpop	{d8-d9}
 802ac48:	6823      	ldr	r3, [r4, #0]
 802ac4a:	4620      	mov	r0, r4
 802ac4c:	699b      	ldr	r3, [r3, #24]
 802ac4e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802ac52:	4718      	bx	r3

0802ac54 <_ZN8touchgfx13TextureMapper11updateScaleEf>:
 802ac54:	b510      	push	{r4, lr}
 802ac56:	ed2d 8b02 	vpush	{d8}
 802ac5a:	6803      	ldr	r3, [r0, #0]
 802ac5c:	4604      	mov	r4, r0
 802ac5e:	699b      	ldr	r3, [r3, #24]
 802ac60:	eeb0 8a40 	vmov.f32	s16, s0
 802ac64:	4798      	blx	r3
 802ac66:	6823      	ldr	r3, [r4, #0]
 802ac68:	4620      	mov	r0, r4
 802ac6a:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 802ac6e:	eeb0 0a48 	vmov.f32	s0, s16
 802ac72:	4798      	blx	r3
 802ac74:	ecbd 8b02 	vpop	{d8}
 802ac78:	6823      	ldr	r3, [r4, #0]
 802ac7a:	4620      	mov	r0, r4
 802ac7c:	699b      	ldr	r3, [r3, #24]
 802ac7e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802ac82:	4718      	bx	r3

0802ac84 <_ZNK8touchgfx13TextureMapper12getSolidRectEv>:
 802ac84:	2200      	movs	r2, #0
 802ac86:	8002      	strh	r2, [r0, #0]
 802ac88:	8042      	strh	r2, [r0, #2]
 802ac8a:	8082      	strh	r2, [r0, #4]
 802ac8c:	80c2      	strh	r2, [r0, #6]
 802ac8e:	4770      	bx	lr

0802ac90 <_ZN8touchgfx13TextureMapperD1Ev>:
 802ac90:	4770      	bx	lr

0802ac92 <_ZN8touchgfx13TextureMapperD0Ev>:
 802ac92:	b510      	push	{r4, lr}
 802ac94:	2190      	movs	r1, #144	; 0x90
 802ac96:	4604      	mov	r4, r0
 802ac98:	f001 ff73 	bl	802cb82 <_ZdlPvj>
 802ac9c:	4620      	mov	r0, r4
 802ac9e:	bd10      	pop	{r4, pc}

0802aca0 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>:
 802aca0:	b538      	push	{r3, r4, r5, lr}
 802aca2:	2500      	movs	r5, #0
 802aca4:	e9c0 5505 	strd	r5, r5, [r0, #20]
 802aca8:	2301      	movs	r3, #1
 802acaa:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
 802acae:	4b1f      	ldr	r3, [pc, #124]	; (802ad2c <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x8c>)
 802acb0:	8085      	strh	r5, [r0, #4]
 802acb2:	80c5      	strh	r5, [r0, #6]
 802acb4:	8105      	strh	r5, [r0, #8]
 802acb6:	8145      	strh	r5, [r0, #10]
 802acb8:	8185      	strh	r5, [r0, #12]
 802acba:	81c5      	strh	r5, [r0, #14]
 802acbc:	8205      	strh	r5, [r0, #16]
 802acbe:	8245      	strh	r5, [r0, #18]
 802acc0:	61c5      	str	r5, [r0, #28]
 802acc2:	8405      	strh	r5, [r0, #32]
 802acc4:	8445      	strh	r5, [r0, #34]	; 0x22
 802acc6:	f880 5024 	strb.w	r5, [r0, #36]	; 0x24
 802acca:	6003      	str	r3, [r0, #0]
 802accc:	880b      	ldrh	r3, [r1, #0]
 802acce:	84c3      	strh	r3, [r0, #38]	; 0x26
 802acd0:	23ff      	movs	r3, #255	; 0xff
 802acd2:	4604      	mov	r4, r0
 802acd4:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 802acd8:	f7eb f96b 	bl	8015fb2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 802acdc:	4b14      	ldr	r3, [pc, #80]	; (802ad30 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x90>)
 802acde:	6023      	str	r3, [r4, #0]
 802ace0:	2300      	movs	r3, #0
 802ace2:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 802ace6:	4913      	ldr	r1, [pc, #76]	; (802ad34 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x94>)
 802ace8:	62e3      	str	r3, [r4, #44]	; 0x2c
 802acea:	6323      	str	r3, [r4, #48]	; 0x30
 802acec:	6363      	str	r3, [r4, #52]	; 0x34
 802acee:	63a3      	str	r3, [r4, #56]	; 0x38
 802acf0:	63e3      	str	r3, [r4, #60]	; 0x3c
 802acf2:	6463      	str	r3, [r4, #68]	; 0x44
 802acf4:	64a3      	str	r3, [r4, #72]	; 0x48
 802acf6:	6523      	str	r3, [r4, #80]	; 0x50
 802acf8:	6563      	str	r3, [r4, #84]	; 0x54
 802acfa:	65e3      	str	r3, [r4, #92]	; 0x5c
 802acfc:	6623      	str	r3, [r4, #96]	; 0x60
 802acfe:	66a3      	str	r3, [r4, #104]	; 0x68
 802ad00:	66e3      	str	r3, [r4, #108]	; 0x6c
 802ad02:	6763      	str	r3, [r4, #116]	; 0x74
 802ad04:	67a3      	str	r3, [r4, #120]	; 0x78
 802ad06:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
 802ad0a:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
 802ad0e:	230c      	movs	r3, #12
 802ad10:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
 802ad14:	6422      	str	r2, [r4, #64]	; 0x40
 802ad16:	64e1      	str	r1, [r4, #76]	; 0x4c
 802ad18:	65a1      	str	r1, [r4, #88]	; 0x58
 802ad1a:	6662      	str	r2, [r4, #100]	; 0x64
 802ad1c:	6722      	str	r2, [r4, #112]	; 0x70
 802ad1e:	67e2      	str	r2, [r4, #124]	; 0x7c
 802ad20:	f8c4 2088 	str.w	r2, [r4, #136]	; 0x88
 802ad24:	f8a4 308c 	strh.w	r3, [r4, #140]	; 0x8c
 802ad28:	4620      	mov	r0, r4
 802ad2a:	bd38      	pop	{r3, r4, r5, pc}
 802ad2c:	08031ca4 	.word	0x08031ca4
 802ad30:	08032288 	.word	0x08032288
 802ad34:	447a0000 	.word	0x447a0000

0802ad38 <_ZN8touchgfx13TextureMapper19applyTransformationEv>:
 802ad38:	b570      	push	{r4, r5, r6, lr}
 802ad3a:	ed2d 8b04 	vpush	{d8-d9}
 802ad3e:	f5ad 7d50 	sub.w	sp, sp, #832	; 0x340
 802ad42:	add0      	add	r5, sp, #832	; 0x340
 802ad44:	8cc3      	ldrh	r3, [r0, #38]	; 0x26
 802ad46:	f825 3d40 	strh.w	r3, [r5, #-64]!
 802ad4a:	4604      	mov	r4, r0
 802ad4c:	4628      	mov	r0, r5
 802ad4e:	f7f1 fa7f 	bl	801c250 <_ZNK8touchgfx6Bitmap8getWidthEv>
 802ad52:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 802ad54:	f8ad 3300 	strh.w	r3, [sp, #768]	; 0x300
 802ad58:	4606      	mov	r6, r0
 802ad5a:	4628      	mov	r0, r5
 802ad5c:	f7f1 faac 	bl	801c2b8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 802ad60:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 802ad64:	ed94 6a0b 	vldr	s12, [r4, #44]	; 0x2c
 802ad68:	6da3      	ldr	r3, [r4, #88]	; 0x58
 802ad6a:	ed94 9a11 	vldr	s18, [r4, #68]	; 0x44
 802ad6e:	9312      	str	r3, [sp, #72]	; 0x48
 802ad70:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802ad74:	1c72      	adds	r2, r6, #1
 802ad76:	3001      	adds	r0, #1
 802ad78:	ee76 5ac7 	vsub.f32	s11, s13, s14
 802ad7c:	ee07 2a90 	vmov	s15, r2
 802ad80:	ee06 0a90 	vmov	s13, r0
 802ad84:	ee36 6a47 	vsub.f32	s12, s12, s14
 802ad88:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802ad8c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 802ad90:	ee77 7a86 	vadd.f32	s15, s15, s12
 802ad94:	ee76 6aa5 	vadd.f32	s13, s13, s11
 802ad98:	9316      	str	r3, [sp, #88]	; 0x58
 802ad9a:	931a      	str	r3, [sp, #104]	; 0x68
 802ad9c:	931e      	str	r3, [sp, #120]	; 0x78
 802ad9e:	2300      	movs	r3, #0
 802ada0:	9320      	str	r3, [sp, #128]	; 0x80
 802ada2:	9321      	str	r3, [sp, #132]	; 0x84
 802ada4:	9322      	str	r3, [sp, #136]	; 0x88
 802ada6:	9324      	str	r3, [sp, #144]	; 0x90
 802ada8:	9325      	str	r3, [sp, #148]	; 0x94
 802adaa:	9326      	str	r3, [sp, #152]	; 0x98
 802adac:	9328      	str	r3, [sp, #160]	; 0xa0
 802adae:	9329      	str	r3, [sp, #164]	; 0xa4
 802adb0:	932a      	str	r3, [sp, #168]	; 0xa8
 802adb2:	932c      	str	r3, [sp, #176]	; 0xb0
 802adb4:	932d      	str	r3, [sp, #180]	; 0xb4
 802adb6:	932e      	str	r3, [sp, #184]	; 0xb8
 802adb8:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 802adbc:	edcd 5a11 	vstr	s11, [sp, #68]	; 0x44
 802adc0:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 802adc4:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 802adc8:	edcd 5a15 	vstr	s11, [sp, #84]	; 0x54
 802adcc:	ed8d 7a17 	vstr	s14, [sp, #92]	; 0x5c
 802add0:	edcd 7a18 	vstr	s15, [sp, #96]	; 0x60
 802add4:	edcd 6a19 	vstr	s13, [sp, #100]	; 0x64
 802add8:	ed8d 7a1b 	vstr	s14, [sp, #108]	; 0x6c
 802addc:	ed8d 6a1c 	vstr	s12, [sp, #112]	; 0x70
 802ade0:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 802ade4:	ed8d 7a1f 	vstr	s14, [sp, #124]	; 0x7c
 802ade8:	a830      	add	r0, sp, #192	; 0xc0
 802adea:	edd4 8a12 	vldr	s17, [r4, #72]	; 0x48
 802adee:	ed94 8a13 	vldr	s16, [r4, #76]	; 0x4c
 802adf2:	f000 fc43 	bl	802b67c <_ZN8touchgfx9Matrix4x4C1Ev>
 802adf6:	eeb1 0a49 	vneg.f32	s0, s18
 802adfa:	a830      	add	r0, sp, #192	; 0xc0
 802adfc:	f000 fd12 	bl	802b824 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 802ae00:	eeb1 0a68 	vneg.f32	s0, s17
 802ae04:	f000 fd1c 	bl	802b840 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 802ae08:	eeb1 0a48 	vneg.f32	s0, s16
 802ae0c:	f000 fd27 	bl	802b85e <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 802ae10:	a840      	add	r0, sp, #256	; 0x100
 802ae12:	f000 fc33 	bl	802b67c <_ZN8touchgfx9Matrix4x4C1Ev>
 802ae16:	ed94 0a0d 	vldr	s0, [r4, #52]	; 0x34
 802ae1a:	a840      	add	r0, sp, #256	; 0x100
 802ae1c:	f000 fc86 	bl	802b72c <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>
 802ae20:	ed94 0a0e 	vldr	s0, [r4, #56]	; 0x38
 802ae24:	f000 fcac 	bl	802b780 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>
 802ae28:	ed94 0a0f 	vldr	s0, [r4, #60]	; 0x3c
 802ae2c:	f000 fcd1 	bl	802b7d2 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>
 802ae30:	a850      	add	r0, sp, #320	; 0x140
 802ae32:	f000 fc23 	bl	802b67c <_ZN8touchgfx9Matrix4x4C1Ev>
 802ae36:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 802ae3a:	a850      	add	r0, sp, #320	; 0x140
 802ae3c:	f000 fd1e 	bl	802b87c <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>
 802ae40:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 802ae44:	f000 fd26 	bl	802b894 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>
 802ae48:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 802ae4c:	f000 fd2f 	bl	802b8ae <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>
 802ae50:	a860      	add	r0, sp, #384	; 0x180
 802ae52:	f000 fc13 	bl	802b67c <_ZN8touchgfx9Matrix4x4C1Ev>
 802ae56:	eeb0 0a49 	vmov.f32	s0, s18
 802ae5a:	a860      	add	r0, sp, #384	; 0x180
 802ae5c:	f000 fce2 	bl	802b824 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 802ae60:	eeb0 0a68 	vmov.f32	s0, s17
 802ae64:	f000 fcec 	bl	802b840 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 802ae68:	eeb0 0a48 	vmov.f32	s0, s16
 802ae6c:	f000 fcf7 	bl	802b85e <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 802ae70:	aa50      	add	r2, sp, #320	; 0x140
 802ae72:	a960      	add	r1, sp, #384	; 0x180
 802ae74:	a8b0      	add	r0, sp, #704	; 0x2c0
 802ae76:	f000 fc1b 	bl	802b6b0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 802ae7a:	4628      	mov	r0, r5
 802ae7c:	aa40      	add	r2, sp, #256	; 0x100
 802ae7e:	a9b0      	add	r1, sp, #704	; 0x2c0
 802ae80:	f000 fc16 	bl	802b6b0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 802ae84:	4629      	mov	r1, r5
 802ae86:	aa30      	add	r2, sp, #192	; 0xc0
 802ae88:	a870      	add	r0, sp, #448	; 0x1c0
 802ae8a:	f000 fc11 	bl	802b6b0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 802ae8e:	a880      	add	r0, sp, #512	; 0x200
 802ae90:	f000 fbf4 	bl	802b67c <_ZN8touchgfx9Matrix4x4C1Ev>
 802ae94:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 802ae98:	a880      	add	r0, sp, #512	; 0x200
 802ae9a:	eeb1 0a40 	vneg.f32	s0, s0
 802ae9e:	f000 fcc1 	bl	802b824 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 802aea2:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 802aea6:	a880      	add	r0, sp, #512	; 0x200
 802aea8:	eeb1 0a40 	vneg.f32	s0, s0
 802aeac:	f000 fcc8 	bl	802b840 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 802aeb0:	a890      	add	r0, sp, #576	; 0x240
 802aeb2:	f000 fbe3 	bl	802b67c <_ZN8touchgfx9Matrix4x4C1Ev>
 802aeb6:	ed94 0a16 	vldr	s0, [r4, #88]	; 0x58
 802aeba:	a890      	add	r0, sp, #576	; 0x240
 802aebc:	f000 fc26 	bl	802b70c <_ZN8touchgfx9Matrix4x415setViewDistanceEf>
 802aec0:	a8a0      	add	r0, sp, #640	; 0x280
 802aec2:	f000 fbdb 	bl	802b67c <_ZN8touchgfx9Matrix4x4C1Ev>
 802aec6:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 802aeca:	a8a0      	add	r0, sp, #640	; 0x280
 802aecc:	f000 fcaa 	bl	802b824 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 802aed0:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 802aed4:	f000 fcb4 	bl	802b840 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 802aed8:	aa90      	add	r2, sp, #576	; 0x240
 802aeda:	a9a0      	add	r1, sp, #640	; 0x280
 802aedc:	a8b0      	add	r0, sp, #704	; 0x2c0
 802aede:	f000 fbe7 	bl	802b6b0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 802aee2:	4628      	mov	r0, r5
 802aee4:	aa80      	add	r2, sp, #512	; 0x200
 802aee6:	a9b0      	add	r1, sp, #704	; 0x2c0
 802aee8:	f000 fbe2 	bl	802b6b0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 802aeec:	4629      	mov	r1, r5
 802aeee:	aa70      	add	r2, sp, #448	; 0x1c0
 802aef0:	4668      	mov	r0, sp
 802aef2:	466d      	mov	r5, sp
 802aef4:	f000 fbdc 	bl	802b6b0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 802aef8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 802aefa:	ae70      	add	r6, sp, #448	; 0x1c0
 802aefc:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 802aefe:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 802af00:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 802af02:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 802af04:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 802af06:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 802af0a:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
 802af0e:	2500      	movs	r5, #0
 802af10:	0129      	lsls	r1, r5, #4
 802af12:	ab20      	add	r3, sp, #128	; 0x80
 802af14:	185e      	adds	r6, r3, r1
 802af16:	ab10      	add	r3, sp, #64	; 0x40
 802af18:	4419      	add	r1, r3
 802af1a:	a870      	add	r0, sp, #448	; 0x1c0
 802af1c:	f000 fb7e 	bl	802b61c <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>
 802af20:	3501      	adds	r5, #1
 802af22:	2d04      	cmp	r5, #4
 802af24:	ed86 0a00 	vstr	s0, [r6]
 802af28:	edc6 0a01 	vstr	s1, [r6, #4]
 802af2c:	ed86 1a02 	vstr	s2, [r6, #8]
 802af30:	edc6 1a03 	vstr	s3, [r6, #12]
 802af34:	d1ec      	bne.n	802af10 <_ZN8touchgfx13TextureMapper19applyTransformationEv+0x1d8>
 802af36:	edd4 7a16 	vldr	s15, [r4, #88]	; 0x58
 802af3a:	eddd 6a20 	vldr	s13, [sp, #128]	; 0x80
 802af3e:	ed9d 7a22 	vldr	s14, [sp, #136]	; 0x88
 802af42:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802af46:	ed84 7a19 	vstr	s14, [r4, #100]	; 0x64
 802af4a:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802af4e:	eddd 6a21 	vldr	s13, [sp, #132]	; 0x84
 802af52:	ed84 6a17 	vstr	s12, [r4, #92]	; 0x5c
 802af56:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802af5a:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802af5e:	eddd 6a24 	vldr	s13, [sp, #144]	; 0x90
 802af62:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 802af66:	ed84 6a18 	vstr	s12, [r4, #96]	; 0x60
 802af6a:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802af6e:	ed84 7a1c 	vstr	s14, [r4, #112]	; 0x70
 802af72:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802af76:	eddd 6a25 	vldr	s13, [sp, #148]	; 0x94
 802af7a:	ed84 6a1a 	vstr	s12, [r4, #104]	; 0x68
 802af7e:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802af82:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802af86:	eddd 6a28 	vldr	s13, [sp, #160]	; 0xa0
 802af8a:	ed9d 7a2a 	vldr	s14, [sp, #168]	; 0xa8
 802af8e:	ed84 6a1b 	vstr	s12, [r4, #108]	; 0x6c
 802af92:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802af96:	ed84 7a1f 	vstr	s14, [r4, #124]	; 0x7c
 802af9a:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802af9e:	eddd 6a29 	vldr	s13, [sp, #164]	; 0xa4
 802afa2:	ed84 6a1d 	vstr	s12, [r4, #116]	; 0x74
 802afa6:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802afaa:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802afae:	eddd 6a2c 	vldr	s13, [sp, #176]	; 0xb0
 802afb2:	ed9d 7a2e 	vldr	s14, [sp, #184]	; 0xb8
 802afb6:	ed84 6a1e 	vstr	s12, [r4, #120]	; 0x78
 802afba:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802afbe:	ed84 7a22 	vstr	s14, [r4, #136]	; 0x88
 802afc2:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802afc6:	eddd 6a2d 	vldr	s13, [sp, #180]	; 0xb4
 802afca:	ed84 6a20 	vstr	s12, [r4, #128]	; 0x80
 802afce:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802afd2:	eec7 6a87 	vdiv.f32	s13, s15, s14
 802afd6:	edc4 6a21 	vstr	s13, [r4, #132]	; 0x84
 802afda:	f50d 7d50 	add.w	sp, sp, #832	; 0x340
 802afde:	ecbd 8b04 	vpop	{d8-d9}
 802afe2:	bd70      	pop	{r4, r5, r6, pc}

0802afe4 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>:
 802afe4:	b510      	push	{r4, lr}
 802afe6:	4604      	mov	r4, r0
 802afe8:	f7ea ffe3 	bl	8015fb2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 802afec:	4620      	mov	r0, r4
 802afee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802aff2:	f7ff bea1 	b.w	802ad38 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802aff6 <_ZN8touchgfx13TextureMapper9setAnglesEfff>:
 802aff6:	ed80 0a0d 	vstr	s0, [r0, #52]	; 0x34
 802affa:	edc0 0a0e 	vstr	s1, [r0, #56]	; 0x38
 802affe:	ed80 1a0f 	vstr	s2, [r0, #60]	; 0x3c
 802b002:	f7ff be99 	b.w	802ad38 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802b006 <_ZN8touchgfx13TextureMapper8setScaleEf>:
 802b006:	ed80 0a10 	vstr	s0, [r0, #64]	; 0x40
 802b00a:	f7ff be95 	b.w	802ad38 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802b00e <_ZN8touchgfx13TextureMapper17setBitmapPositionEff>:
 802b00e:	ed80 0a0b 	vstr	s0, [r0, #44]	; 0x2c
 802b012:	edc0 0a0c 	vstr	s1, [r0, #48]	; 0x30
 802b016:	f7ff be8f 	b.w	802ad38 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802b01a <_ZN8touchgfx13TextureMapper17setCameraDistanceEf>:
 802b01a:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 802b01e:	eeb4 0ae7 	vcmpe.f32	s0, s15
 802b022:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b026:	bfd8      	it	le
 802b028:	eeb0 0a67 	vmovle.f32	s0, s15
 802b02c:	ed80 0a16 	vstr	s0, [r0, #88]	; 0x58
 802b030:	f7ff be82 	b.w	802ad38 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802b034 <_ZN8touchgfx13TextureMapper9setCameraEff>:
 802b034:	ed80 0a14 	vstr	s0, [r0, #80]	; 0x50
 802b038:	edc0 0a15 	vstr	s1, [r0, #84]	; 0x54
 802b03c:	f7ff be7c 	b.w	802ad38 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802b040 <_ZN8touchgfx13TextureMapper8setOrigoEff>:
 802b040:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 802b044:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 802b048:	f7ff be76 	b.w	802ad38 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802b04c <_ZN8touchgfx13TextureMapper8setOrigoEfff>:
 802b04c:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 802b050:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 802b054:	ed80 1a13 	vstr	s2, [r0, #76]	; 0x4c
 802b058:	f7ff be6e 	b.w	802ad38 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802b05c <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>:
 802b05c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802b060:	ed2d 8b04 	vpush	{d8-d9}
 802b064:	edd1 9a1a 	vldr	s19, [r1, #104]	; 0x68
 802b068:	ed91 8a17 	vldr	s16, [r1, #92]	; 0x5c
 802b06c:	ed91 9a1d 	vldr	s18, [r1, #116]	; 0x74
 802b070:	edd1 8a20 	vldr	s17, [r1, #128]	; 0x80
 802b074:	eeb4 8ae9 	vcmpe.f32	s16, s19
 802b078:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b07c:	bf54      	ite	pl
 802b07e:	eeb0 0a69 	vmovpl.f32	s0, s19
 802b082:	eeb0 0a48 	vmovmi.f32	s0, s16
 802b086:	eeb4 9ac0 	vcmpe.f32	s18, s0
 802b08a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b08e:	bfd8      	it	le
 802b090:	eeb0 0a49 	vmovle.f32	s0, s18
 802b094:	eef4 8ac0 	vcmpe.f32	s17, s0
 802b098:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b09c:	bfd8      	it	le
 802b09e:	eeb0 0a68 	vmovle.f32	s0, s17
 802b0a2:	460c      	mov	r4, r1
 802b0a4:	4607      	mov	r7, r0
 802b0a6:	f001 ff5f 	bl	802cf68 <floorf>
 802b0aa:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802b0ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b0b2:	bf58      	it	pl
 802b0b4:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 802b0b8:	eeb4 8ae9 	vcmpe.f32	s16, s19
 802b0bc:	bf56      	itet	pl
 802b0be:	ee10 3a10 	vmovpl	r3, s0
 802b0c2:	2600      	movmi	r6, #0
 802b0c4:	b21e      	sxthpl	r6, r3
 802b0c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b0ca:	bfd8      	it	le
 802b0cc:	eeb0 8a69 	vmovle.f32	s16, s19
 802b0d0:	eeb4 9ac8 	vcmpe.f32	s18, s16
 802b0d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b0d8:	bf58      	it	pl
 802b0da:	eeb0 8a49 	vmovpl.f32	s16, s18
 802b0de:	eef4 8ac8 	vcmpe.f32	s17, s16
 802b0e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b0e6:	bf54      	ite	pl
 802b0e8:	eeb0 0a68 	vmovpl.f32	s0, s17
 802b0ec:	eeb0 0a48 	vmovmi.f32	s0, s16
 802b0f0:	f001 fef8 	bl	802cee4 <ceilf>
 802b0f4:	f9b4 8008 	ldrsh.w	r8, [r4, #8]
 802b0f8:	edd4 9a1b 	vldr	s19, [r4, #108]	; 0x6c
 802b0fc:	ed94 8a18 	vldr	s16, [r4, #96]	; 0x60
 802b100:	ed94 9a1e 	vldr	s18, [r4, #120]	; 0x78
 802b104:	edd4 8a21 	vldr	s17, [r4, #132]	; 0x84
 802b108:	ee07 8a90 	vmov	s15, r8
 802b10c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802b110:	eeb4 0ae7 	vcmpe.f32	s0, s15
 802b114:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b118:	bfd8      	it	le
 802b11a:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 802b11e:	eeb4 8ae9 	vcmpe.f32	s16, s19
 802b122:	bfdc      	itt	le
 802b124:	ee10 3a10 	vmovle	r3, s0
 802b128:	fa0f f883 	sxthle.w	r8, r3
 802b12c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b130:	bf54      	ite	pl
 802b132:	eeb0 0a69 	vmovpl.f32	s0, s19
 802b136:	eeb0 0a48 	vmovmi.f32	s0, s16
 802b13a:	eeb4 9ac0 	vcmpe.f32	s18, s0
 802b13e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b142:	bfd8      	it	le
 802b144:	eeb0 0a49 	vmovle.f32	s0, s18
 802b148:	eef4 8ac0 	vcmpe.f32	s17, s0
 802b14c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b150:	bfd8      	it	le
 802b152:	eeb0 0a68 	vmovle.f32	s0, s17
 802b156:	f001 ff07 	bl	802cf68 <floorf>
 802b15a:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802b15e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b162:	bf58      	it	pl
 802b164:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 802b168:	eeb4 8ae9 	vcmpe.f32	s16, s19
 802b16c:	bf56      	itet	pl
 802b16e:	ee10 3a10 	vmovpl	r3, s0
 802b172:	2500      	movmi	r5, #0
 802b174:	b21d      	sxthpl	r5, r3
 802b176:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b17a:	bfd8      	it	le
 802b17c:	eeb0 8a69 	vmovle.f32	s16, s19
 802b180:	eeb4 9ac8 	vcmpe.f32	s18, s16
 802b184:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b188:	bf58      	it	pl
 802b18a:	eeb0 8a49 	vmovpl.f32	s16, s18
 802b18e:	eef4 8ac8 	vcmpe.f32	s17, s16
 802b192:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b196:	bf54      	ite	pl
 802b198:	eeb0 0a68 	vmovpl.f32	s0, s17
 802b19c:	eeb0 0a48 	vmovmi.f32	s0, s16
 802b1a0:	f001 fea0 	bl	802cee4 <ceilf>
 802b1a4:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 802b1a8:	803e      	strh	r6, [r7, #0]
 802b1aa:	ee07 3a90 	vmov	s15, r3
 802b1ae:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802b1b2:	807d      	strh	r5, [r7, #2]
 802b1b4:	eeb4 0ae7 	vcmpe.f32	s0, s15
 802b1b8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b1bc:	bfd8      	it	le
 802b1be:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 802b1c2:	eba8 0606 	sub.w	r6, r8, r6
 802b1c6:	bfdc      	itt	le
 802b1c8:	ee10 3a10 	vmovle	r3, s0
 802b1cc:	b21b      	sxthle	r3, r3
 802b1ce:	1b5d      	subs	r5, r3, r5
 802b1d0:	80be      	strh	r6, [r7, #4]
 802b1d2:	80fd      	strh	r5, [r7, #6]
 802b1d4:	ecbd 8b04 	vpop	{d8-d9}
 802b1d8:	4638      	mov	r0, r7
 802b1da:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0802b1de <_ZNK8touchgfx13TextureMapper17invalidateContentEv>:
 802b1de:	b513      	push	{r0, r1, r4, lr}
 802b1e0:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 802b1e4:	4604      	mov	r4, r0
 802b1e6:	b143      	cbz	r3, 802b1fa <_ZNK8touchgfx13TextureMapper17invalidateContentEv+0x1c>
 802b1e8:	4601      	mov	r1, r0
 802b1ea:	4668      	mov	r0, sp
 802b1ec:	f7ff ff36 	bl	802b05c <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>
 802b1f0:	6823      	ldr	r3, [r4, #0]
 802b1f2:	4669      	mov	r1, sp
 802b1f4:	691b      	ldr	r3, [r3, #16]
 802b1f6:	4620      	mov	r0, r4
 802b1f8:	4798      	blx	r3
 802b1fa:	b002      	add	sp, #8
 802b1fc:	bd10      	pop	{r4, pc}

0802b1fe <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>:
 802b1fe:	4603      	mov	r3, r0
 802b200:	3026      	adds	r0, #38	; 0x26
 802b202:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 802b206:	b90b      	cbnz	r3, 802b20c <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv+0xe>
 802b208:	f7ee bdfa 	b.w	8019e00 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
 802b20c:	f7ee be08 	b.w	8019e20 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>

0802b210 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
 802b210:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802b214:	ed2d 8b04 	vpush	{d8-d9}
 802b218:	4604      	mov	r4, r0
 802b21a:	469b      	mov	fp, r3
 802b21c:	f9b0 c008 	ldrsh.w	ip, [r0, #8]
 802b220:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 802b224:	f9b1 6000 	ldrsh.w	r6, [r1]
 802b228:	8888      	ldrh	r0, [r1, #4]
 802b22a:	b0b3      	sub	sp, #204	; 0xcc
 802b22c:	4430      	add	r0, r6
 802b22e:	b280      	uxth	r0, r0
 802b230:	9206      	str	r2, [sp, #24]
 802b232:	fa0f fe80 	sxth.w	lr, r0
 802b236:	2200      	movs	r2, #0
 802b238:	4596      	cmp	lr, r2
 802b23a:	f8dd a100 	ldr.w	sl, [sp, #256]	; 0x100
 802b23e:	f8dd 9104 	ldr.w	r9, [sp, #260]	; 0x104
 802b242:	f8dd 8108 	ldr.w	r8, [sp, #264]	; 0x108
 802b246:	9f43      	ldr	r7, [sp, #268]	; 0x10c
 802b248:	9211      	str	r2, [sp, #68]	; 0x44
 802b24a:	f340 8129 	ble.w	802b4a0 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 802b24e:	45b4      	cmp	ip, r6
 802b250:	f340 8126 	ble.w	802b4a0 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 802b254:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 802b258:	88ca      	ldrh	r2, [r1, #6]
 802b25a:	442a      	add	r2, r5
 802b25c:	b292      	uxth	r2, r2
 802b25e:	b211      	sxth	r1, r2
 802b260:	2900      	cmp	r1, #0
 802b262:	f340 811d 	ble.w	802b4a0 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 802b266:	42ab      	cmp	r3, r5
 802b268:	f340 811a 	ble.w	802b4a0 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 802b26c:	45f4      	cmp	ip, lr
 802b26e:	bfb8      	it	lt
 802b270:	fa1f f08c 	uxthlt.w	r0, ip
 802b274:	428b      	cmp	r3, r1
 802b276:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 802b27a:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 802b27e:	bfb8      	it	lt
 802b280:	b29a      	uxthlt	r2, r3
 802b282:	1b80      	subs	r0, r0, r6
 802b284:	1b52      	subs	r2, r2, r5
 802b286:	f8ad 0048 	strh.w	r0, [sp, #72]	; 0x48
 802b28a:	f8ad 204a 	strh.w	r2, [sp, #74]	; 0x4a
 802b28e:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 802b292:	f8ad 5046 	strh.w	r5, [sp, #70]	; 0x46
 802b296:	ab11      	add	r3, sp, #68	; 0x44
 802b298:	e893 0003 	ldmia.w	r3, {r0, r1}
 802b29c:	6822      	ldr	r2, [r4, #0]
 802b29e:	9307      	str	r3, [sp, #28]
 802b2a0:	ad13      	add	r5, sp, #76	; 0x4c
 802b2a2:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 802b2a4:	e885 0003 	stmia.w	r5, {r0, r1}
 802b2a8:	4629      	mov	r1, r5
 802b2aa:	4620      	mov	r0, r4
 802b2ac:	4790      	blx	r2
 802b2ae:	4621      	mov	r1, r4
 802b2b0:	a815      	add	r0, sp, #84	; 0x54
 802b2b2:	f7ee fd01 	bl	8019cb8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 802b2b6:	a815      	add	r0, sp, #84	; 0x54
 802b2b8:	f7ed f9c6 	bl	8018648 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802b2bc:	9b07      	ldr	r3, [sp, #28]
 802b2be:	1d26      	adds	r6, r4, #4
 802b2c0:	4618      	mov	r0, r3
 802b2c2:	4631      	mov	r1, r6
 802b2c4:	f7ed fa04 	bl	80186d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802b2c8:	4628      	mov	r0, r5
 802b2ca:	f104 0526 	add.w	r5, r4, #38	; 0x26
 802b2ce:	f7ed f9bb 	bl	8018648 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802b2d2:	4628      	mov	r0, r5
 802b2d4:	f7f1 f8a8 	bl	801c428 <_ZNK8touchgfx6Bitmap7getDataEv>
 802b2d8:	9007      	str	r0, [sp, #28]
 802b2da:	2800      	cmp	r0, #0
 802b2dc:	f000 80db 	beq.w	802b496 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x286>
 802b2e0:	f8db 2000 	ldr.w	r2, [fp]
 802b2e4:	9209      	str	r2, [sp, #36]	; 0x24
 802b2e6:	f8db 2004 	ldr.w	r2, [fp, #4]
 802b2ea:	920a      	str	r2, [sp, #40]	; 0x28
 802b2ec:	f8db 2008 	ldr.w	r2, [fp, #8]
 802b2f0:	920b      	str	r2, [sp, #44]	; 0x2c
 802b2f2:	f8db 200c 	ldr.w	r2, [fp, #12]
 802b2f6:	920c      	str	r2, [sp, #48]	; 0x30
 802b2f8:	f8da 2000 	ldr.w	r2, [sl]
 802b2fc:	920d      	str	r2, [sp, #52]	; 0x34
 802b2fe:	f8da 2004 	ldr.w	r2, [sl, #4]
 802b302:	920e      	str	r2, [sp, #56]	; 0x38
 802b304:	f8da 2008 	ldr.w	r2, [sl, #8]
 802b308:	920f      	str	r2, [sp, #60]	; 0x3c
 802b30a:	f8da 200c 	ldr.w	r2, [sl, #12]
 802b30e:	9210      	str	r2, [sp, #64]	; 0x40
 802b310:	a90d      	add	r1, sp, #52	; 0x34
 802b312:	4632      	mov	r2, r6
 802b314:	a809      	add	r0, sp, #36	; 0x24
 802b316:	f7ed f9bf 	bl	8018698 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 802b31a:	4632      	mov	r2, r6
 802b31c:	a90e      	add	r1, sp, #56	; 0x38
 802b31e:	a80a      	add	r0, sp, #40	; 0x28
 802b320:	f7ed f9ba 	bl	8018698 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 802b324:	4632      	mov	r2, r6
 802b326:	a90f      	add	r1, sp, #60	; 0x3c
 802b328:	a80b      	add	r0, sp, #44	; 0x2c
 802b32a:	f7ed f9b5 	bl	8018698 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 802b32e:	4632      	mov	r2, r6
 802b330:	a910      	add	r1, sp, #64	; 0x40
 802b332:	a80c      	add	r0, sp, #48	; 0x30
 802b334:	f7ed f9b0 	bl	8018698 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 802b338:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
 802b33c:	edd7 4a00 	vldr	s9, [r7]
 802b340:	edd7 5a01 	vldr	s11, [r7, #4]
 802b344:	ed98 4a00 	vldr	s8, [r8]
 802b348:	ed98 5a01 	vldr	s10, [r8, #4]
 802b34c:	ed99 9a00 	vldr	s18, [r9]
 802b350:	ed99 8a01 	vldr	s16, [r9, #4]
 802b354:	edd9 8a02 	vldr	s17, [r9, #8]
 802b358:	f8d9 e00c 	ldr.w	lr, [r9, #12]
 802b35c:	f8d8 c00c 	ldr.w	ip, [r8, #12]
 802b360:	ed8d 4a21 	vstr	s8, [sp, #132]	; 0x84
 802b364:	eef0 6a67 	vmov.f32	s13, s15
 802b368:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
 802b36c:	edcd 4a22 	vstr	s9, [sp, #136]	; 0x88
 802b370:	eeb0 7a67 	vmov.f32	s14, s15
 802b374:	eddd 7a0e 	vldr	s15, [sp, #56]	; 0x38
 802b378:	ed8d 5a26 	vstr	s10, [sp, #152]	; 0x98
 802b37c:	eeb0 6a67 	vmov.f32	s12, s15
 802b380:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 802b384:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
 802b388:	edcd 5a27 	vstr	s11, [sp, #156]	; 0x9c
 802b38c:	ee16 6a10 	vmov	r6, s12
 802b390:	eeb0 6a67 	vmov.f32	s12, s15
 802b394:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 802b398:	eddd 7a0f 	vldr	s15, [sp, #60]	; 0x3c
 802b39c:	f8d7 a008 	ldr.w	sl, [r7, #8]
 802b3a0:	f8d8 b008 	ldr.w	fp, [r8, #8]
 802b3a4:	68ff      	ldr	r7, [r7, #12]
 802b3a6:	9624      	str	r6, [sp, #144]	; 0x90
 802b3a8:	ee16 0a10 	vmov	r0, s12
 802b3ac:	eeb0 6a67 	vmov.f32	s12, s15
 802b3b0:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 802b3b4:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
 802b3b8:	ed8d 9a20 	vstr	s18, [sp, #128]	; 0x80
 802b3bc:	ee16 1a10 	vmov	r1, s12
 802b3c0:	eeb0 6a67 	vmov.f32	s12, s15
 802b3c4:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 802b3c8:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
 802b3cc:	ee16 2a10 	vmov	r2, s12
 802b3d0:	ed9d 6a09 	vldr	s12, [sp, #36]	; 0x24
 802b3d4:	eddd 7a10 	vldr	s15, [sp, #64]	; 0x40
 802b3d8:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 802b3dc:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 802b3e0:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 802b3e4:	e9cd 0128 	strd	r0, r1, [sp, #160]	; 0xa0
 802b3e8:	ed8d 6a1e 	vstr	s12, [sp, #120]	; 0x78
 802b3ec:	ed8d 7a23 	vstr	s14, [sp, #140]	; 0x8c
 802b3f0:	ed8d 8a25 	vstr	s16, [sp, #148]	; 0x94
 802b3f4:	edcd 8a2a 	vstr	s17, [sp, #168]	; 0xa8
 802b3f8:	922d      	str	r2, [sp, #180]	; 0xb4
 802b3fa:	4a2b      	ldr	r2, [pc, #172]	; (802b4a8 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x298>)
 802b3fc:	9b06      	ldr	r3, [sp, #24]
 802b3fe:	8812      	ldrh	r2, [r2, #0]
 802b400:	9317      	str	r3, [sp, #92]	; 0x5c
 802b402:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
 802b406:	9b07      	ldr	r3, [sp, #28]
 802b408:	edcd 7a2e 	vstr	s15, [sp, #184]	; 0xb8
 802b40c:	4628      	mov	r0, r5
 802b40e:	f8cd e0bc 	str.w	lr, [sp, #188]	; 0xbc
 802b412:	f8cd c0c0 	str.w	ip, [sp, #192]	; 0xc0
 802b416:	9218      	str	r2, [sp, #96]	; 0x60
 802b418:	9319      	str	r3, [sp, #100]	; 0x64
 802b41a:	f8cd b0ac 	str.w	fp, [sp, #172]	; 0xac
 802b41e:	f8cd a0b0 	str.w	sl, [sp, #176]	; 0xb0
 802b422:	9731      	str	r7, [sp, #196]	; 0xc4
 802b424:	f7f1 f830 	bl	801c488 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 802b428:	901a      	str	r0, [sp, #104]	; 0x68
 802b42a:	4628      	mov	r0, r5
 802b42c:	f7f0 ff10 	bl	801c250 <_ZNK8touchgfx6Bitmap8getWidthEv>
 802b430:	901b      	str	r0, [sp, #108]	; 0x6c
 802b432:	4628      	mov	r0, r5
 802b434:	f7f0 ff40 	bl	801c2b8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 802b438:	901c      	str	r0, [sp, #112]	; 0x70
 802b43a:	4628      	mov	r0, r5
 802b43c:	f7f0 ff08 	bl	801c250 <_ZNK8touchgfx6Bitmap8getWidthEv>
 802b440:	eeb4 9a48 	vcmp.f32	s18, s16
 802b444:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b448:	901d      	str	r0, [sp, #116]	; 0x74
 802b44a:	f8b4 608c 	ldrh.w	r6, [r4, #140]	; 0x8c
 802b44e:	d107      	bne.n	802b460 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x250>
 802b450:	eeb4 8a68 	vcmp.f32	s16, s17
 802b454:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b458:	f64f 73ff 	movw	r3, #65535	; 0xffff
 802b45c:	bf08      	it	eq
 802b45e:	461e      	moveq	r6, r3
 802b460:	4b12      	ldr	r3, [pc, #72]	; (802b4ac <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x29c>)
 802b462:	681b      	ldr	r3, [r3, #0]
 802b464:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 802b468:	b10a      	cbz	r2, 802b46e <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x25e>
 802b46a:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 802b46c:	b905      	cbnz	r5, 802b470 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x260>
 802b46e:	689d      	ldr	r5, [r3, #8]
 802b470:	682b      	ldr	r3, [r5, #0]
 802b472:	4620      	mov	r0, r4
 802b474:	6c1f      	ldr	r7, [r3, #64]	; 0x40
 802b476:	f7ff fec2 	bl	802b1fe <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>
 802b47a:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 802b47e:	9604      	str	r6, [sp, #16]
 802b480:	e9cd 0302 	strd	r0, r3, [sp, #8]
 802b484:	ab13      	add	r3, sp, #76	; 0x4c
 802b486:	9301      	str	r3, [sp, #4]
 802b488:	ab15      	add	r3, sp, #84	; 0x54
 802b48a:	9300      	str	r3, [sp, #0]
 802b48c:	aa1e      	add	r2, sp, #120	; 0x78
 802b48e:	ab19      	add	r3, sp, #100	; 0x64
 802b490:	a917      	add	r1, sp, #92	; 0x5c
 802b492:	4628      	mov	r0, r5
 802b494:	47b8      	blx	r7
 802b496:	b033      	add	sp, #204	; 0xcc
 802b498:	ecbd 8b04 	vpop	{d8-d9}
 802b49c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802b4a0:	2300      	movs	r3, #0
 802b4a2:	9312      	str	r3, [sp, #72]	; 0x48
 802b4a4:	e6f7      	b.n	802b296 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x86>
 802b4a6:	bf00      	nop
 802b4a8:	20013836 	.word	0x20013836
 802b4ac:	2001383c 	.word	0x2001383c

0802b4b0 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE>:
 802b4b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802b4b4:	ed2d 8b02 	vpush	{d8}
 802b4b8:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 802b4bc:	b098      	sub	sp, #96	; 0x60
 802b4be:	4604      	mov	r4, r0
 802b4c0:	4688      	mov	r8, r1
 802b4c2:	2b00      	cmp	r3, #0
 802b4c4:	d077      	beq.n	802b5b6 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x106>
 802b4c6:	f100 0526 	add.w	r5, r0, #38	; 0x26
 802b4ca:	4628      	mov	r0, r5
 802b4cc:	f7f0 fec0 	bl	801c250 <_ZNK8touchgfx6Bitmap8getWidthEv>
 802b4d0:	ee07 0a90 	vmov	s15, r0
 802b4d4:	4628      	mov	r0, r5
 802b4d6:	eeb8 8ae7 	vcvt.f32.s32	s16, s15
 802b4da:	f7f0 feed 	bl	801c2b8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 802b4de:	4b4e      	ldr	r3, [pc, #312]	; (802b618 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x168>)
 802b4e0:	781b      	ldrb	r3, [r3, #0]
 802b4e2:	ee07 0a90 	vmov	s15, r0
 802b4e6:	2b01      	cmp	r3, #1
 802b4e8:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 802b4ec:	eeff 7a00 	vmov.f32	s15, #240	; 0xbf800000 -1.0
 802b4f0:	d066      	beq.n	802b5c0 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x110>
 802b4f2:	eeb0 6a47 	vmov.f32	s12, s14
 802b4f6:	ee17 3a10 	vmov	r3, s14
 802b4fa:	eeb0 4a48 	vmov.f32	s8, s16
 802b4fe:	eeb0 7a48 	vmov.f32	s14, s16
 802b502:	eef0 4a67 	vmov.f32	s9, s15
 802b506:	eeb0 8a67 	vmov.f32	s16, s15
 802b50a:	ed94 5a17 	vldr	s10, [r4, #92]	; 0x5c
 802b50e:	edd4 5a18 	vldr	s11, [r4, #96]	; 0x60
 802b512:	ed94 3a1b 	vldr	s6, [r4, #108]	; 0x6c
 802b516:	edd4 2a1d 	vldr	s5, [r4, #116]	; 0x74
 802b51a:	ed94 2a1a 	vldr	s4, [r4, #104]	; 0x68
 802b51e:	edd4 3a1e 	vldr	s7, [r4, #120]	; 0x78
 802b522:	6f25      	ldr	r5, [r4, #112]	; 0x70
 802b524:	6e66      	ldr	r6, [r4, #100]	; 0x64
 802b526:	6fe2      	ldr	r2, [r4, #124]	; 0x7c
 802b528:	f8d4 c080 	ldr.w	ip, [r4, #128]	; 0x80
 802b52c:	f8d4 7084 	ldr.w	r7, [r4, #132]	; 0x84
 802b530:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 802b534:	ee73 1a65 	vsub.f32	s3, s6, s11
 802b538:	ee72 6ac5 	vsub.f32	s13, s5, s10
 802b53c:	ee32 1a45 	vsub.f32	s2, s4, s10
 802b540:	ee66 6ae1 	vnmul.f32	s13, s13, s3
 802b544:	ee73 1ae5 	vsub.f32	s3, s7, s11
 802b548:	eee1 6a21 	vfma.f32	s13, s2, s3
 802b54c:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 802b550:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b554:	dd3d      	ble.n	802b5d2 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x122>
 802b556:	ed8d 5a04 	vstr	s10, [sp, #16]
 802b55a:	ed8d 2a05 	vstr	s4, [sp, #20]
 802b55e:	edcd 2a06 	vstr	s5, [sp, #24]
 802b562:	f8cd c01c 	str.w	ip, [sp, #28]
 802b566:	edcd 5a08 	vstr	s11, [sp, #32]
 802b56a:	ed8d 3a09 	vstr	s6, [sp, #36]	; 0x24
 802b56e:	edcd 3a0a 	vstr	s7, [sp, #40]	; 0x28
 802b572:	970b      	str	r7, [sp, #44]	; 0x2c
 802b574:	960c      	str	r6, [sp, #48]	; 0x30
 802b576:	950d      	str	r5, [sp, #52]	; 0x34
 802b578:	920e      	str	r2, [sp, #56]	; 0x38
 802b57a:	900f      	str	r0, [sp, #60]	; 0x3c
 802b57c:	edcd 7a10 	vstr	s15, [sp, #64]	; 0x40
 802b580:	ed8d 4a11 	vstr	s8, [sp, #68]	; 0x44
 802b584:	ed8d 7a12 	vstr	s14, [sp, #72]	; 0x48
 802b588:	edcd 4a13 	vstr	s9, [sp, #76]	; 0x4c
 802b58c:	ed8d 8a14 	vstr	s16, [sp, #80]	; 0x50
 802b590:	edcd 7a15 	vstr	s15, [sp, #84]	; 0x54
 802b594:	9316      	str	r3, [sp, #88]	; 0x58
 802b596:	ed8d 6a17 	vstr	s12, [sp, #92]	; 0x5c
 802b59a:	ab14      	add	r3, sp, #80	; 0x50
 802b59c:	9303      	str	r3, [sp, #12]
 802b59e:	ab10      	add	r3, sp, #64	; 0x40
 802b5a0:	9302      	str	r3, [sp, #8]
 802b5a2:	ab0c      	add	r3, sp, #48	; 0x30
 802b5a4:	9301      	str	r3, [sp, #4]
 802b5a6:	ab08      	add	r3, sp, #32
 802b5a8:	9300      	str	r3, [sp, #0]
 802b5aa:	2200      	movs	r2, #0
 802b5ac:	ab04      	add	r3, sp, #16
 802b5ae:	4641      	mov	r1, r8
 802b5b0:	4620      	mov	r0, r4
 802b5b2:	f7ff fe2d 	bl	802b210 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
 802b5b6:	b018      	add	sp, #96	; 0x60
 802b5b8:	ecbd 8b02 	vpop	{d8}
 802b5bc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802b5c0:	eeb0 6a48 	vmov.f32	s12, s16
 802b5c4:	eef0 4a47 	vmov.f32	s9, s14
 802b5c8:	ee17 3a90 	vmov	r3, s15
 802b5cc:	eeb0 4a67 	vmov.f32	s8, s15
 802b5d0:	e79b      	b.n	802b50a <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x5a>
 802b5d2:	ed8d 5a05 	vstr	s10, [sp, #20]
 802b5d6:	ed8d 2a04 	vstr	s4, [sp, #16]
 802b5da:	f8cd c018 	str.w	ip, [sp, #24]
 802b5de:	edcd 2a07 	vstr	s5, [sp, #28]
 802b5e2:	edcd 5a09 	vstr	s11, [sp, #36]	; 0x24
 802b5e6:	ed8d 3a08 	vstr	s6, [sp, #32]
 802b5ea:	970a      	str	r7, [sp, #40]	; 0x28
 802b5ec:	edcd 3a0b 	vstr	s7, [sp, #44]	; 0x2c
 802b5f0:	960d      	str	r6, [sp, #52]	; 0x34
 802b5f2:	950c      	str	r5, [sp, #48]	; 0x30
 802b5f4:	900e      	str	r0, [sp, #56]	; 0x38
 802b5f6:	920f      	str	r2, [sp, #60]	; 0x3c
 802b5f8:	edcd 7a11 	vstr	s15, [sp, #68]	; 0x44
 802b5fc:	ed8d 4a10 	vstr	s8, [sp, #64]	; 0x40
 802b600:	edcd 4a12 	vstr	s9, [sp, #72]	; 0x48
 802b604:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 802b608:	ed8d 8a15 	vstr	s16, [sp, #84]	; 0x54
 802b60c:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 802b610:	ed8d 6a16 	vstr	s12, [sp, #88]	; 0x58
 802b614:	9317      	str	r3, [sp, #92]	; 0x5c
 802b616:	e7c0      	b.n	802b59a <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0xea>
 802b618:	20013834 	.word	0x20013834

0802b61c <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>:
 802b61c:	b5f0      	push	{r4, r5, r6, r7, lr}
 802b61e:	b08d      	sub	sp, #52	; 0x34
 802b620:	2300      	movs	r3, #0
 802b622:	9304      	str	r3, [sp, #16]
 802b624:	9305      	str	r3, [sp, #20]
 802b626:	9306      	str	r3, [sp, #24]
 802b628:	aa04      	add	r2, sp, #16
 802b62a:	f04f 537e 	mov.w	r3, #1065353216	; 0x3f800000
 802b62e:	9307      	str	r3, [sp, #28]
 802b630:	f100 0640 	add.w	r6, r0, #64	; 0x40
 802b634:	4613      	mov	r3, r2
 802b636:	f101 0710 	add.w	r7, r1, #16
 802b63a:	eddf 7a0f 	vldr	s15, [pc, #60]	; 802b678 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x5c>
 802b63e:	460c      	mov	r4, r1
 802b640:	4605      	mov	r5, r0
 802b642:	ecb4 7a01 	vldmia	r4!, {s14}
 802b646:	ecf5 6a01 	vldmia	r5!, {s13}
 802b64a:	42bc      	cmp	r4, r7
 802b64c:	eee6 7a87 	vfma.f32	s15, s13, s14
 802b650:	d1f7      	bne.n	802b642 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x26>
 802b652:	3010      	adds	r0, #16
 802b654:	42b0      	cmp	r0, r6
 802b656:	ece2 7a01 	vstmia	r2!, {s15}
 802b65a:	d1ee      	bne.n	802b63a <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x1e>
 802b65c:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 802b65e:	ac0c      	add	r4, sp, #48	; 0x30
 802b660:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
 802b664:	ed9d 0a08 	vldr	s0, [sp, #32]
 802b668:	eddd 0a09 	vldr	s1, [sp, #36]	; 0x24
 802b66c:	ed9d 1a0a 	vldr	s2, [sp, #40]	; 0x28
 802b670:	eddd 1a0b 	vldr	s3, [sp, #44]	; 0x2c
 802b674:	b00d      	add	sp, #52	; 0x34
 802b676:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802b678:	00000000 	.word	0x00000000

0802b67c <_ZN8touchgfx9Matrix4x4C1Ev>:
 802b67c:	ed9f 7a0b 	vldr	s14, [pc, #44]	; 802b6ac <_ZN8touchgfx9Matrix4x4C1Ev+0x30>
 802b680:	2300      	movs	r3, #0
 802b682:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 802b686:	eb00 1103 	add.w	r1, r0, r3, lsl #4
 802b68a:	2200      	movs	r2, #0
 802b68c:	4293      	cmp	r3, r2
 802b68e:	f102 0201 	add.w	r2, r2, #1
 802b692:	bf14      	ite	ne
 802b694:	eef0 6a47 	vmovne.f32	s13, s14
 802b698:	eef0 6a67 	vmoveq.f32	s13, s15
 802b69c:	2a04      	cmp	r2, #4
 802b69e:	ece1 6a01 	vstmia	r1!, {s13}
 802b6a2:	d1f3      	bne.n	802b68c <_ZN8touchgfx9Matrix4x4C1Ev+0x10>
 802b6a4:	3301      	adds	r3, #1
 802b6a6:	2b04      	cmp	r3, #4
 802b6a8:	d1ed      	bne.n	802b686 <_ZN8touchgfx9Matrix4x4C1Ev+0xa>
 802b6aa:	4770      	bx	lr
 802b6ac:	00000000 	.word	0x00000000

0802b6b0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>:
 802b6b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802b6b4:	460c      	mov	r4, r1
 802b6b6:	4605      	mov	r5, r0
 802b6b8:	4690      	mov	r8, r2
 802b6ba:	f7ff ffdf 	bl	802b67c <_ZN8touchgfx9Matrix4x4C1Ev>
 802b6be:	4628      	mov	r0, r5
 802b6c0:	4621      	mov	r1, r4
 802b6c2:	f104 0c40 	add.w	ip, r4, #64	; 0x40
 802b6c6:	2300      	movs	r3, #0
 802b6c8:	eddf 7a0f 	vldr	s15, [pc, #60]	; 802b708 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x58>
 802b6cc:	eb08 0603 	add.w	r6, r8, r3
 802b6d0:	460f      	mov	r7, r1
 802b6d2:	2400      	movs	r4, #0
 802b6d4:	4632      	mov	r2, r6
 802b6d6:	ecf7 6a01 	vldmia	r7!, {s13}
 802b6da:	ed92 7a00 	vldr	s14, [r2]
 802b6de:	3401      	adds	r4, #1
 802b6e0:	2c04      	cmp	r4, #4
 802b6e2:	f106 0610 	add.w	r6, r6, #16
 802b6e6:	eee6 7a87 	vfma.f32	s15, s13, s14
 802b6ea:	d1f3      	bne.n	802b6d4 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x24>
 802b6ec:	18c2      	adds	r2, r0, r3
 802b6ee:	3304      	adds	r3, #4
 802b6f0:	2b10      	cmp	r3, #16
 802b6f2:	edc2 7a00 	vstr	s15, [r2]
 802b6f6:	d1e7      	bne.n	802b6c8 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x18>
 802b6f8:	3110      	adds	r1, #16
 802b6fa:	4561      	cmp	r1, ip
 802b6fc:	f100 0010 	add.w	r0, r0, #16
 802b700:	d1e1      	bne.n	802b6c6 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x16>
 802b702:	4628      	mov	r0, r5
 802b704:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802b708:	00000000 	.word	0x00000000

0802b70c <_ZN8touchgfx9Matrix4x415setViewDistanceEf>:
 802b70c:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 802b710:	ee87 0a80 	vdiv.f32	s0, s15, s0
 802b714:	f100 0320 	add.w	r3, r0, #32
 802b718:	3030      	adds	r0, #48	; 0x30
 802b71a:	ecf3 7a01 	vldmia	r3!, {s15}
 802b71e:	ee60 7a27 	vmul.f32	s15, s0, s15
 802b722:	4283      	cmp	r3, r0
 802b724:	edc3 7a03 	vstr	s15, [r3, #12]
 802b728:	d1f7      	bne.n	802b71a <_ZN8touchgfx9Matrix4x415setViewDistanceEf+0xe>
 802b72a:	4770      	bx	lr

0802b72c <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>:
 802b72c:	b510      	push	{r4, lr}
 802b72e:	ed2d 8b02 	vpush	{d8}
 802b732:	4604      	mov	r4, r0
 802b734:	eef0 8a40 	vmov.f32	s17, s0
 802b738:	f001 fb8a 	bl	802ce50 <sinf>
 802b73c:	eeb0 8a40 	vmov.f32	s16, s0
 802b740:	eeb0 0a68 	vmov.f32	s0, s17
 802b744:	f001 fb38 	bl	802cdb8 <cosf>
 802b748:	f104 0310 	add.w	r3, r4, #16
 802b74c:	f104 0220 	add.w	r2, r4, #32
 802b750:	eeb1 6a48 	vneg.f32	s12, s16
 802b754:	edd3 7a04 	vldr	s15, [r3, #16]
 802b758:	edd3 6a00 	vldr	s13, [r3]
 802b75c:	ee26 7a27 	vmul.f32	s14, s12, s15
 802b760:	ee67 7a80 	vmul.f32	s15, s15, s0
 802b764:	eea6 7a80 	vfma.f32	s14, s13, s0
 802b768:	eee6 7a88 	vfma.f32	s15, s13, s16
 802b76c:	eca3 7a01 	vstmia	r3!, {s14}
 802b770:	429a      	cmp	r2, r3
 802b772:	edc3 7a03 	vstr	s15, [r3, #12]
 802b776:	d1ed      	bne.n	802b754 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf+0x28>
 802b778:	ecbd 8b02 	vpop	{d8}
 802b77c:	4620      	mov	r0, r4
 802b77e:	bd10      	pop	{r4, pc}

0802b780 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>:
 802b780:	b510      	push	{r4, lr}
 802b782:	ed2d 8b02 	vpush	{d8}
 802b786:	4604      	mov	r4, r0
 802b788:	eef0 8a40 	vmov.f32	s17, s0
 802b78c:	f001 fb60 	bl	802ce50 <sinf>
 802b790:	eeb0 8a40 	vmov.f32	s16, s0
 802b794:	eeb0 0a68 	vmov.f32	s0, s17
 802b798:	f001 fb0e 	bl	802cdb8 <cosf>
 802b79c:	4623      	mov	r3, r4
 802b79e:	f104 0210 	add.w	r2, r4, #16
 802b7a2:	eeb1 6a48 	vneg.f32	s12, s16
 802b7a6:	edd3 7a08 	vldr	s15, [r3, #32]
 802b7aa:	edd3 6a00 	vldr	s13, [r3]
 802b7ae:	ee27 7a88 	vmul.f32	s14, s15, s16
 802b7b2:	ee67 7a80 	vmul.f32	s15, s15, s0
 802b7b6:	eea6 7a80 	vfma.f32	s14, s13, s0
 802b7ba:	eee6 7a26 	vfma.f32	s15, s12, s13
 802b7be:	eca3 7a01 	vstmia	r3!, {s14}
 802b7c2:	429a      	cmp	r2, r3
 802b7c4:	edc3 7a07 	vstr	s15, [r3, #28]
 802b7c8:	d1ed      	bne.n	802b7a6 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf+0x26>
 802b7ca:	ecbd 8b02 	vpop	{d8}
 802b7ce:	4620      	mov	r0, r4
 802b7d0:	bd10      	pop	{r4, pc}

0802b7d2 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>:
 802b7d2:	b510      	push	{r4, lr}
 802b7d4:	ed2d 8b02 	vpush	{d8}
 802b7d8:	4604      	mov	r4, r0
 802b7da:	eef0 8a40 	vmov.f32	s17, s0
 802b7de:	f001 fb37 	bl	802ce50 <sinf>
 802b7e2:	eeb0 8a40 	vmov.f32	s16, s0
 802b7e6:	eeb0 0a68 	vmov.f32	s0, s17
 802b7ea:	f001 fae5 	bl	802cdb8 <cosf>
 802b7ee:	4623      	mov	r3, r4
 802b7f0:	f104 0210 	add.w	r2, r4, #16
 802b7f4:	eeb1 6a48 	vneg.f32	s12, s16
 802b7f8:	edd3 7a04 	vldr	s15, [r3, #16]
 802b7fc:	edd3 6a00 	vldr	s13, [r3]
 802b800:	ee26 7a27 	vmul.f32	s14, s12, s15
 802b804:	ee67 7a80 	vmul.f32	s15, s15, s0
 802b808:	eea6 7a80 	vfma.f32	s14, s13, s0
 802b80c:	eee6 7a88 	vfma.f32	s15, s13, s16
 802b810:	eca3 7a01 	vstmia	r3!, {s14}
 802b814:	429a      	cmp	r2, r3
 802b816:	edc3 7a03 	vstr	s15, [r3, #12]
 802b81a:	d1ed      	bne.n	802b7f8 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf+0x26>
 802b81c:	ecbd 8b02 	vpop	{d8}
 802b820:	4620      	mov	r0, r4
 802b822:	bd10      	pop	{r4, pc}

0802b824 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>:
 802b824:	4603      	mov	r3, r0
 802b826:	f100 0210 	add.w	r2, r0, #16
 802b82a:	ed93 7a0c 	vldr	s14, [r3, #48]	; 0x30
 802b82e:	edd3 7a00 	vldr	s15, [r3]
 802b832:	eee7 7a00 	vfma.f32	s15, s14, s0
 802b836:	ece3 7a01 	vstmia	r3!, {s15}
 802b83a:	4293      	cmp	r3, r2
 802b83c:	d1f5      	bne.n	802b82a <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf+0x6>
 802b83e:	4770      	bx	lr

0802b840 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>:
 802b840:	f100 0310 	add.w	r3, r0, #16
 802b844:	f100 0220 	add.w	r2, r0, #32
 802b848:	ed93 7a08 	vldr	s14, [r3, #32]
 802b84c:	edd3 7a00 	vldr	s15, [r3]
 802b850:	eee7 7a00 	vfma.f32	s15, s14, s0
 802b854:	ece3 7a01 	vstmia	r3!, {s15}
 802b858:	4293      	cmp	r3, r2
 802b85a:	d1f5      	bne.n	802b848 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf+0x8>
 802b85c:	4770      	bx	lr

0802b85e <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>:
 802b85e:	f100 0320 	add.w	r3, r0, #32
 802b862:	f100 0230 	add.w	r2, r0, #48	; 0x30
 802b866:	ed93 7a04 	vldr	s14, [r3, #16]
 802b86a:	edd3 7a00 	vldr	s15, [r3]
 802b86e:	eee7 7a00 	vfma.f32	s15, s14, s0
 802b872:	ece3 7a01 	vstmia	r3!, {s15}
 802b876:	4293      	cmp	r3, r2
 802b878:	d1f5      	bne.n	802b866 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf+0x8>
 802b87a:	4770      	bx	lr

0802b87c <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>:
 802b87c:	4603      	mov	r3, r0
 802b87e:	f100 0210 	add.w	r2, r0, #16
 802b882:	edd3 7a00 	vldr	s15, [r3]
 802b886:	ee67 7a80 	vmul.f32	s15, s15, s0
 802b88a:	ece3 7a01 	vstmia	r3!, {s15}
 802b88e:	4293      	cmp	r3, r2
 802b890:	d1f7      	bne.n	802b882 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf+0x6>
 802b892:	4770      	bx	lr

0802b894 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>:
 802b894:	f100 0310 	add.w	r3, r0, #16
 802b898:	f100 0220 	add.w	r2, r0, #32
 802b89c:	edd3 7a00 	vldr	s15, [r3]
 802b8a0:	ee67 7a80 	vmul.f32	s15, s15, s0
 802b8a4:	ece3 7a01 	vstmia	r3!, {s15}
 802b8a8:	4293      	cmp	r3, r2
 802b8aa:	d1f7      	bne.n	802b89c <_ZN8touchgfx9Matrix4x417concatenateYScaleEf+0x8>
 802b8ac:	4770      	bx	lr

0802b8ae <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>:
 802b8ae:	f100 0320 	add.w	r3, r0, #32
 802b8b2:	f100 0230 	add.w	r2, r0, #48	; 0x30
 802b8b6:	edd3 7a00 	vldr	s15, [r3]
 802b8ba:	ee67 7a80 	vmul.f32	s15, s15, s0
 802b8be:	ece3 7a01 	vstmia	r3!, {s15}
 802b8c2:	4293      	cmp	r3, r2
 802b8c4:	d1f7      	bne.n	802b8b6 <_ZN8touchgfx9Matrix4x417concatenateZScaleEf+0x8>
 802b8c6:	4770      	bx	lr

0802b8c8 <arm_mean_f32>:
 802b8c8:	b430      	push	{r4, r5}
 802b8ca:	088d      	lsrs	r5, r1, #2
 802b8cc:	eddf 7a17 	vldr	s15, [pc, #92]	; 802b92c <arm_mean_f32+0x64>
 802b8d0:	d018      	beq.n	802b904 <arm_mean_f32+0x3c>
 802b8d2:	f100 0310 	add.w	r3, r0, #16
 802b8d6:	462c      	mov	r4, r5
 802b8d8:	ed13 7a04 	vldr	s14, [r3, #-16]
 802b8dc:	ed53 5a03 	vldr	s11, [r3, #-12]
 802b8e0:	ed13 6a02 	vldr	s12, [r3, #-8]
 802b8e4:	ed53 6a01 	vldr	s13, [r3, #-4]
 802b8e8:	ee37 7a87 	vadd.f32	s14, s15, s14
 802b8ec:	3c01      	subs	r4, #1
 802b8ee:	ee77 7a25 	vadd.f32	s15, s14, s11
 802b8f2:	f103 0310 	add.w	r3, r3, #16
 802b8f6:	ee77 7a86 	vadd.f32	s15, s15, s12
 802b8fa:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802b8fe:	d1eb      	bne.n	802b8d8 <arm_mean_f32+0x10>
 802b900:	eb00 1005 	add.w	r0, r0, r5, lsl #4
 802b904:	f011 0303 	ands.w	r3, r1, #3
 802b908:	d005      	beq.n	802b916 <arm_mean_f32+0x4e>
 802b90a:	ecb0 7a01 	vldmia	r0!, {s14}
 802b90e:	3b01      	subs	r3, #1
 802b910:	ee77 7a87 	vadd.f32	s15, s15, s14
 802b914:	d1f9      	bne.n	802b90a <arm_mean_f32+0x42>
 802b916:	ee07 1a10 	vmov	s14, r1
 802b91a:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 802b91e:	bc30      	pop	{r4, r5}
 802b920:	eec7 7a87 	vdiv.f32	s15, s15, s14
 802b924:	edc2 7a00 	vstr	s15, [r2]
 802b928:	4770      	bx	lr
 802b92a:	bf00      	nop
 802b92c:	00000000 	.word	0x00000000

0802b930 <arm_max_f32>:
 802b930:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802b934:	1e4f      	subs	r7, r1, #1
 802b936:	ea5f 0897 	movs.w	r8, r7, lsr #2
 802b93a:	f100 0e04 	add.w	lr, r0, #4
 802b93e:	edd0 7a00 	vldr	s15, [r0]
 802b942:	d058      	beq.n	802b9f6 <arm_max_f32+0xc6>
 802b944:	3014      	adds	r0, #20
 802b946:	46c4      	mov	ip, r8
 802b948:	2604      	movs	r6, #4
 802b94a:	2400      	movs	r4, #0
 802b94c:	ed10 6a04 	vldr	s12, [r0, #-16]
 802b950:	ed50 6a03 	vldr	s13, [r0, #-12]
 802b954:	ed10 7a02 	vldr	s14, [r0, #-8]
 802b958:	ed50 5a01 	vldr	s11, [r0, #-4]
 802b95c:	eeb4 6ae7 	vcmpe.f32	s12, s15
 802b960:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b964:	bfc8      	it	gt
 802b966:	eef0 7a46 	vmovgt.f32	s15, s12
 802b96a:	f1a6 0503 	sub.w	r5, r6, #3
 802b96e:	eef4 7ae6 	vcmpe.f32	s15, s13
 802b972:	bfc8      	it	gt
 802b974:	462c      	movgt	r4, r5
 802b976:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b97a:	bf48      	it	mi
 802b97c:	eef0 7a66 	vmovmi.f32	s15, s13
 802b980:	f1a6 0502 	sub.w	r5, r6, #2
 802b984:	eef4 7ac7 	vcmpe.f32	s15, s14
 802b988:	bf48      	it	mi
 802b98a:	462c      	movmi	r4, r5
 802b98c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b990:	bf48      	it	mi
 802b992:	eef0 7a47 	vmovmi.f32	s15, s14
 802b996:	f106 35ff 	add.w	r5, r6, #4294967295
 802b99a:	eef4 7ae5 	vcmpe.f32	s15, s11
 802b99e:	bf48      	it	mi
 802b9a0:	462c      	movmi	r4, r5
 802b9a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b9a6:	bf48      	it	mi
 802b9a8:	4634      	movmi	r4, r6
 802b9aa:	bf48      	it	mi
 802b9ac:	eef0 7a65 	vmovmi.f32	s15, s11
 802b9b0:	f1bc 0c01 	subs.w	ip, ip, #1
 802b9b4:	f106 0604 	add.w	r6, r6, #4
 802b9b8:	f100 0010 	add.w	r0, r0, #16
 802b9bc:	d1c6      	bne.n	802b94c <arm_max_f32+0x1c>
 802b9be:	eb0e 1e08 	add.w	lr, lr, r8, lsl #4
 802b9c2:	f017 0003 	ands.w	r0, r7, #3
 802b9c6:	d018      	beq.n	802b9fa <arm_max_f32+0xca>
 802b9c8:	1a08      	subs	r0, r1, r0
 802b9ca:	ecbe 7a01 	vldmia	lr!, {s14}
 802b9ce:	eeb4 7ae7 	vcmpe.f32	s14, s15
 802b9d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b9d6:	bfc8      	it	gt
 802b9d8:	4604      	movgt	r4, r0
 802b9da:	f100 0001 	add.w	r0, r0, #1
 802b9de:	bfd8      	it	le
 802b9e0:	eeb0 7a67 	vmovle.f32	s14, s15
 802b9e4:	4288      	cmp	r0, r1
 802b9e6:	eef0 7a47 	vmov.f32	s15, s14
 802b9ea:	d1ee      	bne.n	802b9ca <arm_max_f32+0x9a>
 802b9ec:	ed82 7a00 	vstr	s14, [r2]
 802b9f0:	601c      	str	r4, [r3, #0]
 802b9f2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802b9f6:	4644      	mov	r4, r8
 802b9f8:	e7e3      	b.n	802b9c2 <arm_max_f32+0x92>
 802b9fa:	eeb0 7a67 	vmov.f32	s14, s15
 802b9fe:	e7f5      	b.n	802b9ec <arm_max_f32+0xbc>

0802ba00 <arm_rfft_fast_init_f32>:
 802ba00:	084b      	lsrs	r3, r1, #1
 802ba02:	2b80      	cmp	r3, #128	; 0x80
 802ba04:	b410      	push	{r4}
 802ba06:	8201      	strh	r1, [r0, #16]
 802ba08:	8003      	strh	r3, [r0, #0]
 802ba0a:	d047      	beq.n	802ba9c <arm_rfft_fast_init_f32+0x9c>
 802ba0c:	d917      	bls.n	802ba3e <arm_rfft_fast_init_f32+0x3e>
 802ba0e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 802ba12:	d03d      	beq.n	802ba90 <arm_rfft_fast_init_f32+0x90>
 802ba14:	d929      	bls.n	802ba6a <arm_rfft_fast_init_f32+0x6a>
 802ba16:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 802ba1a:	d020      	beq.n	802ba5e <arm_rfft_fast_init_f32+0x5e>
 802ba1c:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 802ba20:	d113      	bne.n	802ba4a <arm_rfft_fast_init_f32+0x4a>
 802ba22:	4921      	ldr	r1, [pc, #132]	; (802baa8 <arm_rfft_fast_init_f32+0xa8>)
 802ba24:	4a21      	ldr	r2, [pc, #132]	; (802baac <arm_rfft_fast_init_f32+0xac>)
 802ba26:	4b22      	ldr	r3, [pc, #136]	; (802bab0 <arm_rfft_fast_init_f32+0xb0>)
 802ba28:	f44f 646e 	mov.w	r4, #3808	; 0xee0
 802ba2c:	8184      	strh	r4, [r0, #12]
 802ba2e:	6081      	str	r1, [r0, #8]
 802ba30:	6042      	str	r2, [r0, #4]
 802ba32:	6143      	str	r3, [r0, #20]
 802ba34:	2000      	movs	r0, #0
 802ba36:	b240      	sxtb	r0, r0
 802ba38:	f85d 4b04 	ldr.w	r4, [sp], #4
 802ba3c:	4770      	bx	lr
 802ba3e:	2b20      	cmp	r3, #32
 802ba40:	d01c      	beq.n	802ba7c <arm_rfft_fast_init_f32+0x7c>
 802ba42:	2b40      	cmp	r3, #64	; 0x40
 802ba44:	d006      	beq.n	802ba54 <arm_rfft_fast_init_f32+0x54>
 802ba46:	2b10      	cmp	r3, #16
 802ba48:	d01d      	beq.n	802ba86 <arm_rfft_fast_init_f32+0x86>
 802ba4a:	20ff      	movs	r0, #255	; 0xff
 802ba4c:	b240      	sxtb	r0, r0
 802ba4e:	f85d 4b04 	ldr.w	r4, [sp], #4
 802ba52:	4770      	bx	lr
 802ba54:	2438      	movs	r4, #56	; 0x38
 802ba56:	4917      	ldr	r1, [pc, #92]	; (802bab4 <arm_rfft_fast_init_f32+0xb4>)
 802ba58:	4a17      	ldr	r2, [pc, #92]	; (802bab8 <arm_rfft_fast_init_f32+0xb8>)
 802ba5a:	4b18      	ldr	r3, [pc, #96]	; (802babc <arm_rfft_fast_init_f32+0xbc>)
 802ba5c:	e7e6      	b.n	802ba2c <arm_rfft_fast_init_f32+0x2c>
 802ba5e:	f44f 64e1 	mov.w	r4, #1800	; 0x708
 802ba62:	4917      	ldr	r1, [pc, #92]	; (802bac0 <arm_rfft_fast_init_f32+0xc0>)
 802ba64:	4a17      	ldr	r2, [pc, #92]	; (802bac4 <arm_rfft_fast_init_f32+0xc4>)
 802ba66:	4b18      	ldr	r3, [pc, #96]	; (802bac8 <arm_rfft_fast_init_f32+0xc8>)
 802ba68:	e7e0      	b.n	802ba2c <arm_rfft_fast_init_f32+0x2c>
 802ba6a:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 802ba6e:	d1ec      	bne.n	802ba4a <arm_rfft_fast_init_f32+0x4a>
 802ba70:	f44f 74dc 	mov.w	r4, #440	; 0x1b8
 802ba74:	4915      	ldr	r1, [pc, #84]	; (802bacc <arm_rfft_fast_init_f32+0xcc>)
 802ba76:	4a16      	ldr	r2, [pc, #88]	; (802bad0 <arm_rfft_fast_init_f32+0xd0>)
 802ba78:	4b16      	ldr	r3, [pc, #88]	; (802bad4 <arm_rfft_fast_init_f32+0xd4>)
 802ba7a:	e7d7      	b.n	802ba2c <arm_rfft_fast_init_f32+0x2c>
 802ba7c:	2430      	movs	r4, #48	; 0x30
 802ba7e:	4916      	ldr	r1, [pc, #88]	; (802bad8 <arm_rfft_fast_init_f32+0xd8>)
 802ba80:	4a16      	ldr	r2, [pc, #88]	; (802badc <arm_rfft_fast_init_f32+0xdc>)
 802ba82:	4b17      	ldr	r3, [pc, #92]	; (802bae0 <arm_rfft_fast_init_f32+0xe0>)
 802ba84:	e7d2      	b.n	802ba2c <arm_rfft_fast_init_f32+0x2c>
 802ba86:	2414      	movs	r4, #20
 802ba88:	4916      	ldr	r1, [pc, #88]	; (802bae4 <arm_rfft_fast_init_f32+0xe4>)
 802ba8a:	4a17      	ldr	r2, [pc, #92]	; (802bae8 <arm_rfft_fast_init_f32+0xe8>)
 802ba8c:	4b17      	ldr	r3, [pc, #92]	; (802baec <arm_rfft_fast_init_f32+0xec>)
 802ba8e:	e7cd      	b.n	802ba2c <arm_rfft_fast_init_f32+0x2c>
 802ba90:	f44f 74e0 	mov.w	r4, #448	; 0x1c0
 802ba94:	4916      	ldr	r1, [pc, #88]	; (802baf0 <arm_rfft_fast_init_f32+0xf0>)
 802ba96:	4a17      	ldr	r2, [pc, #92]	; (802baf4 <arm_rfft_fast_init_f32+0xf4>)
 802ba98:	4b17      	ldr	r3, [pc, #92]	; (802baf8 <arm_rfft_fast_init_f32+0xf8>)
 802ba9a:	e7c7      	b.n	802ba2c <arm_rfft_fast_init_f32+0x2c>
 802ba9c:	24d0      	movs	r4, #208	; 0xd0
 802ba9e:	4917      	ldr	r1, [pc, #92]	; (802bafc <arm_rfft_fast_init_f32+0xfc>)
 802baa0:	4a17      	ldr	r2, [pc, #92]	; (802bb00 <arm_rfft_fast_init_f32+0x100>)
 802baa2:	4b18      	ldr	r3, [pc, #96]	; (802bb04 <arm_rfft_fast_init_f32+0x104>)
 802baa4:	e7c2      	b.n	802ba2c <arm_rfft_fast_init_f32+0x2c>
 802baa6:	bf00      	nop
 802baa8:	0804119c 	.word	0x0804119c
 802baac:	08032394 	.word	0x08032394
 802bab0:	08038504 	.word	0x08038504
 802bab4:	08036494 	.word	0x08036494
 802bab8:	08042f5c 	.word	0x08042f5c
 802babc:	0804544c 	.word	0x0804544c
 802bac0:	0803ee84 	.word	0x0803ee84
 802bac4:	0803cd84 	.word	0x0803cd84
 802bac8:	08036504 	.word	0x08036504
 802bacc:	080450dc 	.word	0x080450dc
 802bad0:	0803c504 	.word	0x0803c504
 802bad4:	0804315c 	.word	0x0804315c
 802bad8:	0803fd3c 	.word	0x0803fd3c
 802badc:	0803ed84 	.word	0x0803ed84
 802bae0:	08036394 	.word	0x08036394
 802bae4:	0803fc94 	.word	0x0803fc94
 802bae8:	0803cd04 	.word	0x0803cd04
 802baec:	0803fcbc 	.word	0x0803fcbc
 802baf0:	0804395c 	.word	0x0804395c
 802baf4:	0804019c 	.word	0x0804019c
 802baf8:	08043cdc 	.word	0x08043cdc
 802bafc:	0804564c 	.word	0x0804564c
 802bb00:	0803fd9c 	.word	0x0803fd9c
 802bb04:	08044cdc 	.word	0x08044cdc

0802bb08 <arm_rfft_fast_f32>:
 802bb08:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802bb0c:	8a06      	ldrh	r6, [r0, #16]
 802bb0e:	0876      	lsrs	r6, r6, #1
 802bb10:	4607      	mov	r7, r0
 802bb12:	4615      	mov	r5, r2
 802bb14:	8006      	strh	r6, [r0, #0]
 802bb16:	460c      	mov	r4, r1
 802bb18:	2b00      	cmp	r3, #0
 802bb1a:	d15c      	bne.n	802bbd6 <arm_rfft_fast_f32+0xce>
 802bb1c:	461a      	mov	r2, r3
 802bb1e:	2301      	movs	r3, #1
 802bb20:	f000 fbe6 	bl	802c2f0 <arm_cfft_f32>
 802bb24:	edd4 7a00 	vldr	s15, [r4]
 802bb28:	ed94 7a01 	vldr	s14, [r4, #4]
 802bb2c:	883e      	ldrh	r6, [r7, #0]
 802bb2e:	6978      	ldr	r0, [r7, #20]
 802bb30:	ee37 7a07 	vadd.f32	s14, s14, s14
 802bb34:	ee77 7aa7 	vadd.f32	s15, s15, s15
 802bb38:	eef6 3a00 	vmov.f32	s7, #96	; 0x3f000000  0.5
 802bb3c:	ee77 6a87 	vadd.f32	s13, s15, s14
 802bb40:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802bb44:	3e01      	subs	r6, #1
 802bb46:	ee26 7aa3 	vmul.f32	s14, s13, s7
 802bb4a:	ee67 7aa3 	vmul.f32	s15, s15, s7
 802bb4e:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 802bb52:	ed85 7a00 	vstr	s14, [r5]
 802bb56:	edc5 7a01 	vstr	s15, [r5, #4]
 802bb5a:	3010      	adds	r0, #16
 802bb5c:	f105 0210 	add.w	r2, r5, #16
 802bb60:	3b08      	subs	r3, #8
 802bb62:	f104 0110 	add.w	r1, r4, #16
 802bb66:	ed51 4a02 	vldr	s9, [r1, #-8]
 802bb6a:	ed93 5a02 	vldr	s10, [r3, #8]
 802bb6e:	ed11 7a01 	vldr	s14, [r1, #-4]
 802bb72:	ed10 6a02 	vldr	s12, [r0, #-8]
 802bb76:	edd3 5a03 	vldr	s11, [r3, #12]
 802bb7a:	ed50 6a01 	vldr	s13, [r0, #-4]
 802bb7e:	ee75 7a64 	vsub.f32	s15, s10, s9
 802bb82:	ee35 4a87 	vadd.f32	s8, s11, s14
 802bb86:	ee35 5a24 	vadd.f32	s10, s10, s9
 802bb8a:	ee77 5a65 	vsub.f32	s11, s14, s11
 802bb8e:	ee66 4a27 	vmul.f32	s9, s12, s15
 802bb92:	ee26 7aa7 	vmul.f32	s14, s13, s15
 802bb96:	ee34 5a85 	vadd.f32	s10, s9, s10
 802bb9a:	ee26 6a04 	vmul.f32	s12, s12, s8
 802bb9e:	ee66 6a84 	vmul.f32	s13, s13, s8
 802bba2:	ee77 7a25 	vadd.f32	s15, s14, s11
 802bba6:	ee76 6a85 	vadd.f32	s13, s13, s10
 802bbaa:	ee77 7ac6 	vsub.f32	s15, s15, s12
 802bbae:	ee66 6aa3 	vmul.f32	s13, s13, s7
 802bbb2:	ee67 7aa3 	vmul.f32	s15, s15, s7
 802bbb6:	3e01      	subs	r6, #1
 802bbb8:	ed42 6a02 	vstr	s13, [r2, #-8]
 802bbbc:	ed42 7a01 	vstr	s15, [r2, #-4]
 802bbc0:	f1a3 0308 	sub.w	r3, r3, #8
 802bbc4:	f101 0108 	add.w	r1, r1, #8
 802bbc8:	f100 0008 	add.w	r0, r0, #8
 802bbcc:	f102 0208 	add.w	r2, r2, #8
 802bbd0:	d1c9      	bne.n	802bb66 <arm_rfft_fast_f32+0x5e>
 802bbd2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802bbd6:	edd1 7a00 	vldr	s15, [r1]
 802bbda:	edd1 6a01 	vldr	s13, [r1, #4]
 802bbde:	6941      	ldr	r1, [r0, #20]
 802bbe0:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802bbe4:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802bbe8:	eef6 3a00 	vmov.f32	s7, #96	; 0x3f000000  0.5
 802bbec:	ee27 7a23 	vmul.f32	s14, s14, s7
 802bbf0:	ee67 7aa3 	vmul.f32	s15, s15, s7
 802bbf4:	3e01      	subs	r6, #1
 802bbf6:	ed82 7a00 	vstr	s14, [r2]
 802bbfa:	edc2 7a01 	vstr	s15, [r2, #4]
 802bbfe:	00f0      	lsls	r0, r6, #3
 802bc00:	b3ee      	cbz	r6, 802bc7e <arm_rfft_fast_f32+0x176>
 802bc02:	3808      	subs	r0, #8
 802bc04:	f101 0e10 	add.w	lr, r1, #16
 802bc08:	4420      	add	r0, r4
 802bc0a:	f104 0110 	add.w	r1, r4, #16
 802bc0e:	f102 0c10 	add.w	ip, r2, #16
 802bc12:	ed90 7a02 	vldr	s14, [r0, #8]
 802bc16:	ed51 6a02 	vldr	s13, [r1, #-8]
 802bc1a:	ed1e 6a02 	vldr	s12, [lr, #-8]
 802bc1e:	ed90 4a03 	vldr	s8, [r0, #12]
 802bc22:	ed11 5a01 	vldr	s10, [r1, #-4]
 802bc26:	ed5e 5a01 	vldr	s11, [lr, #-4]
 802bc2a:	ee76 7ac7 	vsub.f32	s15, s13, s14
 802bc2e:	ee74 4a05 	vadd.f32	s9, s8, s10
 802bc32:	ee26 3a27 	vmul.f32	s6, s12, s15
 802bc36:	ee77 6a26 	vadd.f32	s13, s14, s13
 802bc3a:	ee35 5a44 	vsub.f32	s10, s10, s8
 802bc3e:	ee25 7aa7 	vmul.f32	s14, s11, s15
 802bc42:	ee76 6ac3 	vsub.f32	s13, s13, s6
 802bc46:	ee77 7a05 	vadd.f32	s15, s14, s10
 802bc4a:	ee26 6a24 	vmul.f32	s12, s12, s9
 802bc4e:	ee65 5aa4 	vmul.f32	s11, s11, s9
 802bc52:	ee77 7ac6 	vsub.f32	s15, s15, s12
 802bc56:	ee36 7ae5 	vsub.f32	s14, s13, s11
 802bc5a:	ee67 7aa3 	vmul.f32	s15, s15, s7
 802bc5e:	ee27 7a23 	vmul.f32	s14, s14, s7
 802bc62:	3e01      	subs	r6, #1
 802bc64:	ed0c 7a02 	vstr	s14, [ip, #-8]
 802bc68:	ed4c 7a01 	vstr	s15, [ip, #-4]
 802bc6c:	f1a0 0008 	sub.w	r0, r0, #8
 802bc70:	f101 0108 	add.w	r1, r1, #8
 802bc74:	f10e 0e08 	add.w	lr, lr, #8
 802bc78:	f10c 0c08 	add.w	ip, ip, #8
 802bc7c:	d1c9      	bne.n	802bc12 <arm_rfft_fast_f32+0x10a>
 802bc7e:	4638      	mov	r0, r7
 802bc80:	4629      	mov	r1, r5
 802bc82:	461a      	mov	r2, r3
 802bc84:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802bc88:	2301      	movs	r3, #1
 802bc8a:	f000 bb31 	b.w	802c2f0 <arm_cfft_f32>
 802bc8e:	bf00      	nop

0802bc90 <arm_cfft_radix8by2_f32>:
 802bc90:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802bc94:	ed2d 8b08 	vpush	{d8-d11}
 802bc98:	f8b0 e000 	ldrh.w	lr, [r0]
 802bc9c:	6842      	ldr	r2, [r0, #4]
 802bc9e:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 802bca2:	eb01 088e 	add.w	r8, r1, lr, lsl #2
 802bca6:	ea5f 0ede 	movs.w	lr, lr, lsr #3
 802bcaa:	4607      	mov	r7, r0
 802bcac:	ea4f 038c 	mov.w	r3, ip, lsl #2
 802bcb0:	f000 80af 	beq.w	802be12 <arm_cfft_radix8by2_f32+0x182>
 802bcb4:	3310      	adds	r3, #16
 802bcb6:	18ce      	adds	r6, r1, r3
 802bcb8:	3210      	adds	r2, #16
 802bcba:	4443      	add	r3, r8
 802bcbc:	f101 0510 	add.w	r5, r1, #16
 802bcc0:	f108 0410 	add.w	r4, r8, #16
 802bcc4:	ed54 1a04 	vldr	s3, [r4, #-16]
 802bcc8:	ed13 4a04 	vldr	s8, [r3, #-16]
 802bccc:	ed53 3a03 	vldr	s7, [r3, #-12]
 802bcd0:	ed53 5a02 	vldr	s11, [r3, #-8]
 802bcd4:	ed13 5a01 	vldr	s10, [r3, #-4]
 802bcd8:	ed54 6a03 	vldr	s13, [r4, #-12]
 802bcdc:	ed14 0a02 	vldr	s0, [r4, #-8]
 802bce0:	ed16 2a04 	vldr	s4, [r6, #-16]
 802bce4:	ed56 2a03 	vldr	s5, [r6, #-12]
 802bce8:	ed15 6a03 	vldr	s12, [r5, #-12]
 802bcec:	ed15 7a01 	vldr	s14, [r5, #-4]
 802bcf0:	ed15 3a04 	vldr	s6, [r5, #-16]
 802bcf4:	ed54 7a01 	vldr	s15, [r4, #-4]
 802bcf8:	ed56 0a02 	vldr	s1, [r6, #-8]
 802bcfc:	ed16 1a01 	vldr	s2, [r6, #-4]
 802bd00:	ed55 4a02 	vldr	s9, [r5, #-8]
 802bd04:	ee73 ba21 	vadd.f32	s23, s6, s3
 802bd08:	ee36 ba26 	vadd.f32	s22, s12, s13
 802bd0c:	ee37 aa27 	vadd.f32	s20, s14, s15
 802bd10:	ee72 9a04 	vadd.f32	s19, s4, s8
 802bd14:	ee32 9aa3 	vadd.f32	s18, s5, s7
 802bd18:	ee31 8a05 	vadd.f32	s16, s2, s10
 802bd1c:	ee74 aa80 	vadd.f32	s21, s9, s0
 802bd20:	ee70 8aa5 	vadd.f32	s17, s1, s11
 802bd24:	ed45 ba04 	vstr	s23, [r5, #-16]
 802bd28:	ed05 ba03 	vstr	s22, [r5, #-12]
 802bd2c:	ed45 aa02 	vstr	s21, [r5, #-8]
 802bd30:	ed05 aa01 	vstr	s20, [r5, #-4]
 802bd34:	ed06 8a01 	vstr	s16, [r6, #-4]
 802bd38:	ed46 9a04 	vstr	s19, [r6, #-16]
 802bd3c:	ed06 9a03 	vstr	s18, [r6, #-12]
 802bd40:	ed46 8a02 	vstr	s17, [r6, #-8]
 802bd44:	ee76 6a66 	vsub.f32	s13, s12, s13
 802bd48:	ee73 3ae2 	vsub.f32	s7, s7, s5
 802bd4c:	ed12 6a03 	vldr	s12, [r2, #-12]
 802bd50:	ed52 2a04 	vldr	s5, [r2, #-16]
 802bd54:	ee33 3a61 	vsub.f32	s6, s6, s3
 802bd58:	ee34 4a42 	vsub.f32	s8, s8, s4
 802bd5c:	ee26 8a86 	vmul.f32	s16, s13, s12
 802bd60:	ee24 2a06 	vmul.f32	s4, s8, s12
 802bd64:	ee63 1a22 	vmul.f32	s3, s6, s5
 802bd68:	ee24 4a22 	vmul.f32	s8, s8, s5
 802bd6c:	ee23 3a06 	vmul.f32	s6, s6, s12
 802bd70:	ee66 6aa2 	vmul.f32	s13, s13, s5
 802bd74:	ee23 6a86 	vmul.f32	s12, s7, s12
 802bd78:	ee63 3aa2 	vmul.f32	s7, s7, s5
 802bd7c:	ee36 6a04 	vadd.f32	s12, s12, s8
 802bd80:	ee76 6ac3 	vsub.f32	s13, s13, s6
 802bd84:	ee72 3a63 	vsub.f32	s7, s4, s7
 802bd88:	ee71 2a88 	vadd.f32	s5, s3, s16
 802bd8c:	ed44 6a03 	vstr	s13, [r4, #-12]
 802bd90:	ed44 2a04 	vstr	s5, [r4, #-16]
 802bd94:	ed43 3a04 	vstr	s7, [r3, #-16]
 802bd98:	ed03 6a03 	vstr	s12, [r3, #-12]
 802bd9c:	ee77 7a67 	vsub.f32	s15, s14, s15
 802bda0:	ee75 6ae0 	vsub.f32	s13, s11, s1
 802bda4:	ed12 7a01 	vldr	s14, [r2, #-4]
 802bda8:	ed52 5a02 	vldr	s11, [r2, #-8]
 802bdac:	ee35 6a41 	vsub.f32	s12, s10, s2
 802bdb0:	ee74 4ac0 	vsub.f32	s9, s9, s0
 802bdb4:	ee67 3a87 	vmul.f32	s7, s15, s14
 802bdb8:	ee26 5a87 	vmul.f32	s10, s13, s14
 802bdbc:	ee24 4aa5 	vmul.f32	s8, s9, s11
 802bdc0:	ee67 7aa5 	vmul.f32	s15, s15, s11
 802bdc4:	ee64 4a87 	vmul.f32	s9, s9, s14
 802bdc8:	ee66 6aa5 	vmul.f32	s13, s13, s11
 802bdcc:	ee26 7a07 	vmul.f32	s14, s12, s14
 802bdd0:	ee26 6a25 	vmul.f32	s12, s12, s11
 802bdd4:	ee77 7ae4 	vsub.f32	s15, s15, s9
 802bdd8:	ee74 5a23 	vadd.f32	s11, s8, s7
 802bddc:	ee35 6a46 	vsub.f32	s12, s10, s12
 802bde0:	ee37 7a26 	vadd.f32	s14, s14, s13
 802bde4:	f1be 0e01 	subs.w	lr, lr, #1
 802bde8:	ed44 5a02 	vstr	s11, [r4, #-8]
 802bdec:	f105 0510 	add.w	r5, r5, #16
 802bdf0:	ed44 7a01 	vstr	s15, [r4, #-4]
 802bdf4:	f106 0610 	add.w	r6, r6, #16
 802bdf8:	ed03 6a02 	vstr	s12, [r3, #-8]
 802bdfc:	ed03 7a01 	vstr	s14, [r3, #-4]
 802be00:	f102 0210 	add.w	r2, r2, #16
 802be04:	f104 0410 	add.w	r4, r4, #16
 802be08:	f103 0310 	add.w	r3, r3, #16
 802be0c:	f47f af5a 	bne.w	802bcc4 <arm_cfft_radix8by2_f32+0x34>
 802be10:	687a      	ldr	r2, [r7, #4]
 802be12:	fa1f f48c 	uxth.w	r4, ip
 802be16:	4608      	mov	r0, r1
 802be18:	2302      	movs	r3, #2
 802be1a:	4621      	mov	r1, r4
 802be1c:	f000 fbca 	bl	802c5b4 <arm_radix8_butterfly_f32>
 802be20:	ecbd 8b08 	vpop	{d8-d11}
 802be24:	4640      	mov	r0, r8
 802be26:	4621      	mov	r1, r4
 802be28:	687a      	ldr	r2, [r7, #4]
 802be2a:	2302      	movs	r3, #2
 802be2c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802be30:	f000 bbc0 	b.w	802c5b4 <arm_radix8_butterfly_f32>

0802be34 <arm_cfft_radix8by4_f32>:
 802be34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802be38:	ed2d 8b0a 	vpush	{d8-d12}
 802be3c:	8802      	ldrh	r2, [r0, #0]
 802be3e:	ed91 6a00 	vldr	s12, [r1]
 802be42:	b08f      	sub	sp, #60	; 0x3c
 802be44:	460f      	mov	r7, r1
 802be46:	0852      	lsrs	r2, r2, #1
 802be48:	0093      	lsls	r3, r2, #2
 802be4a:	900c      	str	r0, [sp, #48]	; 0x30
 802be4c:	9103      	str	r1, [sp, #12]
 802be4e:	6841      	ldr	r1, [r0, #4]
 802be50:	ed97 7a01 	vldr	s14, [r7, #4]
 802be54:	4638      	mov	r0, r7
 802be56:	4418      	add	r0, r3
 802be58:	4606      	mov	r6, r0
 802be5a:	9009      	str	r0, [sp, #36]	; 0x24
 802be5c:	4418      	add	r0, r3
 802be5e:	edd0 6a00 	vldr	s13, [r0]
 802be62:	edd6 3a00 	vldr	s7, [r6]
 802be66:	edd6 2a01 	vldr	s5, [r6, #4]
 802be6a:	edd0 7a01 	vldr	s15, [r0, #4]
 802be6e:	900a      	str	r0, [sp, #40]	; 0x28
 802be70:	ee76 5a26 	vadd.f32	s11, s12, s13
 802be74:	4604      	mov	r4, r0
 802be76:	4625      	mov	r5, r4
 802be78:	441c      	add	r4, r3
 802be7a:	ed94 4a00 	vldr	s8, [r4]
 802be7e:	ed94 5a01 	vldr	s10, [r4, #4]
 802be82:	9401      	str	r4, [sp, #4]
 802be84:	ee75 4aa3 	vadd.f32	s9, s11, s7
 802be88:	4630      	mov	r0, r6
 802be8a:	ee74 4a24 	vadd.f32	s9, s8, s9
 802be8e:	463e      	mov	r6, r7
 802be90:	ee14 ea90 	vmov	lr, s9
 802be94:	ee76 6a66 	vsub.f32	s13, s12, s13
 802be98:	f846 eb08 	str.w	lr, [r6], #8
 802be9c:	ee37 6a27 	vadd.f32	s12, s14, s15
 802bea0:	edd0 4a01 	vldr	s9, [r0, #4]
 802bea4:	9604      	str	r6, [sp, #16]
 802bea6:	ee77 7a67 	vsub.f32	s15, s14, s15
 802beaa:	9e01      	ldr	r6, [sp, #4]
 802beac:	ee32 3aa6 	vadd.f32	s6, s5, s13
 802beb0:	ed96 2a01 	vldr	s4, [r6, #4]
 802beb4:	ee36 7a24 	vadd.f32	s14, s12, s9
 802beb8:	ee75 5ae3 	vsub.f32	s11, s11, s7
 802bebc:	ee77 4ae3 	vsub.f32	s9, s15, s7
 802bec0:	ee36 6a62 	vsub.f32	s12, s12, s5
 802bec4:	ee77 7aa3 	vadd.f32	s15, s15, s7
 802bec8:	ee76 6ae2 	vsub.f32	s13, s13, s5
 802becc:	ee73 3a45 	vsub.f32	s7, s6, s10
 802bed0:	4604      	mov	r4, r0
 802bed2:	ee36 6a45 	vsub.f32	s12, s12, s10
 802bed6:	ee75 6a26 	vadd.f32	s13, s10, s13
 802beda:	46a3      	mov	fp, r4
 802bedc:	ee37 7a02 	vadd.f32	s14, s14, s4
 802bee0:	ee34 5a84 	vadd.f32	s10, s9, s8
 802bee4:	ee13 8a90 	vmov	r8, s7
 802bee8:	46a4      	mov	ip, r4
 802beea:	ee75 5ac4 	vsub.f32	s11, s11, s8
 802beee:	ed87 7a01 	vstr	s14, [r7, #4]
 802bef2:	f84b 8b08 	str.w	r8, [fp], #8
 802bef6:	f1ac 0704 	sub.w	r7, ip, #4
 802befa:	ed8c 5a01 	vstr	s10, [ip, #4]
 802befe:	f101 0c08 	add.w	ip, r1, #8
 802bf02:	462c      	mov	r4, r5
 802bf04:	f8cd c014 	str.w	ip, [sp, #20]
 802bf08:	ee15 ca90 	vmov	ip, s11
 802bf0c:	f844 cb08 	str.w	ip, [r4], #8
 802bf10:	9407      	str	r4, [sp, #28]
 802bf12:	f101 0410 	add.w	r4, r1, #16
 802bf16:	ed85 6a01 	vstr	s12, [r5, #4]
 802bf1a:	0852      	lsrs	r2, r2, #1
 802bf1c:	9402      	str	r4, [sp, #8]
 802bf1e:	462c      	mov	r4, r5
 802bf20:	f101 0518 	add.w	r5, r1, #24
 802bf24:	920b      	str	r2, [sp, #44]	; 0x2c
 802bf26:	46b2      	mov	sl, r6
 802bf28:	9506      	str	r5, [sp, #24]
 802bf2a:	ee77 7ac4 	vsub.f32	s15, s15, s8
 802bf2e:	3a02      	subs	r2, #2
 802bf30:	ee16 5a90 	vmov	r5, s13
 802bf34:	46b6      	mov	lr, r6
 802bf36:	4630      	mov	r0, r6
 802bf38:	0852      	lsrs	r2, r2, #1
 802bf3a:	f84a 5b08 	str.w	r5, [sl], #8
 802bf3e:	f1a0 0604 	sub.w	r6, r0, #4
 802bf42:	edce 7a01 	vstr	s15, [lr, #4]
 802bf46:	9208      	str	r2, [sp, #32]
 802bf48:	f000 8130 	beq.w	802c1ac <arm_cfft_radix8by4_f32+0x378>
 802bf4c:	4691      	mov	r9, r2
 802bf4e:	9a03      	ldr	r2, [sp, #12]
 802bf50:	f8dd 8008 	ldr.w	r8, [sp, #8]
 802bf54:	f8cd a034 	str.w	sl, [sp, #52]	; 0x34
 802bf58:	3b08      	subs	r3, #8
 802bf5a:	f102 0510 	add.w	r5, r2, #16
 802bf5e:	f101 0c20 	add.w	ip, r1, #32
 802bf62:	f1a4 020c 	sub.w	r2, r4, #12
 802bf66:	f101 0e30 	add.w	lr, r1, #48	; 0x30
 802bf6a:	4433      	add	r3, r6
 802bf6c:	3410      	adds	r4, #16
 802bf6e:	4650      	mov	r0, sl
 802bf70:	4659      	mov	r1, fp
 802bf72:	ed55 3a02 	vldr	s7, [r5, #-8]
 802bf76:	ed14 5a02 	vldr	s10, [r4, #-8]
 802bf7a:	ed91 7a00 	vldr	s14, [r1]
 802bf7e:	edd0 7a00 	vldr	s15, [r0]
 802bf82:	ed15 4a01 	vldr	s8, [r5, #-4]
 802bf86:	ed54 5a01 	vldr	s11, [r4, #-4]
 802bf8a:	edd0 6a01 	vldr	s13, [r0, #4]
 802bf8e:	ed91 6a01 	vldr	s12, [r1, #4]
 802bf92:	ee33 8a85 	vadd.f32	s16, s7, s10
 802bf96:	ee34 0a25 	vadd.f32	s0, s8, s11
 802bf9a:	ee78 4a07 	vadd.f32	s9, s16, s14
 802bf9e:	ee74 5a65 	vsub.f32	s11, s8, s11
 802bfa2:	ee77 4aa4 	vadd.f32	s9, s15, s9
 802bfa6:	ee33 5ac5 	vsub.f32	s10, s7, s10
 802bfaa:	ed45 4a02 	vstr	s9, [r5, #-8]
 802bfae:	edd1 4a01 	vldr	s9, [r1, #4]
 802bfb2:	ed90 4a01 	vldr	s8, [r0, #4]
 802bfb6:	ee70 4a24 	vadd.f32	s9, s0, s9
 802bfba:	ee76 aa05 	vadd.f32	s21, s12, s10
 802bfbe:	ee74 4a84 	vadd.f32	s9, s9, s8
 802bfc2:	ee35 aac7 	vsub.f32	s20, s11, s14
 802bfc6:	ed45 4a01 	vstr	s9, [r5, #-4]
 802bfca:	edd6 1a00 	vldr	s3, [r6]
 802bfce:	edd7 0a00 	vldr	s1, [r7]
 802bfd2:	ed92 4a02 	vldr	s8, [r2, #8]
 802bfd6:	edd3 3a02 	vldr	s7, [r3, #8]
 802bfda:	ed93 2a01 	vldr	s4, [r3, #4]
 802bfde:	ed16 1a01 	vldr	s2, [r6, #-4]
 802bfe2:	edd2 2a01 	vldr	s5, [r2, #4]
 802bfe6:	ed57 9a01 	vldr	s19, [r7, #-4]
 802bfea:	ee70 4aa1 	vadd.f32	s9, s1, s3
 802bfee:	ee39 3a81 	vadd.f32	s6, s19, s2
 802bff2:	ee74 8a84 	vadd.f32	s17, s9, s8
 802bff6:	ee70 1ae1 	vsub.f32	s3, s1, s3
 802bffa:	ee73 8aa8 	vadd.f32	s17, s7, s17
 802bffe:	ee7a aae6 	vsub.f32	s21, s21, s13
 802c002:	ee18 aa90 	vmov	sl, s17
 802c006:	f847 a908 	str.w	sl, [r7], #-8
 802c00a:	edd2 8a01 	vldr	s17, [r2, #4]
 802c00e:	ed93 9a01 	vldr	s18, [r3, #4]
 802c012:	ee73 8a28 	vadd.f32	s17, s6, s17
 802c016:	ee3a aa27 	vadd.f32	s20, s20, s15
 802c01a:	ee78 8a89 	vadd.f32	s17, s17, s18
 802c01e:	ee74 0a63 	vsub.f32	s1, s8, s7
 802c022:	edc7 8a01 	vstr	s17, [r7, #4]
 802c026:	ed18 ba02 	vldr	s22, [r8, #-8]
 802c02a:	ed58 8a01 	vldr	s17, [r8, #-4]
 802c02e:	ee39 1ac1 	vsub.f32	s2, s19, s2
 802c032:	ee6a ba28 	vmul.f32	s23, s20, s17
 802c036:	ee2a ca8b 	vmul.f32	s24, s21, s22
 802c03a:	ee71 9ae2 	vsub.f32	s19, s3, s5
 802c03e:	ee30 9a81 	vadd.f32	s18, s1, s2
 802c042:	ee79 9a82 	vadd.f32	s19, s19, s4
 802c046:	ee3c ca2b 	vadd.f32	s24, s24, s23
 802c04a:	ee6a aaa8 	vmul.f32	s21, s21, s17
 802c04e:	ee69 baa8 	vmul.f32	s23, s19, s17
 802c052:	ee2a aa0b 	vmul.f32	s20, s20, s22
 802c056:	ee69 9a8b 	vmul.f32	s19, s19, s22
 802c05a:	ee69 8a28 	vmul.f32	s17, s18, s17
 802c05e:	ee29 ba0b 	vmul.f32	s22, s18, s22
 802c062:	ee1c aa10 	vmov	sl, s24
 802c066:	ee78 8aa9 	vadd.f32	s17, s17, s19
 802c06a:	f841 ab08 	str.w	sl, [r1], #8
 802c06e:	ee3a aa6a 	vsub.f32	s20, s20, s21
 802c072:	ee3b bacb 	vsub.f32	s22, s23, s22
 802c076:	ee34 4ac4 	vsub.f32	s8, s9, s8
 802c07a:	ee33 3a62 	vsub.f32	s6, s6, s5
 802c07e:	ed01 aa01 	vstr	s20, [r1, #-4]
 802c082:	edc2 8a01 	vstr	s17, [r2, #4]
 802c086:	ed82 ba02 	vstr	s22, [r2, #8]
 802c08a:	ed5c 4a04 	vldr	s9, [ip, #-16]
 802c08e:	ee74 3a63 	vsub.f32	s7, s8, s7
 802c092:	ee38 8a47 	vsub.f32	s16, s16, s14
 802c096:	ed1c 4a03 	vldr	s8, [ip, #-12]
 802c09a:	ee30 0a46 	vsub.f32	s0, s0, s12
 802c09e:	ee33 3a42 	vsub.f32	s6, s6, s4
 802c0a2:	ee38 8a67 	vsub.f32	s16, s16, s15
 802c0a6:	ee30 0a66 	vsub.f32	s0, s0, s13
 802c0aa:	ee23 9ae4 	vnmul.f32	s18, s7, s9
 802c0ae:	ee63 8a04 	vmul.f32	s17, s6, s8
 802c0b2:	ee28 aa24 	vmul.f32	s20, s16, s9
 802c0b6:	ee60 9a04 	vmul.f32	s19, s0, s8
 802c0ba:	ee28 8a04 	vmul.f32	s16, s16, s8
 802c0be:	ee20 0a24 	vmul.f32	s0, s0, s9
 802c0c2:	ee63 3a84 	vmul.f32	s7, s7, s8
 802c0c6:	ee39 4a68 	vsub.f32	s8, s18, s17
 802c0ca:	ee7a 9a29 	vadd.f32	s19, s20, s19
 802c0ce:	ee14 aa10 	vmov	sl, s8
 802c0d2:	ee30 0a48 	vsub.f32	s0, s0, s16
 802c0d6:	ee63 4a24 	vmul.f32	s9, s6, s9
 802c0da:	ed44 9a02 	vstr	s19, [r4, #-8]
 802c0de:	ee73 3ae4 	vsub.f32	s7, s7, s9
 802c0e2:	ed04 0a01 	vstr	s0, [r4, #-4]
 802c0e6:	f846 a908 	str.w	sl, [r6], #-8
 802c0ea:	ee35 6a46 	vsub.f32	s12, s10, s12
 802c0ee:	ee35 7a87 	vadd.f32	s14, s11, s14
 802c0f2:	edc6 3a01 	vstr	s7, [r6, #4]
 802c0f6:	ee76 6a86 	vadd.f32	s13, s13, s12
 802c0fa:	ee77 7a67 	vsub.f32	s15, s14, s15
 802c0fe:	ed1e 6a05 	vldr	s12, [lr, #-20]	; 0xffffffec
 802c102:	ed1e 7a06 	vldr	s14, [lr, #-24]	; 0xffffffe8
 802c106:	ee67 5a86 	vmul.f32	s11, s15, s12
 802c10a:	ee26 5a87 	vmul.f32	s10, s13, s14
 802c10e:	ee72 2a62 	vsub.f32	s5, s4, s5
 802c112:	ee30 1ac1 	vsub.f32	s2, s1, s2
 802c116:	ee72 2ae1 	vsub.f32	s5, s5, s3
 802c11a:	ee75 5a25 	vadd.f32	s11, s10, s11
 802c11e:	ee62 0a86 	vmul.f32	s1, s5, s12
 802c122:	ee66 6a86 	vmul.f32	s13, s13, s12
 802c126:	ee67 7a87 	vmul.f32	s15, s15, s14
 802c12a:	ee21 6a06 	vmul.f32	s12, s2, s12
 802c12e:	ee62 2a87 	vmul.f32	s5, s5, s14
 802c132:	ee21 1a07 	vmul.f32	s2, s2, s14
 802c136:	ee15 aa90 	vmov	sl, s11
 802c13a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802c13e:	f840 ab08 	str.w	sl, [r0], #8
 802c142:	ee30 1ac1 	vsub.f32	s2, s1, s2
 802c146:	ee76 2a22 	vadd.f32	s5, s12, s5
 802c14a:	f1b9 0901 	subs.w	r9, r9, #1
 802c14e:	ed40 7a01 	vstr	s15, [r0, #-4]
 802c152:	f105 0508 	add.w	r5, r5, #8
 802c156:	ed83 1a02 	vstr	s2, [r3, #8]
 802c15a:	edc3 2a01 	vstr	s5, [r3, #4]
 802c15e:	f108 0808 	add.w	r8, r8, #8
 802c162:	f1a2 0208 	sub.w	r2, r2, #8
 802c166:	f10c 0c10 	add.w	ip, ip, #16
 802c16a:	f104 0408 	add.w	r4, r4, #8
 802c16e:	f10e 0e18 	add.w	lr, lr, #24
 802c172:	f1a3 0308 	sub.w	r3, r3, #8
 802c176:	f47f aefc 	bne.w	802bf72 <arm_cfft_radix8by4_f32+0x13e>
 802c17a:	9908      	ldr	r1, [sp, #32]
 802c17c:	9802      	ldr	r0, [sp, #8]
 802c17e:	f8dd a034 	ldr.w	sl, [sp, #52]	; 0x34
 802c182:	00cb      	lsls	r3, r1, #3
 802c184:	eb01 0241 	add.w	r2, r1, r1, lsl #1
 802c188:	eb00 1101 	add.w	r1, r0, r1, lsl #4
 802c18c:	9102      	str	r1, [sp, #8]
 802c18e:	9904      	ldr	r1, [sp, #16]
 802c190:	4419      	add	r1, r3
 802c192:	9104      	str	r1, [sp, #16]
 802c194:	9905      	ldr	r1, [sp, #20]
 802c196:	4419      	add	r1, r3
 802c198:	9105      	str	r1, [sp, #20]
 802c19a:	9907      	ldr	r1, [sp, #28]
 802c19c:	449b      	add	fp, r3
 802c19e:	4419      	add	r1, r3
 802c1a0:	449a      	add	sl, r3
 802c1a2:	9b06      	ldr	r3, [sp, #24]
 802c1a4:	9107      	str	r1, [sp, #28]
 802c1a6:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 802c1aa:	9306      	str	r3, [sp, #24]
 802c1ac:	9a04      	ldr	r2, [sp, #16]
 802c1ae:	9807      	ldr	r0, [sp, #28]
 802c1b0:	edd2 3a00 	vldr	s7, [r2]
 802c1b4:	ed90 4a00 	vldr	s8, [r0]
 802c1b8:	eddb 7a00 	vldr	s15, [fp]
 802c1bc:	ed9a 3a00 	vldr	s6, [sl]
 802c1c0:	edd2 4a01 	vldr	s9, [r2, #4]
 802c1c4:	ed90 7a01 	vldr	s14, [r0, #4]
 802c1c8:	ed9b 2a01 	vldr	s4, [fp, #4]
 802c1cc:	edda 5a01 	vldr	s11, [sl, #4]
 802c1d0:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 802c1d4:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 802c1d6:	ee73 6a84 	vadd.f32	s13, s7, s8
 802c1da:	ee34 6a87 	vadd.f32	s12, s9, s14
 802c1de:	ee36 5aa7 	vadd.f32	s10, s13, s15
 802c1e2:	ee34 7ac7 	vsub.f32	s14, s9, s14
 802c1e6:	ee33 5a05 	vadd.f32	s10, s6, s10
 802c1ea:	ee33 4ac4 	vsub.f32	s8, s7, s8
 802c1ee:	ed82 5a00 	vstr	s10, [r2]
 802c1f2:	ed9b 5a01 	vldr	s10, [fp, #4]
 802c1f6:	edda 4a01 	vldr	s9, [sl, #4]
 802c1fa:	ee36 5a05 	vadd.f32	s10, s12, s10
 802c1fe:	ee72 3a04 	vadd.f32	s7, s4, s8
 802c202:	ee35 5a24 	vadd.f32	s10, s10, s9
 802c206:	ee77 4a67 	vsub.f32	s9, s14, s15
 802c20a:	ed82 5a01 	vstr	s10, [r2, #4]
 802c20e:	9a05      	ldr	r2, [sp, #20]
 802c210:	ee34 5a83 	vadd.f32	s10, s9, s6
 802c214:	edd2 1a00 	vldr	s3, [r2]
 802c218:	edd2 2a01 	vldr	s5, [r2, #4]
 802c21c:	9a02      	ldr	r2, [sp, #8]
 802c21e:	ee73 3ae5 	vsub.f32	s7, s7, s11
 802c222:	ee36 6a42 	vsub.f32	s12, s12, s4
 802c226:	ee63 4aa1 	vmul.f32	s9, s7, s3
 802c22a:	ee63 3aa2 	vmul.f32	s7, s7, s5
 802c22e:	ee65 2a22 	vmul.f32	s5, s10, s5
 802c232:	ee25 5a21 	vmul.f32	s10, s10, s3
 802c236:	ee74 2aa2 	vadd.f32	s5, s9, s5
 802c23a:	ee35 5a63 	vsub.f32	s10, s10, s7
 802c23e:	ee76 6ae7 	vsub.f32	s13, s13, s15
 802c242:	edcb 2a00 	vstr	s5, [fp]
 802c246:	ed8b 5a01 	vstr	s10, [fp, #4]
 802c24a:	edd2 3a01 	vldr	s7, [r2, #4]
 802c24e:	ed92 5a00 	vldr	s10, [r2]
 802c252:	9a06      	ldr	r2, [sp, #24]
 802c254:	ee76 6ac3 	vsub.f32	s13, s13, s6
 802c258:	ee36 6a65 	vsub.f32	s12, s12, s11
 802c25c:	ee66 4a85 	vmul.f32	s9, s13, s10
 802c260:	ee26 5a05 	vmul.f32	s10, s12, s10
 802c264:	ee66 6aa3 	vmul.f32	s13, s13, s7
 802c268:	ee26 6a23 	vmul.f32	s12, s12, s7
 802c26c:	ee75 6a66 	vsub.f32	s13, s10, s13
 802c270:	ee34 6a86 	vadd.f32	s12, s9, s12
 802c274:	ee34 4a42 	vsub.f32	s8, s8, s4
 802c278:	ee37 7a27 	vadd.f32	s14, s14, s15
 802c27c:	edc0 6a01 	vstr	s13, [r0, #4]
 802c280:	ed80 6a00 	vstr	s12, [r0]
 802c284:	ed92 6a01 	vldr	s12, [r2, #4]
 802c288:	9803      	ldr	r0, [sp, #12]
 802c28a:	ee77 7a43 	vsub.f32	s15, s14, s6
 802c28e:	ee75 5a84 	vadd.f32	s11, s11, s8
 802c292:	ed92 7a00 	vldr	s14, [r2]
 802c296:	ee65 6a87 	vmul.f32	s13, s11, s14
 802c29a:	ee27 7a87 	vmul.f32	s14, s15, s14
 802c29e:	ee65 5a86 	vmul.f32	s11, s11, s12
 802c2a2:	ee67 7a86 	vmul.f32	s15, s15, s12
 802c2a6:	ee77 5a65 	vsub.f32	s11, s14, s11
 802c2aa:	ee76 7aa7 	vadd.f32	s15, s13, s15
 802c2ae:	edca 5a01 	vstr	s11, [sl, #4]
 802c2b2:	edca 7a00 	vstr	s15, [sl]
 802c2b6:	6872      	ldr	r2, [r6, #4]
 802c2b8:	4621      	mov	r1, r4
 802c2ba:	2304      	movs	r3, #4
 802c2bc:	f000 f97a 	bl	802c5b4 <arm_radix8_butterfly_f32>
 802c2c0:	9809      	ldr	r0, [sp, #36]	; 0x24
 802c2c2:	6872      	ldr	r2, [r6, #4]
 802c2c4:	4621      	mov	r1, r4
 802c2c6:	2304      	movs	r3, #4
 802c2c8:	f000 f974 	bl	802c5b4 <arm_radix8_butterfly_f32>
 802c2cc:	980a      	ldr	r0, [sp, #40]	; 0x28
 802c2ce:	6872      	ldr	r2, [r6, #4]
 802c2d0:	4621      	mov	r1, r4
 802c2d2:	2304      	movs	r3, #4
 802c2d4:	f000 f96e 	bl	802c5b4 <arm_radix8_butterfly_f32>
 802c2d8:	9801      	ldr	r0, [sp, #4]
 802c2da:	6872      	ldr	r2, [r6, #4]
 802c2dc:	4621      	mov	r1, r4
 802c2de:	2304      	movs	r3, #4
 802c2e0:	b00f      	add	sp, #60	; 0x3c
 802c2e2:	ecbd 8b0a 	vpop	{d8-d12}
 802c2e6:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802c2ea:	f000 b963 	b.w	802c5b4 <arm_radix8_butterfly_f32>
 802c2ee:	bf00      	nop

0802c2f0 <arm_cfft_f32>:
 802c2f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802c2f4:	2a01      	cmp	r2, #1
 802c2f6:	4606      	mov	r6, r0
 802c2f8:	4617      	mov	r7, r2
 802c2fa:	460c      	mov	r4, r1
 802c2fc:	4698      	mov	r8, r3
 802c2fe:	8805      	ldrh	r5, [r0, #0]
 802c300:	d054      	beq.n	802c3ac <arm_cfft_f32+0xbc>
 802c302:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 802c306:	d04c      	beq.n	802c3a2 <arm_cfft_f32+0xb2>
 802c308:	d916      	bls.n	802c338 <arm_cfft_f32+0x48>
 802c30a:	f5b5 6f80 	cmp.w	r5, #1024	; 0x400
 802c30e:	d01a      	beq.n	802c346 <arm_cfft_f32+0x56>
 802c310:	d95c      	bls.n	802c3cc <arm_cfft_f32+0xdc>
 802c312:	f5b5 6f00 	cmp.w	r5, #2048	; 0x800
 802c316:	d044      	beq.n	802c3a2 <arm_cfft_f32+0xb2>
 802c318:	f5b5 5f80 	cmp.w	r5, #4096	; 0x1000
 802c31c:	d105      	bne.n	802c32a <arm_cfft_f32+0x3a>
 802c31e:	4620      	mov	r0, r4
 802c320:	4629      	mov	r1, r5
 802c322:	6872      	ldr	r2, [r6, #4]
 802c324:	2301      	movs	r3, #1
 802c326:	f000 f945 	bl	802c5b4 <arm_radix8_butterfly_f32>
 802c32a:	f1b8 0f00 	cmp.w	r8, #0
 802c32e:	d111      	bne.n	802c354 <arm_cfft_f32+0x64>
 802c330:	2f01      	cmp	r7, #1
 802c332:	d016      	beq.n	802c362 <arm_cfft_f32+0x72>
 802c334:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802c338:	2d20      	cmp	r5, #32
 802c33a:	d032      	beq.n	802c3a2 <arm_cfft_f32+0xb2>
 802c33c:	d94a      	bls.n	802c3d4 <arm_cfft_f32+0xe4>
 802c33e:	2d40      	cmp	r5, #64	; 0x40
 802c340:	d0ed      	beq.n	802c31e <arm_cfft_f32+0x2e>
 802c342:	2d80      	cmp	r5, #128	; 0x80
 802c344:	d1f1      	bne.n	802c32a <arm_cfft_f32+0x3a>
 802c346:	4630      	mov	r0, r6
 802c348:	4621      	mov	r1, r4
 802c34a:	f7ff fca1 	bl	802bc90 <arm_cfft_radix8by2_f32>
 802c34e:	f1b8 0f00 	cmp.w	r8, #0
 802c352:	d0ed      	beq.n	802c330 <arm_cfft_f32+0x40>
 802c354:	4620      	mov	r0, r4
 802c356:	89b1      	ldrh	r1, [r6, #12]
 802c358:	68b2      	ldr	r2, [r6, #8]
 802c35a:	f7d3 ff49 	bl	80001f0 <arm_bitreversal_32>
 802c35e:	2f01      	cmp	r7, #1
 802c360:	d1e8      	bne.n	802c334 <arm_cfft_f32+0x44>
 802c362:	ee07 5a90 	vmov	s15, r5
 802c366:	eef8 6a67 	vcvt.f32.u32	s13, s15
 802c36a:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 802c36e:	eec7 6aa6 	vdiv.f32	s13, s15, s13
 802c372:	2d00      	cmp	r5, #0
 802c374:	d0de      	beq.n	802c334 <arm_cfft_f32+0x44>
 802c376:	f104 0108 	add.w	r1, r4, #8
 802c37a:	2300      	movs	r3, #0
 802c37c:	3301      	adds	r3, #1
 802c37e:	429d      	cmp	r5, r3
 802c380:	f101 0108 	add.w	r1, r1, #8
 802c384:	ed11 7a04 	vldr	s14, [r1, #-16]
 802c388:	ed51 7a03 	vldr	s15, [r1, #-12]
 802c38c:	ee27 7a26 	vmul.f32	s14, s14, s13
 802c390:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 802c394:	ed01 7a04 	vstr	s14, [r1, #-16]
 802c398:	ed41 7a03 	vstr	s15, [r1, #-12]
 802c39c:	d1ee      	bne.n	802c37c <arm_cfft_f32+0x8c>
 802c39e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802c3a2:	4630      	mov	r0, r6
 802c3a4:	4621      	mov	r1, r4
 802c3a6:	f7ff fd45 	bl	802be34 <arm_cfft_radix8by4_f32>
 802c3aa:	e7be      	b.n	802c32a <arm_cfft_f32+0x3a>
 802c3ac:	b1ad      	cbz	r5, 802c3da <arm_cfft_f32+0xea>
 802c3ae:	f101 030c 	add.w	r3, r1, #12
 802c3b2:	2200      	movs	r2, #0
 802c3b4:	ed53 7a02 	vldr	s15, [r3, #-8]
 802c3b8:	3201      	adds	r2, #1
 802c3ba:	eef1 7a67 	vneg.f32	s15, s15
 802c3be:	4295      	cmp	r5, r2
 802c3c0:	ed43 7a02 	vstr	s15, [r3, #-8]
 802c3c4:	f103 0308 	add.w	r3, r3, #8
 802c3c8:	d1f4      	bne.n	802c3b4 <arm_cfft_f32+0xc4>
 802c3ca:	e79a      	b.n	802c302 <arm_cfft_f32+0x12>
 802c3cc:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 802c3d0:	d0a5      	beq.n	802c31e <arm_cfft_f32+0x2e>
 802c3d2:	e7aa      	b.n	802c32a <arm_cfft_f32+0x3a>
 802c3d4:	2d10      	cmp	r5, #16
 802c3d6:	d0b6      	beq.n	802c346 <arm_cfft_f32+0x56>
 802c3d8:	e7a7      	b.n	802c32a <arm_cfft_f32+0x3a>
 802c3da:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 802c3de:	d894      	bhi.n	802c30a <arm_cfft_f32+0x1a>
 802c3e0:	e7aa      	b.n	802c338 <arm_cfft_f32+0x48>
 802c3e2:	bf00      	nop

0802c3e4 <arm_cmplx_mag_f32>:
 802c3e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802c3e8:	ea5f 0892 	movs.w	r8, r2, lsr #2
 802c3ec:	b084      	sub	sp, #16
 802c3ee:	d07f      	beq.n	802c4f0 <arm_cmplx_mag_f32+0x10c>
 802c3f0:	2700      	movs	r7, #0
 802c3f2:	f100 0420 	add.w	r4, r0, #32
 802c3f6:	f101 0510 	add.w	r5, r1, #16
 802c3fa:	4646      	mov	r6, r8
 802c3fc:	e05a      	b.n	802c4b4 <arm_cmplx_mag_f32+0xd0>
 802c3fe:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802c402:	eeb4 0a40 	vcmp.f32	s0, s0
 802c406:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802c40a:	f040 80a4 	bne.w	802c556 <arm_cmplx_mag_f32+0x172>
 802c40e:	ed05 0a04 	vstr	s0, [r5, #-16]
 802c412:	ed54 7a06 	vldr	s15, [r4, #-24]	; 0xffffffe8
 802c416:	ed14 0a05 	vldr	s0, [r4, #-20]	; 0xffffffec
 802c41a:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802c41e:	ee20 0a00 	vmul.f32	s0, s0, s0
 802c422:	ee77 7a80 	vadd.f32	s15, s15, s0
 802c426:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802c42a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802c42e:	f2c0 808f 	blt.w	802c550 <arm_cmplx_mag_f32+0x16c>
 802c432:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802c436:	eeb4 0a40 	vcmp.f32	s0, s0
 802c43a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802c43e:	f040 80af 	bne.w	802c5a0 <arm_cmplx_mag_f32+0x1bc>
 802c442:	ed05 0a03 	vstr	s0, [r5, #-12]
 802c446:	ed54 7a04 	vldr	s15, [r4, #-16]
 802c44a:	ed14 0a03 	vldr	s0, [r4, #-12]
 802c44e:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802c452:	ee20 0a00 	vmul.f32	s0, s0, s0
 802c456:	ee77 7a80 	vadd.f32	s15, s15, s0
 802c45a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802c45e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802c462:	db72      	blt.n	802c54a <arm_cmplx_mag_f32+0x166>
 802c464:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802c468:	eeb4 0a40 	vcmp.f32	s0, s0
 802c46c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802c470:	f040 808c 	bne.w	802c58c <arm_cmplx_mag_f32+0x1a8>
 802c474:	ed05 0a02 	vstr	s0, [r5, #-8]
 802c478:	ed54 7a02 	vldr	s15, [r4, #-8]
 802c47c:	ed14 0a01 	vldr	s0, [r4, #-4]
 802c480:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802c484:	ee20 0a00 	vmul.f32	s0, s0, s0
 802c488:	ee77 7a80 	vadd.f32	s15, s15, s0
 802c48c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802c490:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802c494:	db20      	blt.n	802c4d8 <arm_cmplx_mag_f32+0xf4>
 802c496:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802c49a:	eeb4 0a40 	vcmp.f32	s0, s0
 802c49e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802c4a2:	d169      	bne.n	802c578 <arm_cmplx_mag_f32+0x194>
 802c4a4:	3e01      	subs	r6, #1
 802c4a6:	ed05 0a01 	vstr	s0, [r5, #-4]
 802c4aa:	f104 0420 	add.w	r4, r4, #32
 802c4ae:	f105 0510 	add.w	r5, r5, #16
 802c4b2:	d019      	beq.n	802c4e8 <arm_cmplx_mag_f32+0x104>
 802c4b4:	ed54 7a08 	vldr	s15, [r4, #-32]	; 0xffffffe0
 802c4b8:	ed14 0a07 	vldr	s0, [r4, #-28]	; 0xffffffe4
 802c4bc:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802c4c0:	ee20 0a00 	vmul.f32	s0, s0, s0
 802c4c4:	ee77 7a80 	vadd.f32	s15, s15, s0
 802c4c8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802c4cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802c4d0:	da95      	bge.n	802c3fe <arm_cmplx_mag_f32+0x1a>
 802c4d2:	f845 7c10 	str.w	r7, [r5, #-16]
 802c4d6:	e79c      	b.n	802c412 <arm_cmplx_mag_f32+0x2e>
 802c4d8:	3e01      	subs	r6, #1
 802c4da:	f845 7c04 	str.w	r7, [r5, #-4]
 802c4de:	f104 0420 	add.w	r4, r4, #32
 802c4e2:	f105 0510 	add.w	r5, r5, #16
 802c4e6:	d1e5      	bne.n	802c4b4 <arm_cmplx_mag_f32+0xd0>
 802c4e8:	eb00 1048 	add.w	r0, r0, r8, lsl #5
 802c4ec:	eb01 1108 	add.w	r1, r1, r8, lsl #4
 802c4f0:	f012 0503 	ands.w	r5, r2, #3
 802c4f4:	d026      	beq.n	802c544 <arm_cmplx_mag_f32+0x160>
 802c4f6:	2600      	movs	r6, #0
 802c4f8:	f100 0408 	add.w	r4, r0, #8
 802c4fc:	e00c      	b.n	802c518 <arm_cmplx_mag_f32+0x134>
 802c4fe:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802c502:	eeb4 0a40 	vcmp.f32	s0, s0
 802c506:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802c50a:	d12e      	bne.n	802c56a <arm_cmplx_mag_f32+0x186>
 802c50c:	3d01      	subs	r5, #1
 802c50e:	ed01 0a01 	vstr	s0, [r1, #-4]
 802c512:	f104 0408 	add.w	r4, r4, #8
 802c516:	d015      	beq.n	802c544 <arm_cmplx_mag_f32+0x160>
 802c518:	ed54 7a02 	vldr	s15, [r4, #-8]
 802c51c:	ed14 0a01 	vldr	s0, [r4, #-4]
 802c520:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802c524:	ee20 0a00 	vmul.f32	s0, s0, s0
 802c528:	3104      	adds	r1, #4
 802c52a:	ee77 7a80 	vadd.f32	s15, s15, s0
 802c52e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802c532:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802c536:	dae2      	bge.n	802c4fe <arm_cmplx_mag_f32+0x11a>
 802c538:	3d01      	subs	r5, #1
 802c53a:	f841 6c04 	str.w	r6, [r1, #-4]
 802c53e:	f104 0408 	add.w	r4, r4, #8
 802c542:	d1e9      	bne.n	802c518 <arm_cmplx_mag_f32+0x134>
 802c544:	b004      	add	sp, #16
 802c546:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802c54a:	f845 7c08 	str.w	r7, [r5, #-8]
 802c54e:	e793      	b.n	802c478 <arm_cmplx_mag_f32+0x94>
 802c550:	f845 7c0c 	str.w	r7, [r5, #-12]
 802c554:	e777      	b.n	802c446 <arm_cmplx_mag_f32+0x62>
 802c556:	eeb0 0a67 	vmov.f32	s0, s15
 802c55a:	9203      	str	r2, [sp, #12]
 802c55c:	9102      	str	r1, [sp, #8]
 802c55e:	9001      	str	r0, [sp, #4]
 802c560:	f000 fb38 	bl	802cbd4 <sqrtf>
 802c564:	a801      	add	r0, sp, #4
 802c566:	c807      	ldmia	r0, {r0, r1, r2}
 802c568:	e751      	b.n	802c40e <arm_cmplx_mag_f32+0x2a>
 802c56a:	eeb0 0a67 	vmov.f32	s0, s15
 802c56e:	9101      	str	r1, [sp, #4]
 802c570:	f000 fb30 	bl	802cbd4 <sqrtf>
 802c574:	9901      	ldr	r1, [sp, #4]
 802c576:	e7c9      	b.n	802c50c <arm_cmplx_mag_f32+0x128>
 802c578:	eeb0 0a67 	vmov.f32	s0, s15
 802c57c:	9203      	str	r2, [sp, #12]
 802c57e:	9102      	str	r1, [sp, #8]
 802c580:	9001      	str	r0, [sp, #4]
 802c582:	f000 fb27 	bl	802cbd4 <sqrtf>
 802c586:	a801      	add	r0, sp, #4
 802c588:	c807      	ldmia	r0, {r0, r1, r2}
 802c58a:	e78b      	b.n	802c4a4 <arm_cmplx_mag_f32+0xc0>
 802c58c:	eeb0 0a67 	vmov.f32	s0, s15
 802c590:	9203      	str	r2, [sp, #12]
 802c592:	9102      	str	r1, [sp, #8]
 802c594:	9001      	str	r0, [sp, #4]
 802c596:	f000 fb1d 	bl	802cbd4 <sqrtf>
 802c59a:	a801      	add	r0, sp, #4
 802c59c:	c807      	ldmia	r0, {r0, r1, r2}
 802c59e:	e769      	b.n	802c474 <arm_cmplx_mag_f32+0x90>
 802c5a0:	eeb0 0a67 	vmov.f32	s0, s15
 802c5a4:	9203      	str	r2, [sp, #12]
 802c5a6:	9102      	str	r1, [sp, #8]
 802c5a8:	9001      	str	r0, [sp, #4]
 802c5aa:	f000 fb13 	bl	802cbd4 <sqrtf>
 802c5ae:	a801      	add	r0, sp, #4
 802c5b0:	c807      	ldmia	r0, {r0, r1, r2}
 802c5b2:	e746      	b.n	802c442 <arm_cmplx_mag_f32+0x5e>

0802c5b4 <arm_radix8_butterfly_f32>:
 802c5b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802c5b8:	ed2d 8b10 	vpush	{d8-d15}
 802c5bc:	b09d      	sub	sp, #116	; 0x74
 802c5be:	461c      	mov	r4, r3
 802c5c0:	ed9f bac8 	vldr	s22, [pc, #800]	; 802c8e4 <arm_radix8_butterfly_f32+0x330>
 802c5c4:	921a      	str	r2, [sp, #104]	; 0x68
 802c5c6:	1d03      	adds	r3, r0, #4
 802c5c8:	4682      	mov	sl, r0
 802c5ca:	4689      	mov	r9, r1
 802c5cc:	468b      	mov	fp, r1
 802c5ce:	931b      	str	r3, [sp, #108]	; 0x6c
 802c5d0:	9400      	str	r4, [sp, #0]
 802c5d2:	469e      	mov	lr, r3
 802c5d4:	ea4f 03db 	mov.w	r3, fp, lsr #3
 802c5d8:	005a      	lsls	r2, r3, #1
 802c5da:	18d6      	adds	r6, r2, r3
 802c5dc:	18f5      	adds	r5, r6, r3
 802c5de:	9203      	str	r2, [sp, #12]
 802c5e0:	195a      	adds	r2, r3, r5
 802c5e2:	18d0      	adds	r0, r2, r3
 802c5e4:	00df      	lsls	r7, r3, #3
 802c5e6:	1819      	adds	r1, r3, r0
 802c5e8:	463c      	mov	r4, r7
 802c5ea:	9701      	str	r7, [sp, #4]
 802c5ec:	4457      	add	r7, sl
 802c5ee:	930c      	str	r3, [sp, #48]	; 0x30
 802c5f0:	eb0a 02c2 	add.w	r2, sl, r2, lsl #3
 802c5f4:	011b      	lsls	r3, r3, #4
 802c5f6:	eb0a 01c1 	add.w	r1, sl, r1, lsl #3
 802c5fa:	eb07 0c04 	add.w	ip, r7, r4
 802c5fe:	9c00      	ldr	r4, [sp, #0]
 802c600:	9302      	str	r3, [sp, #8]
 802c602:	eb0a 06c6 	add.w	r6, sl, r6, lsl #3
 802c606:	eb0a 05c5 	add.w	r5, sl, r5, lsl #3
 802c60a:	3204      	adds	r2, #4
 802c60c:	3104      	adds	r1, #4
 802c60e:	eb0a 00c0 	add.w	r0, sl, r0, lsl #3
 802c612:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 802c616:	f04f 0800 	mov.w	r8, #0
 802c61a:	eddc 7a00 	vldr	s15, [ip]
 802c61e:	edd7 6a00 	vldr	s13, [r7]
 802c622:	edd6 3a00 	vldr	s7, [r6]
 802c626:	ed5e aa01 	vldr	s21, [lr, #-4]
 802c62a:	edd5 4a00 	vldr	s9, [r5]
 802c62e:	ed90 2a00 	vldr	s4, [r0]
 802c632:	ed12 7a01 	vldr	s14, [r2, #-4]
 802c636:	ed51 0a01 	vldr	s1, [r1, #-4]
 802c63a:	ee77 8a82 	vadd.f32	s17, s15, s4
 802c63e:	ee33 4aa0 	vadd.f32	s8, s7, s1
 802c642:	ee76 1a87 	vadd.f32	s3, s13, s14
 802c646:	ee3a 3aa4 	vadd.f32	s6, s21, s9
 802c64a:	ee31 6a84 	vadd.f32	s12, s3, s8
 802c64e:	ee33 5a28 	vadd.f32	s10, s6, s17
 802c652:	ee36 7ac7 	vsub.f32	s14, s13, s14
 802c656:	ee75 6a06 	vadd.f32	s13, s10, s12
 802c65a:	ee35 5a46 	vsub.f32	s10, s10, s12
 802c65e:	ed4e 6a01 	vstr	s13, [lr, #-4]
 802c662:	ed85 5a00 	vstr	s10, [r5]
 802c666:	ed96 1a01 	vldr	s2, [r6, #4]
 802c66a:	edd7 5a01 	vldr	s11, [r7, #4]
 802c66e:	ed92 aa00 	vldr	s20, [r2]
 802c672:	ed91 6a00 	vldr	s12, [r1]
 802c676:	ed9e 9a00 	vldr	s18, [lr]
 802c67a:	ed95 5a01 	vldr	s10, [r5, #4]
 802c67e:	eddc 6a01 	vldr	s13, [ip, #4]
 802c682:	edd0 9a01 	vldr	s19, [r0, #4]
 802c686:	ee73 0ae0 	vsub.f32	s1, s7, s1
 802c68a:	ee71 2a46 	vsub.f32	s5, s2, s12
 802c68e:	ee75 3aca 	vsub.f32	s7, s11, s20
 802c692:	ee37 0a60 	vsub.f32	s0, s14, s1
 802c696:	ee33 8aa2 	vadd.f32	s16, s7, s5
 802c69a:	ee37 7a20 	vadd.f32	s14, s14, s1
 802c69e:	ee73 2ae2 	vsub.f32	s5, s7, s5
 802c6a2:	ee37 2ac2 	vsub.f32	s4, s15, s4
 802c6a6:	ee79 3a05 	vadd.f32	s7, s18, s10
 802c6aa:	ee60 0a0b 	vmul.f32	s1, s0, s22
 802c6ae:	ee39 5a45 	vsub.f32	s10, s18, s10
 802c6b2:	ee7a 4ae4 	vsub.f32	s9, s21, s9
 802c6b6:	ee36 9aa9 	vadd.f32	s18, s13, s19
 802c6ba:	ee75 5a8a 	vadd.f32	s11, s11, s20
 802c6be:	ee31 6a06 	vadd.f32	s12, s2, s12
 802c6c2:	ee76 6ae9 	vsub.f32	s13, s13, s19
 802c6c6:	ee28 8a0b 	vmul.f32	s16, s16, s22
 802c6ca:	ee62 2a8b 	vmul.f32	s5, s5, s22
 802c6ce:	ee67 7a0b 	vmul.f32	s15, s14, s22
 802c6d2:	ee33 3a68 	vsub.f32	s6, s6, s17
 802c6d6:	ee36 0a88 	vadd.f32	s0, s13, s16
 802c6da:	ee75 8a86 	vadd.f32	s17, s11, s12
 802c6de:	ee36 7ac8 	vsub.f32	s14, s13, s16
 802c6e2:	ee71 1ac4 	vsub.f32	s3, s3, s8
 802c6e6:	ee75 6a62 	vsub.f32	s13, s10, s5
 802c6ea:	ee33 4ac9 	vsub.f32	s8, s7, s18
 802c6ee:	ee35 6ac6 	vsub.f32	s12, s11, s12
 802c6f2:	ee33 1a89 	vadd.f32	s2, s7, s18
 802c6f6:	ee74 5ae0 	vsub.f32	s11, s9, s1
 802c6fa:	ee74 3aa0 	vadd.f32	s7, s9, s1
 802c6fe:	ee75 4a22 	vadd.f32	s9, s10, s5
 802c702:	ee32 5a27 	vadd.f32	s10, s4, s15
 802c706:	ee72 7a67 	vsub.f32	s15, s4, s15
 802c70a:	ee33 8a06 	vadd.f32	s16, s6, s12
 802c70e:	ee75 2a87 	vadd.f32	s5, s11, s14
 802c712:	ee31 9a28 	vadd.f32	s18, s2, s17
 802c716:	ee33 6a46 	vsub.f32	s12, s6, s12
 802c71a:	ee74 0a61 	vsub.f32	s1, s8, s3
 802c71e:	ee33 2a80 	vadd.f32	s4, s7, s0
 802c722:	ee35 7ac7 	vsub.f32	s14, s11, s14
 802c726:	ee34 3ac5 	vsub.f32	s6, s9, s10
 802c72a:	ee76 5ae7 	vsub.f32	s11, s13, s15
 802c72e:	ee31 1a68 	vsub.f32	s2, s2, s17
 802c732:	ee34 4a21 	vadd.f32	s8, s8, s3
 802c736:	ee73 3ac0 	vsub.f32	s7, s7, s0
 802c73a:	ee74 4a85 	vadd.f32	s9, s9, s10
 802c73e:	ee76 6aa7 	vadd.f32	s13, s13, s15
 802c742:	44d8      	add	r8, fp
 802c744:	45c1      	cmp	r9, r8
 802c746:	ed8e 9a00 	vstr	s18, [lr]
 802c74a:	ed85 1a01 	vstr	s2, [r5, #4]
 802c74e:	449e      	add	lr, r3
 802c750:	ed8c 8a00 	vstr	s16, [ip]
 802c754:	441d      	add	r5, r3
 802c756:	ed80 6a00 	vstr	s12, [r0]
 802c75a:	edcc 0a01 	vstr	s1, [ip, #4]
 802c75e:	ed80 4a01 	vstr	s8, [r0, #4]
 802c762:	449c      	add	ip, r3
 802c764:	ed87 2a00 	vstr	s4, [r7]
 802c768:	4418      	add	r0, r3
 802c76a:	ed41 3a01 	vstr	s7, [r1, #-4]
 802c76e:	ed42 2a01 	vstr	s5, [r2, #-4]
 802c772:	ed86 7a00 	vstr	s14, [r6]
 802c776:	ed87 3a01 	vstr	s6, [r7, #4]
 802c77a:	edc1 4a00 	vstr	s9, [r1]
 802c77e:	441f      	add	r7, r3
 802c780:	edc2 5a00 	vstr	s11, [r2]
 802c784:	4419      	add	r1, r3
 802c786:	edc6 6a01 	vstr	s13, [r6, #4]
 802c78a:	441a      	add	r2, r3
 802c78c:	441e      	add	r6, r3
 802c78e:	f63f af44 	bhi.w	802c61a <arm_radix8_butterfly_f32+0x66>
 802c792:	990c      	ldr	r1, [sp, #48]	; 0x30
 802c794:	2907      	cmp	r1, #7
 802c796:	4620      	mov	r0, r4
 802c798:	f240 81e9 	bls.w	802cb6e <arm_radix8_butterfly_f32+0x5ba>
 802c79c:	eb04 0744 	add.w	r7, r4, r4, lsl #1
 802c7a0:	193e      	adds	r6, r7, r4
 802c7a2:	1935      	adds	r5, r6, r4
 802c7a4:	9c03      	ldr	r4, [sp, #12]
 802c7a6:	9000      	str	r0, [sp, #0]
 802c7a8:	4622      	mov	r2, r4
 802c7aa:	3201      	adds	r2, #1
 802c7ac:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 802c7b0:	9900      	ldr	r1, [sp, #0]
 802c7b2:	1828      	adds	r0, r5, r0
 802c7b4:	eb00 0e01 	add.w	lr, r0, r1
 802c7b8:	990c      	ldr	r1, [sp, #48]	; 0x30
 802c7ba:	440a      	add	r2, r1
 802c7bc:	eb04 0c01 	add.w	ip, r4, r1
 802c7c0:	ea4f 04ce 	mov.w	r4, lr, lsl #3
 802c7c4:	eb0a 0ec2 	add.w	lr, sl, r2, lsl #3
 802c7c8:	9a00      	ldr	r2, [sp, #0]
 802c7ca:	940f      	str	r4, [sp, #60]	; 0x3c
 802c7cc:	00ed      	lsls	r5, r5, #3
 802c7ce:	9511      	str	r5, [sp, #68]	; 0x44
 802c7d0:	00d5      	lsls	r5, r2, #3
 802c7d2:	950d      	str	r5, [sp, #52]	; 0x34
 802c7d4:	9d01      	ldr	r5, [sp, #4]
 802c7d6:	3508      	adds	r5, #8
 802c7d8:	9516      	str	r5, [sp, #88]	; 0x58
 802c7da:	9d02      	ldr	r5, [sp, #8]
 802c7dc:	3508      	adds	r5, #8
 802c7de:	0114      	lsls	r4, r2, #4
 802c7e0:	9517      	str	r5, [sp, #92]	; 0x5c
 802c7e2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802c7e4:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 802c7e6:	940e      	str	r4, [sp, #56]	; 0x38
 802c7e8:	00c0      	lsls	r0, r0, #3
 802c7ea:	9010      	str	r0, [sp, #64]	; 0x40
 802c7ec:	18aa      	adds	r2, r5, r2
 802c7ee:	9207      	str	r2, [sp, #28]
 802c7f0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 802c7f2:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 802c7f4:	18aa      	adds	r2, r5, r2
 802c7f6:	9208      	str	r2, [sp, #32]
 802c7f8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 802c7fa:	18aa      	adds	r2, r5, r2
 802c7fc:	9209      	str	r2, [sp, #36]	; 0x24
 802c7fe:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 802c802:	f10e 0204 	add.w	r2, lr, #4
 802c806:	920a      	str	r2, [sp, #40]	; 0x28
 802c808:	00c9      	lsls	r1, r1, #3
 802c80a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 802c80c:	310c      	adds	r1, #12
 802c80e:	00f6      	lsls	r6, r6, #3
 802c810:	ea4f 00cc 	mov.w	r0, ip, lsl #3
 802c814:	9114      	str	r1, [sp, #80]	; 0x50
 802c816:	18a9      	adds	r1, r5, r2
 802c818:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 802c81a:	9612      	str	r6, [sp, #72]	; 0x48
 802c81c:	00ff      	lsls	r7, r7, #3
 802c81e:	19ae      	adds	r6, r5, r6
 802c820:	3008      	adds	r0, #8
 802c822:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
 802c826:	9606      	str	r6, [sp, #24]
 802c828:	9019      	str	r0, [sp, #100]	; 0x64
 802c82a:	18aa      	adds	r2, r5, r2
 802c82c:	0164      	lsls	r4, r4, #5
 802c82e:	19ee      	adds	r6, r5, r7
 802c830:	f10c 000c 	add.w	r0, ip, #12
 802c834:	9713      	str	r7, [sp, #76]	; 0x4c
 802c836:	9604      	str	r6, [sp, #16]
 802c838:	9015      	str	r0, [sp, #84]	; 0x54
 802c83a:	9103      	str	r1, [sp, #12]
 802c83c:	9205      	str	r2, [sp, #20]
 802c83e:	f104 0208 	add.w	r2, r4, #8
 802c842:	9218      	str	r2, [sp, #96]	; 0x60
 802c844:	f04f 0801 	mov.w	r8, #1
 802c848:	2200      	movs	r2, #0
 802c84a:	f102 0108 	add.w	r1, r2, #8
 802c84e:	460f      	mov	r7, r1
 802c850:	910b      	str	r1, [sp, #44]	; 0x2c
 802c852:	9918      	ldr	r1, [sp, #96]	; 0x60
 802c854:	188e      	adds	r6, r1, r2
 802c856:	9916      	ldr	r1, [sp, #88]	; 0x58
 802c858:	188d      	adds	r5, r1, r2
 802c85a:	9917      	ldr	r1, [sp, #92]	; 0x5c
 802c85c:	188c      	adds	r4, r1, r2
 802c85e:	9919      	ldr	r1, [sp, #100]	; 0x64
 802c860:	1888      	adds	r0, r1, r2
 802c862:	9914      	ldr	r1, [sp, #80]	; 0x50
 802c864:	eb01 0c02 	add.w	ip, r1, r2
 802c868:	9915      	ldr	r1, [sp, #84]	; 0x54
 802c86a:	440a      	add	r2, r1
 802c86c:	9903      	ldr	r1, [sp, #12]
 802c86e:	edd1 fa00 	vldr	s31, [r1]
 802c872:	9905      	ldr	r1, [sp, #20]
 802c874:	ed91 fa00 	vldr	s30, [r1]
 802c878:	9904      	ldr	r1, [sp, #16]
 802c87a:	edd1 ea00 	vldr	s29, [r1]
 802c87e:	9906      	ldr	r1, [sp, #24]
 802c880:	ed91 ea00 	vldr	s28, [r1]
 802c884:	9909      	ldr	r1, [sp, #36]	; 0x24
 802c886:	edd1 da00 	vldr	s27, [r1]
 802c88a:	9908      	ldr	r1, [sp, #32]
 802c88c:	ed91 da00 	vldr	s26, [r1]
 802c890:	9907      	ldr	r1, [sp, #28]
 802c892:	edd1 ca00 	vldr	s25, [r1]
 802c896:	9903      	ldr	r1, [sp, #12]
 802c898:	ed91 ca01 	vldr	s24, [r1, #4]
 802c89c:	9905      	ldr	r1, [sp, #20]
 802c89e:	edd1 ba01 	vldr	s23, [r1, #4]
 802c8a2:	9904      	ldr	r1, [sp, #16]
 802c8a4:	edd1 aa01 	vldr	s21, [r1, #4]
 802c8a8:	9906      	ldr	r1, [sp, #24]
 802c8aa:	ed91 aa01 	vldr	s20, [r1, #4]
 802c8ae:	9909      	ldr	r1, [sp, #36]	; 0x24
 802c8b0:	edd1 7a01 	vldr	s15, [r1, #4]
 802c8b4:	9908      	ldr	r1, [sp, #32]
 802c8b6:	edcd 7a00 	vstr	s15, [sp]
 802c8ba:	edd1 7a01 	vldr	s15, [r1, #4]
 802c8be:	9907      	ldr	r1, [sp, #28]
 802c8c0:	edcd 7a01 	vstr	s15, [sp, #4]
 802c8c4:	edd1 7a01 	vldr	s15, [r1, #4]
 802c8c8:	eb0a 0e07 	add.w	lr, sl, r7
 802c8cc:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 802c8ce:	edcd 7a02 	vstr	s15, [sp, #8]
 802c8d2:	eb0c 010a 	add.w	r1, ip, sl
 802c8d6:	4456      	add	r6, sl
 802c8d8:	4455      	add	r5, sl
 802c8da:	4454      	add	r4, sl
 802c8dc:	4450      	add	r0, sl
 802c8de:	4452      	add	r2, sl
 802c8e0:	46c4      	mov	ip, r8
 802c8e2:	e001      	b.n	802c8e8 <arm_radix8_butterfly_f32+0x334>
 802c8e4:	3f3504f3 	.word	0x3f3504f3
 802c8e8:	ed96 5a00 	vldr	s10, [r6]
 802c8ec:	ed52 9a01 	vldr	s19, [r2, #-4]
 802c8f0:	ed11 6a01 	vldr	s12, [r1, #-4]
 802c8f4:	edd0 7a00 	vldr	s15, [r0]
 802c8f8:	ed17 7a01 	vldr	s14, [r7, #-4]
 802c8fc:	edde 3a00 	vldr	s7, [lr]
 802c900:	ed94 3a00 	vldr	s6, [r4]
 802c904:	ed95 2a00 	vldr	s4, [r5]
 802c908:	ed9e 0a01 	vldr	s0, [lr, #4]
 802c90c:	ee33 8a85 	vadd.f32	s16, s7, s10
 802c910:	ee32 1a06 	vadd.f32	s2, s4, s12
 802c914:	ee33 4a29 	vadd.f32	s8, s6, s19
 802c918:	ee77 4a87 	vadd.f32	s9, s15, s14
 802c91c:	ee78 1a04 	vadd.f32	s3, s16, s8
 802c920:	ee71 6a24 	vadd.f32	s13, s2, s9
 802c924:	ee32 2a46 	vsub.f32	s4, s4, s12
 802c928:	ee31 6aa6 	vadd.f32	s12, s3, s13
 802c92c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802c930:	ed8e 6a00 	vstr	s12, [lr]
 802c934:	edd0 8a01 	vldr	s17, [r0, #4]
 802c938:	ed95 9a01 	vldr	s18, [r5, #4]
 802c93c:	edd1 2a00 	vldr	s5, [r1]
 802c940:	ed97 7a00 	vldr	s14, [r7]
 802c944:	edd4 0a01 	vldr	s1, [r4, #4]
 802c948:	ed96 6a01 	vldr	s12, [r6, #4]
 802c94c:	edd2 5a00 	vldr	s11, [r2]
 802c950:	ee73 3ac5 	vsub.f32	s7, s7, s10
 802c954:	ee33 3a69 	vsub.f32	s6, s6, s19
 802c958:	ee39 5a62 	vsub.f32	s10, s18, s5
 802c95c:	ee78 9ac7 	vsub.f32	s19, s17, s14
 802c960:	ee38 4a44 	vsub.f32	s8, s16, s8
 802c964:	ee38 7a87 	vadd.f32	s14, s17, s14
 802c968:	ee30 8aa5 	vadd.f32	s16, s1, s11
 802c96c:	ee79 2a22 	vadd.f32	s5, s18, s5
 802c970:	ee75 8a69 	vsub.f32	s17, s10, s19
 802c974:	ee32 9a27 	vadd.f32	s18, s4, s15
 802c978:	ee35 5a29 	vadd.f32	s10, s10, s19
 802c97c:	ee72 7a67 	vsub.f32	s15, s4, s15
 802c980:	ee30 2a06 	vadd.f32	s4, s0, s12
 802c984:	ee69 9a0b 	vmul.f32	s19, s18, s22
 802c988:	ee70 5ae5 	vsub.f32	s11, s1, s11
 802c98c:	ee32 9a08 	vadd.f32	s18, s4, s16
 802c990:	ee68 8a8b 	vmul.f32	s17, s17, s22
 802c994:	ee32 2a48 	vsub.f32	s4, s4, s16
 802c998:	ee71 4a64 	vsub.f32	s9, s2, s9
 802c99c:	ee25 5a0b 	vmul.f32	s10, s10, s22
 802c9a0:	ee32 1a87 	vadd.f32	s2, s5, s14
 802c9a4:	ee67 7a8b 	vmul.f32	s15, s15, s22
 802c9a8:	ee72 2ac7 	vsub.f32	s5, s5, s14
 802c9ac:	ee30 6a46 	vsub.f32	s12, s0, s12
 802c9b0:	ee73 0a29 	vadd.f32	s1, s6, s19
 802c9b4:	ee36 0a28 	vadd.f32	s0, s12, s17
 802c9b8:	ee33 3a69 	vsub.f32	s6, s6, s19
 802c9bc:	ee32 7a64 	vsub.f32	s14, s4, s9
 802c9c0:	ee73 9aa7 	vadd.f32	s19, s7, s15
 802c9c4:	ee36 6a68 	vsub.f32	s12, s12, s17
 802c9c8:	ee73 7ae7 	vsub.f32	s15, s7, s15
 802c9cc:	ee75 8a85 	vadd.f32	s17, s11, s10
 802c9d0:	ee74 3a22 	vadd.f32	s7, s8, s5
 802c9d4:	ee35 5ac5 	vsub.f32	s10, s11, s10
 802c9d8:	ee71 6ae6 	vsub.f32	s13, s3, s13
 802c9dc:	ee79 1a41 	vsub.f32	s3, s18, s2
 802c9e0:	ee39 8aa8 	vadd.f32	s16, s19, s17
 802c9e4:	ee76 5a43 	vsub.f32	s11, s12, s6
 802c9e8:	ee74 2a62 	vsub.f32	s5, s8, s5
 802c9ec:	ee72 4a24 	vadd.f32	s9, s4, s9
 802c9f0:	ee30 4a60 	vsub.f32	s8, s0, s1
 802c9f4:	ee79 8ae8 	vsub.f32	s17, s19, s17
 802c9f8:	ee30 0a20 	vadd.f32	s0, s0, s1
 802c9fc:	ee77 9a85 	vadd.f32	s19, s15, s10
 802ca00:	ee36 6a03 	vadd.f32	s12, s12, s6
 802ca04:	ee77 7ac5 	vsub.f32	s15, s15, s10
 802ca08:	ee2e 2a21 	vmul.f32	s4, s28, s3
 802ca0c:	ee2e 5a26 	vmul.f32	s10, s28, s13
 802ca10:	ee6f 0a23 	vmul.f32	s1, s30, s7
 802ca14:	ee2a 3a21 	vmul.f32	s6, s20, s3
 802ca18:	ee39 1a01 	vadd.f32	s2, s18, s2
 802ca1c:	ee6a 6a26 	vmul.f32	s13, s20, s13
 802ca20:	ee2b 9a87 	vmul.f32	s18, s23, s14
 802ca24:	ee6b 3aa3 	vmul.f32	s7, s23, s7
 802ca28:	ee2f 7a07 	vmul.f32	s14, s30, s14
 802ca2c:	ee6f 1a84 	vmul.f32	s3, s31, s8
 802ca30:	ee35 3a03 	vadd.f32	s6, s10, s6
 802ca34:	ee72 6a66 	vsub.f32	s13, s4, s13
 802ca38:	ee2c 5a04 	vmul.f32	s10, s24, s8
 802ca3c:	ee2f 2a88 	vmul.f32	s4, s31, s16
 802ca40:	ed9d 4a02 	vldr	s8, [sp, #8]
 802ca44:	ed8e 1a01 	vstr	s2, [lr, #4]
 802ca48:	ee77 3a63 	vsub.f32	s7, s14, s7
 802ca4c:	ee2c 8a08 	vmul.f32	s16, s24, s16
 802ca50:	ed9d 7a01 	vldr	s14, [sp, #4]
 802ca54:	ed86 3a00 	vstr	s6, [r6]
 802ca58:	ee30 9a89 	vadd.f32	s18, s1, s18
 802ca5c:	ee32 2a05 	vadd.f32	s4, s4, s10
 802ca60:	ee6d 0a22 	vmul.f32	s1, s26, s5
 802ca64:	ee31 8ac8 	vsub.f32	s16, s3, s16
 802ca68:	ee67 2a22 	vmul.f32	s5, s14, s5
 802ca6c:	ee64 1a00 	vmul.f32	s3, s8, s0
 802ca70:	ee27 7a24 	vmul.f32	s14, s14, s9
 802ca74:	ee2c 5aa8 	vmul.f32	s10, s25, s17
 802ca78:	ee6d 4a24 	vmul.f32	s9, s26, s9
 802ca7c:	ee64 8a28 	vmul.f32	s17, s8, s17
 802ca80:	ed9d 4a00 	vldr	s8, [sp]
 802ca84:	edc6 6a01 	vstr	s13, [r6, #4]
 802ca88:	ee74 2ae2 	vsub.f32	s5, s9, s5
 802ca8c:	ee6d 4aa9 	vmul.f32	s9, s27, s19
 802ca90:	ee64 9a29 	vmul.f32	s19, s8, s19
 802ca94:	ee24 4a25 	vmul.f32	s8, s8, s11
 802ca98:	ee30 7a87 	vadd.f32	s14, s1, s14
 802ca9c:	ee74 4a84 	vadd.f32	s9, s9, s8
 802caa0:	ee6e 0aa7 	vmul.f32	s1, s29, s15
 802caa4:	ee2a 4a86 	vmul.f32	s8, s21, s12
 802caa8:	ee2c 0a80 	vmul.f32	s0, s25, s0
 802caac:	ee6d 5aa5 	vmul.f32	s11, s27, s11
 802cab0:	ee6a 7aa7 	vmul.f32	s15, s21, s15
 802cab4:	ee2e 6a86 	vmul.f32	s12, s29, s12
 802cab8:	ee75 1a21 	vadd.f32	s3, s10, s3
 802cabc:	ee30 0a68 	vsub.f32	s0, s0, s17
 802cac0:	ee75 9ae9 	vsub.f32	s19, s11, s19
 802cac4:	ee70 0a84 	vadd.f32	s1, s1, s8
 802cac8:	ee36 6a67 	vsub.f32	s12, s12, s15
 802cacc:	44dc      	add	ip, fp
 802cace:	45e1      	cmp	r9, ip
 802cad0:	ed84 9a00 	vstr	s18, [r4]
 802cad4:	edc4 3a01 	vstr	s7, [r4, #4]
 802cad8:	449e      	add	lr, r3
 802cada:	ed02 7a01 	vstr	s14, [r2, #-4]
 802cade:	edc2 2a00 	vstr	s5, [r2]
 802cae2:	441e      	add	r6, r3
 802cae4:	ed85 2a00 	vstr	s4, [r5]
 802cae8:	ed85 8a01 	vstr	s16, [r5, #4]
 802caec:	441c      	add	r4, r3
 802caee:	ed47 1a01 	vstr	s3, [r7, #-4]
 802caf2:	ed87 0a00 	vstr	s0, [r7]
 802caf6:	441a      	add	r2, r3
 802caf8:	ed41 4a01 	vstr	s9, [r1, #-4]
 802cafc:	edc1 9a00 	vstr	s19, [r1]
 802cb00:	441d      	add	r5, r3
 802cb02:	edc0 0a00 	vstr	s1, [r0]
 802cb06:	441f      	add	r7, r3
 802cb08:	ed80 6a01 	vstr	s12, [r0, #4]
 802cb0c:	4419      	add	r1, r3
 802cb0e:	4418      	add	r0, r3
 802cb10:	f63f aeea 	bhi.w	802c8e8 <arm_radix8_butterfly_f32+0x334>
 802cb14:	9a03      	ldr	r2, [sp, #12]
 802cb16:	990d      	ldr	r1, [sp, #52]	; 0x34
 802cb18:	440a      	add	r2, r1
 802cb1a:	9203      	str	r2, [sp, #12]
 802cb1c:	990e      	ldr	r1, [sp, #56]	; 0x38
 802cb1e:	9a05      	ldr	r2, [sp, #20]
 802cb20:	440a      	add	r2, r1
 802cb22:	9205      	str	r2, [sp, #20]
 802cb24:	9913      	ldr	r1, [sp, #76]	; 0x4c
 802cb26:	9a04      	ldr	r2, [sp, #16]
 802cb28:	440a      	add	r2, r1
 802cb2a:	9204      	str	r2, [sp, #16]
 802cb2c:	9912      	ldr	r1, [sp, #72]	; 0x48
 802cb2e:	9a06      	ldr	r2, [sp, #24]
 802cb30:	440a      	add	r2, r1
 802cb32:	9206      	str	r2, [sp, #24]
 802cb34:	9911      	ldr	r1, [sp, #68]	; 0x44
 802cb36:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802cb38:	440a      	add	r2, r1
 802cb3a:	9209      	str	r2, [sp, #36]	; 0x24
 802cb3c:	9910      	ldr	r1, [sp, #64]	; 0x40
 802cb3e:	9a08      	ldr	r2, [sp, #32]
 802cb40:	440a      	add	r2, r1
 802cb42:	9208      	str	r2, [sp, #32]
 802cb44:	990f      	ldr	r1, [sp, #60]	; 0x3c
 802cb46:	9a07      	ldr	r2, [sp, #28]
 802cb48:	440a      	add	r2, r1
 802cb4a:	9207      	str	r2, [sp, #28]
 802cb4c:	990c      	ldr	r1, [sp, #48]	; 0x30
 802cb4e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802cb50:	f108 0801 	add.w	r8, r8, #1
 802cb54:	3208      	adds	r2, #8
 802cb56:	4588      	cmp	r8, r1
 802cb58:	920a      	str	r2, [sp, #40]	; 0x28
 802cb5a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802cb5c:	f47f ae75 	bne.w	802c84a <arm_radix8_butterfly_f32+0x296>
 802cb60:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 802cb64:	9300      	str	r3, [sp, #0]
 802cb66:	46c3      	mov	fp, r8
 802cb68:	f8dd e06c 	ldr.w	lr, [sp, #108]	; 0x6c
 802cb6c:	e532      	b.n	802c5d4 <arm_radix8_butterfly_f32+0x20>
 802cb6e:	b01d      	add	sp, #116	; 0x74
 802cb70:	ecbd 8b10 	vpop	{d8-d15}
 802cb74:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802cb78 <__aeabi_atexit>:
 802cb78:	460b      	mov	r3, r1
 802cb7a:	4601      	mov	r1, r0
 802cb7c:	4618      	mov	r0, r3
 802cb7e:	f000 bfc7 	b.w	802db10 <__cxa_atexit>

0802cb82 <_ZdlPvj>:
 802cb82:	f000 b812 	b.w	802cbaa <_ZdlPv>

0802cb86 <__cxa_guard_acquire>:
 802cb86:	6803      	ldr	r3, [r0, #0]
 802cb88:	07db      	lsls	r3, r3, #31
 802cb8a:	d406      	bmi.n	802cb9a <__cxa_guard_acquire+0x14>
 802cb8c:	7843      	ldrb	r3, [r0, #1]
 802cb8e:	b103      	cbz	r3, 802cb92 <__cxa_guard_acquire+0xc>
 802cb90:	deff      	udf	#255	; 0xff
 802cb92:	2301      	movs	r3, #1
 802cb94:	7043      	strb	r3, [r0, #1]
 802cb96:	4618      	mov	r0, r3
 802cb98:	4770      	bx	lr
 802cb9a:	2000      	movs	r0, #0
 802cb9c:	4770      	bx	lr

0802cb9e <__cxa_guard_release>:
 802cb9e:	2301      	movs	r3, #1
 802cba0:	6003      	str	r3, [r0, #0]
 802cba2:	4770      	bx	lr

0802cba4 <__cxa_pure_virtual>:
 802cba4:	b508      	push	{r3, lr}
 802cba6:	f000 f80f 	bl	802cbc8 <_ZSt9terminatev>

0802cbaa <_ZdlPv>:
 802cbaa:	f000 befd 	b.w	802d9a8 <free>

0802cbae <_ZN10__cxxabiv111__terminateEPFvvE>:
 802cbae:	b508      	push	{r3, lr}
 802cbb0:	4780      	blx	r0
 802cbb2:	f000 fec5 	bl	802d940 <abort>
	...

0802cbb8 <_ZSt13get_terminatev>:
 802cbb8:	4b02      	ldr	r3, [pc, #8]	; (802cbc4 <_ZSt13get_terminatev+0xc>)
 802cbba:	6818      	ldr	r0, [r3, #0]
 802cbbc:	f3bf 8f5b 	dmb	ish
 802cbc0:	4770      	bx	lr
 802cbc2:	bf00      	nop
 802cbc4:	20000108 	.word	0x20000108

0802cbc8 <_ZSt9terminatev>:
 802cbc8:	b508      	push	{r3, lr}
 802cbca:	f7ff fff5 	bl	802cbb8 <_ZSt13get_terminatev>
 802cbce:	f7ff ffee 	bl	802cbae <_ZN10__cxxabiv111__terminateEPFvvE>
	...

0802cbd4 <sqrtf>:
 802cbd4:	b508      	push	{r3, lr}
 802cbd6:	ed2d 8b02 	vpush	{d8}
 802cbda:	eeb0 8a40 	vmov.f32	s16, s0
 802cbde:	f000 f97d 	bl	802cedc <__ieee754_sqrtf>
 802cbe2:	eeb4 8a48 	vcmp.f32	s16, s16
 802cbe6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802cbea:	d60c      	bvs.n	802cc06 <sqrtf+0x32>
 802cbec:	eddf 8a07 	vldr	s17, [pc, #28]	; 802cc0c <sqrtf+0x38>
 802cbf0:	eeb4 8ae8 	vcmpe.f32	s16, s17
 802cbf4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802cbf8:	d505      	bpl.n	802cc06 <sqrtf+0x32>
 802cbfa:	f001 f9a7 	bl	802df4c <__errno>
 802cbfe:	ee88 0aa8 	vdiv.f32	s0, s17, s17
 802cc02:	2321      	movs	r3, #33	; 0x21
 802cc04:	6003      	str	r3, [r0, #0]
 802cc06:	ecbd 8b02 	vpop	{d8}
 802cc0a:	bd08      	pop	{r3, pc}
 802cc0c:	00000000 	.word	0x00000000

0802cc10 <atanf>:
 802cc10:	b538      	push	{r3, r4, r5, lr}
 802cc12:	ee10 5a10 	vmov	r5, s0
 802cc16:	f025 4400 	bic.w	r4, r5, #2147483648	; 0x80000000
 802cc1a:	f1b4 4fa1 	cmp.w	r4, #1350565888	; 0x50800000
 802cc1e:	eef0 7a40 	vmov.f32	s15, s0
 802cc22:	db10      	blt.n	802cc46 <atanf+0x36>
 802cc24:	f1b4 4fff 	cmp.w	r4, #2139095040	; 0x7f800000
 802cc28:	dd04      	ble.n	802cc34 <atanf+0x24>
 802cc2a:	ee70 7a00 	vadd.f32	s15, s0, s0
 802cc2e:	eeb0 0a67 	vmov.f32	s0, s15
 802cc32:	bd38      	pop	{r3, r4, r5, pc}
 802cc34:	eddf 7a4d 	vldr	s15, [pc, #308]	; 802cd6c <atanf+0x15c>
 802cc38:	ed9f 7a4d 	vldr	s14, [pc, #308]	; 802cd70 <atanf+0x160>
 802cc3c:	2d00      	cmp	r5, #0
 802cc3e:	bfd8      	it	le
 802cc40:	eef0 7a47 	vmovle.f32	s15, s14
 802cc44:	e7f3      	b.n	802cc2e <atanf+0x1e>
 802cc46:	4b4b      	ldr	r3, [pc, #300]	; (802cd74 <atanf+0x164>)
 802cc48:	429c      	cmp	r4, r3
 802cc4a:	dc10      	bgt.n	802cc6e <atanf+0x5e>
 802cc4c:	f1b4 5f44 	cmp.w	r4, #822083584	; 0x31000000
 802cc50:	da0a      	bge.n	802cc68 <atanf+0x58>
 802cc52:	ed9f 7a49 	vldr	s14, [pc, #292]	; 802cd78 <atanf+0x168>
 802cc56:	ee30 7a07 	vadd.f32	s14, s0, s14
 802cc5a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 802cc5e:	eeb4 7ae6 	vcmpe.f32	s14, s13
 802cc62:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802cc66:	dce2      	bgt.n	802cc2e <atanf+0x1e>
 802cc68:	f04f 33ff 	mov.w	r3, #4294967295
 802cc6c:	e013      	b.n	802cc96 <atanf+0x86>
 802cc6e:	f000 f8e7 	bl	802ce40 <fabsf>
 802cc72:	4b42      	ldr	r3, [pc, #264]	; (802cd7c <atanf+0x16c>)
 802cc74:	429c      	cmp	r4, r3
 802cc76:	dc4f      	bgt.n	802cd18 <atanf+0x108>
 802cc78:	f5a3 03d0 	sub.w	r3, r3, #6815744	; 0x680000
 802cc7c:	429c      	cmp	r4, r3
 802cc7e:	dc41      	bgt.n	802cd04 <atanf+0xf4>
 802cc80:	eef0 7a00 	vmov.f32	s15, #0	; 0x40000000  2.0
 802cc84:	eebf 7a00 	vmov.f32	s14, #240	; 0xbf800000 -1.0
 802cc88:	eea0 7a27 	vfma.f32	s14, s0, s15
 802cc8c:	2300      	movs	r3, #0
 802cc8e:	ee30 0a27 	vadd.f32	s0, s0, s15
 802cc92:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802cc96:	1c5a      	adds	r2, r3, #1
 802cc98:	ee27 6aa7 	vmul.f32	s12, s15, s15
 802cc9c:	ed9f 7a38 	vldr	s14, [pc, #224]	; 802cd80 <atanf+0x170>
 802cca0:	eddf 5a38 	vldr	s11, [pc, #224]	; 802cd84 <atanf+0x174>
 802cca4:	ed9f 5a38 	vldr	s10, [pc, #224]	; 802cd88 <atanf+0x178>
 802cca8:	ee66 6a06 	vmul.f32	s13, s12, s12
 802ccac:	eee6 5a87 	vfma.f32	s11, s13, s14
 802ccb0:	ed9f 7a36 	vldr	s14, [pc, #216]	; 802cd8c <atanf+0x17c>
 802ccb4:	eea5 7aa6 	vfma.f32	s14, s11, s13
 802ccb8:	eddf 5a35 	vldr	s11, [pc, #212]	; 802cd90 <atanf+0x180>
 802ccbc:	eee7 5a26 	vfma.f32	s11, s14, s13
 802ccc0:	ed9f 7a34 	vldr	s14, [pc, #208]	; 802cd94 <atanf+0x184>
 802ccc4:	eea5 7aa6 	vfma.f32	s14, s11, s13
 802ccc8:	eddf 5a33 	vldr	s11, [pc, #204]	; 802cd98 <atanf+0x188>
 802cccc:	eee7 5a26 	vfma.f32	s11, s14, s13
 802ccd0:	ed9f 7a32 	vldr	s14, [pc, #200]	; 802cd9c <atanf+0x18c>
 802ccd4:	eea6 5a87 	vfma.f32	s10, s13, s14
 802ccd8:	ed9f 7a31 	vldr	s14, [pc, #196]	; 802cda0 <atanf+0x190>
 802ccdc:	eea5 7a26 	vfma.f32	s14, s10, s13
 802cce0:	ed9f 5a30 	vldr	s10, [pc, #192]	; 802cda4 <atanf+0x194>
 802cce4:	eea7 5a26 	vfma.f32	s10, s14, s13
 802cce8:	ed9f 7a2f 	vldr	s14, [pc, #188]	; 802cda8 <atanf+0x198>
 802ccec:	eea5 7a26 	vfma.f32	s14, s10, s13
 802ccf0:	ee27 7a26 	vmul.f32	s14, s14, s13
 802ccf4:	eea5 7a86 	vfma.f32	s14, s11, s12
 802ccf8:	ee27 7a87 	vmul.f32	s14, s15, s14
 802ccfc:	d121      	bne.n	802cd42 <atanf+0x132>
 802ccfe:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802cd02:	e794      	b.n	802cc2e <atanf+0x1e>
 802cd04:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 802cd08:	ee30 7a67 	vsub.f32	s14, s0, s15
 802cd0c:	ee30 0a27 	vadd.f32	s0, s0, s15
 802cd10:	2301      	movs	r3, #1
 802cd12:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802cd16:	e7be      	b.n	802cc96 <atanf+0x86>
 802cd18:	4b24      	ldr	r3, [pc, #144]	; (802cdac <atanf+0x19c>)
 802cd1a:	429c      	cmp	r4, r3
 802cd1c:	dc0b      	bgt.n	802cd36 <atanf+0x126>
 802cd1e:	eef7 7a08 	vmov.f32	s15, #120	; 0x3fc00000  1.5
 802cd22:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802cd26:	eea0 7a27 	vfma.f32	s14, s0, s15
 802cd2a:	2302      	movs	r3, #2
 802cd2c:	ee70 6a67 	vsub.f32	s13, s0, s15
 802cd30:	eec6 7a87 	vdiv.f32	s15, s13, s14
 802cd34:	e7af      	b.n	802cc96 <atanf+0x86>
 802cd36:	eebf 7a00 	vmov.f32	s14, #240	; 0xbf800000 -1.0
 802cd3a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802cd3e:	2303      	movs	r3, #3
 802cd40:	e7a9      	b.n	802cc96 <atanf+0x86>
 802cd42:	4a1b      	ldr	r2, [pc, #108]	; (802cdb0 <atanf+0x1a0>)
 802cd44:	491b      	ldr	r1, [pc, #108]	; (802cdb4 <atanf+0x1a4>)
 802cd46:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 802cd4a:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 802cd4e:	edd3 6a00 	vldr	s13, [r3]
 802cd52:	ee37 7a66 	vsub.f32	s14, s14, s13
 802cd56:	2d00      	cmp	r5, #0
 802cd58:	ee37 7a67 	vsub.f32	s14, s14, s15
 802cd5c:	edd2 7a00 	vldr	s15, [r2]
 802cd60:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802cd64:	bfb8      	it	lt
 802cd66:	eef1 7a67 	vneglt.f32	s15, s15
 802cd6a:	e760      	b.n	802cc2e <atanf+0x1e>
 802cd6c:	3fc90fdb 	.word	0x3fc90fdb
 802cd70:	bfc90fdb 	.word	0xbfc90fdb
 802cd74:	3edfffff 	.word	0x3edfffff
 802cd78:	7149f2ca 	.word	0x7149f2ca
 802cd7c:	3f97ffff 	.word	0x3f97ffff
 802cd80:	3c8569d7 	.word	0x3c8569d7
 802cd84:	3d4bda59 	.word	0x3d4bda59
 802cd88:	bd6ef16b 	.word	0xbd6ef16b
 802cd8c:	3d886b35 	.word	0x3d886b35
 802cd90:	3dba2e6e 	.word	0x3dba2e6e
 802cd94:	3e124925 	.word	0x3e124925
 802cd98:	3eaaaaab 	.word	0x3eaaaaab
 802cd9c:	bd15a221 	.word	0xbd15a221
 802cda0:	bd9d8795 	.word	0xbd9d8795
 802cda4:	bde38e38 	.word	0xbde38e38
 802cda8:	be4ccccd 	.word	0xbe4ccccd
 802cdac:	401bffff 	.word	0x401bffff
 802cdb0:	080457ec 	.word	0x080457ec
 802cdb4:	080457fc 	.word	0x080457fc

0802cdb8 <cosf>:
 802cdb8:	ee10 3a10 	vmov	r3, s0
 802cdbc:	b507      	push	{r0, r1, r2, lr}
 802cdbe:	4a1e      	ldr	r2, [pc, #120]	; (802ce38 <cosf+0x80>)
 802cdc0:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802cdc4:	4293      	cmp	r3, r2
 802cdc6:	dc06      	bgt.n	802cdd6 <cosf+0x1e>
 802cdc8:	eddf 0a1c 	vldr	s1, [pc, #112]	; 802ce3c <cosf+0x84>
 802cdcc:	b003      	add	sp, #12
 802cdce:	f85d eb04 	ldr.w	lr, [sp], #4
 802cdd2:	f000 b90b 	b.w	802cfec <__kernel_cosf>
 802cdd6:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 802cdda:	db04      	blt.n	802cde6 <cosf+0x2e>
 802cddc:	ee30 0a40 	vsub.f32	s0, s0, s0
 802cde0:	b003      	add	sp, #12
 802cde2:	f85d fb04 	ldr.w	pc, [sp], #4
 802cde6:	4668      	mov	r0, sp
 802cde8:	f000 f9a6 	bl	802d138 <__ieee754_rem_pio2f>
 802cdec:	f000 0003 	and.w	r0, r0, #3
 802cdf0:	2801      	cmp	r0, #1
 802cdf2:	d009      	beq.n	802ce08 <cosf+0x50>
 802cdf4:	2802      	cmp	r0, #2
 802cdf6:	d010      	beq.n	802ce1a <cosf+0x62>
 802cdf8:	b9b0      	cbnz	r0, 802ce28 <cosf+0x70>
 802cdfa:	eddd 0a01 	vldr	s1, [sp, #4]
 802cdfe:	ed9d 0a00 	vldr	s0, [sp]
 802ce02:	f000 f8f3 	bl	802cfec <__kernel_cosf>
 802ce06:	e7eb      	b.n	802cde0 <cosf+0x28>
 802ce08:	eddd 0a01 	vldr	s1, [sp, #4]
 802ce0c:	ed9d 0a00 	vldr	s0, [sp]
 802ce10:	f000 f94a 	bl	802d0a8 <__kernel_sinf>
 802ce14:	eeb1 0a40 	vneg.f32	s0, s0
 802ce18:	e7e2      	b.n	802cde0 <cosf+0x28>
 802ce1a:	eddd 0a01 	vldr	s1, [sp, #4]
 802ce1e:	ed9d 0a00 	vldr	s0, [sp]
 802ce22:	f000 f8e3 	bl	802cfec <__kernel_cosf>
 802ce26:	e7f5      	b.n	802ce14 <cosf+0x5c>
 802ce28:	eddd 0a01 	vldr	s1, [sp, #4]
 802ce2c:	ed9d 0a00 	vldr	s0, [sp]
 802ce30:	2001      	movs	r0, #1
 802ce32:	f000 f939 	bl	802d0a8 <__kernel_sinf>
 802ce36:	e7d3      	b.n	802cde0 <cosf+0x28>
 802ce38:	3f490fd8 	.word	0x3f490fd8
 802ce3c:	00000000 	.word	0x00000000

0802ce40 <fabsf>:
 802ce40:	ee10 3a10 	vmov	r3, s0
 802ce44:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802ce48:	ee00 3a10 	vmov	s0, r3
 802ce4c:	4770      	bx	lr
	...

0802ce50 <sinf>:
 802ce50:	ee10 3a10 	vmov	r3, s0
 802ce54:	b507      	push	{r0, r1, r2, lr}
 802ce56:	4a1f      	ldr	r2, [pc, #124]	; (802ced4 <sinf+0x84>)
 802ce58:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802ce5c:	4293      	cmp	r3, r2
 802ce5e:	dc07      	bgt.n	802ce70 <sinf+0x20>
 802ce60:	eddf 0a1d 	vldr	s1, [pc, #116]	; 802ced8 <sinf+0x88>
 802ce64:	2000      	movs	r0, #0
 802ce66:	b003      	add	sp, #12
 802ce68:	f85d eb04 	ldr.w	lr, [sp], #4
 802ce6c:	f000 b91c 	b.w	802d0a8 <__kernel_sinf>
 802ce70:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 802ce74:	db04      	blt.n	802ce80 <sinf+0x30>
 802ce76:	ee30 0a40 	vsub.f32	s0, s0, s0
 802ce7a:	b003      	add	sp, #12
 802ce7c:	f85d fb04 	ldr.w	pc, [sp], #4
 802ce80:	4668      	mov	r0, sp
 802ce82:	f000 f959 	bl	802d138 <__ieee754_rem_pio2f>
 802ce86:	f000 0003 	and.w	r0, r0, #3
 802ce8a:	2801      	cmp	r0, #1
 802ce8c:	d00a      	beq.n	802cea4 <sinf+0x54>
 802ce8e:	2802      	cmp	r0, #2
 802ce90:	d00f      	beq.n	802ceb2 <sinf+0x62>
 802ce92:	b9c0      	cbnz	r0, 802cec6 <sinf+0x76>
 802ce94:	eddd 0a01 	vldr	s1, [sp, #4]
 802ce98:	ed9d 0a00 	vldr	s0, [sp]
 802ce9c:	2001      	movs	r0, #1
 802ce9e:	f000 f903 	bl	802d0a8 <__kernel_sinf>
 802cea2:	e7ea      	b.n	802ce7a <sinf+0x2a>
 802cea4:	eddd 0a01 	vldr	s1, [sp, #4]
 802cea8:	ed9d 0a00 	vldr	s0, [sp]
 802ceac:	f000 f89e 	bl	802cfec <__kernel_cosf>
 802ceb0:	e7e3      	b.n	802ce7a <sinf+0x2a>
 802ceb2:	eddd 0a01 	vldr	s1, [sp, #4]
 802ceb6:	ed9d 0a00 	vldr	s0, [sp]
 802ceba:	2001      	movs	r0, #1
 802cebc:	f000 f8f4 	bl	802d0a8 <__kernel_sinf>
 802cec0:	eeb1 0a40 	vneg.f32	s0, s0
 802cec4:	e7d9      	b.n	802ce7a <sinf+0x2a>
 802cec6:	eddd 0a01 	vldr	s1, [sp, #4]
 802ceca:	ed9d 0a00 	vldr	s0, [sp]
 802cece:	f000 f88d 	bl	802cfec <__kernel_cosf>
 802ced2:	e7f5      	b.n	802cec0 <sinf+0x70>
 802ced4:	3f490fd8 	.word	0x3f490fd8
 802ced8:	00000000 	.word	0x00000000

0802cedc <__ieee754_sqrtf>:
 802cedc:	eeb1 0ac0 	vsqrt.f32	s0, s0
 802cee0:	4770      	bx	lr
	...

0802cee4 <ceilf>:
 802cee4:	ee10 3a10 	vmov	r3, s0
 802cee8:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802ceec:	3a7f      	subs	r2, #127	; 0x7f
 802ceee:	2a16      	cmp	r2, #22
 802cef0:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 802cef4:	dc2a      	bgt.n	802cf4c <ceilf+0x68>
 802cef6:	2a00      	cmp	r2, #0
 802cef8:	da11      	bge.n	802cf1e <ceilf+0x3a>
 802cefa:	eddf 7a19 	vldr	s15, [pc, #100]	; 802cf60 <ceilf+0x7c>
 802cefe:	ee30 0a27 	vadd.f32	s0, s0, s15
 802cf02:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802cf06:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802cf0a:	dd05      	ble.n	802cf18 <ceilf+0x34>
 802cf0c:	2b00      	cmp	r3, #0
 802cf0e:	db23      	blt.n	802cf58 <ceilf+0x74>
 802cf10:	2900      	cmp	r1, #0
 802cf12:	bf18      	it	ne
 802cf14:	f04f 537e 	movne.w	r3, #1065353216	; 0x3f800000
 802cf18:	ee00 3a10 	vmov	s0, r3
 802cf1c:	4770      	bx	lr
 802cf1e:	4911      	ldr	r1, [pc, #68]	; (802cf64 <ceilf+0x80>)
 802cf20:	4111      	asrs	r1, r2
 802cf22:	420b      	tst	r3, r1
 802cf24:	d0fa      	beq.n	802cf1c <ceilf+0x38>
 802cf26:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802cf60 <ceilf+0x7c>
 802cf2a:	ee30 0a27 	vadd.f32	s0, s0, s15
 802cf2e:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802cf32:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802cf36:	ddef      	ble.n	802cf18 <ceilf+0x34>
 802cf38:	2b00      	cmp	r3, #0
 802cf3a:	bfc2      	ittt	gt
 802cf3c:	f44f 0000 	movgt.w	r0, #8388608	; 0x800000
 802cf40:	fa40 f202 	asrgt.w	r2, r0, r2
 802cf44:	189b      	addgt	r3, r3, r2
 802cf46:	ea23 0301 	bic.w	r3, r3, r1
 802cf4a:	e7e5      	b.n	802cf18 <ceilf+0x34>
 802cf4c:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 802cf50:	d3e4      	bcc.n	802cf1c <ceilf+0x38>
 802cf52:	ee30 0a00 	vadd.f32	s0, s0, s0
 802cf56:	4770      	bx	lr
 802cf58:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 802cf5c:	e7dc      	b.n	802cf18 <ceilf+0x34>
 802cf5e:	bf00      	nop
 802cf60:	7149f2ca 	.word	0x7149f2ca
 802cf64:	007fffff 	.word	0x007fffff

0802cf68 <floorf>:
 802cf68:	ee10 3a10 	vmov	r3, s0
 802cf6c:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802cf70:	3a7f      	subs	r2, #127	; 0x7f
 802cf72:	2a16      	cmp	r2, #22
 802cf74:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 802cf78:	dc2a      	bgt.n	802cfd0 <floorf+0x68>
 802cf7a:	2a00      	cmp	r2, #0
 802cf7c:	da11      	bge.n	802cfa2 <floorf+0x3a>
 802cf7e:	eddf 7a18 	vldr	s15, [pc, #96]	; 802cfe0 <floorf+0x78>
 802cf82:	ee30 0a27 	vadd.f32	s0, s0, s15
 802cf86:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802cf8a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802cf8e:	dd05      	ble.n	802cf9c <floorf+0x34>
 802cf90:	2b00      	cmp	r3, #0
 802cf92:	da23      	bge.n	802cfdc <floorf+0x74>
 802cf94:	4a13      	ldr	r2, [pc, #76]	; (802cfe4 <floorf+0x7c>)
 802cf96:	2900      	cmp	r1, #0
 802cf98:	bf18      	it	ne
 802cf9a:	4613      	movne	r3, r2
 802cf9c:	ee00 3a10 	vmov	s0, r3
 802cfa0:	4770      	bx	lr
 802cfa2:	4911      	ldr	r1, [pc, #68]	; (802cfe8 <floorf+0x80>)
 802cfa4:	4111      	asrs	r1, r2
 802cfa6:	420b      	tst	r3, r1
 802cfa8:	d0fa      	beq.n	802cfa0 <floorf+0x38>
 802cfaa:	eddf 7a0d 	vldr	s15, [pc, #52]	; 802cfe0 <floorf+0x78>
 802cfae:	ee30 0a27 	vadd.f32	s0, s0, s15
 802cfb2:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802cfb6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802cfba:	ddef      	ble.n	802cf9c <floorf+0x34>
 802cfbc:	2b00      	cmp	r3, #0
 802cfbe:	bfbe      	ittt	lt
 802cfc0:	f44f 0000 	movlt.w	r0, #8388608	; 0x800000
 802cfc4:	fa40 f202 	asrlt.w	r2, r0, r2
 802cfc8:	189b      	addlt	r3, r3, r2
 802cfca:	ea23 0301 	bic.w	r3, r3, r1
 802cfce:	e7e5      	b.n	802cf9c <floorf+0x34>
 802cfd0:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 802cfd4:	d3e4      	bcc.n	802cfa0 <floorf+0x38>
 802cfd6:	ee30 0a00 	vadd.f32	s0, s0, s0
 802cfda:	4770      	bx	lr
 802cfdc:	2300      	movs	r3, #0
 802cfde:	e7dd      	b.n	802cf9c <floorf+0x34>
 802cfe0:	7149f2ca 	.word	0x7149f2ca
 802cfe4:	bf800000 	.word	0xbf800000
 802cfe8:	007fffff 	.word	0x007fffff

0802cfec <__kernel_cosf>:
 802cfec:	ee10 3a10 	vmov	r3, s0
 802cff0:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802cff4:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 802cff8:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 802cffc:	da05      	bge.n	802d00a <__kernel_cosf+0x1e>
 802cffe:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 802d002:	ee17 2a90 	vmov	r2, s15
 802d006:	2a00      	cmp	r2, #0
 802d008:	d03b      	beq.n	802d082 <__kernel_cosf+0x96>
 802d00a:	ee20 7a00 	vmul.f32	s14, s0, s0
 802d00e:	eddf 7a1e 	vldr	s15, [pc, #120]	; 802d088 <__kernel_cosf+0x9c>
 802d012:	ed9f 6a1e 	vldr	s12, [pc, #120]	; 802d08c <__kernel_cosf+0xa0>
 802d016:	4a1e      	ldr	r2, [pc, #120]	; (802d090 <__kernel_cosf+0xa4>)
 802d018:	eea7 6a27 	vfma.f32	s12, s14, s15
 802d01c:	4293      	cmp	r3, r2
 802d01e:	eddf 7a1d 	vldr	s15, [pc, #116]	; 802d094 <__kernel_cosf+0xa8>
 802d022:	eee6 7a07 	vfma.f32	s15, s12, s14
 802d026:	ed9f 6a1c 	vldr	s12, [pc, #112]	; 802d098 <__kernel_cosf+0xac>
 802d02a:	eea7 6a87 	vfma.f32	s12, s15, s14
 802d02e:	eddf 7a1b 	vldr	s15, [pc, #108]	; 802d09c <__kernel_cosf+0xb0>
 802d032:	eee6 7a07 	vfma.f32	s15, s12, s14
 802d036:	ed9f 6a1a 	vldr	s12, [pc, #104]	; 802d0a0 <__kernel_cosf+0xb4>
 802d03a:	eea7 6a87 	vfma.f32	s12, s15, s14
 802d03e:	ee60 0ac0 	vnmul.f32	s1, s1, s0
 802d042:	ee26 6a07 	vmul.f32	s12, s12, s14
 802d046:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802d04a:	eee7 0a06 	vfma.f32	s1, s14, s12
 802d04e:	ee67 7a27 	vmul.f32	s15, s14, s15
 802d052:	dc04      	bgt.n	802d05e <__kernel_cosf+0x72>
 802d054:	ee77 7ae0 	vsub.f32	s15, s15, s1
 802d058:	ee36 0ae7 	vsub.f32	s0, s13, s15
 802d05c:	4770      	bx	lr
 802d05e:	4a11      	ldr	r2, [pc, #68]	; (802d0a4 <__kernel_cosf+0xb8>)
 802d060:	4293      	cmp	r3, r2
 802d062:	bfda      	itte	le
 802d064:	f103 437f 	addle.w	r3, r3, #4278190080	; 0xff000000
 802d068:	ee07 3a10 	vmovle	s14, r3
 802d06c:	eeb5 7a02 	vmovgt.f32	s14, #82	; 0x3e900000  0.2812500
 802d070:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802d074:	ee36 0ac7 	vsub.f32	s0, s13, s14
 802d078:	ee77 7ae0 	vsub.f32	s15, s15, s1
 802d07c:	ee30 0a67 	vsub.f32	s0, s0, s15
 802d080:	4770      	bx	lr
 802d082:	eeb0 0a66 	vmov.f32	s0, s13
 802d086:	4770      	bx	lr
 802d088:	ad47d74e 	.word	0xad47d74e
 802d08c:	310f74f6 	.word	0x310f74f6
 802d090:	3e999999 	.word	0x3e999999
 802d094:	b493f27c 	.word	0xb493f27c
 802d098:	37d00d01 	.word	0x37d00d01
 802d09c:	bab60b61 	.word	0xbab60b61
 802d0a0:	3d2aaaab 	.word	0x3d2aaaab
 802d0a4:	3f480000 	.word	0x3f480000

0802d0a8 <__kernel_sinf>:
 802d0a8:	ee10 3a10 	vmov	r3, s0
 802d0ac:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802d0b0:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 802d0b4:	da04      	bge.n	802d0c0 <__kernel_sinf+0x18>
 802d0b6:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 802d0ba:	ee17 3a90 	vmov	r3, s15
 802d0be:	b35b      	cbz	r3, 802d118 <__kernel_sinf+0x70>
 802d0c0:	ee20 7a00 	vmul.f32	s14, s0, s0
 802d0c4:	eddf 7a15 	vldr	s15, [pc, #84]	; 802d11c <__kernel_sinf+0x74>
 802d0c8:	ed9f 6a15 	vldr	s12, [pc, #84]	; 802d120 <__kernel_sinf+0x78>
 802d0cc:	eea7 6a27 	vfma.f32	s12, s14, s15
 802d0d0:	eddf 7a14 	vldr	s15, [pc, #80]	; 802d124 <__kernel_sinf+0x7c>
 802d0d4:	eee6 7a07 	vfma.f32	s15, s12, s14
 802d0d8:	ed9f 6a13 	vldr	s12, [pc, #76]	; 802d128 <__kernel_sinf+0x80>
 802d0dc:	eea7 6a87 	vfma.f32	s12, s15, s14
 802d0e0:	eddf 7a12 	vldr	s15, [pc, #72]	; 802d12c <__kernel_sinf+0x84>
 802d0e4:	ee60 6a07 	vmul.f32	s13, s0, s14
 802d0e8:	eee6 7a07 	vfma.f32	s15, s12, s14
 802d0ec:	b930      	cbnz	r0, 802d0fc <__kernel_sinf+0x54>
 802d0ee:	ed9f 6a10 	vldr	s12, [pc, #64]	; 802d130 <__kernel_sinf+0x88>
 802d0f2:	eea7 6a27 	vfma.f32	s12, s14, s15
 802d0f6:	eea6 0a26 	vfma.f32	s0, s12, s13
 802d0fa:	4770      	bx	lr
 802d0fc:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 802d100:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 802d104:	eee0 7a86 	vfma.f32	s15, s1, s12
 802d108:	eed7 0a87 	vfnms.f32	s1, s15, s14
 802d10c:	eddf 7a09 	vldr	s15, [pc, #36]	; 802d134 <__kernel_sinf+0x8c>
 802d110:	eee6 0aa7 	vfma.f32	s1, s13, s15
 802d114:	ee30 0a60 	vsub.f32	s0, s0, s1
 802d118:	4770      	bx	lr
 802d11a:	bf00      	nop
 802d11c:	2f2ec9d3 	.word	0x2f2ec9d3
 802d120:	b2d72f34 	.word	0xb2d72f34
 802d124:	3638ef1b 	.word	0x3638ef1b
 802d128:	b9500d01 	.word	0xb9500d01
 802d12c:	3c088889 	.word	0x3c088889
 802d130:	be2aaaab 	.word	0xbe2aaaab
 802d134:	3e2aaaab 	.word	0x3e2aaaab

0802d138 <__ieee754_rem_pio2f>:
 802d138:	b5f0      	push	{r4, r5, r6, r7, lr}
 802d13a:	ee10 6a10 	vmov	r6, s0
 802d13e:	4b86      	ldr	r3, [pc, #536]	; (802d358 <__ieee754_rem_pio2f+0x220>)
 802d140:	f026 4500 	bic.w	r5, r6, #2147483648	; 0x80000000
 802d144:	429d      	cmp	r5, r3
 802d146:	b087      	sub	sp, #28
 802d148:	4604      	mov	r4, r0
 802d14a:	dc05      	bgt.n	802d158 <__ieee754_rem_pio2f+0x20>
 802d14c:	2300      	movs	r3, #0
 802d14e:	ed80 0a00 	vstr	s0, [r0]
 802d152:	6043      	str	r3, [r0, #4]
 802d154:	2000      	movs	r0, #0
 802d156:	e020      	b.n	802d19a <__ieee754_rem_pio2f+0x62>
 802d158:	4b80      	ldr	r3, [pc, #512]	; (802d35c <__ieee754_rem_pio2f+0x224>)
 802d15a:	429d      	cmp	r5, r3
 802d15c:	dc38      	bgt.n	802d1d0 <__ieee754_rem_pio2f+0x98>
 802d15e:	2e00      	cmp	r6, #0
 802d160:	ed9f 7a7f 	vldr	s14, [pc, #508]	; 802d360 <__ieee754_rem_pio2f+0x228>
 802d164:	4b7f      	ldr	r3, [pc, #508]	; (802d364 <__ieee754_rem_pio2f+0x22c>)
 802d166:	f025 050f 	bic.w	r5, r5, #15
 802d16a:	dd18      	ble.n	802d19e <__ieee754_rem_pio2f+0x66>
 802d16c:	429d      	cmp	r5, r3
 802d16e:	ee70 7a47 	vsub.f32	s15, s0, s14
 802d172:	bf09      	itett	eq
 802d174:	ed9f 7a7c 	vldreq	s14, [pc, #496]	; 802d368 <__ieee754_rem_pio2f+0x230>
 802d178:	ed9f 7a7c 	vldrne	s14, [pc, #496]	; 802d36c <__ieee754_rem_pio2f+0x234>
 802d17c:	ee77 7ac7 	vsubeq.f32	s15, s15, s14
 802d180:	ed9f 7a7b 	vldreq	s14, [pc, #492]	; 802d370 <__ieee754_rem_pio2f+0x238>
 802d184:	ee77 6ac7 	vsub.f32	s13, s15, s14
 802d188:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802d18c:	edc0 6a00 	vstr	s13, [r0]
 802d190:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802d194:	edc0 7a01 	vstr	s15, [r0, #4]
 802d198:	2001      	movs	r0, #1
 802d19a:	b007      	add	sp, #28
 802d19c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802d19e:	429d      	cmp	r5, r3
 802d1a0:	ee70 7a07 	vadd.f32	s15, s0, s14
 802d1a4:	bf09      	itett	eq
 802d1a6:	ed9f 7a70 	vldreq	s14, [pc, #448]	; 802d368 <__ieee754_rem_pio2f+0x230>
 802d1aa:	ed9f 7a70 	vldrne	s14, [pc, #448]	; 802d36c <__ieee754_rem_pio2f+0x234>
 802d1ae:	ee77 7a87 	vaddeq.f32	s15, s15, s14
 802d1b2:	ed9f 7a6f 	vldreq	s14, [pc, #444]	; 802d370 <__ieee754_rem_pio2f+0x238>
 802d1b6:	ee77 6a87 	vadd.f32	s13, s15, s14
 802d1ba:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802d1be:	edc0 6a00 	vstr	s13, [r0]
 802d1c2:	ee77 7a87 	vadd.f32	s15, s15, s14
 802d1c6:	edc0 7a01 	vstr	s15, [r0, #4]
 802d1ca:	f04f 30ff 	mov.w	r0, #4294967295
 802d1ce:	e7e4      	b.n	802d19a <__ieee754_rem_pio2f+0x62>
 802d1d0:	4b68      	ldr	r3, [pc, #416]	; (802d374 <__ieee754_rem_pio2f+0x23c>)
 802d1d2:	429d      	cmp	r5, r3
 802d1d4:	dc71      	bgt.n	802d2ba <__ieee754_rem_pio2f+0x182>
 802d1d6:	f7ff fe33 	bl	802ce40 <fabsf>
 802d1da:	ed9f 7a67 	vldr	s14, [pc, #412]	; 802d378 <__ieee754_rem_pio2f+0x240>
 802d1de:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802d1e2:	eee0 7a07 	vfma.f32	s15, s0, s14
 802d1e6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802d1ea:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 802d1ee:	ee17 0a90 	vmov	r0, s15
 802d1f2:	eddf 7a5b 	vldr	s15, [pc, #364]	; 802d360 <__ieee754_rem_pio2f+0x228>
 802d1f6:	eea7 0a67 	vfms.f32	s0, s14, s15
 802d1fa:	281f      	cmp	r0, #31
 802d1fc:	eddf 7a5b 	vldr	s15, [pc, #364]	; 802d36c <__ieee754_rem_pio2f+0x234>
 802d200:	ee67 7a27 	vmul.f32	s15, s14, s15
 802d204:	eeb1 6a47 	vneg.f32	s12, s14
 802d208:	ee70 6a67 	vsub.f32	s13, s0, s15
 802d20c:	ee16 2a90 	vmov	r2, s13
 802d210:	dc1c      	bgt.n	802d24c <__ieee754_rem_pio2f+0x114>
 802d212:	495a      	ldr	r1, [pc, #360]	; (802d37c <__ieee754_rem_pio2f+0x244>)
 802d214:	1e47      	subs	r7, r0, #1
 802d216:	f025 03ff 	bic.w	r3, r5, #255	; 0xff
 802d21a:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 802d21e:	428b      	cmp	r3, r1
 802d220:	d014      	beq.n	802d24c <__ieee754_rem_pio2f+0x114>
 802d222:	6022      	str	r2, [r4, #0]
 802d224:	ed94 7a00 	vldr	s14, [r4]
 802d228:	ee30 0a47 	vsub.f32	s0, s0, s14
 802d22c:	2e00      	cmp	r6, #0
 802d22e:	ee30 0a67 	vsub.f32	s0, s0, s15
 802d232:	ed84 0a01 	vstr	s0, [r4, #4]
 802d236:	dab0      	bge.n	802d19a <__ieee754_rem_pio2f+0x62>
 802d238:	eeb1 7a47 	vneg.f32	s14, s14
 802d23c:	eeb1 0a40 	vneg.f32	s0, s0
 802d240:	ed84 7a00 	vstr	s14, [r4]
 802d244:	ed84 0a01 	vstr	s0, [r4, #4]
 802d248:	4240      	negs	r0, r0
 802d24a:	e7a6      	b.n	802d19a <__ieee754_rem_pio2f+0x62>
 802d24c:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 802d250:	ebc1 51d5 	rsb	r1, r1, r5, lsr #23
 802d254:	2908      	cmp	r1, #8
 802d256:	ea4f 53e5 	mov.w	r3, r5, asr #23
 802d25a:	dde2      	ble.n	802d222 <__ieee754_rem_pio2f+0xea>
 802d25c:	eddf 5a42 	vldr	s11, [pc, #264]	; 802d368 <__ieee754_rem_pio2f+0x230>
 802d260:	eef0 6a40 	vmov.f32	s13, s0
 802d264:	eee6 6a25 	vfma.f32	s13, s12, s11
 802d268:	ee70 7a66 	vsub.f32	s15, s0, s13
 802d26c:	eee6 7a25 	vfma.f32	s15, s12, s11
 802d270:	eddf 5a3f 	vldr	s11, [pc, #252]	; 802d370 <__ieee754_rem_pio2f+0x238>
 802d274:	eed7 7a25 	vfnms.f32	s15, s14, s11
 802d278:	ee76 5ae7 	vsub.f32	s11, s13, s15
 802d27c:	ee15 2a90 	vmov	r2, s11
 802d280:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 802d284:	1a5b      	subs	r3, r3, r1
 802d286:	2b19      	cmp	r3, #25
 802d288:	dc04      	bgt.n	802d294 <__ieee754_rem_pio2f+0x15c>
 802d28a:	edc4 5a00 	vstr	s11, [r4]
 802d28e:	eeb0 0a66 	vmov.f32	s0, s13
 802d292:	e7c7      	b.n	802d224 <__ieee754_rem_pio2f+0xec>
 802d294:	eddf 5a3a 	vldr	s11, [pc, #232]	; 802d380 <__ieee754_rem_pio2f+0x248>
 802d298:	eeb0 0a66 	vmov.f32	s0, s13
 802d29c:	eea6 0a25 	vfma.f32	s0, s12, s11
 802d2a0:	ee76 7ac0 	vsub.f32	s15, s13, s0
 802d2a4:	eddf 6a37 	vldr	s13, [pc, #220]	; 802d384 <__ieee754_rem_pio2f+0x24c>
 802d2a8:	eee6 7a25 	vfma.f32	s15, s12, s11
 802d2ac:	eed7 7a26 	vfnms.f32	s15, s14, s13
 802d2b0:	ee30 7a67 	vsub.f32	s14, s0, s15
 802d2b4:	ed84 7a00 	vstr	s14, [r4]
 802d2b8:	e7b4      	b.n	802d224 <__ieee754_rem_pio2f+0xec>
 802d2ba:	f1b5 4fff 	cmp.w	r5, #2139095040	; 0x7f800000
 802d2be:	db06      	blt.n	802d2ce <__ieee754_rem_pio2f+0x196>
 802d2c0:	ee70 7a40 	vsub.f32	s15, s0, s0
 802d2c4:	edc0 7a01 	vstr	s15, [r0, #4]
 802d2c8:	edc0 7a00 	vstr	s15, [r0]
 802d2cc:	e742      	b.n	802d154 <__ieee754_rem_pio2f+0x1c>
 802d2ce:	15ea      	asrs	r2, r5, #23
 802d2d0:	3a86      	subs	r2, #134	; 0x86
 802d2d2:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 802d2d6:	ee07 3a90 	vmov	s15, r3
 802d2da:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 802d2de:	eddf 6a2a 	vldr	s13, [pc, #168]	; 802d388 <__ieee754_rem_pio2f+0x250>
 802d2e2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 802d2e6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802d2ea:	ed8d 7a03 	vstr	s14, [sp, #12]
 802d2ee:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802d2f2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 802d2f6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 802d2fa:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802d2fe:	ed8d 7a04 	vstr	s14, [sp, #16]
 802d302:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802d306:	eef5 7a40 	vcmp.f32	s15, #0.0
 802d30a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d30e:	edcd 7a05 	vstr	s15, [sp, #20]
 802d312:	d11e      	bne.n	802d352 <__ieee754_rem_pio2f+0x21a>
 802d314:	eeb5 7a40 	vcmp.f32	s14, #0.0
 802d318:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d31c:	bf14      	ite	ne
 802d31e:	2302      	movne	r3, #2
 802d320:	2301      	moveq	r3, #1
 802d322:	491a      	ldr	r1, [pc, #104]	; (802d38c <__ieee754_rem_pio2f+0x254>)
 802d324:	9101      	str	r1, [sp, #4]
 802d326:	2102      	movs	r1, #2
 802d328:	9100      	str	r1, [sp, #0]
 802d32a:	a803      	add	r0, sp, #12
 802d32c:	4621      	mov	r1, r4
 802d32e:	f000 f895 	bl	802d45c <__kernel_rem_pio2f>
 802d332:	2e00      	cmp	r6, #0
 802d334:	f6bf af31 	bge.w	802d19a <__ieee754_rem_pio2f+0x62>
 802d338:	edd4 7a00 	vldr	s15, [r4]
 802d33c:	eef1 7a67 	vneg.f32	s15, s15
 802d340:	edc4 7a00 	vstr	s15, [r4]
 802d344:	edd4 7a01 	vldr	s15, [r4, #4]
 802d348:	eef1 7a67 	vneg.f32	s15, s15
 802d34c:	edc4 7a01 	vstr	s15, [r4, #4]
 802d350:	e77a      	b.n	802d248 <__ieee754_rem_pio2f+0x110>
 802d352:	2303      	movs	r3, #3
 802d354:	e7e5      	b.n	802d322 <__ieee754_rem_pio2f+0x1ea>
 802d356:	bf00      	nop
 802d358:	3f490fd8 	.word	0x3f490fd8
 802d35c:	4016cbe3 	.word	0x4016cbe3
 802d360:	3fc90f80 	.word	0x3fc90f80
 802d364:	3fc90fd0 	.word	0x3fc90fd0
 802d368:	37354400 	.word	0x37354400
 802d36c:	37354443 	.word	0x37354443
 802d370:	2e85a308 	.word	0x2e85a308
 802d374:	43490f80 	.word	0x43490f80
 802d378:	3f22f984 	.word	0x3f22f984
 802d37c:	0804580c 	.word	0x0804580c
 802d380:	2e85a300 	.word	0x2e85a300
 802d384:	248d3132 	.word	0x248d3132
 802d388:	43800000 	.word	0x43800000
 802d38c:	0804588c 	.word	0x0804588c

0802d390 <scalbnf>:
 802d390:	ee10 3a10 	vmov	r3, s0
 802d394:	f033 4200 	bics.w	r2, r3, #2147483648	; 0x80000000
 802d398:	d02b      	beq.n	802d3f2 <scalbnf+0x62>
 802d39a:	f1b2 4fff 	cmp.w	r2, #2139095040	; 0x7f800000
 802d39e:	d302      	bcc.n	802d3a6 <scalbnf+0x16>
 802d3a0:	ee30 0a00 	vadd.f32	s0, s0, s0
 802d3a4:	4770      	bx	lr
 802d3a6:	f013 4fff 	tst.w	r3, #2139095040	; 0x7f800000
 802d3aa:	d123      	bne.n	802d3f4 <scalbnf+0x64>
 802d3ac:	4b24      	ldr	r3, [pc, #144]	; (802d440 <scalbnf+0xb0>)
 802d3ae:	eddf 7a25 	vldr	s15, [pc, #148]	; 802d444 <scalbnf+0xb4>
 802d3b2:	4298      	cmp	r0, r3
 802d3b4:	ee20 0a27 	vmul.f32	s0, s0, s15
 802d3b8:	db17      	blt.n	802d3ea <scalbnf+0x5a>
 802d3ba:	ee10 3a10 	vmov	r3, s0
 802d3be:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802d3c2:	3a19      	subs	r2, #25
 802d3c4:	f24c 3150 	movw	r1, #50000	; 0xc350
 802d3c8:	4288      	cmp	r0, r1
 802d3ca:	dd15      	ble.n	802d3f8 <scalbnf+0x68>
 802d3cc:	eddf 7a1e 	vldr	s15, [pc, #120]	; 802d448 <scalbnf+0xb8>
 802d3d0:	eddf 6a1e 	vldr	s13, [pc, #120]	; 802d44c <scalbnf+0xbc>
 802d3d4:	ee10 3a10 	vmov	r3, s0
 802d3d8:	eeb0 7a67 	vmov.f32	s14, s15
 802d3dc:	2b00      	cmp	r3, #0
 802d3de:	bfb8      	it	lt
 802d3e0:	eef0 7a66 	vmovlt.f32	s15, s13
 802d3e4:	ee27 0a87 	vmul.f32	s0, s15, s14
 802d3e8:	4770      	bx	lr
 802d3ea:	eddf 7a19 	vldr	s15, [pc, #100]	; 802d450 <scalbnf+0xc0>
 802d3ee:	ee27 0a80 	vmul.f32	s0, s15, s0
 802d3f2:	4770      	bx	lr
 802d3f4:	0dd2      	lsrs	r2, r2, #23
 802d3f6:	e7e5      	b.n	802d3c4 <scalbnf+0x34>
 802d3f8:	4410      	add	r0, r2
 802d3fa:	28fe      	cmp	r0, #254	; 0xfe
 802d3fc:	dce6      	bgt.n	802d3cc <scalbnf+0x3c>
 802d3fe:	2800      	cmp	r0, #0
 802d400:	dd06      	ble.n	802d410 <scalbnf+0x80>
 802d402:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 802d406:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 802d40a:	ee00 3a10 	vmov	s0, r3
 802d40e:	4770      	bx	lr
 802d410:	f110 0f16 	cmn.w	r0, #22
 802d414:	da09      	bge.n	802d42a <scalbnf+0x9a>
 802d416:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802d450 <scalbnf+0xc0>
 802d41a:	eddf 6a0e 	vldr	s13, [pc, #56]	; 802d454 <scalbnf+0xc4>
 802d41e:	ee10 3a10 	vmov	r3, s0
 802d422:	eeb0 7a67 	vmov.f32	s14, s15
 802d426:	2b00      	cmp	r3, #0
 802d428:	e7d9      	b.n	802d3de <scalbnf+0x4e>
 802d42a:	3019      	adds	r0, #25
 802d42c:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 802d430:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 802d434:	ed9f 0a08 	vldr	s0, [pc, #32]	; 802d458 <scalbnf+0xc8>
 802d438:	ee07 3a90 	vmov	s15, r3
 802d43c:	e7d7      	b.n	802d3ee <scalbnf+0x5e>
 802d43e:	bf00      	nop
 802d440:	ffff3cb0 	.word	0xffff3cb0
 802d444:	4c000000 	.word	0x4c000000
 802d448:	7149f2ca 	.word	0x7149f2ca
 802d44c:	f149f2ca 	.word	0xf149f2ca
 802d450:	0da24260 	.word	0x0da24260
 802d454:	8da24260 	.word	0x8da24260
 802d458:	33000000 	.word	0x33000000

0802d45c <__kernel_rem_pio2f>:
 802d45c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802d460:	ed2d 8b04 	vpush	{d8-d9}
 802d464:	b0d9      	sub	sp, #356	; 0x164
 802d466:	4688      	mov	r8, r1
 802d468:	9002      	str	r0, [sp, #8]
 802d46a:	49b8      	ldr	r1, [pc, #736]	; (802d74c <__kernel_rem_pio2f+0x2f0>)
 802d46c:	9866      	ldr	r0, [sp, #408]	; 0x198
 802d46e:	9301      	str	r3, [sp, #4]
 802d470:	f851 a020 	ldr.w	sl, [r1, r0, lsl #2]
 802d474:	9901      	ldr	r1, [sp, #4]
 802d476:	9b67      	ldr	r3, [sp, #412]	; 0x19c
 802d478:	f101 3bff 	add.w	fp, r1, #4294967295
 802d47c:	1d11      	adds	r1, r2, #4
 802d47e:	db25      	blt.n	802d4cc <__kernel_rem_pio2f+0x70>
 802d480:	1ed0      	subs	r0, r2, #3
 802d482:	bf48      	it	mi
 802d484:	1d10      	addmi	r0, r2, #4
 802d486:	10c0      	asrs	r0, r0, #3
 802d488:	1c45      	adds	r5, r0, #1
 802d48a:	00e9      	lsls	r1, r5, #3
 802d48c:	eba0 070b 	sub.w	r7, r0, fp
 802d490:	ed9f 7ab2 	vldr	s14, [pc, #712]	; 802d75c <__kernel_rem_pio2f+0x300>
 802d494:	9103      	str	r1, [sp, #12]
 802d496:	eba2 05c5 	sub.w	r5, r2, r5, lsl #3
 802d49a:	eb0a 0c0b 	add.w	ip, sl, fp
 802d49e:	ae1c      	add	r6, sp, #112	; 0x70
 802d4a0:	eb03 0e87 	add.w	lr, r3, r7, lsl #2
 802d4a4:	2400      	movs	r4, #0
 802d4a6:	4564      	cmp	r4, ip
 802d4a8:	dd12      	ble.n	802d4d0 <__kernel_rem_pio2f+0x74>
 802d4aa:	9901      	ldr	r1, [sp, #4]
 802d4ac:	ac1c      	add	r4, sp, #112	; 0x70
 802d4ae:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 802d4b2:	f50d 7988 	add.w	r9, sp, #272	; 0x110
 802d4b6:	f04f 0c00 	mov.w	ip, #0
 802d4ba:	45d4      	cmp	ip, sl
 802d4bc:	dc27      	bgt.n	802d50e <__kernel_rem_pio2f+0xb2>
 802d4be:	f8dd e008 	ldr.w	lr, [sp, #8]
 802d4c2:	eddf 7aa6 	vldr	s15, [pc, #664]	; 802d75c <__kernel_rem_pio2f+0x300>
 802d4c6:	4627      	mov	r7, r4
 802d4c8:	2600      	movs	r6, #0
 802d4ca:	e016      	b.n	802d4fa <__kernel_rem_pio2f+0x9e>
 802d4cc:	2000      	movs	r0, #0
 802d4ce:	e7db      	b.n	802d488 <__kernel_rem_pio2f+0x2c>
 802d4d0:	42e7      	cmn	r7, r4
 802d4d2:	bf5d      	ittte	pl
 802d4d4:	f85e 1024 	ldrpl.w	r1, [lr, r4, lsl #2]
 802d4d8:	ee07 1a90 	vmovpl	s15, r1
 802d4dc:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 802d4e0:	eef0 7a47 	vmovmi.f32	s15, s14
 802d4e4:	ece6 7a01 	vstmia	r6!, {s15}
 802d4e8:	3401      	adds	r4, #1
 802d4ea:	e7dc      	b.n	802d4a6 <__kernel_rem_pio2f+0x4a>
 802d4ec:	ecfe 6a01 	vldmia	lr!, {s13}
 802d4f0:	ed97 7a00 	vldr	s14, [r7]
 802d4f4:	eee6 7a87 	vfma.f32	s15, s13, s14
 802d4f8:	3601      	adds	r6, #1
 802d4fa:	455e      	cmp	r6, fp
 802d4fc:	f1a7 0704 	sub.w	r7, r7, #4
 802d500:	ddf4      	ble.n	802d4ec <__kernel_rem_pio2f+0x90>
 802d502:	ece9 7a01 	vstmia	r9!, {s15}
 802d506:	f10c 0c01 	add.w	ip, ip, #1
 802d50a:	3404      	adds	r4, #4
 802d50c:	e7d5      	b.n	802d4ba <__kernel_rem_pio2f+0x5e>
 802d50e:	a908      	add	r1, sp, #32
 802d510:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 802d514:	eb03 0380 	add.w	r3, r3, r0, lsl #2
 802d518:	eddf 8a8f 	vldr	s17, [pc, #572]	; 802d758 <__kernel_rem_pio2f+0x2fc>
 802d51c:	ed9f 9a8d 	vldr	s18, [pc, #564]	; 802d754 <__kernel_rem_pio2f+0x2f8>
 802d520:	9105      	str	r1, [sp, #20]
 802d522:	9304      	str	r3, [sp, #16]
 802d524:	4656      	mov	r6, sl
 802d526:	00b3      	lsls	r3, r6, #2
 802d528:	9306      	str	r3, [sp, #24]
 802d52a:	ab58      	add	r3, sp, #352	; 0x160
 802d52c:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 802d530:	ac08      	add	r4, sp, #32
 802d532:	ab44      	add	r3, sp, #272	; 0x110
 802d534:	ed10 0a14 	vldr	s0, [r0, #-80]	; 0xffffffb0
 802d538:	46a4      	mov	ip, r4
 802d53a:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 802d53e:	4637      	mov	r7, r6
 802d540:	2f00      	cmp	r7, #0
 802d542:	f1a0 0004 	sub.w	r0, r0, #4
 802d546:	dc4a      	bgt.n	802d5de <__kernel_rem_pio2f+0x182>
 802d548:	4628      	mov	r0, r5
 802d54a:	9207      	str	r2, [sp, #28]
 802d54c:	f7ff ff20 	bl	802d390 <scalbnf>
 802d550:	eeb0 8a40 	vmov.f32	s16, s0
 802d554:	eeb4 0a00 	vmov.f32	s0, #64	; 0x3e000000  0.125
 802d558:	ee28 0a00 	vmul.f32	s0, s16, s0
 802d55c:	f7ff fd04 	bl	802cf68 <floorf>
 802d560:	eef2 7a00 	vmov.f32	s15, #32	; 0x41000000  8.0
 802d564:	eea0 8a67 	vfms.f32	s16, s0, s15
 802d568:	2d00      	cmp	r5, #0
 802d56a:	9a07      	ldr	r2, [sp, #28]
 802d56c:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 802d570:	ee17 9a90 	vmov	r9, s15
 802d574:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802d578:	ee38 8a67 	vsub.f32	s16, s16, s15
 802d57c:	dd41      	ble.n	802d602 <__kernel_rem_pio2f+0x1a6>
 802d57e:	f106 3cff 	add.w	ip, r6, #4294967295
 802d582:	ab08      	add	r3, sp, #32
 802d584:	f1c5 0e08 	rsb	lr, r5, #8
 802d588:	f853 702c 	ldr.w	r7, [r3, ip, lsl #2]
 802d58c:	fa47 f00e 	asr.w	r0, r7, lr
 802d590:	4481      	add	r9, r0
 802d592:	fa00 f00e 	lsl.w	r0, r0, lr
 802d596:	1a3f      	subs	r7, r7, r0
 802d598:	f1c5 0007 	rsb	r0, r5, #7
 802d59c:	f843 702c 	str.w	r7, [r3, ip, lsl #2]
 802d5a0:	4107      	asrs	r7, r0
 802d5a2:	2f00      	cmp	r7, #0
 802d5a4:	dd3c      	ble.n	802d620 <__kernel_rem_pio2f+0x1c4>
 802d5a6:	f04f 0e00 	mov.w	lr, #0
 802d5aa:	f109 0901 	add.w	r9, r9, #1
 802d5ae:	4671      	mov	r1, lr
 802d5b0:	4576      	cmp	r6, lr
 802d5b2:	dc67      	bgt.n	802d684 <__kernel_rem_pio2f+0x228>
 802d5b4:	2d00      	cmp	r5, #0
 802d5b6:	dd03      	ble.n	802d5c0 <__kernel_rem_pio2f+0x164>
 802d5b8:	2d01      	cmp	r5, #1
 802d5ba:	d074      	beq.n	802d6a6 <__kernel_rem_pio2f+0x24a>
 802d5bc:	2d02      	cmp	r5, #2
 802d5be:	d07b      	beq.n	802d6b8 <__kernel_rem_pio2f+0x25c>
 802d5c0:	2f02      	cmp	r7, #2
 802d5c2:	d12d      	bne.n	802d620 <__kernel_rem_pio2f+0x1c4>
 802d5c4:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 802d5c8:	ee30 8a48 	vsub.f32	s16, s0, s16
 802d5cc:	b341      	cbz	r1, 802d620 <__kernel_rem_pio2f+0x1c4>
 802d5ce:	4628      	mov	r0, r5
 802d5d0:	9207      	str	r2, [sp, #28]
 802d5d2:	f7ff fedd 	bl	802d390 <scalbnf>
 802d5d6:	9a07      	ldr	r2, [sp, #28]
 802d5d8:	ee38 8a40 	vsub.f32	s16, s16, s0
 802d5dc:	e020      	b.n	802d620 <__kernel_rem_pio2f+0x1c4>
 802d5de:	ee60 7a28 	vmul.f32	s15, s0, s17
 802d5e2:	3f01      	subs	r7, #1
 802d5e4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802d5e8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802d5ec:	eea7 0ac9 	vfms.f32	s0, s15, s18
 802d5f0:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802d5f4:	ecac 0a01 	vstmia	ip!, {s0}
 802d5f8:	ed90 0a00 	vldr	s0, [r0]
 802d5fc:	ee37 0a80 	vadd.f32	s0, s15, s0
 802d600:	e79e      	b.n	802d540 <__kernel_rem_pio2f+0xe4>
 802d602:	d105      	bne.n	802d610 <__kernel_rem_pio2f+0x1b4>
 802d604:	1e70      	subs	r0, r6, #1
 802d606:	ab08      	add	r3, sp, #32
 802d608:	f853 7020 	ldr.w	r7, [r3, r0, lsl #2]
 802d60c:	11ff      	asrs	r7, r7, #7
 802d60e:	e7c8      	b.n	802d5a2 <__kernel_rem_pio2f+0x146>
 802d610:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802d614:	eeb4 8ae7 	vcmpe.f32	s16, s15
 802d618:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d61c:	da30      	bge.n	802d680 <__kernel_rem_pio2f+0x224>
 802d61e:	2700      	movs	r7, #0
 802d620:	eeb5 8a40 	vcmp.f32	s16, #0.0
 802d624:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d628:	f040 809a 	bne.w	802d760 <__kernel_rem_pio2f+0x304>
 802d62c:	1e74      	subs	r4, r6, #1
 802d62e:	46a4      	mov	ip, r4
 802d630:	2100      	movs	r1, #0
 802d632:	45d4      	cmp	ip, sl
 802d634:	da47      	bge.n	802d6c6 <__kernel_rem_pio2f+0x26a>
 802d636:	2900      	cmp	r1, #0
 802d638:	d063      	beq.n	802d702 <__kernel_rem_pio2f+0x2a6>
 802d63a:	ab08      	add	r3, sp, #32
 802d63c:	3d08      	subs	r5, #8
 802d63e:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 802d642:	2b00      	cmp	r3, #0
 802d644:	d07f      	beq.n	802d746 <__kernel_rem_pio2f+0x2ea>
 802d646:	4628      	mov	r0, r5
 802d648:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 802d64c:	f7ff fea0 	bl	802d390 <scalbnf>
 802d650:	1c63      	adds	r3, r4, #1
 802d652:	aa44      	add	r2, sp, #272	; 0x110
 802d654:	ed9f 7a40 	vldr	s14, [pc, #256]	; 802d758 <__kernel_rem_pio2f+0x2fc>
 802d658:	0099      	lsls	r1, r3, #2
 802d65a:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 802d65e:	4623      	mov	r3, r4
 802d660:	2b00      	cmp	r3, #0
 802d662:	f280 80ad 	bge.w	802d7c0 <__kernel_rem_pio2f+0x364>
 802d666:	4623      	mov	r3, r4
 802d668:	2b00      	cmp	r3, #0
 802d66a:	f2c0 80cb 	blt.w	802d804 <__kernel_rem_pio2f+0x3a8>
 802d66e:	aa44      	add	r2, sp, #272	; 0x110
 802d670:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 802d674:	4e36      	ldr	r6, [pc, #216]	; (802d750 <__kernel_rem_pio2f+0x2f4>)
 802d676:	eddf 7a39 	vldr	s15, [pc, #228]	; 802d75c <__kernel_rem_pio2f+0x300>
 802d67a:	2000      	movs	r0, #0
 802d67c:	1ae2      	subs	r2, r4, r3
 802d67e:	e0b6      	b.n	802d7ee <__kernel_rem_pio2f+0x392>
 802d680:	2702      	movs	r7, #2
 802d682:	e790      	b.n	802d5a6 <__kernel_rem_pio2f+0x14a>
 802d684:	6820      	ldr	r0, [r4, #0]
 802d686:	b949      	cbnz	r1, 802d69c <__kernel_rem_pio2f+0x240>
 802d688:	b118      	cbz	r0, 802d692 <__kernel_rem_pio2f+0x236>
 802d68a:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 802d68e:	6020      	str	r0, [r4, #0]
 802d690:	2001      	movs	r0, #1
 802d692:	f10e 0e01 	add.w	lr, lr, #1
 802d696:	3404      	adds	r4, #4
 802d698:	4601      	mov	r1, r0
 802d69a:	e789      	b.n	802d5b0 <__kernel_rem_pio2f+0x154>
 802d69c:	f1c0 00ff 	rsb	r0, r0, #255	; 0xff
 802d6a0:	6020      	str	r0, [r4, #0]
 802d6a2:	4608      	mov	r0, r1
 802d6a4:	e7f5      	b.n	802d692 <__kernel_rem_pio2f+0x236>
 802d6a6:	1e74      	subs	r4, r6, #1
 802d6a8:	ab08      	add	r3, sp, #32
 802d6aa:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 802d6ae:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 802d6b2:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 802d6b6:	e783      	b.n	802d5c0 <__kernel_rem_pio2f+0x164>
 802d6b8:	1e74      	subs	r4, r6, #1
 802d6ba:	ab08      	add	r3, sp, #32
 802d6bc:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 802d6c0:	f000 003f 	and.w	r0, r0, #63	; 0x3f
 802d6c4:	e7f5      	b.n	802d6b2 <__kernel_rem_pio2f+0x256>
 802d6c6:	ab08      	add	r3, sp, #32
 802d6c8:	f853 002c 	ldr.w	r0, [r3, ip, lsl #2]
 802d6cc:	f10c 3cff 	add.w	ip, ip, #4294967295
 802d6d0:	4301      	orrs	r1, r0
 802d6d2:	e7ae      	b.n	802d632 <__kernel_rem_pio2f+0x1d6>
 802d6d4:	3001      	adds	r0, #1
 802d6d6:	f854 7d04 	ldr.w	r7, [r4, #-4]!
 802d6da:	2f00      	cmp	r7, #0
 802d6dc:	d0fa      	beq.n	802d6d4 <__kernel_rem_pio2f+0x278>
 802d6de:	9b06      	ldr	r3, [sp, #24]
 802d6e0:	f503 73b0 	add.w	r3, r3, #352	; 0x160
 802d6e4:	eb0d 0403 	add.w	r4, sp, r3
 802d6e8:	9b01      	ldr	r3, [sp, #4]
 802d6ea:	18f7      	adds	r7, r6, r3
 802d6ec:	ab1c      	add	r3, sp, #112	; 0x70
 802d6ee:	f106 0c01 	add.w	ip, r6, #1
 802d6f2:	3c4c      	subs	r4, #76	; 0x4c
 802d6f4:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 802d6f8:	4430      	add	r0, r6
 802d6fa:	4560      	cmp	r0, ip
 802d6fc:	da04      	bge.n	802d708 <__kernel_rem_pio2f+0x2ac>
 802d6fe:	4606      	mov	r6, r0
 802d700:	e711      	b.n	802d526 <__kernel_rem_pio2f+0xca>
 802d702:	9c05      	ldr	r4, [sp, #20]
 802d704:	2001      	movs	r0, #1
 802d706:	e7e6      	b.n	802d6d6 <__kernel_rem_pio2f+0x27a>
 802d708:	9b04      	ldr	r3, [sp, #16]
 802d70a:	f8dd e008 	ldr.w	lr, [sp, #8]
 802d70e:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 802d712:	9306      	str	r3, [sp, #24]
 802d714:	ee07 3a90 	vmov	s15, r3
 802d718:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802d71c:	2600      	movs	r6, #0
 802d71e:	ece7 7a01 	vstmia	r7!, {s15}
 802d722:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802d75c <__kernel_rem_pio2f+0x300>
 802d726:	46b9      	mov	r9, r7
 802d728:	455e      	cmp	r6, fp
 802d72a:	dd04      	ble.n	802d736 <__kernel_rem_pio2f+0x2da>
 802d72c:	ece4 7a01 	vstmia	r4!, {s15}
 802d730:	f10c 0c01 	add.w	ip, ip, #1
 802d734:	e7e1      	b.n	802d6fa <__kernel_rem_pio2f+0x29e>
 802d736:	ecfe 6a01 	vldmia	lr!, {s13}
 802d73a:	ed39 7a01 	vldmdb	r9!, {s14}
 802d73e:	3601      	adds	r6, #1
 802d740:	eee6 7a87 	vfma.f32	s15, s13, s14
 802d744:	e7f0      	b.n	802d728 <__kernel_rem_pio2f+0x2cc>
 802d746:	3c01      	subs	r4, #1
 802d748:	e777      	b.n	802d63a <__kernel_rem_pio2f+0x1de>
 802d74a:	bf00      	nop
 802d74c:	08045bd0 	.word	0x08045bd0
 802d750:	08045ba4 	.word	0x08045ba4
 802d754:	43800000 	.word	0x43800000
 802d758:	3b800000 	.word	0x3b800000
 802d75c:	00000000 	.word	0x00000000
 802d760:	9b03      	ldr	r3, [sp, #12]
 802d762:	eeb0 0a48 	vmov.f32	s0, s16
 802d766:	1a98      	subs	r0, r3, r2
 802d768:	f7ff fe12 	bl	802d390 <scalbnf>
 802d76c:	ed1f 7a07 	vldr	s14, [pc, #-28]	; 802d754 <__kernel_rem_pio2f+0x2f8>
 802d770:	eeb4 0ac7 	vcmpe.f32	s0, s14
 802d774:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d778:	db19      	blt.n	802d7ae <__kernel_rem_pio2f+0x352>
 802d77a:	ed5f 7a09 	vldr	s15, [pc, #-36]	; 802d758 <__kernel_rem_pio2f+0x2fc>
 802d77e:	ee60 7a27 	vmul.f32	s15, s0, s15
 802d782:	aa08      	add	r2, sp, #32
 802d784:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802d788:	1c74      	adds	r4, r6, #1
 802d78a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802d78e:	3508      	adds	r5, #8
 802d790:	eea7 0ac7 	vfms.f32	s0, s15, s14
 802d794:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802d798:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802d79c:	ee10 3a10 	vmov	r3, s0
 802d7a0:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 802d7a4:	ee17 3a90 	vmov	r3, s15
 802d7a8:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 802d7ac:	e74b      	b.n	802d646 <__kernel_rem_pio2f+0x1ea>
 802d7ae:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802d7b2:	aa08      	add	r2, sp, #32
 802d7b4:	ee10 3a10 	vmov	r3, s0
 802d7b8:	4634      	mov	r4, r6
 802d7ba:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 802d7be:	e742      	b.n	802d646 <__kernel_rem_pio2f+0x1ea>
 802d7c0:	a808      	add	r0, sp, #32
 802d7c2:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 802d7c6:	9001      	str	r0, [sp, #4]
 802d7c8:	ee07 0a90 	vmov	s15, r0
 802d7cc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802d7d0:	3b01      	subs	r3, #1
 802d7d2:	ee67 7a80 	vmul.f32	s15, s15, s0
 802d7d6:	ee20 0a07 	vmul.f32	s0, s0, s14
 802d7da:	ed62 7a01 	vstmdb	r2!, {s15}
 802d7de:	e73f      	b.n	802d660 <__kernel_rem_pio2f+0x204>
 802d7e0:	ecf6 6a01 	vldmia	r6!, {s13}
 802d7e4:	ecb5 7a01 	vldmia	r5!, {s14}
 802d7e8:	eee6 7a87 	vfma.f32	s15, s13, s14
 802d7ec:	3001      	adds	r0, #1
 802d7ee:	4550      	cmp	r0, sl
 802d7f0:	dc01      	bgt.n	802d7f6 <__kernel_rem_pio2f+0x39a>
 802d7f2:	4290      	cmp	r0, r2
 802d7f4:	ddf4      	ble.n	802d7e0 <__kernel_rem_pio2f+0x384>
 802d7f6:	a858      	add	r0, sp, #352	; 0x160
 802d7f8:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 802d7fc:	ed42 7a28 	vstr	s15, [r2, #-160]	; 0xffffff60
 802d800:	3b01      	subs	r3, #1
 802d802:	e731      	b.n	802d668 <__kernel_rem_pio2f+0x20c>
 802d804:	9b66      	ldr	r3, [sp, #408]	; 0x198
 802d806:	2b02      	cmp	r3, #2
 802d808:	dc09      	bgt.n	802d81e <__kernel_rem_pio2f+0x3c2>
 802d80a:	2b00      	cmp	r3, #0
 802d80c:	dc2b      	bgt.n	802d866 <__kernel_rem_pio2f+0x40a>
 802d80e:	d044      	beq.n	802d89a <__kernel_rem_pio2f+0x43e>
 802d810:	f009 0007 	and.w	r0, r9, #7
 802d814:	b059      	add	sp, #356	; 0x164
 802d816:	ecbd 8b04 	vpop	{d8-d9}
 802d81a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802d81e:	9b66      	ldr	r3, [sp, #408]	; 0x198
 802d820:	2b03      	cmp	r3, #3
 802d822:	d1f5      	bne.n	802d810 <__kernel_rem_pio2f+0x3b4>
 802d824:	aa30      	add	r2, sp, #192	; 0xc0
 802d826:	1f0b      	subs	r3, r1, #4
 802d828:	4413      	add	r3, r2
 802d82a:	461a      	mov	r2, r3
 802d82c:	4620      	mov	r0, r4
 802d82e:	2800      	cmp	r0, #0
 802d830:	f1a2 0204 	sub.w	r2, r2, #4
 802d834:	dc52      	bgt.n	802d8dc <__kernel_rem_pio2f+0x480>
 802d836:	4622      	mov	r2, r4
 802d838:	2a01      	cmp	r2, #1
 802d83a:	f1a3 0304 	sub.w	r3, r3, #4
 802d83e:	dc5d      	bgt.n	802d8fc <__kernel_rem_pio2f+0x4a0>
 802d840:	ab30      	add	r3, sp, #192	; 0xc0
 802d842:	ed5f 7a3a 	vldr	s15, [pc, #-232]	; 802d75c <__kernel_rem_pio2f+0x300>
 802d846:	440b      	add	r3, r1
 802d848:	2c01      	cmp	r4, #1
 802d84a:	dc67      	bgt.n	802d91c <__kernel_rem_pio2f+0x4c0>
 802d84c:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 802d850:	ed9d 7a31 	vldr	s14, [sp, #196]	; 0xc4
 802d854:	2f00      	cmp	r7, #0
 802d856:	d167      	bne.n	802d928 <__kernel_rem_pio2f+0x4cc>
 802d858:	edc8 6a00 	vstr	s13, [r8]
 802d85c:	ed88 7a01 	vstr	s14, [r8, #4]
 802d860:	edc8 7a02 	vstr	s15, [r8, #8]
 802d864:	e7d4      	b.n	802d810 <__kernel_rem_pio2f+0x3b4>
 802d866:	ab30      	add	r3, sp, #192	; 0xc0
 802d868:	ed1f 7a44 	vldr	s14, [pc, #-272]	; 802d75c <__kernel_rem_pio2f+0x300>
 802d86c:	440b      	add	r3, r1
 802d86e:	4622      	mov	r2, r4
 802d870:	2a00      	cmp	r2, #0
 802d872:	da24      	bge.n	802d8be <__kernel_rem_pio2f+0x462>
 802d874:	b34f      	cbz	r7, 802d8ca <__kernel_rem_pio2f+0x46e>
 802d876:	eef1 7a47 	vneg.f32	s15, s14
 802d87a:	edc8 7a00 	vstr	s15, [r8]
 802d87e:	eddd 7a30 	vldr	s15, [sp, #192]	; 0xc0
 802d882:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802d886:	aa31      	add	r2, sp, #196	; 0xc4
 802d888:	2301      	movs	r3, #1
 802d88a:	429c      	cmp	r4, r3
 802d88c:	da20      	bge.n	802d8d0 <__kernel_rem_pio2f+0x474>
 802d88e:	b10f      	cbz	r7, 802d894 <__kernel_rem_pio2f+0x438>
 802d890:	eef1 7a67 	vneg.f32	s15, s15
 802d894:	edc8 7a01 	vstr	s15, [r8, #4]
 802d898:	e7ba      	b.n	802d810 <__kernel_rem_pio2f+0x3b4>
 802d89a:	ab30      	add	r3, sp, #192	; 0xc0
 802d89c:	ed5f 7a51 	vldr	s15, [pc, #-324]	; 802d75c <__kernel_rem_pio2f+0x300>
 802d8a0:	440b      	add	r3, r1
 802d8a2:	2c00      	cmp	r4, #0
 802d8a4:	da05      	bge.n	802d8b2 <__kernel_rem_pio2f+0x456>
 802d8a6:	b10f      	cbz	r7, 802d8ac <__kernel_rem_pio2f+0x450>
 802d8a8:	eef1 7a67 	vneg.f32	s15, s15
 802d8ac:	edc8 7a00 	vstr	s15, [r8]
 802d8b0:	e7ae      	b.n	802d810 <__kernel_rem_pio2f+0x3b4>
 802d8b2:	ed33 7a01 	vldmdb	r3!, {s14}
 802d8b6:	3c01      	subs	r4, #1
 802d8b8:	ee77 7a87 	vadd.f32	s15, s15, s14
 802d8bc:	e7f1      	b.n	802d8a2 <__kernel_rem_pio2f+0x446>
 802d8be:	ed73 7a01 	vldmdb	r3!, {s15}
 802d8c2:	3a01      	subs	r2, #1
 802d8c4:	ee37 7a27 	vadd.f32	s14, s14, s15
 802d8c8:	e7d2      	b.n	802d870 <__kernel_rem_pio2f+0x414>
 802d8ca:	eef0 7a47 	vmov.f32	s15, s14
 802d8ce:	e7d4      	b.n	802d87a <__kernel_rem_pio2f+0x41e>
 802d8d0:	ecb2 7a01 	vldmia	r2!, {s14}
 802d8d4:	3301      	adds	r3, #1
 802d8d6:	ee77 7a87 	vadd.f32	s15, s15, s14
 802d8da:	e7d6      	b.n	802d88a <__kernel_rem_pio2f+0x42e>
 802d8dc:	edd2 7a00 	vldr	s15, [r2]
 802d8e0:	edd2 6a01 	vldr	s13, [r2, #4]
 802d8e4:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802d8e8:	3801      	subs	r0, #1
 802d8ea:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802d8ee:	ed82 7a00 	vstr	s14, [r2]
 802d8f2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802d8f6:	edc2 7a01 	vstr	s15, [r2, #4]
 802d8fa:	e798      	b.n	802d82e <__kernel_rem_pio2f+0x3d2>
 802d8fc:	edd3 7a00 	vldr	s15, [r3]
 802d900:	edd3 6a01 	vldr	s13, [r3, #4]
 802d904:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802d908:	3a01      	subs	r2, #1
 802d90a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802d90e:	ed83 7a00 	vstr	s14, [r3]
 802d912:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802d916:	edc3 7a01 	vstr	s15, [r3, #4]
 802d91a:	e78d      	b.n	802d838 <__kernel_rem_pio2f+0x3dc>
 802d91c:	ed33 7a01 	vldmdb	r3!, {s14}
 802d920:	3c01      	subs	r4, #1
 802d922:	ee77 7a87 	vadd.f32	s15, s15, s14
 802d926:	e78f      	b.n	802d848 <__kernel_rem_pio2f+0x3ec>
 802d928:	eef1 6a66 	vneg.f32	s13, s13
 802d92c:	eeb1 7a47 	vneg.f32	s14, s14
 802d930:	edc8 6a00 	vstr	s13, [r8]
 802d934:	ed88 7a01 	vstr	s14, [r8, #4]
 802d938:	eef1 7a67 	vneg.f32	s15, s15
 802d93c:	e790      	b.n	802d860 <__kernel_rem_pio2f+0x404>
 802d93e:	bf00      	nop

0802d940 <abort>:
 802d940:	b508      	push	{r3, lr}
 802d942:	2006      	movs	r0, #6
 802d944:	f000 fa3a 	bl	802ddbc <raise>
 802d948:	2001      	movs	r0, #1
 802d94a:	f7d4 ffa9 	bl	80028a0 <_exit>
	...

0802d950 <__assert_func>:
 802d950:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 802d952:	4614      	mov	r4, r2
 802d954:	461a      	mov	r2, r3
 802d956:	4b09      	ldr	r3, [pc, #36]	; (802d97c <__assert_func+0x2c>)
 802d958:	681b      	ldr	r3, [r3, #0]
 802d95a:	4605      	mov	r5, r0
 802d95c:	68d8      	ldr	r0, [r3, #12]
 802d95e:	b14c      	cbz	r4, 802d974 <__assert_func+0x24>
 802d960:	4b07      	ldr	r3, [pc, #28]	; (802d980 <__assert_func+0x30>)
 802d962:	9100      	str	r1, [sp, #0]
 802d964:	e9cd 3401 	strd	r3, r4, [sp, #4]
 802d968:	4906      	ldr	r1, [pc, #24]	; (802d984 <__assert_func+0x34>)
 802d96a:	462b      	mov	r3, r5
 802d96c:	f000 f982 	bl	802dc74 <fiprintf>
 802d970:	f7ff ffe6 	bl	802d940 <abort>
 802d974:	4b04      	ldr	r3, [pc, #16]	; (802d988 <__assert_func+0x38>)
 802d976:	461c      	mov	r4, r3
 802d978:	e7f3      	b.n	802d962 <__assert_func+0x12>
 802d97a:	bf00      	nop
 802d97c:	20000164 	.word	0x20000164
 802d980:	08045bdc 	.word	0x08045bdc
 802d984:	08045be9 	.word	0x08045be9
 802d988:	08045c17 	.word	0x08045c17

0802d98c <atexit>:
 802d98c:	2300      	movs	r3, #0
 802d98e:	4601      	mov	r1, r0
 802d990:	461a      	mov	r2, r3
 802d992:	4618      	mov	r0, r3
 802d994:	f000 bb16 	b.w	802dfc4 <__register_exitproc>

0802d998 <malloc>:
 802d998:	4b02      	ldr	r3, [pc, #8]	; (802d9a4 <malloc+0xc>)
 802d99a:	4601      	mov	r1, r0
 802d99c:	6818      	ldr	r0, [r3, #0]
 802d99e:	f000 b82b 	b.w	802d9f8 <_malloc_r>
 802d9a2:	bf00      	nop
 802d9a4:	20000164 	.word	0x20000164

0802d9a8 <free>:
 802d9a8:	4b02      	ldr	r3, [pc, #8]	; (802d9b4 <free+0xc>)
 802d9aa:	4601      	mov	r1, r0
 802d9ac:	6818      	ldr	r0, [r3, #0]
 802d9ae:	f000 bb67 	b.w	802e080 <_free_r>
 802d9b2:	bf00      	nop
 802d9b4:	20000164 	.word	0x20000164

0802d9b8 <sbrk_aligned>:
 802d9b8:	b570      	push	{r4, r5, r6, lr}
 802d9ba:	4e0e      	ldr	r6, [pc, #56]	; (802d9f4 <sbrk_aligned+0x3c>)
 802d9bc:	460c      	mov	r4, r1
 802d9be:	6831      	ldr	r1, [r6, #0]
 802d9c0:	4605      	mov	r5, r0
 802d9c2:	b911      	cbnz	r1, 802d9ca <sbrk_aligned+0x12>
 802d9c4:	f000 faa0 	bl	802df08 <_sbrk_r>
 802d9c8:	6030      	str	r0, [r6, #0]
 802d9ca:	4621      	mov	r1, r4
 802d9cc:	4628      	mov	r0, r5
 802d9ce:	f000 fa9b 	bl	802df08 <_sbrk_r>
 802d9d2:	1c43      	adds	r3, r0, #1
 802d9d4:	d00a      	beq.n	802d9ec <sbrk_aligned+0x34>
 802d9d6:	1cc4      	adds	r4, r0, #3
 802d9d8:	f024 0403 	bic.w	r4, r4, #3
 802d9dc:	42a0      	cmp	r0, r4
 802d9de:	d007      	beq.n	802d9f0 <sbrk_aligned+0x38>
 802d9e0:	1a21      	subs	r1, r4, r0
 802d9e2:	4628      	mov	r0, r5
 802d9e4:	f000 fa90 	bl	802df08 <_sbrk_r>
 802d9e8:	3001      	adds	r0, #1
 802d9ea:	d101      	bne.n	802d9f0 <sbrk_aligned+0x38>
 802d9ec:	f04f 34ff 	mov.w	r4, #4294967295
 802d9f0:	4620      	mov	r0, r4
 802d9f2:	bd70      	pop	{r4, r5, r6, pc}
 802d9f4:	20014194 	.word	0x20014194

0802d9f8 <_malloc_r>:
 802d9f8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802d9fc:	1ccd      	adds	r5, r1, #3
 802d9fe:	f025 0503 	bic.w	r5, r5, #3
 802da02:	3508      	adds	r5, #8
 802da04:	2d0c      	cmp	r5, #12
 802da06:	bf38      	it	cc
 802da08:	250c      	movcc	r5, #12
 802da0a:	2d00      	cmp	r5, #0
 802da0c:	4607      	mov	r7, r0
 802da0e:	db01      	blt.n	802da14 <_malloc_r+0x1c>
 802da10:	42a9      	cmp	r1, r5
 802da12:	d905      	bls.n	802da20 <_malloc_r+0x28>
 802da14:	230c      	movs	r3, #12
 802da16:	603b      	str	r3, [r7, #0]
 802da18:	2600      	movs	r6, #0
 802da1a:	4630      	mov	r0, r6
 802da1c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802da20:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 802daf4 <_malloc_r+0xfc>
 802da24:	f000 f868 	bl	802daf8 <__malloc_lock>
 802da28:	f8d8 3000 	ldr.w	r3, [r8]
 802da2c:	461c      	mov	r4, r3
 802da2e:	bb5c      	cbnz	r4, 802da88 <_malloc_r+0x90>
 802da30:	4629      	mov	r1, r5
 802da32:	4638      	mov	r0, r7
 802da34:	f7ff ffc0 	bl	802d9b8 <sbrk_aligned>
 802da38:	1c43      	adds	r3, r0, #1
 802da3a:	4604      	mov	r4, r0
 802da3c:	d155      	bne.n	802daea <_malloc_r+0xf2>
 802da3e:	f8d8 4000 	ldr.w	r4, [r8]
 802da42:	4626      	mov	r6, r4
 802da44:	2e00      	cmp	r6, #0
 802da46:	d145      	bne.n	802dad4 <_malloc_r+0xdc>
 802da48:	2c00      	cmp	r4, #0
 802da4a:	d048      	beq.n	802dade <_malloc_r+0xe6>
 802da4c:	6823      	ldr	r3, [r4, #0]
 802da4e:	4631      	mov	r1, r6
 802da50:	4638      	mov	r0, r7
 802da52:	eb04 0903 	add.w	r9, r4, r3
 802da56:	f000 fa57 	bl	802df08 <_sbrk_r>
 802da5a:	4581      	cmp	r9, r0
 802da5c:	d13f      	bne.n	802dade <_malloc_r+0xe6>
 802da5e:	6821      	ldr	r1, [r4, #0]
 802da60:	1a6d      	subs	r5, r5, r1
 802da62:	4629      	mov	r1, r5
 802da64:	4638      	mov	r0, r7
 802da66:	f7ff ffa7 	bl	802d9b8 <sbrk_aligned>
 802da6a:	3001      	adds	r0, #1
 802da6c:	d037      	beq.n	802dade <_malloc_r+0xe6>
 802da6e:	6823      	ldr	r3, [r4, #0]
 802da70:	442b      	add	r3, r5
 802da72:	6023      	str	r3, [r4, #0]
 802da74:	f8d8 3000 	ldr.w	r3, [r8]
 802da78:	2b00      	cmp	r3, #0
 802da7a:	d038      	beq.n	802daee <_malloc_r+0xf6>
 802da7c:	685a      	ldr	r2, [r3, #4]
 802da7e:	42a2      	cmp	r2, r4
 802da80:	d12b      	bne.n	802dada <_malloc_r+0xe2>
 802da82:	2200      	movs	r2, #0
 802da84:	605a      	str	r2, [r3, #4]
 802da86:	e00f      	b.n	802daa8 <_malloc_r+0xb0>
 802da88:	6822      	ldr	r2, [r4, #0]
 802da8a:	1b52      	subs	r2, r2, r5
 802da8c:	d41f      	bmi.n	802dace <_malloc_r+0xd6>
 802da8e:	2a0b      	cmp	r2, #11
 802da90:	d917      	bls.n	802dac2 <_malloc_r+0xca>
 802da92:	1961      	adds	r1, r4, r5
 802da94:	42a3      	cmp	r3, r4
 802da96:	6025      	str	r5, [r4, #0]
 802da98:	bf18      	it	ne
 802da9a:	6059      	strne	r1, [r3, #4]
 802da9c:	6863      	ldr	r3, [r4, #4]
 802da9e:	bf08      	it	eq
 802daa0:	f8c8 1000 	streq.w	r1, [r8]
 802daa4:	5162      	str	r2, [r4, r5]
 802daa6:	604b      	str	r3, [r1, #4]
 802daa8:	4638      	mov	r0, r7
 802daaa:	f104 060b 	add.w	r6, r4, #11
 802daae:	f000 f829 	bl	802db04 <__malloc_unlock>
 802dab2:	f026 0607 	bic.w	r6, r6, #7
 802dab6:	1d23      	adds	r3, r4, #4
 802dab8:	1af2      	subs	r2, r6, r3
 802daba:	d0ae      	beq.n	802da1a <_malloc_r+0x22>
 802dabc:	1b9b      	subs	r3, r3, r6
 802dabe:	50a3      	str	r3, [r4, r2]
 802dac0:	e7ab      	b.n	802da1a <_malloc_r+0x22>
 802dac2:	42a3      	cmp	r3, r4
 802dac4:	6862      	ldr	r2, [r4, #4]
 802dac6:	d1dd      	bne.n	802da84 <_malloc_r+0x8c>
 802dac8:	f8c8 2000 	str.w	r2, [r8]
 802dacc:	e7ec      	b.n	802daa8 <_malloc_r+0xb0>
 802dace:	4623      	mov	r3, r4
 802dad0:	6864      	ldr	r4, [r4, #4]
 802dad2:	e7ac      	b.n	802da2e <_malloc_r+0x36>
 802dad4:	4634      	mov	r4, r6
 802dad6:	6876      	ldr	r6, [r6, #4]
 802dad8:	e7b4      	b.n	802da44 <_malloc_r+0x4c>
 802dada:	4613      	mov	r3, r2
 802dadc:	e7cc      	b.n	802da78 <_malloc_r+0x80>
 802dade:	230c      	movs	r3, #12
 802dae0:	603b      	str	r3, [r7, #0]
 802dae2:	4638      	mov	r0, r7
 802dae4:	f000 f80e 	bl	802db04 <__malloc_unlock>
 802dae8:	e797      	b.n	802da1a <_malloc_r+0x22>
 802daea:	6025      	str	r5, [r4, #0]
 802daec:	e7dc      	b.n	802daa8 <_malloc_r+0xb0>
 802daee:	605b      	str	r3, [r3, #4]
 802daf0:	deff      	udf	#255	; 0xff
 802daf2:	bf00      	nop
 802daf4:	20014190 	.word	0x20014190

0802daf8 <__malloc_lock>:
 802daf8:	4801      	ldr	r0, [pc, #4]	; (802db00 <__malloc_lock+0x8>)
 802dafa:	f000 ba52 	b.w	802dfa2 <__retarget_lock_acquire_recursive>
 802dafe:	bf00      	nop
 802db00:	200142d9 	.word	0x200142d9

0802db04 <__malloc_unlock>:
 802db04:	4801      	ldr	r0, [pc, #4]	; (802db0c <__malloc_unlock+0x8>)
 802db06:	f000 ba4d 	b.w	802dfa4 <__retarget_lock_release_recursive>
 802db0a:	bf00      	nop
 802db0c:	200142d9 	.word	0x200142d9

0802db10 <__cxa_atexit>:
 802db10:	b510      	push	{r4, lr}
 802db12:	4c05      	ldr	r4, [pc, #20]	; (802db28 <__cxa_atexit+0x18>)
 802db14:	4613      	mov	r3, r2
 802db16:	b12c      	cbz	r4, 802db24 <__cxa_atexit+0x14>
 802db18:	460a      	mov	r2, r1
 802db1a:	4601      	mov	r1, r0
 802db1c:	2002      	movs	r0, #2
 802db1e:	f000 fa51 	bl	802dfc4 <__register_exitproc>
 802db22:	bd10      	pop	{r4, pc}
 802db24:	4620      	mov	r0, r4
 802db26:	e7fc      	b.n	802db22 <__cxa_atexit+0x12>
 802db28:	0802dfc5 	.word	0x0802dfc5

0802db2c <std>:
 802db2c:	2300      	movs	r3, #0
 802db2e:	b510      	push	{r4, lr}
 802db30:	4604      	mov	r4, r0
 802db32:	e9c0 3300 	strd	r3, r3, [r0]
 802db36:	e9c0 3304 	strd	r3, r3, [r0, #16]
 802db3a:	6083      	str	r3, [r0, #8]
 802db3c:	8181      	strh	r1, [r0, #12]
 802db3e:	6643      	str	r3, [r0, #100]	; 0x64
 802db40:	81c2      	strh	r2, [r0, #14]
 802db42:	6183      	str	r3, [r0, #24]
 802db44:	4619      	mov	r1, r3
 802db46:	2208      	movs	r2, #8
 802db48:	305c      	adds	r0, #92	; 0x5c
 802db4a:	f000 f906 	bl	802dd5a <memset>
 802db4e:	4b0d      	ldr	r3, [pc, #52]	; (802db84 <std+0x58>)
 802db50:	6263      	str	r3, [r4, #36]	; 0x24
 802db52:	4b0d      	ldr	r3, [pc, #52]	; (802db88 <std+0x5c>)
 802db54:	62a3      	str	r3, [r4, #40]	; 0x28
 802db56:	4b0d      	ldr	r3, [pc, #52]	; (802db8c <std+0x60>)
 802db58:	62e3      	str	r3, [r4, #44]	; 0x2c
 802db5a:	4b0d      	ldr	r3, [pc, #52]	; (802db90 <std+0x64>)
 802db5c:	6323      	str	r3, [r4, #48]	; 0x30
 802db5e:	4b0d      	ldr	r3, [pc, #52]	; (802db94 <std+0x68>)
 802db60:	6224      	str	r4, [r4, #32]
 802db62:	429c      	cmp	r4, r3
 802db64:	d006      	beq.n	802db74 <std+0x48>
 802db66:	f103 0268 	add.w	r2, r3, #104	; 0x68
 802db6a:	4294      	cmp	r4, r2
 802db6c:	d002      	beq.n	802db74 <std+0x48>
 802db6e:	33d0      	adds	r3, #208	; 0xd0
 802db70:	429c      	cmp	r4, r3
 802db72:	d105      	bne.n	802db80 <std+0x54>
 802db74:	f104 0058 	add.w	r0, r4, #88	; 0x58
 802db78:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802db7c:	f000 ba10 	b.w	802dfa0 <__retarget_lock_init_recursive>
 802db80:	bd10      	pop	{r4, pc}
 802db82:	bf00      	nop
 802db84:	0802dcd5 	.word	0x0802dcd5
 802db88:	0802dcf7 	.word	0x0802dcf7
 802db8c:	0802dd2f 	.word	0x0802dd2f
 802db90:	0802dd53 	.word	0x0802dd53
 802db94:	20014198 	.word	0x20014198

0802db98 <stdio_exit_handler>:
 802db98:	4a02      	ldr	r2, [pc, #8]	; (802dba4 <stdio_exit_handler+0xc>)
 802db9a:	4903      	ldr	r1, [pc, #12]	; (802dba8 <stdio_exit_handler+0x10>)
 802db9c:	4803      	ldr	r0, [pc, #12]	; (802dbac <stdio_exit_handler+0x14>)
 802db9e:	f000 b87b 	b.w	802dc98 <_fwalk_sglue>
 802dba2:	bf00      	nop
 802dba4:	2000010c 	.word	0x2000010c
 802dba8:	0802e7cd 	.word	0x0802e7cd
 802dbac:	20000118 	.word	0x20000118

0802dbb0 <cleanup_stdio>:
 802dbb0:	6841      	ldr	r1, [r0, #4]
 802dbb2:	4b0c      	ldr	r3, [pc, #48]	; (802dbe4 <cleanup_stdio+0x34>)
 802dbb4:	4299      	cmp	r1, r3
 802dbb6:	b510      	push	{r4, lr}
 802dbb8:	4604      	mov	r4, r0
 802dbba:	d001      	beq.n	802dbc0 <cleanup_stdio+0x10>
 802dbbc:	f000 fe06 	bl	802e7cc <_fflush_r>
 802dbc0:	68a1      	ldr	r1, [r4, #8]
 802dbc2:	4b09      	ldr	r3, [pc, #36]	; (802dbe8 <cleanup_stdio+0x38>)
 802dbc4:	4299      	cmp	r1, r3
 802dbc6:	d002      	beq.n	802dbce <cleanup_stdio+0x1e>
 802dbc8:	4620      	mov	r0, r4
 802dbca:	f000 fdff 	bl	802e7cc <_fflush_r>
 802dbce:	68e1      	ldr	r1, [r4, #12]
 802dbd0:	4b06      	ldr	r3, [pc, #24]	; (802dbec <cleanup_stdio+0x3c>)
 802dbd2:	4299      	cmp	r1, r3
 802dbd4:	d004      	beq.n	802dbe0 <cleanup_stdio+0x30>
 802dbd6:	4620      	mov	r0, r4
 802dbd8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802dbdc:	f000 bdf6 	b.w	802e7cc <_fflush_r>
 802dbe0:	bd10      	pop	{r4, pc}
 802dbe2:	bf00      	nop
 802dbe4:	20014198 	.word	0x20014198
 802dbe8:	20014200 	.word	0x20014200
 802dbec:	20014268 	.word	0x20014268

0802dbf0 <global_stdio_init.part.0>:
 802dbf0:	b510      	push	{r4, lr}
 802dbf2:	4b0b      	ldr	r3, [pc, #44]	; (802dc20 <global_stdio_init.part.0+0x30>)
 802dbf4:	4c0b      	ldr	r4, [pc, #44]	; (802dc24 <global_stdio_init.part.0+0x34>)
 802dbf6:	4a0c      	ldr	r2, [pc, #48]	; (802dc28 <global_stdio_init.part.0+0x38>)
 802dbf8:	601a      	str	r2, [r3, #0]
 802dbfa:	4620      	mov	r0, r4
 802dbfc:	2200      	movs	r2, #0
 802dbfe:	2104      	movs	r1, #4
 802dc00:	f7ff ff94 	bl	802db2c <std>
 802dc04:	f104 0068 	add.w	r0, r4, #104	; 0x68
 802dc08:	2201      	movs	r2, #1
 802dc0a:	2109      	movs	r1, #9
 802dc0c:	f7ff ff8e 	bl	802db2c <std>
 802dc10:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 802dc14:	2202      	movs	r2, #2
 802dc16:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802dc1a:	2112      	movs	r1, #18
 802dc1c:	f7ff bf86 	b.w	802db2c <std>
 802dc20:	200142d0 	.word	0x200142d0
 802dc24:	20014198 	.word	0x20014198
 802dc28:	0802db99 	.word	0x0802db99

0802dc2c <__sfp_lock_acquire>:
 802dc2c:	4801      	ldr	r0, [pc, #4]	; (802dc34 <__sfp_lock_acquire+0x8>)
 802dc2e:	f000 b9b8 	b.w	802dfa2 <__retarget_lock_acquire_recursive>
 802dc32:	bf00      	nop
 802dc34:	200142da 	.word	0x200142da

0802dc38 <__sfp_lock_release>:
 802dc38:	4801      	ldr	r0, [pc, #4]	; (802dc40 <__sfp_lock_release+0x8>)
 802dc3a:	f000 b9b3 	b.w	802dfa4 <__retarget_lock_release_recursive>
 802dc3e:	bf00      	nop
 802dc40:	200142da 	.word	0x200142da

0802dc44 <__sinit>:
 802dc44:	b510      	push	{r4, lr}
 802dc46:	4604      	mov	r4, r0
 802dc48:	f7ff fff0 	bl	802dc2c <__sfp_lock_acquire>
 802dc4c:	6a23      	ldr	r3, [r4, #32]
 802dc4e:	b11b      	cbz	r3, 802dc58 <__sinit+0x14>
 802dc50:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802dc54:	f7ff bff0 	b.w	802dc38 <__sfp_lock_release>
 802dc58:	4b04      	ldr	r3, [pc, #16]	; (802dc6c <__sinit+0x28>)
 802dc5a:	6223      	str	r3, [r4, #32]
 802dc5c:	4b04      	ldr	r3, [pc, #16]	; (802dc70 <__sinit+0x2c>)
 802dc5e:	681b      	ldr	r3, [r3, #0]
 802dc60:	2b00      	cmp	r3, #0
 802dc62:	d1f5      	bne.n	802dc50 <__sinit+0xc>
 802dc64:	f7ff ffc4 	bl	802dbf0 <global_stdio_init.part.0>
 802dc68:	e7f2      	b.n	802dc50 <__sinit+0xc>
 802dc6a:	bf00      	nop
 802dc6c:	0802dbb1 	.word	0x0802dbb1
 802dc70:	200142d0 	.word	0x200142d0

0802dc74 <fiprintf>:
 802dc74:	b40e      	push	{r1, r2, r3}
 802dc76:	b503      	push	{r0, r1, lr}
 802dc78:	4601      	mov	r1, r0
 802dc7a:	ab03      	add	r3, sp, #12
 802dc7c:	4805      	ldr	r0, [pc, #20]	; (802dc94 <fiprintf+0x20>)
 802dc7e:	f853 2b04 	ldr.w	r2, [r3], #4
 802dc82:	6800      	ldr	r0, [r0, #0]
 802dc84:	9301      	str	r3, [sp, #4]
 802dc86:	f000 fa71 	bl	802e16c <_vfiprintf_r>
 802dc8a:	b002      	add	sp, #8
 802dc8c:	f85d eb04 	ldr.w	lr, [sp], #4
 802dc90:	b003      	add	sp, #12
 802dc92:	4770      	bx	lr
 802dc94:	20000164 	.word	0x20000164

0802dc98 <_fwalk_sglue>:
 802dc98:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802dc9c:	4607      	mov	r7, r0
 802dc9e:	4688      	mov	r8, r1
 802dca0:	4614      	mov	r4, r2
 802dca2:	2600      	movs	r6, #0
 802dca4:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 802dca8:	f1b9 0901 	subs.w	r9, r9, #1
 802dcac:	d505      	bpl.n	802dcba <_fwalk_sglue+0x22>
 802dcae:	6824      	ldr	r4, [r4, #0]
 802dcb0:	2c00      	cmp	r4, #0
 802dcb2:	d1f7      	bne.n	802dca4 <_fwalk_sglue+0xc>
 802dcb4:	4630      	mov	r0, r6
 802dcb6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802dcba:	89ab      	ldrh	r3, [r5, #12]
 802dcbc:	2b01      	cmp	r3, #1
 802dcbe:	d907      	bls.n	802dcd0 <_fwalk_sglue+0x38>
 802dcc0:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 802dcc4:	3301      	adds	r3, #1
 802dcc6:	d003      	beq.n	802dcd0 <_fwalk_sglue+0x38>
 802dcc8:	4629      	mov	r1, r5
 802dcca:	4638      	mov	r0, r7
 802dccc:	47c0      	blx	r8
 802dcce:	4306      	orrs	r6, r0
 802dcd0:	3568      	adds	r5, #104	; 0x68
 802dcd2:	e7e9      	b.n	802dca8 <_fwalk_sglue+0x10>

0802dcd4 <__sread>:
 802dcd4:	b510      	push	{r4, lr}
 802dcd6:	460c      	mov	r4, r1
 802dcd8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802dcdc:	f000 f8ee 	bl	802debc <_read_r>
 802dce0:	2800      	cmp	r0, #0
 802dce2:	bfab      	itete	ge
 802dce4:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 802dce6:	89a3      	ldrhlt	r3, [r4, #12]
 802dce8:	181b      	addge	r3, r3, r0
 802dcea:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 802dcee:	bfac      	ite	ge
 802dcf0:	6563      	strge	r3, [r4, #84]	; 0x54
 802dcf2:	81a3      	strhlt	r3, [r4, #12]
 802dcf4:	bd10      	pop	{r4, pc}

0802dcf6 <__swrite>:
 802dcf6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802dcfa:	461f      	mov	r7, r3
 802dcfc:	898b      	ldrh	r3, [r1, #12]
 802dcfe:	05db      	lsls	r3, r3, #23
 802dd00:	4605      	mov	r5, r0
 802dd02:	460c      	mov	r4, r1
 802dd04:	4616      	mov	r6, r2
 802dd06:	d505      	bpl.n	802dd14 <__swrite+0x1e>
 802dd08:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802dd0c:	2302      	movs	r3, #2
 802dd0e:	2200      	movs	r2, #0
 802dd10:	f000 f8c2 	bl	802de98 <_lseek_r>
 802dd14:	89a3      	ldrh	r3, [r4, #12]
 802dd16:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802dd1a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 802dd1e:	81a3      	strh	r3, [r4, #12]
 802dd20:	4632      	mov	r2, r6
 802dd22:	463b      	mov	r3, r7
 802dd24:	4628      	mov	r0, r5
 802dd26:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802dd2a:	f000 b8fd 	b.w	802df28 <_write_r>

0802dd2e <__sseek>:
 802dd2e:	b510      	push	{r4, lr}
 802dd30:	460c      	mov	r4, r1
 802dd32:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802dd36:	f000 f8af 	bl	802de98 <_lseek_r>
 802dd3a:	1c43      	adds	r3, r0, #1
 802dd3c:	89a3      	ldrh	r3, [r4, #12]
 802dd3e:	bf15      	itete	ne
 802dd40:	6560      	strne	r0, [r4, #84]	; 0x54
 802dd42:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 802dd46:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 802dd4a:	81a3      	strheq	r3, [r4, #12]
 802dd4c:	bf18      	it	ne
 802dd4e:	81a3      	strhne	r3, [r4, #12]
 802dd50:	bd10      	pop	{r4, pc}

0802dd52 <__sclose>:
 802dd52:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802dd56:	f000 b839 	b.w	802ddcc <_close_r>

0802dd5a <memset>:
 802dd5a:	4402      	add	r2, r0
 802dd5c:	4603      	mov	r3, r0
 802dd5e:	4293      	cmp	r3, r2
 802dd60:	d100      	bne.n	802dd64 <memset+0xa>
 802dd62:	4770      	bx	lr
 802dd64:	f803 1b01 	strb.w	r1, [r3], #1
 802dd68:	e7f9      	b.n	802dd5e <memset+0x4>

0802dd6a <_raise_r>:
 802dd6a:	291f      	cmp	r1, #31
 802dd6c:	b538      	push	{r3, r4, r5, lr}
 802dd6e:	4604      	mov	r4, r0
 802dd70:	460d      	mov	r5, r1
 802dd72:	d904      	bls.n	802dd7e <_raise_r+0x14>
 802dd74:	2316      	movs	r3, #22
 802dd76:	6003      	str	r3, [r0, #0]
 802dd78:	f04f 30ff 	mov.w	r0, #4294967295
 802dd7c:	bd38      	pop	{r3, r4, r5, pc}
 802dd7e:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 802dd80:	b112      	cbz	r2, 802dd88 <_raise_r+0x1e>
 802dd82:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 802dd86:	b94b      	cbnz	r3, 802dd9c <_raise_r+0x32>
 802dd88:	4620      	mov	r0, r4
 802dd8a:	f000 f8bb 	bl	802df04 <_getpid_r>
 802dd8e:	462a      	mov	r2, r5
 802dd90:	4601      	mov	r1, r0
 802dd92:	4620      	mov	r0, r4
 802dd94:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802dd98:	f000 b8a2 	b.w	802dee0 <_kill_r>
 802dd9c:	2b01      	cmp	r3, #1
 802dd9e:	d00a      	beq.n	802ddb6 <_raise_r+0x4c>
 802dda0:	1c59      	adds	r1, r3, #1
 802dda2:	d103      	bne.n	802ddac <_raise_r+0x42>
 802dda4:	2316      	movs	r3, #22
 802dda6:	6003      	str	r3, [r0, #0]
 802dda8:	2001      	movs	r0, #1
 802ddaa:	e7e7      	b.n	802dd7c <_raise_r+0x12>
 802ddac:	2400      	movs	r4, #0
 802ddae:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 802ddb2:	4628      	mov	r0, r5
 802ddb4:	4798      	blx	r3
 802ddb6:	2000      	movs	r0, #0
 802ddb8:	e7e0      	b.n	802dd7c <_raise_r+0x12>
	...

0802ddbc <raise>:
 802ddbc:	4b02      	ldr	r3, [pc, #8]	; (802ddc8 <raise+0xc>)
 802ddbe:	4601      	mov	r1, r0
 802ddc0:	6818      	ldr	r0, [r3, #0]
 802ddc2:	f7ff bfd2 	b.w	802dd6a <_raise_r>
 802ddc6:	bf00      	nop
 802ddc8:	20000164 	.word	0x20000164

0802ddcc <_close_r>:
 802ddcc:	b538      	push	{r3, r4, r5, lr}
 802ddce:	4d06      	ldr	r5, [pc, #24]	; (802dde8 <_close_r+0x1c>)
 802ddd0:	2300      	movs	r3, #0
 802ddd2:	4604      	mov	r4, r0
 802ddd4:	4608      	mov	r0, r1
 802ddd6:	602b      	str	r3, [r5, #0]
 802ddd8:	f7d4 fd84 	bl	80028e4 <_close>
 802dddc:	1c43      	adds	r3, r0, #1
 802ddde:	d102      	bne.n	802dde6 <_close_r+0x1a>
 802dde0:	682b      	ldr	r3, [r5, #0]
 802dde2:	b103      	cbz	r3, 802dde6 <_close_r+0x1a>
 802dde4:	6023      	str	r3, [r4, #0]
 802dde6:	bd38      	pop	{r3, r4, r5, pc}
 802dde8:	200142d4 	.word	0x200142d4

0802ddec <_reclaim_reent>:
 802ddec:	4b29      	ldr	r3, [pc, #164]	; (802de94 <_reclaim_reent+0xa8>)
 802ddee:	681b      	ldr	r3, [r3, #0]
 802ddf0:	4283      	cmp	r3, r0
 802ddf2:	b570      	push	{r4, r5, r6, lr}
 802ddf4:	4604      	mov	r4, r0
 802ddf6:	d04b      	beq.n	802de90 <_reclaim_reent+0xa4>
 802ddf8:	69c3      	ldr	r3, [r0, #28]
 802ddfa:	b143      	cbz	r3, 802de0e <_reclaim_reent+0x22>
 802ddfc:	68db      	ldr	r3, [r3, #12]
 802ddfe:	2b00      	cmp	r3, #0
 802de00:	d144      	bne.n	802de8c <_reclaim_reent+0xa0>
 802de02:	69e3      	ldr	r3, [r4, #28]
 802de04:	6819      	ldr	r1, [r3, #0]
 802de06:	b111      	cbz	r1, 802de0e <_reclaim_reent+0x22>
 802de08:	4620      	mov	r0, r4
 802de0a:	f000 f939 	bl	802e080 <_free_r>
 802de0e:	6961      	ldr	r1, [r4, #20]
 802de10:	b111      	cbz	r1, 802de18 <_reclaim_reent+0x2c>
 802de12:	4620      	mov	r0, r4
 802de14:	f000 f934 	bl	802e080 <_free_r>
 802de18:	69e1      	ldr	r1, [r4, #28]
 802de1a:	b111      	cbz	r1, 802de22 <_reclaim_reent+0x36>
 802de1c:	4620      	mov	r0, r4
 802de1e:	f000 f92f 	bl	802e080 <_free_r>
 802de22:	6b21      	ldr	r1, [r4, #48]	; 0x30
 802de24:	b111      	cbz	r1, 802de2c <_reclaim_reent+0x40>
 802de26:	4620      	mov	r0, r4
 802de28:	f000 f92a 	bl	802e080 <_free_r>
 802de2c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802de2e:	b111      	cbz	r1, 802de36 <_reclaim_reent+0x4a>
 802de30:	4620      	mov	r0, r4
 802de32:	f000 f925 	bl	802e080 <_free_r>
 802de36:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 802de38:	b111      	cbz	r1, 802de40 <_reclaim_reent+0x54>
 802de3a:	4620      	mov	r0, r4
 802de3c:	f000 f920 	bl	802e080 <_free_r>
 802de40:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 802de42:	b111      	cbz	r1, 802de4a <_reclaim_reent+0x5e>
 802de44:	4620      	mov	r0, r4
 802de46:	f000 f91b 	bl	802e080 <_free_r>
 802de4a:	6c61      	ldr	r1, [r4, #68]	; 0x44
 802de4c:	b111      	cbz	r1, 802de54 <_reclaim_reent+0x68>
 802de4e:	4620      	mov	r0, r4
 802de50:	f000 f916 	bl	802e080 <_free_r>
 802de54:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 802de56:	b111      	cbz	r1, 802de5e <_reclaim_reent+0x72>
 802de58:	4620      	mov	r0, r4
 802de5a:	f000 f911 	bl	802e080 <_free_r>
 802de5e:	6a23      	ldr	r3, [r4, #32]
 802de60:	b1b3      	cbz	r3, 802de90 <_reclaim_reent+0xa4>
 802de62:	4620      	mov	r0, r4
 802de64:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 802de68:	4718      	bx	r3
 802de6a:	5949      	ldr	r1, [r1, r5]
 802de6c:	b941      	cbnz	r1, 802de80 <_reclaim_reent+0x94>
 802de6e:	3504      	adds	r5, #4
 802de70:	69e3      	ldr	r3, [r4, #28]
 802de72:	2d80      	cmp	r5, #128	; 0x80
 802de74:	68d9      	ldr	r1, [r3, #12]
 802de76:	d1f8      	bne.n	802de6a <_reclaim_reent+0x7e>
 802de78:	4620      	mov	r0, r4
 802de7a:	f000 f901 	bl	802e080 <_free_r>
 802de7e:	e7c0      	b.n	802de02 <_reclaim_reent+0x16>
 802de80:	680e      	ldr	r6, [r1, #0]
 802de82:	4620      	mov	r0, r4
 802de84:	f000 f8fc 	bl	802e080 <_free_r>
 802de88:	4631      	mov	r1, r6
 802de8a:	e7ef      	b.n	802de6c <_reclaim_reent+0x80>
 802de8c:	2500      	movs	r5, #0
 802de8e:	e7ef      	b.n	802de70 <_reclaim_reent+0x84>
 802de90:	bd70      	pop	{r4, r5, r6, pc}
 802de92:	bf00      	nop
 802de94:	20000164 	.word	0x20000164

0802de98 <_lseek_r>:
 802de98:	b538      	push	{r3, r4, r5, lr}
 802de9a:	4d07      	ldr	r5, [pc, #28]	; (802deb8 <_lseek_r+0x20>)
 802de9c:	4604      	mov	r4, r0
 802de9e:	4608      	mov	r0, r1
 802dea0:	4611      	mov	r1, r2
 802dea2:	2200      	movs	r2, #0
 802dea4:	602a      	str	r2, [r5, #0]
 802dea6:	461a      	mov	r2, r3
 802dea8:	f7d4 fd28 	bl	80028fc <_lseek>
 802deac:	1c43      	adds	r3, r0, #1
 802deae:	d102      	bne.n	802deb6 <_lseek_r+0x1e>
 802deb0:	682b      	ldr	r3, [r5, #0]
 802deb2:	b103      	cbz	r3, 802deb6 <_lseek_r+0x1e>
 802deb4:	6023      	str	r3, [r4, #0]
 802deb6:	bd38      	pop	{r3, r4, r5, pc}
 802deb8:	200142d4 	.word	0x200142d4

0802debc <_read_r>:
 802debc:	b538      	push	{r3, r4, r5, lr}
 802debe:	4d07      	ldr	r5, [pc, #28]	; (802dedc <_read_r+0x20>)
 802dec0:	4604      	mov	r4, r0
 802dec2:	4608      	mov	r0, r1
 802dec4:	4611      	mov	r1, r2
 802dec6:	2200      	movs	r2, #0
 802dec8:	602a      	str	r2, [r5, #0]
 802deca:	461a      	mov	r2, r3
 802decc:	f7d4 fcee 	bl	80028ac <_read>
 802ded0:	1c43      	adds	r3, r0, #1
 802ded2:	d102      	bne.n	802deda <_read_r+0x1e>
 802ded4:	682b      	ldr	r3, [r5, #0]
 802ded6:	b103      	cbz	r3, 802deda <_read_r+0x1e>
 802ded8:	6023      	str	r3, [r4, #0]
 802deda:	bd38      	pop	{r3, r4, r5, pc}
 802dedc:	200142d4 	.word	0x200142d4

0802dee0 <_kill_r>:
 802dee0:	b538      	push	{r3, r4, r5, lr}
 802dee2:	4d07      	ldr	r5, [pc, #28]	; (802df00 <_kill_r+0x20>)
 802dee4:	2300      	movs	r3, #0
 802dee6:	4604      	mov	r4, r0
 802dee8:	4608      	mov	r0, r1
 802deea:	4611      	mov	r1, r2
 802deec:	602b      	str	r3, [r5, #0]
 802deee:	f7d4 fccf 	bl	8002890 <_kill>
 802def2:	1c43      	adds	r3, r0, #1
 802def4:	d102      	bne.n	802defc <_kill_r+0x1c>
 802def6:	682b      	ldr	r3, [r5, #0]
 802def8:	b103      	cbz	r3, 802defc <_kill_r+0x1c>
 802defa:	6023      	str	r3, [r4, #0]
 802defc:	bd38      	pop	{r3, r4, r5, pc}
 802defe:	bf00      	nop
 802df00:	200142d4 	.word	0x200142d4

0802df04 <_getpid_r>:
 802df04:	f7d4 bcc2 	b.w	800288c <_getpid>

0802df08 <_sbrk_r>:
 802df08:	b538      	push	{r3, r4, r5, lr}
 802df0a:	4d06      	ldr	r5, [pc, #24]	; (802df24 <_sbrk_r+0x1c>)
 802df0c:	2300      	movs	r3, #0
 802df0e:	4604      	mov	r4, r0
 802df10:	4608      	mov	r0, r1
 802df12:	602b      	str	r3, [r5, #0]
 802df14:	f7d4 fcf4 	bl	8002900 <_sbrk>
 802df18:	1c43      	adds	r3, r0, #1
 802df1a:	d102      	bne.n	802df22 <_sbrk_r+0x1a>
 802df1c:	682b      	ldr	r3, [r5, #0]
 802df1e:	b103      	cbz	r3, 802df22 <_sbrk_r+0x1a>
 802df20:	6023      	str	r3, [r4, #0]
 802df22:	bd38      	pop	{r3, r4, r5, pc}
 802df24:	200142d4 	.word	0x200142d4

0802df28 <_write_r>:
 802df28:	b538      	push	{r3, r4, r5, lr}
 802df2a:	4d07      	ldr	r5, [pc, #28]	; (802df48 <_write_r+0x20>)
 802df2c:	4604      	mov	r4, r0
 802df2e:	4608      	mov	r0, r1
 802df30:	4611      	mov	r1, r2
 802df32:	2200      	movs	r2, #0
 802df34:	602a      	str	r2, [r5, #0]
 802df36:	461a      	mov	r2, r3
 802df38:	f7d4 fcc6 	bl	80028c8 <_write>
 802df3c:	1c43      	adds	r3, r0, #1
 802df3e:	d102      	bne.n	802df46 <_write_r+0x1e>
 802df40:	682b      	ldr	r3, [r5, #0]
 802df42:	b103      	cbz	r3, 802df46 <_write_r+0x1e>
 802df44:	6023      	str	r3, [r4, #0]
 802df46:	bd38      	pop	{r3, r4, r5, pc}
 802df48:	200142d4 	.word	0x200142d4

0802df4c <__errno>:
 802df4c:	4b01      	ldr	r3, [pc, #4]	; (802df54 <__errno+0x8>)
 802df4e:	6818      	ldr	r0, [r3, #0]
 802df50:	4770      	bx	lr
 802df52:	bf00      	nop
 802df54:	20000164 	.word	0x20000164

0802df58 <__libc_init_array>:
 802df58:	b570      	push	{r4, r5, r6, lr}
 802df5a:	4d0d      	ldr	r5, [pc, #52]	; (802df90 <__libc_init_array+0x38>)
 802df5c:	4c0d      	ldr	r4, [pc, #52]	; (802df94 <__libc_init_array+0x3c>)
 802df5e:	1b64      	subs	r4, r4, r5
 802df60:	10a4      	asrs	r4, r4, #2
 802df62:	2600      	movs	r6, #0
 802df64:	42a6      	cmp	r6, r4
 802df66:	d109      	bne.n	802df7c <__libc_init_array+0x24>
 802df68:	4d0b      	ldr	r5, [pc, #44]	; (802df98 <__libc_init_array+0x40>)
 802df6a:	4c0c      	ldr	r4, [pc, #48]	; (802df9c <__libc_init_array+0x44>)
 802df6c:	f000 fd70 	bl	802ea50 <_init>
 802df70:	1b64      	subs	r4, r4, r5
 802df72:	10a4      	asrs	r4, r4, #2
 802df74:	2600      	movs	r6, #0
 802df76:	42a6      	cmp	r6, r4
 802df78:	d105      	bne.n	802df86 <__libc_init_array+0x2e>
 802df7a:	bd70      	pop	{r4, r5, r6, pc}
 802df7c:	f855 3b04 	ldr.w	r3, [r5], #4
 802df80:	4798      	blx	r3
 802df82:	3601      	adds	r6, #1
 802df84:	e7ee      	b.n	802df64 <__libc_init_array+0xc>
 802df86:	f855 3b04 	ldr.w	r3, [r5], #4
 802df8a:	4798      	blx	r3
 802df8c:	3601      	adds	r6, #1
 802df8e:	e7f2      	b.n	802df76 <__libc_init_array+0x1e>
 802df90:	080cf3c0 	.word	0x080cf3c0
 802df94:	080cf3c0 	.word	0x080cf3c0
 802df98:	080cf3c0 	.word	0x080cf3c0
 802df9c:	080cf3d4 	.word	0x080cf3d4

0802dfa0 <__retarget_lock_init_recursive>:
 802dfa0:	4770      	bx	lr

0802dfa2 <__retarget_lock_acquire_recursive>:
 802dfa2:	4770      	bx	lr

0802dfa4 <__retarget_lock_release_recursive>:
 802dfa4:	4770      	bx	lr

0802dfa6 <memcpy>:
 802dfa6:	440a      	add	r2, r1
 802dfa8:	4291      	cmp	r1, r2
 802dfaa:	f100 33ff 	add.w	r3, r0, #4294967295
 802dfae:	d100      	bne.n	802dfb2 <memcpy+0xc>
 802dfb0:	4770      	bx	lr
 802dfb2:	b510      	push	{r4, lr}
 802dfb4:	f811 4b01 	ldrb.w	r4, [r1], #1
 802dfb8:	f803 4f01 	strb.w	r4, [r3, #1]!
 802dfbc:	4291      	cmp	r1, r2
 802dfbe:	d1f9      	bne.n	802dfb4 <memcpy+0xe>
 802dfc0:	bd10      	pop	{r4, pc}
	...

0802dfc4 <__register_exitproc>:
 802dfc4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802dfc8:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 802e07c <__register_exitproc+0xb8>
 802dfcc:	4606      	mov	r6, r0
 802dfce:	f8d8 0000 	ldr.w	r0, [r8]
 802dfd2:	461f      	mov	r7, r3
 802dfd4:	460d      	mov	r5, r1
 802dfd6:	4691      	mov	r9, r2
 802dfd8:	f7ff ffe3 	bl	802dfa2 <__retarget_lock_acquire_recursive>
 802dfdc:	4b23      	ldr	r3, [pc, #140]	; (802e06c <__register_exitproc+0xa8>)
 802dfde:	681c      	ldr	r4, [r3, #0]
 802dfe0:	b934      	cbnz	r4, 802dff0 <__register_exitproc+0x2c>
 802dfe2:	4c23      	ldr	r4, [pc, #140]	; (802e070 <__register_exitproc+0xac>)
 802dfe4:	601c      	str	r4, [r3, #0]
 802dfe6:	4b23      	ldr	r3, [pc, #140]	; (802e074 <__register_exitproc+0xb0>)
 802dfe8:	b113      	cbz	r3, 802dff0 <__register_exitproc+0x2c>
 802dfea:	681b      	ldr	r3, [r3, #0]
 802dfec:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 802dff0:	6863      	ldr	r3, [r4, #4]
 802dff2:	2b1f      	cmp	r3, #31
 802dff4:	dd07      	ble.n	802e006 <__register_exitproc+0x42>
 802dff6:	f8d8 0000 	ldr.w	r0, [r8]
 802dffa:	f7ff ffd3 	bl	802dfa4 <__retarget_lock_release_recursive>
 802dffe:	f04f 30ff 	mov.w	r0, #4294967295
 802e002:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802e006:	b32e      	cbz	r6, 802e054 <__register_exitproc+0x90>
 802e008:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 802e00c:	b968      	cbnz	r0, 802e02a <__register_exitproc+0x66>
 802e00e:	4b1a      	ldr	r3, [pc, #104]	; (802e078 <__register_exitproc+0xb4>)
 802e010:	2b00      	cmp	r3, #0
 802e012:	d0f0      	beq.n	802dff6 <__register_exitproc+0x32>
 802e014:	f44f 7084 	mov.w	r0, #264	; 0x108
 802e018:	f7ff fcbe 	bl	802d998 <malloc>
 802e01c:	2800      	cmp	r0, #0
 802e01e:	d0ea      	beq.n	802dff6 <__register_exitproc+0x32>
 802e020:	2300      	movs	r3, #0
 802e022:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 802e026:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 802e02a:	6863      	ldr	r3, [r4, #4]
 802e02c:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 802e030:	2201      	movs	r2, #1
 802e032:	409a      	lsls	r2, r3
 802e034:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 802e038:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 802e03c:	4313      	orrs	r3, r2
 802e03e:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 802e042:	2e02      	cmp	r6, #2
 802e044:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 802e048:	bf02      	ittt	eq
 802e04a:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 802e04e:	4313      	orreq	r3, r2
 802e050:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 802e054:	6863      	ldr	r3, [r4, #4]
 802e056:	f8d8 0000 	ldr.w	r0, [r8]
 802e05a:	1c5a      	adds	r2, r3, #1
 802e05c:	3302      	adds	r3, #2
 802e05e:	6062      	str	r2, [r4, #4]
 802e060:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 802e064:	f7ff ff9e 	bl	802dfa4 <__retarget_lock_release_recursive>
 802e068:	2000      	movs	r0, #0
 802e06a:	e7ca      	b.n	802e002 <__register_exitproc+0x3e>
 802e06c:	20014368 	.word	0x20014368
 802e070:	200142dc 	.word	0x200142dc
 802e074:	08045c18 	.word	0x08045c18
 802e078:	0802d999 	.word	0x0802d999
 802e07c:	20000168 	.word	0x20000168

0802e080 <_free_r>:
 802e080:	b537      	push	{r0, r1, r2, r4, r5, lr}
 802e082:	2900      	cmp	r1, #0
 802e084:	d044      	beq.n	802e110 <_free_r+0x90>
 802e086:	f851 3c04 	ldr.w	r3, [r1, #-4]
 802e08a:	9001      	str	r0, [sp, #4]
 802e08c:	2b00      	cmp	r3, #0
 802e08e:	f1a1 0404 	sub.w	r4, r1, #4
 802e092:	bfb8      	it	lt
 802e094:	18e4      	addlt	r4, r4, r3
 802e096:	f7ff fd2f 	bl	802daf8 <__malloc_lock>
 802e09a:	4a1e      	ldr	r2, [pc, #120]	; (802e114 <_free_r+0x94>)
 802e09c:	9801      	ldr	r0, [sp, #4]
 802e09e:	6813      	ldr	r3, [r2, #0]
 802e0a0:	b933      	cbnz	r3, 802e0b0 <_free_r+0x30>
 802e0a2:	6063      	str	r3, [r4, #4]
 802e0a4:	6014      	str	r4, [r2, #0]
 802e0a6:	b003      	add	sp, #12
 802e0a8:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 802e0ac:	f7ff bd2a 	b.w	802db04 <__malloc_unlock>
 802e0b0:	42a3      	cmp	r3, r4
 802e0b2:	d908      	bls.n	802e0c6 <_free_r+0x46>
 802e0b4:	6825      	ldr	r5, [r4, #0]
 802e0b6:	1961      	adds	r1, r4, r5
 802e0b8:	428b      	cmp	r3, r1
 802e0ba:	bf01      	itttt	eq
 802e0bc:	6819      	ldreq	r1, [r3, #0]
 802e0be:	685b      	ldreq	r3, [r3, #4]
 802e0c0:	1949      	addeq	r1, r1, r5
 802e0c2:	6021      	streq	r1, [r4, #0]
 802e0c4:	e7ed      	b.n	802e0a2 <_free_r+0x22>
 802e0c6:	461a      	mov	r2, r3
 802e0c8:	685b      	ldr	r3, [r3, #4]
 802e0ca:	b10b      	cbz	r3, 802e0d0 <_free_r+0x50>
 802e0cc:	42a3      	cmp	r3, r4
 802e0ce:	d9fa      	bls.n	802e0c6 <_free_r+0x46>
 802e0d0:	6811      	ldr	r1, [r2, #0]
 802e0d2:	1855      	adds	r5, r2, r1
 802e0d4:	42a5      	cmp	r5, r4
 802e0d6:	d10b      	bne.n	802e0f0 <_free_r+0x70>
 802e0d8:	6824      	ldr	r4, [r4, #0]
 802e0da:	4421      	add	r1, r4
 802e0dc:	1854      	adds	r4, r2, r1
 802e0de:	42a3      	cmp	r3, r4
 802e0e0:	6011      	str	r1, [r2, #0]
 802e0e2:	d1e0      	bne.n	802e0a6 <_free_r+0x26>
 802e0e4:	681c      	ldr	r4, [r3, #0]
 802e0e6:	685b      	ldr	r3, [r3, #4]
 802e0e8:	6053      	str	r3, [r2, #4]
 802e0ea:	440c      	add	r4, r1
 802e0ec:	6014      	str	r4, [r2, #0]
 802e0ee:	e7da      	b.n	802e0a6 <_free_r+0x26>
 802e0f0:	d902      	bls.n	802e0f8 <_free_r+0x78>
 802e0f2:	230c      	movs	r3, #12
 802e0f4:	6003      	str	r3, [r0, #0]
 802e0f6:	e7d6      	b.n	802e0a6 <_free_r+0x26>
 802e0f8:	6825      	ldr	r5, [r4, #0]
 802e0fa:	1961      	adds	r1, r4, r5
 802e0fc:	428b      	cmp	r3, r1
 802e0fe:	bf04      	itt	eq
 802e100:	6819      	ldreq	r1, [r3, #0]
 802e102:	685b      	ldreq	r3, [r3, #4]
 802e104:	6063      	str	r3, [r4, #4]
 802e106:	bf04      	itt	eq
 802e108:	1949      	addeq	r1, r1, r5
 802e10a:	6021      	streq	r1, [r4, #0]
 802e10c:	6054      	str	r4, [r2, #4]
 802e10e:	e7ca      	b.n	802e0a6 <_free_r+0x26>
 802e110:	b003      	add	sp, #12
 802e112:	bd30      	pop	{r4, r5, pc}
 802e114:	20014190 	.word	0x20014190

0802e118 <__sfputc_r>:
 802e118:	6893      	ldr	r3, [r2, #8]
 802e11a:	3b01      	subs	r3, #1
 802e11c:	2b00      	cmp	r3, #0
 802e11e:	b410      	push	{r4}
 802e120:	6093      	str	r3, [r2, #8]
 802e122:	da08      	bge.n	802e136 <__sfputc_r+0x1e>
 802e124:	6994      	ldr	r4, [r2, #24]
 802e126:	42a3      	cmp	r3, r4
 802e128:	db01      	blt.n	802e12e <__sfputc_r+0x16>
 802e12a:	290a      	cmp	r1, #10
 802e12c:	d103      	bne.n	802e136 <__sfputc_r+0x1e>
 802e12e:	f85d 4b04 	ldr.w	r4, [sp], #4
 802e132:	f000 bb73 	b.w	802e81c <__swbuf_r>
 802e136:	6813      	ldr	r3, [r2, #0]
 802e138:	1c58      	adds	r0, r3, #1
 802e13a:	6010      	str	r0, [r2, #0]
 802e13c:	7019      	strb	r1, [r3, #0]
 802e13e:	4608      	mov	r0, r1
 802e140:	f85d 4b04 	ldr.w	r4, [sp], #4
 802e144:	4770      	bx	lr

0802e146 <__sfputs_r>:
 802e146:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802e148:	4606      	mov	r6, r0
 802e14a:	460f      	mov	r7, r1
 802e14c:	4614      	mov	r4, r2
 802e14e:	18d5      	adds	r5, r2, r3
 802e150:	42ac      	cmp	r4, r5
 802e152:	d101      	bne.n	802e158 <__sfputs_r+0x12>
 802e154:	2000      	movs	r0, #0
 802e156:	e007      	b.n	802e168 <__sfputs_r+0x22>
 802e158:	f814 1b01 	ldrb.w	r1, [r4], #1
 802e15c:	463a      	mov	r2, r7
 802e15e:	4630      	mov	r0, r6
 802e160:	f7ff ffda 	bl	802e118 <__sfputc_r>
 802e164:	1c43      	adds	r3, r0, #1
 802e166:	d1f3      	bne.n	802e150 <__sfputs_r+0xa>
 802e168:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0802e16c <_vfiprintf_r>:
 802e16c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802e170:	460d      	mov	r5, r1
 802e172:	b09d      	sub	sp, #116	; 0x74
 802e174:	4614      	mov	r4, r2
 802e176:	4698      	mov	r8, r3
 802e178:	4606      	mov	r6, r0
 802e17a:	b118      	cbz	r0, 802e184 <_vfiprintf_r+0x18>
 802e17c:	6a03      	ldr	r3, [r0, #32]
 802e17e:	b90b      	cbnz	r3, 802e184 <_vfiprintf_r+0x18>
 802e180:	f7ff fd60 	bl	802dc44 <__sinit>
 802e184:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802e186:	07d9      	lsls	r1, r3, #31
 802e188:	d405      	bmi.n	802e196 <_vfiprintf_r+0x2a>
 802e18a:	89ab      	ldrh	r3, [r5, #12]
 802e18c:	059a      	lsls	r2, r3, #22
 802e18e:	d402      	bmi.n	802e196 <_vfiprintf_r+0x2a>
 802e190:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802e192:	f7ff ff06 	bl	802dfa2 <__retarget_lock_acquire_recursive>
 802e196:	89ab      	ldrh	r3, [r5, #12]
 802e198:	071b      	lsls	r3, r3, #28
 802e19a:	d501      	bpl.n	802e1a0 <_vfiprintf_r+0x34>
 802e19c:	692b      	ldr	r3, [r5, #16]
 802e19e:	b99b      	cbnz	r3, 802e1c8 <_vfiprintf_r+0x5c>
 802e1a0:	4629      	mov	r1, r5
 802e1a2:	4630      	mov	r0, r6
 802e1a4:	f000 fb78 	bl	802e898 <__swsetup_r>
 802e1a8:	b170      	cbz	r0, 802e1c8 <_vfiprintf_r+0x5c>
 802e1aa:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802e1ac:	07dc      	lsls	r4, r3, #31
 802e1ae:	d504      	bpl.n	802e1ba <_vfiprintf_r+0x4e>
 802e1b0:	f04f 30ff 	mov.w	r0, #4294967295
 802e1b4:	b01d      	add	sp, #116	; 0x74
 802e1b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802e1ba:	89ab      	ldrh	r3, [r5, #12]
 802e1bc:	0598      	lsls	r0, r3, #22
 802e1be:	d4f7      	bmi.n	802e1b0 <_vfiprintf_r+0x44>
 802e1c0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802e1c2:	f7ff feef 	bl	802dfa4 <__retarget_lock_release_recursive>
 802e1c6:	e7f3      	b.n	802e1b0 <_vfiprintf_r+0x44>
 802e1c8:	2300      	movs	r3, #0
 802e1ca:	9309      	str	r3, [sp, #36]	; 0x24
 802e1cc:	2320      	movs	r3, #32
 802e1ce:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 802e1d2:	f8cd 800c 	str.w	r8, [sp, #12]
 802e1d6:	2330      	movs	r3, #48	; 0x30
 802e1d8:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 802e38c <_vfiprintf_r+0x220>
 802e1dc:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 802e1e0:	f04f 0901 	mov.w	r9, #1
 802e1e4:	4623      	mov	r3, r4
 802e1e6:	469a      	mov	sl, r3
 802e1e8:	f813 2b01 	ldrb.w	r2, [r3], #1
 802e1ec:	b10a      	cbz	r2, 802e1f2 <_vfiprintf_r+0x86>
 802e1ee:	2a25      	cmp	r2, #37	; 0x25
 802e1f0:	d1f9      	bne.n	802e1e6 <_vfiprintf_r+0x7a>
 802e1f2:	ebba 0b04 	subs.w	fp, sl, r4
 802e1f6:	d00b      	beq.n	802e210 <_vfiprintf_r+0xa4>
 802e1f8:	465b      	mov	r3, fp
 802e1fa:	4622      	mov	r2, r4
 802e1fc:	4629      	mov	r1, r5
 802e1fe:	4630      	mov	r0, r6
 802e200:	f7ff ffa1 	bl	802e146 <__sfputs_r>
 802e204:	3001      	adds	r0, #1
 802e206:	f000 80a9 	beq.w	802e35c <_vfiprintf_r+0x1f0>
 802e20a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802e20c:	445a      	add	r2, fp
 802e20e:	9209      	str	r2, [sp, #36]	; 0x24
 802e210:	f89a 3000 	ldrb.w	r3, [sl]
 802e214:	2b00      	cmp	r3, #0
 802e216:	f000 80a1 	beq.w	802e35c <_vfiprintf_r+0x1f0>
 802e21a:	2300      	movs	r3, #0
 802e21c:	f04f 32ff 	mov.w	r2, #4294967295
 802e220:	e9cd 2305 	strd	r2, r3, [sp, #20]
 802e224:	f10a 0a01 	add.w	sl, sl, #1
 802e228:	9304      	str	r3, [sp, #16]
 802e22a:	9307      	str	r3, [sp, #28]
 802e22c:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 802e230:	931a      	str	r3, [sp, #104]	; 0x68
 802e232:	4654      	mov	r4, sl
 802e234:	2205      	movs	r2, #5
 802e236:	f814 1b01 	ldrb.w	r1, [r4], #1
 802e23a:	4854      	ldr	r0, [pc, #336]	; (802e38c <_vfiprintf_r+0x220>)
 802e23c:	f7d2 f838 	bl	80002b0 <memchr>
 802e240:	9a04      	ldr	r2, [sp, #16]
 802e242:	b9d8      	cbnz	r0, 802e27c <_vfiprintf_r+0x110>
 802e244:	06d1      	lsls	r1, r2, #27
 802e246:	bf44      	itt	mi
 802e248:	2320      	movmi	r3, #32
 802e24a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802e24e:	0713      	lsls	r3, r2, #28
 802e250:	bf44      	itt	mi
 802e252:	232b      	movmi	r3, #43	; 0x2b
 802e254:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802e258:	f89a 3000 	ldrb.w	r3, [sl]
 802e25c:	2b2a      	cmp	r3, #42	; 0x2a
 802e25e:	d015      	beq.n	802e28c <_vfiprintf_r+0x120>
 802e260:	9a07      	ldr	r2, [sp, #28]
 802e262:	4654      	mov	r4, sl
 802e264:	2000      	movs	r0, #0
 802e266:	f04f 0c0a 	mov.w	ip, #10
 802e26a:	4621      	mov	r1, r4
 802e26c:	f811 3b01 	ldrb.w	r3, [r1], #1
 802e270:	3b30      	subs	r3, #48	; 0x30
 802e272:	2b09      	cmp	r3, #9
 802e274:	d94d      	bls.n	802e312 <_vfiprintf_r+0x1a6>
 802e276:	b1b0      	cbz	r0, 802e2a6 <_vfiprintf_r+0x13a>
 802e278:	9207      	str	r2, [sp, #28]
 802e27a:	e014      	b.n	802e2a6 <_vfiprintf_r+0x13a>
 802e27c:	eba0 0308 	sub.w	r3, r0, r8
 802e280:	fa09 f303 	lsl.w	r3, r9, r3
 802e284:	4313      	orrs	r3, r2
 802e286:	9304      	str	r3, [sp, #16]
 802e288:	46a2      	mov	sl, r4
 802e28a:	e7d2      	b.n	802e232 <_vfiprintf_r+0xc6>
 802e28c:	9b03      	ldr	r3, [sp, #12]
 802e28e:	1d19      	adds	r1, r3, #4
 802e290:	681b      	ldr	r3, [r3, #0]
 802e292:	9103      	str	r1, [sp, #12]
 802e294:	2b00      	cmp	r3, #0
 802e296:	bfbb      	ittet	lt
 802e298:	425b      	neglt	r3, r3
 802e29a:	f042 0202 	orrlt.w	r2, r2, #2
 802e29e:	9307      	strge	r3, [sp, #28]
 802e2a0:	9307      	strlt	r3, [sp, #28]
 802e2a2:	bfb8      	it	lt
 802e2a4:	9204      	strlt	r2, [sp, #16]
 802e2a6:	7823      	ldrb	r3, [r4, #0]
 802e2a8:	2b2e      	cmp	r3, #46	; 0x2e
 802e2aa:	d10c      	bne.n	802e2c6 <_vfiprintf_r+0x15a>
 802e2ac:	7863      	ldrb	r3, [r4, #1]
 802e2ae:	2b2a      	cmp	r3, #42	; 0x2a
 802e2b0:	d134      	bne.n	802e31c <_vfiprintf_r+0x1b0>
 802e2b2:	9b03      	ldr	r3, [sp, #12]
 802e2b4:	1d1a      	adds	r2, r3, #4
 802e2b6:	681b      	ldr	r3, [r3, #0]
 802e2b8:	9203      	str	r2, [sp, #12]
 802e2ba:	2b00      	cmp	r3, #0
 802e2bc:	bfb8      	it	lt
 802e2be:	f04f 33ff 	movlt.w	r3, #4294967295
 802e2c2:	3402      	adds	r4, #2
 802e2c4:	9305      	str	r3, [sp, #20]
 802e2c6:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 802e39c <_vfiprintf_r+0x230>
 802e2ca:	7821      	ldrb	r1, [r4, #0]
 802e2cc:	2203      	movs	r2, #3
 802e2ce:	4650      	mov	r0, sl
 802e2d0:	f7d1 ffee 	bl	80002b0 <memchr>
 802e2d4:	b138      	cbz	r0, 802e2e6 <_vfiprintf_r+0x17a>
 802e2d6:	9b04      	ldr	r3, [sp, #16]
 802e2d8:	eba0 000a 	sub.w	r0, r0, sl
 802e2dc:	2240      	movs	r2, #64	; 0x40
 802e2de:	4082      	lsls	r2, r0
 802e2e0:	4313      	orrs	r3, r2
 802e2e2:	3401      	adds	r4, #1
 802e2e4:	9304      	str	r3, [sp, #16]
 802e2e6:	f814 1b01 	ldrb.w	r1, [r4], #1
 802e2ea:	4829      	ldr	r0, [pc, #164]	; (802e390 <_vfiprintf_r+0x224>)
 802e2ec:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 802e2f0:	2206      	movs	r2, #6
 802e2f2:	f7d1 ffdd 	bl	80002b0 <memchr>
 802e2f6:	2800      	cmp	r0, #0
 802e2f8:	d03f      	beq.n	802e37a <_vfiprintf_r+0x20e>
 802e2fa:	4b26      	ldr	r3, [pc, #152]	; (802e394 <_vfiprintf_r+0x228>)
 802e2fc:	bb1b      	cbnz	r3, 802e346 <_vfiprintf_r+0x1da>
 802e2fe:	9b03      	ldr	r3, [sp, #12]
 802e300:	3307      	adds	r3, #7
 802e302:	f023 0307 	bic.w	r3, r3, #7
 802e306:	3308      	adds	r3, #8
 802e308:	9303      	str	r3, [sp, #12]
 802e30a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802e30c:	443b      	add	r3, r7
 802e30e:	9309      	str	r3, [sp, #36]	; 0x24
 802e310:	e768      	b.n	802e1e4 <_vfiprintf_r+0x78>
 802e312:	fb0c 3202 	mla	r2, ip, r2, r3
 802e316:	460c      	mov	r4, r1
 802e318:	2001      	movs	r0, #1
 802e31a:	e7a6      	b.n	802e26a <_vfiprintf_r+0xfe>
 802e31c:	2300      	movs	r3, #0
 802e31e:	3401      	adds	r4, #1
 802e320:	9305      	str	r3, [sp, #20]
 802e322:	4619      	mov	r1, r3
 802e324:	f04f 0c0a 	mov.w	ip, #10
 802e328:	4620      	mov	r0, r4
 802e32a:	f810 2b01 	ldrb.w	r2, [r0], #1
 802e32e:	3a30      	subs	r2, #48	; 0x30
 802e330:	2a09      	cmp	r2, #9
 802e332:	d903      	bls.n	802e33c <_vfiprintf_r+0x1d0>
 802e334:	2b00      	cmp	r3, #0
 802e336:	d0c6      	beq.n	802e2c6 <_vfiprintf_r+0x15a>
 802e338:	9105      	str	r1, [sp, #20]
 802e33a:	e7c4      	b.n	802e2c6 <_vfiprintf_r+0x15a>
 802e33c:	fb0c 2101 	mla	r1, ip, r1, r2
 802e340:	4604      	mov	r4, r0
 802e342:	2301      	movs	r3, #1
 802e344:	e7f0      	b.n	802e328 <_vfiprintf_r+0x1bc>
 802e346:	ab03      	add	r3, sp, #12
 802e348:	9300      	str	r3, [sp, #0]
 802e34a:	462a      	mov	r2, r5
 802e34c:	4b12      	ldr	r3, [pc, #72]	; (802e398 <_vfiprintf_r+0x22c>)
 802e34e:	a904      	add	r1, sp, #16
 802e350:	4630      	mov	r0, r6
 802e352:	f3af 8000 	nop.w
 802e356:	4607      	mov	r7, r0
 802e358:	1c78      	adds	r0, r7, #1
 802e35a:	d1d6      	bne.n	802e30a <_vfiprintf_r+0x19e>
 802e35c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802e35e:	07d9      	lsls	r1, r3, #31
 802e360:	d405      	bmi.n	802e36e <_vfiprintf_r+0x202>
 802e362:	89ab      	ldrh	r3, [r5, #12]
 802e364:	059a      	lsls	r2, r3, #22
 802e366:	d402      	bmi.n	802e36e <_vfiprintf_r+0x202>
 802e368:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802e36a:	f7ff fe1b 	bl	802dfa4 <__retarget_lock_release_recursive>
 802e36e:	89ab      	ldrh	r3, [r5, #12]
 802e370:	065b      	lsls	r3, r3, #25
 802e372:	f53f af1d 	bmi.w	802e1b0 <_vfiprintf_r+0x44>
 802e376:	9809      	ldr	r0, [sp, #36]	; 0x24
 802e378:	e71c      	b.n	802e1b4 <_vfiprintf_r+0x48>
 802e37a:	ab03      	add	r3, sp, #12
 802e37c:	9300      	str	r3, [sp, #0]
 802e37e:	462a      	mov	r2, r5
 802e380:	4b05      	ldr	r3, [pc, #20]	; (802e398 <_vfiprintf_r+0x22c>)
 802e382:	a904      	add	r1, sp, #16
 802e384:	4630      	mov	r0, r6
 802e386:	f000 f879 	bl	802e47c <_printf_i>
 802e38a:	e7e4      	b.n	802e356 <_vfiprintf_r+0x1ea>
 802e38c:	08045c1c 	.word	0x08045c1c
 802e390:	08045c26 	.word	0x08045c26
 802e394:	00000000 	.word	0x00000000
 802e398:	0802e147 	.word	0x0802e147
 802e39c:	08045c22 	.word	0x08045c22

0802e3a0 <_printf_common>:
 802e3a0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802e3a4:	4616      	mov	r6, r2
 802e3a6:	4699      	mov	r9, r3
 802e3a8:	688a      	ldr	r2, [r1, #8]
 802e3aa:	690b      	ldr	r3, [r1, #16]
 802e3ac:	f8dd 8020 	ldr.w	r8, [sp, #32]
 802e3b0:	4293      	cmp	r3, r2
 802e3b2:	bfb8      	it	lt
 802e3b4:	4613      	movlt	r3, r2
 802e3b6:	6033      	str	r3, [r6, #0]
 802e3b8:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 802e3bc:	4607      	mov	r7, r0
 802e3be:	460c      	mov	r4, r1
 802e3c0:	b10a      	cbz	r2, 802e3c6 <_printf_common+0x26>
 802e3c2:	3301      	adds	r3, #1
 802e3c4:	6033      	str	r3, [r6, #0]
 802e3c6:	6823      	ldr	r3, [r4, #0]
 802e3c8:	0699      	lsls	r1, r3, #26
 802e3ca:	bf42      	ittt	mi
 802e3cc:	6833      	ldrmi	r3, [r6, #0]
 802e3ce:	3302      	addmi	r3, #2
 802e3d0:	6033      	strmi	r3, [r6, #0]
 802e3d2:	6825      	ldr	r5, [r4, #0]
 802e3d4:	f015 0506 	ands.w	r5, r5, #6
 802e3d8:	d106      	bne.n	802e3e8 <_printf_common+0x48>
 802e3da:	f104 0a19 	add.w	sl, r4, #25
 802e3de:	68e3      	ldr	r3, [r4, #12]
 802e3e0:	6832      	ldr	r2, [r6, #0]
 802e3e2:	1a9b      	subs	r3, r3, r2
 802e3e4:	42ab      	cmp	r3, r5
 802e3e6:	dc26      	bgt.n	802e436 <_printf_common+0x96>
 802e3e8:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 802e3ec:	1e13      	subs	r3, r2, #0
 802e3ee:	6822      	ldr	r2, [r4, #0]
 802e3f0:	bf18      	it	ne
 802e3f2:	2301      	movne	r3, #1
 802e3f4:	0692      	lsls	r2, r2, #26
 802e3f6:	d42b      	bmi.n	802e450 <_printf_common+0xb0>
 802e3f8:	f104 0243 	add.w	r2, r4, #67	; 0x43
 802e3fc:	4649      	mov	r1, r9
 802e3fe:	4638      	mov	r0, r7
 802e400:	47c0      	blx	r8
 802e402:	3001      	adds	r0, #1
 802e404:	d01e      	beq.n	802e444 <_printf_common+0xa4>
 802e406:	6823      	ldr	r3, [r4, #0]
 802e408:	6922      	ldr	r2, [r4, #16]
 802e40a:	f003 0306 	and.w	r3, r3, #6
 802e40e:	2b04      	cmp	r3, #4
 802e410:	bf02      	ittt	eq
 802e412:	68e5      	ldreq	r5, [r4, #12]
 802e414:	6833      	ldreq	r3, [r6, #0]
 802e416:	1aed      	subeq	r5, r5, r3
 802e418:	68a3      	ldr	r3, [r4, #8]
 802e41a:	bf0c      	ite	eq
 802e41c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 802e420:	2500      	movne	r5, #0
 802e422:	4293      	cmp	r3, r2
 802e424:	bfc4      	itt	gt
 802e426:	1a9b      	subgt	r3, r3, r2
 802e428:	18ed      	addgt	r5, r5, r3
 802e42a:	2600      	movs	r6, #0
 802e42c:	341a      	adds	r4, #26
 802e42e:	42b5      	cmp	r5, r6
 802e430:	d11a      	bne.n	802e468 <_printf_common+0xc8>
 802e432:	2000      	movs	r0, #0
 802e434:	e008      	b.n	802e448 <_printf_common+0xa8>
 802e436:	2301      	movs	r3, #1
 802e438:	4652      	mov	r2, sl
 802e43a:	4649      	mov	r1, r9
 802e43c:	4638      	mov	r0, r7
 802e43e:	47c0      	blx	r8
 802e440:	3001      	adds	r0, #1
 802e442:	d103      	bne.n	802e44c <_printf_common+0xac>
 802e444:	f04f 30ff 	mov.w	r0, #4294967295
 802e448:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802e44c:	3501      	adds	r5, #1
 802e44e:	e7c6      	b.n	802e3de <_printf_common+0x3e>
 802e450:	18e1      	adds	r1, r4, r3
 802e452:	1c5a      	adds	r2, r3, #1
 802e454:	2030      	movs	r0, #48	; 0x30
 802e456:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 802e45a:	4422      	add	r2, r4
 802e45c:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 802e460:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 802e464:	3302      	adds	r3, #2
 802e466:	e7c7      	b.n	802e3f8 <_printf_common+0x58>
 802e468:	2301      	movs	r3, #1
 802e46a:	4622      	mov	r2, r4
 802e46c:	4649      	mov	r1, r9
 802e46e:	4638      	mov	r0, r7
 802e470:	47c0      	blx	r8
 802e472:	3001      	adds	r0, #1
 802e474:	d0e6      	beq.n	802e444 <_printf_common+0xa4>
 802e476:	3601      	adds	r6, #1
 802e478:	e7d9      	b.n	802e42e <_printf_common+0x8e>
	...

0802e47c <_printf_i>:
 802e47c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 802e480:	7e0f      	ldrb	r7, [r1, #24]
 802e482:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802e484:	2f78      	cmp	r7, #120	; 0x78
 802e486:	4691      	mov	r9, r2
 802e488:	4680      	mov	r8, r0
 802e48a:	460c      	mov	r4, r1
 802e48c:	469a      	mov	sl, r3
 802e48e:	f101 0243 	add.w	r2, r1, #67	; 0x43
 802e492:	d807      	bhi.n	802e4a4 <_printf_i+0x28>
 802e494:	2f62      	cmp	r7, #98	; 0x62
 802e496:	d80a      	bhi.n	802e4ae <_printf_i+0x32>
 802e498:	2f00      	cmp	r7, #0
 802e49a:	f000 80d4 	beq.w	802e646 <_printf_i+0x1ca>
 802e49e:	2f58      	cmp	r7, #88	; 0x58
 802e4a0:	f000 80c0 	beq.w	802e624 <_printf_i+0x1a8>
 802e4a4:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802e4a8:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 802e4ac:	e03a      	b.n	802e524 <_printf_i+0xa8>
 802e4ae:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 802e4b2:	2b15      	cmp	r3, #21
 802e4b4:	d8f6      	bhi.n	802e4a4 <_printf_i+0x28>
 802e4b6:	a101      	add	r1, pc, #4	; (adr r1, 802e4bc <_printf_i+0x40>)
 802e4b8:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 802e4bc:	0802e515 	.word	0x0802e515
 802e4c0:	0802e529 	.word	0x0802e529
 802e4c4:	0802e4a5 	.word	0x0802e4a5
 802e4c8:	0802e4a5 	.word	0x0802e4a5
 802e4cc:	0802e4a5 	.word	0x0802e4a5
 802e4d0:	0802e4a5 	.word	0x0802e4a5
 802e4d4:	0802e529 	.word	0x0802e529
 802e4d8:	0802e4a5 	.word	0x0802e4a5
 802e4dc:	0802e4a5 	.word	0x0802e4a5
 802e4e0:	0802e4a5 	.word	0x0802e4a5
 802e4e4:	0802e4a5 	.word	0x0802e4a5
 802e4e8:	0802e62d 	.word	0x0802e62d
 802e4ec:	0802e555 	.word	0x0802e555
 802e4f0:	0802e5e7 	.word	0x0802e5e7
 802e4f4:	0802e4a5 	.word	0x0802e4a5
 802e4f8:	0802e4a5 	.word	0x0802e4a5
 802e4fc:	0802e64f 	.word	0x0802e64f
 802e500:	0802e4a5 	.word	0x0802e4a5
 802e504:	0802e555 	.word	0x0802e555
 802e508:	0802e4a5 	.word	0x0802e4a5
 802e50c:	0802e4a5 	.word	0x0802e4a5
 802e510:	0802e5ef 	.word	0x0802e5ef
 802e514:	682b      	ldr	r3, [r5, #0]
 802e516:	1d1a      	adds	r2, r3, #4
 802e518:	681b      	ldr	r3, [r3, #0]
 802e51a:	602a      	str	r2, [r5, #0]
 802e51c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802e520:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 802e524:	2301      	movs	r3, #1
 802e526:	e09f      	b.n	802e668 <_printf_i+0x1ec>
 802e528:	6820      	ldr	r0, [r4, #0]
 802e52a:	682b      	ldr	r3, [r5, #0]
 802e52c:	0607      	lsls	r7, r0, #24
 802e52e:	f103 0104 	add.w	r1, r3, #4
 802e532:	6029      	str	r1, [r5, #0]
 802e534:	d501      	bpl.n	802e53a <_printf_i+0xbe>
 802e536:	681e      	ldr	r6, [r3, #0]
 802e538:	e003      	b.n	802e542 <_printf_i+0xc6>
 802e53a:	0646      	lsls	r6, r0, #25
 802e53c:	d5fb      	bpl.n	802e536 <_printf_i+0xba>
 802e53e:	f9b3 6000 	ldrsh.w	r6, [r3]
 802e542:	2e00      	cmp	r6, #0
 802e544:	da03      	bge.n	802e54e <_printf_i+0xd2>
 802e546:	232d      	movs	r3, #45	; 0x2d
 802e548:	4276      	negs	r6, r6
 802e54a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802e54e:	485a      	ldr	r0, [pc, #360]	; (802e6b8 <_printf_i+0x23c>)
 802e550:	230a      	movs	r3, #10
 802e552:	e012      	b.n	802e57a <_printf_i+0xfe>
 802e554:	682b      	ldr	r3, [r5, #0]
 802e556:	6820      	ldr	r0, [r4, #0]
 802e558:	1d19      	adds	r1, r3, #4
 802e55a:	6029      	str	r1, [r5, #0]
 802e55c:	0605      	lsls	r5, r0, #24
 802e55e:	d501      	bpl.n	802e564 <_printf_i+0xe8>
 802e560:	681e      	ldr	r6, [r3, #0]
 802e562:	e002      	b.n	802e56a <_printf_i+0xee>
 802e564:	0641      	lsls	r1, r0, #25
 802e566:	d5fb      	bpl.n	802e560 <_printf_i+0xe4>
 802e568:	881e      	ldrh	r6, [r3, #0]
 802e56a:	4853      	ldr	r0, [pc, #332]	; (802e6b8 <_printf_i+0x23c>)
 802e56c:	2f6f      	cmp	r7, #111	; 0x6f
 802e56e:	bf0c      	ite	eq
 802e570:	2308      	moveq	r3, #8
 802e572:	230a      	movne	r3, #10
 802e574:	2100      	movs	r1, #0
 802e576:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 802e57a:	6865      	ldr	r5, [r4, #4]
 802e57c:	60a5      	str	r5, [r4, #8]
 802e57e:	2d00      	cmp	r5, #0
 802e580:	bfa2      	ittt	ge
 802e582:	6821      	ldrge	r1, [r4, #0]
 802e584:	f021 0104 	bicge.w	r1, r1, #4
 802e588:	6021      	strge	r1, [r4, #0]
 802e58a:	b90e      	cbnz	r6, 802e590 <_printf_i+0x114>
 802e58c:	2d00      	cmp	r5, #0
 802e58e:	d04b      	beq.n	802e628 <_printf_i+0x1ac>
 802e590:	4615      	mov	r5, r2
 802e592:	fbb6 f1f3 	udiv	r1, r6, r3
 802e596:	fb03 6711 	mls	r7, r3, r1, r6
 802e59a:	5dc7      	ldrb	r7, [r0, r7]
 802e59c:	f805 7d01 	strb.w	r7, [r5, #-1]!
 802e5a0:	4637      	mov	r7, r6
 802e5a2:	42bb      	cmp	r3, r7
 802e5a4:	460e      	mov	r6, r1
 802e5a6:	d9f4      	bls.n	802e592 <_printf_i+0x116>
 802e5a8:	2b08      	cmp	r3, #8
 802e5aa:	d10b      	bne.n	802e5c4 <_printf_i+0x148>
 802e5ac:	6823      	ldr	r3, [r4, #0]
 802e5ae:	07de      	lsls	r6, r3, #31
 802e5b0:	d508      	bpl.n	802e5c4 <_printf_i+0x148>
 802e5b2:	6923      	ldr	r3, [r4, #16]
 802e5b4:	6861      	ldr	r1, [r4, #4]
 802e5b6:	4299      	cmp	r1, r3
 802e5b8:	bfde      	ittt	le
 802e5ba:	2330      	movle	r3, #48	; 0x30
 802e5bc:	f805 3c01 	strble.w	r3, [r5, #-1]
 802e5c0:	f105 35ff 	addle.w	r5, r5, #4294967295
 802e5c4:	1b52      	subs	r2, r2, r5
 802e5c6:	6122      	str	r2, [r4, #16]
 802e5c8:	f8cd a000 	str.w	sl, [sp]
 802e5cc:	464b      	mov	r3, r9
 802e5ce:	aa03      	add	r2, sp, #12
 802e5d0:	4621      	mov	r1, r4
 802e5d2:	4640      	mov	r0, r8
 802e5d4:	f7ff fee4 	bl	802e3a0 <_printf_common>
 802e5d8:	3001      	adds	r0, #1
 802e5da:	d14a      	bne.n	802e672 <_printf_i+0x1f6>
 802e5dc:	f04f 30ff 	mov.w	r0, #4294967295
 802e5e0:	b004      	add	sp, #16
 802e5e2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802e5e6:	6823      	ldr	r3, [r4, #0]
 802e5e8:	f043 0320 	orr.w	r3, r3, #32
 802e5ec:	6023      	str	r3, [r4, #0]
 802e5ee:	4833      	ldr	r0, [pc, #204]	; (802e6bc <_printf_i+0x240>)
 802e5f0:	2778      	movs	r7, #120	; 0x78
 802e5f2:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 802e5f6:	6823      	ldr	r3, [r4, #0]
 802e5f8:	6829      	ldr	r1, [r5, #0]
 802e5fa:	061f      	lsls	r7, r3, #24
 802e5fc:	f851 6b04 	ldr.w	r6, [r1], #4
 802e600:	d402      	bmi.n	802e608 <_printf_i+0x18c>
 802e602:	065f      	lsls	r7, r3, #25
 802e604:	bf48      	it	mi
 802e606:	b2b6      	uxthmi	r6, r6
 802e608:	07df      	lsls	r7, r3, #31
 802e60a:	bf48      	it	mi
 802e60c:	f043 0320 	orrmi.w	r3, r3, #32
 802e610:	6029      	str	r1, [r5, #0]
 802e612:	bf48      	it	mi
 802e614:	6023      	strmi	r3, [r4, #0]
 802e616:	b91e      	cbnz	r6, 802e620 <_printf_i+0x1a4>
 802e618:	6823      	ldr	r3, [r4, #0]
 802e61a:	f023 0320 	bic.w	r3, r3, #32
 802e61e:	6023      	str	r3, [r4, #0]
 802e620:	2310      	movs	r3, #16
 802e622:	e7a7      	b.n	802e574 <_printf_i+0xf8>
 802e624:	4824      	ldr	r0, [pc, #144]	; (802e6b8 <_printf_i+0x23c>)
 802e626:	e7e4      	b.n	802e5f2 <_printf_i+0x176>
 802e628:	4615      	mov	r5, r2
 802e62a:	e7bd      	b.n	802e5a8 <_printf_i+0x12c>
 802e62c:	682b      	ldr	r3, [r5, #0]
 802e62e:	6826      	ldr	r6, [r4, #0]
 802e630:	6961      	ldr	r1, [r4, #20]
 802e632:	1d18      	adds	r0, r3, #4
 802e634:	6028      	str	r0, [r5, #0]
 802e636:	0635      	lsls	r5, r6, #24
 802e638:	681b      	ldr	r3, [r3, #0]
 802e63a:	d501      	bpl.n	802e640 <_printf_i+0x1c4>
 802e63c:	6019      	str	r1, [r3, #0]
 802e63e:	e002      	b.n	802e646 <_printf_i+0x1ca>
 802e640:	0670      	lsls	r0, r6, #25
 802e642:	d5fb      	bpl.n	802e63c <_printf_i+0x1c0>
 802e644:	8019      	strh	r1, [r3, #0]
 802e646:	2300      	movs	r3, #0
 802e648:	6123      	str	r3, [r4, #16]
 802e64a:	4615      	mov	r5, r2
 802e64c:	e7bc      	b.n	802e5c8 <_printf_i+0x14c>
 802e64e:	682b      	ldr	r3, [r5, #0]
 802e650:	1d1a      	adds	r2, r3, #4
 802e652:	602a      	str	r2, [r5, #0]
 802e654:	681d      	ldr	r5, [r3, #0]
 802e656:	6862      	ldr	r2, [r4, #4]
 802e658:	2100      	movs	r1, #0
 802e65a:	4628      	mov	r0, r5
 802e65c:	f7d1 fe28 	bl	80002b0 <memchr>
 802e660:	b108      	cbz	r0, 802e666 <_printf_i+0x1ea>
 802e662:	1b40      	subs	r0, r0, r5
 802e664:	6060      	str	r0, [r4, #4]
 802e666:	6863      	ldr	r3, [r4, #4]
 802e668:	6123      	str	r3, [r4, #16]
 802e66a:	2300      	movs	r3, #0
 802e66c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802e670:	e7aa      	b.n	802e5c8 <_printf_i+0x14c>
 802e672:	6923      	ldr	r3, [r4, #16]
 802e674:	462a      	mov	r2, r5
 802e676:	4649      	mov	r1, r9
 802e678:	4640      	mov	r0, r8
 802e67a:	47d0      	blx	sl
 802e67c:	3001      	adds	r0, #1
 802e67e:	d0ad      	beq.n	802e5dc <_printf_i+0x160>
 802e680:	6823      	ldr	r3, [r4, #0]
 802e682:	079b      	lsls	r3, r3, #30
 802e684:	d413      	bmi.n	802e6ae <_printf_i+0x232>
 802e686:	68e0      	ldr	r0, [r4, #12]
 802e688:	9b03      	ldr	r3, [sp, #12]
 802e68a:	4298      	cmp	r0, r3
 802e68c:	bfb8      	it	lt
 802e68e:	4618      	movlt	r0, r3
 802e690:	e7a6      	b.n	802e5e0 <_printf_i+0x164>
 802e692:	2301      	movs	r3, #1
 802e694:	4632      	mov	r2, r6
 802e696:	4649      	mov	r1, r9
 802e698:	4640      	mov	r0, r8
 802e69a:	47d0      	blx	sl
 802e69c:	3001      	adds	r0, #1
 802e69e:	d09d      	beq.n	802e5dc <_printf_i+0x160>
 802e6a0:	3501      	adds	r5, #1
 802e6a2:	68e3      	ldr	r3, [r4, #12]
 802e6a4:	9903      	ldr	r1, [sp, #12]
 802e6a6:	1a5b      	subs	r3, r3, r1
 802e6a8:	42ab      	cmp	r3, r5
 802e6aa:	dcf2      	bgt.n	802e692 <_printf_i+0x216>
 802e6ac:	e7eb      	b.n	802e686 <_printf_i+0x20a>
 802e6ae:	2500      	movs	r5, #0
 802e6b0:	f104 0619 	add.w	r6, r4, #25
 802e6b4:	e7f5      	b.n	802e6a2 <_printf_i+0x226>
 802e6b6:	bf00      	nop
 802e6b8:	08045c2d 	.word	0x08045c2d
 802e6bc:	08045c3e 	.word	0x08045c3e

0802e6c0 <__sflush_r>:
 802e6c0:	898a      	ldrh	r2, [r1, #12]
 802e6c2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802e6c6:	4605      	mov	r5, r0
 802e6c8:	0710      	lsls	r0, r2, #28
 802e6ca:	460c      	mov	r4, r1
 802e6cc:	d458      	bmi.n	802e780 <__sflush_r+0xc0>
 802e6ce:	684b      	ldr	r3, [r1, #4]
 802e6d0:	2b00      	cmp	r3, #0
 802e6d2:	dc05      	bgt.n	802e6e0 <__sflush_r+0x20>
 802e6d4:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 802e6d6:	2b00      	cmp	r3, #0
 802e6d8:	dc02      	bgt.n	802e6e0 <__sflush_r+0x20>
 802e6da:	2000      	movs	r0, #0
 802e6dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802e6e0:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802e6e2:	2e00      	cmp	r6, #0
 802e6e4:	d0f9      	beq.n	802e6da <__sflush_r+0x1a>
 802e6e6:	2300      	movs	r3, #0
 802e6e8:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 802e6ec:	682f      	ldr	r7, [r5, #0]
 802e6ee:	6a21      	ldr	r1, [r4, #32]
 802e6f0:	602b      	str	r3, [r5, #0]
 802e6f2:	d032      	beq.n	802e75a <__sflush_r+0x9a>
 802e6f4:	6d60      	ldr	r0, [r4, #84]	; 0x54
 802e6f6:	89a3      	ldrh	r3, [r4, #12]
 802e6f8:	075a      	lsls	r2, r3, #29
 802e6fa:	d505      	bpl.n	802e708 <__sflush_r+0x48>
 802e6fc:	6863      	ldr	r3, [r4, #4]
 802e6fe:	1ac0      	subs	r0, r0, r3
 802e700:	6b63      	ldr	r3, [r4, #52]	; 0x34
 802e702:	b10b      	cbz	r3, 802e708 <__sflush_r+0x48>
 802e704:	6c23      	ldr	r3, [r4, #64]	; 0x40
 802e706:	1ac0      	subs	r0, r0, r3
 802e708:	2300      	movs	r3, #0
 802e70a:	4602      	mov	r2, r0
 802e70c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802e70e:	6a21      	ldr	r1, [r4, #32]
 802e710:	4628      	mov	r0, r5
 802e712:	47b0      	blx	r6
 802e714:	1c43      	adds	r3, r0, #1
 802e716:	89a3      	ldrh	r3, [r4, #12]
 802e718:	d106      	bne.n	802e728 <__sflush_r+0x68>
 802e71a:	6829      	ldr	r1, [r5, #0]
 802e71c:	291d      	cmp	r1, #29
 802e71e:	d82b      	bhi.n	802e778 <__sflush_r+0xb8>
 802e720:	4a29      	ldr	r2, [pc, #164]	; (802e7c8 <__sflush_r+0x108>)
 802e722:	410a      	asrs	r2, r1
 802e724:	07d6      	lsls	r6, r2, #31
 802e726:	d427      	bmi.n	802e778 <__sflush_r+0xb8>
 802e728:	2200      	movs	r2, #0
 802e72a:	6062      	str	r2, [r4, #4]
 802e72c:	04d9      	lsls	r1, r3, #19
 802e72e:	6922      	ldr	r2, [r4, #16]
 802e730:	6022      	str	r2, [r4, #0]
 802e732:	d504      	bpl.n	802e73e <__sflush_r+0x7e>
 802e734:	1c42      	adds	r2, r0, #1
 802e736:	d101      	bne.n	802e73c <__sflush_r+0x7c>
 802e738:	682b      	ldr	r3, [r5, #0]
 802e73a:	b903      	cbnz	r3, 802e73e <__sflush_r+0x7e>
 802e73c:	6560      	str	r0, [r4, #84]	; 0x54
 802e73e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802e740:	602f      	str	r7, [r5, #0]
 802e742:	2900      	cmp	r1, #0
 802e744:	d0c9      	beq.n	802e6da <__sflush_r+0x1a>
 802e746:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802e74a:	4299      	cmp	r1, r3
 802e74c:	d002      	beq.n	802e754 <__sflush_r+0x94>
 802e74e:	4628      	mov	r0, r5
 802e750:	f7ff fc96 	bl	802e080 <_free_r>
 802e754:	2000      	movs	r0, #0
 802e756:	6360      	str	r0, [r4, #52]	; 0x34
 802e758:	e7c0      	b.n	802e6dc <__sflush_r+0x1c>
 802e75a:	2301      	movs	r3, #1
 802e75c:	4628      	mov	r0, r5
 802e75e:	47b0      	blx	r6
 802e760:	1c41      	adds	r1, r0, #1
 802e762:	d1c8      	bne.n	802e6f6 <__sflush_r+0x36>
 802e764:	682b      	ldr	r3, [r5, #0]
 802e766:	2b00      	cmp	r3, #0
 802e768:	d0c5      	beq.n	802e6f6 <__sflush_r+0x36>
 802e76a:	2b1d      	cmp	r3, #29
 802e76c:	d001      	beq.n	802e772 <__sflush_r+0xb2>
 802e76e:	2b16      	cmp	r3, #22
 802e770:	d101      	bne.n	802e776 <__sflush_r+0xb6>
 802e772:	602f      	str	r7, [r5, #0]
 802e774:	e7b1      	b.n	802e6da <__sflush_r+0x1a>
 802e776:	89a3      	ldrh	r3, [r4, #12]
 802e778:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802e77c:	81a3      	strh	r3, [r4, #12]
 802e77e:	e7ad      	b.n	802e6dc <__sflush_r+0x1c>
 802e780:	690f      	ldr	r7, [r1, #16]
 802e782:	2f00      	cmp	r7, #0
 802e784:	d0a9      	beq.n	802e6da <__sflush_r+0x1a>
 802e786:	0793      	lsls	r3, r2, #30
 802e788:	680e      	ldr	r6, [r1, #0]
 802e78a:	bf08      	it	eq
 802e78c:	694b      	ldreq	r3, [r1, #20]
 802e78e:	600f      	str	r7, [r1, #0]
 802e790:	bf18      	it	ne
 802e792:	2300      	movne	r3, #0
 802e794:	eba6 0807 	sub.w	r8, r6, r7
 802e798:	608b      	str	r3, [r1, #8]
 802e79a:	f1b8 0f00 	cmp.w	r8, #0
 802e79e:	dd9c      	ble.n	802e6da <__sflush_r+0x1a>
 802e7a0:	6a21      	ldr	r1, [r4, #32]
 802e7a2:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 802e7a4:	4643      	mov	r3, r8
 802e7a6:	463a      	mov	r2, r7
 802e7a8:	4628      	mov	r0, r5
 802e7aa:	47b0      	blx	r6
 802e7ac:	2800      	cmp	r0, #0
 802e7ae:	dc06      	bgt.n	802e7be <__sflush_r+0xfe>
 802e7b0:	89a3      	ldrh	r3, [r4, #12]
 802e7b2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802e7b6:	81a3      	strh	r3, [r4, #12]
 802e7b8:	f04f 30ff 	mov.w	r0, #4294967295
 802e7bc:	e78e      	b.n	802e6dc <__sflush_r+0x1c>
 802e7be:	4407      	add	r7, r0
 802e7c0:	eba8 0800 	sub.w	r8, r8, r0
 802e7c4:	e7e9      	b.n	802e79a <__sflush_r+0xda>
 802e7c6:	bf00      	nop
 802e7c8:	dfbffffe 	.word	0xdfbffffe

0802e7cc <_fflush_r>:
 802e7cc:	b538      	push	{r3, r4, r5, lr}
 802e7ce:	690b      	ldr	r3, [r1, #16]
 802e7d0:	4605      	mov	r5, r0
 802e7d2:	460c      	mov	r4, r1
 802e7d4:	b913      	cbnz	r3, 802e7dc <_fflush_r+0x10>
 802e7d6:	2500      	movs	r5, #0
 802e7d8:	4628      	mov	r0, r5
 802e7da:	bd38      	pop	{r3, r4, r5, pc}
 802e7dc:	b118      	cbz	r0, 802e7e6 <_fflush_r+0x1a>
 802e7de:	6a03      	ldr	r3, [r0, #32]
 802e7e0:	b90b      	cbnz	r3, 802e7e6 <_fflush_r+0x1a>
 802e7e2:	f7ff fa2f 	bl	802dc44 <__sinit>
 802e7e6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802e7ea:	2b00      	cmp	r3, #0
 802e7ec:	d0f3      	beq.n	802e7d6 <_fflush_r+0xa>
 802e7ee:	6e62      	ldr	r2, [r4, #100]	; 0x64
 802e7f0:	07d0      	lsls	r0, r2, #31
 802e7f2:	d404      	bmi.n	802e7fe <_fflush_r+0x32>
 802e7f4:	0599      	lsls	r1, r3, #22
 802e7f6:	d402      	bmi.n	802e7fe <_fflush_r+0x32>
 802e7f8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802e7fa:	f7ff fbd2 	bl	802dfa2 <__retarget_lock_acquire_recursive>
 802e7fe:	4628      	mov	r0, r5
 802e800:	4621      	mov	r1, r4
 802e802:	f7ff ff5d 	bl	802e6c0 <__sflush_r>
 802e806:	6e63      	ldr	r3, [r4, #100]	; 0x64
 802e808:	07da      	lsls	r2, r3, #31
 802e80a:	4605      	mov	r5, r0
 802e80c:	d4e4      	bmi.n	802e7d8 <_fflush_r+0xc>
 802e80e:	89a3      	ldrh	r3, [r4, #12]
 802e810:	059b      	lsls	r3, r3, #22
 802e812:	d4e1      	bmi.n	802e7d8 <_fflush_r+0xc>
 802e814:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802e816:	f7ff fbc5 	bl	802dfa4 <__retarget_lock_release_recursive>
 802e81a:	e7dd      	b.n	802e7d8 <_fflush_r+0xc>

0802e81c <__swbuf_r>:
 802e81c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802e81e:	460e      	mov	r6, r1
 802e820:	4614      	mov	r4, r2
 802e822:	4605      	mov	r5, r0
 802e824:	b118      	cbz	r0, 802e82e <__swbuf_r+0x12>
 802e826:	6a03      	ldr	r3, [r0, #32]
 802e828:	b90b      	cbnz	r3, 802e82e <__swbuf_r+0x12>
 802e82a:	f7ff fa0b 	bl	802dc44 <__sinit>
 802e82e:	69a3      	ldr	r3, [r4, #24]
 802e830:	60a3      	str	r3, [r4, #8]
 802e832:	89a3      	ldrh	r3, [r4, #12]
 802e834:	071a      	lsls	r2, r3, #28
 802e836:	d525      	bpl.n	802e884 <__swbuf_r+0x68>
 802e838:	6923      	ldr	r3, [r4, #16]
 802e83a:	b31b      	cbz	r3, 802e884 <__swbuf_r+0x68>
 802e83c:	6823      	ldr	r3, [r4, #0]
 802e83e:	6922      	ldr	r2, [r4, #16]
 802e840:	1a98      	subs	r0, r3, r2
 802e842:	6963      	ldr	r3, [r4, #20]
 802e844:	b2f6      	uxtb	r6, r6
 802e846:	4283      	cmp	r3, r0
 802e848:	4637      	mov	r7, r6
 802e84a:	dc04      	bgt.n	802e856 <__swbuf_r+0x3a>
 802e84c:	4621      	mov	r1, r4
 802e84e:	4628      	mov	r0, r5
 802e850:	f7ff ffbc 	bl	802e7cc <_fflush_r>
 802e854:	b9e0      	cbnz	r0, 802e890 <__swbuf_r+0x74>
 802e856:	68a3      	ldr	r3, [r4, #8]
 802e858:	3b01      	subs	r3, #1
 802e85a:	60a3      	str	r3, [r4, #8]
 802e85c:	6823      	ldr	r3, [r4, #0]
 802e85e:	1c5a      	adds	r2, r3, #1
 802e860:	6022      	str	r2, [r4, #0]
 802e862:	701e      	strb	r6, [r3, #0]
 802e864:	6962      	ldr	r2, [r4, #20]
 802e866:	1c43      	adds	r3, r0, #1
 802e868:	429a      	cmp	r2, r3
 802e86a:	d004      	beq.n	802e876 <__swbuf_r+0x5a>
 802e86c:	89a3      	ldrh	r3, [r4, #12]
 802e86e:	07db      	lsls	r3, r3, #31
 802e870:	d506      	bpl.n	802e880 <__swbuf_r+0x64>
 802e872:	2e0a      	cmp	r6, #10
 802e874:	d104      	bne.n	802e880 <__swbuf_r+0x64>
 802e876:	4621      	mov	r1, r4
 802e878:	4628      	mov	r0, r5
 802e87a:	f7ff ffa7 	bl	802e7cc <_fflush_r>
 802e87e:	b938      	cbnz	r0, 802e890 <__swbuf_r+0x74>
 802e880:	4638      	mov	r0, r7
 802e882:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802e884:	4621      	mov	r1, r4
 802e886:	4628      	mov	r0, r5
 802e888:	f000 f806 	bl	802e898 <__swsetup_r>
 802e88c:	2800      	cmp	r0, #0
 802e88e:	d0d5      	beq.n	802e83c <__swbuf_r+0x20>
 802e890:	f04f 37ff 	mov.w	r7, #4294967295
 802e894:	e7f4      	b.n	802e880 <__swbuf_r+0x64>
	...

0802e898 <__swsetup_r>:
 802e898:	b538      	push	{r3, r4, r5, lr}
 802e89a:	4b2a      	ldr	r3, [pc, #168]	; (802e944 <__swsetup_r+0xac>)
 802e89c:	4605      	mov	r5, r0
 802e89e:	6818      	ldr	r0, [r3, #0]
 802e8a0:	460c      	mov	r4, r1
 802e8a2:	b118      	cbz	r0, 802e8ac <__swsetup_r+0x14>
 802e8a4:	6a03      	ldr	r3, [r0, #32]
 802e8a6:	b90b      	cbnz	r3, 802e8ac <__swsetup_r+0x14>
 802e8a8:	f7ff f9cc 	bl	802dc44 <__sinit>
 802e8ac:	89a3      	ldrh	r3, [r4, #12]
 802e8ae:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802e8b2:	0718      	lsls	r0, r3, #28
 802e8b4:	d422      	bmi.n	802e8fc <__swsetup_r+0x64>
 802e8b6:	06d9      	lsls	r1, r3, #27
 802e8b8:	d407      	bmi.n	802e8ca <__swsetup_r+0x32>
 802e8ba:	2309      	movs	r3, #9
 802e8bc:	602b      	str	r3, [r5, #0]
 802e8be:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 802e8c2:	81a3      	strh	r3, [r4, #12]
 802e8c4:	f04f 30ff 	mov.w	r0, #4294967295
 802e8c8:	e034      	b.n	802e934 <__swsetup_r+0x9c>
 802e8ca:	0758      	lsls	r0, r3, #29
 802e8cc:	d512      	bpl.n	802e8f4 <__swsetup_r+0x5c>
 802e8ce:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802e8d0:	b141      	cbz	r1, 802e8e4 <__swsetup_r+0x4c>
 802e8d2:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802e8d6:	4299      	cmp	r1, r3
 802e8d8:	d002      	beq.n	802e8e0 <__swsetup_r+0x48>
 802e8da:	4628      	mov	r0, r5
 802e8dc:	f7ff fbd0 	bl	802e080 <_free_r>
 802e8e0:	2300      	movs	r3, #0
 802e8e2:	6363      	str	r3, [r4, #52]	; 0x34
 802e8e4:	89a3      	ldrh	r3, [r4, #12]
 802e8e6:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 802e8ea:	81a3      	strh	r3, [r4, #12]
 802e8ec:	2300      	movs	r3, #0
 802e8ee:	6063      	str	r3, [r4, #4]
 802e8f0:	6923      	ldr	r3, [r4, #16]
 802e8f2:	6023      	str	r3, [r4, #0]
 802e8f4:	89a3      	ldrh	r3, [r4, #12]
 802e8f6:	f043 0308 	orr.w	r3, r3, #8
 802e8fa:	81a3      	strh	r3, [r4, #12]
 802e8fc:	6923      	ldr	r3, [r4, #16]
 802e8fe:	b94b      	cbnz	r3, 802e914 <__swsetup_r+0x7c>
 802e900:	89a3      	ldrh	r3, [r4, #12]
 802e902:	f403 7320 	and.w	r3, r3, #640	; 0x280
 802e906:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 802e90a:	d003      	beq.n	802e914 <__swsetup_r+0x7c>
 802e90c:	4621      	mov	r1, r4
 802e90e:	4628      	mov	r0, r5
 802e910:	f000 f840 	bl	802e994 <__smakebuf_r>
 802e914:	89a0      	ldrh	r0, [r4, #12]
 802e916:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802e91a:	f010 0301 	ands.w	r3, r0, #1
 802e91e:	d00a      	beq.n	802e936 <__swsetup_r+0x9e>
 802e920:	2300      	movs	r3, #0
 802e922:	60a3      	str	r3, [r4, #8]
 802e924:	6963      	ldr	r3, [r4, #20]
 802e926:	425b      	negs	r3, r3
 802e928:	61a3      	str	r3, [r4, #24]
 802e92a:	6923      	ldr	r3, [r4, #16]
 802e92c:	b943      	cbnz	r3, 802e940 <__swsetup_r+0xa8>
 802e92e:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 802e932:	d1c4      	bne.n	802e8be <__swsetup_r+0x26>
 802e934:	bd38      	pop	{r3, r4, r5, pc}
 802e936:	0781      	lsls	r1, r0, #30
 802e938:	bf58      	it	pl
 802e93a:	6963      	ldrpl	r3, [r4, #20]
 802e93c:	60a3      	str	r3, [r4, #8]
 802e93e:	e7f4      	b.n	802e92a <__swsetup_r+0x92>
 802e940:	2000      	movs	r0, #0
 802e942:	e7f7      	b.n	802e934 <__swsetup_r+0x9c>
 802e944:	20000164 	.word	0x20000164

0802e948 <__swhatbuf_r>:
 802e948:	b570      	push	{r4, r5, r6, lr}
 802e94a:	460c      	mov	r4, r1
 802e94c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802e950:	2900      	cmp	r1, #0
 802e952:	b096      	sub	sp, #88	; 0x58
 802e954:	4615      	mov	r5, r2
 802e956:	461e      	mov	r6, r3
 802e958:	da0d      	bge.n	802e976 <__swhatbuf_r+0x2e>
 802e95a:	89a3      	ldrh	r3, [r4, #12]
 802e95c:	f013 0f80 	tst.w	r3, #128	; 0x80
 802e960:	f04f 0100 	mov.w	r1, #0
 802e964:	bf0c      	ite	eq
 802e966:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 802e96a:	2340      	movne	r3, #64	; 0x40
 802e96c:	2000      	movs	r0, #0
 802e96e:	6031      	str	r1, [r6, #0]
 802e970:	602b      	str	r3, [r5, #0]
 802e972:	b016      	add	sp, #88	; 0x58
 802e974:	bd70      	pop	{r4, r5, r6, pc}
 802e976:	466a      	mov	r2, sp
 802e978:	f000 f848 	bl	802ea0c <_fstat_r>
 802e97c:	2800      	cmp	r0, #0
 802e97e:	dbec      	blt.n	802e95a <__swhatbuf_r+0x12>
 802e980:	9901      	ldr	r1, [sp, #4]
 802e982:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 802e986:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 802e98a:	4259      	negs	r1, r3
 802e98c:	4159      	adcs	r1, r3
 802e98e:	f44f 6380 	mov.w	r3, #1024	; 0x400
 802e992:	e7eb      	b.n	802e96c <__swhatbuf_r+0x24>

0802e994 <__smakebuf_r>:
 802e994:	898b      	ldrh	r3, [r1, #12]
 802e996:	b573      	push	{r0, r1, r4, r5, r6, lr}
 802e998:	079d      	lsls	r5, r3, #30
 802e99a:	4606      	mov	r6, r0
 802e99c:	460c      	mov	r4, r1
 802e99e:	d507      	bpl.n	802e9b0 <__smakebuf_r+0x1c>
 802e9a0:	f104 0347 	add.w	r3, r4, #71	; 0x47
 802e9a4:	6023      	str	r3, [r4, #0]
 802e9a6:	6123      	str	r3, [r4, #16]
 802e9a8:	2301      	movs	r3, #1
 802e9aa:	6163      	str	r3, [r4, #20]
 802e9ac:	b002      	add	sp, #8
 802e9ae:	bd70      	pop	{r4, r5, r6, pc}
 802e9b0:	ab01      	add	r3, sp, #4
 802e9b2:	466a      	mov	r2, sp
 802e9b4:	f7ff ffc8 	bl	802e948 <__swhatbuf_r>
 802e9b8:	9900      	ldr	r1, [sp, #0]
 802e9ba:	4605      	mov	r5, r0
 802e9bc:	4630      	mov	r0, r6
 802e9be:	f7ff f81b 	bl	802d9f8 <_malloc_r>
 802e9c2:	b948      	cbnz	r0, 802e9d8 <__smakebuf_r+0x44>
 802e9c4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802e9c8:	059a      	lsls	r2, r3, #22
 802e9ca:	d4ef      	bmi.n	802e9ac <__smakebuf_r+0x18>
 802e9cc:	f023 0303 	bic.w	r3, r3, #3
 802e9d0:	f043 0302 	orr.w	r3, r3, #2
 802e9d4:	81a3      	strh	r3, [r4, #12]
 802e9d6:	e7e3      	b.n	802e9a0 <__smakebuf_r+0xc>
 802e9d8:	89a3      	ldrh	r3, [r4, #12]
 802e9da:	6020      	str	r0, [r4, #0]
 802e9dc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 802e9e0:	81a3      	strh	r3, [r4, #12]
 802e9e2:	9b00      	ldr	r3, [sp, #0]
 802e9e4:	6163      	str	r3, [r4, #20]
 802e9e6:	9b01      	ldr	r3, [sp, #4]
 802e9e8:	6120      	str	r0, [r4, #16]
 802e9ea:	b15b      	cbz	r3, 802ea04 <__smakebuf_r+0x70>
 802e9ec:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802e9f0:	4630      	mov	r0, r6
 802e9f2:	f000 f81d 	bl	802ea30 <_isatty_r>
 802e9f6:	b128      	cbz	r0, 802ea04 <__smakebuf_r+0x70>
 802e9f8:	89a3      	ldrh	r3, [r4, #12]
 802e9fa:	f023 0303 	bic.w	r3, r3, #3
 802e9fe:	f043 0301 	orr.w	r3, r3, #1
 802ea02:	81a3      	strh	r3, [r4, #12]
 802ea04:	89a3      	ldrh	r3, [r4, #12]
 802ea06:	431d      	orrs	r5, r3
 802ea08:	81a5      	strh	r5, [r4, #12]
 802ea0a:	e7cf      	b.n	802e9ac <__smakebuf_r+0x18>

0802ea0c <_fstat_r>:
 802ea0c:	b538      	push	{r3, r4, r5, lr}
 802ea0e:	4d07      	ldr	r5, [pc, #28]	; (802ea2c <_fstat_r+0x20>)
 802ea10:	2300      	movs	r3, #0
 802ea12:	4604      	mov	r4, r0
 802ea14:	4608      	mov	r0, r1
 802ea16:	4611      	mov	r1, r2
 802ea18:	602b      	str	r3, [r5, #0]
 802ea1a:	f7d3 ff67 	bl	80028ec <_fstat>
 802ea1e:	1c43      	adds	r3, r0, #1
 802ea20:	d102      	bne.n	802ea28 <_fstat_r+0x1c>
 802ea22:	682b      	ldr	r3, [r5, #0]
 802ea24:	b103      	cbz	r3, 802ea28 <_fstat_r+0x1c>
 802ea26:	6023      	str	r3, [r4, #0]
 802ea28:	bd38      	pop	{r3, r4, r5, pc}
 802ea2a:	bf00      	nop
 802ea2c:	200142d4 	.word	0x200142d4

0802ea30 <_isatty_r>:
 802ea30:	b538      	push	{r3, r4, r5, lr}
 802ea32:	4d06      	ldr	r5, [pc, #24]	; (802ea4c <_isatty_r+0x1c>)
 802ea34:	2300      	movs	r3, #0
 802ea36:	4604      	mov	r4, r0
 802ea38:	4608      	mov	r0, r1
 802ea3a:	602b      	str	r3, [r5, #0]
 802ea3c:	f7d3 ff5c 	bl	80028f8 <_isatty>
 802ea40:	1c43      	adds	r3, r0, #1
 802ea42:	d102      	bne.n	802ea4a <_isatty_r+0x1a>
 802ea44:	682b      	ldr	r3, [r5, #0]
 802ea46:	b103      	cbz	r3, 802ea4a <_isatty_r+0x1a>
 802ea48:	6023      	str	r3, [r4, #0]
 802ea4a:	bd38      	pop	{r3, r4, r5, pc}
 802ea4c:	200142d4 	.word	0x200142d4

0802ea50 <_init>:
 802ea50:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802ea52:	bf00      	nop
 802ea54:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802ea56:	bc08      	pop	{r3}
 802ea58:	469e      	mov	lr, r3
 802ea5a:	4770      	bx	lr

0802ea5c <_fini>:
 802ea5c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802ea5e:	bf00      	nop
 802ea60:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802ea62:	bc08      	pop	{r3}
 802ea64:	469e      	mov	lr, r3
 802ea66:	4770      	bx	lr

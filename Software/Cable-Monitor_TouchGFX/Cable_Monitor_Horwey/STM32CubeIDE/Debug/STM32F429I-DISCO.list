
STM32F429I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0002e820  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000171d0  0802e9d0  0802e9d0  0003e9d0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 00003cf6  08045ba0  08045ba0  00055ba0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 0000024c  08049898  08049898  00059898  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 00000734  08049ae4  08049ae4  00059ae4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 000850f0  0804a218  0804a218  0005a218  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  080cf308  080cf308  000e016c  2**0
                  CONTENTS
  8 .ARM          00000008  080cf308  080cf308  000df308  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  080cf310  080cf310  000e016c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  080cf310  080cf310  000df310  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000004  080cf324  080cf324  000df324  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         0000016c  20000000  080cf328  000e0000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          00014314  20000170  080cf494  000e0170  2**3
                  ALLOC
 14 ._user_heap_stack 00001404  20014484  080cf494  000e4484  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  000e016c  2**0
                  CONTENTS, READONLY
 16 TouchGFX_Framebuffer 00070800  d0000000  d0000000  000f0000  2**2
                  ALLOC
 17 .comment      00000132  00000000  00000000  000e019c  2**0
                  CONTENTS, READONLY
 18 .debug_line   00095ebd  00000000  00000000  000e02ce  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line_str 00000093  00000000  00000000  0017618b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_info   00246dd6  00000000  00000000  0017621e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_abbrev 0002c786  00000000  00000000  003bcff4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_aranges 00004458  00000000  00000000  003e9780  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_str    0011fb67  00000000  00000000  003edbd8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_rnglists 0000879d  00000000  00000000  0050d73f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_loclists 000357f0  00000000  00000000  00515edc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_macro  0003ab42  00000000  00000000  0054b6cc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_frame  0000ccf0  00000000  00000000  00586210  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 28 .debug_loc    00003378  00000000  00000000  00592f00  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 29 .debug_ranges 00000140  00000000  00000000  00596278  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000170 	.word	0x20000170
 80001cc:	00000000 	.word	0x00000000
 80001d0:	0802e9b8 	.word	0x0802e9b8

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000174 	.word	0x20000174
 80001ec:	0802e9b8 	.word	0x0802e9b8

080001f0 <arm_bitreversal_32>:
 80001f0:	1c4b      	adds	r3, r1, #1
 80001f2:	2b01      	cmp	r3, #1
 80001f4:	bf98      	it	ls
 80001f6:	4770      	bxls	lr
 80001f8:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
 80001fc:	1c91      	adds	r1, r2, #2
 80001fe:	089b      	lsrs	r3, r3, #2

08000200 <arm_bitreversal_32_0>:
 8000200:	f8b1 8004 	ldrh.w	r8, [r1, #4]
 8000204:	f8b1 9002 	ldrh.w	r9, [r1, #2]
 8000208:	880a      	ldrh	r2, [r1, #0]
 800020a:	f831 cc02 	ldrh.w	ip, [r1, #-2]
 800020e:	4480      	add	r8, r0
 8000210:	4481      	add	r9, r0
 8000212:	4402      	add	r2, r0
 8000214:	4484      	add	ip, r0
 8000216:	f8d9 7000 	ldr.w	r7, [r9]
 800021a:	f8d8 6000 	ldr.w	r6, [r8]
 800021e:	6815      	ldr	r5, [r2, #0]
 8000220:	f8dc 4000 	ldr.w	r4, [ip]
 8000224:	f8c9 6000 	str.w	r6, [r9]
 8000228:	f8c8 7000 	str.w	r7, [r8]
 800022c:	f8cc 5000 	str.w	r5, [ip]
 8000230:	6014      	str	r4, [r2, #0]
 8000232:	f8d9 7004 	ldr.w	r7, [r9, #4]
 8000236:	f8d8 6004 	ldr.w	r6, [r8, #4]
 800023a:	6855      	ldr	r5, [r2, #4]
 800023c:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8000240:	f8c9 6004 	str.w	r6, [r9, #4]
 8000244:	f8c8 7004 	str.w	r7, [r8, #4]
 8000248:	f8cc 5004 	str.w	r5, [ip, #4]
 800024c:	6054      	str	r4, [r2, #4]
 800024e:	3108      	adds	r1, #8
 8000250:	3b01      	subs	r3, #1
 8000252:	d1d5      	bne.n	8000200 <arm_bitreversal_32_0>
 8000254:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
 8000258:	4770      	bx	lr

0800025a <arm_bitreversal_16>:
 800025a:	1c4b      	adds	r3, r1, #1
 800025c:	2b01      	cmp	r3, #1
 800025e:	bf98      	it	ls
 8000260:	4770      	bxls	lr
 8000262:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
 8000266:	1c91      	adds	r1, r2, #2
 8000268:	089b      	lsrs	r3, r3, #2

0800026a <arm_bitreversal_16_0>:
 800026a:	f8b1 8004 	ldrh.w	r8, [r1, #4]
 800026e:	f8b1 9002 	ldrh.w	r9, [r1, #2]
 8000272:	880a      	ldrh	r2, [r1, #0]
 8000274:	f831 cc02 	ldrh.w	ip, [r1, #-2]
 8000278:	eb00 0858 	add.w	r8, r0, r8, lsr #1
 800027c:	eb00 0959 	add.w	r9, r0, r9, lsr #1
 8000280:	eb00 0252 	add.w	r2, r0, r2, lsr #1
 8000284:	eb00 0c5c 	add.w	ip, r0, ip, lsr #1
 8000288:	f8d9 7000 	ldr.w	r7, [r9]
 800028c:	f8d8 6000 	ldr.w	r6, [r8]
 8000290:	6815      	ldr	r5, [r2, #0]
 8000292:	f8dc 4000 	ldr.w	r4, [ip]
 8000296:	f8c9 6000 	str.w	r6, [r9]
 800029a:	f8c8 7000 	str.w	r7, [r8]
 800029e:	f8cc 5000 	str.w	r5, [ip]
 80002a2:	6014      	str	r4, [r2, #0]
 80002a4:	3108      	adds	r1, #8
 80002a6:	3b01      	subs	r3, #1
 80002a8:	d1df      	bne.n	800026a <arm_bitreversal_16_0>
 80002aa:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
 80002ae:	4770      	bx	lr

080002b0 <memchr>:
 80002b0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80002b4:	2a10      	cmp	r2, #16
 80002b6:	db2b      	blt.n	8000310 <memchr+0x60>
 80002b8:	f010 0f07 	tst.w	r0, #7
 80002bc:	d008      	beq.n	80002d0 <memchr+0x20>
 80002be:	f810 3b01 	ldrb.w	r3, [r0], #1
 80002c2:	3a01      	subs	r2, #1
 80002c4:	428b      	cmp	r3, r1
 80002c6:	d02d      	beq.n	8000324 <memchr+0x74>
 80002c8:	f010 0f07 	tst.w	r0, #7
 80002cc:	b342      	cbz	r2, 8000320 <memchr+0x70>
 80002ce:	d1f6      	bne.n	80002be <memchr+0xe>
 80002d0:	b4f0      	push	{r4, r5, r6, r7}
 80002d2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80002d6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80002da:	f022 0407 	bic.w	r4, r2, #7
 80002de:	f07f 0700 	mvns.w	r7, #0
 80002e2:	2300      	movs	r3, #0
 80002e4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 80002e8:	3c08      	subs	r4, #8
 80002ea:	ea85 0501 	eor.w	r5, r5, r1
 80002ee:	ea86 0601 	eor.w	r6, r6, r1
 80002f2:	fa85 f547 	uadd8	r5, r5, r7
 80002f6:	faa3 f587 	sel	r5, r3, r7
 80002fa:	fa86 f647 	uadd8	r6, r6, r7
 80002fe:	faa5 f687 	sel	r6, r5, r7
 8000302:	b98e      	cbnz	r6, 8000328 <memchr+0x78>
 8000304:	d1ee      	bne.n	80002e4 <memchr+0x34>
 8000306:	bcf0      	pop	{r4, r5, r6, r7}
 8000308:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800030c:	f002 0207 	and.w	r2, r2, #7
 8000310:	b132      	cbz	r2, 8000320 <memchr+0x70>
 8000312:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000316:	3a01      	subs	r2, #1
 8000318:	ea83 0301 	eor.w	r3, r3, r1
 800031c:	b113      	cbz	r3, 8000324 <memchr+0x74>
 800031e:	d1f8      	bne.n	8000312 <memchr+0x62>
 8000320:	2000      	movs	r0, #0
 8000322:	4770      	bx	lr
 8000324:	3801      	subs	r0, #1
 8000326:	4770      	bx	lr
 8000328:	2d00      	cmp	r5, #0
 800032a:	bf06      	itte	eq
 800032c:	4635      	moveq	r5, r6
 800032e:	3803      	subeq	r0, #3
 8000330:	3807      	subne	r0, #7
 8000332:	f015 0f01 	tst.w	r5, #1
 8000336:	d107      	bne.n	8000348 <memchr+0x98>
 8000338:	3001      	adds	r0, #1
 800033a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800033e:	bf02      	ittt	eq
 8000340:	3001      	addeq	r0, #1
 8000342:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000346:	3001      	addeq	r0, #1
 8000348:	bcf0      	pop	{r4, r5, r6, r7}
 800034a:	3801      	subs	r0, #1
 800034c:	4770      	bx	lr
 800034e:	bf00      	nop

08000350 <__aeabi_drsub>:
 8000350:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000354:	e002      	b.n	800035c <__adddf3>
 8000356:	bf00      	nop

08000358 <__aeabi_dsub>:
 8000358:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800035c <__adddf3>:
 800035c:	b530      	push	{r4, r5, lr}
 800035e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000362:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000366:	ea94 0f05 	teq	r4, r5
 800036a:	bf08      	it	eq
 800036c:	ea90 0f02 	teqeq	r0, r2
 8000370:	bf1f      	itttt	ne
 8000372:	ea54 0c00 	orrsne.w	ip, r4, r0
 8000376:	ea55 0c02 	orrsne.w	ip, r5, r2
 800037a:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 800037e:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000382:	f000 80e2 	beq.w	800054a <__adddf3+0x1ee>
 8000386:	ea4f 5454 	mov.w	r4, r4, lsr #21
 800038a:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 800038e:	bfb8      	it	lt
 8000390:	426d      	neglt	r5, r5
 8000392:	dd0c      	ble.n	80003ae <__adddf3+0x52>
 8000394:	442c      	add	r4, r5
 8000396:	ea80 0202 	eor.w	r2, r0, r2
 800039a:	ea81 0303 	eor.w	r3, r1, r3
 800039e:	ea82 0000 	eor.w	r0, r2, r0
 80003a2:	ea83 0101 	eor.w	r1, r3, r1
 80003a6:	ea80 0202 	eor.w	r2, r0, r2
 80003aa:	ea81 0303 	eor.w	r3, r1, r3
 80003ae:	2d36      	cmp	r5, #54	; 0x36
 80003b0:	bf88      	it	hi
 80003b2:	bd30      	pophi	{r4, r5, pc}
 80003b4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80003b8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80003bc:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 80003c0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80003c4:	d002      	beq.n	80003cc <__adddf3+0x70>
 80003c6:	4240      	negs	r0, r0
 80003c8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80003cc:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 80003d0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80003d4:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 80003d8:	d002      	beq.n	80003e0 <__adddf3+0x84>
 80003da:	4252      	negs	r2, r2
 80003dc:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80003e0:	ea94 0f05 	teq	r4, r5
 80003e4:	f000 80a7 	beq.w	8000536 <__adddf3+0x1da>
 80003e8:	f1a4 0401 	sub.w	r4, r4, #1
 80003ec:	f1d5 0e20 	rsbs	lr, r5, #32
 80003f0:	db0d      	blt.n	800040e <__adddf3+0xb2>
 80003f2:	fa02 fc0e 	lsl.w	ip, r2, lr
 80003f6:	fa22 f205 	lsr.w	r2, r2, r5
 80003fa:	1880      	adds	r0, r0, r2
 80003fc:	f141 0100 	adc.w	r1, r1, #0
 8000400:	fa03 f20e 	lsl.w	r2, r3, lr
 8000404:	1880      	adds	r0, r0, r2
 8000406:	fa43 f305 	asr.w	r3, r3, r5
 800040a:	4159      	adcs	r1, r3
 800040c:	e00e      	b.n	800042c <__adddf3+0xd0>
 800040e:	f1a5 0520 	sub.w	r5, r5, #32
 8000412:	f10e 0e20 	add.w	lr, lr, #32
 8000416:	2a01      	cmp	r2, #1
 8000418:	fa03 fc0e 	lsl.w	ip, r3, lr
 800041c:	bf28      	it	cs
 800041e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000422:	fa43 f305 	asr.w	r3, r3, r5
 8000426:	18c0      	adds	r0, r0, r3
 8000428:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800042c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000430:	d507      	bpl.n	8000442 <__adddf3+0xe6>
 8000432:	f04f 0e00 	mov.w	lr, #0
 8000436:	f1dc 0c00 	rsbs	ip, ip, #0
 800043a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800043e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000442:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000446:	d31b      	bcc.n	8000480 <__adddf3+0x124>
 8000448:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800044c:	d30c      	bcc.n	8000468 <__adddf3+0x10c>
 800044e:	0849      	lsrs	r1, r1, #1
 8000450:	ea5f 0030 	movs.w	r0, r0, rrx
 8000454:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000458:	f104 0401 	add.w	r4, r4, #1
 800045c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000460:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8000464:	f080 809a 	bcs.w	800059c <__adddf3+0x240>
 8000468:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 800046c:	bf08      	it	eq
 800046e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000472:	f150 0000 	adcs.w	r0, r0, #0
 8000476:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800047a:	ea41 0105 	orr.w	r1, r1, r5
 800047e:	bd30      	pop	{r4, r5, pc}
 8000480:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000484:	4140      	adcs	r0, r0
 8000486:	eb41 0101 	adc.w	r1, r1, r1
 800048a:	3c01      	subs	r4, #1
 800048c:	bf28      	it	cs
 800048e:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 8000492:	d2e9      	bcs.n	8000468 <__adddf3+0x10c>
 8000494:	f091 0f00 	teq	r1, #0
 8000498:	bf04      	itt	eq
 800049a:	4601      	moveq	r1, r0
 800049c:	2000      	moveq	r0, #0
 800049e:	fab1 f381 	clz	r3, r1
 80004a2:	bf08      	it	eq
 80004a4:	3320      	addeq	r3, #32
 80004a6:	f1a3 030b 	sub.w	r3, r3, #11
 80004aa:	f1b3 0220 	subs.w	r2, r3, #32
 80004ae:	da0c      	bge.n	80004ca <__adddf3+0x16e>
 80004b0:	320c      	adds	r2, #12
 80004b2:	dd08      	ble.n	80004c6 <__adddf3+0x16a>
 80004b4:	f102 0c14 	add.w	ip, r2, #20
 80004b8:	f1c2 020c 	rsb	r2, r2, #12
 80004bc:	fa01 f00c 	lsl.w	r0, r1, ip
 80004c0:	fa21 f102 	lsr.w	r1, r1, r2
 80004c4:	e00c      	b.n	80004e0 <__adddf3+0x184>
 80004c6:	f102 0214 	add.w	r2, r2, #20
 80004ca:	bfd8      	it	le
 80004cc:	f1c2 0c20 	rsble	ip, r2, #32
 80004d0:	fa01 f102 	lsl.w	r1, r1, r2
 80004d4:	fa20 fc0c 	lsr.w	ip, r0, ip
 80004d8:	bfdc      	itt	le
 80004da:	ea41 010c 	orrle.w	r1, r1, ip
 80004de:	4090      	lslle	r0, r2
 80004e0:	1ae4      	subs	r4, r4, r3
 80004e2:	bfa2      	ittt	ge
 80004e4:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80004e8:	4329      	orrge	r1, r5
 80004ea:	bd30      	popge	{r4, r5, pc}
 80004ec:	ea6f 0404 	mvn.w	r4, r4
 80004f0:	3c1f      	subs	r4, #31
 80004f2:	da1c      	bge.n	800052e <__adddf3+0x1d2>
 80004f4:	340c      	adds	r4, #12
 80004f6:	dc0e      	bgt.n	8000516 <__adddf3+0x1ba>
 80004f8:	f104 0414 	add.w	r4, r4, #20
 80004fc:	f1c4 0220 	rsb	r2, r4, #32
 8000500:	fa20 f004 	lsr.w	r0, r0, r4
 8000504:	fa01 f302 	lsl.w	r3, r1, r2
 8000508:	ea40 0003 	orr.w	r0, r0, r3
 800050c:	fa21 f304 	lsr.w	r3, r1, r4
 8000510:	ea45 0103 	orr.w	r1, r5, r3
 8000514:	bd30      	pop	{r4, r5, pc}
 8000516:	f1c4 040c 	rsb	r4, r4, #12
 800051a:	f1c4 0220 	rsb	r2, r4, #32
 800051e:	fa20 f002 	lsr.w	r0, r0, r2
 8000522:	fa01 f304 	lsl.w	r3, r1, r4
 8000526:	ea40 0003 	orr.w	r0, r0, r3
 800052a:	4629      	mov	r1, r5
 800052c:	bd30      	pop	{r4, r5, pc}
 800052e:	fa21 f004 	lsr.w	r0, r1, r4
 8000532:	4629      	mov	r1, r5
 8000534:	bd30      	pop	{r4, r5, pc}
 8000536:	f094 0f00 	teq	r4, #0
 800053a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800053e:	bf06      	itte	eq
 8000540:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000544:	3401      	addeq	r4, #1
 8000546:	3d01      	subne	r5, #1
 8000548:	e74e      	b.n	80003e8 <__adddf3+0x8c>
 800054a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800054e:	bf18      	it	ne
 8000550:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000554:	d029      	beq.n	80005aa <__adddf3+0x24e>
 8000556:	ea94 0f05 	teq	r4, r5
 800055a:	bf08      	it	eq
 800055c:	ea90 0f02 	teqeq	r0, r2
 8000560:	d005      	beq.n	800056e <__adddf3+0x212>
 8000562:	ea54 0c00 	orrs.w	ip, r4, r0
 8000566:	bf04      	itt	eq
 8000568:	4619      	moveq	r1, r3
 800056a:	4610      	moveq	r0, r2
 800056c:	bd30      	pop	{r4, r5, pc}
 800056e:	ea91 0f03 	teq	r1, r3
 8000572:	bf1e      	ittt	ne
 8000574:	2100      	movne	r1, #0
 8000576:	2000      	movne	r0, #0
 8000578:	bd30      	popne	{r4, r5, pc}
 800057a:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 800057e:	d105      	bne.n	800058c <__adddf3+0x230>
 8000580:	0040      	lsls	r0, r0, #1
 8000582:	4149      	adcs	r1, r1
 8000584:	bf28      	it	cs
 8000586:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 800058a:	bd30      	pop	{r4, r5, pc}
 800058c:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8000590:	bf3c      	itt	cc
 8000592:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 8000596:	bd30      	popcc	{r4, r5, pc}
 8000598:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 800059c:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80005a0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80005a4:	f04f 0000 	mov.w	r0, #0
 80005a8:	bd30      	pop	{r4, r5, pc}
 80005aa:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80005ae:	bf1a      	itte	ne
 80005b0:	4619      	movne	r1, r3
 80005b2:	4610      	movne	r0, r2
 80005b4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80005b8:	bf1c      	itt	ne
 80005ba:	460b      	movne	r3, r1
 80005bc:	4602      	movne	r2, r0
 80005be:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80005c2:	bf06      	itte	eq
 80005c4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80005c8:	ea91 0f03 	teqeq	r1, r3
 80005cc:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 80005d0:	bd30      	pop	{r4, r5, pc}
 80005d2:	bf00      	nop

080005d4 <__aeabi_ui2d>:
 80005d4:	f090 0f00 	teq	r0, #0
 80005d8:	bf04      	itt	eq
 80005da:	2100      	moveq	r1, #0
 80005dc:	4770      	bxeq	lr
 80005de:	b530      	push	{r4, r5, lr}
 80005e0:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005e4:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005e8:	f04f 0500 	mov.w	r5, #0
 80005ec:	f04f 0100 	mov.w	r1, #0
 80005f0:	e750      	b.n	8000494 <__adddf3+0x138>
 80005f2:	bf00      	nop

080005f4 <__aeabi_i2d>:
 80005f4:	f090 0f00 	teq	r0, #0
 80005f8:	bf04      	itt	eq
 80005fa:	2100      	moveq	r1, #0
 80005fc:	4770      	bxeq	lr
 80005fe:	b530      	push	{r4, r5, lr}
 8000600:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000604:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000608:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800060c:	bf48      	it	mi
 800060e:	4240      	negmi	r0, r0
 8000610:	f04f 0100 	mov.w	r1, #0
 8000614:	e73e      	b.n	8000494 <__adddf3+0x138>
 8000616:	bf00      	nop

08000618 <__aeabi_f2d>:
 8000618:	0042      	lsls	r2, r0, #1
 800061a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800061e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000622:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000626:	bf1f      	itttt	ne
 8000628:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800062c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000630:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000634:	4770      	bxne	lr
 8000636:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800063a:	bf08      	it	eq
 800063c:	4770      	bxeq	lr
 800063e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000642:	bf04      	itt	eq
 8000644:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000648:	4770      	bxeq	lr
 800064a:	b530      	push	{r4, r5, lr}
 800064c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000650:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000654:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000658:	e71c      	b.n	8000494 <__adddf3+0x138>
 800065a:	bf00      	nop

0800065c <__aeabi_ul2d>:
 800065c:	ea50 0201 	orrs.w	r2, r0, r1
 8000660:	bf08      	it	eq
 8000662:	4770      	bxeq	lr
 8000664:	b530      	push	{r4, r5, lr}
 8000666:	f04f 0500 	mov.w	r5, #0
 800066a:	e00a      	b.n	8000682 <__aeabi_l2d+0x16>

0800066c <__aeabi_l2d>:
 800066c:	ea50 0201 	orrs.w	r2, r0, r1
 8000670:	bf08      	it	eq
 8000672:	4770      	bxeq	lr
 8000674:	b530      	push	{r4, r5, lr}
 8000676:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 800067a:	d502      	bpl.n	8000682 <__aeabi_l2d+0x16>
 800067c:	4240      	negs	r0, r0
 800067e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000682:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000686:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800068a:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 800068e:	f43f aed8 	beq.w	8000442 <__adddf3+0xe6>
 8000692:	f04f 0203 	mov.w	r2, #3
 8000696:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800069a:	bf18      	it	ne
 800069c:	3203      	addne	r2, #3
 800069e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80006a2:	bf18      	it	ne
 80006a4:	3203      	addne	r2, #3
 80006a6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80006aa:	f1c2 0320 	rsb	r3, r2, #32
 80006ae:	fa00 fc03 	lsl.w	ip, r0, r3
 80006b2:	fa20 f002 	lsr.w	r0, r0, r2
 80006b6:	fa01 fe03 	lsl.w	lr, r1, r3
 80006ba:	ea40 000e 	orr.w	r0, r0, lr
 80006be:	fa21 f102 	lsr.w	r1, r1, r2
 80006c2:	4414      	add	r4, r2
 80006c4:	e6bd      	b.n	8000442 <__adddf3+0xe6>
 80006c6:	bf00      	nop

080006c8 <__aeabi_dmul>:
 80006c8:	b570      	push	{r4, r5, r6, lr}
 80006ca:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80006ce:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 80006d2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80006d6:	bf1d      	ittte	ne
 80006d8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80006dc:	ea94 0f0c 	teqne	r4, ip
 80006e0:	ea95 0f0c 	teqne	r5, ip
 80006e4:	f000 f8de 	bleq	80008a4 <__aeabi_dmul+0x1dc>
 80006e8:	442c      	add	r4, r5
 80006ea:	ea81 0603 	eor.w	r6, r1, r3
 80006ee:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 80006f2:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 80006f6:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 80006fa:	bf18      	it	ne
 80006fc:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000700:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000704:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000708:	d038      	beq.n	800077c <__aeabi_dmul+0xb4>
 800070a:	fba0 ce02 	umull	ip, lr, r0, r2
 800070e:	f04f 0500 	mov.w	r5, #0
 8000712:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000716:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800071a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800071e:	f04f 0600 	mov.w	r6, #0
 8000722:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000726:	f09c 0f00 	teq	ip, #0
 800072a:	bf18      	it	ne
 800072c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000730:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000734:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000738:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800073c:	d204      	bcs.n	8000748 <__aeabi_dmul+0x80>
 800073e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000742:	416d      	adcs	r5, r5
 8000744:	eb46 0606 	adc.w	r6, r6, r6
 8000748:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800074c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000750:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000754:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000758:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800075c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000760:	bf88      	it	hi
 8000762:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000766:	d81e      	bhi.n	80007a6 <__aeabi_dmul+0xde>
 8000768:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 800076c:	bf08      	it	eq
 800076e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 8000772:	f150 0000 	adcs.w	r0, r0, #0
 8000776:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800077a:	bd70      	pop	{r4, r5, r6, pc}
 800077c:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 8000780:	ea46 0101 	orr.w	r1, r6, r1
 8000784:	ea40 0002 	orr.w	r0, r0, r2
 8000788:	ea81 0103 	eor.w	r1, r1, r3
 800078c:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000790:	bfc2      	ittt	gt
 8000792:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000796:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800079a:	bd70      	popgt	{r4, r5, r6, pc}
 800079c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80007a0:	f04f 0e00 	mov.w	lr, #0
 80007a4:	3c01      	subs	r4, #1
 80007a6:	f300 80ab 	bgt.w	8000900 <__aeabi_dmul+0x238>
 80007aa:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80007ae:	bfde      	ittt	le
 80007b0:	2000      	movle	r0, #0
 80007b2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80007b6:	bd70      	pople	{r4, r5, r6, pc}
 80007b8:	f1c4 0400 	rsb	r4, r4, #0
 80007bc:	3c20      	subs	r4, #32
 80007be:	da35      	bge.n	800082c <__aeabi_dmul+0x164>
 80007c0:	340c      	adds	r4, #12
 80007c2:	dc1b      	bgt.n	80007fc <__aeabi_dmul+0x134>
 80007c4:	f104 0414 	add.w	r4, r4, #20
 80007c8:	f1c4 0520 	rsb	r5, r4, #32
 80007cc:	fa00 f305 	lsl.w	r3, r0, r5
 80007d0:	fa20 f004 	lsr.w	r0, r0, r4
 80007d4:	fa01 f205 	lsl.w	r2, r1, r5
 80007d8:	ea40 0002 	orr.w	r0, r0, r2
 80007dc:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 80007e0:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80007e4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80007e8:	fa21 f604 	lsr.w	r6, r1, r4
 80007ec:	eb42 0106 	adc.w	r1, r2, r6
 80007f0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007f4:	bf08      	it	eq
 80007f6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007fa:	bd70      	pop	{r4, r5, r6, pc}
 80007fc:	f1c4 040c 	rsb	r4, r4, #12
 8000800:	f1c4 0520 	rsb	r5, r4, #32
 8000804:	fa00 f304 	lsl.w	r3, r0, r4
 8000808:	fa20 f005 	lsr.w	r0, r0, r5
 800080c:	fa01 f204 	lsl.w	r2, r1, r4
 8000810:	ea40 0002 	orr.w	r0, r0, r2
 8000814:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000818:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800081c:	f141 0100 	adc.w	r1, r1, #0
 8000820:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000824:	bf08      	it	eq
 8000826:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800082a:	bd70      	pop	{r4, r5, r6, pc}
 800082c:	f1c4 0520 	rsb	r5, r4, #32
 8000830:	fa00 f205 	lsl.w	r2, r0, r5
 8000834:	ea4e 0e02 	orr.w	lr, lr, r2
 8000838:	fa20 f304 	lsr.w	r3, r0, r4
 800083c:	fa01 f205 	lsl.w	r2, r1, r5
 8000840:	ea43 0302 	orr.w	r3, r3, r2
 8000844:	fa21 f004 	lsr.w	r0, r1, r4
 8000848:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800084c:	fa21 f204 	lsr.w	r2, r1, r4
 8000850:	ea20 0002 	bic.w	r0, r0, r2
 8000854:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000858:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800085c:	bf08      	it	eq
 800085e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000862:	bd70      	pop	{r4, r5, r6, pc}
 8000864:	f094 0f00 	teq	r4, #0
 8000868:	d10f      	bne.n	800088a <__aeabi_dmul+0x1c2>
 800086a:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 800086e:	0040      	lsls	r0, r0, #1
 8000870:	eb41 0101 	adc.w	r1, r1, r1
 8000874:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000878:	bf08      	it	eq
 800087a:	3c01      	subeq	r4, #1
 800087c:	d0f7      	beq.n	800086e <__aeabi_dmul+0x1a6>
 800087e:	ea41 0106 	orr.w	r1, r1, r6
 8000882:	f095 0f00 	teq	r5, #0
 8000886:	bf18      	it	ne
 8000888:	4770      	bxne	lr
 800088a:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 800088e:	0052      	lsls	r2, r2, #1
 8000890:	eb43 0303 	adc.w	r3, r3, r3
 8000894:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000898:	bf08      	it	eq
 800089a:	3d01      	subeq	r5, #1
 800089c:	d0f7      	beq.n	800088e <__aeabi_dmul+0x1c6>
 800089e:	ea43 0306 	orr.w	r3, r3, r6
 80008a2:	4770      	bx	lr
 80008a4:	ea94 0f0c 	teq	r4, ip
 80008a8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80008ac:	bf18      	it	ne
 80008ae:	ea95 0f0c 	teqne	r5, ip
 80008b2:	d00c      	beq.n	80008ce <__aeabi_dmul+0x206>
 80008b4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80008b8:	bf18      	it	ne
 80008ba:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80008be:	d1d1      	bne.n	8000864 <__aeabi_dmul+0x19c>
 80008c0:	ea81 0103 	eor.w	r1, r1, r3
 80008c4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80008c8:	f04f 0000 	mov.w	r0, #0
 80008cc:	bd70      	pop	{r4, r5, r6, pc}
 80008ce:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80008d2:	bf06      	itte	eq
 80008d4:	4610      	moveq	r0, r2
 80008d6:	4619      	moveq	r1, r3
 80008d8:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80008dc:	d019      	beq.n	8000912 <__aeabi_dmul+0x24a>
 80008de:	ea94 0f0c 	teq	r4, ip
 80008e2:	d102      	bne.n	80008ea <__aeabi_dmul+0x222>
 80008e4:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 80008e8:	d113      	bne.n	8000912 <__aeabi_dmul+0x24a>
 80008ea:	ea95 0f0c 	teq	r5, ip
 80008ee:	d105      	bne.n	80008fc <__aeabi_dmul+0x234>
 80008f0:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 80008f4:	bf1c      	itt	ne
 80008f6:	4610      	movne	r0, r2
 80008f8:	4619      	movne	r1, r3
 80008fa:	d10a      	bne.n	8000912 <__aeabi_dmul+0x24a>
 80008fc:	ea81 0103 	eor.w	r1, r1, r3
 8000900:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000904:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000908:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800090c:	f04f 0000 	mov.w	r0, #0
 8000910:	bd70      	pop	{r4, r5, r6, pc}
 8000912:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000916:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800091a:	bd70      	pop	{r4, r5, r6, pc}

0800091c <__aeabi_ddiv>:
 800091c:	b570      	push	{r4, r5, r6, lr}
 800091e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000922:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000926:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800092a:	bf1d      	ittte	ne
 800092c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000930:	ea94 0f0c 	teqne	r4, ip
 8000934:	ea95 0f0c 	teqne	r5, ip
 8000938:	f000 f8a7 	bleq	8000a8a <__aeabi_ddiv+0x16e>
 800093c:	eba4 0405 	sub.w	r4, r4, r5
 8000940:	ea81 0e03 	eor.w	lr, r1, r3
 8000944:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000948:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800094c:	f000 8088 	beq.w	8000a60 <__aeabi_ddiv+0x144>
 8000950:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000954:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000958:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800095c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000960:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000964:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000968:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800096c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8000970:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 8000974:	429d      	cmp	r5, r3
 8000976:	bf08      	it	eq
 8000978:	4296      	cmpeq	r6, r2
 800097a:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 800097e:	f504 7440 	add.w	r4, r4, #768	; 0x300
 8000982:	d202      	bcs.n	800098a <__aeabi_ddiv+0x6e>
 8000984:	085b      	lsrs	r3, r3, #1
 8000986:	ea4f 0232 	mov.w	r2, r2, rrx
 800098a:	1ab6      	subs	r6, r6, r2
 800098c:	eb65 0503 	sbc.w	r5, r5, r3
 8000990:	085b      	lsrs	r3, r3, #1
 8000992:	ea4f 0232 	mov.w	r2, r2, rrx
 8000996:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 800099a:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 800099e:	ebb6 0e02 	subs.w	lr, r6, r2
 80009a2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80009a6:	bf22      	ittt	cs
 80009a8:	1ab6      	subcs	r6, r6, r2
 80009aa:	4675      	movcs	r5, lr
 80009ac:	ea40 000c 	orrcs.w	r0, r0, ip
 80009b0:	085b      	lsrs	r3, r3, #1
 80009b2:	ea4f 0232 	mov.w	r2, r2, rrx
 80009b6:	ebb6 0e02 	subs.w	lr, r6, r2
 80009ba:	eb75 0e03 	sbcs.w	lr, r5, r3
 80009be:	bf22      	ittt	cs
 80009c0:	1ab6      	subcs	r6, r6, r2
 80009c2:	4675      	movcs	r5, lr
 80009c4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80009c8:	085b      	lsrs	r3, r3, #1
 80009ca:	ea4f 0232 	mov.w	r2, r2, rrx
 80009ce:	ebb6 0e02 	subs.w	lr, r6, r2
 80009d2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80009d6:	bf22      	ittt	cs
 80009d8:	1ab6      	subcs	r6, r6, r2
 80009da:	4675      	movcs	r5, lr
 80009dc:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 80009e0:	085b      	lsrs	r3, r3, #1
 80009e2:	ea4f 0232 	mov.w	r2, r2, rrx
 80009e6:	ebb6 0e02 	subs.w	lr, r6, r2
 80009ea:	eb75 0e03 	sbcs.w	lr, r5, r3
 80009ee:	bf22      	ittt	cs
 80009f0:	1ab6      	subcs	r6, r6, r2
 80009f2:	4675      	movcs	r5, lr
 80009f4:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 80009f8:	ea55 0e06 	orrs.w	lr, r5, r6
 80009fc:	d018      	beq.n	8000a30 <__aeabi_ddiv+0x114>
 80009fe:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000a02:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000a06:	ea4f 1606 	mov.w	r6, r6, lsl #4
 8000a0a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 8000a0e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000a12:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000a16:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 8000a1a:	d1c0      	bne.n	800099e <__aeabi_ddiv+0x82>
 8000a1c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000a20:	d10b      	bne.n	8000a3a <__aeabi_ddiv+0x11e>
 8000a22:	ea41 0100 	orr.w	r1, r1, r0
 8000a26:	f04f 0000 	mov.w	r0, #0
 8000a2a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 8000a2e:	e7b6      	b.n	800099e <__aeabi_ddiv+0x82>
 8000a30:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000a34:	bf04      	itt	eq
 8000a36:	4301      	orreq	r1, r0
 8000a38:	2000      	moveq	r0, #0
 8000a3a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000a3e:	bf88      	it	hi
 8000a40:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000a44:	f63f aeaf 	bhi.w	80007a6 <__aeabi_dmul+0xde>
 8000a48:	ebb5 0c03 	subs.w	ip, r5, r3
 8000a4c:	bf04      	itt	eq
 8000a4e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000a52:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000a56:	f150 0000 	adcs.w	r0, r0, #0
 8000a5a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000a5e:	bd70      	pop	{r4, r5, r6, pc}
 8000a60:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 8000a64:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000a68:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 8000a6c:	bfc2      	ittt	gt
 8000a6e:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000a72:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000a76:	bd70      	popgt	{r4, r5, r6, pc}
 8000a78:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000a7c:	f04f 0e00 	mov.w	lr, #0
 8000a80:	3c01      	subs	r4, #1
 8000a82:	e690      	b.n	80007a6 <__aeabi_dmul+0xde>
 8000a84:	ea45 0e06 	orr.w	lr, r5, r6
 8000a88:	e68d      	b.n	80007a6 <__aeabi_dmul+0xde>
 8000a8a:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000a8e:	ea94 0f0c 	teq	r4, ip
 8000a92:	bf08      	it	eq
 8000a94:	ea95 0f0c 	teqeq	r5, ip
 8000a98:	f43f af3b 	beq.w	8000912 <__aeabi_dmul+0x24a>
 8000a9c:	ea94 0f0c 	teq	r4, ip
 8000aa0:	d10a      	bne.n	8000ab8 <__aeabi_ddiv+0x19c>
 8000aa2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000aa6:	f47f af34 	bne.w	8000912 <__aeabi_dmul+0x24a>
 8000aaa:	ea95 0f0c 	teq	r5, ip
 8000aae:	f47f af25 	bne.w	80008fc <__aeabi_dmul+0x234>
 8000ab2:	4610      	mov	r0, r2
 8000ab4:	4619      	mov	r1, r3
 8000ab6:	e72c      	b.n	8000912 <__aeabi_dmul+0x24a>
 8000ab8:	ea95 0f0c 	teq	r5, ip
 8000abc:	d106      	bne.n	8000acc <__aeabi_ddiv+0x1b0>
 8000abe:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000ac2:	f43f aefd 	beq.w	80008c0 <__aeabi_dmul+0x1f8>
 8000ac6:	4610      	mov	r0, r2
 8000ac8:	4619      	mov	r1, r3
 8000aca:	e722      	b.n	8000912 <__aeabi_dmul+0x24a>
 8000acc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000ad0:	bf18      	it	ne
 8000ad2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000ad6:	f47f aec5 	bne.w	8000864 <__aeabi_dmul+0x19c>
 8000ada:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000ade:	f47f af0d 	bne.w	80008fc <__aeabi_dmul+0x234>
 8000ae2:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000ae6:	f47f aeeb 	bne.w	80008c0 <__aeabi_dmul+0x1f8>
 8000aea:	e712      	b.n	8000912 <__aeabi_dmul+0x24a>

08000aec <__aeabi_d2f>:
 8000aec:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000af0:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000af4:	bf24      	itt	cs
 8000af6:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000afa:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000afe:	d90d      	bls.n	8000b1c <__aeabi_d2f+0x30>
 8000b00:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000b04:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000b08:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000b0c:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000b10:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000b14:	bf08      	it	eq
 8000b16:	f020 0001 	biceq.w	r0, r0, #1
 8000b1a:	4770      	bx	lr
 8000b1c:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000b20:	d121      	bne.n	8000b66 <__aeabi_d2f+0x7a>
 8000b22:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000b26:	bfbc      	itt	lt
 8000b28:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000b2c:	4770      	bxlt	lr
 8000b2e:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000b32:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000b36:	f1c2 0218 	rsb	r2, r2, #24
 8000b3a:	f1c2 0c20 	rsb	ip, r2, #32
 8000b3e:	fa10 f30c 	lsls.w	r3, r0, ip
 8000b42:	fa20 f002 	lsr.w	r0, r0, r2
 8000b46:	bf18      	it	ne
 8000b48:	f040 0001 	orrne.w	r0, r0, #1
 8000b4c:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b50:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000b54:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000b58:	ea40 000c 	orr.w	r0, r0, ip
 8000b5c:	fa23 f302 	lsr.w	r3, r3, r2
 8000b60:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000b64:	e7cc      	b.n	8000b00 <__aeabi_d2f+0x14>
 8000b66:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000b6a:	d107      	bne.n	8000b7c <__aeabi_d2f+0x90>
 8000b6c:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000b70:	bf1e      	ittt	ne
 8000b72:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000b76:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000b7a:	4770      	bxne	lr
 8000b7c:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000b80:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000b84:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000b88:	4770      	bx	lr
 8000b8a:	bf00      	nop

08000b8c <__aeabi_uldivmod>:
 8000b8c:	b953      	cbnz	r3, 8000ba4 <__aeabi_uldivmod+0x18>
 8000b8e:	b94a      	cbnz	r2, 8000ba4 <__aeabi_uldivmod+0x18>
 8000b90:	2900      	cmp	r1, #0
 8000b92:	bf08      	it	eq
 8000b94:	2800      	cmpeq	r0, #0
 8000b96:	bf1c      	itt	ne
 8000b98:	f04f 31ff 	movne.w	r1, #4294967295
 8000b9c:	f04f 30ff 	movne.w	r0, #4294967295
 8000ba0:	f000 b970 	b.w	8000e84 <__aeabi_idiv0>
 8000ba4:	f1ad 0c08 	sub.w	ip, sp, #8
 8000ba8:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000bac:	f000 f806 	bl	8000bbc <__udivmoddi4>
 8000bb0:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000bb4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000bb8:	b004      	add	sp, #16
 8000bba:	4770      	bx	lr

08000bbc <__udivmoddi4>:
 8000bbc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000bc0:	9e08      	ldr	r6, [sp, #32]
 8000bc2:	460d      	mov	r5, r1
 8000bc4:	4604      	mov	r4, r0
 8000bc6:	460f      	mov	r7, r1
 8000bc8:	2b00      	cmp	r3, #0
 8000bca:	d14a      	bne.n	8000c62 <__udivmoddi4+0xa6>
 8000bcc:	428a      	cmp	r2, r1
 8000bce:	4694      	mov	ip, r2
 8000bd0:	d965      	bls.n	8000c9e <__udivmoddi4+0xe2>
 8000bd2:	fab2 f382 	clz	r3, r2
 8000bd6:	b143      	cbz	r3, 8000bea <__udivmoddi4+0x2e>
 8000bd8:	fa02 fc03 	lsl.w	ip, r2, r3
 8000bdc:	f1c3 0220 	rsb	r2, r3, #32
 8000be0:	409f      	lsls	r7, r3
 8000be2:	fa20 f202 	lsr.w	r2, r0, r2
 8000be6:	4317      	orrs	r7, r2
 8000be8:	409c      	lsls	r4, r3
 8000bea:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 8000bee:	fa1f f58c 	uxth.w	r5, ip
 8000bf2:	fbb7 f1fe 	udiv	r1, r7, lr
 8000bf6:	0c22      	lsrs	r2, r4, #16
 8000bf8:	fb0e 7711 	mls	r7, lr, r1, r7
 8000bfc:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 8000c00:	fb01 f005 	mul.w	r0, r1, r5
 8000c04:	4290      	cmp	r0, r2
 8000c06:	d90a      	bls.n	8000c1e <__udivmoddi4+0x62>
 8000c08:	eb1c 0202 	adds.w	r2, ip, r2
 8000c0c:	f101 37ff 	add.w	r7, r1, #4294967295
 8000c10:	f080 811c 	bcs.w	8000e4c <__udivmoddi4+0x290>
 8000c14:	4290      	cmp	r0, r2
 8000c16:	f240 8119 	bls.w	8000e4c <__udivmoddi4+0x290>
 8000c1a:	3902      	subs	r1, #2
 8000c1c:	4462      	add	r2, ip
 8000c1e:	1a12      	subs	r2, r2, r0
 8000c20:	b2a4      	uxth	r4, r4
 8000c22:	fbb2 f0fe 	udiv	r0, r2, lr
 8000c26:	fb0e 2210 	mls	r2, lr, r0, r2
 8000c2a:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000c2e:	fb00 f505 	mul.w	r5, r0, r5
 8000c32:	42a5      	cmp	r5, r4
 8000c34:	d90a      	bls.n	8000c4c <__udivmoddi4+0x90>
 8000c36:	eb1c 0404 	adds.w	r4, ip, r4
 8000c3a:	f100 32ff 	add.w	r2, r0, #4294967295
 8000c3e:	f080 8107 	bcs.w	8000e50 <__udivmoddi4+0x294>
 8000c42:	42a5      	cmp	r5, r4
 8000c44:	f240 8104 	bls.w	8000e50 <__udivmoddi4+0x294>
 8000c48:	4464      	add	r4, ip
 8000c4a:	3802      	subs	r0, #2
 8000c4c:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000c50:	1b64      	subs	r4, r4, r5
 8000c52:	2100      	movs	r1, #0
 8000c54:	b11e      	cbz	r6, 8000c5e <__udivmoddi4+0xa2>
 8000c56:	40dc      	lsrs	r4, r3
 8000c58:	2300      	movs	r3, #0
 8000c5a:	e9c6 4300 	strd	r4, r3, [r6]
 8000c5e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000c62:	428b      	cmp	r3, r1
 8000c64:	d908      	bls.n	8000c78 <__udivmoddi4+0xbc>
 8000c66:	2e00      	cmp	r6, #0
 8000c68:	f000 80ed 	beq.w	8000e46 <__udivmoddi4+0x28a>
 8000c6c:	2100      	movs	r1, #0
 8000c6e:	e9c6 0500 	strd	r0, r5, [r6]
 8000c72:	4608      	mov	r0, r1
 8000c74:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000c78:	fab3 f183 	clz	r1, r3
 8000c7c:	2900      	cmp	r1, #0
 8000c7e:	d149      	bne.n	8000d14 <__udivmoddi4+0x158>
 8000c80:	42ab      	cmp	r3, r5
 8000c82:	d302      	bcc.n	8000c8a <__udivmoddi4+0xce>
 8000c84:	4282      	cmp	r2, r0
 8000c86:	f200 80f8 	bhi.w	8000e7a <__udivmoddi4+0x2be>
 8000c8a:	1a84      	subs	r4, r0, r2
 8000c8c:	eb65 0203 	sbc.w	r2, r5, r3
 8000c90:	2001      	movs	r0, #1
 8000c92:	4617      	mov	r7, r2
 8000c94:	2e00      	cmp	r6, #0
 8000c96:	d0e2      	beq.n	8000c5e <__udivmoddi4+0xa2>
 8000c98:	e9c6 4700 	strd	r4, r7, [r6]
 8000c9c:	e7df      	b.n	8000c5e <__udivmoddi4+0xa2>
 8000c9e:	b902      	cbnz	r2, 8000ca2 <__udivmoddi4+0xe6>
 8000ca0:	deff      	udf	#255	; 0xff
 8000ca2:	fab2 f382 	clz	r3, r2
 8000ca6:	2b00      	cmp	r3, #0
 8000ca8:	f040 8090 	bne.w	8000dcc <__udivmoddi4+0x210>
 8000cac:	1a8a      	subs	r2, r1, r2
 8000cae:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000cb2:	fa1f fe8c 	uxth.w	lr, ip
 8000cb6:	2101      	movs	r1, #1
 8000cb8:	fbb2 f5f7 	udiv	r5, r2, r7
 8000cbc:	fb07 2015 	mls	r0, r7, r5, r2
 8000cc0:	0c22      	lsrs	r2, r4, #16
 8000cc2:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8000cc6:	fb0e f005 	mul.w	r0, lr, r5
 8000cca:	4290      	cmp	r0, r2
 8000ccc:	d908      	bls.n	8000ce0 <__udivmoddi4+0x124>
 8000cce:	eb1c 0202 	adds.w	r2, ip, r2
 8000cd2:	f105 38ff 	add.w	r8, r5, #4294967295
 8000cd6:	d202      	bcs.n	8000cde <__udivmoddi4+0x122>
 8000cd8:	4290      	cmp	r0, r2
 8000cda:	f200 80cb 	bhi.w	8000e74 <__udivmoddi4+0x2b8>
 8000cde:	4645      	mov	r5, r8
 8000ce0:	1a12      	subs	r2, r2, r0
 8000ce2:	b2a4      	uxth	r4, r4
 8000ce4:	fbb2 f0f7 	udiv	r0, r2, r7
 8000ce8:	fb07 2210 	mls	r2, r7, r0, r2
 8000cec:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000cf0:	fb0e fe00 	mul.w	lr, lr, r0
 8000cf4:	45a6      	cmp	lr, r4
 8000cf6:	d908      	bls.n	8000d0a <__udivmoddi4+0x14e>
 8000cf8:	eb1c 0404 	adds.w	r4, ip, r4
 8000cfc:	f100 32ff 	add.w	r2, r0, #4294967295
 8000d00:	d202      	bcs.n	8000d08 <__udivmoddi4+0x14c>
 8000d02:	45a6      	cmp	lr, r4
 8000d04:	f200 80bb 	bhi.w	8000e7e <__udivmoddi4+0x2c2>
 8000d08:	4610      	mov	r0, r2
 8000d0a:	eba4 040e 	sub.w	r4, r4, lr
 8000d0e:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8000d12:	e79f      	b.n	8000c54 <__udivmoddi4+0x98>
 8000d14:	f1c1 0720 	rsb	r7, r1, #32
 8000d18:	408b      	lsls	r3, r1
 8000d1a:	fa22 fc07 	lsr.w	ip, r2, r7
 8000d1e:	ea4c 0c03 	orr.w	ip, ip, r3
 8000d22:	fa05 f401 	lsl.w	r4, r5, r1
 8000d26:	fa20 f307 	lsr.w	r3, r0, r7
 8000d2a:	40fd      	lsrs	r5, r7
 8000d2c:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000d30:	4323      	orrs	r3, r4
 8000d32:	fbb5 f8f9 	udiv	r8, r5, r9
 8000d36:	fa1f fe8c 	uxth.w	lr, ip
 8000d3a:	fb09 5518 	mls	r5, r9, r8, r5
 8000d3e:	0c1c      	lsrs	r4, r3, #16
 8000d40:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8000d44:	fb08 f50e 	mul.w	r5, r8, lr
 8000d48:	42a5      	cmp	r5, r4
 8000d4a:	fa02 f201 	lsl.w	r2, r2, r1
 8000d4e:	fa00 f001 	lsl.w	r0, r0, r1
 8000d52:	d90b      	bls.n	8000d6c <__udivmoddi4+0x1b0>
 8000d54:	eb1c 0404 	adds.w	r4, ip, r4
 8000d58:	f108 3aff 	add.w	sl, r8, #4294967295
 8000d5c:	f080 8088 	bcs.w	8000e70 <__udivmoddi4+0x2b4>
 8000d60:	42a5      	cmp	r5, r4
 8000d62:	f240 8085 	bls.w	8000e70 <__udivmoddi4+0x2b4>
 8000d66:	f1a8 0802 	sub.w	r8, r8, #2
 8000d6a:	4464      	add	r4, ip
 8000d6c:	1b64      	subs	r4, r4, r5
 8000d6e:	b29d      	uxth	r5, r3
 8000d70:	fbb4 f3f9 	udiv	r3, r4, r9
 8000d74:	fb09 4413 	mls	r4, r9, r3, r4
 8000d78:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8000d7c:	fb03 fe0e 	mul.w	lr, r3, lr
 8000d80:	45a6      	cmp	lr, r4
 8000d82:	d908      	bls.n	8000d96 <__udivmoddi4+0x1da>
 8000d84:	eb1c 0404 	adds.w	r4, ip, r4
 8000d88:	f103 35ff 	add.w	r5, r3, #4294967295
 8000d8c:	d26c      	bcs.n	8000e68 <__udivmoddi4+0x2ac>
 8000d8e:	45a6      	cmp	lr, r4
 8000d90:	d96a      	bls.n	8000e68 <__udivmoddi4+0x2ac>
 8000d92:	3b02      	subs	r3, #2
 8000d94:	4464      	add	r4, ip
 8000d96:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000d9a:	fba3 9502 	umull	r9, r5, r3, r2
 8000d9e:	eba4 040e 	sub.w	r4, r4, lr
 8000da2:	42ac      	cmp	r4, r5
 8000da4:	46c8      	mov	r8, r9
 8000da6:	46ae      	mov	lr, r5
 8000da8:	d356      	bcc.n	8000e58 <__udivmoddi4+0x29c>
 8000daa:	d053      	beq.n	8000e54 <__udivmoddi4+0x298>
 8000dac:	b156      	cbz	r6, 8000dc4 <__udivmoddi4+0x208>
 8000dae:	ebb0 0208 	subs.w	r2, r0, r8
 8000db2:	eb64 040e 	sbc.w	r4, r4, lr
 8000db6:	fa04 f707 	lsl.w	r7, r4, r7
 8000dba:	40ca      	lsrs	r2, r1
 8000dbc:	40cc      	lsrs	r4, r1
 8000dbe:	4317      	orrs	r7, r2
 8000dc0:	e9c6 7400 	strd	r7, r4, [r6]
 8000dc4:	4618      	mov	r0, r3
 8000dc6:	2100      	movs	r1, #0
 8000dc8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000dcc:	f1c3 0120 	rsb	r1, r3, #32
 8000dd0:	fa02 fc03 	lsl.w	ip, r2, r3
 8000dd4:	fa20 f201 	lsr.w	r2, r0, r1
 8000dd8:	fa25 f101 	lsr.w	r1, r5, r1
 8000ddc:	409d      	lsls	r5, r3
 8000dde:	432a      	orrs	r2, r5
 8000de0:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000de4:	fa1f fe8c 	uxth.w	lr, ip
 8000de8:	fbb1 f0f7 	udiv	r0, r1, r7
 8000dec:	fb07 1510 	mls	r5, r7, r0, r1
 8000df0:	0c11      	lsrs	r1, r2, #16
 8000df2:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 8000df6:	fb00 f50e 	mul.w	r5, r0, lr
 8000dfa:	428d      	cmp	r5, r1
 8000dfc:	fa04 f403 	lsl.w	r4, r4, r3
 8000e00:	d908      	bls.n	8000e14 <__udivmoddi4+0x258>
 8000e02:	eb1c 0101 	adds.w	r1, ip, r1
 8000e06:	f100 38ff 	add.w	r8, r0, #4294967295
 8000e0a:	d22f      	bcs.n	8000e6c <__udivmoddi4+0x2b0>
 8000e0c:	428d      	cmp	r5, r1
 8000e0e:	d92d      	bls.n	8000e6c <__udivmoddi4+0x2b0>
 8000e10:	3802      	subs	r0, #2
 8000e12:	4461      	add	r1, ip
 8000e14:	1b49      	subs	r1, r1, r5
 8000e16:	b292      	uxth	r2, r2
 8000e18:	fbb1 f5f7 	udiv	r5, r1, r7
 8000e1c:	fb07 1115 	mls	r1, r7, r5, r1
 8000e20:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000e24:	fb05 f10e 	mul.w	r1, r5, lr
 8000e28:	4291      	cmp	r1, r2
 8000e2a:	d908      	bls.n	8000e3e <__udivmoddi4+0x282>
 8000e2c:	eb1c 0202 	adds.w	r2, ip, r2
 8000e30:	f105 38ff 	add.w	r8, r5, #4294967295
 8000e34:	d216      	bcs.n	8000e64 <__udivmoddi4+0x2a8>
 8000e36:	4291      	cmp	r1, r2
 8000e38:	d914      	bls.n	8000e64 <__udivmoddi4+0x2a8>
 8000e3a:	3d02      	subs	r5, #2
 8000e3c:	4462      	add	r2, ip
 8000e3e:	1a52      	subs	r2, r2, r1
 8000e40:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 8000e44:	e738      	b.n	8000cb8 <__udivmoddi4+0xfc>
 8000e46:	4631      	mov	r1, r6
 8000e48:	4630      	mov	r0, r6
 8000e4a:	e708      	b.n	8000c5e <__udivmoddi4+0xa2>
 8000e4c:	4639      	mov	r1, r7
 8000e4e:	e6e6      	b.n	8000c1e <__udivmoddi4+0x62>
 8000e50:	4610      	mov	r0, r2
 8000e52:	e6fb      	b.n	8000c4c <__udivmoddi4+0x90>
 8000e54:	4548      	cmp	r0, r9
 8000e56:	d2a9      	bcs.n	8000dac <__udivmoddi4+0x1f0>
 8000e58:	ebb9 0802 	subs.w	r8, r9, r2
 8000e5c:	eb65 0e0c 	sbc.w	lr, r5, ip
 8000e60:	3b01      	subs	r3, #1
 8000e62:	e7a3      	b.n	8000dac <__udivmoddi4+0x1f0>
 8000e64:	4645      	mov	r5, r8
 8000e66:	e7ea      	b.n	8000e3e <__udivmoddi4+0x282>
 8000e68:	462b      	mov	r3, r5
 8000e6a:	e794      	b.n	8000d96 <__udivmoddi4+0x1da>
 8000e6c:	4640      	mov	r0, r8
 8000e6e:	e7d1      	b.n	8000e14 <__udivmoddi4+0x258>
 8000e70:	46d0      	mov	r8, sl
 8000e72:	e77b      	b.n	8000d6c <__udivmoddi4+0x1b0>
 8000e74:	3d02      	subs	r5, #2
 8000e76:	4462      	add	r2, ip
 8000e78:	e732      	b.n	8000ce0 <__udivmoddi4+0x124>
 8000e7a:	4608      	mov	r0, r1
 8000e7c:	e70a      	b.n	8000c94 <__udivmoddi4+0xd8>
 8000e7e:	4464      	add	r4, ip
 8000e80:	3802      	subs	r0, #2
 8000e82:	e742      	b.n	8000d0a <__udivmoddi4+0x14e>

08000e84 <__aeabi_idiv0>:
 8000e84:	4770      	bx	lr
 8000e86:	bf00      	nop

08000e88 <Reset_Handler>:
    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 

  ldr   sp, =_estack       /* set stack pointer */
 8000e88:	f8df d034 	ldr.w	sp, [pc, #52]	; 8000ec0 <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000e8c:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000e8e:	e003      	b.n	8000e98 <LoopCopyDataInit>

08000e90 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000e90:	4b0c      	ldr	r3, [pc, #48]	; (8000ec4 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8000e92:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8000e94:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 8000e96:	3104      	adds	r1, #4

08000e98 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 8000e98:	480b      	ldr	r0, [pc, #44]	; (8000ec8 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 8000e9a:	4b0c      	ldr	r3, [pc, #48]	; (8000ecc <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8000e9c:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8000e9e:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8000ea0:	d3f6      	bcc.n	8000e90 <CopyDataInit>
  ldr  r2, =_sbss
 8000ea2:	4a0b      	ldr	r2, [pc, #44]	; (8000ed0 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8000ea4:	e002      	b.n	8000eac <LoopFillZerobss>

08000ea6 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 8000ea6:	2300      	movs	r3, #0
  str  r3, [r2], #4
 8000ea8:	f842 3b04 	str.w	r3, [r2], #4

08000eac <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8000eac:	4b09      	ldr	r3, [pc, #36]	; (8000ed4 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 8000eae:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8000eb0:	d3f9      	bcc.n	8000ea6 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8000eb2:	f00a fb3b 	bl	800b52c <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8000eb6:	f02d f803 	bl	802dec0 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8000eba:	f000 fbd5 	bl	8001668 <main>
  bx  lr    
 8000ebe:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 8000ec0:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 8000ec4:	080cf328 	.word	0x080cf328
  ldr  r0, =_sdata
 8000ec8:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 8000ecc:	2000016c 	.word	0x2000016c
  ldr  r2, =_sbss
 8000ed0:	20000170 	.word	0x20000170
  ldr  r3, = _ebss
 8000ed4:	20014484 	.word	0x20014484

08000ed8 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8000ed8:	e7fe      	b.n	8000ed8 <ADC_IRQHandler>
	...

08000edc <GetSector>:

static uint32_t GetSector(uint32_t Address)
{
  uint32_t sector = 0;

  if((Address < 0x08003FFF) && (Address >= 0x08000000))
 8000edc:	f100 4378 	add.w	r3, r0, #4160749568	; 0xf8000000
 8000ee0:	f643 72fe 	movw	r2, #16382	; 0x3ffe
 8000ee4:	4293      	cmp	r3, r2
 8000ee6:	d905      	bls.n	8000ef4 <GetSector+0x18>
  {
    sector = FLASH_SECTOR_0;
  }
  else if((Address < 0x08007FFF) && (Address >= 0x08004000))
 8000ee8:	f5a3 4180 	sub.w	r1, r3, #16384	; 0x4000
 8000eec:	4291      	cmp	r1, r2
 8000eee:	d803      	bhi.n	8000ef8 <GetSector+0x1c>
  {
    sector = FLASH_SECTOR_1;
 8000ef0:	2001      	movs	r0, #1
 8000ef2:	4770      	bx	lr
    sector = FLASH_SECTOR_0;
 8000ef4:	2000      	movs	r0, #0
 8000ef6:	4770      	bx	lr
  }
  else if((Address < 0x0800BFFF) && (Address >= 0x08008000))
 8000ef8:	f5a3 4100 	sub.w	r1, r3, #32768	; 0x8000
 8000efc:	4291      	cmp	r1, r2
 8000efe:	d960      	bls.n	8000fc2 <GetSector+0xe6>
  {
    sector = FLASH_SECTOR_2;
  }
  else if((Address < 0x0800FFFF) && (Address >= 0x0800C000))
 8000f00:	f5a3 4340 	sub.w	r3, r3, #49152	; 0xc000
 8000f04:	4293      	cmp	r3, r2
 8000f06:	d95e      	bls.n	8000fc6 <GetSector+0xea>
  {
    sector = FLASH_SECTOR_3;
  }
  else if((Address < 0x0801FFFF) && (Address >= 0x08010000))
 8000f08:	f100 4377 	add.w	r3, r0, #4143972352	; 0xf7000000
 8000f0c:	f503 017f 	add.w	r1, r3, #16711680	; 0xff0000
 8000f10:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8000f14:	4291      	cmp	r1, r2
 8000f16:	d95a      	bls.n	8000fce <GetSector+0xf2>
  {
    sector = FLASH_SECTOR_4;
  }
  else if((Address < 0x0803FFFF) && (Address >= 0x08020000))
 8000f18:	f502 3280 	add.w	r2, r2, #65536	; 0x10000
 8000f1c:	f503 017e 	add.w	r1, r3, #16646144	; 0xfe0000
 8000f20:	4291      	cmp	r1, r2
 8000f22:	d952      	bls.n	8000fca <GetSector+0xee>
  {
    sector = FLASH_SECTOR_5;
  }
  else if((Address < 0x0805FFFF) && (Address >= 0x08040000))
 8000f24:	f503 017c 	add.w	r1, r3, #16515072	; 0xfc0000
 8000f28:	4291      	cmp	r1, r2
 8000f2a:	d952      	bls.n	8000fd2 <GetSector+0xf6>
  {
    sector = FLASH_SECTOR_6;
  }
  else if((Address < 0x0807FFFF) && (Address >= 0x08060000))
 8000f2c:	f503 017a 	add.w	r1, r3, #16384000	; 0xfa0000
 8000f30:	4291      	cmp	r1, r2
 8000f32:	d950      	bls.n	8000fd6 <GetSector+0xfa>
  {
    sector = FLASH_SECTOR_7;
  }
  else if((Address < 0x0809FFFF) && (Address >= 0x08080000))
 8000f34:	f503 0178 	add.w	r1, r3, #16252928	; 0xf80000
 8000f38:	4291      	cmp	r1, r2
 8000f3a:	d94e      	bls.n	8000fda <GetSector+0xfe>
  {
    sector = FLASH_SECTOR_8;
  }
  else if((Address < 0x080BFFFF) && (Address >= 0x080A0000))
 8000f3c:	f503 0176 	add.w	r1, r3, #16121856	; 0xf60000
 8000f40:	4291      	cmp	r1, r2
 8000f42:	d94c      	bls.n	8000fde <GetSector+0x102>
  {
    sector = FLASH_SECTOR_9;
  }
  else if((Address < 0x080DFFFF) && (Address >= 0x080C0000))
 8000f44:	f503 0174 	add.w	r1, r3, #15990784	; 0xf40000
 8000f48:	4291      	cmp	r1, r2
 8000f4a:	d94a      	bls.n	8000fe2 <GetSector+0x106>
  {
    sector = FLASH_SECTOR_10;
  }
  else if((Address < 0x080FFFFF) && (Address >= 0x080E0000))
 8000f4c:	f503 0172 	add.w	r1, r3, #15859712	; 0xf20000
 8000f50:	4291      	cmp	r1, r2
 8000f52:	d948      	bls.n	8000fe6 <GetSector+0x10a>
  {
    sector = FLASH_SECTOR_11;
  }
  else if((Address < 0x08103FFF) && (Address >= 0x08100000))
 8000f54:	f1a0 6001 	sub.w	r0, r0, #135266304	; 0x8100000
 8000f58:	f643 71fe 	movw	r1, #16382	; 0x3ffe
 8000f5c:	4288      	cmp	r0, r1
 8000f5e:	d944      	bls.n	8000fea <GetSector+0x10e>
  {
    sector = FLASH_SECTOR_12;
  }
  else if((Address < 0x08107FFF) && (Address >= 0x08104000))
 8000f60:	f5a0 4c80 	sub.w	ip, r0, #16384	; 0x4000
 8000f64:	458c      	cmp	ip, r1
 8000f66:	d942      	bls.n	8000fee <GetSector+0x112>
  {
    sector = FLASH_SECTOR_13;
  }
  else if((Address < 0x0810BFFF) && (Address >= 0x08108000))
 8000f68:	f5a0 4c00 	sub.w	ip, r0, #32768	; 0x8000
 8000f6c:	458c      	cmp	ip, r1
 8000f6e:	d940      	bls.n	8000ff2 <GetSector+0x116>
  {
    sector = FLASH_SECTOR_14;
  }
  else if((Address < 0x0810FFFF) && (Address >= 0x0810C000))
 8000f70:	f5a0 4040 	sub.w	r0, r0, #49152	; 0xc000
 8000f74:	4288      	cmp	r0, r1
 8000f76:	d93e      	bls.n	8000ff6 <GetSector+0x11a>
  {
    sector = FLASH_SECTOR_15;
  }
  else if((Address < 0x0811FFFF) && (Address >= 0x08110000))
 8000f78:	f503 006f 	add.w	r0, r3, #15663104	; 0xef0000
 8000f7c:	f64f 71fe 	movw	r1, #65534	; 0xfffe
 8000f80:	4288      	cmp	r0, r1
 8000f82:	d93a      	bls.n	8000ffa <GetSector+0x11e>
  {
    sector = FLASH_SECTOR_16;
  }
  else if((Address < 0x0813FFFF) && (Address >= 0x08120000))
 8000f84:	f503 016e 	add.w	r1, r3, #15597568	; 0xee0000
 8000f88:	4291      	cmp	r1, r2
 8000f8a:	d938      	bls.n	8000ffe <GetSector+0x122>
  {
    sector = FLASH_SECTOR_17;
  }
  else if((Address < 0x0815FFFF) && (Address >= 0x08140000))
 8000f8c:	f503 016c 	add.w	r1, r3, #15466496	; 0xec0000
 8000f90:	4291      	cmp	r1, r2
 8000f92:	d938      	bls.n	8001006 <GetSector+0x12a>
  {
    sector = FLASH_SECTOR_18;
  }
  else if((Address < 0x0817FFFF) && (Address >= 0x08160000))
 8000f94:	f503 016a 	add.w	r1, r3, #15335424	; 0xea0000
 8000f98:	4291      	cmp	r1, r2
 8000f9a:	d932      	bls.n	8001002 <GetSector+0x126>
  {
    sector = FLASH_SECTOR_19;
  }
  else if((Address < 0x0819FFFF) && (Address >= 0x08180000))
 8000f9c:	f503 0168 	add.w	r1, r3, #15204352	; 0xe80000
 8000fa0:	4291      	cmp	r1, r2
 8000fa2:	d936      	bls.n	8001012 <GetSector+0x136>
  {
    sector = FLASH_SECTOR_20;
  }
  else if((Address < 0x081BFFFF) && (Address >= 0x081A0000))
 8000fa4:	f503 0166 	add.w	r1, r3, #15073280	; 0xe60000
 8000fa8:	4291      	cmp	r1, r2
 8000faa:	d930      	bls.n	800100e <GetSector+0x132>
  {
    sector = FLASH_SECTOR_21;
  }
  else if((Address < 0x081DFFFF) && (Address >= 0x081C0000))
 8000fac:	f503 0164 	add.w	r1, r3, #14942208	; 0xe40000
 8000fb0:	4291      	cmp	r1, r2
 8000fb2:	d92a      	bls.n	800100a <GetSector+0x12e>
  {
    sector = FLASH_SECTOR_22;
  }
  else if((Address < 0x081FFFFF) && (Address >= 0x081E0000))
 8000fb4:	f503 0362 	add.w	r3, r3, #14811136	; 0xe20000
  {
    sector = FLASH_SECTOR_23;
 8000fb8:	4293      	cmp	r3, r2
 8000fba:	bf94      	ite	ls
 8000fbc:	2017      	movls	r0, #23
 8000fbe:	2000      	movhi	r0, #0
 8000fc0:	4770      	bx	lr
    sector = FLASH_SECTOR_2;
 8000fc2:	2002      	movs	r0, #2
 8000fc4:	4770      	bx	lr
    sector = FLASH_SECTOR_3;
 8000fc6:	2003      	movs	r0, #3
 8000fc8:	4770      	bx	lr
    sector = FLASH_SECTOR_5;
 8000fca:	2005      	movs	r0, #5
 8000fcc:	4770      	bx	lr
    sector = FLASH_SECTOR_4;
 8000fce:	2004      	movs	r0, #4
 8000fd0:	4770      	bx	lr
    sector = FLASH_SECTOR_6;
 8000fd2:	2006      	movs	r0, #6
 8000fd4:	4770      	bx	lr
    sector = FLASH_SECTOR_7;
 8000fd6:	2007      	movs	r0, #7
 8000fd8:	4770      	bx	lr
    sector = FLASH_SECTOR_8;
 8000fda:	2008      	movs	r0, #8
 8000fdc:	4770      	bx	lr
    sector = FLASH_SECTOR_9;
 8000fde:	2009      	movs	r0, #9
 8000fe0:	4770      	bx	lr
    sector = FLASH_SECTOR_10;
 8000fe2:	200a      	movs	r0, #10
 8000fe4:	4770      	bx	lr
    sector = FLASH_SECTOR_11;
 8000fe6:	200b      	movs	r0, #11
 8000fe8:	4770      	bx	lr
    sector = FLASH_SECTOR_12;
 8000fea:	200c      	movs	r0, #12
 8000fec:	4770      	bx	lr
    sector = FLASH_SECTOR_13;
 8000fee:	200d      	movs	r0, #13
 8000ff0:	4770      	bx	lr
    sector = FLASH_SECTOR_14;
 8000ff2:	200e      	movs	r0, #14
 8000ff4:	4770      	bx	lr
    sector = FLASH_SECTOR_15;
 8000ff6:	200f      	movs	r0, #15
 8000ff8:	4770      	bx	lr
    sector = FLASH_SECTOR_16;
 8000ffa:	2010      	movs	r0, #16
 8000ffc:	4770      	bx	lr
    sector = FLASH_SECTOR_17;
 8000ffe:	2011      	movs	r0, #17
 8001000:	4770      	bx	lr
    sector = FLASH_SECTOR_19;
 8001002:	2013      	movs	r0, #19
 8001004:	4770      	bx	lr
    sector = FLASH_SECTOR_18;
 8001006:	2012      	movs	r0, #18
 8001008:	4770      	bx	lr
    sector = FLASH_SECTOR_22;
 800100a:	2016      	movs	r0, #22
  }
  return sector;
}
 800100c:	4770      	bx	lr
    sector = FLASH_SECTOR_21;
 800100e:	2015      	movs	r0, #21
 8001010:	4770      	bx	lr
    sector = FLASH_SECTOR_20;
 8001012:	2014      	movs	r0, #20
 8001014:	4770      	bx	lr
 8001016:	bf00      	nop

08001018 <Flash_Write_Data>:
   return float_variable;
}


uint32_t Flash_Write_Data (uint32_t StartSectorAddress, uint32_t *Data, uint16_t numberofwords)
{
 8001018:	b5f0      	push	{r4, r5, r6, r7, lr}
 800101a:	4607      	mov	r7, r0
 800101c:	b083      	sub	sp, #12
 800101e:	4616      	mov	r6, r2
 8001020:	460d      	mov	r5, r1
	uint32_t SECTORError;
	int sofar=0;


	 /* Unlock the Flash to enable the flash control register access *************/
	  HAL_FLASH_Unlock();
 8001022:	f00a fc41 	bl	800b8a8 <HAL_FLASH_Unlock>

	  /* Erase the user Flash area */

	  /* Get the number of sector to erase from 1st sector */

	  uint32_t StartSector = GetSector(StartSectorAddress);
 8001026:	4638      	mov	r0, r7
 8001028:	f7ff ff58 	bl	8000edc <GetSector>
 800102c:	4604      	mov	r4, r0
	  uint32_t EndSectorAddress = StartSectorAddress + numberofwords*4;
	  uint32_t EndSector = GetSector(EndSectorAddress);
 800102e:	eb07 0086 	add.w	r0, r7, r6, lsl #2
 8001032:	f7ff ff53 	bl	8000edc <GetSector>

	  /* Fill EraseInit structure*/
	  EraseInitStruct.TypeErase     = FLASH_TYPEERASE_SECTORS;
	  EraseInitStruct.VoltageRange  = FLASH_VOLTAGE_RANGE_3;
	  EraseInitStruct.Sector        = StartSector;
	  EraseInitStruct.NbSectors     = (EndSector - StartSector) + 1;
 8001036:	1c43      	adds	r3, r0, #1
	  EraseInitStruct.TypeErase     = FLASH_TYPEERASE_SECTORS;
 8001038:	4813      	ldr	r0, [pc, #76]	; (8001088 <Flash_Write_Data+0x70>)
	  EraseInitStruct.NbSectors     = (EndSector - StartSector) + 1;
 800103a:	1b1b      	subs	r3, r3, r4
 800103c:	e9c0 4302 	strd	r4, r3, [r0, #8]
	  EraseInitStruct.TypeErase     = FLASH_TYPEERASE_SECTORS;
 8001040:	2300      	movs	r3, #0
 8001042:	6003      	str	r3, [r0, #0]

	  /* Note: If an erase operation in Flash memory also concerns data in the data or instruction cache,
	     you have to make sure that these data are rewritten before they are accessed during code
	     execution. If this cannot be done safely, it is recommended to flush the caches by setting the
	     DCRST and ICRST bits in the FLASH_CR register. */
	  if (HAL_FLASHEx_Erase(&EraseInitStruct, &SECTORError) != HAL_OK)
 8001044:	a901      	add	r1, sp, #4
	  EraseInitStruct.VoltageRange  = FLASH_VOLTAGE_RANGE_3;
 8001046:	2302      	movs	r3, #2
 8001048:	6103      	str	r3, [r0, #16]
	  if (HAL_FLASHEx_Erase(&EraseInitStruct, &SECTORError) != HAL_OK)
 800104a:	f00a fcab 	bl	800b9a4 <HAL_FLASHEx_Erase>
 800104e:	b988      	cbnz	r0, 8001074 <Flash_Write_Data+0x5c>
	  }

	  /* Program the user Flash area word by word
	    (area defined by FLASH_USER_START_ADDR and FLASH_USER_END_ADDR) ***********/

	   while (sofar<numberofwords)
 8001050:	b1a6      	cbz	r6, 800107c <Flash_Write_Data+0x64>
 8001052:	1b7f      	subs	r7, r7, r5
 8001054:	4604      	mov	r4, r0
 8001056:	3d04      	subs	r5, #4
 8001058:	3704      	adds	r7, #4
 800105a:	e001      	b.n	8001060 <Flash_Write_Data+0x48>
 800105c:	42a6      	cmp	r6, r4
 800105e:	d00d      	beq.n	800107c <Flash_Write_Data+0x64>
 8001060:	1979      	adds	r1, r7, r5
	   {
	     if (HAL_FLASH_Program(FLASH_TYPEPROGRAM_WORD, StartSectorAddress, Data[sofar]) == HAL_OK)
 8001062:	2300      	movs	r3, #0
 8001064:	f855 2f04 	ldr.w	r2, [r5, #4]!
 8001068:	2002      	movs	r0, #2
	     {
	    	 StartSectorAddress += 4;  // use StartPageAddress += 2 for half word and 8 for double word
	    	 sofar++;
 800106a:	3401      	adds	r4, #1
	     if (HAL_FLASH_Program(FLASH_TYPEPROGRAM_WORD, StartSectorAddress, Data[sofar]) == HAL_OK)
 800106c:	f00a fb7a 	bl	800b764 <HAL_FLASH_Program>
 8001070:	2800      	cmp	r0, #0
 8001072:	d0f3      	beq.n	800105c <Flash_Write_Data+0x44>
	     }
	     else
	     {
	       /* Error occurred while writing data in Flash memory*/
	    	 return HAL_FLASH_GetError ();
 8001074:	f00a fc36 	bl	800b8e4 <HAL_FLASH_GetError>
	  /* Lock the Flash to disable the flash control register access (recommended
	     to protect the FLASH memory against possible unwanted operation) *********/
	  HAL_FLASH_Lock();

	   return 0;
}
 8001078:	b003      	add	sp, #12
 800107a:	bdf0      	pop	{r4, r5, r6, r7, pc}
	  HAL_FLASH_Lock();
 800107c:	f00a fc28 	bl	800b8d0 <HAL_FLASH_Lock>
	   return 0;
 8001080:	2000      	movs	r0, #0
}
 8001082:	b003      	add	sp, #12
 8001084:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001086:	bf00      	nop
 8001088:	2000018c 	.word	0x2000018c

0800108c <Flash_Read_Data>:


void Flash_Read_Data (uint32_t StartSectorAddress, uint32_t *RxBuf, uint16_t numberofwords)
{
 800108c:	460b      	mov	r3, r1
 800108e:	3201      	adds	r2, #1
 8001090:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8001094:	1ac0      	subs	r0, r0, r3
	while (1)
	{

		*RxBuf = *(__IO uint32_t *)StartSectorAddress;
 8001096:	581a      	ldr	r2, [r3, r0]
 8001098:	f843 2b04 	str.w	r2, [r3], #4
		StartSectorAddress += 4;
		RxBuf++;
		if (!(numberofwords--)) break;
 800109c:	428b      	cmp	r3, r1
 800109e:	d1fa      	bne.n	8001096 <Flash_Read_Data+0xa>
	}
}
 80010a0:	4770      	bx	lr
 80010a2:	bf00      	nop

080010a4 <calculate_freq_and_signalstrength>:
 * are calculated.
 * @param samples Pointer to the array of input samples.
 * @return FFT structure containing the calculated main frequency and signal
 * strength.
 **/
FFT calculate_freq_and_signalstrength(uint8_t Channel, uint32_t* Samples) {
 80010a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80010a8:	ed2d 8b02 	vpush	{d8}
 80010ac:	b08d      	sub	sp, #52	; 0x34
 80010ae:	af00      	add	r7, sp, #0
 80010b0:	460d      	mov	r5, r1
 80010b2:	60f8      	str	r0, [r7, #12]
 80010b4:	4690      	mov	r8, r2
    // Perform FFT using CMSIS-DSP library
    uint8_t buffer_size = MEAS_get_num_of_samples();
 80010b6:	f001 f839 	bl	800212c <MEAS_get_num_of_samples>
    const uint32_t fft_size = buffer_size;
    // Convert the samples to the specific channel
    float32_t input_samples[buffer_size];
 80010ba:	b203      	sxth	r3, r0
 80010bc:	60bb      	str	r3, [r7, #8]
 80010be:	009b      	lsls	r3, r3, #2
 80010c0:	607b      	str	r3, [r7, #4]
 80010c2:	3307      	adds	r3, #7
 80010c4:	f023 0307 	bic.w	r3, r3, #7
 80010c8:	ebad 0d03 	sub.w	sp, sp, r3
    uint8_t buffer_size = MEAS_get_num_of_samples();
 80010cc:	4604      	mov	r4, r0
    float32_t input_samples[buffer_size];
 80010ce:	46eb      	mov	fp, sp
    for (uint32_t i = 0; i < fft_size; i++) {
 80010d0:	b1f0      	cbz	r0, 8001110 <calculate_freq_and_signalstrength+0x6c>
 80010d2:	3d01      	subs	r5, #1
 80010d4:	46d9      	mov	r9, fp
        input_samples[i] =
            (float32_t)Samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 80010d6:	46da      	mov	sl, fp
    for (uint32_t i = 0; i < fft_size; i++) {
 80010d8:	2600      	movs	r6, #0
            (float32_t)Samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 80010da:	f001 f825 	bl	8002128 <MEAS_get_num_of_chan>
 80010de:	fb06 5000 	mla	r0, r6, r0, r5
 80010e2:	eb08 0380 	add.w	r3, r8, r0, lsl #2
 80010e6:	edd3 7a00 	vldr	s15, [r3]
    for (uint32_t i = 0; i < fft_size; i++) {
 80010ea:	3601      	adds	r6, #1
            (float32_t)Samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 80010ec:	eef8 7a67 	vcvt.f32.u32	s15, s15
    for (uint32_t i = 0; i < fft_size; i++) {
 80010f0:	42b4      	cmp	r4, r6
            (float32_t)Samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 80010f2:	ecea 7a01 	vstmia	sl!, {s15}
    for (uint32_t i = 0; i < fft_size; i++) {
 80010f6:	d1f0      	bne.n	80010da <calculate_freq_and_signalstrength+0x36>
 80010f8:	687e      	ldr	r6, [r7, #4]
    }
    // remove DC component
    for (uint32_t i = 0; i < fft_size; i++) {
        input_samples[i] -= 2047.5;
 80010fa:	ed9f 7a47 	vldr	s14, [pc, #284]	; 8001218 <calculate_freq_and_signalstrength+0x174>
 80010fe:	445e      	add	r6, fp
 8001100:	edd9 7a00 	vldr	s15, [r9]
 8001104:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8001108:	ece9 7a01 	vstmia	r9!, {s15}
    for (uint32_t i = 0; i < fft_size; i++) {
 800110c:	454e      	cmp	r6, r9
 800110e:	d1f7      	bne.n	8001100 <calculate_freq_and_signalstrength+0x5c>
    }
    // Create an array for the FFT output
    float32_t fft_complex_output[2 * buffer_size];
 8001110:	68bb      	ldr	r3, [r7, #8]
 8001112:	466a      	mov	r2, sp
 8001114:	eba2 03c3 	sub.w	r3, r2, r3, lsl #3
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
    // Create an instance of the FFT structure
    FFT fft;
    // Calculate the main frequency
    float main_frequency =
        (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 8001118:	ee07 4a90 	vmov	s15, r4
    float32_t fft_complex_output[2 * buffer_size];
 800111c:	469d      	mov	sp, r3
 800111e:	466d      	mov	r5, sp
    arm_rfft_fast_init_f32(&fft_struct, fft_size);
 8001120:	b2a1      	uxth	r1, r4
 8001122:	f107 0018 	add.w	r0, r7, #24
        (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 8001126:	eef8 8a67 	vcvt.f32.u32	s17, s15
    arm_cmplx_mag_f32(fft_complex_output, fft_complex_output, fft_size / 2);
 800112a:	0864      	lsrs	r4, r4, #1
    arm_rfft_fast_init_f32(&fft_struct, fft_size);
 800112c:	f02a fc1c 	bl	802b968 <arm_rfft_fast_init_f32>
    arm_rfft_fast_f32(&fft_struct, input_samples, fft_complex_output, 0);
 8001130:	2300      	movs	r3, #0
 8001132:	4659      	mov	r1, fp
 8001134:	f107 0018 	add.w	r0, r7, #24
 8001138:	462a      	mov	r2, r5
 800113a:	f02a fc99 	bl	802ba70 <arm_rfft_fast_f32>
    arm_cmplx_mag_f32(fft_complex_output, fft_complex_output, fft_size / 2);
 800113e:	4622      	mov	r2, r4
 8001140:	4629      	mov	r1, r5
 8001142:	4628      	mov	r0, r5
 8001144:	f02b f902 	bl	802c34c <arm_cmplx_mag_f32>
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
 8001148:	f107 0310 	add.w	r3, r7, #16
 800114c:	f107 0214 	add.w	r2, r7, #20
 8001150:	4621      	mov	r1, r4
 8001152:	4628      	mov	r0, r5
 8001154:	f02a fba0 	bl	802b898 <arm_max_f32>
        (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 8001158:	edd7 7a04 	vldr	s15, [r7, #16]
 800115c:	eeb8 8a67 	vcvt.f32.u32	s16, s15
 8001160:	f000 ffe6 	bl	8002130 <MEAS_get_samp_freq>
 8001164:	ee07 0a90 	vmov	s15, r0
 8001168:	eef8 7a67 	vcvt.f32.u32	s15, s15
    uint8_t given_frequency = 0;
    // Check if the main frequency is in the range of 45-55 Hz
    if (main_frequency <= 55 && main_frequency >= 45) {
 800116c:	ed9f 7a2b 	vldr	s14, [pc, #172]	; 800121c <calculate_freq_and_signalstrength+0x178>
        (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 8001170:	ee67 7a88 	vmul.f32	s15, s15, s16
    float main_frequency =
 8001174:	ee87 8aa8 	vdiv.f32	s16, s15, s17
    if (main_frequency <= 55 && main_frequency >= 45) {
 8001178:	eeb4 8ac7 	vcmpe.f32	s16, s14
 800117c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001180:	d81b      	bhi.n	80011ba <calculate_freq_and_signalstrength+0x116>
 8001182:	eddf 7a27 	vldr	s15, [pc, #156]	; 8001220 <calculate_freq_and_signalstrength+0x17c>
 8001186:	eeb4 8ae7 	vcmpe.f32	s16, s15
 800118a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800118e:	db2d      	blt.n	80011ec <calculate_freq_and_signalstrength+0x148>
    } else if (main_frequency <= 65 && main_frequency >= 55) {
        // If yes, round the given frequency to 60 Hz
        given_frequency = 60;
    } else given_frequency = 0;
    // calculate the index of the given frequency
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 8001190:	68bb      	ldr	r3, [r7, #8]
 8001192:	eb03 0983 	add.w	r9, r3, r3, lsl #2
 8001196:	f000 ffcb 	bl	8002130 <MEAS_get_samp_freq>
 800119a:	eb09 0989 	add.w	r9, r9, r9, lsl #2
 800119e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80011a2:	fbb9 f0f0 	udiv	r0, r9, r0
    // set the signal strength to 0
    float signal_strength = 0;
    // check if the given frequency is 50 or 60 Hz
    if (given_frequency != 0) {
        // calculate the signal strength
        signal_strength = 2 * fft_complex_output[index] / fft_size;
 80011a6:	eb05 0080 	add.w	r0, r5, r0, lsl #2
 80011aa:	edd0 7a00 	vldr	s15, [r0]
 80011ae:	ee77 7aa7 	vadd.f32	s15, s15, s15
        fft.error = CALC_ERROR_NONE;
 80011b2:	2301      	movs	r3, #1
        signal_strength = 2 * fft_complex_output[index] / fft_size;
 80011b4:	ee87 7aa8 	vdiv.f32	s14, s15, s17
        fft.error = CALC_ERROR_NONE;
 80011b8:	e00b      	b.n	80011d2 <calculate_freq_and_signalstrength+0x12e>
    } else if (main_frequency <= 65 && main_frequency >= 55) {
 80011ba:	eddf 7a1a 	vldr	s15, [pc, #104]	; 8001224 <calculate_freq_and_signalstrength+0x180>
 80011be:	eeb4 8ae7 	vcmpe.f32	s16, s15
 80011c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80011c6:	d91d      	bls.n	8001204 <calculate_freq_and_signalstrength+0x160>
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 80011c8:	f000 ffb2 	bl	8002130 <MEAS_get_samp_freq>
    float signal_strength = 0;
 80011cc:	ed9f 7a16 	vldr	s14, [pc, #88]	; 8001228 <calculate_freq_and_signalstrength+0x184>
    } else fft.error = CALC_ERROR_FREQUENCY;  // if the given frequency is not 50 or 60 Hz
 80011d0:	2300      	movs	r3, #0
    // return the calculated values
    fft.main_freq = main_frequency;
    fft.signal_strength = signal_strength;
    return fft;
 80011d2:	68fa      	ldr	r2, [r7, #12]
}
 80011d4:	3734      	adds	r7, #52	; 0x34
 80011d6:	4610      	mov	r0, r2
    return fft;
 80011d8:	ed82 8a00 	vstr	s16, [r2]
 80011dc:	ed82 7a01 	vstr	s14, [r2, #4]
 80011e0:	7213      	strb	r3, [r2, #8]
}
 80011e2:	46bd      	mov	sp, r7
 80011e4:	ecbd 8b02 	vpop	{d8}
 80011e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    } else if (main_frequency <= 65 && main_frequency >= 55) {
 80011ec:	eddf 7a0d 	vldr	s15, [pc, #52]	; 8001224 <calculate_freq_and_signalstrength+0x180>
 80011f0:	eeb4 8ae7 	vcmpe.f32	s16, s15
 80011f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80011f8:	d8e6      	bhi.n	80011c8 <calculate_freq_and_signalstrength+0x124>
 80011fa:	eeb4 8a47 	vcmp.f32	s16, s14
 80011fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001202:	d1e1      	bne.n	80011c8 <calculate_freq_and_signalstrength+0x124>
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 8001204:	68bb      	ldr	r3, [r7, #8]
 8001206:	ebc3 1903 	rsb	r9, r3, r3, lsl #4
 800120a:	f000 ff91 	bl	8002130 <MEAS_get_samp_freq>
 800120e:	ea4f 0989 	mov.w	r9, r9, lsl #2
 8001212:	fbb9 f0f0 	udiv	r0, r9, r0
    if (given_frequency != 0) {
 8001216:	e7c6      	b.n	80011a6 <calculate_freq_and_signalstrength+0x102>
 8001218:	44fff000 	.word	0x44fff000
 800121c:	425c0000 	.word	0x425c0000
 8001220:	42340000 	.word	0x42340000
 8001224:	42820000 	.word	0x42820000
 8001228:	00000000 	.word	0x00000000

0800122c <calculate_coefficients_single_pad>:
    // s = x_0, x_1, x_2 d= y_0, y_1, y_2
    // Calculate the coefficients for the distance approximation from an approximation based on a second degree polynomial
    // a=((x_0^(2)*(x_1-x_2)*y_0-x_0*(x_1^(2)*y_1-x_2^(2)*y_2)+x_1*(x_1*y_1-x_2*y_2)*x_2)/((x_0^(2)-x_0*(x_1+x_2)+x_1*x_2)*(x_1-x_2)))
    // -> Result of Nspire CAS

    a = (POW2(s[0]) * (s[1] - s[2]) * d[0] - s[0] * (POW2(s[1]) * d[1] - POW2(s[2]) * d[2]) + s[1] * (s[1] * d[1] - s[2] * d[2]) * s[2])
 800122c:	ed90 6a01 	vldr	s12, [r0, #4]
 8001230:	edd0 5a02 	vldr	s11, [r0, #8]
 8001234:	edd0 4a00 	vldr	s9, [r0]
 8001238:	edd1 6a02 	vldr	s13, [r1, #8]
 800123c:	edd1 3a01 	vldr	s7, [r1, #4]
 8001240:	ed91 4a00 	vldr	s8, [r1]
 8001244:	492e      	ldr	r1, [pc, #184]	; (8001300 <calculate_coefficients_single_pad+0xd4>)
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
    // b = ((−(x_0^(2)*(x_1^(2)*(y_0-y_1)-x_2^(2)*(y_0-y_2))+x_1^(2)*x_2^(2)*(y_1-y_2)))/((x_0^(2)-x_0*(x_1+x_2)+x_1*x_2)*(x_1-x_2)))
    // -> Result of Nspire CAS
    b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 8001246:	4a2f      	ldr	r2, [pc, #188]	; (8001304 <calculate_coefficients_single_pad+0xd8>)
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
    // c=((x_0*(x_0*(x_1*(y_0-y_1)-x_2*(y_0-y_2))+x_1*x_2*(y_1-y_2))*x_1*x_2)/((x_0^(2)-x_0*(x_1+x_2)+x_1*x_2)*(x_1-x_2)))
    // -> Result of Nspire CAS
    c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 8001248:	4b2f      	ldr	r3, [pc, #188]	; (8001308 <calculate_coefficients_single_pad+0xdc>)
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 800124a:	ee76 7a25 	vadd.f32	s15, s12, s11
 800124e:	ee26 1a25 	vmul.f32	s2, s12, s11
 8001252:	ee74 7ae7 	vsub.f32	s15, s9, s15
 8001256:	eeb0 7a41 	vmov.f32	s14, s2
 800125a:	eea4 7aa7 	vfma.f32	s14, s9, s15
    a = (POW2(s[0]) * (s[1] - s[2]) * d[0] - s[0] * (POW2(s[1]) * d[1] - POW2(s[2]) * d[2]) + s[1] * (s[1] * d[1] - s[2] * d[2]) * s[2])
 800125e:	ee36 3a65 	vsub.f32	s6, s12, s11
 8001262:	ee66 7ae5 	vnmul.f32	s15, s13, s11
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 8001266:	ee23 7a07 	vmul.f32	s14, s6, s14
 800126a:	eeb7 5a00 	vmov.f32	s10, #112	; 0x3f800000  1.0
 800126e:	eec5 1a07 	vdiv.f32	s3, s10, s14
    a = (POW2(s[0]) * (s[1] - s[2]) * d[0] - s[0] * (POW2(s[1]) * d[1] - POW2(s[2]) * d[2]) + s[1] * (s[1] * d[1] - s[2] * d[2]) * s[2])
 8001272:	eee6 7a23 	vfma.f32	s15, s12, s7
 8001276:	ee26 5a06 	vmul.f32	s10, s12, s12
 800127a:	ee24 7aa4 	vmul.f32	s14, s9, s9
 800127e:	ee65 0aa5 	vmul.f32	s1, s11, s11
 8001282:	ee27 3a03 	vmul.f32	s6, s14, s6
 8001286:	ee23 0ac5 	vnmul.f32	s0, s7, s10
 800128a:	ee67 7a81 	vmul.f32	s15, s15, s2
 800128e:	eea0 0aa6 	vfma.f32	s0, s1, s13
 8001292:	eee3 7a04 	vfma.f32	s15, s6, s8
    c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 8001296:	ee76 2ac4 	vsub.f32	s5, s13, s8
    a = (POW2(s[0]) * (s[1] - s[2]) * d[0] - s[0] * (POW2(s[1]) * d[1] - POW2(s[2]) * d[2]) + s[1] * (s[1] * d[1] - s[2] * d[2]) * s[2])
 800129a:	eee4 7a80 	vfma.f32	s15, s9, s0
    b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 800129e:	ee33 2ac4 	vsub.f32	s4, s7, s8
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 80012a2:	ee67 7aa1 	vmul.f32	s15, s15, s3
    b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 80012a6:	ee22 2a05 	vmul.f32	s4, s4, s10
    c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 80012aa:	ee62 2aa5 	vmul.f32	s5, s5, s11
    b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 80012ae:	ee20 3a85 	vmul.f32	s6, s1, s10
    c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 80012b2:	ee24 5a86 	vmul.f32	s10, s9, s12
    a = (POW2(s[0]) * (s[1] - s[2]) * d[0] - s[0] * (POW2(s[1]) * d[1] - POW2(s[2]) * d[2]) + s[1] * (s[1] * d[1] - s[2] * d[2]) * s[2])
 80012b6:	edc1 7a00 	vstr	s15, [r1]
    b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 80012ba:	ee74 7a66 	vsub.f32	s15, s8, s13
    c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 80012be:	ee34 4a63 	vsub.f32	s8, s8, s7
 80012c2:	ee65 5a25 	vmul.f32	s11, s10, s11
 80012c6:	eeb0 5a62 	vmov.f32	s10, s5
    b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 80012ca:	eea0 2aa7 	vfma.f32	s4, s1, s15
    c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 80012ce:	eea6 5a04 	vfma.f32	s10, s12, s8
 80012d2:	ee73 7ae6 	vsub.f32	s15, s7, s13
    b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 80012d6:	ee27 7a02 	vmul.f32	s14, s14, s4
    c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 80012da:	ee67 7a81 	vmul.f32	s15, s15, s2
    b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 80012de:	ee76 6ae3 	vsub.f32	s13, s13, s7
    c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 80012e2:	eee4 7a85 	vfma.f32	s15, s9, s10
    b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 80012e6:	eea3 7a26 	vfma.f32	s14, s6, s13
    c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 80012ea:	ee65 7aa7 	vmul.f32	s15, s11, s15
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 80012ee:	ee27 7a21 	vmul.f32	s14, s14, s3
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 80012f2:	ee67 7aa1 	vmul.f32	s15, s15, s3
    b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 80012f6:	ed82 7a00 	vstr	s14, [r2]
    c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 80012fa:	edc3 7a00 	vstr	s15, [r3]
}
 80012fe:	4770      	bx	lr
 8001300:	200001a0 	.word	0x200001a0
 8001304:	200001a4 	.word	0x200001a4
 8001308:	200001a8 	.word	0x200001a8
 800130c:	00000000 	.word	0x00000000

08001310 <calculate_distance_and_angle>:


DISTANCE_ANGLE calculate_distance_and_angle(uint32_t* Samples)
{
 8001310:	b5f0      	push	{r4, r5, r6, r7, lr}
    float32_t distance[3] = {10, 50, 100};
    //extract global calibration values for overview purpose
    float32_t signal_l[3] = {Calibration_Data[0], Calibration_Data[1], Calibration_Data[2]};
 8001312:	4b53      	ldr	r3, [pc, #332]	; (8001460 <calculate_distance_and_angle+0x150>)
    float32_t distance[3] = {10, 50, 100};
 8001314:	4a53      	ldr	r2, [pc, #332]	; (8001464 <calculate_distance_and_angle+0x154>)
    float32_t signal_l[3] = {Calibration_Data[0], Calibration_Data[1], Calibration_Data[2]};
 8001316:	edd3 7a00 	vldr	s15, [r3]
    float32_t signal_r[3] = {Calibration_Data[3], Calibration_Data[4], Calibration_Data[5]};
 800131a:	ed93 7a04 	vldr	s14, [r3, #16]
    //uint32_t* Samples = MEAS_start_measure();
    FFT fft = calculate_freq_and_signalstrength(1, Samples);

    float32_t signal_pad = fft.signal_strength;
    // Calculate the distance using the coefficients and the actual signal strength
    float32_t calc_distance = a + (b / signal_pad) + (c / POW2(signal_pad));
 800131e:	4f52      	ldr	r7, [pc, #328]	; (8001468 <calculate_distance_and_angle+0x158>)
{
 8001320:	ed2d 8b04 	vpush	{d8-d9}
    float32_t signal_l[3] = {Calibration_Data[0], Calibration_Data[1], Calibration_Data[2]};
 8001324:	eef8 7a67 	vcvt.f32.u32	s15, s15
{
 8001328:	b08d      	sub	sp, #52	; 0x34
    float32_t signal_l[3] = {Calibration_Data[0], Calibration_Data[1], Calibration_Data[2]};
 800132a:	edcd 7a03 	vstr	s15, [sp, #12]
 800132e:	edd3 7a01 	vldr	s15, [r3, #4]
 8001332:	eef8 7a67 	vcvt.f32.u32	s15, s15
{
 8001336:	4604      	mov	r4, r0
    float32_t signal_l[3] = {Calibration_Data[0], Calibration_Data[1], Calibration_Data[2]};
 8001338:	edcd 7a04 	vstr	s15, [sp, #16]
 800133c:	edd3 7a02 	vldr	s15, [r3, #8]
 8001340:	eef8 7a67 	vcvt.f32.u32	s15, s15
{
 8001344:	460e      	mov	r6, r1
    float32_t signal_l[3] = {Calibration_Data[0], Calibration_Data[1], Calibration_Data[2]};
 8001346:	edcd 7a05 	vstr	s15, [sp, #20]
    float32_t signal_r[3] = {Calibration_Data[3], Calibration_Data[4], Calibration_Data[5]};
 800134a:	edd3 7a03 	vldr	s15, [r3, #12]
    float32_t distance[3] = {10, 50, 100};
 800134e:	ca07      	ldmia	r2, {r0, r1, r2}
    float32_t signal_r[3] = {Calibration_Data[3], Calibration_Data[4], Calibration_Data[5]};
 8001350:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8001354:	edd3 7a05 	vldr	s15, [r3, #20]
 8001358:	edcd 6a06 	vstr	s13, [sp, #24]
 800135c:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8001360:	eef8 7a67 	vcvt.f32.u32	s15, s15
    float32_t distance[3] = {10, 50, 100};
 8001364:	466d      	mov	r5, sp
 8001366:	e885 0007 	stmia.w	r5, {r0, r1, r2}
    calculate_coefficients_single_pad(signal_r, distance);
 800136a:	a806      	add	r0, sp, #24
 800136c:	4629      	mov	r1, r5
    float32_t signal_r[3] = {Calibration_Data[3], Calibration_Data[4], Calibration_Data[5]};
 800136e:	ed8d 7a07 	vstr	s14, [sp, #28]
 8001372:	edcd 7a08 	vstr	s15, [sp, #32]
    calculate_coefficients_single_pad(signal_r, distance);
 8001376:	f7ff ff59 	bl	800122c <calculate_coefficients_single_pad>
    calculate_coefficients_single_pad(signal_l, distance);
 800137a:	4629      	mov	r1, r5
 800137c:	a803      	add	r0, sp, #12
 800137e:	f7ff ff55 	bl	800122c <calculate_coefficients_single_pad>
    FFT fft = calculate_freq_and_signalstrength(1, Samples);
 8001382:	4632      	mov	r2, r6
 8001384:	a809      	add	r0, sp, #36	; 0x24
 8001386:	2101      	movs	r1, #1
 8001388:	f7ff fe8c 	bl	80010a4 <calculate_freq_and_signalstrength>
 800138c:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
    float32_t calc_distance = a + (b / signal_pad) + (c / POW2(signal_pad));
 8001390:	edd7 6a00 	vldr	s13, [r7]
 8001394:	4d35      	ldr	r5, [pc, #212]	; (800146c <calculate_distance_and_angle+0x15c>)
 8001396:	eec6 8aa7 	vdiv.f32	s17, s13, s15
    // Calculate the angle using the distance

    // Set the calculated values
    dist_angle.distance_r = calc_distance;

    fft = calculate_freq_and_signalstrength(2, Samples);
 800139a:	4632      	mov	r2, r6
    float32_t calc_distance = a + (b / signal_pad) + (c / POW2(signal_pad));
 800139c:	4e34      	ldr	r6, [pc, #208]	; (8001470 <calculate_distance_and_angle+0x160>)
    fft = calculate_freq_and_signalstrength(2, Samples);
 800139e:	a809      	add	r0, sp, #36	; 0x24
 80013a0:	2102      	movs	r1, #2
    float32_t calc_distance = a + (b / signal_pad) + (c / POW2(signal_pad));
 80013a2:	ee27 7aa7 	vmul.f32	s14, s15, s15
 80013a6:	edd6 6a00 	vldr	s13, [r6]
 80013aa:	edd5 7a00 	vldr	s15, [r5]
 80013ae:	ee78 8aa7 	vadd.f32	s17, s17, s15
 80013b2:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80013b6:	ee78 8aa7 	vadd.f32	s17, s17, s15
    fft = calculate_freq_and_signalstrength(2, Samples);
 80013ba:	f7ff fe73 	bl	80010a4 <calculate_freq_and_signalstrength>
 80013be:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
    signal_pad = fft.signal_strength;
    // Calculate the distance using the coefficients and the actual signal strength
    calc_distance = a + (b / signal_pad) + (c / POW2(signal_pad));
 80013c2:	ed97 7a00 	vldr	s14, [r7]
 80013c6:	ed96 6a00 	vldr	s12, [r6]
 80013ca:	ee67 6aa7 	vmul.f32	s13, s15, s15
 80013ce:	ee87 8a27 	vdiv.f32	s16, s14, s15
 80013d2:	eec6 7a26 	vdiv.f32	s15, s12, s13
 80013d6:	ed95 7a00 	vldr	s14, [r5]
 80013da:	ee38 8a07 	vadd.f32	s16, s16, s14
 80013de:	ee38 8a27 	vadd.f32	s16, s16, s15
    // Set the calculated values
    dist_angle.distance_l = calc_distance;

    // calculate the distance and angle
    dist_angle.distance = (dist_angle.distance_r + dist_angle.distance_l) / 2;
    dist_angle.angle_r = atanf(2 * D_P / (dist_angle.distance_r - dist_angle.distance_l));
 80013e2:	ee78 7ac8 	vsub.f32	s15, s17, s16
 80013e6:	ee17 0a90 	vmov	r0, s15
 80013ea:	f7ff f915 	bl	8000618 <__aeabi_f2d>
 80013ee:	4602      	mov	r2, r0
 80013f0:	460b      	mov	r3, r1
 80013f2:	a119      	add	r1, pc, #100	; (adr r1, 8001458 <calculate_distance_and_angle+0x148>)
 80013f4:	e9d1 0100 	ldrd	r0, r1, [r1]
 80013f8:	f7ff fa90 	bl	800091c <__aeabi_ddiv>
 80013fc:	460f      	mov	r7, r1
 80013fe:	4606      	mov	r6, r0
 8001400:	f7ff fb74 	bl	8000aec <__aeabi_d2f>
 8001404:	ee00 0a10 	vmov	s0, r0
 8001408:	f02b fbb6 	bl	802cb78 <atanf>
    dist_angle.angle_l = atanf(2 * D_P / (dist_angle.distance_l - dist_angle.distance_r));
 800140c:	f107 4100 	add.w	r1, r7, #2147483648	; 0x80000000
 8001410:	4630      	mov	r0, r6
    dist_angle.angle_r = atanf(2 * D_P / (dist_angle.distance_r - dist_angle.distance_l));
 8001412:	eeb0 9a40 	vmov.f32	s18, s0
    dist_angle.angle_l = atanf(2 * D_P / (dist_angle.distance_l - dist_angle.distance_r));
 8001416:	f7ff fb69 	bl	8000aec <__aeabi_d2f>
 800141a:	ee00 0a10 	vmov	s0, r0
 800141e:	f02b fbab 	bl	802cb78 <atanf>
    dist_angle.distance = (dist_angle.distance_r + dist_angle.distance_l) / 2;
 8001422:	ee38 7a88 	vadd.f32	s14, s17, s16

    dist_angle.angle = (dist_angle.angle_r * 180 / PI);
 8001426:	eddf 7a13 	vldr	s15, [pc, #76]	; 8001474 <calculate_distance_and_angle+0x164>

    // Return the calculated values
    return dist_angle;
 800142a:	edc4 8a00 	vstr	s17, [r4]
    dist_angle.distance = (dist_angle.distance_r + dist_angle.distance_l) / 2;
 800142e:	eef6 6a00 	vmov.f32	s13, #96	; 0x3f000000  0.5
 8001432:	ee27 7a26 	vmul.f32	s14, s14, s13
    dist_angle.angle = (dist_angle.angle_r * 180 / PI);
 8001436:	ee69 7a27 	vmul.f32	s15, s18, s15
}
 800143a:	4620      	mov	r0, r4
    return dist_angle;
 800143c:	ed84 9a01 	vstr	s18, [r4, #4]
 8001440:	ed84 8a02 	vstr	s16, [r4, #8]
 8001444:	ed84 0a03 	vstr	s0, [r4, #12]
 8001448:	ed84 7a04 	vstr	s14, [r4, #16]
 800144c:	edc4 7a05 	vstr	s15, [r4, #20]
}
 8001450:	b00d      	add	sp, #52	; 0x34
 8001452:	ecbd 8b04 	vpop	{d8-d9}
 8001456:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001458:	33333333 	.word	0x33333333
 800145c:	4043b333 	.word	0x4043b333
 8001460:	200001ac 	.word	0x200001ac
 8001464:	0802e9d0 	.word	0x0802e9d0
 8001468:	200001a4 	.word	0x200001a4
 800146c:	200001a0 	.word	0x200001a0
 8001470:	200001a8 	.word	0x200001a8
 8001474:	42652ee0 	.word	0x42652ee0

08001478 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 8001478:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
 800147a:	2064      	movs	r0, #100	; 0x64
 800147c:	f00e fa3c 	bl	800f8f8 <osDelay>
  for(;;)
 8001480:	e7fb      	b.n	800147a <StartDefaultTask+0x2>
 8001482:	bf00      	nop

08001484 <StartTimeoutTask>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartTimeoutTask */
void StartTimeoutTask(void *argument)
{
 8001484:	b580      	push	{r7, lr}
 8001486:	4c19      	ldr	r4, [pc, #100]	; (80014ec <StartTimeoutTask+0x68>)
 8001488:	f8df 8074 	ldr.w	r8, [pc, #116]	; 8001500 <StartTimeoutTask+0x7c>
 800148c:	4e18      	ldr	r6, [pc, #96]	; (80014f0 <StartTimeoutTask+0x6c>)
 800148e:	4d19      	ldr	r5, [pc, #100]	; (80014f4 <StartTimeoutTask+0x70>)
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);

	  if(sleep_timeout_value == 0)
	  {
		  sleep_timeout_value = 60;
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 8001490:	4f19      	ldr	r7, [pc, #100]	; (80014f8 <StartTimeoutTask+0x74>)
	  sleep_timeout_value--;
 8001492:	6820      	ldr	r0, [r4, #0]
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 8001494:	4915      	ldr	r1, [pc, #84]	; (80014ec <StartTimeoutTask+0x68>)
 8001496:	2300      	movs	r3, #0
 8001498:	461a      	mov	r2, r3
	  sleep_timeout_value--;
 800149a:	f100 3cff 	add.w	ip, r0, #4294967295
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 800149e:	f8d8 0000 	ldr.w	r0, [r8]
	  sleep_timeout_value--;
 80014a2:	f8c4 c000 	str.w	ip, [r4]
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 80014a6:	f00e fb23 	bl	800faf0 <osMessageQueuePut>
	  if(sleep_timeout_value == 0)
 80014aa:	6822      	ldr	r2, [r4, #0]
		  sleep_timeout_value = 60;
 80014ac:	233c      	movs	r3, #60	; 0x3c
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 80014ae:	4638      	mov	r0, r7
 80014b0:	2120      	movs	r1, #32
	  if(sleep_timeout_value == 0)
 80014b2:	b912      	cbnz	r2, 80014ba <StartTimeoutTask+0x36>
		  sleep_timeout_value = 60;
 80014b4:	6023      	str	r3, [r4, #0]
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 80014b6:	f00a fc49 	bl	800bd4c <HAL_GPIO_WritePin>
	  }
	  if(sleep_timeout_value > 60 && sleep_timeout_value < 0)
		  sleep_timeout_value = 60;

	  // Toggle onboard LED as heartbeat visual feedback
	  HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 80014ba:	4810      	ldr	r0, [pc, #64]	; (80014fc <StartTimeoutTask+0x78>)
 80014bc:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80014c0:	f00a fc48 	bl	800bd54 <HAL_GPIO_TogglePin>

	  //pwm test
	  static uint8_t prescaler = 140;
	  HAL_TIM_PWM_Stop(&htim14, TIM_CHANNEL_1);
 80014c4:	2100      	movs	r1, #0
 80014c6:	4630      	mov	r0, r6
 80014c8:	f00d fd3e 	bl	800ef48 <HAL_TIM_PWM_Stop>
	  htim14.Init.Prescaler = prescaler-1;
 80014cc:	782b      	ldrb	r3, [r5, #0]
	  HAL_TIM_PWM_Start(&htim14, TIM_CHANNEL_1);
 80014ce:	2100      	movs	r1, #0
	  htim14.Init.Prescaler = prescaler-1;
 80014d0:	3b01      	subs	r3, #1
	  HAL_TIM_PWM_Start(&htim14, TIM_CHANNEL_1);
 80014d2:	4630      	mov	r0, r6
	  htim14.Init.Prescaler = prescaler-1;
 80014d4:	6073      	str	r3, [r6, #4]
	  HAL_TIM_PWM_Start(&htim14, TIM_CHANNEL_1);
 80014d6:	f00d fcc7 	bl	800ee68 <HAL_TIM_PWM_Start>
	  prescaler = prescaler + 10;
 80014da:	782b      	ldrb	r3, [r5, #0]
	  if(prescaler > 420)
	  {
		  prescaler = 140;
	  }

	  osDelay(1000);
 80014dc:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
	  prescaler = prescaler + 10;
 80014e0:	330a      	adds	r3, #10
 80014e2:	702b      	strb	r3, [r5, #0]
	  osDelay(1000);
 80014e4:	f00e fa08 	bl	800f8f8 <osDelay>
  {
 80014e8:	e7d3      	b.n	8001492 <StartTimeoutTask+0xe>
 80014ea:	bf00      	nop
 80014ec:	20000010 	.word	0x20000010
 80014f0:	20000380 	.word	0x20000380
 80014f4:	2000000c 	.word	0x2000000c
 80014f8:	40021000 	.word	0x40021000
 80014fc:	40021800 	.word	0x40021800
 8001500:	200001e4 	.word	0x200001e4

08001504 <gyro_disable>:
{
 8001504:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001506:	b083      	sub	sp, #12
	__HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 8001508:	4e1f      	ldr	r6, [pc, #124]	; (8001588 <gyro_disable+0x84>)
	GPIOC->MODER &= ~GPIO_MODER_MODER1_Msk;        // Reset mode for PC1
 800150a:	4d20      	ldr	r5, [pc, #128]	; (800158c <gyro_disable+0x88>)
	GPIOF->OSPEEDR &= ~GPIO_OSPEEDR_OSPEED8_Msk;  // Reset speed of PF8
 800150c:	4c20      	ldr	r4, [pc, #128]	; (8001590 <gyro_disable+0x8c>)
	__HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 800150e:	2700      	movs	r7, #0
 8001510:	9700      	str	r7, [sp, #0]
 8001512:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8001514:	f043 0304 	orr.w	r3, r3, #4
 8001518:	6333      	str	r3, [r6, #48]	; 0x30
 800151a:	6b33      	ldr	r3, [r6, #48]	; 0x30
 800151c:	f003 0304 	and.w	r3, r3, #4
 8001520:	9300      	str	r3, [sp, #0]
 8001522:	9b00      	ldr	r3, [sp, #0]
	GPIOC->MODER &= ~GPIO_MODER_MODER1_Msk;        // Reset mode for PC1
 8001524:	682b      	ldr	r3, [r5, #0]
 8001526:	f023 030c 	bic.w	r3, r3, #12
 800152a:	602b      	str	r3, [r5, #0]
	GPIOC->MODER |= 1UL << GPIO_MODER_MODER1_Pos;  // Set PC1 as output
 800152c:	682b      	ldr	r3, [r5, #0]
 800152e:	f043 0304 	orr.w	r3, r3, #4
 8001532:	602b      	str	r3, [r5, #0]
	GPIOC->BSRR |= GPIO_BSRR_BR1;  // Set GYRO (CS) to 0 for a short time
 8001534:	69ab      	ldr	r3, [r5, #24]
 8001536:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800153a:	61ab      	str	r3, [r5, #24]
	HAL_Delay(10);                 // Wait some time
 800153c:	200a      	movs	r0, #10
 800153e:	f00a f82f 	bl	800b5a0 <HAL_Delay>
	GPIOC->MODER |= 3UL << GPIO_MODER_MODER1_Pos;  // Analog PC1 = ADC123_IN11
 8001542:	682b      	ldr	r3, [r5, #0]
 8001544:	f043 030c 	orr.w	r3, r3, #12
 8001548:	602b      	str	r3, [r5, #0]
	__HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 800154a:	9701      	str	r7, [sp, #4]
 800154c:	6b33      	ldr	r3, [r6, #48]	; 0x30
 800154e:	f043 0320 	orr.w	r3, r3, #32
 8001552:	6333      	str	r3, [r6, #48]	; 0x30
 8001554:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8001556:	f003 0320 	and.w	r3, r3, #32
 800155a:	9301      	str	r3, [sp, #4]
 800155c:	9b01      	ldr	r3, [sp, #4]
	GPIOF->OSPEEDR &= ~GPIO_OSPEEDR_OSPEED8_Msk;  // Reset speed of PF8
 800155e:	68a3      	ldr	r3, [r4, #8]
 8001560:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8001564:	60a3      	str	r3, [r4, #8]
	GPIOF->AFR[1] &= ~GPIO_AFRH_AFSEL8_Msk;  // Reset alternate function of PF8
 8001566:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001568:	f023 030f 	bic.w	r3, r3, #15
 800156c:	6263      	str	r3, [r4, #36]	; 0x24
	GPIOF->PUPDR &= ~GPIO_PUPDR_PUPD8_Msk;   // Reset pulup/down of PF8
 800156e:	68e3      	ldr	r3, [r4, #12]
 8001570:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8001574:	60e3      	str	r3, [r4, #12]
	HAL_Delay(10);                           // Wait some time
 8001576:	200a      	movs	r0, #10
 8001578:	f00a f812 	bl	800b5a0 <HAL_Delay>
	GPIOF->MODER |= 3UL << GPIO_MODER_MODER8_Pos;  // Analog mode PF8 = ADC3_IN4
 800157c:	6823      	ldr	r3, [r4, #0]
 800157e:	f443 3340 	orr.w	r3, r3, #196608	; 0x30000
 8001582:	6023      	str	r3, [r4, #0]
}
 8001584:	b003      	add	sp, #12
 8001586:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001588:	40023800 	.word	0x40023800
 800158c:	40020800 	.word	0x40020800
 8001590:	40021400 	.word	0x40021400

08001594 <setCalibrationFlashValues>:
{
 8001594:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8001598:	461c      	mov	r4, r3
	uint32_t Rx_Data[numberofwords];
 800159a:	009b      	lsls	r3, r3, #2
 800159c:	3307      	adds	r3, #7
 800159e:	466d      	mov	r5, sp
 80015a0:	08db      	lsrs	r3, r3, #3
 80015a2:	eba5 03c3 	sub.w	r3, r5, r3, lsl #3
{
 80015a6:	af00      	add	r7, sp, #0
	uint32_t Rx_Data[numberofwords];
 80015a8:	469d      	mov	sp, r3
 80015aa:	466d      	mov	r5, sp
{
 80015ac:	4616      	mov	r6, r2
 80015ae:	4681      	mov	r9, r0
 80015b0:	4688      	mov	r8, r1
	Flash_Read_Data(StartSectorAddress, Rx_Data, numberofwords);
 80015b2:	4622      	mov	r2, r4
 80015b4:	4629      	mov	r1, r5
 80015b6:	f7ff fd69 	bl	800108c <Flash_Read_Data>
	Rx_Data[index] = value;
 80015ba:	f845 8026 	str.w	r8, [r5, r6, lsl #2]
	Flash_Write_Data(StartSectorAddress, data_addr, numberofwords);
 80015be:	4622      	mov	r2, r4
 80015c0:	4629      	mov	r1, r5
 80015c2:	4648      	mov	r0, r9
 80015c4:	f7ff fd28 	bl	8001018 <Flash_Write_Data>
}
 80015c8:	46bd      	mov	sp, r7
 80015ca:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80015ce:	bf00      	nop

080015d0 <SystemClock_Config>:
{
 80015d0:	b530      	push	{r4, r5, lr}
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80015d2:	2400      	movs	r4, #0
{
 80015d4:	b095      	sub	sp, #84	; 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80015d6:	e9cd 440a 	strd	r4, r4, [sp, #40]	; 0x28
 80015da:	e9cd 440c 	strd	r4, r4, [sp, #48]	; 0x30
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80015de:	e9cd 4403 	strd	r4, r4, [sp, #12]
 80015e2:	e9cd 4405 	strd	r4, r4, [sp, #20]
  __HAL_RCC_PWR_CLK_ENABLE();
 80015e6:	4a1e      	ldr	r2, [pc, #120]	; (8001660 <SystemClock_Config+0x90>)
 80015e8:	9401      	str	r4, [sp, #4]
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80015ea:	9407      	str	r4, [sp, #28]
  __HAL_RCC_PWR_CLK_ENABLE();
 80015ec:	6c11      	ldr	r1, [r2, #64]	; 0x40
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80015ee:	4b1d      	ldr	r3, [pc, #116]	; (8001664 <SystemClock_Config+0x94>)
  __HAL_RCC_PWR_CLK_ENABLE();
 80015f0:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 80015f4:	6411      	str	r1, [r2, #64]	; 0x40
 80015f6:	6c12      	ldr	r2, [r2, #64]	; 0x40
 80015f8:	f002 5280 	and.w	r2, r2, #268435456	; 0x10000000
 80015fc:	9201      	str	r2, [sp, #4]
 80015fe:	9a01      	ldr	r2, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001600:	9402      	str	r4, [sp, #8]
 8001602:	681a      	ldr	r2, [r3, #0]
 8001604:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 8001608:	601a      	str	r2, [r3, #0]
 800160a:	681b      	ldr	r3, [r3, #0]
 800160c:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8001610:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8001612:	2201      	movs	r2, #1
 8001614:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8001618:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLM = 8;
 800161c:	2308      	movs	r3, #8
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 800161e:	2502      	movs	r5, #2
  RCC_OscInitStruct.PLL.PLLM = 8;
 8001620:	9310      	str	r3, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001622:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  RCC_OscInitStruct.PLL.PLLN = 336;
 8001626:	f44f 73a8 	mov.w	r3, #336	; 0x150
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 800162a:	e9cd 520e 	strd	r5, r2, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLN = 336;
 800162e:	9311      	str	r3, [sp, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001630:	2202      	movs	r2, #2
 8001632:	2304      	movs	r3, #4
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001634:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001636:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 800163a:	9902      	ldr	r1, [sp, #8]
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800163c:	f00c f9c4 	bl	800d9c8 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001640:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001642:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8001646:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 800164a:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 800164e:	a803      	add	r0, sp, #12
 8001650:	2105      	movs	r1, #5
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8001652:	e9cd 4205 	strd	r4, r2, [sp, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001656:	9307      	str	r3, [sp, #28]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001658:	f00c fbce 	bl	800ddf8 <HAL_RCC_ClockConfig>
}
 800165c:	b015      	add	sp, #84	; 0x54
 800165e:	bd30      	pop	{r4, r5, pc}
 8001660:	40023800 	.word	0x40023800
 8001664:	40007000 	.word	0x40007000

08001668 <main>:
{
 8001668:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800166c:	2400      	movs	r4, #0
{
 800166e:	b09d      	sub	sp, #116	; 0x74
  HAL_Init();
 8001670:	f009 ff6a 	bl	800b548 <HAL_Init>
  SystemClock_Config();
 8001674:	f7ff ffac 	bl	80015d0 <SystemClock_Config>
  gyro_disable();
 8001678:	f7ff ff44 	bl	8001504 <gyro_disable>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800167c:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8001680:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001684:	4bc3      	ldr	r3, [pc, #780]	; (8001994 <main+0x32c>)
 8001686:	9400      	str	r4, [sp, #0]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001688:	9413      	str	r4, [sp, #76]	; 0x4c
  __HAL_RCC_GPIOE_CLK_ENABLE();
 800168a:	6b19      	ldr	r1, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 800168c:	48c2      	ldr	r0, [pc, #776]	; (8001998 <main+0x330>)
  hi2c3.Instance = I2C3;
 800168e:	f8df a33c 	ldr.w	sl, [pc, #828]	; 80019cc <main+0x364>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001692:	f041 0110 	orr.w	r1, r1, #16
 8001696:	6319      	str	r1, [r3, #48]	; 0x30
 8001698:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800169a:	f001 0110 	and.w	r1, r1, #16
 800169e:	9100      	str	r1, [sp, #0]
 80016a0:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 80016a2:	9401      	str	r4, [sp, #4]
 80016a4:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80016a6:	f041 0120 	orr.w	r1, r1, #32
 80016aa:	6319      	str	r1, [r3, #48]	; 0x30
 80016ac:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80016ae:	f001 0120 	and.w	r1, r1, #32
 80016b2:	9101      	str	r1, [sp, #4]
 80016b4:	9901      	ldr	r1, [sp, #4]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 80016b6:	9402      	str	r4, [sp, #8]
 80016b8:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80016ba:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 80016be:	6319      	str	r1, [r3, #48]	; 0x30
 80016c0:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80016c2:	f001 0180 	and.w	r1, r1, #128	; 0x80
 80016c6:	9102      	str	r1, [sp, #8]
 80016c8:	9902      	ldr	r1, [sp, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80016ca:	9403      	str	r4, [sp, #12]
 80016cc:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80016ce:	f041 0104 	orr.w	r1, r1, #4
 80016d2:	6319      	str	r1, [r3, #48]	; 0x30
 80016d4:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80016d6:	f001 0104 	and.w	r1, r1, #4
 80016da:	9103      	str	r1, [sp, #12]
 80016dc:	9903      	ldr	r1, [sp, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80016de:	9404      	str	r4, [sp, #16]
 80016e0:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80016e2:	f041 0101 	orr.w	r1, r1, #1
 80016e6:	6319      	str	r1, [r3, #48]	; 0x30
 80016e8:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80016ea:	f001 0101 	and.w	r1, r1, #1
 80016ee:	9104      	str	r1, [sp, #16]
 80016f0:	9904      	ldr	r1, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80016f2:	9405      	str	r4, [sp, #20]
 80016f4:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80016f6:	f041 0102 	orr.w	r1, r1, #2
 80016fa:	6319      	str	r1, [r3, #48]	; 0x30
 80016fc:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80016fe:	f001 0102 	and.w	r1, r1, #2
 8001702:	9105      	str	r1, [sp, #20]
 8001704:	9905      	ldr	r1, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8001706:	9406      	str	r4, [sp, #24]
 8001708:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800170a:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800170e:	6319      	str	r1, [r3, #48]	; 0x30
 8001710:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001712:	f001 0140 	and.w	r1, r1, #64	; 0x40
 8001716:	9106      	str	r1, [sp, #24]
 8001718:	9906      	ldr	r1, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800171a:	9407      	str	r4, [sp, #28]
 800171c:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800171e:	f041 0108 	orr.w	r1, r1, #8
 8001722:	6319      	str	r1, [r3, #48]	; 0x30
 8001724:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001726:	f003 0308 	and.w	r3, r3, #8
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 800172a:	4622      	mov	r2, r4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800172c:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 800172e:	2114      	movs	r1, #20
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001730:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8001732:	f00a fb0b 	bl	800bd4c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(POWER_ON_DEVICE_GPIO_Port, POWER_ON_DEVICE_Pin, GPIO_PIN_SET);
 8001736:	4898      	ldr	r0, [pc, #608]	; (8001998 <main+0x330>)
 8001738:	2120      	movs	r1, #32
 800173a:	2201      	movs	r2, #1
 800173c:	f00a fb06 	bl	800bd4c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2|DEBUG_GPIO_Pin, GPIO_PIN_RESET);
 8001740:	4896      	ldr	r0, [pc, #600]	; (800199c <main+0x334>)
 8001742:	4622      	mov	r2, r4
 8001744:	2114      	movs	r1, #20
 8001746:	f00a fb01 	bl	800bd4c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_12, GPIO_PIN_RESET);
 800174a:	4895      	ldr	r0, [pc, #596]	; (80019a0 <main+0x338>)
 800174c:	4622      	mov	r2, r4
 800174e:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001752:	f00a fafb 	bl	800bd4c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 8001756:	4893      	ldr	r0, [pc, #588]	; (80019a4 <main+0x33c>)
 8001758:	4622      	mov	r2, r4
 800175a:	f44f 5140 	mov.w	r1, #12288	; 0x3000
 800175e:	f00a faf5 	bl	800bd4c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOG, GPIO_PIN_2, GPIO_PIN_RESET);
 8001762:	4891      	ldr	r0, [pc, #580]	; (80019a8 <main+0x340>)
 8001764:	4622      	mov	r2, r4
 8001766:	2104      	movs	r1, #4
 8001768:	f00a faf0 	bl	800bd4c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(DEVICE_ON_GPIO_Port, DEVICE_ON_Pin, GPIO_PIN_SET);
 800176c:	2201      	movs	r2, #1
 800176e:	488e      	ldr	r0, [pc, #568]	; (80019a8 <main+0x340>)
 8001770:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001774:	f00a faea 	bl	800bd4c <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001778:	f04f 0801 	mov.w	r8, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800177c:	f04f 0b03 	mov.w	fp, #3
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin|FRAME_RATE_Pin;
 8001780:	2314      	movs	r3, #20
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001782:	4885      	ldr	r0, [pc, #532]	; (8001998 <main+0x330>)
 8001784:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pin = DEVICE_ON_OFF_TRIGGER_Pin;
 8001786:	2608      	movs	r6, #8
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001788:	e9cd 380f 	strd	r3, r8, [sp, #60]	; 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800178c:	e9cd 4b11 	strd	r4, fp, [sp, #68]	; 0x44
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001790:	f00a f998 	bl	800bac4 <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8001794:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8001798:	487f      	ldr	r0, [pc, #508]	; (8001998 <main+0x330>)
  GPIO_InitStruct.Pin = DEVICE_ON_OFF_TRIGGER_Pin;
 800179a:	960f      	str	r6, [sp, #60]	; 0x3c
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 800179c:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 800179e:	9310      	str	r3, [sp, #64]	; 0x40
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80017a0:	9411      	str	r4, [sp, #68]	; 0x44
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 80017a2:	f00a f98f 	bl	800bac4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = POWER_ON_DEVICE_Pin;
 80017a6:	2320      	movs	r3, #32
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 80017a8:	487b      	ldr	r0, [pc, #492]	; (8001998 <main+0x330>)
  GPIO_InitStruct.Pin = POWER_ON_DEVICE_Pin;
 80017aa:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 80017ac:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80017ae:	2502      	movs	r5, #2
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 80017b0:	2704      	movs	r7, #4
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80017b2:	e9cd 8410 	strd	r8, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80017b6:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 80017b8:	f00a f984 	bl	800bac4 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80017bc:	4877      	ldr	r0, [pc, #476]	; (800199c <main+0x334>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80017be:	9512      	str	r5, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80017c0:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pin = DEBUG_GPIO_Pin;
 80017c2:	f04f 0910 	mov.w	r9, #16
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80017c6:	e9cd 8410 	strd	r8, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 80017ca:	970f      	str	r7, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80017cc:	f00a f97a 	bl	800bac4 <HAL_GPIO_Init>
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 80017d0:	4872      	ldr	r0, [pc, #456]	; (800199c <main+0x334>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80017d2:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 80017d4:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80017d6:	e9cd 8410 	strd	r8, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Pin = DEBUG_GPIO_Pin;
 80017da:	f8cd 903c 	str.w	r9, [sp, #60]	; 0x3c
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 80017de:	f00a f971 	bl	800bac4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12;
 80017e2:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80017e6:	486e      	ldr	r0, [pc, #440]	; (80019a0 <main+0x338>)
  GPIO_InitStruct.Pin = GPIO_PIN_12;
 80017e8:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80017ea:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80017ec:	e9cd 8410 	strd	r8, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80017f0:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80017f2:	f00a f967 	bl	800bac4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 80017f6:	f44f 5340 	mov.w	r3, #12288	; 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80017fa:	486a      	ldr	r0, [pc, #424]	; (80019a4 <main+0x33c>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80017fc:	9512      	str	r5, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80017fe:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001800:	e9cd 8410 	strd	r8, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 8001804:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001806:	f00a f95d 	bl	800bac4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_2|DEVICE_ON_Pin;
 800180a:	f242 0304 	movw	r3, #8196	; 0x2004
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800180e:	4866      	ldr	r0, [pc, #408]	; (80019a8 <main+0x340>)
  GPIO_InitStruct.Pin = GPIO_PIN_2|DEVICE_ON_Pin;
 8001810:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001812:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001814:	e9cd 8410 	strd	r8, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001818:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800181a:	f00a f953 	bl	800bac4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 800181e:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001822:	4862      	ldr	r0, [pc, #392]	; (80019ac <main+0x344>)
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 8001824:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001826:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Alternate = GPIO_AF15_EVENTOUT;
 8001828:	230f      	movs	r3, #15
 800182a:	9313      	str	r3, [sp, #76]	; 0x4c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800182c:	e9cd 5410 	strd	r5, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001830:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001832:	f00a f947 	bl	800bac4 <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(EXTI3_IRQn, 5, 0);
 8001836:	2105      	movs	r1, #5
 8001838:	4622      	mov	r2, r4
 800183a:	2009      	movs	r0, #9
 800183c:	f009 fed4 	bl	800b5e8 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI3_IRQn);
 8001840:	2009      	movs	r0, #9
 8001842:	f009 ff0f 	bl	800b664 <HAL_NVIC_EnableIRQ>
  hcrc.Instance = CRC;
 8001846:	485a      	ldr	r0, [pc, #360]	; (80019b0 <main+0x348>)
 8001848:	4a5a      	ldr	r2, [pc, #360]	; (80019b4 <main+0x34c>)
 800184a:	6002      	str	r2, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 800184c:	f009 ff18 	bl	800b680 <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 8001850:	4959      	ldr	r1, [pc, #356]	; (80019b8 <main+0x350>)
 8001852:	4a5a      	ldr	r2, [pc, #360]	; (80019bc <main+0x354>)
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001854:	4650      	mov	r0, sl
  hi2c3.Init.ClockSpeed = 100000;
 8001856:	e9ca 1200 	strd	r1, r2, [sl]
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 800185a:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 800185e:	f8ca 2010 	str.w	r2, [sl, #16]
  hi2c3.Init.OwnAddress1 = 0;
 8001862:	e9ca 4402 	strd	r4, r4, [sl, #8]
  hi2c3.Init.OwnAddress2 = 0;
 8001866:	e9ca 4405 	strd	r4, r4, [sl, #20]
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 800186a:	e9ca 4407 	strd	r4, r4, [sl, #28]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 800186e:	f00a fcd3 	bl	800c218 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 8001872:	4649      	mov	r1, r9
 8001874:	4650      	mov	r0, sl
 8001876:	f00b fe9b 	bl	800d5b0 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 800187a:	4621      	mov	r1, r4
 800187c:	4650      	mov	r0, sl
 800187e:	f00b feb7 	bl	800d5f0 <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001882:	f8df c14c 	ldr.w	ip, [pc, #332]	; 80019d0 <main+0x368>
  hspi5.Instance = SPI5;
 8001886:	484e      	ldr	r0, [pc, #312]	; (80019c0 <main+0x358>)
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001888:	f8df a148 	ldr.w	sl, [pc, #328]	; 80019d4 <main+0x36c>
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800188c:	6284      	str	r4, [r0, #40]	; 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 800188e:	f44f 7282 	mov.w	r2, #260	; 0x104
 8001892:	e9c0 c200 	strd	ip, r2, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8001896:	f44f 7e00 	mov.w	lr, #512	; 0x200
 800189a:	2218      	movs	r2, #24
 800189c:	e9c0 e206 	strd	lr, r2, [r0, #24]
  hspi5.Init.CRCPolynomial = 10;
 80018a0:	220a      	movs	r2, #10
 80018a2:	62c2      	str	r2, [r0, #44]	; 0x2c
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 80018a4:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 80018a8:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 80018ac:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 80018b0:	f00c fd90 	bl	800e3d4 <HAL_SPI_Init>
  SdramTiming.ExitSelfRefreshDelay = 7;
 80018b4:	2207      	movs	r2, #7
 80018b6:	9210      	str	r2, [sp, #64]	; 0x40
  SdramTiming.RowCycleDelay = 7;
 80018b8:	9212      	str	r2, [sp, #72]	; 0x48
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 80018ba:	4a42      	ldr	r2, [pc, #264]	; (80019c4 <main+0x35c>)
 80018bc:	f8ca 2000 	str.w	r2, [sl]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 80018c0:	2040      	movs	r0, #64	; 0x40
 80018c2:	f44f 72c0 	mov.w	r2, #384	; 0x180
 80018c6:	e9ca 0205 	strd	r0, r2, [sl, #20]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 80018ca:	f44f 6200 	mov.w	r2, #2048	; 0x800
 80018ce:	f8ca 2020 	str.w	r2, [sl, #32]
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80018d2:	a90f      	add	r1, sp, #60	; 0x3c
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 80018d4:	f44f 5200 	mov.w	r2, #8192	; 0x2000
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80018d8:	4650      	mov	r0, sl
  hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
 80018da:	e9ca 8401 	strd	r8, r4, [sl, #4]
  hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 80018de:	e9ca 7903 	strd	r7, r9, [sl, #12]
  SdramTiming.RPDelay = 2;
 80018e2:	e9cd b513 	strd	fp, r5, [sp, #76]	; 0x4c
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 80018e6:	f8ca 2028 	str.w	r2, [sl, #40]	; 0x28
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 80018ea:	f8ca 401c 	str.w	r4, [sl, #28]
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 80018ee:	f8ca 4024 	str.w	r4, [sl, #36]	; 0x24
  SdramTiming.LoadToActiveDelay = 2;
 80018f2:	950f      	str	r5, [sp, #60]	; 0x3c
  SdramTiming.SelfRefreshTime = 4;
 80018f4:	9711      	str	r7, [sp, #68]	; 0x44
  SdramTiming.RCDDelay = 2;
 80018f6:	9515      	str	r5, [sp, #84]	; 0x54
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80018f8:	f00c fc7a 	bl	800e1f0 <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80018fc:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001900:	a90b      	add	r1, sp, #44	; 0x2c
 8001902:	4650      	mov	r0, sl
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001904:	e9cd 860b 	strd	r8, r6, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 8001908:	e9cd 840d 	strd	r8, r4, [sp, #52]	; 0x34
 __IO uint32_t tmpmrd =0;
 800190c:	9408      	str	r4, [sp, #32]
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800190e:	f00c fc91 	bl	800e234 <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 8001912:	4640      	mov	r0, r8
 8001914:	f009 fe44 	bl	800b5a0 <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001918:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800191c:	a90b      	add	r1, sp, #44	; 0x2c
 800191e:	4650      	mov	r0, sl
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001920:	e9cd 560b 	strd	r5, r6, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 8001924:	e9cd 840d 	strd	r8, r4, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001928:	f00c fc84 	bl	800e234 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800192c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001930:	a90b      	add	r1, sp, #44	; 0x2c
 8001932:	4650      	mov	r0, sl
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001934:	e9cd b60b 	strd	fp, r6, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 8001938:	e9cd 740d 	strd	r7, r4, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800193c:	f00c fc7a 	bl	800e234 <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 8001940:	f44f 720c 	mov.w	r2, #560	; 0x230
 8001944:	9208      	str	r2, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 8001946:	9908      	ldr	r1, [sp, #32]
 8001948:	910e      	str	r1, [sp, #56]	; 0x38
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800194a:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800194e:	a90b      	add	r1, sp, #44	; 0x2c
 8001950:	4650      	mov	r0, sl
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001952:	e9cd 760b 	strd	r7, r6, [sp, #44]	; 0x2c
  Command->AutoRefreshNumber       = 1;
 8001956:	f8cd 8034 	str.w	r8, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800195a:	f00c fc6b 	bl	800e234 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 800195e:	4650      	mov	r0, sl
 8001960:	f240 516a 	movw	r1, #1386	; 0x56a
 8001964:	f00c fc84 	bl	800e270 <HAL_SDRAM_ProgramRefreshRate>
  hltdc.Instance = LTDC;
 8001968:	f8df a06c 	ldr.w	sl, [pc, #108]	; 80019d8 <main+0x370>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 800196c:	2234      	movs	r2, #52	; 0x34
 800196e:	4621      	mov	r1, r4
 8001970:	a80f      	add	r0, sp, #60	; 0x3c
 8001972:	f02c f9a6 	bl	802dcc2 <memset>
  hltdc.Instance = LTDC;
 8001976:	4a14      	ldr	r2, [pc, #80]	; (80019c8 <main+0x360>)
 8001978:	f8ca 2000 	str.w	r2, [sl]
  hltdc.Init.HorizontalSync = 9;
 800197c:	2209      	movs	r2, #9
 800197e:	f8ca 2014 	str.w	r2, [sl, #20]
  hltdc.Init.AccumulatedHBP = 29;
 8001982:	221d      	movs	r2, #29
 8001984:	f8ca 201c 	str.w	r2, [sl, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 8001988:	f240 130d 	movw	r3, #269	; 0x10d
 800198c:	f240 1243 	movw	r2, #323	; 0x143
 8001990:	e024      	b.n	80019dc <main+0x374>
 8001992:	bf00      	nop
 8001994:	40023800 	.word	0x40023800
 8001998:	40021000 	.word	0x40021000
 800199c:	40020800 	.word	0x40020800
 80019a0:	40020400 	.word	0x40020400
 80019a4:	40020c00 	.word	0x40020c00
 80019a8:	40021800 	.word	0x40021800
 80019ac:	40020000 	.word	0x40020000
 80019b0:	200001f0 	.word	0x200001f0
 80019b4:	40023000 	.word	0x40023000
 80019b8:	40005c00 	.word	0x40005c00
 80019bc:	000186a0 	.word	0x000186a0
 80019c0:	20000328 	.word	0x20000328
 80019c4:	a0000140 	.word	0xa0000140
 80019c8:	40016800 	.word	0x40016800
 80019cc:	200001f8 	.word	0x200001f8
 80019d0:	40015000 	.word	0x40015000
 80019d4:	200002f4 	.word	0x200002f4
 80019d8:	2000024c 	.word	0x2000024c
 80019dc:	e9ca 3209 	strd	r3, r2, [sl, #36]	; 0x24
  hltdc.Init.TotalHeigh = 327;
 80019e0:	f240 1117 	movw	r1, #279	; 0x117
 80019e4:	f240 1247 	movw	r2, #327	; 0x147
  hltdc.Init.Backcolor.Blue = 0;
 80019e8:	f8aa 4034 	strh.w	r4, [sl, #52]	; 0x34
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80019ec:	4650      	mov	r0, sl
  hltdc.Init.TotalHeigh = 327;
 80019ee:	e9ca 120b 	strd	r1, r2, [sl, #44]	; 0x2c
  hltdc.Init.VerticalSync = 1;
 80019f2:	f8ca 8018 	str.w	r8, [sl, #24]
  hltdc.Init.AccumulatedVBP = 3;
 80019f6:	f8ca b020 	str.w	fp, [sl, #32]
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 80019fa:	e9ca 4401 	strd	r4, r4, [sl, #4]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 80019fe:	e9ca 4403 	strd	r4, r4, [sl, #12]
  hltdc.Init.Backcolor.Red = 0;
 8001a02:	f88a 4036 	strb.w	r4, [sl, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001a06:	f00b fe17 	bl	800d638 <HAL_LTDC_Init>
  pLayerCfg.WindowX1 = 240;
 8001a0a:	23f0      	movs	r3, #240	; 0xf0
 8001a0c:	9310      	str	r3, [sp, #64]	; 0x40
  pLayerCfg.ImageWidth = 240;
 8001a0e:	9319      	str	r3, [sp, #100]	; 0x64
  pLayerCfg.WindowY1 = 320;
 8001a10:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8001a14:	9312      	str	r3, [sp, #72]	; 0x48
  pLayerCfg.ImageHeight = 320;
 8001a16:	931a      	str	r3, [sp, #104]	; 0x68
  pLayerCfg.Alpha = 255;
 8001a18:	23ff      	movs	r3, #255	; 0xff
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8001a1a:	f44f 6e80 	mov.w	lr, #1024	; 0x400
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001a1e:	4622      	mov	r2, r4
 8001a20:	a90f      	add	r1, sp, #60	; 0x3c
 8001a22:	4650      	mov	r0, sl
  pLayerCfg.Alpha = 255;
 8001a24:	9314      	str	r3, [sp, #80]	; 0x50
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8001a26:	2305      	movs	r3, #5
 8001a28:	e9cd e316 	strd	lr, r3, [sp, #88]	; 0x58
  LcdDrv = &ili9341_drv;
 8001a2c:	f8df 826c 	ldr.w	r8, [pc, #620]	; 8001c9c <main+0x634>
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8001a30:	9513      	str	r5, [sp, #76]	; 0x4c
  pLayerCfg.WindowX0 = 0;
 8001a32:	940f      	str	r4, [sp, #60]	; 0x3c
  pLayerCfg.WindowY0 = 0;
 8001a34:	9411      	str	r4, [sp, #68]	; 0x44
  pLayerCfg.Alpha0 = 0;
 8001a36:	9415      	str	r4, [sp, #84]	; 0x54
  pLayerCfg.FBStartAdress = 0;
 8001a38:	9418      	str	r4, [sp, #96]	; 0x60
  pLayerCfg.Backcolor.Blue = 0;
 8001a3a:	f8ad 406c 	strh.w	r4, [sp, #108]	; 0x6c
  pLayerCfg.Backcolor.Red = 0;
 8001a3e:	f88d 406e 	strb.w	r4, [sp, #110]	; 0x6e
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001a42:	f00b fecf 	bl	800d7e4 <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 8001a46:	4b82      	ldr	r3, [pc, #520]	; (8001c50 <main+0x5e8>)
 8001a48:	f8c8 3000 	str.w	r3, [r8]
  LcdDrv->Init();
 8001a4c:	681b      	ldr	r3, [r3, #0]
  htim2.Instance = TIM2;
 8001a4e:	f8df a250 	ldr.w	sl, [pc, #592]	; 8001ca0 <main+0x638>
  LcdDrv->Init();
 8001a52:	4798      	blx	r3
  LcdDrv->DisplayOff();
 8001a54:	f8d8 3000 	ldr.w	r3, [r8]
  htim3.Instance = TIM3;
 8001a58:	f8df 8248 	ldr.w	r8, [pc, #584]	; 8001ca4 <main+0x63c>
  LcdDrv->DisplayOff();
 8001a5c:	68db      	ldr	r3, [r3, #12]
 8001a5e:	4798      	blx	r3
  htim3.Instance = TIM3;
 8001a60:	4b7c      	ldr	r3, [pc, #496]	; (8001c54 <main+0x5ec>)
 8001a62:	f8c8 3000 	str.w	r3, [r8]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8001a66:	4640      	mov	r0, r8
  htim3.Init.Period = 65535;
 8001a68:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8001a6c:	f8c8 300c 	str.w	r3, [r8, #12]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001a70:	e9c8 4401 	strd	r4, r4, [r8, #4]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001a74:	f8c8 4010 	str.w	r4, [r8, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001a78:	f8c8 4018 	str.w	r4, [r8, #24]
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001a7c:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8001a80:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 8001a84:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8001a88:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001a8c:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 8001a90:	9413      	str	r4, [sp, #76]	; 0x4c
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8001a92:	f00d f88f 	bl	800ebb4 <HAL_TIM_Base_Init>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001a96:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8001a9a:	a90b      	add	r1, sp, #44	; 0x2c
 8001a9c:	4640      	mov	r0, r8
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001a9e:	930b      	str	r3, [sp, #44]	; 0x2c
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8001aa0:	f00d fbb2 	bl	800f208 <HAL_TIM_ConfigClockSource>
  if (HAL_TIM_SlaveConfigSynchro(&htim3, &sSlaveConfig) != HAL_OK)
 8001aa4:	a90f      	add	r1, sp, #60	; 0x3c
 8001aa6:	4640      	mov	r0, r8
  sSlaveConfig.InputTrigger = TIM_TS_ITR0;
 8001aa8:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  if (HAL_TIM_SlaveConfigSynchro(&htim3, &sSlaveConfig) != HAL_OK)
 8001aac:	f00d fc5c 	bl	800f368 <HAL_TIM_SlaveConfigSynchro>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8001ab0:	a909      	add	r1, sp, #36	; 0x24
 8001ab2:	4640      	mov	r0, r8
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001ab4:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8001ab8:	f00d fd94 	bl	800f5e4 <HAL_TIMEx_MasterConfigSynchronization>
  htim2.Init.Period = 100-1;
 8001abc:	2363      	movs	r3, #99	; 0x63
  htim2.Instance = TIM2;
 8001abe:	f04f 4b80 	mov.w	fp, #1073741824	; 0x40000000
  htim2.Init.Prescaler = 168-1;
 8001ac2:	21a7      	movs	r1, #167	; 0xa7
  htim2.Init.Period = 100-1;
 8001ac4:	f8ca 300c 	str.w	r3, [sl, #12]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8001ac8:	4650      	mov	r0, sl
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8001aca:	2380      	movs	r3, #128	; 0x80
  htim2.Instance = TIM2;
 8001acc:	f8ca b000 	str.w	fp, [sl]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8001ad0:	f8ca 3018 	str.w	r3, [sl, #24]
  htim2.Init.Prescaler = 168-1;
 8001ad4:	f8ca 1004 	str.w	r1, [sl, #4]
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001ad8:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8001adc:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001ae0:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001ae4:	f8ca 4008 	str.w	r4, [sl, #8]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001ae8:	f8ca 4010 	str.w	r4, [sl, #16]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8001aec:	f00d f862 	bl	800ebb4 <HAL_TIM_Base_Init>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001af0:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8001af4:	a90f      	add	r1, sp, #60	; 0x3c
 8001af6:	4650      	mov	r0, sl
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001af8:	930f      	str	r3, [sp, #60]	; 0x3c
  TIM2->CCR1 = 50;
 8001afa:	f04f 0832 	mov.w	r8, #50	; 0x32
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8001afe:	f00d fb83 	bl	800f208 <HAL_TIM_ConfigClockSource>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8001b02:	a90b      	add	r1, sp, #44	; 0x2c
 8001b04:	4650      	mov	r0, sl
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001b06:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8001b0a:	f00d fd6b 	bl	800f5e4 <HAL_TIMEx_MasterConfigSynchronization>
  TIM2->CCR1 = 50;
 8001b0e:	f8cb 8034 	str.w	r8, [fp, #52]	; 0x34
  HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_1);
 8001b12:	4621      	mov	r1, r4
 8001b14:	4650      	mov	r0, sl
 8001b16:	f00d f9a7 	bl	800ee68 <HAL_TIM_PWM_Start>
  HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_2);
 8001b1a:	4639      	mov	r1, r7
  TIM2->CCR2 = 50;
 8001b1c:	f8cb 8038 	str.w	r8, [fp, #56]	; 0x38
  HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_2);
 8001b20:	4650      	mov	r0, sl
 8001b22:	f00d f9a1 	bl	800ee68 <HAL_TIM_PWM_Start>
  htim14.Instance = TIM14;
 8001b26:	4f4c      	ldr	r7, [pc, #304]	; (8001c58 <main+0x5f0>)
  TIM2->CCR3 = 50;
 8001b28:	f8cb 803c 	str.w	r8, [fp, #60]	; 0x3c
  HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_3);
 8001b2c:	4631      	mov	r1, r6
 8001b2e:	4650      	mov	r0, sl
 8001b30:	f00d f99a 	bl	800ee68 <HAL_TIM_PWM_Start>
  htim14.Init.Prescaler = 210-1;
 8001b34:	4949      	ldr	r1, [pc, #292]	; (8001c5c <main+0x5f4>)
  htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001b36:	60bc      	str	r4, [r7, #8]
  htim14.Init.Period = 100-1;
 8001b38:	2363      	movs	r3, #99	; 0x63
  htim14.Init.Prescaler = 210-1;
 8001b3a:	22d1      	movs	r2, #209	; 0xd1
  htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001b3c:	e9c7 3403 	strd	r3, r4, [r7, #12]
  if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 8001b40:	4638      	mov	r0, r7
  htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8001b42:	2380      	movs	r3, #128	; 0x80
 8001b44:	61bb      	str	r3, [r7, #24]
  htim14.Init.Prescaler = 210-1;
 8001b46:	e9c7 1200 	strd	r1, r2, [r7]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001b4a:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8001b4e:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
 8001b52:	e9cd 4413 	strd	r4, r4, [sp, #76]	; 0x4c
 8001b56:	9415      	str	r4, [sp, #84]	; 0x54
  if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 8001b58:	f00d f82c 	bl	800ebb4 <HAL_TIM_Base_Init>
  if (HAL_TIM_PWM_Init(&htim14) != HAL_OK)
 8001b5c:	4638      	mov	r0, r7
 8001b5e:	f00d f8f5 	bl	800ed4c <HAL_TIM_PWM_Init>
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001b62:	f04f 0b60 	mov.w	fp, #96	; 0x60
  if (HAL_TIM_PWM_ConfigChannel(&htim14, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001b66:	4622      	mov	r2, r4
 8001b68:	a90f      	add	r1, sp, #60	; 0x3c
 8001b6a:	4638      	mov	r0, r7
  htim9.Instance = TIM9;
 8001b6c:	4e3c      	ldr	r6, [pc, #240]	; (8001c60 <main+0x5f8>)
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001b6e:	9413      	str	r4, [sp, #76]	; 0x4c
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001b70:	e9cd 4410 	strd	r4, r4, [sp, #64]	; 0x40
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001b74:	f8cd b03c 	str.w	fp, [sp, #60]	; 0x3c
  if (HAL_TIM_PWM_ConfigChannel(&htim14, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001b78:	f00d fa36 	bl	800efe8 <HAL_TIM_PWM_ConfigChannel>
  HAL_TIM_MspPostInit(&htim14);
 8001b7c:	4638      	mov	r0, r7
 8001b7e:	f000 fcfb 	bl	8002578 <HAL_TIM_MspPostInit>
  htim9.Init.Period = 100-1;
 8001b82:	2363      	movs	r3, #99	; 0x63
  htim9.Init.Prescaler = 84-1;
 8001b84:	4f37      	ldr	r7, [pc, #220]	; (8001c64 <main+0x5fc>)
  htim9.Init.Period = 100-1;
 8001b86:	60f3      	str	r3, [r6, #12]
  htim9.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8001b88:	2380      	movs	r3, #128	; 0x80
 8001b8a:	61b3      	str	r3, [r6, #24]
  if (HAL_TIM_Base_Init(&htim9) != HAL_OK)
 8001b8c:	4630      	mov	r0, r6
  htim9.Init.Prescaler = 84-1;
 8001b8e:	2353      	movs	r3, #83	; 0x53
 8001b90:	e9c6 7300 	strd	r7, r3, [r6]
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001b94:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8001b98:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001b9c:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8001ba0:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
 8001ba4:	e9cd 4413 	strd	r4, r4, [sp, #76]	; 0x4c
 8001ba8:	9415      	str	r4, [sp, #84]	; 0x54
  htim9.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001baa:	60b4      	str	r4, [r6, #8]
  htim9.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001bac:	6134      	str	r4, [r6, #16]
  if (HAL_TIM_Base_Init(&htim9) != HAL_OK)
 8001bae:	f00d f801 	bl	800ebb4 <HAL_TIM_Base_Init>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001bb2:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_TIM_ConfigClockSource(&htim9, &sClockSourceConfig) != HAL_OK)
 8001bb6:	a90b      	add	r1, sp, #44	; 0x2c
 8001bb8:	4630      	mov	r0, r6
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001bba:	930b      	str	r3, [sp, #44]	; 0x2c
  if (HAL_TIM_ConfigClockSource(&htim9, &sClockSourceConfig) != HAL_OK)
 8001bbc:	f00d fb24 	bl	800f208 <HAL_TIM_ConfigClockSource>
  if (HAL_TIM_PWM_Init(&htim9) != HAL_OK)
 8001bc0:	4630      	mov	r0, r6
 8001bc2:	f00d f8c3 	bl	800ed4c <HAL_TIM_PWM_Init>
  if (HAL_TIM_PWM_ConfigChannel(&htim9, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001bc6:	4622      	mov	r2, r4
 8001bc8:	a90f      	add	r1, sp, #60	; 0x3c
 8001bca:	4630      	mov	r0, r6
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001bcc:	e9cd 8410 	strd	r8, r4, [sp, #64]	; 0x40
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001bd0:	f8cd b03c 	str.w	fp, [sp, #60]	; 0x3c
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001bd4:	9413      	str	r4, [sp, #76]	; 0x4c
  if (HAL_TIM_PWM_ConfigChannel(&htim9, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001bd6:	f00d fa07 	bl	800efe8 <HAL_TIM_PWM_ConfigChannel>
  HAL_TIM_PWM_Start(&htim9, TIM_CHANNEL_1);
 8001bda:	4621      	mov	r1, r4
  TIM9->CCR1 = 50;
 8001bdc:	f8c7 8034 	str.w	r8, [r7, #52]	; 0x34
  HAL_TIM_PWM_Start(&htim9, TIM_CHANNEL_1);
 8001be0:	4630      	mov	r0, r6
 8001be2:	f00d f941 	bl	800ee68 <HAL_TIM_PWM_Start>
  HAL_TIM_MspPostInit(&htim9);
 8001be6:	4630      	mov	r0, r6
 8001be8:	f000 fcc6 	bl	8002578 <HAL_TIM_MspPostInit>
  MX_TouchGFX_Init();
 8001bec:	f000 fe5a 	bl	80028a4 <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
 8001bf0:	f000 fe56 	bl	80028a0 <MX_TouchGFX_PreOSInit>
  gyro_disable();
 8001bf4:	f7ff fc86 	bl	8001504 <gyro_disable>
  MEAS_GPIO_analog_init();         // Configure GPIOs in analog mode
 8001bf8:	f000 f958 	bl	8001eac <MEAS_GPIO_analog_init>
  MEAS_timer_init();               // Configure the timer
 8001bfc:	f000 f98a 	bl	8001f14 <MEAS_timer_init>
  Flash_Read_Data(SECTOR_23_ADDR, Calibration_Data, 12);
 8001c00:	4919      	ldr	r1, [pc, #100]	; (8001c68 <main+0x600>)
 8001c02:	481a      	ldr	r0, [pc, #104]	; (8001c6c <main+0x604>)
 8001c04:	220c      	movs	r2, #12
 8001c06:	f7ff fa41 	bl	800108c <Flash_Read_Data>
  osKernelInitialize();
 8001c0a:	f00d fdfd 	bl	800f808 <osKernelInitialize>
  TimeoutQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &TimeoutQueue_attributes);
 8001c0e:	4629      	mov	r1, r5
 8001c10:	4a17      	ldr	r2, [pc, #92]	; (8001c70 <main+0x608>)
 8001c12:	4648      	mov	r0, r9
 8001c14:	f00d ff32 	bl	800fa7c <osMessageQueueNew>
 8001c18:	4b16      	ldr	r3, [pc, #88]	; (8001c74 <main+0x60c>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001c1a:	4a17      	ldr	r2, [pc, #92]	; (8001c78 <main+0x610>)
  TimeoutQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &TimeoutQueue_attributes);
 8001c1c:	6018      	str	r0, [r3, #0]
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001c1e:	4621      	mov	r1, r4
 8001c20:	4816      	ldr	r0, [pc, #88]	; (8001c7c <main+0x614>)
 8001c22:	f00d fe1d 	bl	800f860 <osThreadNew>
 8001c26:	4b16      	ldr	r3, [pc, #88]	; (8001c80 <main+0x618>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001c28:	4a16      	ldr	r2, [pc, #88]	; (8001c84 <main+0x61c>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001c2a:	6018      	str	r0, [r3, #0]
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001c2c:	4621      	mov	r1, r4
 8001c2e:	4816      	ldr	r0, [pc, #88]	; (8001c88 <main+0x620>)
 8001c30:	f00d fe16 	bl	800f860 <osThreadNew>
 8001c34:	4b15      	ldr	r3, [pc, #84]	; (8001c8c <main+0x624>)
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 8001c36:	4a16      	ldr	r2, [pc, #88]	; (8001c90 <main+0x628>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001c38:	4605      	mov	r5, r0
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 8001c3a:	4621      	mov	r1, r4
 8001c3c:	4815      	ldr	r0, [pc, #84]	; (8001c94 <main+0x62c>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001c3e:	601d      	str	r5, [r3, #0]
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 8001c40:	f00d fe0e 	bl	800f860 <osThreadNew>
 8001c44:	4b14      	ldr	r3, [pc, #80]	; (8001c98 <main+0x630>)
 8001c46:	6018      	str	r0, [r3, #0]
  osKernelStart();
 8001c48:	f00d fdf0 	bl	800f82c <osKernelStart>
  while (1)
 8001c4c:	e7fe      	b.n	8001c4c <main+0x5e4>
 8001c4e:	bf00      	nop
 8001c50:	2000001c 	.word	0x2000001c
 8001c54:	40000400 	.word	0x40000400
 8001c58:	20000380 	.word	0x20000380
 8001c5c:	40002000 	.word	0x40002000
 8001c60:	20000458 	.word	0x20000458
 8001c64:	40014000 	.word	0x40014000
 8001c68:	200001ac 	.word	0x200001ac
 8001c6c:	081e0000 	.word	0x081e0000
 8001c70:	0802ea74 	.word	0x0802ea74
 8001c74:	200001e4 	.word	0x200001e4
 8001c78:	0802eab0 	.word	0x0802eab0
 8001c7c:	08001479 	.word	0x08001479
 8001c80:	200001ec 	.word	0x200001ec
 8001c84:	0802ea50 	.word	0x0802ea50
 8001c88:	080028b5 	.word	0x080028b5
 8001c8c:	200001dc 	.word	0x200001dc
 8001c90:	0802ea8c 	.word	0x0802ea8c
 8001c94:	08001485 	.word	0x08001485
 8001c98:	200001e8 	.word	0x200001e8
 8001c9c:	200001e0 	.word	0x200001e0
 8001ca0:	200003c8 	.word	0x200003c8
 8001ca4:	20000410 	.word	0x20000410

08001ca8 <IOE_Init>:
 8001ca8:	4770      	bx	lr
 8001caa:	bf00      	nop

08001cac <IOE_ITConfig>:
 8001cac:	4770      	bx	lr
 8001cae:	bf00      	nop

08001cb0 <IOE_Write>:
{
 8001cb0:	b510      	push	{r4, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 8001cb2:	4c09      	ldr	r4, [pc, #36]	; (8001cd8 <IOE_Write+0x28>)
{
 8001cb4:	b086      	sub	sp, #24
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 8001cb6:	6824      	ldr	r4, [r4, #0]
 8001cb8:	9402      	str	r4, [sp, #8]
{
 8001cba:	4614      	mov	r4, r2
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 8001cbc:	2301      	movs	r3, #1
 8001cbe:	f88d 4017 	strb.w	r4, [sp, #23]
 8001cc2:	f10d 0417 	add.w	r4, sp, #23
 8001cc6:	460a      	mov	r2, r1
 8001cc8:	9301      	str	r3, [sp, #4]
 8001cca:	4601      	mov	r1, r0
 8001ccc:	9400      	str	r4, [sp, #0]
 8001cce:	4803      	ldr	r0, [pc, #12]	; (8001cdc <IOE_Write+0x2c>)
 8001cd0:	f00a fb6a 	bl	800c3a8 <HAL_I2C_Mem_Write>
}
 8001cd4:	b006      	add	sp, #24
 8001cd6:	bd10      	pop	{r4, pc}
 8001cd8:	20000004 	.word	0x20000004
 8001cdc:	200001f8 	.word	0x200001f8

08001ce0 <IOE_Read>:
{
 8001ce0:	b500      	push	{lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001ce2:	4b0b      	ldr	r3, [pc, #44]	; (8001d10 <IOE_Read+0x30>)
{
 8001ce4:	b087      	sub	sp, #28
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001ce6:	681b      	ldr	r3, [r3, #0]
 8001ce8:	9302      	str	r3, [sp, #8]
{
 8001cea:	4684      	mov	ip, r0
 8001cec:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001cee:	2301      	movs	r3, #1
 8001cf0:	f10d 0117 	add.w	r1, sp, #23
  uint8_t value = 0;
 8001cf4:	2000      	movs	r0, #0
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001cf6:	e9cd 1300 	strd	r1, r3, [sp]
  uint8_t value = 0;
 8001cfa:	f88d 0017 	strb.w	r0, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001cfe:	4661      	mov	r1, ip
 8001d00:	4804      	ldr	r0, [pc, #16]	; (8001d14 <IOE_Read+0x34>)
 8001d02:	f00a fc43 	bl	800c58c <HAL_I2C_Mem_Read>
}
 8001d06:	f89d 0017 	ldrb.w	r0, [sp, #23]
 8001d0a:	b007      	add	sp, #28
 8001d0c:	f85d fb04 	ldr.w	pc, [sp], #4
 8001d10:	20000004 	.word	0x20000004
 8001d14:	200001f8 	.word	0x200001f8

08001d18 <IOE_ReadMultiple>:
{
 8001d18:	b510      	push	{r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 8001d1a:	4c09      	ldr	r4, [pc, #36]	; (8001d40 <IOE_ReadMultiple+0x28>)
{
 8001d1c:	b084      	sub	sp, #16
 8001d1e:	4684      	mov	ip, r0
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 8001d20:	6820      	ldr	r0, [r4, #0]
 8001d22:	9002      	str	r0, [sp, #8]
 8001d24:	e9cd 2300 	strd	r2, r3, [sp]
 8001d28:	4806      	ldr	r0, [pc, #24]	; (8001d44 <IOE_ReadMultiple+0x2c>)
 8001d2a:	460a      	mov	r2, r1
 8001d2c:	2301      	movs	r3, #1
 8001d2e:	4661      	mov	r1, ip
 8001d30:	f00a fc2c 	bl	800c58c <HAL_I2C_Mem_Read>
}
 8001d34:	3800      	subs	r0, #0
 8001d36:	bf18      	it	ne
 8001d38:	2001      	movne	r0, #1
 8001d3a:	b004      	add	sp, #16
 8001d3c:	bd10      	pop	{r4, pc}
 8001d3e:	bf00      	nop
 8001d40:	20000004 	.word	0x20000004
 8001d44:	200001f8 	.word	0x200001f8

08001d48 <IOE_Delay>:
 8001d48:	f009 bc2a 	b.w	800b5a0 <HAL_Delay>

08001d4c <LCD_IO_Init>:
{
 8001d4c:	b508      	push	{r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001d4e:	4806      	ldr	r0, [pc, #24]	; (8001d68 <LCD_IO_Init+0x1c>)
 8001d50:	2200      	movs	r2, #0
 8001d52:	2104      	movs	r1, #4
 8001d54:	f009 fffa 	bl	800bd4c <HAL_GPIO_WritePin>
}
 8001d58:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001d5c:	4802      	ldr	r0, [pc, #8]	; (8001d68 <LCD_IO_Init+0x1c>)
 8001d5e:	2201      	movs	r2, #1
 8001d60:	2104      	movs	r1, #4
 8001d62:	f009 bff3 	b.w	800bd4c <HAL_GPIO_WritePin>
 8001d66:	bf00      	nop
 8001d68:	40020800 	.word	0x40020800

08001d6c <LCD_IO_WriteData>:
{
 8001d6c:	b530      	push	{r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001d6e:	4d10      	ldr	r5, [pc, #64]	; (8001db0 <LCD_IO_WriteData+0x44>)
{
 8001d70:	b083      	sub	sp, #12
 8001d72:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001d74:	2201      	movs	r2, #1
 8001d76:	480f      	ldr	r0, [pc, #60]	; (8001db4 <LCD_IO_WriteData+0x48>)
 8001d78:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001d7c:	f009 ffe6 	bl	800bd4c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001d80:	4628      	mov	r0, r5
 8001d82:	2200      	movs	r2, #0
 8001d84:	2104      	movs	r1, #4
 8001d86:	f009 ffe1 	bl	800bd4c <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001d8a:	4b0b      	ldr	r3, [pc, #44]	; (8001db8 <LCD_IO_WriteData+0x4c>)
 8001d8c:	480b      	ldr	r0, [pc, #44]	; (8001dbc <LCD_IO_WriteData+0x50>)
 8001d8e:	681b      	ldr	r3, [r3, #0]
 8001d90:	f8ad 4006 	strh.w	r4, [sp, #6]
 8001d94:	f10d 0106 	add.w	r1, sp, #6
 8001d98:	2201      	movs	r2, #1
 8001d9a:	f00c fb7d 	bl	800e498 <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001d9e:	2201      	movs	r2, #1
 8001da0:	2104      	movs	r1, #4
 8001da2:	4628      	mov	r0, r5
}
 8001da4:	b003      	add	sp, #12
 8001da6:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001daa:	f009 bfcf 	b.w	800bd4c <HAL_GPIO_WritePin>
 8001dae:	bf00      	nop
 8001db0:	40020800 	.word	0x40020800
 8001db4:	40020c00 	.word	0x40020c00
 8001db8:	20000008 	.word	0x20000008
 8001dbc:	20000328 	.word	0x20000328

08001dc0 <LCD_IO_WriteReg>:
{
 8001dc0:	b530      	push	{r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001dc2:	4d10      	ldr	r5, [pc, #64]	; (8001e04 <LCD_IO_WriteReg+0x44>)
{
 8001dc4:	b083      	sub	sp, #12
 8001dc6:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001dc8:	2200      	movs	r2, #0
 8001dca:	480f      	ldr	r0, [pc, #60]	; (8001e08 <LCD_IO_WriteReg+0x48>)
 8001dcc:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001dd0:	f009 ffbc 	bl	800bd4c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001dd4:	4628      	mov	r0, r5
 8001dd6:	2200      	movs	r2, #0
 8001dd8:	2104      	movs	r1, #4
 8001dda:	f009 ffb7 	bl	800bd4c <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001dde:	4b0b      	ldr	r3, [pc, #44]	; (8001e0c <LCD_IO_WriteReg+0x4c>)
 8001de0:	480b      	ldr	r0, [pc, #44]	; (8001e10 <LCD_IO_WriteReg+0x50>)
 8001de2:	681b      	ldr	r3, [r3, #0]
  SPI5_Write(Reg);
 8001de4:	f8ad 4006 	strh.w	r4, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001de8:	f10d 0106 	add.w	r1, sp, #6
 8001dec:	2201      	movs	r2, #1
 8001dee:	f00c fb53 	bl	800e498 <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001df2:	2201      	movs	r2, #1
 8001df4:	2104      	movs	r1, #4
 8001df6:	4628      	mov	r0, r5
}
 8001df8:	b003      	add	sp, #12
 8001dfa:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001dfe:	f009 bfa5 	b.w	800bd4c <HAL_GPIO_WritePin>
 8001e02:	bf00      	nop
 8001e04:	40020800 	.word	0x40020800
 8001e08:	40020c00 	.word	0x40020c00
 8001e0c:	20000008 	.word	0x20000008
 8001e10:	20000328 	.word	0x20000328

08001e14 <LCD_IO_ReadData>:
{
 8001e14:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001e18:	4e19      	ldr	r6, [pc, #100]	; (8001e80 <LCD_IO_ReadData+0x6c>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001e1a:	4f1a      	ldr	r7, [pc, #104]	; (8001e84 <LCD_IO_ReadData+0x70>)
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001e1c:	f8df 9068 	ldr.w	r9, [pc, #104]	; 8001e88 <LCD_IO_ReadData+0x74>
 8001e20:	f8df 8068 	ldr.w	r8, [pc, #104]	; 8001e8c <LCD_IO_ReadData+0x78>
{
 8001e24:	b083      	sub	sp, #12
 8001e26:	460c      	mov	r4, r1
 8001e28:	4605      	mov	r5, r0
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001e2a:	2200      	movs	r2, #0
 8001e2c:	4630      	mov	r0, r6
 8001e2e:	2104      	movs	r1, #4
 8001e30:	f009 ff8c 	bl	800bd4c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001e34:	4638      	mov	r0, r7
 8001e36:	2200      	movs	r2, #0
 8001e38:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001e3c:	f009 ff86 	bl	800bd4c <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001e40:	f8d9 3000 	ldr.w	r3, [r9]
 8001e44:	f8ad 5004 	strh.w	r5, [sp, #4]
 8001e48:	a901      	add	r1, sp, #4
 8001e4a:	2201      	movs	r2, #1
 8001e4c:	4640      	mov	r0, r8
 8001e4e:	f00c fb23 	bl	800e498 <HAL_SPI_Transmit>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 8001e52:	f8d9 3000 	ldr.w	r3, [r9]
 8001e56:	4622      	mov	r2, r4
 8001e58:	a901      	add	r1, sp, #4
 8001e5a:	4640      	mov	r0, r8
 8001e5c:	f00c fdc4 	bl	800e9e8 <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001e60:	4638      	mov	r0, r7
 8001e62:	2201      	movs	r2, #1
 8001e64:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  return readvalue;
 8001e68:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001e6a:	f009 ff6f 	bl	800bd4c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001e6e:	4630      	mov	r0, r6
 8001e70:	2201      	movs	r2, #1
 8001e72:	2104      	movs	r1, #4
 8001e74:	f009 ff6a 	bl	800bd4c <HAL_GPIO_WritePin>
}
 8001e78:	4620      	mov	r0, r4
 8001e7a:	b003      	add	sp, #12
 8001e7c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001e80:	40020800 	.word	0x40020800
 8001e84:	40020c00 	.word	0x40020c00
 8001e88:	20000008 	.word	0x20000008
 8001e8c:	20000328 	.word	0x20000328

08001e90 <LCD_Delay>:
  HAL_Delay(Delay);
 8001e90:	f009 bb86 	b.w	800b5a0 <HAL_Delay>

08001e94 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 8001e94:	4b03      	ldr	r3, [pc, #12]	; (8001ea4 <HAL_TIM_PeriodElapsedCallback+0x10>)
 8001e96:	6802      	ldr	r2, [r0, #0]
 8001e98:	429a      	cmp	r2, r3
 8001e9a:	d000      	beq.n	8001e9e <HAL_TIM_PeriodElapsedCallback+0xa>
    HAL_IncTick();
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8001e9c:	4770      	bx	lr
    HAL_IncTick();
 8001e9e:	f009 bb6d 	b.w	800b57c <HAL_IncTick>
 8001ea2:	bf00      	nop
 8001ea4:	40001000 	.word	0x40001000

08001ea8 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8001ea8:	4770      	bx	lr
 8001eaa:	bf00      	nop

08001eac <MEAS_GPIO_analog_init>:
 * - ADC123_IN13 = GPIO PC3 (Pad right)
 * - ADC3_IN6 = GPIO PF8 (Hall sensor Left)
 * - ADC123_IN11 = GPIO PC1 (Hall sensor Right)
 *****************************************************************************/
void MEAS_GPIO_analog_init(void)
{
 8001eac:	b410      	push	{r4}
 8001eae:	b083      	sub	sp, #12
    __HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 8001eb0:	4b15      	ldr	r3, [pc, #84]	; (8001f08 <MEAS_GPIO_analog_init+0x5c>)
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 8001eb2:	4916      	ldr	r1, [pc, #88]	; (8001f0c <MEAS_GPIO_analog_init+0x60>)
    __HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 8001eb4:	2400      	movs	r4, #0
 8001eb6:	9400      	str	r4, [sp, #0]
 8001eb8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001eba:	f042 0220 	orr.w	r2, r2, #32
 8001ebe:	631a      	str	r2, [r3, #48]	; 0x30
 8001ec0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001ec2:	f002 0220 	and.w	r2, r2, #32
 8001ec6:	9200      	str	r2, [sp, #0]
 8001ec8:	9a00      	ldr	r2, [sp, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 8001eca:	6808      	ldr	r0, [r1, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER8_Pos);  // Analog PF8 = ADC3_IN6
    __HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER3_Pos);  // Analog PC3 = ADC3_IN13
 8001ecc:	4a10      	ldr	r2, [pc, #64]	; (8001f10 <MEAS_GPIO_analog_init+0x64>)
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 8001ece:	f440 5040 	orr.w	r0, r0, #12288	; 0x3000
 8001ed2:	6008      	str	r0, [r1, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER8_Pos);  // Analog PF8 = ADC3_IN6
 8001ed4:	6808      	ldr	r0, [r1, #0]
 8001ed6:	f440 3040 	orr.w	r0, r0, #196608	; 0x30000
 8001eda:	6008      	str	r0, [r1, #0]
    __HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 8001edc:	9401      	str	r4, [sp, #4]
 8001ede:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001ee0:	f041 0104 	orr.w	r1, r1, #4
 8001ee4:	6319      	str	r1, [r3, #48]	; 0x30
 8001ee6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001ee8:	f003 0304 	and.w	r3, r3, #4
 8001eec:	9301      	str	r3, [sp, #4]
 8001eee:	9b01      	ldr	r3, [sp, #4]
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER3_Pos);  // Analog PC3 = ADC3_IN13
 8001ef0:	6813      	ldr	r3, [r2, #0]
 8001ef2:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 8001ef6:	6013      	str	r3, [r2, #0]
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER1_Pos);  // Analog PC1 = ADC3_IN11
 8001ef8:	6813      	ldr	r3, [r2, #0]
 8001efa:	f043 030c 	orr.w	r3, r3, #12
 8001efe:	6013      	str	r3, [r2, #0]
}
 8001f00:	b003      	add	sp, #12
 8001f02:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001f06:	4770      	bx	lr
 8001f08:	40023800 	.word	0x40023800
 8001f0c:	40021400 	.word	0x40021400
 8001f10:	40020800 	.word	0x40020800

08001f14 <MEAS_timer_init>:
 * @brief Configure the timer to trigger the ADC(s)
 *
 * @note For debugging purposes the timer interrupt might be useful.
 *****************************************************************************/
void MEAS_timer_init(void)
{
 8001f14:	b410      	push	{r4}
 8001f16:	b083      	sub	sp, #12
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8001f18:	4a0e      	ldr	r2, [pc, #56]	; (8001f54 <MEAS_timer_init+0x40>)
 8001f1a:	2000      	movs	r0, #0
 8001f1c:	9001      	str	r0, [sp, #4]
 8001f1e:	6c11      	ldr	r1, [r2, #64]	; 0x40
 8001f20:	f041 0101 	orr.w	r1, r1, #1
 8001f24:	6411      	str	r1, [r2, #64]	; 0x40
 8001f26:	6c12      	ldr	r2, [r2, #64]	; 0x40
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 8001f28:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8001f2c:	f002 0201 	and.w	r2, r2, #1
 8001f30:	9201      	str	r2, [sp, #4]
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 8001f32:	f243 3144 	movw	r1, #13124	; 0x3344
    TIM2->ARR = TIM_TOP;          // Auto reload = counter top value
 8001f36:	2209      	movs	r2, #9
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8001f38:	9c01      	ldr	r4, [sp, #4]
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 8001f3a:	6299      	str	r1, [r3, #40]	; 0x28
    TIM2->ARR = TIM_TOP;          // Auto reload = counter top value
 8001f3c:	62da      	str	r2, [r3, #44]	; 0x2c
    TIM2->CR2 |= TIM_CR2_MMS_1;   // TRGO on update
 8001f3e:	685a      	ldr	r2, [r3, #4]
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001f40:	4905      	ldr	r1, [pc, #20]	; (8001f58 <MEAS_timer_init+0x44>)
 8001f42:	f042 0220 	orr.w	r2, r2, #32
 8001f46:	605a      	str	r2, [r3, #4]
 8001f48:	f881 031c 	strb.w	r0, [r1, #796]	; 0x31c

    // set timer to highest priority
    NVIC_SetPriority(TIM2_IRQn, 0);
}
 8001f4c:	b003      	add	sp, #12
 8001f4e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001f52:	4770      	bx	lr
 8001f54:	40023800 	.word	0x40023800
 8001f58:	e000e100 	.word	0xe000e100

08001f5c <MEAS_ADC3_scan_init>:
 * @n The DMA triggers the transfer complete interrupt when all data is ready.
 * @n The inputs used are ADC3_IN4 = GPIO PF6 (Pad Right), ADC3_IN13 = GPIO PC3
 *(Pad Left), ADC_IN6 = GPIO PF8 (HS-Right), ADC3_IN11 = GPIO PC1 (HS-Left)
 *****************************************************************************/
void MEAS_ADC3_scan_init(void)
{
 8001f5c:	b410      	push	{r4}
 8001f5e:	b083      	sub	sp, #12
    __HAL_RCC_ADC3_CLK_ENABLE();               // Enable Clock for ADC3
 8001f60:	4a36      	ldr	r2, [pc, #216]	; (800203c <MEAS_ADC3_scan_init+0xe0>)
    ADC3->SQR1 |= (3UL << ADC_SQR1_L_Pos);     // Convert 4 inputs (4-1)
 8001f62:	4b37      	ldr	r3, [pc, #220]	; (8002040 <MEAS_ADC3_scan_init+0xe4>)
 8001f64:	4c37      	ldr	r4, [pc, #220]	; (8002044 <MEAS_ADC3_scan_init+0xe8>)
    __HAL_RCC_ADC3_CLK_ENABLE();               // Enable Clock for ADC3
 8001f66:	2100      	movs	r1, #0
 8001f68:	9100      	str	r1, [sp, #0]
 8001f6a:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8001f6c:	f440 6080 	orr.w	r0, r0, #1024	; 0x400
 8001f70:	6450      	str	r0, [r2, #68]	; 0x44
 8001f72:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8001f74:	f400 6080 	and.w	r0, r0, #1024	; 0x400
 8001f78:	9000      	str	r0, [sp, #0]
 8001f7a:	9800      	ldr	r0, [sp, #0]
    ADC3->SQR1 |= (3UL << ADC_SQR1_L_Pos);     // Convert 4 inputs (4-1)
 8001f7c:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 8001f7e:	f440 1040 	orr.w	r0, r0, #3145728	; 0x300000
 8001f82:	62d8      	str	r0, [r3, #44]	; 0x2c
    ADC3->SQR3 |= (4UL << ADC_SQR3_SQ1_Pos);   // Input 4 = first conversion
 8001f84:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8001f86:	f040 0004 	orr.w	r0, r0, #4
 8001f8a:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->SQR3 |= (13UL << ADC_SQR3_SQ2_Pos);  // Input 13 = second conversion
 8001f8c:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8001f8e:	f440 70d0 	orr.w	r0, r0, #416	; 0x1a0
 8001f92:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->SQR3 |= (6UL << ADC_SQR3_SQ3_Pos);   // Input 6 = third conversion
 8001f94:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8001f96:	f440 50c0 	orr.w	r0, r0, #6144	; 0x1800
 8001f9a:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->SQR3 |= (11UL << ADC_SQR3_SQ4_Pos);  // Input 11 = fourth conversion
 8001f9c:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8001f9e:	f440 20b0 	orr.w	r0, r0, #360448	; 0x58000
 8001fa2:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->CR1 |= ADC_CR1_SCAN;                 // Enable scan mode
 8001fa4:	6858      	ldr	r0, [r3, #4]
 8001fa6:	f440 7080 	orr.w	r0, r0, #256	; 0x100
 8001faa:	6058      	str	r0, [r3, #4]
    ADC3->CR2 |= (1UL << ADC_CR2_EXTEN_Pos);   // En. ext. trigger on rising e.
 8001fac:	6898      	ldr	r0, [r3, #8]
 8001fae:	f040 5080 	orr.w	r0, r0, #268435456	; 0x10000000
 8001fb2:	6098      	str	r0, [r3, #8]
    ADC3->CR2 |= (6UL << ADC_CR2_EXTSEL_Pos);  // Timer 2 TRGO event
 8001fb4:	6898      	ldr	r0, [r3, #8]
 8001fb6:	f040 60c0 	orr.w	r0, r0, #100663296	; 0x6000000
 8001fba:	6098      	str	r0, [r3, #8]
    ADC3->CR2 |= ADC_CR2_DMA;                  // Enable DMA mode
 8001fbc:	6898      	ldr	r0, [r3, #8]
 8001fbe:	f440 7080 	orr.w	r0, r0, #256	; 0x100
 8001fc2:	6098      	str	r0, [r3, #8]
    __HAL_RCC_DMA2_CLK_ENABLE();               // Enable Clock for DMA2
 8001fc4:	9101      	str	r1, [sp, #4]
 8001fc6:	6b10      	ldr	r0, [r2, #48]	; 0x30
 8001fc8:	f440 0080 	orr.w	r0, r0, #4194304	; 0x400000
 8001fcc:	6310      	str	r0, [r2, #48]	; 0x30
 8001fce:	6b12      	ldr	r2, [r2, #48]	; 0x30
 8001fd0:	f402 0280 	and.w	r2, r2, #4194304	; 0x400000
 8001fd4:	9201      	str	r2, [sp, #4]
    // set DMA to highest priority
    NVIC_SetPriority(DMA2_Stream1_IRQn, 0);
    DMA2_Stream1->CR &= ~DMA_SxCR_EN;          // Disable the DMA stream 1
 8001fd6:	f503 33a1 	add.w	r3, r3, #82432	; 0x14200
    __HAL_RCC_DMA2_CLK_ENABLE();               // Enable Clock for DMA2
 8001fda:	9a01      	ldr	r2, [sp, #4]
 8001fdc:	f884 1339 	strb.w	r1, [r4, #825]	; 0x339
    DMA2_Stream1->CR &= ~DMA_SxCR_EN;          // Disable the DMA stream 1
 8001fe0:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001fe2:	f022 0201 	bic.w	r2, r2, #1
 8001fe6:	629a      	str	r2, [r3, #40]	; 0x28
    while (DMA2_Stream1->CR & DMA_SxCR_EN)
 8001fe8:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001fea:	07d2      	lsls	r2, r2, #31
 8001fec:	d4fc      	bmi.n	8001fe8 <MEAS_ADC3_scan_init+0x8c>
    {

    }  // Wait for DMA to finish
    DMA2->LIFCR |= DMA_LIFCR_CTCIF1;  // Clear transfer complete interrupt fl.
 8001fee:	689a      	ldr	r2, [r3, #8]
    DMA2_Stream1->CR |= DMA_SxCR_PSIZE_1;  // Peripheral data size = 32 bit
    DMA2_Stream1->CR |= DMA_SxCR_MINC;     // Increment memory address pointer
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
    // Number of data items to transfer
    DMA2_Stream1->NDTR = INPUT_COUNT * ADC_NUMS;
    DMA2_Stream1->PAR = (uint32_t)&ADC3->DR;     // Peripheral register address
 8001ff0:	4815      	ldr	r0, [pc, #84]	; (8002048 <MEAS_ADC3_scan_init+0xec>)
    DMA2_Stream1->M0AR = (uint32_t)ADC_samples;  // Buffer memory loc. address
 8001ff2:	4916      	ldr	r1, [pc, #88]	; (800204c <MEAS_ADC3_scan_init+0xf0>)
    DMA2->LIFCR |= DMA_LIFCR_CTCIF1;  // Clear transfer complete interrupt fl.
 8001ff4:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8001ff8:	609a      	str	r2, [r3, #8]
    DMA2_Stream1->CR |= (2UL << DMA_SxCR_CHSEL_Pos);  // Select channel 2
 8001ffa:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001ffc:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8002000:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_PL_0;                // Priority high
 8002002:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8002004:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8002008:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_MSIZE_1;  // Memory data size = 32 bit
 800200a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800200c:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8002010:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_PSIZE_1;  // Peripheral data size = 32 bit
 8002012:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8002014:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8002018:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_MINC;     // Increment memory address pointer
 800201a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800201c:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8002020:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
 8002022:	6a9a      	ldr	r2, [r3, #40]	; 0x28
    DMA2_Stream1->NDTR = INPUT_COUNT * ADC_NUMS;
 8002024:	f44f 7480 	mov.w	r4, #256	; 0x100
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
 8002028:	f042 0210 	orr.w	r2, r2, #16
 800202c:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->NDTR = INPUT_COUNT * ADC_NUMS;
 800202e:	62dc      	str	r4, [r3, #44]	; 0x2c
    DMA2_Stream1->PAR = (uint32_t)&ADC3->DR;     // Peripheral register address
 8002030:	6318      	str	r0, [r3, #48]	; 0x30
    DMA2_Stream1->M0AR = (uint32_t)ADC_samples;  // Buffer memory loc. address
 8002032:	6359      	str	r1, [r3, #52]	; 0x34
}
 8002034:	b003      	add	sp, #12
 8002036:	f85d 4b04 	ldr.w	r4, [sp], #4
 800203a:	4770      	bx	lr
 800203c:	40023800 	.word	0x40023800
 8002040:	40012200 	.word	0x40012200
 8002044:	e000e100 	.word	0xe000e100
 8002048:	4001224c 	.word	0x4001224c
 800204c:	200004a0 	.word	0x200004a0

08002050 <DMA2_Stream1_IRQHandler>:
 * The samples from the ADC3 have been transfered to memory by the DMA2 Stream1
 * and are ready for processing.
 *****************************************************************************/
void DMA2_Stream1_IRQHandler(void)
{
	if (DMA2->LISR & DMA_LISR_TCIF1) // Stream1 transfer compl. interrupt f.
 8002050:	4b1b      	ldr	r3, [pc, #108]	; (80020c0 <DMA2_Stream1_IRQHandler+0x70>)
 8002052:	681a      	ldr	r2, [r3, #0]
 8002054:	0511      	lsls	r1, r2, #20
 8002056:	d400      	bmi.n	800205a <DMA2_Stream1_IRQHandler+0xa>
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
        ADC3->CR2 &= ~ADC_CR2_DMA;   // Disable DMA mode

        MEAS_ADC_reset();
    }
}
 8002058:	4770      	bx	lr
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800205a:	4a1a      	ldr	r2, [pc, #104]	; (80020c4 <DMA2_Stream1_IRQHandler+0x74>)
 800205c:	f04f 7100 	mov.w	r1, #33554432	; 0x2000000
 8002060:	f8c2 1084 	str.w	r1, [r2, #132]	; 0x84
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8002064:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8002068:	f3bf 8f6f 	isb	sy
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800206c:	f8c2 1184 	str.w	r1, [r2, #388]	; 0x184
        DMA2_Stream1->CR &= ~DMA_SxCR_EN;         // Disable the DMA
 8002070:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8002072:	f022 0201 	bic.w	r2, r2, #1
 8002076:	629a      	str	r2, [r3, #40]	; 0x28
        while (DMA2_Stream1->CR & DMA_SxCR_EN)	  // Wait for DMA to finish
 8002078:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800207a:	07d2      	lsls	r2, r2, #31
 800207c:	d4fc      	bmi.n	8002078 <DMA2_Stream1_IRQHandler+0x28>
        DMA2->LIFCR |= DMA_LIFCR_CTCIF1;// clr transfer complete interrupt fl.
 800207e:	6899      	ldr	r1, [r3, #8]
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 8002080:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
        DMA2->LIFCR |= DMA_LIFCR_CTCIF1;// clr transfer complete interrupt fl.
 8002084:	f441 6100 	orr.w	r1, r1, #2048	; 0x800
 8002088:	6099      	str	r1, [r3, #8]
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 800208a:	6813      	ldr	r3, [r2, #0]
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 800208c:	490e      	ldr	r1, [pc, #56]	; (80020c8 <DMA2_Stream1_IRQHandler+0x78>)
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 800208e:	f023 0301 	bic.w	r3, r3, #1
 8002092:	6013      	str	r3, [r2, #0]
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 8002094:	6888      	ldr	r0, [r1, #8]
    RCC->APB2RSTR |= RCC_APB2RSTR_ADCRST;   // Reset ADCs
 8002096:	4b0d      	ldr	r3, [pc, #52]	; (80020cc <DMA2_Stream1_IRQHandler+0x7c>)
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 8002098:	f020 0001 	bic.w	r0, r0, #1
 800209c:	6088      	str	r0, [r1, #8]
        ADC3->CR2 &= ~ADC_CR2_DMA;   // Disable DMA mode
 800209e:	6888      	ldr	r0, [r1, #8]
 80020a0:	f420 7080 	bic.w	r0, r0, #256	; 0x100
 80020a4:	6088      	str	r0, [r1, #8]
    RCC->APB2RSTR |= RCC_APB2RSTR_ADCRST;   // Reset ADCs
 80020a6:	6a59      	ldr	r1, [r3, #36]	; 0x24
 80020a8:	f441 7180 	orr.w	r1, r1, #256	; 0x100
 80020ac:	6259      	str	r1, [r3, #36]	; 0x24
    RCC->APB2RSTR &= ~RCC_APB2RSTR_ADCRST;  // Release reset of ADCs
 80020ae:	6a59      	ldr	r1, [r3, #36]	; 0x24
 80020b0:	f421 7180 	bic.w	r1, r1, #256	; 0x100
 80020b4:	6259      	str	r1, [r3, #36]	; 0x24
    TIM2->CR1 &= ~TIM_CR1_CEN;              // Disable timer
 80020b6:	6813      	ldr	r3, [r2, #0]
 80020b8:	f023 0301 	bic.w	r3, r3, #1
 80020bc:	6013      	str	r3, [r2, #0]
}
 80020be:	4770      	bx	lr
 80020c0:	40026400 	.word	0x40026400
 80020c4:	e000e100 	.word	0xe000e100
 80020c8:	40012200 	.word	0x40012200
 80020cc:	40023800 	.word	0x40023800

080020d0 <MEAS_start_measure>:
 *
 * @note The result is stored alternated e.g. every 4th is together.
 *****************************************************************************/
// Start the measurement procedure
uint32_t* MEAS_start_measure(void)
{
 80020d0:	b510      	push	{r4, lr}
        buffer[i] = 0;
 80020d2:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80020d6:	2100      	movs	r1, #0
 80020d8:	480f      	ldr	r0, [pc, #60]	; (8002118 <MEAS_start_measure+0x48>)
 80020da:	f02b fdf2 	bl	802dcc2 <memset>
	MEAS_Buffer_reset(INPUT_COUNT, ADC_samples);
	MEAS_ADC3_scan_init();
 80020de:	f7ff ff3d 	bl	8001f5c <MEAS_ADC3_scan_init>
    DMA2_Stream1->CR |= DMA_SxCR_EN;          // Enable DMA
 80020e2:	4a0e      	ldr	r2, [pc, #56]	; (800211c <MEAS_start_measure+0x4c>)
 80020e4:	490e      	ldr	r1, [pc, #56]	; (8002120 <MEAS_start_measure+0x50>)
 80020e6:	6a93      	ldr	r3, [r2, #40]	; 0x28
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 80020e8:	480e      	ldr	r0, [pc, #56]	; (8002124 <MEAS_start_measure+0x54>)
 80020ea:	f04f 7400 	mov.w	r4, #33554432	; 0x2000000
    DMA2_Stream1->CR |= DMA_SxCR_EN;          // Enable DMA
 80020ee:	f043 0301 	orr.w	r3, r3, #1
 80020f2:	6293      	str	r3, [r2, #40]	; 0x28
 80020f4:	f8c1 4184 	str.w	r4, [r1, #388]	; 0x184
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80020f8:	604c      	str	r4, [r1, #4]
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 80020fa:	6883      	ldr	r3, [r0, #8]
    TIM2->CR1 |= TIM_CR1_CEN;           // Enable timer
 80020fc:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 8002100:	f043 0301 	orr.w	r3, r3, #1
 8002104:	6083      	str	r3, [r0, #8]
    TIM2->CR1 |= TIM_CR1_CEN;           // Enable timer
 8002106:	680b      	ldr	r3, [r1, #0]
 8002108:	f043 0301 	orr.w	r3, r3, #1
 800210c:	600b      	str	r3, [r1, #0]
    MEAS_ADC3_scan_start();

    while (DMA2_Stream1->CR & DMA_SxCR_EN)	  // Wait for DMA to finish
 800210e:	6a93      	ldr	r3, [r2, #40]	; 0x28
 8002110:	07db      	lsls	r3, r3, #31
 8002112:	d4fc      	bmi.n	800210e <MEAS_start_measure+0x3e>
	{

	}

     return ADC_samples;
}
 8002114:	4800      	ldr	r0, [pc, #0]	; (8002118 <MEAS_start_measure+0x48>)
 8002116:	bd10      	pop	{r4, pc}
 8002118:	200004a0 	.word	0x200004a0
 800211c:	40026400 	.word	0x40026400
 8002120:	e000e100 	.word	0xe000e100
 8002124:	40012200 	.word	0x40012200

08002128 <MEAS_get_num_of_chan>:
 * @return Number of channels
 *****************************************************************************/
uint8_t MEAS_get_num_of_chan(void)
{
	return INPUT_COUNT;
}
 8002128:	2004      	movs	r0, #4
 800212a:	4770      	bx	lr

0800212c <MEAS_get_num_of_samples>:
 * @return Number of samples
 *****************************************************************************/
uint8_t MEAS_get_num_of_samples(void)
{
	return ADC_NUMS;
}
 800212c:	2040      	movs	r0, #64	; 0x40
 800212e:	4770      	bx	lr

08002130 <MEAS_get_samp_freq>:
 * @return Sampling frequency
 *****************************************************************************/
uint16_t MEAS_get_samp_freq(void)
{
	return ADC_FS;
}
 8002130:	f44f 7020 	mov.w	r0, #640	; 0x280
 8002134:	4770      	bx	lr
 8002136:	bf00      	nop

08002138 <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                                        /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8002138:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800213a:	4b0e      	ldr	r3, [pc, #56]	; (8002174 <HAL_MspInit+0x3c>)
 800213c:	2200      	movs	r2, #0
 800213e:	9200      	str	r2, [sp, #0]
 8002140:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8002142:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 8002146:	6459      	str	r1, [r3, #68]	; 0x44
 8002148:	6c58      	ldr	r0, [r3, #68]	; 0x44
 800214a:	f400 4080 	and.w	r0, r0, #16384	; 0x4000
 800214e:	9000      	str	r0, [sp, #0]
 8002150:	9800      	ldr	r0, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 8002152:	9201      	str	r2, [sp, #4]
 8002154:	6c18      	ldr	r0, [r3, #64]	; 0x40
 8002156:	f040 5080 	orr.w	r0, r0, #268435456	; 0x10000000
 800215a:	6418      	str	r0, [r3, #64]	; 0x40
 800215c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800215e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002162:	9301      	str	r3, [sp, #4]
 8002164:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8002166:	210f      	movs	r1, #15
 8002168:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 800216c:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 800216e:	f009 ba3b 	b.w	800b5e8 <HAL_NVIC_SetPriority>
 8002172:	bf00      	nop
 8002174:	40023800 	.word	0x40023800

08002178 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8002178:	4b0b      	ldr	r3, [pc, #44]	; (80021a8 <HAL_CRC_MspInit+0x30>)
 800217a:	6802      	ldr	r2, [r0, #0]
 800217c:	429a      	cmp	r2, r3
 800217e:	d000      	beq.n	8002182 <HAL_CRC_MspInit+0xa>
 8002180:	4770      	bx	lr
{
 8002182:	b082      	sub	sp, #8
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8002184:	2200      	movs	r2, #0
 8002186:	9201      	str	r2, [sp, #4]
 8002188:	f8d3 2830 	ldr.w	r2, [r3, #2096]	; 0x830
 800218c:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8002190:	f8c3 2830 	str.w	r2, [r3, #2096]	; 0x830
 8002194:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8002198:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800219a:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 800219e:	9301      	str	r3, [sp, #4]
 80021a0:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 80021a2:	b002      	add	sp, #8
 80021a4:	4770      	bx	lr
 80021a6:	bf00      	nop
 80021a8:	40023000 	.word	0x40023000

080021ac <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 80021ac:	e92d 4370 	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hi2c->Instance==I2C3)
 80021b0:	4b2e      	ldr	r3, [pc, #184]	; (800226c <HAL_I2C_MspInit+0xc0>)
 80021b2:	6802      	ldr	r2, [r0, #0]
{
 80021b4:	b08a      	sub	sp, #40	; 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80021b6:	2400      	movs	r4, #0
  if(hi2c->Instance==I2C3)
 80021b8:	429a      	cmp	r2, r3
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80021ba:	e9cd 4404 	strd	r4, r4, [sp, #16]
 80021be:	e9cd 4406 	strd	r4, r4, [sp, #24]
 80021c2:	9408      	str	r4, [sp, #32]
  if(hi2c->Instance==I2C3)
 80021c4:	d002      	beq.n	80021cc <HAL_I2C_MspInit+0x20>
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
  /* USER CODE END I2C3_MspInit 1 */
  }

}
 80021c6:	b00a      	add	sp, #40	; 0x28
 80021c8:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80021cc:	4d28      	ldr	r5, [pc, #160]	; (8002270 <HAL_I2C_MspInit+0xc4>)
 80021ce:	9401      	str	r4, [sp, #4]
 80021d0:	6b2b      	ldr	r3, [r5, #48]	; 0x30
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80021d2:	4828      	ldr	r0, [pc, #160]	; (8002274 <HAL_I2C_MspInit+0xc8>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80021d4:	f043 0304 	orr.w	r3, r3, #4
 80021d8:	632b      	str	r3, [r5, #48]	; 0x30
 80021da:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 80021dc:	f003 0304 	and.w	r3, r3, #4
 80021e0:	9301      	str	r3, [sp, #4]
 80021e2:	9b01      	ldr	r3, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80021e4:	9402      	str	r4, [sp, #8]
 80021e6:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 80021e8:	f043 0301 	orr.w	r3, r3, #1
 80021ec:	632b      	str	r3, [r5, #48]	; 0x30
 80021ee:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 80021f0:	f003 0301 	and.w	r3, r3, #1
 80021f4:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 80021f6:	f44f 7200 	mov.w	r2, #512	; 0x200
 80021fa:	f04f 0801 	mov.w	r8, #1
 80021fe:	f04f 0903 	mov.w	r9, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8002202:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002204:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 8002206:	2312      	movs	r3, #18
 8002208:	e9cd 2304 	strd	r2, r3, [sp, #16]
 800220c:	e9cd 8906 	strd	r8, r9, [sp, #24]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002210:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8002212:	9608      	str	r6, [sp, #32]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002214:	f009 fc56 	bl	800bac4 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002218:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 800221a:	f44f 7280 	mov.w	r2, #256	; 0x100
 800221e:	2312      	movs	r3, #18
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002220:	4815      	ldr	r0, [pc, #84]	; (8002278 <HAL_I2C_MspInit+0xcc>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8002222:	9608      	str	r6, [sp, #32]
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8002224:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8002228:	e9cd 8906 	strd	r8, r9, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800222c:	f009 fc4a 	bl	800bac4 <HAL_GPIO_Init>
    __HAL_RCC_I2C3_CLK_ENABLE();
 8002230:	9403      	str	r4, [sp, #12]
 8002232:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8002234:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8002238:	642b      	str	r3, [r5, #64]	; 0x40
 800223a:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 800223c:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8002240:	4622      	mov	r2, r4
 8002242:	2105      	movs	r1, #5
    __HAL_RCC_I2C3_CLK_ENABLE();
 8002244:	9303      	str	r3, [sp, #12]
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8002246:	2048      	movs	r0, #72	; 0x48
    __HAL_RCC_I2C3_CLK_ENABLE();
 8002248:	9b03      	ldr	r3, [sp, #12]
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 800224a:	f009 f9cd 	bl	800b5e8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(I2C3_EV_IRQn);
 800224e:	2048      	movs	r0, #72	; 0x48
 8002250:	f009 fa08 	bl	800b664 <HAL_NVIC_EnableIRQ>
    __HAL_RCC_I2C3_FORCE_RESET();
 8002254:	6a2b      	ldr	r3, [r5, #32]
 8002256:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 800225a:	622b      	str	r3, [r5, #32]
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 800225c:	6a2b      	ldr	r3, [r5, #32]
 800225e:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8002262:	622b      	str	r3, [r5, #32]
}
 8002264:	b00a      	add	sp, #40	; 0x28
 8002266:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
 800226a:	bf00      	nop
 800226c:	40005c00 	.word	0x40005c00
 8002270:	40023800 	.word	0x40023800
 8002274:	40020800 	.word	0x40020800
 8002278:	40020000 	.word	0x40020000

0800227c <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 800227c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002280:	4604      	mov	r4, r0
 8002282:	b09a      	sub	sp, #104	; 0x68
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002284:	2100      	movs	r1, #0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8002286:	2230      	movs	r2, #48	; 0x30
 8002288:	a80e      	add	r0, sp, #56	; 0x38
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800228a:	e9cd 1108 	strd	r1, r1, [sp, #32]
 800228e:	e9cd 110a 	strd	r1, r1, [sp, #40]	; 0x28
 8002292:	910c      	str	r1, [sp, #48]	; 0x30
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8002294:	f02b fd15 	bl	802dcc2 <memset>
  if(hltdc->Instance==LTDC)
 8002298:	4b67      	ldr	r3, [pc, #412]	; (8002438 <HAL_LTDC_MspInit+0x1bc>)
 800229a:	6822      	ldr	r2, [r4, #0]
 800229c:	429a      	cmp	r2, r3
 800229e:	d002      	beq.n	80022a6 <HAL_LTDC_MspInit+0x2a>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 80022a0:	b01a      	add	sp, #104	; 0x68
 80022a2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 80022a6:	23c0      	movs	r3, #192	; 0xc0
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 80022a8:	2108      	movs	r1, #8
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 80022aa:	2204      	movs	r2, #4
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 80022ac:	9312      	str	r3, [sp, #72]	; 0x48
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80022ae:	a80e      	add	r0, sp, #56	; 0x38
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 80022b0:	f44f 3300 	mov.w	r3, #131072	; 0x20000
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 80022b4:	910e      	str	r1, [sp, #56]	; 0x38
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 80022b6:	9214      	str	r2, [sp, #80]	; 0x50
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 80022b8:	9317      	str	r3, [sp, #92]	; 0x5c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80022ba:	f00b fe6d 	bl	800df98 <HAL_RCCEx_PeriphCLKConfig>
 80022be:	2800      	cmp	r0, #0
 80022c0:	f040 80b7 	bne.w	8002432 <HAL_LTDC_MspInit+0x1b6>
    __HAL_RCC_LTDC_CLK_ENABLE();
 80022c4:	4b5d      	ldr	r3, [pc, #372]	; (800243c <HAL_LTDC_MspInit+0x1c0>)
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80022c6:	485e      	ldr	r0, [pc, #376]	; (8002440 <HAL_LTDC_MspInit+0x1c4>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 80022c8:	2400      	movs	r4, #0
 80022ca:	9401      	str	r4, [sp, #4]
 80022cc:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80022ce:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 80022d2:	645a      	str	r2, [r3, #68]	; 0x44
 80022d4:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80022d6:	f002 6280 	and.w	r2, r2, #67108864	; 0x4000000
 80022da:	9201      	str	r2, [sp, #4]
 80022dc:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80022de:	9402      	str	r4, [sp, #8]
 80022e0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80022e2:	f042 0220 	orr.w	r2, r2, #32
 80022e6:	631a      	str	r2, [r3, #48]	; 0x30
 80022e8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80022ea:	f002 0220 	and.w	r2, r2, #32
 80022ee:	9202      	str	r2, [sp, #8]
 80022f0:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80022f2:	9403      	str	r4, [sp, #12]
 80022f4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80022f6:	f042 0201 	orr.w	r2, r2, #1
 80022fa:	631a      	str	r2, [r3, #48]	; 0x30
 80022fc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80022fe:	f002 0201 	and.w	r2, r2, #1
 8002302:	9203      	str	r2, [sp, #12]
 8002304:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8002306:	9404      	str	r4, [sp, #16]
 8002308:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800230a:	f042 0202 	orr.w	r2, r2, #2
 800230e:	631a      	str	r2, [r3, #48]	; 0x30
 8002310:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002312:	f002 0202 	and.w	r2, r2, #2
 8002316:	9204      	str	r2, [sp, #16]
 8002318:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 800231a:	9405      	str	r4, [sp, #20]
 800231c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800231e:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8002322:	631a      	str	r2, [r3, #48]	; 0x30
 8002324:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002326:	f002 0240 	and.w	r2, r2, #64	; 0x40
 800232a:	9205      	str	r2, [sp, #20]
 800232c:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 800232e:	9406      	str	r4, [sp, #24]
 8002330:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002332:	f042 0204 	orr.w	r2, r2, #4
 8002336:	631a      	str	r2, [r3, #48]	; 0x30
 8002338:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800233a:	f002 0204 	and.w	r2, r2, #4
 800233e:	9206      	str	r2, [sp, #24]
 8002340:	9a06      	ldr	r2, [sp, #24]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8002342:	9407      	str	r4, [sp, #28]
 8002344:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002346:	f042 0208 	orr.w	r2, r2, #8
 800234a:	631a      	str	r2, [r3, #48]	; 0x30
 800234c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800234e:	f003 0308 	and.w	r3, r3, #8
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 8002352:	2600      	movs	r6, #0
 8002354:	2702      	movs	r7, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002356:	250e      	movs	r5, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8002358:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800235a:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 800235c:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8002360:	2302      	movs	r3, #2
 8002362:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8002366:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    __HAL_RCC_GPIOD_CLK_ENABLE();
 800236a:	9b07      	ldr	r3, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800236c:	950c      	str	r5, [sp, #48]	; 0x30
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800236e:	f009 fba9 	bl	800bac4 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002372:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8002374:	f641 0258 	movw	r2, #6232	; 0x1858
 8002378:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800237a:	4832      	ldr	r0, [pc, #200]	; (8002444 <HAL_LTDC_MspInit+0x1c8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800237c:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 800237e:	e9cd 2308 	strd	r2, r3, [sp, #32]
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8002382:	f04f 0809 	mov.w	r8, #9
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8002386:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800238a:	f009 fb9b 	bl	800bac4 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800238e:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8002390:	2203      	movs	r2, #3
 8002392:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002394:	482c      	ldr	r0, [pc, #176]	; (8002448 <HAL_LTDC_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8002396:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 800239a:	e9cd 2308 	strd	r2, r3, [sp, #32]
 800239e:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80023a2:	f009 fb8f 	bl	800bac4 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80023a6:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 80023a8:	f44f 6270 	mov.w	r2, #3840	; 0xf00
 80023ac:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80023ae:	4826      	ldr	r0, [pc, #152]	; (8002448 <HAL_LTDC_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80023b0:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 80023b2:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80023b6:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80023ba:	f009 fb83 	bl	800bac4 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80023be:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 80023c0:	f44f 620c 	mov.w	r2, #2240	; 0x8c0
 80023c4:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80023c6:	4821      	ldr	r0, [pc, #132]	; (800244c <HAL_LTDC_MspInit+0x1d0>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80023c8:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 80023ca:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80023ce:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80023d2:	f009 fb77 	bl	800bac4 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80023d6:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 80023d8:	22c0      	movs	r2, #192	; 0xc0
 80023da:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80023dc:	481c      	ldr	r0, [pc, #112]	; (8002450 <HAL_LTDC_MspInit+0x1d4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80023de:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 80023e0:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80023e4:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80023e8:	f009 fb6c 	bl	800bac4 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80023ec:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 80023ee:	2208      	movs	r2, #8
 80023f0:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80023f2:	4818      	ldr	r0, [pc, #96]	; (8002454 <HAL_LTDC_MspInit+0x1d8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80023f4:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 80023f6:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80023fa:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80023fe:	f009 fb61 	bl	800bac4 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8002402:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002404:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8002406:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800240a:	4810      	ldr	r0, [pc, #64]	; (800244c <HAL_LTDC_MspInit+0x1d0>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 800240c:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8002410:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8002414:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002418:	f009 fb54 	bl	800bac4 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 800241c:	4622      	mov	r2, r4
 800241e:	2105      	movs	r1, #5
 8002420:	2058      	movs	r0, #88	; 0x58
 8002422:	f009 f8e1 	bl	800b5e8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8002426:	2058      	movs	r0, #88	; 0x58
 8002428:	f009 f91c 	bl	800b664 <HAL_NVIC_EnableIRQ>
}
 800242c:	b01a      	add	sp, #104	; 0x68
 800242e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      Error_Handler();
 8002432:	f7ff fd39 	bl	8001ea8 <Error_Handler>
 8002436:	e745      	b.n	80022c4 <HAL_LTDC_MspInit+0x48>
 8002438:	40016800 	.word	0x40016800
 800243c:	40023800 	.word	0x40023800
 8002440:	40021400 	.word	0x40021400
 8002444:	40020000 	.word	0x40020000
 8002448:	40020400 	.word	0x40020400
 800244c:	40021800 	.word	0x40021800
 8002450:	40020800 	.word	0x40020800
 8002454:	40020c00 	.word	0x40020c00

08002458 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8002458:	b510      	push	{r4, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hspi->Instance==SPI5)
 800245a:	4a1b      	ldr	r2, [pc, #108]	; (80024c8 <HAL_SPI_MspInit+0x70>)
 800245c:	6801      	ldr	r1, [r0, #0]
{
 800245e:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002460:	2300      	movs	r3, #0
  if(hspi->Instance==SPI5)
 8002462:	4291      	cmp	r1, r2
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002464:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8002468:	e9cd 3304 	strd	r3, r3, [sp, #16]
 800246c:	9306      	str	r3, [sp, #24]
  if(hspi->Instance==SPI5)
 800246e:	d001      	beq.n	8002474 <HAL_SPI_MspInit+0x1c>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 8002470:	b008      	add	sp, #32
 8002472:	bd10      	pop	{r4, pc}
    __HAL_RCC_SPI5_CLK_ENABLE();
 8002474:	f502 4268 	add.w	r2, r2, #59392	; 0xe800
 8002478:	9300      	str	r3, [sp, #0]
 800247a:	6c50      	ldr	r0, [r2, #68]	; 0x44
 800247c:	f440 1080 	orr.w	r0, r0, #1048576	; 0x100000
 8002480:	6450      	str	r0, [r2, #68]	; 0x44
 8002482:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8002484:	f400 1080 	and.w	r0, r0, #1048576	; 0x100000
 8002488:	9000      	str	r0, [sp, #0]
 800248a:	9800      	ldr	r0, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800248c:	9301      	str	r3, [sp, #4]
 800248e:	6b13      	ldr	r3, [r2, #48]	; 0x30
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002490:	480e      	ldr	r0, [pc, #56]	; (80024cc <HAL_SPI_MspInit+0x74>)
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8002492:	f043 0320 	orr.w	r3, r3, #32
 8002496:	6313      	str	r3, [r2, #48]	; 0x30
 8002498:	6b13      	ldr	r3, [r2, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 800249a:	ed9f 7b09 	vldr	d7, [pc, #36]	; 80024c0 <HAL_SPI_MspInit+0x68>
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800249e:	f003 0320 	and.w	r3, r3, #32
 80024a2:	9301      	str	r3, [sp, #4]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80024a4:	2203      	movs	r2, #3
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 80024a6:	2305      	movs	r3, #5
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80024a8:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 80024aa:	ed8d 7b02 	vstr	d7, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 80024ae:	e9cd 2305 	strd	r2, r3, [sp, #20]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80024b2:	9c01      	ldr	r4, [sp, #4]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80024b4:	f009 fb06 	bl	800bac4 <HAL_GPIO_Init>
}
 80024b8:	b008      	add	sp, #32
 80024ba:	bd10      	pop	{r4, pc}
 80024bc:	f3af 8000 	nop.w
 80024c0:	00000380 	.word	0x00000380
 80024c4:	00000002 	.word	0x00000002
 80024c8:	40015000 	.word	0x40015000
 80024cc:	40021400 	.word	0x40021400

080024d0 <HAL_TIM_Base_MspInit>:
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
  if(htim_base->Instance==TIM2)
 80024d0:	6803      	ldr	r3, [r0, #0]
 80024d2:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
{
 80024d6:	b084      	sub	sp, #16
  if(htim_base->Instance==TIM2)
 80024d8:	d018      	beq.n	800250c <HAL_TIM_Base_MspInit+0x3c>
    __HAL_RCC_TIM2_CLK_ENABLE();
  /* USER CODE BEGIN TIM2_MspInit 1 */

  /* USER CODE END TIM2_MspInit 1 */
  }
  else if(htim_base->Instance==TIM3)
 80024da:	4a22      	ldr	r2, [pc, #136]	; (8002564 <HAL_TIM_Base_MspInit+0x94>)
 80024dc:	4293      	cmp	r3, r2
 80024de:	d007      	beq.n	80024f0 <HAL_TIM_Base_MspInit+0x20>
    __HAL_RCC_TIM3_CLK_ENABLE();
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }
  else if(htim_base->Instance==TIM9)
 80024e0:	4a21      	ldr	r2, [pc, #132]	; (8002568 <HAL_TIM_Base_MspInit+0x98>)
 80024e2:	4293      	cmp	r3, r2
 80024e4:	d021      	beq.n	800252a <HAL_TIM_Base_MspInit+0x5a>
    __HAL_RCC_TIM9_CLK_ENABLE();
  /* USER CODE BEGIN TIM9_MspInit 1 */

  /* USER CODE END TIM9_MspInit 1 */
  }
  else if(htim_base->Instance==TIM14)
 80024e6:	4a21      	ldr	r2, [pc, #132]	; (800256c <HAL_TIM_Base_MspInit+0x9c>)
 80024e8:	4293      	cmp	r3, r2
 80024ea:	d02c      	beq.n	8002546 <HAL_TIM_Base_MspInit+0x76>
  /* USER CODE BEGIN TIM14_MspInit 1 */

  /* USER CODE END TIM14_MspInit 1 */
  }

}
 80024ec:	b004      	add	sp, #16
 80024ee:	4770      	bx	lr
    __HAL_RCC_TIM3_CLK_ENABLE();
 80024f0:	4b1f      	ldr	r3, [pc, #124]	; (8002570 <HAL_TIM_Base_MspInit+0xa0>)
 80024f2:	2200      	movs	r2, #0
 80024f4:	9201      	str	r2, [sp, #4]
 80024f6:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80024f8:	f042 0202 	orr.w	r2, r2, #2
 80024fc:	641a      	str	r2, [r3, #64]	; 0x40
 80024fe:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002500:	f003 0302 	and.w	r3, r3, #2
 8002504:	9301      	str	r3, [sp, #4]
 8002506:	9b01      	ldr	r3, [sp, #4]
}
 8002508:	b004      	add	sp, #16
 800250a:	4770      	bx	lr
    __HAL_RCC_TIM2_CLK_ENABLE();
 800250c:	f503 330e 	add.w	r3, r3, #145408	; 0x23800
 8002510:	2200      	movs	r2, #0
 8002512:	9200      	str	r2, [sp, #0]
 8002514:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8002516:	f042 0201 	orr.w	r2, r2, #1
 800251a:	641a      	str	r2, [r3, #64]	; 0x40
 800251c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800251e:	f003 0301 	and.w	r3, r3, #1
 8002522:	9300      	str	r3, [sp, #0]
 8002524:	9b00      	ldr	r3, [sp, #0]
}
 8002526:	b004      	add	sp, #16
 8002528:	4770      	bx	lr
    __HAL_RCC_TIM9_CLK_ENABLE();
 800252a:	4b11      	ldr	r3, [pc, #68]	; (8002570 <HAL_TIM_Base_MspInit+0xa0>)
 800252c:	2200      	movs	r2, #0
 800252e:	9202      	str	r2, [sp, #8]
 8002530:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8002532:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8002536:	645a      	str	r2, [r3, #68]	; 0x44
 8002538:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800253a:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800253e:	9302      	str	r3, [sp, #8]
 8002540:	9b02      	ldr	r3, [sp, #8]
}
 8002542:	b004      	add	sp, #16
 8002544:	4770      	bx	lr
    __HAL_RCC_TIM14_CLK_ENABLE();
 8002546:	4b0a      	ldr	r3, [pc, #40]	; (8002570 <HAL_TIM_Base_MspInit+0xa0>)
 8002548:	2200      	movs	r2, #0
 800254a:	9203      	str	r2, [sp, #12]
 800254c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800254e:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8002552:	641a      	str	r2, [r3, #64]	; 0x40
 8002554:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002556:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800255a:	9303      	str	r3, [sp, #12]
 800255c:	9b03      	ldr	r3, [sp, #12]
}
 800255e:	b004      	add	sp, #16
 8002560:	4770      	bx	lr
 8002562:	bf00      	nop
 8002564:	40000400 	.word	0x40000400
 8002568:	40014000 	.word	0x40014000
 800256c:	40002000 	.word	0x40002000
 8002570:	40023800 	.word	0x40023800
 8002574:	00000000 	.word	0x00000000

08002578 <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 8002578:	b500      	push	{lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(htim->Instance==TIM9)
 800257a:	6802      	ldr	r2, [r0, #0]
 800257c:	4924      	ldr	r1, [pc, #144]	; (8002610 <HAL_TIM_MspPostInit+0x98>)
{
 800257e:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002580:	2300      	movs	r3, #0
  if(htim->Instance==TIM9)
 8002582:	428a      	cmp	r2, r1
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002584:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8002588:	e9cd 3304 	strd	r3, r3, [sp, #16]
 800258c:	9306      	str	r3, [sp, #24]
  if(htim->Instance==TIM9)
 800258e:	d005      	beq.n	800259c <HAL_TIM_MspPostInit+0x24>

  /* USER CODE BEGIN TIM9_MspPostInit 1 */

  /* USER CODE END TIM9_MspPostInit 1 */
  }
  else if(htim->Instance==TIM14)
 8002590:	4920      	ldr	r1, [pc, #128]	; (8002614 <HAL_TIM_MspPostInit+0x9c>)
 8002592:	428a      	cmp	r2, r1
 8002594:	d01a      	beq.n	80025cc <HAL_TIM_MspPostInit+0x54>
  /* USER CODE BEGIN TIM14_MspPostInit 1 */

  /* USER CODE END TIM14_MspPostInit 1 */
  }

}
 8002596:	b009      	add	sp, #36	; 0x24
 8002598:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800259c:	4a1e      	ldr	r2, [pc, #120]	; (8002618 <HAL_TIM_MspPostInit+0xa0>)
 800259e:	9300      	str	r3, [sp, #0]
 80025a0:	6b13      	ldr	r3, [r2, #48]	; 0x30
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80025a2:	481e      	ldr	r0, [pc, #120]	; (800261c <HAL_TIM_MspPostInit+0xa4>)
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80025a4:	f043 0301 	orr.w	r3, r3, #1
 80025a8:	6313      	str	r3, [r2, #48]	; 0x30
 80025aa:	6b13      	ldr	r3, [r2, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_2;
 80025ac:	ed9f 7b14 	vldr	d7, [pc, #80]	; 8002600 <HAL_TIM_MspPostInit+0x88>
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80025b0:	f003 0301 	and.w	r3, r3, #1
 80025b4:	9300      	str	r3, [sp, #0]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80025b6:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Alternate = GPIO_AF3_TIM9;
 80025b8:	2303      	movs	r3, #3
    GPIO_InitStruct.Pin = GPIO_PIN_2;
 80025ba:	ed8d 7b02 	vstr	d7, [sp, #8]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80025be:	9a00      	ldr	r2, [sp, #0]
    GPIO_InitStruct.Alternate = GPIO_AF3_TIM9;
 80025c0:	9306      	str	r3, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80025c2:	f009 fa7f 	bl	800bac4 <HAL_GPIO_Init>
}
 80025c6:	b009      	add	sp, #36	; 0x24
 80025c8:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80025cc:	4a12      	ldr	r2, [pc, #72]	; (8002618 <HAL_TIM_MspPostInit+0xa0>)
 80025ce:	9301      	str	r3, [sp, #4]
 80025d0:	6b13      	ldr	r3, [r2, #48]	; 0x30
 80025d2:	f043 0301 	orr.w	r3, r3, #1
 80025d6:	6313      	str	r3, [r2, #48]	; 0x30
 80025d8:	6b13      	ldr	r3, [r2, #48]	; 0x30
    GPIO_InitStruct.Pin = BUZZER_PWM_Pin;
 80025da:	ed9f 7b0b 	vldr	d7, [pc, #44]	; 8002608 <HAL_TIM_MspPostInit+0x90>
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80025de:	f003 0301 	and.w	r3, r3, #1
 80025e2:	9301      	str	r3, [sp, #4]
 80025e4:	9801      	ldr	r0, [sp, #4]
    HAL_GPIO_Init(BUZZER_PWM_GPIO_Port, &GPIO_InitStruct);
 80025e6:	480d      	ldr	r0, [pc, #52]	; (800261c <HAL_TIM_MspPostInit+0xa4>)
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80025e8:	2202      	movs	r2, #2
    GPIO_InitStruct.Alternate = GPIO_AF9_TIM14;
 80025ea:	2309      	movs	r3, #9
    HAL_GPIO_Init(BUZZER_PWM_GPIO_Port, &GPIO_InitStruct);
 80025ec:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Pin = BUZZER_PWM_Pin;
 80025ee:	ed8d 7b02 	vstr	d7, [sp, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80025f2:	9205      	str	r2, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF9_TIM14;
 80025f4:	9306      	str	r3, [sp, #24]
    HAL_GPIO_Init(BUZZER_PWM_GPIO_Port, &GPIO_InitStruct);
 80025f6:	f009 fa65 	bl	800bac4 <HAL_GPIO_Init>
}
 80025fa:	b009      	add	sp, #36	; 0x24
 80025fc:	f85d fb04 	ldr.w	pc, [sp], #4
 8002600:	00000004 	.word	0x00000004
 8002604:	00000002 	.word	0x00000002
 8002608:	00000080 	.word	0x00000080
 800260c:	00000002 	.word	0x00000002
 8002610:	40014000 	.word	0x40014000
 8002614:	40002000 	.word	0x40002000
 8002618:	40023800 	.word	0x40023800
 800261c:	40020000 	.word	0x40020000

08002620 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8002620:	b5f0      	push	{r4, r5, r6, r7, lr}
  if (FMC_Initialized) {
 8002622:	4b2b      	ldr	r3, [pc, #172]	; (80026d0 <HAL_SDRAM_MspInit+0xb0>)
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8002624:	b089      	sub	sp, #36	; 0x24
  if (FMC_Initialized) {
 8002626:	681c      	ldr	r4, [r3, #0]
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8002628:	2200      	movs	r2, #0
 800262a:	9204      	str	r2, [sp, #16]
  if (FMC_Initialized) {
 800262c:	2c00      	cmp	r4, #0
 800262e:	d14c      	bne.n	80026ca <HAL_SDRAM_MspInit+0xaa>
  FMC_Initialized = 1;
 8002630:	2701      	movs	r7, #1
  __HAL_RCC_FMC_CLK_ENABLE();
 8002632:	4a28      	ldr	r2, [pc, #160]	; (80026d4 <HAL_SDRAM_MspInit+0xb4>)
 8002634:	9401      	str	r4, [sp, #4]
  FMC_Initialized = 1;
 8002636:	601f      	str	r7, [r3, #0]
  __HAL_RCC_FMC_CLK_ENABLE();
 8002638:	6b93      	ldr	r3, [r2, #56]	; 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800263a:	4827      	ldr	r0, [pc, #156]	; (80026d8 <HAL_SDRAM_MspInit+0xb8>)
  __HAL_RCC_FMC_CLK_ENABLE();
 800263c:	433b      	orrs	r3, r7
 800263e:	6393      	str	r3, [r2, #56]	; 0x38
 8002640:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8002642:	403b      	ands	r3, r7
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002644:	2603      	movs	r6, #3
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002646:	250c      	movs	r5, #12
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8002648:	f64f 023f 	movw	r2, #63551	; 0xf83f
  __HAL_RCC_FMC_CLK_ENABLE();
 800264c:	9301      	str	r3, [sp, #4]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800264e:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8002650:	2302      	movs	r3, #2
 8002652:	e9cd 2302 	strd	r2, r3, [sp, #8]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002656:	e9cd 6505 	strd	r6, r5, [sp, #20]
  __HAL_RCC_FMC_CLK_ENABLE();
 800265a:	9b01      	ldr	r3, [sp, #4]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800265c:	f009 fa32 	bl	800bac4 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002660:	481e      	ldr	r0, [pc, #120]	; (80026dc <HAL_SDRAM_MspInit+0xbc>)
  GPIO_InitStruct.Pin = GPIO_PIN_0;
 8002662:	9702      	str	r7, [sp, #8]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002664:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002666:	2702      	movs	r7, #2
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002668:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800266c:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002670:	f009 fa28 	bl	800bac4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8002674:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002678:	4819      	ldr	r0, [pc, #100]	; (80026e0 <HAL_SDRAM_MspInit+0xc0>)
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 800267a:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800267c:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800267e:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002682:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002686:	f009 fa1d 	bl	800bac4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 800268a:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800268e:	4815      	ldr	r0, [pc, #84]	; (80026e4 <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8002690:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002692:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002694:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002698:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800269c:	f009 fa12 	bl	800bac4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 80026a0:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80026a4:	4810      	ldr	r0, [pc, #64]	; (80026e8 <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 80026a6:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80026a8:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80026aa:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80026ae:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80026b2:	f009 fa07 	bl	800bac4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 80026b6:	2360      	movs	r3, #96	; 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80026b8:	480c      	ldr	r0, [pc, #48]	; (80026ec <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80026ba:	9703      	str	r7, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80026bc:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80026be:	e9cd 4604 	strd	r4, r6, [sp, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80026c2:	9506      	str	r5, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 80026c4:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80026c6:	f009 f9fd 	bl	800bac4 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 80026ca:	b009      	add	sp, #36	; 0x24
 80026cc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80026ce:	bf00      	nop
 80026d0:	200008a0 	.word	0x200008a0
 80026d4:	40023800 	.word	0x40023800
 80026d8:	40021400 	.word	0x40021400
 80026dc:	40020800 	.word	0x40020800
 80026e0:	40021800 	.word	0x40021800
 80026e4:	40021000 	.word	0x40021000
 80026e8:	40020c00 	.word	0x40020c00
 80026ec:	40020400 	.word	0x40020400

080026f0 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 80026f0:	b570      	push	{r4, r5, r6, lr}
 80026f2:	b088      	sub	sp, #32
  uint32_t              uwPrescalerValue = 0U;
  uint32_t              pFLatency;
  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 80026f4:	4b23      	ldr	r3, [pc, #140]	; (8002784 <HAL_InitTick+0x94>)
 80026f6:	2200      	movs	r2, #0
 80026f8:	9202      	str	r2, [sp, #8]
 80026fa:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80026fc:	f042 0210 	orr.w	r2, r2, #16
 8002700:	641a      	str	r2, [r3, #64]	; 0x40
 8002702:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002704:	f003 0310 	and.w	r3, r3, #16
 8002708:	9302      	str	r3, [sp, #8]
{
 800270a:	4605      	mov	r5, r0

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 800270c:	a901      	add	r1, sp, #4
 800270e:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 8002710:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8002712:	f00b fc1f 	bl	800df54 <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  /* Compute TIM6 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 8002716:	9b06      	ldr	r3, [sp, #24]
 8002718:	b9d3      	cbnz	r3, 8002750 <HAL_InitTick+0x60>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 800271a:	f00b fc0b 	bl	800df34 <HAL_RCC_GetPCLK1Freq>
 800271e:	4603      	mov	r3, r0
  {
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
  }

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8002720:	4a19      	ldr	r2, [pc, #100]	; (8002788 <HAL_InitTick+0x98>)

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8002722:	4c1a      	ldr	r4, [pc, #104]	; (800278c <HAL_InitTick+0x9c>)
 8002724:	491a      	ldr	r1, [pc, #104]	; (8002790 <HAL_InitTick+0xa0>)
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8002726:	fba2 2303 	umull	r2, r3, r2, r3
 800272a:	0c9b      	lsrs	r3, r3, #18
 800272c:	3b01      	subs	r3, #1
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
  htim6.Init.Prescaler = uwPrescalerValue;
  htim6.Init.ClockDivision = 0;
 800272e:	2200      	movs	r2, #0
  htim6.Init.Prescaler = uwPrescalerValue;
 8002730:	e9c4 1300 	strd	r1, r3, [r4]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

  status = HAL_TIM_Base_Init(&htim6);
 8002734:	4620      	mov	r0, r4
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8002736:	f240 33e7 	movw	r3, #999	; 0x3e7
  htim6.Init.ClockDivision = 0;
 800273a:	6122      	str	r2, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 800273c:	60a2      	str	r2, [r4, #8]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800273e:	61a2      	str	r2, [r4, #24]
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8002740:	60e3      	str	r3, [r4, #12]
  status = HAL_TIM_Base_Init(&htim6);
 8002742:	f00c fa37 	bl	800ebb4 <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 8002746:	4606      	mov	r6, r0
 8002748:	b130      	cbz	r0, 8002758 <HAL_InitTick+0x68>
    }
  }

 /* Return function status */
  return status;
}
 800274a:	4630      	mov	r0, r6
 800274c:	b008      	add	sp, #32
 800274e:	bd70      	pop	{r4, r5, r6, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 8002750:	f00b fbf0 	bl	800df34 <HAL_RCC_GetPCLK1Freq>
 8002754:	0043      	lsls	r3, r0, #1
 8002756:	e7e3      	b.n	8002720 <HAL_InitTick+0x30>
    status = HAL_TIM_Base_Start_IT(&htim6);
 8002758:	4620      	mov	r0, r4
 800275a:	f00c fab9 	bl	800ecd0 <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 800275e:	4606      	mov	r6, r0
 8002760:	2800      	cmp	r0, #0
 8002762:	d1f2      	bne.n	800274a <HAL_InitTick+0x5a>
        HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8002764:	2036      	movs	r0, #54	; 0x36
 8002766:	f008 ff7d 	bl	800b664 <HAL_NVIC_EnableIRQ>
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 800276a:	2d0f      	cmp	r5, #15
 800276c:	d901      	bls.n	8002772 <HAL_InitTick+0x82>
        status = HAL_ERROR;
 800276e:	2601      	movs	r6, #1
 8002770:	e7eb      	b.n	800274a <HAL_InitTick+0x5a>
        HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority, 0U);
 8002772:	4632      	mov	r2, r6
 8002774:	4629      	mov	r1, r5
 8002776:	2036      	movs	r0, #54	; 0x36
 8002778:	f008 ff36 	bl	800b5e8 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 800277c:	4b05      	ldr	r3, [pc, #20]	; (8002794 <HAL_InitTick+0xa4>)
 800277e:	601d      	str	r5, [r3, #0]
 8002780:	e7e3      	b.n	800274a <HAL_InitTick+0x5a>
 8002782:	bf00      	nop
 8002784:	40023800 	.word	0x40023800
 8002788:	431bde83 	.word	0x431bde83
 800278c:	200008a4 	.word	0x200008a4
 8002790:	40001000 	.word	0x40001000
 8002794:	20000084 	.word	0x20000084

08002798 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8002798:	4770      	bx	lr
 800279a:	bf00      	nop

0800279c <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 800279c:	e7fe      	b.n	800279c <HardFault_Handler>
 800279e:	bf00      	nop

080027a0 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 80027a0:	e7fe      	b.n	80027a0 <MemManage_Handler>
 80027a2:	bf00      	nop

080027a4 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 80027a4:	e7fe      	b.n	80027a4 <BusFault_Handler>
 80027a6:	bf00      	nop

080027a8 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 80027a8:	e7fe      	b.n	80027a8 <UsageFault_Handler>
 80027aa:	bf00      	nop

080027ac <DebugMon_Handler>:
 80027ac:	4770      	bx	lr
 80027ae:	bf00      	nop

080027b0 <EXTI3_IRQHandler>:

/**
  * @brief This function handles EXTI line3 interrupt.
  */
void EXTI3_IRQHandler(void)
{
 80027b0:	b508      	push	{r3, lr}
  /* USER CODE BEGIN EXTI3_IRQn 0 */

  HAL_Delay(200);
 80027b2:	20c8      	movs	r0, #200	; 0xc8
 80027b4:	f008 fef4 	bl	800b5a0 <HAL_Delay>
  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 80027b8:	4804      	ldr	r0, [pc, #16]	; (80027cc <EXTI3_IRQHandler+0x1c>)
 80027ba:	2200      	movs	r2, #0
 80027bc:	2120      	movs	r1, #32
 80027be:	f009 fac5 	bl	800bd4c <HAL_GPIO_WritePin>
  /* USER CODE END EXTI3_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(DEVICE_ON_OFF_TRIGGER_Pin);
  /* USER CODE BEGIN EXTI3_IRQn 1 */

  /* USER CODE END EXTI3_IRQn 1 */
}
 80027c2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_EXTI_IRQHandler(DEVICE_ON_OFF_TRIGGER_Pin);
 80027c6:	2008      	movs	r0, #8
 80027c8:	f009 bad0 	b.w	800bd6c <HAL_GPIO_EXTI_IRQHandler>
 80027cc:	40021000 	.word	0x40021000

080027d0 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 80027d0:	4801      	ldr	r0, [pc, #4]	; (80027d8 <TIM6_DAC_IRQHandler+0x8>)
 80027d2:	f00c be5d 	b.w	800f490 <HAL_TIM_IRQHandler>
 80027d6:	bf00      	nop
 80027d8:	200008a4 	.word	0x200008a4

080027dc <I2C3_EV_IRQHandler>:
void I2C3_EV_IRQHandler(void)
{
  /* USER CODE BEGIN I2C3_EV_IRQn 0 */

  /* USER CODE END I2C3_EV_IRQn 0 */
  HAL_I2C_EV_IRQHandler(&hi2c3);
 80027dc:	4801      	ldr	r0, [pc, #4]	; (80027e4 <I2C3_EV_IRQHandler+0x8>)
 80027de:	f00a ba25 	b.w	800cc2c <HAL_I2C_EV_IRQHandler>
 80027e2:	bf00      	nop
 80027e4:	200001f8 	.word	0x200001f8

080027e8 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 80027e8:	4801      	ldr	r0, [pc, #4]	; (80027f0 <LTDC_IRQHandler+0x8>)
 80027ea:	f00a bf99 	b.w	800d720 <HAL_LTDC_IRQHandler>
 80027ee:	bf00      	nop
 80027f0:	2000024c 	.word	0x2000024c

080027f4 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 80027f4:	2001      	movs	r0, #1
 80027f6:	4770      	bx	lr

080027f8 <_kill>:

int _kill(int pid, int sig)
{
 80027f8:	b508      	push	{r3, lr}
	errno = EINVAL;
 80027fa:	f02b fb5b 	bl	802deb4 <__errno>
 80027fe:	2316      	movs	r3, #22
 8002800:	6003      	str	r3, [r0, #0]
	return -1;
}
 8002802:	f04f 30ff 	mov.w	r0, #4294967295
 8002806:	bd08      	pop	{r3, pc}

08002808 <_exit>:

void _exit (int status)
{
 8002808:	b508      	push	{r3, lr}
	errno = EINVAL;
 800280a:	f02b fb53 	bl	802deb4 <__errno>
 800280e:	2316      	movs	r3, #22
 8002810:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8002812:	e7fe      	b.n	8002812 <_exit+0xa>

08002814 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8002814:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002816:	1e16      	subs	r6, r2, #0
 8002818:	dd07      	ble.n	800282a <_read+0x16>
 800281a:	460c      	mov	r4, r1
 800281c:	198d      	adds	r5, r1, r6
	{
		*ptr++ = __io_getchar();
 800281e:	f3af 8000 	nop.w
 8002822:	f804 0b01 	strb.w	r0, [r4], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002826:	42a5      	cmp	r5, r4
 8002828:	d1f9      	bne.n	800281e <_read+0xa>
	}

return len;
}
 800282a:	4630      	mov	r0, r6
 800282c:	bd70      	pop	{r4, r5, r6, pc}
 800282e:	bf00      	nop

08002830 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8002830:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002832:	1e16      	subs	r6, r2, #0
 8002834:	dd07      	ble.n	8002846 <_write+0x16>
 8002836:	460c      	mov	r4, r1
 8002838:	198d      	adds	r5, r1, r6
	{
		__io_putchar(*ptr++);
 800283a:	f814 0b01 	ldrb.w	r0, [r4], #1
 800283e:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002842:	42ac      	cmp	r4, r5
 8002844:	d1f9      	bne.n	800283a <_write+0xa>
	}
	return len;
}
 8002846:	4630      	mov	r0, r6
 8002848:	bd70      	pop	{r4, r5, r6, pc}
 800284a:	bf00      	nop

0800284c <_close>:

int _close(int file)
{
	return -1;
}
 800284c:	f04f 30ff 	mov.w	r0, #4294967295
 8002850:	4770      	bx	lr
 8002852:	bf00      	nop

08002854 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8002854:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8002858:	604b      	str	r3, [r1, #4]
	return 0;
}
 800285a:	2000      	movs	r0, #0
 800285c:	4770      	bx	lr
 800285e:	bf00      	nop

08002860 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8002860:	2001      	movs	r0, #1
 8002862:	4770      	bx	lr

08002864 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8002864:	2000      	movs	r0, #0
 8002866:	4770      	bx	lr

08002868 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8002868:	4a0b      	ldr	r2, [pc, #44]	; (8002898 <_sbrk+0x30>)
{
 800286a:	b508      	push	{r3, lr}
 800286c:	4603      	mov	r3, r0
	if (heap_end == 0)
 800286e:	6810      	ldr	r0, [r2, #0]
 8002870:	b128      	cbz	r0, 800287e <_sbrk+0x16>
		heap_end = &end;

	prev_heap_end = heap_end;
	if (heap_end + incr > stack_ptr)
 8002872:	4403      	add	r3, r0
 8002874:	4669      	mov	r1, sp
 8002876:	428b      	cmp	r3, r1
 8002878:	d807      	bhi.n	800288a <_sbrk+0x22>
	{
		errno = ENOMEM;
		return (caddr_t) -1;
	}

	heap_end += incr;
 800287a:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
}
 800287c:	bd08      	pop	{r3, pc}
		heap_end = &end;
 800287e:	4807      	ldr	r0, [pc, #28]	; (800289c <_sbrk+0x34>)
 8002880:	6010      	str	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 8002882:	4403      	add	r3, r0
 8002884:	4669      	mov	r1, sp
 8002886:	428b      	cmp	r3, r1
 8002888:	d9f7      	bls.n	800287a <_sbrk+0x12>
		errno = ENOMEM;
 800288a:	f02b fb13 	bl	802deb4 <__errno>
 800288e:	230c      	movs	r3, #12
 8002890:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8002892:	f04f 30ff 	mov.w	r0, #4294967295
}
 8002896:	bd08      	pop	{r3, pc}
 8002898:	200008ec 	.word	0x200008ec
 800289c:	20014488 	.word	0x20014488

080028a0 <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 80028a0:	4770      	bx	lr
 80028a2:	bf00      	nop

080028a4 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 80028a4:	b508      	push	{r3, lr}
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_components_init();
 80028a6:	f000 fbab 	bl	8003000 <touchgfx_components_init>
  touchgfx_init();
}
 80028aa:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  touchgfx_init();
 80028ae:	f000 bb33 	b.w	8002f18 <touchgfx_init>
 80028b2:	bf00      	nop

080028b4 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 80028b4:	f000 bba6 	b.w	8003004 <touchgfx_taskEntry>

080028b8 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80028b8:	4770      	bx	lr

080028ba <_ZN20STM32TouchControllerD0Ev>:
 80028ba:	b510      	push	{r4, lr}
 80028bc:	2104      	movs	r1, #4
 80028be:	4604      	mov	r4, r0
 80028c0:	f02a f913 	bl	802caea <_ZdlPvj>
 80028c4:	4620      	mov	r0, r4
 80028c6:	bd10      	pop	{r4, pc}

080028c8 <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 80028c8:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 80028ca:	4b0c      	ldr	r3, [pc, #48]	; (80028fc <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 80028cc:	4c0c      	ldr	r4, [pc, #48]	; (8002900 <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 80028ce:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 80028d0:	4b0c      	ldr	r3, [pc, #48]	; (8002904 <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 80028d2:	2082      	movs	r0, #130	; 0x82
    TsYBoundary = YSize;
 80028d4:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 80028d6:	6863      	ldr	r3, [r4, #4]
 80028d8:	4798      	blx	r3
 80028da:	f640 0311 	movw	r3, #2065	; 0x811
 80028de:	4298      	cmp	r0, r3
 80028e0:	d10a      	bne.n	80028f8 <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 80028e2:	4d09      	ldr	r5, [pc, #36]	; (8002908 <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 80028e4:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 80028e6:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 80028e8:	2082      	movs	r0, #130	; 0x82
 80028ea:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 80028ec:	682b      	ldr	r3, [r5, #0]
 80028ee:	2082      	movs	r0, #130	; 0x82
 80028f0:	68db      	ldr	r3, [r3, #12]
 80028f2:	4798      	blx	r3
 80028f4:	2000      	movs	r0, #0
    }

    return ret;
}
 80028f6:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 80028f8:	2001      	movs	r0, #1
 80028fa:	e7fc      	b.n	80028f6 <_Z11BSP_TS_Inittt+0x2e>
 80028fc:	200008f0 	.word	0x200008f0
 8002900:	20000054 	.word	0x20000054
 8002904:	200008f2 	.word	0x200008f2
 8002908:	200008f4 	.word	0x200008f4

0800290c <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 800290c:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8002910:	20f0      	movs	r0, #240	; 0xf0
 8002912:	f7ff bfd9 	b.w	80028c8 <_Z11BSP_TS_Inittt>
	...

08002918 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 8002918:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 800291a:	4d33      	ldr	r5, [pc, #204]	; (80029e8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd0>)
 800291c:	682b      	ldr	r3, [r5, #0]
{
 800291e:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8002920:	691b      	ldr	r3, [r3, #16]
 8002922:	2082      	movs	r0, #130	; 0x82
 8002924:	4798      	blx	r3
 8002926:	b280      	uxth	r0, r0
 8002928:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 800292a:	2800      	cmp	r0, #0
 800292c:	d04a      	beq.n	80029c4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xac>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 800292e:	682b      	ldr	r3, [r5, #0]
 8002930:	f10d 0206 	add.w	r2, sp, #6
 8002934:	695b      	ldr	r3, [r3, #20]
 8002936:	a901      	add	r1, sp, #4
 8002938:	2082      	movs	r0, #130	; 0x82
 800293a:	4798      	blx	r3

        //Ensures the coordinates is within the screen
        if (y > 3700)
 800293c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8002940:	f640 6274 	movw	r2, #3700	; 0xe74
 8002944:	4293      	cmp	r3, r2
 8002946:	d93f      	bls.n	80029c8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb0>
        {
            y = 3700;
 8002948:	f8ad 2006 	strh.w	r2, [sp, #6]

        /* Y value first correction */
        y -= 180;

        /* Y value second correction */
        y = 3520 - y;
 800294c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8002950:	1ad2      	subs	r2, r2, r3
 8002952:	b292      	uxth	r2, r2

        /* Y value third correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 8002954:	2a0a      	cmp	r2, #10
 8002956:	d93d      	bls.n	80029d4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xbc>
        yr = y / 11;
 8002958:	230b      	movs	r3, #11
 800295a:	fbb2 f2f3 	udiv	r2, r2, r3
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 800295e:	4b23      	ldr	r3, [pc, #140]	; (80029ec <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd4>)
 8002960:	881b      	ldrh	r3, [r3, #0]
 8002962:	429a      	cmp	r2, r3
 8002964:	d901      	bls.n	800296a <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
        {
            yr = TsYBoundary - 1;
 8002966:	3b01      	subs	r3, #1
 8002968:	b29a      	uxth	r2, r3
        {
        }
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 800296a:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800296e:	f640 31b8 	movw	r1, #3000	; 0xbb8
 8002972:	428b      	cmp	r3, r1
 8002974:	d830      	bhi.n	80029d8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc0>
        {
            x = 3870 - x;
 8002976:	f5c3 6371 	rsb	r3, r3, #3856	; 0xf10
 800297a:	330e      	adds	r3, #14
 800297c:	b29b      	uxth	r3, r3
        {
            x = 3800 - x;
        }

        /* X value second correction */
        xr = x / 15;
 800297e:	210f      	movs	r1, #15
 8002980:	fbb3 f3f1 	udiv	r3, r3, r1
        /* Return X position value */
        if (xr <= 0)
        {
            xr = 0;
        }
        else if (xr > TsXBoundary)
 8002984:	491a      	ldr	r1, [pc, #104]	; (80029f0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd8>)
 8002986:	8809      	ldrh	r1, [r1, #0]
 8002988:	428b      	cmp	r3, r1
 800298a:	d901      	bls.n	8002990 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
        {
            xr = TsXBoundary - 1;
 800298c:	3901      	subs	r1, #1
 800298e:	b28b      	uxth	r3, r1
        else
        {
        }

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 8002990:	4e18      	ldr	r6, [pc, #96]	; (80029f4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xdc>)
        yDiff = y > _y ? (y - _y) : (_y - y);
 8002992:	4d19      	ldr	r5, [pc, #100]	; (80029f8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe0>)
        xDiff = x > _x ? (x - _x) : (_x - x);
 8002994:	6830      	ldr	r0, [r6, #0]
        yDiff = y > _y ? (y - _y) : (_y - y);
 8002996:	682f      	ldr	r7, [r5, #0]
        xDiff = x > _x ? (x - _x) : (_x - x);
 8002998:	4283      	cmp	r3, r0
 800299a:	b281      	uxth	r1, r0
 800299c:	bf8c      	ite	hi
 800299e:	1a59      	subhi	r1, r3, r1
 80029a0:	1ac9      	subls	r1, r1, r3
        yDiff = y > _y ? (y - _y) : (_y - y);
 80029a2:	b2b8      	uxth	r0, r7
 80029a4:	42ba      	cmp	r2, r7
 80029a6:	bf8c      	ite	hi
 80029a8:	1a10      	subhi	r0, r2, r0
 80029aa:	1a80      	subls	r0, r0, r2
        xDiff = x > _x ? (x - _x) : (_x - x);
 80029ac:	b289      	uxth	r1, r1
        yDiff = y > _y ? (y - _y) : (_y - y);
 80029ae:	b280      	uxth	r0, r0

        if (xDiff + yDiff > 5)
 80029b0:	4401      	add	r1, r0
 80029b2:	2905      	cmp	r1, #5
        {
            _x = x;
 80029b4:	bfc8      	it	gt
 80029b6:	6033      	strgt	r3, [r6, #0]
            _y = y;
        }

        /* Update the X position */
        TsState->X = _x;
 80029b8:	6833      	ldr	r3, [r6, #0]
            _y = y;
 80029ba:	bfc8      	it	gt
 80029bc:	602a      	strgt	r2, [r5, #0]
        TsState->X = _x;
 80029be:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 80029c0:	682b      	ldr	r3, [r5, #0]
 80029c2:	80a3      	strh	r3, [r4, #4]
    }
}
 80029c4:	b003      	add	sp, #12
 80029c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
        else if (y < 180)
 80029c8:	2bb3      	cmp	r3, #179	; 0xb3
            y = 180;
 80029ca:	bf9c      	itt	ls
 80029cc:	23b4      	movls	r3, #180	; 0xb4
 80029ce:	f8ad 3006 	strhls.w	r3, [sp, #6]
 80029d2:	e7bb      	b.n	800294c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x34>
            yr = 0;
 80029d4:	2200      	movs	r2, #0
 80029d6:	e7c8      	b.n	800296a <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
            x = 3800 - x;
 80029d8:	f5c3 636d 	rsb	r3, r3, #3792	; 0xed0
 80029dc:	3308      	adds	r3, #8
 80029de:	b29b      	uxth	r3, r3
        if (xr <= 0)
 80029e0:	2b0e      	cmp	r3, #14
 80029e2:	d8cc      	bhi.n	800297e <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x66>
            xr = 0;
 80029e4:	2300      	movs	r3, #0
 80029e6:	e7d3      	b.n	8002990 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
 80029e8:	200008f4 	.word	0x200008f4
 80029ec:	200008f2 	.word	0x200008f2
 80029f0:	200008f0 	.word	0x200008f0
 80029f4:	200008f8 	.word	0x200008f8
 80029f8:	200008fc 	.word	0x200008fc

080029fc <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 80029fc:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 80029fe:	4668      	mov	r0, sp
{
 8002a00:	460d      	mov	r5, r1
 8002a02:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 8002a04:	f7ff ff88 	bl	8002918 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8002a08:	f8bd 0000 	ldrh.w	r0, [sp]
 8002a0c:	b148      	cbz	r0, 8002a22 <_ZN20STM32TouchController11sampleTouchERlS0_+0x26>
        x = state.X;
 8002a0e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8002a12:	602b      	str	r3, [r5, #0]
        y = state.Y;
 8002a14:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8002a18:	6023      	str	r3, [r4, #0]
        sleep_timeout_value = 60;
 8002a1a:	4b03      	ldr	r3, [pc, #12]	; (8002a28 <_ZN20STM32TouchController11sampleTouchERlS0_+0x2c>)
 8002a1c:	223c      	movs	r2, #60	; 0x3c
 8002a1e:	601a      	str	r2, [r3, #0]
        return true;
 8002a20:	2001      	movs	r0, #1
}
 8002a22:	b003      	add	sp, #12
 8002a24:	bd30      	pop	{r4, r5, pc}
 8002a26:	bf00      	nop
 8002a28:	20000010 	.word	0x20000010

08002a2c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 8002a2c:	b110      	cbz	r0, 8002a34 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x8>
 8002a2e:	2802      	cmp	r0, #2
 8002a30:	d009      	beq.n	8002a46 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1a>
 8002a32:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 8002a34:	4b07      	ldr	r3, [pc, #28]	; (8002a54 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>)
 8002a36:	681a      	ldr	r2, [r3, #0]
 8002a38:	fab2 f282 	clz	r2, r2
 8002a3c:	0952      	lsrs	r2, r2, #5
 8002a3e:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 8002a40:	4805      	ldr	r0, [pc, #20]	; (8002a58 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2c>)
 8002a42:	f009 b983 	b.w	800bd4c <HAL_GPIO_WritePin>
 8002a46:	4b03      	ldr	r3, [pc, #12]	; (8002a54 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>)
 8002a48:	689a      	ldr	r2, [r3, #8]
 8002a4a:	fab2 f282 	clz	r2, r2
 8002a4e:	0952      	lsrs	r2, r2, #5
 8002a50:	2110      	movs	r1, #16
 8002a52:	e7f5      	b.n	8002a40 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x14>
 8002a54:	20000900 	.word	0x20000900
 8002a58:	40021000 	.word	0x40021000

08002a5c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 8002a5c:	b110      	cbz	r0, 8002a64 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x8>
 8002a5e:	2802      	cmp	r0, #2
 8002a60:	d009      	beq.n	8002a76 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1a>
 8002a62:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 8002a64:	4b07      	ldr	r3, [pc, #28]	; (8002a84 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>)
 8002a66:	681a      	ldr	r2, [r3, #0]
 8002a68:	3a00      	subs	r2, #0
 8002a6a:	bf18      	it	ne
 8002a6c:	2201      	movne	r2, #1
 8002a6e:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 8002a70:	4805      	ldr	r0, [pc, #20]	; (8002a88 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2c>)
 8002a72:	f009 b96b 	b.w	800bd4c <HAL_GPIO_WritePin>
 8002a76:	4b03      	ldr	r3, [pc, #12]	; (8002a84 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>)
 8002a78:	689a      	ldr	r2, [r3, #8]
 8002a7a:	3a00      	subs	r2, #0
 8002a7c:	bf18      	it	ne
 8002a7e:	2201      	movne	r2, #1
 8002a80:	2110      	movs	r1, #16
 8002a82:	e7f5      	b.n	8002a70 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x14>
 8002a84:	20000900 	.word	0x20000900
 8002a88:	40021000 	.word	0x40021000

08002a8c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 8002a8c:	b110      	cbz	r0, 8002a94 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x8>
 8002a8e:	2802      	cmp	r0, #2
 8002a90:	d004      	beq.n	8002a9c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x10>
 8002a92:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8002a94:	2104      	movs	r1, #4
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8002a96:	4802      	ldr	r0, [pc, #8]	; (8002aa0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x14>)
 8002a98:	f009 b95c 	b.w	800bd54 <HAL_GPIO_TogglePin>
 8002a9c:	2110      	movs	r1, #16
 8002a9e:	e7fa      	b.n	8002a96 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xa>
 8002aa0:	40021000 	.word	0x40021000

08002aa4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 8002aa4:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 8002aa6:	b130      	cbz	r0, 8002ab6 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x12>
 8002aa8:	2802      	cmp	r0, #2
 8002aaa:	d009      	beq.n	8002ac0 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x1c>
 8002aac:	2000      	movs	r0, #0
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 8002aae:	1e43      	subs	r3, r0, #1
 8002ab0:	4258      	negs	r0, r3
 8002ab2:	4158      	adcs	r0, r3
 8002ab4:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8002ab6:	2104      	movs	r1, #4
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8002ab8:	4802      	ldr	r0, [pc, #8]	; (8002ac4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x20>)
 8002aba:	f009 f941 	bl	800bd40 <HAL_GPIO_ReadPin>
        break;
 8002abe:	e7f6      	b.n	8002aae <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0xa>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8002ac0:	2110      	movs	r1, #16
 8002ac2:	e7f9      	b.n	8002ab8 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x14>
 8002ac4:	40021000 	.word	0x40021000

08002ac8 <_ZN8touchgfx4GPIO4initEv>:
{
 8002ac8:	b570      	push	{r4, r5, r6, lr}
 8002aca:	4d08      	ldr	r5, [pc, #32]	; (8002aec <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 8002acc:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 8002ace:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 8002ad0:	b2e0      	uxtb	r0, r4
 8002ad2:	f7ff ffe7 	bl	8002aa4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 8002ad6:	b118      	cbz	r0, 8002ae0 <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 8002ad8:	682b      	ldr	r3, [r5, #0]
 8002ada:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 8002adc:	bf18      	it	ne
 8002ade:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 8002ae0:	3401      	adds	r4, #1
 8002ae2:	2c05      	cmp	r4, #5
 8002ae4:	f105 0504 	add.w	r5, r5, #4
 8002ae8:	d1f2      	bne.n	8002ad0 <_ZN8touchgfx4GPIO4initEv+0x8>
}
 8002aea:	bd70      	pop	{r4, r5, r6, pc}
 8002aec:	20000900 	.word	0x20000900

08002af0 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8002af0:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8002af2:	f880 1078 	strb.w	r1, [r0, #120]	; 0x78
        displayOrientationChangeRequested = true;
 8002af6:	f880 3079 	strb.w	r3, [r0, #121]	; 0x79
    }
 8002afa:	4770      	bx	lr

08002afc <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 8002afc:	2000      	movs	r0, #0
 8002afe:	4770      	bx	lr

08002b00 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8002b00:	4b03      	ldr	r3, [pc, #12]	; (8002b10 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 8002b02:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8002b04:	3900      	subs	r1, #0
 8002b06:	bf18      	it	ne
 8002b08:	2101      	movne	r1, #1
 8002b0a:	7019      	strb	r1, [r3, #0]
    }
 8002b0c:	4770      	bx	lr
 8002b0e:	bf00      	nop
 8002b10:	2001384b 	.word	0x2001384b

08002b14 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8002b14:	2000      	movs	r0, #0
 8002b16:	4770      	bx	lr

08002b18 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8002b18:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8002b1a:	b10b      	cbz	r3, 8002b20 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8002b1c:	4608      	mov	r0, r1
 8002b1e:	4718      	bx	r3
        }
    }
 8002b20:	4770      	bx	lr

08002b22 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 8002b22:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8002b26:	4770      	bx	lr

08002b28 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8002b28:	6840      	ldr	r0, [r0, #4]
 8002b2a:	6803      	ldr	r3, [r0, #0]
 8002b2c:	699b      	ldr	r3, [r3, #24]
 8002b2e:	4718      	bx	r3

08002b30 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8002b30:	4770      	bx	lr

08002b32 <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 8002b32:	4770      	bx	lr

08002b34 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8002b34:	4770      	bx	lr
	...

08002b38 <_ZN11TouchGFXHAL10initializeEv>:
LOCATION_PRAGMA("TouchGFX_Framebuffer")
uint32_t animationStorage[(240 * 320 * 2 + 3) / 4] LOCATION_ATTRIBUTE("TouchGFX_Framebuffer");
}

void TouchGFXHAL::initialize()
{
 8002b38:	b510      	push	{r4, lr}
 8002b3a:	4604      	mov	r4, r0
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 8002b3c:	f000 fb4e 	bl	80031dc <_ZN20TouchGFXGeneratedHAL10initializeEv>

    // Add animation storage
    setAnimationStorage((void*)animationStorage);
 8002b40:	6823      	ldr	r3, [r4, #0]
 8002b42:	4903      	ldr	r1, [pc, #12]	; (8002b50 <_ZN11TouchGFXHAL10initializeEv+0x18>)
 8002b44:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8002b48:	4620      	mov	r0, r4
}
 8002b4a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    setAnimationStorage((void*)animationStorage);
 8002b4e:	4718      	bx	r3
 8002b50:	d0000000 	.word	0xd0000000

08002b54 <_ZN11TouchGFXHAL9taskEntryEv>:

void TouchGFXHAL::taskEntry()
{
 8002b54:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 8002b56:	6803      	ldr	r3, [r0, #0]
{
 8002b58:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 8002b5a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8002b5e:	4798      	blx	r3
    enableInterrupts();
 8002b60:	6823      	ldr	r3, [r4, #0]
 8002b62:	4620      	mov	r0, r4
 8002b64:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8002b66:	4798      	blx	r3

    OSWrappers::waitForVSync();
 8002b68:	f000 f8ec 	bl	8002d44 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 8002b6c:	6823      	ldr	r3, [r4, #0]
 8002b6e:	4620      	mov	r0, r4
 8002b70:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002b72:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 8002b74:	2029      	movs	r0, #41	; 0x29
 8002b76:	f7ff f923 	bl	8001dc0 <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 8002b7a:	f000 f8e3 	bl	8002d44 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 8002b7e:	6823      	ldr	r3, [r4, #0]
 8002b80:	4620      	mov	r0, r4
 8002b82:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002b84:	4798      	blx	r3
    for (;;)
 8002b86:	e7f8      	b.n	8002b7a <_ZN11TouchGFXHAL9taskEntryEv+0x26>

08002b88 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 8002b88:	b510      	push	{r4, lr}
 8002b8a:	4604      	mov	r4, r0
        swapFrameBuffers();
 8002b8c:	f011 fabe 	bl	801410c <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8002b90:	6823      	ldr	r3, [r4, #0]
 8002b92:	4620      	mov	r0, r4
 8002b94:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 8002b98:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 8002b9c:	4718      	bx	r3

08002b9e <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 8002b9e:	f000 bb0f 	b.w	80031c0 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

08002ba2 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 8002ba2:	f000 bb13 	b.w	80031cc <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

08002ba6 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 8002ba6:	f000 bb37 	b.w	8003218 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

08002baa <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 8002baa:	f000 badf 	b.w	800316c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

08002bae <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 8002bae:	f000 bae5 	b.w	800317c <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

08002bb2 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 8002bb2:	f000 bb3d 	b.w	8003230 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

08002bb6 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8002bb6:	f000 bae9 	b.w	800318c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

08002bba <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 8002bba:	f010 bd12 	b.w	80135e2 <_ZN8touchgfx3HAL16flushFrameBufferEv>

08002bbe <_ZN11TouchGFXHALD0Ev>:
 8002bbe:	b510      	push	{r4, lr}
 8002bc0:	217c      	movs	r1, #124	; 0x7c
 8002bc2:	4604      	mov	r4, r0
 8002bc4:	f029 ff91 	bl	802caea <_ZdlPvj>
 8002bc8:	4620      	mov	r0, r4
 8002bca:	bd10      	pop	{r4, pc}

08002bcc <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 8002bcc:	f890 307a 	ldrb.w	r3, [r0, #122]	; 0x7a
 8002bd0:	b11b      	cbz	r3, 8002bda <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 8002bd2:	6840      	ldr	r0, [r0, #4]
 8002bd4:	6803      	ldr	r3, [r0, #0]
 8002bd6:	681b      	ldr	r3, [r3, #0]
 8002bd8:	4718      	bx	r3
    }
 8002bda:	4618      	mov	r0, r3
 8002bdc:	4770      	bx	lr
	...

08002be0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 8002be0:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 8002be2:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 8002be6:	f890 4078 	ldrb.w	r4, [r0, #120]	; 0x78
            if (DISPLAY_ROTATION == rotate0)
 8002bea:	4b0c      	ldr	r3, [pc, #48]	; (8002c1c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 8002bec:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 8002bee:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 8002bf0:	d009      	beq.n	8002c06 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 8002bf2:	b93a      	cbnz	r2, 8002c04 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8002bf4:	4a0a      	ldr	r2, [pc, #40]	; (8002c20 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 8002bf6:	490b      	ldr	r1, [pc, #44]	; (8002c24 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8002bf8:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 8002bfa:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 8002bfc:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8002bfe:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 8002c00:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 8002c02:	701a      	strb	r2, [r3, #0]
    }
 8002c04:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8002c06:	2a00      	cmp	r2, #0
 8002c08:	d0fc      	beq.n	8002c04 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8002c0a:	4a05      	ldr	r2, [pc, #20]	; (8002c20 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 8002c0c:	4905      	ldr	r1, [pc, #20]	; (8002c24 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8002c0e:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 8002c10:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 8002c12:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8002c14:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 8002c16:	2200      	movs	r2, #0
 8002c18:	e7f3      	b.n	8002c02 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 8002c1a:	bf00      	nop
 8002c1c:	20013844 	.word	0x20013844
 8002c20:	20013840 	.word	0x20013840
 8002c24:	20013842 	.word	0x20013842

08002c28 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8002c28:	b570      	push	{r4, r5, r6, lr}
 8002c2a:	460d      	mov	r5, r1
 8002c2c:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 8002c2e:	b935      	cbnz	r5, 8002c3e <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 8002c30:	4b09      	ldr	r3, [pc, #36]	; (8002c58 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 8002c32:	4a0a      	ldr	r2, [pc, #40]	; (8002c5c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8002c34:	480a      	ldr	r0, [pc, #40]	; (8002c60 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 8002c36:	f240 21d2 	movw	r1, #722	; 0x2d2
 8002c3a:	f02a fe3d 	bl	802d8b8 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 8002c3e:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8002c42:	4b08      	ldr	r3, [pc, #32]	; (8002c64 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 8002c44:	3a00      	subs	r2, #0
 8002c46:	bf18      	it	ne
 8002c48:	2201      	movne	r2, #1
 8002c4a:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8002c4c:	6803      	ldr	r3, [r0, #0]
    }
 8002c4e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 8002c52:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8002c56:	4718      	bx	r3
 8002c58:	0802eaec 	.word	0x0802eaec
 8002c5c:	0802eb24 	.word	0x0802eb24
 8002c60:	0802eb72 	.word	0x0802eb72
 8002c64:	2001384a 	.word	0x2001384a

08002c68 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 8002c68:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 8002c6a:	4b09      	ldr	r3, [pc, #36]	; (8002c90 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 8002c6c:	881b      	ldrh	r3, [r3, #0]
 8002c6e:	428b      	cmp	r3, r1
 8002c70:	d803      	bhi.n	8002c7a <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 8002c72:	4b08      	ldr	r3, [pc, #32]	; (8002c94 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 8002c74:	881b      	ldrh	r3, [r3, #0]
 8002c76:	4293      	cmp	r3, r2
 8002c78:	d905      	bls.n	8002c86 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 8002c7a:	4b07      	ldr	r3, [pc, #28]	; (8002c98 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 8002c7c:	4a07      	ldr	r2, [pc, #28]	; (8002c9c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 8002c7e:	4808      	ldr	r0, [pc, #32]	; (8002ca0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 8002c80:	219e      	movs	r1, #158	; 0x9e
 8002c82:	f02a fe19 	bl	802d8b8 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 8002c86:	4b07      	ldr	r3, [pc, #28]	; (8002ca4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 8002c88:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 8002c8a:	4b07      	ldr	r3, [pc, #28]	; (8002ca8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 8002c8c:	801a      	strh	r2, [r3, #0]
    }
 8002c8e:	bd08      	pop	{r3, pc}
 8002c90:	20013840 	.word	0x20013840
 8002c94:	20013842 	.word	0x20013842
 8002c98:	0802ebb7 	.word	0x0802ebb7
 8002c9c:	0802ec1a 	.word	0x0802ec1a
 8002ca0:	0802eb72 	.word	0x0802eb72
 8002ca4:	20013846 	.word	0x20013846
 8002ca8:	20013848 	.word	0x20013848

08002cac <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8002cac:	2101      	movs	r1, #1
{
 8002cae:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8002cb0:	2200      	movs	r2, #0
 8002cb2:	4608      	mov	r0, r1
 8002cb4:	f00c fe2e 	bl	800f914 <osSemaphoreNew>
 8002cb8:	4b0a      	ldr	r3, [pc, #40]	; (8002ce4 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 8002cba:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8002cbc:	b928      	cbnz	r0, 8002cca <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 8002cbe:	4b0a      	ldr	r3, [pc, #40]	; (8002ce8 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8002cc0:	4a0a      	ldr	r2, [pc, #40]	; (8002cec <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8002cc2:	2128      	movs	r1, #40	; 0x28

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8002cc4:	480a      	ldr	r0, [pc, #40]	; (8002cf0 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8002cc6:	f02a fdf7 	bl	802d8b8 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8002cca:	2200      	movs	r2, #0
 8002ccc:	2104      	movs	r1, #4
 8002cce:	2001      	movs	r0, #1
 8002cd0:	f00c fed4 	bl	800fa7c <osMessageQueueNew>
 8002cd4:	4b07      	ldr	r3, [pc, #28]	; (8002cf4 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8002cd6:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8002cd8:	b918      	cbnz	r0, 8002ce2 <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8002cda:	4b07      	ldr	r3, [pc, #28]	; (8002cf8 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8002cdc:	4a03      	ldr	r2, [pc, #12]	; (8002cec <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8002cde:	212c      	movs	r1, #44	; 0x2c
 8002ce0:	e7f0      	b.n	8002cc4 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8002ce2:	bd08      	pop	{r3, pc}
 8002ce4:	20000914 	.word	0x20000914
 8002ce8:	0802ed38 	.word	0x0802ed38
 8002cec:	0802ed81 	.word	0x0802ed81
 8002cf0:	0802edb0 	.word	0x0802edb0
 8002cf4:	20000910 	.word	0x20000910
 8002cf8:	0802ee2a 	.word	0x0802ee2a

08002cfc <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8002cfc:	4b02      	ldr	r3, [pc, #8]	; (8002d08 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8002cfe:	f04f 31ff 	mov.w	r1, #4294967295
 8002d02:	6818      	ldr	r0, [r3, #0]
 8002d04:	f00c be5a 	b.w	800f9bc <osSemaphoreAcquire>
 8002d08:	20000914 	.word	0x20000914

08002d0c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8002d0c:	4b01      	ldr	r3, [pc, #4]	; (8002d14 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8002d0e:	6818      	ldr	r0, [r3, #0]
 8002d10:	f00c be88 	b.w	800fa24 <osSemaphoreRelease>
 8002d14:	20000914 	.word	0x20000914

08002d18 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8002d18:	4b02      	ldr	r3, [pc, #8]	; (8002d24 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8002d1a:	2100      	movs	r1, #0
 8002d1c:	6818      	ldr	r0, [r3, #0]
 8002d1e:	f00c be4d 	b.w	800f9bc <osSemaphoreAcquire>
 8002d22:	bf00      	nop
 8002d24:	20000914 	.word	0x20000914

08002d28 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8002d28:	f7ff bff0 	b.w	8002d0c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08002d2c <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8002d2c:	4803      	ldr	r0, [pc, #12]	; (8002d3c <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8002d2e:	4904      	ldr	r1, [pc, #16]	; (8002d40 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8002d30:	6800      	ldr	r0, [r0, #0]
 8002d32:	2300      	movs	r3, #0
 8002d34:	461a      	mov	r2, r3
 8002d36:	f00c bedb 	b.w	800faf0 <osMessageQueuePut>
 8002d3a:	bf00      	nop
 8002d3c:	20000910 	.word	0x20000910
 8002d40:	20000014 	.word	0x20000014

08002d44 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8002d44:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8002d46:	4c08      	ldr	r4, [pc, #32]	; (8002d68 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8002d48:	2300      	movs	r3, #0
 8002d4a:	461a      	mov	r2, r3
 8002d4c:	a901      	add	r1, sp, #4
 8002d4e:	6820      	ldr	r0, [r4, #0]
 8002d50:	f00c ff04 	bl	800fb5c <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8002d54:	6820      	ldr	r0, [r4, #0]
 8002d56:	f04f 33ff 	mov.w	r3, #4294967295
 8002d5a:	2200      	movs	r2, #0
 8002d5c:	a901      	add	r1, sp, #4
 8002d5e:	f00c fefd 	bl	800fb5c <osMessageQueueGet>
}
 8002d62:	b002      	add	sp, #8
 8002d64:	bd10      	pop	{r4, pc}
 8002d66:	bf00      	nop
 8002d68:	20000910 	.word	0x20000910

08002d6c <_ZN8touchgfx13DMA_Interface10initializeEv>:
    }

    /** Perform initialization. Does nothing in this base class. */
    virtual void initialize()
    {
    }
 8002d6c:	4770      	bx	lr

08002d6e <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType()
    {
        return DMA_TYPE_GENERIC;
    }
 8002d6e:	2000      	movs	r0, #0
 8002d70:	4770      	bx	lr

08002d72 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     * @brief Does nothing.
     */
    virtual void signalDMAInterrupt()
    {
    }
 8002d72:	4770      	bx	lr

08002d74 <_ZN8STM32DMA5flushEv>:
     * @brief Block until all DMA transfers are complete. Since this particular DMA does not do
     * anything, return immediately.
     */
    virtual void flush()
    {
    }
 8002d74:	4770      	bx	lr

08002d76 <_ZN8STM32DMA11getBlitCapsEv>:
}

touchgfx::BlitOperations STM32DMA::getBlitCaps()
{
    return static_cast<touchgfx::BlitOperations>(0);
}
 8002d76:	2000      	movs	r0, #0
 8002d78:	4770      	bx	lr

08002d7a <_ZN8STM32DMAD1Ev>:
class STM32DMA : public touchgfx::DMA_Interface
 8002d7a:	4770      	bx	lr

08002d7c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:

void STM32DMA::setupDataCopy(const touchgfx::BlitOp& blitOp)
{
 8002d7c:	b508      	push	{r3, lr}
    assert(0 && "DMA operation not supported");
 8002d7e:	4a03      	ldr	r2, [pc, #12]	; (8002d8c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x10>)
 8002d80:	4b03      	ldr	r3, [pc, #12]	; (8002d90 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14>)
 8002d82:	4804      	ldr	r0, [pc, #16]	; (8002d94 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18>)
 8002d84:	2122      	movs	r1, #34	; 0x22
 8002d86:	f02a fd97 	bl	802d8b8 <__assert_func>
 8002d8a:	bf00      	nop
 8002d8c:	0802ee8f 	.word	0x0802ee8f
 8002d90:	0802ee6c 	.word	0x0802ee6c
 8002d94:	0802eecd 	.word	0x0802eecd

08002d98 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
}

void STM32DMA::setupDataFill(const touchgfx::BlitOp& blitOp)
{
 8002d98:	b508      	push	{r3, lr}
    assert(0 && "DMA operation not supported");
 8002d9a:	4a03      	ldr	r2, [pc, #12]	; (8002da8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x10>)
 8002d9c:	4b03      	ldr	r3, [pc, #12]	; (8002dac <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x14>)
 8002d9e:	4804      	ldr	r0, [pc, #16]	; (8002db0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x18>)
 8002da0:	2127      	movs	r1, #39	; 0x27
 8002da2:	f02a fd89 	bl	802d8b8 <__assert_func>
 8002da6:	bf00      	nop
 8002da8:	0802ef45 	.word	0x0802ef45
 8002dac:	0802ee6c 	.word	0x0802ee6c
 8002db0:	0802eecd 	.word	0x0802eecd

08002db4 <_ZN8STM32DMAD0Ev>:
 8002db4:	b510      	push	{r4, lr}
 8002db6:	2144      	movs	r1, #68	; 0x44
 8002db8:	4604      	mov	r4, r0
 8002dba:	f029 fe96 	bl	802caea <_ZdlPvj>
 8002dbe:	4620      	mov	r0, r4
 8002dc0:	bd10      	pop	{r4, pc}
	...

08002dc4 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8002dc4:	b538      	push	{r3, r4, r5, lr}
 8002dc6:	4604      	mov	r4, r0
    : DMA_Interface(q), q(&b, 1)
 8002dc8:	4621      	mov	r1, r4
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8002dca:	2500      	movs	r5, #0
 8002dcc:	4b06      	ldr	r3, [pc, #24]	; (8002de8 <_ZN8STM32DMAC1Ev+0x24>)
 8002dce:	7225      	strb	r5, [r4, #8]
 8002dd0:	300c      	adds	r0, #12
 8002dd2:	6060      	str	r0, [r4, #4]
 8002dd4:	7265      	strb	r5, [r4, #9]
 8002dd6:	2201      	movs	r2, #1
 8002dd8:	f841 3b20 	str.w	r3, [r1], #32
 8002ddc:	f011 faee 	bl	80143bc <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 8002de0:	62e5      	str	r5, [r4, #44]	; 0x2c
}
 8002de2:	4620      	mov	r0, r4
 8002de4:	bd38      	pop	{r3, r4, r5, pc}
 8002de6:	bf00      	nop
 8002de8:	0802ef8c 	.word	0x0802ef8c

08002dec <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8002dec:	2001      	movs	r0, #1
 8002dee:	4770      	bx	lr

08002df0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8002df0:	2038      	movs	r0, #56	; 0x38
 8002df2:	4770      	bx	lr

08002df4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8002df4:	2338      	movs	r3, #56	; 0x38
 8002df6:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8002dfa:	3008      	adds	r0, #8
 8002dfc:	4770      	bx	lr

08002dfe <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8002dfe:	2338      	movs	r3, #56	; 0x38
 8002e00:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8002e04:	3008      	adds	r0, #8
 8002e06:	4770      	bx	lr

08002e08 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8002e08:	2001      	movs	r0, #1
 8002e0a:	4770      	bx	lr

08002e0c <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8002e0c:	f641 5004 	movw	r0, #7428	; 0x1d04
 8002e10:	4770      	bx	lr

08002e12 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8002e12:	f641 5304 	movw	r3, #7428	; 0x1d04
 8002e16:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8002e1a:	3008      	adds	r0, #8
 8002e1c:	4770      	bx	lr

08002e1e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8002e1e:	f641 5304 	movw	r3, #7428	; 0x1d04
 8002e22:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8002e26:	3008      	adds	r0, #8
 8002e28:	4770      	bx	lr

08002e2a <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8002e2a:	2001      	movs	r0, #1
 8002e2c:	4770      	bx	lr

08002e2e <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8002e2e:	2010      	movs	r0, #16
 8002e30:	4770      	bx	lr

08002e32 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8002e32:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8002e36:	3008      	adds	r0, #8
 8002e38:	4770      	bx	lr

08002e3a <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8002e3a:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8002e3e:	3008      	adds	r0, #8
 8002e40:	4770      	bx	lr

08002e42 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoMain_MenuScreenNoTransition();
 8002e42:	4608      	mov	r0, r1
 8002e44:	f002 bb6c 	b.w	8005520 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>

08002e48 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8002e48:	b510      	push	{r4, lr}
 8002e4a:	4b03      	ldr	r3, [pc, #12]	; (8002e58 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 8002e4c:	6003      	str	r3, [r0, #0]
 8002e4e:	4604      	mov	r4, r0
 8002e50:	f00f fadd 	bl	801240e <_ZN8touchgfx17AbstractPartitionD1Ev>
 8002e54:	4620      	mov	r0, r4
 8002e56:	bd10      	pop	{r4, pc}
 8002e58:	0802f044 	.word	0x0802f044

08002e5c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 8002e5c:	b510      	push	{r4, lr}
 8002e5e:	4604      	mov	r4, r0
 8002e60:	f7ff fff2 	bl	8002e48 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8002e64:	4620      	mov	r0, r4
 8002e66:	2140      	movs	r1, #64	; 0x40
 8002e68:	f029 fe3f 	bl	802caea <_ZdlPvj>
 8002e6c:	4620      	mov	r0, r4
 8002e6e:	bd10      	pop	{r4, pc}

08002e70 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8002e70:	b510      	push	{r4, lr}
 8002e72:	4b03      	ldr	r3, [pc, #12]	; (8002e80 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8002e74:	6003      	str	r3, [r0, #0]
 8002e76:	4604      	mov	r4, r0
 8002e78:	f00f fac9 	bl	801240e <_ZN8touchgfx17AbstractPartitionD1Ev>
 8002e7c:	4620      	mov	r0, r4
 8002e7e:	bd10      	pop	{r4, pc}
 8002e80:	0802f010 	.word	0x0802f010

08002e84 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8002e84:	b510      	push	{r4, lr}
 8002e86:	4604      	mov	r4, r0
 8002e88:	f7ff fff2 	bl	8002e70 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8002e8c:	4620      	mov	r0, r4
 8002e8e:	f641 510c 	movw	r1, #7436	; 0x1d0c
 8002e92:	f029 fe2a 	bl	802caea <_ZdlPvj>
 8002e96:	4620      	mov	r0, r4
 8002e98:	bd10      	pop	{r4, pc}
	...

08002e9c <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8002e9c:	b510      	push	{r4, lr}
 8002e9e:	4b03      	ldr	r3, [pc, #12]	; (8002eac <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8002ea0:	6003      	str	r3, [r0, #0]
 8002ea2:	4604      	mov	r4, r0
 8002ea4:	f00f fab3 	bl	801240e <_ZN8touchgfx17AbstractPartitionD1Ev>
 8002ea8:	4620      	mov	r0, r4
 8002eaa:	bd10      	pop	{r4, pc}
 8002eac:	0802efdc 	.word	0x0802efdc

08002eb0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8002eb0:	b510      	push	{r4, lr}
 8002eb2:	4604      	mov	r4, r0
 8002eb4:	f7ff fff2 	bl	8002e9c <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8002eb8:	4620      	mov	r0, r4
 8002eba:	2118      	movs	r1, #24
 8002ebc:	f029 fe15 	bl	802caea <_ZdlPvj>
 8002ec0:	4620      	mov	r0, r4
 8002ec2:	bd10      	pop	{r4, pc}

08002ec4 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8002ec4:	b510      	push	{r4, lr}
 8002ec6:	4b09      	ldr	r3, [pc, #36]	; (8002eec <_ZN12FrontendHeapD1Ev+0x28>)
 8002ec8:	6003      	str	r3, [r0, #0]
 8002eca:	4604      	mov	r4, r0
 8002ecc:	f500 50e9 	add.w	r0, r0, #7456	; 0x1d20
 8002ed0:	3018      	adds	r0, #24
 8002ed2:	f7ff ffb9 	bl	8002e48 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8002ed6:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8002eda:	f7ff ffc9 	bl	8002e70 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8002ede:	f104 0014 	add.w	r0, r4, #20
 8002ee2:	f7ff ffdb 	bl	8002e9c <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8002ee6:	4620      	mov	r0, r4
 8002ee8:	bd10      	pop	{r4, pc}
 8002eea:	bf00      	nop
 8002eec:	0802f078 	.word	0x0802f078

08002ef0 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8002ef0:	b508      	push	{r3, lr}
 8002ef2:	4802      	ldr	r0, [pc, #8]	; (8002efc <__tcf_0+0xc>)
 8002ef4:	f7ff ffe6 	bl	8002ec4 <_ZN12FrontendHeapD1Ev>
 8002ef8:	bd08      	pop	{r3, pc}
 8002efa:	bf00      	nop
 8002efc:	2000091c 	.word	0x2000091c

08002f00 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8002f00:	b510      	push	{r4, lr}
 8002f02:	4604      	mov	r4, r0
 8002f04:	f7ff ffde 	bl	8002ec4 <_ZN12FrontendHeapD1Ev>
 8002f08:	4620      	mov	r0, r4
 8002f0a:	f641 61dc 	movw	r1, #7900	; 0x1edc
 8002f0e:	f029 fdec 	bl	802caea <_ZdlPvj>
 8002f12:	4620      	mov	r0, r4
 8002f14:	bd10      	pop	{r4, pc}
	...

08002f18 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 8002f18:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8002f1c:	f000 fa5c 	bl	80033d8 <_ZN14BitmapDatabase11getInstanceEv>
 8002f20:	4605      	mov	r5, r0
 8002f22:	f000 fa5d 	bl	80033e0 <_ZN14BitmapDatabase15getInstanceSizeEv>
 8002f26:	2400      	movs	r4, #0
 8002f28:	4601      	mov	r1, r0
 8002f2a:	4623      	mov	r3, r4
 8002f2c:	4628      	mov	r0, r5
 8002f2e:	4622      	mov	r2, r4
 8002f30:	9400      	str	r4, [sp, #0]
 8002f32:	f019 f961 	bl	801c1f8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8002f36:	4b26      	ldr	r3, [pc, #152]	; (8002fd0 <touchgfx_init+0xb8>)
 8002f38:	4a26      	ldr	r2, [pc, #152]	; (8002fd4 <touchgfx_init+0xbc>)
        static FrontendHeap instance;
 8002f3a:	4d27      	ldr	r5, [pc, #156]	; (8002fd8 <touchgfx_init+0xc0>)
 8002f3c:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8002f3e:	4620      	mov	r0, r4
 8002f40:	f007 fb4e 	bl	800a5e0 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8002f44:	4825      	ldr	r0, [pc, #148]	; (8002fdc <touchgfx_init+0xc4>)
 8002f46:	f019 f8bf 	bl	801c0c8 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8002f4a:	682b      	ldr	r3, [r5, #0]
 8002f4c:	f3bf 8f5b 	dmb	ish
 8002f50:	07db      	lsls	r3, r3, #31
 8002f52:	d436      	bmi.n	8002fc2 <touchgfx_init+0xaa>
 8002f54:	4628      	mov	r0, r5
 8002f56:	f029 fdca 	bl	802caee <__cxa_guard_acquire>
 8002f5a:	b390      	cbz	r0, 8002fc2 <touchgfx_init+0xaa>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
 8002f5c:	4c20      	ldr	r4, [pc, #128]	; (8002fe0 <touchgfx_init+0xc8>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8002f5e:	4b21      	ldr	r3, [pc, #132]	; (8002fe4 <touchgfx_init+0xcc>)
          screenStorage(scr),
          transitionStorage(tra),
 8002f60:	4f21      	ldr	r7, [pc, #132]	; (8002fe8 <touchgfx_init+0xd0>)
 8002f62:	6023      	str	r3, [r4, #0]
          frontendApplication(app)
 8002f64:	f504 56ec 	add.w	r6, r4, #7552	; 0x1d80
        : presenterStorage(pres),
 8002f68:	f104 0014 	add.w	r0, r4, #20
          screenStorage(scr),
 8002f6c:	f104 082c 	add.w	r8, r4, #44	; 0x2c
        : presenterStorage(pres),
 8002f70:	6060      	str	r0, [r4, #4]
          screenStorage(scr),
 8002f72:	f8c4 8008 	str.w	r8, [r4, #8]
          transitionStorage(tra),
 8002f76:	60e7      	str	r7, [r4, #12]
          frontendApplication(app)
 8002f78:	6126      	str	r6, [r4, #16]
 8002f7a:	f00f fa49 	bl	8012410 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8002f7e:	4b1b      	ldr	r3, [pc, #108]	; (8002fec <touchgfx_init+0xd4>)
 8002f80:	6163      	str	r3, [r4, #20]
 8002f82:	4640      	mov	r0, r8
 8002f84:	f00f fa44 	bl	8012410 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8002f88:	4b19      	ldr	r3, [pc, #100]	; (8002ff0 <touchgfx_init+0xd8>)
 8002f8a:	62e3      	str	r3, [r4, #44]	; 0x2c
 8002f8c:	4638      	mov	r0, r7
 8002f8e:	f00f fa3f 	bl	8012410 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8002f92:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8002f96:	4a17      	ldr	r2, [pc, #92]	; (8002ff4 <touchgfx_init+0xdc>)
 8002f98:	f8c3 2d38 	str.w	r2, [r3, #3384]	; 0xd38
 8002f9c:	f603 5078 	addw	r0, r3, #3448	; 0xd78
 8002fa0:	f007 ff84 	bl	800aeac <_ZN5ModelC1Ev>
 8002fa4:	4622      	mov	r2, r4
 8002fa6:	f1a6 0108 	sub.w	r1, r6, #8
 8002faa:	4630      	mov	r0, r6
 8002fac:	f007 fc9e 	bl	800a8ec <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8002fb0:	4630      	mov	r0, r6
 8002fb2:	f002 fab5 	bl	8005520 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>
        static FrontendHeap instance;
 8002fb6:	4810      	ldr	r0, [pc, #64]	; (8002ff8 <touchgfx_init+0xe0>)
 8002fb8:	f02a fc9c 	bl	802d8f4 <atexit>
 8002fbc:	4628      	mov	r0, r5
 8002fbe:	f029 fda2 	bl	802cb06 <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8002fc2:	480e      	ldr	r0, [pc, #56]	; (8002ffc <touchgfx_init+0xe4>)
}
 8002fc4:	b002      	add	sp, #8
 8002fc6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8002fca:	f7ff bdb5 	b.w	8002b38 <_ZN11TouchGFXHAL10initializeEv>
 8002fce:	bf00      	nop
 8002fd0:	200138b0 	.word	0x200138b0
 8002fd4:	200028bc 	.word	0x200028bc
 8002fd8:	20000918 	.word	0x20000918
 8002fdc:	20000018 	.word	0x20000018
 8002fe0:	2000091c 	.word	0x2000091c
 8002fe4:	0802f078 	.word	0x0802f078
 8002fe8:	20002654 	.word	0x20002654
 8002fec:	0802efdc 	.word	0x0802efdc
 8002ff0:	0802f010 	.word	0x0802f010
 8002ff4:	0802f044 	.word	0x0802f044
 8002ff8:	08002ef1 	.word	0x08002ef1
 8002ffc:	20002840 	.word	0x20002840

08003000 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
 8003000:	4770      	bx	lr
	...

08003004 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8003004:	4801      	ldr	r0, [pc, #4]	; (800300c <touchgfx_taskEntry+0x8>)
 8003006:	f7ff bda5 	b.w	8002b54 <_ZN11TouchGFXHAL9taskEntryEv>
 800300a:	bf00      	nop
 800300c:	20002840 	.word	0x20002840

08003010 <_GLOBAL__sub_I_touchgfx_init>:
}
 8003010:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 8003012:	4e22      	ldr	r6, [pc, #136]	; (800309c <_GLOBAL__sub_I_touchgfx_init+0x8c>)
{
public:

    STM32TouchController() {}
 8003014:	4c22      	ldr	r4, [pc, #136]	; (80030a0 <_GLOBAL__sub_I_touchgfx_init+0x90>)
static LCD16bpp display;
 8003016:	4d23      	ldr	r5, [pc, #140]	; (80030a4 <_GLOBAL__sub_I_touchgfx_init+0x94>)
 8003018:	4b23      	ldr	r3, [pc, #140]	; (80030a8 <_GLOBAL__sub_I_touchgfx_init+0x98>)
 800301a:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 800301c:	4630      	mov	r0, r6
 800301e:	f7ff fed1 	bl	8002dc4 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8003022:	4628      	mov	r0, r5
 8003024:	f01d fbb4 	bl	8020790 <_ZN8touchgfx8LCD16bppC1Ev>
        : dma(dmaInterface),
 8003028:	4b20      	ldr	r3, [pc, #128]	; (80030ac <_GLOBAL__sub_I_touchgfx_init+0x9c>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 800302a:	4821      	ldr	r0, [pc, #132]	; (80030b0 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
          touchController(touchCtrl),
 800302c:	60dc      	str	r4, [r3, #12]
          mcuInstrumentation(0),
 800302e:	2200      	movs	r2, #0
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 8003030:	f44f 7180 	mov.w	r1, #256	; 0x100
          auxiliaryLCD(0),
 8003034:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
          touchSampleRate(1),
 8003038:	491e      	ldr	r1, [pc, #120]	; (80030b4 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 800303a:	861a      	strh	r2, [r3, #48]	; 0x30
          vSyncCompensationEnabled(false),
 800303c:	e9c3 121a 	strd	r1, r2, [r3, #104]	; 0x68
          requestedOrientation(ORIENTATION_LANDSCAPE),
 8003040:	491d      	ldr	r1, [pc, #116]	; (80030b8 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
 8003042:	6799      	str	r1, [r3, #120]	; 0x78
        instance = this;
 8003044:	491d      	ldr	r1, [pc, #116]	; (80030bc <_GLOBAL__sub_I_touchgfx_init+0xac>)
          useAuxiliaryLCD(false),
 8003046:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
        instance = this;
 800304a:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 800304c:	21f0      	movs	r1, #240	; 0xf0
 800304e:	8001      	strh	r1, [r0, #0]
 8003050:	481b      	ldr	r0, [pc, #108]	; (80030c0 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
          lastY(0),
 8003052:	665a      	str	r2, [r3, #100]	; 0x64
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8003054:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8003056:	481b      	ldr	r0, [pc, #108]	; (80030c4 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          updateMCULoad(0),
 8003058:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 800305c:	f44f 71a0 	mov.w	r1, #320	; 0x140
          buttonController(0),
 8003060:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8003064:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8003068:	e9c3 2208 	strd	r2, r2, [r3, #32]
 800306c:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
          frameBuffer0(0),
 8003070:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
          frameBuffer2(0),
 8003074:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 8003078:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
          lastX(0),
 800307c:	e9c3 2217 	strd	r2, r2, [r3, #92]	; 0x5c
          cc_begin(0),
 8003080:	675a      	str	r2, [r3, #116]	; 0x74
          lcdRef(display),
 8003082:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8003086:	8001      	strh	r1, [r0, #0]
 8003088:	480f      	ldr	r0, [pc, #60]	; (80030c8 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
 800308a:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 800308c:	490f      	ldr	r1, [pc, #60]	; (80030cc <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 800308e:	700a      	strb	r2, [r1, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8003090:	2201      	movs	r2, #1
 8003092:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 8003096:	4a0e      	ldr	r2, [pc, #56]	; (80030d0 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 8003098:	601a      	str	r2, [r3, #0]
}
 800309a:	bd70      	pop	{r4, r5, r6, pc}
 800309c:	200027fc 	.word	0x200027fc
 80030a0:	200027f8 	.word	0x200027f8
 80030a4:	200028c0 	.word	0x200028c0
 80030a8:	0802eadc 	.word	0x0802eadc
 80030ac:	20002840 	.word	0x20002840
 80030b0:	20013840 	.word	0x20013840
 80030b4:	01000001 	.word	0x01000001
 80030b8:	01010000 	.word	0x01010000
 80030bc:	2001384c 	.word	0x2001384c
 80030c0:	20013846 	.word	0x20013846
 80030c4:	20013842 	.word	0x20013842
 80030c8:	20013848 	.word	0x20013848
 80030cc:	20013844 	.word	0x20013844
 80030d0:	0802ec68 	.word	0x0802ec68

080030d4 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 80030d4:	2000      	movs	r0, #0
 80030d6:	4770      	bx	lr

080030d8 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 80030d8:	8081      	strh	r1, [r0, #4]
    }
 80030da:	4770      	bx	lr

080030dc <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 80030dc:	80c1      	strh	r1, [r0, #6]
    }
 80030de:	4770      	bx	lr

080030e0 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 80030e0:	8101      	strh	r1, [r0, #8]
    }
 80030e2:	4770      	bx	lr

080030e4 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 80030e4:	8141      	strh	r1, [r0, #10]
    }
 80030e6:	4770      	bx	lr

080030e8 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 80030e8:	4770      	bx	lr

080030ea <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 80030ea:	4770      	bx	lr

080030ec <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 80030ec:	4770      	bx	lr

080030ee <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 80030ee:	4770      	bx	lr

080030f0 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 80030f0:	4770      	bx	lr

080030f2 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 80030f2:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 80030f4:	88c4      	ldrh	r4, [r0, #6]
 80030f6:	6803      	ldr	r3, [r0, #0]
 80030f8:	1b12      	subs	r2, r2, r4
 80030fa:	8884      	ldrh	r4, [r0, #4]
 80030fc:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80030fe:	1b09      	subs	r1, r1, r4
 8003100:	b212      	sxth	r2, r2
    }
 8003102:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 8003106:	b209      	sxth	r1, r1
 8003108:	4718      	bx	r3

0800310a <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 800310a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800310e:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8003110:	f04f 33ff 	mov.w	r3, #4294967295
 8003114:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 8003116:	6813      	ldr	r3, [r2, #0]
 8003118:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 800311a:	6010      	str	r0, [r2, #0]
    }
 800311c:	4770      	bx	lr

0800311e <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 800311e:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8003122:	b11a      	cbz	r2, 800312c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 8003124:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 8003128:	b102      	cbz	r2, 800312c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 800312a:	6018      	str	r0, [r3, #0]
        }
    }
 800312c:	4770      	bx	lr

0800312e <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 800312e:	2000      	movs	r0, #0
 8003130:	4770      	bx	lr

08003132 <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 8003132:	888b      	ldrh	r3, [r1, #4]
 8003134:	8083      	strh	r3, [r0, #4]
        return true;
    }
 8003136:	2001      	movs	r0, #1
 8003138:	4770      	bx	lr

0800313a <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 800313a:	4770      	bx	lr

0800313c <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 800313c:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
    }
 8003140:	4770      	bx	lr

08003142 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 8003142:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
 8003146:	4770      	bx	lr

08003148 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 8003148:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 800314a:	2200      	movs	r2, #0
        return rect.width;
 800314c:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 8003150:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 8003154:	8002      	strh	r2, [r0, #0]
 8003156:	8042      	strh	r2, [r0, #2]
 8003158:	8084      	strh	r4, [r0, #4]
 800315a:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 800315c:	bd10      	pop	{r4, pc}

0800315e <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 800315e:	2200      	movs	r2, #0
 8003160:	8002      	strh	r2, [r0, #0]
 8003162:	8042      	strh	r2, [r0, #2]
 8003164:	8082      	strh	r2, [r0, #4]
 8003166:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8003168:	4770      	bx	lr
	...

0800316c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800316c:	4b02      	ldr	r3, [pc, #8]	; (8003178 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0xc>)
 800316e:	2290      	movs	r2, #144	; 0x90
 8003170:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358
}

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 8003174:	4770      	bx	lr
 8003176:	bf00      	nop
 8003178:	e000e100 	.word	0xe000e100

0800317c <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800317c:	4b02      	ldr	r3, [pc, #8]	; (8003188 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0xc>)
 800317e:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8003182:	609a      	str	r2, [r3, #8]

void TouchGFXGeneratedHAL::enableInterrupts()
{
    NVIC_EnableIRQ(LTDC_IRQn);
}
 8003184:	4770      	bx	lr
 8003186:	bf00      	nop
 8003188:	e000e100 	.word	0xe000e100

0800318c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 800318c:	4a09      	ldr	r2, [pc, #36]	; (80031b4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 800318e:	490a      	ldr	r1, [pc, #40]	; (80031b8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 8003190:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8003192:	480a      	ldr	r0, [pc, #40]	; (80031bc <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8003194:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8003198:	3b01      	subs	r3, #1
 800319a:	b29b      	uxth	r3, r3
 800319c:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 800319e:	6911      	ldr	r1, [r2, #16]
 80031a0:	f3c1 010a 	ubfx	r1, r1, #0, #11
 80031a4:	3901      	subs	r1, #1
 80031a6:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 80031a8:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 80031aa:	6b53      	ldr	r3, [r2, #52]	; 0x34
 80031ac:	f043 0301 	orr.w	r3, r3, #1
 80031b0:	6353      	str	r3, [r2, #52]	; 0x34
}
 80031b2:	4770      	bx	lr
 80031b4:	40016800 	.word	0x40016800
 80031b8:	20002946 	.word	0x20002946
 80031bc:	20002944 	.word	0x20002944

080031c0 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 80031c0:	4b01      	ldr	r3, [pc, #4]	; (80031c8 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 80031c2:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
 80031c6:	4770      	bx	lr
 80031c8:	40016800 	.word	0x40016800

080031cc <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 80031cc:	4b02      	ldr	r3, [pc, #8]	; (80031d8 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 80031ce:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 80031d0:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 80031d4:	625a      	str	r2, [r3, #36]	; 0x24
}
 80031d6:	4770      	bx	lr
 80031d8:	40016800 	.word	0x40016800

080031dc <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 80031dc:	b570      	push	{r4, r5, r6, lr}
 80031de:	4604      	mov	r4, r0
    HAL::initialize();
 80031e0:	f010 fa55 	bl	801368e <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 80031e4:	6823      	ldr	r3, [r4, #0]
 80031e6:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 80031e8:	f015 fbca 	bl	8018980 <_ZN8touchgfx11Application11getInstanceEv>
 80031ec:	4601      	mov	r1, r0
 80031ee:	4620      	mov	r0, r4
 80031f0:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 80031f2:	6823      	ldr	r3, [r4, #0]
 80031f4:	4a05      	ldr	r2, [pc, #20]	; (800320c <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 80031f6:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 80031fa:	4620      	mov	r0, r4
 80031fc:	46ac      	mov	ip, r5
 80031fe:	2300      	movs	r3, #0
}
 8003200:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8003204:	f5a2 3116 	sub.w	r1, r2, #153600	; 0x25800
 8003208:	4760      	bx	ip
 800320a:	bf00      	nop
 800320c:	d004b000 	.word	0xd004b000

08003210 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 8003210:	f010 ba24 	b.w	801365c <_ZN8touchgfx3HAL10beginFrameEv>

08003214 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
 8003214:	f010 ba2e 	b.w	8013674 <_ZN8touchgfx3HAL8endFrameEv>

08003218 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 8003218:	f010 b9e9 	b.w	80135ee <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

0800321c <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 800321c:	f010 bb4b 	b.w	80138b6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

08003220 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 8003220:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8003224:	b112      	cbz	r2, 800322c <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 8003226:	6803      	ldr	r3, [r0, #0]
 8003228:	695b      	ldr	r3, [r3, #20]
 800322a:	4718      	bx	r3
    }
 800322c:	4770      	bx	lr
	...

08003230 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8003230:	4b04      	ldr	r3, [pc, #16]	; (8003244 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x14>)
 8003232:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8003236:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 800323a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800323e:	f3bf 8f6f 	isb	sy
}
 8003242:	4770      	bx	lr
 8003244:	e000e100 	.word	0xe000e100

08003248 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 8003248:	b570      	push	{r4, r5, r6, lr}
        : widgetWidth(0)
 800324a:	2300      	movs	r3, #0
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 800324c:	4e12      	ldr	r6, [pc, #72]	; (8003298 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 800324e:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 8003250:	4b12      	ldr	r3, [pc, #72]	; (800329c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 8003252:	6003      	str	r3, [r0, #0]
 8003254:	6833      	ldr	r3, [r6, #0]
 8003256:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
    AbstractPainterRGB565()
 800325a:	4605      	mov	r5, r0
 800325c:	b10a      	cbz	r2, 8003262 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 800325e:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8003260:	b900      	cbnz	r0, 8003264 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 8003262:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 8003264:	6803      	ldr	r3, [r0, #0]
 8003266:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003268:	4798      	blx	r3
        return auxiliaryLCD;
 800326a:	6833      	ldr	r3, [r6, #0]
 800326c:	fab0 f480 	clz	r4, r0
 8003270:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8003272:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 8003274:	b130      	cbz	r0, 8003284 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 8003276:	6803      	ldr	r3, [r0, #0]
 8003278:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800327a:	4798      	blx	r3
 800327c:	2800      	cmp	r0, #0
 800327e:	bf08      	it	eq
 8003280:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 8003284:	b92c      	cbnz	r4, 8003292 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 8003286:	4b06      	ldr	r3, [pc, #24]	; (80032a0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 8003288:	4a06      	ldr	r2, [pc, #24]	; (80032a4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 800328a:	4807      	ldr	r0, [pc, #28]	; (80032a8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 800328c:	212c      	movs	r1, #44	; 0x2c
 800328e:	f02a fb13 	bl	802d8b8 <__assert_func>
    }
 8003292:	4628      	mov	r0, r5
 8003294:	bd70      	pop	{r4, r5, r6, pc}
 8003296:	bf00      	nop
 8003298:	2001384c 	.word	0x2001384c
 800329c:	0802f188 	.word	0x0802f188
 80032a0:	0802f084 	.word	0x0802f084
 80032a4:	0802f0e2 	.word	0x0802f0e2
 80032a8:	0802f11b 	.word	0x0802f11b

080032ac <_ZN8touchgfx5paint8tearDownEv>:
    blendL8CLUT = data;
}

void tearDown()
{
}
 80032ac:	4770      	bx	lr
	...

080032b0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
{
    return ((color >> 8) & 0xF800) | ((color >> 5) & 0x07E0) | ((color >> 3) & 0x001F);
}

void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
 80032b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    uint16_t* framebuffer = ptr;
    const uint16_t* const lineEnd = framebuffer + count;
    if (alpha == 0xFF)
 80032b4:	2bff      	cmp	r3, #255	; 0xff
    {
        do
        {
            *framebuffer = color565;
 80032b6:	f8bd 4018 	ldrh.w	r4, [sp, #24]
    const uint16_t* const lineEnd = framebuffer + count;
 80032ba:	eb00 0141 	add.w	r1, r0, r1, lsl #1
    if (alpha == 0xFF)
 80032be:	d105      	bne.n	80032cc <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x1c>
            *framebuffer = color565;
 80032c0:	f820 4b02 	strh.w	r4, [r0], #2
        } while (++framebuffer < lineEnd);
 80032c4:	4281      	cmp	r1, r0
 80032c6:	d8fb      	bhi.n	80032c0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x10>
        do
        {
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
        } while (++framebuffer < lineEnd);
    }
}
 80032c8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    return alphaBlend(newpix & RMASK, newpix & GMASK, newpix & BMASK, bufpix, alpha);
 80032cc:	4f17      	ldr	r7, [pc, #92]	; (800332c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x7c>)
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 80032ce:	f404 66fc 	and.w	r6, r4, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80032d2:	ea04 0c07 	and.w	ip, r4, r7
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 80032d6:	f004 041f 	and.w	r4, r4, #31
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80032da:	fb03 fc0c 	mul.w	ip, r3, ip
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 80032de:	435e      	muls	r6, r3
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 80032e0:	435c      	muls	r4, r3
    const uint8_t ialpha = 0xFF - alpha;
 80032e2:	43db      	mvns	r3, r3
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80032e4:	b2db      	uxtb	r3, r3
 80032e6:	25ff      	movs	r5, #255	; 0xff
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
 80032e8:	f8b0 e000 	ldrh.w	lr, [r0]
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80032ec:	ea0e 0207 	and.w	r2, lr, r7
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 80032f0:	f40e 68fc 	and.w	r8, lr, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80032f4:	fb03 c202 	mla	r2, r3, r2, ip
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 80032f8:	fb03 6808 	mla	r8, r3, r8, r6
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 80032fc:	f00e 0e1f 	and.w	lr, lr, #31
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8003300:	fbb2 f2f5 	udiv	r2, r2, r5
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8003304:	fbb8 f8f5 	udiv	r8, r8, r5
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8003308:	403a      	ands	r2, r7
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 800330a:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 800330e:	ea42 0208 	orr.w	r2, r2, r8
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 8003312:	fb03 4e0e 	mla	lr, r3, lr, r4
 8003316:	fbbe fef5 	udiv	lr, lr, r5
 800331a:	f00e 0e1f 	and.w	lr, lr, #31
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 800331e:	ea42 020e 	orr.w	r2, r2, lr
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
 8003322:	f820 2b02 	strh.w	r2, [r0], #2
        } while (++framebuffer < lineEnd);
 8003326:	4281      	cmp	r1, r0
 8003328:	d8de      	bhi.n	80032e8 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x38>
 800332a:	e7cd      	b.n	80032c8 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x18>
 800332c:	fffff800 	.word	0xfffff800

08003330 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 8003330:	b510      	push	{r4, lr}
        return instance;
 8003332:	4c14      	ldr	r4, [pc, #80]	; (8003384 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 8003334:	6823      	ldr	r3, [r4, #0]
 8003336:	b323      	cbz	r3, 8003382 <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 8003338:	4b13      	ldr	r3, [pc, #76]	; (8003388 <HAL_LTDC_LineEventCallback+0x58>)
 800333a:	4a14      	ldr	r2, [pc, #80]	; (800338c <HAL_LTDC_LineEventCallback+0x5c>)
 800333c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800333e:	8811      	ldrh	r1, [r2, #0]
 8003340:	428b      	cmp	r3, r1
 8003342:	d113      	bne.n	800336c <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 8003344:	4b12      	ldr	r3, [pc, #72]	; (8003390 <HAL_LTDC_LineEventCallback+0x60>)
 8003346:	8819      	ldrh	r1, [r3, #0]
 8003348:	f00a fb1c 	bl	800d984 <HAL_LTDC_ProgramLineEvent>
 800334c:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 800334e:	f892 306a 	ldrb.w	r3, [r2, #106]	; 0x6a
 8003352:	3301      	adds	r3, #1
 8003354:	f882 306a 	strb.w	r3, [r2, #106]	; 0x6a
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 8003358:	f7ff fce8 	bl	8002d2c <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 800335c:	6820      	ldr	r0, [r4, #0]
 800335e:	f010 fed5 	bl	801410c <_ZN8touchgfx3HAL16swapFrameBuffersEv>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8003362:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 8003366:	2000      	movs	r0, #0
 8003368:	f7ff bb60 	b.w	8002a2c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 800336c:	f00a fb0a 	bl	800d984 <HAL_LTDC_ProgramLineEvent>
        return instance;
 8003370:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 8003372:	6803      	ldr	r3, [r0, #0]
 8003374:	6a1b      	ldr	r3, [r3, #32]
 8003376:	4798      	blx	r3
    }
 8003378:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 800337c:	2000      	movs	r0, #0
 800337e:	f7ff bb6d 	b.w	8002a5c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 8003382:	bd10      	pop	{r4, pc}
 8003384:	2001384c 	.word	0x2001384c
 8003388:	40016800 	.word	0x40016800
 800338c:	20002946 	.word	0x20002946
 8003390:	20002944 	.word	0x20002944

08003394 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId SMALL = 2;     // verdana_10_4bpp
    static const touchgfx::FontId NORMAL_12 = 3; // verdana_12_4bpp
    static const uint16_t NUMBER_OF_FONTS = 4;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8003394:	4770      	bx	lr

08003396 <_ZN23ApplicationFontProviderD0Ev>:
 8003396:	b510      	push	{r4, lr}
 8003398:	2104      	movs	r1, #4
 800339a:	4604      	mov	r4, r0
 800339c:	f029 fba5 	bl	802caea <_ZdlPvj>
 80033a0:	4620      	mov	r0, r4
 80033a2:	bd10      	pop	{r4, pc}

080033a4 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 80033a4:	b508      	push	{r3, lr}
    switch (typography)
 80033a6:	2903      	cmp	r1, #3
 80033a8:	d813      	bhi.n	80033d2 <_ZN23ApplicationFontProvider7getFontEt+0x2e>
 80033aa:	e8df f001 	tbb	[pc, r1]
 80033ae:	0602      	.short	0x0602
 80033b0:	0e0a      	.short	0x0e0a
    {
    case Typography::DEFAULT:
        // verdana_19_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 80033b2:	f007 f961 	bl	800a678 <_ZN17TypedTextDatabase8getFontsEv>
 80033b6:	6800      	ldr	r0, [r0, #0]
        // verdana_12_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
    default:
        return 0;
    }
}
 80033b8:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 80033ba:	f007 f95d 	bl	800a678 <_ZN17TypedTextDatabase8getFontsEv>
 80033be:	6840      	ldr	r0, [r0, #4]
 80033c0:	e7fa      	b.n	80033b8 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 80033c2:	f007 f959 	bl	800a678 <_ZN17TypedTextDatabase8getFontsEv>
 80033c6:	6880      	ldr	r0, [r0, #8]
 80033c8:	e7f6      	b.n	80033b8 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
 80033ca:	f007 f955 	bl	800a678 <_ZN17TypedTextDatabase8getFontsEv>
 80033ce:	68c0      	ldr	r0, [r0, #12]
 80033d0:	e7f2      	b.n	80033b8 <_ZN23ApplicationFontProvider7getFontEt+0x14>
    switch (typography)
 80033d2:	2000      	movs	r0, #0
 80033d4:	e7f0      	b.n	80033b8 <_ZN23ApplicationFontProvider7getFontEt+0x14>
	...

080033d8 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 80033d8:	4800      	ldr	r0, [pc, #0]	; (80033dc <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 80033da:	4770      	bx	lr
 80033dc:	0802f1b4 	.word	0x0802f1b4

080033e0 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 80033e0:	200c      	movs	r0, #12
 80033e2:	4770      	bx	lr

080033e4 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 80033e4:	b513      	push	{r0, r1, r4, lr}
 80033e6:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 80033e8:	b151      	cbz	r1, 8003400 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 80033ea:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 80033ec:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 80033ee:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 80033f2:	aa01      	add	r2, sp, #4
 80033f4:	689c      	ldr	r4, [r3, #8]
 80033f6:	f10d 0303 	add.w	r3, sp, #3
 80033fa:	47a0      	blx	r4
        return glyph;
    }
 80033fc:	b002      	add	sp, #8
 80033fe:	bd10      	pop	{r4, pc}
            return 0;
 8003400:	4608      	mov	r0, r1
 8003402:	e7fb      	b.n	80033fc <_ZNK8touchgfx4Font8getGlyphEt+0x18>

08003404 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8003404:	89c0      	ldrh	r0, [r0, #14]
 8003406:	4770      	bx	lr

08003408 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8003408:	8a00      	ldrh	r0, [r0, #16]
 800340a:	4770      	bx	lr

0800340c <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 800340c:	88c0      	ldrh	r0, [r0, #6]
 800340e:	4770      	bx	lr

08003410 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 8003410:	8880      	ldrh	r0, [r0, #4]
 8003412:	4770      	bx	lr

08003414 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8003414:	7a80      	ldrb	r0, [r0, #10]
    }
 8003416:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 800341a:	4770      	bx	lr

0800341c <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 800341c:	7a80      	ldrb	r0, [r0, #10]
    }
 800341e:	09c0      	lsrs	r0, r0, #7
 8003420:	4770      	bx	lr

08003422 <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 8003422:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8003424:	4770      	bx	lr

08003426 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 8003426:	4770      	bx	lr

08003428 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 8003428:	4770      	bx	lr

0800342a <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 800342a:	4770      	bx	lr

0800342c <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 800342c:	4770      	bx	lr

0800342e <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 800342e:	4770      	bx	lr

08003430 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 8003430:	4770      	bx	lr

08003432 <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 8003432:	b530      	push	{r4, r5, lr}
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 8003434:	6803      	ldr	r3, [r0, #0]
        rect.width = width;
 8003436:	8101      	strh	r1, [r0, #8]
    virtual void setWidth(int16_t width)
 8003438:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 800343a:	466d      	mov	r5, sp
 800343c:	4601      	mov	r1, r0
 800343e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setWidth(int16_t width)
 8003442:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8003444:	4628      	mov	r0, r5
 8003446:	4798      	blx	r3
 8003448:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800344c:	343c      	adds	r4, #60	; 0x3c
 800344e:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 8003452:	b005      	add	sp, #20
 8003454:	bd30      	pop	{r4, r5, pc}

08003456 <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 8003456:	b530      	push	{r4, r5, lr}
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 8003458:	6803      	ldr	r3, [r0, #0]
        rect.height = height;
 800345a:	8141      	strh	r1, [r0, #10]
    virtual void setHeight(int16_t height)
 800345c:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 800345e:	466d      	mov	r5, sp
 8003460:	4601      	mov	r1, r0
 8003462:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setHeight(int16_t height)
 8003466:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8003468:	4628      	mov	r0, r5
 800346a:	4798      	blx	r3
 800346c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003470:	343c      	adds	r4, #60	; 0x3c
 8003472:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 8003476:	b005      	add	sp, #20
 8003478:	bd30      	pop	{r4, r5, pc}

0800347a <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 800347a:	2200      	movs	r2, #0
 800347c:	8002      	strh	r2, [r0, #0]
 800347e:	8042      	strh	r2, [r0, #2]
 8003480:	8082      	strh	r2, [r0, #4]
 8003482:	80c2      	strh	r2, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8003484:	4770      	bx	lr

08003486 <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8003486:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
 800348a:	4770      	bx	lr

0800348c <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 800348c:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 800348e:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8003490:	4604      	mov	r4, r0
        setX(x);
 8003492:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8003494:	4615      	mov	r5, r2
        setX(x);
 8003496:	4798      	blx	r3
        setBaselineY(baselineY);
 8003498:	6823      	ldr	r3, [r4, #0]
 800349a:	4629      	mov	r1, r5
 800349c:	4620      	mov	r0, r4
 800349e:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    }
 80034a0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 80034a4:	4718      	bx	r3

080034a6 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 80034a6:	2000      	movs	r0, #0
 80034a8:	4770      	bx	lr

080034aa <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 80034aa:	6c80      	ldr	r0, [r0, #72]	; 0x48
 80034ac:	4770      	bx	lr

080034ae <_ZN23Calibration_PadViewBase17Load_FLASH_ValuesEv>:
     * Virtual Action Handlers
     */
    virtual void Load_FLASH_Values()
    {
        // Override and implement this function in Calibration_Pad
    }
 80034ae:	4770      	bx	lr

080034b0 <_ZN23Calibration_PadViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Calibration_PadViewBase::setupScreen()
{
    transitionBegins();
 80034b0:	6803      	ldr	r3, [r0, #0]
 80034b2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80034b4:	4718      	bx	r3

080034b6 <_ZN23Calibration_PadViewBase16transitionBeginsEv>:
void Calibration_PadViewBase::transitionBegins()
{
    //Interaction2
    //When screen transition begins call virtual function
    //Call Load_FLASH_Values
    Load_FLASH_Values();
 80034b6:	6803      	ldr	r3, [r0, #0]
 80034b8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80034ba:	4718      	bx	r3

080034bc <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type, typename T1>
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80034bc:	4770      	bx	lr

080034be <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 80034be:	4770      	bx	lr

080034c0 <_ZN8touchgfx14SwipeContainer13PageIndicatorD1Ev>:
    void animateSwipeCancelledLeft();
    void animateSwipeCancelledRight();
    void animateLeft();
    void animateRight();

    class PageIndicator : public Container
 80034c0:	4770      	bx	lr

080034c2 <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
     *
     * @param  t1 This value will be passed as the first argument in the function call.
     *
     * @see isValid
     */
    virtual void execute(T1 t1)
 80034c2:	b430      	push	{r4, r5}
    {
        (pobject->*pmemfun)(t1);
 80034c4:	68c2      	ldr	r2, [r0, #12]
 80034c6:	6844      	ldr	r4, [r0, #4]
 80034c8:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80034ca:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80034cc:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80034d0:	07d2      	lsls	r2, r2, #31
 80034d2:	bf48      	it	mi
 80034d4:	5962      	ldrmi	r2, [r4, r5]
 80034d6:	689b      	ldr	r3, [r3, #8]
    }
 80034d8:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80034da:	bf48      	it	mi
 80034dc:	58d3      	ldrmi	r3, [r2, r3]
 80034de:	4718      	bx	r3

080034e0 <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
     *
     * @return true if valid, false if not.
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 80034e0:	6843      	ldr	r3, [r0, #4]
 80034e2:	b12b      	cbz	r3, 80034f0 <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80034e4:	6883      	ldr	r3, [r0, #8]
 80034e6:	b92b      	cbnz	r3, 80034f4 <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80034e8:	68c0      	ldr	r0, [r0, #12]
 80034ea:	f000 0001 	and.w	r0, r0, #1
 80034ee:	4770      	bx	lr
 80034f0:	4618      	mov	r0, r3
 80034f2:	4770      	bx	lr
 80034f4:	2001      	movs	r0, #1
    }
 80034f6:	4770      	bx	lr

080034f8 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 80034f8:	b510      	push	{r4, lr}
    }
 80034fa:	2108      	movs	r1, #8
    virtual ~TypedText()
 80034fc:	4604      	mov	r4, r0
    }
 80034fe:	f029 faf4 	bl	802caea <_ZdlPvj>
 8003502:	4620      	mov	r0, r4
 8003504:	bd10      	pop	{r4, pc}

08003506 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 8003506:	b510      	push	{r4, lr}
 8003508:	214c      	movs	r1, #76	; 0x4c
 800350a:	4604      	mov	r4, r0
 800350c:	f029 faed 	bl	802caea <_ZdlPvj>
 8003510:	4620      	mov	r0, r4
 8003512:	bd10      	pop	{r4, pc}

08003514 <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003514:	b510      	push	{r4, lr}
 8003516:	2110      	movs	r1, #16
 8003518:	4604      	mov	r4, r0
 800351a:	f029 fae6 	bl	802caea <_ZdlPvj>
 800351e:	4620      	mov	r0, r4
 8003520:	bd10      	pop	{r4, pc}

08003522 <_ZN8touchgfx14SwipeContainer13PageIndicatorD0Ev>:
 8003522:	b510      	push	{r4, lr}
 8003524:	218c      	movs	r1, #140	; 0x8c
 8003526:	4604      	mov	r4, r0
 8003528:	f029 fadf 	bl	802caea <_ZdlPvj>
 800352c:	4620      	mov	r0, r4
 800352e:	bd10      	pop	{r4, pc}

08003530 <_ZN23Calibration_PadViewBaseD1Ev>:
Calibration_PadViewBase::~Calibration_PadViewBase()
 8003530:	b538      	push	{r3, r4, r5, lr}
 8003532:	4605      	mov	r5, r0
 8003534:	4b05      	ldr	r3, [pc, #20]	; (800354c <_ZN23Calibration_PadViewBaseD1Ev+0x1c>)
 8003536:	f845 3be0 	str.w	r3, [r5], #224
 800353a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800353c:	f013 fd1e 	bl	8016f7c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
Calibration_PadViewBase::~Calibration_PadViewBase()
 8003540:	4628      	mov	r0, r5
 8003542:	f00f fbd3 	bl	8012cec <_ZN8touchgfx14SwipeContainerD1Ev>
}
 8003546:	4620      	mov	r0, r4
 8003548:	bd38      	pop	{r3, r4, r5, pc}
 800354a:	bf00      	nop
 800354c:	0802f59c 	.word	0x0802f59c

08003550 <_ZN23Calibration_PadViewBaseD0Ev>:
Calibration_PadViewBase::~Calibration_PadViewBase()
 8003550:	b510      	push	{r4, lr}
 8003552:	4604      	mov	r4, r0
}
 8003554:	f7ff ffec 	bl	8003530 <_ZN23Calibration_PadViewBaseD1Ev>
 8003558:	4620      	mov	r0, r4
 800355a:	f641 5104 	movw	r1, #7428	; 0x1d04
 800355e:	f029 fac4 	bl	802caea <_ZdlPvj>
 8003562:	4620      	mov	r0, r4
 8003564:	bd10      	pop	{r4, pc}

08003566 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
    virtual void invalidateContent() const
 8003566:	b508      	push	{r3, lr}
        Widget::invalidateContent();
 8003568:	f7ff fe5a 	bl	8003220 <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 800356c:	bd08      	pop	{r3, pc}
	...

08003570 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8003570:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 8003572:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8003574:	6b5e      	ldr	r6, [r3, #52]	; 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003576:	4b12      	ldr	r3, [pc, #72]	; (80035c0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 8003578:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 800357a:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getBaseline());
 800357c:	b28d      	uxth	r5, r1
 800357e:	b92b      	cbnz	r3, 800358c <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 8003580:	4b10      	ldr	r3, [pc, #64]	; (80035c4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 8003582:	4a11      	ldr	r2, [pc, #68]	; (80035c8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8003584:	216c      	movs	r1, #108	; 0x6c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003586:	4811      	ldr	r0, [pc, #68]	; (80035cc <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 8003588:	f02a f996 	bl	802d8b8 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 800358c:	4910      	ldr	r1, [pc, #64]	; (80035d0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 800358e:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003590:	8809      	ldrh	r1, [r1, #0]
 8003592:	4291      	cmp	r1, r2
 8003594:	d803      	bhi.n	800359e <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 8003596:	4b0f      	ldr	r3, [pc, #60]	; (80035d4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 8003598:	4a0b      	ldr	r2, [pc, #44]	; (80035c8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 800359a:	216d      	movs	r1, #109	; 0x6d
 800359c:	e7f3      	b.n	8003586 <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 800359e:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 80035a2:	4b0d      	ldr	r3, [pc, #52]	; (80035d8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 80035a4:	681b      	ldr	r3, [r3, #0]
 80035a6:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 80035aa:	6803      	ldr	r3, [r0, #0]
 80035ac:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80035ae:	4798      	blx	r3
 80035b0:	1a28      	subs	r0, r5, r0
 80035b2:	b201      	sxth	r1, r0
 80035b4:	4633      	mov	r3, r6
 80035b6:	4620      	mov	r0, r4
    }
 80035b8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80035bc:	4718      	bx	r3
 80035be:	bf00      	nop
 80035c0:	200138a4 	.word	0x200138a4
 80035c4:	0802f2a4 	.word	0x0802f2a4
 80035c8:	0802f2e6 	.word	0x0802f2e6
 80035cc:	0802f321 	.word	0x0802f321
 80035d0:	200138a8 	.word	0x200138a8
 80035d4:	0802f368 	.word	0x0802f368
 80035d8:	200138ac 	.word	0x200138ac

080035dc <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 80035dc:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 80035de:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 80035e0:	4604      	mov	r4, r0
        setX(x);
 80035e2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 80035e4:	4615      	mov	r5, r2
        setX(x);
 80035e6:	4798      	blx	r3
        setY(y);
 80035e8:	6823      	ldr	r3, [r4, #0]
 80035ea:	4629      	mov	r1, r5
 80035ec:	4620      	mov	r0, r4
 80035ee:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 80035f0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 80035f4:	4718      	bx	r3

080035f6 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 80035f6:	b570      	push	{r4, r5, r6, lr}
 80035f8:	4604      	mov	r4, r0
 80035fa:	461d      	mov	r5, r3
 80035fc:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 8003600:	f7ff ffec 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8003604:	6823      	ldr	r3, [r4, #0]
 8003606:	4629      	mov	r1, r5
 8003608:	4620      	mov	r0, r4
 800360a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800360c:	4798      	blx	r3
        setHeight(height);
 800360e:	6823      	ldr	r3, [r4, #0]
 8003610:	4631      	mov	r1, r6
 8003612:	4620      	mov	r0, r4
 8003614:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 8003616:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 800361a:	4718      	bx	r3

0800361c <_ZN8touchgfx9ContainerC1Ev>:
          touchable(false),
 800361c:	f44f 7180 	mov.w	r1, #256	; 0x100
 8003620:	2200      	movs	r2, #0
 8003622:	8481      	strh	r1, [r0, #36]	; 0x24
          firstChild(0)
 8003624:	4905      	ldr	r1, [pc, #20]	; (800363c <_ZN8touchgfx9ContainerC1Ev+0x20>)
 8003626:	6001      	str	r1, [r0, #0]
 8003628:	e9c0 2201 	strd	r2, r2, [r0, #4]
 800362c:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 8003630:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 8003634:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8003638:	6282      	str	r2, [r0, #40]	; 0x28
    }
 800363a:	4770      	bx	lr
 800363c:	080314c0 	.word	0x080314c0

08003640 <_ZN8touchgfx6WidgetC1Ev>:
 8003640:	2200      	movs	r2, #0
 8003642:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8003646:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 800364a:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 800364e:	e9c0 2207 	strd	r2, r2, [r0, #28]
          touchable(false),
 8003652:	f44f 7280 	mov.w	r2, #256	; 0x100
 8003656:	8482      	strh	r2, [r0, #36]	; 0x24
class Widget : public Drawable
 8003658:	4a01      	ldr	r2, [pc, #4]	; (8003660 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 800365a:	6002      	str	r2, [r0, #0]
 800365c:	4770      	bx	lr
 800365e:	bf00      	nop
 8003660:	0802f3ec 	.word	0x0802f3ec

08003664 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
        return typedTextId < numberOfTypedTexts;
 8003664:	4b1a      	ldr	r3, [pc, #104]	; (80036d0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x6c>)
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 8003666:	b573      	push	{r0, r1, r4, r5, r6, lr}
    {
        if (typedText.hasValidId())
 8003668:	881b      	ldrh	r3, [r3, #0]
 800366a:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 800366c:	428b      	cmp	r3, r1
    void updateTextPosition()
 800366e:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 8003670:	d92b      	bls.n	80036ca <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x66>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003672:	4b18      	ldr	r3, [pc, #96]	; (80036d4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x70>)
 8003674:	681b      	ldr	r3, [r3, #0]
 8003676:	b92b      	cbnz	r3, 8003684 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 8003678:	4b17      	ldr	r3, [pc, #92]	; (80036d8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>)
 800367a:	4a18      	ldr	r2, [pc, #96]	; (80036dc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x78>)
 800367c:	4818      	ldr	r0, [pc, #96]	; (80036e0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 800367e:	216c      	movs	r1, #108	; 0x6c
 8003680:	f02a f91a 	bl	802d8b8 <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 8003684:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8003688:	4b16      	ldr	r3, [pc, #88]	; (80036e4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 800368a:	681b      	ldr	r3, [r3, #0]
 800368c:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 8003690:	4b15      	ldr	r3, [pc, #84]	; (80036e8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x84>)
 8003692:	6818      	ldr	r0, [r3, #0]
 8003694:	f006 ffe0 	bl	800a658 <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8003698:	682b      	ldr	r3, [r5, #0]
 800369a:	9001      	str	r0, [sp, #4]
 800369c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800369e:	4628      	mov	r0, r5
 80036a0:	4798      	blx	r3
 80036a2:	682b      	ldr	r3, [r5, #0]
 80036a4:	9901      	ldr	r1, [sp, #4]
 80036a6:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80036a8:	4604      	mov	r4, r0
 80036aa:	4628      	mov	r0, r5
 80036ac:	4798      	blx	r3
 80036ae:	682b      	ldr	r3, [r5, #0]
 80036b0:	9901      	ldr	r1, [sp, #4]
 80036b2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80036b4:	fb14 f400 	smulbb	r4, r4, r0
 80036b8:	4628      	mov	r0, r5
 80036ba:	4798      	blx	r3
 80036bc:	b2a4      	uxth	r4, r4
 80036be:	1823      	adds	r3, r4, r0
 80036c0:	b21b      	sxth	r3, r3
 80036c2:	f8a6 3046 	strh.w	r3, [r6, #70]	; 0x46
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 80036c6:	b002      	add	sp, #8
 80036c8:	bd70      	pop	{r4, r5, r6, pc}
 80036ca:	2300      	movs	r3, #0
 80036cc:	e7f9      	b.n	80036c2 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x5e>
 80036ce:	bf00      	nop
 80036d0:	200138a8 	.word	0x200138a8
 80036d4:	200138a4 	.word	0x200138a4
 80036d8:	0802f2a4 	.word	0x0802f2a4
 80036dc:	0802f2e6 	.word	0x0802f2e6
 80036e0:	0802f321 	.word	0x0802f321
 80036e4:	200138ac 	.word	0x200138ac
 80036e8:	200138b0 	.word	0x200138b0

080036ec <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>:
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80036ec:	2200      	movs	r2, #0
 80036ee:	f04f 31ff 	mov.w	r1, #4294967295
 80036f2:	e9c0 2100 	strd	r2, r1, [r0]
        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
              text(0)
 80036f6:	6082      	str	r2, [r0, #8]
        {
        }
 80036f8:	4770      	bx	lr

080036fa <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:
    virtual TextArea::BoundingArea calculateBoundingArea() const
 80036fa:	b510      	push	{r4, lr}
 80036fc:	4604      	mov	r4, r0
        return TextArea::BoundingArea();
 80036fe:	f7ff fff5 	bl	80036ec <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
    }
 8003702:	4620      	mov	r0, r4
 8003704:	bd10      	pop	{r4, pc}
	...

08003708 <_ZN8touchgfx8TextAreaC1Ev>:
    TextArea()
 8003708:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 800370a:	2100      	movs	r1, #0
    TextArea()
 800370c:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 800370e:	2226      	movs	r2, #38	; 0x26
 8003710:	f02a fad7 	bl	802dcc2 <memset>
 8003714:	4620      	mov	r0, r4
 8003716:	f7ff ff93 	bl	8003640 <_ZN8touchgfx6WidgetC1Ev>
 800371a:	4b09      	ldr	r3, [pc, #36]	; (8003740 <_ZN8touchgfx8TextAreaC1Ev+0x38>)
 800371c:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 800371e:	4b09      	ldr	r3, [pc, #36]	; (8003744 <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 8003720:	62a3      	str	r3, [r4, #40]	; 0x28
 8003722:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8003726:	85a3      	strh	r3, [r4, #44]	; 0x2c
 8003728:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 800372c:	2300      	movs	r3, #0
 800372e:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
 8003732:	8723      	strh	r3, [r4, #56]	; 0x38
 8003734:	f104 003c 	add.w	r0, r4, #60	; 0x3c
 8003738:	f7ff ffd8 	bl	80036ec <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
    }
 800373c:	4620      	mov	r0, r4
 800373e:	bd10      	pop	{r4, pc}
 8003740:	08031918 	.word	0x08031918
 8003744:	0802f454 	.word	0x0802f454

08003748 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>:
    TextAreaWithOneWildcard()
 8003748:	b510      	push	{r4, lr}
 800374a:	4604      	mov	r4, r0
        : TextArea()
 800374c:	f7ff ffdc 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8003750:	4b02      	ldr	r3, [pc, #8]	; (800375c <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x14>)
 8003752:	6023      	str	r3, [r4, #0]
 8003754:	2300      	movs	r3, #0
 8003756:	64a3      	str	r3, [r4, #72]	; 0x48
    }
 8003758:	4620      	mov	r0, r4
 800375a:	bd10      	pop	{r4, pc}
 800375c:	0802f4f4 	.word	0x0802f4f4

08003760 <_ZN8touchgfx8DrawableC1ERKS0_>:
class Drawable
 8003760:	b510      	push	{r4, lr}
 8003762:	4604      	mov	r4, r0
 8003764:	460b      	mov	r3, r1
 8003766:	490d      	ldr	r1, [pc, #52]	; (800379c <_ZN8touchgfx8DrawableC1ERKS0_+0x3c>)
 8003768:	f844 1b04 	str.w	r1, [r4], #4
 800376c:	4602      	mov	r2, r0
 800376e:	e9d3 0101 	ldrd	r0, r1, [r3, #4]
 8003772:	e884 0003 	stmia.w	r4, {r0, r1}
 8003776:	e9d3 0103 	ldrd	r0, r1, [r3, #12]
 800377a:	f102 040c 	add.w	r4, r2, #12
 800377e:	e884 0003 	stmia.w	r4, {r0, r1}
 8003782:	e9d3 0106 	ldrd	r0, r1, [r3, #24]
 8003786:	695c      	ldr	r4, [r3, #20]
 8003788:	61d1      	str	r1, [r2, #28]
 800378a:	6a19      	ldr	r1, [r3, #32]
 800378c:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 800378e:	6211      	str	r1, [r2, #32]
 8003790:	e9c2 4005 	strd	r4, r0, [r2, #20]
 8003794:	8493      	strh	r3, [r2, #36]	; 0x24
 8003796:	4610      	mov	r0, r2
 8003798:	bd10      	pop	{r4, pc}
 800379a:	bf00      	nop
 800379c:	08031d38 	.word	0x08031d38

080037a0 <_ZN8touchgfx14SwipeContainerC1ERKS0_>:
class SwipeContainer : public Container
 80037a0:	b538      	push	{r3, r4, r5, lr}
 80037a2:	460d      	mov	r5, r1
 80037a4:	4604      	mov	r4, r0
class Container : public Drawable
 80037a6:	f7ff ffdb 	bl	8003760 <_ZN8touchgfx8DrawableC1ERKS0_>
 80037aa:	6aab      	ldr	r3, [r5, #40]	; 0x28
 80037ac:	62a3      	str	r3, [r4, #40]	; 0x28
 80037ae:	4b2b      	ldr	r3, [pc, #172]	; (800385c <_ZN8touchgfx14SwipeContainerC1ERKS0_+0xbc>)
 80037b0:	6023      	str	r3, [r4, #0]
 80037b2:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 80037b4:	62e3      	str	r3, [r4, #44]	; 0x2c
 80037b6:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 80037b8:	6323      	str	r3, [r4, #48]	; 0x30
 80037ba:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 80037bc:	6363      	str	r3, [r4, #52]	; 0x34
 80037be:	f105 0138 	add.w	r1, r5, #56	; 0x38
 80037c2:	f104 0038 	add.w	r0, r4, #56	; 0x38
 80037c6:	f7ff ffcb 	bl	8003760 <_ZN8touchgfx8DrawableC1ERKS0_>
 80037ca:	6e2b      	ldr	r3, [r5, #96]	; 0x60
 80037cc:	6623      	str	r3, [r4, #96]	; 0x60
 * dimensions of the physical screen. Place the ListLayout inside e.g. a
 * ScrollableContainer to allow all the children to be viewed.
 *
 * @see ScrollableContainer
 */
class ListLayout : public Container
 80037ce:	4b24      	ldr	r3, [pc, #144]	; (8003860 <_ZN8touchgfx14SwipeContainerC1ERKS0_+0xc0>)
 80037d0:	63a3      	str	r3, [r4, #56]	; 0x38
 80037d2:	f895 3064 	ldrb.w	r3, [r5, #100]	; 0x64
 80037d6:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 80037da:	f8b5 3066 	ldrh.w	r3, [r5, #102]	; 0x66
 80037de:	f8a4 3066 	strh.w	r3, [r4, #102]	; 0x66
 80037e2:	f105 0168 	add.w	r1, r5, #104	; 0x68
 80037e6:	f104 0068 	add.w	r0, r4, #104	; 0x68
 80037ea:	f7ff ffb9 	bl	8003760 <_ZN8touchgfx8DrawableC1ERKS0_>
 80037ee:	f8d5 3090 	ldr.w	r3, [r5, #144]	; 0x90
 80037f2:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
    class PageIndicator : public Container
 80037f6:	4b1b      	ldr	r3, [pc, #108]	; (8003864 <_ZN8touchgfx14SwipeContainerC1ERKS0_+0xc4>)
 80037f8:	66a3      	str	r3, [r4, #104]	; 0x68
 80037fa:	f105 0194 	add.w	r1, r5, #148	; 0x94
 80037fe:	f104 0094 	add.w	r0, r4, #148	; 0x94
 8003802:	f7ff ffad 	bl	8003760 <_ZN8touchgfx8DrawableC1ERKS0_>
 * is handled by the Image Converter as part of compiling the project. Each image is
 * assigned a unique BITMAP identifier which.
 *
 * @see Bitmap
 */
class Image : public Widget
 8003806:	f8b5 30ba 	ldrh.w	r3, [r5, #186]	; 0xba
 800380a:	f8a4 30ba 	strh.w	r3, [r4, #186]	; 0xba
 800380e:	f895 30bc 	ldrb.w	r3, [r5, #188]	; 0xbc
 8003812:	f884 30bc 	strb.w	r3, [r4, #188]	; 0xbc
 * Simple widget capable of showing a bitmap tiled indefinitely horizontally and vertically.
 * This means that when the TiledImage Widget is larger than the provided Bitmap, the
 * Bitmap is repeated over and over horizontally and vertically. The bitmap can be alpha-
 * blended with the background and have areas of transparency.
 */
class TiledImage : public Image
 8003816:	4b14      	ldr	r3, [pc, #80]	; (8003868 <_ZN8touchgfx14SwipeContainerC1ERKS0_+0xc8>)
 8003818:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 800381c:	f8b5 30be 	ldrh.w	r3, [r5, #190]	; 0xbe
 8003820:	f8a4 30be 	strh.w	r3, [r4, #190]	; 0xbe
 8003824:	f8b5 30c0 	ldrh.w	r3, [r5, #192]	; 0xc0
 8003828:	f8a4 30c0 	strh.w	r3, [r4, #192]	; 0xc0
 800382c:	f105 01c4 	add.w	r1, r5, #196	; 0xc4
 8003830:	f104 00c4 	add.w	r0, r4, #196	; 0xc4
 8003834:	f7ff ff94 	bl	8003760 <_ZN8touchgfx8DrawableC1ERKS0_>
 8003838:	4b0c      	ldr	r3, [pc, #48]	; (800386c <_ZN8touchgfx14SwipeContainerC1ERKS0_+0xcc>)
 800383a:	f8c4 30c4 	str.w	r3, [r4, #196]	; 0xc4
 800383e:	f8b5 30ea 	ldrh.w	r3, [r5, #234]	; 0xea
 8003842:	f8a4 30ea 	strh.w	r3, [r4, #234]	; 0xea
 8003846:	f895 30ec 	ldrb.w	r3, [r5, #236]	; 0xec
 800384a:	f884 30ec 	strb.w	r3, [r4, #236]	; 0xec
 800384e:	f8b5 30f0 	ldrh.w	r3, [r5, #240]	; 0xf0
 8003852:	f8a4 30f0 	strh.w	r3, [r4, #240]	; 0xf0
class SwipeContainer : public Container
 8003856:	4620      	mov	r0, r4
 8003858:	bd38      	pop	{r3, r4, r5, pc}
 800385a:	bf00      	nop
 800385c:	08031550 	.word	0x08031550
 8003860:	08031614 	.word	0x08031614
 8003864:	0802f464 	.word	0x0802f464
 8003868:	08031a10 	.word	0x08031a10
 800386c:	08031bf4 	.word	0x08031bf4

08003870 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
{
 8003870:	b5f0      	push	{r4, r5, r6, r7, lr}
    if (&src == &buttonWithLabel3)
 8003872:	f100 0398 	add.w	r3, r0, #152	; 0x98
 8003876:	4299      	cmp	r1, r3
{
 8003878:	b0c1      	sub	sp, #260	; 0x104
 800387a:	4604      	mov	r4, r0
 800387c:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 800387e:	d103      	bne.n	8003888 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x18>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8003880:	f015 f87e 	bl	8018980 <_ZN8touchgfx11Application11getInstanceEv>
        application().gotoMain_MenuScreenWipeTransitionWest();
 8003884:	f001 fe5c 	bl	8005540 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
    if (&src == &buttonWithIcon_LP1)
 8003888:	f504 731e 	add.w	r3, r4, #632	; 0x278
 800388c:	429d      	cmp	r5, r3
 800388e:	d126      	bne.n	80038de <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x6e>
        SwipeContainer swipeContainer = swipeContainer1;
 8003890:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 8003894:	4631      	mov	r1, r6
 8003896:	a803      	add	r0, sp, #12
 8003898:	f7ff ff82 	bl	80037a0 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 800389c:	f7fe fc18 	bl	80020d0 <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples);
 80038a0:	2101      	movs	r1, #1
        uint32_t* Samples = MEAS_start_measure();
 80038a2:	4602      	mov	r2, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples);
 80038a4:	4668      	mov	r0, sp
 80038a6:	f7fd fbfd 	bl	80010a4 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 0, 12);
 80038aa:	eddd 7a01 	vldr	s15, [sp, #4]
 80038ae:	48df      	ldr	r0, [pc, #892]	; (8003c2c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3bc>)
 80038b0:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80038b4:	230c      	movs	r3, #12
 80038b6:	ee17 7a90 	vmov	r7, s15
 80038ba:	ee17 1a90 	vmov	r1, s15
 80038be:	2200      	movs	r2, #0
 80038c0:	f7fd fe68 	bl	8001594 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LP1Buffer, TEXTAREACAL_LP1_SIZE, "%d", (uint32_t)fft.signal_strength);
 80038c4:	4ada      	ldr	r2, [pc, #872]	; (8003c30 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3c0>)
 80038c6:	463b      	mov	r3, r7
 80038c8:	210a      	movs	r1, #10
 80038ca:	f604 601c 	addw	r0, r4, #3612	; 0xe1c
 80038ce:	f018 fa05 	bl	801bcdc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 80038d2:	4630      	mov	r0, r6
 80038d4:	f016 f93c 	bl	8019b50 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 80038d8:	a803      	add	r0, sp, #12
 80038da:	f00f fa07 	bl	8012cec <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_LP2)
 80038de:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 80038e2:	429d      	cmp	r5, r3
 80038e4:	d126      	bne.n	8003934 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xc4>
        SwipeContainer swipeContainer = swipeContainer1;
 80038e6:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 80038ea:	4631      	mov	r1, r6
 80038ec:	a803      	add	r0, sp, #12
 80038ee:	f7ff ff57 	bl	80037a0 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 80038f2:	f7fe fbed 	bl	80020d0 <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples);
 80038f6:	2101      	movs	r1, #1
        uint32_t* Samples = MEAS_start_measure();
 80038f8:	4602      	mov	r2, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples);
 80038fa:	4668      	mov	r0, sp
 80038fc:	f7fd fbd2 	bl	80010a4 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 1, 12);
 8003900:	eddd 7a01 	vldr	s15, [sp, #4]
 8003904:	48c9      	ldr	r0, [pc, #804]	; (8003c2c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3bc>)
 8003906:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800390a:	230c      	movs	r3, #12
 800390c:	ee17 7a90 	vmov	r7, s15
 8003910:	ee17 1a90 	vmov	r1, s15
 8003914:	2201      	movs	r2, #1
 8003916:	f7fd fe3d 	bl	8001594 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LP2Buffer, TEXTAREACAL_LP2_SIZE, "%d", (uint32_t)fft.signal_strength);
 800391a:	4ac5      	ldr	r2, [pc, #788]	; (8003c30 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3c0>)
 800391c:	463b      	mov	r3, r7
 800391e:	210a      	movs	r1, #10
 8003920:	f604 6008 	addw	r0, r4, #3592	; 0xe08
 8003924:	f018 f9da 	bl	801bcdc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8003928:	4630      	mov	r0, r6
 800392a:	f016 f911 	bl	8019b50 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 800392e:	a803      	add	r0, sp, #12
 8003930:	f00f f9dc 	bl	8012cec <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_LP3)
 8003934:	f504 7300 	add.w	r3, r4, #512	; 0x200
 8003938:	429d      	cmp	r5, r3
 800393a:	d126      	bne.n	800398a <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x11a>
        SwipeContainer swipeContainer = swipeContainer1;
 800393c:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 8003940:	4631      	mov	r1, r6
 8003942:	a803      	add	r0, sp, #12
 8003944:	f7ff ff2c 	bl	80037a0 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 8003948:	f7fe fbc2 	bl	80020d0 <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples);
 800394c:	2101      	movs	r1, #1
        uint32_t* Samples = MEAS_start_measure();
 800394e:	4602      	mov	r2, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples);
 8003950:	4668      	mov	r0, sp
 8003952:	f7fd fba7 	bl	80010a4 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 2, 12);
 8003956:	eddd 7a01 	vldr	s15, [sp, #4]
 800395a:	48b4      	ldr	r0, [pc, #720]	; (8003c2c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3bc>)
 800395c:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003960:	230c      	movs	r3, #12
 8003962:	ee17 7a90 	vmov	r7, s15
 8003966:	ee17 1a90 	vmov	r1, s15
 800396a:	2202      	movs	r2, #2
 800396c:	f7fd fe12 	bl	8001594 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LP3Buffer, TEXTAREACAL_LP3_SIZE, "%d", (uint32_t)fft.signal_strength);
 8003970:	4aaf      	ldr	r2, [pc, #700]	; (8003c30 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3c0>)
 8003972:	463b      	mov	r3, r7
 8003974:	210a      	movs	r1, #10
 8003976:	f604 50f4 	addw	r0, r4, #3572	; 0xdf4
 800397a:	f018 f9af 	bl	801bcdc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 800397e:	4630      	mov	r0, r6
 8003980:	f016 f8e6 	bl	8019b50 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8003984:	a803      	add	r0, sp, #12
 8003986:	f00f f9b1 	bl	8012cec <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_RP1)
 800398a:	f504 63a1 	add.w	r3, r4, #1288	; 0x508
 800398e:	429d      	cmp	r5, r3
 8003990:	d126      	bne.n	80039e0 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x170>
        SwipeContainer swipeContainer = swipeContainer1;
 8003992:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 8003996:	4631      	mov	r1, r6
 8003998:	a803      	add	r0, sp, #12
 800399a:	f7ff ff01 	bl	80037a0 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 800399e:	f7fe fb97 	bl	80020d0 <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples);
 80039a2:	2101      	movs	r1, #1
        uint32_t* Samples = MEAS_start_measure();
 80039a4:	4602      	mov	r2, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples);
 80039a6:	4668      	mov	r0, sp
 80039a8:	f7fd fb7c 	bl	80010a4 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 3, 12);
 80039ac:	eddd 7a01 	vldr	s15, [sp, #4]
 80039b0:	489e      	ldr	r0, [pc, #632]	; (8003c2c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3bc>)
 80039b2:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80039b6:	230c      	movs	r3, #12
 80039b8:	ee17 7a90 	vmov	r7, s15
 80039bc:	ee17 1a90 	vmov	r1, s15
 80039c0:	2203      	movs	r2, #3
 80039c2:	f7fd fde7 	bl	8001594 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_RP1Buffer, TEXTAREACAL_RP1_SIZE, "%d", (uint32_t)fft.signal_strength);
 80039c6:	4a9a      	ldr	r2, [pc, #616]	; (8003c30 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3c0>)
 80039c8:	463b      	mov	r3, r7
 80039ca:	210a      	movs	r1, #10
 80039cc:	f604 6058 	addw	r0, r4, #3672	; 0xe58
 80039d0:	f018 f984 	bl	801bcdc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 80039d4:	4630      	mov	r0, r6
 80039d6:	f016 f8bb 	bl	8019b50 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 80039da:	a803      	add	r0, sp, #12
 80039dc:	f00f f986 	bl	8012cec <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_RP2)
 80039e0:	f204 43cc 	addw	r3, r4, #1228	; 0x4cc
 80039e4:	429d      	cmp	r5, r3
 80039e6:	d126      	bne.n	8003a36 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x1c6>
        SwipeContainer swipeContainer = swipeContainer1;
 80039e8:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 80039ec:	4631      	mov	r1, r6
 80039ee:	a803      	add	r0, sp, #12
 80039f0:	f7ff fed6 	bl	80037a0 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 80039f4:	f7fe fb6c 	bl	80020d0 <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples);
 80039f8:	2101      	movs	r1, #1
        uint32_t* Samples = MEAS_start_measure();
 80039fa:	4602      	mov	r2, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples);
 80039fc:	4668      	mov	r0, sp
 80039fe:	f7fd fb51 	bl	80010a4 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 4, 12);
 8003a02:	eddd 7a01 	vldr	s15, [sp, #4]
 8003a06:	4889      	ldr	r0, [pc, #548]	; (8003c2c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3bc>)
 8003a08:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003a0c:	230c      	movs	r3, #12
 8003a0e:	ee17 7a90 	vmov	r7, s15
 8003a12:	ee17 1a90 	vmov	r1, s15
 8003a16:	2204      	movs	r2, #4
 8003a18:	f7fd fdbc 	bl	8001594 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_RP2Buffer, TEXTAREACAL_RP2_SIZE, "%d", (uint32_t)fft.signal_strength);
 8003a1c:	4a84      	ldr	r2, [pc, #528]	; (8003c30 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3c0>)
 8003a1e:	463b      	mov	r3, r7
 8003a20:	210a      	movs	r1, #10
 8003a22:	f604 6044 	addw	r0, r4, #3652	; 0xe44
 8003a26:	f018 f959 	bl	801bcdc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8003a2a:	4630      	mov	r0, r6
 8003a2c:	f016 f890 	bl	8019b50 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8003a30:	a803      	add	r0, sp, #12
 8003a32:	f00f f95b 	bl	8012cec <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_RP3)
 8003a36:	f504 6392 	add.w	r3, r4, #1168	; 0x490
 8003a3a:	429d      	cmp	r5, r3
 8003a3c:	d126      	bne.n	8003a8c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x21c>
        SwipeContainer swipeContainer = swipeContainer1;
 8003a3e:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 8003a42:	4631      	mov	r1, r6
 8003a44:	a803      	add	r0, sp, #12
 8003a46:	f7ff feab 	bl	80037a0 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 8003a4a:	f7fe fb41 	bl	80020d0 <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples);
 8003a4e:	2101      	movs	r1, #1
        uint32_t* Samples = MEAS_start_measure();
 8003a50:	4602      	mov	r2, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples);
 8003a52:	4668      	mov	r0, sp
 8003a54:	f7fd fb26 	bl	80010a4 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 5, 12);
 8003a58:	eddd 7a01 	vldr	s15, [sp, #4]
 8003a5c:	4873      	ldr	r0, [pc, #460]	; (8003c2c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3bc>)
 8003a5e:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003a62:	230c      	movs	r3, #12
 8003a64:	ee17 7a90 	vmov	r7, s15
 8003a68:	ee17 1a90 	vmov	r1, s15
 8003a6c:	2205      	movs	r2, #5
 8003a6e:	f7fd fd91 	bl	8001594 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_RP3Buffer, TEXTAREACAL_RP3_SIZE, "%d", (uint32_t)fft.signal_strength);
 8003a72:	4a6f      	ldr	r2, [pc, #444]	; (8003c30 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3c0>)
 8003a74:	463b      	mov	r3, r7
 8003a76:	210a      	movs	r1, #10
 8003a78:	f504 6063 	add.w	r0, r4, #3632	; 0xe30
 8003a7c:	f018 f92e 	bl	801bcdc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8003a80:	4630      	mov	r0, r6
 8003a82:	f016 f865 	bl	8019b50 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8003a86:	a803      	add	r0, sp, #12
 8003a88:	f00f f930 	bl	8012cec <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_LH1)
 8003a8c:	f504 63f3 	add.w	r3, r4, #1944	; 0x798
 8003a90:	429d      	cmp	r5, r3
 8003a92:	d126      	bne.n	8003ae2 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x272>
        SwipeContainer swipeContainer = swipeContainer1;
 8003a94:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 8003a98:	4631      	mov	r1, r6
 8003a9a:	a803      	add	r0, sp, #12
 8003a9c:	f7ff fe80 	bl	80037a0 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 8003aa0:	f7fe fb16 	bl	80020d0 <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples);
 8003aa4:	2101      	movs	r1, #1
        uint32_t* Samples = MEAS_start_measure();
 8003aa6:	4602      	mov	r2, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples);
 8003aa8:	4668      	mov	r0, sp
 8003aaa:	f7fd fafb 	bl	80010a4 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 6, 12);
 8003aae:	eddd 7a01 	vldr	s15, [sp, #4]
 8003ab2:	485e      	ldr	r0, [pc, #376]	; (8003c2c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3bc>)
 8003ab4:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003ab8:	230c      	movs	r3, #12
 8003aba:	ee17 7a90 	vmov	r7, s15
 8003abe:	ee17 1a90 	vmov	r1, s15
 8003ac2:	2206      	movs	r2, #6
 8003ac4:	f7fd fd66 	bl	8001594 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LH1Buffer, TEXTAREACAL_LH1_SIZE, "%d", (uint32_t)fft.signal_strength);
 8003ac8:	4a59      	ldr	r2, [pc, #356]	; (8003c30 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3c0>)
 8003aca:	463b      	mov	r3, r7
 8003acc:	210a      	movs	r1, #10
 8003ace:	f604 6094 	addw	r0, r4, #3732	; 0xe94
 8003ad2:	f018 f903 	bl	801bcdc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8003ad6:	4630      	mov	r0, r6
 8003ad8:	f016 f83a 	bl	8019b50 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8003adc:	a803      	add	r0, sp, #12
 8003ade:	f00f f905 	bl	8012cec <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_LH2)
 8003ae2:	f204 735c 	addw	r3, r4, #1884	; 0x75c
 8003ae6:	429d      	cmp	r5, r3
 8003ae8:	d126      	bne.n	8003b38 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x2c8>
        SwipeContainer swipeContainer = swipeContainer1;
 8003aea:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 8003aee:	4631      	mov	r1, r6
 8003af0:	a803      	add	r0, sp, #12
 8003af2:	f7ff fe55 	bl	80037a0 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 8003af6:	f7fe faeb 	bl	80020d0 <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples);
 8003afa:	2101      	movs	r1, #1
        uint32_t* Samples = MEAS_start_measure();
 8003afc:	4602      	mov	r2, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples);
 8003afe:	4668      	mov	r0, sp
 8003b00:	f7fd fad0 	bl	80010a4 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 7, 12);
 8003b04:	eddd 7a01 	vldr	s15, [sp, #4]
 8003b08:	4848      	ldr	r0, [pc, #288]	; (8003c2c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3bc>)
 8003b0a:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003b0e:	230c      	movs	r3, #12
 8003b10:	ee17 7a90 	vmov	r7, s15
 8003b14:	ee17 1a90 	vmov	r1, s15
 8003b18:	2207      	movs	r2, #7
 8003b1a:	f7fd fd3b 	bl	8001594 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LH2Buffer, TEXTAREACAL_LH2_SIZE, "%d", (uint32_t)fft.signal_strength);
 8003b1e:	4a44      	ldr	r2, [pc, #272]	; (8003c30 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3c0>)
 8003b20:	463b      	mov	r3, r7
 8003b22:	210a      	movs	r1, #10
 8003b24:	f504 6068 	add.w	r0, r4, #3712	; 0xe80
 8003b28:	f018 f8d8 	bl	801bcdc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8003b2c:	4630      	mov	r0, r6
 8003b2e:	f016 f80f 	bl	8019b50 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8003b32:	a803      	add	r0, sp, #12
 8003b34:	f00f f8da 	bl	8012cec <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_LH3)
 8003b38:	f504 63e4 	add.w	r3, r4, #1824	; 0x720
 8003b3c:	429d      	cmp	r5, r3
 8003b3e:	d126      	bne.n	8003b8e <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x31e>
        SwipeContainer swipeContainer = swipeContainer1;
 8003b40:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 8003b44:	4631      	mov	r1, r6
 8003b46:	a803      	add	r0, sp, #12
 8003b48:	f7ff fe2a 	bl	80037a0 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 8003b4c:	f7fe fac0 	bl	80020d0 <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples);
 8003b50:	2101      	movs	r1, #1
        uint32_t* Samples = MEAS_start_measure();
 8003b52:	4602      	mov	r2, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples);
 8003b54:	4668      	mov	r0, sp
 8003b56:	f7fd faa5 	bl	80010a4 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 8, 12);
 8003b5a:	eddd 7a01 	vldr	s15, [sp, #4]
 8003b5e:	4833      	ldr	r0, [pc, #204]	; (8003c2c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3bc>)
 8003b60:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003b64:	230c      	movs	r3, #12
 8003b66:	ee17 7a90 	vmov	r7, s15
 8003b6a:	ee17 1a90 	vmov	r1, s15
 8003b6e:	2208      	movs	r2, #8
 8003b70:	f7fd fd10 	bl	8001594 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LH3Buffer, TEXTAREACAL_LH3_SIZE, "%d", (uint32_t)fft.signal_strength);
 8003b74:	4a2e      	ldr	r2, [pc, #184]	; (8003c30 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3c0>)
 8003b76:	463b      	mov	r3, r7
 8003b78:	210a      	movs	r1, #10
 8003b7a:	f604 606c 	addw	r0, r4, #3692	; 0xe6c
 8003b7e:	f018 f8ad 	bl	801bcdc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8003b82:	4630      	mov	r0, r6
 8003b84:	f015 ffe4 	bl	8019b50 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8003b88:	a803      	add	r0, sp, #12
 8003b8a:	f00f f8af 	bl	8012cec <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_RH1)
 8003b8e:	f604 2328 	addw	r3, r4, #2600	; 0xa28
 8003b92:	429d      	cmp	r5, r3
 8003b94:	d126      	bne.n	8003be4 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x374>
        SwipeContainer swipeContainer = swipeContainer1;
 8003b96:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 8003b9a:	4631      	mov	r1, r6
 8003b9c:	a803      	add	r0, sp, #12
 8003b9e:	f7ff fdff 	bl	80037a0 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 8003ba2:	f7fe fa95 	bl	80020d0 <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples);
 8003ba6:	2101      	movs	r1, #1
        uint32_t* Samples = MEAS_start_measure();
 8003ba8:	4602      	mov	r2, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples);
 8003baa:	4668      	mov	r0, sp
 8003bac:	f7fd fa7a 	bl	80010a4 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 9, 12);
 8003bb0:	eddd 7a01 	vldr	s15, [sp, #4]
 8003bb4:	481d      	ldr	r0, [pc, #116]	; (8003c2c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3bc>)
 8003bb6:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003bba:	230c      	movs	r3, #12
 8003bbc:	ee17 7a90 	vmov	r7, s15
 8003bc0:	ee17 1a90 	vmov	r1, s15
 8003bc4:	2209      	movs	r2, #9
 8003bc6:	f7fd fce5 	bl	8001594 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_RH1Buffer, TEXTAREACAL_RH1_SIZE, "%d", (uint32_t)fft.signal_strength);
 8003bca:	4a19      	ldr	r2, [pc, #100]	; (8003c30 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3c0>)
 8003bcc:	463b      	mov	r3, r7
 8003bce:	210a      	movs	r1, #10
 8003bd0:	f504 606d 	add.w	r0, r4, #3792	; 0xed0
 8003bd4:	f018 f882 	bl	801bcdc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8003bd8:	4630      	mov	r0, r6
 8003bda:	f015 ffb9 	bl	8019b50 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8003bde:	a803      	add	r0, sp, #12
 8003be0:	f00f f884 	bl	8012cec <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_RH2)
 8003be4:	f604 13ec 	addw	r3, r4, #2540	; 0x9ec
 8003be8:	429d      	cmp	r5, r3
 8003bea:	d12b      	bne.n	8003c44 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3d4>
        SwipeContainer swipeContainer = swipeContainer1;
 8003bec:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 8003bf0:	4631      	mov	r1, r6
 8003bf2:	a803      	add	r0, sp, #12
 8003bf4:	f7ff fdd4 	bl	80037a0 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 8003bf8:	f7fe fa6a 	bl	80020d0 <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples);
 8003bfc:	2101      	movs	r1, #1
        uint32_t* Samples = MEAS_start_measure();
 8003bfe:	4602      	mov	r2, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples);
 8003c00:	4668      	mov	r0, sp
 8003c02:	f7fd fa4f 	bl	80010a4 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 10, 12);
 8003c06:	eddd 7a01 	vldr	s15, [sp, #4]
 8003c0a:	4808      	ldr	r0, [pc, #32]	; (8003c2c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3bc>)
 8003c0c:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003c10:	230c      	movs	r3, #12
 8003c12:	ee17 7a90 	vmov	r7, s15
 8003c16:	ee17 1a90 	vmov	r1, s15
 8003c1a:	220a      	movs	r2, #10
 8003c1c:	f7fd fcba 	bl	8001594 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_RH2Buffer, TEXTAREACAL_RH2_SIZE, "%d", (uint32_t)fft.signal_strength);
 8003c20:	4a03      	ldr	r2, [pc, #12]	; (8003c30 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3c0>)
 8003c22:	463b      	mov	r3, r7
 8003c24:	210a      	movs	r1, #10
 8003c26:	f604 60bc 	addw	r0, r4, #3772	; 0xebc
 8003c2a:	e003      	b.n	8003c34 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3c4>
 8003c2c:	081e0000 	.word	0x081e0000
 8003c30:	0802f3a6 	.word	0x0802f3a6
 8003c34:	f018 f852 	bl	801bcdc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8003c38:	4630      	mov	r0, r6
 8003c3a:	f015 ff89 	bl	8019b50 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8003c3e:	a803      	add	r0, sp, #12
 8003c40:	f00f f854 	bl	8012cec <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_RH3)
 8003c44:	f504 631b 	add.w	r3, r4, #2480	; 0x9b0
 8003c48:	429d      	cmp	r5, r3
 8003c4a:	d126      	bne.n	8003c9a <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x42a>
        SwipeContainer swipeContainer = swipeContainer1;
 8003c4c:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 8003c50:	4631      	mov	r1, r6
 8003c52:	a803      	add	r0, sp, #12
 8003c54:	f7ff fda4 	bl	80037a0 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 8003c58:	f7fe fa3a 	bl	80020d0 <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples);
 8003c5c:	2101      	movs	r1, #1
        uint32_t* Samples = MEAS_start_measure();
 8003c5e:	4602      	mov	r2, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples);
 8003c60:	4668      	mov	r0, sp
 8003c62:	f7fd fa1f 	bl	80010a4 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 11, 12);
 8003c66:	eddd 7a01 	vldr	s15, [sp, #4]
 8003c6a:	480d      	ldr	r0, [pc, #52]	; (8003ca0 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x430>)
 8003c6c:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003c70:	230c      	movs	r3, #12
 8003c72:	ee17 5a90 	vmov	r5, s15
 8003c76:	ee17 1a90 	vmov	r1, s15
 8003c7a:	220b      	movs	r2, #11
 8003c7c:	f7fd fc8a 	bl	8001594 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_RH3Buffer, TEXTAREACAL_RH3_SIZE, "%d", (uint32_t)fft.signal_strength);
 8003c80:	4a08      	ldr	r2, [pc, #32]	; (8003ca4 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x434>)
 8003c82:	462b      	mov	r3, r5
 8003c84:	210a      	movs	r1, #10
 8003c86:	f604 60a8 	addw	r0, r4, #3752	; 0xea8
 8003c8a:	f018 f827 	bl	801bcdc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8003c8e:	4630      	mov	r0, r6
 8003c90:	f015 ff5e 	bl	8019b50 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8003c94:	a803      	add	r0, sp, #12
 8003c96:	f00f f829 	bl	8012cec <_ZN8touchgfx14SwipeContainerD1Ev>
}
 8003c9a:	b041      	add	sp, #260	; 0x104
 8003c9c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003c9e:	bf00      	nop
 8003ca0:	081e0000 	.word	0x081e0000
 8003ca4:	0802f3a6 	.word	0x0802f3a6

08003ca8 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>:
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setStart(T x, T y)
    {
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8003ca8:	0152      	lsls	r2, r2, #5
 8003caa:	0149      	lsls	r1, r1, #5
 8003cac:	f010 bf72 	b.w	8014b94 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>

08003cb0 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>:
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setEnd(T x, T y)
    {
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8003cb0:	0152      	lsls	r2, r2, #5
 8003cb2:	0149      	lsls	r1, r1, #5
 8003cb4:	f010 bf79 	b.w	8014baa <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>

08003cb8 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>:
     * @see updateLineWidth
     *
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setLineWidth(T width)
 8003cb8:	b410      	push	{r4}
     *
     * @note The area containing the Line is not invalidated.
     */
    void setLineWidth(CWRUtil::Q5 widthQ5)
    {
        if (lineWidthQ5 == widthQ5)
 8003cba:	6bc4      	ldr	r4, [r0, #60]	; 0x3c
 8003cbc:	ebb4 1f41 	cmp.w	r4, r1, lsl #5
    template <typename T>
    FORCE_INLINE_FUNCTION
#endif
    static Q5 toQ5(T value)
    {
        return Q5((int)(value * Rasterizer::POLY_BASE_SIZE));
 8003cc0:	ea4f 1241 	mov.w	r2, r1, lsl #5
 8003cc4:	d004      	beq.n	8003cd0 <_ZN8touchgfx4Line12setLineWidthIiEEvT_+0x18>
    }
 8003cc6:	f85d 4b04 	ldr.w	r4, [sp], #4
        {
            return;
        }

        lineWidthQ5 = widthQ5;
 8003cca:	63c2      	str	r2, [r0, #60]	; 0x3c

        updateCachedShape();
 8003ccc:	f010 be6c 	b.w	80149a8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    }
 8003cd0:	f85d 4b04 	ldr.w	r4, [sp], #4
 8003cd4:	4770      	bx	lr
	...

08003cd8 <_ZN23Calibration_PadViewBaseC1Ev>:
Calibration_PadViewBase::Calibration_PadViewBase() :
 8003cd8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003cdc:	ed2d 8b10 	vpush	{d8-d15}
 8003ce0:	4604      	mov	r4, r0
 8003ce2:	b0ad      	sub	sp, #180	; 0xb4
    buttonCallback(this, &Calibration_PadViewBase::buttonCallbackHandler)
 8003ce4:	46a1      	mov	r9, r4
template <class T>
class View : public Screen
{
public:
    View()
        : presenter(0)
 8003ce6:	2500      	movs	r5, #0
 8003ce8:	f016 faca 	bl	801a280 <_ZN8touchgfx6ScreenC1Ev>
 8003cec:	4be5      	ldr	r3, [pc, #916]	; (8004084 <_ZN23Calibration_PadViewBaseC1Ev+0x3ac>)
 8003cee:	63e5      	str	r5, [r4, #60]	; 0x3c
 8003cf0:	f849 3b40 	str.w	r3, [r9], #64
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 8003cf4:	2226      	movs	r2, #38	; 0x26
 8003cf6:	4629      	mov	r1, r5
 8003cf8:	4648      	mov	r0, r9
 8003cfa:	f029 ffe2 	bl	802dcc2 <memset>
 8003cfe:	4648      	mov	r0, r9
 8003d00:	f7ff fc9e 	bl	8003640 <_ZN8touchgfx6WidgetC1Ev>
 8003d04:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8003d08:	26ff      	movs	r6, #255	; 0xff
 8003d0a:	4bdf      	ldr	r3, [pc, #892]	; (8004088 <_ZN23Calibration_PadViewBaseC1Ev+0x3b0>)
 8003d0c:	6423      	str	r3, [r4, #64]	; 0x40
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
        : Widget(), bitmap(bmp), alpha(255)
 8003d0e:	2226      	movs	r2, #38	; 0x26
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 8003d10:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8003d14:	4629      	mov	r1, r5
 8003d16:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8003d1a:	4640      	mov	r0, r8
        : color(col)
 8003d1c:	66a5      	str	r5, [r4, #104]	; 0x68
 8003d1e:	f8ad 30a4 	strh.w	r3, [sp, #164]	; 0xa4
 8003d22:	f029 ffce 	bl	802dcc2 <memset>
 8003d26:	4640      	mov	r0, r8
 8003d28:	f7ff fc8a 	bl	8003640 <_ZN8touchgfx6WidgetC1Ev>
 8003d2c:	4bd7      	ldr	r3, [pc, #860]	; (800408c <_ZN23Calibration_PadViewBaseC1Ev+0x3b4>)
 8003d2e:	66e3      	str	r3, [r4, #108]	; 0x6c
 8003d30:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
 8003d34:	f8bd 30a4 	ldrh.w	r3, [sp, #164]	; 0xa4
 8003d38:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
    {
        Image::setBitmap(bmp);
 8003d3c:	ae29      	add	r6, sp, #164	; 0xa4
 8003d3e:	4631      	mov	r1, r6
 8003d40:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8003d44:	4640      	mov	r0, r8
 8003d46:	f012 f91c 	bl	8015f82 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003d4a:	4658      	mov	r0, fp
 8003d4c:	f012 fa50 	bl	80161f0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8003d50:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 8003d54:	4618      	mov	r0, r3
 8003d56:	ee08 3a10 	vmov	s16, r3
 8003d5a:	f00f f8f5 	bl	8012f48 <_ZN8touchgfx14SwipeContainerC1Ev>
 8003d5e:	f504 73ea 	add.w	r3, r4, #468	; 0x1d4
 8003d62:	4618      	mov	r0, r3
 8003d64:	ee08 3a90 	vmov	s17, r3
 8003d68:	f7ff fc58 	bl	800361c <_ZN8touchgfx9ContainerC1Ev>
 8003d6c:	f504 7300 	add.w	r3, r4, #512	; 0x200
 8003d70:	4618      	mov	r0, r3
 8003d72:	9311      	str	r3, [sp, #68]	; 0x44
 8003d74:	f012 f8de 	bl	8015f34 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003d78:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 8003d7c:	f504 771e 	add.w	r7, r4, #632	; 0x278
 8003d80:	4618      	mov	r0, r3
 8003d82:	9312      	str	r3, [sp, #72]	; 0x48
 8003d84:	f012 f8d6 	bl	8015f34 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003d88:	4638      	mov	r0, r7
 8003d8a:	f012 f8d3 	bl	8015f34 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003d8e:	f504 732d 	add.w	r3, r4, #692	; 0x2b4
 8003d92:	4618      	mov	r0, r3
 8003d94:	ee0d 3a90 	vmov	s27, r3
 8003d98:	f7ff fcd6 	bl	8003748 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003d9c:	f504 7340 	add.w	r3, r4, #768	; 0x300
 8003da0:	4618      	mov	r0, r3
 8003da2:	ee0e 3a10 	vmov	s28, r3
 8003da6:	f7ff fccf 	bl	8003748 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003daa:	f504 7353 	add.w	r3, r4, #844	; 0x34c
 8003dae:	4618      	mov	r0, r3
 8003db0:	ee0e 3a90 	vmov	s29, r3
 8003db4:	f7ff fcc8 	bl	8003748 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003db8:	f504 7366 	add.w	r3, r4, #920	; 0x398
 8003dbc:	4618      	mov	r0, r3
 8003dbe:	ee0a 3a90 	vmov	s21, r3
 8003dc2:	f010 fdd1 	bl	8014968 <_ZN8touchgfx4LineC1Ev>
 8003dc6:	f504 6381 	add.w	r3, r4, #1032	; 0x408
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8003dca:	4618      	mov	r0, r3
 8003dcc:	931c      	str	r3, [sp, #112]	; 0x70
 8003dce:	f7ff fa3b 	bl	8003248 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003dd2:	4baf      	ldr	r3, [pc, #700]	; (8004090 <_ZN23Calibration_PadViewBaseC1Ev+0x3b8>)
 8003dd4:	f8c4 3408 	str.w	r3, [r4, #1032]	; 0x408
 8003dd8:	f103 0224 	add.w	r2, r3, #36	; 0x24
 8003ddc:	f204 411c 	addw	r1, r4, #1052	; 0x41c
 8003de0:	f8c4 2410 	str.w	r2, [r4, #1040]	; 0x410
 8003de4:	4608      	mov	r0, r1
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 8003de6:	f8c4 5414 	str.w	r5, [r4, #1044]	; 0x414
 8003dea:	f204 4a64 	addw	sl, r4, #1124	; 0x464
 8003dee:	9107      	str	r1, [sp, #28]
 8003df0:	f7ff fc8a 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
 8003df4:	4650      	mov	r0, sl
 8003df6:	f7ff fc11 	bl	800361c <_ZN8touchgfx9ContainerC1Ev>
 8003dfa:	f504 6192 	add.w	r1, r4, #1168	; 0x490
 8003dfe:	4608      	mov	r0, r1
 8003e00:	9113      	str	r1, [sp, #76]	; 0x4c
 8003e02:	f012 f897 	bl	8015f34 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003e06:	f204 41cc 	addw	r1, r4, #1228	; 0x4cc
 8003e0a:	4608      	mov	r0, r1
 8003e0c:	9114      	str	r1, [sp, #80]	; 0x50
 8003e0e:	f012 f891 	bl	8015f34 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003e12:	f504 61a1 	add.w	r1, r4, #1288	; 0x508
 8003e16:	4608      	mov	r0, r1
 8003e18:	9115      	str	r1, [sp, #84]	; 0x54
 8003e1a:	f012 f88b 	bl	8015f34 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003e1e:	f204 5144 	addw	r1, r4, #1348	; 0x544
 8003e22:	4608      	mov	r0, r1
 8003e24:	9108      	str	r1, [sp, #32]
 8003e26:	f7ff fc8f 	bl	8003748 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003e2a:	f504 61b2 	add.w	r1, r4, #1424	; 0x590
 8003e2e:	4608      	mov	r0, r1
 8003e30:	9109      	str	r1, [sp, #36]	; 0x24
 8003e32:	f7ff fc89 	bl	8003748 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003e36:	f204 51dc 	addw	r1, r4, #1500	; 0x5dc
 8003e3a:	4608      	mov	r0, r1
 8003e3c:	910a      	str	r1, [sp, #40]	; 0x28
 8003e3e:	f7ff fc83 	bl	8003748 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003e42:	f504 61c5 	add.w	r1, r4, #1576	; 0x628
 8003e46:	4608      	mov	r0, r1
 8003e48:	ee0b 1a10 	vmov	s22, r1
 8003e4c:	f010 fd8c 	bl	8014968 <_ZN8touchgfx4LineC1Ev>
 8003e50:	f504 61d3 	add.w	r1, r4, #1688	; 0x698
 8003e54:	4608      	mov	r0, r1
 8003e56:	911d      	str	r1, [sp, #116]	; 0x74
 8003e58:	f7ff f9f6 	bl	8003248 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003e5c:	4b8c      	ldr	r3, [pc, #560]	; (8004090 <_ZN23Calibration_PadViewBaseC1Ev+0x3b8>)
 8003e5e:	f8c4 3698 	str.w	r3, [r4, #1688]	; 0x698
 8003e62:	f103 0224 	add.w	r2, r3, #36	; 0x24
 8003e66:	f204 61ac 	addw	r1, r4, #1708	; 0x6ac
 8003e6a:	f8c4 26a0 	str.w	r2, [r4, #1696]	; 0x6a0
 8003e6e:	4608      	mov	r0, r1
 8003e70:	f8c4 56a4 	str.w	r5, [r4, #1700]	; 0x6a4
 8003e74:	ee0f 1a10 	vmov	s30, r1
 8003e78:	f7ff fc46 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
 8003e7c:	f204 61f4 	addw	r1, r4, #1780	; 0x6f4
 8003e80:	4608      	mov	r0, r1
 8003e82:	ee09 1a10 	vmov	s18, r1
 8003e86:	f7ff fbc9 	bl	800361c <_ZN8touchgfx9ContainerC1Ev>
 8003e8a:	f504 61e4 	add.w	r1, r4, #1824	; 0x720
 8003e8e:	4608      	mov	r0, r1
 8003e90:	9116      	str	r1, [sp, #88]	; 0x58
 8003e92:	f012 f84f 	bl	8015f34 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003e96:	f204 715c 	addw	r1, r4, #1884	; 0x75c
 8003e9a:	4608      	mov	r0, r1
 8003e9c:	9117      	str	r1, [sp, #92]	; 0x5c
 8003e9e:	f012 f849 	bl	8015f34 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003ea2:	f504 61f3 	add.w	r1, r4, #1944	; 0x798
 8003ea6:	4608      	mov	r0, r1
 8003ea8:	9118      	str	r1, [sp, #96]	; 0x60
 8003eaa:	f012 f843 	bl	8015f34 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003eae:	f204 71d4 	addw	r1, r4, #2004	; 0x7d4
 8003eb2:	4608      	mov	r0, r1
 8003eb4:	910b      	str	r1, [sp, #44]	; 0x2c
 8003eb6:	f7ff fc47 	bl	8003748 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003eba:	f504 6102 	add.w	r1, r4, #2080	; 0x820
 8003ebe:	4608      	mov	r0, r1
 8003ec0:	910c      	str	r1, [sp, #48]	; 0x30
 8003ec2:	f7ff fc41 	bl	8003748 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003ec6:	f604 016c 	addw	r1, r4, #2156	; 0x86c
 8003eca:	4608      	mov	r0, r1
 8003ecc:	910d      	str	r1, [sp, #52]	; 0x34
 8003ece:	f7ff fc3b 	bl	8003748 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003ed2:	f604 01b8 	addw	r1, r4, #2232	; 0x8b8
 8003ed6:	4608      	mov	r0, r1
 8003ed8:	ee0b 1a90 	vmov	s23, r1
 8003edc:	f010 fd44 	bl	8014968 <_ZN8touchgfx4LineC1Ev>
 8003ee0:	f604 1128 	addw	r1, r4, #2344	; 0x928
 8003ee4:	4608      	mov	r0, r1
 8003ee6:	911e      	str	r1, [sp, #120]	; 0x78
 8003ee8:	f7ff f9ae 	bl	8003248 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003eec:	4b68      	ldr	r3, [pc, #416]	; (8004090 <_ZN23Calibration_PadViewBaseC1Ev+0x3b8>)
 8003eee:	f8c4 3928 	str.w	r3, [r4, #2344]	; 0x928
 8003ef2:	f103 0224 	add.w	r2, r3, #36	; 0x24
 8003ef6:	f604 113c 	addw	r1, r4, #2364	; 0x93c
 8003efa:	f8c4 2930 	str.w	r2, [r4, #2352]	; 0x930
 8003efe:	4608      	mov	r0, r1
 8003f00:	f8c4 5934 	str.w	r5, [r4, #2356]	; 0x934
 8003f04:	ee0f 1a90 	vmov	s31, r1
 8003f08:	f7ff fbfe 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
 8003f0c:	f604 1184 	addw	r1, r4, #2436	; 0x984
 8003f10:	4608      	mov	r0, r1
 8003f12:	ee09 1a90 	vmov	s19, r1
 8003f16:	f7ff fb81 	bl	800361c <_ZN8touchgfx9ContainerC1Ev>
 8003f1a:	f504 611b 	add.w	r1, r4, #2480	; 0x9b0
 8003f1e:	4608      	mov	r0, r1
 8003f20:	9119      	str	r1, [sp, #100]	; 0x64
 8003f22:	f012 f807 	bl	8015f34 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003f26:	f604 11ec 	addw	r1, r4, #2540	; 0x9ec
 8003f2a:	4608      	mov	r0, r1
 8003f2c:	911a      	str	r1, [sp, #104]	; 0x68
 8003f2e:	f012 f801 	bl	8015f34 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003f32:	f604 2128 	addw	r1, r4, #2600	; 0xa28
 8003f36:	4608      	mov	r0, r1
 8003f38:	911b      	str	r1, [sp, #108]	; 0x6c
 8003f3a:	f011 fffb 	bl	8015f34 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003f3e:	f604 2164 	addw	r1, r4, #2660	; 0xa64
 8003f42:	4608      	mov	r0, r1
 8003f44:	910e      	str	r1, [sp, #56]	; 0x38
 8003f46:	f7ff fbff 	bl	8003748 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003f4a:	f504 612b 	add.w	r1, r4, #2736	; 0xab0
 8003f4e:	4608      	mov	r0, r1
 8003f50:	910f      	str	r1, [sp, #60]	; 0x3c
 8003f52:	f7ff fbf9 	bl	8003748 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003f56:	f604 21fc 	addw	r1, r4, #2812	; 0xafc
 8003f5a:	4608      	mov	r0, r1
 8003f5c:	9110      	str	r1, [sp, #64]	; 0x40
 8003f5e:	f7ff fbf3 	bl	8003748 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003f62:	f604 3148 	addw	r1, r4, #2888	; 0xb48
 8003f66:	4608      	mov	r0, r1
 8003f68:	ee0c 1a10 	vmov	s24, r1
 8003f6c:	f010 fcfc 	bl	8014968 <_ZN8touchgfx4LineC1Ev>
 8003f70:	f604 31b8 	addw	r1, r4, #3000	; 0xbb8
 8003f74:	4608      	mov	r0, r1
 8003f76:	911f      	str	r1, [sp, #124]	; 0x7c
 8003f78:	f7ff f966 	bl	8003248 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003f7c:	4b44      	ldr	r3, [pc, #272]	; (8004090 <_ZN23Calibration_PadViewBaseC1Ev+0x3b8>)
 8003f7e:	f8c4 3bb8 	str.w	r3, [r4, #3000]	; 0xbb8
 8003f82:	f103 0224 	add.w	r2, r3, #36	; 0x24
 8003f86:	f604 31cc 	addw	r1, r4, #3020	; 0xbcc
 8003f8a:	f8c4 2bc0 	str.w	r2, [r4, #3008]	; 0xbc0
 8003f8e:	4608      	mov	r0, r1
 8003f90:	f8c4 5bc4 	str.w	r5, [r4, #3012]	; 0xbc4
 8003f94:	9103      	str	r1, [sp, #12]
 8003f96:	f7ff fbb7 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
 8003f9a:	f604 4114 	addw	r1, r4, #3092	; 0xc14
 8003f9e:	4608      	mov	r0, r1
 8003fa0:	ee0c 1a90 	vmov	s25, r1
 8003fa4:	f010 fce0 	bl	8014968 <_ZN8touchgfx4LineC1Ev>
 8003fa8:	f604 4184 	addw	r1, r4, #3204	; 0xc84
 8003fac:	4608      	mov	r0, r1
 8003fae:	9120      	str	r1, [sp, #128]	; 0x80
 8003fb0:	f7ff f94a 	bl	8003248 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003fb4:	4b36      	ldr	r3, [pc, #216]	; (8004090 <_ZN23Calibration_PadViewBaseC1Ev+0x3b8>)
 8003fb6:	f8c4 3c84 	str.w	r3, [r4, #3204]	; 0xc84
 8003fba:	f103 0224 	add.w	r2, r3, #36	; 0x24
 8003fbe:	f604 4198 	addw	r1, r4, #3224	; 0xc98
 8003fc2:	f8c4 2c8c 	str.w	r2, [r4, #3212]	; 0xc8c
 8003fc6:	4608      	mov	r0, r1
 8003fc8:	f8c4 5c90 	str.w	r5, [r4, #3216]	; 0xc90
 8003fcc:	9104      	str	r1, [sp, #16]
 8003fce:	f7ff fb9b 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
 8003fd2:	f504 614e 	add.w	r1, r4, #3296	; 0xce0
 8003fd6:	4608      	mov	r0, r1
 8003fd8:	ee0d 1a10 	vmov	s26, r1
 8003fdc:	f010 fcc4 	bl	8014968 <_ZN8touchgfx4LineC1Ev>
 8003fe0:	f504 6155 	add.w	r1, r4, #3408	; 0xd50
 8003fe4:	4608      	mov	r0, r1
 8003fe6:	9121      	str	r1, [sp, #132]	; 0x84
 8003fe8:	f7ff f92e 	bl	8003248 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003fec:	4b28      	ldr	r3, [pc, #160]	; (8004090 <_ZN23Calibration_PadViewBaseC1Ev+0x3b8>)
 8003fee:	f8c4 3d50 	str.w	r3, [r4, #3408]	; 0xd50
 8003ff2:	f103 0224 	add.w	r2, r3, #36	; 0x24
 8003ff6:	f604 5364 	addw	r3, r4, #3428	; 0xd64
 8003ffa:	f8c4 2d58 	str.w	r2, [r4, #3416]	; 0xd58
 8003ffe:	4618      	mov	r0, r3
 8004000:	f8c4 5d5c 	str.w	r5, [r4, #3420]	; 0xd5c
 8004004:	9305      	str	r3, [sp, #20]
 8004006:	f7ff fb7f 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
 800400a:	f604 53ac 	addw	r3, r4, #3500	; 0xdac
 800400e:	4618      	mov	r0, r3
 8004010:	9306      	str	r3, [sp, #24]
 8004012:	f7ff fb79 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8004016:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 800401a:	4a1e      	ldr	r2, [pc, #120]	; (8004094 <_ZN23Calibration_PadViewBaseC1Ev+0x3bc>)
 800401c:	f8c3 2cf4 	str.w	r2, [r3, #3316]	; 0xcf4
 8004020:	4a1d      	ldr	r2, [pc, #116]	; (8004098 <_ZN23Calibration_PadViewBaseC1Ev+0x3c0>)
 8004022:	f8c3 2cfc 	str.w	r2, [r3, #3324]	; 0xcfc
 8004026:	f8c3 4cf8 	str.w	r4, [r3, #3320]	; 0xcf8
 800402a:	f8c3 5d00 	str.w	r5, [r3, #3328]	; 0xd00
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800402e:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8004032:	f604 60e4 	addw	r0, r4, #3812	; 0xee4
 8004036:	f012 ff97 	bl	8016f68 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 800403a:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800403e:	462a      	mov	r2, r5
 8004040:	4648      	mov	r0, r9
 8004042:	9300      	str	r3, [sp, #0]
 8004044:	4629      	mov	r1, r5
 8004046:	23f0      	movs	r3, #240	; 0xf0
 8004048:	f7ff fad5 	bl	80035f6 <_ZN8touchgfx8Drawable11setPositionEssss>
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 800404c:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8004050:	66a3      	str	r3, [r4, #104]	; 0x68
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8004052:	1d23      	adds	r3, r4, #4
 8004054:	4618      	mov	r0, r3
 8004056:	4649      	mov	r1, r9
 8004058:	ee0a 3a10 	vmov	s20, r3
 800405c:	f00e fbb8 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8004060:	462a      	mov	r2, r5
 8004062:	4640      	mov	r0, r8
 8004064:	4629      	mov	r1, r5
 8004066:	f7ff fab9 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 800406a:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 800406c:	4640      	mov	r0, r8
 800406e:	4631      	mov	r1, r6
 8004070:	f8ad 30a4 	strh.w	r3, [sp, #164]	; 0xa4
 8004074:	f011 ff85 	bl	8015f82 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8004078:	4641      	mov	r1, r8
 800407a:	ee1a 0a10 	vmov	r0, s20
 800407e:	f00e fba7 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004082:	e00b      	b.n	800409c <_ZN23Calibration_PadViewBaseC1Ev+0x3c4>
 8004084:	0802f59c 	.word	0x0802f59c
 8004088:	080319a8 	.word	0x080319a8
 800408c:	08031bf4 	.word	0x08031bf4
 8004090:	080316dc 	.word	0x080316dc
 8004094:	0802f584 	.word	0x0802f584
 8004098:	08003871 	.word	0x08003871
    buttonWithLabel3.setXY(33, 257);
 800409c:	4658      	mov	r0, fp
 800409e:	f240 1201 	movw	r2, #257	; 0x101
 80040a2:	2121      	movs	r1, #33	; 0x21
 80040a4:	f7ff fa9a 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 80040a8:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80040aa:	4632      	mov	r2, r6
 80040ac:	a928      	add	r1, sp, #160	; 0xa0
 80040ae:	4658      	mov	r0, fp
 80040b0:	f8ad 30a0 	strh.w	r3, [sp, #160]	; 0xa0
 80040b4:	2302      	movs	r3, #2
 80040b6:	f8ad 30a4 	strh.w	r3, [sp, #164]	; 0xa4
 80040ba:	f011 fd6c 	bl	8015b96 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80040be:	233b      	movs	r3, #59	; 0x3b
        updateTextPosition();
 80040c0:	4658      	mov	r0, fp
 80040c2:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 80040c6:	f7ff facd 	bl	8003664 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 80040ca:	f04f 33ff 	mov.w	r3, #4294967295
        colorPressed = col;
 80040ce:	e9c4 3335 	strd	r3, r3, [r4, #212]	; 0xd4
    buttonWithLabel3.setAction(buttonCallback);
 80040d2:	f504 53e7 	add.w	r3, r4, #7392	; 0x1ce0
 80040d6:	3314      	adds	r3, #20
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 80040d8:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 80040dc:	4659      	mov	r1, fp
 80040de:	ee1a 0a10 	vmov	r0, s20
 80040e2:	9302      	str	r3, [sp, #8]
 80040e4:	f00e fb74 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    swipeContainer1.setXY(0, 85);
 80040e8:	ee18 0a10 	vmov	r0, s16
 80040ec:	2255      	movs	r2, #85	; 0x55
 80040ee:	4629      	mov	r1, r5
 80040f0:	f7ff fa74 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 80040f4:	2306      	movs	r3, #6
    swipeContainer1.setPageIndicatorBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SWIPECONTAINER_MEDIUM_OFF_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SWIPECONTAINER_MEDIUM_ON_ACTIVE_ID));
 80040f6:	ee18 0a10 	vmov	r0, s16
 80040fa:	f8ad 30a0 	strh.w	r3, [sp, #160]	; 0xa0
 80040fe:	4632      	mov	r2, r6
 8004100:	2307      	movs	r3, #7
 8004102:	a928      	add	r1, sp, #160	; 0xa0
 8004104:	f8ad 30a4 	strh.w	r3, [sp, #164]	; 0xa4
 8004108:	f00e ffbc 	bl	8013084 <_ZN8touchgfx14SwipeContainer23setPageIndicatorBitmapsERKNS_6BitmapES3_>
    swipeContainer1.setPageIndicatorXY(80, 140);
 800410c:	228c      	movs	r2, #140	; 0x8c
 800410e:	ee18 0a10 	vmov	r0, s16
 8004112:	2150      	movs	r1, #80	; 0x50
 8004114:	f00e fe64 	bl	8012de0 <_ZN8touchgfx14SwipeContainer18setPageIndicatorXYEss>
    swipeContainer1.setSwipeCutoff(50);
 8004118:	ee18 0a10 	vmov	r0, s16
 800411c:	2132      	movs	r1, #50	; 0x32
 800411e:	f00e fde2 	bl	8012ce6 <_ZN8touchgfx14SwipeContainer14setSwipeCutoffEt>
    swipeContainer1.setEndSwipeElasticWidth(50);
 8004122:	ee18 0a10 	vmov	r0, s16
 8004126:	2132      	movs	r1, #50	; 0x32
 8004128:	f00e fe58 	bl	8012ddc <_ZN8touchgfx14SwipeContainer23setEndSwipeElasticWidthEt>
        rect.width = width;
 800412c:	4b47      	ldr	r3, [pc, #284]	; (800424c <_ZN23Calibration_PadViewBaseC1Ev+0x574>)
    buttonWithIcon_LP3.setXY(194, 97);
 800412e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8004130:	f8c4 31dc 	str.w	r3, [r4, #476]	; 0x1dc
 8004134:	2261      	movs	r2, #97	; 0x61
 8004136:	21c2      	movs	r1, #194	; 0xc2
 8004138:	f7ff fa50 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 800413c:	f04f 0809 	mov.w	r8, #9
 8004140:	f04f 0b01 	mov.w	fp, #1
    buttonWithIcon_LP3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8004144:	aa27      	add	r2, sp, #156	; 0x9c
 8004146:	9811      	ldr	r0, [sp, #68]	; 0x44
 8004148:	9600      	str	r6, [sp, #0]
 800414a:	ab28      	add	r3, sp, #160	; 0xa0
 800414c:	a926      	add	r1, sp, #152	; 0x98
 800414e:	f8ad 5098 	strh.w	r5, [sp, #152]	; 0x98
 8004152:	f8ad b09c 	strh.w	fp, [sp, #156]	; 0x9c
 8004156:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
 800415a:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 800415e:	f011 fe54 	bl	8015e0a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8004162:	9b02      	ldr	r3, [sp, #8]
 8004164:	f8c4 3228 	str.w	r3, [r4, #552]	; 0x228
    swipeContainerPadLeft.add(buttonWithIcon_LP3);
 8004168:	9911      	ldr	r1, [sp, #68]	; 0x44
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconX(int16_t x)
    {
        iconX = x;
 800416a:	f8c4 5238 	str.w	r5, [r4, #568]	; 0x238
 800416e:	ee18 0a90 	vmov	r0, s17
 8004172:	f00e fb2d 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_LP2.setXY(194, 61);
 8004176:	9812      	ldr	r0, [sp, #72]	; 0x48
 8004178:	223d      	movs	r2, #61	; 0x3d
 800417a:	21c2      	movs	r1, #194	; 0xc2
 800417c:	f7ff fa2e 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_LP2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8004180:	aa27      	add	r2, sp, #156	; 0x9c
 8004182:	9812      	ldr	r0, [sp, #72]	; 0x48
 8004184:	9600      	str	r6, [sp, #0]
 8004186:	ab28      	add	r3, sp, #160	; 0xa0
 8004188:	a926      	add	r1, sp, #152	; 0x98
 800418a:	f8ad 5098 	strh.w	r5, [sp, #152]	; 0x98
 800418e:	f8ad b09c 	strh.w	fp, [sp, #156]	; 0x9c
 8004192:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
 8004196:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 800419a:	f011 fe36 	bl	8015e0a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 800419e:	9b02      	ldr	r3, [sp, #8]
 80041a0:	f8c4 3264 	str.w	r3, [r4, #612]	; 0x264
    swipeContainerPadLeft.add(buttonWithIcon_LP2);
 80041a4:	9912      	ldr	r1, [sp, #72]	; 0x48
 80041a6:	f8c4 5274 	str.w	r5, [r4, #628]	; 0x274
 80041aa:	ee18 0a90 	vmov	r0, s17
 80041ae:	f00e fb0f 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_LP1.setXY(194, 25);
 80041b2:	4638      	mov	r0, r7
 80041b4:	2219      	movs	r2, #25
 80041b6:	21c2      	movs	r1, #194	; 0xc2
 80041b8:	f7ff fa10 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_LP1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 80041bc:	aa27      	add	r2, sp, #156	; 0x9c
 80041be:	4638      	mov	r0, r7
 80041c0:	ab28      	add	r3, sp, #160	; 0xa0
 80041c2:	a926      	add	r1, sp, #152	; 0x98
 80041c4:	9600      	str	r6, [sp, #0]
 80041c6:	f8ad 5098 	strh.w	r5, [sp, #152]	; 0x98
 80041ca:	f8ad b09c 	strh.w	fp, [sp, #156]	; 0x9c
 80041ce:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
 80041d2:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 80041d6:	f011 fe18 	bl	8015e0a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 80041da:	9b02      	ldr	r3, [sp, #8]
 80041dc:	f8c4 32a0 	str.w	r3, [r4, #672]	; 0x2a0
    swipeContainerPadLeft.add(buttonWithIcon_LP1);
 80041e0:	4639      	mov	r1, r7
 80041e2:	ee18 0a90 	vmov	r0, s17
 80041e6:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 80041ea:	f00e faf1 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LP3.setXY(10, 104);
 80041ee:	2268      	movs	r2, #104	; 0x68
 80041f0:	ee1d 0a90 	vmov	r0, s27
 80041f4:	210a      	movs	r1, #10
 80041f6:	f7ff f9f1 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80041fa:	f04f 33ff 	mov.w	r3, #4294967295
 80041fe:	f8c4 32e4 	str.w	r3, [r4, #740]	; 0x2e4
        boundingArea = calculateBoundingArea();
 8004202:	f8d4 32b4 	ldr.w	r3, [r4, #692]	; 0x2b4
        linespace = space;
 8004206:	f8a4 52e8 	strh.w	r5, [r4, #744]	; 0x2e8
        boundingArea = calculateBoundingArea();
 800420a:	af22      	add	r7, sp, #136	; 0x88
 800420c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8004210:	ee1d 1a90 	vmov	r1, s27
 8004214:	4638      	mov	r0, r7
 8004216:	4798      	blx	r3
 8004218:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 800421c:	f504 733c 	add.w	r3, r4, #752	; 0x2f0
 8004220:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004224:	4b0a      	ldr	r3, [pc, #40]	; (8004250 <_ZN23Calibration_PadViewBaseC1Ev+0x578>)
 8004226:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textAreaCal_LP3Buffer, TEXTAREACAL_LP3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_12P5).getText());
 8004228:	f604 59f4 	addw	r9, r4, #3572	; 0xdf4
 800422c:	b92b      	cbnz	r3, 800423a <_ZN23Calibration_PadViewBaseC1Ev+0x562>
 800422e:	4b09      	ldr	r3, [pc, #36]	; (8004254 <_ZN23Calibration_PadViewBaseC1Ev+0x57c>)
 8004230:	4a09      	ldr	r2, [pc, #36]	; (8004258 <_ZN23Calibration_PadViewBaseC1Ev+0x580>)
 8004232:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004234:	4809      	ldr	r0, [pc, #36]	; (800425c <_ZN23Calibration_PadViewBaseC1Ev+0x584>)
 8004236:	f029 fb3f 	bl	802d8b8 <__assert_func>
 800423a:	4b09      	ldr	r3, [pc, #36]	; (8004260 <_ZN23Calibration_PadViewBaseC1Ev+0x588>)
 800423c:	881b      	ldrh	r3, [r3, #0]
 800423e:	2b26      	cmp	r3, #38	; 0x26
 8004240:	d812      	bhi.n	8004268 <_ZN23Calibration_PadViewBaseC1Ev+0x590>
 8004242:	4b08      	ldr	r3, [pc, #32]	; (8004264 <_ZN23Calibration_PadViewBaseC1Ev+0x58c>)
 8004244:	4a04      	ldr	r2, [pc, #16]	; (8004258 <_ZN23Calibration_PadViewBaseC1Ev+0x580>)
 8004246:	2161      	movs	r1, #97	; 0x61
 8004248:	e7f4      	b.n	8004234 <_ZN23Calibration_PadViewBaseC1Ev+0x55c>
 800424a:	bf00      	nop
 800424c:	00ac00f0 	.word	0x00ac00f0
 8004250:	200138a4 	.word	0x200138a4
 8004254:	0802f2a4 	.word	0x0802f2a4
 8004258:	0802f3a9 	.word	0x0802f3a9
 800425c:	0802f321 	.word	0x0802f321
 8004260:	200138a8 	.word	0x200138a8
 8004264:	0802f368 	.word	0x0802f368
        return texts->getText(typedTextId);
 8004268:	4bdb      	ldr	r3, [pc, #876]	; (80045d8 <_ZN23Calibration_PadViewBaseC1Ev+0x900>)
 800426a:	2126      	movs	r1, #38	; 0x26
 800426c:	6818      	ldr	r0, [r3, #0]
 800426e:	f006 f9f3 	bl	800a658 <_ZNK8touchgfx5Texts7getTextEt>
 8004272:	4ada      	ldr	r2, [pc, #872]	; (80045dc <_ZN23Calibration_PadViewBaseC1Ev+0x904>)
 8004274:	4603      	mov	r3, r0
 8004276:	210a      	movs	r1, #10
 8004278:	4648      	mov	r0, r9
 800427a:	f017 fd2f 	bl	801bcdc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_LP3.resizeToCurrentText();
 800427e:	ee1d 0a90 	vmov	r0, s27
        wc1 = value;
 8004282:	f8c4 92fc 	str.w	r9, [r4, #764]	; 0x2fc
 8004286:	f011 f8ab 	bl	80153e0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 800428a:	4bd5      	ldr	r3, [pc, #852]	; (80045e0 <_ZN23Calibration_PadViewBaseC1Ev+0x908>)
 800428c:	9329      	str	r3, [sp, #164]	; 0xa4
    textAreaCal_LP3.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH3));
 800428e:	ee1d 0a90 	vmov	r0, s27
 8004292:	2327      	movs	r3, #39	; 0x27
 8004294:	4631      	mov	r1, r6
 8004296:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 800429a:	f011 f8c1 	bl	8015420 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadLeft.add(textAreaCal_LP3);
 800429e:	ee1d 1a90 	vmov	r1, s27
 80042a2:	ee18 0a90 	vmov	r0, s17
 80042a6:	f00e fa93 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LP2.setXY(22, 68);
 80042aa:	ee1e 0a10 	vmov	r0, s28
 80042ae:	2244      	movs	r2, #68	; 0x44
 80042b0:	2116      	movs	r1, #22
 80042b2:	f7ff f993 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 80042b6:	f8d4 3300 	ldr.w	r3, [r4, #768]	; 0x300
        linespace = space;
 80042ba:	f8a4 5334 	strh.w	r5, [r4, #820]	; 0x334
        color = newColor;
 80042be:	f04f 32ff 	mov.w	r2, #4294967295
        boundingArea = calculateBoundingArea();
 80042c2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 80042c6:	f8c4 2330 	str.w	r2, [r4, #816]	; 0x330
        boundingArea = calculateBoundingArea();
 80042ca:	ee1e 1a10 	vmov	r1, s28
 80042ce:	4638      	mov	r0, r7
 80042d0:	4798      	blx	r3
 80042d2:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80042d6:	f504 734f 	add.w	r3, r4, #828	; 0x33c
 80042da:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80042de:	4ac1      	ldr	r2, [pc, #772]	; (80045e4 <_ZN23Calibration_PadViewBaseC1Ev+0x90c>)
 80042e0:	6813      	ldr	r3, [r2, #0]
    Unicode::snprintf(textAreaCal_LP2Buffer, TEXTAREACAL_LP2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_01G5).getText());
 80042e2:	f604 6908 	addw	r9, r4, #3592	; 0xe08
 80042e6:	2b00      	cmp	r3, #0
 80042e8:	d0a1      	beq.n	800422e <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80042ea:	4abf      	ldr	r2, [pc, #764]	; (80045e8 <_ZN23Calibration_PadViewBaseC1Ev+0x910>)
 80042ec:	8813      	ldrh	r3, [r2, #0]
 80042ee:	2b28      	cmp	r3, #40	; 0x28
 80042f0:	d9a7      	bls.n	8004242 <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 80042f2:	48b9      	ldr	r0, [pc, #740]	; (80045d8 <_ZN23Calibration_PadViewBaseC1Ev+0x900>)
 80042f4:	2128      	movs	r1, #40	; 0x28
 80042f6:	6800      	ldr	r0, [r0, #0]
 80042f8:	f006 f9ae 	bl	800a658 <_ZNK8touchgfx5Texts7getTextEt>
 80042fc:	4ab7      	ldr	r2, [pc, #732]	; (80045dc <_ZN23Calibration_PadViewBaseC1Ev+0x904>)
 80042fe:	4603      	mov	r3, r0
 8004300:	210a      	movs	r1, #10
 8004302:	4648      	mov	r0, r9
 8004304:	f017 fcea 	bl	801bcdc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_LP2.resizeToCurrentText();
 8004308:	ee1e 0a10 	vmov	r0, s28
 800430c:	f8c4 9348 	str.w	r9, [r4, #840]	; 0x348
 8004310:	f011 f866 	bl	80153e0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8004314:	4bb2      	ldr	r3, [pc, #712]	; (80045e0 <_ZN23Calibration_PadViewBaseC1Ev+0x908>)
 8004316:	9329      	str	r3, [sp, #164]	; 0xa4
    textAreaCal_LP2.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH2));
 8004318:	ee1e 0a10 	vmov	r0, s28
 800431c:	2329      	movs	r3, #41	; 0x29
 800431e:	4631      	mov	r1, r6
 8004320:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004324:	f011 f87c 	bl	8015420 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadLeft.add(textAreaCal_LP2);
 8004328:	ee1e 1a10 	vmov	r1, s28
 800432c:	ee18 0a90 	vmov	r0, s17
 8004330:	f00e fa4e 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LP1.setXY(22, 32);
 8004334:	2220      	movs	r2, #32
 8004336:	ee1e 0a90 	vmov	r0, s29
 800433a:	2116      	movs	r1, #22
 800433c:	f7ff f94e 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8004340:	f8d4 334c 	ldr.w	r3, [r4, #844]	; 0x34c
        linespace = space;
 8004344:	f8a4 5380 	strh.w	r5, [r4, #896]	; 0x380
        color = newColor;
 8004348:	f04f 31ff 	mov.w	r1, #4294967295
        boundingArea = calculateBoundingArea();
 800434c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8004350:	f8c4 137c 	str.w	r1, [r4, #892]	; 0x37c
        boundingArea = calculateBoundingArea();
 8004354:	4638      	mov	r0, r7
 8004356:	ee1e 1a90 	vmov	r1, s29
 800435a:	4798      	blx	r3
 800435c:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8004360:	f504 7362 	add.w	r3, r4, #904	; 0x388
 8004364:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004368:	499e      	ldr	r1, [pc, #632]	; (80045e4 <_ZN23Calibration_PadViewBaseC1Ev+0x90c>)
 800436a:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(textAreaCal_LP1Buffer, TEXTAREACAL_LP1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_TG06).getText());
 800436c:	f604 691c 	addw	r9, r4, #3612	; 0xe1c
 8004370:	2b00      	cmp	r3, #0
 8004372:	f43f af5c 	beq.w	800422e <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004376:	4a9c      	ldr	r2, [pc, #624]	; (80045e8 <_ZN23Calibration_PadViewBaseC1Ev+0x910>)
 8004378:	8813      	ldrh	r3, [r2, #0]
 800437a:	2b2a      	cmp	r3, #42	; 0x2a
 800437c:	f67f af61 	bls.w	8004242 <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 8004380:	4895      	ldr	r0, [pc, #596]	; (80045d8 <_ZN23Calibration_PadViewBaseC1Ev+0x900>)
 8004382:	212a      	movs	r1, #42	; 0x2a
 8004384:	6800      	ldr	r0, [r0, #0]
 8004386:	f006 f967 	bl	800a658 <_ZNK8touchgfx5Texts7getTextEt>
 800438a:	4a94      	ldr	r2, [pc, #592]	; (80045dc <_ZN23Calibration_PadViewBaseC1Ev+0x904>)
 800438c:	4603      	mov	r3, r0
 800438e:	210a      	movs	r1, #10
 8004390:	4648      	mov	r0, r9
 8004392:	f017 fca3 	bl	801bcdc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_LP1.resizeToCurrentText();
 8004396:	ee1e 0a90 	vmov	r0, s29
 800439a:	f8c4 9394 	str.w	r9, [r4, #916]	; 0x394
 800439e:	f011 f81f 	bl	80153e0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80043a2:	4b8f      	ldr	r3, [pc, #572]	; (80045e0 <_ZN23Calibration_PadViewBaseC1Ev+0x908>)
 80043a4:	9329      	str	r3, [sp, #164]	; 0xa4
    textAreaCal_LP1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH1));
 80043a6:	ee1e 0a90 	vmov	r0, s29
 80043aa:	2331      	movs	r3, #49	; 0x31
 80043ac:	4631      	mov	r1, r6
 80043ae:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
    line1_LP.setPosition(0, 15, 240, 10);
 80043b2:	f04f 090a 	mov.w	r9, #10
    textAreaCal_LP1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH1));
 80043b6:	f011 f833 	bl	8015420 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadLeft.add(textAreaCal_LP1);
 80043ba:	ee1e 1a90 	vmov	r1, s29
 80043be:	ee18 0a90 	vmov	r0, s17
 80043c2:	f00e fa05 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_LP.setPosition(0, 15, 240, 10);
 80043c6:	23f0      	movs	r3, #240	; 0xf0
 80043c8:	ee1a 0a90 	vmov	r0, s21
 80043cc:	220f      	movs	r2, #15
 80043ce:	4629      	mov	r1, r5
 80043d0:	f8cd 9000 	str.w	r9, [sp]
 80043d4:	f7ff f90f 	bl	80035f6 <_ZN8touchgfx8Drawable11setPositionEssss>
 80043d8:	f04f 3cff 	mov.w	ip, #4294967295
        canvasPainter = &painter;
 80043dc:	991c      	ldr	r1, [sp, #112]	; 0x70
 80043de:	f8c4 c414 	str.w	ip, [r4, #1044]	; 0x414
    line1_LP.setStart(5, 5);
 80043e2:	2205      	movs	r2, #5
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
 80043e4:	f8a4 c418 	strh.w	ip, [r4, #1048]	; 0x418
 80043e8:	ee1a 0a90 	vmov	r0, s21
 80043ec:	f8c4 13c0 	str.w	r1, [r4, #960]	; 0x3c0
 80043f0:	4611      	mov	r1, r2
 80043f2:	f7ff fc59 	bl	8003ca8 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_LP.setEnd(235, 5);
 80043f6:	2205      	movs	r2, #5
 80043f8:	ee1a 0a90 	vmov	r0, s21
 80043fc:	21eb      	movs	r1, #235	; 0xeb
 80043fe:	f7ff fc57 	bl	8003cb0 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_LP.setLineWidth(1);
 8004402:	ee1a 0a90 	vmov	r0, s21
 8004406:	4659      	mov	r1, fp
 8004408:	f7ff fc56 	bl	8003cb8 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_LP.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800440c:	ee1a 0a90 	vmov	r0, s21
 8004410:	4659      	mov	r1, fp
 8004412:	f010 fbd5 	bl	8014bc0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    swipeContainerPadLeft.add(line1_LP);
 8004416:	ee1a 1a90 	vmov	r1, s21
 800441a:	ee18 0a90 	vmov	r0, s17
 800441e:	f00e f9d7 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1_LP.setXY(96, 0);
 8004422:	462a      	mov	r2, r5
 8004424:	9807      	ldr	r0, [sp, #28]
 8004426:	2160      	movs	r1, #96	; 0x60
 8004428:	f7ff f8d8 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800442c:	f04f 3eff 	mov.w	lr, #4294967295
 8004430:	f8c4 e44c 	str.w	lr, [r4, #1100]	; 0x44c
        boundingArea = calculateBoundingArea();
 8004434:	4638      	mov	r0, r7
 8004436:	9907      	ldr	r1, [sp, #28]
        linespace = space;
 8004438:	f8a4 5450 	strh.w	r5, [r4, #1104]	; 0x450
        boundingArea = calculateBoundingArea();
 800443c:	f010 fd56 	bl	8014eec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004440:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8004444:	f504 638b 	add.w	r3, r4, #1112	; 0x458
 8004448:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800444c:	4b64      	ldr	r3, [pc, #400]	; (80045e0 <_ZN23Calibration_PadViewBaseC1Ev+0x908>)
    textArea1_LP.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q2TU));
 800444e:	9807      	ldr	r0, [sp, #28]
 8004450:	9329      	str	r3, [sp, #164]	; 0xa4
 8004452:	4631      	mov	r1, r6
 8004454:	2325      	movs	r3, #37	; 0x25
 8004456:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 800445a:	f010 ffe1 	bl	8015420 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadLeft.add(textArea1_LP);
 800445e:	9907      	ldr	r1, [sp, #28]
 8004460:	ee18 0a90 	vmov	r0, s17
 8004464:	f00e f9b4 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    swipeContainer1.add(swipeContainerPadLeft);
 8004468:	ee18 1a90 	vmov	r1, s17
 800446c:	ee18 0a10 	vmov	r0, s16
 8004470:	f00e fe91 	bl	8013196 <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>
 8004474:	4b5d      	ldr	r3, [pc, #372]	; (80045ec <_ZN23Calibration_PadViewBaseC1Ev+0x914>)
    buttonWithIcon_RP3.setXY(194, 97);
 8004476:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8004478:	f8c4 346c 	str.w	r3, [r4, #1132]	; 0x46c
 800447c:	2261      	movs	r2, #97	; 0x61
 800447e:	21c2      	movs	r1, #194	; 0xc2
 8004480:	f7ff f8ac 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RP3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8004484:	f10d 0ea0 	add.w	lr, sp, #160	; 0xa0
 8004488:	4673      	mov	r3, lr
 800448a:	f10d 0e9c 	add.w	lr, sp, #156	; 0x9c
 800448e:	4672      	mov	r2, lr
 8004490:	f10d 0e98 	add.w	lr, sp, #152	; 0x98
 8004494:	4671      	mov	r1, lr
 8004496:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8004498:	9600      	str	r6, [sp, #0]
 800449a:	f8ad 5098 	strh.w	r5, [sp, #152]	; 0x98
 800449e:	f8ad b09c 	strh.w	fp, [sp, #156]	; 0x9c
 80044a2:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
 80044a6:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 80044aa:	f011 fcae 	bl	8015e0a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 80044ae:	9f02      	ldr	r7, [sp, #8]
    swipeContainerPadRight.add(buttonWithIcon_RP3);
 80044b0:	9913      	ldr	r1, [sp, #76]	; 0x4c
 80044b2:	f8c4 74b8 	str.w	r7, [r4, #1208]	; 0x4b8
 80044b6:	4650      	mov	r0, sl
 80044b8:	f8c4 54c8 	str.w	r5, [r4, #1224]	; 0x4c8
 80044bc:	f00e f988 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_RP2.setXY(194, 61);
 80044c0:	9814      	ldr	r0, [sp, #80]	; 0x50
 80044c2:	223d      	movs	r2, #61	; 0x3d
 80044c4:	21c2      	movs	r1, #194	; 0xc2
 80044c6:	f7ff f889 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RP2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 80044ca:	f10d 0ea0 	add.w	lr, sp, #160	; 0xa0
 80044ce:	4673      	mov	r3, lr
 80044d0:	f10d 0e9c 	add.w	lr, sp, #156	; 0x9c
 80044d4:	4672      	mov	r2, lr
 80044d6:	f10d 0e98 	add.w	lr, sp, #152	; 0x98
 80044da:	4671      	mov	r1, lr
 80044dc:	9814      	ldr	r0, [sp, #80]	; 0x50
 80044de:	9600      	str	r6, [sp, #0]
 80044e0:	f8ad 5098 	strh.w	r5, [sp, #152]	; 0x98
 80044e4:	f8ad b09c 	strh.w	fp, [sp, #156]	; 0x9c
 80044e8:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
 80044ec:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 80044f0:	f011 fc8b 	bl	8015e0a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 80044f4:	9f02      	ldr	r7, [sp, #8]
    swipeContainerPadRight.add(buttonWithIcon_RP2);
 80044f6:	9914      	ldr	r1, [sp, #80]	; 0x50
 80044f8:	f8c4 74f4 	str.w	r7, [r4, #1268]	; 0x4f4
 80044fc:	4650      	mov	r0, sl
 80044fe:	f8c4 5504 	str.w	r5, [r4, #1284]	; 0x504
 8004502:	f00e f965 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_RP1.setXY(194, 25);
 8004506:	9815      	ldr	r0, [sp, #84]	; 0x54
 8004508:	2219      	movs	r2, #25
 800450a:	21c2      	movs	r1, #194	; 0xc2
 800450c:	f7ff f866 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RP1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8004510:	f10d 0ea0 	add.w	lr, sp, #160	; 0xa0
 8004514:	4673      	mov	r3, lr
 8004516:	f10d 0e9c 	add.w	lr, sp, #156	; 0x9c
 800451a:	4672      	mov	r2, lr
 800451c:	f10d 0e98 	add.w	lr, sp, #152	; 0x98
 8004520:	4671      	mov	r1, lr
 8004522:	9815      	ldr	r0, [sp, #84]	; 0x54
 8004524:	9600      	str	r6, [sp, #0]
 8004526:	f8ad 5098 	strh.w	r5, [sp, #152]	; 0x98
 800452a:	f8ad b09c 	strh.w	fp, [sp, #156]	; 0x9c
 800452e:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
 8004532:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 8004536:	f011 fc68 	bl	8015e0a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 800453a:	9f02      	ldr	r7, [sp, #8]
    swipeContainerPadRight.add(buttonWithIcon_RP1);
 800453c:	9915      	ldr	r1, [sp, #84]	; 0x54
 800453e:	f8c4 7530 	str.w	r7, [r4, #1328]	; 0x530
 8004542:	4650      	mov	r0, sl
 8004544:	f8c4 5540 	str.w	r5, [r4, #1344]	; 0x540
 8004548:	f00e f942 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_RP3.setXY(10, 104);
 800454c:	2268      	movs	r2, #104	; 0x68
 800454e:	4649      	mov	r1, r9
 8004550:	9808      	ldr	r0, [sp, #32]
 8004552:	f7ff f843 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004556:	f04f 3eff 	mov.w	lr, #4294967295
 800455a:	f8c4 e574 	str.w	lr, [r4, #1396]	; 0x574
        linespace = space;
 800455e:	f8a4 5578 	strh.w	r5, [r4, #1400]	; 0x578
        return TextArea::BoundingArea();
 8004562:	4630      	mov	r0, r6
 8004564:	f7ff f8c2 	bl	80036ec <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8004568:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 800456c:	f504 63b0 	add.w	r3, r4, #1408	; 0x580
 8004570:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004574:	491b      	ldr	r1, [pc, #108]	; (80045e4 <_ZN23Calibration_PadViewBaseC1Ev+0x90c>)
 8004576:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(textAreaCal_RP3Buffer, TEXTAREACAL_RP3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_8T3Q).getText());
 8004578:	f504 6763 	add.w	r7, r4, #3632	; 0xe30
 800457c:	2b00      	cmp	r3, #0
 800457e:	f43f ae56 	beq.w	800422e <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004582:	4a19      	ldr	r2, [pc, #100]	; (80045e8 <_ZN23Calibration_PadViewBaseC1Ev+0x910>)
 8004584:	8813      	ldrh	r3, [r2, #0]
 8004586:	2b2f      	cmp	r3, #47	; 0x2f
 8004588:	f67f ae5b 	bls.w	8004242 <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 800458c:	4812      	ldr	r0, [pc, #72]	; (80045d8 <_ZN23Calibration_PadViewBaseC1Ev+0x900>)
 800458e:	212f      	movs	r1, #47	; 0x2f
 8004590:	6800      	ldr	r0, [r0, #0]
 8004592:	f006 f861 	bl	800a658 <_ZNK8touchgfx5Texts7getTextEt>
 8004596:	4a11      	ldr	r2, [pc, #68]	; (80045dc <_ZN23Calibration_PadViewBaseC1Ev+0x904>)
 8004598:	4603      	mov	r3, r0
 800459a:	4649      	mov	r1, r9
 800459c:	4638      	mov	r0, r7
 800459e:	f017 fb9d 	bl	801bcdc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RP3.resizeToCurrentText();
 80045a2:	9808      	ldr	r0, [sp, #32]
        wc1 = value;
 80045a4:	f8c4 758c 	str.w	r7, [r4, #1420]	; 0x58c
 80045a8:	f010 ff1a 	bl	80153e0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80045ac:	4f0c      	ldr	r7, [pc, #48]	; (80045e0 <_ZN23Calibration_PadViewBaseC1Ev+0x908>)
    textAreaCal_RP3.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_RH3));
 80045ae:	9808      	ldr	r0, [sp, #32]
 80045b0:	9729      	str	r7, [sp, #164]	; 0xa4
 80045b2:	2330      	movs	r3, #48	; 0x30
 80045b4:	4631      	mov	r1, r6
 80045b6:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 80045ba:	f010 ff31 	bl	8015420 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadRight.add(textAreaCal_RP3);
 80045be:	9908      	ldr	r1, [sp, #32]
 80045c0:	4650      	mov	r0, sl
 80045c2:	f00e f905 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_RP2.setXY(22, 68);
 80045c6:	2244      	movs	r2, #68	; 0x44
 80045c8:	2116      	movs	r1, #22
 80045ca:	9809      	ldr	r0, [sp, #36]	; 0x24
 80045cc:	f7ff f806 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80045d0:	f04f 33ff 	mov.w	r3, #4294967295
 80045d4:	e00c      	b.n	80045f0 <_ZN23Calibration_PadViewBaseC1Ev+0x918>
 80045d6:	bf00      	nop
 80045d8:	200138b0 	.word	0x200138b0
 80045dc:	0802f3e1 	.word	0x0802f3e1
 80045e0:	0802f454 	.word	0x0802f454
 80045e4:	200138a4 	.word	0x200138a4
 80045e8:	200138a8 	.word	0x200138a8
 80045ec:	00ac00f0 	.word	0x00ac00f0
 80045f0:	f8c4 35c0 	str.w	r3, [r4, #1472]	; 0x5c0
        linespace = space;
 80045f4:	f8a4 55c4 	strh.w	r5, [r4, #1476]	; 0x5c4
        return TextArea::BoundingArea();
 80045f8:	4630      	mov	r0, r6
 80045fa:	f7ff f877 	bl	80036ec <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 80045fe:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8004602:	f204 53cc 	addw	r3, r4, #1484	; 0x5cc
 8004606:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800460a:	49da      	ldr	r1, [pc, #872]	; (8004974 <_ZN23Calibration_PadViewBaseC1Ev+0xc9c>)
 800460c:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(textAreaCal_RP2Buffer, TEXTAREACAL_RP2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_NZZI).getText());
 800460e:	f604 6544 	addw	r5, r4, #3652	; 0xe44
 8004612:	2b00      	cmp	r3, #0
 8004614:	f43f ae0b 	beq.w	800422e <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004618:	4ad7      	ldr	r2, [pc, #860]	; (8004978 <_ZN23Calibration_PadViewBaseC1Ev+0xca0>)
 800461a:	8813      	ldrh	r3, [r2, #0]
 800461c:	2b2d      	cmp	r3, #45	; 0x2d
 800461e:	f67f ae10 	bls.w	8004242 <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 8004622:	48d6      	ldr	r0, [pc, #856]	; (800497c <_ZN23Calibration_PadViewBaseC1Ev+0xca4>)
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004624:	f8df b34c 	ldr.w	fp, [pc, #844]	; 8004974 <_ZN23Calibration_PadViewBaseC1Ev+0xc9c>
        return texts->getText(typedTextId);
 8004628:	6800      	ldr	r0, [r0, #0]
 800462a:	212d      	movs	r1, #45	; 0x2d
 800462c:	f006 f814 	bl	800a658 <_ZNK8touchgfx5Texts7getTextEt>
 8004630:	4ad3      	ldr	r2, [pc, #844]	; (8004980 <_ZN23Calibration_PadViewBaseC1Ev+0xca8>)
 8004632:	4603      	mov	r3, r0
 8004634:	4649      	mov	r1, r9
 8004636:	4628      	mov	r0, r5
 8004638:	f017 fb50 	bl	801bcdc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RP2.resizeToCurrentText();
 800463c:	9809      	ldr	r0, [sp, #36]	; 0x24
        wc1 = value;
 800463e:	f8c4 55d8 	str.w	r5, [r4, #1496]	; 0x5d8
    textAreaCal_RP2.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_RH2));
 8004642:	ad29      	add	r5, sp, #164	; 0xa4
    textAreaCal_RP2.resizeToCurrentText();
 8004644:	f010 fecc 	bl	80153e0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8004648:	232e      	movs	r3, #46	; 0x2e
    textAreaCal_RP2.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_RH2));
 800464a:	9809      	ldr	r0, [sp, #36]	; 0x24
 800464c:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004650:	4629      	mov	r1, r5
 8004652:	9729      	str	r7, [sp, #164]	; 0xa4
 8004654:	f010 fee4 	bl	8015420 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadRight.add(textAreaCal_RP2);
 8004658:	9909      	ldr	r1, [sp, #36]	; 0x24
 800465a:	4650      	mov	r0, sl
 800465c:	f00e f8b8 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8004660:	f04f 36ff 	mov.w	r6, #4294967295
    textAreaCal_RP1.setXY(22, 32);
 8004664:	2220      	movs	r2, #32
 8004666:	2116      	movs	r1, #22
 8004668:	980a      	ldr	r0, [sp, #40]	; 0x28
 800466a:	f7fe ffb7 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 800466e:	f8c4 660c 	str.w	r6, [r4, #1548]	; 0x60c
        linespace = space;
 8004672:	2600      	movs	r6, #0
 8004674:	f8a4 6610 	strh.w	r6, [r4, #1552]	; 0x610
        return TextArea::BoundingArea();
 8004678:	4628      	mov	r0, r5
 800467a:	f7ff f837 	bl	80036ec <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 800467e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004682:	f504 63c3 	add.w	r3, r4, #1560	; 0x618
 8004686:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800468a:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_RP1Buffer, TEXTAREACAL_RP1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_XVN8).getText());
 800468e:	f604 6758 	addw	r7, r4, #3672	; 0xe58
 8004692:	2b00      	cmp	r3, #0
 8004694:	f43f adcb 	beq.w	800422e <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004698:	4ab7      	ldr	r2, [pc, #732]	; (8004978 <_ZN23Calibration_PadViewBaseC1Ev+0xca0>)
 800469a:	8813      	ldrh	r3, [r2, #0]
 800469c:	2b2c      	cmp	r3, #44	; 0x2c
 800469e:	f67f add0 	bls.w	8004242 <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 80046a2:	48b6      	ldr	r0, [pc, #728]	; (800497c <_ZN23Calibration_PadViewBaseC1Ev+0xca4>)
 80046a4:	212c      	movs	r1, #44	; 0x2c
 80046a6:	6800      	ldr	r0, [r0, #0]
 80046a8:	f005 ffd6 	bl	800a658 <_ZNK8touchgfx5Texts7getTextEt>
 80046ac:	4ab4      	ldr	r2, [pc, #720]	; (8004980 <_ZN23Calibration_PadViewBaseC1Ev+0xca8>)
 80046ae:	4603      	mov	r3, r0
 80046b0:	4649      	mov	r1, r9
 80046b2:	4638      	mov	r0, r7
 80046b4:	f017 fb12 	bl	801bcdc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RP1.resizeToCurrentText();
 80046b8:	980a      	ldr	r0, [sp, #40]	; 0x28
        wc1 = value;
 80046ba:	f8c4 7624 	str.w	r7, [r4, #1572]	; 0x624
 80046be:	f010 fe8f 	bl	80153e0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80046c2:	4fb0      	ldr	r7, [pc, #704]	; (8004984 <_ZN23Calibration_PadViewBaseC1Ev+0xcac>)
    textAreaCal_RP1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH1));
 80046c4:	980a      	ldr	r0, [sp, #40]	; 0x28
 80046c6:	9729      	str	r7, [sp, #164]	; 0xa4
 80046c8:	f04f 0e31 	mov.w	lr, #49	; 0x31
 80046cc:	4629      	mov	r1, r5
 80046ce:	f8ad e0a8 	strh.w	lr, [sp, #168]	; 0xa8
 80046d2:	f010 fea5 	bl	8015420 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadRight.add(textAreaCal_RP1);
 80046d6:	4650      	mov	r0, sl
 80046d8:	990a      	ldr	r1, [sp, #40]	; 0x28
 80046da:	f00e f879 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_RP.setPosition(0, 15, 240, 10);
 80046de:	ee1b 0a10 	vmov	r0, s22
 80046e2:	23f0      	movs	r3, #240	; 0xf0
 80046e4:	220f      	movs	r2, #15
 80046e6:	4631      	mov	r1, r6
 80046e8:	f8cd 9000 	str.w	r9, [sp]
 80046ec:	f7fe ff83 	bl	80035f6 <_ZN8touchgfx8Drawable11setPositionEssss>
 80046f0:	f04f 33ff 	mov.w	r3, #4294967295
 80046f4:	f04f 3cff 	mov.w	ip, #4294967295
    line1_RP.setStart(5, 5);
 80046f8:	2205      	movs	r2, #5
 80046fa:	f8c4 36a4 	str.w	r3, [r4, #1700]	; 0x6a4
 80046fe:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8004700:	f8a4 c6a8 	strh.w	ip, [r4, #1704]	; 0x6a8
 8004704:	f8c4 3650 	str.w	r3, [r4, #1616]	; 0x650
 8004708:	4611      	mov	r1, r2
 800470a:	ee1b 0a10 	vmov	r0, s22
 800470e:	f7ff facb 	bl	8003ca8 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_RP.setEnd(235, 5);
 8004712:	2205      	movs	r2, #5
 8004714:	ee1b 0a10 	vmov	r0, s22
 8004718:	21eb      	movs	r1, #235	; 0xeb
 800471a:	f7ff fac9 	bl	8003cb0 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_RP.setLineWidth(1);
 800471e:	ee1b 0a10 	vmov	r0, s22
 8004722:	2101      	movs	r1, #1
 8004724:	f7ff fac8 	bl	8003cb8 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_RP.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8004728:	ee1b 0a10 	vmov	r0, s22
 800472c:	2101      	movs	r1, #1
 800472e:	f010 fa47 	bl	8014bc0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    swipeContainerPadRight.add(line1_RP);
 8004732:	4650      	mov	r0, sl
 8004734:	ee1b 1a10 	vmov	r1, s22
 8004738:	f00e f84a 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1_RP.setXY(92, 0);
 800473c:	4632      	mov	r2, r6
 800473e:	ee1f 0a10 	vmov	r0, s30
 8004742:	215c      	movs	r1, #92	; 0x5c
 8004744:	f7fe ff4a 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004748:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 800474c:	f10d 0c88 	add.w	ip, sp, #136	; 0x88
 8004750:	4660      	mov	r0, ip
 8004752:	ee1f 1a10 	vmov	r1, s30
        color = newColor;
 8004756:	f8c4 36dc 	str.w	r3, [r4, #1756]	; 0x6dc
        linespace = space;
 800475a:	f8a4 66e0 	strh.w	r6, [r4, #1760]	; 0x6e0
        boundingArea = calculateBoundingArea();
 800475e:	f010 fbc5 	bl	8014eec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004762:	f10d 0c88 	add.w	ip, sp, #136	; 0x88
 8004766:	e89c 0007 	ldmia.w	ip, {r0, r1, r2}
 800476a:	ee1f 3a10 	vmov	r3, s30
 800476e:	333c      	adds	r3, #60	; 0x3c
 8004770:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004774:	232b      	movs	r3, #43	; 0x2b
    textArea1_RP.setTypedText(touchgfx::TypedText(T___SINGLEUSE_L8ZM));
 8004776:	ee1f 0a10 	vmov	r0, s30
 800477a:	4629      	mov	r1, r5
 800477c:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004780:	9729      	str	r7, [sp, #164]	; 0xa4
 8004782:	f010 fe4d 	bl	8015420 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadRight.add(textArea1_RP);
 8004786:	4650      	mov	r0, sl
 8004788:	ee1f 1a10 	vmov	r1, s30
 800478c:	f00e f820 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    swipeContainer1.add(swipeContainerPadRight);
 8004790:	4651      	mov	r1, sl
 8004792:	ee18 0a10 	vmov	r0, s16
 8004796:	f00e fcfe 	bl	8013196 <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>
 800479a:	497b      	ldr	r1, [pc, #492]	; (8004988 <_ZN23Calibration_PadViewBaseC1Ev+0xcb0>)
    buttonWithIcon_LH3.setXY(194, 97);
 800479c:	9816      	ldr	r0, [sp, #88]	; 0x58
 800479e:	f8c4 16fc 	str.w	r1, [r4, #1788]	; 0x6fc
 80047a2:	2261      	movs	r2, #97	; 0x61
 80047a4:	21c2      	movs	r1, #194	; 0xc2
 80047a6:	f7fe ff19 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_LH3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 80047aa:	f10d 0ca0 	add.w	ip, sp, #160	; 0xa0
 80047ae:	4663      	mov	r3, ip
 80047b0:	f10d 0c9c 	add.w	ip, sp, #156	; 0x9c
 80047b4:	4662      	mov	r2, ip
 80047b6:	f10d 0c98 	add.w	ip, sp, #152	; 0x98
 80047ba:	2709      	movs	r7, #9
 80047bc:	4661      	mov	r1, ip
 80047be:	f04f 0801 	mov.w	r8, #1
 80047c2:	9816      	ldr	r0, [sp, #88]	; 0x58
 80047c4:	9500      	str	r5, [sp, #0]
 80047c6:	f8ad 6098 	strh.w	r6, [sp, #152]	; 0x98
 80047ca:	f8ad 809c 	strh.w	r8, [sp, #156]	; 0x9c
 80047ce:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
 80047d2:	f8ad 70a4 	strh.w	r7, [sp, #164]	; 0xa4
 80047d6:	f011 fb18 	bl	8015e0a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 80047da:	9b02      	ldr	r3, [sp, #8]
 80047dc:	f8c4 3748 	str.w	r3, [r4, #1864]	; 0x748
    swipeContainerHallLeft.add(buttonWithIcon_LH3);
 80047e0:	9916      	ldr	r1, [sp, #88]	; 0x58
 80047e2:	f8c4 6758 	str.w	r6, [r4, #1880]	; 0x758
 80047e6:	ee19 0a10 	vmov	r0, s18
 80047ea:	f00d fff1 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_LH2.setXY(194, 61);
 80047ee:	9817      	ldr	r0, [sp, #92]	; 0x5c
 80047f0:	223d      	movs	r2, #61	; 0x3d
 80047f2:	21c2      	movs	r1, #194	; 0xc2
 80047f4:	f7fe fef2 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_LH2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 80047f8:	f10d 0ca0 	add.w	ip, sp, #160	; 0xa0
 80047fc:	4663      	mov	r3, ip
 80047fe:	f10d 0c9c 	add.w	ip, sp, #156	; 0x9c
 8004802:	4662      	mov	r2, ip
 8004804:	f10d 0c98 	add.w	ip, sp, #152	; 0x98
 8004808:	4661      	mov	r1, ip
 800480a:	9817      	ldr	r0, [sp, #92]	; 0x5c
 800480c:	9500      	str	r5, [sp, #0]
 800480e:	f8ad 6098 	strh.w	r6, [sp, #152]	; 0x98
 8004812:	f8ad 809c 	strh.w	r8, [sp, #156]	; 0x9c
 8004816:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
 800481a:	f8ad 70a4 	strh.w	r7, [sp, #164]	; 0xa4
 800481e:	f011 faf4 	bl	8015e0a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8004822:	9b02      	ldr	r3, [sp, #8]
 8004824:	f8c4 3784 	str.w	r3, [r4, #1924]	; 0x784
    swipeContainerHallLeft.add(buttonWithIcon_LH2);
 8004828:	9917      	ldr	r1, [sp, #92]	; 0x5c
 800482a:	f8c4 6794 	str.w	r6, [r4, #1940]	; 0x794
 800482e:	ee19 0a10 	vmov	r0, s18
 8004832:	f00d ffcd 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_LH1.setXY(194, 25);
 8004836:	9818      	ldr	r0, [sp, #96]	; 0x60
 8004838:	2219      	movs	r2, #25
 800483a:	21c2      	movs	r1, #194	; 0xc2
 800483c:	f7fe fece 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_LH1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8004840:	f10d 0ca0 	add.w	ip, sp, #160	; 0xa0
 8004844:	4663      	mov	r3, ip
 8004846:	f10d 0c9c 	add.w	ip, sp, #156	; 0x9c
 800484a:	4662      	mov	r2, ip
 800484c:	f10d 0c98 	add.w	ip, sp, #152	; 0x98
 8004850:	4661      	mov	r1, ip
 8004852:	9818      	ldr	r0, [sp, #96]	; 0x60
 8004854:	9500      	str	r5, [sp, #0]
 8004856:	f8ad 6098 	strh.w	r6, [sp, #152]	; 0x98
 800485a:	f8ad 809c 	strh.w	r8, [sp, #156]	; 0x9c
 800485e:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
 8004862:	f8ad 70a4 	strh.w	r7, [sp, #164]	; 0xa4
 8004866:	f011 fad0 	bl	8015e0a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 800486a:	9b02      	ldr	r3, [sp, #8]
 800486c:	f8c4 37c0 	str.w	r3, [r4, #1984]	; 0x7c0
    swipeContainerHallLeft.add(buttonWithIcon_LH1);
 8004870:	9918      	ldr	r1, [sp, #96]	; 0x60
 8004872:	f8c4 67d0 	str.w	r6, [r4, #2000]	; 0x7d0
 8004876:	ee19 0a10 	vmov	r0, s18
 800487a:	f00d ffa9 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LH3.setXY(10, 104);
 800487e:	2268      	movs	r2, #104	; 0x68
 8004880:	4649      	mov	r1, r9
 8004882:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8004884:	f7fe feaa 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004888:	f04f 3cff 	mov.w	ip, #4294967295
 800488c:	f8c4 c804 	str.w	ip, [r4, #2052]	; 0x804
        linespace = space;
 8004890:	f8a4 6808 	strh.w	r6, [r4, #2056]	; 0x808
        return TextArea::BoundingArea();
 8004894:	4628      	mov	r0, r5
 8004896:	f7fe ff29 	bl	80036ec <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 800489a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800489e:	f504 6301 	add.w	r3, r4, #2064	; 0x810
 80048a2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80048a6:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_LH3Buffer, TEXTAREACAL_LH3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_4NSV).getText());
 80048aa:	f604 6a6c 	addw	sl, r4, #3692	; 0xe6c
 80048ae:	2b00      	cmp	r3, #0
 80048b0:	f43f acbd 	beq.w	800422e <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80048b4:	4a30      	ldr	r2, [pc, #192]	; (8004978 <_ZN23Calibration_PadViewBaseC1Ev+0xca0>)
 80048b6:	8813      	ldrh	r3, [r2, #0]
 80048b8:	2b24      	cmp	r3, #36	; 0x24
 80048ba:	f67f acc2 	bls.w	8004242 <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 80048be:	482f      	ldr	r0, [pc, #188]	; (800497c <_ZN23Calibration_PadViewBaseC1Ev+0xca4>)
 80048c0:	2124      	movs	r1, #36	; 0x24
 80048c2:	6800      	ldr	r0, [r0, #0]
 80048c4:	f005 fec8 	bl	800a658 <_ZNK8touchgfx5Texts7getTextEt>
 80048c8:	4a2d      	ldr	r2, [pc, #180]	; (8004980 <_ZN23Calibration_PadViewBaseC1Ev+0xca8>)
 80048ca:	4603      	mov	r3, r0
 80048cc:	4649      	mov	r1, r9
 80048ce:	4650      	mov	r0, sl
 80048d0:	f017 fa04 	bl	801bcdc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_LH3.resizeToCurrentText();
 80048d4:	980b      	ldr	r0, [sp, #44]	; 0x2c
        wc1 = value;
 80048d6:	f8c4 a81c 	str.w	sl, [r4, #2076]	; 0x81c
 80048da:	f010 fd81 	bl	80153e0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80048de:	4b29      	ldr	r3, [pc, #164]	; (8004984 <_ZN23Calibration_PadViewBaseC1Ev+0xcac>)
    textAreaCal_LH3.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH3));
 80048e0:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80048e2:	9329      	str	r3, [sp, #164]	; 0xa4
 80048e4:	4629      	mov	r1, r5
 80048e6:	2327      	movs	r3, #39	; 0x27
 80048e8:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 80048ec:	f010 fd98 	bl	8015420 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallLeft.add(textAreaCal_LH3);
 80048f0:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80048f2:	ee19 0a10 	vmov	r0, s18
 80048f6:	f00d ff6b 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LH2.setXY(22, 68);
 80048fa:	2244      	movs	r2, #68	; 0x44
 80048fc:	2116      	movs	r1, #22
 80048fe:	980c      	ldr	r0, [sp, #48]	; 0x30
 8004900:	f7fe fe6c 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004904:	f04f 3cff 	mov.w	ip, #4294967295
 8004908:	f8c4 c850 	str.w	ip, [r4, #2128]	; 0x850
        linespace = space;
 800490c:	f8a4 6854 	strh.w	r6, [r4, #2132]	; 0x854
        return TextArea::BoundingArea();
 8004910:	4628      	mov	r0, r5
 8004912:	f7fe feeb 	bl	80036ec <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8004916:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800491a:	f604 035c 	addw	r3, r4, #2140	; 0x85c
 800491e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004922:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_LH2Buffer, TEXTAREACAL_LH2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_M8NH).getText());
 8004926:	f504 6a68 	add.w	sl, r4, #3712	; 0xe80
 800492a:	2b00      	cmp	r3, #0
 800492c:	f43f ac7f 	beq.w	800422e <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004930:	4a11      	ldr	r2, [pc, #68]	; (8004978 <_ZN23Calibration_PadViewBaseC1Ev+0xca0>)
 8004932:	8813      	ldrh	r3, [r2, #0]
 8004934:	2b23      	cmp	r3, #35	; 0x23
 8004936:	f67f ac84 	bls.w	8004242 <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 800493a:	4810      	ldr	r0, [pc, #64]	; (800497c <_ZN23Calibration_PadViewBaseC1Ev+0xca4>)
 800493c:	2123      	movs	r1, #35	; 0x23
 800493e:	6800      	ldr	r0, [r0, #0]
 8004940:	f005 fe8a 	bl	800a658 <_ZNK8touchgfx5Texts7getTextEt>
 8004944:	4a0e      	ldr	r2, [pc, #56]	; (8004980 <_ZN23Calibration_PadViewBaseC1Ev+0xca8>)
 8004946:	4603      	mov	r3, r0
 8004948:	4649      	mov	r1, r9
 800494a:	4650      	mov	r0, sl
 800494c:	f017 f9c6 	bl	801bcdc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_LH2.resizeToCurrentText();
 8004950:	980c      	ldr	r0, [sp, #48]	; 0x30
        wc1 = value;
 8004952:	f8c4 a868 	str.w	sl, [r4, #2152]	; 0x868
 8004956:	f010 fd43 	bl	80153e0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 800495a:	4b0a      	ldr	r3, [pc, #40]	; (8004984 <_ZN23Calibration_PadViewBaseC1Ev+0xcac>)
    textAreaCal_LH2.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH2));
 800495c:	980c      	ldr	r0, [sp, #48]	; 0x30
 800495e:	9329      	str	r3, [sp, #164]	; 0xa4
 8004960:	4629      	mov	r1, r5
 8004962:	2329      	movs	r3, #41	; 0x29
 8004964:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004968:	f010 fd5a 	bl	8015420 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallLeft.add(textAreaCal_LH2);
 800496c:	990c      	ldr	r1, [sp, #48]	; 0x30
 800496e:	ee19 0a10 	vmov	r0, s18
 8004972:	e00b      	b.n	800498c <_ZN23Calibration_PadViewBaseC1Ev+0xcb4>
 8004974:	200138a4 	.word	0x200138a4
 8004978:	200138a8 	.word	0x200138a8
 800497c:	200138b0 	.word	0x200138b0
 8004980:	0802f3e1 	.word	0x0802f3e1
 8004984:	0802f454 	.word	0x0802f454
 8004988:	00ac00f0 	.word	0x00ac00f0
 800498c:	f00d ff20 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LH1.setXY(22, 32);
 8004990:	2220      	movs	r2, #32
 8004992:	2116      	movs	r1, #22
 8004994:	980d      	ldr	r0, [sp, #52]	; 0x34
 8004996:	f7fe fe21 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800499a:	f04f 3cff 	mov.w	ip, #4294967295
 800499e:	f8c4 c89c 	str.w	ip, [r4, #2204]	; 0x89c
        linespace = space;
 80049a2:	f8a4 68a0 	strh.w	r6, [r4, #2208]	; 0x8a0
        return TextArea::BoundingArea();
 80049a6:	4628      	mov	r0, r5
 80049a8:	f7fe fea0 	bl	80036ec <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 80049ac:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80049b0:	f604 03a8 	addw	r3, r4, #2216	; 0x8a8
 80049b4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80049b8:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_LH1Buffer, TEXTAREACAL_LH1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_I3S7).getText());
 80049bc:	f604 6a94 	addw	sl, r4, #3732	; 0xe94
 80049c0:	2b00      	cmp	r3, #0
 80049c2:	f43f ac34 	beq.w	800422e <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80049c6:	4ada      	ldr	r2, [pc, #872]	; (8004d30 <_ZN23Calibration_PadViewBaseC1Ev+0x1058>)
 80049c8:	8813      	ldrh	r3, [r2, #0]
 80049ca:	2b22      	cmp	r3, #34	; 0x22
 80049cc:	f67f ac39 	bls.w	8004242 <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 80049d0:	48d8      	ldr	r0, [pc, #864]	; (8004d34 <_ZN23Calibration_PadViewBaseC1Ev+0x105c>)
 80049d2:	2122      	movs	r1, #34	; 0x22
 80049d4:	6800      	ldr	r0, [r0, #0]
 80049d6:	f005 fe3f 	bl	800a658 <_ZNK8touchgfx5Texts7getTextEt>
 80049da:	4ad7      	ldr	r2, [pc, #860]	; (8004d38 <_ZN23Calibration_PadViewBaseC1Ev+0x1060>)
 80049dc:	4603      	mov	r3, r0
 80049de:	4649      	mov	r1, r9
 80049e0:	4650      	mov	r0, sl
 80049e2:	f017 f97b 	bl	801bcdc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_LH1.resizeToCurrentText();
 80049e6:	980d      	ldr	r0, [sp, #52]	; 0x34
        wc1 = value;
 80049e8:	f8c4 a8b4 	str.w	sl, [r4, #2228]	; 0x8b4
 80049ec:	f010 fcf8 	bl	80153e0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80049f0:	f04f 0e31 	mov.w	lr, #49	; 0x31
 80049f4:	4bd1      	ldr	r3, [pc, #836]	; (8004d3c <_ZN23Calibration_PadViewBaseC1Ev+0x1064>)
    textAreaCal_LH1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH1));
 80049f6:	980d      	ldr	r0, [sp, #52]	; 0x34
 80049f8:	f8ad e0a8 	strh.w	lr, [sp, #168]	; 0xa8
 80049fc:	4629      	mov	r1, r5
 80049fe:	9329      	str	r3, [sp, #164]	; 0xa4
 8004a00:	f010 fd0e 	bl	8015420 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallLeft.add(textAreaCal_LH1);
 8004a04:	990d      	ldr	r1, [sp, #52]	; 0x34
 8004a06:	ee19 0a10 	vmov	r0, s18
 8004a0a:	f00d fee1 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_LH.setPosition(0, 15, 240, 10);
 8004a0e:	ee1b 0a90 	vmov	r0, s23
 8004a12:	23f0      	movs	r3, #240	; 0xf0
 8004a14:	220f      	movs	r2, #15
 8004a16:	4631      	mov	r1, r6
 8004a18:	f8cd 9000 	str.w	r9, [sp]
 8004a1c:	f7fe fdeb 	bl	80035f6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8004a20:	f04f 30ff 	mov.w	r0, #4294967295
 8004a24:	f64f 73ff 	movw	r3, #65535	; 0xffff
    line1_LH.setStart(5, 5);
 8004a28:	2205      	movs	r2, #5
 8004a2a:	f8c4 0934 	str.w	r0, [r4, #2356]	; 0x934
 8004a2e:	981e      	ldr	r0, [sp, #120]	; 0x78
 8004a30:	f8a4 3938 	strh.w	r3, [r4, #2360]	; 0x938
 8004a34:	4611      	mov	r1, r2
 8004a36:	f8c4 08e0 	str.w	r0, [r4, #2272]	; 0x8e0
 8004a3a:	ee1b 0a90 	vmov	r0, s23
 8004a3e:	f7ff f933 	bl	8003ca8 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_LH.setEnd(235, 5);
 8004a42:	2205      	movs	r2, #5
 8004a44:	ee1b 0a90 	vmov	r0, s23
 8004a48:	21eb      	movs	r1, #235	; 0xeb
 8004a4a:	f7ff f931 	bl	8003cb0 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_LH.setLineWidth(1);
 8004a4e:	ee1b 0a90 	vmov	r0, s23
 8004a52:	4641      	mov	r1, r8
 8004a54:	f7ff f930 	bl	8003cb8 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_LH.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8004a58:	ee1b 0a90 	vmov	r0, s23
 8004a5c:	4641      	mov	r1, r8
 8004a5e:	f010 f8af 	bl	8014bc0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    swipeContainerHallLeft.add(line1_LH);
 8004a62:	ee1b 1a90 	vmov	r1, s23
 8004a66:	ee19 0a10 	vmov	r0, s18
 8004a6a:	f00d feb1 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1_LH.setXY(73, 0);
 8004a6e:	4632      	mov	r2, r6
 8004a70:	ee1f 0a90 	vmov	r0, s31
 8004a74:	2149      	movs	r1, #73	; 0x49
 8004a76:	f7fe fdb1 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004a7a:	f04f 30ff 	mov.w	r0, #4294967295
        boundingArea = calculateBoundingArea();
 8004a7e:	ee1f 1a90 	vmov	r1, s31
        color = newColor;
 8004a82:	f8c4 096c 	str.w	r0, [r4, #2412]	; 0x96c
        linespace = space;
 8004a86:	f8a4 6970 	strh.w	r6, [r4, #2416]	; 0x970
        boundingArea = calculateBoundingArea();
 8004a8a:	a822      	add	r0, sp, #136	; 0x88
 8004a8c:	f010 fa2e 	bl	8014eec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004a90:	ee1f 0a90 	vmov	r0, s31
 8004a94:	f100 033c 	add.w	r3, r0, #60	; 0x3c
 8004a98:	a822      	add	r0, sp, #136	; 0x88
 8004a9a:	c807      	ldmia	r0, {r0, r1, r2}
 8004a9c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004aa0:	4ba6      	ldr	r3, [pc, #664]	; (8004d3c <_ZN23Calibration_PadViewBaseC1Ev+0x1064>)
 8004aa2:	9329      	str	r3, [sp, #164]	; 0xa4
    textArea1_LH.setTypedText(touchgfx::TypedText(T___SINGLEUSE_F9FQ));
 8004aa4:	4629      	mov	r1, r5
 8004aa6:	2321      	movs	r3, #33	; 0x21
 8004aa8:	ee1f 0a90 	vmov	r0, s31
 8004aac:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004ab0:	f010 fcb6 	bl	8015420 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallLeft.add(textArea1_LH);
 8004ab4:	ee1f 1a90 	vmov	r1, s31
 8004ab8:	ee19 0a10 	vmov	r0, s18
 8004abc:	f00d fe88 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    swipeContainer1.add(swipeContainerHallLeft);
 8004ac0:	ee19 1a10 	vmov	r1, s18
 8004ac4:	ee18 0a10 	vmov	r0, s16
 8004ac8:	f00e fb65 	bl	8013196 <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>
 8004acc:	499c      	ldr	r1, [pc, #624]	; (8004d40 <_ZN23Calibration_PadViewBaseC1Ev+0x1068>)
    buttonWithIcon_RH3.setXY(194, 97);
 8004ace:	9819      	ldr	r0, [sp, #100]	; 0x64
 8004ad0:	f8c4 198c 	str.w	r1, [r4, #2444]	; 0x98c
 8004ad4:	2261      	movs	r2, #97	; 0x61
 8004ad6:	21c2      	movs	r1, #194	; 0xc2
 8004ad8:	f7fe fd80 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RH3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8004adc:	a927      	add	r1, sp, #156	; 0x9c
 8004ade:	460a      	mov	r2, r1
 8004ae0:	9819      	ldr	r0, [sp, #100]	; 0x64
 8004ae2:	9500      	str	r5, [sp, #0]
 8004ae4:	ab28      	add	r3, sp, #160	; 0xa0
 8004ae6:	a926      	add	r1, sp, #152	; 0x98
 8004ae8:	f8ad 6098 	strh.w	r6, [sp, #152]	; 0x98
 8004aec:	f8ad 809c 	strh.w	r8, [sp, #156]	; 0x9c
 8004af0:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
 8004af4:	f8ad 70a4 	strh.w	r7, [sp, #164]	; 0xa4
 8004af8:	f011 f987 	bl	8015e0a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8004afc:	9b02      	ldr	r3, [sp, #8]
 8004afe:	f8c4 39d8 	str.w	r3, [r4, #2520]	; 0x9d8
    swipeContainerHallRight.add(buttonWithIcon_RH3);
 8004b02:	9919      	ldr	r1, [sp, #100]	; 0x64
 8004b04:	f8c4 69e8 	str.w	r6, [r4, #2536]	; 0x9e8
 8004b08:	ee19 0a90 	vmov	r0, s19
 8004b0c:	f00d fe60 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_RH2.setXY(194, 61);
 8004b10:	981a      	ldr	r0, [sp, #104]	; 0x68
 8004b12:	223d      	movs	r2, #61	; 0x3d
 8004b14:	21c2      	movs	r1, #194	; 0xc2
 8004b16:	f7fe fd61 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RH2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8004b1a:	a927      	add	r1, sp, #156	; 0x9c
 8004b1c:	460a      	mov	r2, r1
 8004b1e:	981a      	ldr	r0, [sp, #104]	; 0x68
 8004b20:	9500      	str	r5, [sp, #0]
 8004b22:	ab28      	add	r3, sp, #160	; 0xa0
 8004b24:	a926      	add	r1, sp, #152	; 0x98
 8004b26:	f8ad 6098 	strh.w	r6, [sp, #152]	; 0x98
 8004b2a:	f8ad 809c 	strh.w	r8, [sp, #156]	; 0x9c
 8004b2e:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
 8004b32:	f8ad 70a4 	strh.w	r7, [sp, #164]	; 0xa4
 8004b36:	f011 f968 	bl	8015e0a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8004b3a:	9b02      	ldr	r3, [sp, #8]
 8004b3c:	f8c4 3a14 	str.w	r3, [r4, #2580]	; 0xa14
    swipeContainerHallRight.add(buttonWithIcon_RH2);
 8004b40:	991a      	ldr	r1, [sp, #104]	; 0x68
 8004b42:	f8c4 6a24 	str.w	r6, [r4, #2596]	; 0xa24
 8004b46:	ee19 0a90 	vmov	r0, s19
 8004b4a:	f00d fe41 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_RH1.setXY(194, 25);
 8004b4e:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8004b50:	2219      	movs	r2, #25
 8004b52:	21c2      	movs	r1, #194	; 0xc2
 8004b54:	f7fe fd42 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RH1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8004b58:	a927      	add	r1, sp, #156	; 0x9c
 8004b5a:	460a      	mov	r2, r1
 8004b5c:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8004b5e:	9500      	str	r5, [sp, #0]
 8004b60:	ab28      	add	r3, sp, #160	; 0xa0
 8004b62:	a926      	add	r1, sp, #152	; 0x98
 8004b64:	f8ad 6098 	strh.w	r6, [sp, #152]	; 0x98
 8004b68:	f8ad 809c 	strh.w	r8, [sp, #156]	; 0x9c
 8004b6c:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
 8004b70:	f8ad 70a4 	strh.w	r7, [sp, #164]	; 0xa4
 8004b74:	f011 f949 	bl	8015e0a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8004b78:	9b02      	ldr	r3, [sp, #8]
 8004b7a:	f8c4 3a50 	str.w	r3, [r4, #2640]	; 0xa50
    swipeContainerHallRight.add(buttonWithIcon_RH1);
 8004b7e:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8004b80:	f8c4 6a60 	str.w	r6, [r4, #2656]	; 0xa60
 8004b84:	ee19 0a90 	vmov	r0, s19
 8004b88:	f00d fe22 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_RH3.setXY(10, 104);
 8004b8c:	2268      	movs	r2, #104	; 0x68
 8004b8e:	4649      	mov	r1, r9
 8004b90:	980e      	ldr	r0, [sp, #56]	; 0x38
 8004b92:	f7fe fd23 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004b96:	f04f 33ff 	mov.w	r3, #4294967295
 8004b9a:	f8c4 3a94 	str.w	r3, [r4, #2708]	; 0xa94
        return TextArea::BoundingArea();
 8004b9e:	4628      	mov	r0, r5
        linespace = space;
 8004ba0:	f8a4 6a98 	strh.w	r6, [r4, #2712]	; 0xa98
 8004ba4:	f7fe fda2 	bl	80036ec <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8004ba8:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004bac:	f504 632a 	add.w	r3, r4, #2720	; 0xaa0
 8004bb0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004bb4:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_RH3Buffer, TEXTAREACAL_RH3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_4PQQ).getText());
 8004bb8:	f604 65a8 	addw	r5, r4, #3752	; 0xea8
 8004bbc:	2b00      	cmp	r3, #0
 8004bbe:	f43f ab36 	beq.w	800422e <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004bc2:	4a5b      	ldr	r2, [pc, #364]	; (8004d30 <_ZN23Calibration_PadViewBaseC1Ev+0x1058>)
 8004bc4:	8813      	ldrh	r3, [r2, #0]
 8004bc6:	2b20      	cmp	r3, #32
 8004bc8:	f67f ab3b 	bls.w	8004242 <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 8004bcc:	f8df 8164 	ldr.w	r8, [pc, #356]	; 8004d34 <_ZN23Calibration_PadViewBaseC1Ev+0x105c>
        : typedTextId(id)
 8004bd0:	f8df a168 	ldr.w	sl, [pc, #360]	; 8004d3c <_ZN23Calibration_PadViewBaseC1Ev+0x1064>
        return texts->getText(typedTextId);
 8004bd4:	f8d8 0000 	ldr.w	r0, [r8]
 8004bd8:	2120      	movs	r1, #32
 8004bda:	f005 fd3d 	bl	800a658 <_ZNK8touchgfx5Texts7getTextEt>
 8004bde:	4a56      	ldr	r2, [pc, #344]	; (8004d38 <_ZN23Calibration_PadViewBaseC1Ev+0x1060>)
 8004be0:	4603      	mov	r3, r0
 8004be2:	4649      	mov	r1, r9
 8004be4:	4628      	mov	r0, r5
 8004be6:	f017 f879 	bl	801bcdc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RH3.resizeToCurrentText();
 8004bea:	980e      	ldr	r0, [sp, #56]	; 0x38
        wc1 = value;
 8004bec:	f8c4 5aac 	str.w	r5, [r4, #2732]	; 0xaac
    textAreaCal_RH3.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH3));
 8004bf0:	ad29      	add	r5, sp, #164	; 0xa4
    textAreaCal_RH3.resizeToCurrentText();
 8004bf2:	f010 fbf5 	bl	80153e0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8004bf6:	2327      	movs	r3, #39	; 0x27
    textAreaCal_RH3.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH3));
 8004bf8:	980e      	ldr	r0, [sp, #56]	; 0x38
 8004bfa:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004bfe:	4629      	mov	r1, r5
 8004c00:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
 8004c04:	f010 fc0c 	bl	8015420 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallRight.add(textAreaCal_RH3);
 8004c08:	990e      	ldr	r1, [sp, #56]	; 0x38
 8004c0a:	ee19 0a90 	vmov	r0, s19
 8004c0e:	f00d fddf 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8004c12:	f04f 37ff 	mov.w	r7, #4294967295
    textAreaCal_RH2.setXY(22, 68);
 8004c16:	2244      	movs	r2, #68	; 0x44
 8004c18:	2116      	movs	r1, #22
 8004c1a:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8004c1c:	f7fe fcde 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8004c20:	f8c4 7ae0 	str.w	r7, [r4, #2784]	; 0xae0
        linespace = space;
 8004c24:	f8a4 6ae4 	strh.w	r6, [r4, #2788]	; 0xae4
        return TextArea::BoundingArea();
 8004c28:	4628      	mov	r0, r5
 8004c2a:	f7fe fd5f 	bl	80036ec <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8004c2e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004c32:	f604 23ec 	addw	r3, r4, #2796	; 0xaec
 8004c36:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004c3a:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_RH2Buffer, TEXTAREACAL_RH2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_YVQL).getText());
 8004c3e:	f604 69bc 	addw	r9, r4, #3772	; 0xebc
 8004c42:	2b00      	cmp	r3, #0
 8004c44:	f43f aaf3 	beq.w	800422e <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004c48:	4a39      	ldr	r2, [pc, #228]	; (8004d30 <_ZN23Calibration_PadViewBaseC1Ev+0x1058>)
 8004c4a:	8813      	ldrh	r3, [r2, #0]
 8004c4c:	2b1f      	cmp	r3, #31
 8004c4e:	f67f aaf8 	bls.w	8004242 <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 8004c52:	211f      	movs	r1, #31
 8004c54:	f8d8 0000 	ldr.w	r0, [r8]
 8004c58:	f005 fcfe 	bl	800a658 <_ZNK8touchgfx5Texts7getTextEt>
 8004c5c:	4a36      	ldr	r2, [pc, #216]	; (8004d38 <_ZN23Calibration_PadViewBaseC1Ev+0x1060>)
 8004c5e:	4603      	mov	r3, r0
 8004c60:	210a      	movs	r1, #10
 8004c62:	4648      	mov	r0, r9
 8004c64:	f017 f83a 	bl	801bcdc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RH2.resizeToCurrentText();
 8004c68:	980f      	ldr	r0, [sp, #60]	; 0x3c
        wc1 = value;
 8004c6a:	f8c4 9af8 	str.w	r9, [r4, #2808]	; 0xaf8
 8004c6e:	f010 fbb7 	bl	80153e0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8004c72:	2329      	movs	r3, #41	; 0x29
    textAreaCal_RH2.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH2));
 8004c74:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8004c76:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004c7a:	4629      	mov	r1, r5
 8004c7c:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
 8004c80:	f010 fbce 	bl	8015420 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallRight.add(textAreaCal_RH2);
 8004c84:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8004c86:	ee19 0a90 	vmov	r0, s19
 8004c8a:	f00d fda1 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_RH1.setXY(22, 32);
 8004c8e:	2220      	movs	r2, #32
 8004c90:	2116      	movs	r1, #22
 8004c92:	9810      	ldr	r0, [sp, #64]	; 0x40
 8004c94:	f7fe fca2 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004c98:	f8c4 7b2c 	str.w	r7, [r4, #2860]	; 0xb2c
        linespace = space;
 8004c9c:	f8a4 6b30 	strh.w	r6, [r4, #2864]	; 0xb30
        return TextArea::BoundingArea();
 8004ca0:	4628      	mov	r0, r5
 8004ca2:	f7fe fd23 	bl	80036ec <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8004ca6:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004caa:	f604 3338 	addw	r3, r4, #2872	; 0xb38
 8004cae:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004cb2:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_RH1Buffer, TEXTAREACAL_RH1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_TIGW).getText());
 8004cb6:	f504 696d 	add.w	r9, r4, #3792	; 0xed0
 8004cba:	2b00      	cmp	r3, #0
 8004cbc:	f43f aab7 	beq.w	800422e <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004cc0:	4a1b      	ldr	r2, [pc, #108]	; (8004d30 <_ZN23Calibration_PadViewBaseC1Ev+0x1058>)
 8004cc2:	8813      	ldrh	r3, [r2, #0]
 8004cc4:	2b1e      	cmp	r3, #30
 8004cc6:	f67f aabc 	bls.w	8004242 <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 8004cca:	f8d8 0000 	ldr.w	r0, [r8]
 8004cce:	211e      	movs	r1, #30
 8004cd0:	f005 fcc2 	bl	800a658 <_ZNK8touchgfx5Texts7getTextEt>
 8004cd4:	4a18      	ldr	r2, [pc, #96]	; (8004d38 <_ZN23Calibration_PadViewBaseC1Ev+0x1060>)
 8004cd6:	4603      	mov	r3, r0
 8004cd8:	210a      	movs	r1, #10
 8004cda:	4648      	mov	r0, r9
 8004cdc:	f016 fffe 	bl	801bcdc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RH1.resizeToCurrentText();
 8004ce0:	9810      	ldr	r0, [sp, #64]	; 0x40
        wc1 = value;
 8004ce2:	f8c4 9b44 	str.w	r9, [r4, #2884]	; 0xb44
 8004ce6:	f010 fb7b 	bl	80153e0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8004cea:	2331      	movs	r3, #49	; 0x31
    textAreaCal_RH1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH1));
 8004cec:	9810      	ldr	r0, [sp, #64]	; 0x40
 8004cee:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004cf2:	4629      	mov	r1, r5
    line1_RH_1.setPosition(0, 15, 240, 10);
 8004cf4:	f04f 090a 	mov.w	r9, #10
 8004cf8:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
    textAreaCal_RH1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH1));
 8004cfc:	f010 fb90 	bl	8015420 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallRight.add(textAreaCal_RH1);
 8004d00:	9910      	ldr	r1, [sp, #64]	; 0x40
 8004d02:	ee19 0a90 	vmov	r0, s19
 8004d06:	f00d fd63 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_RH_1.setPosition(0, 15, 240, 10);
 8004d0a:	ee1c 0a10 	vmov	r0, s24
 8004d0e:	4631      	mov	r1, r6
 8004d10:	f8cd 9000 	str.w	r9, [sp]
 8004d14:	23f0      	movs	r3, #240	; 0xf0
 8004d16:	220f      	movs	r2, #15
 8004d18:	f7fe fc6d 	bl	80035f6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8004d1c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8004d1e:	f8c4 3b70 	str.w	r3, [r4, #2928]	; 0xb70
    line1_RH_1.setStart(5, 5);
 8004d22:	2205      	movs	r2, #5
 8004d24:	ee1c 0a10 	vmov	r0, s24
 8004d28:	4611      	mov	r1, r2
 8004d2a:	f8c4 7bc4 	str.w	r7, [r4, #3012]	; 0xbc4
 8004d2e:	e009      	b.n	8004d44 <_ZN23Calibration_PadViewBaseC1Ev+0x106c>
 8004d30:	200138a8 	.word	0x200138a8
 8004d34:	200138b0 	.word	0x200138b0
 8004d38:	0802f3e1 	.word	0x0802f3e1
 8004d3c:	0802f454 	.word	0x0802f454
 8004d40:	00ac00f0 	.word	0x00ac00f0
 8004d44:	f8a4 7bc8 	strh.w	r7, [r4, #3016]	; 0xbc8
 8004d48:	f7fe ffae 	bl	8003ca8 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_RH_1.setEnd(235, 5);
 8004d4c:	2205      	movs	r2, #5
 8004d4e:	ee1c 0a10 	vmov	r0, s24
 8004d52:	21eb      	movs	r1, #235	; 0xeb
 8004d54:	f7fe ffac 	bl	8003cb0 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_RH_1.setLineWidth(1);
 8004d58:	ee1c 0a10 	vmov	r0, s24
 8004d5c:	2101      	movs	r1, #1
 8004d5e:	f7fe ffab 	bl	8003cb8 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_RH_1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8004d62:	ee1c 0a10 	vmov	r0, s24
 8004d66:	2101      	movs	r1, #1
 8004d68:	f00f ff2a 	bl	8014bc0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    swipeContainerHallRight.add(line1_RH_1);
 8004d6c:	ee1c 1a10 	vmov	r1, s24
 8004d70:	ee19 0a90 	vmov	r0, s19
 8004d74:	f10d 0888 	add.w	r8, sp, #136	; 0x88
 8004d78:	f00d fd2a 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1_RH_1.setXY(73, 0);
 8004d7c:	4632      	mov	r2, r6
 8004d7e:	9803      	ldr	r0, [sp, #12]
 8004d80:	2149      	movs	r1, #73	; 0x49
 8004d82:	f7fe fc2b 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8004d86:	9903      	ldr	r1, [sp, #12]
        color = newColor;
 8004d88:	f8c4 7bfc 	str.w	r7, [r4, #3068]	; 0xbfc
        boundingArea = calculateBoundingArea();
 8004d8c:	4640      	mov	r0, r8
        linespace = space;
 8004d8e:	f8a4 6c00 	strh.w	r6, [r4, #3072]	; 0xc00
        boundingArea = calculateBoundingArea();
 8004d92:	f010 f8ab 	bl	8014eec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004d96:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8004d9a:	9b03      	ldr	r3, [sp, #12]
 8004d9c:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
 8004da0:	333c      	adds	r3, #60	; 0x3c
 8004da2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004da6:	231d      	movs	r3, #29
    textArea1_RH_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IZSY));
 8004da8:	9803      	ldr	r0, [sp, #12]
 8004daa:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004dae:	4629      	mov	r1, r5
 8004db0:	f010 fb36 	bl	8015420 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallRight.add(textArea1_RH_1);
 8004db4:	9903      	ldr	r1, [sp, #12]
 8004db6:	ee19 0a90 	vmov	r0, s19
 8004dba:	f00d fd09 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    swipeContainer1.add(swipeContainerHallRight);
 8004dbe:	ee19 1a90 	vmov	r1, s19
 8004dc2:	ee18 0a10 	vmov	r0, s16
 8004dc6:	f00e f9e6 	bl	8013196 <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>
    swipeContainer1.setSelectedPage(0);
 8004dca:	ee18 0a10 	vmov	r0, s16
 8004dce:	4631      	mov	r1, r6
 8004dd0:	f00e f9d2 	bl	8013178 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh>
 8004dd4:	ee18 1a10 	vmov	r1, s16
 8004dd8:	ee1a 0a10 	vmov	r0, s20
 8004ddc:	f00d fcf8 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_1.setPosition(0, 75, 240, 10);
 8004de0:	ee1c 0a90 	vmov	r0, s25
 8004de4:	4631      	mov	r1, r6
 8004de6:	f8cd 9000 	str.w	r9, [sp]
 8004dea:	23f0      	movs	r3, #240	; 0xf0
 8004dec:	224b      	movs	r2, #75	; 0x4b
 8004dee:	f7fe fc02 	bl	80035f6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8004df2:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8004df6:	f8a4 3c94 	strh.w	r3, [r4, #3220]	; 0xc94
    line1_1.setStart(5, 5);
 8004dfa:	2205      	movs	r2, #5
 8004dfc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8004dfe:	f8c4 3c3c 	str.w	r3, [r4, #3132]	; 0xc3c
 8004e02:	ee1c 0a90 	vmov	r0, s25
 8004e06:	4611      	mov	r1, r2
 8004e08:	f8c4 7c90 	str.w	r7, [r4, #3216]	; 0xc90
 8004e0c:	f7fe ff4c 	bl	8003ca8 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_1.setEnd(235, 5);
 8004e10:	2205      	movs	r2, #5
 8004e12:	ee1c 0a90 	vmov	r0, s25
 8004e16:	21eb      	movs	r1, #235	; 0xeb
 8004e18:	f7fe ff4a 	bl	8003cb0 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_1.setLineWidth(1);
 8004e1c:	ee1c 0a90 	vmov	r0, s25
 8004e20:	2101      	movs	r1, #1
 8004e22:	f7fe ff49 	bl	8003cb8 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8004e26:	ee1c 0a90 	vmov	r0, s25
 8004e2a:	2101      	movs	r1, #1
 8004e2c:	f00f fec8 	bl	8014bc0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8004e30:	ee1c 1a90 	vmov	r1, s25
 8004e34:	ee1a 0a10 	vmov	r0, s20
 8004e38:	f00d fcca 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(70, 60);
 8004e3c:	9804      	ldr	r0, [sp, #16]
 8004e3e:	223c      	movs	r2, #60	; 0x3c
 8004e40:	2146      	movs	r1, #70	; 0x46
 8004e42:	f7fe fbcb 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8004e46:	9904      	ldr	r1, [sp, #16]
        color = newColor;
 8004e48:	f8c4 7cc8 	str.w	r7, [r4, #3272]	; 0xcc8
        boundingArea = calculateBoundingArea();
 8004e4c:	4640      	mov	r0, r8
        linespace = space;
 8004e4e:	f8a4 6ccc 	strh.w	r6, [r4, #3276]	; 0xccc
        boundingArea = calculateBoundingArea();
 8004e52:	f010 f84b 	bl	8014eec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004e56:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8004e5a:	9b04      	ldr	r3, [sp, #16]
 8004e5c:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
 8004e60:	333c      	adds	r3, #60	; 0x3c
 8004e62:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004e66:	233a      	movs	r3, #58	; 0x3a
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_X786));
 8004e68:	9804      	ldr	r0, [sp, #16]
 8004e6a:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004e6e:	4629      	mov	r1, r5
 8004e70:	f010 fad6 	bl	8015420 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004e74:	9904      	ldr	r1, [sp, #16]
 8004e76:	ee1a 0a10 	vmov	r0, s20
 8004e7a:	f00d fca9 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8004e7e:	ee1d 0a10 	vmov	r0, s26
 8004e82:	4631      	mov	r1, r6
 8004e84:	f8cd 9000 	str.w	r9, [sp]
 8004e88:	23f0      	movs	r3, #240	; 0xf0
 8004e8a:	2232      	movs	r2, #50	; 0x32
 8004e8c:	f7fe fbb3 	bl	80035f6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8004e90:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8004e92:	f8c4 3d08 	str.w	r3, [r4, #3336]	; 0xd08
    line1.setStart(5, 5);
 8004e96:	2205      	movs	r2, #5
 8004e98:	ee1d 0a10 	vmov	r0, s26
 8004e9c:	4611      	mov	r1, r2
 8004e9e:	f8c4 7d5c 	str.w	r7, [r4, #3420]	; 0xd5c
 8004ea2:	f8a4 7d60 	strh.w	r7, [r4, #3424]	; 0xd60
 8004ea6:	f7fe feff 	bl	8003ca8 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1.setEnd(235, 5);
 8004eaa:	2205      	movs	r2, #5
 8004eac:	ee1d 0a10 	vmov	r0, s26
 8004eb0:	21eb      	movs	r1, #235	; 0xeb
 8004eb2:	f7fe fefd 	bl	8003cb0 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1.setLineWidth(1);
 8004eb6:	ee1d 0a10 	vmov	r0, s26
 8004eba:	2101      	movs	r1, #1
 8004ebc:	f7fe fefc 	bl	8003cb8 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8004ec0:	ee1d 0a10 	vmov	r0, s26
 8004ec4:	2101      	movs	r1, #1
 8004ec6:	f00f fe7b 	bl	8014bc0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8004eca:	ee1d 1a10 	vmov	r1, s26
 8004ece:	ee1a 0a10 	vmov	r0, s20
 8004ed2:	f00d fc7d 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(69, 35);
 8004ed6:	9805      	ldr	r0, [sp, #20]
 8004ed8:	2223      	movs	r2, #35	; 0x23
 8004eda:	2145      	movs	r1, #69	; 0x45
 8004edc:	f7fe fb7e 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8004ee0:	9905      	ldr	r1, [sp, #20]
        color = newColor;
 8004ee2:	f8c4 7d94 	str.w	r7, [r4, #3476]	; 0xd94
        boundingArea = calculateBoundingArea();
 8004ee6:	4640      	mov	r0, r8
        linespace = space;
 8004ee8:	f8a4 6d98 	strh.w	r6, [r4, #3480]	; 0xd98
        boundingArea = calculateBoundingArea();
 8004eec:	f00f fffe 	bl	8014eec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004ef0:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8004ef4:	9b05      	ldr	r3, [sp, #20]
 8004ef6:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
 8004efa:	333c      	adds	r3, #60	; 0x3c
 8004efc:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004f00:	233c      	movs	r3, #60	; 0x3c
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FJID));
 8004f02:	9805      	ldr	r0, [sp, #20]
 8004f04:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004f08:	4629      	mov	r1, r5
 8004f0a:	f010 fa89 	bl	8015420 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004f0e:	9905      	ldr	r1, [sp, #20]
 8004f10:	ee1a 0a10 	vmov	r0, s20
 8004f14:	f00d fc5c 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8004f18:	9806      	ldr	r0, [sp, #24]
 8004f1a:	220c      	movs	r2, #12
 8004f1c:	2136      	movs	r1, #54	; 0x36
 8004f1e:	f7fe fb5d 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8004f22:	9906      	ldr	r1, [sp, #24]
        color = newColor;
 8004f24:	f8c4 7ddc 	str.w	r7, [r4, #3548]	; 0xddc
        boundingArea = calculateBoundingArea();
 8004f28:	4640      	mov	r0, r8
        linespace = space;
 8004f2a:	f8a4 6de0 	strh.w	r6, [r4, #3552]	; 0xde0
        boundingArea = calculateBoundingArea();
 8004f2e:	f00f ffdd 	bl	8014eec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004f32:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8004f36:	9b06      	ldr	r3, [sp, #24]
 8004f38:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
 8004f3c:	333c      	adds	r3, #60	; 0x3c
 8004f3e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004f42:	233d      	movs	r3, #61	; 0x3d
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_EAAK));
 8004f44:	9806      	ldr	r0, [sp, #24]
 8004f46:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004f4a:	4629      	mov	r1, r5
 8004f4c:	f010 fa68 	bl	8015420 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004f50:	ee1a 0a10 	vmov	r0, s20
 8004f54:	9906      	ldr	r1, [sp, #24]
 8004f56:	f00d fc3b 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8004f5a:	4620      	mov	r0, r4
 8004f5c:	b02d      	add	sp, #180	; 0xb4
 8004f5e:	ecbd 8b10 	vpop	{d8-d15}
 8004f62:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004f66:	bf00      	nop

08004f68 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 8004f68:	4770      	bx	lr

08004f6a <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 8004f6a:	4770      	bx	lr

08004f6c <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 8004f6c:	f500 7398 	add.w	r3, r0, #304	; 0x130
 8004f70:	6808      	ldr	r0, [r1, #0]
 8004f72:	6849      	ldr	r1, [r1, #4]
 8004f74:	c303      	stmia	r3!, {r0, r1}
    }
 8004f76:	4770      	bx	lr

08004f78 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 8004f78:	4770      	bx	lr

08004f7a <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 8004f7a:	4770      	bx	lr

08004f7c <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 8004f7c:	6041      	str	r1, [r0, #4]
    }
 8004f7e:	4770      	bx	lr

08004f80 <_ZNK8touchgfx10Transition13FullSolidRect12getSolidRectEv>:
     * A Widget that reports solid and but does not draw anything.
     */
    class FullSolidRect : public Widget
    {
    public:
        virtual Rect getSolidRect() const
 8004f80:	b510      	push	{r4, lr}
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8004f82:	2200      	movs	r2, #0
        {
            return Rect(0, 0, rect.width, rect.height);
 8004f84:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 8004f88:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 8004f8c:	8002      	strh	r2, [r0, #0]
 8004f8e:	8042      	strh	r2, [r0, #2]
 8004f90:	8084      	strh	r4, [r0, #4]
 8004f92:	80c1      	strh	r1, [r0, #6]
        }
 8004f94:	bd10      	pop	{r4, pc}

08004f96 <_ZNK8touchgfx10Transition13FullSolidRect4drawERKNS_4RectE>:

        virtual void draw(const Rect& area) const
        {
        }
 8004f96:	4770      	bx	lr

08004f98 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8004f98:	4770      	bx	lr
	...

08004f9c <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8004f9c:	4b06      	ldr	r3, [pc, #24]	; (8004fb8 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 8004f9e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004fa2:	2300      	movs	r3, #0
 8004fa4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
// Main_Menu

void FrontendApplicationBase::gotoMain_MenuScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMain_MenuScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8004fa8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004fac:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004fb0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140

    virtual void changeToStartScreen()
    {
        gotoMain_MenuScreenNoTransition();
    }
 8004fb4:	4770      	bx	lr
 8004fb6:	bf00      	nop
 8004fb8:	08005359 	.word	0x08005359

08004fbc <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8004fbc:	2301      	movs	r3, #1
 8004fbe:	7203      	strb	r3, [r0, #8]
    }
 8004fc0:	4770      	bx	lr

08004fc2 <_ZN8touchgfx10Transition13FullSolidRectD1Ev>:
    class FullSolidRect : public Widget
 8004fc2:	4770      	bx	lr

08004fc4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED1Ev>:
 * the given direction.  This transition only draws the pixels in the
 * framebuffer once, and never moves any pixels. It is therefore very
 * useful on MCUs with limited performance.
 */
template <Direction templateDirection>
class WipeTransition : public Transition
 8004fc4:	4770      	bx	lr

08004fc6 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED1Ev>:
 8004fc6:	4770      	bx	lr

08004fc8 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8004fc8:	4770      	bx	lr

08004fca <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 8004fca:	4770      	bx	lr

08004fcc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE8tearDownEv>:
            // Synchronize framebuffers
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
        }
    }

    virtual void tearDown()
 8004fcc:	4601      	mov	r1, r0
    {
        screenContainer->remove(solid);
 8004fce:	6840      	ldr	r0, [r0, #4]
 8004fd0:	6803      	ldr	r3, [r0, #0]
 8004fd2:	3110      	adds	r1, #16
 8004fd4:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8004fd6:	4718      	bx	r3

08004fd8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE4initEv>:
    }

    virtual void init()
 8004fd8:	4601      	mov	r1, r0
    {
        Transition::init();
        // Add the solid (and not-drawing-anything) widget on top to cover the other widgets
        screenContainer->add(solid);
 8004fda:	6840      	ldr	r0, [r0, #4]
 8004fdc:	6803      	ldr	r3, [r0, #0]
 8004fde:	3110      	adds	r1, #16
 8004fe0:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8004fe2:	4718      	bx	r3

08004fe4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE10invalidateEv>:
     * Wipe transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
    }
 8004fe4:	4770      	bx	lr

08004fe6 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE8tearDownEv>:
    virtual void tearDown()
 8004fe6:	4601      	mov	r1, r0
        screenContainer->remove(solid);
 8004fe8:	6840      	ldr	r0, [r0, #4]
 8004fea:	6803      	ldr	r3, [r0, #0]
 8004fec:	3110      	adds	r1, #16
 8004fee:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8004ff0:	4718      	bx	r3

08004ff2 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE4initEv>:
    virtual void init()
 8004ff2:	4601      	mov	r1, r0
        screenContainer->add(solid);
 8004ff4:	6840      	ldr	r0, [r0, #4]
 8004ff6:	6803      	ldr	r3, [r0, #0]
 8004ff8:	3110      	adds	r1, #16
 8004ffa:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8004ffc:	4718      	bx	r3

08004ffe <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE10invalidateEv>:
    }
 8004ffe:	4770      	bx	lr

08005000 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8005000:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 8005002:	68c2      	ldr	r2, [r0, #12]
 8005004:	6841      	ldr	r1, [r0, #4]
 8005006:	1054      	asrs	r4, r2, #1
    virtual void execute()
 8005008:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 800500a:	eb01 0062 	add.w	r0, r1, r2, asr #1
 800500e:	07d2      	lsls	r2, r2, #31
 8005010:	bf48      	it	mi
 8005012:	590a      	ldrmi	r2, [r1, r4]
 8005014:	689b      	ldr	r3, [r3, #8]
    }
 8005016:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 800501a:	bf48      	it	mi
 800501c:	58d3      	ldrmi	r3, [r2, r3]
 800501e:	4718      	bx	r3

08005020 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 8005020:	6843      	ldr	r3, [r0, #4]
 8005022:	b12b      	cbz	r3, 8005030 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 8005024:	6883      	ldr	r3, [r0, #8]
 8005026:	b92b      	cbnz	r3, 8005034 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8005028:	68c0      	ldr	r0, [r0, #12]
 800502a:	f000 0001 	and.w	r0, r0, #1
 800502e:	4770      	bx	lr
 8005030:	4618      	mov	r0, r3
 8005032:	4770      	bx	lr
 8005034:	2001      	movs	r0, #1
    }
 8005036:	4770      	bx	lr

08005038 <_ZN8touchgfx12NoTransitionD0Ev>:
 8005038:	b510      	push	{r4, lr}
 800503a:	210c      	movs	r1, #12
 800503c:	4604      	mov	r4, r0
 800503e:	f027 fd54 	bl	802caea <_ZdlPvj>
 8005042:	4620      	mov	r0, r4
 8005044:	bd10      	pop	{r4, pc}

08005046 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8005046:	b510      	push	{r4, lr}
 8005048:	2110      	movs	r1, #16
 800504a:	4604      	mov	r4, r0
 800504c:	f027 fd4d 	bl	802caea <_ZdlPvj>
 8005050:	4620      	mov	r0, r4
 8005052:	bd10      	pop	{r4, pc}

08005054 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 8005054:	b510      	push	{r4, lr}
 8005056:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 800505a:	4604      	mov	r4, r0
 800505c:	f027 fd45 	bl	802caea <_ZdlPvj>
 8005060:	4620      	mov	r0, r4
 8005062:	bd10      	pop	{r4, pc}

08005064 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED0Ev>:
class WipeTransition : public Transition
 8005064:	b510      	push	{r4, lr}
 8005066:	2138      	movs	r1, #56	; 0x38
 8005068:	4604      	mov	r4, r0
 800506a:	f027 fd3e 	bl	802caea <_ZdlPvj>
 800506e:	4620      	mov	r0, r4
 8005070:	bd10      	pop	{r4, pc}

08005072 <_ZN8touchgfx10Transition13FullSolidRectD0Ev>:
 8005072:	b510      	push	{r4, lr}
 8005074:	2128      	movs	r1, #40	; 0x28
 8005076:	4604      	mov	r4, r0
 8005078:	f027 fd37 	bl	802caea <_ZdlPvj>
 800507c:	4620      	mov	r0, r4
 800507e:	bd10      	pop	{r4, pc}

08005080 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED0Ev>:
 8005080:	b510      	push	{r4, lr}
 8005082:	2138      	movs	r1, #56	; 0x38
 8005084:	4604      	mov	r4, r0
 8005086:	f027 fd30 	bl	802caea <_ZdlPvj>
 800508a:	4620      	mov	r0, r4
 800508c:	bd10      	pop	{r4, pc}

0800508e <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 800508e:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 8005090:	f013 fc76 	bl	8018980 <_ZN8touchgfx11Application11getInstanceEv>
 8005094:	6803      	ldr	r3, [r0, #0]
    }
 8005096:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 800509a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800509c:	4718      	bx	r3
	...

080050a0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv>:
    virtual void handleTickEvent()
 80050a0:	b513      	push	{r0, r1, r4, lr}
 80050a2:	4604      	mov	r4, r0
        animationCounter++;
 80050a4:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 80050a6:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 80050a8:	3001      	adds	r0, #1
 80050aa:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 80050ac:	4298      	cmp	r0, r3
        animationCounter++;
 80050ae:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 80050b0:	d905      	bls.n	80050be <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1e>
            done = true;
 80050b2:	2301      	movs	r3, #1
 80050b4:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 80050b6:	2300      	movs	r3, #0
 80050b8:	72a3      	strb	r3, [r4, #10]
    }
 80050ba:	b002      	add	sp, #8
 80050bc:	bd10      	pop	{r4, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 80050be:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80050c2:	2100      	movs	r1, #0
 80050c4:	f015 facc 	bl	801a660 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 80050c8:	f010 0201 	ands.w	r2, r0, #1
 80050cc:	b283      	uxth	r3, r0
 80050ce:	d12a      	bne.n	8005126 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x86>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 80050d0:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 80050d2:	4a19      	ldr	r2, [pc, #100]	; (8005138 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x98>)
 80050d4:	f9b4 000e 	ldrsh.w	r0, [r4, #14]
 80050d8:	89e3      	ldrh	r3, [r4, #14]
 80050da:	8812      	ldrh	r2, [r2, #0]
        return rect.x;
 80050dc:	f9b4 1014 	ldrsh.w	r1, [r4, #20]
        rect.x = x;
 80050e0:	82a0      	strh	r0, [r4, #20]
 80050e2:	2000      	movs	r0, #0
 80050e4:	1ad2      	subs	r2, r2, r3
 80050e6:	f8ad 0002 	strh.w	r0, [sp, #2]
                screenContainer->invalidateRect(r);
 80050ea:	6860      	ldr	r0, [r4, #4]
        rect.width = width;
 80050ec:	8322      	strh	r2, [r4, #24]
                const uint16_t delta = calculatedValue - prevSolidPos;
 80050ee:	1a5b      	subs	r3, r3, r1
                Rect r(prevSolidPos, 0, delta, HAL::DISPLAY_HEIGHT);
 80050f0:	4a12      	ldr	r2, [pc, #72]	; (800513c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x9c>)
 80050f2:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 80050f6:	6803      	ldr	r3, [r0, #0]
                Rect r(prevSolidPos, 0, delta, HAL::DISPLAY_HEIGHT);
 80050f8:	f9b2 2000 	ldrsh.w	r2, [r2]
                screenContainer->invalidateRect(r);
 80050fc:	691b      	ldr	r3, [r3, #16]
 80050fe:	f8ad 1000 	strh.w	r1, [sp]
 8005102:	f8ad 2006 	strh.w	r2, [sp, #6]
 8005106:	4669      	mov	r1, sp
 8005108:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 800510a:	7aa3      	ldrb	r3, [r4, #10]
 800510c:	2b01      	cmp	r3, #1
 800510e:	d1d4      	bne.n	80050ba <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
 8005110:	4b0b      	ldr	r3, [pc, #44]	; (8005140 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0xa0>)
 8005112:	781b      	ldrb	r3, [r3, #0]
 8005114:	2b00      	cmp	r3, #0
 8005116:	d0d0      	beq.n	80050ba <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8005118:	f013 fc32 	bl	8018980 <_ZN8touchgfx11Application11getInstanceEv>
    }
 800511c:	b002      	add	sp, #8
 800511e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8005122:	f013 bc33 	b.w	801898c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 8005126:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800512a:	2800      	cmp	r0, #0
 800512c:	bfd8      	it	le
 800512e:	460a      	movle	r2, r1
 8005130:	4413      	add	r3, r2
 8005132:	81e3      	strh	r3, [r4, #14]
 8005134:	e7cd      	b.n	80050d2 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x32>
 8005136:	bf00      	nop
 8005138:	20013840 	.word	0x20013840
 800513c:	20013842 	.word	0x20013842
 8005140:	2001384a 	.word	0x2001384a

08005144 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8005144:	b510      	push	{r4, lr}
 8005146:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8005148:	f8d0 0140 	ldr.w	r0, [r0, #320]	; 0x140
 800514c:	b158      	cbz	r0, 8005166 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 800514e:	6803      	ldr	r3, [r0, #0]
 8005150:	68db      	ldr	r3, [r3, #12]
 8005152:	4798      	blx	r3
 8005154:	b138      	cbz	r0, 8005166 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 8005156:	f8d4 0140 	ldr.w	r0, [r4, #320]	; 0x140
 800515a:	6803      	ldr	r3, [r0, #0]
 800515c:	689b      	ldr	r3, [r3, #8]
 800515e:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8005160:	2300      	movs	r3, #0
 8005162:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
    }
 8005166:	bd10      	pop	{r4, pc}

08005168 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoShutting_OffScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoShutting_OffScreenNoTransitionImpl()
{
 8005168:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Shutting_OffView, Shutting_OffPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800516c:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 8005170:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005172:	68a8      	ldr	r0, [r5, #8]
 8005174:	6803      	ldr	r3, [r0, #0]
 8005176:	6a1b      	ldr	r3, [r3, #32]
 8005178:	4798      	blx	r3
 800517a:	2897      	cmp	r0, #151	; 0x97
 800517c:	d805      	bhi.n	800518a <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x22>
 800517e:	4b46      	ldr	r3, [pc, #280]	; (8005298 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x130>)
 8005180:	4a46      	ldr	r2, [pc, #280]	; (800529c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 8005182:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005184:	4846      	ldr	r0, [pc, #280]	; (80052a0 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x138>)
 8005186:	f028 fb97 	bl	802d8b8 <__assert_func>
 800518a:	6868      	ldr	r0, [r5, #4]
 800518c:	6803      	ldr	r3, [r0, #0]
 800518e:	6a1b      	ldr	r3, [r3, #32]
 8005190:	4798      	blx	r3
 8005192:	280f      	cmp	r0, #15
 8005194:	d803      	bhi.n	800519e <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x36>
 8005196:	4b43      	ldr	r3, [pc, #268]	; (80052a4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x13c>)
 8005198:	4a40      	ldr	r2, [pc, #256]	; (800529c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 800519a:	21a4      	movs	r1, #164	; 0xa4
 800519c:	e7f2      	b.n	8005184 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x1c>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800519e:	68e8      	ldr	r0, [r5, #12]
 80051a0:	6803      	ldr	r3, [r0, #0]
 80051a2:	6a1b      	ldr	r3, [r3, #32]
 80051a4:	4798      	blx	r3
 80051a6:	280b      	cmp	r0, #11
 80051a8:	d803      	bhi.n	80051b2 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x4a>
 80051aa:	4b3f      	ldr	r3, [pc, #252]	; (80052a8 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x140>)
 80051ac:	4a3b      	ldr	r2, [pc, #236]	; (800529c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 80051ae:	21a5      	movs	r1, #165	; 0xa5
 80051b0:	e7e8      	b.n	8005184 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x1c>
    Application::getInstance()->clearAllTimerWidgets();
 80051b2:	f013 fbe5 	bl	8018980 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80051b6:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 80052b0 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x148>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 80051ba:	3004      	adds	r0, #4
 80051bc:	f013 fc46 	bl	8018a4c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80051c0:	f8d9 0000 	ldr.w	r0, [r9]
 80051c4:	b110      	cbz	r0, 80051cc <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 80051c6:	6803      	ldr	r3, [r0, #0]
 80051c8:	68db      	ldr	r3, [r3, #12]
 80051ca:	4798      	blx	r3
    if (*currentTrans)
 80051cc:	f8d9 0000 	ldr.w	r0, [r9]
 80051d0:	b110      	cbz	r0, 80051d8 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 80051d2:	6803      	ldr	r3, [r0, #0]
 80051d4:	681b      	ldr	r3, [r3, #0]
 80051d6:	4798      	blx	r3
    if (*currentScreen)
 80051d8:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 80052b4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x14c>
 80051dc:	f8d8 0000 	ldr.w	r0, [r8]
 80051e0:	b110      	cbz	r0, 80051e8 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 80051e2:	6803      	ldr	r3, [r0, #0]
 80051e4:	695b      	ldr	r3, [r3, #20]
 80051e6:	4798      	blx	r3
    if (*currentPresenter)
 80051e8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80051ec:	b110      	cbz	r0, 80051f4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 80051ee:	6803      	ldr	r3, [r0, #0]
 80051f0:	685b      	ldr	r3, [r3, #4]
 80051f2:	4798      	blx	r3
    if (*currentScreen)
 80051f4:	f8d8 0000 	ldr.w	r0, [r8]
 80051f8:	b110      	cbz	r0, 8005200 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 80051fa:	6803      	ldr	r3, [r0, #0]
 80051fc:	681b      	ldr	r3, [r3, #0]
 80051fe:	4798      	blx	r3
    if (*currentPresenter)
 8005200:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005204:	b110      	cbz	r0, 800520c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 8005206:	6803      	ldr	r3, [r0, #0]
 8005208:	689b      	ldr	r3, [r3, #8]
 800520a:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800520c:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 800520e:	6803      	ldr	r3, [r0, #0]
 8005210:	2100      	movs	r1, #0
 8005212:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005214:	4798      	blx	r3
        : screenContainer(0), done(false)
 8005216:	f04f 0b00 	mov.w	fp, #0
 800521a:	4b24      	ldr	r3, [pc, #144]	; (80052ac <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x144>)
 800521c:	6003      	str	r3, [r0, #0]
 800521e:	4604      	mov	r4, r0
 8005220:	f8c0 b004 	str.w	fp, [r0, #4]
 8005224:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005228:	68a8      	ldr	r0, [r5, #8]
 800522a:	6803      	ldr	r3, [r0, #0]
 800522c:	4659      	mov	r1, fp
 800522e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005230:	4798      	blx	r3
 8005232:	4606      	mov	r6, r0
 8005234:	f005 feec 	bl	800b010 <_ZN16Shutting_OffViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005238:	6868      	ldr	r0, [r5, #4]
 800523a:	6803      	ldr	r3, [r0, #0]
 800523c:	4659      	mov	r1, fp
 800523e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005240:	4798      	blx	r3
 8005242:	4631      	mov	r1, r6
 8005244:	4605      	mov	r5, r0
 8005246:	f005 febf 	bl	800afc8 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView>
    *currentTrans = newTransition;
 800524a:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 800524e:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005252:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005256:	b1e5      	cbz	r5, 8005292 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x12a>
 8005258:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 800525a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800525e:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 8005260:	f8c5 a008 	str.w	sl, [r5, #8]
 8005264:	4630      	mov	r0, r6
 8005266:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 8005268:	63f5      	str	r5, [r6, #60]	; 0x3c
 800526a:	4798      	blx	r3
    newPresenter->activate();
 800526c:	682b      	ldr	r3, [r5, #0]
 800526e:	4628      	mov	r0, r5
 8005270:	681b      	ldr	r3, [r3, #0]
 8005272:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005274:	4621      	mov	r1, r4
 8005276:	4630      	mov	r0, r6
 8005278:	f015 f9ae 	bl	801a5d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800527c:	6823      	ldr	r3, [r4, #0]
 800527e:	4620      	mov	r0, r4
 8005280:	691b      	ldr	r3, [r3, #16]
 8005282:	4798      	blx	r3
    newTransition->invalidate();
 8005284:	6823      	ldr	r3, [r4, #0]
 8005286:	695b      	ldr	r3, [r3, #20]
 8005288:	4620      	mov	r0, r4
}
 800528a:	b001      	add	sp, #4
 800528c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005290:	4718      	bx	r3
    model->bind(newPresenter);
 8005292:	462b      	mov	r3, r5
 8005294:	e7e1      	b.n	800525a <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0xf2>
 8005296:	bf00      	nop
 8005298:	0802f5d0 	.word	0x0802f5d0
 800529c:	0802f65e 	.word	0x0802f65e
 80052a0:	0802f76c 	.word	0x0802f76c
 80052a4:	0802f7b3 	.word	0x0802f7b3
 80052a8:	0802f856 	.word	0x0802f856
 80052ac:	08030910 	.word	0x08030910
 80052b0:	20013894 	.word	0x20013894
 80052b4:	20013890 	.word	0x20013890

080052b8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 80052b8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80052ba:	4604      	mov	r4, r0
        animationCounter++;
 80052bc:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 80052be:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 80052c0:	3001      	adds	r0, #1
 80052c2:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 80052c4:	4298      	cmp	r0, r3
        animationCounter++;
 80052c6:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 80052c8:	d905      	bls.n	80052d6 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1e>
            done = true;
 80052ca:	2301      	movs	r3, #1
 80052cc:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 80052ce:	2300      	movs	r3, #0
 80052d0:	72a3      	strb	r3, [r4, #10]
    }
 80052d2:	b003      	add	sp, #12
 80052d4:	bd30      	pop	{r4, r5, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 80052d6:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80052da:	2100      	movs	r1, #0
 80052dc:	f015 f9c0 	bl	801a660 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 80052e0:	f010 0201 	ands.w	r2, r0, #1
 80052e4:	b283      	uxth	r3, r0
 80052e6:	d128      	bne.n	800533a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x82>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 80052e8:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 80052ea:	4b18      	ldr	r3, [pc, #96]	; (800534c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x94>)
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 80052ec:	4818      	ldr	r0, [pc, #96]	; (8005350 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x98>)
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 80052ee:	8819      	ldrh	r1, [r3, #0]
                const uint16_t prevSolidWidth = solid.getWidth();
 80052f0:	8b25      	ldrh	r5, [r4, #24]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 80052f2:	89e3      	ldrh	r3, [r4, #14]
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 80052f4:	f9b0 0000 	ldrsh.w	r0, [r0]
 80052f8:	f8ad 0006 	strh.w	r0, [sp, #6]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 80052fc:	1aca      	subs	r2, r1, r3
                screenContainer->invalidateRect(r);
 80052fe:	6860      	ldr	r0, [r4, #4]
                const uint16_t delta = prevSolidWidth - solid.getWidth();
 8005300:	442b      	add	r3, r5
 8005302:	1a5b      	subs	r3, r3, r1
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8005304:	b212      	sxth	r2, r2
 8005306:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 800530a:	6803      	ldr	r3, [r0, #0]
 800530c:	8322      	strh	r2, [r4, #24]
 800530e:	f8ad 2000 	strh.w	r2, [sp]
 8005312:	2200      	movs	r2, #0
 8005314:	691b      	ldr	r3, [r3, #16]
 8005316:	f8ad 2002 	strh.w	r2, [sp, #2]
 800531a:	4669      	mov	r1, sp
 800531c:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 800531e:	7aa3      	ldrb	r3, [r4, #10]
 8005320:	2b01      	cmp	r3, #1
 8005322:	d1d6      	bne.n	80052d2 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
 8005324:	4b0b      	ldr	r3, [pc, #44]	; (8005354 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x9c>)
 8005326:	781b      	ldrb	r3, [r3, #0]
 8005328:	2b00      	cmp	r3, #0
 800532a:	d0d2      	beq.n	80052d2 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 800532c:	f013 fb28 	bl	8018980 <_ZN8touchgfx11Application11getInstanceEv>
    }
 8005330:	b003      	add	sp, #12
 8005332:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8005336:	f013 bb29 	b.w	801898c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 800533a:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800533e:	2800      	cmp	r0, #0
 8005340:	bfd8      	it	le
 8005342:	460a      	movle	r2, r1
 8005344:	4413      	add	r3, r2
 8005346:	81e3      	strh	r3, [r4, #14]
 8005348:	e7cf      	b.n	80052ea <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x32>
 800534a:	bf00      	nop
 800534c:	20013840 	.word	0x20013840
 8005350:	20013842 	.word	0x20013842
 8005354:	2001384a 	.word	0x2001384a

08005358 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv>:
{
 8005358:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Main_MenuView, Main_MenuPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800535c:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 8005360:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005362:	68a8      	ldr	r0, [r5, #8]
 8005364:	6803      	ldr	r3, [r0, #0]
 8005366:	6a1b      	ldr	r3, [r3, #32]
 8005368:	4798      	blx	r3
 800536a:	f5b0 5f90 	cmp.w	r0, #4608	; 0x1200
 800536e:	d205      	bcs.n	800537c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x24>
 8005370:	4b45      	ldr	r3, [pc, #276]	; (8005488 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x130>)
 8005372:	4a46      	ldr	r2, [pc, #280]	; (800548c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x134>)
 8005374:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005376:	4846      	ldr	r0, [pc, #280]	; (8005490 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 8005378:	f028 fa9e 	bl	802d8b8 <__assert_func>
 800537c:	6868      	ldr	r0, [r5, #4]
 800537e:	6803      	ldr	r3, [r0, #0]
 8005380:	6a1b      	ldr	r3, [r3, #32]
 8005382:	4798      	blx	r3
 8005384:	280f      	cmp	r0, #15
 8005386:	d803      	bhi.n	8005390 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x38>
 8005388:	4b42      	ldr	r3, [pc, #264]	; (8005494 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x13c>)
 800538a:	4a40      	ldr	r2, [pc, #256]	; (800548c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x134>)
 800538c:	21a4      	movs	r1, #164	; 0xa4
 800538e:	e7f2      	b.n	8005376 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005390:	68e8      	ldr	r0, [r5, #12]
 8005392:	6803      	ldr	r3, [r0, #0]
 8005394:	6a1b      	ldr	r3, [r3, #32]
 8005396:	4798      	blx	r3
 8005398:	280b      	cmp	r0, #11
 800539a:	d803      	bhi.n	80053a4 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x4c>
 800539c:	4b3e      	ldr	r3, [pc, #248]	; (8005498 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x140>)
 800539e:	4a3b      	ldr	r2, [pc, #236]	; (800548c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x134>)
 80053a0:	21a5      	movs	r1, #165	; 0xa5
 80053a2:	e7e8      	b.n	8005376 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 80053a4:	f013 faec 	bl	8018980 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80053a8:	f8df 90f4 	ldr.w	r9, [pc, #244]	; 80054a0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x148>
 80053ac:	3004      	adds	r0, #4
 80053ae:	f013 fb4d 	bl	8018a4c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80053b2:	f8d9 0000 	ldr.w	r0, [r9]
 80053b6:	b110      	cbz	r0, 80053be <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x66>
        (*currentTrans)->tearDown();
 80053b8:	6803      	ldr	r3, [r0, #0]
 80053ba:	68db      	ldr	r3, [r3, #12]
 80053bc:	4798      	blx	r3
    if (*currentTrans)
 80053be:	f8d9 0000 	ldr.w	r0, [r9]
 80053c2:	b110      	cbz	r0, 80053ca <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x72>
        (*currentTrans)->~Transition();
 80053c4:	6803      	ldr	r3, [r0, #0]
 80053c6:	681b      	ldr	r3, [r3, #0]
 80053c8:	4798      	blx	r3
    if (*currentScreen)
 80053ca:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 80054a4 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x14c>
 80053ce:	f8d8 0000 	ldr.w	r0, [r8]
 80053d2:	b110      	cbz	r0, 80053da <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 80053d4:	6803      	ldr	r3, [r0, #0]
 80053d6:	695b      	ldr	r3, [r3, #20]
 80053d8:	4798      	blx	r3
    if (*currentPresenter)
 80053da:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80053de:	b110      	cbz	r0, 80053e6 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x8e>
        (*currentPresenter)->deactivate();
 80053e0:	6803      	ldr	r3, [r0, #0]
 80053e2:	685b      	ldr	r3, [r3, #4]
 80053e4:	4798      	blx	r3
    if (*currentScreen)
 80053e6:	f8d8 0000 	ldr.w	r0, [r8]
 80053ea:	b110      	cbz	r0, 80053f2 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x9a>
        (*currentScreen)->~Screen();
 80053ec:	6803      	ldr	r3, [r0, #0]
 80053ee:	681b      	ldr	r3, [r3, #0]
 80053f0:	4798      	blx	r3
    if (*currentPresenter)
 80053f2:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80053f6:	b110      	cbz	r0, 80053fe <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 80053f8:	6803      	ldr	r3, [r0, #0]
 80053fa:	689b      	ldr	r3, [r3, #8]
 80053fc:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80053fe:	68e8      	ldr	r0, [r5, #12]
 8005400:	6803      	ldr	r3, [r0, #0]
 8005402:	2100      	movs	r1, #0
 8005404:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005406:	4798      	blx	r3
 8005408:	f04f 0b00 	mov.w	fp, #0
 800540c:	4b23      	ldr	r3, [pc, #140]	; (800549c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x144>)
 800540e:	6003      	str	r3, [r0, #0]
 8005410:	4604      	mov	r4, r0
 8005412:	f8c0 b004 	str.w	fp, [r0, #4]
 8005416:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800541a:	68a8      	ldr	r0, [r5, #8]
 800541c:	6803      	ldr	r3, [r0, #0]
 800541e:	4659      	mov	r1, fp
 8005420:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005422:	4798      	blx	r3
 8005424:	4606      	mov	r6, r0
 8005426:	f005 faa7 	bl	800a978 <_ZN13Main_MenuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800542a:	6868      	ldr	r0, [r5, #4]
 800542c:	6803      	ldr	r3, [r0, #0]
 800542e:	4659      	mov	r1, fp
 8005430:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005432:	4798      	blx	r3
 8005434:	4631      	mov	r1, r6
 8005436:	4605      	mov	r5, r0
 8005438:	f005 fa78 	bl	800a92c <_ZN18Main_MenuPresenterC1ER13Main_MenuView>
    *currentTrans = newTransition;
 800543c:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8005440:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005444:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005448:	b1e5      	cbz	r5, 8005484 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x12c>
 800544a:	1d2b      	adds	r3, r5, #4
 800544c:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005450:	6833      	ldr	r3, [r6, #0]
 8005452:	f8c5 a008 	str.w	sl, [r5, #8]
 8005456:	4630      	mov	r0, r6
 8005458:	68db      	ldr	r3, [r3, #12]
 800545a:	63f5      	str	r5, [r6, #60]	; 0x3c
 800545c:	4798      	blx	r3
    newPresenter->activate();
 800545e:	682b      	ldr	r3, [r5, #0]
 8005460:	4628      	mov	r0, r5
 8005462:	681b      	ldr	r3, [r3, #0]
 8005464:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005466:	4621      	mov	r1, r4
 8005468:	4630      	mov	r0, r6
 800546a:	f015 f8b5 	bl	801a5d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800546e:	6823      	ldr	r3, [r4, #0]
 8005470:	4620      	mov	r0, r4
 8005472:	691b      	ldr	r3, [r3, #16]
 8005474:	4798      	blx	r3
    newTransition->invalidate();
 8005476:	6823      	ldr	r3, [r4, #0]
 8005478:	695b      	ldr	r3, [r3, #20]
 800547a:	4620      	mov	r0, r4
}
 800547c:	b001      	add	sp, #4
 800547e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005482:	4718      	bx	r3
    model->bind(newPresenter);
 8005484:	462b      	mov	r3, r5
 8005486:	e7e1      	b.n	800544c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0xf4>
 8005488:	0802f5d0 	.word	0x0802f5d0
 800548c:	0802f8f9 	.word	0x0802f8f9
 8005490:	0802f76c 	.word	0x0802f76c
 8005494:	0802f7b3 	.word	0x0802f7b3
 8005498:	0802f856 	.word	0x0802f856
 800549c:	08030910 	.word	0x08030910
 80054a0:	20013894 	.word	0x20013894
 80054a4:	20013890 	.word	0x20013890

080054a8 <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80054a8:	4b04      	ldr	r3, [pc, #16]	; (80054bc <_ZN8touchgfx3HAL3lcdEv+0x14>)
 80054aa:	681b      	ldr	r3, [r3, #0]
 80054ac:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80054b0:	b10a      	cbz	r2, 80054b6 <_ZN8touchgfx3HAL3lcdEv+0xe>
 80054b2:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80054b4:	b900      	cbnz	r0, 80054b8 <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 80054b6:	6898      	ldr	r0, [r3, #8]
    }
 80054b8:	4770      	bx	lr
 80054ba:	bf00      	nop
 80054bc:	2001384c 	.word	0x2001384c

080054c0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 80054c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80054c2:	4604      	mov	r4, r0
 80054c4:	4617      	mov	r7, r2
 80054c6:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 80054c8:	f013 fb8e 	bl	8018be8 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 80054cc:	4b10      	ldr	r3, [pc, #64]	; (8005510 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
 80054ce:	601c      	str	r4, [r3, #0]
      model(m)
 80054d0:	4b10      	ldr	r3, [pc, #64]	; (8005514 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 80054d2:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 80054d4:	4b10      	ldr	r3, [pc, #64]	; (8005518 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
        : currentPresenter(0),
 80054d6:	2500      	movs	r5, #0
 80054d8:	e9c4 3551 	strd	r3, r5, [r4, #324]	; 0x144
        return instance;
 80054dc:	4b0f      	ldr	r3, [pc, #60]	; (800551c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 80054de:	e9c4 5553 	strd	r5, r5, [r4, #332]	; 0x14c
 80054e2:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 80054e4:	6803      	ldr	r3, [r0, #0]
 80054e6:	2101      	movs	r1, #1
 80054e8:	689b      	ldr	r3, [r3, #8]
          pendingScreenTransitionCallback(0)
 80054ea:	e9c4 554f 	strd	r5, r5, [r4, #316]	; 0x13c
      model(m)
 80054ee:	e9c4 7655 	strd	r7, r6, [r4, #340]	; 0x154
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 80054f2:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 80054f4:	4628      	mov	r0, r5
 80054f6:	f005 f873 	bl	800a5e0 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 80054fa:	f7ff ffd5 	bl	80054a8 <_ZN8touchgfx3HAL3lcdEv>
 80054fe:	f01c ff76 	bl	80223ee <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 8005502:	f7ff ffd1 	bl	80054a8 <_ZN8touchgfx3HAL3lcdEv>
 8005506:	f01c ffed 	bl	80224e4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
 800550a:	4620      	mov	r0, r4
 800550c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800550e:	bf00      	nop
 8005510:	200138a0 	.word	0x200138a0
 8005514:	080308bc 	.word	0x080308bc
 8005518:	080308a4 	.word	0x080308a4
 800551c:	2001384c 	.word	0x2001384c

08005520 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8005520:	4b06      	ldr	r3, [pc, #24]	; (800553c <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv+0x1c>)
 8005522:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8005526:	2300      	movs	r3, #0
 8005528:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 800552c:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8005530:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8005534:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8005538:	4770      	bx	lr
 800553a:	bf00      	nop
 800553c:	08005359 	.word	0x08005359

08005540 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>:
 8005540:	4b06      	ldr	r3, [pc, #24]	; (800555c <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv+0x1c>)
 8005542:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8005546:	2300      	movs	r3, #0
 8005548:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 800554c:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8005550:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8005554:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8005558:	4770      	bx	lr
 800555a:	bf00      	nop
 800555c:	080059c5 	.word	0x080059c5

08005560 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv>:
 8005560:	4b06      	ldr	r3, [pc, #24]	; (800557c <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv+0x1c>)
 8005562:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8005566:	2300      	movs	r3, #0
 8005568:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 800556c:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8005570:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8005574:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8005578:	4770      	bx	lr
 800557a:	bf00      	nop
 800557c:	08006569 	.word	0x08006569

08005580 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>:
 8005580:	4b06      	ldr	r3, [pc, #24]	; (800559c <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv+0x1c>)
 8005582:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8005586:	2300      	movs	r3, #0
 8005588:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 800558c:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8005590:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8005594:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8005598:	4770      	bx	lr
 800559a:	bf00      	nop
 800559c:	08005885 	.word	0x08005885

080055a0 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>:
 80055a0:	4b06      	ldr	r3, [pc, #24]	; (80055bc <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv+0x1c>)
 80055a2:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80055a6:	2300      	movs	r3, #0
 80055a8:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80055ac:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80055b0:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80055b4:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80055b8:	4770      	bx	lr
 80055ba:	bf00      	nop
 80055bc:	08006429 	.word	0x08006429

080055c0 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv>:
 80055c0:	4b06      	ldr	r3, [pc, #24]	; (80055dc <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv+0x1c>)
 80055c2:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80055c6:	2300      	movs	r3, #0
 80055c8:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80055cc:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80055d0:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80055d4:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80055d8:	4770      	bx	lr
 80055da:	bf00      	nop
 80055dc:	080062e9 	.word	0x080062e9

080055e0 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv>:
 80055e0:	4b06      	ldr	r3, [pc, #24]	; (80055fc <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv+0x1c>)
 80055e2:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80055e6:	2300      	movs	r3, #0
 80055e8:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80055ec:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80055f0:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80055f4:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80055f8:	4770      	bx	lr
 80055fa:	bf00      	nop
 80055fc:	080061a9 	.word	0x080061a9

08005600 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv>:
 8005600:	4b06      	ldr	r3, [pc, #24]	; (800561c <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv+0x1c>)
 8005602:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8005606:	2300      	movs	r3, #0
 8005608:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 800560c:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8005610:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8005614:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8005618:	4770      	bx	lr
 800561a:	bf00      	nop
 800561c:	08006069 	.word	0x08006069

08005620 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>:
 8005620:	4b06      	ldr	r3, [pc, #24]	; (800563c <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv+0x1c>)
 8005622:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8005626:	2300      	movs	r3, #0
 8005628:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 800562c:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8005630:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8005634:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8005638:	4770      	bx	lr
 800563a:	bf00      	nop
 800563c:	08005745 	.word	0x08005745

08005640 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv>:
 8005640:	4b06      	ldr	r3, [pc, #24]	; (800565c <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv+0x1c>)
 8005642:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8005646:	2300      	movs	r3, #0
 8005648:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 800564c:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8005650:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8005654:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8005658:	4770      	bx	lr
 800565a:	bf00      	nop
 800565c:	08005f29 	.word	0x08005f29

08005660 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv>:
 8005660:	4b06      	ldr	r3, [pc, #24]	; (800567c <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv+0x1c>)
 8005662:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8005666:	2300      	movs	r3, #0
 8005668:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 800566c:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8005670:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8005674:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8005678:	4770      	bx	lr
 800567a:	bf00      	nop
 800567c:	08005de9 	.word	0x08005de9

08005680 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv>:
 8005680:	4b06      	ldr	r3, [pc, #24]	; (800569c <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv+0x1c>)
 8005682:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8005686:	2300      	movs	r3, #0
 8005688:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 800568c:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8005690:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8005694:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8005698:	4770      	bx	lr
 800569a:	bf00      	nop
 800569c:	08005ca9 	.word	0x08005ca9

080056a0 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv>:
 80056a0:	4b06      	ldr	r3, [pc, #24]	; (80056bc <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv+0x1c>)
 80056a2:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80056a6:	2300      	movs	r3, #0
 80056a8:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80056ac:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80056b0:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80056b4:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80056b8:	4770      	bx	lr
 80056ba:	bf00      	nop
 80056bc:	08005b69 	.word	0x08005b69

080056c0 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>:
 80056c0:	4b06      	ldr	r3, [pc, #24]	; (80056dc <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv+0x1c>)
 80056c2:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80056c6:	2300      	movs	r3, #0
 80056c8:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80056cc:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80056d0:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80056d4:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80056d8:	4770      	bx	lr
 80056da:	bf00      	nop
 80056dc:	08005169 	.word	0x08005169

080056e0 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>:
 80056e0:	6803      	ldr	r3, [r0, #0]
 80056e2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80056e4:	4718      	bx	r3
	...

080056e8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>:
          solid()
 80056e8:	4b12      	ldr	r3, [pc, #72]	; (8005734 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 80056ea:	b513      	push	{r0, r1, r4, lr}
          solid()
 80056ec:	6003      	str	r3, [r0, #0]
 80056ee:	f44f 7380 	mov.w	r3, #256	; 0x100
 80056f2:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 80056f4:	4b10      	ldr	r3, [pc, #64]	; (8005738 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x50>)
          animationSteps(transitionSteps),
 80056f6:	7241      	strb	r1, [r0, #9]
 80056f8:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 80056fa:	4910      	ldr	r1, [pc, #64]	; (800573c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 80056fc:	4b10      	ldr	r3, [pc, #64]	; (8005740 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 80056fe:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 8005702:	f9b3 3000 	ldrsh.w	r3, [r3]
 8005706:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 8005708:	2200      	movs	r2, #0
 800570a:	6042      	str	r2, [r0, #4]
 800570c:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 800570e:	7282      	strb	r2, [r0, #10]
          calculatedValue(0),
 8005710:	81c2      	strh	r2, [r0, #14]
          solid()
 8005712:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8005716:	e9c0 2207 	strd	r2, r2, [r0, #28]
 800571a:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 800571e:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 8005722:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8005724:	9100      	str	r1, [sp, #0]
 8005726:	3010      	adds	r0, #16
 8005728:	4611      	mov	r1, r2
 800572a:	f7fd ff64 	bl	80035f6 <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 800572e:	4620      	mov	r0, r4
 8005730:	b002      	add	sp, #8
 8005732:	bd10      	pop	{r4, pc}
 8005734:	08030958 	.word	0x08030958
 8005738:	0803083c 	.word	0x0803083c
 800573c:	20013842 	.word	0x20013842
 8005740:	20013840 	.word	0x20013840

08005744 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv>:
{
 8005744:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_AccurateView, Measurement_AccuratePresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005748:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 800574c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800574e:	68a0      	ldr	r0, [r4, #8]
 8005750:	6803      	ldr	r3, [r0, #0]
 8005752:	6a1b      	ldr	r3, [r3, #32]
 8005754:	4798      	blx	r3
 8005756:	f241 13c3 	movw	r3, #4547	; 0x11c3
 800575a:	4298      	cmp	r0, r3
 800575c:	d805      	bhi.n	800576a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x26>
 800575e:	4b42      	ldr	r3, [pc, #264]	; (8005868 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x124>)
 8005760:	4a42      	ldr	r2, [pc, #264]	; (800586c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8005762:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005764:	4842      	ldr	r0, [pc, #264]	; (8005870 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x12c>)
 8005766:	f028 f8a7 	bl	802d8b8 <__assert_func>
 800576a:	6860      	ldr	r0, [r4, #4]
 800576c:	6803      	ldr	r3, [r0, #0]
 800576e:	6a1b      	ldr	r3, [r3, #32]
 8005770:	4798      	blx	r3
 8005772:	280f      	cmp	r0, #15
 8005774:	d803      	bhi.n	800577e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x3a>
 8005776:	4b3f      	ldr	r3, [pc, #252]	; (8005874 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x130>)
 8005778:	4a3c      	ldr	r2, [pc, #240]	; (800586c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 800577a:	21a4      	movs	r1, #164	; 0xa4
 800577c:	e7f2      	b.n	8005764 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800577e:	68e0      	ldr	r0, [r4, #12]
 8005780:	6803      	ldr	r3, [r0, #0]
 8005782:	6a1b      	ldr	r3, [r3, #32]
 8005784:	4798      	blx	r3
 8005786:	2837      	cmp	r0, #55	; 0x37
 8005788:	d803      	bhi.n	8005792 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x4e>
 800578a:	4b3b      	ldr	r3, [pc, #236]	; (8005878 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x134>)
 800578c:	4a37      	ldr	r2, [pc, #220]	; (800586c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 800578e:	21a5      	movs	r1, #165	; 0xa5
 8005790:	e7e8      	b.n	8005764 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8005792:	f013 f8f5 	bl	8018980 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005796:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 800587c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x138>
 800579a:	3004      	adds	r0, #4
 800579c:	f013 f956 	bl	8018a4c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80057a0:	f8d9 0000 	ldr.w	r0, [r9]
 80057a4:	b110      	cbz	r0, 80057ac <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x68>
        (*currentTrans)->tearDown();
 80057a6:	6803      	ldr	r3, [r0, #0]
 80057a8:	68db      	ldr	r3, [r3, #12]
 80057aa:	4798      	blx	r3
    if (*currentTrans)
 80057ac:	f8d9 0000 	ldr.w	r0, [r9]
 80057b0:	b110      	cbz	r0, 80057b8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x74>
        (*currentTrans)->~Transition();
 80057b2:	6803      	ldr	r3, [r0, #0]
 80057b4:	681b      	ldr	r3, [r3, #0]
 80057b6:	4798      	blx	r3
    if (*currentScreen)
 80057b8:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8005880 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x13c>
 80057bc:	f8d8 0000 	ldr.w	r0, [r8]
 80057c0:	b110      	cbz	r0, 80057c8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80057c2:	6803      	ldr	r3, [r0, #0]
 80057c4:	695b      	ldr	r3, [r3, #20]
 80057c6:	4798      	blx	r3
    if (*currentPresenter)
 80057c8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80057cc:	b110      	cbz	r0, 80057d4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x90>
        (*currentPresenter)->deactivate();
 80057ce:	6803      	ldr	r3, [r0, #0]
 80057d0:	685b      	ldr	r3, [r3, #4]
 80057d2:	4798      	blx	r3
    if (*currentScreen)
 80057d4:	f8d8 0000 	ldr.w	r0, [r8]
 80057d8:	b110      	cbz	r0, 80057e0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x9c>
        (*currentScreen)->~Screen();
 80057da:	6803      	ldr	r3, [r0, #0]
 80057dc:	681b      	ldr	r3, [r3, #0]
 80057de:	4798      	blx	r3
    if (*currentPresenter)
 80057e0:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80057e4:	b110      	cbz	r0, 80057ec <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80057e6:	6803      	ldr	r3, [r0, #0]
 80057e8:	689b      	ldr	r3, [r3, #8]
 80057ea:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80057ec:	68e0      	ldr	r0, [r4, #12]
 80057ee:	2100      	movs	r1, #0
 80057f0:	f7ff ff76 	bl	80056e0 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 80057f4:	2114      	movs	r1, #20
 80057f6:	4605      	mov	r5, r0
 80057f8:	f7ff ff76 	bl	80056e8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80057fc:	68a0      	ldr	r0, [r4, #8]
 80057fe:	6803      	ldr	r3, [r0, #0]
 8005800:	2100      	movs	r1, #0
 8005802:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005804:	4798      	blx	r3
 8005806:	4606      	mov	r6, r0
 8005808:	f005 f976 	bl	800aaf8 <_ZN24Measurement_AccurateViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800580c:	6860      	ldr	r0, [r4, #4]
 800580e:	6803      	ldr	r3, [r0, #0]
 8005810:	2100      	movs	r1, #0
 8005812:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005814:	4798      	blx	r3
 8005816:	4631      	mov	r1, r6
 8005818:	4604      	mov	r4, r0
 800581a:	f005 f947 	bl	800aaac <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>
    *currentTrans = newTransition;
 800581e:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005822:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005826:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800582a:	b1dc      	cbz	r4, 8005864 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x120>
 800582c:	1d23      	adds	r3, r4, #4
 800582e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005832:	6833      	ldr	r3, [r6, #0]
 8005834:	f8c4 a008 	str.w	sl, [r4, #8]
 8005838:	4630      	mov	r0, r6
 800583a:	68db      	ldr	r3, [r3, #12]
 800583c:	63f4      	str	r4, [r6, #60]	; 0x3c
 800583e:	4798      	blx	r3
    newPresenter->activate();
 8005840:	6823      	ldr	r3, [r4, #0]
 8005842:	4620      	mov	r0, r4
 8005844:	681b      	ldr	r3, [r3, #0]
 8005846:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005848:	4629      	mov	r1, r5
 800584a:	4630      	mov	r0, r6
 800584c:	f014 fec4 	bl	801a5d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005850:	682b      	ldr	r3, [r5, #0]
 8005852:	4628      	mov	r0, r5
 8005854:	691b      	ldr	r3, [r3, #16]
 8005856:	4798      	blx	r3
    newTransition->invalidate();
 8005858:	682b      	ldr	r3, [r5, #0]
 800585a:	4628      	mov	r0, r5
 800585c:	695b      	ldr	r3, [r3, #20]
}
 800585e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005862:	4718      	bx	r3
    model->bind(newPresenter);
 8005864:	4623      	mov	r3, r4
 8005866:	e7e2      	b.n	800582e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0xea>
 8005868:	0802f5d0 	.word	0x0802f5d0
 800586c:	0802fa01 	.word	0x0802fa01
 8005870:	0802f76c 	.word	0x0802f76c
 8005874:	0802f7b3 	.word	0x0802f7b3
 8005878:	0802f856 	.word	0x0802f856
 800587c:	20013894 	.word	0x20013894
 8005880:	20013890 	.word	0x20013890

08005884 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv>:
{
 8005884:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MeasurementView, MeasurementPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005888:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 800588c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800588e:	68a0      	ldr	r0, [r4, #8]
 8005890:	6803      	ldr	r3, [r0, #0]
 8005892:	6a1b      	ldr	r3, [r3, #32]
 8005894:	4798      	blx	r3
 8005896:	f241 13c3 	movw	r3, #4547	; 0x11c3
 800589a:	4298      	cmp	r0, r3
 800589c:	d805      	bhi.n	80058aa <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x26>
 800589e:	4b42      	ldr	r3, [pc, #264]	; (80059a8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x124>)
 80058a0:	4a42      	ldr	r2, [pc, #264]	; (80059ac <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 80058a2:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80058a4:	4842      	ldr	r0, [pc, #264]	; (80059b0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x12c>)
 80058a6:	f028 f807 	bl	802d8b8 <__assert_func>
 80058aa:	6860      	ldr	r0, [r4, #4]
 80058ac:	6803      	ldr	r3, [r0, #0]
 80058ae:	6a1b      	ldr	r3, [r3, #32]
 80058b0:	4798      	blx	r3
 80058b2:	280f      	cmp	r0, #15
 80058b4:	d803      	bhi.n	80058be <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x3a>
 80058b6:	4b3f      	ldr	r3, [pc, #252]	; (80059b4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x130>)
 80058b8:	4a3c      	ldr	r2, [pc, #240]	; (80059ac <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 80058ba:	21a4      	movs	r1, #164	; 0xa4
 80058bc:	e7f2      	b.n	80058a4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80058be:	68e0      	ldr	r0, [r4, #12]
 80058c0:	6803      	ldr	r3, [r0, #0]
 80058c2:	6a1b      	ldr	r3, [r3, #32]
 80058c4:	4798      	blx	r3
 80058c6:	2837      	cmp	r0, #55	; 0x37
 80058c8:	d803      	bhi.n	80058d2 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x4e>
 80058ca:	4b3b      	ldr	r3, [pc, #236]	; (80059b8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x134>)
 80058cc:	4a37      	ldr	r2, [pc, #220]	; (80059ac <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 80058ce:	21a5      	movs	r1, #165	; 0xa5
 80058d0:	e7e8      	b.n	80058a4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80058d2:	f013 f855 	bl	8018980 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80058d6:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80059bc <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x138>
 80058da:	3004      	adds	r0, #4
 80058dc:	f013 f8b6 	bl	8018a4c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80058e0:	f8d9 0000 	ldr.w	r0, [r9]
 80058e4:	b110      	cbz	r0, 80058ec <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x68>
        (*currentTrans)->tearDown();
 80058e6:	6803      	ldr	r3, [r0, #0]
 80058e8:	68db      	ldr	r3, [r3, #12]
 80058ea:	4798      	blx	r3
    if (*currentTrans)
 80058ec:	f8d9 0000 	ldr.w	r0, [r9]
 80058f0:	b110      	cbz	r0, 80058f8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x74>
        (*currentTrans)->~Transition();
 80058f2:	6803      	ldr	r3, [r0, #0]
 80058f4:	681b      	ldr	r3, [r3, #0]
 80058f6:	4798      	blx	r3
    if (*currentScreen)
 80058f8:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80059c0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x13c>
 80058fc:	f8d8 0000 	ldr.w	r0, [r8]
 8005900:	b110      	cbz	r0, 8005908 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8005902:	6803      	ldr	r3, [r0, #0]
 8005904:	695b      	ldr	r3, [r3, #20]
 8005906:	4798      	blx	r3
    if (*currentPresenter)
 8005908:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800590c:	b110      	cbz	r0, 8005914 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x90>
        (*currentPresenter)->deactivate();
 800590e:	6803      	ldr	r3, [r0, #0]
 8005910:	685b      	ldr	r3, [r3, #4]
 8005912:	4798      	blx	r3
    if (*currentScreen)
 8005914:	f8d8 0000 	ldr.w	r0, [r8]
 8005918:	b110      	cbz	r0, 8005920 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x9c>
        (*currentScreen)->~Screen();
 800591a:	6803      	ldr	r3, [r0, #0]
 800591c:	681b      	ldr	r3, [r3, #0]
 800591e:	4798      	blx	r3
    if (*currentPresenter)
 8005920:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005924:	b110      	cbz	r0, 800592c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8005926:	6803      	ldr	r3, [r0, #0]
 8005928:	689b      	ldr	r3, [r3, #8]
 800592a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800592c:	68e0      	ldr	r0, [r4, #12]
 800592e:	2100      	movs	r1, #0
 8005930:	f7ff fed6 	bl	80056e0 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8005934:	2114      	movs	r1, #20
 8005936:	4605      	mov	r5, r0
 8005938:	f7ff fed6 	bl	80056e8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800593c:	68a0      	ldr	r0, [r4, #8]
 800593e:	6803      	ldr	r3, [r0, #0]
 8005940:	2100      	movs	r1, #0
 8005942:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005944:	4798      	blx	r3
 8005946:	4606      	mov	r6, r0
 8005948:	f005 f876 	bl	800aa38 <_ZN15MeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800594c:	6860      	ldr	r0, [r4, #4]
 800594e:	6803      	ldr	r3, [r0, #0]
 8005950:	2100      	movs	r1, #0
 8005952:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005954:	4798      	blx	r3
 8005956:	4631      	mov	r1, r6
 8005958:	4604      	mov	r4, r0
 800595a:	f005 f847 	bl	800a9ec <_ZN20MeasurementPresenterC1ER15MeasurementView>
    *currentTrans = newTransition;
 800595e:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005962:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005966:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800596a:	b1dc      	cbz	r4, 80059a4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x120>
 800596c:	1d23      	adds	r3, r4, #4
 800596e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005972:	6833      	ldr	r3, [r6, #0]
 8005974:	f8c4 a008 	str.w	sl, [r4, #8]
 8005978:	4630      	mov	r0, r6
 800597a:	68db      	ldr	r3, [r3, #12]
 800597c:	63f4      	str	r4, [r6, #60]	; 0x3c
 800597e:	4798      	blx	r3
    newPresenter->activate();
 8005980:	6823      	ldr	r3, [r4, #0]
 8005982:	4620      	mov	r0, r4
 8005984:	681b      	ldr	r3, [r3, #0]
 8005986:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005988:	4629      	mov	r1, r5
 800598a:	4630      	mov	r0, r6
 800598c:	f014 fe24 	bl	801a5d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005990:	682b      	ldr	r3, [r5, #0]
 8005992:	4628      	mov	r0, r5
 8005994:	691b      	ldr	r3, [r3, #16]
 8005996:	4798      	blx	r3
    newTransition->invalidate();
 8005998:	682b      	ldr	r3, [r5, #0]
 800599a:	4628      	mov	r0, r5
 800599c:	695b      	ldr	r3, [r3, #20]
}
 800599e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80059a2:	4718      	bx	r3
    model->bind(newPresenter);
 80059a4:	4623      	mov	r3, r4
 80059a6:	e7e2      	b.n	800596e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0xea>
 80059a8:	0802f5d0 	.word	0x0802f5d0
 80059ac:	0802fb31 	.word	0x0802fb31
 80059b0:	0802f76c 	.word	0x0802f76c
 80059b4:	0802f7b3 	.word	0x0802f7b3
 80059b8:	0802f856 	.word	0x0802f856
 80059bc:	20013894 	.word	0x20013894
 80059c0:	20013890 	.word	0x20013890

080059c4 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv>:
{
 80059c4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Main_MenuView, Main_MenuPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80059c8:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80059cc:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80059ce:	68a0      	ldr	r0, [r4, #8]
 80059d0:	6803      	ldr	r3, [r0, #0]
 80059d2:	6a1b      	ldr	r3, [r3, #32]
 80059d4:	4798      	blx	r3
 80059d6:	f5b0 5f90 	cmp.w	r0, #4608	; 0x1200
 80059da:	d205      	bcs.n	80059e8 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x24>
 80059dc:	4b42      	ldr	r3, [pc, #264]	; (8005ae8 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x124>)
 80059de:	4a43      	ldr	r2, [pc, #268]	; (8005aec <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 80059e0:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80059e2:	4843      	ldr	r0, [pc, #268]	; (8005af0 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x12c>)
 80059e4:	f027 ff68 	bl	802d8b8 <__assert_func>
 80059e8:	6860      	ldr	r0, [r4, #4]
 80059ea:	6803      	ldr	r3, [r0, #0]
 80059ec:	6a1b      	ldr	r3, [r3, #32]
 80059ee:	4798      	blx	r3
 80059f0:	280f      	cmp	r0, #15
 80059f2:	d803      	bhi.n	80059fc <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x38>
 80059f4:	4b3f      	ldr	r3, [pc, #252]	; (8005af4 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x130>)
 80059f6:	4a3d      	ldr	r2, [pc, #244]	; (8005aec <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 80059f8:	21a4      	movs	r1, #164	; 0xa4
 80059fa:	e7f2      	b.n	80059e2 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80059fc:	68e0      	ldr	r0, [r4, #12]
 80059fe:	6803      	ldr	r3, [r0, #0]
 8005a00:	6a1b      	ldr	r3, [r3, #32]
 8005a02:	4798      	blx	r3
 8005a04:	2837      	cmp	r0, #55	; 0x37
 8005a06:	d803      	bhi.n	8005a10 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x4c>
 8005a08:	4b3b      	ldr	r3, [pc, #236]	; (8005af8 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x134>)
 8005a0a:	4a38      	ldr	r2, [pc, #224]	; (8005aec <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8005a0c:	21a5      	movs	r1, #165	; 0xa5
 8005a0e:	e7e8      	b.n	80059e2 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8005a10:	f012 ffb6 	bl	8018980 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005a14:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005afc <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x138>
 8005a18:	3004      	adds	r0, #4
 8005a1a:	f013 f817 	bl	8018a4c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005a1e:	f8d9 0000 	ldr.w	r0, [r9]
 8005a22:	b110      	cbz	r0, 8005a2a <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8005a24:	6803      	ldr	r3, [r0, #0]
 8005a26:	68db      	ldr	r3, [r3, #12]
 8005a28:	4798      	blx	r3
    if (*currentTrans)
 8005a2a:	f8d9 0000 	ldr.w	r0, [r9]
 8005a2e:	b110      	cbz	r0, 8005a36 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8005a30:	6803      	ldr	r3, [r0, #0]
 8005a32:	681b      	ldr	r3, [r3, #0]
 8005a34:	4798      	blx	r3
    if (*currentScreen)
 8005a36:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8005b00 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x13c>
 8005a3a:	f8d8 0000 	ldr.w	r0, [r8]
 8005a3e:	b110      	cbz	r0, 8005a46 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8005a40:	6803      	ldr	r3, [r0, #0]
 8005a42:	695b      	ldr	r3, [r3, #20]
 8005a44:	4798      	blx	r3
    if (*currentPresenter)
 8005a46:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005a4a:	b110      	cbz	r0, 8005a52 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8005a4c:	6803      	ldr	r3, [r0, #0]
 8005a4e:	685b      	ldr	r3, [r3, #4]
 8005a50:	4798      	blx	r3
    if (*currentScreen)
 8005a52:	f8d8 0000 	ldr.w	r0, [r8]
 8005a56:	b110      	cbz	r0, 8005a5e <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8005a58:	6803      	ldr	r3, [r0, #0]
 8005a5a:	681b      	ldr	r3, [r3, #0]
 8005a5c:	4798      	blx	r3
    if (*currentPresenter)
 8005a5e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005a62:	b110      	cbz	r0, 8005a6a <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8005a64:	6803      	ldr	r3, [r0, #0]
 8005a66:	689b      	ldr	r3, [r3, #8]
 8005a68:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005a6a:	68e0      	ldr	r0, [r4, #12]
 8005a6c:	2100      	movs	r1, #0
 8005a6e:	f7ff fe37 	bl	80056e0 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8005a72:	2114      	movs	r1, #20
 8005a74:	4605      	mov	r5, r0
 8005a76:	f7ff fe37 	bl	80056e8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005a7a:	68a0      	ldr	r0, [r4, #8]
 8005a7c:	6803      	ldr	r3, [r0, #0]
 8005a7e:	2100      	movs	r1, #0
 8005a80:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005a82:	4798      	blx	r3
 8005a84:	4606      	mov	r6, r0
 8005a86:	f004 ff77 	bl	800a978 <_ZN13Main_MenuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005a8a:	6860      	ldr	r0, [r4, #4]
 8005a8c:	6803      	ldr	r3, [r0, #0]
 8005a8e:	2100      	movs	r1, #0
 8005a90:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005a92:	4798      	blx	r3
 8005a94:	4631      	mov	r1, r6
 8005a96:	4604      	mov	r4, r0
 8005a98:	f004 ff48 	bl	800a92c <_ZN18Main_MenuPresenterC1ER13Main_MenuView>
    *currentTrans = newTransition;
 8005a9c:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005aa0:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005aa4:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005aa8:	b1dc      	cbz	r4, 8005ae2 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x11e>
 8005aaa:	1d23      	adds	r3, r4, #4
 8005aac:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005ab0:	6833      	ldr	r3, [r6, #0]
 8005ab2:	f8c4 a008 	str.w	sl, [r4, #8]
 8005ab6:	4630      	mov	r0, r6
 8005ab8:	68db      	ldr	r3, [r3, #12]
 8005aba:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005abc:	4798      	blx	r3
    newPresenter->activate();
 8005abe:	6823      	ldr	r3, [r4, #0]
 8005ac0:	4620      	mov	r0, r4
 8005ac2:	681b      	ldr	r3, [r3, #0]
 8005ac4:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005ac6:	4629      	mov	r1, r5
 8005ac8:	4630      	mov	r0, r6
 8005aca:	f014 fd85 	bl	801a5d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005ace:	682b      	ldr	r3, [r5, #0]
 8005ad0:	4628      	mov	r0, r5
 8005ad2:	691b      	ldr	r3, [r3, #16]
 8005ad4:	4798      	blx	r3
    newTransition->invalidate();
 8005ad6:	682b      	ldr	r3, [r5, #0]
 8005ad8:	4628      	mov	r0, r5
 8005ada:	695b      	ldr	r3, [r3, #20]
}
 8005adc:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005ae0:	4718      	bx	r3
    model->bind(newPresenter);
 8005ae2:	4623      	mov	r3, r4
 8005ae4:	e7e2      	b.n	8005aac <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0xe8>
 8005ae6:	bf00      	nop
 8005ae8:	0802f5d0 	.word	0x0802f5d0
 8005aec:	0802fc4f 	.word	0x0802fc4f
 8005af0:	0802f76c 	.word	0x0802f76c
 8005af4:	0802f7b3 	.word	0x0802f7b3
 8005af8:	0802f856 	.word	0x0802f856
 8005afc:	20013894 	.word	0x20013894
 8005b00:	20013890 	.word	0x20013890

08005b04 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>:
 8005b04:	6803      	ldr	r3, [r0, #0]
 8005b06:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005b08:	4718      	bx	r3
	...

08005b0c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>:
          solid()
 8005b0c:	4b12      	ldr	r3, [pc, #72]	; (8005b58 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 8005b0e:	b513      	push	{r0, r1, r4, lr}
          solid()
 8005b10:	6003      	str	r3, [r0, #0]
 8005b12:	f44f 7380 	mov.w	r3, #256	; 0x100
 8005b16:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 8005b18:	4b10      	ldr	r3, [pc, #64]	; (8005b5c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x50>)
          animationSteps(transitionSteps),
 8005b1a:	7241      	strb	r1, [r0, #9]
 8005b1c:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8005b1e:	4910      	ldr	r1, [pc, #64]	; (8005b60 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 8005b20:	4b10      	ldr	r3, [pc, #64]	; (8005b64 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8005b22:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 8005b26:	f9b3 3000 	ldrsh.w	r3, [r3]
 8005b2a:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 8005b2c:	2200      	movs	r2, #0
 8005b2e:	6042      	str	r2, [r0, #4]
 8005b30:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 8005b32:	7282      	strb	r2, [r0, #10]
          calculatedValue(0),
 8005b34:	81c2      	strh	r2, [r0, #14]
          solid()
 8005b36:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8005b3a:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8005b3e:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 8005b42:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 8005b46:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8005b48:	9100      	str	r1, [sp, #0]
 8005b4a:	3010      	adds	r0, #16
 8005b4c:	4611      	mov	r1, r2
 8005b4e:	f7fd fd52 	bl	80035f6 <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 8005b52:	4620      	mov	r0, r4
 8005b54:	b002      	add	sp, #8
 8005b56:	bd10      	pop	{r4, pc}
 8005b58:	08030934 	.word	0x08030934
 8005b5c:	0803083c 	.word	0x0803083c
 8005b60:	20013842 	.word	0x20013842
 8005b64:	20013840 	.word	0x20013840

08005b68 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv>:
{
 8005b68:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Project_InfoView, Project_InfoPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005b6c:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005b70:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005b72:	68a0      	ldr	r0, [r4, #8]
 8005b74:	6803      	ldr	r3, [r0, #0]
 8005b76:	6a1b      	ldr	r3, [r3, #32]
 8005b78:	4798      	blx	r3
 8005b7a:	f241 137b 	movw	r3, #4475	; 0x117b
 8005b7e:	4298      	cmp	r0, r3
 8005b80:	d805      	bhi.n	8005b8e <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x26>
 8005b82:	4b42      	ldr	r3, [pc, #264]	; (8005c8c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x124>)
 8005b84:	4a42      	ldr	r2, [pc, #264]	; (8005c90 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 8005b86:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005b88:	4842      	ldr	r0, [pc, #264]	; (8005c94 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x12c>)
 8005b8a:	f027 fe95 	bl	802d8b8 <__assert_func>
 8005b8e:	6860      	ldr	r0, [r4, #4]
 8005b90:	6803      	ldr	r3, [r0, #0]
 8005b92:	6a1b      	ldr	r3, [r3, #32]
 8005b94:	4798      	blx	r3
 8005b96:	280f      	cmp	r0, #15
 8005b98:	d803      	bhi.n	8005ba2 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x3a>
 8005b9a:	4b3f      	ldr	r3, [pc, #252]	; (8005c98 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x130>)
 8005b9c:	4a3c      	ldr	r2, [pc, #240]	; (8005c90 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 8005b9e:	21a4      	movs	r1, #164	; 0xa4
 8005ba0:	e7f2      	b.n	8005b88 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005ba2:	68e0      	ldr	r0, [r4, #12]
 8005ba4:	6803      	ldr	r3, [r0, #0]
 8005ba6:	6a1b      	ldr	r3, [r3, #32]
 8005ba8:	4798      	blx	r3
 8005baa:	2837      	cmp	r0, #55	; 0x37
 8005bac:	d803      	bhi.n	8005bb6 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x4e>
 8005bae:	4b3b      	ldr	r3, [pc, #236]	; (8005c9c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x134>)
 8005bb0:	4a37      	ldr	r2, [pc, #220]	; (8005c90 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 8005bb2:	21a5      	movs	r1, #165	; 0xa5
 8005bb4:	e7e8      	b.n	8005b88 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8005bb6:	f012 fee3 	bl	8018980 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005bba:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005ca0 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x138>
 8005bbe:	3004      	adds	r0, #4
 8005bc0:	f012 ff44 	bl	8018a4c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005bc4:	f8d9 0000 	ldr.w	r0, [r9]
 8005bc8:	b110      	cbz	r0, 8005bd0 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8005bca:	6803      	ldr	r3, [r0, #0]
 8005bcc:	68db      	ldr	r3, [r3, #12]
 8005bce:	4798      	blx	r3
    if (*currentTrans)
 8005bd0:	f8d9 0000 	ldr.w	r0, [r9]
 8005bd4:	b110      	cbz	r0, 8005bdc <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8005bd6:	6803      	ldr	r3, [r0, #0]
 8005bd8:	681b      	ldr	r3, [r3, #0]
 8005bda:	4798      	blx	r3
    if (*currentScreen)
 8005bdc:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8005ca4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x13c>
 8005be0:	f8d8 0000 	ldr.w	r0, [r8]
 8005be4:	b110      	cbz	r0, 8005bec <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8005be6:	6803      	ldr	r3, [r0, #0]
 8005be8:	695b      	ldr	r3, [r3, #20]
 8005bea:	4798      	blx	r3
    if (*currentPresenter)
 8005bec:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005bf0:	b110      	cbz	r0, 8005bf8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8005bf2:	6803      	ldr	r3, [r0, #0]
 8005bf4:	685b      	ldr	r3, [r3, #4]
 8005bf6:	4798      	blx	r3
    if (*currentScreen)
 8005bf8:	f8d8 0000 	ldr.w	r0, [r8]
 8005bfc:	b110      	cbz	r0, 8005c04 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8005bfe:	6803      	ldr	r3, [r0, #0]
 8005c00:	681b      	ldr	r3, [r3, #0]
 8005c02:	4798      	blx	r3
    if (*currentPresenter)
 8005c04:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005c08:	b110      	cbz	r0, 8005c10 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8005c0a:	6803      	ldr	r3, [r0, #0]
 8005c0c:	689b      	ldr	r3, [r3, #8]
 8005c0e:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005c10:	68e0      	ldr	r0, [r4, #12]
 8005c12:	2100      	movs	r1, #0
 8005c14:	f7ff ff76 	bl	8005b04 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005c18:	2114      	movs	r1, #20
 8005c1a:	4605      	mov	r5, r0
 8005c1c:	f7ff ff76 	bl	8005b0c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005c20:	68a0      	ldr	r0, [r4, #8]
 8005c22:	6803      	ldr	r3, [r0, #0]
 8005c24:	2100      	movs	r1, #0
 8005c26:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005c28:	4798      	blx	r3
 8005c2a:	4606      	mov	r6, r0
 8005c2c:	f005 f998 	bl	800af60 <_ZN16Project_InfoViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005c30:	6860      	ldr	r0, [r4, #4]
 8005c32:	6803      	ldr	r3, [r0, #0]
 8005c34:	2100      	movs	r1, #0
 8005c36:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005c38:	4798      	blx	r3
 8005c3a:	4631      	mov	r1, r6
 8005c3c:	4604      	mov	r4, r0
 8005c3e:	f005 f969 	bl	800af14 <_ZN21Project_InfoPresenterC1ER16Project_InfoView>
    *currentTrans = newTransition;
 8005c42:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005c46:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005c4a:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005c4e:	b1dc      	cbz	r4, 8005c88 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x120>
 8005c50:	1d23      	adds	r3, r4, #4
 8005c52:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005c56:	6833      	ldr	r3, [r6, #0]
 8005c58:	f8c4 a008 	str.w	sl, [r4, #8]
 8005c5c:	4630      	mov	r0, r6
 8005c5e:	68db      	ldr	r3, [r3, #12]
 8005c60:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005c62:	4798      	blx	r3
    newPresenter->activate();
 8005c64:	6823      	ldr	r3, [r4, #0]
 8005c66:	4620      	mov	r0, r4
 8005c68:	681b      	ldr	r3, [r3, #0]
 8005c6a:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005c6c:	4629      	mov	r1, r5
 8005c6e:	4630      	mov	r0, r6
 8005c70:	f014 fcb2 	bl	801a5d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005c74:	682b      	ldr	r3, [r5, #0]
 8005c76:	4628      	mov	r0, r5
 8005c78:	691b      	ldr	r3, [r3, #16]
 8005c7a:	4798      	blx	r3
    newTransition->invalidate();
 8005c7c:	682b      	ldr	r3, [r5, #0]
 8005c7e:	4628      	mov	r0, r5
 8005c80:	695b      	ldr	r3, [r3, #20]
}
 8005c82:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005c86:	4718      	bx	r3
    model->bind(newPresenter);
 8005c88:	4623      	mov	r3, r4
 8005c8a:	e7e2      	b.n	8005c52 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0xea>
 8005c8c:	0802f5d0 	.word	0x0802f5d0
 8005c90:	0802fd69 	.word	0x0802fd69
 8005c94:	0802f76c 	.word	0x0802f76c
 8005c98:	0802f7b3 	.word	0x0802f7b3
 8005c9c:	0802f856 	.word	0x0802f856
 8005ca0:	20013894 	.word	0x20013894
 8005ca4:	20013890 	.word	0x20013890

08005ca8 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv>:
{
 8005ca8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Calibration_PadView, Calibration_PadPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005cac:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005cb0:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005cb2:	68a0      	ldr	r0, [r4, #8]
 8005cb4:	6803      	ldr	r3, [r0, #0]
 8005cb6:	6a1b      	ldr	r3, [r3, #32]
 8005cb8:	4798      	blx	r3
 8005cba:	f641 5303 	movw	r3, #7427	; 0x1d03
 8005cbe:	4298      	cmp	r0, r3
 8005cc0:	d805      	bhi.n	8005cce <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x26>
 8005cc2:	4b42      	ldr	r3, [pc, #264]	; (8005dcc <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x124>)
 8005cc4:	4a42      	ldr	r2, [pc, #264]	; (8005dd0 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 8005cc6:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005cc8:	4842      	ldr	r0, [pc, #264]	; (8005dd4 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x12c>)
 8005cca:	f027 fdf5 	bl	802d8b8 <__assert_func>
 8005cce:	6860      	ldr	r0, [r4, #4]
 8005cd0:	6803      	ldr	r3, [r0, #0]
 8005cd2:	6a1b      	ldr	r3, [r3, #32]
 8005cd4:	4798      	blx	r3
 8005cd6:	280f      	cmp	r0, #15
 8005cd8:	d803      	bhi.n	8005ce2 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x3a>
 8005cda:	4b3f      	ldr	r3, [pc, #252]	; (8005dd8 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x130>)
 8005cdc:	4a3c      	ldr	r2, [pc, #240]	; (8005dd0 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 8005cde:	21a4      	movs	r1, #164	; 0xa4
 8005ce0:	e7f2      	b.n	8005cc8 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005ce2:	68e0      	ldr	r0, [r4, #12]
 8005ce4:	6803      	ldr	r3, [r0, #0]
 8005ce6:	6a1b      	ldr	r3, [r3, #32]
 8005ce8:	4798      	blx	r3
 8005cea:	2837      	cmp	r0, #55	; 0x37
 8005cec:	d803      	bhi.n	8005cf6 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x4e>
 8005cee:	4b3b      	ldr	r3, [pc, #236]	; (8005ddc <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x134>)
 8005cf0:	4a37      	ldr	r2, [pc, #220]	; (8005dd0 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 8005cf2:	21a5      	movs	r1, #165	; 0xa5
 8005cf4:	e7e8      	b.n	8005cc8 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8005cf6:	f012 fe43 	bl	8018980 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005cfa:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005de0 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x138>
 8005cfe:	3004      	adds	r0, #4
 8005d00:	f012 fea4 	bl	8018a4c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005d04:	f8d9 0000 	ldr.w	r0, [r9]
 8005d08:	b110      	cbz	r0, 8005d10 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8005d0a:	6803      	ldr	r3, [r0, #0]
 8005d0c:	68db      	ldr	r3, [r3, #12]
 8005d0e:	4798      	blx	r3
    if (*currentTrans)
 8005d10:	f8d9 0000 	ldr.w	r0, [r9]
 8005d14:	b110      	cbz	r0, 8005d1c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8005d16:	6803      	ldr	r3, [r0, #0]
 8005d18:	681b      	ldr	r3, [r3, #0]
 8005d1a:	4798      	blx	r3
    if (*currentScreen)
 8005d1c:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8005de4 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x13c>
 8005d20:	f8d8 0000 	ldr.w	r0, [r8]
 8005d24:	b110      	cbz	r0, 8005d2c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8005d26:	6803      	ldr	r3, [r0, #0]
 8005d28:	695b      	ldr	r3, [r3, #20]
 8005d2a:	4798      	blx	r3
    if (*currentPresenter)
 8005d2c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005d30:	b110      	cbz	r0, 8005d38 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8005d32:	6803      	ldr	r3, [r0, #0]
 8005d34:	685b      	ldr	r3, [r3, #4]
 8005d36:	4798      	blx	r3
    if (*currentScreen)
 8005d38:	f8d8 0000 	ldr.w	r0, [r8]
 8005d3c:	b110      	cbz	r0, 8005d44 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8005d3e:	6803      	ldr	r3, [r0, #0]
 8005d40:	681b      	ldr	r3, [r3, #0]
 8005d42:	4798      	blx	r3
    if (*currentPresenter)
 8005d44:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005d48:	b110      	cbz	r0, 8005d50 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8005d4a:	6803      	ldr	r3, [r0, #0]
 8005d4c:	689b      	ldr	r3, [r3, #8]
 8005d4e:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005d50:	68e0      	ldr	r0, [r4, #12]
 8005d52:	2100      	movs	r1, #0
 8005d54:	f7ff fed6 	bl	8005b04 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005d58:	2114      	movs	r1, #20
 8005d5a:	4605      	mov	r5, r0
 8005d5c:	f7ff fed6 	bl	8005b0c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005d60:	68a0      	ldr	r0, [r4, #8]
 8005d62:	6803      	ldr	r3, [r0, #0]
 8005d64:	2100      	movs	r1, #0
 8005d66:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005d68:	4798      	blx	r3
 8005d6a:	4606      	mov	r6, r0
 8005d6c:	f004 fcd0 	bl	800a710 <_ZN19Calibration_PadViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005d70:	6860      	ldr	r0, [r4, #4]
 8005d72:	6803      	ldr	r3, [r0, #0]
 8005d74:	2100      	movs	r1, #0
 8005d76:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005d78:	4798      	blx	r3
 8005d7a:	4631      	mov	r1, r6
 8005d7c:	4604      	mov	r4, r0
 8005d7e:	f004 fca1 	bl	800a6c4 <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView>
    *currentTrans = newTransition;
 8005d82:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005d86:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005d8a:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005d8e:	b1dc      	cbz	r4, 8005dc8 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x120>
 8005d90:	1d23      	adds	r3, r4, #4
 8005d92:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005d96:	6833      	ldr	r3, [r6, #0]
 8005d98:	f8c4 a008 	str.w	sl, [r4, #8]
 8005d9c:	4630      	mov	r0, r6
 8005d9e:	68db      	ldr	r3, [r3, #12]
 8005da0:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005da2:	4798      	blx	r3
    newPresenter->activate();
 8005da4:	6823      	ldr	r3, [r4, #0]
 8005da6:	4620      	mov	r0, r4
 8005da8:	681b      	ldr	r3, [r3, #0]
 8005daa:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005dac:	4629      	mov	r1, r5
 8005dae:	4630      	mov	r0, r6
 8005db0:	f014 fc12 	bl	801a5d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005db4:	682b      	ldr	r3, [r5, #0]
 8005db6:	4628      	mov	r0, r5
 8005db8:	691b      	ldr	r3, [r3, #16]
 8005dba:	4798      	blx	r3
    newTransition->invalidate();
 8005dbc:	682b      	ldr	r3, [r5, #0]
 8005dbe:	4628      	mov	r0, r5
 8005dc0:	695b      	ldr	r3, [r3, #20]
}
 8005dc2:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005dc6:	4718      	bx	r3
    model->bind(newPresenter);
 8005dc8:	4623      	mov	r3, r4
 8005dca:	e7e2      	b.n	8005d92 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0xea>
 8005dcc:	0802f5d0 	.word	0x0802f5d0
 8005dd0:	0802fe89 	.word	0x0802fe89
 8005dd4:	0802f76c 	.word	0x0802f76c
 8005dd8:	0802f7b3 	.word	0x0802f7b3
 8005ddc:	0802f856 	.word	0x0802f856
 8005de0:	20013894 	.word	0x20013894
 8005de4:	20013890 	.word	0x20013890

08005de8 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv>:
{
 8005de8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Accurate_Display_2View, Measurement_Accurate_Display_2Presenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005dec:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005df0:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005df2:	68a0      	ldr	r0, [r4, #8]
 8005df4:	6803      	ldr	r3, [r0, #0]
 8005df6:	6a1b      	ldr	r3, [r3, #32]
 8005df8:	4798      	blx	r3
 8005dfa:	f241 4377 	movw	r3, #5239	; 0x1477
 8005dfe:	4298      	cmp	r0, r3
 8005e00:	d805      	bhi.n	8005e0e <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x26>
 8005e02:	4b42      	ldr	r3, [pc, #264]	; (8005f0c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x124>)
 8005e04:	4a42      	ldr	r2, [pc, #264]	; (8005f10 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 8005e06:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005e08:	4842      	ldr	r0, [pc, #264]	; (8005f14 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x12c>)
 8005e0a:	f027 fd55 	bl	802d8b8 <__assert_func>
 8005e0e:	6860      	ldr	r0, [r4, #4]
 8005e10:	6803      	ldr	r3, [r0, #0]
 8005e12:	6a1b      	ldr	r3, [r3, #32]
 8005e14:	4798      	blx	r3
 8005e16:	280f      	cmp	r0, #15
 8005e18:	d803      	bhi.n	8005e22 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x3a>
 8005e1a:	4b3f      	ldr	r3, [pc, #252]	; (8005f18 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x130>)
 8005e1c:	4a3c      	ldr	r2, [pc, #240]	; (8005f10 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 8005e1e:	21a4      	movs	r1, #164	; 0xa4
 8005e20:	e7f2      	b.n	8005e08 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005e22:	68e0      	ldr	r0, [r4, #12]
 8005e24:	6803      	ldr	r3, [r0, #0]
 8005e26:	6a1b      	ldr	r3, [r3, #32]
 8005e28:	4798      	blx	r3
 8005e2a:	2837      	cmp	r0, #55	; 0x37
 8005e2c:	d803      	bhi.n	8005e36 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x4e>
 8005e2e:	4b3b      	ldr	r3, [pc, #236]	; (8005f1c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x134>)
 8005e30:	4a37      	ldr	r2, [pc, #220]	; (8005f10 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 8005e32:	21a5      	movs	r1, #165	; 0xa5
 8005e34:	e7e8      	b.n	8005e08 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8005e36:	f012 fda3 	bl	8018980 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005e3a:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005f20 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x138>
 8005e3e:	3004      	adds	r0, #4
 8005e40:	f012 fe04 	bl	8018a4c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005e44:	f8d9 0000 	ldr.w	r0, [r9]
 8005e48:	b110      	cbz	r0, 8005e50 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8005e4a:	6803      	ldr	r3, [r0, #0]
 8005e4c:	68db      	ldr	r3, [r3, #12]
 8005e4e:	4798      	blx	r3
    if (*currentTrans)
 8005e50:	f8d9 0000 	ldr.w	r0, [r9]
 8005e54:	b110      	cbz	r0, 8005e5c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8005e56:	6803      	ldr	r3, [r0, #0]
 8005e58:	681b      	ldr	r3, [r3, #0]
 8005e5a:	4798      	blx	r3
    if (*currentScreen)
 8005e5c:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8005f24 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x13c>
 8005e60:	f8d8 0000 	ldr.w	r0, [r8]
 8005e64:	b110      	cbz	r0, 8005e6c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8005e66:	6803      	ldr	r3, [r0, #0]
 8005e68:	695b      	ldr	r3, [r3, #20]
 8005e6a:	4798      	blx	r3
    if (*currentPresenter)
 8005e6c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005e70:	b110      	cbz	r0, 8005e78 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8005e72:	6803      	ldr	r3, [r0, #0]
 8005e74:	685b      	ldr	r3, [r3, #4]
 8005e76:	4798      	blx	r3
    if (*currentScreen)
 8005e78:	f8d8 0000 	ldr.w	r0, [r8]
 8005e7c:	b110      	cbz	r0, 8005e84 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8005e7e:	6803      	ldr	r3, [r0, #0]
 8005e80:	681b      	ldr	r3, [r3, #0]
 8005e82:	4798      	blx	r3
    if (*currentPresenter)
 8005e84:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005e88:	b110      	cbz	r0, 8005e90 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8005e8a:	6803      	ldr	r3, [r0, #0]
 8005e8c:	689b      	ldr	r3, [r3, #8]
 8005e8e:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005e90:	68e0      	ldr	r0, [r4, #12]
 8005e92:	2100      	movs	r1, #0
 8005e94:	f7ff fe36 	bl	8005b04 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005e98:	2114      	movs	r1, #20
 8005e9a:	4605      	mov	r5, r0
 8005e9c:	f7ff fe36 	bl	8005b0c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005ea0:	68a0      	ldr	r0, [r4, #8]
 8005ea2:	6803      	ldr	r3, [r0, #0]
 8005ea4:	2100      	movs	r1, #0
 8005ea6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005ea8:	4798      	blx	r3
 8005eaa:	4606      	mov	r6, r0
 8005eac:	f004 fec0 	bl	800ac30 <_ZN34Measurement_Accurate_Display_2ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005eb0:	6860      	ldr	r0, [r4, #4]
 8005eb2:	6803      	ldr	r3, [r0, #0]
 8005eb4:	2100      	movs	r1, #0
 8005eb6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005eb8:	4798      	blx	r3
 8005eba:	4631      	mov	r1, r6
 8005ebc:	4604      	mov	r4, r0
 8005ebe:	f004 fe91 	bl	800abe4 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View>
    *currentTrans = newTransition;
 8005ec2:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005ec6:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005eca:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005ece:	b1dc      	cbz	r4, 8005f08 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x120>
 8005ed0:	1d23      	adds	r3, r4, #4
 8005ed2:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005ed6:	6833      	ldr	r3, [r6, #0]
 8005ed8:	f8c4 a008 	str.w	sl, [r4, #8]
 8005edc:	4630      	mov	r0, r6
 8005ede:	68db      	ldr	r3, [r3, #12]
 8005ee0:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005ee2:	4798      	blx	r3
    newPresenter->activate();
 8005ee4:	6823      	ldr	r3, [r4, #0]
 8005ee6:	4620      	mov	r0, r4
 8005ee8:	681b      	ldr	r3, [r3, #0]
 8005eea:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005eec:	4629      	mov	r1, r5
 8005eee:	4630      	mov	r0, r6
 8005ef0:	f014 fb72 	bl	801a5d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005ef4:	682b      	ldr	r3, [r5, #0]
 8005ef6:	4628      	mov	r0, r5
 8005ef8:	691b      	ldr	r3, [r3, #16]
 8005efa:	4798      	blx	r3
    newTransition->invalidate();
 8005efc:	682b      	ldr	r3, [r5, #0]
 8005efe:	4628      	mov	r0, r5
 8005f00:	695b      	ldr	r3, [r3, #20]
}
 8005f02:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005f06:	4718      	bx	r3
    model->bind(newPresenter);
 8005f08:	4623      	mov	r3, r4
 8005f0a:	e7e2      	b.n	8005ed2 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0xea>
 8005f0c:	0802f5d0 	.word	0x0802f5d0
 8005f10:	0802ffaf 	.word	0x0802ffaf
 8005f14:	0802f76c 	.word	0x0802f76c
 8005f18:	0802f7b3 	.word	0x0802f7b3
 8005f1c:	0802f856 	.word	0x0802f856
 8005f20:	20013894 	.word	0x20013894
 8005f24:	20013890 	.word	0x20013890

08005f28 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv>:
{
 8005f28:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Accurate_DisplayView, Measurement_Accurate_DisplayPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005f2c:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005f30:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005f32:	68a0      	ldr	r0, [r4, #8]
 8005f34:	6803      	ldr	r3, [r0, #0]
 8005f36:	6a1b      	ldr	r3, [r3, #32]
 8005f38:	4798      	blx	r3
 8005f3a:	f241 4377 	movw	r3, #5239	; 0x1477
 8005f3e:	4298      	cmp	r0, r3
 8005f40:	d805      	bhi.n	8005f4e <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x26>
 8005f42:	4b42      	ldr	r3, [pc, #264]	; (800604c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x124>)
 8005f44:	4a42      	ldr	r2, [pc, #264]	; (8006050 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 8005f46:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005f48:	4842      	ldr	r0, [pc, #264]	; (8006054 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x12c>)
 8005f4a:	f027 fcb5 	bl	802d8b8 <__assert_func>
 8005f4e:	6860      	ldr	r0, [r4, #4]
 8005f50:	6803      	ldr	r3, [r0, #0]
 8005f52:	6a1b      	ldr	r3, [r3, #32]
 8005f54:	4798      	blx	r3
 8005f56:	280f      	cmp	r0, #15
 8005f58:	d803      	bhi.n	8005f62 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x3a>
 8005f5a:	4b3f      	ldr	r3, [pc, #252]	; (8006058 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x130>)
 8005f5c:	4a3c      	ldr	r2, [pc, #240]	; (8006050 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 8005f5e:	21a4      	movs	r1, #164	; 0xa4
 8005f60:	e7f2      	b.n	8005f48 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005f62:	68e0      	ldr	r0, [r4, #12]
 8005f64:	6803      	ldr	r3, [r0, #0]
 8005f66:	6a1b      	ldr	r3, [r3, #32]
 8005f68:	4798      	blx	r3
 8005f6a:	2837      	cmp	r0, #55	; 0x37
 8005f6c:	d803      	bhi.n	8005f76 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x4e>
 8005f6e:	4b3b      	ldr	r3, [pc, #236]	; (800605c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x134>)
 8005f70:	4a37      	ldr	r2, [pc, #220]	; (8006050 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 8005f72:	21a5      	movs	r1, #165	; 0xa5
 8005f74:	e7e8      	b.n	8005f48 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8005f76:	f012 fd03 	bl	8018980 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005f7a:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8006060 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x138>
 8005f7e:	3004      	adds	r0, #4
 8005f80:	f012 fd64 	bl	8018a4c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005f84:	f8d9 0000 	ldr.w	r0, [r9]
 8005f88:	b110      	cbz	r0, 8005f90 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8005f8a:	6803      	ldr	r3, [r0, #0]
 8005f8c:	68db      	ldr	r3, [r3, #12]
 8005f8e:	4798      	blx	r3
    if (*currentTrans)
 8005f90:	f8d9 0000 	ldr.w	r0, [r9]
 8005f94:	b110      	cbz	r0, 8005f9c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8005f96:	6803      	ldr	r3, [r0, #0]
 8005f98:	681b      	ldr	r3, [r3, #0]
 8005f9a:	4798      	blx	r3
    if (*currentScreen)
 8005f9c:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8006064 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x13c>
 8005fa0:	f8d8 0000 	ldr.w	r0, [r8]
 8005fa4:	b110      	cbz	r0, 8005fac <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8005fa6:	6803      	ldr	r3, [r0, #0]
 8005fa8:	695b      	ldr	r3, [r3, #20]
 8005faa:	4798      	blx	r3
    if (*currentPresenter)
 8005fac:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005fb0:	b110      	cbz	r0, 8005fb8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8005fb2:	6803      	ldr	r3, [r0, #0]
 8005fb4:	685b      	ldr	r3, [r3, #4]
 8005fb6:	4798      	blx	r3
    if (*currentScreen)
 8005fb8:	f8d8 0000 	ldr.w	r0, [r8]
 8005fbc:	b110      	cbz	r0, 8005fc4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8005fbe:	6803      	ldr	r3, [r0, #0]
 8005fc0:	681b      	ldr	r3, [r3, #0]
 8005fc2:	4798      	blx	r3
    if (*currentPresenter)
 8005fc4:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005fc8:	b110      	cbz	r0, 8005fd0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8005fca:	6803      	ldr	r3, [r0, #0]
 8005fcc:	689b      	ldr	r3, [r3, #8]
 8005fce:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005fd0:	68e0      	ldr	r0, [r4, #12]
 8005fd2:	2100      	movs	r1, #0
 8005fd4:	f7ff fd96 	bl	8005b04 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005fd8:	2114      	movs	r1, #20
 8005fda:	4605      	mov	r5, r0
 8005fdc:	f7ff fd96 	bl	8005b0c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005fe0:	68a0      	ldr	r0, [r4, #8]
 8005fe2:	6803      	ldr	r3, [r0, #0]
 8005fe4:	2100      	movs	r1, #0
 8005fe6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005fe8:	4798      	blx	r3
 8005fea:	4606      	mov	r6, r0
 8005fec:	f004 fdde 	bl	800abac <_ZN32Measurement_Accurate_DisplayViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005ff0:	6860      	ldr	r0, [r4, #4]
 8005ff2:	6803      	ldr	r3, [r0, #0]
 8005ff4:	2100      	movs	r1, #0
 8005ff6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005ff8:	4798      	blx	r3
 8005ffa:	4631      	mov	r1, r6
 8005ffc:	4604      	mov	r4, r0
 8005ffe:	f004 fdaf 	bl	800ab60 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView>
    *currentTrans = newTransition;
 8006002:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8006006:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800600a:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800600e:	b1dc      	cbz	r4, 8006048 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x120>
 8006010:	1d23      	adds	r3, r4, #4
 8006012:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8006016:	6833      	ldr	r3, [r6, #0]
 8006018:	f8c4 a008 	str.w	sl, [r4, #8]
 800601c:	4630      	mov	r0, r6
 800601e:	68db      	ldr	r3, [r3, #12]
 8006020:	63f4      	str	r4, [r6, #60]	; 0x3c
 8006022:	4798      	blx	r3
    newPresenter->activate();
 8006024:	6823      	ldr	r3, [r4, #0]
 8006026:	4620      	mov	r0, r4
 8006028:	681b      	ldr	r3, [r3, #0]
 800602a:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800602c:	4629      	mov	r1, r5
 800602e:	4630      	mov	r0, r6
 8006030:	f014 fad2 	bl	801a5d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8006034:	682b      	ldr	r3, [r5, #0]
 8006036:	4628      	mov	r0, r5
 8006038:	691b      	ldr	r3, [r3, #16]
 800603a:	4798      	blx	r3
    newTransition->invalidate();
 800603c:	682b      	ldr	r3, [r5, #0]
 800603e:	4628      	mov	r0, r5
 8006040:	695b      	ldr	r3, [r3, #20]
}
 8006042:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006046:	4718      	bx	r3
    model->bind(newPresenter);
 8006048:	4623      	mov	r3, r4
 800604a:	e7e2      	b.n	8006012 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0xea>
 800604c:	0802f5d0 	.word	0x0802f5d0
 8006050:	080300f3 	.word	0x080300f3
 8006054:	0802f76c 	.word	0x0802f76c
 8006058:	0802f7b3 	.word	0x0802f7b3
 800605c:	0802f856 	.word	0x0802f856
 8006060:	20013894 	.word	0x20013894
 8006064:	20013890 	.word	0x20013890

08006068 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv>:
{
 8006068:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_AccurateView, Measurement_AccuratePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800606c:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8006070:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8006072:	68a0      	ldr	r0, [r4, #8]
 8006074:	6803      	ldr	r3, [r0, #0]
 8006076:	6a1b      	ldr	r3, [r3, #32]
 8006078:	4798      	blx	r3
 800607a:	f241 13c3 	movw	r3, #4547	; 0x11c3
 800607e:	4298      	cmp	r0, r3
 8006080:	d805      	bhi.n	800608e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x26>
 8006082:	4b42      	ldr	r3, [pc, #264]	; (800618c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x124>)
 8006084:	4a42      	ldr	r2, [pc, #264]	; (8006190 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 8006086:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8006088:	4842      	ldr	r0, [pc, #264]	; (8006194 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x12c>)
 800608a:	f027 fc15 	bl	802d8b8 <__assert_func>
 800608e:	6860      	ldr	r0, [r4, #4]
 8006090:	6803      	ldr	r3, [r0, #0]
 8006092:	6a1b      	ldr	r3, [r3, #32]
 8006094:	4798      	blx	r3
 8006096:	280f      	cmp	r0, #15
 8006098:	d803      	bhi.n	80060a2 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x3a>
 800609a:	4b3f      	ldr	r3, [pc, #252]	; (8006198 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x130>)
 800609c:	4a3c      	ldr	r2, [pc, #240]	; (8006190 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 800609e:	21a4      	movs	r1, #164	; 0xa4
 80060a0:	e7f2      	b.n	8006088 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80060a2:	68e0      	ldr	r0, [r4, #12]
 80060a4:	6803      	ldr	r3, [r0, #0]
 80060a6:	6a1b      	ldr	r3, [r3, #32]
 80060a8:	4798      	blx	r3
 80060aa:	2837      	cmp	r0, #55	; 0x37
 80060ac:	d803      	bhi.n	80060b6 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x4e>
 80060ae:	4b3b      	ldr	r3, [pc, #236]	; (800619c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x134>)
 80060b0:	4a37      	ldr	r2, [pc, #220]	; (8006190 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 80060b2:	21a5      	movs	r1, #165	; 0xa5
 80060b4:	e7e8      	b.n	8006088 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80060b6:	f012 fc63 	bl	8018980 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80060ba:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80061a0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x138>
 80060be:	3004      	adds	r0, #4
 80060c0:	f012 fcc4 	bl	8018a4c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80060c4:	f8d9 0000 	ldr.w	r0, [r9]
 80060c8:	b110      	cbz	r0, 80060d0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80060ca:	6803      	ldr	r3, [r0, #0]
 80060cc:	68db      	ldr	r3, [r3, #12]
 80060ce:	4798      	blx	r3
    if (*currentTrans)
 80060d0:	f8d9 0000 	ldr.w	r0, [r9]
 80060d4:	b110      	cbz	r0, 80060dc <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80060d6:	6803      	ldr	r3, [r0, #0]
 80060d8:	681b      	ldr	r3, [r3, #0]
 80060da:	4798      	blx	r3
    if (*currentScreen)
 80060dc:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80061a4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x13c>
 80060e0:	f8d8 0000 	ldr.w	r0, [r8]
 80060e4:	b110      	cbz	r0, 80060ec <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80060e6:	6803      	ldr	r3, [r0, #0]
 80060e8:	695b      	ldr	r3, [r3, #20]
 80060ea:	4798      	blx	r3
    if (*currentPresenter)
 80060ec:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80060f0:	b110      	cbz	r0, 80060f8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 80060f2:	6803      	ldr	r3, [r0, #0]
 80060f4:	685b      	ldr	r3, [r3, #4]
 80060f6:	4798      	blx	r3
    if (*currentScreen)
 80060f8:	f8d8 0000 	ldr.w	r0, [r8]
 80060fc:	b110      	cbz	r0, 8006104 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 80060fe:	6803      	ldr	r3, [r0, #0]
 8006100:	681b      	ldr	r3, [r3, #0]
 8006102:	4798      	blx	r3
    if (*currentPresenter)
 8006104:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8006108:	b110      	cbz	r0, 8006110 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800610a:	6803      	ldr	r3, [r0, #0]
 800610c:	689b      	ldr	r3, [r3, #8]
 800610e:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8006110:	68e0      	ldr	r0, [r4, #12]
 8006112:	2100      	movs	r1, #0
 8006114:	f7ff fcf6 	bl	8005b04 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8006118:	2114      	movs	r1, #20
 800611a:	4605      	mov	r5, r0
 800611c:	f7ff fcf6 	bl	8005b0c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8006120:	68a0      	ldr	r0, [r4, #8]
 8006122:	6803      	ldr	r3, [r0, #0]
 8006124:	2100      	movs	r1, #0
 8006126:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006128:	4798      	blx	r3
 800612a:	4606      	mov	r6, r0
 800612c:	f004 fce4 	bl	800aaf8 <_ZN24Measurement_AccurateViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8006130:	6860      	ldr	r0, [r4, #4]
 8006132:	6803      	ldr	r3, [r0, #0]
 8006134:	2100      	movs	r1, #0
 8006136:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006138:	4798      	blx	r3
 800613a:	4631      	mov	r1, r6
 800613c:	4604      	mov	r4, r0
 800613e:	f004 fcb5 	bl	800aaac <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>
    *currentTrans = newTransition;
 8006142:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8006146:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800614a:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800614e:	b1dc      	cbz	r4, 8006188 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x120>
 8006150:	1d23      	adds	r3, r4, #4
 8006152:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8006156:	6833      	ldr	r3, [r6, #0]
 8006158:	f8c4 a008 	str.w	sl, [r4, #8]
 800615c:	4630      	mov	r0, r6
 800615e:	68db      	ldr	r3, [r3, #12]
 8006160:	63f4      	str	r4, [r6, #60]	; 0x3c
 8006162:	4798      	blx	r3
    newPresenter->activate();
 8006164:	6823      	ldr	r3, [r4, #0]
 8006166:	4620      	mov	r0, r4
 8006168:	681b      	ldr	r3, [r3, #0]
 800616a:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800616c:	4629      	mov	r1, r5
 800616e:	4630      	mov	r0, r6
 8006170:	f014 fa32 	bl	801a5d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8006174:	682b      	ldr	r3, [r5, #0]
 8006176:	4628      	mov	r0, r5
 8006178:	691b      	ldr	r3, [r3, #16]
 800617a:	4798      	blx	r3
    newTransition->invalidate();
 800617c:	682b      	ldr	r3, [r5, #0]
 800617e:	4628      	mov	r0, r5
 8006180:	695b      	ldr	r3, [r3, #20]
}
 8006182:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006186:	4718      	bx	r3
    model->bind(newPresenter);
 8006188:	4623      	mov	r3, r4
 800618a:	e7e2      	b.n	8006152 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0xea>
 800618c:	0802f5d0 	.word	0x0802f5d0
 8006190:	08030233 	.word	0x08030233
 8006194:	0802f76c 	.word	0x0802f76c
 8006198:	0802f7b3 	.word	0x0802f7b3
 800619c:	0802f856 	.word	0x0802f856
 80061a0:	20013894 	.word	0x20013894
 80061a4:	20013890 	.word	0x20013890

080061a8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv>:
{
 80061a8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Single_Display_3PView, Measurement_Single_Display_3PPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80061ac:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80061b0:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80061b2:	68a0      	ldr	r0, [r4, #8]
 80061b4:	6803      	ldr	r3, [r0, #0]
 80061b6:	6a1b      	ldr	r3, [r3, #32]
 80061b8:	4798      	blx	r3
 80061ba:	f241 4377 	movw	r3, #5239	; 0x1477
 80061be:	4298      	cmp	r0, r3
 80061c0:	d805      	bhi.n	80061ce <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x26>
 80061c2:	4b42      	ldr	r3, [pc, #264]	; (80062cc <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x124>)
 80061c4:	4a42      	ldr	r2, [pc, #264]	; (80062d0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 80061c6:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80061c8:	4842      	ldr	r0, [pc, #264]	; (80062d4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x12c>)
 80061ca:	f027 fb75 	bl	802d8b8 <__assert_func>
 80061ce:	6860      	ldr	r0, [r4, #4]
 80061d0:	6803      	ldr	r3, [r0, #0]
 80061d2:	6a1b      	ldr	r3, [r3, #32]
 80061d4:	4798      	blx	r3
 80061d6:	280f      	cmp	r0, #15
 80061d8:	d803      	bhi.n	80061e2 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x3a>
 80061da:	4b3f      	ldr	r3, [pc, #252]	; (80062d8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x130>)
 80061dc:	4a3c      	ldr	r2, [pc, #240]	; (80062d0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 80061de:	21a4      	movs	r1, #164	; 0xa4
 80061e0:	e7f2      	b.n	80061c8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80061e2:	68e0      	ldr	r0, [r4, #12]
 80061e4:	6803      	ldr	r3, [r0, #0]
 80061e6:	6a1b      	ldr	r3, [r3, #32]
 80061e8:	4798      	blx	r3
 80061ea:	2837      	cmp	r0, #55	; 0x37
 80061ec:	d803      	bhi.n	80061f6 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x4e>
 80061ee:	4b3b      	ldr	r3, [pc, #236]	; (80062dc <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x134>)
 80061f0:	4a37      	ldr	r2, [pc, #220]	; (80062d0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 80061f2:	21a5      	movs	r1, #165	; 0xa5
 80061f4:	e7e8      	b.n	80061c8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80061f6:	f012 fbc3 	bl	8018980 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80061fa:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80062e0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x138>
 80061fe:	3004      	adds	r0, #4
 8006200:	f012 fc24 	bl	8018a4c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8006204:	f8d9 0000 	ldr.w	r0, [r9]
 8006208:	b110      	cbz	r0, 8006210 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 800620a:	6803      	ldr	r3, [r0, #0]
 800620c:	68db      	ldr	r3, [r3, #12]
 800620e:	4798      	blx	r3
    if (*currentTrans)
 8006210:	f8d9 0000 	ldr.w	r0, [r9]
 8006214:	b110      	cbz	r0, 800621c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8006216:	6803      	ldr	r3, [r0, #0]
 8006218:	681b      	ldr	r3, [r3, #0]
 800621a:	4798      	blx	r3
    if (*currentScreen)
 800621c:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80062e4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x13c>
 8006220:	f8d8 0000 	ldr.w	r0, [r8]
 8006224:	b110      	cbz	r0, 800622c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8006226:	6803      	ldr	r3, [r0, #0]
 8006228:	695b      	ldr	r3, [r3, #20]
 800622a:	4798      	blx	r3
    if (*currentPresenter)
 800622c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8006230:	b110      	cbz	r0, 8006238 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8006232:	6803      	ldr	r3, [r0, #0]
 8006234:	685b      	ldr	r3, [r3, #4]
 8006236:	4798      	blx	r3
    if (*currentScreen)
 8006238:	f8d8 0000 	ldr.w	r0, [r8]
 800623c:	b110      	cbz	r0, 8006244 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 800623e:	6803      	ldr	r3, [r0, #0]
 8006240:	681b      	ldr	r3, [r3, #0]
 8006242:	4798      	blx	r3
    if (*currentPresenter)
 8006244:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8006248:	b110      	cbz	r0, 8006250 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800624a:	6803      	ldr	r3, [r0, #0]
 800624c:	689b      	ldr	r3, [r3, #8]
 800624e:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8006250:	68e0      	ldr	r0, [r4, #12]
 8006252:	2100      	movs	r1, #0
 8006254:	f7ff fc56 	bl	8005b04 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8006258:	2114      	movs	r1, #20
 800625a:	4605      	mov	r5, r0
 800625c:	f7ff fc56 	bl	8005b0c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8006260:	68a0      	ldr	r0, [r4, #8]
 8006262:	6803      	ldr	r3, [r0, #0]
 8006264:	2100      	movs	r1, #0
 8006266:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006268:	4798      	blx	r3
 800626a:	4606      	mov	r6, r0
 800626c:	f004 fe12 	bl	800ae94 <_ZN33Measurement_Single_Display_3PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8006270:	6860      	ldr	r0, [r4, #4]
 8006272:	6803      	ldr	r3, [r0, #0]
 8006274:	2100      	movs	r1, #0
 8006276:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006278:	4798      	blx	r3
 800627a:	4631      	mov	r1, r6
 800627c:	4604      	mov	r4, r0
 800627e:	f004 fde3 	bl	800ae48 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView>
    *currentTrans = newTransition;
 8006282:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8006286:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800628a:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800628e:	b1dc      	cbz	r4, 80062c8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x120>
 8006290:	1d23      	adds	r3, r4, #4
 8006292:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8006296:	6833      	ldr	r3, [r6, #0]
 8006298:	f8c4 a008 	str.w	sl, [r4, #8]
 800629c:	4630      	mov	r0, r6
 800629e:	68db      	ldr	r3, [r3, #12]
 80062a0:	63f4      	str	r4, [r6, #60]	; 0x3c
 80062a2:	4798      	blx	r3
    newPresenter->activate();
 80062a4:	6823      	ldr	r3, [r4, #0]
 80062a6:	4620      	mov	r0, r4
 80062a8:	681b      	ldr	r3, [r3, #0]
 80062aa:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80062ac:	4629      	mov	r1, r5
 80062ae:	4630      	mov	r0, r6
 80062b0:	f014 f992 	bl	801a5d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80062b4:	682b      	ldr	r3, [r5, #0]
 80062b6:	4628      	mov	r0, r5
 80062b8:	691b      	ldr	r3, [r3, #16]
 80062ba:	4798      	blx	r3
    newTransition->invalidate();
 80062bc:	682b      	ldr	r3, [r5, #0]
 80062be:	4628      	mov	r0, r5
 80062c0:	695b      	ldr	r3, [r3, #20]
}
 80062c2:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80062c6:	4718      	bx	r3
    model->bind(newPresenter);
 80062c8:	4623      	mov	r3, r4
 80062ca:	e7e2      	b.n	8006292 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0xea>
 80062cc:	0802f5d0 	.word	0x0802f5d0
 80062d0:	08030363 	.word	0x08030363
 80062d4:	0802f76c 	.word	0x0802f76c
 80062d8:	0802f7b3 	.word	0x0802f7b3
 80062dc:	0802f856 	.word	0x0802f856
 80062e0:	20013894 	.word	0x20013894
 80062e4:	20013890 	.word	0x20013890

080062e8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv>:
{
 80062e8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Single_Display_1PView, Measurement_Single_Display_1PPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80062ec:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80062f0:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80062f2:	68a0      	ldr	r0, [r4, #8]
 80062f4:	6803      	ldr	r3, [r0, #0]
 80062f6:	6a1b      	ldr	r3, [r3, #32]
 80062f8:	4798      	blx	r3
 80062fa:	f241 437b 	movw	r3, #5243	; 0x147b
 80062fe:	4298      	cmp	r0, r3
 8006300:	d805      	bhi.n	800630e <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x26>
 8006302:	4b42      	ldr	r3, [pc, #264]	; (800640c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x124>)
 8006304:	4a42      	ldr	r2, [pc, #264]	; (8006410 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 8006306:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8006308:	4842      	ldr	r0, [pc, #264]	; (8006414 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x12c>)
 800630a:	f027 fad5 	bl	802d8b8 <__assert_func>
 800630e:	6860      	ldr	r0, [r4, #4]
 8006310:	6803      	ldr	r3, [r0, #0]
 8006312:	6a1b      	ldr	r3, [r3, #32]
 8006314:	4798      	blx	r3
 8006316:	280f      	cmp	r0, #15
 8006318:	d803      	bhi.n	8006322 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x3a>
 800631a:	4b3f      	ldr	r3, [pc, #252]	; (8006418 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x130>)
 800631c:	4a3c      	ldr	r2, [pc, #240]	; (8006410 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 800631e:	21a4      	movs	r1, #164	; 0xa4
 8006320:	e7f2      	b.n	8006308 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8006322:	68e0      	ldr	r0, [r4, #12]
 8006324:	6803      	ldr	r3, [r0, #0]
 8006326:	6a1b      	ldr	r3, [r3, #32]
 8006328:	4798      	blx	r3
 800632a:	2837      	cmp	r0, #55	; 0x37
 800632c:	d803      	bhi.n	8006336 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x4e>
 800632e:	4b3b      	ldr	r3, [pc, #236]	; (800641c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x134>)
 8006330:	4a37      	ldr	r2, [pc, #220]	; (8006410 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 8006332:	21a5      	movs	r1, #165	; 0xa5
 8006334:	e7e8      	b.n	8006308 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8006336:	f012 fb23 	bl	8018980 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800633a:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8006420 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x138>
 800633e:	3004      	adds	r0, #4
 8006340:	f012 fb84 	bl	8018a4c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8006344:	f8d9 0000 	ldr.w	r0, [r9]
 8006348:	b110      	cbz	r0, 8006350 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 800634a:	6803      	ldr	r3, [r0, #0]
 800634c:	68db      	ldr	r3, [r3, #12]
 800634e:	4798      	blx	r3
    if (*currentTrans)
 8006350:	f8d9 0000 	ldr.w	r0, [r9]
 8006354:	b110      	cbz	r0, 800635c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8006356:	6803      	ldr	r3, [r0, #0]
 8006358:	681b      	ldr	r3, [r3, #0]
 800635a:	4798      	blx	r3
    if (*currentScreen)
 800635c:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8006424 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x13c>
 8006360:	f8d8 0000 	ldr.w	r0, [r8]
 8006364:	b110      	cbz	r0, 800636c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8006366:	6803      	ldr	r3, [r0, #0]
 8006368:	695b      	ldr	r3, [r3, #20]
 800636a:	4798      	blx	r3
    if (*currentPresenter)
 800636c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8006370:	b110      	cbz	r0, 8006378 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8006372:	6803      	ldr	r3, [r0, #0]
 8006374:	685b      	ldr	r3, [r3, #4]
 8006376:	4798      	blx	r3
    if (*currentScreen)
 8006378:	f8d8 0000 	ldr.w	r0, [r8]
 800637c:	b110      	cbz	r0, 8006384 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 800637e:	6803      	ldr	r3, [r0, #0]
 8006380:	681b      	ldr	r3, [r3, #0]
 8006382:	4798      	blx	r3
    if (*currentPresenter)
 8006384:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8006388:	b110      	cbz	r0, 8006390 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800638a:	6803      	ldr	r3, [r0, #0]
 800638c:	689b      	ldr	r3, [r3, #8]
 800638e:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8006390:	68e0      	ldr	r0, [r4, #12]
 8006392:	2100      	movs	r1, #0
 8006394:	f7ff fbb6 	bl	8005b04 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8006398:	2114      	movs	r1, #20
 800639a:	4605      	mov	r5, r0
 800639c:	f7ff fbb6 	bl	8005b0c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80063a0:	68a0      	ldr	r0, [r4, #8]
 80063a2:	6803      	ldr	r3, [r0, #0]
 80063a4:	2100      	movs	r1, #0
 80063a6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80063a8:	4798      	blx	r3
 80063aa:	4606      	mov	r6, r0
 80063ac:	f004 fce2 	bl	800ad74 <_ZN33Measurement_Single_Display_1PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80063b0:	6860      	ldr	r0, [r4, #4]
 80063b2:	6803      	ldr	r3, [r0, #0]
 80063b4:	2100      	movs	r1, #0
 80063b6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80063b8:	4798      	blx	r3
 80063ba:	4631      	mov	r1, r6
 80063bc:	4604      	mov	r4, r0
 80063be:	f004 fcb3 	bl	800ad28 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>
    *currentTrans = newTransition;
 80063c2:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80063c6:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80063ca:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80063ce:	b1dc      	cbz	r4, 8006408 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x120>
 80063d0:	1d23      	adds	r3, r4, #4
 80063d2:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80063d6:	6833      	ldr	r3, [r6, #0]
 80063d8:	f8c4 a008 	str.w	sl, [r4, #8]
 80063dc:	4630      	mov	r0, r6
 80063de:	68db      	ldr	r3, [r3, #12]
 80063e0:	63f4      	str	r4, [r6, #60]	; 0x3c
 80063e2:	4798      	blx	r3
    newPresenter->activate();
 80063e4:	6823      	ldr	r3, [r4, #0]
 80063e6:	4620      	mov	r0, r4
 80063e8:	681b      	ldr	r3, [r3, #0]
 80063ea:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80063ec:	4629      	mov	r1, r5
 80063ee:	4630      	mov	r0, r6
 80063f0:	f014 f8f2 	bl	801a5d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80063f4:	682b      	ldr	r3, [r5, #0]
 80063f6:	4628      	mov	r0, r5
 80063f8:	691b      	ldr	r3, [r3, #16]
 80063fa:	4798      	blx	r3
    newTransition->invalidate();
 80063fc:	682b      	ldr	r3, [r5, #0]
 80063fe:	4628      	mov	r0, r5
 8006400:	695b      	ldr	r3, [r3, #20]
}
 8006402:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006406:	4718      	bx	r3
    model->bind(newPresenter);
 8006408:	4623      	mov	r3, r4
 800640a:	e7e2      	b.n	80063d2 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0xea>
 800640c:	0802f5d0 	.word	0x0802f5d0
 8006410:	080304a5 	.word	0x080304a5
 8006414:	0802f76c 	.word	0x0802f76c
 8006418:	0802f7b3 	.word	0x0802f7b3
 800641c:	0802f856 	.word	0x0802f856
 8006420:	20013894 	.word	0x20013894
 8006424:	20013890 	.word	0x20013890

08006428 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv>:
{
 8006428:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_SingleView, Measurement_SinglePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800642c:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8006430:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8006432:	68a0      	ldr	r0, [r4, #8]
 8006434:	6803      	ldr	r3, [r0, #0]
 8006436:	6a1b      	ldr	r3, [r3, #32]
 8006438:	4798      	blx	r3
 800643a:	f241 13c3 	movw	r3, #4547	; 0x11c3
 800643e:	4298      	cmp	r0, r3
 8006440:	d805      	bhi.n	800644e <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x26>
 8006442:	4b42      	ldr	r3, [pc, #264]	; (800654c <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x124>)
 8006444:	4a42      	ldr	r2, [pc, #264]	; (8006550 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 8006446:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8006448:	4842      	ldr	r0, [pc, #264]	; (8006554 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x12c>)
 800644a:	f027 fa35 	bl	802d8b8 <__assert_func>
 800644e:	6860      	ldr	r0, [r4, #4]
 8006450:	6803      	ldr	r3, [r0, #0]
 8006452:	6a1b      	ldr	r3, [r3, #32]
 8006454:	4798      	blx	r3
 8006456:	280f      	cmp	r0, #15
 8006458:	d803      	bhi.n	8006462 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x3a>
 800645a:	4b3f      	ldr	r3, [pc, #252]	; (8006558 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x130>)
 800645c:	4a3c      	ldr	r2, [pc, #240]	; (8006550 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 800645e:	21a4      	movs	r1, #164	; 0xa4
 8006460:	e7f2      	b.n	8006448 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8006462:	68e0      	ldr	r0, [r4, #12]
 8006464:	6803      	ldr	r3, [r0, #0]
 8006466:	6a1b      	ldr	r3, [r3, #32]
 8006468:	4798      	blx	r3
 800646a:	2837      	cmp	r0, #55	; 0x37
 800646c:	d803      	bhi.n	8006476 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x4e>
 800646e:	4b3b      	ldr	r3, [pc, #236]	; (800655c <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x134>)
 8006470:	4a37      	ldr	r2, [pc, #220]	; (8006550 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 8006472:	21a5      	movs	r1, #165	; 0xa5
 8006474:	e7e8      	b.n	8006448 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8006476:	f012 fa83 	bl	8018980 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800647a:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8006560 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x138>
 800647e:	3004      	adds	r0, #4
 8006480:	f012 fae4 	bl	8018a4c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8006484:	f8d9 0000 	ldr.w	r0, [r9]
 8006488:	b110      	cbz	r0, 8006490 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 800648a:	6803      	ldr	r3, [r0, #0]
 800648c:	68db      	ldr	r3, [r3, #12]
 800648e:	4798      	blx	r3
    if (*currentTrans)
 8006490:	f8d9 0000 	ldr.w	r0, [r9]
 8006494:	b110      	cbz	r0, 800649c <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8006496:	6803      	ldr	r3, [r0, #0]
 8006498:	681b      	ldr	r3, [r3, #0]
 800649a:	4798      	blx	r3
    if (*currentScreen)
 800649c:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8006564 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x13c>
 80064a0:	f8d8 0000 	ldr.w	r0, [r8]
 80064a4:	b110      	cbz	r0, 80064ac <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80064a6:	6803      	ldr	r3, [r0, #0]
 80064a8:	695b      	ldr	r3, [r3, #20]
 80064aa:	4798      	blx	r3
    if (*currentPresenter)
 80064ac:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80064b0:	b110      	cbz	r0, 80064b8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 80064b2:	6803      	ldr	r3, [r0, #0]
 80064b4:	685b      	ldr	r3, [r3, #4]
 80064b6:	4798      	blx	r3
    if (*currentScreen)
 80064b8:	f8d8 0000 	ldr.w	r0, [r8]
 80064bc:	b110      	cbz	r0, 80064c4 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 80064be:	6803      	ldr	r3, [r0, #0]
 80064c0:	681b      	ldr	r3, [r3, #0]
 80064c2:	4798      	blx	r3
    if (*currentPresenter)
 80064c4:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80064c8:	b110      	cbz	r0, 80064d0 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80064ca:	6803      	ldr	r3, [r0, #0]
 80064cc:	689b      	ldr	r3, [r3, #8]
 80064ce:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80064d0:	68e0      	ldr	r0, [r4, #12]
 80064d2:	2100      	movs	r1, #0
 80064d4:	f7ff fb16 	bl	8005b04 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80064d8:	2114      	movs	r1, #20
 80064da:	4605      	mov	r5, r0
 80064dc:	f7ff fb16 	bl	8005b0c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80064e0:	68a0      	ldr	r0, [r4, #8]
 80064e2:	6803      	ldr	r3, [r0, #0]
 80064e4:	2100      	movs	r1, #0
 80064e6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80064e8:	4798      	blx	r3
 80064ea:	4606      	mov	r6, r0
 80064ec:	f004 fbe8 	bl	800acc0 <_ZN22Measurement_SingleViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80064f0:	6860      	ldr	r0, [r4, #4]
 80064f2:	6803      	ldr	r3, [r0, #0]
 80064f4:	2100      	movs	r1, #0
 80064f6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80064f8:	4798      	blx	r3
 80064fa:	4631      	mov	r1, r6
 80064fc:	4604      	mov	r4, r0
 80064fe:	f004 fbb9 	bl	800ac74 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView>
    *currentTrans = newTransition;
 8006502:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8006506:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800650a:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800650e:	b1dc      	cbz	r4, 8006548 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x120>
 8006510:	1d23      	adds	r3, r4, #4
 8006512:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8006516:	6833      	ldr	r3, [r6, #0]
 8006518:	f8c4 a008 	str.w	sl, [r4, #8]
 800651c:	4630      	mov	r0, r6
 800651e:	68db      	ldr	r3, [r3, #12]
 8006520:	63f4      	str	r4, [r6, #60]	; 0x3c
 8006522:	4798      	blx	r3
    newPresenter->activate();
 8006524:	6823      	ldr	r3, [r4, #0]
 8006526:	4620      	mov	r0, r4
 8006528:	681b      	ldr	r3, [r3, #0]
 800652a:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800652c:	4629      	mov	r1, r5
 800652e:	4630      	mov	r0, r6
 8006530:	f014 f852 	bl	801a5d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8006534:	682b      	ldr	r3, [r5, #0]
 8006536:	4628      	mov	r0, r5
 8006538:	691b      	ldr	r3, [r3, #16]
 800653a:	4798      	blx	r3
    newTransition->invalidate();
 800653c:	682b      	ldr	r3, [r5, #0]
 800653e:	4628      	mov	r0, r5
 8006540:	695b      	ldr	r3, [r3, #20]
}
 8006542:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006546:	4718      	bx	r3
    model->bind(newPresenter);
 8006548:	4623      	mov	r3, r4
 800654a:	e7e2      	b.n	8006512 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0xea>
 800654c:	0802f5d0 	.word	0x0802f5d0
 8006550:	080305e7 	.word	0x080305e7
 8006554:	0802f76c 	.word	0x0802f76c
 8006558:	0802f7b3 	.word	0x0802f7b3
 800655c:	0802f856 	.word	0x0802f856
 8006560:	20013894 	.word	0x20013894
 8006564:	20013890 	.word	0x20013890

08006568 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv>:
{
 8006568:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MeasurementView, MeasurementPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800656c:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8006570:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8006572:	68a0      	ldr	r0, [r4, #8]
 8006574:	6803      	ldr	r3, [r0, #0]
 8006576:	6a1b      	ldr	r3, [r3, #32]
 8006578:	4798      	blx	r3
 800657a:	f241 13c3 	movw	r3, #4547	; 0x11c3
 800657e:	4298      	cmp	r0, r3
 8006580:	d805      	bhi.n	800658e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x26>
 8006582:	4b42      	ldr	r3, [pc, #264]	; (800668c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x124>)
 8006584:	4a42      	ldr	r2, [pc, #264]	; (8006690 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8006586:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8006588:	4842      	ldr	r0, [pc, #264]	; (8006694 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x12c>)
 800658a:	f027 f995 	bl	802d8b8 <__assert_func>
 800658e:	6860      	ldr	r0, [r4, #4]
 8006590:	6803      	ldr	r3, [r0, #0]
 8006592:	6a1b      	ldr	r3, [r3, #32]
 8006594:	4798      	blx	r3
 8006596:	280f      	cmp	r0, #15
 8006598:	d803      	bhi.n	80065a2 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x3a>
 800659a:	4b3f      	ldr	r3, [pc, #252]	; (8006698 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x130>)
 800659c:	4a3c      	ldr	r2, [pc, #240]	; (8006690 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 800659e:	21a4      	movs	r1, #164	; 0xa4
 80065a0:	e7f2      	b.n	8006588 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80065a2:	68e0      	ldr	r0, [r4, #12]
 80065a4:	6803      	ldr	r3, [r0, #0]
 80065a6:	6a1b      	ldr	r3, [r3, #32]
 80065a8:	4798      	blx	r3
 80065aa:	2837      	cmp	r0, #55	; 0x37
 80065ac:	d803      	bhi.n	80065b6 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x4e>
 80065ae:	4b3b      	ldr	r3, [pc, #236]	; (800669c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x134>)
 80065b0:	4a37      	ldr	r2, [pc, #220]	; (8006690 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 80065b2:	21a5      	movs	r1, #165	; 0xa5
 80065b4:	e7e8      	b.n	8006588 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80065b6:	f012 f9e3 	bl	8018980 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80065ba:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80066a0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x138>
 80065be:	3004      	adds	r0, #4
 80065c0:	f012 fa44 	bl	8018a4c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80065c4:	f8d9 0000 	ldr.w	r0, [r9]
 80065c8:	b110      	cbz	r0, 80065d0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80065ca:	6803      	ldr	r3, [r0, #0]
 80065cc:	68db      	ldr	r3, [r3, #12]
 80065ce:	4798      	blx	r3
    if (*currentTrans)
 80065d0:	f8d9 0000 	ldr.w	r0, [r9]
 80065d4:	b110      	cbz	r0, 80065dc <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80065d6:	6803      	ldr	r3, [r0, #0]
 80065d8:	681b      	ldr	r3, [r3, #0]
 80065da:	4798      	blx	r3
    if (*currentScreen)
 80065dc:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80066a4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x13c>
 80065e0:	f8d8 0000 	ldr.w	r0, [r8]
 80065e4:	b110      	cbz	r0, 80065ec <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80065e6:	6803      	ldr	r3, [r0, #0]
 80065e8:	695b      	ldr	r3, [r3, #20]
 80065ea:	4798      	blx	r3
    if (*currentPresenter)
 80065ec:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80065f0:	b110      	cbz	r0, 80065f8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 80065f2:	6803      	ldr	r3, [r0, #0]
 80065f4:	685b      	ldr	r3, [r3, #4]
 80065f6:	4798      	blx	r3
    if (*currentScreen)
 80065f8:	f8d8 0000 	ldr.w	r0, [r8]
 80065fc:	b110      	cbz	r0, 8006604 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 80065fe:	6803      	ldr	r3, [r0, #0]
 8006600:	681b      	ldr	r3, [r3, #0]
 8006602:	4798      	blx	r3
    if (*currentPresenter)
 8006604:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8006608:	b110      	cbz	r0, 8006610 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800660a:	6803      	ldr	r3, [r0, #0]
 800660c:	689b      	ldr	r3, [r3, #8]
 800660e:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8006610:	68e0      	ldr	r0, [r4, #12]
 8006612:	2100      	movs	r1, #0
 8006614:	f7ff fa76 	bl	8005b04 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8006618:	2114      	movs	r1, #20
 800661a:	4605      	mov	r5, r0
 800661c:	f7ff fa76 	bl	8005b0c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8006620:	68a0      	ldr	r0, [r4, #8]
 8006622:	6803      	ldr	r3, [r0, #0]
 8006624:	2100      	movs	r1, #0
 8006626:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006628:	4798      	blx	r3
 800662a:	4606      	mov	r6, r0
 800662c:	f004 fa04 	bl	800aa38 <_ZN15MeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8006630:	6860      	ldr	r0, [r4, #4]
 8006632:	6803      	ldr	r3, [r0, #0]
 8006634:	2100      	movs	r1, #0
 8006636:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006638:	4798      	blx	r3
 800663a:	4631      	mov	r1, r6
 800663c:	4604      	mov	r4, r0
 800663e:	f004 f9d5 	bl	800a9ec <_ZN20MeasurementPresenterC1ER15MeasurementView>
    *currentTrans = newTransition;
 8006642:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8006646:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800664a:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800664e:	b1dc      	cbz	r4, 8006688 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x120>
 8006650:	1d23      	adds	r3, r4, #4
 8006652:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8006656:	6833      	ldr	r3, [r6, #0]
 8006658:	f8c4 a008 	str.w	sl, [r4, #8]
 800665c:	4630      	mov	r0, r6
 800665e:	68db      	ldr	r3, [r3, #12]
 8006660:	63f4      	str	r4, [r6, #60]	; 0x3c
 8006662:	4798      	blx	r3
    newPresenter->activate();
 8006664:	6823      	ldr	r3, [r4, #0]
 8006666:	4620      	mov	r0, r4
 8006668:	681b      	ldr	r3, [r3, #0]
 800666a:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800666c:	4629      	mov	r1, r5
 800666e:	4630      	mov	r0, r6
 8006670:	f013 ffb2 	bl	801a5d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8006674:	682b      	ldr	r3, [r5, #0]
 8006676:	4628      	mov	r0, r5
 8006678:	691b      	ldr	r3, [r3, #16]
 800667a:	4798      	blx	r3
    newTransition->invalidate();
 800667c:	682b      	ldr	r3, [r5, #0]
 800667e:	4628      	mov	r0, r5
 8006680:	695b      	ldr	r3, [r3, #20]
}
 8006682:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006686:	4718      	bx	r3
    model->bind(newPresenter);
 8006688:	4623      	mov	r3, r4
 800668a:	e7e2      	b.n	8006652 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0xea>
 800668c:	0802f5d0 	.word	0x0802f5d0
 8006690:	08030713 	.word	0x08030713
 8006694:	0802f76c 	.word	0x0802f76c
 8006698:	0802f7b3 	.word	0x0802f7b3
 800669c:	0802f856 	.word	0x0802f856
 80066a0:	20013894 	.word	0x20013894
 80066a4:	20013890 	.word	0x20013890

080066a8 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 80066a8:	6a40      	ldr	r0, [r0, #36]	; 0x24
 80066aa:	4770      	bx	lr

080066ac <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 80066ac:	6a80      	ldr	r0, [r0, #40]	; 0x28
 80066ae:	4770      	bx	lr

080066b0 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 80066b0:	4770      	bx	lr

080066b2 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 80066b2:	888b      	ldrh	r3, [r1, #4]
 80066b4:	69c0      	ldr	r0, [r0, #28]
 80066b6:	680a      	ldr	r2, [r1, #0]
 80066b8:	0adb      	lsrs	r3, r3, #11
 80066ba:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 80066be:	4410      	add	r0, r2
 80066c0:	4770      	bx	lr

080066c2 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 80066c2:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 80066c4:	b1c2      	cbz	r2, 80066f8 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 80066c6:	7b13      	ldrb	r3, [r2, #12]
 80066c8:	b1b3      	cbz	r3, 80066f8 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 80066ca:	7b54      	ldrb	r4, [r2, #13]
 80066cc:	7ad2      	ldrb	r2, [r2, #11]
 80066ce:	0224      	lsls	r4, r4, #8
 80066d0:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 80066d4:	4314      	orrs	r4, r2
 80066d6:	6a02      	ldr	r2, [r0, #32]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 80066d8:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 80066da:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 80066de:	8813      	ldrh	r3, [r2, #0]
 80066e0:	428b      	cmp	r3, r1
 80066e2:	d102      	bne.n	80066ea <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 80066e4:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 80066e8:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 80066ea:	d805      	bhi.n	80066f8 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 80066ec:	3801      	subs	r0, #1
 80066ee:	b280      	uxth	r0, r0
 80066f0:	3204      	adds	r2, #4
 80066f2:	2800      	cmp	r0, #0
 80066f4:	d1f3      	bne.n	80066de <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 80066f6:	e7f7      	b.n	80066e8 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 80066f8:	2000      	movs	r0, #0
 80066fa:	e7f5      	b.n	80066e8 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

080066fc <_ZN8touchgfx13GeneratedFontD0Ev>:
 80066fc:	b510      	push	{r4, lr}
 80066fe:	212c      	movs	r1, #44	; 0x2c
 8006700:	4604      	mov	r4, r0
 8006702:	f026 f9f2 	bl	802caea <_ZdlPvj>
 8006706:	4620      	mov	r0, r4
 8006708:	bd10      	pop	{r4, pc}
	...

0800670c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 800670c:	b530      	push	{r4, r5, lr}
 800670e:	b08b      	sub	sp, #44	; 0x2c
 8006710:	4604      	mov	r4, r0
      arabicTable(formsTable)
 8006712:	f8bd 5060 	ldrh.w	r5, [sp, #96]	; 0x60
 8006716:	9508      	str	r5, [sp, #32]
 8006718:	f8bd 505c 	ldrh.w	r5, [sp, #92]	; 0x5c
 800671c:	9507      	str	r5, [sp, #28]
 800671e:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8006722:	9506      	str	r5, [sp, #24]
 8006724:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
 8006728:	9505      	str	r5, [sp, #20]
 800672a:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 800672e:	9504      	str	r5, [sp, #16]
 8006730:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8006734:	9503      	str	r5, [sp, #12]
 8006736:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 800673a:	9502      	str	r5, [sp, #8]
 800673c:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 8006740:	9501      	str	r5, [sp, #4]
 8006742:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 8006746:	9500      	str	r5, [sp, #0]
 8006748:	f013 fab0 	bl	8019cac <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 800674c:	4b06      	ldr	r3, [pc, #24]	; (8006768 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
 800674e:	6023      	str	r3, [r4, #0]
      glyphData(glyphDataInternalFlash),
 8006750:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8006752:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
 8006754:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8006756:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
 8006758:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800675a:	6263      	str	r3, [r4, #36]	; 0x24
      arabicTable(formsTable)
 800675c:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 800675e:	62a3      	str	r3, [r4, #40]	; 0x28
}
 8006760:	4620      	mov	r0, r4
 8006762:	b00b      	add	sp, #44	; 0x2c
 8006764:	bd30      	pop	{r4, r5, pc}
 8006766:	bf00      	nop
 8006768:	0803097c 	.word	0x0803097c

0800676c <_ZN17Main_MenuViewBase11setupScreenEv>:
}

void Main_MenuViewBase::setupScreen()
{

}
 800676c:	4770      	bx	lr

0800676e <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800676e:	4770      	bx	lr

08006770 <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006770:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006772:	68c2      	ldr	r2, [r0, #12]
 8006774:	6844      	ldr	r4, [r0, #4]
 8006776:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006778:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800677a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800677e:	07d2      	lsls	r2, r2, #31
 8006780:	bf48      	it	mi
 8006782:	5962      	ldrmi	r2, [r4, r5]
 8006784:	689b      	ldr	r3, [r3, #8]
    }
 8006786:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006788:	bf48      	it	mi
 800678a:	58d3      	ldrmi	r3, [r2, r3]
 800678c:	4718      	bx	r3

0800678e <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 800678e:	6843      	ldr	r3, [r0, #4]
 8006790:	b12b      	cbz	r3, 800679e <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006792:	6883      	ldr	r3, [r0, #8]
 8006794:	b92b      	cbnz	r3, 80067a2 <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006796:	68c0      	ldr	r0, [r0, #12]
 8006798:	f000 0001 	and.w	r0, r0, #1
 800679c:	4770      	bx	lr
 800679e:	4618      	mov	r0, r3
 80067a0:	4770      	bx	lr
 80067a2:	2001      	movs	r0, #1
    }
 80067a4:	4770      	bx	lr

080067a6 <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80067a6:	b510      	push	{r4, lr}
 80067a8:	2110      	movs	r1, #16
 80067aa:	4604      	mov	r4, r0
 80067ac:	f026 f99d 	bl	802caea <_ZdlPvj>
 80067b0:	4620      	mov	r0, r4
 80067b2:	bd10      	pop	{r4, pc}

080067b4 <_ZN17Main_MenuViewBaseD1Ev>:
Main_MenuViewBase::~Main_MenuViewBase()
 80067b4:	b510      	push	{r4, lr}
 80067b6:	4b03      	ldr	r3, [pc, #12]	; (80067c4 <_ZN17Main_MenuViewBaseD1Ev+0x10>)
 80067b8:	6003      	str	r3, [r0, #0]
 80067ba:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80067bc:	f010 fbde 	bl	8016f7c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80067c0:	4620      	mov	r0, r4
 80067c2:	bd10      	pop	{r4, pc}
 80067c4:	080309f4 	.word	0x080309f4

080067c8 <_ZN17Main_MenuViewBaseD0Ev>:
Main_MenuViewBase::~Main_MenuViewBase()
 80067c8:	b507      	push	{r0, r1, r2, lr}
 80067ca:	4b07      	ldr	r3, [pc, #28]	; (80067e8 <_ZN17Main_MenuViewBaseD0Ev+0x20>)
 80067cc:	6003      	str	r3, [r0, #0]
 80067ce:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80067d0:	f010 fbd4 	bl	8016f7c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80067d4:	9801      	ldr	r0, [sp, #4]
 80067d6:	f44f 5190 	mov.w	r1, #4608	; 0x1200
 80067da:	f026 f986 	bl	802caea <_ZdlPvj>
 80067de:	9801      	ldr	r0, [sp, #4]
 80067e0:	b003      	add	sp, #12
 80067e2:	f85d fb04 	ldr.w	pc, [sp], #4
 80067e6:	bf00      	nop
 80067e8:	080309f4 	.word	0x080309f4

080067ec <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Main_MenuViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 80067ec:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel_Measure)
 80067ee:	f500 73ba 	add.w	r3, r0, #372	; 0x174
 80067f2:	4299      	cmp	r1, r3
{
 80067f4:	4604      	mov	r4, r0
 80067f6:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel_Measure)
 80067f8:	d103      	bne.n	8006802 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Main_MenuViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80067fa:	f012 f8c1 	bl	8018980 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel_Measure clicked change screen to Measurement
        //Go to Measurement with screen transition towards East
        application().gotoMeasurementScreenWipeTransitionEast();
 80067fe:	f7fe feaf 	bl	8005560 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel_Calibration)
 8006802:	f504 7396 	add.w	r3, r4, #300	; 0x12c
 8006806:	429d      	cmp	r5, r3
 8006808:	d103      	bne.n	8006812 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 800680a:	f012 f8b9 	bl	8018980 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel_Calibration clicked change screen to Calibration_Pad
        //Go to Calibration_Pad with screen transition towards East
        application().gotoCalibration_PadScreenWipeTransitionEast();
 800680e:	f7fe ff37 	bl	8005680 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel_ProjectInfo)
 8006812:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 8006816:	429d      	cmp	r5, r3
 8006818:	d103      	bne.n	8006822 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x36>
 800681a:	f012 f8b1 	bl	8018980 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction3
        //When buttonWithLabel_ProjectInfo clicked change screen to Project_Info
        //Go to Project_Info with screen transition towards East
        application().gotoProject_InfoScreenWipeTransitionEast();
 800681e:	f7fe ff3f 	bl	80056a0 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithIcon_turn_off)
 8006822:	f504 7467 	add.w	r4, r4, #924	; 0x39c
 8006826:	42a5      	cmp	r5, r4
 8006828:	d10a      	bne.n	8006840 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x54>
    {
        //Interaction4
        //When buttonWithIcon_turn_off clicked execute C++ code
        //Execute C++ code
        #ifndef SIMULATOR
        HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 800682a:	4806      	ldr	r0, [pc, #24]	; (8006844 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x58>)
 800682c:	2200      	movs	r2, #0
 800682e:	2120      	movs	r1, #32
 8006830:	f005 fa8c 	bl	800bd4c <HAL_GPIO_WritePin>
 8006834:	f012 f8a4 	bl	8018980 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction5
        //When buttonWithIcon_turn_off clicked change screen to Shutting_Off
        //Go to Shutting_Off with no screen transition
        application().gotoShutting_OffScreenNoTransition();
    }
}
 8006838:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoShutting_OffScreenNoTransition();
 800683c:	f7fe bf40 	b.w	80056c0 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8006840:	bd38      	pop	{r3, r4, r5, pc}
 8006842:	bf00      	nop
 8006844:	40021000 	.word	0x40021000

08006848 <_ZN17Main_MenuViewBaseC1Ev>:
Main_MenuViewBase::Main_MenuViewBase() :
 8006848:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800684c:	ed2d 8b08 	vpush	{d8-d11}
 8006850:	4604      	mov	r4, r0
 8006852:	b091      	sub	sp, #68	; 0x44
    buttonCallback(this, &Main_MenuViewBase::buttonCallbackHandler)
 8006854:	46a2      	mov	sl, r4
        : presenter(0)
 8006856:	2500      	movs	r5, #0
 8006858:	f013 fd12 	bl	801a280 <_ZN8touchgfx6ScreenC1Ev>
 800685c:	4b75      	ldr	r3, [pc, #468]	; (8006a34 <_ZN17Main_MenuViewBaseC1Ev+0x1ec>)
 800685e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006860:	f84a 3b40 	str.w	r3, [sl], #64
        : Widget(), alpha(255), color(0)
 8006864:	2226      	movs	r2, #38	; 0x26
 8006866:	4629      	mov	r1, r5
 8006868:	4650      	mov	r0, sl
 800686a:	f027 fa2a 	bl	802dcc2 <memset>
 800686e:	4650      	mov	r0, sl
 8006870:	f7fc fee6 	bl	8003640 <_ZN8touchgfx6WidgetC1Ev>
 8006874:	f104 096c 	add.w	r9, r4, #108	; 0x6c
 8006878:	26ff      	movs	r6, #255	; 0xff
 800687a:	4b6f      	ldr	r3, [pc, #444]	; (8006a38 <_ZN17Main_MenuViewBaseC1Ev+0x1f0>)
 800687c:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800687e:	2226      	movs	r2, #38	; 0x26
 8006880:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006884:	4629      	mov	r1, r5
 8006886:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800688a:	4648      	mov	r0, r9
        : color(col)
 800688c:	66a5      	str	r5, [r4, #104]	; 0x68
 800688e:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8006892:	f027 fa16 	bl	802dcc2 <memset>
 8006896:	4648      	mov	r0, r9
 8006898:	f7fc fed2 	bl	8003640 <_ZN8touchgfx6WidgetC1Ev>
 800689c:	4b67      	ldr	r3, [pc, #412]	; (8006a3c <_ZN17Main_MenuViewBaseC1Ev+0x1f4>)
 800689e:	66e3      	str	r3, [r4, #108]	; 0x6c
 80068a0:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80068a4:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80068a8:	a90e      	add	r1, sp, #56	; 0x38
 80068aa:	4648      	mov	r0, r9
 80068ac:	f104 0898 	add.w	r8, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 80068b0:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80068b4:	f00f fb65 	bl	8015f82 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 80068b8:	4640      	mov	r0, r8
 80068ba:	f7fc ff25 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 80068be:	4b60      	ldr	r3, [pc, #384]	; (8006a40 <_ZN17Main_MenuViewBaseC1Ev+0x1f8>)
 80068c0:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 80068c4:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 80068c8:	4618      	mov	r0, r3
 80068ca:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 80068ce:	ee09 3a90 	vmov	s19, r3
 80068d2:	f00f fc8d 	bl	80161f0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80068d6:	f504 7396 	add.w	r3, r4, #300	; 0x12c
 80068da:	4618      	mov	r0, r3
 80068dc:	ee0a 3a10 	vmov	s20, r3
 80068e0:	f00f fc86 	bl	80161f0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80068e4:	f504 73ba 	add.w	r3, r4, #372	; 0x174
 80068e8:	4618      	mov	r0, r3
 80068ea:	f504 77de 	add.w	r7, r4, #444	; 0x1bc
 80068ee:	ee0a 3a90 	vmov	s21, r3
 80068f2:	f00f fc7d 	bl	80161f0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80068f6:	4638      	mov	r0, r7
 80068f8:	f00e f836 	bl	8014968 <_ZN8touchgfx4LineC1Ev>
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80068fc:	4e51      	ldr	r6, [pc, #324]	; (8006a44 <_ZN17Main_MenuViewBaseC1Ev+0x1fc>)
 80068fe:	f504 730b 	add.w	r3, r4, #556	; 0x22c
 8006902:	4618      	mov	r0, r3
 8006904:	9304      	str	r3, [sp, #16]
 8006906:	f7fc fc9f 	bl	8003248 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800690a:	f106 0324 	add.w	r3, r6, #36	; 0x24
 800690e:	f8c4 3234 	str.w	r3, [r4, #564]	; 0x234
 8006912:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8006916:	4618      	mov	r0, r3
 8006918:	f8c4 622c 	str.w	r6, [r4, #556]	; 0x22c
 800691c:	f8c4 5238 	str.w	r5, [r4, #568]	; 0x238
 8006920:	f504 7b22 	add.w	fp, r4, #648	; 0x288
 8006924:	ee08 3a10 	vmov	s16, r3
 8006928:	f7fc feee 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
 800692c:	4658      	mov	r0, fp
 800692e:	f00e f81b 	bl	8014968 <_ZN8touchgfx4LineC1Ev>
 8006932:	f504 733e 	add.w	r3, r4, #760	; 0x2f8
 8006936:	4618      	mov	r0, r3
 8006938:	9305      	str	r3, [sp, #20]
 800693a:	f7fc fc85 	bl	8003248 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800693e:	f106 0324 	add.w	r3, r6, #36	; 0x24
 8006942:	f8c4 3300 	str.w	r3, [r4, #768]	; 0x300
 8006946:	f504 7343 	add.w	r3, r4, #780	; 0x30c
 800694a:	f8c4 62f8 	str.w	r6, [r4, #760]	; 0x2f8
 800694e:	4618      	mov	r0, r3
 8006950:	f8c4 5304 	str.w	r5, [r4, #772]	; 0x304
 8006954:	ee08 3a90 	vmov	s17, r3
 8006958:	f7fc fed6 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
 800695c:	f504 7355 	add.w	r3, r4, #852	; 0x354
 8006960:	4618      	mov	r0, r3
 8006962:	ee09 3a10 	vmov	s18, r3
 8006966:	f7fc fecf 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
 800696a:	f504 7367 	add.w	r3, r4, #924	; 0x39c
 800696e:	4618      	mov	r0, r3
 8006970:	ee0b 3a10 	vmov	s22, r3
 8006974:	f00f fade 	bl	8015f34 <_ZN8touchgfx14ButtonWithIconC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8006978:	4a33      	ldr	r2, [pc, #204]	; (8006a48 <_ZN17Main_MenuViewBaseC1Ev+0x200>)
 800697a:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 800697e:	e9c3 247c 	strd	r2, r4, [r3, #496]	; 0x1f0
 8006982:	4a32      	ldr	r2, [pc, #200]	; (8006a4c <_ZN17Main_MenuViewBaseC1Ev+0x204>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006984:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8006988:	e9c3 257e 	strd	r2, r5, [r3, #504]	; 0x1f8
 800698c:	f504 7078 	add.w	r0, r4, #992	; 0x3e0
 8006990:	f010 faea 	bl	8016f68 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8006994:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8006998:	462a      	mov	r2, r5
 800699a:	4650      	mov	r0, sl
 800699c:	9300      	str	r3, [sp, #0]
 800699e:	4629      	mov	r1, r5
 80069a0:	23f0      	movs	r3, #240	; 0xf0
 80069a2:	f7fc fe28 	bl	80035f6 <_ZN8touchgfx8Drawable11setPositionEssss>
 80069a6:	1d26      	adds	r6, r4, #4
        color = newColor;
 80069a8:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80069ac:	66a3      	str	r3, [r4, #104]	; 0x68
 80069ae:	4651      	mov	r1, sl
 80069b0:	4630      	mov	r0, r6
 80069b2:	f00b ff0d 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image_background.setXY(0, 0);
 80069b6:	462a      	mov	r2, r5
 80069b8:	4648      	mov	r0, r9
 80069ba:	4629      	mov	r1, r5
 80069bc:	f7fc fe0e 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 80069c0:	2308      	movs	r3, #8
    image_background.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80069c2:	4648      	mov	r0, r9
 80069c4:	a90e      	add	r1, sp, #56	; 0x38
 80069c6:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 80069ca:	f00f fada 	bl	8015f82 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80069ce:	4649      	mov	r1, r9
 80069d0:	4630      	mov	r0, r6
 80069d2:	f00b fefd 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_auto_off.setXY(86, 308);
 80069d6:	f44f 729a 	mov.w	r2, #308	; 0x134
 80069da:	2156      	movs	r1, #86	; 0x56
 80069dc:	4640      	mov	r0, r8
 80069de:	f7fc fdfd 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 80069e2:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 80069e6:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 80069ea:	f10d 0918 	add.w	r9, sp, #24
        color = newColor;
 80069ee:	f04f 3aff 	mov.w	sl, #4294967295
        boundingArea = calculateBoundingArea();
 80069f2:	4648      	mov	r0, r9
 80069f4:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 80069f8:	f8c4 a0c8 	str.w	sl, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 80069fc:	4641      	mov	r1, r8
 80069fe:	4798      	blx	r3
 8006a00:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 8006a04:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8006a08:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006a0c:	4b10      	ldr	r3, [pc, #64]	; (8006a50 <_ZN17Main_MenuViewBaseC1Ev+0x208>)
 8006a0e:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_UQO1).getText());
 8006a10:	f504 7976 	add.w	r9, r4, #984	; 0x3d8
 8006a14:	b92b      	cbnz	r3, 8006a22 <_ZN17Main_MenuViewBaseC1Ev+0x1da>
 8006a16:	4b0f      	ldr	r3, [pc, #60]	; (8006a54 <_ZN17Main_MenuViewBaseC1Ev+0x20c>)
 8006a18:	4a0f      	ldr	r2, [pc, #60]	; (8006a58 <_ZN17Main_MenuViewBaseC1Ev+0x210>)
 8006a1a:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006a1c:	480f      	ldr	r0, [pc, #60]	; (8006a5c <_ZN17Main_MenuViewBaseC1Ev+0x214>)
 8006a1e:	f026 ff4b 	bl	802d8b8 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8006a22:	4b0f      	ldr	r3, [pc, #60]	; (8006a60 <_ZN17Main_MenuViewBaseC1Ev+0x218>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006a24:	881b      	ldrh	r3, [r3, #0]
 8006a26:	2b54      	cmp	r3, #84	; 0x54
 8006a28:	d81e      	bhi.n	8006a68 <_ZN17Main_MenuViewBaseC1Ev+0x220>
 8006a2a:	4b0e      	ldr	r3, [pc, #56]	; (8006a64 <_ZN17Main_MenuViewBaseC1Ev+0x21c>)
 8006a2c:	4a0a      	ldr	r2, [pc, #40]	; (8006a58 <_ZN17Main_MenuViewBaseC1Ev+0x210>)
 8006a2e:	2161      	movs	r1, #97	; 0x61
 8006a30:	e7f4      	b.n	8006a1c <_ZN17Main_MenuViewBaseC1Ev+0x1d4>
 8006a32:	bf00      	nop
 8006a34:	080309f4 	.word	0x080309f4
 8006a38:	080319a8 	.word	0x080319a8
 8006a3c:	08031bf4 	.word	0x08031bf4
 8006a40:	0802f4f4 	.word	0x0802f4f4
 8006a44:	080316dc 	.word	0x080316dc
 8006a48:	080309dc 	.word	0x080309dc
 8006a4c:	080067ed 	.word	0x080067ed
 8006a50:	200138a4 	.word	0x200138a4
 8006a54:	0802f2a4 	.word	0x0802f2a4
 8006a58:	0802f3a9 	.word	0x0802f3a9
 8006a5c:	0802f321 	.word	0x0802f321
 8006a60:	200138a8 	.word	0x200138a8
 8006a64:	0802f368 	.word	0x0802f368
        return texts->getText(typedTextId);
 8006a68:	4bc1      	ldr	r3, [pc, #772]	; (8006d70 <_ZN17Main_MenuViewBaseC1Ev+0x528>)
 8006a6a:	2154      	movs	r1, #84	; 0x54
 8006a6c:	6818      	ldr	r0, [r3, #0]
 8006a6e:	f003 fdf3 	bl	800a658 <_ZNK8touchgfx5Texts7getTextEt>
 8006a72:	4ac0      	ldr	r2, [pc, #768]	; (8006d74 <_ZN17Main_MenuViewBaseC1Ev+0x52c>)
 8006a74:	4603      	mov	r3, r0
 8006a76:	2104      	movs	r1, #4
 8006a78:	4648      	mov	r0, r9
 8006a7a:	f015 f92f 	bl	801bcdc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea_auto_off.resizeToCurrentText();
 8006a7e:	4640      	mov	r0, r8
        wc1 = value;
 8006a80:	f8c4 90e0 	str.w	r9, [r4, #224]	; 0xe0
 8006a84:	f00e fcac 	bl	80153e0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8006a88:	4bbb      	ldr	r3, [pc, #748]	; (8006d78 <_ZN17Main_MenuViewBaseC1Ev+0x530>)
 8006a8a:	930e      	str	r3, [sp, #56]	; 0x38
    textArea_auto_off.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2SIJ));
 8006a8c:	4640      	mov	r0, r8
 8006a8e:	2355      	movs	r3, #85	; 0x55
 8006a90:	a90e      	add	r1, sp, #56	; 0x38
 8006a92:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
 8006a96:	f00e fcc3 	bl	8015420 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006a9a:	4641      	mov	r1, r8
 8006a9c:	4630      	mov	r0, r6
 8006a9e:	f00b fe97 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_ProjectInfo.setXY(33, 240);
 8006aa2:	ee19 0a90 	vmov	r0, s19
 8006aa6:	22f0      	movs	r2, #240	; 0xf0
 8006aa8:	2121      	movs	r1, #33	; 0x21
 8006aaa:	f7fc fd97 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8006aae:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel_ProjectInfo.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006ab2:	aa0e      	add	r2, sp, #56	; 0x38
 8006ab4:	f04f 0802 	mov.w	r8, #2
 8006ab8:	a90d      	add	r1, sp, #52	; 0x34
 8006aba:	ee19 0a90 	vmov	r0, s19
 8006abe:	f8ad 9034 	strh.w	r9, [sp, #52]	; 0x34
 8006ac2:	f8ad 8038 	strh.w	r8, [sp, #56]	; 0x38
 8006ac6:	f00f f866 	bl	8015b96 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8006aca:	236f      	movs	r3, #111	; 0x6f
        updateTextPosition();
 8006acc:	ee19 0a90 	vmov	r0, s19
 8006ad0:	f8a4 311c 	strh.w	r3, [r4, #284]	; 0x11c
 8006ad4:	f7fc fdc6 	bl	8003664 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel_ProjectInfo.setAction(buttonCallback);
 8006ad8:	f504 538f 	add.w	r3, r4, #4576	; 0x11e0
 8006adc:	3310      	adds	r3, #16
 8006ade:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
 8006ae2:	ee19 1a90 	vmov	r1, s19
 8006ae6:	4630      	mov	r0, r6
        colorPressed = col;
 8006ae8:	e9c4 aa48 	strd	sl, sl, [r4, #288]	; 0x120
 8006aec:	9303      	str	r3, [sp, #12]
 8006aee:	f00b fe6f 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_Calibration.setXY(33, 170);
 8006af2:	ee1a 0a10 	vmov	r0, s20
 8006af6:	22aa      	movs	r2, #170	; 0xaa
 8006af8:	2121      	movs	r1, #33	; 0x21
 8006afa:	f7fc fd6f 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel_Calibration.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006afe:	aa0e      	add	r2, sp, #56	; 0x38
 8006b00:	a90d      	add	r1, sp, #52	; 0x34
 8006b02:	ee1a 0a10 	vmov	r0, s20
 8006b06:	f8ad 9034 	strh.w	r9, [sp, #52]	; 0x34
 8006b0a:	f8ad 8038 	strh.w	r8, [sp, #56]	; 0x38
 8006b0e:	f00f f842 	bl	8015b96 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006b12:	2370      	movs	r3, #112	; 0x70
        updateTextPosition();
 8006b14:	ee1a 0a10 	vmov	r0, s20
 8006b18:	f8a4 3164 	strh.w	r3, [r4, #356]	; 0x164
 8006b1c:	f7fc fda2 	bl	8003664 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006b20:	9b03      	ldr	r3, [sp, #12]
 8006b22:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8006b26:	ee1a 1a10 	vmov	r1, s20
 8006b2a:	4630      	mov	r0, r6
        colorPressed = col;
 8006b2c:	e9c4 aa5a 	strd	sl, sl, [r4, #360]	; 0x168
 8006b30:	f00b fe4e 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_Measure.setXY(33, 100);
 8006b34:	ee1a 0a90 	vmov	r0, s21
 8006b38:	2264      	movs	r2, #100	; 0x64
 8006b3a:	2121      	movs	r1, #33	; 0x21
 8006b3c:	f7fc fd4e 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel_Measure.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006b40:	aa0e      	add	r2, sp, #56	; 0x38
 8006b42:	a90d      	add	r1, sp, #52	; 0x34
 8006b44:	ee1a 0a90 	vmov	r0, s21
 8006b48:	f8ad 9034 	strh.w	r9, [sp, #52]	; 0x34
 8006b4c:	f8ad 8038 	strh.w	r8, [sp, #56]	; 0x38
 8006b50:	f00f f821 	bl	8015b96 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006b54:	2371      	movs	r3, #113	; 0x71
        updateTextPosition();
 8006b56:	ee1a 0a90 	vmov	r0, s21
 8006b5a:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
 8006b5e:	f7fc fd81 	bl	8003664 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006b62:	9b03      	ldr	r3, [sp, #12]
 8006b64:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 8006b68:	ee1a 1a90 	vmov	r1, s21
 8006b6c:	4630      	mov	r0, r6
        colorPressed = col;
 8006b6e:	e9c4 aa6c 	strd	sl, sl, [r4, #432]	; 0x1b0
 8006b72:	f00b fe2d 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line2.setPosition(0, 75, 240, 10);
 8006b76:	230a      	movs	r3, #10
 8006b78:	9300      	str	r3, [sp, #0]
 8006b7a:	224b      	movs	r2, #75	; 0x4b
 8006b7c:	23f0      	movs	r3, #240	; 0xf0
 8006b7e:	4629      	mov	r1, r5
 8006b80:	4638      	mov	r0, r7
 8006b82:	f7fc fd38 	bl	80035f6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006b86:	9b04      	ldr	r3, [sp, #16]
 8006b88:	f8c4 31e4 	str.w	r3, [r4, #484]	; 0x1e4
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006b8c:	22a0      	movs	r2, #160	; 0xa0
 8006b8e:	4611      	mov	r1, r2
 8006b90:	4638      	mov	r0, r7
 8006b92:	f8c4 a238 	str.w	sl, [r4, #568]	; 0x238
        color565 = LCD16bpp::getNativeColor(painterColor);
 8006b96:	f8a4 a23c 	strh.w	sl, [r4, #572]	; 0x23c
 8006b9a:	f00d fffb 	bl	8014b94 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006b9e:	22a0      	movs	r2, #160	; 0xa0
 8006ba0:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006ba4:	4638      	mov	r0, r7
 8006ba6:	f00e f800 	bl	8014baa <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8006baa:	f8d4 31f8 	ldr.w	r3, [r4, #504]	; 0x1f8
 8006bae:	2b20      	cmp	r3, #32
 8006bb0:	d005      	beq.n	8006bbe <_ZN17Main_MenuViewBaseC1Ev+0x376>
        lineWidthQ5 = widthQ5;
 8006bb2:	2320      	movs	r3, #32
 8006bb4:	f8c4 31f8 	str.w	r3, [r4, #504]	; 0x1f8
        updateCachedShape();
 8006bb8:	4638      	mov	r0, r7
 8006bba:	f00d fef5 	bl	80149a8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8006bbe:	4638      	mov	r0, r7
 8006bc0:	2101      	movs	r1, #1
 8006bc2:	f00d fffd 	bl	8014bc0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8006bc6:	4639      	mov	r1, r7
 8006bc8:	4630      	mov	r0, r6
 8006bca:	f00b fe01 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8006bce:	f04f 35ff 	mov.w	r5, #4294967295
    textArea_menu.setXY(88, 60);
 8006bd2:	223c      	movs	r2, #60	; 0x3c
 8006bd4:	ee18 0a10 	vmov	r0, s16
 8006bd8:	2158      	movs	r1, #88	; 0x58
        linespace = space;
 8006bda:	2700      	movs	r7, #0
        boundingArea = calculateBoundingArea();
 8006bdc:	f10d 0818 	add.w	r8, sp, #24
 8006be0:	f7fc fcfc 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8006be4:	ee18 1a10 	vmov	r1, s16
 8006be8:	4640      	mov	r0, r8
        color = newColor;
 8006bea:	f8c4 5270 	str.w	r5, [r4, #624]	; 0x270
        linespace = space;
 8006bee:	f8a4 7274 	strh.w	r7, [r4, #628]	; 0x274
        boundingArea = calculateBoundingArea();
 8006bf2:	f00e f97b 	bl	8014eec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006bf6:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006bfa:	ee18 3a10 	vmov	r3, s16
 8006bfe:	333c      	adds	r3, #60	; 0x3c
 8006c00:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8006c04:	4b5c      	ldr	r3, [pc, #368]	; (8006d78 <_ZN17Main_MenuViewBaseC1Ev+0x530>)
 8006c06:	930e      	str	r3, [sp, #56]	; 0x38
    textArea_menu.setTypedText(touchgfx::TypedText(T___SINGLEUSE_L4HV));
 8006c08:	ee18 0a10 	vmov	r0, s16
 8006c0c:	2344      	movs	r3, #68	; 0x44
 8006c0e:	a90e      	add	r1, sp, #56	; 0x38
 8006c10:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
 8006c14:	f00e fc04 	bl	8015420 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006c18:	ee18 1a10 	vmov	r1, s16
 8006c1c:	4630      	mov	r0, r6
 8006c1e:	f00b fdd7 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8006c22:	230a      	movs	r3, #10
 8006c24:	9300      	str	r3, [sp, #0]
 8006c26:	2232      	movs	r2, #50	; 0x32
 8006c28:	23f0      	movs	r3, #240	; 0xf0
 8006c2a:	4639      	mov	r1, r7
 8006c2c:	4658      	mov	r0, fp
 8006c2e:	f7fc fce2 	bl	80035f6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006c32:	9b05      	ldr	r3, [sp, #20]
 8006c34:	f8c4 32b0 	str.w	r3, [r4, #688]	; 0x2b0
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006c38:	22a0      	movs	r2, #160	; 0xa0
 8006c3a:	4611      	mov	r1, r2
 8006c3c:	4658      	mov	r0, fp
 8006c3e:	f8c4 5304 	str.w	r5, [r4, #772]	; 0x304
 8006c42:	f8a4 5308 	strh.w	r5, [r4, #776]	; 0x308
 8006c46:	f00d ffa5 	bl	8014b94 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006c4a:	22a0      	movs	r2, #160	; 0xa0
 8006c4c:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006c50:	4658      	mov	r0, fp
 8006c52:	f00d ffaa 	bl	8014baa <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8006c56:	f8d4 32c4 	ldr.w	r3, [r4, #708]	; 0x2c4
 8006c5a:	2b20      	cmp	r3, #32
 8006c5c:	d005      	beq.n	8006c6a <_ZN17Main_MenuViewBaseC1Ev+0x422>
        lineWidthQ5 = widthQ5;
 8006c5e:	2320      	movs	r3, #32
 8006c60:	f8c4 32c4 	str.w	r3, [r4, #708]	; 0x2c4
        updateCachedShape();
 8006c64:	4658      	mov	r0, fp
 8006c66:	f00d fe9f 	bl	80149a8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8006c6a:	4658      	mov	r0, fp
 8006c6c:	2101      	movs	r1, #1
 8006c6e:	f00d ffa7 	bl	8014bc0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8006c72:	4659      	mov	r1, fp
 8006c74:	4630      	mov	r0, r6
 8006c76:	f00b fdab 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8006c7a:	2700      	movs	r7, #0
        boundingArea = calculateBoundingArea();
 8006c7c:	ad06      	add	r5, sp, #24
    textArea_name.setXY(69, 35);
 8006c7e:	ee18 0a90 	vmov	r0, s17
 8006c82:	2223      	movs	r2, #35	; 0x23
        color = newColor;
 8006c84:	f04f 39ff 	mov.w	r9, #4294967295
 8006c88:	2145      	movs	r1, #69	; 0x45
 8006c8a:	f7fc fca7 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006c8e:	ee18 1a90 	vmov	r1, s17
 8006c92:	4628      	mov	r0, r5
        color = newColor;
 8006c94:	f8c4 933c 	str.w	r9, [r4, #828]	; 0x33c
        linespace = space;
 8006c98:	f8a4 7340 	strh.w	r7, [r4, #832]	; 0x340
        boundingArea = calculateBoundingArea();
 8006c9c:	f00e f926 	bl	8014eec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006ca0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006ca4:	ee18 3a90 	vmov	r3, s17
 8006ca8:	333c      	adds	r3, #60	; 0x3c
 8006caa:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    textArea_name.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6D7Z));
 8006cae:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 8006cb2:	4b31      	ldr	r3, [pc, #196]	; (8006d78 <_ZN17Main_MenuViewBaseC1Ev+0x530>)
 8006cb4:	930e      	str	r3, [sp, #56]	; 0x38
 8006cb6:	ee18 0a90 	vmov	r0, s17
 8006cba:	236d      	movs	r3, #109	; 0x6d
 8006cbc:	4641      	mov	r1, r8
 8006cbe:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
 8006cc2:	f00e fbad 	bl	8015420 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006cc6:	ee18 1a90 	vmov	r1, s17
 8006cca:	4630      	mov	r0, r6
 8006ccc:	f00b fd80 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_title.setXY(54, 12);
 8006cd0:	ee19 0a10 	vmov	r0, s18
 8006cd4:	220c      	movs	r2, #12
 8006cd6:	2136      	movs	r1, #54	; 0x36
 8006cd8:	f7fc fc80 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8006cdc:	ee19 1a10 	vmov	r1, s18
 8006ce0:	4628      	mov	r0, r5
        color = newColor;
 8006ce2:	f8c4 9384 	str.w	r9, [r4, #900]	; 0x384
        linespace = space;
 8006ce6:	f8a4 7388 	strh.w	r7, [r4, #904]	; 0x388
        boundingArea = calculateBoundingArea();
 8006cea:	f00e f8ff 	bl	8014eec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006cee:	ee19 2a10 	vmov	r2, s18
 8006cf2:	f102 033c 	add.w	r3, r2, #60	; 0x3c
 8006cf6:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006cfa:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006cfe:	4b1e      	ldr	r3, [pc, #120]	; (8006d78 <_ZN17Main_MenuViewBaseC1Ev+0x530>)
 8006d00:	930e      	str	r3, [sp, #56]	; 0x38
    textArea_title.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9K1W));
 8006d02:	ee19 0a10 	vmov	r0, s18
 8006d06:	236e      	movs	r3, #110	; 0x6e
 8006d08:	4641      	mov	r1, r8
 8006d0a:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
 8006d0e:	f00e fb87 	bl	8015420 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006d12:	ee19 1a10 	vmov	r1, s18
 8006d16:	4630      	mov	r0, r6
 8006d18:	f00b fd5a 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_turn_off.setXY(198, 5);
 8006d1c:	ee1b 0a10 	vmov	r0, s22
 8006d20:	2205      	movs	r2, #5
 8006d22:	21c6      	movs	r1, #198	; 0xc6
 8006d24:	f7fc fc5a 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8006d28:	2301      	movs	r3, #1
 8006d2a:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8006d2e:	230a      	movs	r3, #10
    buttonWithIcon_turn_off.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_POWER_OFF_36X36_ID), touchgfx::Bitmap(BITMAP_POWER_OFF_36X36_ID));
 8006d30:	ee1b 0a10 	vmov	r0, s22
 8006d34:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8006d38:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8006d3c:	aa0c      	add	r2, sp, #48	; 0x30
 8006d3e:	ab0d      	add	r3, sp, #52	; 0x34
 8006d40:	a90b      	add	r1, sp, #44	; 0x2c
 8006d42:	f8cd 8000 	str.w	r8, [sp]
 8006d46:	f8ad 702c 	strh.w	r7, [sp, #44]	; 0x2c
 8006d4a:	f00f f85e 	bl	8015e0a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8006d4e:	9b03      	ldr	r3, [sp, #12]
 8006d50:	f8c4 73d4 	str.w	r7, [r4, #980]	; 0x3d4
 8006d54:	4630      	mov	r0, r6
 8006d56:	ee1b 1a10 	vmov	r1, s22
 8006d5a:	f8c4 33c4 	str.w	r3, [r4, #964]	; 0x3c4
 8006d5e:	f00b fd37 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006d62:	4620      	mov	r0, r4
 8006d64:	b011      	add	sp, #68	; 0x44
 8006d66:	ecbd 8b08 	vpop	{d8-d11}
 8006d6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006d6e:	bf00      	nop
 8006d70:	200138b0 	.word	0x200138b0
 8006d74:	0802f3e1 	.word	0x0802f3e1
 8006d78:	0802f454 	.word	0x0802f454

08006d7c <_ZN19MeasurementViewBase11setupScreenEv>:
}

void MeasurementViewBase::setupScreen()
{

}
 8006d7c:	4770      	bx	lr

08006d7e <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006d7e:	4770      	bx	lr

08006d80 <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006d80:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006d82:	68c2      	ldr	r2, [r0, #12]
 8006d84:	6844      	ldr	r4, [r0, #4]
 8006d86:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006d88:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006d8a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006d8e:	07d2      	lsls	r2, r2, #31
 8006d90:	bf48      	it	mi
 8006d92:	5962      	ldrmi	r2, [r4, r5]
 8006d94:	689b      	ldr	r3, [r3, #8]
    }
 8006d96:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006d98:	bf48      	it	mi
 8006d9a:	58d3      	ldrmi	r3, [r2, r3]
 8006d9c:	4718      	bx	r3

08006d9e <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006d9e:	6843      	ldr	r3, [r0, #4]
 8006da0:	b12b      	cbz	r3, 8006dae <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006da2:	6883      	ldr	r3, [r0, #8]
 8006da4:	b92b      	cbnz	r3, 8006db2 <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006da6:	68c0      	ldr	r0, [r0, #12]
 8006da8:	f000 0001 	and.w	r0, r0, #1
 8006dac:	4770      	bx	lr
 8006dae:	4618      	mov	r0, r3
 8006db0:	4770      	bx	lr
 8006db2:	2001      	movs	r0, #1
    }
 8006db4:	4770      	bx	lr

08006db6 <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006db6:	b510      	push	{r4, lr}
 8006db8:	2110      	movs	r1, #16
 8006dba:	4604      	mov	r4, r0
 8006dbc:	f025 fe95 	bl	802caea <_ZdlPvj>
 8006dc0:	4620      	mov	r0, r4
 8006dc2:	bd10      	pop	{r4, pc}

08006dc4 <_ZN19MeasurementViewBaseD1Ev>:
MeasurementViewBase::~MeasurementViewBase()
 8006dc4:	b510      	push	{r4, lr}
 8006dc6:	4b03      	ldr	r3, [pc, #12]	; (8006dd4 <_ZN19MeasurementViewBaseD1Ev+0x10>)
 8006dc8:	6003      	str	r3, [r0, #0]
 8006dca:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006dcc:	f010 f8d6 	bl	8016f7c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006dd0:	4620      	mov	r0, r4
 8006dd2:	bd10      	pop	{r4, pc}
 8006dd4:	08030a40 	.word	0x08030a40

08006dd8 <_ZN19MeasurementViewBaseD0Ev>:
MeasurementViewBase::~MeasurementViewBase()
 8006dd8:	b507      	push	{r0, r1, r2, lr}
 8006dda:	4b07      	ldr	r3, [pc, #28]	; (8006df8 <_ZN19MeasurementViewBaseD0Ev+0x20>)
 8006ddc:	6003      	str	r3, [r0, #0]
 8006dde:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006de0:	f010 f8cc 	bl	8016f7c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006de4:	9801      	ldr	r0, [sp, #4]
 8006de6:	f241 11c4 	movw	r1, #4548	; 0x11c4
 8006dea:	f025 fe7e 	bl	802caea <_ZdlPvj>
 8006dee:	9801      	ldr	r0, [sp, #4]
 8006df0:	b003      	add	sp, #12
 8006df2:	f85d fb04 	ldr.w	pc, [sp], #4
 8006df6:	bf00      	nop
 8006df8:	08030a40 	.word	0x08030a40

08006dfc <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void MeasurementViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8006dfc:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel_Return)
 8006dfe:	f100 03e4 	add.w	r3, r0, #228	; 0xe4
 8006e02:	4299      	cmp	r1, r3
{
 8006e04:	4604      	mov	r4, r0
 8006e06:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel_Return)
 8006e08:	d103      	bne.n	8006e12 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~MeasurementViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006e0a:	f011 fdb9 	bl	8018980 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel_Return clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
 8006e0e:	f7fe fb97 	bl	8005540 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel_Single)
 8006e12:	f504 73ba 	add.w	r3, r4, #372	; 0x174
 8006e16:	429d      	cmp	r5, r3
 8006e18:	d103      	bne.n	8006e22 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8006e1a:	f011 fdb1 	bl	8018980 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel_Single clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8006e1e:	f7fe fbbf 	bl	80055a0 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel_Accurate)
 8006e22:	f504 7496 	add.w	r4, r4, #300	; 0x12c
 8006e26:	42a5      	cmp	r5, r4
 8006e28:	d105      	bne.n	8006e36 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 8006e2a:	f011 fda9 	bl	8018980 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel_Accurate clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards East
        application().gotoMeasurement_AccurateScreenWipeTransitionEast();
    }
}
 8006e2e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionEast();
 8006e32:	f7fe bbe5 	b.w	8005600 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv>
}
 8006e36:	bd38      	pop	{r3, r4, r5, pc}

08006e38 <_ZN19MeasurementViewBaseC1Ev>:
MeasurementViewBase::MeasurementViewBase() :
 8006e38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006e3c:	ed2d 8b06 	vpush	{d8-d10}
 8006e40:	4604      	mov	r4, r0
 8006e42:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &MeasurementViewBase::buttonCallbackHandler)
 8006e44:	46a2      	mov	sl, r4
 8006e46:	2500      	movs	r5, #0
 8006e48:	f013 fa1a 	bl	801a280 <_ZN8touchgfx6ScreenC1Ev>
 8006e4c:	4b71      	ldr	r3, [pc, #452]	; (8007014 <_ZN19MeasurementViewBaseC1Ev+0x1dc>)
 8006e4e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006e50:	f84a 3b40 	str.w	r3, [sl], #64
        : Widget(), alpha(255), color(0)
 8006e54:	2226      	movs	r2, #38	; 0x26
 8006e56:	4629      	mov	r1, r5
 8006e58:	4650      	mov	r0, sl
 8006e5a:	f026 ff32 	bl	802dcc2 <memset>
 8006e5e:	4650      	mov	r0, sl
 8006e60:	f7fc fbee 	bl	8003640 <_ZN8touchgfx6WidgetC1Ev>
 8006e64:	f104 096c 	add.w	r9, r4, #108	; 0x6c
 8006e68:	26ff      	movs	r6, #255	; 0xff
 8006e6a:	4b6b      	ldr	r3, [pc, #428]	; (8007018 <_ZN19MeasurementViewBaseC1Ev+0x1e0>)
 8006e6c:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8006e6e:	2226      	movs	r2, #38	; 0x26
 8006e70:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006e74:	4629      	mov	r1, r5
 8006e76:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8006e7a:	4648      	mov	r0, r9
 8006e7c:	66a5      	str	r5, [r4, #104]	; 0x68
 8006e7e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006e82:	f026 ff1e 	bl	802dcc2 <memset>
 8006e86:	4648      	mov	r0, r9
 8006e88:	f7fc fbda 	bl	8003640 <_ZN8touchgfx6WidgetC1Ev>
 8006e8c:	4b63      	ldr	r3, [pc, #396]	; (800701c <_ZN19MeasurementViewBaseC1Ev+0x1e4>)
 8006e8e:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006e90:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006e94:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006e98:	a90a      	add	r1, sp, #40	; 0x28
 8006e9a:	4648      	mov	r0, r9
 8006e9c:	f104 0898 	add.w	r8, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8006ea0:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006ea4:	f00f f86d 	bl	8015f82 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8006ea8:	4640      	mov	r0, r8
 8006eaa:	f7fc fc2d 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8006eae:	4b5c      	ldr	r3, [pc, #368]	; (8007020 <_ZN19MeasurementViewBaseC1Ev+0x1e8>)
 8006eb0:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8006eb4:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 8006eb8:	4618      	mov	r0, r3
 8006eba:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8006ebe:	ee09 3a90 	vmov	s19, r3
 8006ec2:	f00f f995 	bl	80161f0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006ec6:	f504 7396 	add.w	r3, r4, #300	; 0x12c
 8006eca:	4618      	mov	r0, r3
 8006ecc:	ee0a 3a10 	vmov	s20, r3
 8006ed0:	f00f f98e 	bl	80161f0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006ed4:	f504 73ba 	add.w	r3, r4, #372	; 0x174
 8006ed8:	4618      	mov	r0, r3
 8006eda:	f504 77de 	add.w	r7, r4, #444	; 0x1bc
 8006ede:	ee0a 3a90 	vmov	s21, r3
 8006ee2:	f00f f985 	bl	80161f0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006ee6:	4638      	mov	r0, r7
 8006ee8:	f00d fd3e 	bl	8014968 <_ZN8touchgfx4LineC1Ev>
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8006eec:	4e4d      	ldr	r6, [pc, #308]	; (8007024 <_ZN19MeasurementViewBaseC1Ev+0x1ec>)
 8006eee:	f504 730b 	add.w	r3, r4, #556	; 0x22c
 8006ef2:	4618      	mov	r0, r3
 8006ef4:	9302      	str	r3, [sp, #8]
 8006ef6:	f7fc f9a7 	bl	8003248 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006efa:	f106 0324 	add.w	r3, r6, #36	; 0x24
 8006efe:	f8c4 3234 	str.w	r3, [r4, #564]	; 0x234
 8006f02:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8006f06:	4618      	mov	r0, r3
 8006f08:	f8c4 622c 	str.w	r6, [r4, #556]	; 0x22c
 8006f0c:	f8c4 5238 	str.w	r5, [r4, #568]	; 0x238
 8006f10:	f504 7b22 	add.w	fp, r4, #648	; 0x288
 8006f14:	ee08 3a10 	vmov	s16, r3
 8006f18:	f7fc fbf6 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
 8006f1c:	4658      	mov	r0, fp
 8006f1e:	f00d fd23 	bl	8014968 <_ZN8touchgfx4LineC1Ev>
 8006f22:	f504 733e 	add.w	r3, r4, #760	; 0x2f8
 8006f26:	4618      	mov	r0, r3
 8006f28:	9303      	str	r3, [sp, #12]
 8006f2a:	f7fc f98d 	bl	8003248 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006f2e:	f106 0324 	add.w	r3, r6, #36	; 0x24
 8006f32:	f8c4 3300 	str.w	r3, [r4, #768]	; 0x300
 8006f36:	f504 7343 	add.w	r3, r4, #780	; 0x30c
 8006f3a:	f8c4 62f8 	str.w	r6, [r4, #760]	; 0x2f8
 8006f3e:	4618      	mov	r0, r3
 8006f40:	f8c4 5304 	str.w	r5, [r4, #772]	; 0x304
 8006f44:	ee08 3a90 	vmov	s17, r3
 8006f48:	f7fc fbde 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
 8006f4c:	f504 7355 	add.w	r3, r4, #852	; 0x354
 8006f50:	4618      	mov	r0, r3
 8006f52:	ee09 3a10 	vmov	s18, r3
 8006f56:	f7fc fbd7 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8006f5a:	4a33      	ldr	r2, [pc, #204]	; (8007028 <_ZN19MeasurementViewBaseC1Ev+0x1f0>)
 8006f5c:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8006f60:	e9c3 246d 	strd	r2, r4, [r3, #436]	; 0x1b4
 8006f64:	4a31      	ldr	r2, [pc, #196]	; (800702c <_ZN19MeasurementViewBaseC1Ev+0x1f4>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006f66:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8006f6a:	e9c3 256f 	strd	r2, r5, [r3, #444]	; 0x1bc
 8006f6e:	f504 7069 	add.w	r0, r4, #932	; 0x3a4
 8006f72:	f00f fff9 	bl	8016f68 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8006f76:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8006f7a:	462a      	mov	r2, r5
 8006f7c:	4650      	mov	r0, sl
 8006f7e:	9300      	str	r3, [sp, #0]
 8006f80:	4629      	mov	r1, r5
 8006f82:	23f0      	movs	r3, #240	; 0xf0
 8006f84:	f7fc fb37 	bl	80035f6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006f88:	1d26      	adds	r6, r4, #4
        color = newColor;
 8006f8a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006f8e:	66a3      	str	r3, [r4, #104]	; 0x68
 8006f90:	4651      	mov	r1, sl
 8006f92:	4630      	mov	r0, r6
 8006f94:	f00b fc1c 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image_background.setXY(0, 0);
 8006f98:	462a      	mov	r2, r5
 8006f9a:	4648      	mov	r0, r9
 8006f9c:	4629      	mov	r1, r5
 8006f9e:	f7fc fb1d 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8006fa2:	2308      	movs	r3, #8
    image_background.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8006fa4:	4648      	mov	r0, r9
 8006fa6:	a90a      	add	r1, sp, #40	; 0x28
 8006fa8:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006fac:	f00e ffe9 	bl	8015f82 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006fb0:	4649      	mov	r1, r9
 8006fb2:	4630      	mov	r0, r6
 8006fb4:	f00b fc0c 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_auto_off.setXY(86, 308);
 8006fb8:	f44f 729a 	mov.w	r2, #308	; 0x134
 8006fbc:	2156      	movs	r1, #86	; 0x56
 8006fbe:	4640      	mov	r0, r8
 8006fc0:	f7fc fb0c 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8006fc4:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8006fc8:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8006fcc:	f10d 0910 	add.w	r9, sp, #16
        color = newColor;
 8006fd0:	f04f 3aff 	mov.w	sl, #4294967295
        boundingArea = calculateBoundingArea();
 8006fd4:	4648      	mov	r0, r9
 8006fd6:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8006fda:	f8c4 a0c8 	str.w	sl, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8006fde:	4641      	mov	r1, r8
 8006fe0:	4798      	blx	r3
 8006fe2:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 8006fe6:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8006fea:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006fee:	4b10      	ldr	r3, [pc, #64]	; (8007030 <_ZN19MeasurementViewBaseC1Ev+0x1f8>)
 8006ff0:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_0CQH).getText());
 8006ff2:	f504 7967 	add.w	r9, r4, #924	; 0x39c
 8006ff6:	b92b      	cbnz	r3, 8007004 <_ZN19MeasurementViewBaseC1Ev+0x1cc>
 8006ff8:	4b0e      	ldr	r3, [pc, #56]	; (8007034 <_ZN19MeasurementViewBaseC1Ev+0x1fc>)
 8006ffa:	4a0f      	ldr	r2, [pc, #60]	; (8007038 <_ZN19MeasurementViewBaseC1Ev+0x200>)
 8006ffc:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006ffe:	480f      	ldr	r0, [pc, #60]	; (800703c <_ZN19MeasurementViewBaseC1Ev+0x204>)
 8007000:	f026 fc5a 	bl	802d8b8 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8007004:	4b0e      	ldr	r3, [pc, #56]	; (8007040 <_ZN19MeasurementViewBaseC1Ev+0x208>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007006:	881b      	ldrh	r3, [r3, #0]
 8007008:	2b45      	cmp	r3, #69	; 0x45
 800700a:	d81d      	bhi.n	8007048 <_ZN19MeasurementViewBaseC1Ev+0x210>
 800700c:	4b0d      	ldr	r3, [pc, #52]	; (8007044 <_ZN19MeasurementViewBaseC1Ev+0x20c>)
 800700e:	4a0a      	ldr	r2, [pc, #40]	; (8007038 <_ZN19MeasurementViewBaseC1Ev+0x200>)
 8007010:	2161      	movs	r1, #97	; 0x61
 8007012:	e7f4      	b.n	8006ffe <_ZN19MeasurementViewBaseC1Ev+0x1c6>
 8007014:	08030a40 	.word	0x08030a40
 8007018:	080319a8 	.word	0x080319a8
 800701c:	08031bf4 	.word	0x08031bf4
 8007020:	0802f4f4 	.word	0x0802f4f4
 8007024:	080316dc 	.word	0x080316dc
 8007028:	08030a28 	.word	0x08030a28
 800702c:	08006dfd 	.word	0x08006dfd
 8007030:	200138a4 	.word	0x200138a4
 8007034:	0802f2a4 	.word	0x0802f2a4
 8007038:	0802f3a9 	.word	0x0802f3a9
 800703c:	0802f321 	.word	0x0802f321
 8007040:	200138a8 	.word	0x200138a8
 8007044:	0802f368 	.word	0x0802f368
        return texts->getText(typedTextId);
 8007048:	4bad      	ldr	r3, [pc, #692]	; (8007300 <_ZN19MeasurementViewBaseC1Ev+0x4c8>)
 800704a:	2145      	movs	r1, #69	; 0x45
 800704c:	6818      	ldr	r0, [r3, #0]
 800704e:	f003 fb03 	bl	800a658 <_ZNK8touchgfx5Texts7getTextEt>
 8007052:	4aac      	ldr	r2, [pc, #688]	; (8007304 <_ZN19MeasurementViewBaseC1Ev+0x4cc>)
 8007054:	4603      	mov	r3, r0
 8007056:	2104      	movs	r1, #4
 8007058:	4648      	mov	r0, r9
 800705a:	f014 fe3f 	bl	801bcdc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea_auto_off.resizeToCurrentText();
 800705e:	4640      	mov	r0, r8
        wc1 = value;
 8007060:	f8c4 90e0 	str.w	r9, [r4, #224]	; 0xe0
 8007064:	f00e f9bc 	bl	80153e0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8007068:	4ba7      	ldr	r3, [pc, #668]	; (8007308 <_ZN19MeasurementViewBaseC1Ev+0x4d0>)
 800706a:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_auto_off.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TOET));
 800706c:	4640      	mov	r0, r8
 800706e:	2346      	movs	r3, #70	; 0x46
 8007070:	a90a      	add	r1, sp, #40	; 0x28
 8007072:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007076:	f00e f9d3 	bl	8015420 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800707a:	4641      	mov	r1, r8
 800707c:	4630      	mov	r0, r6
 800707e:	f00b fba7 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_Return.setXY(33, 240);
 8007082:	ee19 0a90 	vmov	r0, s19
 8007086:	22f0      	movs	r2, #240	; 0xf0
 8007088:	2121      	movs	r1, #33	; 0x21
 800708a:	f7fc faa7 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 800708e:	f04f 0802 	mov.w	r8, #2
 8007092:	2303      	movs	r3, #3
    buttonWithLabel_Return.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007094:	a909      	add	r1, sp, #36	; 0x24
 8007096:	ee19 0a90 	vmov	r0, s19
 800709a:	aa0a      	add	r2, sp, #40	; 0x28
 800709c:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80070a0:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel_Return.setAction(buttonCallback);
 80070a4:	f504 598d 	add.w	r9, r4, #4512	; 0x11a0
    buttonWithLabel_Return.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80070a8:	f00e fd75 	bl	8015b96 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80070ac:	226a      	movs	r2, #106	; 0x6a
 80070ae:	f8a4 211c 	strh.w	r2, [r4, #284]	; 0x11c
    buttonWithLabel_Return.setAction(buttonCallback);
 80070b2:	f109 0914 	add.w	r9, r9, #20
        updateTextPosition();
 80070b6:	ee19 0a90 	vmov	r0, s19
 80070ba:	f7fc fad3 	bl	8003664 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80070be:	ee19 1a90 	vmov	r1, s19
 80070c2:	4630      	mov	r0, r6
        colorPressed = col;
 80070c4:	e9c4 aa48 	strd	sl, sl, [r4, #288]	; 0x120
 80070c8:	f8c4 910c 	str.w	r9, [r4, #268]	; 0x10c
 80070cc:	f00b fb80 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_Accurate.setXY(33, 170);
 80070d0:	ee1a 0a10 	vmov	r0, s20
 80070d4:	22aa      	movs	r2, #170	; 0xaa
 80070d6:	2121      	movs	r1, #33	; 0x21
 80070d8:	f7fc fa80 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 80070dc:	2303      	movs	r3, #3
    buttonWithLabel_Accurate.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80070de:	a909      	add	r1, sp, #36	; 0x24
 80070e0:	ee1a 0a10 	vmov	r0, s20
 80070e4:	aa0a      	add	r2, sp, #40	; 0x28
 80070e6:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80070ea:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 80070ee:	f00e fd52 	bl	8015b96 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80070f2:	2269      	movs	r2, #105	; 0x69
 80070f4:	f8a4 2164 	strh.w	r2, [r4, #356]	; 0x164
        updateTextPosition();
 80070f8:	ee1a 0a10 	vmov	r0, s20
 80070fc:	f7fc fab2 	bl	8003664 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8007100:	ee1a 1a10 	vmov	r1, s20
 8007104:	4630      	mov	r0, r6
        colorPressed = col;
 8007106:	e9c4 aa5a 	strd	sl, sl, [r4, #360]	; 0x168
 800710a:	f8c4 9154 	str.w	r9, [r4, #340]	; 0x154
 800710e:	f00b fb5f 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_Single.setXY(33, 100);
 8007112:	ee1a 0a90 	vmov	r0, s21
 8007116:	2264      	movs	r2, #100	; 0x64
 8007118:	2121      	movs	r1, #33	; 0x21
 800711a:	f7fc fa5f 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel_Single.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800711e:	aa0a      	add	r2, sp, #40	; 0x28
 8007120:	2303      	movs	r3, #3
 8007122:	a909      	add	r1, sp, #36	; 0x24
 8007124:	ee1a 0a90 	vmov	r0, s21
 8007128:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800712c:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8007130:	f00e fd31 	bl	8015b96 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8007134:	2368      	movs	r3, #104	; 0x68
 8007136:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
        updateTextPosition();
 800713a:	ee1a 0a90 	vmov	r0, s21
 800713e:	f7fc fa91 	bl	8003664 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8007142:	ee1a 1a90 	vmov	r1, s21
 8007146:	4630      	mov	r0, r6
        colorPressed = col;
 8007148:	e9c4 aa6c 	strd	sl, sl, [r4, #432]	; 0x1b0
 800714c:	f8c4 919c 	str.w	r9, [r4, #412]	; 0x19c
 8007150:	f00b fb3e 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line2.setPosition(0, 75, 240, 10);
 8007154:	230a      	movs	r3, #10
 8007156:	9300      	str	r3, [sp, #0]
 8007158:	224b      	movs	r2, #75	; 0x4b
 800715a:	23f0      	movs	r3, #240	; 0xf0
 800715c:	4629      	mov	r1, r5
 800715e:	4638      	mov	r0, r7
 8007160:	f7fc fa49 	bl	80035f6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007164:	9b02      	ldr	r3, [sp, #8]
 8007166:	f8c4 31e4 	str.w	r3, [r4, #484]	; 0x1e4
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800716a:	22a0      	movs	r2, #160	; 0xa0
 800716c:	4611      	mov	r1, r2
 800716e:	4638      	mov	r0, r7
 8007170:	f8c4 a238 	str.w	sl, [r4, #568]	; 0x238
        color565 = LCD16bpp::getNativeColor(painterColor);
 8007174:	f8a4 a23c 	strh.w	sl, [r4, #572]	; 0x23c
 8007178:	f00d fd0c 	bl	8014b94 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800717c:	22a0      	movs	r2, #160	; 0xa0
 800717e:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8007182:	4638      	mov	r0, r7
 8007184:	f00d fd11 	bl	8014baa <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8007188:	f8d4 31f8 	ldr.w	r3, [r4, #504]	; 0x1f8
 800718c:	2b20      	cmp	r3, #32
 800718e:	d005      	beq.n	800719c <_ZN19MeasurementViewBaseC1Ev+0x364>
        lineWidthQ5 = widthQ5;
 8007190:	2320      	movs	r3, #32
 8007192:	f8c4 31f8 	str.w	r3, [r4, #504]	; 0x1f8
        updateCachedShape();
 8007196:	4638      	mov	r0, r7
 8007198:	f00d fc06 	bl	80149a8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800719c:	4638      	mov	r0, r7
 800719e:	2101      	movs	r1, #1
 80071a0:	f00d fd0e 	bl	8014bc0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80071a4:	4639      	mov	r1, r7
 80071a6:	4630      	mov	r0, r6
 80071a8:	f00b fb12 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 80071ac:	f04f 37ff 	mov.w	r7, #4294967295
    textArea_menu.setXY(61, 60);
 80071b0:	223c      	movs	r2, #60	; 0x3c
 80071b2:	ee18 0a10 	vmov	r0, s16
 80071b6:	213d      	movs	r1, #61	; 0x3d
        linespace = space;
 80071b8:	f04f 0800 	mov.w	r8, #0
        boundingArea = calculateBoundingArea();
 80071bc:	ad04      	add	r5, sp, #16
 80071be:	f7fc fa0d 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 80071c2:	ee18 1a10 	vmov	r1, s16
 80071c6:	4628      	mov	r0, r5
        color = newColor;
 80071c8:	f8c4 7270 	str.w	r7, [r4, #624]	; 0x270
        linespace = space;
 80071cc:	f8a4 8274 	strh.w	r8, [r4, #628]	; 0x274
        boundingArea = calculateBoundingArea();
 80071d0:	f00d fe8c 	bl	8014eec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80071d4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80071d8:	ee18 3a10 	vmov	r3, s16
 80071dc:	333c      	adds	r3, #60	; 0x3c
 80071de:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80071e2:	4b49      	ldr	r3, [pc, #292]	; (8007308 <_ZN19MeasurementViewBaseC1Ev+0x4d0>)
 80071e4:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_menu.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q8CP));
 80071e6:	ee18 0a10 	vmov	r0, s16
 80071ea:	2353      	movs	r3, #83	; 0x53
 80071ec:	a90a      	add	r1, sp, #40	; 0x28
 80071ee:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80071f2:	f00e f915 	bl	8015420 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80071f6:	ee18 1a10 	vmov	r1, s16
 80071fa:	4630      	mov	r0, r6
 80071fc:	f00b fae8 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8007200:	230a      	movs	r3, #10
 8007202:	9300      	str	r3, [sp, #0]
 8007204:	2232      	movs	r2, #50	; 0x32
 8007206:	23f0      	movs	r3, #240	; 0xf0
 8007208:	4641      	mov	r1, r8
 800720a:	4658      	mov	r0, fp
 800720c:	f7fc f9f3 	bl	80035f6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007210:	9b03      	ldr	r3, [sp, #12]
 8007212:	f8c4 32b0 	str.w	r3, [r4, #688]	; 0x2b0
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007216:	22a0      	movs	r2, #160	; 0xa0
 8007218:	4611      	mov	r1, r2
 800721a:	4658      	mov	r0, fp
 800721c:	f8c4 7304 	str.w	r7, [r4, #772]	; 0x304
 8007220:	f8a4 7308 	strh.w	r7, [r4, #776]	; 0x308
 8007224:	f00d fcb6 	bl	8014b94 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007228:	22a0      	movs	r2, #160	; 0xa0
 800722a:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 800722e:	4658      	mov	r0, fp
 8007230:	f00d fcbb 	bl	8014baa <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8007234:	f8d4 32c4 	ldr.w	r3, [r4, #708]	; 0x2c4
 8007238:	2b20      	cmp	r3, #32
 800723a:	d005      	beq.n	8007248 <_ZN19MeasurementViewBaseC1Ev+0x410>
        lineWidthQ5 = widthQ5;
 800723c:	2320      	movs	r3, #32
 800723e:	f8c4 32c4 	str.w	r3, [r4, #708]	; 0x2c4
        updateCachedShape();
 8007242:	4658      	mov	r0, fp
 8007244:	f00d fbb0 	bl	80149a8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8007248:	4658      	mov	r0, fp
 800724a:	2101      	movs	r1, #1
 800724c:	f00d fcb8 	bl	8014bc0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007250:	4659      	mov	r1, fp
 8007252:	4630      	mov	r0, r6
 8007254:	f00b fabc 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8007258:	f04f 38ff 	mov.w	r8, #4294967295
    textArea_name.setXY(69, 35);
 800725c:	ee18 0a90 	vmov	r0, s17
 8007260:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 8007262:	2700      	movs	r7, #0
 8007264:	2145      	movs	r1, #69	; 0x45
 8007266:	f7fc f9b9 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800726a:	ee18 1a90 	vmov	r1, s17
 800726e:	4628      	mov	r0, r5
        color = newColor;
 8007270:	f8c4 833c 	str.w	r8, [r4, #828]	; 0x33c
        linespace = space;
 8007274:	f8a4 7340 	strh.w	r7, [r4, #832]	; 0x340
        boundingArea = calculateBoundingArea();
 8007278:	f00d fe38 	bl	8014eec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800727c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007280:	ee18 3a90 	vmov	r3, s17
 8007284:	333c      	adds	r3, #60	; 0x3c
 8007286:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800728a:	4b1f      	ldr	r3, [pc, #124]	; (8007308 <_ZN19MeasurementViewBaseC1Ev+0x4d0>)
 800728c:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_name.setTypedText(touchgfx::TypedText(T___SINGLEUSE_V2L5));
 800728e:	ee18 0a90 	vmov	r0, s17
 8007292:	236b      	movs	r3, #107	; 0x6b
 8007294:	a90a      	add	r1, sp, #40	; 0x28
 8007296:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800729a:	f00e f8c1 	bl	8015420 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800729e:	ee18 1a90 	vmov	r1, s17
 80072a2:	4630      	mov	r0, r6
 80072a4:	f00b fa94 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_title.setXY(54, 12);
 80072a8:	ee19 0a10 	vmov	r0, s18
 80072ac:	220c      	movs	r2, #12
 80072ae:	2136      	movs	r1, #54	; 0x36
 80072b0:	f7fc f994 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 80072b4:	ee19 1a10 	vmov	r1, s18
 80072b8:	4628      	mov	r0, r5
        color = newColor;
 80072ba:	f8c4 8384 	str.w	r8, [r4, #900]	; 0x384
        linespace = space;
 80072be:	f8a4 7388 	strh.w	r7, [r4, #904]	; 0x388
        boundingArea = calculateBoundingArea();
 80072c2:	f00d fe13 	bl	8014eec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80072c6:	ee19 2a10 	vmov	r2, s18
 80072ca:	f102 033c 	add.w	r3, r2, #60	; 0x3c
 80072ce:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80072d2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80072d6:	4b0c      	ldr	r3, [pc, #48]	; (8007308 <_ZN19MeasurementViewBaseC1Ev+0x4d0>)
 80072d8:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_title.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FIV6));
 80072da:	ee19 0a10 	vmov	r0, s18
 80072de:	236c      	movs	r3, #108	; 0x6c
 80072e0:	a90a      	add	r1, sp, #40	; 0x28
 80072e2:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80072e6:	f00e f89b 	bl	8015420 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80072ea:	4630      	mov	r0, r6
 80072ec:	ee19 1a10 	vmov	r1, s18
 80072f0:	f00b fa6e 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80072f4:	4620      	mov	r0, r4
 80072f6:	b00d      	add	sp, #52	; 0x34
 80072f8:	ecbd 8b06 	vpop	{d8-d10}
 80072fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007300:	200138b0 	.word	0x200138b0
 8007304:	0802f3e1 	.word	0x0802f3e1
 8007308:	0802f454 	.word	0x0802f454

0800730c <_ZN28Measurement_AccurateViewBase11setupScreenEv>:
}

void Measurement_AccurateViewBase::setupScreen()
{

}
 800730c:	4770      	bx	lr

0800730e <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800730e:	4770      	bx	lr

08007310 <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8007310:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007312:	68c2      	ldr	r2, [r0, #12]
 8007314:	6844      	ldr	r4, [r0, #4]
 8007316:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8007318:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800731a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800731e:	07d2      	lsls	r2, r2, #31
 8007320:	bf48      	it	mi
 8007322:	5962      	ldrmi	r2, [r4, r5]
 8007324:	689b      	ldr	r3, [r3, #8]
    }
 8007326:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007328:	bf48      	it	mi
 800732a:	58d3      	ldrmi	r3, [r2, r3]
 800732c:	4718      	bx	r3

0800732e <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 800732e:	6843      	ldr	r3, [r0, #4]
 8007330:	b12b      	cbz	r3, 800733e <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8007332:	6883      	ldr	r3, [r0, #8]
 8007334:	b92b      	cbnz	r3, 8007342 <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8007336:	68c0      	ldr	r0, [r0, #12]
 8007338:	f000 0001 	and.w	r0, r0, #1
 800733c:	4770      	bx	lr
 800733e:	4618      	mov	r0, r3
 8007340:	4770      	bx	lr
 8007342:	2001      	movs	r0, #1
    }
 8007344:	4770      	bx	lr

08007346 <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007346:	b510      	push	{r4, lr}
 8007348:	2110      	movs	r1, #16
 800734a:	4604      	mov	r4, r0
 800734c:	f025 fbcd 	bl	802caea <_ZdlPvj>
 8007350:	4620      	mov	r0, r4
 8007352:	bd10      	pop	{r4, pc}

08007354 <_ZN28Measurement_AccurateViewBaseD1Ev>:
Measurement_AccurateViewBase::~Measurement_AccurateViewBase()
 8007354:	b510      	push	{r4, lr}
 8007356:	4b03      	ldr	r3, [pc, #12]	; (8007364 <_ZN28Measurement_AccurateViewBaseD1Ev+0x10>)
 8007358:	6003      	str	r3, [r0, #0]
 800735a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800735c:	f00f fe0e 	bl	8016f7c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007360:	4620      	mov	r0, r4
 8007362:	bd10      	pop	{r4, pc}
 8007364:	08030a8c 	.word	0x08030a8c

08007368 <_ZN28Measurement_AccurateViewBaseD0Ev>:
Measurement_AccurateViewBase::~Measurement_AccurateViewBase()
 8007368:	b507      	push	{r0, r1, r2, lr}
 800736a:	4b07      	ldr	r3, [pc, #28]	; (8007388 <_ZN28Measurement_AccurateViewBaseD0Ev+0x20>)
 800736c:	6003      	str	r3, [r0, #0]
 800736e:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007370:	f00f fe04 	bl	8016f7c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007374:	9801      	ldr	r0, [sp, #4]
 8007376:	f241 11c4 	movw	r1, #4548	; 0x11c4
 800737a:	f025 fbb6 	bl	802caea <_ZdlPvj>
 800737e:	9801      	ldr	r0, [sp, #4]
 8007380:	b003      	add	sp, #12
 8007382:	f85d fb04 	ldr.w	pc, [sp], #4
 8007386:	bf00      	nop
 8007388:	08030a8c 	.word	0x08030a8c

0800738c <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_AccurateViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 800738c:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel_Return)
 800738e:	f100 03e4 	add.w	r3, r0, #228	; 0xe4
 8007392:	4299      	cmp	r1, r3
{
 8007394:	4604      	mov	r4, r0
 8007396:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel_Return)
 8007398:	d103      	bne.n	80073a2 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_AccurateViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800739a:	f011 faf1 	bl	8018980 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel_Return clicked change screen to Measurement
        //Go to Measurement with screen transition towards West
        application().gotoMeasurementScreenWipeTransitionWest();
 800739e:	f7fe f8ef 	bl	8005580 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel_3Phase)
 80073a2:	f504 7396 	add.w	r3, r4, #300	; 0x12c
 80073a6:	429d      	cmp	r5, r3
 80073a8:	d103      	bne.n	80073b2 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 80073aa:	f011 fae9 	bl	8018980 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel_3Phase clicked change screen to Measurement_Accurate_Display_2
        //Go to Measurement_Accurate_Display_2 with screen transition towards East
        application().gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEast();
 80073ae:	f7fe f957 	bl	8005660 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel_1Phase)
 80073b2:	f504 74ba 	add.w	r4, r4, #372	; 0x174
 80073b6:	42a5      	cmp	r5, r4
 80073b8:	d105      	bne.n	80073c6 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 80073ba:	f011 fae1 	bl	8018980 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel_1Phase clicked change screen to Measurement_Accurate_Display
        //Go to Measurement_Accurate_Display with screen transition towards East
        application().gotoMeasurement_Accurate_DisplayScreenWipeTransitionEast();
    }
}
 80073be:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_Accurate_DisplayScreenWipeTransitionEast();
 80073c2:	f7fe b93d 	b.w	8005640 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv>
}
 80073c6:	bd38      	pop	{r3, r4, r5, pc}

080073c8 <_ZN28Measurement_AccurateViewBaseC1Ev>:
Measurement_AccurateViewBase::Measurement_AccurateViewBase() :
 80073c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80073cc:	ed2d 8b06 	vpush	{d8-d10}
 80073d0:	4604      	mov	r4, r0
 80073d2:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_AccurateViewBase::buttonCallbackHandler)
 80073d4:	46a2      	mov	sl, r4
 80073d6:	2500      	movs	r5, #0
 80073d8:	f012 ff52 	bl	801a280 <_ZN8touchgfx6ScreenC1Ev>
 80073dc:	4b71      	ldr	r3, [pc, #452]	; (80075a4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1dc>)
 80073de:	63e5      	str	r5, [r4, #60]	; 0x3c
 80073e0:	f84a 3b40 	str.w	r3, [sl], #64
        : Widget(), alpha(255), color(0)
 80073e4:	2226      	movs	r2, #38	; 0x26
 80073e6:	4629      	mov	r1, r5
 80073e8:	4650      	mov	r0, sl
 80073ea:	f026 fc6a 	bl	802dcc2 <memset>
 80073ee:	4650      	mov	r0, sl
 80073f0:	f7fc f926 	bl	8003640 <_ZN8touchgfx6WidgetC1Ev>
 80073f4:	f104 096c 	add.w	r9, r4, #108	; 0x6c
 80073f8:	26ff      	movs	r6, #255	; 0xff
 80073fa:	4b6b      	ldr	r3, [pc, #428]	; (80075a8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e0>)
 80073fc:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 80073fe:	2226      	movs	r2, #38	; 0x26
 8007400:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8007404:	4629      	mov	r1, r5
 8007406:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800740a:	4648      	mov	r0, r9
 800740c:	66a5      	str	r5, [r4, #104]	; 0x68
 800740e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007412:	f026 fc56 	bl	802dcc2 <memset>
 8007416:	4648      	mov	r0, r9
 8007418:	f7fc f912 	bl	8003640 <_ZN8touchgfx6WidgetC1Ev>
 800741c:	4b63      	ldr	r3, [pc, #396]	; (80075ac <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e4>)
 800741e:	66e3      	str	r3, [r4, #108]	; 0x6c
 8007420:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8007424:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8007428:	a90a      	add	r1, sp, #40	; 0x28
 800742a:	4648      	mov	r0, r9
 800742c:	f104 0898 	add.w	r8, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8007430:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8007434:	f00e fda5 	bl	8015f82 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8007438:	4640      	mov	r0, r8
 800743a:	f7fc f965 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 800743e:	4b5c      	ldr	r3, [pc, #368]	; (80075b0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e8>)
 8007440:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8007444:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 8007448:	4618      	mov	r0, r3
 800744a:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 800744e:	ee09 3a90 	vmov	s19, r3
 8007452:	f00e fecd 	bl	80161f0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8007456:	f504 7396 	add.w	r3, r4, #300	; 0x12c
 800745a:	4618      	mov	r0, r3
 800745c:	ee0a 3a10 	vmov	s20, r3
 8007460:	f00e fec6 	bl	80161f0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8007464:	f504 73ba 	add.w	r3, r4, #372	; 0x174
 8007468:	4618      	mov	r0, r3
 800746a:	f504 77de 	add.w	r7, r4, #444	; 0x1bc
 800746e:	ee0a 3a90 	vmov	s21, r3
 8007472:	f00e febd 	bl	80161f0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8007476:	4638      	mov	r0, r7
 8007478:	f00d fa76 	bl	8014968 <_ZN8touchgfx4LineC1Ev>
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800747c:	4e4d      	ldr	r6, [pc, #308]	; (80075b4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1ec>)
 800747e:	f504 730b 	add.w	r3, r4, #556	; 0x22c
 8007482:	4618      	mov	r0, r3
 8007484:	9302      	str	r3, [sp, #8]
 8007486:	f7fb fedf 	bl	8003248 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800748a:	f106 0324 	add.w	r3, r6, #36	; 0x24
 800748e:	f8c4 3234 	str.w	r3, [r4, #564]	; 0x234
 8007492:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8007496:	4618      	mov	r0, r3
 8007498:	f8c4 622c 	str.w	r6, [r4, #556]	; 0x22c
 800749c:	f8c4 5238 	str.w	r5, [r4, #568]	; 0x238
 80074a0:	f504 7b22 	add.w	fp, r4, #648	; 0x288
 80074a4:	ee08 3a10 	vmov	s16, r3
 80074a8:	f7fc f92e 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
 80074ac:	4658      	mov	r0, fp
 80074ae:	f00d fa5b 	bl	8014968 <_ZN8touchgfx4LineC1Ev>
 80074b2:	f504 733e 	add.w	r3, r4, #760	; 0x2f8
 80074b6:	4618      	mov	r0, r3
 80074b8:	9303      	str	r3, [sp, #12]
 80074ba:	f7fb fec5 	bl	8003248 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80074be:	f106 0324 	add.w	r3, r6, #36	; 0x24
 80074c2:	f8c4 3300 	str.w	r3, [r4, #768]	; 0x300
 80074c6:	f504 7343 	add.w	r3, r4, #780	; 0x30c
 80074ca:	f8c4 62f8 	str.w	r6, [r4, #760]	; 0x2f8
 80074ce:	4618      	mov	r0, r3
 80074d0:	f8c4 5304 	str.w	r5, [r4, #772]	; 0x304
 80074d4:	ee08 3a90 	vmov	s17, r3
 80074d8:	f7fc f916 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
 80074dc:	f504 7355 	add.w	r3, r4, #852	; 0x354
 80074e0:	4618      	mov	r0, r3
 80074e2:	ee09 3a10 	vmov	s18, r3
 80074e6:	f7fc f90f 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80074ea:	4a33      	ldr	r2, [pc, #204]	; (80075b8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1f0>)
 80074ec:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80074f0:	e9c3 246d 	strd	r2, r4, [r3, #436]	; 0x1b4
 80074f4:	4a31      	ldr	r2, [pc, #196]	; (80075bc <_ZN28Measurement_AccurateViewBaseC1Ev+0x1f4>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80074f6:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80074fa:	e9c3 256f 	strd	r2, r5, [r3, #444]	; 0x1bc
 80074fe:	f504 7069 	add.w	r0, r4, #932	; 0x3a4
 8007502:	f00f fd31 	bl	8016f68 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8007506:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800750a:	462a      	mov	r2, r5
 800750c:	4650      	mov	r0, sl
 800750e:	9300      	str	r3, [sp, #0]
 8007510:	4629      	mov	r1, r5
 8007512:	23f0      	movs	r3, #240	; 0xf0
 8007514:	f7fc f86f 	bl	80035f6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007518:	1d26      	adds	r6, r4, #4
        color = newColor;
 800751a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800751e:	66a3      	str	r3, [r4, #104]	; 0x68
 8007520:	4651      	mov	r1, sl
 8007522:	4630      	mov	r0, r6
 8007524:	f00b f954 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image_return.setXY(0, 0);
 8007528:	462a      	mov	r2, r5
 800752a:	4648      	mov	r0, r9
 800752c:	4629      	mov	r1, r5
 800752e:	f7fc f855 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8007532:	2308      	movs	r3, #8
    image_return.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8007534:	4648      	mov	r0, r9
 8007536:	a90a      	add	r1, sp, #40	; 0x28
 8007538:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800753c:	f00e fd21 	bl	8015f82 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007540:	4649      	mov	r1, r9
 8007542:	4630      	mov	r0, r6
 8007544:	f00b f944 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_auto_off.setXY(86, 308);
 8007548:	f44f 729a 	mov.w	r2, #308	; 0x134
 800754c:	2156      	movs	r1, #86	; 0x56
 800754e:	4640      	mov	r0, r8
 8007550:	f7fc f844 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8007554:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8007558:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 800755c:	f10d 0910 	add.w	r9, sp, #16
        color = newColor;
 8007560:	f04f 3aff 	mov.w	sl, #4294967295
        boundingArea = calculateBoundingArea();
 8007564:	4648      	mov	r0, r9
 8007566:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 800756a:	f8c4 a0c8 	str.w	sl, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 800756e:	4641      	mov	r1, r8
 8007570:	4798      	blx	r3
 8007572:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 8007576:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 800757a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800757e:	4b10      	ldr	r3, [pc, #64]	; (80075c0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1f8>)
 8007580:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_CUW4).getText());
 8007582:	f504 7967 	add.w	r9, r4, #924	; 0x39c
 8007586:	b92b      	cbnz	r3, 8007594 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1cc>
 8007588:	4b0e      	ldr	r3, [pc, #56]	; (80075c4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1fc>)
 800758a:	4a0f      	ldr	r2, [pc, #60]	; (80075c8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x200>)
 800758c:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800758e:	480f      	ldr	r0, [pc, #60]	; (80075cc <_ZN28Measurement_AccurateViewBaseC1Ev+0x204>)
 8007590:	f026 f992 	bl	802d8b8 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8007594:	4b0e      	ldr	r3, [pc, #56]	; (80075d0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x208>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007596:	881b      	ldrh	r3, [r3, #0]
 8007598:	2b40      	cmp	r3, #64	; 0x40
 800759a:	d81d      	bhi.n	80075d8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x210>
 800759c:	4b0d      	ldr	r3, [pc, #52]	; (80075d4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x20c>)
 800759e:	4a0a      	ldr	r2, [pc, #40]	; (80075c8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x200>)
 80075a0:	2161      	movs	r1, #97	; 0x61
 80075a2:	e7f4      	b.n	800758e <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c6>
 80075a4:	08030a8c 	.word	0x08030a8c
 80075a8:	080319a8 	.word	0x080319a8
 80075ac:	08031bf4 	.word	0x08031bf4
 80075b0:	0802f4f4 	.word	0x0802f4f4
 80075b4:	080316dc 	.word	0x080316dc
 80075b8:	08030a74 	.word	0x08030a74
 80075bc:	0800738d 	.word	0x0800738d
 80075c0:	200138a4 	.word	0x200138a4
 80075c4:	0802f2a4 	.word	0x0802f2a4
 80075c8:	0802f3a9 	.word	0x0802f3a9
 80075cc:	0802f321 	.word	0x0802f321
 80075d0:	200138a8 	.word	0x200138a8
 80075d4:	0802f368 	.word	0x0802f368
        return texts->getText(typedTextId);
 80075d8:	4bad      	ldr	r3, [pc, #692]	; (8007890 <_ZN28Measurement_AccurateViewBaseC1Ev+0x4c8>)
 80075da:	2140      	movs	r1, #64	; 0x40
 80075dc:	6818      	ldr	r0, [r3, #0]
 80075de:	f003 f83b 	bl	800a658 <_ZNK8touchgfx5Texts7getTextEt>
 80075e2:	4aac      	ldr	r2, [pc, #688]	; (8007894 <_ZN28Measurement_AccurateViewBaseC1Ev+0x4cc>)
 80075e4:	4603      	mov	r3, r0
 80075e6:	2104      	movs	r1, #4
 80075e8:	4648      	mov	r0, r9
 80075ea:	f014 fb77 	bl	801bcdc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea_auto_off.resizeToCurrentText();
 80075ee:	4640      	mov	r0, r8
        wc1 = value;
 80075f0:	f8c4 90e0 	str.w	r9, [r4, #224]	; 0xe0
 80075f4:	f00d fef4 	bl	80153e0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80075f8:	4ba7      	ldr	r3, [pc, #668]	; (8007898 <_ZN28Measurement_AccurateViewBaseC1Ev+0x4d0>)
 80075fa:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_auto_off.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SQC7));
 80075fc:	4640      	mov	r0, r8
 80075fe:	2341      	movs	r3, #65	; 0x41
 8007600:	a90a      	add	r1, sp, #40	; 0x28
 8007602:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007606:	f00d ff0b 	bl	8015420 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800760a:	4641      	mov	r1, r8
 800760c:	4630      	mov	r0, r6
 800760e:	f00b f8df 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_Return.setXY(33, 240);
 8007612:	ee19 0a90 	vmov	r0, s19
 8007616:	22f0      	movs	r2, #240	; 0xf0
 8007618:	2121      	movs	r1, #33	; 0x21
 800761a:	f7fb ffdf 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 800761e:	f04f 0802 	mov.w	r8, #2
 8007622:	2303      	movs	r3, #3
    buttonWithLabel_Return.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007624:	a909      	add	r1, sp, #36	; 0x24
 8007626:	ee19 0a90 	vmov	r0, s19
 800762a:	aa0a      	add	r2, sp, #40	; 0x28
 800762c:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8007630:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel_Return.setAction(buttonCallback);
 8007634:	f504 598d 	add.w	r9, r4, #4512	; 0x11a0
    buttonWithLabel_Return.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007638:	f00e faad 	bl	8015b96 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 800763c:	225e      	movs	r2, #94	; 0x5e
 800763e:	f8a4 211c 	strh.w	r2, [r4, #284]	; 0x11c
    buttonWithLabel_Return.setAction(buttonCallback);
 8007642:	f109 0914 	add.w	r9, r9, #20
        updateTextPosition();
 8007646:	ee19 0a90 	vmov	r0, s19
 800764a:	f7fc f80b 	bl	8003664 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 800764e:	ee19 1a90 	vmov	r1, s19
 8007652:	4630      	mov	r0, r6
        colorPressed = col;
 8007654:	e9c4 aa48 	strd	sl, sl, [r4, #288]	; 0x120
 8007658:	f8c4 910c 	str.w	r9, [r4, #268]	; 0x10c
 800765c:	f00b f8b8 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_3Phase.setXY(33, 170);
 8007660:	ee1a 0a10 	vmov	r0, s20
 8007664:	22aa      	movs	r2, #170	; 0xaa
 8007666:	2121      	movs	r1, #33	; 0x21
 8007668:	f7fb ffb8 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 800766c:	2303      	movs	r3, #3
    buttonWithLabel_3Phase.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800766e:	a909      	add	r1, sp, #36	; 0x24
 8007670:	ee1a 0a10 	vmov	r0, s20
 8007674:	aa0a      	add	r2, sp, #40	; 0x28
 8007676:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800767a:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 800767e:	f00e fa8a 	bl	8015b96 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8007682:	225d      	movs	r2, #93	; 0x5d
 8007684:	f8a4 2164 	strh.w	r2, [r4, #356]	; 0x164
        updateTextPosition();
 8007688:	ee1a 0a10 	vmov	r0, s20
 800768c:	f7fb ffea 	bl	8003664 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8007690:	ee1a 1a10 	vmov	r1, s20
 8007694:	4630      	mov	r0, r6
        colorPressed = col;
 8007696:	e9c4 aa5a 	strd	sl, sl, [r4, #360]	; 0x168
 800769a:	f8c4 9154 	str.w	r9, [r4, #340]	; 0x154
 800769e:	f00b f897 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_1Phase.setXY(33, 100);
 80076a2:	ee1a 0a90 	vmov	r0, s21
 80076a6:	2264      	movs	r2, #100	; 0x64
 80076a8:	2121      	movs	r1, #33	; 0x21
 80076aa:	f7fb ff97 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel_1Phase.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80076ae:	aa0a      	add	r2, sp, #40	; 0x28
 80076b0:	2303      	movs	r3, #3
 80076b2:	a909      	add	r1, sp, #36	; 0x24
 80076b4:	ee1a 0a90 	vmov	r0, s21
 80076b8:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80076bc:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 80076c0:	f00e fa69 	bl	8015b96 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80076c4:	235c      	movs	r3, #92	; 0x5c
 80076c6:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
        updateTextPosition();
 80076ca:	ee1a 0a90 	vmov	r0, s21
 80076ce:	f7fb ffc9 	bl	8003664 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80076d2:	ee1a 1a90 	vmov	r1, s21
 80076d6:	4630      	mov	r0, r6
        colorPressed = col;
 80076d8:	e9c4 aa6c 	strd	sl, sl, [r4, #432]	; 0x1b0
 80076dc:	f8c4 919c 	str.w	r9, [r4, #412]	; 0x19c
 80076e0:	f00b f876 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line2.setPosition(0, 75, 240, 10);
 80076e4:	230a      	movs	r3, #10
 80076e6:	9300      	str	r3, [sp, #0]
 80076e8:	224b      	movs	r2, #75	; 0x4b
 80076ea:	23f0      	movs	r3, #240	; 0xf0
 80076ec:	4629      	mov	r1, r5
 80076ee:	4638      	mov	r0, r7
 80076f0:	f7fb ff81 	bl	80035f6 <_ZN8touchgfx8Drawable11setPositionEssss>
 80076f4:	9b02      	ldr	r3, [sp, #8]
 80076f6:	f8c4 31e4 	str.w	r3, [r4, #484]	; 0x1e4
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80076fa:	22a0      	movs	r2, #160	; 0xa0
 80076fc:	4611      	mov	r1, r2
 80076fe:	4638      	mov	r0, r7
 8007700:	f8c4 a238 	str.w	sl, [r4, #568]	; 0x238
        color565 = LCD16bpp::getNativeColor(painterColor);
 8007704:	f8a4 a23c 	strh.w	sl, [r4, #572]	; 0x23c
 8007708:	f00d fa44 	bl	8014b94 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800770c:	22a0      	movs	r2, #160	; 0xa0
 800770e:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8007712:	4638      	mov	r0, r7
 8007714:	f00d fa49 	bl	8014baa <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8007718:	f8d4 31f8 	ldr.w	r3, [r4, #504]	; 0x1f8
 800771c:	2b20      	cmp	r3, #32
 800771e:	d005      	beq.n	800772c <_ZN28Measurement_AccurateViewBaseC1Ev+0x364>
        lineWidthQ5 = widthQ5;
 8007720:	2320      	movs	r3, #32
 8007722:	f8c4 31f8 	str.w	r3, [r4, #504]	; 0x1f8
        updateCachedShape();
 8007726:	4638      	mov	r0, r7
 8007728:	f00d f93e 	bl	80149a8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800772c:	4638      	mov	r0, r7
 800772e:	2101      	movs	r1, #1
 8007730:	f00d fa46 	bl	8014bc0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007734:	4639      	mov	r1, r7
 8007736:	4630      	mov	r0, r6
 8007738:	f00b f84a 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 800773c:	f04f 37ff 	mov.w	r7, #4294967295
    textArea_menu.setXY(33, 60);
 8007740:	223c      	movs	r2, #60	; 0x3c
 8007742:	ee18 0a10 	vmov	r0, s16
 8007746:	2121      	movs	r1, #33	; 0x21
        linespace = space;
 8007748:	f04f 0800 	mov.w	r8, #0
        boundingArea = calculateBoundingArea();
 800774c:	ad04      	add	r5, sp, #16
 800774e:	f7fb ff45 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8007752:	ee18 1a10 	vmov	r1, s16
 8007756:	4628      	mov	r0, r5
        color = newColor;
 8007758:	f8c4 7270 	str.w	r7, [r4, #624]	; 0x270
        linespace = space;
 800775c:	f8a4 8274 	strh.w	r8, [r4, #628]	; 0x274
        boundingArea = calculateBoundingArea();
 8007760:	f00d fbc4 	bl	8014eec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007764:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007768:	ee18 3a10 	vmov	r3, s16
 800776c:	333c      	adds	r3, #60	; 0x3c
 800776e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8007772:	4b49      	ldr	r3, [pc, #292]	; (8007898 <_ZN28Measurement_AccurateViewBaseC1Ev+0x4d0>)
 8007774:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_menu.setTypedText(touchgfx::TypedText(T___SINGLEUSE_D7H9));
 8007776:	ee18 0a10 	vmov	r0, s16
 800777a:	234f      	movs	r3, #79	; 0x4f
 800777c:	a90a      	add	r1, sp, #40	; 0x28
 800777e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007782:	f00d fe4d 	bl	8015420 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007786:	ee18 1a10 	vmov	r1, s16
 800778a:	4630      	mov	r0, r6
 800778c:	f00b f820 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8007790:	230a      	movs	r3, #10
 8007792:	9300      	str	r3, [sp, #0]
 8007794:	2232      	movs	r2, #50	; 0x32
 8007796:	23f0      	movs	r3, #240	; 0xf0
 8007798:	4641      	mov	r1, r8
 800779a:	4658      	mov	r0, fp
 800779c:	f7fb ff2b 	bl	80035f6 <_ZN8touchgfx8Drawable11setPositionEssss>
 80077a0:	9b03      	ldr	r3, [sp, #12]
 80077a2:	f8c4 32b0 	str.w	r3, [r4, #688]	; 0x2b0
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80077a6:	22a0      	movs	r2, #160	; 0xa0
 80077a8:	4611      	mov	r1, r2
 80077aa:	4658      	mov	r0, fp
 80077ac:	f8c4 7304 	str.w	r7, [r4, #772]	; 0x304
 80077b0:	f8a4 7308 	strh.w	r7, [r4, #776]	; 0x308
 80077b4:	f00d f9ee 	bl	8014b94 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80077b8:	22a0      	movs	r2, #160	; 0xa0
 80077ba:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80077be:	4658      	mov	r0, fp
 80077c0:	f00d f9f3 	bl	8014baa <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80077c4:	f8d4 32c4 	ldr.w	r3, [r4, #708]	; 0x2c4
 80077c8:	2b20      	cmp	r3, #32
 80077ca:	d005      	beq.n	80077d8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x410>
        lineWidthQ5 = widthQ5;
 80077cc:	2320      	movs	r3, #32
 80077ce:	f8c4 32c4 	str.w	r3, [r4, #708]	; 0x2c4
        updateCachedShape();
 80077d2:	4658      	mov	r0, fp
 80077d4:	f00d f8e8 	bl	80149a8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80077d8:	4658      	mov	r0, fp
 80077da:	2101      	movs	r1, #1
 80077dc:	f00d f9f0 	bl	8014bc0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80077e0:	4659      	mov	r1, fp
 80077e2:	4630      	mov	r0, r6
 80077e4:	f00a fff4 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 80077e8:	f04f 38ff 	mov.w	r8, #4294967295
    textArea_name.setXY(69, 35);
 80077ec:	ee18 0a90 	vmov	r0, s17
 80077f0:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 80077f2:	2700      	movs	r7, #0
 80077f4:	2145      	movs	r1, #69	; 0x45
 80077f6:	f7fb fef1 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80077fa:	ee18 1a90 	vmov	r1, s17
 80077fe:	4628      	mov	r0, r5
        color = newColor;
 8007800:	f8c4 833c 	str.w	r8, [r4, #828]	; 0x33c
        linespace = space;
 8007804:	f8a4 7340 	strh.w	r7, [r4, #832]	; 0x340
        boundingArea = calculateBoundingArea();
 8007808:	f00d fb70 	bl	8014eec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800780c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007810:	ee18 3a90 	vmov	r3, s17
 8007814:	333c      	adds	r3, #60	; 0x3c
 8007816:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800781a:	4b1f      	ldr	r3, [pc, #124]	; (8007898 <_ZN28Measurement_AccurateViewBaseC1Ev+0x4d0>)
 800781c:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_name.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UWMX));
 800781e:	ee18 0a90 	vmov	r0, s17
 8007822:	2360      	movs	r3, #96	; 0x60
 8007824:	a90a      	add	r1, sp, #40	; 0x28
 8007826:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800782a:	f00d fdf9 	bl	8015420 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800782e:	ee18 1a90 	vmov	r1, s17
 8007832:	4630      	mov	r0, r6
 8007834:	f00a ffcc 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_title.setXY(54, 12);
 8007838:	ee19 0a10 	vmov	r0, s18
 800783c:	220c      	movs	r2, #12
 800783e:	2136      	movs	r1, #54	; 0x36
 8007840:	f7fb fecc 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8007844:	ee19 1a10 	vmov	r1, s18
 8007848:	4628      	mov	r0, r5
        color = newColor;
 800784a:	f8c4 8384 	str.w	r8, [r4, #900]	; 0x384
        linespace = space;
 800784e:	f8a4 7388 	strh.w	r7, [r4, #904]	; 0x388
        boundingArea = calculateBoundingArea();
 8007852:	f00d fb4b 	bl	8014eec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007856:	ee19 2a10 	vmov	r2, s18
 800785a:	f102 033c 	add.w	r3, r2, #60	; 0x3c
 800785e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007862:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007866:	4b0c      	ldr	r3, [pc, #48]	; (8007898 <_ZN28Measurement_AccurateViewBaseC1Ev+0x4d0>)
 8007868:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_title.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1X41));
 800786a:	ee19 0a10 	vmov	r0, s18
 800786e:	235f      	movs	r3, #95	; 0x5f
 8007870:	a90a      	add	r1, sp, #40	; 0x28
 8007872:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007876:	f00d fdd3 	bl	8015420 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800787a:	4630      	mov	r0, r6
 800787c:	ee19 1a10 	vmov	r1, s18
 8007880:	f00a ffa6 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007884:	4620      	mov	r0, r4
 8007886:	b00d      	add	sp, #52	; 0x34
 8007888:	ecbd 8b06 	vpop	{d8-d10}
 800788c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007890:	200138b0 	.word	0x200138b0
 8007894:	0802f3e1 	.word	0x0802f3e1
 8007898:	0802f454 	.word	0x0802f454

0800789c <_ZN36Measurement_Accurate_DisplayViewBase11setupScreenEv>:
}

void Measurement_Accurate_DisplayViewBase::setupScreen()
{

}
 800789c:	4770      	bx	lr

0800789e <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800789e:	4770      	bx	lr

080078a0 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80078a0:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80078a2:	68c2      	ldr	r2, [r0, #12]
 80078a4:	6844      	ldr	r4, [r0, #4]
 80078a6:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80078a8:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80078aa:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80078ae:	07d2      	lsls	r2, r2, #31
 80078b0:	bf48      	it	mi
 80078b2:	5962      	ldrmi	r2, [r4, r5]
 80078b4:	689b      	ldr	r3, [r3, #8]
    }
 80078b6:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80078b8:	bf48      	it	mi
 80078ba:	58d3      	ldrmi	r3, [r2, r3]
 80078bc:	4718      	bx	r3

080078be <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80078be:	6843      	ldr	r3, [r0, #4]
 80078c0:	b12b      	cbz	r3, 80078ce <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80078c2:	6883      	ldr	r3, [r0, #8]
 80078c4:	b92b      	cbnz	r3, 80078d2 <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80078c6:	68c0      	ldr	r0, [r0, #12]
 80078c8:	f000 0001 	and.w	r0, r0, #1
 80078cc:	4770      	bx	lr
 80078ce:	4618      	mov	r0, r3
 80078d0:	4770      	bx	lr
 80078d2:	2001      	movs	r0, #1
    }
 80078d4:	4770      	bx	lr

080078d6 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80078d6:	b510      	push	{r4, lr}
 80078d8:	2110      	movs	r1, #16
 80078da:	4604      	mov	r4, r0
 80078dc:	f025 f905 	bl	802caea <_ZdlPvj>
 80078e0:	4620      	mov	r0, r4
 80078e2:	bd10      	pop	{r4, pc}

080078e4 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>:
Measurement_Accurate_DisplayViewBase::~Measurement_Accurate_DisplayViewBase()
 80078e4:	b510      	push	{r4, lr}
 80078e6:	4b03      	ldr	r3, [pc, #12]	; (80078f4 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev+0x10>)
 80078e8:	6003      	str	r3, [r0, #0]
 80078ea:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80078ec:	f00f fb46 	bl	8016f7c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80078f0:	4620      	mov	r0, r4
 80078f2:	bd10      	pop	{r4, pc}
 80078f4:	08030ad8 	.word	0x08030ad8

080078f8 <_ZN36Measurement_Accurate_DisplayViewBaseD0Ev>:
Measurement_Accurate_DisplayViewBase::~Measurement_Accurate_DisplayViewBase()
 80078f8:	b507      	push	{r0, r1, r2, lr}
 80078fa:	4b07      	ldr	r3, [pc, #28]	; (8007918 <_ZN36Measurement_Accurate_DisplayViewBaseD0Ev+0x20>)
 80078fc:	6003      	str	r3, [r0, #0]
 80078fe:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007900:	f00f fb3c 	bl	8016f7c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007904:	9801      	ldr	r0, [sp, #4]
 8007906:	f241 4178 	movw	r1, #5240	; 0x1478
 800790a:	f025 f8ee 	bl	802caea <_ZdlPvj>
 800790e:	9801      	ldr	r0, [sp, #4]
 8007910:	b003      	add	sp, #12
 8007912:	f85d fb04 	ldr.w	pc, [sp], #4
 8007916:	bf00      	nop
 8007918:	08030ad8 	.word	0x08030ad8

0800791c <_ZN36Measurement_Accurate_DisplayViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_Accurate_DisplayViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel_Return)
 800791c:	3098      	adds	r0, #152	; 0x98
 800791e:	4288      	cmp	r0, r1
{
 8007920:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel_Return)
 8007922:	d105      	bne.n	8007930 <_ZN36Measurement_Accurate_DisplayViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Accurate_DisplayViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8007924:	f011 f82c 	bl	8018980 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel_Return clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards West
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
    }
}
 8007928:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
 800792c:	f7fd be78 	b.w	8005620 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>
}
 8007930:	bd08      	pop	{r3, pc}
	...

08007934 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev>:
Measurement_Accurate_DisplayViewBase::Measurement_Accurate_DisplayViewBase() :
 8007934:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007938:	ed2d 8b0a 	vpush	{d8-d12}
 800793c:	4604      	mov	r4, r0
 800793e:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Accurate_DisplayViewBase::buttonCallbackHandler)
 8007940:	46a0      	mov	r8, r4
 8007942:	2500      	movs	r5, #0
 8007944:	f012 fc9c 	bl	801a280 <_ZN8touchgfx6ScreenC1Ev>
 8007948:	4bce      	ldr	r3, [pc, #824]	; (8007c84 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x350>)
 800794a:	63e5      	str	r5, [r4, #60]	; 0x3c
 800794c:	f848 3b40 	str.w	r3, [r8], #64
        : Widget(), alpha(255), color(0)
 8007950:	2226      	movs	r2, #38	; 0x26
 8007952:	4629      	mov	r1, r5
 8007954:	4640      	mov	r0, r8
 8007956:	f026 f9b4 	bl	802dcc2 <memset>
 800795a:	4640      	mov	r0, r8
 800795c:	f7fb fe70 	bl	8003640 <_ZN8touchgfx6WidgetC1Ev>
 8007960:	f104 076c 	add.w	r7, r4, #108	; 0x6c
 8007964:	26ff      	movs	r6, #255	; 0xff
 8007966:	4bc8      	ldr	r3, [pc, #800]	; (8007c88 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x354>)
 8007968:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800796a:	2226      	movs	r2, #38	; 0x26
 800796c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8007970:	4629      	mov	r1, r5
 8007972:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8007976:	4638      	mov	r0, r7
 8007978:	66a5      	str	r5, [r4, #104]	; 0x68
 800797a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800797e:	f026 f9a0 	bl	802dcc2 <memset>
 8007982:	4638      	mov	r0, r7
 8007984:	f7fb fe5c 	bl	8003640 <_ZN8touchgfx6WidgetC1Ev>
 8007988:	4bc0      	ldr	r3, [pc, #768]	; (8007c8c <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x358>)
 800798a:	66e3      	str	r3, [r4, #108]	; 0x6c
 800798c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8007990:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8007994:	a90a      	add	r1, sp, #40	; 0x28
 8007996:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 800799a:	4638      	mov	r0, r7
        : Widget(), bitmap(bmp), alpha(255)
 800799c:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80079a0:	f00e faef 	bl	8015f82 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80079a4:	4658      	mov	r0, fp
 80079a6:	f00e fc23 	bl	80161f0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80079aa:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 80079ae:	f504 7994 	add.w	r9, r4, #296	; 0x128
 80079b2:	4618      	mov	r0, r3
 80079b4:	ee0a 3a90 	vmov	s21, r3
 80079b8:	f7fb fea6 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
 80079bc:	4648      	mov	r0, r9
 80079be:	f7fb fea3 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
 80079c2:	f504 73b8 	add.w	r3, r4, #368	; 0x170
 80079c6:	4618      	mov	r0, r3
 80079c8:	ee0b 3a10 	vmov	s22, r3
 80079cc:	f7fb fe9c 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
 80079d0:	f504 73dc 	add.w	r3, r4, #440	; 0x1b8
        : TextArea()
 80079d4:	4618      	mov	r0, r3
 80079d6:	ee0b 3a90 	vmov	s23, r3
        : TextAreaWithWildcardBase(), wc1(0)
 80079da:	4ead      	ldr	r6, [pc, #692]	; (8007c90 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x35c>)
        : TextArea()
 80079dc:	f7fb fe94 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
 80079e0:	f504 7301 	add.w	r3, r4, #516	; 0x204
        : TextAreaWithWildcardBase(), wc1(0)
 80079e4:	f8c4 61b8 	str.w	r6, [r4, #440]	; 0x1b8
        : TextArea()
 80079e8:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 80079ea:	f8c4 5200 	str.w	r5, [r4, #512]	; 0x200
 80079ee:	ee0c 3a10 	vmov	s24, r3
        : TextArea()
 80079f2:	f7fb fe89 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
 80079f6:	f504 7314 	add.w	r3, r4, #592	; 0x250
 80079fa:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 80079fc:	f8c4 6204 	str.w	r6, [r4, #516]	; 0x204
 8007a00:	f8c4 524c 	str.w	r5, [r4, #588]	; 0x24c
 8007a04:	f504 7a27 	add.w	sl, r4, #668	; 0x29c
 8007a08:	ee0c 3a90 	vmov	s25, r3
        : TextArea()
 8007a0c:	f7fb fe7c 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8007a10:	f8c4 6250 	str.w	r6, [r4, #592]	; 0x250
 8007a14:	f8c4 5298 	str.w	r5, [r4, #664]	; 0x298
 8007a18:	4650      	mov	r0, sl
 8007a1a:	f00d ff75 	bl	8015908 <_ZN8touchgfx5GaugeC1Ev>
 8007a1e:	f204 433c 	addw	r3, r4, #1084	; 0x43c
 8007a22:	4618      	mov	r0, r3
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8007a24:	4e9b      	ldr	r6, [pc, #620]	; (8007c94 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x360>)
 8007a26:	ee08 3a10 	vmov	s16, r3
 8007a2a:	f00c ff9d 	bl	8014968 <_ZN8touchgfx4LineC1Ev>
 8007a2e:	f204 43ac 	addw	r3, r4, #1196	; 0x4ac
 8007a32:	4618      	mov	r0, r3
 8007a34:	9302      	str	r3, [sp, #8]
 8007a36:	f7fb fc07 	bl	8003248 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8007a3a:	f106 0324 	add.w	r3, r6, #36	; 0x24
 8007a3e:	f8c4 34b4 	str.w	r3, [r4, #1204]	; 0x4b4
 8007a42:	f504 6398 	add.w	r3, r4, #1216	; 0x4c0
 8007a46:	f8c4 64ac 	str.w	r6, [r4, #1196]	; 0x4ac
 8007a4a:	4618      	mov	r0, r3
 8007a4c:	f8c4 54b8 	str.w	r5, [r4, #1208]	; 0x4b8
 8007a50:	ee09 3a10 	vmov	s18, r3
 8007a54:	f7fb fe58 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
 8007a58:	f504 63a1 	add.w	r3, r4, #1288	; 0x508
 8007a5c:	4618      	mov	r0, r3
 8007a5e:	ee08 3a90 	vmov	s17, r3
 8007a62:	f00c ff81 	bl	8014968 <_ZN8touchgfx4LineC1Ev>
 8007a66:	f504 63af 	add.w	r3, r4, #1400	; 0x578
 8007a6a:	4618      	mov	r0, r3
 8007a6c:	9303      	str	r3, [sp, #12]
 8007a6e:	f7fb fbeb 	bl	8003248 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8007a72:	f106 0324 	add.w	r3, r6, #36	; 0x24
 8007a76:	f8c4 3580 	str.w	r3, [r4, #1408]	; 0x580
 8007a7a:	f204 538c 	addw	r3, r4, #1420	; 0x58c
 8007a7e:	f8c4 6578 	str.w	r6, [r4, #1400]	; 0x578
 8007a82:	4618      	mov	r0, r3
 8007a84:	f8c4 5584 	str.w	r5, [r4, #1412]	; 0x584
 8007a88:	ee09 3a90 	vmov	s19, r3
 8007a8c:	f7fb fe3c 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
 8007a90:	f204 53d4 	addw	r3, r4, #1492	; 0x5d4
 8007a94:	4618      	mov	r0, r3
 8007a96:	ee0a 3a10 	vmov	s20, r3
 8007a9a:	f7fb fe35 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8007a9e:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8007aa2:	4a7d      	ldr	r2, [pc, #500]	; (8007c98 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x364>)
 8007aa4:	f8c3 2468 	str.w	r2, [r3, #1128]	; 0x468
 8007aa8:	4a7c      	ldr	r2, [pc, #496]	; (8007c9c <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x368>)
 8007aaa:	f8c3 2470 	str.w	r2, [r3, #1136]	; 0x470
 8007aae:	f8c3 446c 	str.w	r4, [r3, #1132]	; 0x46c
 8007ab2:	f8c3 5474 	str.w	r5, [r3, #1140]	; 0x474
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8007ab6:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8007aba:	f504 60cb 	add.w	r0, r4, #1624	; 0x658
 8007abe:	f00f fa53 	bl	8016f68 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8007ac2:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8007ac6:	462a      	mov	r2, r5
 8007ac8:	4640      	mov	r0, r8
 8007aca:	9300      	str	r3, [sp, #0]
 8007acc:	4629      	mov	r1, r5
 8007ace:	23f0      	movs	r3, #240	; 0xf0
 8007ad0:	f7fb fd91 	bl	80035f6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007ad4:	1d26      	adds	r6, r4, #4
        color = newColor;
 8007ad6:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8007ada:	66a3      	str	r3, [r4, #104]	; 0x68
 8007adc:	4641      	mov	r1, r8
 8007ade:	4630      	mov	r0, r6
 8007ae0:	f00a fe76 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image_background.setXY(0, 0);
 8007ae4:	462a      	mov	r2, r5
 8007ae6:	4638      	mov	r0, r7
 8007ae8:	4629      	mov	r1, r5
 8007aea:	f7fb fd77 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8007aee:	f04f 0308 	mov.w	r3, #8
    image_background.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8007af2:	4638      	mov	r0, r7
 8007af4:	a90a      	add	r1, sp, #40	; 0x28
 8007af6:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007afa:	f00e fa42 	bl	8015f82 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007afe:	4639      	mov	r1, r7
 8007b00:	4630      	mov	r0, r6
 8007b02:	f00a fe65 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_Return.setXY(33, 257);
 8007b06:	4658      	mov	r0, fp
 8007b08:	f240 1201 	movw	r2, #257	; 0x101
 8007b0c:	2121      	movs	r1, #33	; 0x21
 8007b0e:	f7fb fd65 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8007b12:	2303      	movs	r3, #3
    buttonWithLabel_Return.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007b14:	a909      	add	r1, sp, #36	; 0x24
 8007b16:	4658      	mov	r0, fp
 8007b18:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8007b1c:	aa0a      	add	r2, sp, #40	; 0x28
 8007b1e:	2302      	movs	r3, #2
 8007b20:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007b24:	f00e f837 	bl	8015b96 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8007b28:	f04f 024b 	mov.w	r2, #75	; 0x4b
 8007b2c:	f8a4 20d0 	strh.w	r2, [r4, #208]	; 0xd0
        updateTextPosition();
 8007b30:	4658      	mov	r0, fp
 8007b32:	f7fb fd97 	bl	8003664 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel_Return.setAction(buttonCallback);
 8007b36:	f504 53a3 	add.w	r3, r4, #5216	; 0x1460
        color = col;
 8007b3a:	f04f 38ff 	mov.w	r8, #4294967295
 8007b3e:	3308      	adds	r3, #8
 8007b40:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8007b44:	4659      	mov	r1, fp
 8007b46:	4630      	mov	r0, r6
        colorPressed = col;
 8007b48:	e9c4 8835 	strd	r8, r8, [r4, #212]	; 0xd4
 8007b4c:	af04      	add	r7, sp, #16
 8007b4e:	f00a fe3f 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_n90C.setXY(0, 194);
 8007b52:	22c2      	movs	r2, #194	; 0xc2
 8007b54:	ee1a 0a90 	vmov	r0, s21
 8007b58:	4629      	mov	r1, r5
 8007b5a:	f7fb fd3f 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8007b5e:	ee1a 1a90 	vmov	r1, s21
 8007b62:	4638      	mov	r0, r7
        color = newColor;
 8007b64:	f8c4 8110 	str.w	r8, [r4, #272]	; 0x110
        linespace = space;
 8007b68:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8007b6c:	f00d f9be 	bl	8014eec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007b70:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8007b74:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 8007b78:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8007b7c:	f04f 0b0a 	mov.w	fp, #10
 8007b80:	4b47      	ldr	r3, [pc, #284]	; (8007ca0 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x36c>)
 8007b82:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_n90C.setTypedText(touchgfx::TypedText(T___SINGLEUSE_HYQ8));
 8007b84:	ee1a 0a90 	vmov	r0, s21
 8007b88:	a90a      	add	r1, sp, #40	; 0x28
 8007b8a:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 8007b8e:	f00d fc47 	bl	8015420 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007b92:	ee1a 1a90 	vmov	r1, s21
 8007b96:	4630      	mov	r0, r6
 8007b98:	f00a fe1a 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_p90C.setXY(217, 194);
 8007b9c:	22c2      	movs	r2, #194	; 0xc2
 8007b9e:	4648      	mov	r0, r9
 8007ba0:	21d9      	movs	r1, #217	; 0xd9
 8007ba2:	f7fb fd1b 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8007ba6:	4649      	mov	r1, r9
 8007ba8:	4638      	mov	r0, r7
        color = newColor;
 8007baa:	f8c4 8158 	str.w	r8, [r4, #344]	; 0x158
        linespace = space;
 8007bae:	f8a4 515c 	strh.w	r5, [r4, #348]	; 0x15c
        boundingArea = calculateBoundingArea();
 8007bb2:	f00d f99b 	bl	8014eec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007bb6:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8007bba:	f504 73b2 	add.w	r3, r4, #356	; 0x164
 8007bbe:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007bc2:	4b37      	ldr	r3, [pc, #220]	; (8007ca0 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x36c>)
 8007bc4:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_p90C.setTypedText(touchgfx::TypedText(T___SINGLEUSE_MW1V));
 8007bc6:	4648      	mov	r0, r9
 8007bc8:	2309      	movs	r3, #9
 8007bca:	a90a      	add	r1, sp, #40	; 0x28
 8007bcc:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007bd0:	f00d fc26 	bl	8015420 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007bd4:	4649      	mov	r1, r9
 8007bd6:	4630      	mov	r0, r6
 8007bd8:	f00a fdfa 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_0C.setXY(113, 85);
 8007bdc:	2255      	movs	r2, #85	; 0x55
 8007bde:	ee1b 0a10 	vmov	r0, s22
 8007be2:	2171      	movs	r1, #113	; 0x71
 8007be4:	f7fb fcfa 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8007be8:	ee1b 1a10 	vmov	r1, s22
 8007bec:	4638      	mov	r0, r7
        color = newColor;
 8007bee:	f8c4 81a0 	str.w	r8, [r4, #416]	; 0x1a0
        linespace = space;
 8007bf2:	f8a4 51a4 	strh.w	r5, [r4, #420]	; 0x1a4
        boundingArea = calculateBoundingArea();
 8007bf6:	f00d f979 	bl	8014eec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007bfa:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8007bfe:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 8007c02:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007c06:	4b26      	ldr	r3, [pc, #152]	; (8007ca0 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x36c>)
 8007c08:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_0C.setTypedText(touchgfx::TypedText(T___SINGLEUSE_H3VA));
 8007c0a:	ee1b 0a10 	vmov	r0, s22
 8007c0e:	f04f 0308 	mov.w	r3, #8
 8007c12:	a90a      	add	r1, sp, #40	; 0x28
 8007c14:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007c18:	f00d fc02 	bl	8015420 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007c1c:	ee1b 1a10 	vmov	r1, s22
 8007c20:	4630      	mov	r0, r6
 8007c22:	f00a fdd5 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    AMD1_Current.setPosition(0, 239, 240, 15);
 8007c26:	230f      	movs	r3, #15
 8007c28:	22ef      	movs	r2, #239	; 0xef
 8007c2a:	ee1b 0a90 	vmov	r0, s23
 8007c2e:	9300      	str	r3, [sp, #0]
 8007c30:	4629      	mov	r1, r5
 8007c32:	23f0      	movs	r3, #240	; 0xf0
 8007c34:	f7fb fcdf 	bl	80035f6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007c38:	f8d4 31b8 	ldr.w	r3, [r4, #440]	; 0x1b8
        color = newColor;
 8007c3c:	f8c4 81e8 	str.w	r8, [r4, #488]	; 0x1e8
        boundingArea = calculateBoundingArea();
 8007c40:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8007c44:	f8a4 51ec 	strh.w	r5, [r4, #492]	; 0x1ec
        boundingArea = calculateBoundingArea();
 8007c48:	ee1b 1a90 	vmov	r1, s23
 8007c4c:	4638      	mov	r0, r7
 8007c4e:	4798      	blx	r3
 8007c50:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8007c54:	f504 73fa 	add.w	r3, r4, #500	; 0x1f4
 8007c58:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007c5c:	4b11      	ldr	r3, [pc, #68]	; (8007ca4 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x370>)
 8007c5e:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(AMD1_CurrentBuffer, AMD1_CURRENT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_DKHH).getText());
 8007c60:	f204 691c 	addw	r9, r4, #1564	; 0x61c
 8007c64:	b92b      	cbnz	r3, 8007c72 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x33e>
 8007c66:	4b10      	ldr	r3, [pc, #64]	; (8007ca8 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x374>)
 8007c68:	4a10      	ldr	r2, [pc, #64]	; (8007cac <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x378>)
 8007c6a:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007c6c:	4810      	ldr	r0, [pc, #64]	; (8007cb0 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x37c>)
 8007c6e:	f025 fe23 	bl	802d8b8 <__assert_func>
 8007c72:	4b10      	ldr	r3, [pc, #64]	; (8007cb4 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x380>)
 8007c74:	881b      	ldrh	r3, [r3, #0]
 8007c76:	2b0e      	cmp	r3, #14
 8007c78:	d820      	bhi.n	8007cbc <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x388>
 8007c7a:	4b0f      	ldr	r3, [pc, #60]	; (8007cb8 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x384>)
 8007c7c:	4a0b      	ldr	r2, [pc, #44]	; (8007cac <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x378>)
 8007c7e:	2161      	movs	r1, #97	; 0x61
 8007c80:	e7f4      	b.n	8007c6c <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x338>
 8007c82:	bf00      	nop
 8007c84:	08030ad8 	.word	0x08030ad8
 8007c88:	080319a8 	.word	0x080319a8
 8007c8c:	08031bf4 	.word	0x08031bf4
 8007c90:	0802f4f4 	.word	0x0802f4f4
 8007c94:	080316dc 	.word	0x080316dc
 8007c98:	08030ac0 	.word	0x08030ac0
 8007c9c:	0800791d 	.word	0x0800791d
 8007ca0:	0802f454 	.word	0x0802f454
 8007ca4:	200138a4 	.word	0x200138a4
 8007ca8:	0802f2a4 	.word	0x0802f2a4
 8007cac:	0802f3a9 	.word	0x0802f3a9
 8007cb0:	0802f321 	.word	0x0802f321
 8007cb4:	200138a8 	.word	0x200138a8
 8007cb8:	0802f368 	.word	0x0802f368
        return texts->getText(typedTextId);
 8007cbc:	4bde      	ldr	r3, [pc, #888]	; (8008038 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x704>)
 8007cbe:	210e      	movs	r1, #14
 8007cc0:	6818      	ldr	r0, [r3, #0]
 8007cc2:	f002 fcc9 	bl	800a658 <_ZNK8touchgfx5Texts7getTextEt>
 8007cc6:	4add      	ldr	r2, [pc, #884]	; (800803c <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x708>)
 8007cc8:	4603      	mov	r3, r0
 8007cca:	4659      	mov	r1, fp
 8007ccc:	4648      	mov	r0, r9
 8007cce:	f014 f805 	bl	801bcdc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8007cd2:	f04f 010f 	mov.w	r1, #15
 8007cd6:	4ada      	ldr	r2, [pc, #872]	; (8008040 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x70c>)
        wc1 = value;
 8007cd8:	f8c4 9200 	str.w	r9, [r4, #512]	; 0x200
    AMD1_Current.setTypedText(touchgfx::TypedText(T_AMD3_CURRENTAMD1_CURRENT));
 8007cdc:	ee1b 0a90 	vmov	r0, s23
 8007ce0:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 8007ce4:	a90a      	add	r1, sp, #40	; 0x28
 8007ce6:	920a      	str	r2, [sp, #40]	; 0x28
 8007ce8:	f00d fb9a 	bl	8015420 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007cec:	ee1b 1a90 	vmov	r1, s23
 8007cf0:	4630      	mov	r0, r6
 8007cf2:	f00a fd6d 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    AMD1_Frequency.setPosition(0, 224, 240, 15);
 8007cf6:	210f      	movs	r1, #15
 8007cf8:	22e0      	movs	r2, #224	; 0xe0
 8007cfa:	ee1c 0a10 	vmov	r0, s24
 8007cfe:	9100      	str	r1, [sp, #0]
 8007d00:	23f0      	movs	r3, #240	; 0xf0
 8007d02:	4629      	mov	r1, r5
 8007d04:	f7fb fc77 	bl	80035f6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007d08:	f8d4 3204 	ldr.w	r3, [r4, #516]	; 0x204
        color = newColor;
 8007d0c:	f8c4 8234 	str.w	r8, [r4, #564]	; 0x234
        boundingArea = calculateBoundingArea();
 8007d10:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8007d14:	f8a4 5238 	strh.w	r5, [r4, #568]	; 0x238
        boundingArea = calculateBoundingArea();
 8007d18:	ee1c 1a10 	vmov	r1, s24
 8007d1c:	4638      	mov	r0, r7
 8007d1e:	4798      	blx	r3
 8007d20:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8007d24:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8007d28:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007d2c:	49c5      	ldr	r1, [pc, #788]	; (8008044 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x710>)
 8007d2e:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(AMD1_FrequencyBuffer, AMD1_FREQUENCY_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_23ZO).getText());
 8007d30:	f504 69c6 	add.w	r9, r4, #1584	; 0x630
 8007d34:	2b00      	cmp	r3, #0
 8007d36:	d096      	beq.n	8007c66 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x332>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007d38:	48c3      	ldr	r0, [pc, #780]	; (8008048 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x714>)
 8007d3a:	8803      	ldrh	r3, [r0, #0]
 8007d3c:	2b0c      	cmp	r3, #12
 8007d3e:	d99c      	bls.n	8007c7a <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x346>
        return texts->getText(typedTextId);
 8007d40:	4bbd      	ldr	r3, [pc, #756]	; (8008038 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x704>)
 8007d42:	210c      	movs	r1, #12
 8007d44:	6818      	ldr	r0, [r3, #0]
 8007d46:	f002 fc87 	bl	800a658 <_ZNK8touchgfx5Texts7getTextEt>
 8007d4a:	4abc      	ldr	r2, [pc, #752]	; (800803c <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x708>)
 8007d4c:	4603      	mov	r3, r0
 8007d4e:	4659      	mov	r1, fp
 8007d50:	4648      	mov	r0, r9
 8007d52:	f013 ffc3 	bl	801bcdc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    AMD1_Frequency.setTypedText(touchgfx::TypedText(T_AMD3_FREQUENCY));
 8007d56:	f10d 0c28 	add.w	ip, sp, #40	; 0x28
        : typedTextId(id)
 8007d5a:	4ab9      	ldr	r2, [pc, #740]	; (8008040 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x70c>)
 8007d5c:	f8c4 924c 	str.w	r9, [r4, #588]	; 0x24c
 8007d60:	230d      	movs	r3, #13
 8007d62:	4661      	mov	r1, ip
 8007d64:	ee1c 0a10 	vmov	r0, s24
 8007d68:	920a      	str	r2, [sp, #40]	; 0x28
 8007d6a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007d6e:	f00d fb57 	bl	8015420 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007d72:	ee1c 1a10 	vmov	r1, s24
 8007d76:	4630      	mov	r0, r6
 8007d78:	f00a fd2a 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    AMD1_Distance.setPosition(0, 209, 240, 15);
 8007d7c:	f04f 0c0f 	mov.w	ip, #15
 8007d80:	22d1      	movs	r2, #209	; 0xd1
 8007d82:	ee1c 0a90 	vmov	r0, s25
 8007d86:	f8cd c000 	str.w	ip, [sp]
 8007d8a:	23f0      	movs	r3, #240	; 0xf0
 8007d8c:	4629      	mov	r1, r5
 8007d8e:	f7fb fc32 	bl	80035f6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007d92:	f8d4 3250 	ldr.w	r3, [r4, #592]	; 0x250
        color = newColor;
 8007d96:	f8c4 8280 	str.w	r8, [r4, #640]	; 0x280
        boundingArea = calculateBoundingArea();
 8007d9a:	4638      	mov	r0, r7
 8007d9c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8007da0:	f8a4 5284 	strh.w	r5, [r4, #644]	; 0x284
        boundingArea = calculateBoundingArea();
 8007da4:	ee1c 1a90 	vmov	r1, s25
 8007da8:	4798      	blx	r3
 8007daa:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8007dae:	f504 7323 	add.w	r3, r4, #652	; 0x28c
 8007db2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007db6:	49a3      	ldr	r1, [pc, #652]	; (8008044 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x710>)
 8007db8:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(AMD1_DistanceBuffer, AMD1_DISTANCE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_7DZL).getText());
 8007dba:	f204 6744 	addw	r7, r4, #1604	; 0x644
 8007dbe:	2b00      	cmp	r3, #0
 8007dc0:	f43f af51 	beq.w	8007c66 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x332>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007dc4:	48a0      	ldr	r0, [pc, #640]	; (8008048 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x714>)
 8007dc6:	8803      	ldrh	r3, [r0, #0]
 8007dc8:	2b0b      	cmp	r3, #11
 8007dca:	f67f af56 	bls.w	8007c7a <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x346>
        return texts->getText(typedTextId);
 8007dce:	4b9a      	ldr	r3, [pc, #616]	; (8008038 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x704>)
 8007dd0:	210b      	movs	r1, #11
 8007dd2:	6818      	ldr	r0, [r3, #0]
 8007dd4:	f002 fc40 	bl	800a658 <_ZNK8touchgfx5Texts7getTextEt>
 8007dd8:	4a98      	ldr	r2, [pc, #608]	; (800803c <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x708>)
 8007dda:	4603      	mov	r3, r0
 8007ddc:	4659      	mov	r1, fp
 8007dde:	4638      	mov	r0, r7
 8007de0:	f013 ff7c 	bl	801bcdc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8007de4:	4a96      	ldr	r2, [pc, #600]	; (8008040 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x70c>)
 8007de6:	f8c4 7298 	str.w	r7, [r4, #664]	; 0x298
 8007dea:	2336      	movs	r3, #54	; 0x36
    AMD1_Distance.setTypedText(touchgfx::TypedText(T_AMD3_DISTANCE));
 8007dec:	ee1c 0a90 	vmov	r0, s25
 8007df0:	a90a      	add	r1, sp, #40	; 0x28
 8007df2:	920a      	str	r2, [sp, #40]	; 0x28
 8007df4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007df8:	f00d fb12 	bl	8015420 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007dfc:	ee1c 1a90 	vmov	r1, s25
 8007e00:	4630      	mov	r0, r6
 8007e02:	f00a fce5 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007e06:	2304      	movs	r3, #4
    AMD1_Gauge.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_BACKGROUNDS_LIGHT_PRECISION_ID));
 8007e08:	a90a      	add	r1, sp, #40	; 0x28
 8007e0a:	4650      	mov	r0, sl
 8007e0c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007e10:	f00a fc70 	bl	80126f4 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    AMD1_Gauge.setPosition(28, 103, 184, 106);
 8007e14:	236a      	movs	r3, #106	; 0x6a
 8007e16:	9300      	str	r3, [sp, #0]
 8007e18:	2267      	movs	r2, #103	; 0x67
 8007e1a:	23b8      	movs	r3, #184	; 0xb8
 8007e1c:	211c      	movs	r1, #28
 8007e1e:	4650      	mov	r0, sl
 8007e20:	f7fb fbe9 	bl	80035f6 <_ZN8touchgfx8Drawable11setPositionEssss>
    AMD1_Gauge.setCenter(92, 92);
 8007e24:	225c      	movs	r2, #92	; 0x5c
 8007e26:	4611      	mov	r1, r2
 8007e28:	4650      	mov	r0, sl
 8007e2a:	f00d fe18 	bl	8015a5e <_ZN8touchgfx5Gauge9setCenterEii>
    AMD1_Gauge.setStartEndAngle(-90, 90);
 8007e2e:	225a      	movs	r2, #90	; 0x5a
 8007e30:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8007e34:	4650      	mov	r0, sl
 8007e36:	f00d fe97 	bl	8015b68 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    AMD1_Gauge.setRange(-90, 90);
 8007e3a:	462b      	mov	r3, r5
 8007e3c:	225a      	movs	r2, #90	; 0x5a
 8007e3e:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8007e42:	4650      	mov	r0, sl
 8007e44:	9500      	str	r5, [sp, #0]
 8007e46:	f00a fb02 	bl	801244e <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    AMD1_Gauge.setValue(0);
 8007e4a:	4629      	mov	r1, r5
 8007e4c:	4650      	mov	r0, sl
 8007e4e:	f00d fe35 	bl	8015abc <_ZN8touchgfx5Gauge8setValueEi>
    AMD1_Gauge.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_NEEDLES_ROUGH_ID, 8, 53);
 8007e52:	2335      	movs	r3, #53	; 0x35
 8007e54:	2208      	movs	r2, #8
 8007e56:	2105      	movs	r1, #5
 8007e58:	4650      	mov	r0, sl
 8007e5a:	f00d fdeb 	bl	8015a34 <_ZN8touchgfx5Gauge9setNeedleEtss>
    AMD1_Gauge.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8007e5e:	2101      	movs	r1, #1
 8007e60:	4650      	mov	r0, sl
 8007e62:	f00d fd89 	bl	8015978 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    AMD1_Gauge.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8007e66:	2101      	movs	r1, #1
 8007e68:	4650      	mov	r0, sl
 8007e6a:	f00d fd88 	bl	801597e <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
 8007e6e:	4651      	mov	r1, sl
 8007e70:	4630      	mov	r0, r6
 8007e72:	f00a fcad 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line2.setPosition(0, 75, 240, 10);
 8007e76:	ee18 0a10 	vmov	r0, s16
 8007e7a:	23f0      	movs	r3, #240	; 0xf0
 8007e7c:	224b      	movs	r2, #75	; 0x4b
 8007e7e:	4629      	mov	r1, r5
 8007e80:	f8cd b000 	str.w	fp, [sp]
 8007e84:	f7fb fbb7 	bl	80035f6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007e88:	9b02      	ldr	r3, [sp, #8]
 8007e8a:	f8c4 3464 	str.w	r3, [r4, #1124]	; 0x464
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007e8e:	22a0      	movs	r2, #160	; 0xa0
 8007e90:	4611      	mov	r1, r2
 8007e92:	ee18 0a10 	vmov	r0, s16
 8007e96:	f8c4 84b8 	str.w	r8, [r4, #1208]	; 0x4b8
        color565 = LCD16bpp::getNativeColor(painterColor);
 8007e9a:	f8a4 84bc 	strh.w	r8, [r4, #1212]	; 0x4bc
 8007e9e:	f00c fe79 	bl	8014b94 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007ea2:	ee18 0a10 	vmov	r0, s16
 8007ea6:	22a0      	movs	r2, #160	; 0xa0
 8007ea8:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8007eac:	f00c fe7d 	bl	8014baa <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8007eb0:	f8d4 3478 	ldr.w	r3, [r4, #1144]	; 0x478
 8007eb4:	2b20      	cmp	r3, #32
 8007eb6:	d006      	beq.n	8007ec6 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x592>
        lineWidthQ5 = widthQ5;
 8007eb8:	2320      	movs	r3, #32
        updateCachedShape();
 8007eba:	ee18 0a10 	vmov	r0, s16
        lineWidthQ5 = widthQ5;
 8007ebe:	f8c4 3478 	str.w	r3, [r4, #1144]	; 0x478
        updateCachedShape();
 8007ec2:	f00c fd71 	bl	80149a8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8007ec6:	ee18 0a10 	vmov	r0, s16
 8007eca:	2101      	movs	r1, #1
 8007ecc:	f00c fe78 	bl	8014bc0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007ed0:	ee18 1a10 	vmov	r1, s16
 8007ed4:	4630      	mov	r0, r6
 8007ed6:	f00a fc7b 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8007eda:	f04f 38ff 	mov.w	r8, #4294967295
    textArea_menu.setXY(23, 60);
 8007ede:	223c      	movs	r2, #60	; 0x3c
 8007ee0:	ee19 0a10 	vmov	r0, s18
 8007ee4:	2117      	movs	r1, #23
        linespace = space;
 8007ee6:	f04f 0900 	mov.w	r9, #0
        boundingArea = calculateBoundingArea();
 8007eea:	ad04      	add	r5, sp, #16
 8007eec:	f7fb fb76 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8007ef0:	ee19 1a10 	vmov	r1, s18
 8007ef4:	4628      	mov	r0, r5
        color = newColor;
 8007ef6:	f8c4 84f0 	str.w	r8, [r4, #1264]	; 0x4f0
        linespace = space;
 8007efa:	f8a4 94f4 	strh.w	r9, [r4, #1268]	; 0x4f4
        boundingArea = calculateBoundingArea();
 8007efe:	f00c fff5 	bl	8014eec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007f02:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007f06:	ee19 3a10 	vmov	r3, s18
 8007f0a:	333c      	adds	r3, #60	; 0x3c
 8007f0c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007f10:	4f4b      	ldr	r7, [pc, #300]	; (8008040 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x70c>)
 8007f12:	970a      	str	r7, [sp, #40]	; 0x28
 8007f14:	234c      	movs	r3, #76	; 0x4c
    textArea_menu.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZR32));
 8007f16:	ee19 0a10 	vmov	r0, s18
 8007f1a:	a90a      	add	r1, sp, #40	; 0x28
 8007f1c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007f20:	f00d fa7e 	bl	8015420 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007f24:	ee19 1a10 	vmov	r1, s18
 8007f28:	4630      	mov	r0, r6
 8007f2a:	f00a fc51 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8007f2e:	230a      	movs	r3, #10
 8007f30:	ee18 0a90 	vmov	r0, s17
 8007f34:	9300      	str	r3, [sp, #0]
 8007f36:	2232      	movs	r2, #50	; 0x32
 8007f38:	23f0      	movs	r3, #240	; 0xf0
 8007f3a:	4649      	mov	r1, r9
 8007f3c:	f7fb fb5b 	bl	80035f6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007f40:	9b03      	ldr	r3, [sp, #12]
 8007f42:	f8c4 3530 	str.w	r3, [r4, #1328]	; 0x530
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007f46:	22a0      	movs	r2, #160	; 0xa0
 8007f48:	4611      	mov	r1, r2
 8007f4a:	ee18 0a90 	vmov	r0, s17
 8007f4e:	f8c4 8584 	str.w	r8, [r4, #1412]	; 0x584
 8007f52:	f8a4 8588 	strh.w	r8, [r4, #1416]	; 0x588
 8007f56:	f00c fe1d 	bl	8014b94 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007f5a:	ee18 0a90 	vmov	r0, s17
 8007f5e:	22a0      	movs	r2, #160	; 0xa0
 8007f60:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8007f64:	f00c fe21 	bl	8014baa <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8007f68:	f8d4 3544 	ldr.w	r3, [r4, #1348]	; 0x544
 8007f6c:	2b20      	cmp	r3, #32
 8007f6e:	d006      	beq.n	8007f7e <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x64a>
        lineWidthQ5 = widthQ5;
 8007f70:	2320      	movs	r3, #32
        updateCachedShape();
 8007f72:	ee18 0a90 	vmov	r0, s17
        lineWidthQ5 = widthQ5;
 8007f76:	f8c4 3544 	str.w	r3, [r4, #1348]	; 0x544
        updateCachedShape();
 8007f7a:	f00c fd15 	bl	80149a8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8007f7e:	ee18 0a90 	vmov	r0, s17
 8007f82:	2101      	movs	r1, #1
 8007f84:	f00c fe1c 	bl	8014bc0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007f88:	ee18 1a90 	vmov	r1, s17
 8007f8c:	4630      	mov	r0, r6
 8007f8e:	f00a fc1f 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8007f92:	f04f 39ff 	mov.w	r9, #4294967295
    textArea_name.setXY(69, 35);
 8007f96:	ee19 0a90 	vmov	r0, s19
 8007f9a:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 8007f9c:	f04f 0800 	mov.w	r8, #0
 8007fa0:	2145      	movs	r1, #69	; 0x45
 8007fa2:	f7fb fb1b 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8007fa6:	ee19 1a90 	vmov	r1, s19
 8007faa:	4628      	mov	r0, r5
        color = newColor;
 8007fac:	f8c4 95bc 	str.w	r9, [r4, #1468]	; 0x5bc
        linespace = space;
 8007fb0:	f8a4 85c0 	strh.w	r8, [r4, #1472]	; 0x5c0
        boundingArea = calculateBoundingArea();
 8007fb4:	f00c ff9a 	bl	8014eec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007fb8:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007fbc:	ee19 3a90 	vmov	r3, s19
 8007fc0:	333c      	adds	r3, #60	; 0x3c
 8007fc2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007fc6:	234d      	movs	r3, #77	; 0x4d
    textArea_name.setTypedText(touchgfx::TypedText(T___SINGLEUSE_K7UP));
 8007fc8:	ee19 0a90 	vmov	r0, s19
 8007fcc:	a90a      	add	r1, sp, #40	; 0x28
 8007fce:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007fd2:	970a      	str	r7, [sp, #40]	; 0x28
 8007fd4:	f00d fa24 	bl	8015420 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007fd8:	ee19 1a90 	vmov	r1, s19
 8007fdc:	4630      	mov	r0, r6
 8007fde:	f00a fbf7 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_title.setXY(54, 12);
 8007fe2:	ee1a 0a10 	vmov	r0, s20
 8007fe6:	220c      	movs	r2, #12
 8007fe8:	2136      	movs	r1, #54	; 0x36
 8007fea:	f7fb faf7 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8007fee:	ee1a 1a10 	vmov	r1, s20
 8007ff2:	4628      	mov	r0, r5
        color = newColor;
 8007ff4:	f8c4 9604 	str.w	r9, [r4, #1540]	; 0x604
        linespace = space;
 8007ff8:	f8a4 8608 	strh.w	r8, [r4, #1544]	; 0x608
        boundingArea = calculateBoundingArea();
 8007ffc:	f00c ff76 	bl	8014eec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008000:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008004:	ee1a 3a10 	vmov	r3, s20
 8008008:	333c      	adds	r3, #60	; 0x3c
 800800a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800800e:	234e      	movs	r3, #78	; 0x4e
    textArea_title.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0GAY));
 8008010:	ee1a 0a10 	vmov	r0, s20
 8008014:	a90a      	add	r1, sp, #40	; 0x28
 8008016:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800801a:	970a      	str	r7, [sp, #40]	; 0x28
 800801c:	f00d fa00 	bl	8015420 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008020:	4630      	mov	r0, r6
 8008022:	ee1a 1a10 	vmov	r1, s20
 8008026:	f00a fbd3 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800802a:	4620      	mov	r0, r4
 800802c:	b00d      	add	sp, #52	; 0x34
 800802e:	ecbd 8b0a 	vpop	{d8-d12}
 8008032:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008036:	bf00      	nop
 8008038:	200138b0 	.word	0x200138b0
 800803c:	0802f3e1 	.word	0x0802f3e1
 8008040:	0802f454 	.word	0x0802f454
 8008044:	200138a4 	.word	0x200138a4
 8008048:	200138a8 	.word	0x200138a8

0800804c <_ZN38Measurement_Accurate_Display_2ViewBase11setupScreenEv>:
}

void Measurement_Accurate_Display_2ViewBase::setupScreen()
{

}
 800804c:	4770      	bx	lr

0800804e <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800804e:	4770      	bx	lr

08008050 <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8008050:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8008052:	68c2      	ldr	r2, [r0, #12]
 8008054:	6844      	ldr	r4, [r0, #4]
 8008056:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8008058:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800805a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800805e:	07d2      	lsls	r2, r2, #31
 8008060:	bf48      	it	mi
 8008062:	5962      	ldrmi	r2, [r4, r5]
 8008064:	689b      	ldr	r3, [r3, #8]
    }
 8008066:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8008068:	bf48      	it	mi
 800806a:	58d3      	ldrmi	r3, [r2, r3]
 800806c:	4718      	bx	r3

0800806e <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 800806e:	6843      	ldr	r3, [r0, #4]
 8008070:	b12b      	cbz	r3, 800807e <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8008072:	6883      	ldr	r3, [r0, #8]
 8008074:	b92b      	cbnz	r3, 8008082 <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8008076:	68c0      	ldr	r0, [r0, #12]
 8008078:	f000 0001 	and.w	r0, r0, #1
 800807c:	4770      	bx	lr
 800807e:	4618      	mov	r0, r3
 8008080:	4770      	bx	lr
 8008082:	2001      	movs	r0, #1
    }
 8008084:	4770      	bx	lr

08008086 <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8008086:	b510      	push	{r4, lr}
 8008088:	2110      	movs	r1, #16
 800808a:	4604      	mov	r4, r0
 800808c:	f024 fd2d 	bl	802caea <_ZdlPvj>
 8008090:	4620      	mov	r0, r4
 8008092:	bd10      	pop	{r4, pc}

08008094 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>:
Measurement_Accurate_Display_2ViewBase::~Measurement_Accurate_Display_2ViewBase()
 8008094:	b510      	push	{r4, lr}
 8008096:	4b03      	ldr	r3, [pc, #12]	; (80080a4 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev+0x10>)
 8008098:	6003      	str	r3, [r0, #0]
 800809a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800809c:	f00e ff6e 	bl	8016f7c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80080a0:	4620      	mov	r0, r4
 80080a2:	bd10      	pop	{r4, pc}
 80080a4:	08030b24 	.word	0x08030b24

080080a8 <_ZN38Measurement_Accurate_Display_2ViewBaseD0Ev>:
Measurement_Accurate_Display_2ViewBase::~Measurement_Accurate_Display_2ViewBase()
 80080a8:	b507      	push	{r0, r1, r2, lr}
 80080aa:	4b07      	ldr	r3, [pc, #28]	; (80080c8 <_ZN38Measurement_Accurate_Display_2ViewBaseD0Ev+0x20>)
 80080ac:	6003      	str	r3, [r0, #0]
 80080ae:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80080b0:	f00e ff64 	bl	8016f7c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80080b4:	9801      	ldr	r0, [sp, #4]
 80080b6:	f241 4178 	movw	r1, #5240	; 0x1478
 80080ba:	f024 fd16 	bl	802caea <_ZdlPvj>
 80080be:	9801      	ldr	r0, [sp, #4]
 80080c0:	b003      	add	sp, #12
 80080c2:	f85d fb04 	ldr.w	pc, [sp], #4
 80080c6:	bf00      	nop
 80080c8:	08030b24 	.word	0x08030b24

080080cc <_ZN38Measurement_Accurate_Display_2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_Accurate_Display_2ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel_Return)
 80080cc:	3098      	adds	r0, #152	; 0x98
 80080ce:	4288      	cmp	r0, r1
{
 80080d0:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel_Return)
 80080d2:	d105      	bne.n	80080e0 <_ZN38Measurement_Accurate_Display_2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Accurate_Display_2ViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80080d4:	f010 fc54 	bl	8018980 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel_Return clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards West
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
    }
}
 80080d8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
 80080dc:	f7fd baa0 	b.w	8005620 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>
}
 80080e0:	bd08      	pop	{r3, pc}
	...

080080e4 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev>:
Measurement_Accurate_Display_2ViewBase::Measurement_Accurate_Display_2ViewBase() :
 80080e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80080e8:	ed2d 8b0a 	vpush	{d8-d12}
 80080ec:	4604      	mov	r4, r0
 80080ee:	b08f      	sub	sp, #60	; 0x3c
    buttonCallback(this, &Measurement_Accurate_Display_2ViewBase::buttonCallbackHandler)
 80080f0:	46a0      	mov	r8, r4
 80080f2:	2500      	movs	r5, #0
 80080f4:	f012 f8c4 	bl	801a280 <_ZN8touchgfx6ScreenC1Ev>
 80080f8:	4bcf      	ldr	r3, [pc, #828]	; (8008438 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x354>)
 80080fa:	63e5      	str	r5, [r4, #60]	; 0x3c
 80080fc:	f848 3b40 	str.w	r3, [r8], #64
        : Widget(), alpha(255), color(0)
 8008100:	2226      	movs	r2, #38	; 0x26
 8008102:	4629      	mov	r1, r5
 8008104:	4640      	mov	r0, r8
 8008106:	f025 fddc 	bl	802dcc2 <memset>
 800810a:	4640      	mov	r0, r8
 800810c:	f7fb fa98 	bl	8003640 <_ZN8touchgfx6WidgetC1Ev>
 8008110:	f104 076c 	add.w	r7, r4, #108	; 0x6c
 8008114:	26ff      	movs	r6, #255	; 0xff
 8008116:	4bc9      	ldr	r3, [pc, #804]	; (800843c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x358>)
 8008118:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800811a:	2226      	movs	r2, #38	; 0x26
 800811c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8008120:	4629      	mov	r1, r5
 8008122:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8008126:	4638      	mov	r0, r7
 8008128:	66a5      	str	r5, [r4, #104]	; 0x68
 800812a:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 800812e:	f025 fdc8 	bl	802dcc2 <memset>
 8008132:	4638      	mov	r0, r7
 8008134:	f7fb fa84 	bl	8003640 <_ZN8touchgfx6WidgetC1Ev>
 8008138:	4bc1      	ldr	r3, [pc, #772]	; (8008440 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x35c>)
 800813a:	66e3      	str	r3, [r4, #108]	; 0x6c
 800813c:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 8008140:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8008144:	a90c      	add	r1, sp, #48	; 0x30
 8008146:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 800814a:	4638      	mov	r0, r7
        : Widget(), bitmap(bmp), alpha(255)
 800814c:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8008150:	f00d ff17 	bl	8015f82 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8008154:	4658      	mov	r0, fp
 8008156:	f00e f84b 	bl	80161f0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800815a:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 800815e:	f504 7994 	add.w	r9, r4, #296	; 0x128
 8008162:	4618      	mov	r0, r3
 8008164:	ee0a 3a90 	vmov	s21, r3
 8008168:	f7fb face 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
 800816c:	4648      	mov	r0, r9
 800816e:	f7fb facb 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
 8008172:	f504 73b8 	add.w	r3, r4, #368	; 0x170
 8008176:	4618      	mov	r0, r3
 8008178:	ee0b 3a10 	vmov	s22, r3
 800817c:	f7fb fac4 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
 8008180:	f504 73dc 	add.w	r3, r4, #440	; 0x1b8
        : TextArea()
 8008184:	4618      	mov	r0, r3
 8008186:	ee0b 3a90 	vmov	s23, r3
        : TextAreaWithWildcardBase(), wc1(0)
 800818a:	4eae      	ldr	r6, [pc, #696]	; (8008444 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x360>)
        : TextArea()
 800818c:	f7fb fabc 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
 8008190:	f504 7301 	add.w	r3, r4, #516	; 0x204
        : TextAreaWithWildcardBase(), wc1(0)
 8008194:	f8c4 61b8 	str.w	r6, [r4, #440]	; 0x1b8
        : TextArea()
 8008198:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 800819a:	f8c4 5200 	str.w	r5, [r4, #512]	; 0x200
 800819e:	ee0c 3a10 	vmov	s24, r3
        : TextArea()
 80081a2:	f7fb fab1 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
 80081a6:	f504 7314 	add.w	r3, r4, #592	; 0x250
 80081aa:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 80081ac:	f8c4 6204 	str.w	r6, [r4, #516]	; 0x204
 80081b0:	f8c4 524c 	str.w	r5, [r4, #588]	; 0x24c
 80081b4:	f504 7a27 	add.w	sl, r4, #668	; 0x29c
 80081b8:	ee0c 3a90 	vmov	s25, r3
        : TextArea()
 80081bc:	f7fb faa4 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 80081c0:	f8c4 6250 	str.w	r6, [r4, #592]	; 0x250
 80081c4:	f8c4 5298 	str.w	r5, [r4, #664]	; 0x298
 80081c8:	4650      	mov	r0, sl
 80081ca:	f00d fb9d 	bl	8015908 <_ZN8touchgfx5GaugeC1Ev>
 80081ce:	f204 433c 	addw	r3, r4, #1084	; 0x43c
 80081d2:	4618      	mov	r0, r3
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80081d4:	4e9c      	ldr	r6, [pc, #624]	; (8008448 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x364>)
 80081d6:	ee08 3a10 	vmov	s16, r3
 80081da:	f00c fbc5 	bl	8014968 <_ZN8touchgfx4LineC1Ev>
 80081de:	f204 43ac 	addw	r3, r4, #1196	; 0x4ac
 80081e2:	4618      	mov	r0, r3
 80081e4:	9303      	str	r3, [sp, #12]
 80081e6:	f7fb f82f 	bl	8003248 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80081ea:	f106 0324 	add.w	r3, r6, #36	; 0x24
 80081ee:	f8c4 34b4 	str.w	r3, [r4, #1204]	; 0x4b4
 80081f2:	f504 6398 	add.w	r3, r4, #1216	; 0x4c0
 80081f6:	f8c4 64ac 	str.w	r6, [r4, #1196]	; 0x4ac
 80081fa:	4618      	mov	r0, r3
 80081fc:	f8c4 54b8 	str.w	r5, [r4, #1208]	; 0x4b8
 8008200:	ee09 3a10 	vmov	s18, r3
 8008204:	f7fb fa80 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
 8008208:	f504 63a1 	add.w	r3, r4, #1288	; 0x508
 800820c:	4618      	mov	r0, r3
 800820e:	ee08 3a90 	vmov	s17, r3
 8008212:	f00c fba9 	bl	8014968 <_ZN8touchgfx4LineC1Ev>
 8008216:	f504 63af 	add.w	r3, r4, #1400	; 0x578
 800821a:	4618      	mov	r0, r3
 800821c:	9304      	str	r3, [sp, #16]
 800821e:	f7fb f813 	bl	8003248 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8008222:	f106 0324 	add.w	r3, r6, #36	; 0x24
 8008226:	f8c4 3580 	str.w	r3, [r4, #1408]	; 0x580
 800822a:	f204 538c 	addw	r3, r4, #1420	; 0x58c
 800822e:	f8c4 6578 	str.w	r6, [r4, #1400]	; 0x578
 8008232:	4618      	mov	r0, r3
 8008234:	f8c4 5584 	str.w	r5, [r4, #1412]	; 0x584
 8008238:	ee09 3a90 	vmov	s19, r3
 800823c:	f7fb fa64 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
 8008240:	f204 53d4 	addw	r3, r4, #1492	; 0x5d4
 8008244:	4618      	mov	r0, r3
 8008246:	ee0a 3a10 	vmov	s20, r3
 800824a:	f7fb fa5d 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800824e:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8008252:	4a7e      	ldr	r2, [pc, #504]	; (800844c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x368>)
 8008254:	f8c3 2468 	str.w	r2, [r3, #1128]	; 0x468
 8008258:	4a7d      	ldr	r2, [pc, #500]	; (8008450 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x36c>)
 800825a:	f8c3 2470 	str.w	r2, [r3, #1136]	; 0x470
 800825e:	f8c3 446c 	str.w	r4, [r3, #1132]	; 0x46c
 8008262:	f8c3 5474 	str.w	r5, [r3, #1140]	; 0x474
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8008266:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800826a:	f504 60cb 	add.w	r0, r4, #1624	; 0x658
 800826e:	f00e fe7b 	bl	8016f68 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8008272:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8008276:	462a      	mov	r2, r5
 8008278:	4640      	mov	r0, r8
 800827a:	9300      	str	r3, [sp, #0]
 800827c:	4629      	mov	r1, r5
 800827e:	23f0      	movs	r3, #240	; 0xf0
 8008280:	f7fb f9b9 	bl	80035f6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8008284:	1d26      	adds	r6, r4, #4
        color = newColor;
 8008286:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800828a:	66a3      	str	r3, [r4, #104]	; 0x68
 800828c:	4641      	mov	r1, r8
 800828e:	4630      	mov	r0, r6
 8008290:	f00a fa9e 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image_background.setXY(0, 0);
 8008294:	462a      	mov	r2, r5
 8008296:	4638      	mov	r0, r7
 8008298:	4629      	mov	r1, r5
 800829a:	f7fb f99f 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 800829e:	f04f 0308 	mov.w	r3, #8
    image_background.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80082a2:	4638      	mov	r0, r7
 80082a4:	a90c      	add	r1, sp, #48	; 0x30
 80082a6:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 80082aa:	f00d fe6a 	bl	8015f82 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80082ae:	4639      	mov	r1, r7
 80082b0:	4630      	mov	r0, r6
 80082b2:	f00a fa8d 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_Return.setXY(33, 257);
 80082b6:	4658      	mov	r0, fp
 80082b8:	f240 1201 	movw	r2, #257	; 0x101
 80082bc:	2121      	movs	r1, #33	; 0x21
 80082be:	f7fb f98d 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 80082c2:	f04f 0303 	mov.w	r3, #3
    buttonWithLabel_Return.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80082c6:	aa0c      	add	r2, sp, #48	; 0x30
 80082c8:	a90b      	add	r1, sp, #44	; 0x2c
 80082ca:	4658      	mov	r0, fp
 80082cc:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80082d0:	f04f 0302 	mov.w	r3, #2
 80082d4:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 80082d8:	f00d fc5d 	bl	8015b96 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80082dc:	2347      	movs	r3, #71	; 0x47
        updateTextPosition();
 80082de:	4658      	mov	r0, fp
 80082e0:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 80082e4:	f7fb f9be 	bl	8003664 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel_Return.setAction(buttonCallback);
 80082e8:	f504 53a3 	add.w	r3, r4, #5216	; 0x1460
        color = col;
 80082ec:	f04f 38ff 	mov.w	r8, #4294967295
 80082f0:	3308      	adds	r3, #8
 80082f2:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 80082f6:	4659      	mov	r1, fp
 80082f8:	4630      	mov	r0, r6
        colorPressed = col;
 80082fa:	e9c4 8835 	strd	r8, r8, [r4, #212]	; 0xd4
 80082fe:	af06      	add	r7, sp, #24
 8008300:	f00a fa66 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_n90C.setXY(0, 194);
 8008304:	22c2      	movs	r2, #194	; 0xc2
 8008306:	ee1a 0a90 	vmov	r0, s21
 800830a:	4629      	mov	r1, r5
 800830c:	f7fb f966 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8008310:	ee1a 1a90 	vmov	r1, s21
 8008314:	4638      	mov	r0, r7
        color = newColor;
 8008316:	f8c4 8110 	str.w	r8, [r4, #272]	; 0x110
        linespace = space;
 800831a:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 800831e:	f00c fde5 	bl	8014eec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008322:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8008326:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 800832a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 800832e:	4b49      	ldr	r3, [pc, #292]	; (8008454 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x370>)
 8008330:	930c      	str	r3, [sp, #48]	; 0x30
    textArea_n90C.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TIF0));
 8008332:	ee1a 0a90 	vmov	r0, s21
 8008336:	2307      	movs	r3, #7
 8008338:	a90c      	add	r1, sp, #48	; 0x30
 800833a:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 800833e:	f00d f86f 	bl	8015420 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008342:	ee1a 1a90 	vmov	r1, s21
 8008346:	4630      	mov	r0, r6
 8008348:	f00a fa42 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_p90C.setXY(217, 194);
 800834c:	22c2      	movs	r2, #194	; 0xc2
 800834e:	4648      	mov	r0, r9
 8008350:	21d9      	movs	r1, #217	; 0xd9
 8008352:	f7fb f943 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8008356:	4649      	mov	r1, r9
 8008358:	4638      	mov	r0, r7
        color = newColor;
 800835a:	f8c4 8158 	str.w	r8, [r4, #344]	; 0x158
        linespace = space;
 800835e:	f8a4 515c 	strh.w	r5, [r4, #348]	; 0x15c
        boundingArea = calculateBoundingArea();
 8008362:	f00c fdc3 	bl	8014eec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008366:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 800836a:	f504 73b2 	add.w	r3, r4, #356	; 0x164
 800836e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008372:	4b38      	ldr	r3, [pc, #224]	; (8008454 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x370>)
 8008374:	930c      	str	r3, [sp, #48]	; 0x30
    textArea_p90C.setTypedText(touchgfx::TypedText(T___SINGLEUSE_H7OA));
 8008376:	4648      	mov	r0, r9
 8008378:	2306      	movs	r3, #6
 800837a:	a90c      	add	r1, sp, #48	; 0x30
 800837c:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8008380:	f00d f84e 	bl	8015420 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008384:	4649      	mov	r1, r9
 8008386:	4630      	mov	r0, r6
 8008388:	f00a fa22 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_0C.setXY(113, 85);
 800838c:	2255      	movs	r2, #85	; 0x55
 800838e:	ee1b 0a10 	vmov	r0, s22
 8008392:	2171      	movs	r1, #113	; 0x71
 8008394:	f7fb f922 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8008398:	ee1b 1a10 	vmov	r1, s22
 800839c:	4638      	mov	r0, r7
        color = newColor;
 800839e:	f8c4 81a0 	str.w	r8, [r4, #416]	; 0x1a0
        linespace = space;
 80083a2:	f8a4 51a4 	strh.w	r5, [r4, #420]	; 0x1a4
        boundingArea = calculateBoundingArea();
 80083a6:	f00c fda1 	bl	8014eec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80083aa:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80083ae:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 80083b2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80083b6:	4b27      	ldr	r3, [pc, #156]	; (8008454 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x370>)
 80083b8:	930c      	str	r3, [sp, #48]	; 0x30
    textArea_0C.setTypedText(touchgfx::TypedText(T___SINGLEUSE_61VS));
 80083ba:	ee1b 0a10 	vmov	r0, s22
 80083be:	f04f 0305 	mov.w	r3, #5
 80083c2:	a90c      	add	r1, sp, #48	; 0x30
 80083c4:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80083c8:	f00d f82a 	bl	8015420 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80083cc:	ee1b 1a10 	vmov	r1, s22
 80083d0:	4630      	mov	r0, r6
 80083d2:	f00a f9fd 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    AMD3_Current.setPosition(0, 239, 240, 15);
 80083d6:	230f      	movs	r3, #15
 80083d8:	22ef      	movs	r2, #239	; 0xef
 80083da:	ee1b 0a90 	vmov	r0, s23
 80083de:	9300      	str	r3, [sp, #0]
 80083e0:	4629      	mov	r1, r5
 80083e2:	23f0      	movs	r3, #240	; 0xf0
 80083e4:	f7fb f907 	bl	80035f6 <_ZN8touchgfx8Drawable11setPositionEssss>
 80083e8:	f8d4 31b8 	ldr.w	r3, [r4, #440]	; 0x1b8
        color = newColor;
 80083ec:	f8c4 81e8 	str.w	r8, [r4, #488]	; 0x1e8
        boundingArea = calculateBoundingArea();
 80083f0:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 80083f4:	f8a4 51ec 	strh.w	r5, [r4, #492]	; 0x1ec
        boundingArea = calculateBoundingArea();
 80083f8:	ee1b 1a90 	vmov	r1, s23
 80083fc:	4638      	mov	r0, r7
 80083fe:	4798      	blx	r3
 8008400:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8008404:	f8df 9064 	ldr.w	r9, [pc, #100]	; 800846c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x388>
 8008408:	f504 73fa 	add.w	r3, r4, #500	; 0x1f4
 800840c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008410:	f8d9 3000 	ldr.w	r3, [r9]
    Unicode::snprintf(AMD3_CurrentBuffer, AMD3_CURRENT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_VDGC).getText());
 8008414:	f204 6b1c 	addw	fp, r4, #1564	; 0x61c
 8008418:	b92b      	cbnz	r3, 8008426 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x342>
 800841a:	4b0f      	ldr	r3, [pc, #60]	; (8008458 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x374>)
 800841c:	4a0f      	ldr	r2, [pc, #60]	; (800845c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x378>)
 800841e:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8008420:	480f      	ldr	r0, [pc, #60]	; (8008460 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x37c>)
 8008422:	f025 fa49 	bl	802d8b8 <__assert_func>
 8008426:	4b0f      	ldr	r3, [pc, #60]	; (8008464 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x380>)
 8008428:	881b      	ldrh	r3, [r3, #0]
 800842a:	2b04      	cmp	r3, #4
 800842c:	d820      	bhi.n	8008470 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x38c>
 800842e:	4b0e      	ldr	r3, [pc, #56]	; (8008468 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x384>)
 8008430:	4a0a      	ldr	r2, [pc, #40]	; (800845c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x378>)
 8008432:	2161      	movs	r1, #97	; 0x61
 8008434:	e7f4      	b.n	8008420 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x33c>
 8008436:	bf00      	nop
 8008438:	08030b24 	.word	0x08030b24
 800843c:	080319a8 	.word	0x080319a8
 8008440:	08031bf4 	.word	0x08031bf4
 8008444:	0802f4f4 	.word	0x0802f4f4
 8008448:	080316dc 	.word	0x080316dc
 800844c:	08030b0c 	.word	0x08030b0c
 8008450:	080080cd 	.word	0x080080cd
 8008454:	0802f454 	.word	0x0802f454
 8008458:	0802f2a4 	.word	0x0802f2a4
 800845c:	0802f3a9 	.word	0x0802f3a9
 8008460:	0802f321 	.word	0x0802f321
 8008464:	200138a8 	.word	0x200138a8
 8008468:	0802f368 	.word	0x0802f368
 800846c:	200138a4 	.word	0x200138a4
        return texts->getText(typedTextId);
 8008470:	4bdd      	ldr	r3, [pc, #884]	; (80087e8 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x704>)
 8008472:	2104      	movs	r1, #4
 8008474:	6818      	ldr	r0, [r3, #0]
 8008476:	f002 f8ef 	bl	800a658 <_ZNK8touchgfx5Texts7getTextEt>
 800847a:	4adc      	ldr	r2, [pc, #880]	; (80087ec <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x708>)
 800847c:	4603      	mov	r3, r0
 800847e:	210a      	movs	r1, #10
 8008480:	4658      	mov	r0, fp
 8008482:	f013 fc2b 	bl	801bcdc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8008486:	4ada      	ldr	r2, [pc, #872]	; (80087f0 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x70c>)
        wc1 = value;
 8008488:	f8c4 b200 	str.w	fp, [r4, #512]	; 0x200
    AMD3_Current.setTypedText(touchgfx::TypedText(T_AMD3_CURRENT));
 800848c:	ee1b 0a90 	vmov	r0, s23
 8008490:	a90c      	add	r1, sp, #48	; 0x30
 8008492:	f04f 0b01 	mov.w	fp, #1
 8008496:	920c      	str	r2, [sp, #48]	; 0x30
 8008498:	f8ad b034 	strh.w	fp, [sp, #52]	; 0x34
 800849c:	f00c ffc0 	bl	8015420 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80084a0:	ee1b 1a90 	vmov	r1, s23
 80084a4:	4630      	mov	r0, r6
 80084a6:	f00a f993 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    AMD3_Frequency.setPosition(0, 224, 240, 15);
 80084aa:	210f      	movs	r1, #15
 80084ac:	22e0      	movs	r2, #224	; 0xe0
 80084ae:	ee1c 0a10 	vmov	r0, s24
 80084b2:	9100      	str	r1, [sp, #0]
 80084b4:	23f0      	movs	r3, #240	; 0xf0
 80084b6:	4629      	mov	r1, r5
 80084b8:	f7fb f89d 	bl	80035f6 <_ZN8touchgfx8Drawable11setPositionEssss>
 80084bc:	f8d4 3204 	ldr.w	r3, [r4, #516]	; 0x204
        color = newColor;
 80084c0:	f8c4 8234 	str.w	r8, [r4, #564]	; 0x234
        boundingArea = calculateBoundingArea();
 80084c4:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 80084c8:	f8a4 5238 	strh.w	r5, [r4, #568]	; 0x238
        boundingArea = calculateBoundingArea();
 80084cc:	ee1c 1a10 	vmov	r1, s24
 80084d0:	4638      	mov	r0, r7
 80084d2:	4798      	blx	r3
 80084d4:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80084d8:	f504 7310 	add.w	r3, r4, #576	; 0x240
 80084dc:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80084e0:	f8d9 3000 	ldr.w	r3, [r9]
    Unicode::snprintf(AMD3_FrequencyBuffer, AMD3_FREQUENCY_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_RCRP).getText());
 80084e4:	f504 61c6 	add.w	r1, r4, #1584	; 0x630
 80084e8:	9105      	str	r1, [sp, #20]
 80084ea:	2b00      	cmp	r3, #0
 80084ec:	d095      	beq.n	800841a <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x336>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80084ee:	49c1      	ldr	r1, [pc, #772]	; (80087f4 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x710>)
 80084f0:	880b      	ldrh	r3, [r1, #0]
 80084f2:	2b03      	cmp	r3, #3
 80084f4:	d99b      	bls.n	800842e <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x34a>
        return texts->getText(typedTextId);
 80084f6:	4bbc      	ldr	r3, [pc, #752]	; (80087e8 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x704>)
 80084f8:	2103      	movs	r1, #3
 80084fa:	6818      	ldr	r0, [r3, #0]
 80084fc:	f002 f8ac 	bl	800a658 <_ZNK8touchgfx5Texts7getTextEt>
 8008500:	4aba      	ldr	r2, [pc, #744]	; (80087ec <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x708>)
 8008502:	4603      	mov	r3, r0
 8008504:	210a      	movs	r1, #10
 8008506:	9805      	ldr	r0, [sp, #20]
 8008508:	f013 fbe8 	bl	801bcdc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800850c:	9805      	ldr	r0, [sp, #20]
 800850e:	f8c4 024c 	str.w	r0, [r4, #588]	; 0x24c
    AMD3_Frequency.setTypedText(touchgfx::TypedText(T_AMD3_FREQUENCY));
 8008512:	a80c      	add	r0, sp, #48	; 0x30
        : typedTextId(id)
 8008514:	4ab6      	ldr	r2, [pc, #728]	; (80087f0 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x70c>)
 8008516:	920c      	str	r2, [sp, #48]	; 0x30
 8008518:	230d      	movs	r3, #13
 800851a:	4601      	mov	r1, r0
 800851c:	ee1c 0a10 	vmov	r0, s24
 8008520:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8008524:	f00c ff7c 	bl	8015420 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008528:	ee1c 1a10 	vmov	r1, s24
 800852c:	4630      	mov	r0, r6
 800852e:	f00a f94f 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    AMD3_Distance.setPosition(0, 209, 240, 15);
 8008532:	200f      	movs	r0, #15
 8008534:	22d1      	movs	r2, #209	; 0xd1
 8008536:	9000      	str	r0, [sp, #0]
 8008538:	23f0      	movs	r3, #240	; 0xf0
 800853a:	ee1c 0a90 	vmov	r0, s25
 800853e:	4629      	mov	r1, r5
 8008540:	f7fb f859 	bl	80035f6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8008544:	f8d4 3250 	ldr.w	r3, [r4, #592]	; 0x250
        color = newColor;
 8008548:	f8c4 8280 	str.w	r8, [r4, #640]	; 0x280
        boundingArea = calculateBoundingArea();
 800854c:	4638      	mov	r0, r7
 800854e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8008552:	f8a4 5284 	strh.w	r5, [r4, #644]	; 0x284
        boundingArea = calculateBoundingArea();
 8008556:	ee1c 1a90 	vmov	r1, s25
 800855a:	4798      	blx	r3
 800855c:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8008560:	f504 7323 	add.w	r3, r4, #652	; 0x28c
 8008564:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8008568:	f8d9 3000 	ldr.w	r3, [r9]
    Unicode::snprintf(AMD3_DistanceBuffer, AMD3_DISTANCE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_VKRM).getText());
 800856c:	f204 6744 	addw	r7, r4, #1604	; 0x644
 8008570:	2b00      	cmp	r3, #0
 8008572:	f43f af52 	beq.w	800841a <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x336>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8008576:	499f      	ldr	r1, [pc, #636]	; (80087f4 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x710>)
 8008578:	880b      	ldrh	r3, [r1, #0]
 800857a:	2b02      	cmp	r3, #2
 800857c:	f67f af57 	bls.w	800842e <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x34a>
        return texts->getText(typedTextId);
 8008580:	4b99      	ldr	r3, [pc, #612]	; (80087e8 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x704>)
 8008582:	2102      	movs	r1, #2
 8008584:	6818      	ldr	r0, [r3, #0]
 8008586:	f002 f867 	bl	800a658 <_ZNK8touchgfx5Texts7getTextEt>
 800858a:	4a98      	ldr	r2, [pc, #608]	; (80087ec <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x708>)
 800858c:	4603      	mov	r3, r0
 800858e:	210a      	movs	r1, #10
 8008590:	4638      	mov	r0, r7
 8008592:	f013 fba3 	bl	801bcdc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8008596:	4a96      	ldr	r2, [pc, #600]	; (80087f0 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x70c>)
 8008598:	f8c4 7298 	str.w	r7, [r4, #664]	; 0x298
 800859c:	2336      	movs	r3, #54	; 0x36
    AMD3_Distance.setTypedText(touchgfx::TypedText(T_AMD3_DISTANCE));
 800859e:	ee1c 0a90 	vmov	r0, s25
 80085a2:	a90c      	add	r1, sp, #48	; 0x30
 80085a4:	920c      	str	r2, [sp, #48]	; 0x30
 80085a6:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80085aa:	f00c ff39 	bl	8015420 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80085ae:	ee1c 1a90 	vmov	r1, s25
 80085b2:	4630      	mov	r0, r6
 80085b4:	f00a f90c 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80085b8:	2304      	movs	r3, #4
    AMD3_Gauge.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_BACKGROUNDS_LIGHT_PRECISION_ID));
 80085ba:	a90c      	add	r1, sp, #48	; 0x30
 80085bc:	4650      	mov	r0, sl
 80085be:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 80085c2:	f00a f897 	bl	80126f4 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    AMD3_Gauge.setPosition(28, 103, 184, 106);
 80085c6:	236a      	movs	r3, #106	; 0x6a
 80085c8:	9300      	str	r3, [sp, #0]
 80085ca:	2267      	movs	r2, #103	; 0x67
 80085cc:	23b8      	movs	r3, #184	; 0xb8
 80085ce:	211c      	movs	r1, #28
 80085d0:	4650      	mov	r0, sl
 80085d2:	f7fb f810 	bl	80035f6 <_ZN8touchgfx8Drawable11setPositionEssss>
    AMD3_Gauge.setCenter(92, 92);
 80085d6:	225c      	movs	r2, #92	; 0x5c
 80085d8:	4611      	mov	r1, r2
 80085da:	4650      	mov	r0, sl
 80085dc:	f00d fa3f 	bl	8015a5e <_ZN8touchgfx5Gauge9setCenterEii>
    AMD3_Gauge.setStartEndAngle(-90, 90);
 80085e0:	225a      	movs	r2, #90	; 0x5a
 80085e2:	f06f 0159 	mvn.w	r1, #89	; 0x59
 80085e6:	4650      	mov	r0, sl
 80085e8:	f00d fabe 	bl	8015b68 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    AMD3_Gauge.setRange(-90, 90);
 80085ec:	462b      	mov	r3, r5
 80085ee:	225a      	movs	r2, #90	; 0x5a
 80085f0:	f06f 0159 	mvn.w	r1, #89	; 0x59
 80085f4:	4650      	mov	r0, sl
 80085f6:	9500      	str	r5, [sp, #0]
 80085f8:	f009 ff29 	bl	801244e <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    AMD3_Gauge.setValue(0);
 80085fc:	4629      	mov	r1, r5
 80085fe:	4650      	mov	r0, sl
 8008600:	f00d fa5c 	bl	8015abc <_ZN8touchgfx5Gauge8setValueEi>
    AMD3_Gauge.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_NEEDLES_ROUGH_ID, 8, 53);
 8008604:	2335      	movs	r3, #53	; 0x35
 8008606:	2208      	movs	r2, #8
 8008608:	2105      	movs	r1, #5
 800860a:	4650      	mov	r0, sl
 800860c:	f00d fa12 	bl	8015a34 <_ZN8touchgfx5Gauge9setNeedleEtss>
    AMD3_Gauge.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8008610:	4659      	mov	r1, fp
 8008612:	4650      	mov	r0, sl
 8008614:	f00d f9b0 	bl	8015978 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    AMD3_Gauge.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8008618:	4659      	mov	r1, fp
 800861a:	4650      	mov	r0, sl
 800861c:	f00d f9af 	bl	801597e <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
 8008620:	4651      	mov	r1, sl
 8008622:	4630      	mov	r0, r6
 8008624:	f00a f8d4 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line2.setPosition(0, 75, 240, 10);
 8008628:	230a      	movs	r3, #10
 800862a:	ee18 0a10 	vmov	r0, s16
 800862e:	9300      	str	r3, [sp, #0]
 8008630:	224b      	movs	r2, #75	; 0x4b
 8008632:	23f0      	movs	r3, #240	; 0xf0
 8008634:	4629      	mov	r1, r5
 8008636:	f7fa ffde 	bl	80035f6 <_ZN8touchgfx8Drawable11setPositionEssss>
 800863a:	9b03      	ldr	r3, [sp, #12]
 800863c:	f8c4 3464 	str.w	r3, [r4, #1124]	; 0x464
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8008640:	22a0      	movs	r2, #160	; 0xa0
 8008642:	4611      	mov	r1, r2
 8008644:	ee18 0a10 	vmov	r0, s16
 8008648:	f8c4 84b8 	str.w	r8, [r4, #1208]	; 0x4b8
        color565 = LCD16bpp::getNativeColor(painterColor);
 800864c:	f8a4 84bc 	strh.w	r8, [r4, #1212]	; 0x4bc
 8008650:	f00c faa0 	bl	8014b94 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8008654:	ee18 0a10 	vmov	r0, s16
 8008658:	22a0      	movs	r2, #160	; 0xa0
 800865a:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 800865e:	f00c faa4 	bl	8014baa <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8008662:	f8d4 3478 	ldr.w	r3, [r4, #1144]	; 0x478
 8008666:	2b20      	cmp	r3, #32
 8008668:	d006      	beq.n	8008678 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x594>
        lineWidthQ5 = widthQ5;
 800866a:	2320      	movs	r3, #32
        updateCachedShape();
 800866c:	ee18 0a10 	vmov	r0, s16
        lineWidthQ5 = widthQ5;
 8008670:	f8c4 3478 	str.w	r3, [r4, #1144]	; 0x478
        updateCachedShape();
 8008674:	f00c f998 	bl	80149a8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8008678:	ee18 0a10 	vmov	r0, s16
 800867c:	2101      	movs	r1, #1
 800867e:	f00c fa9f 	bl	8014bc0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8008682:	ee18 1a10 	vmov	r1, s16
 8008686:	4630      	mov	r0, r6
 8008688:	f00a f8a2 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 800868c:	f04f 38ff 	mov.w	r8, #4294967295
    textArea_menu.setXY(23, 60);
 8008690:	223c      	movs	r2, #60	; 0x3c
 8008692:	ee19 0a10 	vmov	r0, s18
 8008696:	2117      	movs	r1, #23
        linespace = space;
 8008698:	f04f 0900 	mov.w	r9, #0
        boundingArea = calculateBoundingArea();
 800869c:	ad06      	add	r5, sp, #24
 800869e:	f7fa ff9d 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 80086a2:	ee19 1a10 	vmov	r1, s18
 80086a6:	4628      	mov	r0, r5
        color = newColor;
 80086a8:	f8c4 84f0 	str.w	r8, [r4, #1264]	; 0x4f0
        linespace = space;
 80086ac:	f8a4 94f4 	strh.w	r9, [r4, #1268]	; 0x4f4
        boundingArea = calculateBoundingArea();
 80086b0:	f00c fc1c 	bl	8014eec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80086b4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80086b8:	ee19 3a10 	vmov	r3, s18
 80086bc:	333c      	adds	r3, #60	; 0x3c
 80086be:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80086c2:	4f4b      	ldr	r7, [pc, #300]	; (80087f0 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x70c>)
 80086c4:	970c      	str	r7, [sp, #48]	; 0x30
 80086c6:	2348      	movs	r3, #72	; 0x48
    textArea_menu.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TF2A));
 80086c8:	ee19 0a10 	vmov	r0, s18
 80086cc:	a90c      	add	r1, sp, #48	; 0x30
 80086ce:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80086d2:	f00c fea5 	bl	8015420 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80086d6:	ee19 1a10 	vmov	r1, s18
 80086da:	4630      	mov	r0, r6
 80086dc:	f00a f878 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80086e0:	230a      	movs	r3, #10
 80086e2:	ee18 0a90 	vmov	r0, s17
 80086e6:	9300      	str	r3, [sp, #0]
 80086e8:	2232      	movs	r2, #50	; 0x32
 80086ea:	23f0      	movs	r3, #240	; 0xf0
 80086ec:	4649      	mov	r1, r9
 80086ee:	f7fa ff82 	bl	80035f6 <_ZN8touchgfx8Drawable11setPositionEssss>
 80086f2:	9b04      	ldr	r3, [sp, #16]
 80086f4:	f8c4 3530 	str.w	r3, [r4, #1328]	; 0x530
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80086f8:	22a0      	movs	r2, #160	; 0xa0
 80086fa:	4611      	mov	r1, r2
 80086fc:	ee18 0a90 	vmov	r0, s17
 8008700:	f8c4 8584 	str.w	r8, [r4, #1412]	; 0x584
 8008704:	f8a4 8588 	strh.w	r8, [r4, #1416]	; 0x588
 8008708:	f00c fa44 	bl	8014b94 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800870c:	ee18 0a90 	vmov	r0, s17
 8008710:	22a0      	movs	r2, #160	; 0xa0
 8008712:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8008716:	f00c fa48 	bl	8014baa <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800871a:	f8d4 3544 	ldr.w	r3, [r4, #1348]	; 0x544
 800871e:	2b20      	cmp	r3, #32
 8008720:	d006      	beq.n	8008730 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x64c>
        lineWidthQ5 = widthQ5;
 8008722:	2320      	movs	r3, #32
        updateCachedShape();
 8008724:	ee18 0a90 	vmov	r0, s17
        lineWidthQ5 = widthQ5;
 8008728:	f8c4 3544 	str.w	r3, [r4, #1348]	; 0x544
        updateCachedShape();
 800872c:	f00c f93c 	bl	80149a8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8008730:	ee18 0a90 	vmov	r0, s17
 8008734:	2101      	movs	r1, #1
 8008736:	f00c fa43 	bl	8014bc0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800873a:	ee18 1a90 	vmov	r1, s17
 800873e:	4630      	mov	r0, r6
 8008740:	f00a f846 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8008744:	f04f 39ff 	mov.w	r9, #4294967295
    textArea_name.setXY(69, 35);
 8008748:	ee19 0a90 	vmov	r0, s19
 800874c:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 800874e:	f04f 0800 	mov.w	r8, #0
 8008752:	2145      	movs	r1, #69	; 0x45
 8008754:	f7fa ff42 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8008758:	ee19 1a90 	vmov	r1, s19
 800875c:	4628      	mov	r0, r5
        color = newColor;
 800875e:	f8c4 95bc 	str.w	r9, [r4, #1468]	; 0x5bc
        linespace = space;
 8008762:	f8a4 85c0 	strh.w	r8, [r4, #1472]	; 0x5c0
        boundingArea = calculateBoundingArea();
 8008766:	f00c fbc1 	bl	8014eec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800876a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800876e:	ee19 3a90 	vmov	r3, s19
 8008772:	333c      	adds	r3, #60	; 0x3c
 8008774:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008778:	2349      	movs	r3, #73	; 0x49
    textArea_name.setTypedText(touchgfx::TypedText(T___SINGLEUSE_A08K));
 800877a:	ee19 0a90 	vmov	r0, s19
 800877e:	a90c      	add	r1, sp, #48	; 0x30
 8008780:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8008784:	970c      	str	r7, [sp, #48]	; 0x30
 8008786:	f00c fe4b 	bl	8015420 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800878a:	ee19 1a90 	vmov	r1, s19
 800878e:	4630      	mov	r0, r6
 8008790:	f00a f81e 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_title.setXY(54, 12);
 8008794:	ee1a 0a10 	vmov	r0, s20
 8008798:	220c      	movs	r2, #12
 800879a:	2136      	movs	r1, #54	; 0x36
 800879c:	f7fa ff1e 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 80087a0:	ee1a 1a10 	vmov	r1, s20
 80087a4:	4628      	mov	r0, r5
        color = newColor;
 80087a6:	f8c4 9604 	str.w	r9, [r4, #1540]	; 0x604
        linespace = space;
 80087aa:	f8a4 8608 	strh.w	r8, [r4, #1544]	; 0x608
        boundingArea = calculateBoundingArea();
 80087ae:	f00c fb9d 	bl	8014eec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80087b2:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80087b6:	ee1a 3a10 	vmov	r3, s20
 80087ba:	333c      	adds	r3, #60	; 0x3c
 80087bc:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80087c0:	234a      	movs	r3, #74	; 0x4a
    textArea_title.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IJWA));
 80087c2:	ee1a 0a10 	vmov	r0, s20
 80087c6:	a90c      	add	r1, sp, #48	; 0x30
 80087c8:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80087cc:	970c      	str	r7, [sp, #48]	; 0x30
 80087ce:	f00c fe27 	bl	8015420 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80087d2:	4630      	mov	r0, r6
 80087d4:	ee1a 1a10 	vmov	r1, s20
 80087d8:	f009 fffa 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80087dc:	4620      	mov	r0, r4
 80087de:	b00f      	add	sp, #60	; 0x3c
 80087e0:	ecbd 8b0a 	vpop	{d8-d12}
 80087e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80087e8:	200138b0 	.word	0x200138b0
 80087ec:	0802f3e1 	.word	0x0802f3e1
 80087f0:	0802f454 	.word	0x0802f454
 80087f4:	200138a8 	.word	0x200138a8

080087f8 <_ZN26Measurement_SingleViewBase11setupScreenEv>:
}

void Measurement_SingleViewBase::setupScreen()
{

}
 80087f8:	4770      	bx	lr

080087fa <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80087fa:	4770      	bx	lr

080087fc <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80087fc:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80087fe:	68c2      	ldr	r2, [r0, #12]
 8008800:	6844      	ldr	r4, [r0, #4]
 8008802:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8008804:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8008806:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800880a:	07d2      	lsls	r2, r2, #31
 800880c:	bf48      	it	mi
 800880e:	5962      	ldrmi	r2, [r4, r5]
 8008810:	689b      	ldr	r3, [r3, #8]
    }
 8008812:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8008814:	bf48      	it	mi
 8008816:	58d3      	ldrmi	r3, [r2, r3]
 8008818:	4718      	bx	r3

0800881a <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 800881a:	6843      	ldr	r3, [r0, #4]
 800881c:	b12b      	cbz	r3, 800882a <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800881e:	6883      	ldr	r3, [r0, #8]
 8008820:	b92b      	cbnz	r3, 800882e <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8008822:	68c0      	ldr	r0, [r0, #12]
 8008824:	f000 0001 	and.w	r0, r0, #1
 8008828:	4770      	bx	lr
 800882a:	4618      	mov	r0, r3
 800882c:	4770      	bx	lr
 800882e:	2001      	movs	r0, #1
    }
 8008830:	4770      	bx	lr

08008832 <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8008832:	b510      	push	{r4, lr}
 8008834:	2110      	movs	r1, #16
 8008836:	4604      	mov	r4, r0
 8008838:	f024 f957 	bl	802caea <_ZdlPvj>
 800883c:	4620      	mov	r0, r4
 800883e:	bd10      	pop	{r4, pc}

08008840 <_ZN26Measurement_SingleViewBaseD1Ev>:
Measurement_SingleViewBase::~Measurement_SingleViewBase()
 8008840:	b510      	push	{r4, lr}
 8008842:	4b03      	ldr	r3, [pc, #12]	; (8008850 <_ZN26Measurement_SingleViewBaseD1Ev+0x10>)
 8008844:	6003      	str	r3, [r0, #0]
 8008846:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8008848:	f00e fb98 	bl	8016f7c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 800884c:	4620      	mov	r0, r4
 800884e:	bd10      	pop	{r4, pc}
 8008850:	08030b70 	.word	0x08030b70

08008854 <_ZN26Measurement_SingleViewBaseD0Ev>:
Measurement_SingleViewBase::~Measurement_SingleViewBase()
 8008854:	b507      	push	{r0, r1, r2, lr}
 8008856:	4b07      	ldr	r3, [pc, #28]	; (8008874 <_ZN26Measurement_SingleViewBaseD0Ev+0x20>)
 8008858:	6003      	str	r3, [r0, #0]
 800885a:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800885c:	f00e fb8e 	bl	8016f7c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8008860:	9801      	ldr	r0, [sp, #4]
 8008862:	f241 11c4 	movw	r1, #4548	; 0x11c4
 8008866:	f024 f940 	bl	802caea <_ZdlPvj>
 800886a:	9801      	ldr	r0, [sp, #4]
 800886c:	b003      	add	sp, #12
 800886e:	f85d fb04 	ldr.w	pc, [sp], #4
 8008872:	bf00      	nop
 8008874:	08030b70 	.word	0x08030b70

08008878 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_SingleViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8008878:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel_Return)
 800887a:	f100 03e4 	add.w	r3, r0, #228	; 0xe4
 800887e:	4299      	cmp	r1, r3
{
 8008880:	4604      	mov	r4, r0
 8008882:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel_Return)
 8008884:	d103      	bne.n	800888e <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_SingleViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8008886:	f010 f87b 	bl	8018980 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel_Return clicked change screen to Measurement
        //Go to Measurement with screen transition towards West
        application().gotoMeasurementScreenWipeTransitionWest();
 800888a:	f7fc fe79 	bl	8005580 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel_1Phase)
 800888e:	f504 73ba 	add.w	r3, r4, #372	; 0x174
 8008892:	429d      	cmp	r5, r3
 8008894:	d103      	bne.n	800889e <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8008896:	f010 f873 	bl	8018980 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel_1Phase clicked change screen to Measurement_Single_Display_1P
        //Go to Measurement_Single_Display_1P with screen transition towards East
        application().gotoMeasurement_Single_Display_1PScreenWipeTransitionEast();
 800889a:	f7fc fe91 	bl	80055c0 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel_3Phase)
 800889e:	f504 7496 	add.w	r4, r4, #300	; 0x12c
 80088a2:	42a5      	cmp	r5, r4
 80088a4:	d105      	bne.n	80088b2 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 80088a6:	f010 f86b 	bl	8018980 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel_3Phase clicked change screen to Measurement_Single_Display_3P
        //Go to Measurement_Single_Display_3P with screen transition towards East
        application().gotoMeasurement_Single_Display_3PScreenWipeTransitionEast();
    }
}
 80088aa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_Single_Display_3PScreenWipeTransitionEast();
 80088ae:	f7fc be97 	b.w	80055e0 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv>
}
 80088b2:	bd38      	pop	{r3, r4, r5, pc}

080088b4 <_ZN26Measurement_SingleViewBaseC1Ev>:
Measurement_SingleViewBase::Measurement_SingleViewBase() :
 80088b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80088b8:	ed2d 8b06 	vpush	{d8-d10}
 80088bc:	4604      	mov	r4, r0
 80088be:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_SingleViewBase::buttonCallbackHandler)
 80088c0:	46a2      	mov	sl, r4
 80088c2:	2500      	movs	r5, #0
 80088c4:	f011 fcdc 	bl	801a280 <_ZN8touchgfx6ScreenC1Ev>
 80088c8:	4b71      	ldr	r3, [pc, #452]	; (8008a90 <_ZN26Measurement_SingleViewBaseC1Ev+0x1dc>)
 80088ca:	63e5      	str	r5, [r4, #60]	; 0x3c
 80088cc:	f84a 3b40 	str.w	r3, [sl], #64
        : Widget(), alpha(255), color(0)
 80088d0:	2226      	movs	r2, #38	; 0x26
 80088d2:	4629      	mov	r1, r5
 80088d4:	4650      	mov	r0, sl
 80088d6:	f025 f9f4 	bl	802dcc2 <memset>
 80088da:	4650      	mov	r0, sl
 80088dc:	f7fa feb0 	bl	8003640 <_ZN8touchgfx6WidgetC1Ev>
 80088e0:	f104 096c 	add.w	r9, r4, #108	; 0x6c
 80088e4:	26ff      	movs	r6, #255	; 0xff
 80088e6:	4b6b      	ldr	r3, [pc, #428]	; (8008a94 <_ZN26Measurement_SingleViewBaseC1Ev+0x1e0>)
 80088e8:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 80088ea:	2226      	movs	r2, #38	; 0x26
 80088ec:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80088f0:	4629      	mov	r1, r5
 80088f2:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80088f6:	4648      	mov	r0, r9
 80088f8:	66a5      	str	r5, [r4, #104]	; 0x68
 80088fa:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80088fe:	f025 f9e0 	bl	802dcc2 <memset>
 8008902:	4648      	mov	r0, r9
 8008904:	f7fa fe9c 	bl	8003640 <_ZN8touchgfx6WidgetC1Ev>
 8008908:	4b63      	ldr	r3, [pc, #396]	; (8008a98 <_ZN26Measurement_SingleViewBaseC1Ev+0x1e4>)
 800890a:	66e3      	str	r3, [r4, #108]	; 0x6c
 800890c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8008910:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8008914:	a90a      	add	r1, sp, #40	; 0x28
 8008916:	4648      	mov	r0, r9
 8008918:	f104 0898 	add.w	r8, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 800891c:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8008920:	f00d fb2f 	bl	8015f82 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8008924:	4640      	mov	r0, r8
 8008926:	f7fa feef 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 800892a:	4b5c      	ldr	r3, [pc, #368]	; (8008a9c <_ZN26Measurement_SingleViewBaseC1Ev+0x1e8>)
 800892c:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8008930:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 8008934:	4618      	mov	r0, r3
 8008936:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 800893a:	ee09 3a90 	vmov	s19, r3
 800893e:	f00d fc57 	bl	80161f0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8008942:	f504 7396 	add.w	r3, r4, #300	; 0x12c
 8008946:	4618      	mov	r0, r3
 8008948:	ee0a 3a10 	vmov	s20, r3
 800894c:	f00d fc50 	bl	80161f0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8008950:	f504 73ba 	add.w	r3, r4, #372	; 0x174
 8008954:	4618      	mov	r0, r3
 8008956:	f504 77de 	add.w	r7, r4, #444	; 0x1bc
 800895a:	ee0a 3a90 	vmov	s21, r3
 800895e:	f00d fc47 	bl	80161f0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8008962:	4638      	mov	r0, r7
 8008964:	f00c f800 	bl	8014968 <_ZN8touchgfx4LineC1Ev>
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8008968:	4e4d      	ldr	r6, [pc, #308]	; (8008aa0 <_ZN26Measurement_SingleViewBaseC1Ev+0x1ec>)
 800896a:	f504 730b 	add.w	r3, r4, #556	; 0x22c
 800896e:	4618      	mov	r0, r3
 8008970:	9302      	str	r3, [sp, #8]
 8008972:	f7fa fc69 	bl	8003248 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8008976:	f106 0324 	add.w	r3, r6, #36	; 0x24
 800897a:	f8c4 3234 	str.w	r3, [r4, #564]	; 0x234
 800897e:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8008982:	4618      	mov	r0, r3
 8008984:	f8c4 622c 	str.w	r6, [r4, #556]	; 0x22c
 8008988:	f8c4 5238 	str.w	r5, [r4, #568]	; 0x238
 800898c:	f504 7b22 	add.w	fp, r4, #648	; 0x288
 8008990:	ee08 3a10 	vmov	s16, r3
 8008994:	f7fa feb8 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
 8008998:	4658      	mov	r0, fp
 800899a:	f00b ffe5 	bl	8014968 <_ZN8touchgfx4LineC1Ev>
 800899e:	f504 733e 	add.w	r3, r4, #760	; 0x2f8
 80089a2:	4618      	mov	r0, r3
 80089a4:	9303      	str	r3, [sp, #12]
 80089a6:	f7fa fc4f 	bl	8003248 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80089aa:	f106 0324 	add.w	r3, r6, #36	; 0x24
 80089ae:	f8c4 3300 	str.w	r3, [r4, #768]	; 0x300
 80089b2:	f504 7343 	add.w	r3, r4, #780	; 0x30c
 80089b6:	f8c4 62f8 	str.w	r6, [r4, #760]	; 0x2f8
 80089ba:	4618      	mov	r0, r3
 80089bc:	f8c4 5304 	str.w	r5, [r4, #772]	; 0x304
 80089c0:	ee08 3a90 	vmov	s17, r3
 80089c4:	f7fa fea0 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
 80089c8:	f504 7355 	add.w	r3, r4, #852	; 0x354
 80089cc:	4618      	mov	r0, r3
 80089ce:	ee09 3a10 	vmov	s18, r3
 80089d2:	f7fa fe99 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80089d6:	4a33      	ldr	r2, [pc, #204]	; (8008aa4 <_ZN26Measurement_SingleViewBaseC1Ev+0x1f0>)
 80089d8:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80089dc:	e9c3 246d 	strd	r2, r4, [r3, #436]	; 0x1b4
 80089e0:	4a31      	ldr	r2, [pc, #196]	; (8008aa8 <_ZN26Measurement_SingleViewBaseC1Ev+0x1f4>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80089e2:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80089e6:	e9c3 256f 	strd	r2, r5, [r3, #444]	; 0x1bc
 80089ea:	f504 7069 	add.w	r0, r4, #932	; 0x3a4
 80089ee:	f00e fabb 	bl	8016f68 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80089f2:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80089f6:	462a      	mov	r2, r5
 80089f8:	4650      	mov	r0, sl
 80089fa:	9300      	str	r3, [sp, #0]
 80089fc:	4629      	mov	r1, r5
 80089fe:	23f0      	movs	r3, #240	; 0xf0
 8008a00:	f7fa fdf9 	bl	80035f6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8008a04:	1d26      	adds	r6, r4, #4
        color = newColor;
 8008a06:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8008a0a:	66a3      	str	r3, [r4, #104]	; 0x68
 8008a0c:	4651      	mov	r1, sl
 8008a0e:	4630      	mov	r0, r6
 8008a10:	f009 fede 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image_background.setXY(0, 0);
 8008a14:	462a      	mov	r2, r5
 8008a16:	4648      	mov	r0, r9
 8008a18:	4629      	mov	r1, r5
 8008a1a:	f7fa fddf 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8008a1e:	2308      	movs	r3, #8
    image_background.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8008a20:	4648      	mov	r0, r9
 8008a22:	a90a      	add	r1, sp, #40	; 0x28
 8008a24:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8008a28:	f00d faab 	bl	8015f82 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8008a2c:	4649      	mov	r1, r9
 8008a2e:	4630      	mov	r0, r6
 8008a30:	f009 fece 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_auto_off.setXY(86, 308);
 8008a34:	f44f 729a 	mov.w	r2, #308	; 0x134
 8008a38:	2156      	movs	r1, #86	; 0x56
 8008a3a:	4640      	mov	r0, r8
 8008a3c:	f7fa fdce 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8008a40:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8008a44:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8008a48:	f10d 0910 	add.w	r9, sp, #16
        color = newColor;
 8008a4c:	f04f 3aff 	mov.w	sl, #4294967295
        boundingArea = calculateBoundingArea();
 8008a50:	4648      	mov	r0, r9
 8008a52:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8008a56:	f8c4 a0c8 	str.w	sl, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8008a5a:	4641      	mov	r1, r8
 8008a5c:	4798      	blx	r3
 8008a5e:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 8008a62:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8008a66:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8008a6a:	4b10      	ldr	r3, [pc, #64]	; (8008aac <_ZN26Measurement_SingleViewBaseC1Ev+0x1f8>)
 8008a6c:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_DTDC).getText());
 8008a6e:	f504 7967 	add.w	r9, r4, #924	; 0x39c
 8008a72:	b92b      	cbnz	r3, 8008a80 <_ZN26Measurement_SingleViewBaseC1Ev+0x1cc>
 8008a74:	4b0e      	ldr	r3, [pc, #56]	; (8008ab0 <_ZN26Measurement_SingleViewBaseC1Ev+0x1fc>)
 8008a76:	4a0f      	ldr	r2, [pc, #60]	; (8008ab4 <_ZN26Measurement_SingleViewBaseC1Ev+0x200>)
 8008a78:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8008a7a:	480f      	ldr	r0, [pc, #60]	; (8008ab8 <_ZN26Measurement_SingleViewBaseC1Ev+0x204>)
 8008a7c:	f024 ff1c 	bl	802d8b8 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8008a80:	4b0e      	ldr	r3, [pc, #56]	; (8008abc <_ZN26Measurement_SingleViewBaseC1Ev+0x208>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8008a82:	881b      	ldrh	r3, [r3, #0]
 8008a84:	2b42      	cmp	r3, #66	; 0x42
 8008a86:	d81d      	bhi.n	8008ac4 <_ZN26Measurement_SingleViewBaseC1Ev+0x210>
 8008a88:	4b0d      	ldr	r3, [pc, #52]	; (8008ac0 <_ZN26Measurement_SingleViewBaseC1Ev+0x20c>)
 8008a8a:	4a0a      	ldr	r2, [pc, #40]	; (8008ab4 <_ZN26Measurement_SingleViewBaseC1Ev+0x200>)
 8008a8c:	2161      	movs	r1, #97	; 0x61
 8008a8e:	e7f4      	b.n	8008a7a <_ZN26Measurement_SingleViewBaseC1Ev+0x1c6>
 8008a90:	08030b70 	.word	0x08030b70
 8008a94:	080319a8 	.word	0x080319a8
 8008a98:	08031bf4 	.word	0x08031bf4
 8008a9c:	0802f4f4 	.word	0x0802f4f4
 8008aa0:	080316dc 	.word	0x080316dc
 8008aa4:	08030b58 	.word	0x08030b58
 8008aa8:	08008879 	.word	0x08008879
 8008aac:	200138a4 	.word	0x200138a4
 8008ab0:	0802f2a4 	.word	0x0802f2a4
 8008ab4:	0802f3a9 	.word	0x0802f3a9
 8008ab8:	0802f321 	.word	0x0802f321
 8008abc:	200138a8 	.word	0x200138a8
 8008ac0:	0802f368 	.word	0x0802f368
        return texts->getText(typedTextId);
 8008ac4:	4bad      	ldr	r3, [pc, #692]	; (8008d7c <_ZN26Measurement_SingleViewBaseC1Ev+0x4c8>)
 8008ac6:	2142      	movs	r1, #66	; 0x42
 8008ac8:	6818      	ldr	r0, [r3, #0]
 8008aca:	f001 fdc5 	bl	800a658 <_ZNK8touchgfx5Texts7getTextEt>
 8008ace:	4aac      	ldr	r2, [pc, #688]	; (8008d80 <_ZN26Measurement_SingleViewBaseC1Ev+0x4cc>)
 8008ad0:	4603      	mov	r3, r0
 8008ad2:	2104      	movs	r1, #4
 8008ad4:	4648      	mov	r0, r9
 8008ad6:	f013 f901 	bl	801bcdc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea_auto_off.resizeToCurrentText();
 8008ada:	4640      	mov	r0, r8
        wc1 = value;
 8008adc:	f8c4 90e0 	str.w	r9, [r4, #224]	; 0xe0
 8008ae0:	f00c fc7e 	bl	80153e0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8008ae4:	4ba7      	ldr	r3, [pc, #668]	; (8008d84 <_ZN26Measurement_SingleViewBaseC1Ev+0x4d0>)
 8008ae6:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_auto_off.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VDD5));
 8008ae8:	4640      	mov	r0, r8
 8008aea:	2343      	movs	r3, #67	; 0x43
 8008aec:	a90a      	add	r1, sp, #40	; 0x28
 8008aee:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008af2:	f00c fc95 	bl	8015420 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008af6:	4641      	mov	r1, r8
 8008af8:	4630      	mov	r0, r6
 8008afa:	f009 fe69 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_Return.setXY(33, 240);
 8008afe:	ee19 0a90 	vmov	r0, s19
 8008b02:	22f0      	movs	r2, #240	; 0xf0
 8008b04:	2121      	movs	r1, #33	; 0x21
 8008b06:	f7fa fd69 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8008b0a:	f04f 0802 	mov.w	r8, #2
 8008b0e:	2303      	movs	r3, #3
    buttonWithLabel_Return.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8008b10:	a909      	add	r1, sp, #36	; 0x24
 8008b12:	ee19 0a90 	vmov	r0, s19
 8008b16:	aa0a      	add	r2, sp, #40	; 0x28
 8008b18:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8008b1c:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel_Return.setAction(buttonCallback);
 8008b20:	f504 598d 	add.w	r9, r4, #4512	; 0x11a0
    buttonWithLabel_Return.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8008b24:	f00d f837 	bl	8015b96 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8008b28:	2263      	movs	r2, #99	; 0x63
 8008b2a:	f8a4 211c 	strh.w	r2, [r4, #284]	; 0x11c
    buttonWithLabel_Return.setAction(buttonCallback);
 8008b2e:	f109 0914 	add.w	r9, r9, #20
        updateTextPosition();
 8008b32:	ee19 0a90 	vmov	r0, s19
 8008b36:	f7fa fd95 	bl	8003664 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8008b3a:	ee19 1a90 	vmov	r1, s19
 8008b3e:	4630      	mov	r0, r6
        colorPressed = col;
 8008b40:	e9c4 aa48 	strd	sl, sl, [r4, #288]	; 0x120
 8008b44:	f8c4 910c 	str.w	r9, [r4, #268]	; 0x10c
 8008b48:	f009 fe42 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_3Phase.setXY(33, 170);
 8008b4c:	ee1a 0a10 	vmov	r0, s20
 8008b50:	22aa      	movs	r2, #170	; 0xaa
 8008b52:	2121      	movs	r1, #33	; 0x21
 8008b54:	f7fa fd42 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8008b58:	2303      	movs	r3, #3
    buttonWithLabel_3Phase.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8008b5a:	a909      	add	r1, sp, #36	; 0x24
 8008b5c:	ee1a 0a10 	vmov	r0, s20
 8008b60:	aa0a      	add	r2, sp, #40	; 0x28
 8008b62:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8008b66:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8008b6a:	f00d f814 	bl	8015b96 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8008b6e:	2262      	movs	r2, #98	; 0x62
 8008b70:	f8a4 2164 	strh.w	r2, [r4, #356]	; 0x164
        updateTextPosition();
 8008b74:	ee1a 0a10 	vmov	r0, s20
 8008b78:	f7fa fd74 	bl	8003664 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8008b7c:	ee1a 1a10 	vmov	r1, s20
 8008b80:	4630      	mov	r0, r6
        colorPressed = col;
 8008b82:	e9c4 aa5a 	strd	sl, sl, [r4, #360]	; 0x168
 8008b86:	f8c4 9154 	str.w	r9, [r4, #340]	; 0x154
 8008b8a:	f009 fe21 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_1Phase.setXY(33, 100);
 8008b8e:	ee1a 0a90 	vmov	r0, s21
 8008b92:	2264      	movs	r2, #100	; 0x64
 8008b94:	2121      	movs	r1, #33	; 0x21
 8008b96:	f7fa fd21 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel_1Phase.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8008b9a:	aa0a      	add	r2, sp, #40	; 0x28
 8008b9c:	2303      	movs	r3, #3
 8008b9e:	a909      	add	r1, sp, #36	; 0x24
 8008ba0:	ee1a 0a90 	vmov	r0, s21
 8008ba4:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8008ba8:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8008bac:	f00c fff3 	bl	8015b96 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8008bb0:	2361      	movs	r3, #97	; 0x61
 8008bb2:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
        updateTextPosition();
 8008bb6:	ee1a 0a90 	vmov	r0, s21
 8008bba:	f7fa fd53 	bl	8003664 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8008bbe:	ee1a 1a90 	vmov	r1, s21
 8008bc2:	4630      	mov	r0, r6
        colorPressed = col;
 8008bc4:	e9c4 aa6c 	strd	sl, sl, [r4, #432]	; 0x1b0
 8008bc8:	f8c4 919c 	str.w	r9, [r4, #412]	; 0x19c
 8008bcc:	f009 fe00 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line2.setPosition(0, 75, 240, 10);
 8008bd0:	230a      	movs	r3, #10
 8008bd2:	9300      	str	r3, [sp, #0]
 8008bd4:	224b      	movs	r2, #75	; 0x4b
 8008bd6:	23f0      	movs	r3, #240	; 0xf0
 8008bd8:	4629      	mov	r1, r5
 8008bda:	4638      	mov	r0, r7
 8008bdc:	f7fa fd0b 	bl	80035f6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8008be0:	9b02      	ldr	r3, [sp, #8]
 8008be2:	f8c4 31e4 	str.w	r3, [r4, #484]	; 0x1e4
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8008be6:	22a0      	movs	r2, #160	; 0xa0
 8008be8:	4611      	mov	r1, r2
 8008bea:	4638      	mov	r0, r7
 8008bec:	f8c4 a238 	str.w	sl, [r4, #568]	; 0x238
        color565 = LCD16bpp::getNativeColor(painterColor);
 8008bf0:	f8a4 a23c 	strh.w	sl, [r4, #572]	; 0x23c
 8008bf4:	f00b ffce 	bl	8014b94 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8008bf8:	22a0      	movs	r2, #160	; 0xa0
 8008bfa:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8008bfe:	4638      	mov	r0, r7
 8008c00:	f00b ffd3 	bl	8014baa <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8008c04:	f8d4 31f8 	ldr.w	r3, [r4, #504]	; 0x1f8
 8008c08:	2b20      	cmp	r3, #32
 8008c0a:	d005      	beq.n	8008c18 <_ZN26Measurement_SingleViewBaseC1Ev+0x364>
        lineWidthQ5 = widthQ5;
 8008c0c:	2320      	movs	r3, #32
 8008c0e:	f8c4 31f8 	str.w	r3, [r4, #504]	; 0x1f8
        updateCachedShape();
 8008c12:	4638      	mov	r0, r7
 8008c14:	f00b fec8 	bl	80149a8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8008c18:	4638      	mov	r0, r7
 8008c1a:	2101      	movs	r1, #1
 8008c1c:	f00b ffd0 	bl	8014bc0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8008c20:	4639      	mov	r1, r7
 8008c22:	4630      	mov	r0, r6
 8008c24:	f009 fdd4 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8008c28:	f04f 37ff 	mov.w	r7, #4294967295
    textArea_menu.setXY(41, 60);
 8008c2c:	223c      	movs	r2, #60	; 0x3c
 8008c2e:	ee18 0a10 	vmov	r0, s16
 8008c32:	2129      	movs	r1, #41	; 0x29
        linespace = space;
 8008c34:	f04f 0800 	mov.w	r8, #0
        boundingArea = calculateBoundingArea();
 8008c38:	ad04      	add	r5, sp, #16
 8008c3a:	f7fa fccf 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8008c3e:	ee18 1a10 	vmov	r1, s16
 8008c42:	4628      	mov	r0, r5
        color = newColor;
 8008c44:	f8c4 7270 	str.w	r7, [r4, #624]	; 0x270
        linespace = space;
 8008c48:	f8a4 8274 	strh.w	r8, [r4, #628]	; 0x274
        boundingArea = calculateBoundingArea();
 8008c4c:	f00c f94e 	bl	8014eec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008c50:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008c54:	ee18 3a10 	vmov	r3, s16
 8008c58:	333c      	adds	r3, #60	; 0x3c
 8008c5a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8008c5e:	4b49      	ldr	r3, [pc, #292]	; (8008d84 <_ZN26Measurement_SingleViewBaseC1Ev+0x4d0>)
 8008c60:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_menu.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1QNY));
 8008c62:	ee18 0a10 	vmov	r0, s16
 8008c66:	2352      	movs	r3, #82	; 0x52
 8008c68:	a90a      	add	r1, sp, #40	; 0x28
 8008c6a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008c6e:	f00c fbd7 	bl	8015420 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008c72:	ee18 1a10 	vmov	r1, s16
 8008c76:	4630      	mov	r0, r6
 8008c78:	f009 fdaa 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8008c7c:	230a      	movs	r3, #10
 8008c7e:	9300      	str	r3, [sp, #0]
 8008c80:	2232      	movs	r2, #50	; 0x32
 8008c82:	23f0      	movs	r3, #240	; 0xf0
 8008c84:	4641      	mov	r1, r8
 8008c86:	4658      	mov	r0, fp
 8008c88:	f7fa fcb5 	bl	80035f6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8008c8c:	9b03      	ldr	r3, [sp, #12]
 8008c8e:	f8c4 32b0 	str.w	r3, [r4, #688]	; 0x2b0
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8008c92:	22a0      	movs	r2, #160	; 0xa0
 8008c94:	4611      	mov	r1, r2
 8008c96:	4658      	mov	r0, fp
 8008c98:	f8c4 7304 	str.w	r7, [r4, #772]	; 0x304
 8008c9c:	f8a4 7308 	strh.w	r7, [r4, #776]	; 0x308
 8008ca0:	f00b ff78 	bl	8014b94 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8008ca4:	22a0      	movs	r2, #160	; 0xa0
 8008ca6:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8008caa:	4658      	mov	r0, fp
 8008cac:	f00b ff7d 	bl	8014baa <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8008cb0:	f8d4 32c4 	ldr.w	r3, [r4, #708]	; 0x2c4
 8008cb4:	2b20      	cmp	r3, #32
 8008cb6:	d005      	beq.n	8008cc4 <_ZN26Measurement_SingleViewBaseC1Ev+0x410>
        lineWidthQ5 = widthQ5;
 8008cb8:	2320      	movs	r3, #32
 8008cba:	f8c4 32c4 	str.w	r3, [r4, #708]	; 0x2c4
        updateCachedShape();
 8008cbe:	4658      	mov	r0, fp
 8008cc0:	f00b fe72 	bl	80149a8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8008cc4:	4658      	mov	r0, fp
 8008cc6:	2101      	movs	r1, #1
 8008cc8:	f00b ff7a 	bl	8014bc0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8008ccc:	4659      	mov	r1, fp
 8008cce:	4630      	mov	r0, r6
 8008cd0:	f009 fd7e 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8008cd4:	f04f 38ff 	mov.w	r8, #4294967295
    textArea_name.setXY(69, 35);
 8008cd8:	ee18 0a90 	vmov	r0, s17
 8008cdc:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 8008cde:	2700      	movs	r7, #0
 8008ce0:	2145      	movs	r1, #69	; 0x45
 8008ce2:	f7fa fc7b 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8008ce6:	ee18 1a90 	vmov	r1, s17
 8008cea:	4628      	mov	r0, r5
        color = newColor;
 8008cec:	f8c4 833c 	str.w	r8, [r4, #828]	; 0x33c
        linespace = space;
 8008cf0:	f8a4 7340 	strh.w	r7, [r4, #832]	; 0x340
        boundingArea = calculateBoundingArea();
 8008cf4:	f00c f8fa 	bl	8014eec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008cf8:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008cfc:	ee18 3a90 	vmov	r3, s17
 8008d00:	333c      	adds	r3, #60	; 0x3c
 8008d02:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008d06:	4b1f      	ldr	r3, [pc, #124]	; (8008d84 <_ZN26Measurement_SingleViewBaseC1Ev+0x4d0>)
 8008d08:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_name.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T0FJ));
 8008d0a:	ee18 0a90 	vmov	r0, s17
 8008d0e:	2311      	movs	r3, #17
 8008d10:	a90a      	add	r1, sp, #40	; 0x28
 8008d12:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008d16:	f00c fb83 	bl	8015420 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008d1a:	ee18 1a90 	vmov	r1, s17
 8008d1e:	4630      	mov	r0, r6
 8008d20:	f009 fd56 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_title.setXY(54, 12);
 8008d24:	ee19 0a10 	vmov	r0, s18
 8008d28:	220c      	movs	r2, #12
 8008d2a:	2136      	movs	r1, #54	; 0x36
 8008d2c:	f7fa fc56 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8008d30:	ee19 1a10 	vmov	r1, s18
 8008d34:	4628      	mov	r0, r5
        color = newColor;
 8008d36:	f8c4 8384 	str.w	r8, [r4, #900]	; 0x384
        linespace = space;
 8008d3a:	f8a4 7388 	strh.w	r7, [r4, #904]	; 0x388
        boundingArea = calculateBoundingArea();
 8008d3e:	f00c f8d5 	bl	8014eec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008d42:	ee19 2a10 	vmov	r2, s18
 8008d46:	f102 033c 	add.w	r3, r2, #60	; 0x3c
 8008d4a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008d4e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008d52:	4b0c      	ldr	r3, [pc, #48]	; (8008d84 <_ZN26Measurement_SingleViewBaseC1Ev+0x4d0>)
 8008d54:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_title.setTypedText(touchgfx::TypedText(T___SINGLEUSE_3BUV));
 8008d56:	ee19 0a10 	vmov	r0, s18
 8008d5a:	2310      	movs	r3, #16
 8008d5c:	a90a      	add	r1, sp, #40	; 0x28
 8008d5e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008d62:	f00c fb5d 	bl	8015420 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008d66:	4630      	mov	r0, r6
 8008d68:	ee19 1a10 	vmov	r1, s18
 8008d6c:	f009 fd30 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8008d70:	4620      	mov	r0, r4
 8008d72:	b00d      	add	sp, #52	; 0x34
 8008d74:	ecbd 8b06 	vpop	{d8-d10}
 8008d78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008d7c:	200138b0 	.word	0x200138b0
 8008d80:	0802f3e1 	.word	0x0802f3e1
 8008d84:	0802f454 	.word	0x0802f454

08008d88 <_ZN37Measurement_Single_Display_1PViewBase7testGuiEv>:
     * Virtual Action Handlers
     */
    virtual void testGui()
    {
        // Override and implement this function in Measurement_Single_Display_1P
    }
 8008d88:	4770      	bx	lr

08008d8a <_ZN37Measurement_Single_Display_1PViewBase11setupScreenEv>:
}

void Measurement_Single_Display_1PViewBase::setupScreen()
{

}
 8008d8a:	4770      	bx	lr

08008d8c <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8008d8c:	4770      	bx	lr

08008d8e <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8008d8e:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8008d90:	68c2      	ldr	r2, [r0, #12]
 8008d92:	6844      	ldr	r4, [r0, #4]
 8008d94:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8008d96:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8008d98:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8008d9c:	07d2      	lsls	r2, r2, #31
 8008d9e:	bf48      	it	mi
 8008da0:	5962      	ldrmi	r2, [r4, r5]
 8008da2:	689b      	ldr	r3, [r3, #8]
    }
 8008da4:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8008da6:	bf48      	it	mi
 8008da8:	58d3      	ldrmi	r3, [r2, r3]
 8008daa:	4718      	bx	r3

08008dac <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8008dac:	6843      	ldr	r3, [r0, #4]
 8008dae:	b12b      	cbz	r3, 8008dbc <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8008db0:	6883      	ldr	r3, [r0, #8]
 8008db2:	b92b      	cbnz	r3, 8008dc0 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8008db4:	68c0      	ldr	r0, [r0, #12]
 8008db6:	f000 0001 	and.w	r0, r0, #1
 8008dba:	4770      	bx	lr
 8008dbc:	4618      	mov	r0, r3
 8008dbe:	4770      	bx	lr
 8008dc0:	2001      	movs	r0, #1
    }
 8008dc2:	4770      	bx	lr

08008dc4 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8008dc4:	b510      	push	{r4, lr}
 8008dc6:	2110      	movs	r1, #16
 8008dc8:	4604      	mov	r4, r0
 8008dca:	f023 fe8e 	bl	802caea <_ZdlPvj>
 8008dce:	4620      	mov	r0, r4
 8008dd0:	bd10      	pop	{r4, pc}
	...

08008dd4 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>:
Measurement_Single_Display_1PViewBase::~Measurement_Single_Display_1PViewBase()
 8008dd4:	b510      	push	{r4, lr}
 8008dd6:	4b03      	ldr	r3, [pc, #12]	; (8008de4 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev+0x10>)
 8008dd8:	6003      	str	r3, [r0, #0]
 8008dda:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8008ddc:	f00e f8ce 	bl	8016f7c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8008de0:	4620      	mov	r0, r4
 8008de2:	bd10      	pop	{r4, pc}
 8008de4:	08030bbc 	.word	0x08030bbc

08008de8 <_ZN37Measurement_Single_Display_1PViewBaseD0Ev>:
Measurement_Single_Display_1PViewBase::~Measurement_Single_Display_1PViewBase()
 8008de8:	b507      	push	{r0, r1, r2, lr}
 8008dea:	4b07      	ldr	r3, [pc, #28]	; (8008e08 <_ZN37Measurement_Single_Display_1PViewBaseD0Ev+0x20>)
 8008dec:	6003      	str	r3, [r0, #0]
 8008dee:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8008df0:	f00e f8c4 	bl	8016f7c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8008df4:	9801      	ldr	r0, [sp, #4]
 8008df6:	f241 417c 	movw	r1, #5244	; 0x147c
 8008dfa:	f023 fe76 	bl	802caea <_ZdlPvj>
 8008dfe:	9801      	ldr	r0, [sp, #4]
 8008e00:	b003      	add	sp, #12
 8008e02:	f85d fb04 	ldr.w	pc, [sp], #4
 8008e06:	bf00      	nop
 8008e08:	08030bbc 	.word	0x08030bbc

08008e0c <_ZN37Measurement_Single_Display_1PViewBase15handleTickEventEv>:
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
    }
}

void Measurement_Single_Display_1PViewBase::handleTickEvent()
{
 8008e0c:	b510      	push	{r4, lr}
    frameCountInteraction2Interval++;
 8008e0e:	f500 5480 	add.w	r4, r0, #4096	; 0x1000
 8008e12:	f8d4 2478 	ldr.w	r2, [r4, #1144]	; 0x478
 8008e16:	3201      	adds	r2, #1
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 8008e18:	2a05      	cmp	r2, #5
    frameCountInteraction2Interval++;
 8008e1a:	f8c4 2478 	str.w	r2, [r4, #1144]	; 0x478
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 8008e1e:	d105      	bne.n	8008e2c <_ZN37Measurement_Single_Display_1PViewBase15handleTickEventEv+0x20>
    {
        //Interaction2
        //When every N tick call virtual function
        //Call testGui
        testGui();
 8008e20:	6803      	ldr	r3, [r0, #0]
 8008e22:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008e24:	4798      	blx	r3
        frameCountInteraction2Interval = 0;
 8008e26:	2300      	movs	r3, #0
 8008e28:	f8c4 3478 	str.w	r3, [r4, #1144]	; 0x478
    }
}
 8008e2c:	bd10      	pop	{r4, pc}

08008e2e <_ZN37Measurement_Single_Display_1PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    if (&src == &buttonWithLabel_return)
 8008e2e:	3098      	adds	r0, #152	; 0x98
 8008e30:	4288      	cmp	r0, r1
{
 8008e32:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel_return)
 8008e34:	d105      	bne.n	8008e42 <_ZN37Measurement_Single_Display_1PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8008e36:	f00f fda3 	bl	8018980 <_ZN8touchgfx11Application11getInstanceEv>
}
 8008e3a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8008e3e:	f7fc bbaf 	b.w	80055a0 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
}
 8008e42:	bd08      	pop	{r3, pc}

08008e44 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev>:
Measurement_Single_Display_1PViewBase::Measurement_Single_Display_1PViewBase() :
 8008e44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008e48:	ed2d 8b0a 	vpush	{d8-d12}
 8008e4c:	4604      	mov	r4, r0
 8008e4e:	b08d      	sub	sp, #52	; 0x34
    frameCountInteraction2Interval(0)
 8008e50:	46a0      	mov	r8, r4
 8008e52:	2500      	movs	r5, #0
 8008e54:	f011 fa14 	bl	801a280 <_ZN8touchgfx6ScreenC1Ev>
 8008e58:	4bce      	ldr	r3, [pc, #824]	; (8009194 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x350>)
 8008e5a:	63e5      	str	r5, [r4, #60]	; 0x3c
 8008e5c:	f848 3b40 	str.w	r3, [r8], #64
        : Widget(), alpha(255), color(0)
 8008e60:	2226      	movs	r2, #38	; 0x26
 8008e62:	4629      	mov	r1, r5
 8008e64:	4640      	mov	r0, r8
 8008e66:	f024 ff2c 	bl	802dcc2 <memset>
 8008e6a:	4640      	mov	r0, r8
 8008e6c:	f7fa fbe8 	bl	8003640 <_ZN8touchgfx6WidgetC1Ev>
 8008e70:	f104 076c 	add.w	r7, r4, #108	; 0x6c
 8008e74:	26ff      	movs	r6, #255	; 0xff
 8008e76:	4bc8      	ldr	r3, [pc, #800]	; (8009198 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x354>)
 8008e78:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8008e7a:	2226      	movs	r2, #38	; 0x26
 8008e7c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8008e80:	4629      	mov	r1, r5
 8008e82:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8008e86:	4638      	mov	r0, r7
 8008e88:	66a5      	str	r5, [r4, #104]	; 0x68
 8008e8a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8008e8e:	f024 ff18 	bl	802dcc2 <memset>
 8008e92:	4638      	mov	r0, r7
 8008e94:	f7fa fbd4 	bl	8003640 <_ZN8touchgfx6WidgetC1Ev>
 8008e98:	4bc0      	ldr	r3, [pc, #768]	; (800919c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x358>)
 8008e9a:	66e3      	str	r3, [r4, #108]	; 0x6c
 8008e9c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8008ea0:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8008ea4:	a90a      	add	r1, sp, #40	; 0x28
 8008ea6:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8008eaa:	4638      	mov	r0, r7
        : Widget(), bitmap(bmp), alpha(255)
 8008eac:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8008eb0:	f00d f867 	bl	8015f82 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8008eb4:	4658      	mov	r0, fp
 8008eb6:	f00d f99b 	bl	80161f0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8008eba:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 8008ebe:	f504 7994 	add.w	r9, r4, #296	; 0x128
 8008ec2:	4618      	mov	r0, r3
 8008ec4:	ee0a 3a90 	vmov	s21, r3
 8008ec8:	f7fa fc1e 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
 8008ecc:	4648      	mov	r0, r9
 8008ece:	f7fa fc1b 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
 8008ed2:	f504 73b8 	add.w	r3, r4, #368	; 0x170
 8008ed6:	4618      	mov	r0, r3
 8008ed8:	ee0b 3a10 	vmov	s22, r3
 8008edc:	f7fa fc14 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
 8008ee0:	f504 73dc 	add.w	r3, r4, #440	; 0x1b8
        : TextArea()
 8008ee4:	4618      	mov	r0, r3
 8008ee6:	ee0b 3a90 	vmov	s23, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8008eea:	4ead      	ldr	r6, [pc, #692]	; (80091a0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x35c>)
        : TextArea()
 8008eec:	f7fa fc0c 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
 8008ef0:	f504 7301 	add.w	r3, r4, #516	; 0x204
        : TextAreaWithWildcardBase(), wc1(0)
 8008ef4:	f8c4 61b8 	str.w	r6, [r4, #440]	; 0x1b8
        : TextArea()
 8008ef8:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8008efa:	f8c4 5200 	str.w	r5, [r4, #512]	; 0x200
 8008efe:	ee0c 3a10 	vmov	s24, r3
        : TextArea()
 8008f02:	f7fa fc01 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
 8008f06:	f504 7314 	add.w	r3, r4, #592	; 0x250
 8008f0a:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8008f0c:	f8c4 6204 	str.w	r6, [r4, #516]	; 0x204
 8008f10:	f8c4 524c 	str.w	r5, [r4, #588]	; 0x24c
 8008f14:	f504 7a27 	add.w	sl, r4, #668	; 0x29c
 8008f18:	ee0c 3a90 	vmov	s25, r3
        : TextArea()
 8008f1c:	f7fa fbf4 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8008f20:	f8c4 6250 	str.w	r6, [r4, #592]	; 0x250
 8008f24:	f8c4 5298 	str.w	r5, [r4, #664]	; 0x298
 8008f28:	4650      	mov	r0, sl
 8008f2a:	f00c fced 	bl	8015908 <_ZN8touchgfx5GaugeC1Ev>
 8008f2e:	f204 433c 	addw	r3, r4, #1084	; 0x43c
 8008f32:	4618      	mov	r0, r3
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8008f34:	4e9b      	ldr	r6, [pc, #620]	; (80091a4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x360>)
 8008f36:	ee08 3a10 	vmov	s16, r3
 8008f3a:	f00b fd15 	bl	8014968 <_ZN8touchgfx4LineC1Ev>
 8008f3e:	f204 43ac 	addw	r3, r4, #1196	; 0x4ac
 8008f42:	4618      	mov	r0, r3
 8008f44:	9302      	str	r3, [sp, #8]
 8008f46:	f7fa f97f 	bl	8003248 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8008f4a:	f106 0324 	add.w	r3, r6, #36	; 0x24
 8008f4e:	f8c4 34b4 	str.w	r3, [r4, #1204]	; 0x4b4
 8008f52:	f504 6398 	add.w	r3, r4, #1216	; 0x4c0
 8008f56:	f8c4 64ac 	str.w	r6, [r4, #1196]	; 0x4ac
 8008f5a:	4618      	mov	r0, r3
 8008f5c:	f8c4 54b8 	str.w	r5, [r4, #1208]	; 0x4b8
 8008f60:	ee09 3a10 	vmov	s18, r3
 8008f64:	f7fa fbd0 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
 8008f68:	f504 63a1 	add.w	r3, r4, #1288	; 0x508
 8008f6c:	4618      	mov	r0, r3
 8008f6e:	ee08 3a90 	vmov	s17, r3
 8008f72:	f00b fcf9 	bl	8014968 <_ZN8touchgfx4LineC1Ev>
 8008f76:	f504 63af 	add.w	r3, r4, #1400	; 0x578
 8008f7a:	4618      	mov	r0, r3
 8008f7c:	9303      	str	r3, [sp, #12]
 8008f7e:	f7fa f963 	bl	8003248 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8008f82:	f106 0324 	add.w	r3, r6, #36	; 0x24
 8008f86:	f8c4 3580 	str.w	r3, [r4, #1408]	; 0x580
 8008f8a:	f204 538c 	addw	r3, r4, #1420	; 0x58c
 8008f8e:	f8c4 6578 	str.w	r6, [r4, #1400]	; 0x578
 8008f92:	4618      	mov	r0, r3
 8008f94:	f8c4 5584 	str.w	r5, [r4, #1412]	; 0x584
 8008f98:	ee09 3a90 	vmov	s19, r3
 8008f9c:	f7fa fbb4 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
 8008fa0:	f204 53d4 	addw	r3, r4, #1492	; 0x5d4
 8008fa4:	4618      	mov	r0, r3
 8008fa6:	ee0a 3a10 	vmov	s20, r3
 8008faa:	f7fa fbad 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8008fae:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8008fb2:	4a7d      	ldr	r2, [pc, #500]	; (80091a8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x364>)
 8008fb4:	f8c3 2468 	str.w	r2, [r3, #1128]	; 0x468
 8008fb8:	4a7c      	ldr	r2, [pc, #496]	; (80091ac <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x368>)
 8008fba:	f8c3 2470 	str.w	r2, [r3, #1136]	; 0x470
 8008fbe:	f8c3 446c 	str.w	r4, [r3, #1132]	; 0x46c
 8008fc2:	f8c3 5474 	str.w	r5, [r3, #1140]	; 0x474
 8008fc6:	f8c3 5478 	str.w	r5, [r3, #1144]	; 0x478
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8008fca:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8008fce:	f504 60cb 	add.w	r0, r4, #1624	; 0x658
 8008fd2:	f00d ffc9 	bl	8016f68 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8008fd6:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8008fda:	462a      	mov	r2, r5
 8008fdc:	4640      	mov	r0, r8
 8008fde:	9300      	str	r3, [sp, #0]
 8008fe0:	4629      	mov	r1, r5
 8008fe2:	23f0      	movs	r3, #240	; 0xf0
 8008fe4:	f7fa fb07 	bl	80035f6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8008fe8:	1d26      	adds	r6, r4, #4
        color = newColor;
 8008fea:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8008fee:	66a3      	str	r3, [r4, #104]	; 0x68
 8008ff0:	4641      	mov	r1, r8
 8008ff2:	4630      	mov	r0, r6
 8008ff4:	f009 fbec 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image_background.setXY(0, 0);
 8008ff8:	462a      	mov	r2, r5
 8008ffa:	4638      	mov	r0, r7
 8008ffc:	4629      	mov	r1, r5
 8008ffe:	f7fa faed 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8009002:	f04f 0308 	mov.w	r3, #8
    image_background.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8009006:	4638      	mov	r0, r7
 8009008:	a90a      	add	r1, sp, #40	; 0x28
 800900a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800900e:	f00c ffb8 	bl	8015f82 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8009012:	4639      	mov	r1, r7
 8009014:	4630      	mov	r0, r6
 8009016:	f009 fbdb 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_return.setXY(33, 256);
 800901a:	4658      	mov	r0, fp
 800901c:	f44f 7280 	mov.w	r2, #256	; 0x100
 8009020:	2121      	movs	r1, #33	; 0x21
 8009022:	f7fa fadb 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8009026:	2303      	movs	r3, #3
    buttonWithLabel_return.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8009028:	aa0a      	add	r2, sp, #40	; 0x28
 800902a:	a909      	add	r1, sp, #36	; 0x24
 800902c:	4658      	mov	r0, fp
 800902e:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8009032:	2302      	movs	r3, #2
 8009034:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8009038:	f00c fdad 	bl	8015b96 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 800903c:	2356      	movs	r3, #86	; 0x56
        updateTextPosition();
 800903e:	4658      	mov	r0, fp
 8009040:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 8009044:	f7fa fb0e 	bl	8003664 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel_return.setAction(buttonCallback);
 8009048:	f504 53a3 	add.w	r3, r4, #5216	; 0x1460
        color = col;
 800904c:	f04f 38ff 	mov.w	r8, #4294967295
 8009050:	3308      	adds	r3, #8
 8009052:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8009056:	4659      	mov	r1, fp
 8009058:	4630      	mov	r0, r6
        colorPressed = col;
 800905a:	e9c4 8835 	strd	r8, r8, [r4, #212]	; 0xd4
 800905e:	af04      	add	r7, sp, #16
 8009060:	f009 fbb6 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_n90C.setXY(0, 194);
 8009064:	22c2      	movs	r2, #194	; 0xc2
 8009066:	ee1a 0a90 	vmov	r0, s21
 800906a:	4629      	mov	r1, r5
 800906c:	f7fa fab6 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8009070:	ee1a 1a90 	vmov	r1, s21
 8009074:	4638      	mov	r0, r7
        color = newColor;
 8009076:	f8c4 8110 	str.w	r8, [r4, #272]	; 0x110
        linespace = space;
 800907a:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 800907e:	f00b ff35 	bl	8014eec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8009082:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8009086:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 800908a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 800908e:	4b48      	ldr	r3, [pc, #288]	; (80091b0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x36c>)
 8009090:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_n90C.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VCZH));
 8009092:	ee1a 0a90 	vmov	r0, s21
 8009096:	2338      	movs	r3, #56	; 0x38
 8009098:	a90a      	add	r1, sp, #40	; 0x28
 800909a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800909e:	f00c f9bf 	bl	8015420 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80090a2:	ee1a 1a90 	vmov	r1, s21
 80090a6:	4630      	mov	r0, r6
 80090a8:	f009 fb92 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_p90C.setXY(217, 194);
 80090ac:	22c2      	movs	r2, #194	; 0xc2
 80090ae:	4648      	mov	r0, r9
 80090b0:	21d9      	movs	r1, #217	; 0xd9
 80090b2:	f7fa fa93 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 80090b6:	4649      	mov	r1, r9
 80090b8:	4638      	mov	r0, r7
        color = newColor;
 80090ba:	f8c4 8158 	str.w	r8, [r4, #344]	; 0x158
        linespace = space;
 80090be:	f8a4 515c 	strh.w	r5, [r4, #348]	; 0x15c
        boundingArea = calculateBoundingArea();
 80090c2:	f00b ff13 	bl	8014eec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80090c6:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80090ca:	f504 73b2 	add.w	r3, r4, #356	; 0x164
 80090ce:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80090d2:	4b37      	ldr	r3, [pc, #220]	; (80091b0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x36c>)
 80090d4:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_p90C.setTypedText(touchgfx::TypedText(T___SINGLEUSE_B5GD));
 80090d6:	4648      	mov	r0, r9
 80090d8:	2339      	movs	r3, #57	; 0x39
 80090da:	a90a      	add	r1, sp, #40	; 0x28
 80090dc:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80090e0:	f00c f99e 	bl	8015420 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80090e4:	4649      	mov	r1, r9
 80090e6:	4630      	mov	r0, r6
 80090e8:	f009 fb72 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_0C.setXY(113, 85);
 80090ec:	2255      	movs	r2, #85	; 0x55
 80090ee:	ee1b 0a10 	vmov	r0, s22
 80090f2:	2171      	movs	r1, #113	; 0x71
 80090f4:	f7fa fa72 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 80090f8:	ee1b 1a10 	vmov	r1, s22
 80090fc:	4638      	mov	r0, r7
        color = newColor;
 80090fe:	f8c4 81a0 	str.w	r8, [r4, #416]	; 0x1a0
        linespace = space;
 8009102:	f8a4 51a4 	strh.w	r5, [r4, #420]	; 0x1a4
        boundingArea = calculateBoundingArea();
 8009106:	f00b fef1 	bl	8014eec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800910a:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 800910e:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 8009112:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8009116:	4b26      	ldr	r3, [pc, #152]	; (80091b0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x36c>)
 8009118:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_0C.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q5GP));
 800911a:	ee1b 0a10 	vmov	r0, s22
 800911e:	2337      	movs	r3, #55	; 0x37
 8009120:	a90a      	add	r1, sp, #40	; 0x28
 8009122:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8009126:	f00c f97b 	bl	8015420 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800912a:	ee1b 1a10 	vmov	r1, s22
 800912e:	4630      	mov	r0, r6
 8009130:	f009 fb4e 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Current.setPosition(0, 239, 240, 15);
 8009134:	230f      	movs	r3, #15
 8009136:	22ef      	movs	r2, #239	; 0xef
 8009138:	ee1b 0a90 	vmov	r0, s23
 800913c:	9300      	str	r3, [sp, #0]
 800913e:	4629      	mov	r1, r5
 8009140:	23f0      	movs	r3, #240	; 0xf0
 8009142:	f7fa fa58 	bl	80035f6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8009146:	f8d4 31b8 	ldr.w	r3, [r4, #440]	; 0x1b8
        color = newColor;
 800914a:	f8c4 81e8 	str.w	r8, [r4, #488]	; 0x1e8
        boundingArea = calculateBoundingArea();
 800914e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8009152:	f8a4 51ec 	strh.w	r5, [r4, #492]	; 0x1ec
        boundingArea = calculateBoundingArea();
 8009156:	ee1b 1a90 	vmov	r1, s23
 800915a:	4638      	mov	r0, r7
 800915c:	4798      	blx	r3
 800915e:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8009162:	f8df b064 	ldr.w	fp, [pc, #100]	; 80091c8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x384>
 8009166:	f504 73fa 	add.w	r3, r4, #500	; 0x1f4
 800916a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800916e:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(SMD1_CurrentBuffer, SMD1_CURRENT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_LFLK).getText());
 8009172:	f204 691c 	addw	r9, r4, #1564	; 0x61c
 8009176:	b92b      	cbnz	r3, 8009184 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x340>
 8009178:	4b0e      	ldr	r3, [pc, #56]	; (80091b4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x370>)
 800917a:	4a0f      	ldr	r2, [pc, #60]	; (80091b8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x374>)
 800917c:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800917e:	480f      	ldr	r0, [pc, #60]	; (80091bc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x378>)
 8009180:	f024 fb9a 	bl	802d8b8 <__assert_func>
 8009184:	4b0e      	ldr	r3, [pc, #56]	; (80091c0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x37c>)
 8009186:	881b      	ldrh	r3, [r3, #0]
 8009188:	2b1b      	cmp	r3, #27
 800918a:	d81f      	bhi.n	80091cc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x388>
 800918c:	4b0d      	ldr	r3, [pc, #52]	; (80091c4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x380>)
 800918e:	4a0a      	ldr	r2, [pc, #40]	; (80091b8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x374>)
 8009190:	2161      	movs	r1, #97	; 0x61
 8009192:	e7f4      	b.n	800917e <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x33a>
 8009194:	08030bbc 	.word	0x08030bbc
 8009198:	080319a8 	.word	0x080319a8
 800919c:	08031bf4 	.word	0x08031bf4
 80091a0:	0802f4f4 	.word	0x0802f4f4
 80091a4:	080316dc 	.word	0x080316dc
 80091a8:	08030ba4 	.word	0x08030ba4
 80091ac:	08008e2f 	.word	0x08008e2f
 80091b0:	0802f454 	.word	0x0802f454
 80091b4:	0802f2a4 	.word	0x0802f2a4
 80091b8:	0802f3a9 	.word	0x0802f3a9
 80091bc:	0802f321 	.word	0x0802f321
 80091c0:	200138a8 	.word	0x200138a8
 80091c4:	0802f368 	.word	0x0802f368
 80091c8:	200138a4 	.word	0x200138a4
        return texts->getText(typedTextId);
 80091cc:	4bdd      	ldr	r3, [pc, #884]	; (8009544 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x700>)
 80091ce:	211b      	movs	r1, #27
 80091d0:	6818      	ldr	r0, [r3, #0]
 80091d2:	f001 fa41 	bl	800a658 <_ZNK8touchgfx5Texts7getTextEt>
 80091d6:	4adc      	ldr	r2, [pc, #880]	; (8009548 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x704>)
 80091d8:	4603      	mov	r3, r0
 80091da:	210a      	movs	r1, #10
 80091dc:	4648      	mov	r0, r9
 80091de:	f012 fd7d 	bl	801bcdc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 80091e2:	f04f 011c 	mov.w	r1, #28
 80091e6:	4ad9      	ldr	r2, [pc, #868]	; (800954c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x708>)
        wc1 = value;
 80091e8:	f8c4 9200 	str.w	r9, [r4, #512]	; 0x200
    SMD1_Current.setTypedText(touchgfx::TypedText(T___SINGLEUSE_G8ED));
 80091ec:	ee1b 0a90 	vmov	r0, s23
 80091f0:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 80091f4:	a90a      	add	r1, sp, #40	; 0x28
 80091f6:	920a      	str	r2, [sp, #40]	; 0x28
 80091f8:	f00c f912 	bl	8015420 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80091fc:	ee1b 1a90 	vmov	r1, s23
 8009200:	4630      	mov	r0, r6
 8009202:	f009 fae5 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Frequency.setPosition(0, 224, 240, 15);
 8009206:	210f      	movs	r1, #15
 8009208:	22e0      	movs	r2, #224	; 0xe0
 800920a:	ee1c 0a10 	vmov	r0, s24
 800920e:	9100      	str	r1, [sp, #0]
 8009210:	23f0      	movs	r3, #240	; 0xf0
 8009212:	4629      	mov	r1, r5
 8009214:	f7fa f9ef 	bl	80035f6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8009218:	f8d4 3204 	ldr.w	r3, [r4, #516]	; 0x204
        color = newColor;
 800921c:	f8c4 8234 	str.w	r8, [r4, #564]	; 0x234
        boundingArea = calculateBoundingArea();
 8009220:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8009224:	f8a4 5238 	strh.w	r5, [r4, #568]	; 0x238
        boundingArea = calculateBoundingArea();
 8009228:	ee1c 1a10 	vmov	r1, s24
 800922c:	4638      	mov	r0, r7
 800922e:	4798      	blx	r3
 8009230:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8009234:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8009238:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800923c:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(SMD1_FrequencyBuffer, SMD1_FREQUENCY_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_9OHS).getText());
 8009240:	f504 69c6 	add.w	r9, r4, #1584	; 0x630
 8009244:	2b00      	cmp	r3, #0
 8009246:	d097      	beq.n	8009178 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x334>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8009248:	49c1      	ldr	r1, [pc, #772]	; (8009550 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x70c>)
 800924a:	880b      	ldrh	r3, [r1, #0]
 800924c:	2b32      	cmp	r3, #50	; 0x32
 800924e:	d99d      	bls.n	800918c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x348>
        return texts->getText(typedTextId);
 8009250:	4bbc      	ldr	r3, [pc, #752]	; (8009544 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x700>)
 8009252:	2132      	movs	r1, #50	; 0x32
 8009254:	6818      	ldr	r0, [r3, #0]
 8009256:	f001 f9ff 	bl	800a658 <_ZNK8touchgfx5Texts7getTextEt>
 800925a:	4abb      	ldr	r2, [pc, #748]	; (8009548 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x704>)
 800925c:	4603      	mov	r3, r0
 800925e:	210a      	movs	r1, #10
 8009260:	4648      	mov	r0, r9
 8009262:	f012 fd3b 	bl	801bcdc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    SMD1_Frequency.setTypedText(touchgfx::TypedText(T___SINGLEUSE_PCCW));
 8009266:	a80a      	add	r0, sp, #40	; 0x28
        : typedTextId(id)
 8009268:	4ab8      	ldr	r2, [pc, #736]	; (800954c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x708>)
 800926a:	f8c4 924c 	str.w	r9, [r4, #588]	; 0x24c
 800926e:	4601      	mov	r1, r0
 8009270:	f04f 0935 	mov.w	r9, #53	; 0x35
 8009274:	ee1c 0a10 	vmov	r0, s24
 8009278:	920a      	str	r2, [sp, #40]	; 0x28
 800927a:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 800927e:	f00c f8cf 	bl	8015420 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8009282:	ee1c 1a10 	vmov	r1, s24
 8009286:	4630      	mov	r0, r6
 8009288:	f009 faa2 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Distance.setPosition(0, 209, 240, 15);
 800928c:	200f      	movs	r0, #15
 800928e:	22d1      	movs	r2, #209	; 0xd1
 8009290:	9000      	str	r0, [sp, #0]
 8009292:	23f0      	movs	r3, #240	; 0xf0
 8009294:	ee1c 0a90 	vmov	r0, s25
 8009298:	4629      	mov	r1, r5
 800929a:	f7fa f9ac 	bl	80035f6 <_ZN8touchgfx8Drawable11setPositionEssss>
 800929e:	f8d4 3250 	ldr.w	r3, [r4, #592]	; 0x250
        color = newColor;
 80092a2:	f8c4 8280 	str.w	r8, [r4, #640]	; 0x280
        boundingArea = calculateBoundingArea();
 80092a6:	4638      	mov	r0, r7
 80092a8:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 80092ac:	f8a4 5284 	strh.w	r5, [r4, #644]	; 0x284
        boundingArea = calculateBoundingArea();
 80092b0:	ee1c 1a90 	vmov	r1, s25
 80092b4:	4798      	blx	r3
 80092b6:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80092ba:	f504 7323 	add.w	r3, r4, #652	; 0x28c
 80092be:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80092c2:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(SMD1_DistanceBuffer, SMD1_DISTANCE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_LVUK).getText());
 80092c6:	f204 6744 	addw	r7, r4, #1604	; 0x644
 80092ca:	2b00      	cmp	r3, #0
 80092cc:	f43f af54 	beq.w	8009178 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x334>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80092d0:	499f      	ldr	r1, [pc, #636]	; (8009550 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x70c>)
 80092d2:	880b      	ldrh	r3, [r1, #0]
 80092d4:	2b33      	cmp	r3, #51	; 0x33
 80092d6:	f67f af59 	bls.w	800918c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x348>
        return texts->getText(typedTextId);
 80092da:	4b9a      	ldr	r3, [pc, #616]	; (8009544 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x700>)
 80092dc:	2133      	movs	r1, #51	; 0x33
 80092de:	6818      	ldr	r0, [r3, #0]
 80092e0:	f001 f9ba 	bl	800a658 <_ZNK8touchgfx5Texts7getTextEt>
 80092e4:	4a98      	ldr	r2, [pc, #608]	; (8009548 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x704>)
 80092e6:	4603      	mov	r3, r0
 80092e8:	210a      	movs	r1, #10
 80092ea:	4638      	mov	r0, r7
 80092ec:	f012 fcf6 	bl	801bcdc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 80092f0:	4a96      	ldr	r2, [pc, #600]	; (800954c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x708>)
 80092f2:	f8c4 7298 	str.w	r7, [r4, #664]	; 0x298
 80092f6:	2336      	movs	r3, #54	; 0x36
    SMD1_Distance.setTypedText(touchgfx::TypedText(T_AMD3_DISTANCE));
 80092f8:	ee1c 0a90 	vmov	r0, s25
 80092fc:	a90a      	add	r1, sp, #40	; 0x28
 80092fe:	920a      	str	r2, [sp, #40]	; 0x28
 8009300:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8009304:	f00c f88c 	bl	8015420 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8009308:	ee1c 1a90 	vmov	r1, s25
 800930c:	4630      	mov	r0, r6
 800930e:	f009 fa5f 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8009312:	2304      	movs	r3, #4
    SMD1_Gauge.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_BACKGROUNDS_LIGHT_PRECISION_ID));
 8009314:	a90a      	add	r1, sp, #40	; 0x28
 8009316:	4650      	mov	r0, sl
 8009318:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800931c:	f009 f9ea 	bl	80126f4 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    SMD1_Gauge.setPosition(28, 103, 184, 106);
 8009320:	236a      	movs	r3, #106	; 0x6a
 8009322:	9300      	str	r3, [sp, #0]
 8009324:	2267      	movs	r2, #103	; 0x67
 8009326:	23b8      	movs	r3, #184	; 0xb8
 8009328:	211c      	movs	r1, #28
 800932a:	4650      	mov	r0, sl
 800932c:	f7fa f963 	bl	80035f6 <_ZN8touchgfx8Drawable11setPositionEssss>
    SMD1_Gauge.setCenter(92, 92);
 8009330:	225c      	movs	r2, #92	; 0x5c
 8009332:	4611      	mov	r1, r2
 8009334:	4650      	mov	r0, sl
 8009336:	f00c fb92 	bl	8015a5e <_ZN8touchgfx5Gauge9setCenterEii>
    SMD1_Gauge.setStartEndAngle(-90, 90);
 800933a:	225a      	movs	r2, #90	; 0x5a
 800933c:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8009340:	4650      	mov	r0, sl
 8009342:	f00c fc11 	bl	8015b68 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    SMD1_Gauge.setRange(-90, 90);
 8009346:	462b      	mov	r3, r5
 8009348:	225a      	movs	r2, #90	; 0x5a
 800934a:	f06f 0159 	mvn.w	r1, #89	; 0x59
 800934e:	4650      	mov	r0, sl
 8009350:	9500      	str	r5, [sp, #0]
 8009352:	f009 f87c 	bl	801244e <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    SMD1_Gauge.setValue(0);
 8009356:	4629      	mov	r1, r5
 8009358:	4650      	mov	r0, sl
 800935a:	f00c fbaf 	bl	8015abc <_ZN8touchgfx5Gauge8setValueEi>
    SMD1_Gauge.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_NEEDLES_ROUGH_ID, 8, 53);
 800935e:	464b      	mov	r3, r9
 8009360:	2208      	movs	r2, #8
 8009362:	2105      	movs	r1, #5
 8009364:	4650      	mov	r0, sl
 8009366:	f00c fb65 	bl	8015a34 <_ZN8touchgfx5Gauge9setNeedleEtss>
    SMD1_Gauge.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 800936a:	2101      	movs	r1, #1
 800936c:	4650      	mov	r0, sl
 800936e:	f00c fb03 	bl	8015978 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    SMD1_Gauge.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8009372:	2101      	movs	r1, #1
 8009374:	4650      	mov	r0, sl
 8009376:	f00c fb02 	bl	801597e <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
 800937a:	4651      	mov	r1, sl
 800937c:	4630      	mov	r0, r6
 800937e:	f009 fa27 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line2.setPosition(0, 75, 240, 10);
 8009382:	230a      	movs	r3, #10
 8009384:	ee18 0a10 	vmov	r0, s16
 8009388:	9300      	str	r3, [sp, #0]
 800938a:	224b      	movs	r2, #75	; 0x4b
 800938c:	23f0      	movs	r3, #240	; 0xf0
 800938e:	4629      	mov	r1, r5
 8009390:	f7fa f931 	bl	80035f6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8009394:	9b02      	ldr	r3, [sp, #8]
 8009396:	f8c4 3464 	str.w	r3, [r4, #1124]	; 0x464
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800939a:	22a0      	movs	r2, #160	; 0xa0
 800939c:	4611      	mov	r1, r2
 800939e:	ee18 0a10 	vmov	r0, s16
 80093a2:	f8c4 84b8 	str.w	r8, [r4, #1208]	; 0x4b8
        color565 = LCD16bpp::getNativeColor(painterColor);
 80093a6:	f8a4 84bc 	strh.w	r8, [r4, #1212]	; 0x4bc
 80093aa:	f00b fbf3 	bl	8014b94 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80093ae:	ee18 0a10 	vmov	r0, s16
 80093b2:	22a0      	movs	r2, #160	; 0xa0
 80093b4:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80093b8:	f00b fbf7 	bl	8014baa <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80093bc:	f8d4 3478 	ldr.w	r3, [r4, #1144]	; 0x478
 80093c0:	2b20      	cmp	r3, #32
 80093c2:	d006      	beq.n	80093d2 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x58e>
        lineWidthQ5 = widthQ5;
 80093c4:	2320      	movs	r3, #32
        updateCachedShape();
 80093c6:	ee18 0a10 	vmov	r0, s16
        lineWidthQ5 = widthQ5;
 80093ca:	f8c4 3478 	str.w	r3, [r4, #1144]	; 0x478
        updateCachedShape();
 80093ce:	f00b faeb 	bl	80149a8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80093d2:	ee18 0a10 	vmov	r0, s16
 80093d6:	2101      	movs	r1, #1
 80093d8:	f00b fbf2 	bl	8014bc0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80093dc:	ee18 1a10 	vmov	r1, s16
 80093e0:	4630      	mov	r0, r6
 80093e2:	f009 f9f5 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 80093e6:	f04f 38ff 	mov.w	r8, #4294967295
    textArea_menu.setXY(31, 60);
 80093ea:	223c      	movs	r2, #60	; 0x3c
 80093ec:	ee19 0a10 	vmov	r0, s18
 80093f0:	211f      	movs	r1, #31
        linespace = space;
 80093f2:	f04f 0900 	mov.w	r9, #0
        boundingArea = calculateBoundingArea();
 80093f6:	ad04      	add	r5, sp, #16
 80093f8:	f7fa f8f0 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 80093fc:	ee19 1a10 	vmov	r1, s18
 8009400:	4628      	mov	r0, r5
        color = newColor;
 8009402:	f8c4 84f0 	str.w	r8, [r4, #1264]	; 0x4f0
        linespace = space;
 8009406:	f8a4 94f4 	strh.w	r9, [r4, #1268]	; 0x4f4
        boundingArea = calculateBoundingArea();
 800940a:	f00b fd6f 	bl	8014eec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800940e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8009412:	ee19 3a10 	vmov	r3, s18
 8009416:	333c      	adds	r3, #60	; 0x3c
 8009418:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800941c:	4f4b      	ldr	r7, [pc, #300]	; (800954c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x708>)
 800941e:	970a      	str	r7, [sp, #40]	; 0x28
 8009420:	2351      	movs	r3, #81	; 0x51
    textArea_menu.setTypedText(touchgfx::TypedText(T___SINGLEUSE_M3QF));
 8009422:	ee19 0a10 	vmov	r0, s18
 8009426:	a90a      	add	r1, sp, #40	; 0x28
 8009428:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800942c:	f00b fff8 	bl	8015420 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8009430:	ee19 1a10 	vmov	r1, s18
 8009434:	4630      	mov	r0, r6
 8009436:	f009 f9cb 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 800943a:	230a      	movs	r3, #10
 800943c:	ee18 0a90 	vmov	r0, s17
 8009440:	9300      	str	r3, [sp, #0]
 8009442:	2232      	movs	r2, #50	; 0x32
 8009444:	23f0      	movs	r3, #240	; 0xf0
 8009446:	4649      	mov	r1, r9
 8009448:	f7fa f8d5 	bl	80035f6 <_ZN8touchgfx8Drawable11setPositionEssss>
 800944c:	9b03      	ldr	r3, [sp, #12]
 800944e:	f8c4 3530 	str.w	r3, [r4, #1328]	; 0x530
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8009452:	22a0      	movs	r2, #160	; 0xa0
 8009454:	4611      	mov	r1, r2
 8009456:	ee18 0a90 	vmov	r0, s17
 800945a:	f8c4 8584 	str.w	r8, [r4, #1412]	; 0x584
 800945e:	f8a4 8588 	strh.w	r8, [r4, #1416]	; 0x588
 8009462:	f00b fb97 	bl	8014b94 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8009466:	ee18 0a90 	vmov	r0, s17
 800946a:	22a0      	movs	r2, #160	; 0xa0
 800946c:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8009470:	f00b fb9b 	bl	8014baa <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8009474:	f8d4 3544 	ldr.w	r3, [r4, #1348]	; 0x544
 8009478:	2b20      	cmp	r3, #32
 800947a:	d006      	beq.n	800948a <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x646>
        lineWidthQ5 = widthQ5;
 800947c:	2320      	movs	r3, #32
        updateCachedShape();
 800947e:	ee18 0a90 	vmov	r0, s17
        lineWidthQ5 = widthQ5;
 8009482:	f8c4 3544 	str.w	r3, [r4, #1348]	; 0x544
        updateCachedShape();
 8009486:	f00b fa8f 	bl	80149a8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800948a:	ee18 0a90 	vmov	r0, s17
 800948e:	2101      	movs	r1, #1
 8009490:	f00b fb96 	bl	8014bc0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8009494:	ee18 1a90 	vmov	r1, s17
 8009498:	4630      	mov	r0, r6
 800949a:	f009 f999 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 800949e:	f04f 39ff 	mov.w	r9, #4294967295
    textArea_name.setXY(69, 35);
 80094a2:	ee19 0a90 	vmov	r0, s19
 80094a6:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 80094a8:	f04f 0800 	mov.w	r8, #0
 80094ac:	2145      	movs	r1, #69	; 0x45
 80094ae:	f7fa f895 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80094b2:	ee19 1a90 	vmov	r1, s19
 80094b6:	4628      	mov	r0, r5
        color = newColor;
 80094b8:	f8c4 95bc 	str.w	r9, [r4, #1468]	; 0x5bc
        linespace = space;
 80094bc:	f8a4 85c0 	strh.w	r8, [r4, #1472]	; 0x5c0
        boundingArea = calculateBoundingArea();
 80094c0:	f00b fd14 	bl	8014eec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80094c4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80094c8:	ee19 3a90 	vmov	r3, s19
 80094cc:	333c      	adds	r3, #60	; 0x3c
 80094ce:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80094d2:	2358      	movs	r3, #88	; 0x58
    textArea_name.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9O3K));
 80094d4:	ee19 0a90 	vmov	r0, s19
 80094d8:	a90a      	add	r1, sp, #40	; 0x28
 80094da:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80094de:	970a      	str	r7, [sp, #40]	; 0x28
 80094e0:	f00b ff9e 	bl	8015420 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80094e4:	ee19 1a90 	vmov	r1, s19
 80094e8:	4630      	mov	r0, r6
 80094ea:	f009 f971 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_titel.setXY(54, 12);
 80094ee:	ee1a 0a10 	vmov	r0, s20
 80094f2:	220c      	movs	r2, #12
 80094f4:	2136      	movs	r1, #54	; 0x36
 80094f6:	f7fa f871 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 80094fa:	ee1a 1a10 	vmov	r1, s20
 80094fe:	4628      	mov	r0, r5
        color = newColor;
 8009500:	f8c4 9604 	str.w	r9, [r4, #1540]	; 0x604
        linespace = space;
 8009504:	f8a4 8608 	strh.w	r8, [r4, #1544]	; 0x608
        boundingArea = calculateBoundingArea();
 8009508:	f00b fcf0 	bl	8014eec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800950c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8009510:	ee1a 3a10 	vmov	r3, s20
 8009514:	333c      	adds	r3, #60	; 0x3c
 8009516:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800951a:	2357      	movs	r3, #87	; 0x57
    textArea_titel.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T27V));
 800951c:	ee1a 0a10 	vmov	r0, s20
 8009520:	a90a      	add	r1, sp, #40	; 0x28
 8009522:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8009526:	970a      	str	r7, [sp, #40]	; 0x28
 8009528:	f00b ff7a 	bl	8015420 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800952c:	4630      	mov	r0, r6
 800952e:	ee1a 1a10 	vmov	r1, s20
 8009532:	f009 f94d 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8009536:	4620      	mov	r0, r4
 8009538:	b00d      	add	sp, #52	; 0x34
 800953a:	ecbd 8b0a 	vpop	{d8-d12}
 800953e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009542:	bf00      	nop
 8009544:	200138b0 	.word	0x200138b0
 8009548:	0802f3e1 	.word	0x0802f3e1
 800954c:	0802f454 	.word	0x0802f454
 8009550:	200138a8 	.word	0x200138a8

08009554 <_ZN37Measurement_Single_Display_3PViewBase11setupScreenEv>:
}

void Measurement_Single_Display_3PViewBase::setupScreen()
{

}
 8009554:	4770      	bx	lr

08009556 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8009556:	4770      	bx	lr

08009558 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8009558:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 800955a:	68c2      	ldr	r2, [r0, #12]
 800955c:	6844      	ldr	r4, [r0, #4]
 800955e:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8009560:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8009562:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8009566:	07d2      	lsls	r2, r2, #31
 8009568:	bf48      	it	mi
 800956a:	5962      	ldrmi	r2, [r4, r5]
 800956c:	689b      	ldr	r3, [r3, #8]
    }
 800956e:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8009570:	bf48      	it	mi
 8009572:	58d3      	ldrmi	r3, [r2, r3]
 8009574:	4718      	bx	r3

08009576 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8009576:	6843      	ldr	r3, [r0, #4]
 8009578:	b12b      	cbz	r3, 8009586 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800957a:	6883      	ldr	r3, [r0, #8]
 800957c:	b92b      	cbnz	r3, 800958a <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800957e:	68c0      	ldr	r0, [r0, #12]
 8009580:	f000 0001 	and.w	r0, r0, #1
 8009584:	4770      	bx	lr
 8009586:	4618      	mov	r0, r3
 8009588:	4770      	bx	lr
 800958a:	2001      	movs	r0, #1
    }
 800958c:	4770      	bx	lr

0800958e <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800958e:	b510      	push	{r4, lr}
 8009590:	2110      	movs	r1, #16
 8009592:	4604      	mov	r4, r0
 8009594:	f023 faa9 	bl	802caea <_ZdlPvj>
 8009598:	4620      	mov	r0, r4
 800959a:	bd10      	pop	{r4, pc}

0800959c <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>:
Measurement_Single_Display_3PViewBase::~Measurement_Single_Display_3PViewBase()
 800959c:	b510      	push	{r4, lr}
 800959e:	4b03      	ldr	r3, [pc, #12]	; (80095ac <_ZN37Measurement_Single_Display_3PViewBaseD1Ev+0x10>)
 80095a0:	6003      	str	r3, [r0, #0]
 80095a2:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80095a4:	f00d fcea 	bl	8016f7c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80095a8:	4620      	mov	r0, r4
 80095aa:	bd10      	pop	{r4, pc}
 80095ac:	08030c0c 	.word	0x08030c0c

080095b0 <_ZN37Measurement_Single_Display_3PViewBaseD0Ev>:
Measurement_Single_Display_3PViewBase::~Measurement_Single_Display_3PViewBase()
 80095b0:	b507      	push	{r0, r1, r2, lr}
 80095b2:	4b07      	ldr	r3, [pc, #28]	; (80095d0 <_ZN37Measurement_Single_Display_3PViewBaseD0Ev+0x20>)
 80095b4:	6003      	str	r3, [r0, #0]
 80095b6:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80095b8:	f00d fce0 	bl	8016f7c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80095bc:	9801      	ldr	r0, [sp, #4]
 80095be:	f241 4178 	movw	r1, #5240	; 0x1478
 80095c2:	f023 fa92 	bl	802caea <_ZdlPvj>
 80095c6:	9801      	ldr	r0, [sp, #4]
 80095c8:	b003      	add	sp, #12
 80095ca:	f85d fb04 	ldr.w	pc, [sp], #4
 80095ce:	bf00      	nop
 80095d0:	08030c0c 	.word	0x08030c0c

080095d4 <_ZN37Measurement_Single_Display_3PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_Single_Display_3PViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel_return)
 80095d4:	3098      	adds	r0, #152	; 0x98
 80095d6:	4288      	cmp	r0, r1
{
 80095d8:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel_return)
 80095da:	d105      	bne.n	80095e8 <_ZN37Measurement_Single_Display_3PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Single_Display_3PViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80095dc:	f00f f9d0 	bl	8018980 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel_return clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
    }
}
 80095e0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 80095e4:	f7fb bfdc 	b.w	80055a0 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
}
 80095e8:	bd08      	pop	{r3, pc}
	...

080095ec <_ZN37Measurement_Single_Display_3PViewBaseC1Ev>:
Measurement_Single_Display_3PViewBase::Measurement_Single_Display_3PViewBase() :
 80095ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80095f0:	ed2d 8b0a 	vpush	{d8-d12}
 80095f4:	4604      	mov	r4, r0
 80095f6:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Single_Display_3PViewBase::buttonCallbackHandler)
 80095f8:	46a0      	mov	r8, r4
 80095fa:	2500      	movs	r5, #0
 80095fc:	f010 fe40 	bl	801a280 <_ZN8touchgfx6ScreenC1Ev>
 8009600:	4bcd      	ldr	r3, [pc, #820]	; (8009938 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x34c>)
 8009602:	63e5      	str	r5, [r4, #60]	; 0x3c
 8009604:	f848 3b40 	str.w	r3, [r8], #64
        : Widget(), alpha(255), color(0)
 8009608:	2226      	movs	r2, #38	; 0x26
 800960a:	4629      	mov	r1, r5
 800960c:	4640      	mov	r0, r8
 800960e:	f024 fb58 	bl	802dcc2 <memset>
 8009612:	4640      	mov	r0, r8
 8009614:	f7fa f814 	bl	8003640 <_ZN8touchgfx6WidgetC1Ev>
 8009618:	f104 076c 	add.w	r7, r4, #108	; 0x6c
 800961c:	26ff      	movs	r6, #255	; 0xff
 800961e:	4bc7      	ldr	r3, [pc, #796]	; (800993c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x350>)
 8009620:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8009622:	2226      	movs	r2, #38	; 0x26
 8009624:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8009628:	4629      	mov	r1, r5
 800962a:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800962e:	4638      	mov	r0, r7
 8009630:	66a5      	str	r5, [r4, #104]	; 0x68
 8009632:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8009636:	f024 fb44 	bl	802dcc2 <memset>
 800963a:	4638      	mov	r0, r7
 800963c:	f7fa f800 	bl	8003640 <_ZN8touchgfx6WidgetC1Ev>
 8009640:	4bbf      	ldr	r3, [pc, #764]	; (8009940 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x354>)
 8009642:	66e3      	str	r3, [r4, #108]	; 0x6c
 8009644:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8009648:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 800964c:	a90a      	add	r1, sp, #40	; 0x28
 800964e:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8009652:	4638      	mov	r0, r7
        : Widget(), bitmap(bmp), alpha(255)
 8009654:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8009658:	f00c fc93 	bl	8015f82 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800965c:	4658      	mov	r0, fp
 800965e:	f00c fdc7 	bl	80161f0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8009662:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 8009666:	f504 7994 	add.w	r9, r4, #296	; 0x128
 800966a:	4618      	mov	r0, r3
 800966c:	ee0a 3a90 	vmov	s21, r3
 8009670:	f7fa f84a 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
 8009674:	4648      	mov	r0, r9
 8009676:	f7fa f847 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
 800967a:	f504 73b8 	add.w	r3, r4, #368	; 0x170
 800967e:	4618      	mov	r0, r3
 8009680:	ee0b 3a10 	vmov	s22, r3
 8009684:	f7fa f840 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
 8009688:	f504 73dc 	add.w	r3, r4, #440	; 0x1b8
        : TextArea()
 800968c:	4618      	mov	r0, r3
 800968e:	ee0b 3a90 	vmov	s23, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8009692:	4eac      	ldr	r6, [pc, #688]	; (8009944 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x358>)
        : TextArea()
 8009694:	f7fa f838 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
 8009698:	f504 7301 	add.w	r3, r4, #516	; 0x204
        : TextAreaWithWildcardBase(), wc1(0)
 800969c:	f8c4 61b8 	str.w	r6, [r4, #440]	; 0x1b8
        : TextArea()
 80096a0:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 80096a2:	f8c4 5200 	str.w	r5, [r4, #512]	; 0x200
 80096a6:	ee0c 3a10 	vmov	s24, r3
        : TextArea()
 80096aa:	f7fa f82d 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
 80096ae:	f504 7314 	add.w	r3, r4, #592	; 0x250
 80096b2:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 80096b4:	f8c4 6204 	str.w	r6, [r4, #516]	; 0x204
 80096b8:	f8c4 524c 	str.w	r5, [r4, #588]	; 0x24c
 80096bc:	f504 7a27 	add.w	sl, r4, #668	; 0x29c
 80096c0:	ee0c 3a90 	vmov	s25, r3
        : TextArea()
 80096c4:	f7fa f820 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 80096c8:	f8c4 6250 	str.w	r6, [r4, #592]	; 0x250
 80096cc:	f8c4 5298 	str.w	r5, [r4, #664]	; 0x298
 80096d0:	4650      	mov	r0, sl
 80096d2:	f00c f919 	bl	8015908 <_ZN8touchgfx5GaugeC1Ev>
 80096d6:	f204 433c 	addw	r3, r4, #1084	; 0x43c
 80096da:	4618      	mov	r0, r3
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80096dc:	4e9a      	ldr	r6, [pc, #616]	; (8009948 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x35c>)
 80096de:	ee08 3a10 	vmov	s16, r3
 80096e2:	f00b f941 	bl	8014968 <_ZN8touchgfx4LineC1Ev>
 80096e6:	f204 43ac 	addw	r3, r4, #1196	; 0x4ac
 80096ea:	4618      	mov	r0, r3
 80096ec:	9302      	str	r3, [sp, #8]
 80096ee:	f7f9 fdab 	bl	8003248 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80096f2:	f106 0324 	add.w	r3, r6, #36	; 0x24
 80096f6:	f8c4 34b4 	str.w	r3, [r4, #1204]	; 0x4b4
 80096fa:	f504 6398 	add.w	r3, r4, #1216	; 0x4c0
 80096fe:	f8c4 64ac 	str.w	r6, [r4, #1196]	; 0x4ac
 8009702:	4618      	mov	r0, r3
 8009704:	f8c4 54b8 	str.w	r5, [r4, #1208]	; 0x4b8
 8009708:	ee09 3a10 	vmov	s18, r3
 800970c:	f7f9 fffc 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
 8009710:	f504 63a1 	add.w	r3, r4, #1288	; 0x508
 8009714:	4618      	mov	r0, r3
 8009716:	ee08 3a90 	vmov	s17, r3
 800971a:	f00b f925 	bl	8014968 <_ZN8touchgfx4LineC1Ev>
 800971e:	f504 63af 	add.w	r3, r4, #1400	; 0x578
 8009722:	4618      	mov	r0, r3
 8009724:	9303      	str	r3, [sp, #12]
 8009726:	f7f9 fd8f 	bl	8003248 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800972a:	f106 0324 	add.w	r3, r6, #36	; 0x24
 800972e:	f8c4 3580 	str.w	r3, [r4, #1408]	; 0x580
 8009732:	f204 538c 	addw	r3, r4, #1420	; 0x58c
 8009736:	f8c4 6578 	str.w	r6, [r4, #1400]	; 0x578
 800973a:	4618      	mov	r0, r3
 800973c:	f8c4 5584 	str.w	r5, [r4, #1412]	; 0x584
 8009740:	ee09 3a90 	vmov	s19, r3
 8009744:	f7f9 ffe0 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
 8009748:	f204 53d4 	addw	r3, r4, #1492	; 0x5d4
 800974c:	4618      	mov	r0, r3
 800974e:	ee0a 3a10 	vmov	s20, r3
 8009752:	f7f9 ffd9 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8009756:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 800975a:	4a7c      	ldr	r2, [pc, #496]	; (800994c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x360>)
 800975c:	f8c3 2468 	str.w	r2, [r3, #1128]	; 0x468
 8009760:	4a7b      	ldr	r2, [pc, #492]	; (8009950 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x364>)
 8009762:	f8c3 2470 	str.w	r2, [r3, #1136]	; 0x470
 8009766:	f8c3 446c 	str.w	r4, [r3, #1132]	; 0x46c
 800976a:	f8c3 5474 	str.w	r5, [r3, #1140]	; 0x474
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800976e:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8009772:	f504 60cb 	add.w	r0, r4, #1624	; 0x658
 8009776:	f00d fbf7 	bl	8016f68 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 800977a:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800977e:	462a      	mov	r2, r5
 8009780:	4640      	mov	r0, r8
 8009782:	9300      	str	r3, [sp, #0]
 8009784:	4629      	mov	r1, r5
 8009786:	23f0      	movs	r3, #240	; 0xf0
 8009788:	f7f9 ff35 	bl	80035f6 <_ZN8touchgfx8Drawable11setPositionEssss>
 800978c:	1d26      	adds	r6, r4, #4
        color = newColor;
 800978e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8009792:	66a3      	str	r3, [r4, #104]	; 0x68
 8009794:	4641      	mov	r1, r8
 8009796:	4630      	mov	r0, r6
 8009798:	f009 f81a 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image_background.setXY(0, 0);
 800979c:	462a      	mov	r2, r5
 800979e:	4638      	mov	r0, r7
 80097a0:	4629      	mov	r1, r5
 80097a2:	f7f9 ff1b 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 80097a6:	f04f 0308 	mov.w	r3, #8
    image_background.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80097aa:	4638      	mov	r0, r7
 80097ac:	a90a      	add	r1, sp, #40	; 0x28
 80097ae:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80097b2:	f00c fbe6 	bl	8015f82 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80097b6:	4639      	mov	r1, r7
 80097b8:	4630      	mov	r0, r6
 80097ba:	f009 f809 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_return.setXY(33, 256);
 80097be:	4658      	mov	r0, fp
 80097c0:	f44f 7280 	mov.w	r2, #256	; 0x100
 80097c4:	2121      	movs	r1, #33	; 0x21
 80097c6:	f7f9 ff09 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 80097ca:	2303      	movs	r3, #3
    buttonWithLabel_return.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80097cc:	aa0a      	add	r2, sp, #40	; 0x28
 80097ce:	a909      	add	r1, sp, #36	; 0x24
 80097d0:	4658      	mov	r0, fp
 80097d2:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80097d6:	2302      	movs	r3, #2
 80097d8:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80097dc:	f00c f9db 	bl	8015b96 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80097e0:	2359      	movs	r3, #89	; 0x59
        updateTextPosition();
 80097e2:	4658      	mov	r0, fp
 80097e4:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 80097e8:	f7f9 ff3c 	bl	8003664 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel_return.setAction(buttonCallback);
 80097ec:	f504 53a3 	add.w	r3, r4, #5216	; 0x1460
        color = col;
 80097f0:	f04f 38ff 	mov.w	r8, #4294967295
 80097f4:	3308      	adds	r3, #8
 80097f6:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 80097fa:	4659      	mov	r1, fp
 80097fc:	4630      	mov	r0, r6
        colorPressed = col;
 80097fe:	e9c4 8835 	strd	r8, r8, [r4, #212]	; 0xd4
 8009802:	af04      	add	r7, sp, #16
 8009804:	f008 ffe4 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_n90C.setXY(0, 194);
 8009808:	22c2      	movs	r2, #194	; 0xc2
 800980a:	ee1a 0a90 	vmov	r0, s21
 800980e:	4629      	mov	r1, r5
 8009810:	f7f9 fee4 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8009814:	ee1a 1a90 	vmov	r1, s21
 8009818:	4638      	mov	r0, r7
        color = newColor;
 800981a:	f8c4 8110 	str.w	r8, [r4, #272]	; 0x110
        linespace = space;
 800981e:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8009822:	f00b fb63 	bl	8014eec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8009826:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 800982a:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 800982e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8009832:	4b48      	ldr	r3, [pc, #288]	; (8009954 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x368>)
 8009834:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_n90C.setTypedText(touchgfx::TypedText(T___SINGLEUSE_C7CD));
 8009836:	ee1a 0a90 	vmov	r0, s21
 800983a:	2313      	movs	r3, #19
 800983c:	a90a      	add	r1, sp, #40	; 0x28
 800983e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8009842:	f00b fded 	bl	8015420 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8009846:	ee1a 1a90 	vmov	r1, s21
 800984a:	4630      	mov	r0, r6
 800984c:	f008 ffc0 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_p90C.setXY(217, 194);
 8009850:	22c2      	movs	r2, #194	; 0xc2
 8009852:	4648      	mov	r0, r9
 8009854:	21d9      	movs	r1, #217	; 0xd9
 8009856:	f7f9 fec1 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 800985a:	4649      	mov	r1, r9
 800985c:	4638      	mov	r0, r7
        color = newColor;
 800985e:	f8c4 8158 	str.w	r8, [r4, #344]	; 0x158
        linespace = space;
 8009862:	f8a4 515c 	strh.w	r5, [r4, #348]	; 0x15c
        boundingArea = calculateBoundingArea();
 8009866:	f00b fb41 	bl	8014eec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800986a:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 800986e:	f504 73b2 	add.w	r3, r4, #356	; 0x164
 8009872:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8009876:	4b37      	ldr	r3, [pc, #220]	; (8009954 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x368>)
 8009878:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_p90C.setTypedText(touchgfx::TypedText(T___SINGLEUSE_85IX));
 800987a:	4648      	mov	r0, r9
 800987c:	2312      	movs	r3, #18
 800987e:	a90a      	add	r1, sp, #40	; 0x28
 8009880:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8009884:	f00b fdcc 	bl	8015420 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8009888:	4649      	mov	r1, r9
 800988a:	4630      	mov	r0, r6
 800988c:	f008 ffa0 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_0C.setXY(113, 85);
 8009890:	2255      	movs	r2, #85	; 0x55
 8009892:	ee1b 0a10 	vmov	r0, s22
 8009896:	2171      	movs	r1, #113	; 0x71
 8009898:	f7f9 fea0 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 800989c:	ee1b 1a10 	vmov	r1, s22
 80098a0:	4638      	mov	r0, r7
        color = newColor;
 80098a2:	f8c4 81a0 	str.w	r8, [r4, #416]	; 0x1a0
        linespace = space;
 80098a6:	f8a4 51a4 	strh.w	r5, [r4, #420]	; 0x1a4
        boundingArea = calculateBoundingArea();
 80098aa:	f00b fb1f 	bl	8014eec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80098ae:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80098b2:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 80098b6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80098ba:	4b26      	ldr	r3, [pc, #152]	; (8009954 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x368>)
 80098bc:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_0C.setTypedText(touchgfx::TypedText(T___SINGLEUSE_XVJO));
 80098be:	ee1b 0a10 	vmov	r0, s22
 80098c2:	2314      	movs	r3, #20
 80098c4:	a90a      	add	r1, sp, #40	; 0x28
 80098c6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80098ca:	f00b fda9 	bl	8015420 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80098ce:	ee1b 1a10 	vmov	r1, s22
 80098d2:	4630      	mov	r0, r6
 80098d4:	f008 ff7c 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD3_Current.setPosition(0, 239, 240, 15);
 80098d8:	230f      	movs	r3, #15
 80098da:	22ef      	movs	r2, #239	; 0xef
 80098dc:	ee1b 0a90 	vmov	r0, s23
 80098e0:	9300      	str	r3, [sp, #0]
 80098e2:	4629      	mov	r1, r5
 80098e4:	23f0      	movs	r3, #240	; 0xf0
 80098e6:	f7f9 fe86 	bl	80035f6 <_ZN8touchgfx8Drawable11setPositionEssss>
 80098ea:	f8d4 31b8 	ldr.w	r3, [r4, #440]	; 0x1b8
        color = newColor;
 80098ee:	f8c4 81e8 	str.w	r8, [r4, #488]	; 0x1e8
        boundingArea = calculateBoundingArea();
 80098f2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 80098f6:	f8a4 51ec 	strh.w	r5, [r4, #492]	; 0x1ec
        boundingArea = calculateBoundingArea();
 80098fa:	ee1b 1a90 	vmov	r1, s23
 80098fe:	4638      	mov	r0, r7
 8009900:	4798      	blx	r3
 8009902:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8009906:	f8df b064 	ldr.w	fp, [pc, #100]	; 800996c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x380>
 800990a:	f504 73fa 	add.w	r3, r4, #500	; 0x1f4
 800990e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8009912:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(SMD3_CurrentBuffer, SMD3_CURRENT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_HT0R).getText());
 8009916:	f204 691c 	addw	r9, r4, #1564	; 0x61c
 800991a:	b92b      	cbnz	r3, 8009928 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x33c>
 800991c:	4b0e      	ldr	r3, [pc, #56]	; (8009958 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x36c>)
 800991e:	4a0f      	ldr	r2, [pc, #60]	; (800995c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x370>)
 8009920:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8009922:	480f      	ldr	r0, [pc, #60]	; (8009960 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x374>)
 8009924:	f023 ffc8 	bl	802d8b8 <__assert_func>
 8009928:	4b0e      	ldr	r3, [pc, #56]	; (8009964 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x378>)
 800992a:	881b      	ldrh	r3, [r3, #0]
 800992c:	2b18      	cmp	r3, #24
 800992e:	d81f      	bhi.n	8009970 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x384>
 8009930:	4b0d      	ldr	r3, [pc, #52]	; (8009968 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x37c>)
 8009932:	4a0a      	ldr	r2, [pc, #40]	; (800995c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x370>)
 8009934:	2161      	movs	r1, #97	; 0x61
 8009936:	e7f4      	b.n	8009922 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x336>
 8009938:	08030c0c 	.word	0x08030c0c
 800993c:	080319a8 	.word	0x080319a8
 8009940:	08031bf4 	.word	0x08031bf4
 8009944:	0802f4f4 	.word	0x0802f4f4
 8009948:	080316dc 	.word	0x080316dc
 800994c:	08030bf4 	.word	0x08030bf4
 8009950:	080095d5 	.word	0x080095d5
 8009954:	0802f454 	.word	0x0802f454
 8009958:	0802f2a4 	.word	0x0802f2a4
 800995c:	0802f3a9 	.word	0x0802f3a9
 8009960:	0802f321 	.word	0x0802f321
 8009964:	200138a8 	.word	0x200138a8
 8009968:	0802f368 	.word	0x0802f368
 800996c:	200138a4 	.word	0x200138a4
        return texts->getText(typedTextId);
 8009970:	4bdc      	ldr	r3, [pc, #880]	; (8009ce4 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x6f8>)
 8009972:	2118      	movs	r1, #24
 8009974:	6818      	ldr	r0, [r3, #0]
 8009976:	f000 fe6f 	bl	800a658 <_ZNK8touchgfx5Texts7getTextEt>
 800997a:	4adb      	ldr	r2, [pc, #876]	; (8009ce8 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x6fc>)
 800997c:	4603      	mov	r3, r0
 800997e:	210a      	movs	r1, #10
 8009980:	4648      	mov	r0, r9
 8009982:	f012 f9ab 	bl	801bcdc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8009986:	4ad9      	ldr	r2, [pc, #868]	; (8009cec <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x700>)
        wc1 = value;
 8009988:	f8c4 9200 	str.w	r9, [r4, #512]	; 0x200
 800998c:	2319      	movs	r3, #25
    SMD3_Current.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6OVJ));
 800998e:	ee1b 0a90 	vmov	r0, s23
 8009992:	a90a      	add	r1, sp, #40	; 0x28
 8009994:	920a      	str	r2, [sp, #40]	; 0x28
 8009996:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800999a:	f00b fd41 	bl	8015420 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800999e:	ee1b 1a90 	vmov	r1, s23
 80099a2:	4630      	mov	r0, r6
 80099a4:	f008 ff14 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD3_Frequency.setPosition(0, 224, 240, 15);
 80099a8:	210f      	movs	r1, #15
 80099aa:	22e0      	movs	r2, #224	; 0xe0
 80099ac:	ee1c 0a10 	vmov	r0, s24
 80099b0:	9100      	str	r1, [sp, #0]
 80099b2:	23f0      	movs	r3, #240	; 0xf0
 80099b4:	4629      	mov	r1, r5
 80099b6:	f7f9 fe1e 	bl	80035f6 <_ZN8touchgfx8Drawable11setPositionEssss>
 80099ba:	f8d4 3204 	ldr.w	r3, [r4, #516]	; 0x204
        color = newColor;
 80099be:	f8c4 8234 	str.w	r8, [r4, #564]	; 0x234
        boundingArea = calculateBoundingArea();
 80099c2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 80099c6:	f8a4 5238 	strh.w	r5, [r4, #568]	; 0x238
        boundingArea = calculateBoundingArea();
 80099ca:	ee1c 1a10 	vmov	r1, s24
 80099ce:	4638      	mov	r0, r7
 80099d0:	4798      	blx	r3
 80099d2:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80099d6:	f504 7310 	add.w	r3, r4, #576	; 0x240
 80099da:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80099de:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(SMD3_FrequencyBuffer, SMD3_FREQUENCY_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_YT2E).getText());
 80099e2:	f504 69c6 	add.w	r9, r4, #1584	; 0x630
 80099e6:	2b00      	cmp	r3, #0
 80099e8:	d098      	beq.n	800991c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x330>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80099ea:	49c1      	ldr	r1, [pc, #772]	; (8009cf0 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x704>)
 80099ec:	880b      	ldrh	r3, [r1, #0]
 80099ee:	2b16      	cmp	r3, #22
 80099f0:	d99e      	bls.n	8009930 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x344>
        return texts->getText(typedTextId);
 80099f2:	4bbc      	ldr	r3, [pc, #752]	; (8009ce4 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x6f8>)
 80099f4:	2116      	movs	r1, #22
 80099f6:	6818      	ldr	r0, [r3, #0]
 80099f8:	f000 fe2e 	bl	800a658 <_ZNK8touchgfx5Texts7getTextEt>
 80099fc:	4aba      	ldr	r2, [pc, #744]	; (8009ce8 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x6fc>)
 80099fe:	4603      	mov	r3, r0
 8009a00:	210a      	movs	r1, #10
 8009a02:	4648      	mov	r0, r9
 8009a04:	f012 f96a 	bl	801bcdc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    SMD3_Frequency.setTypedText(touchgfx::TypedText(T___SINGLEUSE_W5I5));
 8009a08:	a80a      	add	r0, sp, #40	; 0x28
        : typedTextId(id)
 8009a0a:	4ab8      	ldr	r2, [pc, #736]	; (8009cec <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x700>)
 8009a0c:	f8c4 924c 	str.w	r9, [r4, #588]	; 0x24c
 8009a10:	2317      	movs	r3, #23
 8009a12:	4601      	mov	r1, r0
 8009a14:	ee1c 0a10 	vmov	r0, s24
 8009a18:	920a      	str	r2, [sp, #40]	; 0x28
 8009a1a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8009a1e:	f00b fcff 	bl	8015420 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8009a22:	ee1c 1a10 	vmov	r1, s24
 8009a26:	4630      	mov	r0, r6
 8009a28:	f008 fed2 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD3_Distance.setPosition(0, 209, 240, 15);
 8009a2c:	200f      	movs	r0, #15
 8009a2e:	22d1      	movs	r2, #209	; 0xd1
 8009a30:	9000      	str	r0, [sp, #0]
 8009a32:	23f0      	movs	r3, #240	; 0xf0
 8009a34:	ee1c 0a90 	vmov	r0, s25
 8009a38:	4629      	mov	r1, r5
 8009a3a:	f7f9 fddc 	bl	80035f6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8009a3e:	f8d4 3250 	ldr.w	r3, [r4, #592]	; 0x250
        color = newColor;
 8009a42:	f8c4 8280 	str.w	r8, [r4, #640]	; 0x280
        boundingArea = calculateBoundingArea();
 8009a46:	4638      	mov	r0, r7
 8009a48:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8009a4c:	f8a4 5284 	strh.w	r5, [r4, #644]	; 0x284
        boundingArea = calculateBoundingArea();
 8009a50:	ee1c 1a90 	vmov	r1, s25
 8009a54:	4798      	blx	r3
 8009a56:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8009a5a:	f504 7323 	add.w	r3, r4, #652	; 0x28c
 8009a5e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8009a62:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(SMD3_DistanceBuffer, SMD3_DISTANCE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_EK4L).getText());
 8009a66:	f204 6744 	addw	r7, r4, #1604	; 0x644
 8009a6a:	2b00      	cmp	r3, #0
 8009a6c:	f43f af56 	beq.w	800991c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x330>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8009a70:	499f      	ldr	r1, [pc, #636]	; (8009cf0 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x704>)
 8009a72:	880b      	ldrh	r3, [r1, #0]
 8009a74:	2b15      	cmp	r3, #21
 8009a76:	f67f af5b 	bls.w	8009930 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x344>
        return texts->getText(typedTextId);
 8009a7a:	4b9a      	ldr	r3, [pc, #616]	; (8009ce4 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x6f8>)
 8009a7c:	2115      	movs	r1, #21
 8009a7e:	6818      	ldr	r0, [r3, #0]
 8009a80:	f000 fdea 	bl	800a658 <_ZNK8touchgfx5Texts7getTextEt>
 8009a84:	4a98      	ldr	r2, [pc, #608]	; (8009ce8 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x6fc>)
 8009a86:	4603      	mov	r3, r0
 8009a88:	210a      	movs	r1, #10
 8009a8a:	4638      	mov	r0, r7
 8009a8c:	f012 f926 	bl	801bcdc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8009a90:	4a96      	ldr	r2, [pc, #600]	; (8009cec <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x700>)
 8009a92:	f8c4 7298 	str.w	r7, [r4, #664]	; 0x298
 8009a96:	2336      	movs	r3, #54	; 0x36
    SMD3_Distance.setTypedText(touchgfx::TypedText(T_AMD3_DISTANCE));
 8009a98:	ee1c 0a90 	vmov	r0, s25
 8009a9c:	a90a      	add	r1, sp, #40	; 0x28
 8009a9e:	920a      	str	r2, [sp, #40]	; 0x28
 8009aa0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8009aa4:	f00b fcbc 	bl	8015420 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8009aa8:	ee1c 1a90 	vmov	r1, s25
 8009aac:	4630      	mov	r0, r6
 8009aae:	f008 fe8f 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8009ab2:	2304      	movs	r3, #4
    SMD3_Gauge.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_BACKGROUNDS_LIGHT_PRECISION_ID));
 8009ab4:	a90a      	add	r1, sp, #40	; 0x28
 8009ab6:	4650      	mov	r0, sl
 8009ab8:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8009abc:	f008 fe1a 	bl	80126f4 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    SMD3_Gauge.setPosition(28, 103, 184, 106);
 8009ac0:	236a      	movs	r3, #106	; 0x6a
 8009ac2:	9300      	str	r3, [sp, #0]
 8009ac4:	2267      	movs	r2, #103	; 0x67
 8009ac6:	23b8      	movs	r3, #184	; 0xb8
 8009ac8:	211c      	movs	r1, #28
 8009aca:	4650      	mov	r0, sl
 8009acc:	f7f9 fd93 	bl	80035f6 <_ZN8touchgfx8Drawable11setPositionEssss>
    SMD3_Gauge.setCenter(92, 92);
 8009ad0:	225c      	movs	r2, #92	; 0x5c
 8009ad2:	4611      	mov	r1, r2
 8009ad4:	4650      	mov	r0, sl
 8009ad6:	f00b ffc2 	bl	8015a5e <_ZN8touchgfx5Gauge9setCenterEii>
    SMD3_Gauge.setStartEndAngle(-90, 90);
 8009ada:	225a      	movs	r2, #90	; 0x5a
 8009adc:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8009ae0:	4650      	mov	r0, sl
 8009ae2:	f00c f841 	bl	8015b68 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    SMD3_Gauge.setRange(-90, 90);
 8009ae6:	462b      	mov	r3, r5
 8009ae8:	225a      	movs	r2, #90	; 0x5a
 8009aea:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8009aee:	4650      	mov	r0, sl
 8009af0:	9500      	str	r5, [sp, #0]
 8009af2:	f008 fcac 	bl	801244e <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    SMD3_Gauge.setValue(0);
 8009af6:	4629      	mov	r1, r5
 8009af8:	4650      	mov	r0, sl
 8009afa:	f00b ffdf 	bl	8015abc <_ZN8touchgfx5Gauge8setValueEi>
    SMD3_Gauge.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_NEEDLES_ROUGH_ID, 8, 53);
 8009afe:	2335      	movs	r3, #53	; 0x35
 8009b00:	2208      	movs	r2, #8
 8009b02:	2105      	movs	r1, #5
 8009b04:	4650      	mov	r0, sl
 8009b06:	f00b ff95 	bl	8015a34 <_ZN8touchgfx5Gauge9setNeedleEtss>
    SMD3_Gauge.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8009b0a:	2101      	movs	r1, #1
 8009b0c:	4650      	mov	r0, sl
 8009b0e:	f00b ff33 	bl	8015978 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    SMD3_Gauge.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8009b12:	2101      	movs	r1, #1
 8009b14:	4650      	mov	r0, sl
 8009b16:	f00b ff32 	bl	801597e <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
 8009b1a:	4651      	mov	r1, sl
 8009b1c:	4630      	mov	r0, r6
 8009b1e:	f008 fe57 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line2.setPosition(0, 75, 240, 10);
 8009b22:	230a      	movs	r3, #10
 8009b24:	ee18 0a10 	vmov	r0, s16
 8009b28:	9300      	str	r3, [sp, #0]
 8009b2a:	224b      	movs	r2, #75	; 0x4b
 8009b2c:	23f0      	movs	r3, #240	; 0xf0
 8009b2e:	4629      	mov	r1, r5
 8009b30:	f7f9 fd61 	bl	80035f6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8009b34:	9b02      	ldr	r3, [sp, #8]
 8009b36:	f8c4 3464 	str.w	r3, [r4, #1124]	; 0x464
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8009b3a:	22a0      	movs	r2, #160	; 0xa0
 8009b3c:	4611      	mov	r1, r2
 8009b3e:	ee18 0a10 	vmov	r0, s16
 8009b42:	f8c4 84b8 	str.w	r8, [r4, #1208]	; 0x4b8
        color565 = LCD16bpp::getNativeColor(painterColor);
 8009b46:	f8a4 84bc 	strh.w	r8, [r4, #1212]	; 0x4bc
 8009b4a:	f00b f823 	bl	8014b94 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8009b4e:	ee18 0a10 	vmov	r0, s16
 8009b52:	22a0      	movs	r2, #160	; 0xa0
 8009b54:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8009b58:	f00b f827 	bl	8014baa <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8009b5c:	f8d4 3478 	ldr.w	r3, [r4, #1144]	; 0x478
 8009b60:	2b20      	cmp	r3, #32
 8009b62:	d006      	beq.n	8009b72 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x586>
        lineWidthQ5 = widthQ5;
 8009b64:	2320      	movs	r3, #32
        updateCachedShape();
 8009b66:	ee18 0a10 	vmov	r0, s16
        lineWidthQ5 = widthQ5;
 8009b6a:	f8c4 3478 	str.w	r3, [r4, #1144]	; 0x478
        updateCachedShape();
 8009b6e:	f00a ff1b 	bl	80149a8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8009b72:	ee18 0a10 	vmov	r0, s16
 8009b76:	2101      	movs	r1, #1
 8009b78:	f00b f822 	bl	8014bc0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8009b7c:	ee18 1a10 	vmov	r1, s16
 8009b80:	4630      	mov	r0, r6
 8009b82:	f008 fe25 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8009b86:	f04f 38ff 	mov.w	r8, #4294967295
    textArea_menu.setXY(31, 60);
 8009b8a:	223c      	movs	r2, #60	; 0x3c
 8009b8c:	ee19 0a10 	vmov	r0, s18
 8009b90:	211f      	movs	r1, #31
        linespace = space;
 8009b92:	f04f 0900 	mov.w	r9, #0
        boundingArea = calculateBoundingArea();
 8009b96:	ad04      	add	r5, sp, #16
 8009b98:	f7f9 fd20 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8009b9c:	ee19 1a10 	vmov	r1, s18
 8009ba0:	4628      	mov	r0, r5
        color = newColor;
 8009ba2:	f8c4 84f0 	str.w	r8, [r4, #1264]	; 0x4f0
        linespace = space;
 8009ba6:	f8a4 94f4 	strh.w	r9, [r4, #1268]	; 0x4f4
        boundingArea = calculateBoundingArea();
 8009baa:	f00b f99f 	bl	8014eec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8009bae:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8009bb2:	ee19 3a10 	vmov	r3, s18
 8009bb6:	333c      	adds	r3, #60	; 0x3c
 8009bb8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8009bbc:	4f4b      	ldr	r7, [pc, #300]	; (8009cec <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x700>)
 8009bbe:	970a      	str	r7, [sp, #40]	; 0x28
 8009bc0:	2350      	movs	r3, #80	; 0x50
    textArea_menu.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0LJ7));
 8009bc2:	ee19 0a10 	vmov	r0, s18
 8009bc6:	a90a      	add	r1, sp, #40	; 0x28
 8009bc8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8009bcc:	f00b fc28 	bl	8015420 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8009bd0:	ee19 1a10 	vmov	r1, s18
 8009bd4:	4630      	mov	r0, r6
 8009bd6:	f008 fdfb 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8009bda:	230a      	movs	r3, #10
 8009bdc:	ee18 0a90 	vmov	r0, s17
 8009be0:	9300      	str	r3, [sp, #0]
 8009be2:	2232      	movs	r2, #50	; 0x32
 8009be4:	23f0      	movs	r3, #240	; 0xf0
 8009be6:	4649      	mov	r1, r9
 8009be8:	f7f9 fd05 	bl	80035f6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8009bec:	9b03      	ldr	r3, [sp, #12]
 8009bee:	f8c4 3530 	str.w	r3, [r4, #1328]	; 0x530
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8009bf2:	22a0      	movs	r2, #160	; 0xa0
 8009bf4:	4611      	mov	r1, r2
 8009bf6:	ee18 0a90 	vmov	r0, s17
 8009bfa:	f8c4 8584 	str.w	r8, [r4, #1412]	; 0x584
 8009bfe:	f8a4 8588 	strh.w	r8, [r4, #1416]	; 0x588
 8009c02:	f00a ffc7 	bl	8014b94 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8009c06:	ee18 0a90 	vmov	r0, s17
 8009c0a:	22a0      	movs	r2, #160	; 0xa0
 8009c0c:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8009c10:	f00a ffcb 	bl	8014baa <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8009c14:	f8d4 3544 	ldr.w	r3, [r4, #1348]	; 0x544
 8009c18:	2b20      	cmp	r3, #32
 8009c1a:	d006      	beq.n	8009c2a <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x63e>
        lineWidthQ5 = widthQ5;
 8009c1c:	2320      	movs	r3, #32
        updateCachedShape();
 8009c1e:	ee18 0a90 	vmov	r0, s17
        lineWidthQ5 = widthQ5;
 8009c22:	f8c4 3544 	str.w	r3, [r4, #1348]	; 0x544
        updateCachedShape();
 8009c26:	f00a febf 	bl	80149a8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8009c2a:	ee18 0a90 	vmov	r0, s17
 8009c2e:	2101      	movs	r1, #1
 8009c30:	f00a ffc6 	bl	8014bc0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8009c34:	ee18 1a90 	vmov	r1, s17
 8009c38:	4630      	mov	r0, r6
 8009c3a:	f008 fdc9 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8009c3e:	f04f 39ff 	mov.w	r9, #4294967295
    textArea_name.setXY(69, 35);
 8009c42:	ee19 0a90 	vmov	r0, s19
 8009c46:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 8009c48:	f04f 0800 	mov.w	r8, #0
 8009c4c:	2145      	movs	r1, #69	; 0x45
 8009c4e:	f7f9 fcc5 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8009c52:	ee19 1a90 	vmov	r1, s19
 8009c56:	4628      	mov	r0, r5
        color = newColor;
 8009c58:	f8c4 95bc 	str.w	r9, [r4, #1468]	; 0x5bc
        linespace = space;
 8009c5c:	f8a4 85c0 	strh.w	r8, [r4, #1472]	; 0x5c0
        boundingArea = calculateBoundingArea();
 8009c60:	f00b f944 	bl	8014eec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8009c64:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8009c68:	ee19 3a90 	vmov	r3, s19
 8009c6c:	333c      	adds	r3, #60	; 0x3c
 8009c6e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8009c72:	235b      	movs	r3, #91	; 0x5b
    textArea_name.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DCTT));
 8009c74:	ee19 0a90 	vmov	r0, s19
 8009c78:	a90a      	add	r1, sp, #40	; 0x28
 8009c7a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8009c7e:	970a      	str	r7, [sp, #40]	; 0x28
 8009c80:	f00b fbce 	bl	8015420 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8009c84:	ee19 1a90 	vmov	r1, s19
 8009c88:	4630      	mov	r0, r6
 8009c8a:	f008 fda1 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_title.setXY(54, 12);
 8009c8e:	ee1a 0a10 	vmov	r0, s20
 8009c92:	220c      	movs	r2, #12
 8009c94:	2136      	movs	r1, #54	; 0x36
 8009c96:	f7f9 fca1 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8009c9a:	ee1a 1a10 	vmov	r1, s20
 8009c9e:	4628      	mov	r0, r5
        color = newColor;
 8009ca0:	f8c4 9604 	str.w	r9, [r4, #1540]	; 0x604
        linespace = space;
 8009ca4:	f8a4 8608 	strh.w	r8, [r4, #1544]	; 0x608
        boundingArea = calculateBoundingArea();
 8009ca8:	f00b f920 	bl	8014eec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8009cac:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8009cb0:	ee1a 3a10 	vmov	r3, s20
 8009cb4:	333c      	adds	r3, #60	; 0x3c
 8009cb6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8009cba:	235a      	movs	r3, #90	; 0x5a
    textArea_title.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SPOY));
 8009cbc:	ee1a 0a10 	vmov	r0, s20
 8009cc0:	a90a      	add	r1, sp, #40	; 0x28
 8009cc2:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8009cc6:	970a      	str	r7, [sp, #40]	; 0x28
 8009cc8:	f00b fbaa 	bl	8015420 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8009ccc:	4630      	mov	r0, r6
 8009cce:	ee1a 1a10 	vmov	r1, s20
 8009cd2:	f008 fd7d 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8009cd6:	4620      	mov	r0, r4
 8009cd8:	b00d      	add	sp, #52	; 0x34
 8009cda:	ecbd 8b0a 	vpop	{d8-d12}
 8009cde:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009ce2:	bf00      	nop
 8009ce4:	200138b0 	.word	0x200138b0
 8009ce8:	0802f3e1 	.word	0x0802f3e1
 8009cec:	0802f454 	.word	0x0802f454
 8009cf0:	200138a8 	.word	0x200138a8

08009cf4 <_ZN20Project_InfoViewBase11setupScreenEv>:
}

void Project_InfoViewBase::setupScreen()
{

}
 8009cf4:	4770      	bx	lr

08009cf6 <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8009cf6:	4770      	bx	lr

08009cf8 <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8009cf8:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8009cfa:	68c2      	ldr	r2, [r0, #12]
 8009cfc:	6844      	ldr	r4, [r0, #4]
 8009cfe:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8009d00:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8009d02:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8009d06:	07d2      	lsls	r2, r2, #31
 8009d08:	bf48      	it	mi
 8009d0a:	5962      	ldrmi	r2, [r4, r5]
 8009d0c:	689b      	ldr	r3, [r3, #8]
    }
 8009d0e:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8009d10:	bf48      	it	mi
 8009d12:	58d3      	ldrmi	r3, [r2, r3]
 8009d14:	4718      	bx	r3

08009d16 <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8009d16:	6843      	ldr	r3, [r0, #4]
 8009d18:	b12b      	cbz	r3, 8009d26 <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8009d1a:	6883      	ldr	r3, [r0, #8]
 8009d1c:	b92b      	cbnz	r3, 8009d2a <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8009d1e:	68c0      	ldr	r0, [r0, #12]
 8009d20:	f000 0001 	and.w	r0, r0, #1
 8009d24:	4770      	bx	lr
 8009d26:	4618      	mov	r0, r3
 8009d28:	4770      	bx	lr
 8009d2a:	2001      	movs	r0, #1
    }
 8009d2c:	4770      	bx	lr

08009d2e <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8009d2e:	b510      	push	{r4, lr}
 8009d30:	2110      	movs	r1, #16
 8009d32:	4604      	mov	r4, r0
 8009d34:	f022 fed9 	bl	802caea <_ZdlPvj>
 8009d38:	4620      	mov	r0, r4
 8009d3a:	bd10      	pop	{r4, pc}

08009d3c <_ZN20Project_InfoViewBaseD1Ev>:
Project_InfoViewBase::~Project_InfoViewBase()
 8009d3c:	b510      	push	{r4, lr}
 8009d3e:	4b03      	ldr	r3, [pc, #12]	; (8009d4c <_ZN20Project_InfoViewBaseD1Ev+0x10>)
 8009d40:	6003      	str	r3, [r0, #0]
 8009d42:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8009d44:	f00d f91a 	bl	8016f7c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8009d48:	4620      	mov	r0, r4
 8009d4a:	bd10      	pop	{r4, pc}
 8009d4c:	08030c58 	.word	0x08030c58

08009d50 <_ZN20Project_InfoViewBaseD0Ev>:
Project_InfoViewBase::~Project_InfoViewBase()
 8009d50:	b507      	push	{r0, r1, r2, lr}
 8009d52:	4b07      	ldr	r3, [pc, #28]	; (8009d70 <_ZN20Project_InfoViewBaseD0Ev+0x20>)
 8009d54:	6003      	str	r3, [r0, #0]
 8009d56:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8009d58:	f00d f910 	bl	8016f7c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8009d5c:	9801      	ldr	r0, [sp, #4]
 8009d5e:	f241 117c 	movw	r1, #4476	; 0x117c
 8009d62:	f022 fec2 	bl	802caea <_ZdlPvj>
 8009d66:	9801      	ldr	r0, [sp, #4]
 8009d68:	b003      	add	sp, #12
 8009d6a:	f85d fb04 	ldr.w	pc, [sp], #4
 8009d6e:	bf00      	nop
 8009d70:	08030c58 	.word	0x08030c58

08009d74 <_ZN20Project_InfoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Project_InfoViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel_Return)
 8009d74:	30e4      	adds	r0, #228	; 0xe4
 8009d76:	4288      	cmp	r0, r1
{
 8009d78:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel_Return)
 8009d7a:	d105      	bne.n	8009d88 <_ZN20Project_InfoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Project_InfoViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8009d7c:	f00e fe00 	bl	8018980 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel_Return clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
    }
}
 8009d80:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMain_MenuScreenWipeTransitionWest();
 8009d84:	f7fb bbdc 	b.w	8005540 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
}
 8009d88:	bd08      	pop	{r3, pc}
	...

08009d8c <_ZN20Project_InfoViewBaseC1Ev>:
Project_InfoViewBase::Project_InfoViewBase() :
 8009d8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009d90:	ed2d 8b06 	vpush	{d8-d10}
 8009d94:	4604      	mov	r4, r0
 8009d96:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Project_InfoViewBase::buttonCallbackHandler)
 8009d98:	46a3      	mov	fp, r4
 8009d9a:	2500      	movs	r5, #0
 8009d9c:	f010 fa70 	bl	801a280 <_ZN8touchgfx6ScreenC1Ev>
 8009da0:	4b6e      	ldr	r3, [pc, #440]	; (8009f5c <_ZN20Project_InfoViewBaseC1Ev+0x1d0>)
 8009da2:	63e5      	str	r5, [r4, #60]	; 0x3c
 8009da4:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8009da8:	2226      	movs	r2, #38	; 0x26
 8009daa:	4629      	mov	r1, r5
 8009dac:	4658      	mov	r0, fp
 8009dae:	f023 ff88 	bl	802dcc2 <memset>
 8009db2:	4658      	mov	r0, fp
 8009db4:	f7f9 fc44 	bl	8003640 <_ZN8touchgfx6WidgetC1Ev>
 8009db8:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8009dbc:	26ff      	movs	r6, #255	; 0xff
 8009dbe:	4b68      	ldr	r3, [pc, #416]	; (8009f60 <_ZN20Project_InfoViewBaseC1Ev+0x1d4>)
 8009dc0:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8009dc2:	2226      	movs	r2, #38	; 0x26
 8009dc4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8009dc8:	4629      	mov	r1, r5
 8009dca:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8009dce:	4650      	mov	r0, sl
 8009dd0:	66a5      	str	r5, [r4, #104]	; 0x68
 8009dd2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8009dd6:	f023 ff74 	bl	802dcc2 <memset>
 8009dda:	4650      	mov	r0, sl
 8009ddc:	f7f9 fc30 	bl	8003640 <_ZN8touchgfx6WidgetC1Ev>
 8009de0:	4b60      	ldr	r3, [pc, #384]	; (8009f64 <_ZN20Project_InfoViewBaseC1Ev+0x1d8>)
 8009de2:	66e3      	str	r3, [r4, #108]	; 0x6c
 8009de4:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8009de8:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8009dec:	a90a      	add	r1, sp, #40	; 0x28
 8009dee:	4650      	mov	r0, sl
 8009df0:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8009df4:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8009df8:	f00c f8c3 	bl	8015f82 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8009dfc:	4648      	mov	r0, r9
 8009dfe:	f7f9 fc83 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8009e02:	4b59      	ldr	r3, [pc, #356]	; (8009f68 <_ZN20Project_InfoViewBaseC1Ev+0x1dc>)
 8009e04:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8009e08:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 8009e0c:	4618      	mov	r0, r3
 8009e0e:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8009e12:	ee09 3a90 	vmov	s19, r3
 8009e16:	f00c f9eb 	bl	80161f0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8009e1a:	f504 7396 	add.w	r3, r4, #300	; 0x12c
 8009e1e:	4618      	mov	r0, r3
 8009e20:	f504 78ba 	add.w	r8, r4, #372	; 0x174
 8009e24:	ee0a 3a10 	vmov	s20, r3
 8009e28:	f7f9 fc6e 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
 8009e2c:	4640      	mov	r0, r8
 8009e2e:	f00a fd9b 	bl	8014968 <_ZN8touchgfx4LineC1Ev>
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8009e32:	4e4e      	ldr	r6, [pc, #312]	; (8009f6c <_ZN20Project_InfoViewBaseC1Ev+0x1e0>)
 8009e34:	f504 73f2 	add.w	r3, r4, #484	; 0x1e4
 8009e38:	4618      	mov	r0, r3
 8009e3a:	9302      	str	r3, [sp, #8]
 8009e3c:	f7f9 fa04 	bl	8003248 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8009e40:	f106 0324 	add.w	r3, r6, #36	; 0x24
 8009e44:	f8c4 31ec 	str.w	r3, [r4, #492]	; 0x1ec
 8009e48:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8009e4c:	4618      	mov	r0, r3
 8009e4e:	f8c4 61e4 	str.w	r6, [r4, #484]	; 0x1e4
 8009e52:	f8c4 51f0 	str.w	r5, [r4, #496]	; 0x1f0
 8009e56:	f504 7710 	add.w	r7, r4, #576	; 0x240
 8009e5a:	ee08 3a10 	vmov	s16, r3
 8009e5e:	f7f9 fc53 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
 8009e62:	4638      	mov	r0, r7
 8009e64:	f00a fd80 	bl	8014968 <_ZN8touchgfx4LineC1Ev>
 8009e68:	f504 732c 	add.w	r3, r4, #688	; 0x2b0
 8009e6c:	4618      	mov	r0, r3
 8009e6e:	9303      	str	r3, [sp, #12]
 8009e70:	f7f9 f9ea 	bl	8003248 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8009e74:	f106 0324 	add.w	r3, r6, #36	; 0x24
 8009e78:	f8c4 32b8 	str.w	r3, [r4, #696]	; 0x2b8
 8009e7c:	f504 7331 	add.w	r3, r4, #708	; 0x2c4
 8009e80:	f8c4 62b0 	str.w	r6, [r4, #688]	; 0x2b0
 8009e84:	4618      	mov	r0, r3
 8009e86:	f8c4 52bc 	str.w	r5, [r4, #700]	; 0x2bc
 8009e8a:	ee08 3a90 	vmov	s17, r3
 8009e8e:	f7f9 fc3b 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
 8009e92:	f504 7343 	add.w	r3, r4, #780	; 0x30c
 8009e96:	4618      	mov	r0, r3
 8009e98:	ee09 3a10 	vmov	s18, r3
 8009e9c:	f7f9 fc34 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8009ea0:	4a33      	ldr	r2, [pc, #204]	; (8009f70 <_ZN20Project_InfoViewBaseC1Ev+0x1e4>)
 8009ea2:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8009ea6:	e9c3 245b 	strd	r2, r4, [r3, #364]	; 0x16c
 8009eaa:	4a32      	ldr	r2, [pc, #200]	; (8009f74 <_ZN20Project_InfoViewBaseC1Ev+0x1e8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8009eac:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8009eb0:	e9c3 255d 	strd	r2, r5, [r3, #372]	; 0x174
 8009eb4:	f504 7057 	add.w	r0, r4, #860	; 0x35c
 8009eb8:	f00d f856 	bl	8016f68 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8009ebc:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8009ec0:	462a      	mov	r2, r5
 8009ec2:	4658      	mov	r0, fp
 8009ec4:	9300      	str	r3, [sp, #0]
 8009ec6:	4629      	mov	r1, r5
 8009ec8:	23f0      	movs	r3, #240	; 0xf0
 8009eca:	f7f9 fb94 	bl	80035f6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8009ece:	1d26      	adds	r6, r4, #4
        color = newColor;
 8009ed0:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8009ed4:	66a3      	str	r3, [r4, #104]	; 0x68
 8009ed6:	4659      	mov	r1, fp
 8009ed8:	4630      	mov	r0, r6
 8009eda:	f008 fc79 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image_background.setXY(0, 0);
 8009ede:	462a      	mov	r2, r5
 8009ee0:	4650      	mov	r0, sl
 8009ee2:	4629      	mov	r1, r5
 8009ee4:	f7f9 fb7a 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8009ee8:	2308      	movs	r3, #8
    image_background.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8009eea:	4650      	mov	r0, sl
 8009eec:	a90a      	add	r1, sp, #40	; 0x28
 8009eee:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8009ef2:	f00c f846 	bl	8015f82 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8009ef6:	4651      	mov	r1, sl
 8009ef8:	4630      	mov	r0, r6
 8009efa:	f008 fc69 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_auto_off.setXY(86, 308);
 8009efe:	f44f 729a 	mov.w	r2, #308	; 0x134
 8009f02:	2156      	movs	r1, #86	; 0x56
 8009f04:	4648      	mov	r0, r9
 8009f06:	f7f9 fb69 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8009f0a:	f04f 33ff 	mov.w	r3, #4294967295
 8009f0e:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8009f12:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8009f16:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8009f1a:	f10d 0b10 	add.w	fp, sp, #16
 8009f1e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8009f22:	4649      	mov	r1, r9
 8009f24:	4658      	mov	r0, fp
 8009f26:	4798      	blx	r3
 8009f28:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8009f2c:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8009f30:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8009f34:	4b10      	ldr	r3, [pc, #64]	; (8009f78 <_ZN20Project_InfoViewBaseC1Ev+0x1ec>)
 8009f36:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_5C9S).getText());
 8009f38:	f504 7a55 	add.w	sl, r4, #852	; 0x354
 8009f3c:	b92b      	cbnz	r3, 8009f4a <_ZN20Project_InfoViewBaseC1Ev+0x1be>
 8009f3e:	4b0f      	ldr	r3, [pc, #60]	; (8009f7c <_ZN20Project_InfoViewBaseC1Ev+0x1f0>)
 8009f40:	4a0f      	ldr	r2, [pc, #60]	; (8009f80 <_ZN20Project_InfoViewBaseC1Ev+0x1f4>)
 8009f42:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8009f44:	480f      	ldr	r0, [pc, #60]	; (8009f84 <_ZN20Project_InfoViewBaseC1Ev+0x1f8>)
 8009f46:	f023 fcb7 	bl	802d8b8 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8009f4a:	4b0f      	ldr	r3, [pc, #60]	; (8009f88 <_ZN20Project_InfoViewBaseC1Ev+0x1fc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8009f4c:	881b      	ldrh	r3, [r3, #0]
 8009f4e:	2b3e      	cmp	r3, #62	; 0x3e
 8009f50:	d81e      	bhi.n	8009f90 <_ZN20Project_InfoViewBaseC1Ev+0x204>
 8009f52:	4b0e      	ldr	r3, [pc, #56]	; (8009f8c <_ZN20Project_InfoViewBaseC1Ev+0x200>)
 8009f54:	4a0a      	ldr	r2, [pc, #40]	; (8009f80 <_ZN20Project_InfoViewBaseC1Ev+0x1f4>)
 8009f56:	2161      	movs	r1, #97	; 0x61
 8009f58:	e7f4      	b.n	8009f44 <_ZN20Project_InfoViewBaseC1Ev+0x1b8>
 8009f5a:	bf00      	nop
 8009f5c:	08030c58 	.word	0x08030c58
 8009f60:	080319a8 	.word	0x080319a8
 8009f64:	08031bf4 	.word	0x08031bf4
 8009f68:	0802f4f4 	.word	0x0802f4f4
 8009f6c:	080316dc 	.word	0x080316dc
 8009f70:	08030c40 	.word	0x08030c40
 8009f74:	08009d75 	.word	0x08009d75
 8009f78:	200138a4 	.word	0x200138a4
 8009f7c:	0802f2a4 	.word	0x0802f2a4
 8009f80:	0802f3a9 	.word	0x0802f3a9
 8009f84:	0802f321 	.word	0x0802f321
 8009f88:	200138a8 	.word	0x200138a8
 8009f8c:	0802f368 	.word	0x0802f368
        return texts->getText(typedTextId);
 8009f90:	4ba0      	ldr	r3, [pc, #640]	; (800a214 <_ZN20Project_InfoViewBaseC1Ev+0x488>)
 8009f92:	213e      	movs	r1, #62	; 0x3e
 8009f94:	6818      	ldr	r0, [r3, #0]
 8009f96:	f000 fb5f 	bl	800a658 <_ZNK8touchgfx5Texts7getTextEt>
 8009f9a:	4a9f      	ldr	r2, [pc, #636]	; (800a218 <_ZN20Project_InfoViewBaseC1Ev+0x48c>)
 8009f9c:	4603      	mov	r3, r0
 8009f9e:	2104      	movs	r1, #4
 8009fa0:	4650      	mov	r0, sl
 8009fa2:	f011 fe9b 	bl	801bcdc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8009fa6:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
    textArea_auto_off.resizeToCurrentText();
 8009faa:	4648      	mov	r0, r9
 8009fac:	f00b fa18 	bl	80153e0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8009fb0:	f8df a268 	ldr.w	sl, [pc, #616]	; 800a21c <_ZN20Project_InfoViewBaseC1Ev+0x490>
 8009fb4:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8009fb8:	233f      	movs	r3, #63	; 0x3f
    textArea_auto_off.setTypedText(touchgfx::TypedText(T___SINGLEUSE_KYIO));
 8009fba:	a90a      	add	r1, sp, #40	; 0x28
 8009fbc:	4648      	mov	r0, r9
 8009fbe:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8009fc2:	f00b fa2d 	bl	8015420 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8009fc6:	4649      	mov	r1, r9
 8009fc8:	4630      	mov	r0, r6
 8009fca:	f008 fc01 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_Return.setXY(33, 240);
 8009fce:	ee19 0a90 	vmov	r0, s19
 8009fd2:	22f0      	movs	r2, #240	; 0xf0
 8009fd4:	2121      	movs	r1, #33	; 0x21
 8009fd6:	f7f9 fb01 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8009fda:	2303      	movs	r3, #3
    buttonWithLabel_Return.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8009fdc:	aa0a      	add	r2, sp, #40	; 0x28
 8009fde:	a909      	add	r1, sp, #36	; 0x24
 8009fe0:	ee19 0a90 	vmov	r0, s19
 8009fe4:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8009fe8:	2302      	movs	r3, #2
 8009fea:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8009fee:	f00b fdd2 	bl	8015b96 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8009ff2:	2364      	movs	r3, #100	; 0x64
        updateTextPosition();
 8009ff4:	ee19 0a90 	vmov	r0, s19
 8009ff8:	f8a4 311c 	strh.w	r3, [r4, #284]	; 0x11c
 8009ffc:	f7f9 fb32 	bl	8003664 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 800a000:	f04f 33ff 	mov.w	r3, #4294967295
        colorPressed = col;
 800a004:	e9c4 3348 	strd	r3, r3, [r4, #288]	; 0x120
    buttonWithLabel_Return.setAction(buttonCallback);
 800a008:	f504 538b 	add.w	r3, r4, #4448	; 0x1160
 800a00c:	330c      	adds	r3, #12
 800a00e:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
 800a012:	ee19 1a90 	vmov	r1, s19
 800a016:	4630      	mov	r0, r6
 800a018:	f008 fbda 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_Info.setXY(7, 91);
 800a01c:	225b      	movs	r2, #91	; 0x5b
 800a01e:	ee1a 0a10 	vmov	r0, s20
 800a022:	2107      	movs	r1, #7
 800a024:	f7f9 fada 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800a028:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 800a02c:	ee1a 1a10 	vmov	r1, s20
        color = newColor;
 800a030:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
        boundingArea = calculateBoundingArea();
 800a034:	4658      	mov	r0, fp
        linespace = space;
 800a036:	f8a4 5160 	strh.w	r5, [r4, #352]	; 0x160
        boundingArea = calculateBoundingArea();
 800a03a:	f00a ff57 	bl	8014eec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800a03e:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 800a042:	f504 73b4 	add.w	r3, r4, #360	; 0x168
 800a046:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 800a04a:	2365      	movs	r3, #101	; 0x65
    textArea_Info.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9J9T));
 800a04c:	ee1a 0a10 	vmov	r0, s20
 800a050:	a90a      	add	r1, sp, #40	; 0x28
 800a052:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800a056:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 800a05a:	f00b f9e1 	bl	8015420 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800a05e:	ee1a 1a10 	vmov	r1, s20
 800a062:	4630      	mov	r0, r6
 800a064:	f008 fbb4 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line2.setPosition(0, 75, 240, 10);
 800a068:	230a      	movs	r3, #10
 800a06a:	9300      	str	r3, [sp, #0]
 800a06c:	224b      	movs	r2, #75	; 0x4b
 800a06e:	23f0      	movs	r3, #240	; 0xf0
 800a070:	4629      	mov	r1, r5
 800a072:	4640      	mov	r0, r8
 800a074:	f7f9 fabf 	bl	80035f6 <_ZN8touchgfx8Drawable11setPositionEssss>
 800a078:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800a07c:	22a0      	movs	r2, #160	; 0xa0
 800a07e:	f8c4 31f0 	str.w	r3, [r4, #496]	; 0x1f0
        color565 = LCD16bpp::getNativeColor(painterColor);
 800a082:	f8a4 31f4 	strh.w	r3, [r4, #500]	; 0x1f4
 800a086:	9b02      	ldr	r3, [sp, #8]
 800a088:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 800a08c:	4611      	mov	r1, r2
 800a08e:	4640      	mov	r0, r8
 800a090:	f00a fd80 	bl	8014b94 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800a094:	22a0      	movs	r2, #160	; 0xa0
 800a096:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 800a09a:	4640      	mov	r0, r8
 800a09c:	f00a fd85 	bl	8014baa <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800a0a0:	f8d4 31b0 	ldr.w	r3, [r4, #432]	; 0x1b0
 800a0a4:	2b20      	cmp	r3, #32
 800a0a6:	d005      	beq.n	800a0b4 <_ZN20Project_InfoViewBaseC1Ev+0x328>
        lineWidthQ5 = widthQ5;
 800a0a8:	2320      	movs	r3, #32
 800a0aa:	f8c4 31b0 	str.w	r3, [r4, #432]	; 0x1b0
        updateCachedShape();
 800a0ae:	4640      	mov	r0, r8
 800a0b0:	f00a fc7a 	bl	80149a8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800a0b4:	4640      	mov	r0, r8
 800a0b6:	2101      	movs	r1, #1
 800a0b8:	f00a fd82 	bl	8014bc0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800a0bc:	4641      	mov	r1, r8
 800a0be:	4630      	mov	r0, r6
 800a0c0:	f008 fb86 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 800a0c4:	f04f 38ff 	mov.w	r8, #4294967295
    textArea_menu.setXY(70, 60);
 800a0c8:	223c      	movs	r2, #60	; 0x3c
        linespace = space;
 800a0ca:	f04f 0900 	mov.w	r9, #0
 800a0ce:	ee18 0a10 	vmov	r0, s16
 800a0d2:	2146      	movs	r1, #70	; 0x46
        boundingArea = calculateBoundingArea();
 800a0d4:	ad04      	add	r5, sp, #16
 800a0d6:	f7f9 fa81 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 800a0da:	ee18 1a10 	vmov	r1, s16
 800a0de:	4628      	mov	r0, r5
        color = newColor;
 800a0e0:	f8c4 8228 	str.w	r8, [r4, #552]	; 0x228
        linespace = space;
 800a0e4:	f8a4 922c 	strh.w	r9, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 800a0e8:	f00a ff00 	bl	8014eec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800a0ec:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800a0f0:	ee18 3a10 	vmov	r3, s16
 800a0f4:	333c      	adds	r3, #60	; 0x3c
 800a0f6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    textArea_menu.setTypedText(touchgfx::TypedText(T___SINGLEUSE_BYJD));
 800a0fa:	ee18 0a10 	vmov	r0, s16
 800a0fe:	a90a      	add	r1, sp, #40	; 0x28
 800a100:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 800a104:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 800a108:	f00b f98a 	bl	8015420 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800a10c:	ee18 1a10 	vmov	r1, s16
 800a110:	4630      	mov	r0, r6
 800a112:	f008 fb5d 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 800a116:	230a      	movs	r3, #10
 800a118:	9300      	str	r3, [sp, #0]
 800a11a:	2232      	movs	r2, #50	; 0x32
 800a11c:	23f0      	movs	r3, #240	; 0xf0
 800a11e:	4649      	mov	r1, r9
 800a120:	4638      	mov	r0, r7
 800a122:	f7f9 fa68 	bl	80035f6 <_ZN8touchgfx8Drawable11setPositionEssss>
 800a126:	9b03      	ldr	r3, [sp, #12]
 800a128:	f8c4 3268 	str.w	r3, [r4, #616]	; 0x268
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800a12c:	22a0      	movs	r2, #160	; 0xa0
 800a12e:	4611      	mov	r1, r2
 800a130:	4638      	mov	r0, r7
 800a132:	f8c4 82bc 	str.w	r8, [r4, #700]	; 0x2bc
 800a136:	f8a4 82c0 	strh.w	r8, [r4, #704]	; 0x2c0
 800a13a:	f00a fd2b 	bl	8014b94 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800a13e:	22a0      	movs	r2, #160	; 0xa0
 800a140:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 800a144:	4638      	mov	r0, r7
 800a146:	f00a fd30 	bl	8014baa <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800a14a:	f8d4 327c 	ldr.w	r3, [r4, #636]	; 0x27c
 800a14e:	2b20      	cmp	r3, #32
 800a150:	d005      	beq.n	800a15e <_ZN20Project_InfoViewBaseC1Ev+0x3d2>
        lineWidthQ5 = widthQ5;
 800a152:	2320      	movs	r3, #32
 800a154:	f8c4 327c 	str.w	r3, [r4, #636]	; 0x27c
        updateCachedShape();
 800a158:	4638      	mov	r0, r7
 800a15a:	f00a fc25 	bl	80149a8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800a15e:	4638      	mov	r0, r7
 800a160:	2101      	movs	r1, #1
 800a162:	f00a fd2d 	bl	8014bc0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800a166:	4639      	mov	r1, r7
 800a168:	4630      	mov	r0, r6
 800a16a:	f008 fb31 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 800a16e:	f04f 38ff 	mov.w	r8, #4294967295
    textArea_name.setXY(69, 35);
 800a172:	ee18 0a90 	vmov	r0, s17
 800a176:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 800a178:	2700      	movs	r7, #0
 800a17a:	2145      	movs	r1, #69	; 0x45
 800a17c:	f7f9 fa2e 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800a180:	ee18 1a90 	vmov	r1, s17
 800a184:	4628      	mov	r0, r5
        color = newColor;
 800a186:	f8c4 82f4 	str.w	r8, [r4, #756]	; 0x2f4
        linespace = space;
 800a18a:	f8a4 72f8 	strh.w	r7, [r4, #760]	; 0x2f8
        boundingArea = calculateBoundingArea();
 800a18e:	f00a fead 	bl	8014eec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800a192:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800a196:	ee18 3a90 	vmov	r3, s17
 800a19a:	333c      	adds	r3, #60	; 0x3c
 800a19c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800a1a0:	2367      	movs	r3, #103	; 0x67
    textArea_name.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8N0V));
 800a1a2:	ee18 0a90 	vmov	r0, s17
 800a1a6:	a90a      	add	r1, sp, #40	; 0x28
 800a1a8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800a1ac:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 800a1b0:	f00b f936 	bl	8015420 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800a1b4:	ee18 1a90 	vmov	r1, s17
 800a1b8:	4630      	mov	r0, r6
 800a1ba:	f008 fb09 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_title.setXY(54, 12);
 800a1be:	ee19 0a10 	vmov	r0, s18
 800a1c2:	220c      	movs	r2, #12
 800a1c4:	2136      	movs	r1, #54	; 0x36
 800a1c6:	f7f9 fa09 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 800a1ca:	ee19 1a10 	vmov	r1, s18
 800a1ce:	4628      	mov	r0, r5
        color = newColor;
 800a1d0:	f8c4 833c 	str.w	r8, [r4, #828]	; 0x33c
        linespace = space;
 800a1d4:	f8a4 7340 	strh.w	r7, [r4, #832]	; 0x340
        boundingArea = calculateBoundingArea();
 800a1d8:	f00a fe88 	bl	8014eec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800a1dc:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800a1e0:	ee19 3a10 	vmov	r3, s18
 800a1e4:	333c      	adds	r3, #60	; 0x3c
 800a1e6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800a1ea:	2366      	movs	r3, #102	; 0x66
    textArea_title.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SSFQ));
 800a1ec:	ee19 0a10 	vmov	r0, s18
 800a1f0:	a90a      	add	r1, sp, #40	; 0x28
 800a1f2:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800a1f6:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 800a1fa:	f00b f911 	bl	8015420 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800a1fe:	4630      	mov	r0, r6
 800a200:	ee19 1a10 	vmov	r1, s18
 800a204:	f008 fae4 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800a208:	4620      	mov	r0, r4
 800a20a:	b00d      	add	sp, #52	; 0x34
 800a20c:	ecbd 8b06 	vpop	{d8-d10}
 800a210:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a214:	200138b0 	.word	0x200138b0
 800a218:	0802f3e1 	.word	0x0802f3e1
 800a21c:	0802f454 	.word	0x0802f454

0800a220 <_ZN20Shutting_OffViewBaseD1Ev>:
}

Shutting_OffViewBase::~Shutting_OffViewBase()
{

}
 800a220:	4770      	bx	lr

0800a222 <_ZN20Shutting_OffViewBase11setupScreenEv>:

void Shutting_OffViewBase::setupScreen()
{

}
 800a222:	4770      	bx	lr

0800a224 <_ZN20Shutting_OffViewBaseD0Ev>:
Shutting_OffViewBase::~Shutting_OffViewBase()
 800a224:	b510      	push	{r4, lr}
}
 800a226:	2198      	movs	r1, #152	; 0x98
Shutting_OffViewBase::~Shutting_OffViewBase()
 800a228:	4604      	mov	r4, r0
}
 800a22a:	f022 fc5e 	bl	802caea <_ZdlPvj>
 800a22e:	4620      	mov	r0, r4
 800a230:	bd10      	pop	{r4, pc}
	...

0800a234 <_ZN20Shutting_OffViewBaseC1Ev>:
Shutting_OffViewBase::Shutting_OffViewBase()
 800a234:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800a238:	4604      	mov	r4, r0
 800a23a:	4626      	mov	r6, r4
 800a23c:	f010 f820 	bl	801a280 <_ZN8touchgfx6ScreenC1Ev>
 800a240:	2500      	movs	r5, #0
 800a242:	4b2e      	ldr	r3, [pc, #184]	; (800a2fc <_ZN20Shutting_OffViewBaseC1Ev+0xc8>)
 800a244:	63e5      	str	r5, [r4, #60]	; 0x3c
 800a246:	f846 3b40 	str.w	r3, [r6], #64
        : Widget(), alpha(255), color(0)
 800a24a:	4b2d      	ldr	r3, [pc, #180]	; (800a300 <_ZN20Shutting_OffViewBaseC1Ev+0xcc>)
          cachedAbsX(0),
 800a24c:	6625      	str	r5, [r4, #96]	; 0x60
        : x(0), y(0), width(0), height(0)
 800a24e:	e9c4 3510 	strd	r3, r5, [r4, #64]	; 0x40
          touchable(false),
 800a252:	f44f 7280 	mov.w	r2, #256	; 0x100
 800a256:	23ff      	movs	r3, #255	; 0xff
 800a258:	f104 076c 	add.w	r7, r4, #108	; 0x6c
 800a25c:	f8a4 2064 	strh.w	r2, [r4, #100]	; 0x64
 800a260:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
 800a264:	f8a4 2090 	strh.w	r2, [r4, #144]	; 0x90
 800a268:	f64f 73ff 	movw	r3, #65535	; 0xffff
        : Widget(), bitmap(bmp), alpha(255)
 800a26c:	4a25      	ldr	r2, [pc, #148]	; (800a304 <_ZN20Shutting_OffViewBaseC1Ev+0xd0>)
 800a26e:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 800a272:	f884 3094 	strb.w	r3, [r4, #148]	; 0x94
 800a276:	66e2      	str	r2, [r4, #108]	; 0x6c
        Image::setBitmap(bmp);
 800a278:	a901      	add	r1, sp, #4
 800a27a:	4638      	mov	r0, r7
 800a27c:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
          parent(0),
 800a280:	e9c4 5514 	strd	r5, r5, [r4, #80]	; 0x50
          nextDrawChainElement(0),
 800a284:	e9c4 5516 	strd	r5, r5, [r4, #88]	; 0x58
 800a288:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
 800a28c:	e9c4 551e 	strd	r5, r5, [r4, #120]	; 0x78
          nextSibling(0),
 800a290:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
          cachedAbsX(0),
 800a294:	e9c4 5522 	strd	r5, r5, [r4, #136]	; 0x88
        : color(col)
 800a298:	66a5      	str	r5, [r4, #104]	; 0x68
 800a29a:	f8ad 3004 	strh.w	r3, [sp, #4]
 800a29e:	f00b fe70 	bl	8015f82 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        setXY(x, y);
 800a2a2:	462a      	mov	r2, r5
 800a2a4:	4629      	mov	r1, r5
 800a2a6:	4630      	mov	r0, r6
 800a2a8:	f7f9 f998 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 800a2ac:	4630      	mov	r0, r6
 800a2ae:	21f0      	movs	r1, #240	; 0xf0
 800a2b0:	f7f8 ff16 	bl	80030e0 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 800a2b4:	4630      	mov	r0, r6
 800a2b6:	f44f 71a0 	mov.w	r1, #320	; 0x140
 800a2ba:	f7f8 ff13 	bl	80030e4 <_ZN8touchgfx8Drawable9setHeightEs>
 800a2be:	f104 0804 	add.w	r8, r4, #4
        color = newColor;
 800a2c2:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800a2c6:	66a3      	str	r3, [r4, #104]	; 0x68
 800a2c8:	4631      	mov	r1, r6
 800a2ca:	4640      	mov	r0, r8
 800a2cc:	f008 fa80 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image_shutdown.setXY(-3, 0);
 800a2d0:	462a      	mov	r2, r5
 800a2d2:	4638      	mov	r0, r7
 800a2d4:	f06f 0102 	mvn.w	r1, #2
 800a2d8:	f7f9 f980 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 800a2dc:	230b      	movs	r3, #11
    image_shutdown.setBitmap(touchgfx::Bitmap(BITMAP_SHUTDOWN_ID));
 800a2de:	a901      	add	r1, sp, #4
 800a2e0:	4638      	mov	r0, r7
 800a2e2:	f8ad 3004 	strh.w	r3, [sp, #4]
 800a2e6:	f00b fe4c 	bl	8015f82 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800a2ea:	4640      	mov	r0, r8
 800a2ec:	4639      	mov	r1, r7
 800a2ee:	f008 fa6f 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800a2f2:	4620      	mov	r0, r4
 800a2f4:	b002      	add	sp, #8
 800a2f6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a2fa:	bf00      	nop
 800a2fc:	08030c8c 	.word	0x08030c8c
 800a300:	080319a8 	.word	0x080319a8
 800a304:	08031bf4 	.word	0x08031bf4

0800a308 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 800a308:	4770      	bx	lr
	...

0800a30c <_Z23getFont_verdana_10_4bppv>:
{
 800a30c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 800a30e:	4d17      	ldr	r5, [pc, #92]	; (800a36c <_Z23getFont_verdana_10_4bppv+0x60>)
 800a310:	682c      	ldr	r4, [r5, #0]
 800a312:	f3bf 8f5b 	dmb	ish
 800a316:	f014 0401 	ands.w	r4, r4, #1
{
 800a31a:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 800a31c:	d122      	bne.n	800a364 <_Z23getFont_verdana_10_4bppv+0x58>
 800a31e:	4628      	mov	r0, r5
 800a320:	f022 fbe5 	bl	802caee <__cxa_guard_acquire>
 800a324:	b1f0      	cbz	r0, 800a364 <_Z23getFont_verdana_10_4bppv+0x58>
 800a326:	233f      	movs	r3, #63	; 0x3f
 800a328:	9309      	str	r3, [sp, #36]	; 0x24
 800a32a:	4b11      	ldr	r3, [pc, #68]	; (800a370 <_Z23getFont_verdana_10_4bppv+0x64>)
 800a32c:	9308      	str	r3, [sp, #32]
 800a32e:	4b11      	ldr	r3, [pc, #68]	; (800a374 <_Z23getFont_verdana_10_4bppv+0x68>)
 800a330:	9307      	str	r3, [sp, #28]
 800a332:	2301      	movs	r3, #1
 800a334:	e9cd 3305 	strd	r3, r3, [sp, #20]
 800a338:	9304      	str	r3, [sp, #16]
 800a33a:	2304      	movs	r3, #4
 800a33c:	e9cd 4302 	strd	r4, r3, [sp, #8]
 800a340:	230a      	movs	r3, #10
 800a342:	490d      	ldr	r1, [pc, #52]	; (800a378 <_Z23getFont_verdana_10_4bppv+0x6c>)
 800a344:	9300      	str	r3, [sp, #0]
 800a346:	225f      	movs	r2, #95	; 0x5f
 800a348:	230c      	movs	r3, #12
 800a34a:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 800a34e:	480b      	ldr	r0, [pc, #44]	; (800a37c <_Z23getFont_verdana_10_4bppv+0x70>)
 800a350:	940a      	str	r4, [sp, #40]	; 0x28
 800a352:	9401      	str	r4, [sp, #4]
 800a354:	f7fc f9da 	bl	800670c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800a358:	4809      	ldr	r0, [pc, #36]	; (800a380 <_Z23getFont_verdana_10_4bppv+0x74>)
 800a35a:	f023 facb 	bl	802d8f4 <atexit>
 800a35e:	4628      	mov	r0, r5
 800a360:	f022 fbd1 	bl	802cb06 <__cxa_guard_release>
    return verdana_10_4bpp;
}
 800a364:	4805      	ldr	r0, [pc, #20]	; (800a37c <_Z23getFont_verdana_10_4bppv+0x70>)
 800a366:	b00f      	add	sp, #60	; 0x3c
 800a368:	bd30      	pop	{r4, r5, pc}
 800a36a:	bf00      	nop
 800a36c:	20002948 	.word	0x20002948
 800a370:	08049898 	.word	0x08049898
 800a374:	08049ad4 	.word	0x08049ad4
 800a378:	080488e0 	.word	0x080488e0
 800a37c:	2000294c 	.word	0x2000294c
 800a380:	0800a309 	.word	0x0800a309

0800a384 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_12_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_12_4bpp();

touchgfx::GeneratedFont& getFont_verdana_12_4bpp()
{
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 800a384:	4770      	bx	lr
	...

0800a388 <_Z23getFont_verdana_12_4bppv>:
{
 800a388:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 800a38a:	4d17      	ldr	r5, [pc, #92]	; (800a3e8 <_Z23getFont_verdana_12_4bppv+0x60>)
 800a38c:	682c      	ldr	r4, [r5, #0]
 800a38e:	f3bf 8f5b 	dmb	ish
 800a392:	f014 0401 	ands.w	r4, r4, #1
{
 800a396:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 800a398:	d122      	bne.n	800a3e0 <_Z23getFont_verdana_12_4bppv+0x58>
 800a39a:	4628      	mov	r0, r5
 800a39c:	f022 fba7 	bl	802caee <__cxa_guard_acquire>
 800a3a0:	b1f0      	cbz	r0, 800a3e0 <_Z23getFont_verdana_12_4bppv+0x58>
 800a3a2:	233f      	movs	r3, #63	; 0x3f
 800a3a4:	9309      	str	r3, [sp, #36]	; 0x24
 800a3a6:	4b11      	ldr	r3, [pc, #68]	; (800a3ec <_Z23getFont_verdana_12_4bppv+0x64>)
 800a3a8:	9308      	str	r3, [sp, #32]
 800a3aa:	4b11      	ldr	r3, [pc, #68]	; (800a3f0 <_Z23getFont_verdana_12_4bppv+0x68>)
 800a3ac:	9307      	str	r3, [sp, #28]
 800a3ae:	2301      	movs	r3, #1
 800a3b0:	e9cd 3305 	strd	r3, r3, [sp, #20]
 800a3b4:	9304      	str	r3, [sp, #16]
 800a3b6:	2304      	movs	r3, #4
 800a3b8:	e9cd 4302 	strd	r4, r3, [sp, #8]
 800a3bc:	230c      	movs	r3, #12
 800a3be:	490d      	ldr	r1, [pc, #52]	; (800a3f4 <_Z23getFont_verdana_12_4bppv+0x6c>)
 800a3c0:	9300      	str	r3, [sp, #0]
 800a3c2:	2260      	movs	r2, #96	; 0x60
 800a3c4:	230f      	movs	r3, #15
 800a3c6:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 800a3ca:	480b      	ldr	r0, [pc, #44]	; (800a3f8 <_Z23getFont_verdana_12_4bppv+0x70>)
 800a3cc:	940a      	str	r4, [sp, #40]	; 0x28
 800a3ce:	9401      	str	r4, [sp, #4]
 800a3d0:	f7fc f99c 	bl	800670c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800a3d4:	4809      	ldr	r0, [pc, #36]	; (800a3fc <_Z23getFont_verdana_12_4bppv+0x74>)
 800a3d6:	f023 fa8d 	bl	802d8f4 <atexit>
 800a3da:	4628      	mov	r0, r5
 800a3dc:	f022 fb93 	bl	802cb06 <__cxa_guard_release>
    return verdana_12_4bpp;
}
 800a3e0:	4805      	ldr	r0, [pc, #20]	; (800a3f8 <_Z23getFont_verdana_12_4bppv+0x70>)
 800a3e2:	b00f      	add	sp, #60	; 0x3c
 800a3e4:	bd30      	pop	{r4, r5, pc}
 800a3e6:	bf00      	nop
 800a3e8:	20002978 	.word	0x20002978
 800a3ec:	080498cc 	.word	0x080498cc
 800a3f0:	08049ad8 	.word	0x08049ad8
 800a3f4:	08048e14 	.word	0x08048e14
 800a3f8:	2000297c 	.word	0x2000297c
 800a3fc:	0800a385 	.word	0x0800a385

0800a400 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_19_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_19_4bpp();

touchgfx::GeneratedFont& getFont_verdana_19_4bpp()
{
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 95, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 800a400:	4770      	bx	lr
	...

0800a404 <_Z23getFont_verdana_19_4bppv>:
{
 800a404:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 95, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 800a406:	4d17      	ldr	r5, [pc, #92]	; (800a464 <_Z23getFont_verdana_19_4bppv+0x60>)
 800a408:	682c      	ldr	r4, [r5, #0]
 800a40a:	f3bf 8f5b 	dmb	ish
 800a40e:	f014 0401 	ands.w	r4, r4, #1
{
 800a412:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 95, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 800a414:	d122      	bne.n	800a45c <_Z23getFont_verdana_19_4bppv+0x58>
 800a416:	4628      	mov	r0, r5
 800a418:	f022 fb69 	bl	802caee <__cxa_guard_acquire>
 800a41c:	b1f0      	cbz	r0, 800a45c <_Z23getFont_verdana_19_4bppv+0x58>
 800a41e:	233f      	movs	r3, #63	; 0x3f
 800a420:	9309      	str	r3, [sp, #36]	; 0x24
 800a422:	4b11      	ldr	r3, [pc, #68]	; (800a468 <_Z23getFont_verdana_19_4bppv+0x64>)
 800a424:	9308      	str	r3, [sp, #32]
 800a426:	4b11      	ldr	r3, [pc, #68]	; (800a46c <_Z23getFont_verdana_19_4bppv+0x68>)
 800a428:	9307      	str	r3, [sp, #28]
 800a42a:	2301      	movs	r3, #1
 800a42c:	e9cd 3305 	strd	r3, r3, [sp, #20]
 800a430:	9304      	str	r3, [sp, #16]
 800a432:	2304      	movs	r3, #4
 800a434:	e9cd 4302 	strd	r4, r3, [sp, #8]
 800a438:	2313      	movs	r3, #19
 800a43a:	490d      	ldr	r1, [pc, #52]	; (800a470 <_Z23getFont_verdana_19_4bppv+0x6c>)
 800a43c:	9300      	str	r3, [sp, #0]
 800a43e:	225f      	movs	r2, #95	; 0x5f
 800a440:	2317      	movs	r3, #23
 800a442:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 800a446:	480b      	ldr	r0, [pc, #44]	; (800a474 <_Z23getFont_verdana_19_4bppv+0x70>)
 800a448:	940a      	str	r4, [sp, #40]	; 0x28
 800a44a:	9401      	str	r4, [sp, #4]
 800a44c:	f7fc f95e 	bl	800670c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800a450:	4809      	ldr	r0, [pc, #36]	; (800a478 <_Z23getFont_verdana_19_4bppv+0x74>)
 800a452:	f023 fa4f 	bl	802d8f4 <atexit>
 800a456:	4628      	mov	r0, r5
 800a458:	f022 fb55 	bl	802cb06 <__cxa_guard_release>
    return verdana_19_4bpp;
}
 800a45c:	4805      	ldr	r0, [pc, #20]	; (800a474 <_Z23getFont_verdana_19_4bppv+0x70>)
 800a45e:	b00f      	add	sp, #60	; 0x3c
 800a460:	bd30      	pop	{r4, r5, pc}
 800a462:	bf00      	nop
 800a464:	200029a8 	.word	0x200029a8
 800a468:	08049950 	.word	0x08049950
 800a46c:	08049adc 	.word	0x08049adc
 800a470:	08049354 	.word	0x08049354
 800a474:	200029ac 	.word	0x200029ac
 800a478:	0800a401 	.word	0x0800a401

0800a47c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 800a47c:	4770      	bx	lr
	...

0800a480 <_Z23getFont_verdana_40_4bppv>:
{
 800a480:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 800a482:	4d16      	ldr	r5, [pc, #88]	; (800a4dc <_Z23getFont_verdana_40_4bppv+0x5c>)
 800a484:	682c      	ldr	r4, [r5, #0]
 800a486:	f3bf 8f5b 	dmb	ish
 800a48a:	f014 0401 	ands.w	r4, r4, #1
{
 800a48e:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 800a490:	d120      	bne.n	800a4d4 <_Z23getFont_verdana_40_4bppv+0x54>
 800a492:	4628      	mov	r0, r5
 800a494:	f022 fb2b 	bl	802caee <__cxa_guard_acquire>
 800a498:	b1e0      	cbz	r0, 800a4d4 <_Z23getFont_verdana_40_4bppv+0x54>
 800a49a:	233f      	movs	r3, #63	; 0x3f
 800a49c:	9309      	str	r3, [sp, #36]	; 0x24
 800a49e:	4b10      	ldr	r3, [pc, #64]	; (800a4e0 <_Z23getFont_verdana_40_4bppv+0x60>)
 800a4a0:	9308      	str	r3, [sp, #32]
 800a4a2:	4b10      	ldr	r3, [pc, #64]	; (800a4e4 <_Z23getFont_verdana_40_4bppv+0x64>)
 800a4a4:	4910      	ldr	r1, [pc, #64]	; (800a4e8 <_Z23getFont_verdana_40_4bppv+0x68>)
 800a4a6:	4811      	ldr	r0, [pc, #68]	; (800a4ec <_Z23getFont_verdana_40_4bppv+0x6c>)
 800a4a8:	940a      	str	r4, [sp, #40]	; 0x28
 800a4aa:	2201      	movs	r2, #1
 800a4ac:	e9cd 4306 	strd	r4, r3, [sp, #24]
 800a4b0:	2304      	movs	r3, #4
 800a4b2:	e9cd 3203 	strd	r3, r2, [sp, #12]
 800a4b6:	2328      	movs	r3, #40	; 0x28
 800a4b8:	9300      	str	r3, [sp, #0]
 800a4ba:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 800a4be:	e9cd 4401 	strd	r4, r4, [sp, #4]
 800a4c2:	9405      	str	r4, [sp, #20]
 800a4c4:	f7fc f922 	bl	800670c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800a4c8:	4809      	ldr	r0, [pc, #36]	; (800a4f0 <_Z23getFont_verdana_40_4bppv+0x70>)
 800a4ca:	f023 fa13 	bl	802d8f4 <atexit>
 800a4ce:	4628      	mov	r0, r5
 800a4d0:	f022 fb19 	bl	802cb06 <__cxa_guard_release>
    return verdana_40_4bpp;
}
 800a4d4:	4805      	ldr	r0, [pc, #20]	; (800a4ec <_Z23getFont_verdana_40_4bppv+0x6c>)
 800a4d6:	b00f      	add	sp, #60	; 0x3c
 800a4d8:	bd30      	pop	{r4, r5, pc}
 800a4da:	bf00      	nop
 800a4dc:	200029d8 	.word	0x200029d8
 800a4e0:	08049ad0 	.word	0x08049ad0
 800a4e4:	08049ae0 	.word	0x08049ae0
 800a4e8:	08049888 	.word	0x08049888
 800a4ec:	200029dc 	.word	0x200029dc
 800a4f0:	0800a47d 	.word	0x0800a47d

0800a4f4 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 800a4f4:	2000      	movs	r0, #0
 800a4f6:	4770      	bx	lr

0800a4f8 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 800a4f8:	2000      	movs	r0, #0
 800a4fa:	4770      	bx	lr

0800a4fc <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800a4fc:	b40e      	push	{r1, r2, r3}
 800a4fe:	b503      	push	{r0, r1, lr}
 800a500:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800a502:	2100      	movs	r1, #0
{
 800a504:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 800a508:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800a50a:	f00f f9f7 	bl	80198fc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 800a50e:	b002      	add	sp, #8
 800a510:	f85d eb04 	ldr.w	lr, [sp], #4
 800a514:	b003      	add	sp, #12
 800a516:	4770      	bx	lr

0800a518 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800a518:	b40c      	push	{r2, r3}
 800a51a:	b507      	push	{r0, r1, r2, lr}
 800a51c:	ab04      	add	r3, sp, #16
 800a51e:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 800a522:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 800a524:	f00f f9ea 	bl	80198fc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 800a528:	b003      	add	sp, #12
 800a52a:	f85d eb04 	ldr.w	lr, [sp], #4
 800a52e:	b002      	add	sp, #8
 800a530:	4770      	bx	lr
	...

0800a534 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 800a534:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 800a536:	b510      	push	{r4, lr}
 800a538:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 800a53a:	b373      	cbz	r3, 800a59a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 800a53c:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 800a53e:	b92b      	cbnz	r3, 800a54c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 800a540:	4b18      	ldr	r3, [pc, #96]	; (800a5a4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 800a542:	4a19      	ldr	r2, [pc, #100]	; (800a5a8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 800a544:	21c5      	movs	r1, #197	; 0xc5
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 800a546:	4819      	ldr	r0, [pc, #100]	; (800a5ac <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 800a548:	f023 f9b6 	bl	802d8b8 <__assert_func>
            return buffer[pos];
 800a54c:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 800a54e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800a552:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 800a554:	b30b      	cbz	r3, 800a59a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 800a556:	f010 fe0c 	bl	801b172 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 800a55a:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800a55c:	2b01      	cmp	r3, #1
 800a55e:	d803      	bhi.n	800a568 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 800a560:	4b13      	ldr	r3, [pc, #76]	; (800a5b0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 800a562:	4a14      	ldr	r2, [pc, #80]	; (800a5b4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 800a564:	21cb      	movs	r1, #203	; 0xcb
 800a566:	e7ee      	b.n	800a546 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 800a568:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800a56a:	1c53      	adds	r3, r2, #1
 800a56c:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 800a56e:	2b09      	cmp	r3, #9
 800a570:	4619      	mov	r1, r3
 800a572:	bf88      	it	hi
 800a574:	f1a3 010a 	subhi.w	r1, r3, #10
 800a578:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 800a57c:	f640 103f 	movw	r0, #2367	; 0x93f
 800a580:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 800a582:	4281      	cmp	r1, r0
 800a584:	d109      	bne.n	800a59a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 800a586:	2b0a      	cmp	r3, #10
 800a588:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 800a58c:	bf28      	it	cs
 800a58e:	2300      	movcs	r3, #0

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 800a590:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 800a594:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 800a596:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 800a598:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 800a59a:	4620      	mov	r0, r4
}
 800a59c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 800a5a0:	f010 bcea 	b.w	801af78 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800a5a4:	08030cb8 	.word	0x08030cb8
 800a5a8:	08030cc1 	.word	0x08030cc1
 800a5ac:	08030d6c 	.word	0x08030d6c
 800a5b0:	08030db6 	.word	0x08030db6
 800a5b4:	08030dc4 	.word	0x08030dc4

0800a5b8 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 800a5b8:	f010 bca5 	b.w	801af06 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

0800a5bc <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 800a5bc:	b510      	push	{r4, lr}
 800a5be:	b086      	sub	sp, #24
 800a5c0:	ac02      	add	r4, sp, #8
 800a5c2:	e884 0006 	stmia.w	r4, {r1, r2}
 800a5c6:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 800a5c8:	ab0a      	add	r3, sp, #40	; 0x28
 800a5ca:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 800a5cc:	9301      	str	r3, [sp, #4]
 800a5ce:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800a5d0:	9300      	str	r3, [sp, #0]
 800a5d2:	4621      	mov	r1, r4
 800a5d4:	9b08      	ldr	r3, [sp, #32]
 800a5d6:	f00d fd55 	bl	8018084 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 800a5da:	b006      	add	sp, #24
 800a5dc:	bd10      	pop	{r4, pc}
	...

0800a5e0 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 800a5e0:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 800a5e2:	bb18      	cbnz	r0, 800a62c <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 800a5e4:	4b12      	ldr	r3, [pc, #72]	; (800a630 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 800a5e6:	4813      	ldr	r0, [pc, #76]	; (800a634 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 800a5e8:	681c      	ldr	r4, [r3, #0]
 800a5ea:	4913      	ldr	r1, [pc, #76]	; (800a638 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 800a5ec:	b1b4      	cbz	r4, 800a61c <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 800a5ee:	6822      	ldr	r2, [r4, #0]
 800a5f0:	4422      	add	r2, r4
 800a5f2:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 800a5f4:	6862      	ldr	r2, [r4, #4]
 800a5f6:	4422      	add	r2, r4
 800a5f8:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 800a5fa:	68a2      	ldr	r2, [r4, #8]
 800a5fc:	4414      	add	r4, r2
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 800a5fe:	4b0f      	ldr	r3, [pc, #60]	; (800a63c <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 800a600:	2200      	movs	r2, #0
 800a602:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 800a604:	f000 f838 	bl	800a678 <_ZN17TypedTextDatabase8getFontsEv>
 800a608:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 800a60a:	f000 f833 	bl	800a674 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 800a60e:	4b0c      	ldr	r3, [pc, #48]	; (800a640 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 800a610:	601c      	str	r4, [r3, #0]
        fonts = f;
 800a612:	4b0c      	ldr	r3, [pc, #48]	; (800a644 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 800a614:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 800a616:	4b0c      	ldr	r3, [pc, #48]	; (800a648 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 800a618:	8018      	strh	r0, [r3, #0]
    }
}
 800a61a:	e007      	b.n	800a62c <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 800a61c:	4b0b      	ldr	r3, [pc, #44]	; (800a64c <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 800a61e:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 800a620:	4b0b      	ldr	r3, [pc, #44]	; (800a650 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 800a622:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 800a624:	4b0b      	ldr	r3, [pc, #44]	; (800a654 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 800a626:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 800a628:	2c00      	cmp	r4, #0
 800a62a:	d1e8      	bne.n	800a5fe <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 800a62c:	bd38      	pop	{r3, r4, r5, pc}
 800a62e:	bf00      	nop
 800a630:	20002a08 	.word	0x20002a08
 800a634:	20002a0c 	.word	0x20002a0c
 800a638:	20002a10 	.word	0x20002a10
 800a63c:	20002a14 	.word	0x20002a14
 800a640:	200138a4 	.word	0x200138a4
 800a644:	200138ac 	.word	0x200138ac
 800a648:	200138a8 	.word	0x200138a8
 800a64c:	08049cac 	.word	0x08049cac
 800a650:	08049ae4 	.word	0x08049ae4
 800a654:	0804a214 	.word	0x0804a214

0800a658 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 800a658:	4b04      	ldr	r3, [pc, #16]	; (800a66c <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 800a65a:	681b      	ldr	r3, [r3, #0]
 800a65c:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 800a660:	4b03      	ldr	r3, [pc, #12]	; (800a670 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 800a662:	681b      	ldr	r3, [r3, #0]
}
 800a664:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 800a668:	4770      	bx	lr
 800a66a:	bf00      	nop
 800a66c:	20002a10 	.word	0x20002a10
 800a670:	20002a0c 	.word	0x20002a0c

0800a674 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 800a674:	2072      	movs	r0, #114	; 0x72
 800a676:	4770      	bx	lr

0800a678 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 800a678:	4800      	ldr	r0, [pc, #0]	; (800a67c <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 800a67a:	4770      	bx	lr
 800a67c:	20002a18 	.word	0x20002a18

0800a680 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 3:
        touchgfx_fonts[3] = &(getFont_verdana_12_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 800a680:	b510      	push	{r4, lr}
    &(getFont_verdana_19_4bpp()),
 800a682:	f7ff febf 	bl	800a404 <_Z23getFont_verdana_19_4bppv>
};
 800a686:	4c06      	ldr	r4, [pc, #24]	; (800a6a0 <_GLOBAL__sub_I_touchgfx_fonts+0x20>)
 800a688:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 800a68a:	f7ff fef9 	bl	800a480 <_Z23getFont_verdana_40_4bppv>
};
 800a68e:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp()),
 800a690:	f7ff fe3c 	bl	800a30c <_Z23getFont_verdana_10_4bppv>
};
 800a694:	60a0      	str	r0, [r4, #8]
    &(getFont_verdana_12_4bpp())
 800a696:	f7ff fe77 	bl	800a388 <_Z23getFont_verdana_12_4bppv>
};
 800a69a:	60e0      	str	r0, [r4, #12]
} // namespace TypedTextDatabase
 800a69c:	bd10      	pop	{r4, pc}
 800a69e:	bf00      	nop
 800a6a0:	20002a18 	.word	0x20002a18

0800a6a4 <_ZN24Calibration_PadPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Calibration_PadPresenter() {}
 800a6a4:	4770      	bx	lr

0800a6a6 <_ZThn4_N24Calibration_PadPresenterD1Ev>:
 800a6a6:	3804      	subs	r0, #4
 800a6a8:	4770      	bx	lr

0800a6aa <_ZN24Calibration_PadPresenter10deactivateEv>:
}

void Calibration_PadPresenter::activate()
{

}
 800a6aa:	4770      	bx	lr

0800a6ac <_ZN24Calibration_PadPresenter15setTimeoutValueEi>:
}

void Calibration_PadPresenter::setTimeoutValue(int value)
{

}
 800a6ac:	4770      	bx	lr

0800a6ae <_ZN24Calibration_PadPresenterD0Ev>:
 800a6ae:	b510      	push	{r4, lr}
 800a6b0:	2110      	movs	r1, #16
 800a6b2:	4604      	mov	r4, r0
 800a6b4:	f022 fa19 	bl	802caea <_ZdlPvj>
 800a6b8:	4620      	mov	r0, r4
 800a6ba:	bd10      	pop	{r4, pc}

0800a6bc <_ZThn4_N24Calibration_PadPresenterD0Ev>:
 800a6bc:	f1a0 0004 	sub.w	r0, r0, #4
 800a6c0:	e7f5      	b.n	800a6ae <_ZN24Calibration_PadPresenterD0Ev>

0800a6c2 <_ZThn4_N24Calibration_PadPresenter15setTimeoutValueEi>:
 800a6c2:	4770      	bx	lr

0800a6c4 <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView>:
Calibration_PadPresenter::Calibration_PadPresenter(Calibration_PadView& v)
 800a6c4:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 800a6c6:	2200      	movs	r2, #0
 800a6c8:	6082      	str	r2, [r0, #8]
    : view(v)
 800a6ca:	4a04      	ldr	r2, [pc, #16]	; (800a6dc <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView+0x18>)
 800a6cc:	60c1      	str	r1, [r0, #12]
 800a6ce:	f102 0408 	add.w	r4, r2, #8
 800a6d2:	3224      	adds	r2, #36	; 0x24
 800a6d4:	6004      	str	r4, [r0, #0]
 800a6d6:	6042      	str	r2, [r0, #4]
}
 800a6d8:	bd10      	pop	{r4, pc}
 800a6da:	bf00      	nop
 800a6dc:	08030e98 	.word	0x08030e98

0800a6e0 <_ZN19Calibration_PadView14tearDownScreenEv>:
}

void Calibration_PadView::tearDownScreen()
{
    Calibration_PadViewBase::tearDownScreen();
}
 800a6e0:	4770      	bx	lr

0800a6e2 <_ZN19Calibration_PadView15setTimeoutValueEi>:

void Calibration_PadView::setTimeoutValue(int value)
{

}
 800a6e2:	4770      	bx	lr

0800a6e4 <_ZN19Calibration_PadViewD1Ev>:

class Calibration_PadView : public Calibration_PadViewBase
{
public:
    Calibration_PadView();
    virtual ~Calibration_PadView() {}
 800a6e4:	b510      	push	{r4, lr}
 800a6e6:	4b03      	ldr	r3, [pc, #12]	; (800a6f4 <_ZN19Calibration_PadViewD1Ev+0x10>)
 800a6e8:	6003      	str	r3, [r0, #0]
 800a6ea:	4604      	mov	r4, r0
 800a6ec:	f7f8 ff20 	bl	8003530 <_ZN23Calibration_PadViewBaseD1Ev>
 800a6f0:	4620      	mov	r0, r4
 800a6f2:	bd10      	pop	{r4, pc}
 800a6f4:	08030ed0 	.word	0x08030ed0

0800a6f8 <_ZN19Calibration_PadViewD0Ev>:
 800a6f8:	b510      	push	{r4, lr}
 800a6fa:	4604      	mov	r4, r0
 800a6fc:	f7ff fff2 	bl	800a6e4 <_ZN19Calibration_PadViewD1Ev>
 800a700:	4620      	mov	r0, r4
 800a702:	f641 5104 	movw	r1, #7428	; 0x1d04
 800a706:	f022 f9f0 	bl	802caea <_ZdlPvj>
 800a70a:	4620      	mov	r0, r4
 800a70c:	bd10      	pop	{r4, pc}
	...

0800a710 <_ZN19Calibration_PadViewC1Ev>:
Calibration_PadView::Calibration_PadView()
 800a710:	b510      	push	{r4, lr}
 800a712:	4604      	mov	r4, r0
 800a714:	f7f9 fae0 	bl	8003cd8 <_ZN23Calibration_PadViewBaseC1Ev>
 800a718:	4b01      	ldr	r3, [pc, #4]	; (800a720 <_ZN19Calibration_PadViewC1Ev+0x10>)
 800a71a:	6023      	str	r3, [r4, #0]
}
 800a71c:	4620      	mov	r0, r4
 800a71e:	bd10      	pop	{r4, pc}
 800a720:	08030ed0 	.word	0x08030ed0

0800a724 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv>:

void Calibration_PadView::Load_FLASH_Values()
{
 800a724:	b570      	push	{r4, r5, r6, lr}
 800a726:	4604      	mov	r4, r0
 800a728:	b0ca      	sub	sp, #296	; 0x128
 800a72a:	f100 06e0 	add.w	r6, r0, #224	; 0xe0
 800a72e:	4631      	mov	r1, r6
 800a730:	a80d      	add	r0, sp, #52	; 0x34
 800a732:	f7f9 f815 	bl	8003760 <_ZN8touchgfx8DrawableC1ERKS0_>
 800a736:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800a73a:	9317      	str	r3, [sp, #92]	; 0x5c
 800a73c:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 800a740:	9318      	str	r3, [sp, #96]	; 0x60
 800a742:	f8d4 3110 	ldr.w	r3, [r4, #272]	; 0x110
 800a746:	4a57      	ldr	r2, [pc, #348]	; (800a8a4 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x180>)
 800a748:	9319      	str	r3, [sp, #100]	; 0x64
 800a74a:	f504 718c 	add.w	r1, r4, #280	; 0x118
 800a74e:	f8d4 3114 	ldr.w	r3, [r4, #276]	; 0x114
 800a752:	920d      	str	r2, [sp, #52]	; 0x34
 800a754:	a81b      	add	r0, sp, #108	; 0x6c
 800a756:	931a      	str	r3, [sp, #104]	; 0x68
 800a758:	f7f9 f802 	bl	8003760 <_ZN8touchgfx8DrawableC1ERKS0_>
 800a75c:	f8d4 3140 	ldr.w	r3, [r4, #320]	; 0x140
 800a760:	9325      	str	r3, [sp, #148]	; 0x94
 800a762:	4b51      	ldr	r3, [pc, #324]	; (800a8a8 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x184>)
 800a764:	931b      	str	r3, [sp, #108]	; 0x6c
 800a766:	f894 3144 	ldrb.w	r3, [r4, #324]	; 0x144
 800a76a:	f88d 3098 	strb.w	r3, [sp, #152]	; 0x98
 800a76e:	f504 71a4 	add.w	r1, r4, #328	; 0x148
 800a772:	f8b4 3146 	ldrh.w	r3, [r4, #326]	; 0x146
 800a776:	f8ad 309a 	strh.w	r3, [sp, #154]	; 0x9a
 800a77a:	a827      	add	r0, sp, #156	; 0x9c
 800a77c:	f7f8 fff0 	bl	8003760 <_ZN8touchgfx8DrawableC1ERKS0_>
 800a780:	f8d4 3170 	ldr.w	r3, [r4, #368]	; 0x170
 800a784:	9331      	str	r3, [sp, #196]	; 0xc4
 800a786:	f504 71ba 	add.w	r1, r4, #372	; 0x174
    class PageIndicator : public Container
 800a78a:	4b48      	ldr	r3, [pc, #288]	; (800a8ac <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x188>)
 800a78c:	9327      	str	r3, [sp, #156]	; 0x9c
 800a78e:	a832      	add	r0, sp, #200	; 0xc8
 800a790:	f7f8 ffe6 	bl	8003760 <_ZN8touchgfx8DrawableC1ERKS0_>
class Image : public Widget
 800a794:	f8b4 319a 	ldrh.w	r3, [r4, #410]	; 0x19a
 800a798:	f8ad 30ee 	strh.w	r3, [sp, #238]	; 0xee
 800a79c:	f894 319c 	ldrb.w	r3, [r4, #412]	; 0x19c
 800a7a0:	f88d 30f0 	strb.w	r3, [sp, #240]	; 0xf0
 800a7a4:	4b42      	ldr	r3, [pc, #264]	; (800a8b0 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x18c>)
 800a7a6:	9332      	str	r3, [sp, #200]	; 0xc8
 800a7a8:	f8b4 319e 	ldrh.w	r3, [r4, #414]	; 0x19e
 800a7ac:	f8ad 30f2 	strh.w	r3, [sp, #242]	; 0xf2
 800a7b0:	f504 71d2 	add.w	r1, r4, #420	; 0x1a4
 800a7b4:	f8b4 31a0 	ldrh.w	r3, [r4, #416]	; 0x1a0
 800a7b8:	f8ad 30f4 	strh.w	r3, [sp, #244]	; 0xf4
 800a7bc:	a83e      	add	r0, sp, #248	; 0xf8
 800a7be:	f7f8 ffcf 	bl	8003760 <_ZN8touchgfx8DrawableC1ERKS0_>
 800a7c2:	4b3c      	ldr	r3, [pc, #240]	; (800a8b4 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x190>)
 800a7c4:	933e      	str	r3, [sp, #248]	; 0xf8
 800a7c6:	f8b4 31ca 	ldrh.w	r3, [r4, #458]	; 0x1ca
	//Load the 6 Calibration Values from the Flash
	Flash_Read_Data(0x081E0000, Rx_Data, 12);

	// Write current Data stored in the Flash to the GUI
	//Left Pad
	Unicode::snprintf(textAreaCal_LP1Buffer, TEXTAREACAL_LP1_SIZE, "%d", Rx_Data[0]);
 800a7ca:	4d3b      	ldr	r5, [pc, #236]	; (800a8b8 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x194>)
 800a7cc:	f8ad 311e 	strh.w	r3, [sp, #286]	; 0x11e
 800a7d0:	f894 31cc 	ldrb.w	r3, [r4, #460]	; 0x1cc
 800a7d4:	f88d 3120 	strb.w	r3, [sp, #288]	; 0x120
	Flash_Read_Data(0x081E0000, Rx_Data, 12);
 800a7d8:	a901      	add	r1, sp, #4
 800a7da:	f8b4 31d0 	ldrh.w	r3, [r4, #464]	; 0x1d0
 800a7de:	4837      	ldr	r0, [pc, #220]	; (800a8bc <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x198>)
 800a7e0:	f8ad 3124 	strh.w	r3, [sp, #292]	; 0x124
 800a7e4:	220c      	movs	r2, #12
 800a7e6:	f7f6 fc51 	bl	800108c <Flash_Read_Data>
	Unicode::snprintf(textAreaCal_LP1Buffer, TEXTAREACAL_LP1_SIZE, "%d", Rx_Data[0]);
 800a7ea:	9b01      	ldr	r3, [sp, #4]
 800a7ec:	462a      	mov	r2, r5
 800a7ee:	210a      	movs	r1, #10
 800a7f0:	f604 601c 	addw	r0, r4, #3612	; 0xe1c
 800a7f4:	f011 fa72 	bl	801bcdc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_LP2Buffer, TEXTAREACAL_LP2_SIZE, "%d", Rx_Data[1]);
 800a7f8:	9b02      	ldr	r3, [sp, #8]
 800a7fa:	462a      	mov	r2, r5
 800a7fc:	210a      	movs	r1, #10
 800a7fe:	f604 6008 	addw	r0, r4, #3592	; 0xe08
 800a802:	f011 fa6b 	bl	801bcdc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_LP3Buffer, TEXTAREACAL_LP3_SIZE, "%d", Rx_Data[2]);
 800a806:	9b03      	ldr	r3, [sp, #12]
 800a808:	462a      	mov	r2, r5
 800a80a:	210a      	movs	r1, #10
 800a80c:	f604 50f4 	addw	r0, r4, #3572	; 0xdf4
 800a810:	f011 fa64 	bl	801bcdc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	//Right Pad
	Unicode::snprintf(textAreaCal_RP1Buffer, TEXTAREACAL_RP1_SIZE, "%d", Rx_Data[3]);
 800a814:	9b04      	ldr	r3, [sp, #16]
 800a816:	462a      	mov	r2, r5
 800a818:	210a      	movs	r1, #10
 800a81a:	f604 6058 	addw	r0, r4, #3672	; 0xe58
 800a81e:	f011 fa5d 	bl	801bcdc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_RP2Buffer, TEXTAREACAL_RP2_SIZE, "%d", Rx_Data[4]);
 800a822:	9b05      	ldr	r3, [sp, #20]
 800a824:	462a      	mov	r2, r5
 800a826:	210a      	movs	r1, #10
 800a828:	f604 6044 	addw	r0, r4, #3652	; 0xe44
 800a82c:	f011 fa56 	bl	801bcdc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_RP3Buffer, TEXTAREACAL_RP3_SIZE, "%d", Rx_Data[5]);
 800a830:	9b06      	ldr	r3, [sp, #24]
 800a832:	462a      	mov	r2, r5
 800a834:	210a      	movs	r1, #10
 800a836:	f504 6063 	add.w	r0, r4, #3632	; 0xe30
 800a83a:	f011 fa4f 	bl	801bcdc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>

	//Left Pad
	Unicode::snprintf(textAreaCal_LH1Buffer, TEXTAREACAL_LH1_SIZE, "%d", Rx_Data[6]);
 800a83e:	9b07      	ldr	r3, [sp, #28]
 800a840:	462a      	mov	r2, r5
 800a842:	210a      	movs	r1, #10
 800a844:	f604 6094 	addw	r0, r4, #3732	; 0xe94
 800a848:	f011 fa48 	bl	801bcdc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_LH2Buffer, TEXTAREACAL_LH2_SIZE, "%d", Rx_Data[7]);
 800a84c:	9b08      	ldr	r3, [sp, #32]
 800a84e:	462a      	mov	r2, r5
 800a850:	210a      	movs	r1, #10
 800a852:	f504 6068 	add.w	r0, r4, #3712	; 0xe80
 800a856:	f011 fa41 	bl	801bcdc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_LH3Buffer, TEXTAREACAL_LH3_SIZE, "%d", Rx_Data[8]);
 800a85a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800a85c:	462a      	mov	r2, r5
 800a85e:	210a      	movs	r1, #10
 800a860:	f604 606c 	addw	r0, r4, #3692	; 0xe6c
 800a864:	f011 fa3a 	bl	801bcdc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	//Right Pad
	Unicode::snprintf(textAreaCal_RH1Buffer, TEXTAREACAL_RH1_SIZE, "%d", Rx_Data[9]);
 800a868:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800a86a:	462a      	mov	r2, r5
 800a86c:	210a      	movs	r1, #10
 800a86e:	f504 606d 	add.w	r0, r4, #3792	; 0xed0
 800a872:	f011 fa33 	bl	801bcdc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_RH2Buffer, TEXTAREACAL_RH2_SIZE, "%d", Rx_Data[10]);
 800a876:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800a878:	462a      	mov	r2, r5
 800a87a:	210a      	movs	r1, #10
 800a87c:	f604 60bc 	addw	r0, r4, #3772	; 0xebc
 800a880:	f011 fa2c 	bl	801bcdc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_RH3Buffer, TEXTAREACAL_RH3_SIZE, "%d", Rx_Data[11]);
 800a884:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800a886:	462a      	mov	r2, r5
 800a888:	210a      	movs	r1, #10
 800a88a:	f604 60a8 	addw	r0, r4, #3752	; 0xea8
 800a88e:	f011 fa25 	bl	801bcdc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	swipeContainer1.invalidate();
 800a892:	4630      	mov	r0, r6
 800a894:	f00f f95c 	bl	8019b50 <_ZNK8touchgfx8Drawable10invalidateEv>

#endif
}
 800a898:	a80d      	add	r0, sp, #52	; 0x34
 800a89a:	f008 fa27 	bl	8012cec <_ZN8touchgfx14SwipeContainerD1Ev>
 800a89e:	b04a      	add	sp, #296	; 0x128
 800a8a0:	bd70      	pop	{r4, r5, r6, pc}
 800a8a2:	bf00      	nop
 800a8a4:	08031550 	.word	0x08031550
 800a8a8:	08031614 	.word	0x08031614
 800a8ac:	0802f464 	.word	0x0802f464
 800a8b0:	08031a10 	.word	0x08031a10
 800a8b4:	08031bf4 	.word	0x08031bf4
 800a8b8:	0802f3a6 	.word	0x0802f3a6
 800a8bc:	081e0000 	.word	0x081e0000

0800a8c0 <_ZN19Calibration_PadView11setupScreenEv>:
    Calibration_PadViewBase::setupScreen();
 800a8c0:	f7f8 bdf6 	b.w	80034b0 <_ZN23Calibration_PadViewBase11setupScreenEv>

0800a8c4 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 800a8c4:	4770      	bx	lr

0800a8c6 <_ZN19FrontendApplicationD0Ev>:
 800a8c6:	b510      	push	{r4, lr}
 800a8c8:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 800a8cc:	4604      	mov	r4, r0
 800a8ce:	f022 f90c 	bl	802caea <_ZdlPvj>
 800a8d2:	4620      	mov	r0, r4
 800a8d4:	bd10      	pop	{r4, pc}

0800a8d6 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 800a8d6:	b510      	push	{r4, lr}
 800a8d8:	4604      	mov	r4, r0
    {
        model.tick();
 800a8da:	f8d0 0158 	ldr.w	r0, [r0, #344]	; 0x158
 800a8de:	f000 faeb 	bl	800aeb8 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 800a8e2:	4620      	mov	r0, r4
    }
 800a8e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 800a8e8:	f00e b90e 	b.w	8018b08 <_ZN8touchgfx11Application15handleTickEventEv>

0800a8ec <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 800a8ec:	b510      	push	{r4, lr}
 800a8ee:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 800a8f0:	f7fa fde6 	bl	80054c0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 800a8f4:	4b01      	ldr	r3, [pc, #4]	; (800a8fc <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 800a8f6:	6023      	str	r3, [r4, #0]
{

}
 800a8f8:	4620      	mov	r0, r4
 800a8fa:	bd10      	pop	{r4, pc}
 800a8fc:	08030f10 	.word	0x08030f10

0800a900 <_ZN18Main_MenuPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Main_MenuPresenter() {}
 800a900:	4770      	bx	lr

0800a902 <_ZThn4_N18Main_MenuPresenterD1Ev>:
 800a902:	3804      	subs	r0, #4
 800a904:	4770      	bx	lr

0800a906 <_ZN18Main_MenuPresenter10deactivateEv>:
}

void Main_MenuPresenter::activate()
{

}
 800a906:	4770      	bx	lr

0800a908 <_ZN18Main_MenuPresenter15setTimeoutValueEi>:

}

void Main_MenuPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 800a908:	68c0      	ldr	r0, [r0, #12]
 800a90a:	6803      	ldr	r3, [r0, #0]
 800a90c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a90e:	4718      	bx	r3

0800a910 <_ZThn4_N18Main_MenuPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 800a910:	f1a0 0004 	sub.w	r0, r0, #4
 800a914:	f7ff bff8 	b.w	800a908 <_ZN18Main_MenuPresenter15setTimeoutValueEi>

0800a918 <_ZN18Main_MenuPresenterD0Ev>:
    virtual ~Main_MenuPresenter() {}
 800a918:	b510      	push	{r4, lr}
 800a91a:	2110      	movs	r1, #16
 800a91c:	4604      	mov	r4, r0
 800a91e:	f022 f8e4 	bl	802caea <_ZdlPvj>
 800a922:	4620      	mov	r0, r4
 800a924:	bd10      	pop	{r4, pc}

0800a926 <_ZThn4_N18Main_MenuPresenterD0Ev>:
 800a926:	f1a0 0004 	sub.w	r0, r0, #4
 800a92a:	e7f5      	b.n	800a918 <_ZN18Main_MenuPresenterD0Ev>

0800a92c <_ZN18Main_MenuPresenterC1ER13Main_MenuView>:
Main_MenuPresenter::Main_MenuPresenter(Main_MenuView& v)
 800a92c:	b510      	push	{r4, lr}
 800a92e:	2200      	movs	r2, #0
 800a930:	6082      	str	r2, [r0, #8]
    : view(v)
 800a932:	4a04      	ldr	r2, [pc, #16]	; (800a944 <_ZN18Main_MenuPresenterC1ER13Main_MenuView+0x18>)
 800a934:	60c1      	str	r1, [r0, #12]
 800a936:	f102 0408 	add.w	r4, r2, #8
 800a93a:	3224      	adds	r2, #36	; 0x24
 800a93c:	6004      	str	r4, [r0, #0]
 800a93e:	6042      	str	r2, [r0, #4]
}
 800a940:	bd10      	pop	{r4, pc}
 800a942:	bf00      	nop
 800a944:	08030f5c 	.word	0x08030f5c

0800a948 <_ZN13Main_MenuView14tearDownScreenEv>:
}

void Main_MenuView::tearDownScreen()
{
    Main_MenuViewBase::tearDownScreen();
}
 800a948:	4770      	bx	lr
	...

0800a94c <_ZN13Main_MenuViewD1Ev>:

class Main_MenuView : public Main_MenuViewBase
{
public:
    Main_MenuView();
    virtual ~Main_MenuView() {}
 800a94c:	b510      	push	{r4, lr}
 800a94e:	4b03      	ldr	r3, [pc, #12]	; (800a95c <_ZN13Main_MenuViewD1Ev+0x10>)
 800a950:	6003      	str	r3, [r0, #0]
 800a952:	4604      	mov	r4, r0
 800a954:	f7fb ff2e 	bl	80067b4 <_ZN17Main_MenuViewBaseD1Ev>
 800a958:	4620      	mov	r0, r4
 800a95a:	bd10      	pop	{r4, pc}
 800a95c:	08030f94 	.word	0x08030f94

0800a960 <_ZN13Main_MenuViewD0Ev>:
 800a960:	b510      	push	{r4, lr}
 800a962:	4604      	mov	r4, r0
 800a964:	f7ff fff2 	bl	800a94c <_ZN13Main_MenuViewD1Ev>
 800a968:	4620      	mov	r0, r4
 800a96a:	f44f 5190 	mov.w	r1, #4608	; 0x1200
 800a96e:	f022 f8bc 	bl	802caea <_ZdlPvj>
 800a972:	4620      	mov	r0, r4
 800a974:	bd10      	pop	{r4, pc}
	...

0800a978 <_ZN13Main_MenuViewC1Ev>:
Main_MenuView::Main_MenuView()
 800a978:	b510      	push	{r4, lr}
 800a97a:	4604      	mov	r4, r0
 800a97c:	f7fb ff64 	bl	8006848 <_ZN17Main_MenuViewBaseC1Ev>
 800a980:	4b01      	ldr	r3, [pc, #4]	; (800a988 <_ZN13Main_MenuViewC1Ev+0x10>)
 800a982:	6023      	str	r3, [r4, #0]
}
 800a984:	4620      	mov	r0, r4
 800a986:	bd10      	pop	{r4, pc}
 800a988:	08030f94 	.word	0x08030f94

0800a98c <_ZN13Main_MenuView11setupScreenEv>:
    Main_MenuViewBase::setupScreen();
 800a98c:	f7fb beee 	b.w	800676c <_ZN17Main_MenuViewBase11setupScreenEv>

0800a990 <_ZN13Main_MenuView15setTimeoutValueEi>:

void Main_MenuView::setTimeoutValue(int value)
{
 800a990:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%d", value);
 800a992:	4a0a      	ldr	r2, [pc, #40]	; (800a9bc <_ZN13Main_MenuView15setTimeoutValueEi+0x2c>)
{
 800a994:	4605      	mov	r5, r0
 800a996:	460c      	mov	r4, r1
	Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%d", value);
 800a998:	460b      	mov	r3, r1
 800a99a:	f500 7076 	add.w	r0, r0, #984	; 0x3d8
 800a99e:	2104      	movs	r1, #4
 800a9a0:	f011 f99c 	bl	801bcdc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea_auto_off.invalidate();
 800a9a4:	f105 0098 	add.w	r0, r5, #152	; 0x98
 800a9a8:	f00f f8d2 	bl	8019b50 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 800a9ac:	b92c      	cbnz	r4, 800a9ba <_ZN13Main_MenuView15setTimeoutValueEi+0x2a>
 800a9ae:	f00d ffe7 	bl	8018980 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 800a9b2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 800a9b6:	f7fa be83 	b.w	80056c0 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 800a9ba:	bd38      	pop	{r3, r4, r5, pc}
 800a9bc:	0802f3a6 	.word	0x0802f3a6

0800a9c0 <_ZN20MeasurementPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~MeasurementPresenter() {}
 800a9c0:	4770      	bx	lr

0800a9c2 <_ZThn4_N20MeasurementPresenterD1Ev>:
 800a9c2:	3804      	subs	r0, #4
 800a9c4:	4770      	bx	lr

0800a9c6 <_ZN20MeasurementPresenter10deactivateEv>:
}

void MeasurementPresenter::activate()
{

}
 800a9c6:	4770      	bx	lr

0800a9c8 <_ZN20MeasurementPresenter15setTimeoutValueEi>:

}

void MeasurementPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 800a9c8:	68c0      	ldr	r0, [r0, #12]
 800a9ca:	6803      	ldr	r3, [r0, #0]
 800a9cc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a9ce:	4718      	bx	r3

0800a9d0 <_ZThn4_N20MeasurementPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 800a9d0:	f1a0 0004 	sub.w	r0, r0, #4
 800a9d4:	f7ff bff8 	b.w	800a9c8 <_ZN20MeasurementPresenter15setTimeoutValueEi>

0800a9d8 <_ZN20MeasurementPresenterD0Ev>:
    virtual ~MeasurementPresenter() {}
 800a9d8:	b510      	push	{r4, lr}
 800a9da:	2110      	movs	r1, #16
 800a9dc:	4604      	mov	r4, r0
 800a9de:	f022 f884 	bl	802caea <_ZdlPvj>
 800a9e2:	4620      	mov	r0, r4
 800a9e4:	bd10      	pop	{r4, pc}

0800a9e6 <_ZThn4_N20MeasurementPresenterD0Ev>:
 800a9e6:	f1a0 0004 	sub.w	r0, r0, #4
 800a9ea:	e7f5      	b.n	800a9d8 <_ZN20MeasurementPresenterD0Ev>

0800a9ec <_ZN20MeasurementPresenterC1ER15MeasurementView>:
MeasurementPresenter::MeasurementPresenter(MeasurementView& v)
 800a9ec:	b510      	push	{r4, lr}
 800a9ee:	2200      	movs	r2, #0
 800a9f0:	6082      	str	r2, [r0, #8]
    : view(v)
 800a9f2:	4a04      	ldr	r2, [pc, #16]	; (800aa04 <_ZN20MeasurementPresenterC1ER15MeasurementView+0x18>)
 800a9f4:	60c1      	str	r1, [r0, #12]
 800a9f6:	f102 0408 	add.w	r4, r2, #8
 800a9fa:	3224      	adds	r2, #36	; 0x24
 800a9fc:	6004      	str	r4, [r0, #0]
 800a9fe:	6042      	str	r2, [r0, #4]
}
 800aa00:	bd10      	pop	{r4, pc}
 800aa02:	bf00      	nop
 800aa04:	08030fc4 	.word	0x08030fc4

0800aa08 <_ZN15MeasurementView14tearDownScreenEv>:
}

void MeasurementView::tearDownScreen()
{
    MeasurementViewBase::tearDownScreen();
}
 800aa08:	4770      	bx	lr
	...

0800aa0c <_ZN15MeasurementViewD1Ev>:

class MeasurementView : public MeasurementViewBase
{
public:
    MeasurementView();
    virtual ~MeasurementView() {}
 800aa0c:	b510      	push	{r4, lr}
 800aa0e:	4b03      	ldr	r3, [pc, #12]	; (800aa1c <_ZN15MeasurementViewD1Ev+0x10>)
 800aa10:	6003      	str	r3, [r0, #0]
 800aa12:	4604      	mov	r4, r0
 800aa14:	f7fc f9d6 	bl	8006dc4 <_ZN19MeasurementViewBaseD1Ev>
 800aa18:	4620      	mov	r0, r4
 800aa1a:	bd10      	pop	{r4, pc}
 800aa1c:	08030ffc 	.word	0x08030ffc

0800aa20 <_ZN15MeasurementViewD0Ev>:
 800aa20:	b510      	push	{r4, lr}
 800aa22:	4604      	mov	r4, r0
 800aa24:	f7ff fff2 	bl	800aa0c <_ZN15MeasurementViewD1Ev>
 800aa28:	4620      	mov	r0, r4
 800aa2a:	f241 11c4 	movw	r1, #4548	; 0x11c4
 800aa2e:	f022 f85c 	bl	802caea <_ZdlPvj>
 800aa32:	4620      	mov	r0, r4
 800aa34:	bd10      	pop	{r4, pc}
	...

0800aa38 <_ZN15MeasurementViewC1Ev>:
MeasurementView::MeasurementView()
 800aa38:	b510      	push	{r4, lr}
 800aa3a:	4604      	mov	r4, r0
 800aa3c:	f7fc f9fc 	bl	8006e38 <_ZN19MeasurementViewBaseC1Ev>
 800aa40:	4b01      	ldr	r3, [pc, #4]	; (800aa48 <_ZN15MeasurementViewC1Ev+0x10>)
 800aa42:	6023      	str	r3, [r4, #0]
}
 800aa44:	4620      	mov	r0, r4
 800aa46:	bd10      	pop	{r4, pc}
 800aa48:	08030ffc 	.word	0x08030ffc

0800aa4c <_ZN15MeasurementView11setupScreenEv>:
    MeasurementViewBase::setupScreen();
 800aa4c:	f7fc b996 	b.w	8006d7c <_ZN19MeasurementViewBase11setupScreenEv>

0800aa50 <_ZN15MeasurementView15setTimeoutValueEi>:

void MeasurementView::setTimeoutValue(int value)
{
 800aa50:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%d", value);
 800aa52:	4a0a      	ldr	r2, [pc, #40]	; (800aa7c <_ZN15MeasurementView15setTimeoutValueEi+0x2c>)
{
 800aa54:	4605      	mov	r5, r0
 800aa56:	460c      	mov	r4, r1
	Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%d", value);
 800aa58:	460b      	mov	r3, r1
 800aa5a:	f500 7067 	add.w	r0, r0, #924	; 0x39c
 800aa5e:	2104      	movs	r1, #4
 800aa60:	f011 f93c 	bl	801bcdc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea_auto_off.invalidate();
 800aa64:	f105 0098 	add.w	r0, r5, #152	; 0x98
 800aa68:	f00f f872 	bl	8019b50 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 800aa6c:	b92c      	cbnz	r4, 800aa7a <_ZN15MeasurementView15setTimeoutValueEi+0x2a>
 800aa6e:	f00d ff87 	bl	8018980 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 800aa72:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 800aa76:	f7fa be23 	b.w	80056c0 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 800aa7a:	bd38      	pop	{r3, r4, r5, pc}
 800aa7c:	0802f3a6 	.word	0x0802f3a6

0800aa80 <_ZN29Measurement_AccuratePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_AccuratePresenter() {}
 800aa80:	4770      	bx	lr

0800aa82 <_ZThn4_N29Measurement_AccuratePresenterD1Ev>:
 800aa82:	3804      	subs	r0, #4
 800aa84:	4770      	bx	lr

0800aa86 <_ZN29Measurement_AccuratePresenter10deactivateEv>:
}

void Measurement_AccuratePresenter::activate()
{

}
 800aa86:	4770      	bx	lr

0800aa88 <_ZN29Measurement_AccuratePresenter15setTimeoutValueEi>:

}

void Measurement_AccuratePresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 800aa88:	68c0      	ldr	r0, [r0, #12]
 800aa8a:	6803      	ldr	r3, [r0, #0]
 800aa8c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800aa8e:	4718      	bx	r3

0800aa90 <_ZThn4_N29Measurement_AccuratePresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 800aa90:	f1a0 0004 	sub.w	r0, r0, #4
 800aa94:	f7ff bff8 	b.w	800aa88 <_ZN29Measurement_AccuratePresenter15setTimeoutValueEi>

0800aa98 <_ZN29Measurement_AccuratePresenterD0Ev>:
    virtual ~Measurement_AccuratePresenter() {}
 800aa98:	b510      	push	{r4, lr}
 800aa9a:	2110      	movs	r1, #16
 800aa9c:	4604      	mov	r4, r0
 800aa9e:	f022 f824 	bl	802caea <_ZdlPvj>
 800aaa2:	4620      	mov	r0, r4
 800aaa4:	bd10      	pop	{r4, pc}

0800aaa6 <_ZThn4_N29Measurement_AccuratePresenterD0Ev>:
 800aaa6:	f1a0 0004 	sub.w	r0, r0, #4
 800aaaa:	e7f5      	b.n	800aa98 <_ZN29Measurement_AccuratePresenterD0Ev>

0800aaac <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>:
Measurement_AccuratePresenter::Measurement_AccuratePresenter(Measurement_AccurateView& v)
 800aaac:	b510      	push	{r4, lr}
 800aaae:	2200      	movs	r2, #0
 800aab0:	6082      	str	r2, [r0, #8]
    : view(v)
 800aab2:	4a04      	ldr	r2, [pc, #16]	; (800aac4 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView+0x18>)
 800aab4:	60c1      	str	r1, [r0, #12]
 800aab6:	f102 0408 	add.w	r4, r2, #8
 800aaba:	3224      	adds	r2, #36	; 0x24
 800aabc:	6004      	str	r4, [r0, #0]
 800aabe:	6042      	str	r2, [r0, #4]
}
 800aac0:	bd10      	pop	{r4, pc}
 800aac2:	bf00      	nop
 800aac4:	0803102c 	.word	0x0803102c

0800aac8 <_ZN24Measurement_AccurateView14tearDownScreenEv>:
}

void Measurement_AccurateView::tearDownScreen()
{
    Measurement_AccurateViewBase::tearDownScreen();
}
 800aac8:	4770      	bx	lr
	...

0800aacc <_ZN24Measurement_AccurateViewD1Ev>:

class Measurement_AccurateView : public Measurement_AccurateViewBase
{
public:
    Measurement_AccurateView();
    virtual ~Measurement_AccurateView() {}
 800aacc:	b510      	push	{r4, lr}
 800aace:	4b03      	ldr	r3, [pc, #12]	; (800aadc <_ZN24Measurement_AccurateViewD1Ev+0x10>)
 800aad0:	6003      	str	r3, [r0, #0]
 800aad2:	4604      	mov	r4, r0
 800aad4:	f7fc fc3e 	bl	8007354 <_ZN28Measurement_AccurateViewBaseD1Ev>
 800aad8:	4620      	mov	r0, r4
 800aada:	bd10      	pop	{r4, pc}
 800aadc:	08031064 	.word	0x08031064

0800aae0 <_ZN24Measurement_AccurateViewD0Ev>:
 800aae0:	b510      	push	{r4, lr}
 800aae2:	4604      	mov	r4, r0
 800aae4:	f7ff fff2 	bl	800aacc <_ZN24Measurement_AccurateViewD1Ev>
 800aae8:	4620      	mov	r0, r4
 800aaea:	f241 11c4 	movw	r1, #4548	; 0x11c4
 800aaee:	f021 fffc 	bl	802caea <_ZdlPvj>
 800aaf2:	4620      	mov	r0, r4
 800aaf4:	bd10      	pop	{r4, pc}
	...

0800aaf8 <_ZN24Measurement_AccurateViewC1Ev>:
Measurement_AccurateView::Measurement_AccurateView()
 800aaf8:	b510      	push	{r4, lr}
 800aafa:	4604      	mov	r4, r0
 800aafc:	f7fc fc64 	bl	80073c8 <_ZN28Measurement_AccurateViewBaseC1Ev>
 800ab00:	4b01      	ldr	r3, [pc, #4]	; (800ab08 <_ZN24Measurement_AccurateViewC1Ev+0x10>)
 800ab02:	6023      	str	r3, [r4, #0]
}
 800ab04:	4620      	mov	r0, r4
 800ab06:	bd10      	pop	{r4, pc}
 800ab08:	08031064 	.word	0x08031064

0800ab0c <_ZN24Measurement_AccurateView11setupScreenEv>:
    Measurement_AccurateViewBase::setupScreen();
 800ab0c:	f7fc bbfe 	b.w	800730c <_ZN28Measurement_AccurateViewBase11setupScreenEv>

0800ab10 <_ZN24Measurement_AccurateView15setTimeoutValueEi>:

void Measurement_AccurateView::setTimeoutValue(int value)
{
 800ab10:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%d", value);
 800ab12:	4a0a      	ldr	r2, [pc, #40]	; (800ab3c <_ZN24Measurement_AccurateView15setTimeoutValueEi+0x2c>)
{
 800ab14:	4605      	mov	r5, r0
 800ab16:	460c      	mov	r4, r1
	Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%d", value);
 800ab18:	460b      	mov	r3, r1
 800ab1a:	f500 7067 	add.w	r0, r0, #924	; 0x39c
 800ab1e:	2104      	movs	r1, #4
 800ab20:	f011 f8dc 	bl	801bcdc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea_auto_off.invalidate();
 800ab24:	f105 0098 	add.w	r0, r5, #152	; 0x98
 800ab28:	f00f f812 	bl	8019b50 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 800ab2c:	b92c      	cbnz	r4, 800ab3a <_ZN24Measurement_AccurateView15setTimeoutValueEi+0x2a>
 800ab2e:	f00d ff27 	bl	8018980 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 800ab32:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 800ab36:	f7fa bdc3 	b.w	80056c0 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 800ab3a:	bd38      	pop	{r3, r4, r5, pc}
 800ab3c:	0802f3a6 	.word	0x0802f3a6

0800ab40 <_ZN37Measurement_Accurate_DisplayPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Accurate_DisplayPresenter() {}
 800ab40:	4770      	bx	lr

0800ab42 <_ZThn4_N37Measurement_Accurate_DisplayPresenterD1Ev>:
 800ab42:	3804      	subs	r0, #4
 800ab44:	4770      	bx	lr

0800ab46 <_ZN37Measurement_Accurate_DisplayPresenter10deactivateEv>:
}

void Measurement_Accurate_DisplayPresenter::activate()
{

}
 800ab46:	4770      	bx	lr

0800ab48 <_ZN37Measurement_Accurate_DisplayPresenter15setTimeoutValueEi>:
}

void Measurement_Accurate_DisplayPresenter::setTimeoutValue(int value)
{

}
 800ab48:	4770      	bx	lr

0800ab4a <_ZN37Measurement_Accurate_DisplayPresenterD0Ev>:
 800ab4a:	b510      	push	{r4, lr}
 800ab4c:	2110      	movs	r1, #16
 800ab4e:	4604      	mov	r4, r0
 800ab50:	f021 ffcb 	bl	802caea <_ZdlPvj>
 800ab54:	4620      	mov	r0, r4
 800ab56:	bd10      	pop	{r4, pc}

0800ab58 <_ZThn4_N37Measurement_Accurate_DisplayPresenterD0Ev>:
 800ab58:	f1a0 0004 	sub.w	r0, r0, #4
 800ab5c:	e7f5      	b.n	800ab4a <_ZN37Measurement_Accurate_DisplayPresenterD0Ev>

0800ab5e <_ZThn4_N37Measurement_Accurate_DisplayPresenter15setTimeoutValueEi>:
 800ab5e:	4770      	bx	lr

0800ab60 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView>:
Measurement_Accurate_DisplayPresenter::Measurement_Accurate_DisplayPresenter(Measurement_Accurate_DisplayView& v)
 800ab60:	b510      	push	{r4, lr}
 800ab62:	2200      	movs	r2, #0
 800ab64:	6082      	str	r2, [r0, #8]
    : view(v)
 800ab66:	4a04      	ldr	r2, [pc, #16]	; (800ab78 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView+0x18>)
 800ab68:	60c1      	str	r1, [r0, #12]
 800ab6a:	f102 0408 	add.w	r4, r2, #8
 800ab6e:	3224      	adds	r2, #36	; 0x24
 800ab70:	6004      	str	r4, [r0, #0]
 800ab72:	6042      	str	r2, [r0, #4]
}
 800ab74:	bd10      	pop	{r4, pc}
 800ab76:	bf00      	nop
 800ab78:	08031094 	.word	0x08031094

0800ab7c <_ZN32Measurement_Accurate_DisplayView14tearDownScreenEv>:
}

void Measurement_Accurate_DisplayView::tearDownScreen()
{
    Measurement_Accurate_DisplayViewBase::tearDownScreen();
}
 800ab7c:	4770      	bx	lr
	...

0800ab80 <_ZN32Measurement_Accurate_DisplayViewD1Ev>:

class Measurement_Accurate_DisplayView : public Measurement_Accurate_DisplayViewBase
{
public:
    Measurement_Accurate_DisplayView();
    virtual ~Measurement_Accurate_DisplayView() {}
 800ab80:	b510      	push	{r4, lr}
 800ab82:	4b03      	ldr	r3, [pc, #12]	; (800ab90 <_ZN32Measurement_Accurate_DisplayViewD1Ev+0x10>)
 800ab84:	6003      	str	r3, [r0, #0]
 800ab86:	4604      	mov	r4, r0
 800ab88:	f7fc feac 	bl	80078e4 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>
 800ab8c:	4620      	mov	r0, r4
 800ab8e:	bd10      	pop	{r4, pc}
 800ab90:	080310cc 	.word	0x080310cc

0800ab94 <_ZN32Measurement_Accurate_DisplayViewD0Ev>:
 800ab94:	b510      	push	{r4, lr}
 800ab96:	4604      	mov	r4, r0
 800ab98:	f7ff fff2 	bl	800ab80 <_ZN32Measurement_Accurate_DisplayViewD1Ev>
 800ab9c:	4620      	mov	r0, r4
 800ab9e:	f241 4178 	movw	r1, #5240	; 0x1478
 800aba2:	f021 ffa2 	bl	802caea <_ZdlPvj>
 800aba6:	4620      	mov	r0, r4
 800aba8:	bd10      	pop	{r4, pc}
	...

0800abac <_ZN32Measurement_Accurate_DisplayViewC1Ev>:
Measurement_Accurate_DisplayView::Measurement_Accurate_DisplayView()
 800abac:	b510      	push	{r4, lr}
 800abae:	4604      	mov	r4, r0
 800abb0:	f7fc fec0 	bl	8007934 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev>
 800abb4:	4b01      	ldr	r3, [pc, #4]	; (800abbc <_ZN32Measurement_Accurate_DisplayViewC1Ev+0x10>)
 800abb6:	6023      	str	r3, [r4, #0]
}
 800abb8:	4620      	mov	r0, r4
 800abba:	bd10      	pop	{r4, pc}
 800abbc:	080310cc 	.word	0x080310cc

0800abc0 <_ZN32Measurement_Accurate_DisplayView11setupScreenEv>:
    Measurement_Accurate_DisplayViewBase::setupScreen();
 800abc0:	f7fc be6c 	b.w	800789c <_ZN36Measurement_Accurate_DisplayViewBase11setupScreenEv>

0800abc4 <_ZN39Measurement_Accurate_Display_2PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Accurate_Display_2Presenter() {}
 800abc4:	4770      	bx	lr

0800abc6 <_ZThn4_N39Measurement_Accurate_Display_2PresenterD1Ev>:
 800abc6:	3804      	subs	r0, #4
 800abc8:	4770      	bx	lr

0800abca <_ZN39Measurement_Accurate_Display_2Presenter10deactivateEv>:
}

void Measurement_Accurate_Display_2Presenter::activate()
{

}
 800abca:	4770      	bx	lr

0800abcc <_ZN39Measurement_Accurate_Display_2Presenter15setTimeoutValueEi>:
}

void Measurement_Accurate_Display_2Presenter::setTimeoutValue(int value)
{

}
 800abcc:	4770      	bx	lr

0800abce <_ZN39Measurement_Accurate_Display_2PresenterD0Ev>:
 800abce:	b510      	push	{r4, lr}
 800abd0:	2110      	movs	r1, #16
 800abd2:	4604      	mov	r4, r0
 800abd4:	f021 ff89 	bl	802caea <_ZdlPvj>
 800abd8:	4620      	mov	r0, r4
 800abda:	bd10      	pop	{r4, pc}

0800abdc <_ZThn4_N39Measurement_Accurate_Display_2PresenterD0Ev>:
 800abdc:	f1a0 0004 	sub.w	r0, r0, #4
 800abe0:	e7f5      	b.n	800abce <_ZN39Measurement_Accurate_Display_2PresenterD0Ev>

0800abe2 <_ZThn4_N39Measurement_Accurate_Display_2Presenter15setTimeoutValueEi>:
 800abe2:	4770      	bx	lr

0800abe4 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View>:
Measurement_Accurate_Display_2Presenter::Measurement_Accurate_Display_2Presenter(Measurement_Accurate_Display_2View& v)
 800abe4:	b510      	push	{r4, lr}
 800abe6:	2200      	movs	r2, #0
 800abe8:	6082      	str	r2, [r0, #8]
    : view(v)
 800abea:	4a04      	ldr	r2, [pc, #16]	; (800abfc <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View+0x18>)
 800abec:	60c1      	str	r1, [r0, #12]
 800abee:	f102 0408 	add.w	r4, r2, #8
 800abf2:	3224      	adds	r2, #36	; 0x24
 800abf4:	6004      	str	r4, [r0, #0]
 800abf6:	6042      	str	r2, [r0, #4]
}
 800abf8:	bd10      	pop	{r4, pc}
 800abfa:	bf00      	nop
 800abfc:	080310f8 	.word	0x080310f8

0800ac00 <_ZN34Measurement_Accurate_Display_2View14tearDownScreenEv>:
}

void Measurement_Accurate_Display_2View::tearDownScreen()
{
    Measurement_Accurate_Display_2ViewBase::tearDownScreen();
}
 800ac00:	4770      	bx	lr
	...

0800ac04 <_ZN34Measurement_Accurate_Display_2ViewD1Ev>:

class Measurement_Accurate_Display_2View : public Measurement_Accurate_Display_2ViewBase
{
public:
    Measurement_Accurate_Display_2View();
    virtual ~Measurement_Accurate_Display_2View() {}
 800ac04:	b510      	push	{r4, lr}
 800ac06:	4b03      	ldr	r3, [pc, #12]	; (800ac14 <_ZN34Measurement_Accurate_Display_2ViewD1Ev+0x10>)
 800ac08:	6003      	str	r3, [r0, #0]
 800ac0a:	4604      	mov	r4, r0
 800ac0c:	f7fd fa42 	bl	8008094 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>
 800ac10:	4620      	mov	r0, r4
 800ac12:	bd10      	pop	{r4, pc}
 800ac14:	08031130 	.word	0x08031130

0800ac18 <_ZN34Measurement_Accurate_Display_2ViewD0Ev>:
 800ac18:	b510      	push	{r4, lr}
 800ac1a:	4604      	mov	r4, r0
 800ac1c:	f7ff fff2 	bl	800ac04 <_ZN34Measurement_Accurate_Display_2ViewD1Ev>
 800ac20:	4620      	mov	r0, r4
 800ac22:	f241 4178 	movw	r1, #5240	; 0x1478
 800ac26:	f021 ff60 	bl	802caea <_ZdlPvj>
 800ac2a:	4620      	mov	r0, r4
 800ac2c:	bd10      	pop	{r4, pc}
	...

0800ac30 <_ZN34Measurement_Accurate_Display_2ViewC1Ev>:
Measurement_Accurate_Display_2View::Measurement_Accurate_Display_2View()
 800ac30:	b510      	push	{r4, lr}
 800ac32:	4604      	mov	r4, r0
 800ac34:	f7fd fa56 	bl	80080e4 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev>
 800ac38:	4b01      	ldr	r3, [pc, #4]	; (800ac40 <_ZN34Measurement_Accurate_Display_2ViewC1Ev+0x10>)
 800ac3a:	6023      	str	r3, [r4, #0]
}
 800ac3c:	4620      	mov	r0, r4
 800ac3e:	bd10      	pop	{r4, pc}
 800ac40:	08031130 	.word	0x08031130

0800ac44 <_ZN34Measurement_Accurate_Display_2View11setupScreenEv>:
    Measurement_Accurate_Display_2ViewBase::setupScreen();
 800ac44:	f7fd ba02 	b.w	800804c <_ZN38Measurement_Accurate_Display_2ViewBase11setupScreenEv>

0800ac48 <_ZN27Measurement_SinglePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_SinglePresenter() {}
 800ac48:	4770      	bx	lr

0800ac4a <_ZThn4_N27Measurement_SinglePresenterD1Ev>:
 800ac4a:	3804      	subs	r0, #4
 800ac4c:	4770      	bx	lr

0800ac4e <_ZN27Measurement_SinglePresenter10deactivateEv>:
}

void Measurement_SinglePresenter::activate()
{

}
 800ac4e:	4770      	bx	lr

0800ac50 <_ZN27Measurement_SinglePresenter15setTimeoutValueEi>:

}

void Measurement_SinglePresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 800ac50:	68c0      	ldr	r0, [r0, #12]
 800ac52:	6803      	ldr	r3, [r0, #0]
 800ac54:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ac56:	4718      	bx	r3

0800ac58 <_ZThn4_N27Measurement_SinglePresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 800ac58:	f1a0 0004 	sub.w	r0, r0, #4
 800ac5c:	f7ff bff8 	b.w	800ac50 <_ZN27Measurement_SinglePresenter15setTimeoutValueEi>

0800ac60 <_ZN27Measurement_SinglePresenterD0Ev>:
    virtual ~Measurement_SinglePresenter() {}
 800ac60:	b510      	push	{r4, lr}
 800ac62:	2110      	movs	r1, #16
 800ac64:	4604      	mov	r4, r0
 800ac66:	f021 ff40 	bl	802caea <_ZdlPvj>
 800ac6a:	4620      	mov	r0, r4
 800ac6c:	bd10      	pop	{r4, pc}

0800ac6e <_ZThn4_N27Measurement_SinglePresenterD0Ev>:
 800ac6e:	f1a0 0004 	sub.w	r0, r0, #4
 800ac72:	e7f5      	b.n	800ac60 <_ZN27Measurement_SinglePresenterD0Ev>

0800ac74 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView>:
Measurement_SinglePresenter::Measurement_SinglePresenter(Measurement_SingleView& v)
 800ac74:	b510      	push	{r4, lr}
 800ac76:	2200      	movs	r2, #0
 800ac78:	6082      	str	r2, [r0, #8]
    : view(v)
 800ac7a:	4a04      	ldr	r2, [pc, #16]	; (800ac8c <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView+0x18>)
 800ac7c:	60c1      	str	r1, [r0, #12]
 800ac7e:	f102 0408 	add.w	r4, r2, #8
 800ac82:	3224      	adds	r2, #36	; 0x24
 800ac84:	6004      	str	r4, [r0, #0]
 800ac86:	6042      	str	r2, [r0, #4]
}
 800ac88:	bd10      	pop	{r4, pc}
 800ac8a:	bf00      	nop
 800ac8c:	0803115c 	.word	0x0803115c

0800ac90 <_ZN22Measurement_SingleView14tearDownScreenEv>:
}

void Measurement_SingleView::tearDownScreen()
{
    Measurement_SingleViewBase::tearDownScreen();
}
 800ac90:	4770      	bx	lr
	...

0800ac94 <_ZN22Measurement_SingleViewD1Ev>:

class Measurement_SingleView : public Measurement_SingleViewBase
{
public:
    Measurement_SingleView();
    virtual ~Measurement_SingleView() {}
 800ac94:	b510      	push	{r4, lr}
 800ac96:	4b03      	ldr	r3, [pc, #12]	; (800aca4 <_ZN22Measurement_SingleViewD1Ev+0x10>)
 800ac98:	6003      	str	r3, [r0, #0]
 800ac9a:	4604      	mov	r4, r0
 800ac9c:	f7fd fdd0 	bl	8008840 <_ZN26Measurement_SingleViewBaseD1Ev>
 800aca0:	4620      	mov	r0, r4
 800aca2:	bd10      	pop	{r4, pc}
 800aca4:	08031194 	.word	0x08031194

0800aca8 <_ZN22Measurement_SingleViewD0Ev>:
 800aca8:	b510      	push	{r4, lr}
 800acaa:	4604      	mov	r4, r0
 800acac:	f7ff fff2 	bl	800ac94 <_ZN22Measurement_SingleViewD1Ev>
 800acb0:	4620      	mov	r0, r4
 800acb2:	f241 11c4 	movw	r1, #4548	; 0x11c4
 800acb6:	f021 ff18 	bl	802caea <_ZdlPvj>
 800acba:	4620      	mov	r0, r4
 800acbc:	bd10      	pop	{r4, pc}
	...

0800acc0 <_ZN22Measurement_SingleViewC1Ev>:
Measurement_SingleView::Measurement_SingleView()
 800acc0:	b510      	push	{r4, lr}
 800acc2:	4604      	mov	r4, r0
 800acc4:	f7fd fdf6 	bl	80088b4 <_ZN26Measurement_SingleViewBaseC1Ev>
 800acc8:	4b01      	ldr	r3, [pc, #4]	; (800acd0 <_ZN22Measurement_SingleViewC1Ev+0x10>)
 800acca:	6023      	str	r3, [r4, #0]
}
 800accc:	4620      	mov	r0, r4
 800acce:	bd10      	pop	{r4, pc}
 800acd0:	08031194 	.word	0x08031194

0800acd4 <_ZN22Measurement_SingleView11setupScreenEv>:
    Measurement_SingleViewBase::setupScreen();
 800acd4:	f7fd bd90 	b.w	80087f8 <_ZN26Measurement_SingleViewBase11setupScreenEv>

0800acd8 <_ZN22Measurement_SingleView15setTimeoutValueEi>:

void Measurement_SingleView::setTimeoutValue(int value)
{
 800acd8:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%d", value);
 800acda:	4a0a      	ldr	r2, [pc, #40]	; (800ad04 <_ZN22Measurement_SingleView15setTimeoutValueEi+0x2c>)
{
 800acdc:	4605      	mov	r5, r0
 800acde:	460c      	mov	r4, r1
	Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%d", value);
 800ace0:	460b      	mov	r3, r1
 800ace2:	f500 7067 	add.w	r0, r0, #924	; 0x39c
 800ace6:	2104      	movs	r1, #4
 800ace8:	f010 fff8 	bl	801bcdc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea_auto_off.invalidate();
 800acec:	f105 0098 	add.w	r0, r5, #152	; 0x98
 800acf0:	f00e ff2e 	bl	8019b50 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 800acf4:	b92c      	cbnz	r4, 800ad02 <_ZN22Measurement_SingleView15setTimeoutValueEi+0x2a>
 800acf6:	f00d fe43 	bl	8018980 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 800acfa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 800acfe:	f7fa bcdf 	b.w	80056c0 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 800ad02:	bd38      	pop	{r3, r4, r5, pc}
 800ad04:	0802f3a6 	.word	0x0802f3a6

0800ad08 <_ZN38Measurement_Single_Display_1PPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Single_Display_1PPresenter() {}
 800ad08:	4770      	bx	lr

0800ad0a <_ZThn4_N38Measurement_Single_Display_1PPresenterD1Ev>:
 800ad0a:	3804      	subs	r0, #4
 800ad0c:	4770      	bx	lr

0800ad0e <_ZN38Measurement_Single_Display_1PPresenter10deactivateEv>:
}

void Measurement_Single_Display_1PPresenter::activate()
{

}
 800ad0e:	4770      	bx	lr

0800ad10 <_ZN38Measurement_Single_Display_1PPresenter15setTimeoutValueEi>:
}

void Measurement_Single_Display_1PPresenter::setTimeoutValue(int value)
{

}
 800ad10:	4770      	bx	lr

0800ad12 <_ZN38Measurement_Single_Display_1PPresenterD0Ev>:
 800ad12:	b510      	push	{r4, lr}
 800ad14:	2110      	movs	r1, #16
 800ad16:	4604      	mov	r4, r0
 800ad18:	f021 fee7 	bl	802caea <_ZdlPvj>
 800ad1c:	4620      	mov	r0, r4
 800ad1e:	bd10      	pop	{r4, pc}

0800ad20 <_ZThn4_N38Measurement_Single_Display_1PPresenterD0Ev>:
 800ad20:	f1a0 0004 	sub.w	r0, r0, #4
 800ad24:	e7f5      	b.n	800ad12 <_ZN38Measurement_Single_Display_1PPresenterD0Ev>

0800ad26 <_ZThn4_N38Measurement_Single_Display_1PPresenter15setTimeoutValueEi>:
 800ad26:	4770      	bx	lr

0800ad28 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>:
Measurement_Single_Display_1PPresenter::Measurement_Single_Display_1PPresenter(Measurement_Single_Display_1PView& v)
 800ad28:	b510      	push	{r4, lr}
 800ad2a:	2200      	movs	r2, #0
 800ad2c:	6082      	str	r2, [r0, #8]
    : view(v)
 800ad2e:	4a04      	ldr	r2, [pc, #16]	; (800ad40 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView+0x18>)
 800ad30:	60c1      	str	r1, [r0, #12]
 800ad32:	f102 0408 	add.w	r4, r2, #8
 800ad36:	3224      	adds	r2, #36	; 0x24
 800ad38:	6004      	str	r4, [r0, #0]
 800ad3a:	6042      	str	r2, [r0, #4]
}
 800ad3c:	bd10      	pop	{r4, pc}
 800ad3e:	bf00      	nop
 800ad40:	080311c4 	.word	0x080311c4

0800ad44 <_ZN33Measurement_Single_Display_1PView14tearDownScreenEv>:
}

void Measurement_Single_Display_1PView::tearDownScreen()
{
    Measurement_Single_Display_1PViewBase::tearDownScreen();
}
 800ad44:	4770      	bx	lr
	...

0800ad48 <_ZN33Measurement_Single_Display_1PViewD1Ev>:

class Measurement_Single_Display_1PView : public Measurement_Single_Display_1PViewBase
{
public:
    Measurement_Single_Display_1PView();
    virtual ~Measurement_Single_Display_1PView() {}
 800ad48:	b510      	push	{r4, lr}
 800ad4a:	4b03      	ldr	r3, [pc, #12]	; (800ad58 <_ZN33Measurement_Single_Display_1PViewD1Ev+0x10>)
 800ad4c:	6003      	str	r3, [r0, #0]
 800ad4e:	4604      	mov	r4, r0
 800ad50:	f7fe f840 	bl	8008dd4 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>
 800ad54:	4620      	mov	r0, r4
 800ad56:	bd10      	pop	{r4, pc}
 800ad58:	08031204 	.word	0x08031204

0800ad5c <_ZN33Measurement_Single_Display_1PViewD0Ev>:
 800ad5c:	b510      	push	{r4, lr}
 800ad5e:	4604      	mov	r4, r0
 800ad60:	f7ff fff2 	bl	800ad48 <_ZN33Measurement_Single_Display_1PViewD1Ev>
 800ad64:	4620      	mov	r0, r4
 800ad66:	f241 417c 	movw	r1, #5244	; 0x147c
 800ad6a:	f021 febe 	bl	802caea <_ZdlPvj>
 800ad6e:	4620      	mov	r0, r4
 800ad70:	bd10      	pop	{r4, pc}
	...

0800ad74 <_ZN33Measurement_Single_Display_1PViewC1Ev>:
Measurement_Single_Display_1PView::Measurement_Single_Display_1PView()
 800ad74:	b510      	push	{r4, lr}
 800ad76:	4604      	mov	r4, r0
 800ad78:	f7fe f864 	bl	8008e44 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev>
 800ad7c:	4b01      	ldr	r3, [pc, #4]	; (800ad84 <_ZN33Measurement_Single_Display_1PViewC1Ev+0x10>)
 800ad7e:	6023      	str	r3, [r4, #0]
}
 800ad80:	4620      	mov	r0, r4
 800ad82:	bd10      	pop	{r4, pc}
 800ad84:	08031204 	.word	0x08031204

0800ad88 <_ZN33Measurement_Single_Display_1PView11setupScreenEv>:
    Measurement_Single_Display_1PViewBase::setupScreen();
 800ad88:	f7fd bfff 	b.w	8008d8a <_ZN37Measurement_Single_Display_1PViewBase11setupScreenEv>

0800ad8c <_ZN33Measurement_Single_Display_1PView7testGuiEv>:

void Measurement_Single_Display_1PView::testGui()
{
 800ad8c:	b530      	push	{r4, r5, lr}
 800ad8e:	ed2d 8b02 	vpush	{d8}
 800ad92:	b08d      	sub	sp, #52	; 0x34
 800ad94:	4604      	mov	r4, r0
#ifndef SIMULATOR

	uint32_t* Samples = MEAS_start_measure();
 800ad96:	f7f7 f99b 	bl	80020d0 <MEAS_start_measure>

	//callback to fft
	FFT fft = calculate_freq_and_signalstrength(1, Samples);
 800ad9a:	2101      	movs	r1, #1
 800ad9c:	4602      	mov	r2, r0
	uint32_t* Samples = MEAS_start_measure();
 800ad9e:	4605      	mov	r5, r0
	FFT fft = calculate_freq_and_signalstrength(1, Samples);
 800ada0:	a803      	add	r0, sp, #12
 800ada2:	f7f6 f97f 	bl	80010a4 <calculate_freq_and_signalstrength>

	DISTANCE_ANGLE distance_angle = calculate_distance_and_angle(Samples);
 800ada6:	4629      	mov	r1, r5
 800ada8:	a806      	add	r0, sp, #24
 800adaa:	f7f6 fab1 	bl	8001310 <calculate_distance_and_angle>
 800adae:	ed9d 8a0b 	vldr	s16, [sp, #44]	; 0x2c

	//update GUI values
	//set gauge angle
	SMD1_Gauge.setValue(distance_angle.angle);
 800adb2:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 800adb6:	f504 7027 	add.w	r0, r4, #668	; 0x29c
 800adba:	ee17 1a90 	vmov	r1, s15
 800adbe:	9001      	str	r0, [sp, #4]
 800adc0:	f00a fe7c 	bl	8015abc <_ZN8touchgfx5Gauge8setValueEi>
	SMD1_Gauge.invalidate();
 800adc4:	9801      	ldr	r0, [sp, #4]
 800adc6:	f00e fec3 	bl	8019b50 <_ZNK8touchgfx8Drawable10invalidateEv>
     *
     * @see snprintf, snprintfFloats
     */
    static UnicodeChar* snprintfFloat(UnicodeChar* dst, uint16_t dstSize, const char* format, const float value)
    {
        return snprintfFloats(dst, dstSize, format, &value);
 800adca:	ab02      	add	r3, sp, #8
 800adcc:	4a15      	ldr	r2, [pc, #84]	; (800ae24 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0x98>)
 800adce:	ed8d 8a02 	vstr	s16, [sp, #8]
 800add2:	210a      	movs	r1, #10
 800add4:	f204 601c 	addw	r0, r4, #1564	; 0x61c
 800add8:	f011 f96c 	bl	801c0b4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>

	//set current value
	Unicode::snprintfFloat(SMD1_CurrentBuffer, SMD1_CURRENT_SIZE, "%.2f", distance_angle.angle);
	SMD1_Current.invalidate();
 800addc:	f504 70dc 	add.w	r0, r4, #440	; 0x1b8
 800ade0:	f00e feb6 	bl	8019b50 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set frequency value
	Unicode::snprintfFloat(SMD1_FrequencyBuffer, SMD1_FREQUENCY_SIZE, "%.2f", fft.main_freq);
 800ade4:	9b03      	ldr	r3, [sp, #12]
 800ade6:	4a0f      	ldr	r2, [pc, #60]	; (800ae24 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0x98>)
 800ade8:	9302      	str	r3, [sp, #8]
 800adea:	210a      	movs	r1, #10
 800adec:	ab02      	add	r3, sp, #8
 800adee:	f504 60c6 	add.w	r0, r4, #1584	; 0x630
 800adf2:	f011 f95f 	bl	801c0b4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	SMD1_Frequency.invalidate();
 800adf6:	f504 7001 	add.w	r0, r4, #516	; 0x204
 800adfa:	f00e fea9 	bl	8019b50 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set distance value
	Unicode::snprintfFloat(SMD1_DistanceBuffer, SMD1_DISTANCE_SIZE, "%.2f", distance_angle.distance);
 800adfe:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800ae00:	9302      	str	r3, [sp, #8]
 800ae02:	4a08      	ldr	r2, [pc, #32]	; (800ae24 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0x98>)
 800ae04:	ab02      	add	r3, sp, #8
 800ae06:	210a      	movs	r1, #10
 800ae08:	f204 6044 	addw	r0, r4, #1604	; 0x644
 800ae0c:	f011 f952 	bl	801c0b4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	SMD1_Distance.invalidate();
 800ae10:	f504 7014 	add.w	r0, r4, #592	; 0x250

#endif
}
 800ae14:	b00d      	add	sp, #52	; 0x34
 800ae16:	ecbd 8b02 	vpop	{d8}
 800ae1a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
	SMD1_Distance.invalidate();
 800ae1e:	f00e be97 	b.w	8019b50 <_ZNK8touchgfx8Drawable10invalidateEv>
 800ae22:	bf00      	nop
 800ae24:	080311f4 	.word	0x080311f4

0800ae28 <_ZN38Measurement_Single_Display_3PPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Single_Display_3PPresenter() {}
 800ae28:	4770      	bx	lr

0800ae2a <_ZThn4_N38Measurement_Single_Display_3PPresenterD1Ev>:
 800ae2a:	3804      	subs	r0, #4
 800ae2c:	4770      	bx	lr

0800ae2e <_ZN38Measurement_Single_Display_3PPresenter10deactivateEv>:
}

void Measurement_Single_Display_3PPresenter::activate()
{

}
 800ae2e:	4770      	bx	lr

0800ae30 <_ZN38Measurement_Single_Display_3PPresenter15setTimeoutValueEi>:
}

void Measurement_Single_Display_3PPresenter::setTimeoutValue(int value)
{

}
 800ae30:	4770      	bx	lr

0800ae32 <_ZN38Measurement_Single_Display_3PPresenterD0Ev>:
 800ae32:	b510      	push	{r4, lr}
 800ae34:	2110      	movs	r1, #16
 800ae36:	4604      	mov	r4, r0
 800ae38:	f021 fe57 	bl	802caea <_ZdlPvj>
 800ae3c:	4620      	mov	r0, r4
 800ae3e:	bd10      	pop	{r4, pc}

0800ae40 <_ZThn4_N38Measurement_Single_Display_3PPresenterD0Ev>:
 800ae40:	f1a0 0004 	sub.w	r0, r0, #4
 800ae44:	e7f5      	b.n	800ae32 <_ZN38Measurement_Single_Display_3PPresenterD0Ev>

0800ae46 <_ZThn4_N38Measurement_Single_Display_3PPresenter15setTimeoutValueEi>:
 800ae46:	4770      	bx	lr

0800ae48 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView>:
Measurement_Single_Display_3PPresenter::Measurement_Single_Display_3PPresenter(Measurement_Single_Display_3PView& v)
 800ae48:	b510      	push	{r4, lr}
 800ae4a:	2200      	movs	r2, #0
 800ae4c:	6082      	str	r2, [r0, #8]
    : view(v)
 800ae4e:	4a04      	ldr	r2, [pc, #16]	; (800ae60 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView+0x18>)
 800ae50:	60c1      	str	r1, [r0, #12]
 800ae52:	f102 0408 	add.w	r4, r2, #8
 800ae56:	3224      	adds	r2, #36	; 0x24
 800ae58:	6004      	str	r4, [r0, #0]
 800ae5a:	6042      	str	r2, [r0, #4]
}
 800ae5c:	bd10      	pop	{r4, pc}
 800ae5e:	bf00      	nop
 800ae60:	08031234 	.word	0x08031234

0800ae64 <_ZN33Measurement_Single_Display_3PView14tearDownScreenEv>:
}

void Measurement_Single_Display_3PView::tearDownScreen()
{
    Measurement_Single_Display_3PViewBase::tearDownScreen();
}
 800ae64:	4770      	bx	lr
	...

0800ae68 <_ZN33Measurement_Single_Display_3PViewD1Ev>:

class Measurement_Single_Display_3PView : public Measurement_Single_Display_3PViewBase
{
public:
    Measurement_Single_Display_3PView();
    virtual ~Measurement_Single_Display_3PView() {}
 800ae68:	b510      	push	{r4, lr}
 800ae6a:	4b03      	ldr	r3, [pc, #12]	; (800ae78 <_ZN33Measurement_Single_Display_3PViewD1Ev+0x10>)
 800ae6c:	6003      	str	r3, [r0, #0]
 800ae6e:	4604      	mov	r4, r0
 800ae70:	f7fe fb94 	bl	800959c <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>
 800ae74:	4620      	mov	r0, r4
 800ae76:	bd10      	pop	{r4, pc}
 800ae78:	0803126c 	.word	0x0803126c

0800ae7c <_ZN33Measurement_Single_Display_3PViewD0Ev>:
 800ae7c:	b510      	push	{r4, lr}
 800ae7e:	4604      	mov	r4, r0
 800ae80:	f7ff fff2 	bl	800ae68 <_ZN33Measurement_Single_Display_3PViewD1Ev>
 800ae84:	4620      	mov	r0, r4
 800ae86:	f241 4178 	movw	r1, #5240	; 0x1478
 800ae8a:	f021 fe2e 	bl	802caea <_ZdlPvj>
 800ae8e:	4620      	mov	r0, r4
 800ae90:	bd10      	pop	{r4, pc}
	...

0800ae94 <_ZN33Measurement_Single_Display_3PViewC1Ev>:
Measurement_Single_Display_3PView::Measurement_Single_Display_3PView()
 800ae94:	b510      	push	{r4, lr}
 800ae96:	4604      	mov	r4, r0
 800ae98:	f7fe fba8 	bl	80095ec <_ZN37Measurement_Single_Display_3PViewBaseC1Ev>
 800ae9c:	4b01      	ldr	r3, [pc, #4]	; (800aea4 <_ZN33Measurement_Single_Display_3PViewC1Ev+0x10>)
 800ae9e:	6023      	str	r3, [r4, #0]
}
 800aea0:	4620      	mov	r0, r4
 800aea2:	bd10      	pop	{r4, pc}
 800aea4:	0803126c 	.word	0x0803126c

0800aea8 <_ZN33Measurement_Single_Display_3PView11setupScreenEv>:
    Measurement_Single_Display_3PViewBase::setupScreen();
 800aea8:	f7fe bb54 	b.w	8009554 <_ZN37Measurement_Single_Display_3PViewBase11setupScreenEv>

0800aeac <_ZN5ModelC1Ev>:
}
#endif



Model::Model() : modelListener(0), Timeout_Value(60)
 800aeac:	2100      	movs	r1, #0
 800aeae:	223c      	movs	r2, #60	; 0x3c
 800aeb0:	e9c0 1200 	strd	r1, r2, [r0]
{

}
 800aeb4:	4770      	bx	lr
	...

0800aeb8 <_ZN5Model4tickEv>:

void Model::tick()
{
 800aeb8:	b570      	push	{r4, r5, r6, lr}
#ifndef SIMULATOR

	if(osMessageQueueGetCount(TimeoutQueueHandle) > 0)
 800aeba:	4d0a      	ldr	r5, [pc, #40]	; (800aee4 <_ZN5Model4tickEv+0x2c>)
{
 800aebc:	4604      	mov	r4, r0
	if(osMessageQueueGetCount(TimeoutQueueHandle) > 0)
 800aebe:	6828      	ldr	r0, [r5, #0]
 800aec0:	f004 fe80 	bl	800fbc4 <osMessageQueueGetCount>
 800aec4:	b168      	cbz	r0, 800aee2 <_ZN5Model4tickEv+0x2a>
	{
		if(osMessageQueueGet(TimeoutQueueHandle, &Timeout_Value, 0, 0) == osOK)
 800aec6:	2300      	movs	r3, #0
 800aec8:	6828      	ldr	r0, [r5, #0]
 800aeca:	461a      	mov	r2, r3
 800aecc:	1d21      	adds	r1, r4, #4
 800aece:	f004 fe45 	bl	800fb5c <osMessageQueueGet>
 800aed2:	b930      	cbnz	r0, 800aee2 <_ZN5Model4tickEv+0x2a>
		{
			modelListener->setTimeoutValue(Timeout_Value);
 800aed4:	6820      	ldr	r0, [r4, #0]
 800aed6:	6861      	ldr	r1, [r4, #4]
 800aed8:	6803      	ldr	r3, [r0, #0]
		}
	}
#endif
}
 800aeda:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			modelListener->setTimeoutValue(Timeout_Value);
 800aede:	689b      	ldr	r3, [r3, #8]
 800aee0:	4718      	bx	r3
}
 800aee2:	bd70      	pop	{r4, r5, r6, pc}
 800aee4:	200001e4 	.word	0x200001e4

0800aee8 <_ZN21Project_InfoPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Project_InfoPresenter() {}
 800aee8:	4770      	bx	lr

0800aeea <_ZThn4_N21Project_InfoPresenterD1Ev>:
 800aeea:	3804      	subs	r0, #4
 800aeec:	4770      	bx	lr

0800aeee <_ZN21Project_InfoPresenter10deactivateEv>:
}

void Project_InfoPresenter::activate()
{

}
 800aeee:	4770      	bx	lr

0800aef0 <_ZN21Project_InfoPresenter15setTimeoutValueEi>:

}

void Project_InfoPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 800aef0:	68c0      	ldr	r0, [r0, #12]
 800aef2:	6803      	ldr	r3, [r0, #0]
 800aef4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800aef6:	4718      	bx	r3

0800aef8 <_ZThn4_N21Project_InfoPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 800aef8:	f1a0 0004 	sub.w	r0, r0, #4
 800aefc:	f7ff bff8 	b.w	800aef0 <_ZN21Project_InfoPresenter15setTimeoutValueEi>

0800af00 <_ZN21Project_InfoPresenterD0Ev>:
    virtual ~Project_InfoPresenter() {}
 800af00:	b510      	push	{r4, lr}
 800af02:	2110      	movs	r1, #16
 800af04:	4604      	mov	r4, r0
 800af06:	f021 fdf0 	bl	802caea <_ZdlPvj>
 800af0a:	4620      	mov	r0, r4
 800af0c:	bd10      	pop	{r4, pc}

0800af0e <_ZThn4_N21Project_InfoPresenterD0Ev>:
 800af0e:	f1a0 0004 	sub.w	r0, r0, #4
 800af12:	e7f5      	b.n	800af00 <_ZN21Project_InfoPresenterD0Ev>

0800af14 <_ZN21Project_InfoPresenterC1ER16Project_InfoView>:
Project_InfoPresenter::Project_InfoPresenter(Project_InfoView& v)
 800af14:	b510      	push	{r4, lr}
 800af16:	2200      	movs	r2, #0
 800af18:	6082      	str	r2, [r0, #8]
    : view(v)
 800af1a:	4a04      	ldr	r2, [pc, #16]	; (800af2c <_ZN21Project_InfoPresenterC1ER16Project_InfoView+0x18>)
 800af1c:	60c1      	str	r1, [r0, #12]
 800af1e:	f102 0408 	add.w	r4, r2, #8
 800af22:	3224      	adds	r2, #36	; 0x24
 800af24:	6004      	str	r4, [r0, #0]
 800af26:	6042      	str	r2, [r0, #4]
}
 800af28:	bd10      	pop	{r4, pc}
 800af2a:	bf00      	nop
 800af2c:	08031298 	.word	0x08031298

0800af30 <_ZN16Project_InfoView14tearDownScreenEv>:
}

void Project_InfoView::tearDownScreen()
{
    Project_InfoViewBase::tearDownScreen();
}
 800af30:	4770      	bx	lr
	...

0800af34 <_ZN16Project_InfoViewD1Ev>:

class Project_InfoView : public Project_InfoViewBase
{
public:
    Project_InfoView();
    virtual ~Project_InfoView() {}
 800af34:	b510      	push	{r4, lr}
 800af36:	4b03      	ldr	r3, [pc, #12]	; (800af44 <_ZN16Project_InfoViewD1Ev+0x10>)
 800af38:	6003      	str	r3, [r0, #0]
 800af3a:	4604      	mov	r4, r0
 800af3c:	f7fe fefe 	bl	8009d3c <_ZN20Project_InfoViewBaseD1Ev>
 800af40:	4620      	mov	r0, r4
 800af42:	bd10      	pop	{r4, pc}
 800af44:	080312d0 	.word	0x080312d0

0800af48 <_ZN16Project_InfoViewD0Ev>:
 800af48:	b510      	push	{r4, lr}
 800af4a:	4604      	mov	r4, r0
 800af4c:	f7ff fff2 	bl	800af34 <_ZN16Project_InfoViewD1Ev>
 800af50:	4620      	mov	r0, r4
 800af52:	f241 117c 	movw	r1, #4476	; 0x117c
 800af56:	f021 fdc8 	bl	802caea <_ZdlPvj>
 800af5a:	4620      	mov	r0, r4
 800af5c:	bd10      	pop	{r4, pc}
	...

0800af60 <_ZN16Project_InfoViewC1Ev>:
Project_InfoView::Project_InfoView()
 800af60:	b510      	push	{r4, lr}
 800af62:	4604      	mov	r4, r0
 800af64:	f7fe ff12 	bl	8009d8c <_ZN20Project_InfoViewBaseC1Ev>
 800af68:	4b01      	ldr	r3, [pc, #4]	; (800af70 <_ZN16Project_InfoViewC1Ev+0x10>)
 800af6a:	6023      	str	r3, [r4, #0]
}
 800af6c:	4620      	mov	r0, r4
 800af6e:	bd10      	pop	{r4, pc}
 800af70:	080312d0 	.word	0x080312d0

0800af74 <_ZN16Project_InfoView11setupScreenEv>:
    Project_InfoViewBase::setupScreen();
 800af74:	f7fe bebe 	b.w	8009cf4 <_ZN20Project_InfoViewBase11setupScreenEv>

0800af78 <_ZN16Project_InfoView15setTimeoutValueEi>:

void Project_InfoView::setTimeoutValue(int value)
{
 800af78:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%d", value);
 800af7a:	4a0a      	ldr	r2, [pc, #40]	; (800afa4 <_ZN16Project_InfoView15setTimeoutValueEi+0x2c>)
{
 800af7c:	4605      	mov	r5, r0
 800af7e:	460c      	mov	r4, r1
	Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%d", value);
 800af80:	460b      	mov	r3, r1
 800af82:	f500 7055 	add.w	r0, r0, #852	; 0x354
 800af86:	2104      	movs	r1, #4
 800af88:	f010 fea8 	bl	801bcdc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea_auto_off.invalidate();
 800af8c:	f105 0098 	add.w	r0, r5, #152	; 0x98
 800af90:	f00e fdde 	bl	8019b50 <_ZNK8touchgfx8Drawable10invalidateEv>

	if (value == 0) {
 800af94:	b92c      	cbnz	r4, 800afa2 <_ZN16Project_InfoView15setTimeoutValueEi+0x2a>
 800af96:	f00d fcf3 	bl	8018980 <_ZN8touchgfx11Application11getInstanceEv>
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 800af9a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 800af9e:	f7fa bb8f 	b.w	80056c0 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 800afa2:	bd38      	pop	{r3, r4, r5, pc}
 800afa4:	0802f3a6 	.word	0x0802f3a6

0800afa8 <_ZN21Shutting_OffPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Shutting_OffPresenter() {}
 800afa8:	4770      	bx	lr

0800afaa <_ZThn4_N21Shutting_OffPresenterD1Ev>:
 800afaa:	3804      	subs	r0, #4
 800afac:	4770      	bx	lr

0800afae <_ZN21Shutting_OffPresenter10deactivateEv>:
}

void Shutting_OffPresenter::activate()
{

}
 800afae:	4770      	bx	lr

0800afb0 <_ZN21Shutting_OffPresenter15setTimeoutValueEi>:
}

void Shutting_OffPresenter::setTimeoutValue(int value)
{

}
 800afb0:	4770      	bx	lr

0800afb2 <_ZN21Shutting_OffPresenterD0Ev>:
 800afb2:	b510      	push	{r4, lr}
 800afb4:	2110      	movs	r1, #16
 800afb6:	4604      	mov	r4, r0
 800afb8:	f021 fd97 	bl	802caea <_ZdlPvj>
 800afbc:	4620      	mov	r0, r4
 800afbe:	bd10      	pop	{r4, pc}

0800afc0 <_ZThn4_N21Shutting_OffPresenterD0Ev>:
 800afc0:	f1a0 0004 	sub.w	r0, r0, #4
 800afc4:	e7f5      	b.n	800afb2 <_ZN21Shutting_OffPresenterD0Ev>

0800afc6 <_ZThn4_N21Shutting_OffPresenter15setTimeoutValueEi>:
 800afc6:	4770      	bx	lr

0800afc8 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView>:
Shutting_OffPresenter::Shutting_OffPresenter(Shutting_OffView& v)
 800afc8:	b510      	push	{r4, lr}
 800afca:	2200      	movs	r2, #0
 800afcc:	6082      	str	r2, [r0, #8]
    : view(v)
 800afce:	4a04      	ldr	r2, [pc, #16]	; (800afe0 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView+0x18>)
 800afd0:	60c1      	str	r1, [r0, #12]
 800afd2:	f102 0408 	add.w	r4, r2, #8
 800afd6:	3224      	adds	r2, #36	; 0x24
 800afd8:	6004      	str	r4, [r0, #0]
 800afda:	6042      	str	r2, [r0, #4]
}
 800afdc:	bd10      	pop	{r4, pc}
 800afde:	bf00      	nop
 800afe0:	08031300 	.word	0x08031300

0800afe4 <_ZN16Shutting_OffView14tearDownScreenEv>:
}

void Shutting_OffView::tearDownScreen()
{
    Shutting_OffViewBase::tearDownScreen();
}
 800afe4:	4770      	bx	lr
	...

0800afe8 <_ZN16Shutting_OffViewD1Ev>:

class Shutting_OffView : public Shutting_OffViewBase
{
public:
    Shutting_OffView();
    virtual ~Shutting_OffView() {}
 800afe8:	b510      	push	{r4, lr}
 800afea:	4b03      	ldr	r3, [pc, #12]	; (800aff8 <_ZN16Shutting_OffViewD1Ev+0x10>)
 800afec:	6003      	str	r3, [r0, #0]
 800afee:	4604      	mov	r4, r0
 800aff0:	f7ff f916 	bl	800a220 <_ZN20Shutting_OffViewBaseD1Ev>
 800aff4:	4620      	mov	r0, r4
 800aff6:	bd10      	pop	{r4, pc}
 800aff8:	08031338 	.word	0x08031338

0800affc <_ZN16Shutting_OffViewD0Ev>:
 800affc:	b510      	push	{r4, lr}
 800affe:	4604      	mov	r4, r0
 800b000:	f7ff fff2 	bl	800afe8 <_ZN16Shutting_OffViewD1Ev>
 800b004:	4620      	mov	r0, r4
 800b006:	2198      	movs	r1, #152	; 0x98
 800b008:	f021 fd6f 	bl	802caea <_ZdlPvj>
 800b00c:	4620      	mov	r0, r4
 800b00e:	bd10      	pop	{r4, pc}

0800b010 <_ZN16Shutting_OffViewC1Ev>:
Shutting_OffView::Shutting_OffView()
 800b010:	b510      	push	{r4, lr}
 800b012:	4604      	mov	r4, r0
 800b014:	f7ff f90e 	bl	800a234 <_ZN20Shutting_OffViewBaseC1Ev>
 800b018:	4b01      	ldr	r3, [pc, #4]	; (800b020 <_ZN16Shutting_OffViewC1Ev+0x10>)
 800b01a:	6023      	str	r3, [r4, #0]
}
 800b01c:	4620      	mov	r0, r4
 800b01e:	bd10      	pop	{r4, pc}
 800b020:	08031338 	.word	0x08031338

0800b024 <_ZN16Shutting_OffView11setupScreenEv>:
    Shutting_OffViewBase::setupScreen();
 800b024:	f7ff b8fd 	b.w	800a222 <_ZN20Shutting_OffViewBase11setupScreenEv>

0800b028 <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 800b028:	20f0      	movs	r0, #240	; 0xf0
 800b02a:	4770      	bx	lr

0800b02c <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 800b02c:	f44f 70a0 	mov.w	r0, #320	; 0x140
 800b030:	4770      	bx	lr
 800b032:	bf00      	nop

0800b034 <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 800b034:	2029      	movs	r0, #41	; 0x29
 800b036:	f7f6 bec3 	b.w	8001dc0 <LCD_IO_WriteReg>
 800b03a:	bf00      	nop

0800b03c <ili9341_DisplayOff>:
 800b03c:	2028      	movs	r0, #40	; 0x28
 800b03e:	f7f6 bebf 	b.w	8001dc0 <LCD_IO_WriteReg>
 800b042:	bf00      	nop

0800b044 <ili9341_Init>:
{
 800b044:	b508      	push	{r3, lr}
  LCD_IO_Init();
 800b046:	f7f6 fe81 	bl	8001d4c <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 800b04a:	20ca      	movs	r0, #202	; 0xca
 800b04c:	f7f6 feb8 	bl	8001dc0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b050:	20c3      	movs	r0, #195	; 0xc3
 800b052:	f7f6 fe8b 	bl	8001d6c <LCD_IO_WriteData>
 800b056:	2008      	movs	r0, #8
 800b058:	f7f6 fe88 	bl	8001d6c <LCD_IO_WriteData>
 800b05c:	2050      	movs	r0, #80	; 0x50
 800b05e:	f7f6 fe85 	bl	8001d6c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b062:	20cf      	movs	r0, #207	; 0xcf
 800b064:	f7f6 feac 	bl	8001dc0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b068:	2000      	movs	r0, #0
 800b06a:	f7f6 fe7f 	bl	8001d6c <LCD_IO_WriteData>
 800b06e:	20c1      	movs	r0, #193	; 0xc1
 800b070:	f7f6 fe7c 	bl	8001d6c <LCD_IO_WriteData>
 800b074:	2030      	movs	r0, #48	; 0x30
 800b076:	f7f6 fe79 	bl	8001d6c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b07a:	20ed      	movs	r0, #237	; 0xed
 800b07c:	f7f6 fea0 	bl	8001dc0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b080:	2064      	movs	r0, #100	; 0x64
 800b082:	f7f6 fe73 	bl	8001d6c <LCD_IO_WriteData>
 800b086:	2003      	movs	r0, #3
 800b088:	f7f6 fe70 	bl	8001d6c <LCD_IO_WriteData>
 800b08c:	2012      	movs	r0, #18
 800b08e:	f7f6 fe6d 	bl	8001d6c <LCD_IO_WriteData>
 800b092:	2081      	movs	r0, #129	; 0x81
 800b094:	f7f6 fe6a 	bl	8001d6c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b098:	20e8      	movs	r0, #232	; 0xe8
 800b09a:	f7f6 fe91 	bl	8001dc0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b09e:	2085      	movs	r0, #133	; 0x85
 800b0a0:	f7f6 fe64 	bl	8001d6c <LCD_IO_WriteData>
 800b0a4:	2000      	movs	r0, #0
 800b0a6:	f7f6 fe61 	bl	8001d6c <LCD_IO_WriteData>
 800b0aa:	2078      	movs	r0, #120	; 0x78
 800b0ac:	f7f6 fe5e 	bl	8001d6c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b0b0:	20cb      	movs	r0, #203	; 0xcb
 800b0b2:	f7f6 fe85 	bl	8001dc0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b0b6:	2039      	movs	r0, #57	; 0x39
 800b0b8:	f7f6 fe58 	bl	8001d6c <LCD_IO_WriteData>
 800b0bc:	202c      	movs	r0, #44	; 0x2c
 800b0be:	f7f6 fe55 	bl	8001d6c <LCD_IO_WriteData>
 800b0c2:	2000      	movs	r0, #0
 800b0c4:	f7f6 fe52 	bl	8001d6c <LCD_IO_WriteData>
 800b0c8:	2034      	movs	r0, #52	; 0x34
 800b0ca:	f7f6 fe4f 	bl	8001d6c <LCD_IO_WriteData>
 800b0ce:	2002      	movs	r0, #2
 800b0d0:	f7f6 fe4c 	bl	8001d6c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b0d4:	20f7      	movs	r0, #247	; 0xf7
 800b0d6:	f7f6 fe73 	bl	8001dc0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b0da:	2020      	movs	r0, #32
 800b0dc:	f7f6 fe46 	bl	8001d6c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b0e0:	20ea      	movs	r0, #234	; 0xea
 800b0e2:	f7f6 fe6d 	bl	8001dc0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b0e6:	2000      	movs	r0, #0
 800b0e8:	f7f6 fe40 	bl	8001d6c <LCD_IO_WriteData>
 800b0ec:	2000      	movs	r0, #0
 800b0ee:	f7f6 fe3d 	bl	8001d6c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b0f2:	20b1      	movs	r0, #177	; 0xb1
 800b0f4:	f7f6 fe64 	bl	8001dc0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b0f8:	2000      	movs	r0, #0
 800b0fa:	f7f6 fe37 	bl	8001d6c <LCD_IO_WriteData>
 800b0fe:	201b      	movs	r0, #27
 800b100:	f7f6 fe34 	bl	8001d6c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b104:	20b6      	movs	r0, #182	; 0xb6
 800b106:	f7f6 fe5b 	bl	8001dc0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b10a:	200a      	movs	r0, #10
 800b10c:	f7f6 fe2e 	bl	8001d6c <LCD_IO_WriteData>
 800b110:	20a2      	movs	r0, #162	; 0xa2
 800b112:	f7f6 fe2b 	bl	8001d6c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b116:	20c0      	movs	r0, #192	; 0xc0
 800b118:	f7f6 fe52 	bl	8001dc0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b11c:	2010      	movs	r0, #16
 800b11e:	f7f6 fe25 	bl	8001d6c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b122:	20c1      	movs	r0, #193	; 0xc1
 800b124:	f7f6 fe4c 	bl	8001dc0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b128:	2010      	movs	r0, #16
 800b12a:	f7f6 fe1f 	bl	8001d6c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b12e:	20c5      	movs	r0, #197	; 0xc5
 800b130:	f7f6 fe46 	bl	8001dc0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b134:	2045      	movs	r0, #69	; 0x45
 800b136:	f7f6 fe19 	bl	8001d6c <LCD_IO_WriteData>
 800b13a:	2015      	movs	r0, #21
 800b13c:	f7f6 fe16 	bl	8001d6c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b140:	20c7      	movs	r0, #199	; 0xc7
 800b142:	f7f6 fe3d 	bl	8001dc0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b146:	2090      	movs	r0, #144	; 0x90
 800b148:	f7f6 fe10 	bl	8001d6c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b14c:	2036      	movs	r0, #54	; 0x36
 800b14e:	f7f6 fe37 	bl	8001dc0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b152:	20c8      	movs	r0, #200	; 0xc8
 800b154:	f7f6 fe0a 	bl	8001d6c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b158:	20f2      	movs	r0, #242	; 0xf2
 800b15a:	f7f6 fe31 	bl	8001dc0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b15e:	2000      	movs	r0, #0
 800b160:	f7f6 fe04 	bl	8001d6c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b164:	20b0      	movs	r0, #176	; 0xb0
 800b166:	f7f6 fe2b 	bl	8001dc0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b16a:	20c2      	movs	r0, #194	; 0xc2
 800b16c:	f7f6 fdfe 	bl	8001d6c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b170:	20b6      	movs	r0, #182	; 0xb6
 800b172:	f7f6 fe25 	bl	8001dc0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b176:	200a      	movs	r0, #10
 800b178:	f7f6 fdf8 	bl	8001d6c <LCD_IO_WriteData>
 800b17c:	20a7      	movs	r0, #167	; 0xa7
 800b17e:	f7f6 fdf5 	bl	8001d6c <LCD_IO_WriteData>
 800b182:	2027      	movs	r0, #39	; 0x27
 800b184:	f7f6 fdf2 	bl	8001d6c <LCD_IO_WriteData>
 800b188:	2004      	movs	r0, #4
 800b18a:	f7f6 fdef 	bl	8001d6c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b18e:	202a      	movs	r0, #42	; 0x2a
 800b190:	f7f6 fe16 	bl	8001dc0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b194:	2000      	movs	r0, #0
 800b196:	f7f6 fde9 	bl	8001d6c <LCD_IO_WriteData>
 800b19a:	2000      	movs	r0, #0
 800b19c:	f7f6 fde6 	bl	8001d6c <LCD_IO_WriteData>
 800b1a0:	2000      	movs	r0, #0
 800b1a2:	f7f6 fde3 	bl	8001d6c <LCD_IO_WriteData>
 800b1a6:	20ef      	movs	r0, #239	; 0xef
 800b1a8:	f7f6 fde0 	bl	8001d6c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b1ac:	202b      	movs	r0, #43	; 0x2b
 800b1ae:	f7f6 fe07 	bl	8001dc0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b1b2:	2000      	movs	r0, #0
 800b1b4:	f7f6 fdda 	bl	8001d6c <LCD_IO_WriteData>
 800b1b8:	2000      	movs	r0, #0
 800b1ba:	f7f6 fdd7 	bl	8001d6c <LCD_IO_WriteData>
 800b1be:	2001      	movs	r0, #1
 800b1c0:	f7f6 fdd4 	bl	8001d6c <LCD_IO_WriteData>
 800b1c4:	203f      	movs	r0, #63	; 0x3f
 800b1c6:	f7f6 fdd1 	bl	8001d6c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b1ca:	20f6      	movs	r0, #246	; 0xf6
 800b1cc:	f7f6 fdf8 	bl	8001dc0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b1d0:	2001      	movs	r0, #1
 800b1d2:	f7f6 fdcb 	bl	8001d6c <LCD_IO_WriteData>
 800b1d6:	2000      	movs	r0, #0
 800b1d8:	f7f6 fdc8 	bl	8001d6c <LCD_IO_WriteData>
 800b1dc:	2006      	movs	r0, #6
 800b1de:	f7f6 fdc5 	bl	8001d6c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b1e2:	202c      	movs	r0, #44	; 0x2c
 800b1e4:	f7f6 fdec 	bl	8001dc0 <LCD_IO_WriteReg>
  LCD_Delay(200);
 800b1e8:	20c8      	movs	r0, #200	; 0xc8
 800b1ea:	f7f6 fe51 	bl	8001e90 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 800b1ee:	2026      	movs	r0, #38	; 0x26
 800b1f0:	f7f6 fde6 	bl	8001dc0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b1f4:	2001      	movs	r0, #1
 800b1f6:	f7f6 fdb9 	bl	8001d6c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b1fa:	20e0      	movs	r0, #224	; 0xe0
 800b1fc:	f7f6 fde0 	bl	8001dc0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b200:	200f      	movs	r0, #15
 800b202:	f7f6 fdb3 	bl	8001d6c <LCD_IO_WriteData>
 800b206:	2029      	movs	r0, #41	; 0x29
 800b208:	f7f6 fdb0 	bl	8001d6c <LCD_IO_WriteData>
 800b20c:	2024      	movs	r0, #36	; 0x24
 800b20e:	f7f6 fdad 	bl	8001d6c <LCD_IO_WriteData>
 800b212:	200c      	movs	r0, #12
 800b214:	f7f6 fdaa 	bl	8001d6c <LCD_IO_WriteData>
 800b218:	200e      	movs	r0, #14
 800b21a:	f7f6 fda7 	bl	8001d6c <LCD_IO_WriteData>
 800b21e:	2009      	movs	r0, #9
 800b220:	f7f6 fda4 	bl	8001d6c <LCD_IO_WriteData>
 800b224:	204e      	movs	r0, #78	; 0x4e
 800b226:	f7f6 fda1 	bl	8001d6c <LCD_IO_WriteData>
 800b22a:	2078      	movs	r0, #120	; 0x78
 800b22c:	f7f6 fd9e 	bl	8001d6c <LCD_IO_WriteData>
 800b230:	203c      	movs	r0, #60	; 0x3c
 800b232:	f7f6 fd9b 	bl	8001d6c <LCD_IO_WriteData>
 800b236:	2009      	movs	r0, #9
 800b238:	f7f6 fd98 	bl	8001d6c <LCD_IO_WriteData>
 800b23c:	2013      	movs	r0, #19
 800b23e:	f7f6 fd95 	bl	8001d6c <LCD_IO_WriteData>
 800b242:	2005      	movs	r0, #5
 800b244:	f7f6 fd92 	bl	8001d6c <LCD_IO_WriteData>
 800b248:	2017      	movs	r0, #23
 800b24a:	f7f6 fd8f 	bl	8001d6c <LCD_IO_WriteData>
 800b24e:	2011      	movs	r0, #17
 800b250:	f7f6 fd8c 	bl	8001d6c <LCD_IO_WriteData>
 800b254:	2000      	movs	r0, #0
 800b256:	f7f6 fd89 	bl	8001d6c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b25a:	20e1      	movs	r0, #225	; 0xe1
 800b25c:	f7f6 fdb0 	bl	8001dc0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b260:	2000      	movs	r0, #0
 800b262:	f7f6 fd83 	bl	8001d6c <LCD_IO_WriteData>
 800b266:	2016      	movs	r0, #22
 800b268:	f7f6 fd80 	bl	8001d6c <LCD_IO_WriteData>
 800b26c:	201b      	movs	r0, #27
 800b26e:	f7f6 fd7d 	bl	8001d6c <LCD_IO_WriteData>
 800b272:	2004      	movs	r0, #4
 800b274:	f7f6 fd7a 	bl	8001d6c <LCD_IO_WriteData>
 800b278:	2011      	movs	r0, #17
 800b27a:	f7f6 fd77 	bl	8001d6c <LCD_IO_WriteData>
 800b27e:	2007      	movs	r0, #7
 800b280:	f7f6 fd74 	bl	8001d6c <LCD_IO_WriteData>
 800b284:	2031      	movs	r0, #49	; 0x31
 800b286:	f7f6 fd71 	bl	8001d6c <LCD_IO_WriteData>
 800b28a:	2033      	movs	r0, #51	; 0x33
 800b28c:	f7f6 fd6e 	bl	8001d6c <LCD_IO_WriteData>
 800b290:	2042      	movs	r0, #66	; 0x42
 800b292:	f7f6 fd6b 	bl	8001d6c <LCD_IO_WriteData>
 800b296:	2005      	movs	r0, #5
 800b298:	f7f6 fd68 	bl	8001d6c <LCD_IO_WriteData>
 800b29c:	200c      	movs	r0, #12
 800b29e:	f7f6 fd65 	bl	8001d6c <LCD_IO_WriteData>
 800b2a2:	200a      	movs	r0, #10
 800b2a4:	f7f6 fd62 	bl	8001d6c <LCD_IO_WriteData>
 800b2a8:	2028      	movs	r0, #40	; 0x28
 800b2aa:	f7f6 fd5f 	bl	8001d6c <LCD_IO_WriteData>
 800b2ae:	202f      	movs	r0, #47	; 0x2f
 800b2b0:	f7f6 fd5c 	bl	8001d6c <LCD_IO_WriteData>
 800b2b4:	200f      	movs	r0, #15
 800b2b6:	f7f6 fd59 	bl	8001d6c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b2ba:	2011      	movs	r0, #17
 800b2bc:	f7f6 fd80 	bl	8001dc0 <LCD_IO_WriteReg>
  LCD_Delay(200);
 800b2c0:	20c8      	movs	r0, #200	; 0xc8
 800b2c2:	f7f6 fde5 	bl	8001e90 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 800b2c6:	2029      	movs	r0, #41	; 0x29
 800b2c8:	f7f6 fd7a 	bl	8001dc0 <LCD_IO_WriteReg>
}
 800b2cc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 800b2d0:	202c      	movs	r0, #44	; 0x2c
 800b2d2:	f7f6 bd75 	b.w	8001dc0 <LCD_IO_WriteReg>
 800b2d6:	bf00      	nop

0800b2d8 <ili9341_ReadID>:
{
 800b2d8:	b508      	push	{r3, lr}
  LCD_IO_Init();
 800b2da:	f7f6 fd37 	bl	8001d4c <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 800b2de:	2103      	movs	r1, #3
 800b2e0:	20d3      	movs	r0, #211	; 0xd3
 800b2e2:	f7f6 fd97 	bl	8001e14 <LCD_IO_ReadData>
}
 800b2e6:	b280      	uxth	r0, r0
 800b2e8:	bd08      	pop	{r3, pc}
 800b2ea:	bf00      	nop

0800b2ec <stmpe811_TS_ClearIT>:
  * @retval None
  */
void stmpe811_ClearGlobalIT(uint16_t DeviceAddr, uint8_t Source)
{
  /* Write 1 to the bits that have to be cleared */
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 800b2ec:	221f      	movs	r2, #31
 800b2ee:	210b      	movs	r1, #11
 800b2f0:	b2c0      	uxtb	r0, r0
 800b2f2:	f7f6 bcdd 	b.w	8001cb0 <IOE_Write>
 800b2f6:	bf00      	nop

0800b2f8 <stmpe811_Reset>:
{
 800b2f8:	b510      	push	{r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 800b2fa:	b2c4      	uxtb	r4, r0
 800b2fc:	2202      	movs	r2, #2
 800b2fe:	2103      	movs	r1, #3
 800b300:	4620      	mov	r0, r4
 800b302:	f7f6 fcd5 	bl	8001cb0 <IOE_Write>
  IOE_Delay(10); 
 800b306:	200a      	movs	r0, #10
 800b308:	f7f6 fd1e 	bl	8001d48 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 800b30c:	4620      	mov	r0, r4
 800b30e:	2200      	movs	r2, #0
 800b310:	2103      	movs	r1, #3
 800b312:	f7f6 fccd 	bl	8001cb0 <IOE_Write>
}
 800b316:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 800b31a:	2002      	movs	r0, #2
 800b31c:	f7f6 bd14 	b.w	8001d48 <IOE_Delay>

0800b320 <stmpe811_ReadID>:
{
 800b320:	b510      	push	{r4, lr}
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800b322:	b2c4      	uxtb	r4, r0
  IOE_Init(); 
 800b324:	f7f6 fcc0 	bl	8001ca8 <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800b328:	2100      	movs	r1, #0
 800b32a:	4620      	mov	r0, r4
 800b32c:	f7f6 fcd8 	bl	8001ce0 <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 800b330:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800b332:	4603      	mov	r3, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 800b334:	4620      	mov	r0, r4
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800b336:	461c      	mov	r4, r3
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 800b338:	f7f6 fcd2 	bl	8001ce0 <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800b33c:	ea40 2004 	orr.w	r0, r0, r4, lsl #8
}
 800b340:	b280      	uxth	r0, r0
 800b342:	bd10      	pop	{r4, pc}

0800b344 <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 800b344:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 800b346:	b2c4      	uxtb	r4, r0
 800b348:	2140      	movs	r1, #64	; 0x40
 800b34a:	4620      	mov	r0, r4
 800b34c:	f7f6 fcc8 	bl	8001ce0 <IOE_Read>
  
  if(state > 0)
 800b350:	0603      	lsls	r3, r0, #24
 800b352:	d40b      	bmi.n	800b36c <stmpe811_TS_DetectTouch+0x28>
    }
  }
  else
  {
    /* Reset FIFO */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 800b354:	4620      	mov	r0, r4
 800b356:	2201      	movs	r2, #1
 800b358:	214b      	movs	r1, #75	; 0x4b
 800b35a:	f7f6 fca9 	bl	8001cb0 <IOE_Write>
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 800b35e:	4620      	mov	r0, r4
 800b360:	2200      	movs	r2, #0
 800b362:	214b      	movs	r1, #75	; 0x4b
 800b364:	f7f6 fca4 	bl	8001cb0 <IOE_Write>
  uint8_t ret = 0;
 800b368:	2000      	movs	r0, #0
  }
  
  return ret;
}
 800b36a:	bd10      	pop	{r4, pc}
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 800b36c:	214c      	movs	r1, #76	; 0x4c
 800b36e:	4620      	mov	r0, r4
 800b370:	f7f6 fcb6 	bl	8001ce0 <IOE_Read>
      ret = 1;
 800b374:	3800      	subs	r0, #0
 800b376:	bf18      	it	ne
 800b378:	2001      	movne	r0, #1
}
 800b37a:	bd10      	pop	{r4, pc}

0800b37c <stmpe811_TS_ITStatus>:
  * @brief  Configure the selected source to generate a global interrupt or not
  * @param  DeviceAddr: Device address on communication Bus.    
  * @retval TS interrupts status
  */
uint8_t stmpe811_TS_ITStatus(uint16_t DeviceAddr)
{
 800b37c:	b508      	push	{r3, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 800b37e:	210b      	movs	r1, #11
 800b380:	b2c0      	uxtb	r0, r0
 800b382:	f7f6 fcad 	bl	8001ce0 <IOE_Read>
  /* Return TS interrupts status */
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
}
 800b386:	f000 001f 	and.w	r0, r0, #31
 800b38a:	bd08      	pop	{r3, pc}

0800b38c <stmpe811_TS_GetXY>:
{
 800b38c:	b570      	push	{r4, r5, r6, lr}
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 800b38e:	2304      	movs	r3, #4
{
 800b390:	b082      	sub	sp, #8
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 800b392:	b2c4      	uxtb	r4, r0
{
 800b394:	4615      	mov	r5, r2
 800b396:	460e      	mov	r6, r1
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 800b398:	eb0d 0203 	add.w	r2, sp, r3
 800b39c:	21d7      	movs	r1, #215	; 0xd7
 800b39e:	4620      	mov	r0, r4
 800b3a0:	f7f6 fcba 	bl	8001d18 <IOE_ReadMultiple>
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 800b3a4:	9b01      	ldr	r3, [sp, #4]
 800b3a6:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 800b3a8:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 800b3aa:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 800b3ae:	8032      	strh	r2, [r6, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 800b3b0:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 800b3b2:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 800b3b4:	2201      	movs	r2, #1
 800b3b6:	214b      	movs	r1, #75	; 0x4b
 800b3b8:	f7f6 fc7a 	bl	8001cb0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 800b3bc:	2200      	movs	r2, #0
 800b3be:	214b      	movs	r1, #75	; 0x4b
 800b3c0:	4620      	mov	r0, r4
 800b3c2:	f7f6 fc75 	bl	8001cb0 <IOE_Write>
}
 800b3c6:	b002      	add	sp, #8
 800b3c8:	bd70      	pop	{r4, r5, r6, pc}
 800b3ca:	bf00      	nop

0800b3cc <stmpe811_TS_Start>:
{
 800b3cc:	b538      	push	{r3, r4, r5, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 800b3ce:	b2c4      	uxtb	r4, r0
 800b3d0:	2104      	movs	r1, #4
 800b3d2:	4620      	mov	r0, r4
 800b3d4:	f7f6 fc84 	bl	8001ce0 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 800b3d8:	2104      	movs	r1, #4
 800b3da:	f000 02fb 	and.w	r2, r0, #251	; 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 800b3de:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 800b3e0:	4620      	mov	r0, r4
 800b3e2:	f7f6 fc65 	bl	8001cb0 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 800b3e6:	2117      	movs	r1, #23
 800b3e8:	4620      	mov	r0, r4
 800b3ea:	f7f6 fc79 	bl	8001ce0 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 800b3ee:	2117      	movs	r1, #23
 800b3f0:	f000 020f 	and.w	r2, r0, #15
 800b3f4:	4620      	mov	r0, r4
 800b3f6:	f7f6 fc5b 	bl	8001cb0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 800b3fa:	f005 02f8 	and.w	r2, r5, #248	; 0xf8
 800b3fe:	4620      	mov	r0, r4
 800b400:	2104      	movs	r1, #4
 800b402:	f7f6 fc55 	bl	8001cb0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 800b406:	2249      	movs	r2, #73	; 0x49
 800b408:	2120      	movs	r1, #32
 800b40a:	4620      	mov	r0, r4
 800b40c:	f7f6 fc50 	bl	8001cb0 <IOE_Write>
  IOE_Delay(2); 
 800b410:	2002      	movs	r0, #2
 800b412:	f7f6 fc99 	bl	8001d48 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 800b416:	4620      	mov	r0, r4
 800b418:	2201      	movs	r2, #1
 800b41a:	2121      	movs	r1, #33	; 0x21
 800b41c:	f7f6 fc48 	bl	8001cb0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 800b420:	4620      	mov	r0, r4
 800b422:	229a      	movs	r2, #154	; 0x9a
 800b424:	2141      	movs	r1, #65	; 0x41
 800b426:	f7f6 fc43 	bl	8001cb0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 800b42a:	4620      	mov	r0, r4
 800b42c:	2201      	movs	r2, #1
 800b42e:	214a      	movs	r1, #74	; 0x4a
 800b430:	f7f6 fc3e 	bl	8001cb0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 800b434:	4620      	mov	r0, r4
 800b436:	2201      	movs	r2, #1
 800b438:	214b      	movs	r1, #75	; 0x4b
 800b43a:	f7f6 fc39 	bl	8001cb0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 800b43e:	4620      	mov	r0, r4
 800b440:	2200      	movs	r2, #0
 800b442:	214b      	movs	r1, #75	; 0x4b
 800b444:	f7f6 fc34 	bl	8001cb0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 800b448:	4620      	mov	r0, r4
 800b44a:	2201      	movs	r2, #1
 800b44c:	2156      	movs	r1, #86	; 0x56
 800b44e:	f7f6 fc2f 	bl	8001cb0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 800b452:	4620      	mov	r0, r4
 800b454:	2201      	movs	r2, #1
 800b456:	2158      	movs	r1, #88	; 0x58
 800b458:	f7f6 fc2a 	bl	8001cb0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 800b45c:	4620      	mov	r0, r4
 800b45e:	2201      	movs	r2, #1
 800b460:	2140      	movs	r1, #64	; 0x40
 800b462:	f7f6 fc25 	bl	8001cb0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 800b466:	4620      	mov	r0, r4
 800b468:	22ff      	movs	r2, #255	; 0xff
 800b46a:	210b      	movs	r1, #11
 800b46c:	f7f6 fc20 	bl	8001cb0 <IOE_Write>
}
 800b470:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Delay(2); 
 800b474:	2002      	movs	r0, #2
 800b476:	f7f6 bc67 	b.w	8001d48 <IOE_Delay>
 800b47a:	bf00      	nop

0800b47c <stmpe811_TS_DisableIT>:
{
 800b47c:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 800b47e:	b2c4      	uxtb	r4, r0
 800b480:	2109      	movs	r1, #9
 800b482:	4620      	mov	r0, r4
 800b484:	f7f6 fc2c 	bl	8001ce0 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 800b488:	2109      	movs	r1, #9
 800b48a:	f000 02fe 	and.w	r2, r0, #254	; 0xfe
 800b48e:	4620      	mov	r0, r4
 800b490:	f7f6 fc0e 	bl	8001cb0 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 800b494:	210a      	movs	r1, #10
 800b496:	4620      	mov	r0, r4
 800b498:	f7f6 fc22 	bl	8001ce0 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 800b49c:	210a      	movs	r1, #10
 800b49e:	f000 02e0 	and.w	r2, r0, #224	; 0xe0
 800b4a2:	4620      	mov	r0, r4
}
 800b4a4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 800b4a8:	f7f6 bc02 	b.w	8001cb0 <IOE_Write>

0800b4ac <stmpe811_TS_EnableIT>:
{
 800b4ac:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 800b4ae:	b2c4      	uxtb	r4, r0
  IOE_ITConfig();
 800b4b0:	f7f6 fbfc 	bl	8001cac <IOE_ITConfig>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 800b4b4:	210a      	movs	r1, #10
 800b4b6:	4620      	mov	r0, r4
 800b4b8:	f7f6 fc12 	bl	8001ce0 <IOE_Read>
  tmp |= Source; 
 800b4bc:	f040 001f 	orr.w	r0, r0, #31
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 800b4c0:	b2c2      	uxtb	r2, r0
 800b4c2:	210a      	movs	r1, #10
 800b4c4:	4620      	mov	r0, r4
 800b4c6:	f7f6 fbf3 	bl	8001cb0 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 800b4ca:	2109      	movs	r1, #9
 800b4cc:	4620      	mov	r0, r4
 800b4ce:	f7f6 fc07 	bl	8001ce0 <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 800b4d2:	f040 0001 	orr.w	r0, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 800b4d6:	b2c2      	uxtb	r2, r0
 800b4d8:	2109      	movs	r1, #9
 800b4da:	4620      	mov	r0, r4
}
 800b4dc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 800b4e0:	f7f6 bbe6 	b.w	8001cb0 <IOE_Write>

0800b4e4 <stmpe811_Init>:
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 800b4e4:	4a10      	ldr	r2, [pc, #64]	; (800b528 <stmpe811_Init+0x44>)
 800b4e6:	7813      	ldrb	r3, [r2, #0]
 800b4e8:	4298      	cmp	r0, r3
 800b4ea:	d004      	beq.n	800b4f6 <stmpe811_Init+0x12>
 800b4ec:	7851      	ldrb	r1, [r2, #1]
 800b4ee:	4288      	cmp	r0, r1
 800b4f0:	d001      	beq.n	800b4f6 <stmpe811_Init+0x12>
 800b4f2:	b113      	cbz	r3, 800b4fa <stmpe811_Init+0x16>
 800b4f4:	b101      	cbz	r1, 800b4f8 <stmpe811_Init+0x14>
 800b4f6:	4770      	bx	lr
 800b4f8:	2301      	movs	r3, #1
{
 800b4fa:	b510      	push	{r4, lr}
      stmpe811[empty] = DeviceAddr;
 800b4fc:	b2c4      	uxtb	r4, r0
 800b4fe:	54d4      	strb	r4, [r2, r3]
      IOE_Init(); 
 800b500:	f7f6 fbd2 	bl	8001ca8 <IOE_Init>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 800b504:	2202      	movs	r2, #2
 800b506:	2103      	movs	r1, #3
 800b508:	4620      	mov	r0, r4
 800b50a:	f7f6 fbd1 	bl	8001cb0 <IOE_Write>
  IOE_Delay(10); 
 800b50e:	200a      	movs	r0, #10
 800b510:	f7f6 fc1a 	bl	8001d48 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 800b514:	4620      	mov	r0, r4
 800b516:	2200      	movs	r2, #0
 800b518:	2103      	movs	r1, #3
 800b51a:	f7f6 fbc9 	bl	8001cb0 <IOE_Write>
}
 800b51e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 800b522:	2002      	movs	r0, #2
 800b524:	f7f6 bc10 	b.w	8001d48 <IOE_Delay>
 800b528:	20002a28 	.word	0x20002a28

0800b52c <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 800b52c:	4b05      	ldr	r3, [pc, #20]	; (800b544 <SystemInit+0x18>)
 800b52e:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 800b532:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 800b536:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 800b53a:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 800b53e:	6099      	str	r1, [r3, #8]
#endif
}
 800b540:	4770      	bx	lr
 800b542:	bf00      	nop
 800b544:	e000ed00 	.word	0xe000ed00

0800b548 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 800b548:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 800b54a:	4b0b      	ldr	r3, [pc, #44]	; (800b578 <HAL_Init+0x30>)
 800b54c:	681a      	ldr	r2, [r3, #0]
 800b54e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b552:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 800b554:	681a      	ldr	r2, [r3, #0]
 800b556:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800b55a:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 800b55c:	681a      	ldr	r2, [r3, #0]
 800b55e:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800b562:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 800b564:	2003      	movs	r0, #3
 800b566:	f000 f82d 	bl	800b5c4 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 800b56a:	2000      	movs	r0, #0
 800b56c:	f7f7 f8c0 	bl	80026f0 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 800b570:	f7f6 fde2 	bl	8002138 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 800b574:	2000      	movs	r0, #0
 800b576:	bd08      	pop	{r3, pc}
 800b578:	40023c00 	.word	0x40023c00

0800b57c <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 800b57c:	4a03      	ldr	r2, [pc, #12]	; (800b58c <HAL_IncTick+0x10>)
 800b57e:	4b04      	ldr	r3, [pc, #16]	; (800b590 <HAL_IncTick+0x14>)
 800b580:	6811      	ldr	r1, [r2, #0]
 800b582:	781b      	ldrb	r3, [r3, #0]
 800b584:	440b      	add	r3, r1
 800b586:	6013      	str	r3, [r2, #0]
}
 800b588:	4770      	bx	lr
 800b58a:	bf00      	nop
 800b58c:	20002a2c 	.word	0x20002a2c
 800b590:	20000080 	.word	0x20000080

0800b594 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 800b594:	4b01      	ldr	r3, [pc, #4]	; (800b59c <HAL_GetTick+0x8>)
 800b596:	6818      	ldr	r0, [r3, #0]
}
 800b598:	4770      	bx	lr
 800b59a:	bf00      	nop
 800b59c:	20002a2c 	.word	0x20002a2c

0800b5a0 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 800b5a0:	b538      	push	{r3, r4, r5, lr}
 800b5a2:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 800b5a4:	f7ff fff6 	bl	800b594 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 800b5a8:	1c63      	adds	r3, r4, #1
  uint32_t tickstart = HAL_GetTick();
 800b5aa:	4605      	mov	r5, r0
  if (wait < HAL_MAX_DELAY)
 800b5ac:	d002      	beq.n	800b5b4 <HAL_Delay+0x14>
  {
    wait += (uint32_t)(uwTickFreq);
 800b5ae:	4b04      	ldr	r3, [pc, #16]	; (800b5c0 <HAL_Delay+0x20>)
 800b5b0:	781b      	ldrb	r3, [r3, #0]
 800b5b2:	441c      	add	r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 800b5b4:	f7ff ffee 	bl	800b594 <HAL_GetTick>
 800b5b8:	1b43      	subs	r3, r0, r5
 800b5ba:	42a3      	cmp	r3, r4
 800b5bc:	d3fa      	bcc.n	800b5b4 <HAL_Delay+0x14>
  {
  }
}
 800b5be:	bd38      	pop	{r3, r4, r5, pc}
 800b5c0:	20000080 	.word	0x20000080

0800b5c4 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 800b5c4:	4907      	ldr	r1, [pc, #28]	; (800b5e4 <HAL_NVIC_SetPriorityGrouping+0x20>)
 800b5c6:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 800b5c8:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800b5ca:	f64f 00ff 	movw	r0, #63743	; 0xf8ff
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 800b5ce:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800b5d2:	4002      	ands	r2, r0
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 800b5d4:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 800b5d6:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 800b5da:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 800b5de:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 800b5e0:	4770      	bx	lr
 800b5e2:	bf00      	nop
 800b5e4:	e000ed00 	.word	0xe000ed00

0800b5e8 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 800b5e8:	4b1c      	ldr	r3, [pc, #112]	; (800b65c <HAL_NVIC_SetPriority+0x74>)
 800b5ea:	68db      	ldr	r3, [r3, #12]
 800b5ec:	f3c3 2302 	ubfx	r3, r3, #8, #3
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 800b5f0:	b500      	push	{lr}
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800b5f2:	f1c3 0e07 	rsb	lr, r3, #7
 800b5f6:	f1be 0f04 	cmp.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800b5fa:	f103 0c04 	add.w	ip, r3, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800b5fe:	bf28      	it	cs
 800b600:	f04f 0e04 	movcs.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800b604:	f1bc 0f06 	cmp.w	ip, #6
 800b608:	d91b      	bls.n	800b642 <HAL_NVIC_SetPriority+0x5a>
 800b60a:	3b03      	subs	r3, #3

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 800b60c:	f04f 3cff 	mov.w	ip, #4294967295
 800b610:	fa0c fc03 	lsl.w	ip, ip, r3
 800b614:	ea22 020c 	bic.w	r2, r2, ip
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800b618:	f04f 3cff 	mov.w	ip, #4294967295
 800b61c:	fa0c fc0e 	lsl.w	ip, ip, lr
 800b620:	ea21 010c 	bic.w	r1, r1, ip
 800b624:	4099      	lsls	r1, r3
  if ((int32_t)(IRQn) >= 0)
 800b626:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800b628:	ea41 0102 	orr.w	r1, r1, r2
  if ((int32_t)(IRQn) >= 0)
 800b62c:	db0c      	blt.n	800b648 <HAL_NVIC_SetPriority+0x60>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800b62e:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
 800b632:	0109      	lsls	r1, r1, #4
 800b634:	f500 4061 	add.w	r0, r0, #57600	; 0xe100
 800b638:	b2c9      	uxtb	r1, r1
 800b63a:	f880 1300 	strb.w	r1, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 800b63e:	f85d fb04 	ldr.w	pc, [sp], #4
 800b642:	2200      	movs	r2, #0
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800b644:	4613      	mov	r3, r2
 800b646:	e7e7      	b.n	800b618 <HAL_NVIC_SetPriority+0x30>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800b648:	4b05      	ldr	r3, [pc, #20]	; (800b660 <HAL_NVIC_SetPriority+0x78>)
 800b64a:	f000 000f 	and.w	r0, r0, #15
 800b64e:	0109      	lsls	r1, r1, #4
 800b650:	4403      	add	r3, r0
 800b652:	b2c9      	uxtb	r1, r1
 800b654:	7619      	strb	r1, [r3, #24]
 800b656:	f85d fb04 	ldr.w	pc, [sp], #4
 800b65a:	bf00      	nop
 800b65c:	e000ed00 	.word	0xe000ed00
 800b660:	e000ecfc 	.word	0xe000ecfc

0800b664 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 800b664:	2800      	cmp	r0, #0
 800b666:	db07      	blt.n	800b678 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800b668:	0941      	lsrs	r1, r0, #5
 800b66a:	4a04      	ldr	r2, [pc, #16]	; (800b67c <HAL_NVIC_EnableIRQ+0x18>)
 800b66c:	f000 001f 	and.w	r0, r0, #31
 800b670:	2301      	movs	r3, #1
 800b672:	4083      	lsls	r3, r0
 800b674:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 800b678:	4770      	bx	lr
 800b67a:	bf00      	nop
 800b67c:	e000e100 	.word	0xe000e100

0800b680 <HAL_CRC_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 800b680:	b180      	cbz	r0, 800b6a4 <HAL_CRC_Init+0x24>
{
 800b682:	b510      	push	{r4, lr}
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 800b684:	7943      	ldrb	r3, [r0, #5]
 800b686:	4604      	mov	r4, r0
 800b688:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800b68c:	b11b      	cbz	r3, 800b696 <HAL_CRC_Init+0x16>
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 800b68e:	2301      	movs	r3, #1
 800b690:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 800b692:	2000      	movs	r0, #0
}
 800b694:	bd10      	pop	{r4, pc}
    hcrc->Lock = HAL_UNLOCKED;
 800b696:	7102      	strb	r2, [r0, #4]
    HAL_CRC_MspInit(hcrc);
 800b698:	f7f6 fd6e 	bl	8002178 <HAL_CRC_MspInit>
  hcrc->State = HAL_CRC_STATE_READY;
 800b69c:	2301      	movs	r3, #1
 800b69e:	7163      	strb	r3, [r4, #5]
  return HAL_OK;
 800b6a0:	2000      	movs	r0, #0
}
 800b6a2:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800b6a4:	2001      	movs	r0, #1
}
 800b6a6:	4770      	bx	lr

0800b6a8 <HAL_DMA_Abort_IT>:
  *                 the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
  if(hdma->State != HAL_DMA_STATE_BUSY)
 800b6a8:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 800b6ac:	2b02      	cmp	r3, #2
 800b6ae:	d003      	beq.n	800b6b8 <HAL_DMA_Abort_IT+0x10>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 800b6b0:	2380      	movs	r3, #128	; 0x80
 800b6b2:	6543      	str	r3, [r0, #84]	; 0x54
    return HAL_ERROR;
 800b6b4:	2001      	movs	r0, #1
 800b6b6:	4770      	bx	lr
  {
    /* Set Abort State  */
    hdma->State = HAL_DMA_STATE_ABORT;
    
    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 800b6b8:	6802      	ldr	r2, [r0, #0]
    hdma->State = HAL_DMA_STATE_ABORT;
 800b6ba:	2305      	movs	r3, #5
 800b6bc:	f880 3035 	strb.w	r3, [r0, #53]	; 0x35
    __HAL_DMA_DISABLE(hdma);
 800b6c0:	6813      	ldr	r3, [r2, #0]
 800b6c2:	f023 0301 	bic.w	r3, r3, #1
  }

  return HAL_OK;
 800b6c6:	2000      	movs	r0, #0
    __HAL_DMA_DISABLE(hdma);
 800b6c8:	6013      	str	r3, [r2, #0]
}
 800b6ca:	4770      	bx	lr

0800b6cc <HAL_DMA_GetState>:
  *               the configuration information for the specified DMA Stream.
  * @retval HAL state
  */
HAL_DMA_StateTypeDef HAL_DMA_GetState(DMA_HandleTypeDef *hdma)
{
  return hdma->State;
 800b6cc:	f890 0035 	ldrb.w	r0, [r0, #53]	; 0x35
}
 800b6d0:	4770      	bx	lr
 800b6d2:	bf00      	nop

0800b6d4 <FLASH_SetErrorCode>:
  * @brief  Set the specific FLASH error flag.
  * @retval None
  */
static void FLASH_SetErrorCode(void)
{ 
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_WRPERR) != RESET)
 800b6d4:	4b21      	ldr	r3, [pc, #132]	; (800b75c <FLASH_SetErrorCode+0x88>)
 800b6d6:	68da      	ldr	r2, [r3, #12]
 800b6d8:	06d0      	lsls	r0, r2, #27
 800b6da:	d505      	bpl.n	800b6e8 <FLASH_SetErrorCode+0x14>
  {
   pFlash.ErrorCode |= HAL_FLASH_ERROR_WRP;
 800b6dc:	4920      	ldr	r1, [pc, #128]	; (800b760 <FLASH_SetErrorCode+0x8c>)
 800b6de:	69ca      	ldr	r2, [r1, #28]
   
   /* Clear FLASH write protection error pending bit */
   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_WRPERR);
 800b6e0:	2010      	movs	r0, #16
   pFlash.ErrorCode |= HAL_FLASH_ERROR_WRP;
 800b6e2:	4302      	orrs	r2, r0
 800b6e4:	61ca      	str	r2, [r1, #28]
   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_WRPERR);
 800b6e6:	60d8      	str	r0, [r3, #12]
  }
  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_PGAERR) != RESET)
 800b6e8:	4b1c      	ldr	r3, [pc, #112]	; (800b75c <FLASH_SetErrorCode+0x88>)
 800b6ea:	68da      	ldr	r2, [r3, #12]
 800b6ec:	0691      	lsls	r1, r2, #26
 800b6ee:	d506      	bpl.n	800b6fe <FLASH_SetErrorCode+0x2a>
  {
   pFlash.ErrorCode |= HAL_FLASH_ERROR_PGA;
 800b6f0:	491b      	ldr	r1, [pc, #108]	; (800b760 <FLASH_SetErrorCode+0x8c>)
 800b6f2:	69ca      	ldr	r2, [r1, #28]
   
   /* Clear FLASH Programming alignment error pending bit */
   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGAERR);
 800b6f4:	2020      	movs	r0, #32
   pFlash.ErrorCode |= HAL_FLASH_ERROR_PGA;
 800b6f6:	f042 0208 	orr.w	r2, r2, #8
 800b6fa:	61ca      	str	r2, [r1, #28]
   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGAERR);
 800b6fc:	60d8      	str	r0, [r3, #12]
  }
  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_PGPERR) != RESET)
 800b6fe:	4b17      	ldr	r3, [pc, #92]	; (800b75c <FLASH_SetErrorCode+0x88>)
 800b700:	68da      	ldr	r2, [r3, #12]
 800b702:	0652      	lsls	r2, r2, #25
 800b704:	d506      	bpl.n	800b714 <FLASH_SetErrorCode+0x40>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGP;
 800b706:	4916      	ldr	r1, [pc, #88]	; (800b760 <FLASH_SetErrorCode+0x8c>)
 800b708:	69ca      	ldr	r2, [r1, #28]
    
    /* Clear FLASH Programming parallelism error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGPERR);
 800b70a:	2040      	movs	r0, #64	; 0x40
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGP;
 800b70c:	f042 0204 	orr.w	r2, r2, #4
 800b710:	61ca      	str	r2, [r1, #28]
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGPERR);
 800b712:	60d8      	str	r0, [r3, #12]
  }
  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_PGSERR) != RESET)
 800b714:	4b11      	ldr	r3, [pc, #68]	; (800b75c <FLASH_SetErrorCode+0x88>)
 800b716:	68da      	ldr	r2, [r3, #12]
 800b718:	0610      	lsls	r0, r2, #24
 800b71a:	d506      	bpl.n	800b72a <FLASH_SetErrorCode+0x56>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGS;
 800b71c:	4910      	ldr	r1, [pc, #64]	; (800b760 <FLASH_SetErrorCode+0x8c>)
 800b71e:	69ca      	ldr	r2, [r1, #28]
    
    /* Clear FLASH Programming sequence error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGSERR);
 800b720:	2080      	movs	r0, #128	; 0x80
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGS;
 800b722:	f042 0202 	orr.w	r2, r2, #2
 800b726:	61ca      	str	r2, [r1, #28]
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGSERR);
 800b728:	60d8      	str	r0, [r3, #12]
  }
#if defined(FLASH_SR_RDERR) 
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_RDERR) != RESET)
 800b72a:	4b0c      	ldr	r3, [pc, #48]	; (800b75c <FLASH_SetErrorCode+0x88>)
 800b72c:	68da      	ldr	r2, [r3, #12]
 800b72e:	05d1      	lsls	r1, r2, #23
 800b730:	d507      	bpl.n	800b742 <FLASH_SetErrorCode+0x6e>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_RD;
 800b732:	490b      	ldr	r1, [pc, #44]	; (800b760 <FLASH_SetErrorCode+0x8c>)
 800b734:	69ca      	ldr	r2, [r1, #28]
    
    /* Clear FLASH Proprietary readout protection error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_RDERR);
 800b736:	f44f 7080 	mov.w	r0, #256	; 0x100
    pFlash.ErrorCode |= HAL_FLASH_ERROR_RD;
 800b73a:	f042 0201 	orr.w	r2, r2, #1
 800b73e:	61ca      	str	r2, [r1, #28]
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_RDERR);
 800b740:	60d8      	str	r0, [r3, #12]
  }
#endif /* FLASH_SR_RDERR */  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_OPERR) != RESET)
 800b742:	4b06      	ldr	r3, [pc, #24]	; (800b75c <FLASH_SetErrorCode+0x88>)
 800b744:	68da      	ldr	r2, [r3, #12]
 800b746:	0792      	lsls	r2, r2, #30
 800b748:	d506      	bpl.n	800b758 <FLASH_SetErrorCode+0x84>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_OPERATION;
 800b74a:	4905      	ldr	r1, [pc, #20]	; (800b760 <FLASH_SetErrorCode+0x8c>)
 800b74c:	69ca      	ldr	r2, [r1, #28]
    
    /* Clear FLASH Operation error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_OPERR);
 800b74e:	2002      	movs	r0, #2
    pFlash.ErrorCode |= HAL_FLASH_ERROR_OPERATION;
 800b750:	f042 0220 	orr.w	r2, r2, #32
 800b754:	61ca      	str	r2, [r1, #28]
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_OPERR);
 800b756:	60d8      	str	r0, [r3, #12]
  }
}
 800b758:	4770      	bx	lr
 800b75a:	bf00      	nop
 800b75c:	40023c00 	.word	0x40023c00
 800b760:	20002a30 	.word	0x20002a30

0800b764 <HAL_FLASH_Program>:
{
 800b764:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  __HAL_LOCK(&pFlash);
 800b768:	4f4d      	ldr	r7, [pc, #308]	; (800b8a0 <HAL_FLASH_Program+0x13c>)
{
 800b76a:	469b      	mov	fp, r3
  __HAL_LOCK(&pFlash);
 800b76c:	7e3b      	ldrb	r3, [r7, #24]
 800b76e:	2b01      	cmp	r3, #1
 800b770:	d060      	beq.n	800b834 <HAL_FLASH_Program+0xd0>
 800b772:	2301      	movs	r3, #1
 800b774:	763b      	strb	r3, [r7, #24]
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 800b776:	2300      	movs	r3, #0
 800b778:	4681      	mov	r9, r0
 800b77a:	468a      	mov	sl, r1
 800b77c:	4690      	mov	r8, r2
 800b77e:	61fb      	str	r3, [r7, #28]
  tickstart = HAL_GetTick();
 800b780:	f7ff ff08 	bl	800b594 <HAL_GetTick>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 800b784:	4d47      	ldr	r5, [pc, #284]	; (800b8a4 <HAL_FLASH_Program+0x140>)
  tickstart = HAL_GetTick();
 800b786:	4604      	mov	r4, r0
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 800b788:	f24c 3650 	movw	r6, #50000	; 0xc350
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 800b78c:	e004      	b.n	800b798 <HAL_FLASH_Program+0x34>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 800b78e:	f7ff ff01 	bl	800b594 <HAL_GetTick>
 800b792:	1b00      	subs	r0, r0, r4
 800b794:	42b0      	cmp	r0, r6
 800b796:	d848      	bhi.n	800b82a <HAL_FLASH_Program+0xc6>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 800b798:	68eb      	ldr	r3, [r5, #12]
 800b79a:	03d8      	lsls	r0, r3, #15
 800b79c:	d4f7      	bmi.n	800b78e <HAL_FLASH_Program+0x2a>
  if (__HAL_FLASH_GET_FLAG(FLASH_FLAG_EOP) != RESET)
 800b79e:	68eb      	ldr	r3, [r5, #12]
 800b7a0:	07d9      	lsls	r1, r3, #31
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP);
 800b7a2:	bf44      	itt	mi
 800b7a4:	2301      	movmi	r3, #1
 800b7a6:	60eb      	strmi	r3, [r5, #12]
  if(__HAL_FLASH_GET_FLAG((FLASH_FLAG_OPERR | FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR | \
 800b7a8:	4b3e      	ldr	r3, [pc, #248]	; (800b8a4 <HAL_FLASH_Program+0x140>)
 800b7aa:	68da      	ldr	r2, [r3, #12]
 800b7ac:	f412 7ff9 	tst.w	r2, #498	; 0x1f2
 800b7b0:	d154      	bne.n	800b85c <HAL_FLASH_Program+0xf8>
    if(TypeProgram == FLASH_TYPEPROGRAM_BYTE)
 800b7b2:	f1b9 0f00 	cmp.w	r9, #0
 800b7b6:	d040      	beq.n	800b83a <HAL_FLASH_Program+0xd6>
    else if(TypeProgram == FLASH_TYPEPROGRAM_HALFWORD)
 800b7b8:	f1b9 0f01 	cmp.w	r9, #1
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 800b7bc:	691a      	ldr	r2, [r3, #16]
    else if(TypeProgram == FLASH_TYPEPROGRAM_HALFWORD)
 800b7be:	d051      	beq.n	800b864 <HAL_FLASH_Program+0x100>
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 800b7c0:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 800b7c4:	611a      	str	r2, [r3, #16]
    else if(TypeProgram == FLASH_TYPEPROGRAM_WORD)
 800b7c6:	f1b9 0f02 	cmp.w	r9, #2
  FLASH->CR |= FLASH_PSIZE_WORD;
 800b7ca:	691a      	ldr	r2, [r3, #16]
    else if(TypeProgram == FLASH_TYPEPROGRAM_WORD)
 800b7cc:	d05e      	beq.n	800b88c <HAL_FLASH_Program+0x128>
  FLASH->CR |= FLASH_PSIZE_DOUBLE_WORD;
 800b7ce:	f442 7240 	orr.w	r2, r2, #768	; 0x300
 800b7d2:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_PG;
 800b7d4:	691a      	ldr	r2, [r3, #16]
 800b7d6:	f042 0201 	orr.w	r2, r2, #1
 800b7da:	611a      	str	r2, [r3, #16]
  *(__IO uint32_t*)Address = (uint32_t)Data;
 800b7dc:	f8ca 8000 	str.w	r8, [sl]
 800b7e0:	f3bf 8f6f 	isb	sy
  *(__IO uint32_t*)(Address+4) = (uint32_t)(Data >> 32);
 800b7e4:	f8ca b004 	str.w	fp, [sl, #4]
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 800b7e8:	2300      	movs	r3, #0
 800b7ea:	61fb      	str	r3, [r7, #28]
  tickstart = HAL_GetTick();
 800b7ec:	f7ff fed2 	bl	800b594 <HAL_GetTick>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 800b7f0:	4d2c      	ldr	r5, [pc, #176]	; (800b8a4 <HAL_FLASH_Program+0x140>)
  tickstart = HAL_GetTick();
 800b7f2:	4604      	mov	r4, r0
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 800b7f4:	f24c 3650 	movw	r6, #50000	; 0xc350
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 800b7f8:	e004      	b.n	800b804 <HAL_FLASH_Program+0xa0>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 800b7fa:	f7ff fecb 	bl	800b594 <HAL_GetTick>
 800b7fe:	1b00      	subs	r0, r0, r4
 800b800:	42b0      	cmp	r0, r6
 800b802:	d829      	bhi.n	800b858 <HAL_FLASH_Program+0xf4>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 800b804:	68eb      	ldr	r3, [r5, #12]
 800b806:	03da      	lsls	r2, r3, #15
 800b808:	d4f7      	bmi.n	800b7fa <HAL_FLASH_Program+0x96>
  if (__HAL_FLASH_GET_FLAG(FLASH_FLAG_EOP) != RESET)
 800b80a:	68eb      	ldr	r3, [r5, #12]
 800b80c:	07db      	lsls	r3, r3, #31
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP);
 800b80e:	bf44      	itt	mi
 800b810:	2301      	movmi	r3, #1
 800b812:	60eb      	strmi	r3, [r5, #12]
  if(__HAL_FLASH_GET_FLAG((FLASH_FLAG_OPERR | FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR | \
 800b814:	4b23      	ldr	r3, [pc, #140]	; (800b8a4 <HAL_FLASH_Program+0x140>)
 800b816:	68d8      	ldr	r0, [r3, #12]
 800b818:	f410 70f9 	ands.w	r0, r0, #498	; 0x1f2
 800b81c:	d132      	bne.n	800b884 <HAL_FLASH_Program+0x120>
    FLASH->CR &= (~FLASH_CR_PG);  
 800b81e:	4a21      	ldr	r2, [pc, #132]	; (800b8a4 <HAL_FLASH_Program+0x140>)
 800b820:	6913      	ldr	r3, [r2, #16]
 800b822:	f023 0301 	bic.w	r3, r3, #1
 800b826:	6113      	str	r3, [r2, #16]
 800b828:	e000      	b.n	800b82c <HAL_FLASH_Program+0xc8>
 800b82a:	2003      	movs	r0, #3
  __HAL_UNLOCK(&pFlash);
 800b82c:	2300      	movs	r3, #0
 800b82e:	763b      	strb	r3, [r7, #24]
}
 800b830:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  __HAL_LOCK(&pFlash);
 800b834:	2002      	movs	r0, #2
}
 800b836:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 800b83a:	691a      	ldr	r2, [r3, #16]
 800b83c:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 800b840:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_PSIZE_BYTE;
 800b842:	691a      	ldr	r2, [r3, #16]
 800b844:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_PG;
 800b846:	691a      	ldr	r2, [r3, #16]
      FLASH_Program_Byte(Address, (uint8_t) Data);
 800b848:	fa5f f888 	uxtb.w	r8, r8
  FLASH->CR |= FLASH_CR_PG;
 800b84c:	f042 0201 	orr.w	r2, r2, #1
 800b850:	611a      	str	r2, [r3, #16]
  *(__IO uint8_t*)Address = Data;
 800b852:	f88a 8000 	strb.w	r8, [sl]
}
 800b856:	e7c7      	b.n	800b7e8 <HAL_FLASH_Program+0x84>
        return HAL_TIMEOUT;
 800b858:	2003      	movs	r0, #3
 800b85a:	e7e0      	b.n	800b81e <HAL_FLASH_Program+0xba>
    FLASH_SetErrorCode();
 800b85c:	f7ff ff3a 	bl	800b6d4 <FLASH_SetErrorCode>
    return HAL_ERROR;
 800b860:	2001      	movs	r0, #1
 800b862:	e7e3      	b.n	800b82c <HAL_FLASH_Program+0xc8>
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 800b864:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 800b868:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_PSIZE_HALF_WORD;
 800b86a:	691a      	ldr	r2, [r3, #16]
 800b86c:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800b870:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_PG;
 800b872:	691a      	ldr	r2, [r3, #16]
      FLASH_Program_HalfWord(Address, (uint16_t) Data);
 800b874:	fa1f f888 	uxth.w	r8, r8
  FLASH->CR |= FLASH_CR_PG;
 800b878:	f042 0201 	orr.w	r2, r2, #1
 800b87c:	611a      	str	r2, [r3, #16]
  *(__IO uint16_t*)Address = Data;
 800b87e:	f8aa 8000 	strh.w	r8, [sl]
}
 800b882:	e7b1      	b.n	800b7e8 <HAL_FLASH_Program+0x84>
    FLASH_SetErrorCode();
 800b884:	f7ff ff26 	bl	800b6d4 <FLASH_SetErrorCode>
    return HAL_ERROR;
 800b888:	2001      	movs	r0, #1
 800b88a:	e7c8      	b.n	800b81e <HAL_FLASH_Program+0xba>
  FLASH->CR |= FLASH_PSIZE_WORD;
 800b88c:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b890:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_PG;
 800b892:	691a      	ldr	r2, [r3, #16]
 800b894:	f042 0201 	orr.w	r2, r2, #1
 800b898:	611a      	str	r2, [r3, #16]
  *(__IO uint32_t*)Address = Data;
 800b89a:	f8ca 8000 	str.w	r8, [sl]
}
 800b89e:	e7a3      	b.n	800b7e8 <HAL_FLASH_Program+0x84>
 800b8a0:	20002a30 	.word	0x20002a30
 800b8a4:	40023c00 	.word	0x40023c00

0800b8a8 <HAL_FLASH_Unlock>:
  if(READ_BIT(FLASH->CR, FLASH_CR_LOCK) != RESET)
 800b8a8:	4b06      	ldr	r3, [pc, #24]	; (800b8c4 <HAL_FLASH_Unlock+0x1c>)
 800b8aa:	691a      	ldr	r2, [r3, #16]
 800b8ac:	2a00      	cmp	r2, #0
 800b8ae:	db01      	blt.n	800b8b4 <HAL_FLASH_Unlock+0xc>
  HAL_StatusTypeDef status = HAL_OK;
 800b8b0:	2000      	movs	r0, #0
}
 800b8b2:	4770      	bx	lr
    WRITE_REG(FLASH->KEYR, FLASH_KEY1);
 800b8b4:	4904      	ldr	r1, [pc, #16]	; (800b8c8 <HAL_FLASH_Unlock+0x20>)
    WRITE_REG(FLASH->KEYR, FLASH_KEY2);
 800b8b6:	4a05      	ldr	r2, [pc, #20]	; (800b8cc <HAL_FLASH_Unlock+0x24>)
    WRITE_REG(FLASH->KEYR, FLASH_KEY1);
 800b8b8:	6059      	str	r1, [r3, #4]
    WRITE_REG(FLASH->KEYR, FLASH_KEY2);
 800b8ba:	605a      	str	r2, [r3, #4]
    if(READ_BIT(FLASH->CR, FLASH_CR_LOCK) != RESET)
 800b8bc:	6918      	ldr	r0, [r3, #16]
  HAL_StatusTypeDef status = HAL_OK;
 800b8be:	0fc0      	lsrs	r0, r0, #31
 800b8c0:	4770      	bx	lr
 800b8c2:	bf00      	nop
 800b8c4:	40023c00 	.word	0x40023c00
 800b8c8:	45670123 	.word	0x45670123
 800b8cc:	cdef89ab 	.word	0xcdef89ab

0800b8d0 <HAL_FLASH_Lock>:
  FLASH->CR |= FLASH_CR_LOCK;
 800b8d0:	4a03      	ldr	r2, [pc, #12]	; (800b8e0 <HAL_FLASH_Lock+0x10>)
 800b8d2:	6913      	ldr	r3, [r2, #16]
 800b8d4:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
}
 800b8d8:	2000      	movs	r0, #0
  FLASH->CR |= FLASH_CR_LOCK;
 800b8da:	6113      	str	r3, [r2, #16]
}
 800b8dc:	4770      	bx	lr
 800b8de:	bf00      	nop
 800b8e0:	40023c00 	.word	0x40023c00

0800b8e4 <HAL_FLASH_GetError>:
   return pFlash.ErrorCode;
 800b8e4:	4b01      	ldr	r3, [pc, #4]	; (800b8ec <HAL_FLASH_GetError+0x8>)
 800b8e6:	69d8      	ldr	r0, [r3, #28]
}  
 800b8e8:	4770      	bx	lr
 800b8ea:	bf00      	nop
 800b8ec:	20002a30 	.word	0x20002a30

0800b8f0 <FLASH_WaitForLastOperation>:
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 800b8f0:	4b14      	ldr	r3, [pc, #80]	; (800b944 <FLASH_WaitForLastOperation+0x54>)
{ 
 800b8f2:	b570      	push	{r4, r5, r6, lr}
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 800b8f4:	2200      	movs	r2, #0
{ 
 800b8f6:	4604      	mov	r4, r0
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 800b8f8:	61da      	str	r2, [r3, #28]
  tickstart = HAL_GetTick();
 800b8fa:	f7ff fe4b 	bl	800b594 <HAL_GetTick>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 800b8fe:	4e12      	ldr	r6, [pc, #72]	; (800b948 <FLASH_WaitForLastOperation+0x58>)
  tickstart = HAL_GetTick();
 800b900:	4605      	mov	r5, r0
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 800b902:	1c63      	adds	r3, r4, #1
 800b904:	d10f      	bne.n	800b926 <FLASH_WaitForLastOperation+0x36>
 800b906:	4a10      	ldr	r2, [pc, #64]	; (800b948 <FLASH_WaitForLastOperation+0x58>)
 800b908:	68d3      	ldr	r3, [r2, #12]
 800b90a:	03d8      	lsls	r0, r3, #15
 800b90c:	d4fc      	bmi.n	800b908 <FLASH_WaitForLastOperation+0x18>
  if (__HAL_FLASH_GET_FLAG(FLASH_FLAG_EOP) != RESET)
 800b90e:	4b0e      	ldr	r3, [pc, #56]	; (800b948 <FLASH_WaitForLastOperation+0x58>)
 800b910:	68da      	ldr	r2, [r3, #12]
 800b912:	07d2      	lsls	r2, r2, #31
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP);
 800b914:	bf44      	itt	mi
 800b916:	2201      	movmi	r2, #1
 800b918:	60da      	strmi	r2, [r3, #12]
  if(__HAL_FLASH_GET_FLAG((FLASH_FLAG_OPERR | FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR | \
 800b91a:	4b0b      	ldr	r3, [pc, #44]	; (800b948 <FLASH_WaitForLastOperation+0x58>)
 800b91c:	68d8      	ldr	r0, [r3, #12]
 800b91e:	f410 70f9 	ands.w	r0, r0, #498	; 0x1f2
 800b922:	d10b      	bne.n	800b93c <FLASH_WaitForLastOperation+0x4c>
}  
 800b924:	bd70      	pop	{r4, r5, r6, pc}
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 800b926:	68f3      	ldr	r3, [r6, #12]
 800b928:	03d9      	lsls	r1, r3, #15
 800b92a:	d5f0      	bpl.n	800b90e <FLASH_WaitForLastOperation+0x1e>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 800b92c:	b124      	cbz	r4, 800b938 <FLASH_WaitForLastOperation+0x48>
 800b92e:	f7ff fe31 	bl	800b594 <HAL_GetTick>
 800b932:	1b40      	subs	r0, r0, r5
 800b934:	42a0      	cmp	r0, r4
 800b936:	d9e4      	bls.n	800b902 <FLASH_WaitForLastOperation+0x12>
        return HAL_TIMEOUT;
 800b938:	2003      	movs	r0, #3
}  
 800b93a:	bd70      	pop	{r4, r5, r6, pc}
    FLASH_SetErrorCode();
 800b93c:	f7ff feca 	bl	800b6d4 <FLASH_SetErrorCode>
    return HAL_ERROR;
 800b940:	2001      	movs	r0, #1
}  
 800b942:	bd70      	pop	{r4, r5, r6, pc}
 800b944:	20002a30 	.word	0x20002a30
 800b948:	40023c00 	.word	0x40023c00

0800b94c <FLASH_FlushCaches>:
  * @retval None
  */
void FLASH_FlushCaches(void)
{
  /* Flush instruction cache  */
  if (READ_BIT(FLASH->ACR, FLASH_ACR_ICEN) != RESET)
 800b94c:	4b14      	ldr	r3, [pc, #80]	; (800b9a0 <FLASH_FlushCaches+0x54>)
 800b94e:	681a      	ldr	r2, [r3, #0]
 800b950:	0591      	lsls	r1, r2, #22
 800b952:	d50f      	bpl.n	800b974 <FLASH_FlushCaches+0x28>
  {
    /* Disable instruction cache  */
    __HAL_FLASH_INSTRUCTION_CACHE_DISABLE();
 800b954:	681a      	ldr	r2, [r3, #0]
 800b956:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 800b95a:	601a      	str	r2, [r3, #0]
    /* Reset instruction cache */
    __HAL_FLASH_INSTRUCTION_CACHE_RESET();
 800b95c:	681a      	ldr	r2, [r3, #0]
 800b95e:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800b962:	601a      	str	r2, [r3, #0]
 800b964:	681a      	ldr	r2, [r3, #0]
 800b966:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800b96a:	601a      	str	r2, [r3, #0]
    /* Enable instruction cache */
    __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 800b96c:	681a      	ldr	r2, [r3, #0]
 800b96e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b972:	601a      	str	r2, [r3, #0]
  }

  /* Flush data cache */
  if (READ_BIT(FLASH->ACR, FLASH_ACR_DCEN) != RESET)
 800b974:	4b0a      	ldr	r3, [pc, #40]	; (800b9a0 <FLASH_FlushCaches+0x54>)
 800b976:	681a      	ldr	r2, [r3, #0]
 800b978:	0552      	lsls	r2, r2, #21
 800b97a:	d50f      	bpl.n	800b99c <FLASH_FlushCaches+0x50>
  {
    /* Disable data cache  */
    __HAL_FLASH_DATA_CACHE_DISABLE();
 800b97c:	681a      	ldr	r2, [r3, #0]
 800b97e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b982:	601a      	str	r2, [r3, #0]
    /* Reset data cache */
    __HAL_FLASH_DATA_CACHE_RESET();
 800b984:	681a      	ldr	r2, [r3, #0]
 800b986:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800b98a:	601a      	str	r2, [r3, #0]
 800b98c:	681a      	ldr	r2, [r3, #0]
 800b98e:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 800b992:	601a      	str	r2, [r3, #0]
    /* Enable data cache */
    __HAL_FLASH_DATA_CACHE_ENABLE();
 800b994:	681a      	ldr	r2, [r3, #0]
 800b996:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800b99a:	601a      	str	r2, [r3, #0]
  }
}
 800b99c:	4770      	bx	lr
 800b99e:	bf00      	nop
 800b9a0:	40023c00 	.word	0x40023c00

0800b9a4 <HAL_FLASHEx_Erase>:
{
 800b9a4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  __HAL_LOCK(&pFlash);
 800b9a8:	4f44      	ldr	r7, [pc, #272]	; (800babc <HAL_FLASHEx_Erase+0x118>)
 800b9aa:	7e3b      	ldrb	r3, [r7, #24]
 800b9ac:	2b01      	cmp	r3, #1
 800b9ae:	d053      	beq.n	800ba58 <HAL_FLASHEx_Erase+0xb4>
 800b9b0:	2301      	movs	r3, #1
 800b9b2:	4681      	mov	r9, r0
  status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 800b9b4:	f24c 3050 	movw	r0, #50000	; 0xc350
 800b9b8:	4688      	mov	r8, r1
  __HAL_LOCK(&pFlash);
 800b9ba:	763b      	strb	r3, [r7, #24]
  status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 800b9bc:	f7ff ff98 	bl	800b8f0 <FLASH_WaitForLastOperation>
  if (status == HAL_OK)
 800b9c0:	4606      	mov	r6, r0
 800b9c2:	2800      	cmp	r0, #0
 800b9c4:	d143      	bne.n	800ba4e <HAL_FLASHEx_Erase+0xaa>
    *SectorError = 0xFFFFFFFFU;
 800b9c6:	f04f 33ff 	mov.w	r3, #4294967295
 800b9ca:	f8c8 3000 	str.w	r3, [r8]
    if (pEraseInit->TypeErase == FLASH_TYPEERASE_MASSERASE)
 800b9ce:	f8d9 3000 	ldr.w	r3, [r9]
 800b9d2:	2b01      	cmp	r3, #1
 800b9d4:	d044      	beq.n	800ba60 <HAL_FLASHEx_Erase+0xbc>
      for (index = pEraseInit->Sector; index < (pEraseInit->NbSectors + pEraseInit->Sector); index++)
 800b9d6:	e9d9 5302 	ldrd	r5, r3, [r9, #8]
 800b9da:	442b      	add	r3, r5
 800b9dc:	429d      	cmp	r5, r3
 800b9de:	d234      	bcs.n	800ba4a <HAL_FLASHEx_Erase+0xa6>
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 800b9e0:	4c37      	ldr	r4, [pc, #220]	; (800bac0 <HAL_FLASHEx_Erase+0x11c>)
 800b9e2:	e005      	b.n	800b9f0 <HAL_FLASHEx_Erase+0x4c>
      for (index = pEraseInit->Sector; index < (pEraseInit->NbSectors + pEraseInit->Sector); index++)
 800b9e4:	e9d9 2302 	ldrd	r2, r3, [r9, #8]
 800b9e8:	3501      	adds	r5, #1
 800b9ea:	4413      	add	r3, r2
 800b9ec:	42ab      	cmp	r3, r5
 800b9ee:	d92c      	bls.n	800ba4a <HAL_FLASHEx_Erase+0xa6>
  if (VoltageRange == FLASH_VOLTAGE_RANGE_1)
 800b9f0:	f899 3010 	ldrb.w	r3, [r9, #16]
 800b9f4:	2b02      	cmp	r3, #2
        FLASH_Erase_Sector(index, (uint8_t) pEraseInit->VoltageRange);
 800b9f6:	f44f 7140 	mov.w	r1, #768	; 0x300
 800b9fa:	bf98      	it	ls
 800b9fc:	0219      	lslls	r1, r3, #8
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 800b9fe:	6923      	ldr	r3, [r4, #16]
 800ba00:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800ba04:	6123      	str	r3, [r4, #16]
  FLASH->CR |= tmp_psize;
 800ba06:	6923      	ldr	r3, [r4, #16]
 800ba08:	430b      	orrs	r3, r1
 800ba0a:	6123      	str	r3, [r4, #16]
  CLEAR_BIT(FLASH->CR, FLASH_CR_SNB);
 800ba0c:	6923      	ldr	r3, [r4, #16]
 800ba0e:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800ba12:	6123      	str	r3, [r4, #16]
  FLASH->CR |= FLASH_CR_SER | (Sector << FLASH_CR_SNB_Pos);
 800ba14:	6923      	ldr	r3, [r4, #16]
  if (Sector > FLASH_SECTOR_11)
 800ba16:	2d0b      	cmp	r5, #11
    Sector += 4U;
 800ba18:	bf8c      	ite	hi
 800ba1a:	1d2a      	addhi	r2, r5, #4
 800ba1c:	462a      	movls	r2, r5
  FLASH->CR |= FLASH_CR_SER | (Sector << FLASH_CR_SNB_Pos);
 800ba1e:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800ba22:	f043 0302 	orr.w	r3, r3, #2
 800ba26:	6123      	str	r3, [r4, #16]
  FLASH->CR |= FLASH_CR_STRT;
 800ba28:	6923      	ldr	r3, [r4, #16]
 800ba2a:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800ba2e:	6123      	str	r3, [r4, #16]
        status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 800ba30:	f24c 3050 	movw	r0, #50000	; 0xc350
 800ba34:	f7ff ff5c 	bl	800b8f0 <FLASH_WaitForLastOperation>
        CLEAR_BIT(FLASH->CR, (FLASH_CR_SER | FLASH_CR_SNB));
 800ba38:	6923      	ldr	r3, [r4, #16]
 800ba3a:	f023 03fa 	bic.w	r3, r3, #250	; 0xfa
 800ba3e:	6123      	str	r3, [r4, #16]
        if (status != HAL_OK)
 800ba40:	2800      	cmp	r0, #0
 800ba42:	d0cf      	beq.n	800b9e4 <HAL_FLASHEx_Erase+0x40>
          *SectorError = index;
 800ba44:	f8c8 5000 	str.w	r5, [r8]
        status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 800ba48:	4606      	mov	r6, r0
    FLASH_FlushCaches();
 800ba4a:	f7ff ff7f 	bl	800b94c <FLASH_FlushCaches>
  __HAL_UNLOCK(&pFlash);
 800ba4e:	2300      	movs	r3, #0
 800ba50:	763b      	strb	r3, [r7, #24]
}
 800ba52:	4630      	mov	r0, r6
 800ba54:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  __HAL_LOCK(&pFlash);
 800ba58:	2602      	movs	r6, #2
}
 800ba5a:	4630      	mov	r0, r6
 800ba5c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 800ba60:	4a17      	ldr	r2, [pc, #92]	; (800bac0 <HAL_FLASHEx_Erase+0x11c>)
      FLASH_MassErase((uint8_t) pEraseInit->VoltageRange, pEraseInit->Banks);
 800ba62:	f8d9 0004 	ldr.w	r0, [r9, #4]
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 800ba66:	6911      	ldr	r1, [r2, #16]
      FLASH_MassErase((uint8_t) pEraseInit->VoltageRange, pEraseInit->Banks);
 800ba68:	f8d9 3010 	ldr.w	r3, [r9, #16]
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 800ba6c:	f421 7140 	bic.w	r1, r1, #768	; 0x300
 800ba70:	6111      	str	r1, [r2, #16]
  if (Banks == FLASH_BANK_BOTH)
 800ba72:	2803      	cmp	r0, #3
    FLASH->CR |= FLASH_MER_BIT;
 800ba74:	6911      	ldr	r1, [r2, #16]
  if (Banks == FLASH_BANK_BOTH)
 800ba76:	d01a      	beq.n	800baae <HAL_FLASHEx_Erase+0x10a>
  else if (Banks == FLASH_BANK_1)
 800ba78:	2801      	cmp	r0, #1
    FLASH->CR |= FLASH_CR_MER1;
 800ba7a:	bf0c      	ite	eq
 800ba7c:	f041 0104 	orreq.w	r1, r1, #4
    FLASH->CR |= FLASH_CR_MER2;
 800ba80:	f441 4100 	orrne.w	r1, r1, #32768	; 0x8000
 800ba84:	6111      	str	r1, [r2, #16]
  FLASH->CR |= FLASH_CR_STRT | ((uint32_t)VoltageRange << 8U);
 800ba86:	4c0e      	ldr	r4, [pc, #56]	; (800bac0 <HAL_FLASHEx_Erase+0x11c>)
 800ba88:	021b      	lsls	r3, r3, #8
 800ba8a:	6922      	ldr	r2, [r4, #16]
 800ba8c:	b29b      	uxth	r3, r3
 800ba8e:	4313      	orrs	r3, r2
 800ba90:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800ba94:	6123      	str	r3, [r4, #16]
      status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 800ba96:	f24c 3050 	movw	r0, #50000	; 0xc350
 800ba9a:	f7ff ff29 	bl	800b8f0 <FLASH_WaitForLastOperation>
      FLASH->CR &= (~FLASH_MER_BIT);
 800ba9e:	6923      	ldr	r3, [r4, #16]
 800baa0:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 800baa4:	f023 0304 	bic.w	r3, r3, #4
      status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 800baa8:	4606      	mov	r6, r0
      FLASH->CR &= (~FLASH_MER_BIT);
 800baaa:	6123      	str	r3, [r4, #16]
 800baac:	e7cd      	b.n	800ba4a <HAL_FLASHEx_Erase+0xa6>
    FLASH->CR |= FLASH_MER_BIT;
 800baae:	f441 4100 	orr.w	r1, r1, #32768	; 0x8000
 800bab2:	f041 0104 	orr.w	r1, r1, #4
 800bab6:	6111      	str	r1, [r2, #16]
 800bab8:	e7e5      	b.n	800ba86 <HAL_FLASHEx_Erase+0xe2>
 800baba:	bf00      	nop
 800babc:	20002a30 	.word	0x20002a30
 800bac0:	40023c00 	.word	0x40023c00

0800bac4 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 800bac4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  for(position = 0U; position < GPIO_NUMBER; position++)
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800bac8:	2200      	movs	r2, #0
 800baca:	680c      	ldr	r4, [r1, #0]
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800bacc:	f8df a260 	ldr.w	sl, [pc, #608]	; 800bd30 <HAL_GPIO_Init+0x26c>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 800bad0:	4e90      	ldr	r6, [pc, #576]	; (800bd14 <HAL_GPIO_Init+0x250>)
{
 800bad2:	b085      	sub	sp, #20
  for(position = 0U; position < GPIO_NUMBER; position++)
 800bad4:	4613      	mov	r3, r2
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800bad6:	4689      	mov	r9, r1
 800bad8:	e005      	b.n	800bae6 <HAL_GPIO_Init+0x22>
  for(position = 0U; position < GPIO_NUMBER; position++)
 800bada:	3301      	adds	r3, #1
 800badc:	2b10      	cmp	r3, #16
 800bade:	f102 0202 	add.w	r2, r2, #2
 800bae2:	f000 8095 	beq.w	800bc10 <HAL_GPIO_Init+0x14c>
    ioposition = 0x01U << position;
 800bae6:	2101      	movs	r1, #1
 800bae8:	4099      	lsls	r1, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800baea:	ea01 0b04 	and.w	fp, r1, r4
    if(iocurrent == ioposition)
 800baee:	43a1      	bics	r1, r4
 800baf0:	d1f3      	bne.n	800bada <HAL_GPIO_Init+0x16>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 800baf2:	f8d9 c004 	ldr.w	ip, [r9, #4]
 800baf6:	f00c 0103 	and.w	r1, ip, #3
 800bafa:	1e4d      	subs	r5, r1, #1
 800bafc:	2d01      	cmp	r5, #1
 800bafe:	f240 808a 	bls.w	800bc16 <HAL_GPIO_Init+0x152>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 800bb02:	2903      	cmp	r1, #3
 800bb04:	f040 80ca 	bne.w	800bc9c <HAL_GPIO_Init+0x1d8>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800bb08:	4091      	lsls	r1, r2
 800bb0a:	43cd      	mvns	r5, r1
      temp = GPIOx->MODER;
 800bb0c:	6807      	ldr	r7, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 800bb0e:	403d      	ands	r5, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 800bb10:	4329      	orrs	r1, r5
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 800bb12:	f41c 3f40 	tst.w	ip, #196608	; 0x30000
      GPIOx->MODER = temp;
 800bb16:	6001      	str	r1, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 800bb18:	d0df      	beq.n	800bada <HAL_GPIO_Init+0x16>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800bb1a:	2100      	movs	r1, #0
 800bb1c:	9103      	str	r1, [sp, #12]
 800bb1e:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 800bb22:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 800bb26:	f8ca 1044 	str.w	r1, [sl, #68]	; 0x44
 800bb2a:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 800bb2e:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 800bb32:	9103      	str	r1, [sp, #12]
 800bb34:	9903      	ldr	r1, [sp, #12]
        temp = SYSCFG->EXTICR[position >> 2U];
 800bb36:	f023 0103 	bic.w	r1, r3, #3
 800bb3a:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 800bb3e:	f501 319c 	add.w	r1, r1, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800bb42:	f003 0703 	and.w	r7, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 800bb46:	688d      	ldr	r5, [r1, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800bb48:	00bf      	lsls	r7, r7, #2
 800bb4a:	f04f 0e0f 	mov.w	lr, #15
 800bb4e:	fa0e fe07 	lsl.w	lr, lr, r7
 800bb52:	ea25 080e 	bic.w	r8, r5, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800bb56:	4d70      	ldr	r5, [pc, #448]	; (800bd18 <HAL_GPIO_Init+0x254>)
 800bb58:	42a8      	cmp	r0, r5
 800bb5a:	d02e      	beq.n	800bbba <HAL_GPIO_Init+0xf6>
 800bb5c:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800bb60:	42a8      	cmp	r0, r5
 800bb62:	f000 809f 	beq.w	800bca4 <HAL_GPIO_Init+0x1e0>
 800bb66:	4d6d      	ldr	r5, [pc, #436]	; (800bd1c <HAL_GPIO_Init+0x258>)
 800bb68:	42a8      	cmp	r0, r5
 800bb6a:	f000 80a2 	beq.w	800bcb2 <HAL_GPIO_Init+0x1ee>
 800bb6e:	4d6c      	ldr	r5, [pc, #432]	; (800bd20 <HAL_GPIO_Init+0x25c>)
 800bb70:	42a8      	cmp	r0, r5
 800bb72:	f000 80a5 	beq.w	800bcc0 <HAL_GPIO_Init+0x1fc>
 800bb76:	4d6b      	ldr	r5, [pc, #428]	; (800bd24 <HAL_GPIO_Init+0x260>)
 800bb78:	42a8      	cmp	r0, r5
 800bb7a:	f000 80a8 	beq.w	800bcce <HAL_GPIO_Init+0x20a>
 800bb7e:	4d6a      	ldr	r5, [pc, #424]	; (800bd28 <HAL_GPIO_Init+0x264>)
 800bb80:	42a8      	cmp	r0, r5
 800bb82:	f000 80b2 	beq.w	800bcea <HAL_GPIO_Init+0x226>
 800bb86:	4d69      	ldr	r5, [pc, #420]	; (800bd2c <HAL_GPIO_Init+0x268>)
 800bb88:	42a8      	cmp	r0, r5
 800bb8a:	f000 80b5 	beq.w	800bcf8 <HAL_GPIO_Init+0x234>
 800bb8e:	f8df e1a4 	ldr.w	lr, [pc, #420]	; 800bd34 <HAL_GPIO_Init+0x270>
 800bb92:	4570      	cmp	r0, lr
 800bb94:	f000 80a2 	beq.w	800bcdc <HAL_GPIO_Init+0x218>
 800bb98:	f8df e19c 	ldr.w	lr, [pc, #412]	; 800bd38 <HAL_GPIO_Init+0x274>
 800bb9c:	4570      	cmp	r0, lr
 800bb9e:	f000 80b2 	beq.w	800bd06 <HAL_GPIO_Init+0x242>
 800bba2:	f8df e198 	ldr.w	lr, [pc, #408]	; 800bd3c <HAL_GPIO_Init+0x278>
 800bba6:	4570      	cmp	r0, lr
 800bba8:	bf0c      	ite	eq
 800bbaa:	f04f 0e09 	moveq.w	lr, #9
 800bbae:	f04f 0e0a 	movne.w	lr, #10
 800bbb2:	fa0e f707 	lsl.w	r7, lr, r7
 800bbb6:	ea48 0807 	orr.w	r8, r8, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
 800bbba:	f8c1 8008 	str.w	r8, [r1, #8]
        temp = EXTI->RTSR;
 800bbbe:	68b1      	ldr	r1, [r6, #8]
        temp &= ~((uint32_t)iocurrent);
 800bbc0:	ea6f 050b 	mvn.w	r5, fp
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 800bbc4:	f41c 1f80 	tst.w	ip, #1048576	; 0x100000
        temp &= ~((uint32_t)iocurrent);
 800bbc8:	bf0c      	ite	eq
 800bbca:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 800bbcc:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->RTSR = temp;
 800bbd0:	60b1      	str	r1, [r6, #8]

        temp = EXTI->FTSR;
 800bbd2:	68f1      	ldr	r1, [r6, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 800bbd4:	f41c 1f00 	tst.w	ip, #2097152	; 0x200000
        temp &= ~((uint32_t)iocurrent);
 800bbd8:	bf0c      	ite	eq
 800bbda:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 800bbdc:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->FTSR = temp;
 800bbe0:	60f1      	str	r1, [r6, #12]

        temp = EXTI->EMR;
 800bbe2:	6871      	ldr	r1, [r6, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 800bbe4:	f41c 3f00 	tst.w	ip, #131072	; 0x20000
        temp &= ~((uint32_t)iocurrent);
 800bbe8:	bf0c      	ite	eq
 800bbea:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 800bbec:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->EMR = temp;
 800bbf0:	6071      	str	r1, [r6, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 800bbf2:	6831      	ldr	r1, [r6, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 800bbf4:	f41c 3f80 	tst.w	ip, #65536	; 0x10000
  for(position = 0U; position < GPIO_NUMBER; position++)
 800bbf8:	f103 0301 	add.w	r3, r3, #1
        temp &= ~((uint32_t)iocurrent);
 800bbfc:	bf0c      	ite	eq
 800bbfe:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 800bc00:	ea4b 0101 	orrne.w	r1, fp, r1
  for(position = 0U; position < GPIO_NUMBER; position++)
 800bc04:	2b10      	cmp	r3, #16
        }
        EXTI->IMR = temp;
 800bc06:	6031      	str	r1, [r6, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 800bc08:	f102 0202 	add.w	r2, r2, #2
 800bc0c:	f47f af6b 	bne.w	800bae6 <HAL_GPIO_Init+0x22>
      }
    }
  }
}
 800bc10:	b005      	add	sp, #20
 800bc12:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= (GPIO_Init->Speed << (position * 2U));
 800bc16:	f8d9 500c 	ldr.w	r5, [r9, #12]
        temp = GPIOx->OSPEEDR; 
 800bc1a:	f8d0 e008 	ldr.w	lr, [r0, #8]
        temp |= (GPIO_Init->Speed << (position * 2U));
 800bc1e:	fa05 f702 	lsl.w	r7, r5, r2
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800bc22:	2503      	movs	r5, #3
 800bc24:	fa05 f802 	lsl.w	r8, r5, r2
 800bc28:	ea2e 0e08 	bic.w	lr, lr, r8
        temp |= (GPIO_Init->Speed << (position * 2U));
 800bc2c:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 800bc30:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 800bc32:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 800bc34:	ea27 0e0b 	bic.w	lr, r7, fp
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 800bc38:	f3cc 1700 	ubfx	r7, ip, #4, #1
 800bc3c:	409f      	lsls	r7, r3
 800bc3e:	ea47 070e 	orr.w	r7, r7, lr
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800bc42:	ea6f 0508 	mvn.w	r5, r8
        GPIOx->OTYPER = temp;
 800bc46:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 800bc48:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 800bc4a:	ea07 0e05 	and.w	lr, r7, r5
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 800bc4e:	f8d9 7008 	ldr.w	r7, [r9, #8]
 800bc52:	4097      	lsls	r7, r2
 800bc54:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800bc58:	2902      	cmp	r1, #2
        GPIOx->PUPDR = temp;
 800bc5a:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800bc5c:	fa01 f102 	lsl.w	r1, r1, r2
 800bc60:	f47f af54 	bne.w	800bb0c <HAL_GPIO_Init+0x48>
        temp = GPIOx->AFR[position >> 3U];
 800bc64:	ea4f 0ed3 	mov.w	lr, r3, lsr #3
 800bc68:	eb00 0e8e 	add.w	lr, r0, lr, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800bc6c:	f003 0807 	and.w	r8, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 800bc70:	f8de 7020 	ldr.w	r7, [lr, #32]
 800bc74:	9700      	str	r7, [sp, #0]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800bc76:	f8d9 7010 	ldr.w	r7, [r9, #16]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800bc7a:	ea4f 0888 	mov.w	r8, r8, lsl #2
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800bc7e:	fa07 f708 	lsl.w	r7, r7, r8
 800bc82:	9701      	str	r7, [sp, #4]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800bc84:	270f      	movs	r7, #15
 800bc86:	fa07 f808 	lsl.w	r8, r7, r8
 800bc8a:	9f00      	ldr	r7, [sp, #0]
 800bc8c:	ea27 0808 	bic.w	r8, r7, r8
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800bc90:	9f01      	ldr	r7, [sp, #4]
 800bc92:	ea47 0708 	orr.w	r7, r7, r8
        GPIOx->AFR[position >> 3U] = temp;
 800bc96:	f8ce 7020 	str.w	r7, [lr, #32]
 800bc9a:	e737      	b.n	800bb0c <HAL_GPIO_Init+0x48>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800bc9c:	2503      	movs	r5, #3
 800bc9e:	4095      	lsls	r5, r2
 800bca0:	43ed      	mvns	r5, r5
 800bca2:	e7d1      	b.n	800bc48 <HAL_GPIO_Init+0x184>
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800bca4:	f04f 0e01 	mov.w	lr, #1
 800bca8:	fa0e f707 	lsl.w	r7, lr, r7
 800bcac:	ea48 0807 	orr.w	r8, r8, r7
 800bcb0:	e783      	b.n	800bbba <HAL_GPIO_Init+0xf6>
 800bcb2:	f04f 0e02 	mov.w	lr, #2
 800bcb6:	fa0e f707 	lsl.w	r7, lr, r7
 800bcba:	ea48 0807 	orr.w	r8, r8, r7
 800bcbe:	e77c      	b.n	800bbba <HAL_GPIO_Init+0xf6>
 800bcc0:	f04f 0e03 	mov.w	lr, #3
 800bcc4:	fa0e f707 	lsl.w	r7, lr, r7
 800bcc8:	ea48 0807 	orr.w	r8, r8, r7
 800bccc:	e775      	b.n	800bbba <HAL_GPIO_Init+0xf6>
 800bcce:	f04f 0e04 	mov.w	lr, #4
 800bcd2:	fa0e f707 	lsl.w	r7, lr, r7
 800bcd6:	ea48 0807 	orr.w	r8, r8, r7
 800bcda:	e76e      	b.n	800bbba <HAL_GPIO_Init+0xf6>
 800bcdc:	f04f 0e07 	mov.w	lr, #7
 800bce0:	fa0e f707 	lsl.w	r7, lr, r7
 800bce4:	ea48 0807 	orr.w	r8, r8, r7
 800bce8:	e767      	b.n	800bbba <HAL_GPIO_Init+0xf6>
 800bcea:	f04f 0e05 	mov.w	lr, #5
 800bcee:	fa0e f707 	lsl.w	r7, lr, r7
 800bcf2:	ea48 0807 	orr.w	r8, r8, r7
 800bcf6:	e760      	b.n	800bbba <HAL_GPIO_Init+0xf6>
 800bcf8:	f04f 0e06 	mov.w	lr, #6
 800bcfc:	fa0e f707 	lsl.w	r7, lr, r7
 800bd00:	ea48 0807 	orr.w	r8, r8, r7
 800bd04:	e759      	b.n	800bbba <HAL_GPIO_Init+0xf6>
 800bd06:	f04f 0e08 	mov.w	lr, #8
 800bd0a:	fa0e f707 	lsl.w	r7, lr, r7
 800bd0e:	ea48 0807 	orr.w	r8, r8, r7
 800bd12:	e752      	b.n	800bbba <HAL_GPIO_Init+0xf6>
 800bd14:	40013c00 	.word	0x40013c00
 800bd18:	40020000 	.word	0x40020000
 800bd1c:	40020800 	.word	0x40020800
 800bd20:	40020c00 	.word	0x40020c00
 800bd24:	40021000 	.word	0x40021000
 800bd28:	40021400 	.word	0x40021400
 800bd2c:	40021800 	.word	0x40021800
 800bd30:	40023800 	.word	0x40023800
 800bd34:	40021c00 	.word	0x40021c00
 800bd38:	40022000 	.word	0x40022000
 800bd3c:	40022400 	.word	0x40022400

0800bd40 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 800bd40:	6903      	ldr	r3, [r0, #16]
 800bd42:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 800bd44:	bf14      	ite	ne
 800bd46:	2001      	movne	r0, #1
 800bd48:	2000      	moveq	r0, #0
 800bd4a:	4770      	bx	lr

0800bd4c <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 800bd4c:	b902      	cbnz	r2, 800bd50 <HAL_GPIO_WritePin+0x4>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800bd4e:	0409      	lsls	r1, r1, #16
 800bd50:	6181      	str	r1, [r0, #24]
  }
}
 800bd52:	4770      	bx	lr

0800bd54 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 800bd54:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 800bd56:	ea01 0203 	and.w	r2, r1, r3
 800bd5a:	ea21 0103 	bic.w	r1, r1, r3
 800bd5e:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800bd62:	6181      	str	r1, [r0, #24]
}
 800bd64:	4770      	bx	lr
 800bd66:	bf00      	nop

0800bd68 <HAL_GPIO_EXTI_Callback>:
  /* Prevent unused argument(s) compilation warning */
  UNUSED(GPIO_Pin);
  /* NOTE: This function Should not be modified, when the callback is needed,
           the HAL_GPIO_EXTI_Callback could be implemented in the user file
   */
}
 800bd68:	4770      	bx	lr
 800bd6a:	bf00      	nop

0800bd6c <HAL_GPIO_EXTI_IRQHandler>:
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET)
 800bd6c:	4a04      	ldr	r2, [pc, #16]	; (800bd80 <HAL_GPIO_EXTI_IRQHandler+0x14>)
 800bd6e:	6951      	ldr	r1, [r2, #20]
 800bd70:	4201      	tst	r1, r0
 800bd72:	d100      	bne.n	800bd76 <HAL_GPIO_EXTI_IRQHandler+0xa>
 800bd74:	4770      	bx	lr
{
 800bd76:	b508      	push	{r3, lr}
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 800bd78:	6150      	str	r0, [r2, #20]
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 800bd7a:	f7ff fff5 	bl	800bd68 <HAL_GPIO_EXTI_Callback>
}
 800bd7e:	bd08      	pop	{r3, pc}
 800bd80:	40013c00 	.word	0x40013c00

0800bd84 <I2C_RequestMemoryWrite>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_RequestMemoryWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress, uint16_t MemAddSize, uint32_t Timeout, uint32_t Tickstart)
{
 800bd84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  /* Generate Start */
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800bd88:	6804      	ldr	r4, [r0, #0]
{
 800bd8a:	b083      	sub	sp, #12
 800bd8c:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800bd8e:	6823      	ldr	r3, [r4, #0]
{
 800bd90:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 800bd94:	f8dd b034 	ldr.w	fp, [sp, #52]	; 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800bd98:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 800bd9c:	4606      	mov	r6, r0
 800bd9e:	468a      	mov	sl, r1
 800bda0:	4617      	mov	r7, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800bda2:	6023      	str	r3, [r4, #0]
  * @param  Status The new Flag status (SET or RESET).
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 800bda4:	f1b9 3fff 	cmp.w	r9, #4294967295
 800bda8:	d136      	bne.n	800be18 <I2C_RequestMemoryWrite+0x94>
{
  /* Wait until flag is set */
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800bdaa:	6965      	ldr	r5, [r4, #20]
 800bdac:	07e8      	lsls	r0, r5, #31
 800bdae:	d5fc      	bpl.n	800bdaa <I2C_RequestMemoryWrite+0x26>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800bdb0:	f00a 03fe 	and.w	r3, sl, #254	; 0xfe
 800bdb4:	6123      	str	r3, [r4, #16]
  * @param  Flag specifies the I2C flag to check.
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 800bdb6:	f1b9 3fff 	cmp.w	r9, #4294967295
 800bdba:	d003      	beq.n	800bdc4 <I2C_RequestMemoryWrite+0x40>
 800bdbc:	e04f      	b.n	800be5e <I2C_RequestMemoryWrite+0xda>
{
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
  {
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800bdbe:	6961      	ldr	r1, [r4, #20]
 800bdc0:	054d      	lsls	r5, r1, #21
 800bdc2:	d45d      	bmi.n	800be80 <I2C_RequestMemoryWrite+0xfc>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800bdc4:	6961      	ldr	r1, [r4, #20]
 800bdc6:	078b      	lsls	r3, r1, #30
 800bdc8:	d5f9      	bpl.n	800bdbe <I2C_RequestMemoryWrite+0x3a>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800bdca:	2300      	movs	r3, #0
 800bdcc:	9301      	str	r3, [sp, #4]
 800bdce:	6963      	ldr	r3, [r4, #20]
 800bdd0:	9301      	str	r3, [sp, #4]
 800bdd2:	69a3      	ldr	r3, [r4, #24]
 800bdd4:	9301      	str	r3, [sp, #4]
 800bdd6:	9b01      	ldr	r3, [sp, #4]
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800bdd8:	f1b9 3fff 	cmp.w	r9, #4294967295
 800bddc:	f040 8088 	bne.w	800bef0 <I2C_RequestMemoryWrite+0x16c>
 800bde0:	6963      	ldr	r3, [r4, #20]
 800bde2:	061a      	lsls	r2, r3, #24
 800bde4:	d464      	bmi.n	800beb0 <I2C_RequestMemoryWrite+0x12c>
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800bde6:	6963      	ldr	r3, [r4, #20]
 800bde8:	055b      	lsls	r3, r3, #21
 800bdea:	d5f9      	bpl.n	800bde0 <I2C_RequestMemoryWrite+0x5c>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);

    hi2c->PreviousState       = I2C_STATE_NONE;
 800bdec:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800bdee:	f46f 6180 	mvn.w	r1, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 800bdf2:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800bdf4:	6161      	str	r1, [r4, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 800bdf6:	6333      	str	r3, [r6, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800bdf8:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800bdfc:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800be00:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800be02:	f043 0304 	orr.w	r3, r3, #4
 800be06:	6433      	str	r3, [r6, #64]	; 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800be08:	6c33      	ldr	r3, [r6, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 800be0a:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800be0c:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 800be0e:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800be12:	d066      	beq.n	800bee2 <I2C_RequestMemoryWrite+0x15e>
    return HAL_ERROR;
 800be14:	2001      	movs	r0, #1
 800be16:	e01f      	b.n	800be58 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800be18:	6963      	ldr	r3, [r4, #20]
 800be1a:	07d9      	lsls	r1, r3, #31
 800be1c:	d4c8      	bmi.n	800bdb0 <I2C_RequestMemoryWrite+0x2c>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800be1e:	f7ff fbb9 	bl	800b594 <HAL_GetTick>
 800be22:	eba0 000b 	sub.w	r0, r0, fp
 800be26:	4581      	cmp	r9, r0
 800be28:	d304      	bcc.n	800be34 <I2C_RequestMemoryWrite+0xb0>
 800be2a:	f1b9 0f00 	cmp.w	r9, #0
 800be2e:	d001      	beq.n	800be34 <I2C_RequestMemoryWrite+0xb0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800be30:	6834      	ldr	r4, [r6, #0]
 800be32:	e7b7      	b.n	800bda4 <I2C_RequestMemoryWrite+0x20>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800be34:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800be36:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800be38:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800be3a:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800be3e:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800be42:	6c32      	ldr	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800be44:	6831      	ldr	r1, [r6, #0]
        __HAL_UNLOCK(hi2c);
 800be46:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800be4a:	f042 0220 	orr.w	r2, r2, #32
 800be4e:	6432      	str	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800be50:	680b      	ldr	r3, [r1, #0]
 800be52:	05dc      	lsls	r4, r3, #23
 800be54:	d435      	bmi.n	800bec2 <I2C_RequestMemoryWrite+0x13e>
    return HAL_TIMEOUT;
 800be56:	2003      	movs	r0, #3
}
 800be58:	b003      	add	sp, #12
 800be5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800be5e:	6963      	ldr	r3, [r4, #20]
 800be60:	0798      	lsls	r0, r3, #30
 800be62:	d4b2      	bmi.n	800bdca <I2C_RequestMemoryWrite+0x46>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800be64:	6963      	ldr	r3, [r4, #20]
 800be66:	055a      	lsls	r2, r3, #21
 800be68:	d40a      	bmi.n	800be80 <I2C_RequestMemoryWrite+0xfc>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800be6a:	f7ff fb93 	bl	800b594 <HAL_GetTick>
 800be6e:	eba0 000b 	sub.w	r0, r0, fp
 800be72:	4581      	cmp	r9, r0
 800be74:	d34e      	bcc.n	800bf14 <I2C_RequestMemoryWrite+0x190>
 800be76:	f1b9 0f00 	cmp.w	r9, #0
 800be7a:	d04b      	beq.n	800bf14 <I2C_RequestMemoryWrite+0x190>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800be7c:	6834      	ldr	r4, [r6, #0]
 800be7e:	e79a      	b.n	800bdb6 <I2C_RequestMemoryWrite+0x32>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800be80:	6823      	ldr	r3, [r4, #0]
 800be82:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800be86:	6023      	str	r3, [r4, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800be88:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800be8a:	f46f 6180 	mvn.w	r1, #1024	; 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 800be8e:	2320      	movs	r3, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800be90:	6161      	str	r1, [r4, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800be92:	6332      	str	r2, [r6, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800be94:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800be98:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800be9c:	6c33      	ldr	r3, [r6, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800be9e:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800bea2:	f043 0304 	orr.w	r3, r3, #4
    return HAL_ERROR;
 800bea6:	2001      	movs	r0, #1
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800bea8:	6433      	str	r3, [r6, #64]	; 0x40
}
 800beaa:	b003      	add	sp, #12
 800beac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800beb0:	f1b8 0f01 	cmp.w	r8, #1
 800beb4:	d109      	bne.n	800beca <I2C_RequestMemoryWrite+0x146>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800beb6:	b2ff      	uxtb	r7, r7
  return HAL_OK;
 800beb8:	2000      	movs	r0, #0
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800beba:	6127      	str	r7, [r4, #16]
}
 800bebc:	b003      	add	sp, #12
 800bebe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800bec2:	f44f 7300 	mov.w	r3, #512	; 0x200
 800bec6:	6433      	str	r3, [r6, #64]	; 0x40
 800bec8:	e7c5      	b.n	800be56 <I2C_RequestMemoryWrite+0xd2>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800beca:	0a3b      	lsrs	r3, r7, #8
 800becc:	6123      	str	r3, [r4, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800bece:	f1b9 3fff 	cmp.w	r9, #4294967295
 800bed2:	d12e      	bne.n	800bf32 <I2C_RequestMemoryWrite+0x1ae>
 800bed4:	6963      	ldr	r3, [r4, #20]
 800bed6:	0619      	lsls	r1, r3, #24
 800bed8:	d4ed      	bmi.n	800beb6 <I2C_RequestMemoryWrite+0x132>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800beda:	6963      	ldr	r3, [r4, #20]
 800bedc:	055a      	lsls	r2, r3, #21
 800bede:	d5f9      	bpl.n	800bed4 <I2C_RequestMemoryWrite+0x150>
 800bee0:	e784      	b.n	800bdec <I2C_RequestMemoryWrite+0x68>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800bee2:	6832      	ldr	r2, [r6, #0]
 800bee4:	6813      	ldr	r3, [r2, #0]
 800bee6:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      return HAL_ERROR;
 800beea:	2001      	movs	r0, #1
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800beec:	6013      	str	r3, [r2, #0]
 800beee:	e7b3      	b.n	800be58 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800bef0:	6963      	ldr	r3, [r4, #20]
 800bef2:	061d      	lsls	r5, r3, #24
 800bef4:	d4dc      	bmi.n	800beb0 <I2C_RequestMemoryWrite+0x12c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800bef6:	6963      	ldr	r3, [r4, #20]
 800bef8:	0559      	lsls	r1, r3, #21
 800befa:	f53f af77 	bmi.w	800bdec <I2C_RequestMemoryWrite+0x68>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800befe:	f7ff fb49 	bl	800b594 <HAL_GetTick>
 800bf02:	eba0 000b 	sub.w	r0, r0, fp
 800bf06:	4581      	cmp	r9, r0
 800bf08:	d325      	bcc.n	800bf56 <I2C_RequestMemoryWrite+0x1d2>
 800bf0a:	f1b9 0f00 	cmp.w	r9, #0
 800bf0e:	d022      	beq.n	800bf56 <I2C_RequestMemoryWrite+0x1d2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800bf10:	6834      	ldr	r4, [r6, #0]
 800bf12:	e761      	b.n	800bdd8 <I2C_RequestMemoryWrite+0x54>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800bf14:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800bf16:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800bf18:	6332      	str	r2, [r6, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800bf1a:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800bf1e:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800bf22:	6c33      	ldr	r3, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800bf24:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800bf28:	f043 0320 	orr.w	r3, r3, #32
 800bf2c:	6433      	str	r3, [r6, #64]	; 0x40
    return HAL_ERROR;
 800bf2e:	2001      	movs	r0, #1
 800bf30:	e792      	b.n	800be58 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800bf32:	6963      	ldr	r3, [r4, #20]
 800bf34:	061b      	lsls	r3, r3, #24
 800bf36:	d4be      	bmi.n	800beb6 <I2C_RequestMemoryWrite+0x132>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800bf38:	6963      	ldr	r3, [r4, #20]
 800bf3a:	0558      	lsls	r0, r3, #21
 800bf3c:	f53f af56 	bmi.w	800bdec <I2C_RequestMemoryWrite+0x68>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800bf40:	f7ff fb28 	bl	800b594 <HAL_GetTick>
 800bf44:	eba0 000b 	sub.w	r0, r0, fp
 800bf48:	4581      	cmp	r9, r0
 800bf4a:	d304      	bcc.n	800bf56 <I2C_RequestMemoryWrite+0x1d2>
 800bf4c:	f1b9 0f00 	cmp.w	r9, #0
 800bf50:	d001      	beq.n	800bf56 <I2C_RequestMemoryWrite+0x1d2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800bf52:	6834      	ldr	r4, [r6, #0]
 800bf54:	e7bb      	b.n	800bece <I2C_RequestMemoryWrite+0x14a>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800bf56:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800bf58:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800bf5a:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800bf5c:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800bf60:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800bf64:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800bf66:	4313      	orrs	r3, r2
 800bf68:	6433      	str	r3, [r6, #64]	; 0x40
        return HAL_ERROR;
 800bf6a:	e74d      	b.n	800be08 <I2C_RequestMemoryWrite+0x84>

0800bf6c <I2C_RequestMemoryRead>:
{
 800bf6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800bf70:	6804      	ldr	r4, [r0, #0]
{
 800bf72:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800bf74:	6823      	ldr	r3, [r4, #0]
 800bf76:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800bf7a:	6023      	str	r3, [r4, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800bf7c:	6823      	ldr	r3, [r4, #0]
{
 800bf7e:	b083      	sub	sp, #12
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800bf80:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 800bf84:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 800bf88:	f8dd 9034 	ldr.w	r9, [sp, #52]	; 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800bf8c:	6023      	str	r3, [r4, #0]
{
 800bf8e:	4606      	mov	r6, r0
 800bf90:	468b      	mov	fp, r1
 800bf92:	4617      	mov	r7, r2
 800bf94:	f1ba 3fff 	cmp.w	sl, #4294967295
 800bf98:	d13a      	bne.n	800c010 <I2C_RequestMemoryRead+0xa4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800bf9a:	6965      	ldr	r5, [r4, #20]
 800bf9c:	07eb      	lsls	r3, r5, #31
 800bf9e:	d5fc      	bpl.n	800bf9a <I2C_RequestMemoryRead+0x2e>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800bfa0:	f00b 03fe 	and.w	r3, fp, #254	; 0xfe
 800bfa4:	6123      	str	r3, [r4, #16]
 800bfa6:	fa5f fb8b 	uxtb.w	fp, fp
 800bfaa:	f1ba 3fff 	cmp.w	sl, #4294967295
 800bfae:	d003      	beq.n	800bfb8 <I2C_RequestMemoryRead+0x4c>
 800bfb0:	e069      	b.n	800c086 <I2C_RequestMemoryRead+0x11a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800bfb2:	6965      	ldr	r5, [r4, #20]
 800bfb4:	056a      	lsls	r2, r5, #21
 800bfb6:	d44e      	bmi.n	800c056 <I2C_RequestMemoryRead+0xea>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800bfb8:	6965      	ldr	r5, [r4, #20]
 800bfba:	07a9      	lsls	r1, r5, #30
 800bfbc:	d5f9      	bpl.n	800bfb2 <I2C_RequestMemoryRead+0x46>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800bfbe:	2300      	movs	r3, #0
 800bfc0:	9301      	str	r3, [sp, #4]
 800bfc2:	6963      	ldr	r3, [r4, #20]
 800bfc4:	9301      	str	r3, [sp, #4]
 800bfc6:	69a3      	ldr	r3, [r4, #24]
 800bfc8:	9301      	str	r3, [sp, #4]
 800bfca:	9b01      	ldr	r3, [sp, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800bfcc:	f1ba 3fff 	cmp.w	sl, #4294967295
 800bfd0:	f040 80bd 	bne.w	800c14e <I2C_RequestMemoryRead+0x1e2>
 800bfd4:	6963      	ldr	r3, [r4, #20]
 800bfd6:	0618      	lsls	r0, r3, #24
 800bfd8:	d468      	bmi.n	800c0ac <I2C_RequestMemoryRead+0x140>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800bfda:	6963      	ldr	r3, [r4, #20]
 800bfdc:	0559      	lsls	r1, r3, #21
 800bfde:	d5f9      	bpl.n	800bfd4 <I2C_RequestMemoryRead+0x68>
    hi2c->PreviousState       = I2C_STATE_NONE;
 800bfe0:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800bfe2:	f46f 6180 	mvn.w	r1, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 800bfe6:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800bfe8:	6161      	str	r1, [r4, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 800bfea:	6333      	str	r3, [r6, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800bfec:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800bff0:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800bff4:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800bff6:	f043 0304 	orr.w	r3, r3, #4
 800bffa:	6433      	str	r3, [r6, #64]	; 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800bffc:	6c33      	ldr	r3, [r6, #64]	; 0x40
    __HAL_UNLOCK(hi2c);
 800bffe:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800c000:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 800c002:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800c006:	d070      	beq.n	800c0ea <I2C_RequestMemoryRead+0x17e>
    return HAL_ERROR;
 800c008:	2001      	movs	r0, #1
}
 800c00a:	b003      	add	sp, #12
 800c00c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800c010:	6963      	ldr	r3, [r4, #20]
 800c012:	07dd      	lsls	r5, r3, #31
 800c014:	d4c4      	bmi.n	800bfa0 <I2C_RequestMemoryRead+0x34>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c016:	f7ff fabd 	bl	800b594 <HAL_GetTick>
 800c01a:	eba0 0009 	sub.w	r0, r0, r9
 800c01e:	4582      	cmp	sl, r0
 800c020:	d304      	bcc.n	800c02c <I2C_RequestMemoryRead+0xc0>
 800c022:	f1ba 0f00 	cmp.w	sl, #0
 800c026:	d001      	beq.n	800c02c <I2C_RequestMemoryRead+0xc0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800c028:	6834      	ldr	r4, [r6, #0]
 800c02a:	e7b3      	b.n	800bf94 <I2C_RequestMemoryRead+0x28>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800c02c:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800c02e:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800c030:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800c032:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800c036:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c03a:	6c32      	ldr	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800c03c:	6831      	ldr	r1, [r6, #0]
        __HAL_UNLOCK(hi2c);
 800c03e:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c042:	f042 0220 	orr.w	r2, r2, #32
 800c046:	6432      	str	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800c048:	680b      	ldr	r3, [r1, #0]
 800c04a:	05dc      	lsls	r4, r3, #23
 800c04c:	d43d      	bmi.n	800c0ca <I2C_RequestMemoryRead+0x15e>
    return HAL_TIMEOUT;
 800c04e:	2003      	movs	r0, #3
}
 800c050:	b003      	add	sp, #12
 800c052:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c056:	6823      	ldr	r3, [r4, #0]
 800c058:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800c05c:	6023      	str	r3, [r4, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800c05e:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800c060:	f46f 6180 	mvn.w	r1, #1024	; 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 800c064:	2320      	movs	r3, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800c066:	6161      	str	r1, [r4, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800c068:	6332      	str	r2, [r6, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800c06a:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800c06e:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800c072:	6c33      	ldr	r3, [r6, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800c074:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800c078:	f043 0304 	orr.w	r3, r3, #4
    return HAL_ERROR;
 800c07c:	2001      	movs	r0, #1
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800c07e:	6433      	str	r3, [r6, #64]	; 0x40
}
 800c080:	b003      	add	sp, #12
 800c082:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800c086:	6963      	ldr	r3, [r4, #20]
 800c088:	079b      	lsls	r3, r3, #30
 800c08a:	d498      	bmi.n	800bfbe <I2C_RequestMemoryRead+0x52>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c08c:	6963      	ldr	r3, [r4, #20]
 800c08e:	0558      	lsls	r0, r3, #21
 800c090:	d4e1      	bmi.n	800c056 <I2C_RequestMemoryRead+0xea>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c092:	f7ff fa7f 	bl	800b594 <HAL_GetTick>
 800c096:	eba0 0009 	sub.w	r0, r0, r9
 800c09a:	4582      	cmp	sl, r0
 800c09c:	f0c0 808f 	bcc.w	800c1be <I2C_RequestMemoryRead+0x252>
 800c0a0:	f1ba 0f00 	cmp.w	sl, #0
 800c0a4:	f000 808b 	beq.w	800c1be <I2C_RequestMemoryRead+0x252>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800c0a8:	6834      	ldr	r4, [r6, #0]
 800c0aa:	e77e      	b.n	800bfaa <I2C_RequestMemoryRead+0x3e>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800c0ac:	f1b8 0f01 	cmp.w	r8, #1
 800c0b0:	d10f      	bne.n	800c0d2 <I2C_RequestMemoryRead+0x166>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800c0b2:	b2ff      	uxtb	r7, r7
 800c0b4:	6127      	str	r7, [r4, #16]
 800c0b6:	f1ba 3fff 	cmp.w	sl, #4294967295
 800c0ba:	d16e      	bne.n	800c19a <I2C_RequestMemoryRead+0x22e>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800c0bc:	6963      	ldr	r3, [r4, #20]
 800c0be:	061b      	lsls	r3, r3, #24
 800c0c0:	d41a      	bmi.n	800c0f8 <I2C_RequestMemoryRead+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c0c2:	6963      	ldr	r3, [r4, #20]
 800c0c4:	055f      	lsls	r7, r3, #21
 800c0c6:	d5f9      	bpl.n	800c0bc <I2C_RequestMemoryRead+0x150>
 800c0c8:	e78a      	b.n	800bfe0 <I2C_RequestMemoryRead+0x74>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800c0ca:	f44f 7300 	mov.w	r3, #512	; 0x200
 800c0ce:	6433      	str	r3, [r6, #64]	; 0x40
 800c0d0:	e7bd      	b.n	800c04e <I2C_RequestMemoryRead+0xe2>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800c0d2:	0a3b      	lsrs	r3, r7, #8
 800c0d4:	6123      	str	r3, [r4, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800c0d6:	f1ba 3fff 	cmp.w	sl, #4294967295
 800c0da:	d17e      	bne.n	800c1da <I2C_RequestMemoryRead+0x26e>
 800c0dc:	6963      	ldr	r3, [r4, #20]
 800c0de:	061d      	lsls	r5, r3, #24
 800c0e0:	d4e7      	bmi.n	800c0b2 <I2C_RequestMemoryRead+0x146>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c0e2:	6963      	ldr	r3, [r4, #20]
 800c0e4:	0558      	lsls	r0, r3, #21
 800c0e6:	d5f9      	bpl.n	800c0dc <I2C_RequestMemoryRead+0x170>
 800c0e8:	e77a      	b.n	800bfe0 <I2C_RequestMemoryRead+0x74>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c0ea:	6832      	ldr	r2, [r6, #0]
 800c0ec:	6813      	ldr	r3, [r2, #0]
 800c0ee:	f443 7300 	orr.w	r3, r3, #512	; 0x200
    return HAL_ERROR;
 800c0f2:	2001      	movs	r0, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c0f4:	6013      	str	r3, [r2, #0]
 800c0f6:	e7ab      	b.n	800c050 <I2C_RequestMemoryRead+0xe4>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800c0f8:	6823      	ldr	r3, [r4, #0]
 800c0fa:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800c0fe:	6023      	str	r3, [r4, #0]
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 800c100:	f1ba 3fff 	cmp.w	sl, #4294967295
 800c104:	d113      	bne.n	800c12e <I2C_RequestMemoryRead+0x1c2>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800c106:	6963      	ldr	r3, [r4, #20]
 800c108:	07d8      	lsls	r0, r3, #31
 800c10a:	d5fc      	bpl.n	800c106 <I2C_RequestMemoryRead+0x19a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 800c10c:	f04b 0301 	orr.w	r3, fp, #1
 800c110:	6123      	str	r3, [r4, #16]
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 800c112:	f1ba 3fff 	cmp.w	sl, #4294967295
 800c116:	d003      	beq.n	800c120 <I2C_RequestMemoryRead+0x1b4>
 800c118:	e02b      	b.n	800c172 <I2C_RequestMemoryRead+0x206>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c11a:	6963      	ldr	r3, [r4, #20]
 800c11c:	055b      	lsls	r3, r3, #21
 800c11e:	d49a      	bmi.n	800c056 <I2C_RequestMemoryRead+0xea>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800c120:	6963      	ldr	r3, [r4, #20]
 800c122:	43db      	mvns	r3, r3
 800c124:	f013 0302 	ands.w	r3, r3, #2
 800c128:	d1f7      	bne.n	800c11a <I2C_RequestMemoryRead+0x1ae>
  return HAL_OK;
 800c12a:	4618      	mov	r0, r3
 800c12c:	e790      	b.n	800c050 <I2C_RequestMemoryRead+0xe4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800c12e:	6963      	ldr	r3, [r4, #20]
 800c130:	07d9      	lsls	r1, r3, #31
 800c132:	d4eb      	bmi.n	800c10c <I2C_RequestMemoryRead+0x1a0>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c134:	f7ff fa2e 	bl	800b594 <HAL_GetTick>
 800c138:	eba0 0009 	sub.w	r0, r0, r9
 800c13c:	4582      	cmp	sl, r0
 800c13e:	f4ff af75 	bcc.w	800c02c <I2C_RequestMemoryRead+0xc0>
 800c142:	f1ba 0f00 	cmp.w	sl, #0
 800c146:	f43f af71 	beq.w	800c02c <I2C_RequestMemoryRead+0xc0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800c14a:	6834      	ldr	r4, [r6, #0]
 800c14c:	e7d8      	b.n	800c100 <I2C_RequestMemoryRead+0x194>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800c14e:	6963      	ldr	r3, [r4, #20]
 800c150:	061a      	lsls	r2, r3, #24
 800c152:	d4ab      	bmi.n	800c0ac <I2C_RequestMemoryRead+0x140>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c154:	6963      	ldr	r3, [r4, #20]
 800c156:	055d      	lsls	r5, r3, #21
 800c158:	f53f af42 	bmi.w	800bfe0 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c15c:	f7ff fa1a 	bl	800b594 <HAL_GetTick>
 800c160:	eba0 0009 	sub.w	r0, r0, r9
 800c164:	4582      	cmp	sl, r0
 800c166:	d34b      	bcc.n	800c200 <I2C_RequestMemoryRead+0x294>
 800c168:	f1ba 0f00 	cmp.w	sl, #0
 800c16c:	d048      	beq.n	800c200 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800c16e:	6834      	ldr	r4, [r6, #0]
 800c170:	e72c      	b.n	800bfcc <I2C_RequestMemoryRead+0x60>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800c172:	6963      	ldr	r3, [r4, #20]
 800c174:	43db      	mvns	r3, r3
 800c176:	f013 0302 	ands.w	r3, r3, #2
 800c17a:	d0d6      	beq.n	800c12a <I2C_RequestMemoryRead+0x1be>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c17c:	6963      	ldr	r3, [r4, #20]
 800c17e:	055a      	lsls	r2, r3, #21
 800c180:	f53f af69 	bmi.w	800c056 <I2C_RequestMemoryRead+0xea>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c184:	f7ff fa06 	bl	800b594 <HAL_GetTick>
 800c188:	eba0 0009 	sub.w	r0, r0, r9
 800c18c:	4582      	cmp	sl, r0
 800c18e:	d316      	bcc.n	800c1be <I2C_RequestMemoryRead+0x252>
 800c190:	f1ba 0f00 	cmp.w	sl, #0
 800c194:	d013      	beq.n	800c1be <I2C_RequestMemoryRead+0x252>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800c196:	6834      	ldr	r4, [r6, #0]
 800c198:	e7bb      	b.n	800c112 <I2C_RequestMemoryRead+0x1a6>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800c19a:	6963      	ldr	r3, [r4, #20]
 800c19c:	061d      	lsls	r5, r3, #24
 800c19e:	d4ab      	bmi.n	800c0f8 <I2C_RequestMemoryRead+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c1a0:	6963      	ldr	r3, [r4, #20]
 800c1a2:	055a      	lsls	r2, r3, #21
 800c1a4:	f53f af1c 	bmi.w	800bfe0 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c1a8:	f7ff f9f4 	bl	800b594 <HAL_GetTick>
 800c1ac:	eba0 0009 	sub.w	r0, r0, r9
 800c1b0:	4582      	cmp	sl, r0
 800c1b2:	d325      	bcc.n	800c200 <I2C_RequestMemoryRead+0x294>
 800c1b4:	f1ba 0f00 	cmp.w	sl, #0
 800c1b8:	d022      	beq.n	800c200 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800c1ba:	6834      	ldr	r4, [r6, #0]
 800c1bc:	e77b      	b.n	800c0b6 <I2C_RequestMemoryRead+0x14a>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800c1be:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800c1c0:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800c1c2:	6332      	str	r2, [r6, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800c1c4:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800c1c8:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800c1cc:	6c33      	ldr	r3, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800c1ce:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800c1d2:	f043 0320 	orr.w	r3, r3, #32
 800c1d6:	6433      	str	r3, [r6, #64]	; 0x40
 800c1d8:	e716      	b.n	800c008 <I2C_RequestMemoryRead+0x9c>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800c1da:	6963      	ldr	r3, [r4, #20]
 800c1dc:	0619      	lsls	r1, r3, #24
 800c1de:	f53f af68 	bmi.w	800c0b2 <I2C_RequestMemoryRead+0x146>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c1e2:	6963      	ldr	r3, [r4, #20]
 800c1e4:	055b      	lsls	r3, r3, #21
 800c1e6:	f53f aefb 	bmi.w	800bfe0 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c1ea:	f7ff f9d3 	bl	800b594 <HAL_GetTick>
 800c1ee:	eba0 0009 	sub.w	r0, r0, r9
 800c1f2:	4582      	cmp	sl, r0
 800c1f4:	d304      	bcc.n	800c200 <I2C_RequestMemoryRead+0x294>
 800c1f6:	f1ba 0f00 	cmp.w	sl, #0
 800c1fa:	d001      	beq.n	800c200 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800c1fc:	6834      	ldr	r4, [r6, #0]
 800c1fe:	e76a      	b.n	800c0d6 <I2C_RequestMemoryRead+0x16a>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800c200:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800c202:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800c204:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800c206:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800c20a:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c20e:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800c210:	4313      	orrs	r3, r2
 800c212:	6433      	str	r3, [r6, #64]	; 0x40
        return HAL_ERROR;
 800c214:	e6f2      	b.n	800bffc <I2C_RequestMemoryRead+0x90>
 800c216:	bf00      	nop

0800c218 <HAL_I2C_Init>:
  if (hi2c == NULL)
 800c218:	2800      	cmp	r0, #0
 800c21a:	f000 80b9 	beq.w	800c390 <HAL_I2C_Init+0x178>
{
 800c21e:	b570      	push	{r4, r5, r6, lr}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 800c220:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800c224:	4604      	mov	r4, r0
 800c226:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800c22a:	2b00      	cmp	r3, #0
 800c22c:	f000 8098 	beq.w	800c360 <HAL_I2C_Init+0x148>
  __HAL_I2C_DISABLE(hi2c);
 800c230:	6823      	ldr	r3, [r4, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
 800c232:	2224      	movs	r2, #36	; 0x24
 800c234:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 800c238:	681a      	ldr	r2, [r3, #0]
 800c23a:	f022 0201 	bic.w	r2, r2, #1
 800c23e:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 800c240:	681a      	ldr	r2, [r3, #0]
 800c242:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800c246:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 800c248:	681a      	ldr	r2, [r3, #0]
 800c24a:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800c24e:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 800c250:	f001 fe70 	bl	800df34 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 800c254:	6865      	ldr	r5, [r4, #4]
 800c256:	4b4f      	ldr	r3, [pc, #316]	; (800c394 <HAL_I2C_Init+0x17c>)
 800c258:	429d      	cmp	r5, r3
 800c25a:	d84f      	bhi.n	800c2fc <HAL_I2C_Init+0xe4>
 800c25c:	4b4e      	ldr	r3, [pc, #312]	; (800c398 <HAL_I2C_Init+0x180>)
 800c25e:	4298      	cmp	r0, r3
 800c260:	d97c      	bls.n	800c35c <HAL_I2C_Init+0x144>
  freqrange = I2C_FREQRANGE(pclk1);
 800c262:	4b4e      	ldr	r3, [pc, #312]	; (800c39c <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800c264:	006a      	lsls	r2, r5, #1
  freqrange = I2C_FREQRANGE(pclk1);
 800c266:	fba3 3500 	umull	r3, r5, r3, r0
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800c26a:	1e43      	subs	r3, r0, #1
 800c26c:	fbb3 f3f2 	udiv	r3, r3, r2
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800c270:	6822      	ldr	r2, [r4, #0]
 800c272:	6851      	ldr	r1, [r2, #4]
 800c274:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800c278:	ea41 4195 	orr.w	r1, r1, r5, lsr #18
 800c27c:	6051      	str	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800c27e:	6a11      	ldr	r1, [r2, #32]
  freqrange = I2C_FREQRANGE(pclk1);
 800c280:	ea4f 4c95 	mov.w	ip, r5, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800c284:	f10c 0c01 	add.w	ip, ip, #1
 800c288:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800c28c:	ea41 010c 	orr.w	r1, r1, ip
 800c290:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800c292:	69d1      	ldr	r1, [r2, #28]
 800c294:	f640 70fc 	movw	r0, #4092	; 0xffc
 800c298:	3301      	adds	r3, #1
 800c29a:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 800c29e:	4203      	tst	r3, r0
 800c2a0:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800c2a4:	d161      	bne.n	800c36a <HAL_I2C_Init+0x152>
 800c2a6:	2304      	movs	r3, #4
 800c2a8:	430b      	orrs	r3, r1
 800c2aa:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 800c2ac:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 800c2b0:	6811      	ldr	r1, [r2, #0]
 800c2b2:	4303      	orrs	r3, r0
 800c2b4:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 800c2b8:	430b      	orrs	r3, r1
 800c2ba:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 800c2bc:	6891      	ldr	r1, [r2, #8]
 800c2be:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 800c2c2:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 800c2c6:	4303      	orrs	r3, r0
 800c2c8:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800c2cc:	430b      	orrs	r3, r1
 800c2ce:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 800c2d0:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 800c2d4:	68d1      	ldr	r1, [r2, #12]
 800c2d6:	4303      	orrs	r3, r0
 800c2d8:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800c2dc:	430b      	orrs	r3, r1
 800c2de:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 800c2e0:	6811      	ldr	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800c2e2:	2300      	movs	r3, #0
  __HAL_I2C_ENABLE(hi2c);
 800c2e4:	f041 0101 	orr.w	r1, r1, #1
  hi2c->State = HAL_I2C_STATE_READY;
 800c2e8:	2020      	movs	r0, #32
  __HAL_I2C_ENABLE(hi2c);
 800c2ea:	6011      	str	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800c2ec:	6423      	str	r3, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 800c2ee:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 800c2f2:	6323      	str	r3, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 800c2f4:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
  return HAL_OK;
 800c2f8:	4618      	mov	r0, r3
}
 800c2fa:	bd70      	pop	{r4, r5, r6, pc}
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 800c2fc:	4b28      	ldr	r3, [pc, #160]	; (800c3a0 <HAL_I2C_Init+0x188>)
 800c2fe:	4298      	cmp	r0, r3
 800c300:	d92c      	bls.n	800c35c <HAL_I2C_Init+0x144>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800c302:	6822      	ldr	r2, [r4, #0]
  freqrange = I2C_FREQRANGE(pclk1);
 800c304:	4b25      	ldr	r3, [pc, #148]	; (800c39c <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800c306:	6851      	ldr	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800c308:	4e26      	ldr	r6, [pc, #152]	; (800c3a4 <HAL_I2C_Init+0x18c>)
  freqrange = I2C_FREQRANGE(pclk1);
 800c30a:	fba3 3c00 	umull	r3, ip, r3, r0
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800c30e:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800c312:	ea41 419c 	orr.w	r1, r1, ip, lsr #18
 800c316:	6051      	str	r1, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 800c318:	ea4f 439c 	mov.w	r3, ip, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800c31c:	f44f 7196 	mov.w	r1, #300	; 0x12c
 800c320:	fb01 f303 	mul.w	r3, r1, r3
 800c324:	fba6 6303 	umull	r6, r3, r6, r3
 800c328:	6a11      	ldr	r1, [r2, #32]
 800c32a:	099b      	lsrs	r3, r3, #6
 800c32c:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800c330:	3301      	adds	r3, #1
 800c332:	430b      	orrs	r3, r1
 800c334:	6213      	str	r3, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800c336:	69d1      	ldr	r1, [r2, #28]
 800c338:	68a3      	ldr	r3, [r4, #8]
 800c33a:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 800c33e:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800c342:	b9ab      	cbnz	r3, 800c370 <HAL_I2C_Init+0x158>
 800c344:	1e43      	subs	r3, r0, #1
 800c346:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800c34a:	fbb3 f3f5 	udiv	r3, r3, r5
 800c34e:	3301      	adds	r3, #1
 800c350:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800c354:	b1d3      	cbz	r3, 800c38c <HAL_I2C_Init+0x174>
 800c356:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800c35a:	e7a5      	b.n	800c2a8 <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 800c35c:	2001      	movs	r0, #1
}
 800c35e:	bd70      	pop	{r4, r5, r6, pc}
    hi2c->Lock = HAL_UNLOCKED;
 800c360:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 800c364:	f7f5 ff22 	bl	80021ac <HAL_I2C_MspInit>
 800c368:	e762      	b.n	800c230 <HAL_I2C_Init+0x18>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800c36a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800c36e:	e79b      	b.n	800c2a8 <HAL_I2C_Init+0x90>
 800c370:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 800c374:	1e43      	subs	r3, r0, #1
 800c376:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 800c37a:	fbb3 f3f5 	udiv	r3, r3, r5
 800c37e:	3301      	adds	r3, #1
 800c380:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800c384:	b113      	cbz	r3, 800c38c <HAL_I2C_Init+0x174>
 800c386:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 800c38a:	e78d      	b.n	800c2a8 <HAL_I2C_Init+0x90>
 800c38c:	2301      	movs	r3, #1
 800c38e:	e78b      	b.n	800c2a8 <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 800c390:	2001      	movs	r0, #1
}
 800c392:	4770      	bx	lr
 800c394:	000186a0 	.word	0x000186a0
 800c398:	001e847f 	.word	0x001e847f
 800c39c:	431bde83 	.word	0x431bde83
 800c3a0:	003d08ff 	.word	0x003d08ff
 800c3a4:	10624dd3 	.word	0x10624dd3

0800c3a8 <HAL_I2C_Mem_Write>:
{
 800c3a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c3ac:	4604      	mov	r4, r0
 800c3ae:	b083      	sub	sp, #12
 800c3b0:	4699      	mov	r9, r3
 800c3b2:	f8bd a034 	ldrh.w	sl, [sp, #52]	; 0x34
 800c3b6:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800c3b8:	460f      	mov	r7, r1
 800c3ba:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800c3bc:	f7ff f8ea 	bl	800b594 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800c3c0:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800c3c4:	2b20      	cmp	r3, #32
 800c3c6:	d004      	beq.n	800c3d2 <HAL_I2C_Mem_Write+0x2a>
      return HAL_BUSY;
 800c3c8:	2702      	movs	r7, #2
}
 800c3ca:	4638      	mov	r0, r7
 800c3cc:	b003      	add	sp, #12
 800c3ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c3d2:	4605      	mov	r5, r0
 800c3d4:	e005      	b.n	800c3e2 <HAL_I2C_Mem_Write+0x3a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c3d6:	f7ff f8dd 	bl	800b594 <HAL_GetTick>
 800c3da:	1b40      	subs	r0, r0, r5
 800c3dc:	2819      	cmp	r0, #25
 800c3de:	f200 80a8 	bhi.w	800c532 <HAL_I2C_Mem_Write+0x18a>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800c3e2:	6820      	ldr	r0, [r4, #0]
 800c3e4:	6983      	ldr	r3, [r0, #24]
 800c3e6:	ea6f 0c03 	mvn.w	ip, r3
 800c3ea:	f01c 0b02 	ands.w	fp, ip, #2
 800c3ee:	d0f2      	beq.n	800c3d6 <HAL_I2C_Mem_Write+0x2e>
    __HAL_LOCK(hi2c);
 800c3f0:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800c3f4:	2b01      	cmp	r3, #1
 800c3f6:	d0e7      	beq.n	800c3c8 <HAL_I2C_Mem_Write+0x20>
 800c3f8:	2301      	movs	r3, #1
 800c3fa:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800c3fe:	6803      	ldr	r3, [r0, #0]
 800c400:	07db      	lsls	r3, r3, #31
 800c402:	d572      	bpl.n	800c4ea <HAL_I2C_Mem_Write+0x142>
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800c404:	4639      	mov	r1, r7
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800c406:	6807      	ldr	r7, [r0, #0]
 800c408:	f427 6700 	bic.w	r7, r7, #2048	; 0x800
 800c40c:	6007      	str	r7, [r0, #0]
    hi2c->pBuffPtr    = pData;
 800c40e:	980c      	ldr	r0, [sp, #48]	; 0x30
 800c410:	6260      	str	r0, [r4, #36]	; 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 800c412:	2021      	movs	r0, #33	; 0x21
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800c414:	e9cd 6500 	strd	r6, r5, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 800c418:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800c41c:	2040      	movs	r0, #64	; 0x40
 800c41e:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800c422:	2000      	movs	r0, #0
 800c424:	6420      	str	r0, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 800c426:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800c42a:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 800c42c:	8520      	strh	r0, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800c42e:	4856      	ldr	r0, [pc, #344]	; (800c588 <HAL_I2C_Mem_Write+0x1e0>)
 800c430:	62e0      	str	r0, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800c432:	464b      	mov	r3, r9
 800c434:	4642      	mov	r2, r8
 800c436:	4620      	mov	r0, r4
 800c438:	f7ff fca4 	bl	800bd84 <I2C_RequestMemoryWrite>
 800c43c:	4607      	mov	r7, r0
 800c43e:	bb00      	cbnz	r0, 800c482 <HAL_I2C_Mem_Write+0xda>
    while (hi2c->XferSize > 0U)
 800c440:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800c442:	2b00      	cmp	r3, #0
 800c444:	f000 809e 	beq.w	800c584 <HAL_I2C_Mem_Write+0x1dc>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800c448:	6823      	ldr	r3, [r4, #0]
 800c44a:	1c72      	adds	r2, r6, #1
 800c44c:	d159      	bne.n	800c502 <HAL_I2C_Mem_Write+0x15a>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800c44e:	695a      	ldr	r2, [r3, #20]
 800c450:	0610      	lsls	r0, r2, #24
 800c452:	d41b      	bmi.n	800c48c <HAL_I2C_Mem_Write+0xe4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c454:	695a      	ldr	r2, [r3, #20]
 800c456:	0551      	lsls	r1, r2, #21
 800c458:	d5f9      	bpl.n	800c44e <HAL_I2C_Mem_Write+0xa6>
    hi2c->PreviousState       = I2C_STATE_NONE;
 800c45a:	2200      	movs	r2, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800c45c:	f46f 6080 	mvn.w	r0, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 800c460:	2120      	movs	r1, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800c462:	6158      	str	r0, [r3, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 800c464:	6322      	str	r2, [r4, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800c466:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800c46a:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800c46e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800c470:	f043 0304 	orr.w	r3, r3, #4
 800c474:	6423      	str	r3, [r4, #64]	; 0x40
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800c476:	6c23      	ldr	r3, [r4, #64]	; 0x40
    __HAL_UNLOCK(hi2c);
 800c478:	2200      	movs	r2, #0
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800c47a:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 800c47c:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800c480:	d038      	beq.n	800c4f4 <HAL_I2C_Mem_Write+0x14c>
      return HAL_ERROR;
 800c482:	2701      	movs	r7, #1
}
 800c484:	4638      	mov	r0, r7
 800c486:	b003      	add	sp, #12
 800c488:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800c48c:	f8d4 c024 	ldr.w	ip, [r4, #36]	; 0x24
      hi2c->XferSize--;
 800c490:	f8b4 e028 	ldrh.w	lr, [r4, #40]	; 0x28
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800c494:	4661      	mov	r1, ip
      hi2c->XferSize--;
 800c496:	f10e 30ff 	add.w	r0, lr, #4294967295
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800c49a:	f811 2b01 	ldrb.w	r2, [r1], #1
 800c49e:	611a      	str	r2, [r3, #16]
      hi2c->XferCount--;
 800c4a0:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800c4a2:	6261      	str	r1, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800c4a4:	3a01      	subs	r2, #1
 800c4a6:	b292      	uxth	r2, r2
 800c4a8:	8562      	strh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 800c4aa:	b282      	uxth	r2, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800c4ac:	6958      	ldr	r0, [r3, #20]
      hi2c->XferSize--;
 800c4ae:	8522      	strh	r2, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800c4b0:	0740      	lsls	r0, r0, #29
 800c4b2:	d517      	bpl.n	800c4e4 <HAL_I2C_Mem_Write+0x13c>
 800c4b4:	b942      	cbnz	r2, 800c4c8 <HAL_I2C_Mem_Write+0x120>
 800c4b6:	1c72      	adds	r2, r6, #1
 800c4b8:	d156      	bne.n	800c568 <HAL_I2C_Mem_Write+0x1c0>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800c4ba:	695a      	ldr	r2, [r3, #20]
 800c4bc:	0750      	lsls	r0, r2, #29
 800c4be:	d446      	bmi.n	800c54e <HAL_I2C_Mem_Write+0x1a6>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c4c0:	695a      	ldr	r2, [r3, #20]
 800c4c2:	0551      	lsls	r1, r2, #21
 800c4c4:	d5f9      	bpl.n	800c4ba <HAL_I2C_Mem_Write+0x112>
 800c4c6:	e7c8      	b.n	800c45a <HAL_I2C_Mem_Write+0xb2>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 800c4c8:	f89c 1001 	ldrb.w	r1, [ip, #1]
 800c4cc:	6119      	str	r1, [r3, #16]
        hi2c->pBuffPtr++;
 800c4ce:	f10c 0102 	add.w	r1, ip, #2
 800c4d2:	6261      	str	r1, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800c4d4:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
        hi2c->XferSize--;
 800c4d6:	f1ae 0202 	sub.w	r2, lr, #2
        hi2c->XferCount--;
 800c4da:	3901      	subs	r1, #1
        hi2c->XferSize--;
 800c4dc:	b292      	uxth	r2, r2
        hi2c->XferCount--;
 800c4de:	b289      	uxth	r1, r1
        hi2c->XferSize--;
 800c4e0:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->XferCount--;
 800c4e2:	8561      	strh	r1, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 800c4e4:	2a00      	cmp	r2, #0
 800c4e6:	d1b0      	bne.n	800c44a <HAL_I2C_Mem_Write+0xa2>
 800c4e8:	e7e5      	b.n	800c4b6 <HAL_I2C_Mem_Write+0x10e>
      __HAL_I2C_ENABLE(hi2c);
 800c4ea:	6803      	ldr	r3, [r0, #0]
 800c4ec:	f043 0301 	orr.w	r3, r3, #1
 800c4f0:	6003      	str	r3, [r0, #0]
 800c4f2:	e787      	b.n	800c404 <HAL_I2C_Mem_Write+0x5c>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c4f4:	6822      	ldr	r2, [r4, #0]
 800c4f6:	6813      	ldr	r3, [r2, #0]
 800c4f8:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      return HAL_ERROR;
 800c4fc:	2701      	movs	r7, #1
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c4fe:	6013      	str	r3, [r2, #0]
 800c500:	e763      	b.n	800c3ca <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800c502:	695a      	ldr	r2, [r3, #20]
 800c504:	0612      	lsls	r2, r2, #24
 800c506:	d4c1      	bmi.n	800c48c <HAL_I2C_Mem_Write+0xe4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c508:	695a      	ldr	r2, [r3, #20]
 800c50a:	0551      	lsls	r1, r2, #21
 800c50c:	d4a5      	bmi.n	800c45a <HAL_I2C_Mem_Write+0xb2>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c50e:	f7ff f841 	bl	800b594 <HAL_GetTick>
 800c512:	1b40      	subs	r0, r0, r5
 800c514:	4286      	cmp	r6, r0
 800c516:	d301      	bcc.n	800c51c <HAL_I2C_Mem_Write+0x174>
 800c518:	2e00      	cmp	r6, #0
 800c51a:	d195      	bne.n	800c448 <HAL_I2C_Mem_Write+0xa0>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800c51c:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800c51e:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800c520:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800c522:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800c526:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c52a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800c52c:	4313      	orrs	r3, r2
 800c52e:	6423      	str	r3, [r4, #64]	; 0x40
        return HAL_ERROR;
 800c530:	e7a1      	b.n	800c476 <HAL_I2C_Mem_Write+0xce>
        hi2c->State             = HAL_I2C_STATE_READY;
 800c532:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800c534:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800c538:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800c53c:	f884 b03e 	strb.w	fp, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c540:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800c542:	f884 b03c 	strb.w	fp, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c546:	f043 0320 	orr.w	r3, r3, #32
 800c54a:	6423      	str	r3, [r4, #64]	; 0x40
 800c54c:	e73c      	b.n	800c3c8 <HAL_I2C_Mem_Write+0x20>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c54e:	681a      	ldr	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800c550:	2100      	movs	r1, #0
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c552:	f442 7200 	orr.w	r2, r2, #512	; 0x200
    hi2c->State = HAL_I2C_STATE_READY;
 800c556:	2020      	movs	r0, #32
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c558:	601a      	str	r2, [r3, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800c55a:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800c55e:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800c562:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
    return HAL_OK;
 800c566:	e730      	b.n	800c3ca <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800c568:	695a      	ldr	r2, [r3, #20]
 800c56a:	0752      	lsls	r2, r2, #29
 800c56c:	d4ef      	bmi.n	800c54e <HAL_I2C_Mem_Write+0x1a6>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c56e:	695a      	ldr	r2, [r3, #20]
 800c570:	0551      	lsls	r1, r2, #21
 800c572:	f53f af72 	bmi.w	800c45a <HAL_I2C_Mem_Write+0xb2>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c576:	f7ff f80d 	bl	800b594 <HAL_GetTick>
 800c57a:	1b40      	subs	r0, r0, r5
 800c57c:	4286      	cmp	r6, r0
 800c57e:	d3cd      	bcc.n	800c51c <HAL_I2C_Mem_Write+0x174>
 800c580:	2e00      	cmp	r6, #0
 800c582:	d0cb      	beq.n	800c51c <HAL_I2C_Mem_Write+0x174>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800c584:	6823      	ldr	r3, [r4, #0]
 800c586:	e796      	b.n	800c4b6 <HAL_I2C_Mem_Write+0x10e>
 800c588:	ffff0000 	.word	0xffff0000

0800c58c <HAL_I2C_Mem_Read>:
{
 800c58c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c590:	4604      	mov	r4, r0
 800c592:	b087      	sub	sp, #28
 800c594:	4699      	mov	r9, r3
 800c596:	f8bd a044 	ldrh.w	sl, [sp, #68]	; 0x44
 800c59a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 800c59c:	460f      	mov	r7, r1
 800c59e:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800c5a0:	f7fe fff8 	bl	800b594 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800c5a4:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800c5a8:	2b20      	cmp	r3, #32
 800c5aa:	d004      	beq.n	800c5b6 <HAL_I2C_Mem_Read+0x2a>
      return HAL_BUSY;
 800c5ac:	2702      	movs	r7, #2
}
 800c5ae:	4638      	mov	r0, r7
 800c5b0:	b007      	add	sp, #28
 800c5b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c5b6:	4606      	mov	r6, r0
 800c5b8:	e005      	b.n	800c5c6 <HAL_I2C_Mem_Read+0x3a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c5ba:	f7fe ffeb 	bl	800b594 <HAL_GetTick>
 800c5be:	1b80      	subs	r0, r0, r6
 800c5c0:	2819      	cmp	r0, #25
 800c5c2:	f200 80d2 	bhi.w	800c76a <HAL_I2C_Mem_Read+0x1de>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800c5c6:	f8d4 c000 	ldr.w	ip, [r4]
 800c5ca:	f8dc 0018 	ldr.w	r0, [ip, #24]
 800c5ce:	43c0      	mvns	r0, r0
 800c5d0:	f010 0b02 	ands.w	fp, r0, #2
 800c5d4:	d0f1      	beq.n	800c5ba <HAL_I2C_Mem_Read+0x2e>
    __HAL_LOCK(hi2c);
 800c5d6:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800c5da:	2b01      	cmp	r3, #1
 800c5dc:	d0e6      	beq.n	800c5ac <HAL_I2C_Mem_Read+0x20>
 800c5de:	2301      	movs	r3, #1
 800c5e0:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800c5e4:	f8dc 3000 	ldr.w	r3, [ip]
 800c5e8:	07d9      	lsls	r1, r3, #31
 800c5ea:	d537      	bpl.n	800c65c <HAL_I2C_Mem_Read+0xd0>
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800c5ec:	f8dc 0000 	ldr.w	r0, [ip]
 800c5f0:	f420 6000 	bic.w	r0, r0, #2048	; 0x800
 800c5f4:	f8cc 0000 	str.w	r0, [ip]
    hi2c->pBuffPtr    = pData;
 800c5f8:	9810      	ldr	r0, [sp, #64]	; 0x40
 800c5fa:	6260      	str	r0, [r4, #36]	; 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800c5fc:	2022      	movs	r0, #34	; 0x22
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800c5fe:	e9cd 5600 	strd	r5, r6, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800c602:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800c606:	2040      	movs	r0, #64	; 0x40
 800c608:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800c60c:	2000      	movs	r0, #0
 800c60e:	6420      	str	r0, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 800c610:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800c614:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 800c616:	8520      	strh	r0, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800c618:	4893      	ldr	r0, [pc, #588]	; (800c868 <HAL_I2C_Mem_Read+0x2dc>)
 800c61a:	62e0      	str	r0, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800c61c:	4639      	mov	r1, r7
 800c61e:	464b      	mov	r3, r9
 800c620:	4642      	mov	r2, r8
 800c622:	4620      	mov	r0, r4
 800c624:	f7ff fca2 	bl	800bf6c <I2C_RequestMemoryRead>
 800c628:	4607      	mov	r7, r0
 800c62a:	2800      	cmp	r0, #0
 800c62c:	f040 80ab 	bne.w	800c786 <HAL_I2C_Mem_Read+0x1fa>
    if (hi2c->XferSize == 0U)
 800c630:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 800c632:	b9d2      	cbnz	r2, 800c66a <HAL_I2C_Mem_Read+0xde>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800c634:	6823      	ldr	r3, [r4, #0]
 800c636:	9002      	str	r0, [sp, #8]
 800c638:	695a      	ldr	r2, [r3, #20]
 800c63a:	9202      	str	r2, [sp, #8]
 800c63c:	699a      	ldr	r2, [r3, #24]
 800c63e:	9202      	str	r2, [sp, #8]
 800c640:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c642:	681a      	ldr	r2, [r3, #0]
 800c644:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800c648:	601a      	str	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800c64a:	2300      	movs	r3, #0
    hi2c->State = HAL_I2C_STATE_READY;
 800c64c:	2220      	movs	r2, #32
 800c64e:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800c652:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800c656:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 800c65a:	e7a8      	b.n	800c5ae <HAL_I2C_Mem_Read+0x22>
      __HAL_I2C_ENABLE(hi2c);
 800c65c:	f8dc 3000 	ldr.w	r3, [ip]
 800c660:	f043 0301 	orr.w	r3, r3, #1
 800c664:	f8cc 3000 	str.w	r3, [ip]
 800c668:	e7c0      	b.n	800c5ec <HAL_I2C_Mem_Read+0x60>
    else if (hi2c->XferSize == 1U)
 800c66a:	2a01      	cmp	r2, #1
 800c66c:	f000 812c 	beq.w	800c8c8 <HAL_I2C_Mem_Read+0x33c>
    else if (hi2c->XferSize == 2U)
 800c670:	2a02      	cmp	r2, #2
 800c672:	f000 80bd 	beq.w	800c7f0 <HAL_I2C_Mem_Read+0x264>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800c676:	6823      	ldr	r3, [r4, #0]
 800c678:	9005      	str	r0, [sp, #20]
 800c67a:	6959      	ldr	r1, [r3, #20]
 800c67c:	9105      	str	r1, [sp, #20]
 800c67e:	6999      	ldr	r1, [r3, #24]
 800c680:	9105      	str	r1, [sp, #20]
 800c682:	9905      	ldr	r1, [sp, #20]
      if (hi2c->XferSize <= 3U)
 800c684:	2a03      	cmp	r2, #3
 800c686:	d849      	bhi.n	800c71c <HAL_I2C_Mem_Read+0x190>
        if (hi2c->XferSize == 1U)
 800c688:	2a01      	cmp	r2, #1
 800c68a:	f000 80eb 	beq.w	800c864 <HAL_I2C_Mem_Read+0x2d8>
        else if (hi2c->XferSize == 2U)
 800c68e:	2a02      	cmp	r2, #2
 800c690:	f000 8089 	beq.w	800c7a6 <HAL_I2C_Mem_Read+0x21a>
 800c694:	1c69      	adds	r1, r5, #1
 800c696:	f040 80bb 	bne.w	800c810 <HAL_I2C_Mem_Read+0x284>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800c69a:	695a      	ldr	r2, [r3, #20]
 800c69c:	0752      	lsls	r2, r2, #29
 800c69e:	d5fc      	bpl.n	800c69a <HAL_I2C_Mem_Read+0x10e>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800c6a0:	681a      	ldr	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c6a2:	6a61      	ldr	r1, [r4, #36]	; 0x24
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800c6a4:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800c6a8:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c6aa:	691b      	ldr	r3, [r3, #16]
 800c6ac:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 800c6ae:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800c6b0:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800c6b2:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800c6b4:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 800c6b6:	3101      	adds	r1, #1
          hi2c->XferSize--;
 800c6b8:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800c6ba:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 800c6bc:	6261      	str	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800c6be:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800c6c0:	8563      	strh	r3, [r4, #42]	; 0x2a
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 800c6c2:	1c69      	adds	r1, r5, #1
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800c6c4:	6822      	ldr	r2, [r4, #0]
 800c6c6:	f040 80af 	bne.w	800c828 <HAL_I2C_Mem_Read+0x29c>
 800c6ca:	6953      	ldr	r3, [r2, #20]
 800c6cc:	075b      	lsls	r3, r3, #29
 800c6ce:	d5fc      	bpl.n	800c6ca <HAL_I2C_Mem_Read+0x13e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c6d0:	6813      	ldr	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c6d2:	6a61      	ldr	r1, [r4, #36]	; 0x24
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c6d4:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800c6d8:	6013      	str	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c6da:	6913      	ldr	r3, [r2, #16]
 800c6dc:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 800c6de:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800c6e0:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800c6e2:	6a60      	ldr	r0, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c6e4:	6821      	ldr	r1, [r4, #0]
          hi2c->XferCount--;
 800c6e6:	3b01      	subs	r3, #1
 800c6e8:	b29b      	uxth	r3, r3
 800c6ea:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c6ec:	6909      	ldr	r1, [r1, #16]
          hi2c->XferSize--;
 800c6ee:	1e53      	subs	r3, r2, #1
          hi2c->pBuffPtr++;
 800c6f0:	f100 0c01 	add.w	ip, r0, #1
          hi2c->XferSize--;
 800c6f4:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800c6f6:	f8c4 c024 	str.w	ip, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c6fa:	7041      	strb	r1, [r0, #1]
          hi2c->XferSize--;
 800c6fc:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800c6fe:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800c700:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800c702:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800c704:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 800c706:	3101      	adds	r1, #1
          hi2c->XferSize--;
 800c708:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 800c70a:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 800c70c:	6261      	str	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800c70e:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800c710:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 800c712:	2a00      	cmp	r2, #0
 800c714:	d099      	beq.n	800c64a <HAL_I2C_Mem_Read+0xbe>
      if (hi2c->XferSize <= 3U)
 800c716:	2a03      	cmp	r2, #3
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800c718:	6823      	ldr	r3, [r4, #0]
      if (hi2c->XferSize <= 3U)
 800c71a:	d9b5      	bls.n	800c688 <HAL_I2C_Mem_Read+0xfc>
 800c71c:	b95d      	cbnz	r5, 800c736 <HAL_I2C_Mem_Read+0x1aa>
 800c71e:	e0c5      	b.n	800c8ac <HAL_I2C_Mem_Read+0x320>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800c720:	695a      	ldr	r2, [r3, #20]
 800c722:	06d0      	lsls	r0, r2, #27
 800c724:	f100 80b2 	bmi.w	800c88c <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c728:	f7fe ff34 	bl	800b594 <HAL_GetTick>
 800c72c:	1b80      	subs	r0, r0, r6
 800c72e:	4285      	cmp	r5, r0
 800c730:	f0c0 8086 	bcc.w	800c840 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800c734:	6823      	ldr	r3, [r4, #0]
 800c736:	695a      	ldr	r2, [r3, #20]
 800c738:	0652      	lsls	r2, r2, #25
 800c73a:	d5f1      	bpl.n	800c720 <HAL_I2C_Mem_Read+0x194>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c73c:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800c73e:	691b      	ldr	r3, [r3, #16]
 800c740:	7013      	strb	r3, [r2, #0]
        hi2c->XferCount--;
 800c742:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800c744:	6820      	ldr	r0, [r4, #0]
        hi2c->XferSize--;
 800c746:	8d22      	ldrh	r2, [r4, #40]	; 0x28
        hi2c->pBuffPtr++;
 800c748:	6a61      	ldr	r1, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800c74a:	3b01      	subs	r3, #1
 800c74c:	b29b      	uxth	r3, r3
 800c74e:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800c750:	6943      	ldr	r3, [r0, #20]
        hi2c->XferSize--;
 800c752:	3a01      	subs	r2, #1
 800c754:	b292      	uxth	r2, r2
        hi2c->pBuffPtr++;
 800c756:	f101 0c01 	add.w	ip, r1, #1
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800c75a:	075b      	lsls	r3, r3, #29
        hi2c->XferSize--;
 800c75c:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->pBuffPtr++;
 800c75e:	f8c4 c024 	str.w	ip, [r4, #36]	; 0x24
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800c762:	d5d6      	bpl.n	800c712 <HAL_I2C_Mem_Read+0x186>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c764:	6903      	ldr	r3, [r0, #16]
 800c766:	704b      	strb	r3, [r1, #1]
 800c768:	e036      	b.n	800c7d8 <HAL_I2C_Mem_Read+0x24c>
        hi2c->State             = HAL_I2C_STATE_READY;
 800c76a:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800c76c:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800c770:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800c774:	f884 b03e 	strb.w	fp, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c778:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800c77a:	f884 b03c 	strb.w	fp, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c77e:	f043 0320 	orr.w	r3, r3, #32
 800c782:	6423      	str	r3, [r4, #64]	; 0x40
 800c784:	e712      	b.n	800c5ac <HAL_I2C_Mem_Read+0x20>
      return HAL_ERROR;
 800c786:	2701      	movs	r7, #1
}
 800c788:	4638      	mov	r0, r7
 800c78a:	b007      	add	sp, #28
 800c78c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800c790:	695a      	ldr	r2, [r3, #20]
 800c792:	0750      	lsls	r0, r2, #29
 800c794:	d40c      	bmi.n	800c7b0 <HAL_I2C_Mem_Read+0x224>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c796:	f7fe fefd 	bl	800b594 <HAL_GetTick>
 800c79a:	1b80      	subs	r0, r0, r6
 800c79c:	4285      	cmp	r5, r0
 800c79e:	d34f      	bcc.n	800c840 <HAL_I2C_Mem_Read+0x2b4>
 800c7a0:	2d00      	cmp	r5, #0
 800c7a2:	d04d      	beq.n	800c840 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800c7a4:	6823      	ldr	r3, [r4, #0]
 800c7a6:	1c69      	adds	r1, r5, #1
 800c7a8:	d1f2      	bne.n	800c790 <HAL_I2C_Mem_Read+0x204>
 800c7aa:	695a      	ldr	r2, [r3, #20]
 800c7ac:	0752      	lsls	r2, r2, #29
 800c7ae:	d5fc      	bpl.n	800c7aa <HAL_I2C_Mem_Read+0x21e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c7b0:	681a      	ldr	r2, [r3, #0]
 800c7b2:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800c7b6:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c7b8:	691a      	ldr	r2, [r3, #16]
 800c7ba:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800c7bc:	701a      	strb	r2, [r3, #0]
          hi2c->XferCount--;
 800c7be:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800c7c0:	6a62      	ldr	r2, [r4, #36]	; 0x24
          hi2c->XferCount--;
 800c7c2:	3b01      	subs	r3, #1
 800c7c4:	b29b      	uxth	r3, r3
 800c7c6:	8563      	strh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800c7c8:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800c7ca:	3b01      	subs	r3, #1
 800c7cc:	8523      	strh	r3, [r4, #40]	; 0x28
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c7ce:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 800c7d0:	1c51      	adds	r1, r2, #1
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c7d2:	691b      	ldr	r3, [r3, #16]
          hi2c->pBuffPtr++;
 800c7d4:	6261      	str	r1, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c7d6:	7053      	strb	r3, [r2, #1]
          hi2c->pBuffPtr++;
 800c7d8:	6a63      	ldr	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800c7da:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800c7dc:	3301      	adds	r3, #1
 800c7de:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferCount--;
 800c7e0:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800c7e2:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800c7e4:	3b01      	subs	r3, #1
          hi2c->XferSize--;
 800c7e6:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 800c7e8:	b29b      	uxth	r3, r3
          hi2c->XferSize--;
 800c7ea:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800c7ec:	8563      	strh	r3, [r4, #42]	; 0x2a
 800c7ee:	e790      	b.n	800c712 <HAL_I2C_Mem_Read+0x186>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800c7f0:	6823      	ldr	r3, [r4, #0]
 800c7f2:	6819      	ldr	r1, [r3, #0]
 800c7f4:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800c7f8:	6019      	str	r1, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800c7fa:	6819      	ldr	r1, [r3, #0]
 800c7fc:	f441 6100 	orr.w	r1, r1, #2048	; 0x800
 800c800:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800c802:	9004      	str	r0, [sp, #16]
 800c804:	6959      	ldr	r1, [r3, #20]
 800c806:	9104      	str	r1, [sp, #16]
 800c808:	6999      	ldr	r1, [r3, #24]
 800c80a:	9104      	str	r1, [sp, #16]
 800c80c:	9904      	ldr	r1, [sp, #16]
 800c80e:	e739      	b.n	800c684 <HAL_I2C_Mem_Read+0xf8>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800c810:	695a      	ldr	r2, [r3, #20]
 800c812:	0750      	lsls	r0, r2, #29
 800c814:	f53f af44 	bmi.w	800c6a0 <HAL_I2C_Mem_Read+0x114>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c818:	f7fe febc 	bl	800b594 <HAL_GetTick>
 800c81c:	1b80      	subs	r0, r0, r6
 800c81e:	4285      	cmp	r5, r0
 800c820:	d30e      	bcc.n	800c840 <HAL_I2C_Mem_Read+0x2b4>
 800c822:	b16d      	cbz	r5, 800c840 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800c824:	6823      	ldr	r3, [r4, #0]
 800c826:	e735      	b.n	800c694 <HAL_I2C_Mem_Read+0x108>
 800c828:	6953      	ldr	r3, [r2, #20]
 800c82a:	0758      	lsls	r0, r3, #29
 800c82c:	f53f af50 	bmi.w	800c6d0 <HAL_I2C_Mem_Read+0x144>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c830:	f7fe feb0 	bl	800b594 <HAL_GetTick>
 800c834:	1b80      	subs	r0, r0, r6
 800c836:	4285      	cmp	r5, r0
 800c838:	d302      	bcc.n	800c840 <HAL_I2C_Mem_Read+0x2b4>
 800c83a:	2d00      	cmp	r5, #0
 800c83c:	f47f af41 	bne.w	800c6c2 <HAL_I2C_Mem_Read+0x136>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800c840:	2200      	movs	r2, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800c842:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800c844:	6322      	str	r2, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800c846:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800c84a:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c84e:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800c850:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
          return HAL_ERROR;
 800c854:	2701      	movs	r7, #1
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c856:	f043 0320 	orr.w	r3, r3, #32
}
 800c85a:	4638      	mov	r0, r7
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c85c:	6423      	str	r3, [r4, #64]	; 0x40
}
 800c85e:	b007      	add	sp, #28
 800c860:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c864:	b95d      	cbnz	r5, 800c87e <HAL_I2C_Mem_Read+0x2f2>
 800c866:	e02b      	b.n	800c8c0 <HAL_I2C_Mem_Read+0x334>
 800c868:	ffff0000 	.word	0xffff0000
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800c86c:	695a      	ldr	r2, [r3, #20]
 800c86e:	06d2      	lsls	r2, r2, #27
 800c870:	d40c      	bmi.n	800c88c <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c872:	f7fe fe8f 	bl	800b594 <HAL_GetTick>
 800c876:	1b80      	subs	r0, r0, r6
 800c878:	4285      	cmp	r5, r0
 800c87a:	d3e1      	bcc.n	800c840 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800c87c:	6823      	ldr	r3, [r4, #0]
 800c87e:	695a      	ldr	r2, [r3, #20]
 800c880:	0651      	lsls	r1, r2, #25
 800c882:	d5f3      	bpl.n	800c86c <HAL_I2C_Mem_Read+0x2e0>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c884:	691a      	ldr	r2, [r3, #16]
 800c886:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800c888:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800c88a:	e7a5      	b.n	800c7d8 <HAL_I2C_Mem_Read+0x24c>
      hi2c->PreviousState       = I2C_STATE_NONE;
 800c88c:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800c88e:	f06f 0010 	mvn.w	r0, #16
      hi2c->State               = HAL_I2C_STATE_READY;
 800c892:	2120      	movs	r1, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800c894:	6158      	str	r0, [r3, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800c896:	6322      	str	r2, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800c898:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800c89c:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 800c8a0:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800c8a2:	6423      	str	r3, [r4, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800c8a4:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
          return HAL_ERROR;
 800c8a8:	2701      	movs	r7, #1
 800c8aa:	e680      	b.n	800c5ae <HAL_I2C_Mem_Read+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800c8ac:	695a      	ldr	r2, [r3, #20]
 800c8ae:	0652      	lsls	r2, r2, #25
 800c8b0:	f53f af44 	bmi.w	800c73c <HAL_I2C_Mem_Read+0x1b0>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800c8b4:	695a      	ldr	r2, [r3, #20]
 800c8b6:	06d1      	lsls	r1, r2, #27
 800c8b8:	d4e8      	bmi.n	800c88c <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c8ba:	f7fe fe6b 	bl	800b594 <HAL_GetTick>
 800c8be:	e7bf      	b.n	800c840 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800c8c0:	695a      	ldr	r2, [r3, #20]
 800c8c2:	0650      	lsls	r0, r2, #25
 800c8c4:	d5f6      	bpl.n	800c8b4 <HAL_I2C_Mem_Read+0x328>
 800c8c6:	e7dd      	b.n	800c884 <HAL_I2C_Mem_Read+0x2f8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800c8c8:	6823      	ldr	r3, [r4, #0]
 800c8ca:	6819      	ldr	r1, [r3, #0]
 800c8cc:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800c8d0:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800c8d2:	9003      	str	r0, [sp, #12]
 800c8d4:	6959      	ldr	r1, [r3, #20]
 800c8d6:	9103      	str	r1, [sp, #12]
 800c8d8:	6999      	ldr	r1, [r3, #24]
 800c8da:	9103      	str	r1, [sp, #12]
 800c8dc:	9903      	ldr	r1, [sp, #12]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c8de:	6819      	ldr	r1, [r3, #0]
 800c8e0:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 800c8e4:	6019      	str	r1, [r3, #0]
 800c8e6:	e6cd      	b.n	800c684 <HAL_I2C_Mem_Read+0xf8>

0800c8e8 <HAL_I2C_MasterTxCpltCallback>:
 800c8e8:	4770      	bx	lr
 800c8ea:	bf00      	nop

0800c8ec <HAL_I2C_MasterRxCpltCallback>:
 800c8ec:	4770      	bx	lr
 800c8ee:	bf00      	nop

0800c8f0 <HAL_I2C_SlaveTxCpltCallback>:
 800c8f0:	4770      	bx	lr
 800c8f2:	bf00      	nop

0800c8f4 <HAL_I2C_SlaveRxCpltCallback>:
 800c8f4:	4770      	bx	lr
 800c8f6:	bf00      	nop

0800c8f8 <HAL_I2C_AddrCallback>:
}
 800c8f8:	4770      	bx	lr
 800c8fa:	bf00      	nop

0800c8fc <HAL_I2C_ListenCpltCallback>:
 800c8fc:	4770      	bx	lr
 800c8fe:	bf00      	nop

0800c900 <HAL_I2C_MemTxCpltCallback>:
 800c900:	4770      	bx	lr
 800c902:	bf00      	nop

0800c904 <I2C_MemoryTransmit_TXE_BTF>:
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800c904:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  if (hi2c->EventCount == 0U)
 800c908:	6d01      	ldr	r1, [r0, #80]	; 0x50
{
 800c90a:	4603      	mov	r3, r0
  if (hi2c->EventCount == 0U)
 800c90c:	b959      	cbnz	r1, 800c926 <I2C_MemoryTransmit_TXE_BTF+0x22>
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800c90e:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800c910:	6801      	ldr	r1, [r0, #0]
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800c912:	2a01      	cmp	r2, #1
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800c914:	6c82      	ldr	r2, [r0, #72]	; 0x48
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800c916:	d00d      	beq.n	800c934 <I2C_MemoryTransmit_TXE_BTF+0x30>
      hi2c->Instance->DR = I2C_MEM_ADD_MSB(hi2c->Memaddress);
 800c918:	f3c2 2207 	ubfx	r2, r2, #8, #8
 800c91c:	610a      	str	r2, [r1, #16]
      hi2c->EventCount++;
 800c91e:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800c920:	3201      	adds	r2, #1
 800c922:	6502      	str	r2, [r0, #80]	; 0x50
 800c924:	4770      	bx	lr
  else if (hi2c->EventCount == 1U)
 800c926:	6d01      	ldr	r1, [r0, #80]	; 0x50
 800c928:	2901      	cmp	r1, #1
 800c92a:	d009      	beq.n	800c940 <I2C_MemoryTransmit_TXE_BTF+0x3c>
  else if (hi2c->EventCount == 2U)
 800c92c:	6d01      	ldr	r1, [r0, #80]	; 0x50
 800c92e:	2902      	cmp	r1, #2
 800c930:	d00e      	beq.n	800c950 <I2C_MemoryTransmit_TXE_BTF+0x4c>
 800c932:	4770      	bx	lr
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800c934:	b2d2      	uxtb	r2, r2
 800c936:	610a      	str	r2, [r1, #16]
      hi2c->EventCount += 2U;
 800c938:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800c93a:	3202      	adds	r2, #2
 800c93c:	6502      	str	r2, [r0, #80]	; 0x50
 800c93e:	4770      	bx	lr
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800c940:	6c82      	ldr	r2, [r0, #72]	; 0x48
 800c942:	6801      	ldr	r1, [r0, #0]
 800c944:	b2d2      	uxtb	r2, r2
 800c946:	610a      	str	r2, [r1, #16]
    hi2c->EventCount++;
 800c948:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800c94a:	3201      	adds	r2, #1
 800c94c:	6502      	str	r2, [r0, #80]	; 0x50
 800c94e:	4770      	bx	lr
 800c950:	b2d2      	uxtb	r2, r2
    if (CurrentState == HAL_I2C_STATE_BUSY_RX)
 800c952:	2a22      	cmp	r2, #34	; 0x22
 800c954:	d01f      	beq.n	800c996 <I2C_MemoryTransmit_TXE_BTF+0x92>
    else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800c956:	8d41      	ldrh	r1, [r0, #42]	; 0x2a
 800c958:	b289      	uxth	r1, r1
 800c95a:	b9c1      	cbnz	r1, 800c98e <I2C_MemoryTransmit_TXE_BTF+0x8a>
    else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800c95c:	8d41      	ldrh	r1, [r0, #42]	; 0x2a
 800c95e:	b289      	uxth	r1, r1
 800c960:	2900      	cmp	r1, #0
 800c962:	d1e6      	bne.n	800c932 <I2C_MemoryTransmit_TXE_BTF+0x2e>
 800c964:	2a21      	cmp	r2, #33	; 0x21
 800c966:	d1e4      	bne.n	800c932 <I2C_MemoryTransmit_TXE_BTF+0x2e>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800c968:	6802      	ldr	r2, [r0, #0]
{
 800c96a:	b510      	push	{r4, lr}
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800c96c:	6854      	ldr	r4, [r2, #4]
 800c96e:	f424 64e0 	bic.w	r4, r4, #1792	; 0x700
 800c972:	6054      	str	r4, [r2, #4]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c974:	6814      	ldr	r4, [r2, #0]
 800c976:	f444 7400 	orr.w	r4, r4, #512	; 0x200
 800c97a:	6014      	str	r4, [r2, #0]
      hi2c->State = HAL_I2C_STATE_READY;
 800c97c:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 800c97e:	6301      	str	r1, [r0, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_READY;
 800c980:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800c984:	f880 103e 	strb.w	r1, [r0, #62]	; 0x3e
      HAL_I2C_MemTxCpltCallback(hi2c);
 800c988:	f7ff ffba 	bl	800c900 <HAL_I2C_MemTxCpltCallback>
}
 800c98c:	bd10      	pop	{r4, pc}
    else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800c98e:	2a21      	cmp	r2, #33	; 0x21
 800c990:	d00a      	beq.n	800c9a8 <I2C_MemoryTransmit_TXE_BTF+0xa4>
    else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800c992:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800c994:	4770      	bx	lr
      hi2c->Instance->CR1 |= I2C_CR1_START;
 800c996:	6801      	ldr	r1, [r0, #0]
 800c998:	680a      	ldr	r2, [r1, #0]
 800c99a:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800c99e:	600a      	str	r2, [r1, #0]
      hi2c->EventCount++;
 800c9a0:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800c9a2:	3201      	adds	r2, #1
 800c9a4:	6502      	str	r2, [r0, #80]	; 0x50
 800c9a6:	4770      	bx	lr
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800c9a8:	6a41      	ldr	r1, [r0, #36]	; 0x24
 800c9aa:	6802      	ldr	r2, [r0, #0]
 800c9ac:	f811 0b01 	ldrb.w	r0, [r1], #1
 800c9b0:	6110      	str	r0, [r2, #16]
      hi2c->XferCount--;
 800c9b2:	8d5a      	ldrh	r2, [r3, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800c9b4:	6259      	str	r1, [r3, #36]	; 0x24
      hi2c->XferCount--;
 800c9b6:	3a01      	subs	r2, #1
 800c9b8:	b292      	uxth	r2, r2
 800c9ba:	855a      	strh	r2, [r3, #42]	; 0x2a
 800c9bc:	4770      	bx	lr
 800c9be:	bf00      	nop

0800c9c0 <HAL_I2C_MemRxCpltCallback>:
 800c9c0:	4770      	bx	lr
 800c9c2:	bf00      	nop

0800c9c4 <HAL_I2C_ErrorCallback>:
 800c9c4:	4770      	bx	lr
 800c9c6:	bf00      	nop

0800c9c8 <HAL_I2C_AbortCpltCallback>:
 800c9c8:	4770      	bx	lr
 800c9ca:	bf00      	nop

0800c9cc <I2C_DMAAbort>:
{
 800c9cc:	b570      	push	{r4, r5, r6, lr}
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800c9ce:	4b3a      	ldr	r3, [pc, #232]	; (800cab8 <I2C_DMAAbort+0xec>)
 800c9d0:	4a3a      	ldr	r2, [pc, #232]	; (800cabc <I2C_DMAAbort+0xf0>)
 800c9d2:	681b      	ldr	r3, [r3, #0]
  I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent; /* Derogation MISRAC2012-Rule-11.5 */
 800c9d4:	6b80      	ldr	r0, [r0, #56]	; 0x38
{
 800c9d6:	b082      	sub	sp, #8
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800c9d8:	08db      	lsrs	r3, r3, #3
  __IO uint32_t count = 0U;
 800c9da:	2100      	movs	r1, #0
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800c9dc:	fba2 2303 	umull	r2, r3, r2, r3
  __IO uint32_t count = 0U;
 800c9e0:	9101      	str	r1, [sp, #4]
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800c9e2:	0a1b      	lsrs	r3, r3, #8
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800c9e4:	f890 103d 	ldrb.w	r1, [r0, #61]	; 0x3d
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800c9e8:	6802      	ldr	r2, [r0, #0]
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800c9ea:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800c9ee:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800c9f2:	b2c9      	uxtb	r1, r1
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800c9f4:	9301      	str	r3, [sp, #4]
 800c9f6:	e005      	b.n	800ca04 <I2C_DMAAbort+0x38>
    count--;
 800c9f8:	9b01      	ldr	r3, [sp, #4]
 800c9fa:	3b01      	subs	r3, #1
 800c9fc:	9301      	str	r3, [sp, #4]
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800c9fe:	6813      	ldr	r3, [r2, #0]
 800ca00:	059b      	lsls	r3, r3, #22
 800ca02:	d506      	bpl.n	800ca12 <I2C_DMAAbort+0x46>
    if (count == 0U)
 800ca04:	9b01      	ldr	r3, [sp, #4]
 800ca06:	2b00      	cmp	r3, #0
 800ca08:	d1f6      	bne.n	800c9f8 <I2C_DMAAbort+0x2c>
      hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 800ca0a:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800ca0c:	f043 0320 	orr.w	r3, r3, #32
 800ca10:	6403      	str	r3, [r0, #64]	; 0x40
  if (hi2c->hdmatx != NULL)
 800ca12:	6b44      	ldr	r4, [r0, #52]	; 0x34
 800ca14:	b34c      	cbz	r4, 800ca6a <I2C_DMAAbort+0x9e>
  if (hi2c->hdmarx != NULL)
 800ca16:	6b83      	ldr	r3, [r0, #56]	; 0x38
    hi2c->hdmatx->XferCpltCallback = NULL;
 800ca18:	2500      	movs	r5, #0
 800ca1a:	63e5      	str	r5, [r4, #60]	; 0x3c
  if (hi2c->hdmarx != NULL)
 800ca1c:	b1f3      	cbz	r3, 800ca5c <I2C_DMAAbort+0x90>
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ca1e:	6816      	ldr	r6, [r2, #0]
    hi2c->hdmarx->XferCpltCallback = NULL;
 800ca20:	63dd      	str	r5, [r3, #60]	; 0x3c
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ca22:	f426 6680 	bic.w	r6, r6, #1024	; 0x400
 800ca26:	6016      	str	r6, [r2, #0]
  hi2c->XferCount = 0U;
 800ca28:	8545      	strh	r5, [r0, #42]	; 0x2a
    hi2c->hdmatx->XferAbortCallback = NULL;
 800ca2a:	6525      	str	r5, [r4, #80]	; 0x50
    hi2c->hdmarx->XferAbortCallback = NULL;
 800ca2c:	2400      	movs	r4, #0
 800ca2e:	651c      	str	r4, [r3, #80]	; 0x50
  __HAL_I2C_DISABLE(hi2c);
 800ca30:	6813      	ldr	r3, [r2, #0]
 800ca32:	f023 0301 	bic.w	r3, r3, #1
 800ca36:	6013      	str	r3, [r2, #0]
  if (hi2c->State == HAL_I2C_STATE_ABORT)
 800ca38:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800ca3c:	2b60      	cmp	r3, #96	; 0x60
 800ca3e:	d02a      	beq.n	800ca96 <I2C_DMAAbort+0xca>
    if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800ca40:	f001 0128 	and.w	r1, r1, #40	; 0x28
 800ca44:	2928      	cmp	r1, #40	; 0x28
 800ca46:	d019      	beq.n	800ca7c <I2C_DMAAbort+0xb0>
      hi2c->State = HAL_I2C_STATE_READY;
 800ca48:	2220      	movs	r2, #32
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800ca4a:	2300      	movs	r3, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800ca4c:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800ca50:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    HAL_I2C_ErrorCallback(hi2c);
 800ca54:	f7ff ffb6 	bl	800c9c4 <HAL_I2C_ErrorCallback>
}
 800ca58:	b002      	add	sp, #8
 800ca5a:	bd70      	pop	{r4, r5, r6, pc}
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ca5c:	6815      	ldr	r5, [r2, #0]
 800ca5e:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
 800ca62:	6015      	str	r5, [r2, #0]
  hi2c->XferCount = 0U;
 800ca64:	8543      	strh	r3, [r0, #42]	; 0x2a
    hi2c->hdmatx->XferAbortCallback = NULL;
 800ca66:	6523      	str	r3, [r4, #80]	; 0x50
  if (hi2c->hdmarx != NULL)
 800ca68:	e7e2      	b.n	800ca30 <I2C_DMAAbort+0x64>
  if (hi2c->hdmarx != NULL)
 800ca6a:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800ca6c:	b1f3      	cbz	r3, 800caac <I2C_DMAAbort+0xe0>
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ca6e:	6815      	ldr	r5, [r2, #0]
    hi2c->hdmarx->XferCpltCallback = NULL;
 800ca70:	63dc      	str	r4, [r3, #60]	; 0x3c
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ca72:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
 800ca76:	6015      	str	r5, [r2, #0]
  hi2c->XferCount = 0U;
 800ca78:	8544      	strh	r4, [r0, #42]	; 0x2a
  if (hi2c->hdmatx != NULL)
 800ca7a:	e7d7      	b.n	800ca2c <I2C_DMAAbort+0x60>
      __HAL_I2C_ENABLE(hi2c);
 800ca7c:	6813      	ldr	r3, [r2, #0]
 800ca7e:	f043 0301 	orr.w	r3, r3, #1
 800ca82:	6013      	str	r3, [r2, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ca84:	6813      	ldr	r3, [r2, #0]
      hi2c->PreviousState = I2C_STATE_NONE;
 800ca86:	2400      	movs	r4, #0
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ca88:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800ca8c:	6013      	str	r3, [r2, #0]
      hi2c->PreviousState = I2C_STATE_NONE;
 800ca8e:	6304      	str	r4, [r0, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800ca90:	f880 103d 	strb.w	r1, [r0, #61]	; 0x3d
 800ca94:	e7de      	b.n	800ca54 <I2C_DMAAbort+0x88>
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800ca96:	2300      	movs	r3, #0
    hi2c->State         = HAL_I2C_STATE_READY;
 800ca98:	2220      	movs	r2, #32
 800ca9a:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800ca9e:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    hi2c->ErrorCode     = HAL_I2C_ERROR_NONE;
 800caa2:	6403      	str	r3, [r0, #64]	; 0x40
    HAL_I2C_AbortCpltCallback(hi2c);
 800caa4:	f7ff ff90 	bl	800c9c8 <HAL_I2C_AbortCpltCallback>
}
 800caa8:	b002      	add	sp, #8
 800caaa:	bd70      	pop	{r4, r5, r6, pc}
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800caac:	6814      	ldr	r4, [r2, #0]
 800caae:	f424 6480 	bic.w	r4, r4, #1024	; 0x400
 800cab2:	6014      	str	r4, [r2, #0]
  hi2c->XferCount = 0U;
 800cab4:	8543      	strh	r3, [r0, #42]	; 0x2a
  if (hi2c->hdmatx != NULL)
 800cab6:	e7bb      	b.n	800ca30 <I2C_DMAAbort+0x64>
 800cab8:	2000007c 	.word	0x2000007c
 800cabc:	14f8b589 	.word	0x14f8b589

0800cac0 <I2C_ITError>:
{
 800cac0:	b510      	push	{r4, lr}
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800cac2:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  HAL_I2C_ModeTypeDef CurrentMode = hi2c->Mode;
 800cac6:	f890 303e 	ldrb.w	r3, [r0, #62]	; 0x3e
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800caca:	2b10      	cmp	r3, #16
{
 800cacc:	4604      	mov	r4, r0
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800cace:	b2d2      	uxtb	r2, r2
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800cad0:	d039      	beq.n	800cb46 <I2C_ITError+0x86>
 800cad2:	b2d9      	uxtb	r1, r3
 800cad4:	2940      	cmp	r1, #64	; 0x40
 800cad6:	d036      	beq.n	800cb46 <I2C_ITError+0x86>
  if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800cad8:	f002 0128 	and.w	r1, r2, #40	; 0x28
 800cadc:	2928      	cmp	r1, #40	; 0x28
 800cade:	d03d      	beq.n	800cb5c <I2C_ITError+0x9c>
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800cae0:	6823      	ldr	r3, [r4, #0]
    if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C_STATE_ABORT))
 800cae2:	6859      	ldr	r1, [r3, #4]
 800cae4:	0508      	lsls	r0, r1, #20
 800cae6:	d407      	bmi.n	800caf8 <I2C_ITError+0x38>
 800cae8:	2a60      	cmp	r2, #96	; 0x60
 800caea:	d005      	beq.n	800caf8 <I2C_ITError+0x38>
      hi2c->State = HAL_I2C_STATE_READY;
 800caec:	2120      	movs	r1, #32
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800caee:	2200      	movs	r2, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800caf0:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800caf4:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
    hi2c->PreviousState = I2C_STATE_NONE;
 800caf8:	2200      	movs	r2, #0
 800cafa:	6322      	str	r2, [r4, #48]	; 0x30
  if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800cafc:	685a      	ldr	r2, [r3, #4]
 800cafe:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800cb02:	d134      	bne.n	800cb6e <I2C_ITError+0xae>
  else if (hi2c->State == HAL_I2C_STATE_ABORT)
 800cb04:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 800cb08:	2960      	cmp	r1, #96	; 0x60
 800cb0a:	d075      	beq.n	800cbf8 <I2C_ITError+0x138>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800cb0c:	695a      	ldr	r2, [r3, #20]
 800cb0e:	0650      	lsls	r0, r2, #25
 800cb10:	d505      	bpl.n	800cb1e <I2C_ITError+0x5e>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800cb12:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800cb14:	691b      	ldr	r3, [r3, #16]
 800cb16:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 800cb18:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800cb1a:	3301      	adds	r3, #1
 800cb1c:	6263      	str	r3, [r4, #36]	; 0x24
    HAL_I2C_ErrorCallback(hi2c);
 800cb1e:	4620      	mov	r0, r4
 800cb20:	f7ff ff50 	bl	800c9c4 <HAL_I2C_ErrorCallback>
  CurrentError = hi2c->ErrorCode;
 800cb24:	6c23      	ldr	r3, [r4, #64]	; 0x40
  if (((CurrentError & HAL_I2C_ERROR_BERR) == HAL_I2C_ERROR_BERR) || \
 800cb26:	0719      	lsls	r1, r3, #28
 800cb28:	d004      	beq.n	800cb34 <I2C_ITError+0x74>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800cb2a:	6822      	ldr	r2, [r4, #0]
 800cb2c:	6853      	ldr	r3, [r2, #4]
 800cb2e:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800cb32:	6053      	str	r3, [r2, #4]
  CurrentState = hi2c->State;
 800cb34:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
  if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_LISTEN))
 800cb38:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800cb3a:	0752      	lsls	r2, r2, #29
  CurrentState = hi2c->State;
 800cb3c:	b2db      	uxtb	r3, r3
  if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_LISTEN))
 800cb3e:	d501      	bpl.n	800cb44 <I2C_ITError+0x84>
 800cb40:	2b28      	cmp	r3, #40	; 0x28
 800cb42:	d02f      	beq.n	800cba4 <I2C_ITError+0xe4>
}
 800cb44:	bd10      	pop	{r4, pc}
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800cb46:	2a22      	cmp	r2, #34	; 0x22
 800cb48:	d1c6      	bne.n	800cad8 <I2C_ITError+0x18>
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800cb4a:	6823      	ldr	r3, [r4, #0]
 800cb4c:	681a      	ldr	r2, [r3, #0]
 800cb4e:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800cb52:	601a      	str	r2, [r3, #0]
    if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C_STATE_ABORT))
 800cb54:	685a      	ldr	r2, [r3, #4]
 800cb56:	0512      	lsls	r2, r2, #20
 800cb58:	d5c8      	bpl.n	800caec <I2C_ITError+0x2c>
 800cb5a:	e7cd      	b.n	800caf8 <I2C_ITError+0x38>
    hi2c->PreviousState = I2C_STATE_NONE;
 800cb5c:	2300      	movs	r3, #0
 800cb5e:	6323      	str	r3, [r4, #48]	; 0x30
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800cb60:	6823      	ldr	r3, [r4, #0]
    hi2c->State = HAL_I2C_STATE_LISTEN;
 800cb62:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
  if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800cb66:	685a      	ldr	r2, [r3, #4]
 800cb68:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800cb6c:	d0ca      	beq.n	800cb04 <I2C_ITError+0x44>
    hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
 800cb6e:	685a      	ldr	r2, [r3, #4]
    if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
 800cb70:	6b60      	ldr	r0, [r4, #52]	; 0x34
    hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
 800cb72:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800cb76:	605a      	str	r2, [r3, #4]
    if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
 800cb78:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 800cb7c:	2b01      	cmp	r3, #1
 800cb7e:	d01e      	beq.n	800cbbe <I2C_ITError+0xfe>
      hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 800cb80:	4b28      	ldr	r3, [pc, #160]	; (800cc24 <I2C_ITError+0x164>)
 800cb82:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 800cb84:	f7fe fd90 	bl	800b6a8 <HAL_DMA_Abort_IT>
 800cb88:	2800      	cmp	r0, #0
 800cb8a:	d0cb      	beq.n	800cb24 <I2C_ITError+0x64>
        __HAL_I2C_DISABLE(hi2c);
 800cb8c:	6822      	ldr	r2, [r4, #0]
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800cb8e:	6b60      	ldr	r0, [r4, #52]	; 0x34
        __HAL_I2C_DISABLE(hi2c);
 800cb90:	6813      	ldr	r3, [r2, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800cb92:	2120      	movs	r1, #32
        __HAL_I2C_DISABLE(hi2c);
 800cb94:	f023 0301 	bic.w	r3, r3, #1
 800cb98:	6013      	str	r3, [r2, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800cb9a:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800cb9e:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800cba0:	4798      	blx	r3
 800cba2:	e7bf      	b.n	800cb24 <I2C_ITError+0x64>
    hi2c->PreviousState = I2C_STATE_NONE;
 800cba4:	2300      	movs	r3, #0
    hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
 800cba6:	4920      	ldr	r1, [pc, #128]	; (800cc28 <I2C_ITError+0x168>)
 800cba8:	62e1      	str	r1, [r4, #44]	; 0x2c
    hi2c->State         = HAL_I2C_STATE_READY;
 800cbaa:	2220      	movs	r2, #32
    hi2c->PreviousState = I2C_STATE_NONE;
 800cbac:	6323      	str	r3, [r4, #48]	; 0x30
    HAL_I2C_ListenCpltCallback(hi2c);
 800cbae:	4620      	mov	r0, r4
    hi2c->State         = HAL_I2C_STATE_READY;
 800cbb0:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800cbb4:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    HAL_I2C_ListenCpltCallback(hi2c);
 800cbb8:	f7ff fea0 	bl	800c8fc <HAL_I2C_ListenCpltCallback>
}
 800cbbc:	bd10      	pop	{r4, pc}
      hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 800cbbe:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800cbc0:	4b18      	ldr	r3, [pc, #96]	; (800cc24 <I2C_ITError+0x164>)
 800cbc2:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 800cbc4:	f7fe fd70 	bl	800b6a8 <HAL_DMA_Abort_IT>
 800cbc8:	2800      	cmp	r0, #0
 800cbca:	d0ab      	beq.n	800cb24 <I2C_ITError+0x64>
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800cbcc:	6823      	ldr	r3, [r4, #0]
 800cbce:	695a      	ldr	r2, [r3, #20]
 800cbd0:	0651      	lsls	r1, r2, #25
 800cbd2:	d506      	bpl.n	800cbe2 <I2C_ITError+0x122>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800cbd4:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800cbd6:	691b      	ldr	r3, [r3, #16]
 800cbd8:	7013      	strb	r3, [r2, #0]
          hi2c->pBuffPtr++;
 800cbda:	6a62      	ldr	r2, [r4, #36]	; 0x24
        __HAL_I2C_DISABLE(hi2c);
 800cbdc:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 800cbde:	3201      	adds	r2, #1
 800cbe0:	6262      	str	r2, [r4, #36]	; 0x24
        __HAL_I2C_DISABLE(hi2c);
 800cbe2:	681a      	ldr	r2, [r3, #0]
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800cbe4:	6ba0      	ldr	r0, [r4, #56]	; 0x38
        __HAL_I2C_DISABLE(hi2c);
 800cbe6:	f022 0201 	bic.w	r2, r2, #1
        hi2c->State = HAL_I2C_STATE_READY;
 800cbea:	2120      	movs	r1, #32
        __HAL_I2C_DISABLE(hi2c);
 800cbec:	601a      	str	r2, [r3, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800cbee:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800cbf2:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800cbf4:	4798      	blx	r3
 800cbf6:	e795      	b.n	800cb24 <I2C_ITError+0x64>
    hi2c->State = HAL_I2C_STATE_READY;
 800cbf8:	2120      	movs	r1, #32
 800cbfa:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800cbfe:	6422      	str	r2, [r4, #64]	; 0x40
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800cc00:	695a      	ldr	r2, [r3, #20]
 800cc02:	0652      	lsls	r2, r2, #25
 800cc04:	d506      	bpl.n	800cc14 <I2C_ITError+0x154>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800cc06:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800cc08:	691b      	ldr	r3, [r3, #16]
 800cc0a:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 800cc0c:	6a62      	ldr	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 800cc0e:	6823      	ldr	r3, [r4, #0]
      hi2c->pBuffPtr++;
 800cc10:	3201      	adds	r2, #1
 800cc12:	6262      	str	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 800cc14:	681a      	ldr	r2, [r3, #0]
 800cc16:	f022 0201 	bic.w	r2, r2, #1
    HAL_I2C_AbortCpltCallback(hi2c);
 800cc1a:	4620      	mov	r0, r4
    __HAL_I2C_DISABLE(hi2c);
 800cc1c:	601a      	str	r2, [r3, #0]
    HAL_I2C_AbortCpltCallback(hi2c);
 800cc1e:	f7ff fed3 	bl	800c9c8 <HAL_I2C_AbortCpltCallback>
 800cc22:	e77f      	b.n	800cb24 <I2C_ITError+0x64>
 800cc24:	0800c9cd 	.word	0x0800c9cd
 800cc28:	ffff0000 	.word	0xffff0000

0800cc2c <HAL_I2C_EV_IRQHandler>:
{
 800cc2c:	b570      	push	{r4, r5, r6, lr}
  uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
 800cc2e:	6803      	ldr	r3, [r0, #0]
{
 800cc30:	4604      	mov	r4, r0
  uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
 800cc32:	6858      	ldr	r0, [r3, #4]
  uint32_t CurrentXferOptions       = hi2c->XferOptions;
 800cc34:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800cc36:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800cc3a:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
  if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
 800cc3e:	2910      	cmp	r1, #16
{
 800cc40:	b08e      	sub	sp, #56	; 0x38
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800cc42:	b2d2      	uxtb	r2, r2
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800cc44:	fa5f fc81 	uxtb.w	ip, r1
  if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
 800cc48:	d022      	beq.n	800cc90 <HAL_I2C_EV_IRQHandler+0x64>
 800cc4a:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 800cc4e:	d01f      	beq.n	800cc90 <HAL_I2C_EV_IRQHandler+0x64>
    if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800cc50:	6c21      	ldr	r1, [r4, #64]	; 0x40
 800cc52:	2900      	cmp	r1, #0
 800cc54:	f000 8094 	beq.w	800cd80 <HAL_I2C_EV_IRQHandler+0x154>
      sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800cc58:	6959      	ldr	r1, [r3, #20]
  uint32_t sr2itflags               = 0U;
 800cc5a:	2500      	movs	r5, #0
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800cc5c:	f011 0602 	ands.w	r6, r1, #2
 800cc60:	d059      	beq.n	800cd16 <HAL_I2C_EV_IRQHandler+0xea>
 800cc62:	0586      	lsls	r6, r0, #22
 800cc64:	d559      	bpl.n	800cd1a <HAL_I2C_EV_IRQHandler+0xee>
      if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800cc66:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800cc68:	b102      	cbz	r2, 800cc6c <HAL_I2C_EV_IRQHandler+0x40>
        sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800cc6a:	699d      	ldr	r5, [r3, #24]
  if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800cc6c:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800cc70:	f002 0228 	and.w	r2, r2, #40	; 0x28
 800cc74:	2a28      	cmp	r2, #40	; 0x28
 800cc76:	f000 821e 	beq.w	800d0b6 <HAL_I2C_EV_IRQHandler+0x48a>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800cc7a:	2200      	movs	r2, #0
 800cc7c:	920c      	str	r2, [sp, #48]	; 0x30
 800cc7e:	6959      	ldr	r1, [r3, #20]
 800cc80:	910c      	str	r1, [sp, #48]	; 0x30
 800cc82:	699b      	ldr	r3, [r3, #24]
 800cc84:	930c      	str	r3, [sp, #48]	; 0x30
 800cc86:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    __HAL_UNLOCK(hi2c);
 800cc88:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
}
 800cc8c:	b00e      	add	sp, #56	; 0x38
 800cc8e:	bd70      	pop	{r4, r5, r6, pc}
    sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800cc90:	699e      	ldr	r6, [r3, #24]
    sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800cc92:	6959      	ldr	r1, [r3, #20]
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) == RESET) && (IS_I2C_TRANSFER_OTHER_OPTIONS_REQUEST(CurrentXferOptions) == 1U))
 800cc94:	f011 0f01 	tst.w	r1, #1
 800cc98:	d11a      	bne.n	800ccd0 <HAL_I2C_EV_IRQHandler+0xa4>
 800cc9a:	f5b5 0f2a 	cmp.w	r5, #11141120	; 0xaa0000
 800cc9e:	d0f5      	beq.n	800cc8c <HAL_I2C_EV_IRQHandler+0x60>
 800cca0:	f1b5 4f2a 	cmp.w	r5, #2852126720	; 0xaa000000
 800cca4:	d0f2      	beq.n	800cc8c <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800cca6:	070d      	lsls	r5, r1, #28
 800cca8:	d56d      	bpl.n	800cd86 <HAL_I2C_EV_IRQHandler+0x15a>
 800ccaa:	0585      	lsls	r5, r0, #22
 800ccac:	f140 8083 	bpl.w	800cdb6 <HAL_I2C_EV_IRQHandler+0x18a>
  hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 800ccb0:	6c62      	ldr	r2, [r4, #68]	; 0x44
  if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800ccb2:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800ccb4:	b2d2      	uxtb	r2, r2
  hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 800ccb6:	611a      	str	r2, [r3, #16]
  if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800ccb8:	2900      	cmp	r1, #0
 800ccba:	f000 81e3 	beq.w	800d084 <HAL_I2C_EV_IRQHandler+0x458>
 800ccbe:	6bca      	ldr	r2, [r1, #60]	; 0x3c
 800ccc0:	2a00      	cmp	r2, #0
 800ccc2:	f000 81df 	beq.w	800d084 <HAL_I2C_EV_IRQHandler+0x458>
    SET_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800ccc6:	685a      	ldr	r2, [r3, #4]
 800ccc8:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800cccc:	605a      	str	r2, [r3, #4]
 800ccce:	e7dd      	b.n	800cc8c <HAL_I2C_EV_IRQHandler+0x60>
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800ccd0:	0585      	lsls	r5, r0, #22
 800ccd2:	d56e      	bpl.n	800cdb2 <HAL_I2C_EV_IRQHandler+0x186>
static void I2C_ConvertOtherXferOptions(I2C_HandleTypeDef *hi2c)
{
  /* if user set XferOptions to I2C_OTHER_FRAME            */
  /* it request implicitly to generate a restart condition */
  /* set XferOptions to I2C_FIRST_FRAME                    */
  if (hi2c->XferOptions == I2C_OTHER_FRAME)
 800ccd4:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800ccd6:	f5b2 0f2a 	cmp.w	r2, #11141120	; 0xaa0000
 800ccda:	f000 81e9 	beq.w	800d0b0 <HAL_I2C_EV_IRQHandler+0x484>
  }
  /* else if user set XferOptions to I2C_OTHER_AND_LAST_FRAME */
  /* it request implicitly to generate a restart condition    */
  /* then generate a stop condition at the end of transfer    */
  /* set XferOptions to I2C_FIRST_AND_LAST_FRAME              */
  else if (hi2c->XferOptions == I2C_OTHER_AND_LAST_FRAME)
 800ccde:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800cce0:	f1b2 4f2a 	cmp.w	r2, #2852126720	; 0xaa000000
  {
    hi2c->XferOptions = I2C_FIRST_AND_LAST_FRAME;
 800cce4:	bf04      	itt	eq
 800cce6:	2208      	moveq	r2, #8
 800cce8:	62e2      	streq	r2, [r4, #44]	; 0x2c
  if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800ccea:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 800ccee:	2a40      	cmp	r2, #64	; 0x40
 800ccf0:	f000 81d7 	beq.w	800d0a2 <HAL_I2C_EV_IRQHandler+0x476>
    if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 800ccf4:	6922      	ldr	r2, [r4, #16]
 800ccf6:	f5b2 4f80 	cmp.w	r2, #16384	; 0x4000
 800ccfa:	f000 81b2 	beq.w	800d062 <HAL_I2C_EV_IRQHandler+0x436>
      if (hi2c->EventCount == 0U)
 800ccfe:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800cd00:	2a00      	cmp	r2, #0
 800cd02:	f040 81ef 	bne.w	800d0e4 <HAL_I2C_EV_IRQHandler+0x4b8>
        hi2c->Instance->DR = I2C_10BIT_HEADER_WRITE(hi2c->Devaddress);
 800cd06:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800cd08:	11d2      	asrs	r2, r2, #7
 800cd0a:	f002 0206 	and.w	r2, r2, #6
 800cd0e:	f042 02f0 	orr.w	r2, r2, #240	; 0xf0
 800cd12:	611a      	str	r2, [r3, #16]
 800cd14:	e7ba      	b.n	800cc8c <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800cd16:	06cd      	lsls	r5, r1, #27
 800cd18:	d47c      	bmi.n	800ce14 <HAL_I2C_EV_IRQHandler+0x1e8>
    else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
 800cd1a:	f002 02f7 	and.w	r2, r2, #247	; 0xf7
 800cd1e:	2a21      	cmp	r2, #33	; 0x21
 800cd20:	f000 80f5 	beq.w	800cf0e <HAL_I2C_EV_IRQHandler+0x2e2>
      if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800cd24:	064e      	lsls	r6, r1, #25
 800cd26:	f140 8132 	bpl.w	800cf8e <HAL_I2C_EV_IRQHandler+0x362>
 800cd2a:	0545      	lsls	r5, r0, #21
 800cd2c:	f140 812f 	bpl.w	800cf8e <HAL_I2C_EV_IRQHandler+0x362>
 800cd30:	0749      	lsls	r1, r1, #29
 800cd32:	f100 812f 	bmi.w	800cf94 <HAL_I2C_EV_IRQHandler+0x368>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800cd36:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
  if (hi2c->XferCount != 0U)
 800cd3a:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800cd3c:	b292      	uxth	r2, r2
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800cd3e:	b2c9      	uxtb	r1, r1
  if (hi2c->XferCount != 0U)
 800cd40:	2a00      	cmp	r2, #0
 800cd42:	d0a3      	beq.n	800cc8c <HAL_I2C_EV_IRQHandler+0x60>
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800cd44:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800cd46:	691b      	ldr	r3, [r3, #16]
 800cd48:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800cd4a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800cd4c:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800cd4e:	3b01      	subs	r3, #1
 800cd50:	b29b      	uxth	r3, r3
 800cd52:	8563      	strh	r3, [r4, #42]	; 0x2a
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800cd54:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800cd56:	3201      	adds	r2, #1
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800cd58:	b29b      	uxth	r3, r3
    hi2c->pBuffPtr++;
 800cd5a:	6262      	str	r2, [r4, #36]	; 0x24
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800cd5c:	2b00      	cmp	r3, #0
 800cd5e:	d195      	bne.n	800cc8c <HAL_I2C_EV_IRQHandler+0x60>
 800cd60:	292a      	cmp	r1, #42	; 0x2a
 800cd62:	d193      	bne.n	800cc8c <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800cd64:	6822      	ldr	r2, [r4, #0]
 800cd66:	6853      	ldr	r3, [r2, #4]
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 800cd68:	2522      	movs	r5, #34	; 0x22
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800cd6a:	2128      	movs	r1, #40	; 0x28
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800cd6c:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800cd70:	6053      	str	r3, [r2, #4]
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800cd72:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 800cd74:	6325      	str	r5, [r4, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800cd76:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800cd7a:	f7ff fdbb 	bl	800c8f4 <HAL_I2C_SlaveRxCpltCallback>
 800cd7e:	e785      	b.n	800cc8c <HAL_I2C_EV_IRQHandler+0x60>
      sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800cd80:	699d      	ldr	r5, [r3, #24]
      sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800cd82:	6959      	ldr	r1, [r3, #20]
 800cd84:	e76a      	b.n	800cc5c <HAL_I2C_EV_IRQHandler+0x30>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800cd86:	078d      	lsls	r5, r1, #30
 800cd88:	d515      	bpl.n	800cdb6 <HAL_I2C_EV_IRQHandler+0x18a>
 800cd8a:	0585      	lsls	r5, r0, #22
 800cd8c:	d513      	bpl.n	800cdb6 <HAL_I2C_EV_IRQHandler+0x18a>
  HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 800cd8e:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
  uint32_t CurrentXferOptions           = hi2c->XferOptions;
 800cd92:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  uint32_t Prev_State                   = hi2c->PreviousState;
 800cd94:	6b25      	ldr	r5, [r4, #48]	; 0x30
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800cd96:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 800cd9a:	2922      	cmp	r1, #34	; 0x22
  HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 800cd9c:	b2d2      	uxtb	r2, r2
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800cd9e:	f000 81b3 	beq.w	800d108 <HAL_I2C_EV_IRQHandler+0x4dc>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800cda2:	2200      	movs	r2, #0
 800cda4:	920a      	str	r2, [sp, #40]	; 0x28
 800cda6:	695a      	ldr	r2, [r3, #20]
 800cda8:	920a      	str	r2, [sp, #40]	; 0x28
 800cdaa:	699b      	ldr	r3, [r3, #24]
 800cdac:	930a      	str	r3, [sp, #40]	; 0x28
 800cdae:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800cdb0:	e76c      	b.n	800cc8c <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800cdb2:	070d      	lsls	r5, r1, #28
 800cdb4:	d5e7      	bpl.n	800cd86 <HAL_I2C_EV_IRQHandler+0x15a>
    else if (I2C_CHECK_FLAG(sr2itflags, I2C_FLAG_TRA) != RESET)
 800cdb6:	0776      	lsls	r6, r6, #29
 800cdb8:	f140 80f5 	bpl.w	800cfa6 <HAL_I2C_EV_IRQHandler+0x37a>
      if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
 800cdbc:	685d      	ldr	r5, [r3, #4]
 800cdbe:	052d      	lsls	r5, r5, #20
 800cdc0:	f53f af64 	bmi.w	800cc8c <HAL_I2C_EV_IRQHandler+0x60>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800cdc4:	060e      	lsls	r6, r1, #24
 800cdc6:	f140 8115 	bpl.w	800cff4 <HAL_I2C_EV_IRQHandler+0x3c8>
 800cdca:	0545      	lsls	r5, r0, #21
 800cdcc:	f140 8112 	bpl.w	800cff4 <HAL_I2C_EV_IRQHandler+0x3c8>
 800cdd0:	074e      	lsls	r6, r1, #29
 800cdd2:	f100 8112 	bmi.w	800cffa <HAL_I2C_EV_IRQHandler+0x3ce>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800cdd6:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
  if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800cdda:	8d20      	ldrh	r0, [r4, #40]	; 0x28
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800cddc:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
  uint32_t CurrentXferOptions       = hi2c->XferOptions;
 800cde0:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800cde2:	b2d2      	uxtb	r2, r2
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800cde4:	b2c9      	uxtb	r1, r1
  if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800cde6:	2800      	cmp	r0, #0
 800cde8:	f040 8235 	bne.w	800d256 <HAL_I2C_EV_IRQHandler+0x62a>
 800cdec:	2a21      	cmp	r2, #33	; 0x21
 800cdee:	f000 8347 	beq.w	800d480 <HAL_I2C_EV_IRQHandler+0x854>
  else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
 800cdf2:	2940      	cmp	r1, #64	; 0x40
 800cdf4:	f47f af4a 	bne.w	800cc8c <HAL_I2C_EV_IRQHandler+0x60>
           ((CurrentMode == HAL_I2C_MODE_MEM) && (CurrentState == HAL_I2C_STATE_BUSY_RX)))
 800cdf8:	2a22      	cmp	r2, #34	; 0x22
 800cdfa:	f47f af47 	bne.w	800cc8c <HAL_I2C_EV_IRQHandler+0x60>
    if (hi2c->XferCount == 0U)
 800cdfe:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800ce00:	b292      	uxth	r2, r2
 800ce02:	2a00      	cmp	r2, #0
 800ce04:	f000 8268 	beq.w	800d2d8 <HAL_I2C_EV_IRQHandler+0x6ac>
      if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800ce08:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 800ce0c:	2a40      	cmp	r2, #64	; 0x40
 800ce0e:	f040 80b4 	bne.w	800cf7a <HAL_I2C_EV_IRQHandler+0x34e>
 800ce12:	e0fc      	b.n	800d00e <HAL_I2C_EV_IRQHandler+0x3e2>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800ce14:	0585      	lsls	r5, r0, #22
 800ce16:	d580      	bpl.n	800cd1a <HAL_I2C_EV_IRQHandler+0xee>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800ce18:	f894 503d 	ldrb.w	r5, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800ce1c:	685a      	ldr	r2, [r3, #4]
 800ce1e:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800ce22:	605a      	str	r2, [r3, #4]
  __HAL_I2C_CLEAR_STOPFLAG(hi2c);
 800ce24:	960d      	str	r6, [sp, #52]	; 0x34
 800ce26:	695a      	ldr	r2, [r3, #20]
 800ce28:	920d      	str	r2, [sp, #52]	; 0x34
 800ce2a:	681a      	ldr	r2, [r3, #0]
 800ce2c:	f042 0201 	orr.w	r2, r2, #1
 800ce30:	601a      	str	r2, [r3, #0]
 800ce32:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ce34:	681a      	ldr	r2, [r3, #0]
 800ce36:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800ce3a:	601a      	str	r2, [r3, #0]
  if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800ce3c:	685a      	ldr	r2, [r3, #4]
 800ce3e:	0511      	lsls	r1, r2, #20
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800ce40:	b2ed      	uxtb	r5, r5
  if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800ce42:	d521      	bpl.n	800ce88 <HAL_I2C_EV_IRQHandler+0x25c>
    if ((CurrentState == HAL_I2C_STATE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800ce44:	f005 02f7 	and.w	r2, r5, #247	; 0xf7
 800ce48:	2a22      	cmp	r2, #34	; 0x22
 800ce4a:	f000 817a 	beq.w	800d142 <HAL_I2C_EV_IRQHandler+0x516>
      hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmatx));
 800ce4e:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800ce50:	6802      	ldr	r2, [r0, #0]
 800ce52:	6852      	ldr	r2, [r2, #4]
 800ce54:	b292      	uxth	r2, r2
 800ce56:	8562      	strh	r2, [r4, #42]	; 0x2a
      if (hi2c->XferCount != 0U)
 800ce58:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800ce5a:	b292      	uxth	r2, r2
 800ce5c:	b11a      	cbz	r2, 800ce66 <HAL_I2C_EV_IRQHandler+0x23a>
        hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800ce5e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800ce60:	f042 0204 	orr.w	r2, r2, #4
 800ce64:	6422      	str	r2, [r4, #64]	; 0x40
      CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800ce66:	685a      	ldr	r2, [r3, #4]
 800ce68:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800ce6c:	605a      	str	r2, [r3, #4]
      if (HAL_DMA_GetState(hi2c->hdmatx) != HAL_DMA_STATE_READY)
 800ce6e:	f7fe fc2d 	bl	800b6cc <HAL_DMA_GetState>
 800ce72:	2801      	cmp	r0, #1
 800ce74:	d008      	beq.n	800ce88 <HAL_I2C_EV_IRQHandler+0x25c>
        hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 800ce76:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800ce78:	4b99      	ldr	r3, [pc, #612]	; (800d0e0 <HAL_I2C_EV_IRQHandler+0x4b4>)
 800ce7a:	6503      	str	r3, [r0, #80]	; 0x50
        if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 800ce7c:	f7fe fc14 	bl	800b6a8 <HAL_DMA_Abort_IT>
 800ce80:	b110      	cbz	r0, 800ce88 <HAL_I2C_EV_IRQHandler+0x25c>
          hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800ce82:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800ce84:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800ce86:	4798      	blx	r3
  if (hi2c->XferCount != 0U)
 800ce88:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800ce8a:	b29b      	uxth	r3, r3
 800ce8c:	b313      	cbz	r3, 800ced4 <HAL_I2C_EV_IRQHandler+0x2a8>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800ce8e:	6823      	ldr	r3, [r4, #0]
 800ce90:	695a      	ldr	r2, [r3, #20]
 800ce92:	0752      	lsls	r2, r2, #29
 800ce94:	d50a      	bpl.n	800ceac <HAL_I2C_EV_IRQHandler+0x280>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ce96:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800ce98:	691b      	ldr	r3, [r3, #16]
 800ce9a:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800ce9c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800ce9e:	6a63      	ldr	r3, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800cea0:	3a01      	subs	r2, #1
      hi2c->pBuffPtr++;
 800cea2:	1c59      	adds	r1, r3, #1
      hi2c->XferCount--;
 800cea4:	b292      	uxth	r2, r2
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800cea6:	6823      	ldr	r3, [r4, #0]
      hi2c->pBuffPtr++;
 800cea8:	6261      	str	r1, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800ceaa:	8562      	strh	r2, [r4, #42]	; 0x2a
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800ceac:	695a      	ldr	r2, [r3, #20]
 800ceae:	0656      	lsls	r6, r2, #25
 800ceb0:	d509      	bpl.n	800cec6 <HAL_I2C_EV_IRQHandler+0x29a>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ceb2:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800ceb4:	691b      	ldr	r3, [r3, #16]
 800ceb6:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800ceb8:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800ceba:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800cebc:	3b01      	subs	r3, #1
      hi2c->pBuffPtr++;
 800cebe:	3201      	adds	r2, #1
      hi2c->XferCount--;
 800cec0:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
 800cec2:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800cec4:	8563      	strh	r3, [r4, #42]	; 0x2a
    if (hi2c->XferCount != 0U)
 800cec6:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800cec8:	b29b      	uxth	r3, r3
 800ceca:	b11b      	cbz	r3, 800ced4 <HAL_I2C_EV_IRQHandler+0x2a8>
      hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800cecc:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800cece:	f043 0304 	orr.w	r3, r3, #4
 800ced2:	6423      	str	r3, [r4, #64]	; 0x40
  if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800ced4:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800ced6:	2b00      	cmp	r3, #0
 800ced8:	f040 80dd 	bne.w	800d096 <HAL_I2C_EV_IRQHandler+0x46a>
    if (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN)
 800cedc:	2d2a      	cmp	r5, #42	; 0x2a
 800cede:	f000 8151 	beq.w	800d184 <HAL_I2C_EV_IRQHandler+0x558>
    if (hi2c->State == HAL_I2C_STATE_LISTEN)
 800cee2:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800cee6:	2b28      	cmp	r3, #40	; 0x28
 800cee8:	f000 8154 	beq.w	800d194 <HAL_I2C_EV_IRQHandler+0x568>
      if ((hi2c->PreviousState  == I2C_STATE_SLAVE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800ceec:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800ceee:	2b22      	cmp	r3, #34	; 0x22
 800cef0:	d002      	beq.n	800cef8 <HAL_I2C_EV_IRQHandler+0x2cc>
 800cef2:	2d22      	cmp	r5, #34	; 0x22
 800cef4:	f47f aeca 	bne.w	800cc8c <HAL_I2C_EV_IRQHandler+0x60>
        hi2c->PreviousState = I2C_STATE_NONE;
 800cef8:	2300      	movs	r3, #0
        hi2c->State = HAL_I2C_STATE_READY;
 800cefa:	2220      	movs	r2, #32
        hi2c->PreviousState = I2C_STATE_NONE;
 800cefc:	6323      	str	r3, [r4, #48]	; 0x30
        HAL_I2C_SlaveRxCpltCallback(hi2c);
 800cefe:	4620      	mov	r0, r4
        hi2c->State = HAL_I2C_STATE_READY;
 800cf00:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800cf04:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        HAL_I2C_SlaveRxCpltCallback(hi2c);
 800cf08:	f7ff fcf4 	bl	800c8f4 <HAL_I2C_SlaveRxCpltCallback>
 800cf0c:	e6be      	b.n	800cc8c <HAL_I2C_EV_IRQHandler+0x60>
      if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800cf0e:	060d      	lsls	r5, r1, #24
 800cf10:	d528      	bpl.n	800cf64 <HAL_I2C_EV_IRQHandler+0x338>
 800cf12:	0546      	lsls	r6, r0, #21
 800cf14:	d526      	bpl.n	800cf64 <HAL_I2C_EV_IRQHandler+0x338>
 800cf16:	074d      	lsls	r5, r1, #29
 800cf18:	d427      	bmi.n	800cf6a <HAL_I2C_EV_IRQHandler+0x33e>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800cf1a:	f894 003d 	ldrb.w	r0, [r4, #61]	; 0x3d
  if (hi2c->XferCount != 0U)
 800cf1e:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800cf20:	b289      	uxth	r1, r1
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800cf22:	b2c0      	uxtb	r0, r0
  if (hi2c->XferCount != 0U)
 800cf24:	2900      	cmp	r1, #0
 800cf26:	f43f aeb1 	beq.w	800cc8c <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->Instance->DR = *hi2c->pBuffPtr;
 800cf2a:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800cf2c:	f811 5b01 	ldrb.w	r5, [r1], #1
 800cf30:	611d      	str	r5, [r3, #16]
    hi2c->pBuffPtr++;
 800cf32:	6261      	str	r1, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800cf34:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800cf36:	3901      	subs	r1, #1
 800cf38:	b289      	uxth	r1, r1
 800cf3a:	8561      	strh	r1, [r4, #42]	; 0x2a
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
 800cf3c:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800cf3e:	b289      	uxth	r1, r1
 800cf40:	2900      	cmp	r1, #0
 800cf42:	f47f aea3 	bne.w	800cc8c <HAL_I2C_EV_IRQHandler+0x60>
 800cf46:	2829      	cmp	r0, #41	; 0x29
 800cf48:	f47f aea0 	bne.w	800cc8c <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800cf4c:	6859      	ldr	r1, [r3, #4]
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800cf4e:	2528      	movs	r5, #40	; 0x28
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800cf50:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800cf54:	6059      	str	r1, [r3, #4]
      HAL_I2C_SlaveTxCpltCallback(hi2c);
 800cf56:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
 800cf58:	6322      	str	r2, [r4, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800cf5a:	f884 503d 	strb.w	r5, [r4, #61]	; 0x3d
      HAL_I2C_SlaveTxCpltCallback(hi2c);
 800cf5e:	f7ff fcc7 	bl	800c8f0 <HAL_I2C_SlaveTxCpltCallback>
 800cf62:	e693      	b.n	800cc8c <HAL_I2C_EV_IRQHandler+0x60>
      else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800cf64:	0749      	lsls	r1, r1, #29
 800cf66:	f57f ae91 	bpl.w	800cc8c <HAL_I2C_EV_IRQHandler+0x60>
 800cf6a:	0582      	lsls	r2, r0, #22
 800cf6c:	f57f ae8e 	bpl.w	800cc8c <HAL_I2C_EV_IRQHandler+0x60>
  if (hi2c->XferCount != 0U)
 800cf70:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800cf72:	b292      	uxth	r2, r2
 800cf74:	2a00      	cmp	r2, #0
 800cf76:	f43f ae89 	beq.w	800cc8c <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->Instance->DR = *hi2c->pBuffPtr;
 800cf7a:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800cf7c:	f812 1b01 	ldrb.w	r1, [r2], #1
 800cf80:	6119      	str	r1, [r3, #16]
    hi2c->XferCount--;
 800cf82:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800cf84:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800cf86:	3b01      	subs	r3, #1
 800cf88:	b29b      	uxth	r3, r3
 800cf8a:	8563      	strh	r3, [r4, #42]	; 0x2a
 800cf8c:	e67e      	b.n	800cc8c <HAL_I2C_EV_IRQHandler+0x60>
      else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800cf8e:	074a      	lsls	r2, r1, #29
 800cf90:	f57f ae7c 	bpl.w	800cc8c <HAL_I2C_EV_IRQHandler+0x60>
 800cf94:	0586      	lsls	r6, r0, #22
 800cf96:	f57f ae79 	bpl.w	800cc8c <HAL_I2C_EV_IRQHandler+0x60>
  if (hi2c->XferCount != 0U)
 800cf9a:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800cf9c:	b292      	uxth	r2, r2
 800cf9e:	2a00      	cmp	r2, #0
 800cfa0:	f43f ae74 	beq.w	800cc8c <HAL_I2C_EV_IRQHandler+0x60>
 800cfa4:	e01b      	b.n	800cfde <HAL_I2C_EV_IRQHandler+0x3b2>
      if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
 800cfa6:	685a      	ldr	r2, [r3, #4]
 800cfa8:	0512      	lsls	r2, r2, #20
 800cfaa:	f53f ae6f 	bmi.w	800cc8c <HAL_I2C_EV_IRQHandler+0x60>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800cfae:	064e      	lsls	r6, r1, #25
 800cfb0:	d433      	bmi.n	800d01a <HAL_I2C_EV_IRQHandler+0x3ee>
        else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800cfb2:	0749      	lsls	r1, r1, #29
 800cfb4:	f57f ae6a 	bpl.w	800cc8c <HAL_I2C_EV_IRQHandler+0x60>
 800cfb8:	0582      	lsls	r2, r0, #22
 800cfba:	f57f ae67 	bpl.w	800cc8c <HAL_I2C_EV_IRQHandler+0x60>
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 800cfbe:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  if (hi2c->XferCount == 4U)
 800cfc0:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800cfc2:	b292      	uxth	r2, r2
 800cfc4:	2a04      	cmp	r2, #4
 800cfc6:	f000 8113 	beq.w	800d1f0 <HAL_I2C_EV_IRQHandler+0x5c4>
  else if (hi2c->XferCount == 3U)
 800cfca:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800cfcc:	b292      	uxth	r2, r2
 800cfce:	2a03      	cmp	r2, #3
 800cfd0:	f000 8153 	beq.w	800d27a <HAL_I2C_EV_IRQHandler+0x64e>
  else if (hi2c->XferCount == 2U)
 800cfd4:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800cfd6:	b292      	uxth	r2, r2
 800cfd8:	2a02      	cmp	r2, #2
 800cfda:	f000 8182 	beq.w	800d2e2 <HAL_I2C_EV_IRQHandler+0x6b6>
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800cfde:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800cfe0:	691b      	ldr	r3, [r3, #16]
 800cfe2:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800cfe4:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800cfe6:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800cfe8:	3b01      	subs	r3, #1
    hi2c->pBuffPtr++;
 800cfea:	3201      	adds	r2, #1
    hi2c->XferCount--;
 800cfec:	b29b      	uxth	r3, r3
    hi2c->pBuffPtr++;
 800cfee:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800cff0:	8563      	strh	r3, [r4, #42]	; 0x2a
      }
 800cff2:	e64b      	b.n	800cc8c <HAL_I2C_EV_IRQHandler+0x60>
        else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800cff4:	074d      	lsls	r5, r1, #29
 800cff6:	f57f ae49 	bpl.w	800cc8c <HAL_I2C_EV_IRQHandler+0x60>
 800cffa:	0581      	lsls	r1, r0, #22
 800cffc:	f57f ae46 	bpl.w	800cc8c <HAL_I2C_EV_IRQHandler+0x60>
          if (CurrentState == HAL_I2C_STATE_BUSY_TX)
 800d000:	2a21      	cmp	r2, #33	; 0x21
 800d002:	f000 80fd 	beq.w	800d200 <HAL_I2C_EV_IRQHandler+0x5d4>
            if (CurrentMode == HAL_I2C_MODE_MEM)
 800d006:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 800d00a:	f47f ae3f 	bne.w	800cc8c <HAL_I2C_EV_IRQHandler+0x60>
        I2C_MemoryTransmit_TXE_BTF(hi2c);
 800d00e:	4620      	mov	r0, r4
}
 800d010:	b00e      	add	sp, #56	; 0x38
 800d012:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        I2C_MemoryTransmit_TXE_BTF(hi2c);
 800d016:	f7ff bc75 	b.w	800c904 <I2C_MemoryTransmit_TXE_BTF>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800d01a:	0545      	lsls	r5, r0, #21
 800d01c:	d5c9      	bpl.n	800cfb2 <HAL_I2C_EV_IRQHandler+0x386>
 800d01e:	f011 0104 	ands.w	r1, r1, #4
 800d022:	d1c9      	bne.n	800cfb8 <HAL_I2C_EV_IRQHandler+0x38c>
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800d024:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800d028:	2a22      	cmp	r2, #34	; 0x22
 800d02a:	f47f ae2f 	bne.w	800cc8c <HAL_I2C_EV_IRQHandler+0x60>
    tmp = hi2c->XferCount;
 800d02e:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800d030:	b292      	uxth	r2, r2
    if (tmp > 3U)
 800d032:	2a03      	cmp	r2, #3
 800d034:	f240 81ec 	bls.w	800d410 <HAL_I2C_EV_IRQHandler+0x7e4>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d038:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800d03a:	691b      	ldr	r3, [r3, #16]
 800d03c:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800d03e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800d040:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800d042:	3b01      	subs	r3, #1
 800d044:	b29b      	uxth	r3, r3
 800d046:	8563      	strh	r3, [r4, #42]	; 0x2a
      if (hi2c->XferCount == (uint16_t)3)
 800d048:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800d04a:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
 800d04c:	3201      	adds	r2, #1
      if (hi2c->XferCount == (uint16_t)3)
 800d04e:	2b03      	cmp	r3, #3
      hi2c->pBuffPtr++;
 800d050:	6262      	str	r2, [r4, #36]	; 0x24
      if (hi2c->XferCount == (uint16_t)3)
 800d052:	f47f ae1b 	bne.w	800cc8c <HAL_I2C_EV_IRQHandler+0x60>
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800d056:	6822      	ldr	r2, [r4, #0]
 800d058:	6853      	ldr	r3, [r2, #4]
 800d05a:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800d05e:	6053      	str	r3, [r2, #4]
 800d060:	e614      	b.n	800cc8c <HAL_I2C_EV_IRQHandler+0x60>
      if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 800d062:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800d066:	2a21      	cmp	r2, #33	; 0x21
        hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800d068:	6c62      	ldr	r2, [r4, #68]	; 0x44
        hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800d06a:	bf16      	itet	ne
 800d06c:	f042 0201 	orrne.w	r2, r2, #1
        hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800d070:	f002 02fe 	andeq.w	r2, r2, #254	; 0xfe
        hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800d074:	b2d2      	uxtbne	r2, r2
 800d076:	611a      	str	r2, [r3, #16]
      if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800d078:	6b62      	ldr	r2, [r4, #52]	; 0x34
 800d07a:	b11a      	cbz	r2, 800d084 <HAL_I2C_EV_IRQHandler+0x458>
 800d07c:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800d07e:	2a00      	cmp	r2, #0
 800d080:	f47f ae21 	bne.w	800ccc6 <HAL_I2C_EV_IRQHandler+0x9a>
      || ((hi2c->hdmarx != NULL) && (hi2c->hdmarx->XferCpltCallback != NULL)))
 800d084:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800d086:	2a00      	cmp	r2, #0
 800d088:	f43f ae00 	beq.w	800cc8c <HAL_I2C_EV_IRQHandler+0x60>
 800d08c:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800d08e:	2a00      	cmp	r2, #0
 800d090:	f47f ae19 	bne.w	800ccc6 <HAL_I2C_EV_IRQHandler+0x9a>
 800d094:	e5fa      	b.n	800cc8c <HAL_I2C_EV_IRQHandler+0x60>
    I2C_ITError(hi2c);
 800d096:	4620      	mov	r0, r4
}
 800d098:	b00e      	add	sp, #56	; 0x38
 800d09a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    I2C_ITError(hi2c);
 800d09e:	f7ff bd0f 	b.w	800cac0 <I2C_ITError>
    if (hi2c->EventCount == 0U)
 800d0a2:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800d0a4:	bb52      	cbnz	r2, 800d0fc <HAL_I2C_EV_IRQHandler+0x4d0>
      hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800d0a6:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800d0a8:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 800d0ac:	611a      	str	r2, [r3, #16]
 800d0ae:	e5ed      	b.n	800cc8c <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->XferOptions = I2C_FIRST_FRAME;
 800d0b0:	2201      	movs	r2, #1
 800d0b2:	62e2      	str	r2, [r4, #44]	; 0x2c
 800d0b4:	e619      	b.n	800ccea <HAL_I2C_EV_IRQHandler+0xbe>
    __HAL_I2C_DISABLE_IT(hi2c, (I2C_IT_BUF));
 800d0b6:	685a      	ldr	r2, [r3, #4]
 800d0b8:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d0bc:	605a      	str	r2, [r3, #4]
    if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_DUALF) == RESET)
 800d0be:	062e      	lsls	r6, r5, #24
    if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_TRA) == RESET)
 800d0c0:	f085 0104 	eor.w	r1, r5, #4
    __HAL_UNLOCK(hi2c);
 800d0c4:	f04f 0300 	mov.w	r3, #0
      SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress1;
 800d0c8:	bf54      	ite	pl
 800d0ca:	89a2      	ldrhpl	r2, [r4, #12]
      SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress2;
 800d0cc:	8b22      	ldrhmi	r2, [r4, #24]
    __HAL_UNLOCK(hi2c);
 800d0ce:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
  uint8_t TransferDirection = I2C_DIRECTION_RECEIVE;
 800d0d2:	f3c1 0180 	ubfx	r1, r1, #2, #1
    HAL_I2C_AddrCallback(hi2c, TransferDirection, SlaveAddrCode);
 800d0d6:	4620      	mov	r0, r4
 800d0d8:	f7ff fc0e 	bl	800c8f8 <HAL_I2C_AddrCallback>
 800d0dc:	e5d6      	b.n	800cc8c <HAL_I2C_EV_IRQHandler+0x60>
 800d0de:	bf00      	nop
 800d0e0:	0800c9cd 	.word	0x0800c9cd
      else if (hi2c->EventCount == 1U)
 800d0e4:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800d0e6:	2a01      	cmp	r2, #1
 800d0e8:	f47f add0 	bne.w	800cc8c <HAL_I2C_EV_IRQHandler+0x60>
        hi2c->Instance->DR = I2C_10BIT_HEADER_READ(hi2c->Devaddress);
 800d0ec:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800d0ee:	11d2      	asrs	r2, r2, #7
 800d0f0:	f002 0206 	and.w	r2, r2, #6
 800d0f4:	f042 02f1 	orr.w	r2, r2, #241	; 0xf1
 800d0f8:	611a      	str	r2, [r3, #16]
 800d0fa:	e5c7      	b.n	800cc8c <HAL_I2C_EV_IRQHandler+0x60>
      hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800d0fc:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800d0fe:	f042 0201 	orr.w	r2, r2, #1
 800d102:	b2d2      	uxtb	r2, r2
 800d104:	611a      	str	r2, [r3, #16]
 800d106:	e5c1      	b.n	800cc8c <HAL_I2C_EV_IRQHandler+0x60>
    if ((hi2c->EventCount == 0U) && (CurrentMode == HAL_I2C_MODE_MEM))
 800d108:	6d21      	ldr	r1, [r4, #80]	; 0x50
 800d10a:	b911      	cbnz	r1, 800d112 <HAL_I2C_EV_IRQHandler+0x4e6>
 800d10c:	2a40      	cmp	r2, #64	; 0x40
 800d10e:	f000 809b 	beq.w	800d248 <HAL_I2C_EV_IRQHandler+0x61c>
    else if ((hi2c->EventCount == 0U) && (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT))
 800d112:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800d114:	b922      	cbnz	r2, 800d120 <HAL_I2C_EV_IRQHandler+0x4f4>
 800d116:	6921      	ldr	r1, [r4, #16]
 800d118:	f5b1 4f40 	cmp.w	r1, #49152	; 0xc000
 800d11c:	f000 809f 	beq.w	800d25e <HAL_I2C_EV_IRQHandler+0x632>
      if (hi2c->XferCount == 0U)
 800d120:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800d122:	b292      	uxth	r2, r2
 800d124:	2a00      	cmp	r2, #0
 800d126:	d142      	bne.n	800d1ae <HAL_I2C_EV_IRQHandler+0x582>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800d128:	9203      	str	r2, [sp, #12]
 800d12a:	695a      	ldr	r2, [r3, #20]
 800d12c:	9203      	str	r2, [sp, #12]
 800d12e:	699a      	ldr	r2, [r3, #24]
 800d130:	9203      	str	r2, [sp, #12]
 800d132:	9a03      	ldr	r2, [sp, #12]
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800d134:	681a      	ldr	r2, [r3, #0]
 800d136:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800d13a:	601a      	str	r2, [r3, #0]
      hi2c->EventCount = 0U;
 800d13c:	2300      	movs	r3, #0
 800d13e:	6523      	str	r3, [r4, #80]	; 0x50
 800d140:	e5a4      	b.n	800cc8c <HAL_I2C_EV_IRQHandler+0x60>
      hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmarx));
 800d142:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800d144:	6802      	ldr	r2, [r0, #0]
 800d146:	6852      	ldr	r2, [r2, #4]
 800d148:	b292      	uxth	r2, r2
 800d14a:	8562      	strh	r2, [r4, #42]	; 0x2a
      if (hi2c->XferCount != 0U)
 800d14c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800d14e:	b292      	uxth	r2, r2
 800d150:	b11a      	cbz	r2, 800d15a <HAL_I2C_EV_IRQHandler+0x52e>
        hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800d152:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800d154:	f042 0204 	orr.w	r2, r2, #4
 800d158:	6422      	str	r2, [r4, #64]	; 0x40
      CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800d15a:	685a      	ldr	r2, [r3, #4]
 800d15c:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800d160:	605a      	str	r2, [r3, #4]
      if (HAL_DMA_GetState(hi2c->hdmarx) != HAL_DMA_STATE_READY)
 800d162:	f7fe fab3 	bl	800b6cc <HAL_DMA_GetState>
 800d166:	2801      	cmp	r0, #1
 800d168:	f43f ae8e 	beq.w	800ce88 <HAL_I2C_EV_IRQHandler+0x25c>
        hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 800d16c:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800d16e:	4b98      	ldr	r3, [pc, #608]	; (800d3d0 <HAL_I2C_EV_IRQHandler+0x7a4>)
 800d170:	6503      	str	r3, [r0, #80]	; 0x50
        if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 800d172:	f7fe fa99 	bl	800b6a8 <HAL_DMA_Abort_IT>
 800d176:	2800      	cmp	r0, #0
 800d178:	f43f ae86 	beq.w	800ce88 <HAL_I2C_EV_IRQHandler+0x25c>
          hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800d17c:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800d17e:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800d180:	4798      	blx	r3
 800d182:	e681      	b.n	800ce88 <HAL_I2C_EV_IRQHandler+0x25c>
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800d184:	2228      	movs	r2, #40	; 0x28
      hi2c->PreviousState = I2C_STATE_NONE;
 800d186:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800d188:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800d18a:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800d18e:	f7ff fbb1 	bl	800c8f4 <HAL_I2C_SlaveRxCpltCallback>
 800d192:	e6a6      	b.n	800cee2 <HAL_I2C_EV_IRQHandler+0x2b6>
      hi2c->PreviousState = I2C_STATE_NONE;
 800d194:	2300      	movs	r3, #0
      hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800d196:	498f      	ldr	r1, [pc, #572]	; (800d3d4 <HAL_I2C_EV_IRQHandler+0x7a8>)
 800d198:	62e1      	str	r1, [r4, #44]	; 0x2c
      hi2c->State = HAL_I2C_STATE_READY;
 800d19a:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 800d19c:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_ListenCpltCallback(hi2c);
 800d19e:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_READY;
 800d1a0:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800d1a4:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      HAL_I2C_ListenCpltCallback(hi2c);
 800d1a8:	f7ff fba8 	bl	800c8fc <HAL_I2C_ListenCpltCallback>
 800d1ac:	e56e      	b.n	800cc8c <HAL_I2C_EV_IRQHandler+0x60>
      else if (hi2c->XferCount == 1U)
 800d1ae:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800d1b0:	b292      	uxth	r2, r2
 800d1b2:	2a01      	cmp	r2, #1
 800d1b4:	d070      	beq.n	800d298 <HAL_I2C_EV_IRQHandler+0x66c>
      else if (hi2c->XferCount == 2U)
 800d1b6:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800d1b8:	b292      	uxth	r2, r2
 800d1ba:	2a02      	cmp	r2, #2
 800d1bc:	f000 80d6 	beq.w	800d36c <HAL_I2C_EV_IRQHandler+0x740>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d1c0:	681a      	ldr	r2, [r3, #0]
 800d1c2:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800d1c6:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800d1c8:	685a      	ldr	r2, [r3, #4]
 800d1ca:	0511      	lsls	r1, r2, #20
 800d1cc:	d508      	bpl.n	800d1e0 <HAL_I2C_EV_IRQHandler+0x5b4>
 800d1ce:	2820      	cmp	r0, #32
 800d1d0:	f200 80f8 	bhi.w	800d3c4 <HAL_I2C_EV_IRQHandler+0x798>
 800d1d4:	2807      	cmp	r0, #7
 800d1d6:	f200 80ea 	bhi.w	800d3ae <HAL_I2C_EV_IRQHandler+0x782>
 800d1da:	2801      	cmp	r0, #1
 800d1dc:	f000 80ed 	beq.w	800d3ba <HAL_I2C_EV_IRQHandler+0x78e>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800d1e0:	2200      	movs	r2, #0
 800d1e2:	9209      	str	r2, [sp, #36]	; 0x24
 800d1e4:	695a      	ldr	r2, [r3, #20]
 800d1e6:	9209      	str	r2, [sp, #36]	; 0x24
 800d1e8:	699b      	ldr	r3, [r3, #24]
 800d1ea:	9309      	str	r3, [sp, #36]	; 0x24
 800d1ec:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d1ee:	e7a5      	b.n	800d13c <HAL_I2C_EV_IRQHandler+0x510>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800d1f0:	685a      	ldr	r2, [r3, #4]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d1f2:	6a61      	ldr	r1, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800d1f4:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d1f8:	605a      	str	r2, [r3, #4]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d1fa:	691b      	ldr	r3, [r3, #16]
 800d1fc:	700b      	strb	r3, [r1, #0]
    hi2c->pBuffPtr++;
 800d1fe:	e6f1      	b.n	800cfe4 <HAL_I2C_EV_IRQHandler+0x3b8>
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 800d200:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 800d202:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800d206:	2a21      	cmp	r2, #33	; 0x21
 800d208:	f47f ad40 	bne.w	800cc8c <HAL_I2C_EV_IRQHandler+0x60>
    if (hi2c->XferCount != 0U)
 800d20c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800d20e:	b292      	uxth	r2, r2
 800d210:	2a00      	cmp	r2, #0
 800d212:	f47f aeb2 	bne.w	800cf7a <HAL_I2C_EV_IRQHandler+0x34e>
      if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) && (CurrentXferOptions != I2C_NO_OPTION_FRAME))
 800d216:	2908      	cmp	r1, #8
 800d218:	f000 80e2 	beq.w	800d3e0 <HAL_I2C_EV_IRQHandler+0x7b4>
 800d21c:	2920      	cmp	r1, #32
 800d21e:	f000 80df 	beq.w	800d3e0 <HAL_I2C_EV_IRQHandler+0x7b4>
 800d222:	f511 3f80 	cmn.w	r1, #65536	; 0x10000
 800d226:	f000 80db 	beq.w	800d3e0 <HAL_I2C_EV_IRQHandler+0x7b4>
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800d22a:	6859      	ldr	r1, [r3, #4]
 800d22c:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800d230:	6059      	str	r1, [r3, #4]
        hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800d232:	2011      	movs	r0, #17
        hi2c->State = HAL_I2C_STATE_READY;
 800d234:	2320      	movs	r3, #32
        hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800d236:	6320      	str	r0, [r4, #48]	; 0x30
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800d238:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        HAL_I2C_MasterTxCpltCallback(hi2c);
 800d23c:	4620      	mov	r0, r4
        hi2c->State = HAL_I2C_STATE_READY;
 800d23e:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        HAL_I2C_MasterTxCpltCallback(hi2c);
 800d242:	f7ff fb51 	bl	800c8e8 <HAL_I2C_MasterTxCpltCallback>
 800d246:	e521      	b.n	800cc8c <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800d248:	9101      	str	r1, [sp, #4]
 800d24a:	695a      	ldr	r2, [r3, #20]
 800d24c:	9201      	str	r2, [sp, #4]
 800d24e:	699b      	ldr	r3, [r3, #24]
 800d250:	9301      	str	r3, [sp, #4]
 800d252:	9b01      	ldr	r3, [sp, #4]
 800d254:	e51a      	b.n	800cc8c <HAL_I2C_EV_IRQHandler+0x60>
  else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
 800d256:	2a21      	cmp	r2, #33	; 0x21
 800d258:	f43f add1 	beq.w	800cdfe <HAL_I2C_EV_IRQHandler+0x1d2>
 800d25c:	e5c9      	b.n	800cdf2 <HAL_I2C_EV_IRQHandler+0x1c6>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800d25e:	9202      	str	r2, [sp, #8]
 800d260:	695a      	ldr	r2, [r3, #20]
 800d262:	9202      	str	r2, [sp, #8]
 800d264:	699a      	ldr	r2, [r3, #24]
 800d266:	9202      	str	r2, [sp, #8]
 800d268:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800d26a:	681a      	ldr	r2, [r3, #0]
 800d26c:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800d270:	601a      	str	r2, [r3, #0]
      hi2c->EventCount++;
 800d272:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800d274:	3301      	adds	r3, #1
 800d276:	6523      	str	r3, [r4, #80]	; 0x50
 800d278:	e508      	b.n	800cc8c <HAL_I2C_EV_IRQHandler+0x60>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800d27a:	685a      	ldr	r2, [r3, #4]
    if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
 800d27c:	2904      	cmp	r1, #4
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800d27e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d282:	605a      	str	r2, [r3, #4]
    if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
 800d284:	f43f aeab 	beq.w	800cfde <HAL_I2C_EV_IRQHandler+0x3b2>
 800d288:	2902      	cmp	r1, #2
 800d28a:	f43f aea8 	beq.w	800cfde <HAL_I2C_EV_IRQHandler+0x3b2>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d28e:	681a      	ldr	r2, [r3, #0]
 800d290:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d294:	601a      	str	r2, [r3, #0]
 800d296:	e6a2      	b.n	800cfde <HAL_I2C_EV_IRQHandler+0x3b2>
        if (CurrentXferOptions == I2C_NO_OPTION_FRAME)
 800d298:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800d29c:	f000 811b 	beq.w	800d4d6 <HAL_I2C_EV_IRQHandler+0x8aa>
        else if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) \
 800d2a0:	2808      	cmp	r0, #8
 800d2a2:	f000 8108 	beq.w	800d4b6 <HAL_I2C_EV_IRQHandler+0x88a>
 800d2a6:	2820      	cmp	r0, #32
 800d2a8:	f000 8105 	beq.w	800d4b6 <HAL_I2C_EV_IRQHandler+0x88a>
                 && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_FRAME)))
 800d2ac:	2d12      	cmp	r5, #18
 800d2ae:	f000 80ff 	beq.w	800d4b0 <HAL_I2C_EV_IRQHandler+0x884>
          if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP))
 800d2b2:	2810      	cmp	r0, #16
 800d2b4:	d804      	bhi.n	800d2c0 <HAL_I2C_EV_IRQHandler+0x694>
 800d2b6:	4a48      	ldr	r2, [pc, #288]	; (800d3d8 <HAL_I2C_EV_IRQHandler+0x7ac>)
 800d2b8:	40c2      	lsrs	r2, r0
 800d2ba:	07d1      	lsls	r1, r2, #31
 800d2bc:	f100 814c 	bmi.w	800d558 <HAL_I2C_EV_IRQHandler+0x92c>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d2c0:	681a      	ldr	r2, [r3, #0]
 800d2c2:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d2c6:	601a      	str	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800d2c8:	2200      	movs	r2, #0
 800d2ca:	9206      	str	r2, [sp, #24]
 800d2cc:	695a      	ldr	r2, [r3, #20]
 800d2ce:	9206      	str	r2, [sp, #24]
 800d2d0:	699b      	ldr	r3, [r3, #24]
 800d2d2:	9306      	str	r3, [sp, #24]
 800d2d4:	9b06      	ldr	r3, [sp, #24]
 800d2d6:	e731      	b.n	800d13c <HAL_I2C_EV_IRQHandler+0x510>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800d2d8:	685a      	ldr	r2, [r3, #4]
 800d2da:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d2de:	605a      	str	r2, [r3, #4]
 800d2e0:	e4d4      	b.n	800cc8c <HAL_I2C_EV_IRQHandler+0x60>
    if ((CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP))
 800d2e2:	3901      	subs	r1, #1
 800d2e4:	290f      	cmp	r1, #15
 800d2e6:	d809      	bhi.n	800d2fc <HAL_I2C_EV_IRQHandler+0x6d0>
 800d2e8:	e8df f001 	tbb	[pc, r1]
 800d2ec:	3608363b 	.word	0x3608363b
 800d2f0:	08080808 	.word	0x08080808
 800d2f4:	08080808 	.word	0x08080808
 800d2f8:	3b080808 	.word	0x3b080808
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800d2fc:	681a      	ldr	r2, [r3, #0]
 800d2fe:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800d302:	601a      	str	r2, [r3, #0]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d304:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800d306:	691b      	ldr	r3, [r3, #16]
 800d308:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800d30a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800d30c:	6a62      	ldr	r2, [r4, #36]	; 0x24
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d30e:	6821      	ldr	r1, [r4, #0]
    hi2c->XferCount--;
 800d310:	3b01      	subs	r3, #1
 800d312:	b29b      	uxth	r3, r3
 800d314:	8563      	strh	r3, [r4, #42]	; 0x2a
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d316:	690b      	ldr	r3, [r1, #16]
    hi2c->pBuffPtr++;
 800d318:	1c51      	adds	r1, r2, #1
 800d31a:	6261      	str	r1, [r4, #36]	; 0x24
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d31c:	7053      	strb	r3, [r2, #1]
    hi2c->XferCount--;
 800d31e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800d320:	6821      	ldr	r1, [r4, #0]
    hi2c->pBuffPtr++;
 800d322:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800d324:	3b01      	subs	r3, #1
 800d326:	b29b      	uxth	r3, r3
 800d328:	8563      	strh	r3, [r4, #42]	; 0x2a
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800d32a:	684b      	ldr	r3, [r1, #4]
    hi2c->pBuffPtr++;
 800d32c:	3201      	adds	r2, #1
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800d32e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    hi2c->State = HAL_I2C_STATE_READY;
 800d332:	2020      	movs	r0, #32
    hi2c->pBuffPtr++;
 800d334:	6262      	str	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800d336:	604b      	str	r3, [r1, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 800d338:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800d33c:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
 800d340:	2b40      	cmp	r3, #64	; 0x40
 800d342:	f000 80f5 	beq.w	800d530 <HAL_I2C_EV_IRQHandler+0x904>
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800d346:	2200      	movs	r2, #0
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 800d348:	2312      	movs	r3, #18
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800d34a:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      HAL_I2C_MasterRxCpltCallback(hi2c);
 800d34e:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 800d350:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_MasterRxCpltCallback(hi2c);
 800d352:	f7ff facb 	bl	800c8ec <HAL_I2C_MasterRxCpltCallback>
 800d356:	e499      	b.n	800cc8c <HAL_I2C_EV_IRQHandler+0x60>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d358:	681a      	ldr	r2, [r3, #0]
 800d35a:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800d35e:	601a      	str	r2, [r3, #0]
 800d360:	e7d0      	b.n	800d304 <HAL_I2C_EV_IRQHandler+0x6d8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d362:	681a      	ldr	r2, [r3, #0]
 800d364:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d368:	601a      	str	r2, [r3, #0]
 800d36a:	e7cb      	b.n	800d304 <HAL_I2C_EV_IRQHandler+0x6d8>
        if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP))
 800d36c:	2810      	cmp	r0, #16
 800d36e:	d804      	bhi.n	800d37a <HAL_I2C_EV_IRQHandler+0x74e>
 800d370:	4a19      	ldr	r2, [pc, #100]	; (800d3d8 <HAL_I2C_EV_IRQHandler+0x7ac>)
 800d372:	40c2      	lsrs	r2, r0
 800d374:	07d2      	lsls	r2, r2, #31
 800d376:	f100 80c2 	bmi.w	800d4fe <HAL_I2C_EV_IRQHandler+0x8d2>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d37a:	681a      	ldr	r2, [r3, #0]
 800d37c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d380:	601a      	str	r2, [r3, #0]
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800d382:	681a      	ldr	r2, [r3, #0]
 800d384:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800d388:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800d38a:	685a      	ldr	r2, [r3, #4]
 800d38c:	0516      	lsls	r6, r2, #20
 800d38e:	d506      	bpl.n	800d39e <HAL_I2C_EV_IRQHandler+0x772>
 800d390:	2820      	cmp	r0, #32
 800d392:	f240 80bc 	bls.w	800d50e <HAL_I2C_EV_IRQHandler+0x8e2>
 800d396:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800d39a:	f000 80bd 	beq.w	800d518 <HAL_I2C_EV_IRQHandler+0x8ec>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800d39e:	2200      	movs	r2, #0
 800d3a0:	9208      	str	r2, [sp, #32]
 800d3a2:	695a      	ldr	r2, [r3, #20]
 800d3a4:	9208      	str	r2, [sp, #32]
 800d3a6:	699b      	ldr	r3, [r3, #24]
 800d3a8:	9308      	str	r3, [sp, #32]
 800d3aa:	9b08      	ldr	r3, [sp, #32]
 800d3ac:	e6c6      	b.n	800d13c <HAL_I2C_EV_IRQHandler+0x510>
 800d3ae:	4a0b      	ldr	r2, [pc, #44]	; (800d3dc <HAL_I2C_EV_IRQHandler+0x7b0>)
 800d3b0:	3808      	subs	r0, #8
 800d3b2:	40c2      	lsrs	r2, r0
 800d3b4:	07d2      	lsls	r2, r2, #31
 800d3b6:	f57f af13 	bpl.w	800d1e0 <HAL_I2C_EV_IRQHandler+0x5b4>
          SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
 800d3ba:	685a      	ldr	r2, [r3, #4]
 800d3bc:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800d3c0:	605a      	str	r2, [r3, #4]
 800d3c2:	e70d      	b.n	800d1e0 <HAL_I2C_EV_IRQHandler+0x5b4>
 800d3c4:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800d3c8:	f47f af0a 	bne.w	800d1e0 <HAL_I2C_EV_IRQHandler+0x5b4>
 800d3cc:	e7f5      	b.n	800d3ba <HAL_I2C_EV_IRQHandler+0x78e>
 800d3ce:	bf00      	nop
 800d3d0:	0800c9cd 	.word	0x0800c9cd
 800d3d4:	ffff0000 	.word	0xffff0000
 800d3d8:	00010014 	.word	0x00010014
 800d3dc:	01000101 	.word	0x01000101
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800d3e0:	6859      	ldr	r1, [r3, #4]
 800d3e2:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800d3e6:	6059      	str	r1, [r3, #4]
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800d3e8:	6819      	ldr	r1, [r3, #0]
        hi2c->PreviousState = I2C_STATE_NONE;
 800d3ea:	2200      	movs	r2, #0
        hi2c->State = HAL_I2C_STATE_READY;
 800d3ec:	2020      	movs	r0, #32
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800d3ee:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 800d3f2:	6019      	str	r1, [r3, #0]
        hi2c->PreviousState = I2C_STATE_NONE;
 800d3f4:	6322      	str	r2, [r4, #48]	; 0x30
        hi2c->State = HAL_I2C_STATE_READY;
 800d3f6:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800d3fa:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800d3fe:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800d402:	2b40      	cmp	r3, #64	; 0x40
          HAL_I2C_MemTxCpltCallback(hi2c);
 800d404:	4620      	mov	r0, r4
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800d406:	f47f af1c 	bne.w	800d242 <HAL_I2C_EV_IRQHandler+0x616>
          HAL_I2C_MemTxCpltCallback(hi2c);
 800d40a:	f7ff fa79 	bl	800c900 <HAL_I2C_MemTxCpltCallback>
 800d40e:	e43d      	b.n	800cc8c <HAL_I2C_EV_IRQHandler+0x60>
    else if ((hi2c->XferOptions != I2C_FIRST_AND_NEXT_FRAME) && ((tmp == 1U) || (tmp == 0U)))
 800d410:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800d412:	2802      	cmp	r0, #2
 800d414:	f43f af60 	beq.w	800d2d8 <HAL_I2C_EV_IRQHandler+0x6ac>
 800d418:	2a01      	cmp	r2, #1
 800d41a:	f63f af5d 	bhi.w	800d2d8 <HAL_I2C_EV_IRQHandler+0x6ac>
  count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 800d41e:	4a62      	ldr	r2, [pc, #392]	; (800d5a8 <HAL_I2C_EV_IRQHandler+0x97c>)
  __IO uint32_t count = 0U;
 800d420:	910b      	str	r1, [sp, #44]	; 0x2c
  count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 800d422:	6812      	ldr	r2, [r2, #0]
 800d424:	f246 10a8 	movw	r0, #25000	; 0x61a8
 800d428:	fbb2 f2f0 	udiv	r2, r2, r0
 800d42c:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 800d430:	920b      	str	r2, [sp, #44]	; 0x2c
 800d432:	e004      	b.n	800d43e <HAL_I2C_EV_IRQHandler+0x812>
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800d434:	681a      	ldr	r2, [r3, #0]
 800d436:	f412 7200 	ands.w	r2, r2, #512	; 0x200
 800d43a:	f000 8092 	beq.w	800d562 <HAL_I2C_EV_IRQHandler+0x936>
    count--;
 800d43e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800d440:	3a01      	subs	r2, #1
 800d442:	920b      	str	r2, [sp, #44]	; 0x2c
    if (count == 0U)
 800d444:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800d446:	2900      	cmp	r1, #0
 800d448:	d1f4      	bne.n	800d434 <HAL_I2C_EV_IRQHandler+0x808>
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800d44a:	6c22      	ldr	r2, [r4, #64]	; 0x40
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d44c:	6a60      	ldr	r0, [r4, #36]	; 0x24
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800d44e:	f042 0220 	orr.w	r2, r2, #32
 800d452:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800d454:	685a      	ldr	r2, [r3, #4]
 800d456:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800d45a:	605a      	str	r2, [r3, #4]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d45c:	691b      	ldr	r3, [r3, #16]
 800d45e:	7003      	strb	r3, [r0, #0]
        hi2c->XferCount--;
 800d460:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
        hi2c->pBuffPtr++;
 800d462:	6a62      	ldr	r2, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800d464:	3b01      	subs	r3, #1
        hi2c->pBuffPtr++;
 800d466:	3201      	adds	r2, #1
        hi2c->XferCount--;
 800d468:	b29b      	uxth	r3, r3
        hi2c->State = HAL_I2C_STATE_READY;
 800d46a:	2020      	movs	r0, #32
        hi2c->XferCount--;
 800d46c:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->pBuffPtr++;
 800d46e:	6262      	str	r2, [r4, #36]	; 0x24
        hi2c->State = HAL_I2C_STATE_READY;
 800d470:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
        HAL_I2C_ErrorCallback(hi2c);
 800d474:	4620      	mov	r0, r4
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800d476:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
        HAL_I2C_ErrorCallback(hi2c);
 800d47a:	f7ff faa3 	bl	800c9c4 <HAL_I2C_ErrorCallback>
 800d47e:	e405      	b.n	800cc8c <HAL_I2C_EV_IRQHandler+0x60>
    if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) && (CurrentXferOptions != I2C_NO_OPTION_FRAME))
 800d480:	2d08      	cmp	r5, #8
 800d482:	d0ad      	beq.n	800d3e0 <HAL_I2C_EV_IRQHandler+0x7b4>
 800d484:	2d20      	cmp	r5, #32
 800d486:	d0ab      	beq.n	800d3e0 <HAL_I2C_EV_IRQHandler+0x7b4>
 800d488:	f515 3f80 	cmn.w	r5, #65536	; 0x10000
 800d48c:	d0a8      	beq.n	800d3e0 <HAL_I2C_EV_IRQHandler+0x7b4>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800d48e:	685a      	ldr	r2, [r3, #4]
 800d490:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800d494:	605a      	str	r2, [r3, #4]
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800d496:	2011      	movs	r0, #17
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800d498:	2100      	movs	r1, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800d49a:	2320      	movs	r3, #32
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800d49c:	6320      	str	r0, [r4, #48]	; 0x30
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800d49e:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
      HAL_I2C_MasterTxCpltCallback(hi2c);
 800d4a2:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_READY;
 800d4a4:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
      HAL_I2C_MasterTxCpltCallback(hi2c);
 800d4a8:	f7ff fa1e 	bl	800c8e8 <HAL_I2C_MasterTxCpltCallback>
 800d4ac:	f7ff bbee 	b.w	800cc8c <HAL_I2C_EV_IRQHandler+0x60>
                 && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_FRAME)))
 800d4b0:	2801      	cmp	r0, #1
 800d4b2:	f43f af05 	beq.w	800d2c0 <HAL_I2C_EV_IRQHandler+0x694>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d4b6:	681a      	ldr	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800d4b8:	2100      	movs	r1, #0
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d4ba:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d4be:	601a      	str	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800d4c0:	9107      	str	r1, [sp, #28]
 800d4c2:	695a      	ldr	r2, [r3, #20]
 800d4c4:	9207      	str	r2, [sp, #28]
 800d4c6:	699a      	ldr	r2, [r3, #24]
 800d4c8:	9207      	str	r2, [sp, #28]
 800d4ca:	9a07      	ldr	r2, [sp, #28]
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800d4cc:	681a      	ldr	r2, [r3, #0]
 800d4ce:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800d4d2:	601a      	str	r2, [r3, #0]
 800d4d4:	e632      	b.n	800d13c <HAL_I2C_EV_IRQHandler+0x510>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d4d6:	681a      	ldr	r2, [r3, #0]
 800d4d8:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d4dc:	601a      	str	r2, [r3, #0]
          if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800d4de:	685a      	ldr	r2, [r3, #4]
 800d4e0:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800d4e4:	d02d      	beq.n	800d542 <HAL_I2C_EV_IRQHandler+0x916>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d4e6:	681a      	ldr	r2, [r3, #0]
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800d4e8:	2100      	movs	r1, #0
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d4ea:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d4ee:	601a      	str	r2, [r3, #0]
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800d4f0:	9104      	str	r1, [sp, #16]
 800d4f2:	695a      	ldr	r2, [r3, #20]
 800d4f4:	9204      	str	r2, [sp, #16]
 800d4f6:	699b      	ldr	r3, [r3, #24]
 800d4f8:	9304      	str	r3, [sp, #16]
 800d4fa:	9b04      	ldr	r3, [sp, #16]
 800d4fc:	e61e      	b.n	800d13c <HAL_I2C_EV_IRQHandler+0x510>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d4fe:	681a      	ldr	r2, [r3, #0]
 800d500:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800d504:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800d506:	685a      	ldr	r2, [r3, #4]
 800d508:	0515      	lsls	r5, r2, #20
 800d50a:	f57f af48 	bpl.w	800d39e <HAL_I2C_EV_IRQHandler+0x772>
 800d50e:	2807      	cmp	r0, #7
 800d510:	d807      	bhi.n	800d522 <HAL_I2C_EV_IRQHandler+0x8f6>
 800d512:	2801      	cmp	r0, #1
 800d514:	f47f af43 	bne.w	800d39e <HAL_I2C_EV_IRQHandler+0x772>
          SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
 800d518:	685a      	ldr	r2, [r3, #4]
 800d51a:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800d51e:	605a      	str	r2, [r3, #4]
 800d520:	e73d      	b.n	800d39e <HAL_I2C_EV_IRQHandler+0x772>
 800d522:	4a22      	ldr	r2, [pc, #136]	; (800d5ac <HAL_I2C_EV_IRQHandler+0x980>)
 800d524:	3808      	subs	r0, #8
 800d526:	40c2      	lsrs	r2, r0
 800d528:	07d0      	lsls	r0, r2, #31
 800d52a:	f57f af38 	bpl.w	800d39e <HAL_I2C_EV_IRQHandler+0x772>
 800d52e:	e7f3      	b.n	800d518 <HAL_I2C_EV_IRQHandler+0x8ec>
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800d530:	2300      	movs	r3, #0
 800d532:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      HAL_I2C_MemRxCpltCallback(hi2c);
 800d536:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_NONE;
 800d538:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_MemRxCpltCallback(hi2c);
 800d53a:	f7ff fa41 	bl	800c9c0 <HAL_I2C_MemRxCpltCallback>
 800d53e:	f7ff bba5 	b.w	800cc8c <HAL_I2C_EV_IRQHandler+0x60>
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800d542:	9205      	str	r2, [sp, #20]
 800d544:	695a      	ldr	r2, [r3, #20]
 800d546:	9205      	str	r2, [sp, #20]
 800d548:	699a      	ldr	r2, [r3, #24]
 800d54a:	9205      	str	r2, [sp, #20]
 800d54c:	9a05      	ldr	r2, [sp, #20]
            SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800d54e:	681a      	ldr	r2, [r3, #0]
 800d550:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800d554:	601a      	str	r2, [r3, #0]
 800d556:	e5f1      	b.n	800d13c <HAL_I2C_EV_IRQHandler+0x510>
            SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d558:	681a      	ldr	r2, [r3, #0]
 800d55a:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800d55e:	601a      	str	r2, [r3, #0]
 800d560:	e6b2      	b.n	800d2c8 <HAL_I2C_EV_IRQHandler+0x69c>
        CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d562:	6819      	ldr	r1, [r3, #0]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d564:	6a60      	ldr	r0, [r4, #36]	; 0x24
        CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d566:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800d56a:	6019      	str	r1, [r3, #0]
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800d56c:	6859      	ldr	r1, [r3, #4]
 800d56e:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800d572:	6059      	str	r1, [r3, #4]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d574:	691b      	ldr	r3, [r3, #16]
 800d576:	7003      	strb	r3, [r0, #0]
        hi2c->XferCount--;
 800d578:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800d57a:	3b01      	subs	r3, #1
        hi2c->State = HAL_I2C_STATE_READY;
 800d57c:	2120      	movs	r1, #32
        hi2c->XferCount--;
 800d57e:	b29b      	uxth	r3, r3
 800d580:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->State = HAL_I2C_STATE_READY;
 800d582:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->pBuffPtr++;
 800d586:	6a63      	ldr	r3, [r4, #36]	; 0x24
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800d588:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
        hi2c->pBuffPtr++;
 800d58c:	3301      	adds	r3, #1
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800d58e:	2940      	cmp	r1, #64	; 0x40
        hi2c->pBuffPtr++;
 800d590:	6263      	str	r3, [r4, #36]	; 0x24
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800d592:	f47f aed9 	bne.w	800d348 <HAL_I2C_EV_IRQHandler+0x71c>
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800d596:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
          HAL_I2C_MemRxCpltCallback(hi2c);
 800d59a:	4620      	mov	r0, r4
          hi2c->PreviousState = I2C_STATE_NONE;
 800d59c:	6322      	str	r2, [r4, #48]	; 0x30
          HAL_I2C_MemRxCpltCallback(hi2c);
 800d59e:	f7ff fa0f 	bl	800c9c0 <HAL_I2C_MemRxCpltCallback>
 800d5a2:	f7ff bb73 	b.w	800cc8c <HAL_I2C_EV_IRQHandler+0x60>
 800d5a6:	bf00      	nop
 800d5a8:	2000007c 	.word	0x2000007c
 800d5ac:	01000101 	.word	0x01000101

0800d5b0 <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800d5b0:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 800d5b4:	2a20      	cmp	r2, #32
{
 800d5b6:	4603      	mov	r3, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800d5b8:	fa5f fc82 	uxtb.w	ip, r2
 800d5bc:	d001      	beq.n	800d5c2 <HAL_I2CEx_ConfigAnalogFilter+0x12>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 800d5be:	2002      	movs	r0, #2
  }
}
 800d5c0:	4770      	bx	lr
    __HAL_I2C_DISABLE(hi2c);
 800d5c2:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800d5c4:	2024      	movs	r0, #36	; 0x24
 800d5c6:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800d5ca:	6810      	ldr	r0, [r2, #0]
 800d5cc:	f020 0001 	bic.w	r0, r0, #1
 800d5d0:	6010      	str	r0, [r2, #0]
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 800d5d2:	6a50      	ldr	r0, [r2, #36]	; 0x24
 800d5d4:	f020 0010 	bic.w	r0, r0, #16
 800d5d8:	6250      	str	r0, [r2, #36]	; 0x24
    hi2c->Instance->FLTR |= AnalogFilter;
 800d5da:	6a50      	ldr	r0, [r2, #36]	; 0x24
 800d5dc:	4301      	orrs	r1, r0
 800d5de:	6251      	str	r1, [r2, #36]	; 0x24
    __HAL_I2C_ENABLE(hi2c);
 800d5e0:	6811      	ldr	r1, [r2, #0]
 800d5e2:	f041 0101 	orr.w	r1, r1, #1
 800d5e6:	6011      	str	r1, [r2, #0]
    return HAL_OK;
 800d5e8:	2000      	movs	r0, #0
    hi2c->State = HAL_I2C_STATE_READY;
 800d5ea:	f883 c03d 	strb.w	ip, [r3, #61]	; 0x3d
    return HAL_OK;
 800d5ee:	4770      	bx	lr

0800d5f0 <HAL_I2CEx_ConfigDigitalFilter>:

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800d5f0:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 800d5f4:	2a20      	cmp	r2, #32
 800d5f6:	d001      	beq.n	800d5fc <HAL_I2CEx_ConfigDigitalFilter+0xc>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 800d5f8:	2002      	movs	r0, #2
  }
}
 800d5fa:	4770      	bx	lr
{
 800d5fc:	b410      	push	{r4}
 800d5fe:	fa5f fc82 	uxtb.w	ip, r2
    __HAL_I2C_DISABLE(hi2c);
 800d602:	6804      	ldr	r4, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800d604:	2224      	movs	r2, #36	; 0x24
 800d606:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800d60a:	6822      	ldr	r2, [r4, #0]
 800d60c:	f022 0201 	bic.w	r2, r2, #1
 800d610:	6022      	str	r2, [r4, #0]
    tmpreg = hi2c->Instance->FLTR;
 800d612:	4603      	mov	r3, r0
 800d614:	6a60      	ldr	r0, [r4, #36]	; 0x24
    tmpreg &= ~(I2C_FLTR_DNF);
 800d616:	f64f 72f0 	movw	r2, #65520	; 0xfff0
 800d61a:	4002      	ands	r2, r0
    tmpreg |= DigitalFilter;
 800d61c:	4311      	orrs	r1, r2
    hi2c->Instance->FLTR = tmpreg;
 800d61e:	b289      	uxth	r1, r1
 800d620:	6261      	str	r1, [r4, #36]	; 0x24
    __HAL_I2C_ENABLE(hi2c);
 800d622:	6822      	ldr	r2, [r4, #0]
 800d624:	f042 0201 	orr.w	r2, r2, #1
 800d628:	6022      	str	r2, [r4, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800d62a:	f883 c03d 	strb.w	ip, [r3, #61]	; 0x3d
    return HAL_OK;
 800d62e:	2000      	movs	r0, #0
}
 800d630:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d634:	4770      	bx	lr
 800d636:	bf00      	nop

0800d638 <HAL_LTDC_Init>:
{
  uint32_t tmp;
  uint32_t tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
 800d638:	2800      	cmp	r0, #0
 800d63a:	d069      	beq.n	800d710 <HAL_LTDC_Init+0xd8>
{
 800d63c:	b538      	push	{r3, r4, r5, lr}
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 800d63e:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 800d642:	4604      	mov	r4, r0
 800d644:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800d648:	2b00      	cmp	r3, #0
 800d64a:	d05c      	beq.n	800d706 <HAL_LTDC_Init+0xce>
    HAL_LTDC_MspInit(hltdc);
  }
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800d64c:	2202      	movs	r2, #2

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800d64e:	6823      	ldr	r3, [r4, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800d650:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800d654:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800d658:	6999      	ldr	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800d65a:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800d65c:	e9d4 5003 	ldrd	r5, r0, [r4, #12]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800d660:	f021 4170 	bic.w	r1, r1, #4026531840	; 0xf0000000
 800d664:	6199      	str	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800d666:	6999      	ldr	r1, [r3, #24]
 800d668:	432a      	orrs	r2, r5
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800d66a:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800d66c:	430a      	orrs	r2, r1
 800d66e:	619a      	str	r2, [r3, #24]

  /* Set Synchronization size */
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800d670:	689a      	ldr	r2, [r3, #8]
 800d672:	4928      	ldr	r1, [pc, #160]	; (800d714 <HAL_LTDC_Init+0xdc>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 800d674:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800d676:	400a      	ands	r2, r1
 800d678:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 800d67a:	689a      	ldr	r2, [r3, #8]
 800d67c:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800d680:	69a0      	ldr	r0, [r4, #24]
 800d682:	4302      	orrs	r2, r0
 800d684:	609a      	str	r2, [r3, #8]

  /* Set Accumulated Back porch */
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800d686:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800d688:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800d68a:	400a      	ands	r2, r1
 800d68c:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 800d68e:	68da      	ldr	r2, [r3, #12]
 800d690:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800d694:	6a20      	ldr	r0, [r4, #32]
 800d696:	4302      	orrs	r2, r0
 800d698:	60da      	str	r2, [r3, #12]

  /* Set Accumulated Active Width */
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800d69a:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 800d69c:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800d69e:	400a      	ands	r2, r1
 800d6a0:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 800d6a2:	691a      	ldr	r2, [r3, #16]
 800d6a4:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800d6a8:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800d6aa:	4302      	orrs	r2, r0
 800d6ac:	611a      	str	r2, [r3, #16]

  /* Set Total Width */
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800d6ae:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 800d6b0:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800d6b2:	400a      	ands	r2, r1
 800d6b4:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800d6b6:	695a      	ldr	r2, [r3, #20]
 800d6b8:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800d6ba:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800d6be:	430a      	orrs	r2, r1
 800d6c0:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800d6c2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 800d6c4:	f894 0035 	ldrb.w	r0, [r4, #53]	; 0x35
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 800d6c8:	f894 1036 	ldrb.w	r1, [r4, #54]	; 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800d6cc:	f002 427f 	and.w	r2, r2, #4278190080	; 0xff000000
 800d6d0:	62da      	str	r2, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 800d6d2:	6add      	ldr	r5, [r3, #44]	; 0x2c
 800d6d4:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 800d6d8:	432a      	orrs	r2, r5
 800d6da:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 800d6de:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800d6e2:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Enable the Transfer Error and FIFO underrun interrupts */
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 800d6e4:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800d6e6:	f042 0206 	orr.w	r2, r2, #6
 800d6ea:	635a      	str	r2, [r3, #52]	; 0x34

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);
 800d6ec:	699a      	ldr	r2, [r3, #24]

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
 800d6ee:	f04f 0c01 	mov.w	ip, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800d6f2:	2100      	movs	r1, #0
  __HAL_LTDC_ENABLE(hltdc);
 800d6f4:	ea42 020c 	orr.w	r2, r2, ip
 800d6f8:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800d6fa:	f8c4 10a4 	str.w	r1, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 800d6fe:	f884 c0a1 	strb.w	ip, [r4, #161]	; 0xa1

  return HAL_OK;
 800d702:	4608      	mov	r0, r1
}
 800d704:	bd38      	pop	{r3, r4, r5, pc}
    hltdc->Lock = HAL_UNLOCKED;
 800d706:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 800d70a:	f7f4 fdb7 	bl	800227c <HAL_LTDC_MspInit>
 800d70e:	e79d      	b.n	800d64c <HAL_LTDC_Init+0x14>
    return HAL_ERROR;
 800d710:	2001      	movs	r0, #1
}
 800d712:	4770      	bx	lr
 800d714:	f000f800 	.word	0xf000f800

0800d718 <HAL_LTDC_ErrorCallback>:
 800d718:	4770      	bx	lr
 800d71a:	bf00      	nop

0800d71c <HAL_LTDC_ReloadEventCallback>:
 800d71c:	4770      	bx	lr
 800d71e:	bf00      	nop

0800d720 <HAL_LTDC_IRQHandler>:
  *                the configuration information for the LTDC.
  * @retval HAL status
  */
void HAL_LTDC_IRQHandler(LTDC_HandleTypeDef *hltdc)
{
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800d720:	6803      	ldr	r3, [r0, #0]
{
 800d722:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800d724:	6b9d      	ldr	r5, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 800d726:	6b5e      	ldr	r6, [r3, #52]	; 0x34

  /* Transfer Error Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800d728:	076a      	lsls	r2, r5, #29
{
 800d72a:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800d72c:	d501      	bpl.n	800d732 <HAL_LTDC_IRQHandler+0x12>
 800d72e:	0771      	lsls	r1, r6, #29
 800d730:	d41d      	bmi.n	800d76e <HAL_LTDC_IRQHandler+0x4e>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* FIFO underrun Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 800d732:	07aa      	lsls	r2, r5, #30
 800d734:	d501      	bpl.n	800d73a <HAL_LTDC_IRQHandler+0x1a>
 800d736:	07b3      	lsls	r3, r6, #30
 800d738:	d42d      	bmi.n	800d796 <HAL_LTDC_IRQHandler+0x76>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Line Interrupt management ************************************************/
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 800d73a:	07e8      	lsls	r0, r5, #31
 800d73c:	d501      	bpl.n	800d742 <HAL_LTDC_IRQHandler+0x22>
 800d73e:	07f1      	lsls	r1, r6, #31
 800d740:	d440      	bmi.n	800d7c4 <HAL_LTDC_IRQHandler+0xa4>
    HAL_LTDC_LineEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Register reload Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 800d742:	072a      	lsls	r2, r5, #28
 800d744:	d501      	bpl.n	800d74a <HAL_LTDC_IRQHandler+0x2a>
 800d746:	0733      	lsls	r3, r6, #28
 800d748:	d400      	bmi.n	800d74c <HAL_LTDC_IRQHandler+0x2c>
#else
    /*Call Legacy Reload Event callback */
    HAL_LTDC_ReloadEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }
}
 800d74a:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800d74c:	6823      	ldr	r3, [r4, #0]
 800d74e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800d750:	2008      	movs	r0, #8
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800d752:	f022 0208 	bic.w	r2, r2, #8
 800d756:	635a      	str	r2, [r3, #52]	; 0x34
    hltdc->State = HAL_LTDC_STATE_READY;
 800d758:	2101      	movs	r1, #1
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800d75a:	63d8      	str	r0, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800d75c:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800d75e:	f884 10a1 	strb.w	r1, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800d762:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 800d766:	4620      	mov	r0, r4
 800d768:	f7ff ffd8 	bl	800d71c <HAL_LTDC_ReloadEventCallback>
}
 800d76c:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 800d76e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800d770:	f022 0204 	bic.w	r2, r2, #4
 800d774:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 800d776:	2204      	movs	r2, #4
 800d778:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 800d77a:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800d77e:	f043 0301 	orr.w	r3, r3, #1
 800d782:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 800d786:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800d788:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800d78c:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800d790:	f7ff ffc2 	bl	800d718 <HAL_LTDC_ErrorCallback>
 800d794:	e7cd      	b.n	800d732 <HAL_LTDC_IRQHandler+0x12>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 800d796:	6823      	ldr	r3, [r4, #0]
 800d798:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800d79a:	f022 0202 	bic.w	r2, r2, #2
 800d79e:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 800d7a0:	2202      	movs	r2, #2
 800d7a2:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 800d7a4:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 800d7a8:	f043 0302 	orr.w	r3, r3, #2
 800d7ac:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800d7b0:	2204      	movs	r2, #4
    __HAL_UNLOCK(hltdc);
 800d7b2:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800d7b4:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800d7b8:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800d7bc:	4620      	mov	r0, r4
 800d7be:	f7ff ffab 	bl	800d718 <HAL_LTDC_ErrorCallback>
 800d7c2:	e7ba      	b.n	800d73a <HAL_LTDC_IRQHandler+0x1a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800d7c4:	6823      	ldr	r3, [r4, #0]
 800d7c6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800d7c8:	f022 0201 	bic.w	r2, r2, #1
 800d7cc:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 800d7ce:	2201      	movs	r2, #1
 800d7d0:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800d7d2:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800d7d4:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800d7d8:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 800d7dc:	4620      	mov	r0, r4
 800d7de:	f7f5 fda7 	bl	8003330 <HAL_LTDC_LineEventCallback>
 800d7e2:	e7ae      	b.n	800d742 <HAL_LTDC_IRQHandler+0x22>

0800d7e4 <HAL_LTDC_ConfigLayer>:
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
 800d7e4:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800d7e8:	2b01      	cmp	r3, #1
 800d7ea:	f000 80c2 	beq.w	800d972 <HAL_LTDC_ConfigLayer+0x18e>
{
 800d7ee:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800d7f2:	f04f 0e34 	mov.w	lr, #52	; 0x34
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800d7f6:	f8d0 9000 	ldr.w	r9, [r0]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800d7fa:	fb0e 0e02 	mla	lr, lr, r2, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800d7fe:	2302      	movs	r3, #2
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800d800:	01d2      	lsls	r2, r2, #7
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800d802:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800d806:	f102 0684 	add.w	r6, r2, #132	; 0x84
 800d80a:	eb09 0c06 	add.w	ip, r9, r6
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800d80e:	f8d9 300c 	ldr.w	r3, [r9, #12]
 800d812:	f3c3 4a0b 	ubfx	sl, r3, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800d816:	f8dc 3004 	ldr.w	r3, [ip, #4]
{
 800d81a:	b083      	sub	sp, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800d81c:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800d820:	460c      	mov	r4, r1
 800d822:	460d      	mov	r5, r1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800d824:	9301      	str	r3, [sp, #4]
 800d826:	4680      	mov	r8, r0
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800d828:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800d82a:	f10e 0e38 	add.w	lr, lr, #56	; 0x38
 800d82e:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800d832:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800d834:	686f      	ldr	r7, [r5, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800d836:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800d83a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800d83c:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800d840:	6823      	ldr	r3, [r4, #0]
 800d842:	f8ce 3000 	str.w	r3, [lr]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800d846:	9b01      	ldr	r3, [sp, #4]
 800d848:	f8cc 3004 	str.w	r3, [ip, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800d84c:	f8d9 300c 	ldr.w	r3, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800d850:	682a      	ldr	r2, [r5, #0]

  /* Configure the vertical start and stop position */
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800d852:	68e8      	ldr	r0, [r5, #12]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 800d854:	f8d5 e018 	ldr.w	lr, [r5, #24]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800d858:	1c51      	adds	r1, r2, #1
 800d85a:	f3c3 430b 	ubfx	r3, r3, #16, #12
 800d85e:	440b      	add	r3, r1
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800d860:	44ba      	add	sl, r7
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800d862:	ea43 430a 	orr.w	r3, r3, sl, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800d866:	f8cc 3004 	str.w	r3, [ip, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800d86a:	f8d9 100c 	ldr.w	r1, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 800d86e:	f8dc 3008 	ldr.w	r3, [ip, #8]
 800d872:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
 800d876:	f8cc 3008 	str.w	r3, [ip, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800d87a:	f3c1 010a 	ubfx	r1, r1, #0, #11
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800d87e:	68ab      	ldr	r3, [r5, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800d880:	4401      	add	r1, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800d882:	f8d9 000c 	ldr.w	r0, [r9, #12]
 800d886:	3301      	adds	r3, #1
 800d888:	f3c0 000a 	ubfx	r0, r0, #0, #11
 800d88c:	4403      	add	r3, r0
 800d88e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800d892:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800d896:	f8dc 3010 	ldr.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800d89a:	6929      	ldr	r1, [r5, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800d89c:	f023 0307 	bic.w	r3, r3, #7
 800d8a0:	f8cc 3010 	str.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800d8a4:	f04f 0b00 	mov.w	fp, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800d8a8:	f8cc 1010 	str.w	r1, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800d8ac:	f8dc 3018 	ldr.w	r3, [ip, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 800d8b0:	f895 0032 	ldrb.w	r0, [r5, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 800d8b4:	f895 4031 	ldrb.w	r4, [r5, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800d8b8:	f8cc b018 	str.w	fp, [ip, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 800d8bc:	f895 3030 	ldrb.w	r3, [r5, #48]	; 0x30
 800d8c0:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
 800d8c4:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 800d8c8:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 800d8cc:	f8cc 3018 	str.w	r3, [ip, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 800d8d0:	f8dc 3014 	ldr.w	r3, [ip, #20]
 800d8d4:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 800d8d8:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 800d8dc:	696b      	ldr	r3, [r5, #20]
 800d8de:	f8cc 3014 	str.w	r3, [ip, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 800d8e2:	f8dc 301c 	ldr.w	r3, [ip, #28]
 800d8e6:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800d8ea:	f023 0307 	bic.w	r3, r3, #7
 800d8ee:	f8cc 301c 	str.w	r3, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 800d8f2:	e9d5 3007 	ldrd	r3, r0, [r5, #28]
 800d8f6:	4303      	orrs	r3, r0
 800d8f8:	f8cc 301c 	str.w	r3, [ip, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800d8fc:	f8dc 3028 	ldr.w	r3, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800d900:	6a6b      	ldr	r3, [r5, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800d902:	f8cc b028 	str.w	fp, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800d906:	f8cc 3028 	str.w	r3, [ip, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800d90a:	bb69      	cbnz	r1, 800d968 <HAL_LTDC_ConfigLayer+0x184>
  {
    tmp = 4U;
 800d90c:	2304      	movs	r3, #4
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800d90e:	1abf      	subs	r7, r7, r2
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800d910:	6aaa      	ldr	r2, [r5, #40]	; 0x28
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800d912:	fb03 f707 	mul.w	r7, r3, r7
 800d916:	3703      	adds	r7, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800d918:	fb02 f303 	mul.w	r3, r2, r3
 800d91c:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800d920:	f8dc 302c 	ldr.w	r3, [ip, #44]	; 0x2c
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800d924:	6aea      	ldr	r2, [r5, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800d926:	f003 23e0 	and.w	r3, r3, #3758153728	; 0xe000e000
 800d92a:	f8cc 302c 	str.w	r3, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800d92e:	f8cc 702c 	str.w	r7, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 800d932:	f8dc 3030 	ldr.w	r3, [ip, #48]	; 0x30
 800d936:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 800d93a:	f023 0307 	bic.w	r3, r3, #7
 800d93e:	f8cc 3030 	str.w	r3, [ip, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800d942:	f8cc 2030 	str.w	r2, [ip, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800d946:	f859 3006 	ldr.w	r3, [r9, r6]
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800d94a:	2201      	movs	r2, #1
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800d94c:	4313      	orrs	r3, r2
 800d94e:	f849 3006 	str.w	r3, [r9, r6]
  __HAL_UNLOCK(hltdc);
 800d952:	2300      	movs	r3, #0
  return HAL_OK;
 800d954:	4618      	mov	r0, r3
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800d956:	f8c9 2024 	str.w	r2, [r9, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 800d95a:	f888 20a1 	strb.w	r2, [r8, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800d95e:	f888 30a0 	strb.w	r3, [r8, #160]	; 0xa0
}
 800d962:	b003      	add	sp, #12
 800d964:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 800d968:	3901      	subs	r1, #1
 800d96a:	2906      	cmp	r1, #6
 800d96c:	d903      	bls.n	800d976 <HAL_LTDC_ConfigLayer+0x192>
  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800d96e:	2301      	movs	r3, #1
 800d970:	e7cd      	b.n	800d90e <HAL_LTDC_ConfigLayer+0x12a>
  __HAL_LOCK(hltdc);
 800d972:	2002      	movs	r0, #2
}
 800d974:	4770      	bx	lr
 800d976:	4b02      	ldr	r3, [pc, #8]	; (800d980 <HAL_LTDC_ConfigLayer+0x19c>)
 800d978:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800d97c:	e7c7      	b.n	800d90e <HAL_LTDC_ConfigLayer+0x12a>
 800d97e:	bf00      	nop
 800d980:	0803137c 	.word	0x0803137c

0800d984 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 800d984:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800d988:	2b01      	cmp	r3, #1
 800d98a:	d019      	beq.n	800d9c0 <HAL_LTDC_ProgramLineEvent+0x3c>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800d98c:	6802      	ldr	r2, [r0, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800d98e:	2302      	movs	r3, #2
{
 800d990:	b410      	push	{r4}
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800d992:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800d996:	6b53      	ldr	r3, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800d998:	4c0a      	ldr	r4, [pc, #40]	; (800d9c4 <HAL_LTDC_ProgramLineEvent+0x40>)
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800d99a:	f023 0301 	bic.w	r3, r3, #1
 800d99e:	6353      	str	r3, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800d9a0:	6421      	str	r1, [r4, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800d9a2:	6b51      	ldr	r1, [r2, #52]	; 0x34
  __HAL_UNLOCK(hltdc);
 800d9a4:	2300      	movs	r3, #0
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800d9a6:	f041 0101 	orr.w	r1, r1, #1
  hltdc->State = HAL_LTDC_STATE_READY;
 800d9aa:	f04f 0c01 	mov.w	ip, #1
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800d9ae:	6351      	str	r1, [r2, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 800d9b0:	f880 c0a1 	strb.w	ip, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800d9b4:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
}
 800d9b8:	f85d 4b04 	ldr.w	r4, [sp], #4
  return HAL_OK;
 800d9bc:	4618      	mov	r0, r3
}
 800d9be:	4770      	bx	lr
  __HAL_LOCK(hltdc);
 800d9c0:	2002      	movs	r0, #2
}
 800d9c2:	4770      	bx	lr
 800d9c4:	40016800 	.word	0x40016800

0800d9c8 <HAL_RCC_OscConfig>:
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 800d9c8:	2800      	cmp	r0, #0
 800d9ca:	f000 81a2 	beq.w	800dd12 <HAL_RCC_OscConfig+0x34a>
{
 800d9ce:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800d9d2:	6803      	ldr	r3, [r0, #0]
 800d9d4:	07dd      	lsls	r5, r3, #31
{
 800d9d6:	b082      	sub	sp, #8
 800d9d8:	4604      	mov	r4, r0
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800d9da:	d52f      	bpl.n	800da3c <HAL_RCC_OscConfig+0x74>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800d9dc:	499e      	ldr	r1, [pc, #632]	; (800dc58 <HAL_RCC_OscConfig+0x290>)
 800d9de:	688a      	ldr	r2, [r1, #8]
 800d9e0:	f002 020c 	and.w	r2, r2, #12
 800d9e4:	2a04      	cmp	r2, #4
 800d9e6:	f000 80ed 	beq.w	800dbc4 <HAL_RCC_OscConfig+0x1fc>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800d9ea:	688a      	ldr	r2, [r1, #8]
 800d9ec:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800d9f0:	2a08      	cmp	r2, #8
 800d9f2:	f000 80e3 	beq.w	800dbbc <HAL_RCC_OscConfig+0x1f4>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800d9f6:	6863      	ldr	r3, [r4, #4]
 800d9f8:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800d9fc:	f000 80ec 	beq.w	800dbd8 <HAL_RCC_OscConfig+0x210>
 800da00:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 800da04:	f000 8175 	beq.w	800dcf2 <HAL_RCC_OscConfig+0x32a>
 800da08:	4d93      	ldr	r5, [pc, #588]	; (800dc58 <HAL_RCC_OscConfig+0x290>)
 800da0a:	682a      	ldr	r2, [r5, #0]
 800da0c:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 800da10:	602a      	str	r2, [r5, #0]
 800da12:	682a      	ldr	r2, [r5, #0]
 800da14:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 800da18:	602a      	str	r2, [r5, #0]

      /* Check the HSE State */
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800da1a:	2b00      	cmp	r3, #0
 800da1c:	f040 80e1 	bne.w	800dbe2 <HAL_RCC_OscConfig+0x21a>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800da20:	f7fd fdb8 	bl	800b594 <HAL_GetTick>
 800da24:	4606      	mov	r6, r0

        /* Wait till HSE is bypassed or disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800da26:	e005      	b.n	800da34 <HAL_RCC_OscConfig+0x6c>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800da28:	f7fd fdb4 	bl	800b594 <HAL_GetTick>
 800da2c:	1b80      	subs	r0, r0, r6
 800da2e:	2864      	cmp	r0, #100	; 0x64
 800da30:	f200 8101 	bhi.w	800dc36 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800da34:	682b      	ldr	r3, [r5, #0]
 800da36:	039b      	lsls	r3, r3, #14
 800da38:	d4f6      	bmi.n	800da28 <HAL_RCC_OscConfig+0x60>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800da3a:	6823      	ldr	r3, [r4, #0]
 800da3c:	079f      	lsls	r7, r3, #30
 800da3e:	d528      	bpl.n	800da92 <HAL_RCC_OscConfig+0xca>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800da40:	4a85      	ldr	r2, [pc, #532]	; (800dc58 <HAL_RCC_OscConfig+0x290>)
 800da42:	6891      	ldr	r1, [r2, #8]
 800da44:	f011 0f0c 	tst.w	r1, #12
 800da48:	f000 8090 	beq.w	800db6c <HAL_RCC_OscConfig+0x1a4>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800da4c:	6891      	ldr	r1, [r2, #8]
 800da4e:	f001 010c 	and.w	r1, r1, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800da52:	2908      	cmp	r1, #8
 800da54:	f000 8086 	beq.w	800db64 <HAL_RCC_OscConfig+0x19c>
      }
    }
    else
    {
      /* Check the HSI State */
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 800da58:	68e3      	ldr	r3, [r4, #12]
 800da5a:	2b00      	cmp	r3, #0
 800da5c:	f000 810e 	beq.w	800dc7c <HAL_RCC_OscConfig+0x2b4>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 800da60:	4b7e      	ldr	r3, [pc, #504]	; (800dc5c <HAL_RCC_OscConfig+0x294>)

        /* Get Start Tick*/
        tickstart = HAL_GetTick();

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800da62:	4e7d      	ldr	r6, [pc, #500]	; (800dc58 <HAL_RCC_OscConfig+0x290>)
        __HAL_RCC_HSI_ENABLE();
 800da64:	2201      	movs	r2, #1
 800da66:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800da68:	f7fd fd94 	bl	800b594 <HAL_GetTick>
 800da6c:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800da6e:	e005      	b.n	800da7c <HAL_RCC_OscConfig+0xb4>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800da70:	f7fd fd90 	bl	800b594 <HAL_GetTick>
 800da74:	1b40      	subs	r0, r0, r5
 800da76:	2802      	cmp	r0, #2
 800da78:	f200 80dd 	bhi.w	800dc36 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800da7c:	6833      	ldr	r3, [r6, #0]
 800da7e:	0798      	lsls	r0, r3, #30
 800da80:	d5f6      	bpl.n	800da70 <HAL_RCC_OscConfig+0xa8>
            return HAL_TIMEOUT;
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800da82:	6833      	ldr	r3, [r6, #0]
 800da84:	6922      	ldr	r2, [r4, #16]
 800da86:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800da8a:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800da8e:	6033      	str	r3, [r6, #0]
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800da90:	6823      	ldr	r3, [r4, #0]
 800da92:	071a      	lsls	r2, r3, #28
 800da94:	d451      	bmi.n	800db3a <HAL_RCC_OscConfig+0x172>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800da96:	0758      	lsls	r0, r3, #29
 800da98:	d52f      	bpl.n	800dafa <HAL_RCC_OscConfig+0x132>
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 800da9a:	4a6f      	ldr	r2, [pc, #444]	; (800dc58 <HAL_RCC_OscConfig+0x290>)
 800da9c:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800da9e:	f013 5380 	ands.w	r3, r3, #268435456	; 0x10000000
 800daa2:	d07f      	beq.n	800dba4 <HAL_RCC_OscConfig+0x1dc>
    FlagStatus       pwrclkchanged = RESET;
 800daa4:	2500      	movs	r5, #0
    {
      __HAL_RCC_PWR_CLK_ENABLE();
      pwrclkchanged = SET;
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800daa6:	4e6e      	ldr	r6, [pc, #440]	; (800dc60 <HAL_RCC_OscConfig+0x298>)
 800daa8:	6833      	ldr	r3, [r6, #0]
 800daaa:	05d9      	lsls	r1, r3, #23
 800daac:	f140 80b3 	bpl.w	800dc16 <HAL_RCC_OscConfig+0x24e>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800dab0:	68a3      	ldr	r3, [r4, #8]
 800dab2:	2b01      	cmp	r3, #1
 800dab4:	f000 80c3 	beq.w	800dc3e <HAL_RCC_OscConfig+0x276>
 800dab8:	2b05      	cmp	r3, #5
 800daba:	f000 812c 	beq.w	800dd16 <HAL_RCC_OscConfig+0x34e>
 800dabe:	4e66      	ldr	r6, [pc, #408]	; (800dc58 <HAL_RCC_OscConfig+0x290>)
 800dac0:	6f32      	ldr	r2, [r6, #112]	; 0x70
 800dac2:	f022 0201 	bic.w	r2, r2, #1
 800dac6:	6732      	str	r2, [r6, #112]	; 0x70
 800dac8:	6f32      	ldr	r2, [r6, #112]	; 0x70
 800daca:	f022 0204 	bic.w	r2, r2, #4
 800dace:	6732      	str	r2, [r6, #112]	; 0x70
    /* Check the LSE State */
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800dad0:	2b00      	cmp	r3, #0
 800dad2:	f040 80b9 	bne.w	800dc48 <HAL_RCC_OscConfig+0x280>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 800dad6:	f7fd fd5d 	bl	800b594 <HAL_GetTick>

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800dada:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 800dade:	4607      	mov	r7, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800dae0:	e005      	b.n	800daee <HAL_RCC_OscConfig+0x126>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800dae2:	f7fd fd57 	bl	800b594 <HAL_GetTick>
 800dae6:	1bc0      	subs	r0, r0, r7
 800dae8:	4540      	cmp	r0, r8
 800daea:	f200 80a4 	bhi.w	800dc36 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800daee:	6f33      	ldr	r3, [r6, #112]	; 0x70
 800daf0:	0798      	lsls	r0, r3, #30
 800daf2:	d4f6      	bmi.n	800dae2 <HAL_RCC_OscConfig+0x11a>
        }
      }
    }

    /* Restore clock configuration if changed */
    if(pwrclkchanged == SET)
 800daf4:	2d00      	cmp	r5, #0
 800daf6:	f040 8106 	bne.w	800dd06 <HAL_RCC_OscConfig+0x33e>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 800dafa:	69a0      	ldr	r0, [r4, #24]
 800dafc:	b1c8      	cbz	r0, 800db32 <HAL_RCC_OscConfig+0x16a>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 800dafe:	4d56      	ldr	r5, [pc, #344]	; (800dc58 <HAL_RCC_OscConfig+0x290>)
 800db00:	68ab      	ldr	r3, [r5, #8]
 800db02:	f003 030c 	and.w	r3, r3, #12
 800db06:	2b08      	cmp	r3, #8
 800db08:	f000 80c9 	beq.w	800dc9e <HAL_RCC_OscConfig+0x2d6>
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 800db0c:	4b53      	ldr	r3, [pc, #332]	; (800dc5c <HAL_RCC_OscConfig+0x294>)
 800db0e:	2200      	movs	r2, #0
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800db10:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 800db12:	661a      	str	r2, [r3, #96]	; 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800db14:	f000 8109 	beq.w	800dd2a <HAL_RCC_OscConfig+0x362>
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800db18:	f7fd fd3c 	bl	800b594 <HAL_GetTick>
 800db1c:	4604      	mov	r4, r0

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800db1e:	e005      	b.n	800db2c <HAL_RCC_OscConfig+0x164>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800db20:	f7fd fd38 	bl	800b594 <HAL_GetTick>
 800db24:	1b00      	subs	r0, r0, r4
 800db26:	2802      	cmp	r0, #2
 800db28:	f200 8085 	bhi.w	800dc36 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800db2c:	682b      	ldr	r3, [r5, #0]
 800db2e:	019b      	lsls	r3, r3, #6
 800db30:	d4f6      	bmi.n	800db20 <HAL_RCC_OscConfig+0x158>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 800db32:	2000      	movs	r0, #0
}
 800db34:	b002      	add	sp, #8
 800db36:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 800db3a:	6963      	ldr	r3, [r4, #20]
 800db3c:	b30b      	cbz	r3, 800db82 <HAL_RCC_OscConfig+0x1ba>
      __HAL_RCC_LSI_ENABLE();
 800db3e:	4b47      	ldr	r3, [pc, #284]	; (800dc5c <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800db40:	4e45      	ldr	r6, [pc, #276]	; (800dc58 <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_ENABLE();
 800db42:	2201      	movs	r2, #1
 800db44:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800db48:	f7fd fd24 	bl	800b594 <HAL_GetTick>
 800db4c:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800db4e:	e004      	b.n	800db5a <HAL_RCC_OscConfig+0x192>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800db50:	f7fd fd20 	bl	800b594 <HAL_GetTick>
 800db54:	1b40      	subs	r0, r0, r5
 800db56:	2802      	cmp	r0, #2
 800db58:	d86d      	bhi.n	800dc36 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800db5a:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800db5c:	079b      	lsls	r3, r3, #30
 800db5e:	d5f7      	bpl.n	800db50 <HAL_RCC_OscConfig+0x188>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800db60:	6823      	ldr	r3, [r4, #0]
 800db62:	e798      	b.n	800da96 <HAL_RCC_OscConfig+0xce>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800db64:	6852      	ldr	r2, [r2, #4]
 800db66:	0256      	lsls	r6, r2, #9
 800db68:	f53f af76 	bmi.w	800da58 <HAL_RCC_OscConfig+0x90>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800db6c:	4a3a      	ldr	r2, [pc, #232]	; (800dc58 <HAL_RCC_OscConfig+0x290>)
 800db6e:	6812      	ldr	r2, [r2, #0]
 800db70:	0795      	lsls	r5, r2, #30
 800db72:	d544      	bpl.n	800dbfe <HAL_RCC_OscConfig+0x236>
 800db74:	68e2      	ldr	r2, [r4, #12]
 800db76:	2a01      	cmp	r2, #1
 800db78:	d041      	beq.n	800dbfe <HAL_RCC_OscConfig+0x236>
        return HAL_ERROR;
 800db7a:	2001      	movs	r0, #1
}
 800db7c:	b002      	add	sp, #8
 800db7e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_LSI_DISABLE();
 800db82:	4a36      	ldr	r2, [pc, #216]	; (800dc5c <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800db84:	4e34      	ldr	r6, [pc, #208]	; (800dc58 <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_DISABLE();
 800db86:	f8c2 3e80 	str.w	r3, [r2, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800db8a:	f7fd fd03 	bl	800b594 <HAL_GetTick>
 800db8e:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800db90:	e004      	b.n	800db9c <HAL_RCC_OscConfig+0x1d4>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800db92:	f7fd fcff 	bl	800b594 <HAL_GetTick>
 800db96:	1b40      	subs	r0, r0, r5
 800db98:	2802      	cmp	r0, #2
 800db9a:	d84c      	bhi.n	800dc36 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800db9c:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800db9e:	079f      	lsls	r7, r3, #30
 800dba0:	d4f7      	bmi.n	800db92 <HAL_RCC_OscConfig+0x1ca>
 800dba2:	e7dd      	b.n	800db60 <HAL_RCC_OscConfig+0x198>
      __HAL_RCC_PWR_CLK_ENABLE();
 800dba4:	9301      	str	r3, [sp, #4]
 800dba6:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800dba8:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800dbac:	6413      	str	r3, [r2, #64]	; 0x40
 800dbae:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800dbb0:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800dbb4:	9301      	str	r3, [sp, #4]
 800dbb6:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 800dbb8:	2501      	movs	r5, #1
 800dbba:	e774      	b.n	800daa6 <HAL_RCC_OscConfig+0xde>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800dbbc:	684a      	ldr	r2, [r1, #4]
 800dbbe:	0250      	lsls	r0, r2, #9
 800dbc0:	f57f af19 	bpl.w	800d9f6 <HAL_RCC_OscConfig+0x2e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800dbc4:	4a24      	ldr	r2, [pc, #144]	; (800dc58 <HAL_RCC_OscConfig+0x290>)
 800dbc6:	6812      	ldr	r2, [r2, #0]
 800dbc8:	0391      	lsls	r1, r2, #14
 800dbca:	f57f af37 	bpl.w	800da3c <HAL_RCC_OscConfig+0x74>
 800dbce:	6862      	ldr	r2, [r4, #4]
 800dbd0:	2a00      	cmp	r2, #0
 800dbd2:	f47f af33 	bne.w	800da3c <HAL_RCC_OscConfig+0x74>
 800dbd6:	e7d0      	b.n	800db7a <HAL_RCC_OscConfig+0x1b2>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800dbd8:	4a1f      	ldr	r2, [pc, #124]	; (800dc58 <HAL_RCC_OscConfig+0x290>)
 800dbda:	6813      	ldr	r3, [r2, #0]
 800dbdc:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800dbe0:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800dbe2:	f7fd fcd7 	bl	800b594 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800dbe6:	4e1c      	ldr	r6, [pc, #112]	; (800dc58 <HAL_RCC_OscConfig+0x290>)
        tickstart = HAL_GetTick();
 800dbe8:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800dbea:	e004      	b.n	800dbf6 <HAL_RCC_OscConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800dbec:	f7fd fcd2 	bl	800b594 <HAL_GetTick>
 800dbf0:	1b40      	subs	r0, r0, r5
 800dbf2:	2864      	cmp	r0, #100	; 0x64
 800dbf4:	d81f      	bhi.n	800dc36 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800dbf6:	6833      	ldr	r3, [r6, #0]
 800dbf8:	039a      	lsls	r2, r3, #14
 800dbfa:	d5f7      	bpl.n	800dbec <HAL_RCC_OscConfig+0x224>
 800dbfc:	e71d      	b.n	800da3a <HAL_RCC_OscConfig+0x72>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800dbfe:	4916      	ldr	r1, [pc, #88]	; (800dc58 <HAL_RCC_OscConfig+0x290>)
 800dc00:	6920      	ldr	r0, [r4, #16]
 800dc02:	680a      	ldr	r2, [r1, #0]
 800dc04:	f022 02f8 	bic.w	r2, r2, #248	; 0xf8
 800dc08:	ea42 02c0 	orr.w	r2, r2, r0, lsl #3
 800dc0c:	600a      	str	r2, [r1, #0]
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800dc0e:	071a      	lsls	r2, r3, #28
 800dc10:	f57f af41 	bpl.w	800da96 <HAL_RCC_OscConfig+0xce>
 800dc14:	e791      	b.n	800db3a <HAL_RCC_OscConfig+0x172>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 800dc16:	6833      	ldr	r3, [r6, #0]
 800dc18:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800dc1c:	6033      	str	r3, [r6, #0]
      tickstart = HAL_GetTick();
 800dc1e:	f7fd fcb9 	bl	800b594 <HAL_GetTick>
 800dc22:	4607      	mov	r7, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800dc24:	6833      	ldr	r3, [r6, #0]
 800dc26:	05da      	lsls	r2, r3, #23
 800dc28:	f53f af42 	bmi.w	800dab0 <HAL_RCC_OscConfig+0xe8>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800dc2c:	f7fd fcb2 	bl	800b594 <HAL_GetTick>
 800dc30:	1bc0      	subs	r0, r0, r7
 800dc32:	2802      	cmp	r0, #2
 800dc34:	d9f6      	bls.n	800dc24 <HAL_RCC_OscConfig+0x25c>
            return HAL_TIMEOUT;
 800dc36:	2003      	movs	r0, #3
}
 800dc38:	b002      	add	sp, #8
 800dc3a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800dc3e:	4a06      	ldr	r2, [pc, #24]	; (800dc58 <HAL_RCC_OscConfig+0x290>)
 800dc40:	6f13      	ldr	r3, [r2, #112]	; 0x70
 800dc42:	f043 0301 	orr.w	r3, r3, #1
 800dc46:	6713      	str	r3, [r2, #112]	; 0x70
      tickstart = HAL_GetTick();
 800dc48:	f7fd fca4 	bl	800b594 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800dc4c:	4f02      	ldr	r7, [pc, #8]	; (800dc58 <HAL_RCC_OscConfig+0x290>)
      tickstart = HAL_GetTick();
 800dc4e:	4606      	mov	r6, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800dc50:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800dc54:	e00b      	b.n	800dc6e <HAL_RCC_OscConfig+0x2a6>
 800dc56:	bf00      	nop
 800dc58:	40023800 	.word	0x40023800
 800dc5c:	42470000 	.word	0x42470000
 800dc60:	40007000 	.word	0x40007000
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800dc64:	f7fd fc96 	bl	800b594 <HAL_GetTick>
 800dc68:	1b80      	subs	r0, r0, r6
 800dc6a:	4540      	cmp	r0, r8
 800dc6c:	d8e3      	bhi.n	800dc36 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800dc6e:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800dc70:	079b      	lsls	r3, r3, #30
 800dc72:	d5f7      	bpl.n	800dc64 <HAL_RCC_OscConfig+0x29c>
    if(pwrclkchanged == SET)
 800dc74:	2d00      	cmp	r5, #0
 800dc76:	f43f af40 	beq.w	800dafa <HAL_RCC_OscConfig+0x132>
 800dc7a:	e044      	b.n	800dd06 <HAL_RCC_OscConfig+0x33e>
        __HAL_RCC_HSI_DISABLE();
 800dc7c:	4a42      	ldr	r2, [pc, #264]	; (800dd88 <HAL_RCC_OscConfig+0x3c0>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800dc7e:	4e43      	ldr	r6, [pc, #268]	; (800dd8c <HAL_RCC_OscConfig+0x3c4>)
        __HAL_RCC_HSI_DISABLE();
 800dc80:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800dc82:	f7fd fc87 	bl	800b594 <HAL_GetTick>
 800dc86:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800dc88:	e004      	b.n	800dc94 <HAL_RCC_OscConfig+0x2cc>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800dc8a:	f7fd fc83 	bl	800b594 <HAL_GetTick>
 800dc8e:	1b40      	subs	r0, r0, r5
 800dc90:	2802      	cmp	r0, #2
 800dc92:	d8d0      	bhi.n	800dc36 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800dc94:	6833      	ldr	r3, [r6, #0]
 800dc96:	0799      	lsls	r1, r3, #30
 800dc98:	d4f7      	bmi.n	800dc8a <HAL_RCC_OscConfig+0x2c2>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800dc9a:	6823      	ldr	r3, [r4, #0]
 800dc9c:	e6f9      	b.n	800da92 <HAL_RCC_OscConfig+0xca>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 800dc9e:	2801      	cmp	r0, #1
 800dca0:	f43f af48 	beq.w	800db34 <HAL_RCC_OscConfig+0x16c>
        pll_config = RCC->PLLCFGR;
 800dca4:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800dca6:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800dca8:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800dcac:	4291      	cmp	r1, r2
 800dcae:	f47f af64 	bne.w	800db7a <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800dcb2:	6a22      	ldr	r2, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800dcb4:	f003 013f 	and.w	r1, r3, #63	; 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800dcb8:	4291      	cmp	r1, r2
 800dcba:	f47f af5e 	bne.w	800db7a <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800dcbe:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800dcc0:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 800dcc4:	401a      	ands	r2, r3
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800dcc6:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 800dcca:	f47f af56 	bne.w	800db7a <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800dcce:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800dcd0:	0852      	lsrs	r2, r2, #1
 800dcd2:	f403 3140 	and.w	r1, r3, #196608	; 0x30000
 800dcd6:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800dcd8:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 800dcdc:	f47f af4d 	bne.w	800db7a <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 800dce0:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800dce2:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800dce6:	ebb3 6f02 	cmp.w	r3, r2, lsl #24
    return HAL_ERROR;
 800dcea:	bf14      	ite	ne
 800dcec:	2001      	movne	r0, #1
 800dcee:	2000      	moveq	r0, #0
 800dcf0:	e720      	b.n	800db34 <HAL_RCC_OscConfig+0x16c>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800dcf2:	4b26      	ldr	r3, [pc, #152]	; (800dd8c <HAL_RCC_OscConfig+0x3c4>)
 800dcf4:	681a      	ldr	r2, [r3, #0]
 800dcf6:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 800dcfa:	601a      	str	r2, [r3, #0]
 800dcfc:	681a      	ldr	r2, [r3, #0]
 800dcfe:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 800dd02:	601a      	str	r2, [r3, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800dd04:	e76d      	b.n	800dbe2 <HAL_RCC_OscConfig+0x21a>
      __HAL_RCC_PWR_CLK_DISABLE();
 800dd06:	4a21      	ldr	r2, [pc, #132]	; (800dd8c <HAL_RCC_OscConfig+0x3c4>)
 800dd08:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800dd0a:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800dd0e:	6413      	str	r3, [r2, #64]	; 0x40
 800dd10:	e6f3      	b.n	800dafa <HAL_RCC_OscConfig+0x132>
    return HAL_ERROR;
 800dd12:	2001      	movs	r0, #1
}
 800dd14:	4770      	bx	lr
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800dd16:	4b1d      	ldr	r3, [pc, #116]	; (800dd8c <HAL_RCC_OscConfig+0x3c4>)
 800dd18:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800dd1a:	f042 0204 	orr.w	r2, r2, #4
 800dd1e:	671a      	str	r2, [r3, #112]	; 0x70
 800dd20:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800dd22:	f042 0201 	orr.w	r2, r2, #1
 800dd26:	671a      	str	r2, [r3, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800dd28:	e78e      	b.n	800dc48 <HAL_RCC_OscConfig+0x280>
        tickstart = HAL_GetTick();
 800dd2a:	f7fd fc33 	bl	800b594 <HAL_GetTick>
 800dd2e:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800dd30:	e005      	b.n	800dd3e <HAL_RCC_OscConfig+0x376>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800dd32:	f7fd fc2f 	bl	800b594 <HAL_GetTick>
 800dd36:	1b80      	subs	r0, r0, r6
 800dd38:	2802      	cmp	r0, #2
 800dd3a:	f63f af7c 	bhi.w	800dc36 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800dd3e:	682b      	ldr	r3, [r5, #0]
 800dd40:	0199      	lsls	r1, r3, #6
 800dd42:	d4f6      	bmi.n	800dd32 <HAL_RCC_OscConfig+0x36a>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800dd44:	e9d4 3107 	ldrd	r3, r1, [r4, #28]
 800dd48:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800dd4a:	430b      	orrs	r3, r1
 800dd4c:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800dd50:	e9d4 210a 	ldrd	r2, r1, [r4, #40]	; 0x28
 800dd54:	0852      	lsrs	r2, r2, #1
 800dd56:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
 800dd5a:	3a01      	subs	r2, #1
        __HAL_RCC_PLL_ENABLE();
 800dd5c:	490a      	ldr	r1, [pc, #40]	; (800dd88 <HAL_RCC_OscConfig+0x3c0>)
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800dd5e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
        __HAL_RCC_PLL_ENABLE();
 800dd62:	2201      	movs	r2, #1
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800dd64:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 800dd66:	660a      	str	r2, [r1, #96]	; 0x60
        tickstart = HAL_GetTick();
 800dd68:	f7fd fc14 	bl	800b594 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800dd6c:	4d07      	ldr	r5, [pc, #28]	; (800dd8c <HAL_RCC_OscConfig+0x3c4>)
        tickstart = HAL_GetTick();
 800dd6e:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800dd70:	e005      	b.n	800dd7e <HAL_RCC_OscConfig+0x3b6>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800dd72:	f7fd fc0f 	bl	800b594 <HAL_GetTick>
 800dd76:	1b00      	subs	r0, r0, r4
 800dd78:	2802      	cmp	r0, #2
 800dd7a:	f63f af5c 	bhi.w	800dc36 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800dd7e:	682b      	ldr	r3, [r5, #0]
 800dd80:	019a      	lsls	r2, r3, #6
 800dd82:	d5f6      	bpl.n	800dd72 <HAL_RCC_OscConfig+0x3aa>
 800dd84:	e6d5      	b.n	800db32 <HAL_RCC_OscConfig+0x16a>
 800dd86:	bf00      	nop
 800dd88:	42470000 	.word	0x42470000
 800dd8c:	40023800 	.word	0x40023800

0800dd90 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800dd90:	4916      	ldr	r1, [pc, #88]	; (800ddec <HAL_RCC_GetSysClockFreq+0x5c>)
{
 800dd92:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800dd94:	688b      	ldr	r3, [r1, #8]
 800dd96:	f003 030c 	and.w	r3, r3, #12
 800dd9a:	2b04      	cmp	r3, #4
 800dd9c:	d01b      	beq.n	800ddd6 <HAL_RCC_GetSysClockFreq+0x46>
 800dd9e:	2b08      	cmp	r3, #8
 800dda0:	d117      	bne.n	800ddd2 <HAL_RCC_GetSysClockFreq+0x42>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800dda2:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800dda4:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800dda6:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800dda8:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800ddac:	f002 023f 	and.w	r2, r2, #63	; 0x3f
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800ddb0:	d113      	bne.n	800ddda <HAL_RCC_GetSysClockFreq+0x4a>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800ddb2:	480f      	ldr	r0, [pc, #60]	; (800ddf0 <HAL_RCC_GetSysClockFreq+0x60>)
 800ddb4:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800ddb8:	fba1 0100 	umull	r0, r1, r1, r0
 800ddbc:	f7f2 fee6 	bl	8000b8c <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 800ddc0:	4b0a      	ldr	r3, [pc, #40]	; (800ddec <HAL_RCC_GetSysClockFreq+0x5c>)
 800ddc2:	685b      	ldr	r3, [r3, #4]
 800ddc4:	f3c3 4301 	ubfx	r3, r3, #16, #2
 800ddc8:	3301      	adds	r3, #1
 800ddca:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 800ddcc:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 800ddd0:	bd08      	pop	{r3, pc}
      sysclockfreq = HSI_VALUE;
 800ddd2:	4807      	ldr	r0, [pc, #28]	; (800ddf0 <HAL_RCC_GetSysClockFreq+0x60>)
}
 800ddd4:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800ddd6:	4807      	ldr	r0, [pc, #28]	; (800ddf4 <HAL_RCC_GetSysClockFreq+0x64>)
}
 800ddd8:	bd08      	pop	{r3, pc}
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800ddda:	4806      	ldr	r0, [pc, #24]	; (800ddf4 <HAL_RCC_GetSysClockFreq+0x64>)
 800dddc:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800dde0:	2300      	movs	r3, #0
 800dde2:	fba1 0100 	umull	r0, r1, r1, r0
 800dde6:	f7f2 fed1 	bl	8000b8c <__aeabi_uldivmod>
 800ddea:	e7e9      	b.n	800ddc0 <HAL_RCC_GetSysClockFreq+0x30>
 800ddec:	40023800 	.word	0x40023800
 800ddf0:	00f42400 	.word	0x00f42400
 800ddf4:	007a1200 	.word	0x007a1200

0800ddf8 <HAL_RCC_ClockConfig>:
  if(RCC_ClkInitStruct == NULL)
 800ddf8:	2800      	cmp	r0, #0
 800ddfa:	f000 8087 	beq.w	800df0c <HAL_RCC_ClockConfig+0x114>
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800ddfe:	4a48      	ldr	r2, [pc, #288]	; (800df20 <HAL_RCC_ClockConfig+0x128>)
 800de00:	6813      	ldr	r3, [r2, #0]
 800de02:	f003 030f 	and.w	r3, r3, #15
 800de06:	428b      	cmp	r3, r1
{
 800de08:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800de0c:	460d      	mov	r5, r1
 800de0e:	4604      	mov	r4, r0
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800de10:	d209      	bcs.n	800de26 <HAL_RCC_ClockConfig+0x2e>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800de12:	b2cb      	uxtb	r3, r1
 800de14:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800de16:	6813      	ldr	r3, [r2, #0]
 800de18:	f003 030f 	and.w	r3, r3, #15
 800de1c:	428b      	cmp	r3, r1
 800de1e:	d002      	beq.n	800de26 <HAL_RCC_ClockConfig+0x2e>
    return HAL_ERROR;
 800de20:	2001      	movs	r0, #1
}
 800de22:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800de26:	6823      	ldr	r3, [r4, #0]
 800de28:	0798      	lsls	r0, r3, #30
 800de2a:	d514      	bpl.n	800de56 <HAL_RCC_ClockConfig+0x5e>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800de2c:	0759      	lsls	r1, r3, #29
 800de2e:	d504      	bpl.n	800de3a <HAL_RCC_ClockConfig+0x42>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 800de30:	493c      	ldr	r1, [pc, #240]	; (800df24 <HAL_RCC_ClockConfig+0x12c>)
 800de32:	688a      	ldr	r2, [r1, #8]
 800de34:	f442 52e0 	orr.w	r2, r2, #7168	; 0x1c00
 800de38:	608a      	str	r2, [r1, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800de3a:	071a      	lsls	r2, r3, #28
 800de3c:	d504      	bpl.n	800de48 <HAL_RCC_ClockConfig+0x50>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 800de3e:	4939      	ldr	r1, [pc, #228]	; (800df24 <HAL_RCC_ClockConfig+0x12c>)
 800de40:	688a      	ldr	r2, [r1, #8]
 800de42:	f442 4260 	orr.w	r2, r2, #57344	; 0xe000
 800de46:	608a      	str	r2, [r1, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800de48:	4936      	ldr	r1, [pc, #216]	; (800df24 <HAL_RCC_ClockConfig+0x12c>)
 800de4a:	68a0      	ldr	r0, [r4, #8]
 800de4c:	688a      	ldr	r2, [r1, #8]
 800de4e:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 800de52:	4302      	orrs	r2, r0
 800de54:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800de56:	07df      	lsls	r7, r3, #31
 800de58:	d521      	bpl.n	800de9e <HAL_RCC_ClockConfig+0xa6>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800de5a:	6862      	ldr	r2, [r4, #4]
 800de5c:	2a01      	cmp	r2, #1
 800de5e:	d057      	beq.n	800df10 <HAL_RCC_ClockConfig+0x118>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800de60:	1e93      	subs	r3, r2, #2
 800de62:	2b01      	cmp	r3, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800de64:	4b2f      	ldr	r3, [pc, #188]	; (800df24 <HAL_RCC_ClockConfig+0x12c>)
 800de66:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800de68:	d94d      	bls.n	800df06 <HAL_RCC_ClockConfig+0x10e>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800de6a:	0799      	lsls	r1, r3, #30
 800de6c:	d5d8      	bpl.n	800de20 <HAL_RCC_ClockConfig+0x28>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800de6e:	4e2d      	ldr	r6, [pc, #180]	; (800df24 <HAL_RCC_ClockConfig+0x12c>)
 800de70:	68b3      	ldr	r3, [r6, #8]
 800de72:	f023 0303 	bic.w	r3, r3, #3
 800de76:	4313      	orrs	r3, r2
 800de78:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 800de7a:	f7fd fb8b 	bl	800b594 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800de7e:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 800de82:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800de84:	e004      	b.n	800de90 <HAL_RCC_ClockConfig+0x98>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800de86:	f7fd fb85 	bl	800b594 <HAL_GetTick>
 800de8a:	1bc0      	subs	r0, r0, r7
 800de8c:	4540      	cmp	r0, r8
 800de8e:	d844      	bhi.n	800df1a <HAL_RCC_ClockConfig+0x122>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800de90:	68b3      	ldr	r3, [r6, #8]
 800de92:	6862      	ldr	r2, [r4, #4]
 800de94:	f003 030c 	and.w	r3, r3, #12
 800de98:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 800de9c:	d1f3      	bne.n	800de86 <HAL_RCC_ClockConfig+0x8e>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 800de9e:	4a20      	ldr	r2, [pc, #128]	; (800df20 <HAL_RCC_ClockConfig+0x128>)
 800dea0:	6813      	ldr	r3, [r2, #0]
 800dea2:	f003 030f 	and.w	r3, r3, #15
 800dea6:	42ab      	cmp	r3, r5
 800dea8:	d906      	bls.n	800deb8 <HAL_RCC_ClockConfig+0xc0>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800deaa:	b2eb      	uxtb	r3, r5
 800deac:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800deae:	6813      	ldr	r3, [r2, #0]
 800deb0:	f003 030f 	and.w	r3, r3, #15
 800deb4:	42ab      	cmp	r3, r5
 800deb6:	d1b3      	bne.n	800de20 <HAL_RCC_ClockConfig+0x28>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800deb8:	6823      	ldr	r3, [r4, #0]
 800deba:	075a      	lsls	r2, r3, #29
 800debc:	d506      	bpl.n	800decc <HAL_RCC_ClockConfig+0xd4>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800debe:	4919      	ldr	r1, [pc, #100]	; (800df24 <HAL_RCC_ClockConfig+0x12c>)
 800dec0:	68e0      	ldr	r0, [r4, #12]
 800dec2:	688a      	ldr	r2, [r1, #8]
 800dec4:	f422 52e0 	bic.w	r2, r2, #7168	; 0x1c00
 800dec8:	4302      	orrs	r2, r0
 800deca:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800decc:	071b      	lsls	r3, r3, #28
 800dece:	d507      	bpl.n	800dee0 <HAL_RCC_ClockConfig+0xe8>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 800ded0:	4a14      	ldr	r2, [pc, #80]	; (800df24 <HAL_RCC_ClockConfig+0x12c>)
 800ded2:	6921      	ldr	r1, [r4, #16]
 800ded4:	6893      	ldr	r3, [r2, #8]
 800ded6:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 800deda:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800dede:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800dee0:	f7ff ff56 	bl	800dd90 <HAL_RCC_GetSysClockFreq>
 800dee4:	4a0f      	ldr	r2, [pc, #60]	; (800df24 <HAL_RCC_ClockConfig+0x12c>)
 800dee6:	4c10      	ldr	r4, [pc, #64]	; (800df28 <HAL_RCC_ClockConfig+0x130>)
 800dee8:	6892      	ldr	r2, [r2, #8]
 800deea:	4910      	ldr	r1, [pc, #64]	; (800df2c <HAL_RCC_ClockConfig+0x134>)
 800deec:	f3c2 1203 	ubfx	r2, r2, #4, #4
 800def0:	4603      	mov	r3, r0
 800def2:	5ca2      	ldrb	r2, [r4, r2]
  HAL_InitTick (uwTickPrio);
 800def4:	480e      	ldr	r0, [pc, #56]	; (800df30 <HAL_RCC_ClockConfig+0x138>)
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800def6:	40d3      	lsrs	r3, r2
  HAL_InitTick (uwTickPrio);
 800def8:	6800      	ldr	r0, [r0, #0]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800defa:	600b      	str	r3, [r1, #0]
  HAL_InitTick (uwTickPrio);
 800defc:	f7f4 fbf8 	bl	80026f0 <HAL_InitTick>
  return HAL_OK;
 800df00:	2000      	movs	r0, #0
}
 800df02:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800df06:	0198      	lsls	r0, r3, #6
 800df08:	d4b1      	bmi.n	800de6e <HAL_RCC_ClockConfig+0x76>
 800df0a:	e789      	b.n	800de20 <HAL_RCC_ClockConfig+0x28>
    return HAL_ERROR;
 800df0c:	2001      	movs	r0, #1
}
 800df0e:	4770      	bx	lr
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800df10:	4b04      	ldr	r3, [pc, #16]	; (800df24 <HAL_RCC_ClockConfig+0x12c>)
 800df12:	681b      	ldr	r3, [r3, #0]
 800df14:	039e      	lsls	r6, r3, #14
 800df16:	d4aa      	bmi.n	800de6e <HAL_RCC_ClockConfig+0x76>
 800df18:	e782      	b.n	800de20 <HAL_RCC_ClockConfig+0x28>
        return HAL_TIMEOUT;
 800df1a:	2003      	movs	r0, #3
 800df1c:	e781      	b.n	800de22 <HAL_RCC_ClockConfig+0x2a>
 800df1e:	bf00      	nop
 800df20:	40023c00 	.word	0x40023c00
 800df24:	40023800 	.word	0x40023800
 800df28:	08031364 	.word	0x08031364
 800df2c:	2000007c 	.word	0x2000007c
 800df30:	20000084 	.word	0x20000084

0800df34 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800df34:	4b04      	ldr	r3, [pc, #16]	; (800df48 <HAL_RCC_GetPCLK1Freq+0x14>)
  return SystemCoreClock;
 800df36:	4905      	ldr	r1, [pc, #20]	; (800df4c <HAL_RCC_GetPCLK1Freq+0x18>)
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800df38:	689b      	ldr	r3, [r3, #8]
 800df3a:	4a05      	ldr	r2, [pc, #20]	; (800df50 <HAL_RCC_GetPCLK1Freq+0x1c>)
 800df3c:	6808      	ldr	r0, [r1, #0]
 800df3e:	f3c3 2382 	ubfx	r3, r3, #10, #3
 800df42:	5cd3      	ldrb	r3, [r2, r3]
}
 800df44:	40d8      	lsrs	r0, r3
 800df46:	4770      	bx	lr
 800df48:	40023800 	.word	0x40023800
 800df4c:	2000007c 	.word	0x2000007c
 800df50:	08031374 	.word	0x08031374

0800df54 <HAL_RCC_GetClockConfig>:
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800df54:	4b0e      	ldr	r3, [pc, #56]	; (800df90 <HAL_RCC_GetClockConfig+0x3c>)
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 800df56:	220f      	movs	r2, #15
 800df58:	6002      	str	r2, [r0, #0]
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800df5a:	689a      	ldr	r2, [r3, #8]
 800df5c:	f002 0203 	and.w	r2, r2, #3
 800df60:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 800df62:	689a      	ldr	r2, [r3, #8]
 800df64:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 800df68:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 800df6a:	689a      	ldr	r2, [r3, #8]
 800df6c:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 800df70:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800df72:	689b      	ldr	r3, [r3, #8]
 800df74:	08db      	lsrs	r3, r3, #3
{
 800df76:	b410      	push	{r4}
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800df78:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800df7c:	4c05      	ldr	r4, [pc, #20]	; (800df94 <HAL_RCC_GetClockConfig+0x40>)
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800df7e:	6103      	str	r3, [r0, #16]
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800df80:	6823      	ldr	r3, [r4, #0]
}
 800df82:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800df86:	f003 030f 	and.w	r3, r3, #15
 800df8a:	600b      	str	r3, [r1, #0]
}
 800df8c:	4770      	bx	lr
 800df8e:	bf00      	nop
 800df90:	40023800 	.word	0x40023800
 800df94:	40023c00 	.word	0x40023c00

0800df98 <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 800df98:	b5f0      	push	{r4, r5, r6, r7, lr}
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 800df9a:	6803      	ldr	r3, [r0, #0]
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800df9c:	f013 0f43 	tst.w	r3, #67	; 0x43
{
 800dfa0:	b083      	sub	sp, #12
 800dfa2:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800dfa4:	d111      	bne.n	800dfca <HAL_RCCEx_PeriphCLKConfig+0x32>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800dfa6:	f013 0f0c 	tst.w	r3, #12
 800dfaa:	d16f      	bne.n	800e08c <HAL_RCCEx_PeriphCLKConfig+0xf4>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800dfac:	0698      	lsls	r0, r3, #26
 800dfae:	f100 80c2 	bmi.w	800e136 <HAL_RCCEx_PeriphCLKConfig+0x19e>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800dfb2:	f013 0310 	ands.w	r3, r3, #16
 800dfb6:	f000 80bb 	beq.w	800e130 <HAL_RCCEx_PeriphCLKConfig+0x198>
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 800dfba:	4b89      	ldr	r3, [pc, #548]	; (800e1e0 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 800dfbc:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
 800dfc0:	f8c3 21e0 	str.w	r2, [r3, #480]	; 0x1e0
  }
  return HAL_OK;
 800dfc4:	2000      	movs	r0, #0
}
 800dfc6:	b003      	add	sp, #12
 800dfc8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLI2S_DISABLE();
 800dfca:	4b86      	ldr	r3, [pc, #536]	; (800e1e4 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800dfcc:	4e86      	ldr	r6, [pc, #536]	; (800e1e8 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLI2S_DISABLE();
 800dfce:	2200      	movs	r2, #0
 800dfd0:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800dfd2:	f7fd fadf 	bl	800b594 <HAL_GetTick>
 800dfd6:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800dfd8:	e004      	b.n	800dfe4 <HAL_RCCEx_PeriphCLKConfig+0x4c>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800dfda:	f7fd fadb 	bl	800b594 <HAL_GetTick>
 800dfde:	1b43      	subs	r3, r0, r5
 800dfe0:	2b02      	cmp	r3, #2
 800dfe2:	d850      	bhi.n	800e086 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800dfe4:	6833      	ldr	r3, [r6, #0]
 800dfe6:	0118      	lsls	r0, r3, #4
 800dfe8:	d4f7      	bmi.n	800dfda <HAL_RCCEx_PeriphCLKConfig+0x42>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 800dfea:	6823      	ldr	r3, [r4, #0]
 800dfec:	07d9      	lsls	r1, r3, #31
 800dfee:	d506      	bpl.n	800dffe <HAL_RCCEx_PeriphCLKConfig+0x66>
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 800dff0:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 800dff4:	0712      	lsls	r2, r2, #28
 800dff6:	ea42 1281 	orr.w	r2, r2, r1, lsl #6
 800dffa:	f8c6 2084 	str.w	r2, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 800dffe:	079a      	lsls	r2, r3, #30
 800e000:	d515      	bpl.n	800e02e <HAL_RCCEx_PeriphCLKConfig+0x96>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800e002:	4979      	ldr	r1, [pc, #484]	; (800e1e8 <HAL_RCCEx_PeriphCLKConfig+0x250>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800e004:	68e2      	ldr	r2, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800e006:	f8d1 0084 	ldr.w	r0, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800e00a:	6865      	ldr	r5, [r4, #4]
 800e00c:	0612      	lsls	r2, r2, #24
 800e00e:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 800e012:	ea42 1285 	orr.w	r2, r2, r5, lsl #6
 800e016:	4302      	orrs	r2, r0
 800e018:	f8c1 2084 	str.w	r2, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 800e01c:	f8d1 008c 	ldr.w	r0, [r1, #140]	; 0x8c
 800e020:	69e2      	ldr	r2, [r4, #28]
 800e022:	f020 001f 	bic.w	r0, r0, #31
 800e026:	3a01      	subs	r2, #1
 800e028:	4302      	orrs	r2, r0
 800e02a:	f8c1 208c 	str.w	r2, [r1, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 800e02e:	065b      	lsls	r3, r3, #25
 800e030:	d509      	bpl.n	800e046 <HAL_RCCEx_PeriphCLKConfig+0xae>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 800e032:	1d20      	adds	r0, r4, #4
 800e034:	c80b      	ldmia	r0, {r0, r1, r3}
 800e036:	061b      	lsls	r3, r3, #24
 800e038:	4a6b      	ldr	r2, [pc, #428]	; (800e1e8 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800e03a:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800e03e:	ea43 7301 	orr.w	r3, r3, r1, lsl #28
 800e042:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 800e046:	4b67      	ldr	r3, [pc, #412]	; (800e1e4 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800e048:	4e67      	ldr	r6, [pc, #412]	; (800e1e8 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLI2S_ENABLE();
 800e04a:	2201      	movs	r2, #1
 800e04c:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800e04e:	f7fd faa1 	bl	800b594 <HAL_GetTick>
 800e052:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800e054:	e004      	b.n	800e060 <HAL_RCCEx_PeriphCLKConfig+0xc8>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800e056:	f7fd fa9d 	bl	800b594 <HAL_GetTick>
 800e05a:	1b40      	subs	r0, r0, r5
 800e05c:	2802      	cmp	r0, #2
 800e05e:	d812      	bhi.n	800e086 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800e060:	6833      	ldr	r3, [r6, #0]
 800e062:	011f      	lsls	r7, r3, #4
 800e064:	d5f7      	bpl.n	800e056 <HAL_RCCEx_PeriphCLKConfig+0xbe>
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800e066:	6823      	ldr	r3, [r4, #0]
 800e068:	e79d      	b.n	800dfa6 <HAL_RCCEx_PeriphCLKConfig+0xe>
        tickstart = HAL_GetTick();
 800e06a:	f7fd fa93 	bl	800b594 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800e06e:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 800e072:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800e074:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800e076:	079b      	lsls	r3, r3, #30
 800e078:	f100 80a5 	bmi.w	800e1c6 <HAL_RCCEx_PeriphCLKConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800e07c:	f7fd fa8a 	bl	800b594 <HAL_GetTick>
 800e080:	1b80      	subs	r0, r0, r6
 800e082:	42b8      	cmp	r0, r7
 800e084:	d9f6      	bls.n	800e074 <HAL_RCCEx_PeriphCLKConfig+0xdc>
        return HAL_TIMEOUT;
 800e086:	2003      	movs	r0, #3
}
 800e088:	b003      	add	sp, #12
 800e08a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLSAI_DISABLE();
 800e08c:	4b55      	ldr	r3, [pc, #340]	; (800e1e4 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800e08e:	4e56      	ldr	r6, [pc, #344]	; (800e1e8 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLSAI_DISABLE();
 800e090:	2200      	movs	r2, #0
 800e092:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800e094:	f7fd fa7e 	bl	800b594 <HAL_GetTick>
 800e098:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800e09a:	e004      	b.n	800e0a6 <HAL_RCCEx_PeriphCLKConfig+0x10e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800e09c:	f7fd fa7a 	bl	800b594 <HAL_GetTick>
 800e0a0:	1b43      	subs	r3, r0, r5
 800e0a2:	2b02      	cmp	r3, #2
 800e0a4:	d8ef      	bhi.n	800e086 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800e0a6:	6833      	ldr	r3, [r6, #0]
 800e0a8:	0098      	lsls	r0, r3, #2
 800e0aa:	d4f7      	bmi.n	800e09c <HAL_RCCEx_PeriphCLKConfig+0x104>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 800e0ac:	6822      	ldr	r2, [r4, #0]
 800e0ae:	0751      	lsls	r1, r2, #29
 800e0b0:	d515      	bpl.n	800e0de <HAL_RCCEx_PeriphCLKConfig+0x146>
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800e0b2:	6963      	ldr	r3, [r4, #20]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800e0b4:	f8d6 1088 	ldr.w	r1, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800e0b8:	6920      	ldr	r0, [r4, #16]
 800e0ba:	061b      	lsls	r3, r3, #24
 800e0bc:	f001 41e0 	and.w	r1, r1, #1879048192	; 0x70000000
 800e0c0:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800e0c4:	430b      	orrs	r3, r1
 800e0c6:	f8c6 3088 	str.w	r3, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 800e0ca:	f8d6 308c 	ldr.w	r3, [r6, #140]	; 0x8c
 800e0ce:	6a21      	ldr	r1, [r4, #32]
 800e0d0:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 800e0d4:	3901      	subs	r1, #1
 800e0d6:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800e0da:	f8c6 308c 	str.w	r3, [r6, #140]	; 0x8c
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 800e0de:	0713      	lsls	r3, r2, #28
 800e0e0:	d514      	bpl.n	800e10c <HAL_RCCEx_PeriphCLKConfig+0x174>
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800e0e2:	4a41      	ldr	r2, [pc, #260]	; (800e1e8 <HAL_RCCEx_PeriphCLKConfig+0x250>)
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800e0e4:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800e0e6:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800e0ea:	6920      	ldr	r0, [r4, #16]
 800e0ec:	071b      	lsls	r3, r3, #28
 800e0ee:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 800e0f2:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800e0f6:	430b      	orrs	r3, r1
 800e0f8:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 800e0fc:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 800e100:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800e102:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800e106:	430b      	orrs	r3, r1
 800e108:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    __HAL_RCC_PLLSAI_ENABLE();
 800e10c:	4b35      	ldr	r3, [pc, #212]	; (800e1e4 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800e10e:	4e36      	ldr	r6, [pc, #216]	; (800e1e8 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLSAI_ENABLE();
 800e110:	2201      	movs	r2, #1
 800e112:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800e114:	f7fd fa3e 	bl	800b594 <HAL_GetTick>
 800e118:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800e11a:	e004      	b.n	800e126 <HAL_RCCEx_PeriphCLKConfig+0x18e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800e11c:	f7fd fa3a 	bl	800b594 <HAL_GetTick>
 800e120:	1b40      	subs	r0, r0, r5
 800e122:	2802      	cmp	r0, #2
 800e124:	d8af      	bhi.n	800e086 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800e126:	6833      	ldr	r3, [r6, #0]
 800e128:	009f      	lsls	r7, r3, #2
 800e12a:	d5f7      	bpl.n	800e11c <HAL_RCCEx_PeriphCLKConfig+0x184>
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800e12c:	6823      	ldr	r3, [r4, #0]
 800e12e:	e73d      	b.n	800dfac <HAL_RCCEx_PeriphCLKConfig+0x14>
  return HAL_OK;
 800e130:	4618      	mov	r0, r3
}
 800e132:	b003      	add	sp, #12
 800e134:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PWR_CLK_ENABLE();
 800e136:	4b2c      	ldr	r3, [pc, #176]	; (800e1e8 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    PWR->CR |= PWR_CR_DBP;
 800e138:	4d2c      	ldr	r5, [pc, #176]	; (800e1ec <HAL_RCCEx_PeriphCLKConfig+0x254>)
    __HAL_RCC_PWR_CLK_ENABLE();
 800e13a:	2200      	movs	r2, #0
 800e13c:	9201      	str	r2, [sp, #4]
 800e13e:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800e140:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800e144:	641a      	str	r2, [r3, #64]	; 0x40
 800e146:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800e148:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800e14c:	9301      	str	r3, [sp, #4]
 800e14e:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 800e150:	682b      	ldr	r3, [r5, #0]
 800e152:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800e156:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 800e158:	f7fd fa1c 	bl	800b594 <HAL_GetTick>
 800e15c:	4606      	mov	r6, r0
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800e15e:	e004      	b.n	800e16a <HAL_RCCEx_PeriphCLKConfig+0x1d2>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 800e160:	f7fd fa18 	bl	800b594 <HAL_GetTick>
 800e164:	1b83      	subs	r3, r0, r6
 800e166:	2b02      	cmp	r3, #2
 800e168:	d88d      	bhi.n	800e086 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800e16a:	682b      	ldr	r3, [r5, #0]
 800e16c:	05d9      	lsls	r1, r3, #23
 800e16e:	d5f7      	bpl.n	800e160 <HAL_RCCEx_PeriphCLKConfig+0x1c8>
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800e170:	4d1d      	ldr	r5, [pc, #116]	; (800e1e8 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800e172:	6aa3      	ldr	r3, [r4, #40]	; 0x28
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800e174:	6f2a      	ldr	r2, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800e176:	f412 7240 	ands.w	r2, r2, #768	; 0x300
 800e17a:	d111      	bne.n	800e1a0 <HAL_RCCEx_PeriphCLKConfig+0x208>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800e17c:	f403 7240 	and.w	r2, r3, #768	; 0x300
 800e180:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 800e184:	d021      	beq.n	800e1ca <HAL_RCCEx_PeriphCLKConfig+0x232>
 800e186:	4918      	ldr	r1, [pc, #96]	; (800e1e8 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800e188:	688a      	ldr	r2, [r1, #8]
 800e18a:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800e18e:	608a      	str	r2, [r1, #8]
 800e190:	4a15      	ldr	r2, [pc, #84]	; (800e1e8 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800e192:	6f11      	ldr	r1, [r2, #112]	; 0x70
 800e194:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800e198:	430b      	orrs	r3, r1
 800e19a:	6713      	str	r3, [r2, #112]	; 0x70
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800e19c:	6823      	ldr	r3, [r4, #0]
 800e19e:	e708      	b.n	800dfb2 <HAL_RCCEx_PeriphCLKConfig+0x1a>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800e1a0:	f403 7140 	and.w	r1, r3, #768	; 0x300
 800e1a4:	4291      	cmp	r1, r2
 800e1a6:	d0eb      	beq.n	800e180 <HAL_RCCEx_PeriphCLKConfig+0x1e8>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800e1a8:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 800e1aa:	4a0e      	ldr	r2, [pc, #56]	; (800e1e4 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 800e1ac:	2101      	movs	r1, #1
 800e1ae:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800e1b2:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 800e1b6:	2100      	movs	r1, #0
 800e1b8:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      RCC->BDCR = tmpreg1;
 800e1bc:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 800e1be:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800e1c0:	07da      	lsls	r2, r3, #31
 800e1c2:	f53f af52 	bmi.w	800e06a <HAL_RCCEx_PeriphCLKConfig+0xd2>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800e1c6:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800e1c8:	e7d8      	b.n	800e17c <HAL_RCCEx_PeriphCLKConfig+0x1e4>
 800e1ca:	4807      	ldr	r0, [pc, #28]	; (800e1e8 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800e1cc:	6882      	ldr	r2, [r0, #8]
 800e1ce:	f023 4170 	bic.w	r1, r3, #4026531840	; 0xf0000000
 800e1d2:	f421 7140 	bic.w	r1, r1, #768	; 0x300
 800e1d6:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800e1da:	430a      	orrs	r2, r1
 800e1dc:	6082      	str	r2, [r0, #8]
 800e1de:	e7d7      	b.n	800e190 <HAL_RCCEx_PeriphCLKConfig+0x1f8>
 800e1e0:	42471000 	.word	0x42471000
 800e1e4:	42470000 	.word	0x42470000
 800e1e8:	40023800 	.word	0x40023800
 800e1ec:	40007000 	.word	0x40007000

0800e1f0 <HAL_SDRAM_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 800e1f0:	b1f0      	cbz	r0, 800e230 <HAL_SDRAM_Init+0x40>
{
 800e1f2:	b538      	push	{r3, r4, r5, lr}
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 800e1f4:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800e1f8:	460d      	mov	r5, r1
 800e1fa:	4604      	mov	r4, r0
 800e1fc:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800e200:	b18b      	cbz	r3, 800e226 <HAL_SDRAM_Init+0x36>

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800e202:	4621      	mov	r1, r4
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800e204:	2302      	movs	r3, #2
 800e206:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800e20a:	f851 0b04 	ldr.w	r0, [r1], #4
 800e20e:	f001 fa2d 	bl	800f66c <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 800e212:	e9d4 0200 	ldrd	r0, r2, [r4]
 800e216:	4629      	mov	r1, r5
 800e218:	f001 fa66 	bl	800f6e8 <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 800e21c:	2301      	movs	r3, #1
 800e21e:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c

  return HAL_OK;
 800e222:	2000      	movs	r0, #0
}
 800e224:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->Lock = HAL_UNLOCKED;
 800e226:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d
    HAL_SDRAM_MspInit(hsdram);
 800e22a:	f7f4 f9f9 	bl	8002620 <HAL_SDRAM_MspInit>
 800e22e:	e7e8      	b.n	800e202 <HAL_SDRAM_Init+0x12>
    return HAL_ERROR;
 800e230:	2001      	movs	r0, #1
}
 800e232:	4770      	bx	lr

0800e234 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 800e234:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800e236:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 800e23a:	2b02      	cmp	r3, #2
{
 800e23c:	4605      	mov	r5, r0
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800e23e:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 800e240:	d004      	beq.n	800e24c <HAL_SDRAM_SendCommand+0x18>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 800e242:	f000 04fb 	and.w	r4, r0, #251	; 0xfb
 800e246:	2c01      	cmp	r4, #1
 800e248:	d001      	beq.n	800e24e <HAL_SDRAM_SendCommand+0x1a>
      hsdram->State = HAL_SDRAM_STATE_READY;
    }
  }
  else
  {
    return HAL_ERROR;
 800e24a:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800e24c:	bd70      	pop	{r4, r5, r6, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800e24e:	460e      	mov	r6, r1
 800e250:	2302      	movs	r3, #2
 800e252:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 800e256:	6828      	ldr	r0, [r5, #0]
 800e258:	f001 fa92 	bl	800f780 <FMC_SDRAM_SendCommand>
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 800e25c:	6833      	ldr	r3, [r6, #0]
 800e25e:	2b02      	cmp	r3, #2
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 800e260:	bf06      	itte	eq
 800e262:	2305      	moveq	r3, #5
 800e264:	f885 302c 	strbeq.w	r3, [r5, #44]	; 0x2c
      hsdram->State = HAL_SDRAM_STATE_READY;
 800e268:	f885 402c 	strbne.w	r4, [r5, #44]	; 0x2c
  return HAL_OK;
 800e26c:	2000      	movs	r0, #0
}
 800e26e:	bd70      	pop	{r4, r5, r6, pc}

0800e270 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 800e270:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800e272:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800e276:	2b02      	cmp	r3, #2
{
 800e278:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800e27a:	b2d8      	uxtb	r0, r3
 800e27c:	d005      	beq.n	800e28a <HAL_SDRAM_ProgramRefreshRate+0x1a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 800e27e:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800e282:	2b01      	cmp	r3, #1
 800e284:	b2dd      	uxtb	r5, r3
 800e286:	d001      	beq.n	800e28c <HAL_SDRAM_ProgramRefreshRate+0x1c>
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
  }
  else
  {
    return HAL_ERROR;
 800e288:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800e28a:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800e28c:	2302      	movs	r3, #2
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800e28e:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800e290:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800e294:	f001 fa9e 	bl	800f7d4 <FMC_SDRAM_ProgramRefreshRate>
    hsdram->State = HAL_SDRAM_STATE_READY;
 800e298:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
  return HAL_OK;
 800e29c:	2000      	movs	r0, #0
}
 800e29e:	bd38      	pop	{r3, r4, r5, pc}

0800e2a0 <SPI_WaitFlagStateUntilTimeout.constprop.0>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 800e2a0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e2a4:	b082      	sub	sp, #8
 800e2a6:	461d      	mov	r5, r3
 800e2a8:	4616      	mov	r6, r2
 800e2aa:	460c      	mov	r4, r1
 800e2ac:	4607      	mov	r7, r0
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 800e2ae:	f7fd f971 	bl	800b594 <HAL_GetTick>
 800e2b2:	4435      	add	r5, r6
 800e2b4:	1a2d      	subs	r5, r5, r0
  tmp_tickstart = HAL_GetTick();
 800e2b6:	f7fd f96d 	bl	800b594 <HAL_GetTick>

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800e2ba:	4b27      	ldr	r3, [pc, #156]	; (800e358 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xb8>)
 800e2bc:	681b      	ldr	r3, [r3, #0]
 800e2be:	f3c3 33cb 	ubfx	r3, r3, #15, #12
 800e2c2:	fb05 f303 	mul.w	r3, r5, r3
  tmp_tickstart = HAL_GetTick();
 800e2c6:	4680      	mov	r8, r0
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800e2c8:	9301      	str	r3, [sp, #4]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800e2ca:	1c73      	adds	r3, r6, #1
 800e2cc:	6839      	ldr	r1, [r7, #0]
 800e2ce:	d107      	bne.n	800e2e0 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x40>
 800e2d0:	688b      	ldr	r3, [r1, #8]
 800e2d2:	ea34 0303 	bics.w	r3, r4, r3
 800e2d6:	d0fb      	beq.n	800e2d0 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x30>
      }
      count--;
    }
  }

  return HAL_OK;
 800e2d8:	2000      	movs	r0, #0
}
 800e2da:	b002      	add	sp, #8
 800e2dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800e2e0:	688b      	ldr	r3, [r1, #8]
 800e2e2:	ea34 0303 	bics.w	r3, r4, r3
 800e2e6:	d1f7      	bne.n	800e2d8 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x38>
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 800e2e8:	f7fd f954 	bl	800b594 <HAL_GetTick>
 800e2ec:	eba0 0008 	sub.w	r0, r0, r8
 800e2f0:	42a8      	cmp	r0, r5
 800e2f2:	d208      	bcs.n	800e306 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x66>
      if (count == 0U)
 800e2f4:	9b01      	ldr	r3, [sp, #4]
        tmp_timeout = 0U;
 800e2f6:	2b00      	cmp	r3, #0
      count--;
 800e2f8:	9b01      	ldr	r3, [sp, #4]
 800e2fa:	f103 33ff 	add.w	r3, r3, #4294967295
        tmp_timeout = 0U;
 800e2fe:	bf08      	it	eq
 800e300:	2500      	moveq	r5, #0
      count--;
 800e302:	9301      	str	r3, [sp, #4]
 800e304:	e7e1      	b.n	800e2ca <SPI_WaitFlagStateUntilTimeout.constprop.0+0x2a>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800e306:	e9d7 3100 	ldrd	r3, r1, [r7]
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800e30a:	685a      	ldr	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800e30c:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800e310:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 800e314:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800e316:	d013      	beq.n	800e340 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xa0>
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 800e318:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800e31a:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 800e31e:	d107      	bne.n	800e330 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x90>
          SPI_RESET_CRC(hspi);
 800e320:	681a      	ldr	r2, [r3, #0]
 800e322:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800e326:	601a      	str	r2, [r3, #0]
 800e328:	681a      	ldr	r2, [r3, #0]
 800e32a:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800e32e:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 800e330:	2201      	movs	r2, #1
        __HAL_UNLOCK(hspi);
 800e332:	2300      	movs	r3, #0
        hspi->State = HAL_SPI_STATE_READY;
 800e334:	f887 2051 	strb.w	r2, [r7, #81]	; 0x51
        __HAL_UNLOCK(hspi);
 800e338:	f887 3050 	strb.w	r3, [r7, #80]	; 0x50
 800e33c:	2003      	movs	r0, #3
 800e33e:	e7cc      	b.n	800e2da <SPI_WaitFlagStateUntilTimeout.constprop.0+0x3a>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800e340:	68ba      	ldr	r2, [r7, #8]
 800e342:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800e346:	d002      	beq.n	800e34e <SPI_WaitFlagStateUntilTimeout.constprop.0+0xae>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800e348:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800e34c:	d1e4      	bne.n	800e318 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x78>
          __HAL_SPI_DISABLE(hspi);
 800e34e:	681a      	ldr	r2, [r3, #0]
 800e350:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800e354:	601a      	str	r2, [r3, #0]
 800e356:	e7df      	b.n	800e318 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x78>
 800e358:	2000007c 	.word	0x2000007c

0800e35c <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 800e35c:	b538      	push	{r3, r4, r5, lr}
 800e35e:	4613      	mov	r3, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800e360:	6842      	ldr	r2, [r0, #4]
 800e362:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 800e366:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800e368:	d006      	beq.n	800e378 <SPI_EndRxTransaction+0x1c>
    }
  }
  else
  {
    /* Wait the RXNE reset */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800e36a:	460a      	mov	r2, r1
 800e36c:	2101      	movs	r1, #1
 800e36e:	f7ff ff97 	bl	800e2a0 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800e372:	b978      	cbnz	r0, 800e394 <SPI_EndRxTransaction+0x38>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 800e374:	2000      	movs	r0, #0
}
 800e376:	bd38      	pop	{r3, r4, r5, pc}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800e378:	6882      	ldr	r2, [r0, #8]
 800e37a:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800e37e:	d01c      	beq.n	800e3ba <SPI_EndRxTransaction+0x5e>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800e380:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800e384:	d00c      	beq.n	800e3a0 <SPI_EndRxTransaction+0x44>
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800e386:	460a      	mov	r2, r1
 800e388:	4620      	mov	r0, r4
 800e38a:	2180      	movs	r1, #128	; 0x80
 800e38c:	f7ff ff88 	bl	800e2a0 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800e390:	2800      	cmp	r0, #0
 800e392:	d0ef      	beq.n	800e374 <SPI_EndRxTransaction+0x18>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800e394:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800e396:	f043 0320 	orr.w	r3, r3, #32
      return HAL_TIMEOUT;
 800e39a:	2003      	movs	r0, #3
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800e39c:	6563      	str	r3, [r4, #84]	; 0x54
}
 800e39e:	bd38      	pop	{r3, r4, r5, pc}
    __HAL_SPI_DISABLE(hspi);
 800e3a0:	6805      	ldr	r5, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800e3a2:	460a      	mov	r2, r1
    __HAL_SPI_DISABLE(hspi);
 800e3a4:	6829      	ldr	r1, [r5, #0]
 800e3a6:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800e3aa:	6029      	str	r1, [r5, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800e3ac:	2101      	movs	r1, #1
 800e3ae:	f7ff ff77 	bl	800e2a0 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800e3b2:	2800      	cmp	r0, #0
 800e3b4:	d1ee      	bne.n	800e394 <SPI_EndRxTransaction+0x38>
  return HAL_OK;
 800e3b6:	2000      	movs	r0, #0
 800e3b8:	e7dd      	b.n	800e376 <SPI_EndRxTransaction+0x1a>
    __HAL_SPI_DISABLE(hspi);
 800e3ba:	6800      	ldr	r0, [r0, #0]
 800e3bc:	6802      	ldr	r2, [r0, #0]
 800e3be:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800e3c2:	6002      	str	r2, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800e3c4:	460a      	mov	r2, r1
 800e3c6:	4620      	mov	r0, r4
 800e3c8:	2180      	movs	r1, #128	; 0x80
 800e3ca:	f7ff ff69 	bl	800e2a0 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800e3ce:	2800      	cmp	r0, #0
 800e3d0:	d0d0      	beq.n	800e374 <SPI_EndRxTransaction+0x18>
 800e3d2:	e7df      	b.n	800e394 <SPI_EndRxTransaction+0x38>

0800e3d4 <HAL_SPI_Init>:
  if (hspi == NULL)
 800e3d4:	2800      	cmp	r0, #0
 800e3d6:	d05c      	beq.n	800e492 <HAL_SPI_Init+0xbe>
{
 800e3d8:	b570      	push	{r4, r5, r6, lr}
 800e3da:	4604      	mov	r4, r0
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 800e3dc:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800e3de:	2800      	cmp	r0, #0
 800e3e0:	d047      	beq.n	800e472 <HAL_SPI_Init+0x9e>
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 800e3e2:	2300      	movs	r3, #0
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 800e3e4:	e9c4 3304 	strd	r3, r3, [r4, #16]
  if (hspi->State == HAL_SPI_STATE_RESET)
 800e3e8:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800e3ec:	2200      	movs	r2, #0
 800e3ee:	62a2      	str	r2, [r4, #40]	; 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 800e3f0:	f003 01ff 	and.w	r1, r3, #255	; 0xff
 800e3f4:	2b00      	cmp	r3, #0
 800e3f6:	d042      	beq.n	800e47e <HAL_SPI_Init+0xaa>
 800e3f8:	4694      	mov	ip, r2
  __HAL_SPI_DISABLE(hspi);
 800e3fa:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800e3fc:	68a5      	ldr	r5, [r4, #8]
 800e3fe:	69a2      	ldr	r2, [r4, #24]
 800e400:	6a26      	ldr	r6, [r4, #32]
  hspi->State = HAL_SPI_STATE_BUSY;
 800e402:	2302      	movs	r3, #2
 800e404:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_SPI_DISABLE(hspi);
 800e408:	680b      	ldr	r3, [r1, #0]
 800e40a:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800e40e:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800e410:	6863      	ldr	r3, [r4, #4]
 800e412:	f405 4504 	and.w	r5, r5, #33792	; 0x8400
 800e416:	f403 7382 	and.w	r3, r3, #260	; 0x104
 800e41a:	432b      	orrs	r3, r5
 800e41c:	68e5      	ldr	r5, [r4, #12]
 800e41e:	f405 6500 	and.w	r5, r5, #2048	; 0x800
 800e422:	432b      	orrs	r3, r5
 800e424:	6925      	ldr	r5, [r4, #16]
 800e426:	f005 0502 	and.w	r5, r5, #2
 800e42a:	432b      	orrs	r3, r5
 800e42c:	6965      	ldr	r5, [r4, #20]
 800e42e:	f005 0501 	and.w	r5, r5, #1
 800e432:	432b      	orrs	r3, r5
 800e434:	69e5      	ldr	r5, [r4, #28]
 800e436:	f006 0e80 	and.w	lr, r6, #128	; 0x80
 800e43a:	f402 7600 	and.w	r6, r2, #512	; 0x200
 800e43e:	f005 0538 	and.w	r5, r5, #56	; 0x38
 800e442:	4333      	orrs	r3, r6
 800e444:	432b      	orrs	r3, r5
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800e446:	0c12      	lsrs	r2, r2, #16
 800e448:	f000 0010 	and.w	r0, r0, #16
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800e44c:	ea43 030e 	orr.w	r3, r3, lr
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800e450:	f002 0204 	and.w	r2, r2, #4
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800e454:	ea43 030c 	orr.w	r3, r3, ip
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800e458:	4302      	orrs	r2, r0
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800e45a:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800e45c:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800e45e:	69cb      	ldr	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800e460:	2000      	movs	r0, #0
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800e462:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  hspi->State     = HAL_SPI_STATE_READY;
 800e466:	2201      	movs	r2, #1
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800e468:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800e46a:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 800e46c:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
}
 800e470:	bd70      	pop	{r4, r5, r6, pc}
    if (hspi->Init.Mode == SPI_MODE_MASTER)
 800e472:	6863      	ldr	r3, [r4, #4]
 800e474:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800e478:	d0b6      	beq.n	800e3e8 <HAL_SPI_Init+0x14>
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 800e47a:	61e0      	str	r0, [r4, #28]
 800e47c:	e7b4      	b.n	800e3e8 <HAL_SPI_Init+0x14>
    HAL_SPI_MspInit(hspi);
 800e47e:	4620      	mov	r0, r4
    hspi->Lock = HAL_UNLOCKED;
 800e480:	f884 1050 	strb.w	r1, [r4, #80]	; 0x50
    HAL_SPI_MspInit(hspi);
 800e484:	f7f3 ffe8 	bl	8002458 <HAL_SPI_MspInit>
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800e488:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800e48c:	f403 5c00 	and.w	ip, r3, #8192	; 0x2000
 800e490:	e7b3      	b.n	800e3fa <HAL_SPI_Init+0x26>
    return HAL_ERROR;
 800e492:	2001      	movs	r0, #1
}
 800e494:	4770      	bx	lr
 800e496:	bf00      	nop

0800e498 <HAL_SPI_Transmit>:
{
 800e498:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e49c:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800e49e:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800e4a2:	2801      	cmp	r0, #1
{
 800e4a4:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800e4a6:	f000 8085 	beq.w	800e5b4 <HAL_SPI_Transmit+0x11c>
 800e4aa:	461d      	mov	r5, r3
 800e4ac:	2301      	movs	r3, #1
 800e4ae:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800e4b2:	4688      	mov	r8, r1
 800e4b4:	4617      	mov	r7, r2
 800e4b6:	f7fd f86d 	bl	800b594 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800e4ba:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 800e4be:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 800e4c0:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800e4c2:	b2d8      	uxtb	r0, r3
 800e4c4:	d009      	beq.n	800e4da <HAL_SPI_Transmit+0x42>
    errorcode = HAL_BUSY;
 800e4c6:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800e4c8:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800e4ca:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800e4cc:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800e4d0:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800e4d4:	b002      	add	sp, #8
 800e4d6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800e4da:	f1b8 0f00 	cmp.w	r8, #0
 800e4de:	d0f3      	beq.n	800e4c8 <HAL_SPI_Transmit+0x30>
 800e4e0:	2f00      	cmp	r7, #0
 800e4e2:	d0f1      	beq.n	800e4c8 <HAL_SPI_Transmit+0x30>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800e4e4:	68a2      	ldr	r2, [r4, #8]
    __HAL_SPI_DISABLE(hspi);
 800e4e6:	6820      	ldr	r0, [r4, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 800e4e8:	f8c4 8030 	str.w	r8, [r4, #48]	; 0x30
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800e4ec:	2300      	movs	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800e4ee:	2103      	movs	r1, #3
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800e4f0:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800e4f4:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
  hspi->RxISR       = NULL;
 800e4f8:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800e4fc:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->TxXferSize  = Size;
 800e4fe:	86a7      	strh	r7, [r4, #52]	; 0x34
  hspi->TxXferCount = Size;
 800e500:	86e7      	strh	r7, [r4, #54]	; 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 800e502:	63a3      	str	r3, [r4, #56]	; 0x38
  hspi->RxXferSize  = 0U;
 800e504:	87a3      	strh	r3, [r4, #60]	; 0x3c
  hspi->RxXferCount = 0U;
 800e506:	87e3      	strh	r3, [r4, #62]	; 0x3e
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800e508:	f000 8085 	beq.w	800e616 <HAL_SPI_Transmit+0x17e>
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800e50c:	6803      	ldr	r3, [r0, #0]
 800e50e:	065b      	lsls	r3, r3, #25
    __HAL_SPI_DISABLE(hspi);
 800e510:	4602      	mov	r2, r0
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800e512:	d403      	bmi.n	800e51c <HAL_SPI_Transmit+0x84>
    __HAL_SPI_ENABLE(hspi);
 800e514:	6803      	ldr	r3, [r0, #0]
 800e516:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800e51a:	6003      	str	r3, [r0, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800e51c:	68e3      	ldr	r3, [r4, #12]
 800e51e:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800e522:	d04b      	beq.n	800e5bc <HAL_SPI_Transmit+0x124>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800e524:	6863      	ldr	r3, [r4, #4]
 800e526:	2b00      	cmp	r3, #0
 800e528:	f000 8097 	beq.w	800e65a <HAL_SPI_Transmit+0x1c2>
 800e52c:	2f01      	cmp	r7, #1
 800e52e:	f000 8094 	beq.w	800e65a <HAL_SPI_Transmit+0x1c2>
    while (hspi->TxXferCount > 0U)
 800e532:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e534:	b29b      	uxth	r3, r3
 800e536:	b1ab      	cbz	r3, 800e564 <HAL_SPI_Transmit+0xcc>
 800e538:	1c68      	adds	r0, r5, #1
 800e53a:	f040 8083 	bne.w	800e644 <HAL_SPI_Transmit+0x1ac>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800e53e:	6823      	ldr	r3, [r4, #0]
 800e540:	689a      	ldr	r2, [r3, #8]
 800e542:	0791      	lsls	r1, r2, #30
 800e544:	f140 8094 	bpl.w	800e670 <HAL_SPI_Transmit+0x1d8>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800e548:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800e54a:	7812      	ldrb	r2, [r2, #0]
 800e54c:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800e54e:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800e550:	6b23      	ldr	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800e552:	3901      	subs	r1, #1
 800e554:	b289      	uxth	r1, r1
 800e556:	86e1      	strh	r1, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800e558:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800e55a:	3301      	adds	r3, #1
    while (hspi->TxXferCount > 0U)
 800e55c:	b289      	uxth	r1, r1
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800e55e:	6323      	str	r3, [r4, #48]	; 0x30
    while (hspi->TxXferCount > 0U)
 800e560:	2900      	cmp	r1, #0
 800e562:	d1ec      	bne.n	800e53e <HAL_SPI_Transmit+0xa6>
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800e564:	6861      	ldr	r1, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800e566:	4b5b      	ldr	r3, [pc, #364]	; (800e6d4 <HAL_SPI_Transmit+0x23c>)
 800e568:	4a5b      	ldr	r2, [pc, #364]	; (800e6d8 <HAL_SPI_Transmit+0x240>)
 800e56a:	681b      	ldr	r3, [r3, #0]
 800e56c:	fba2 2303 	umull	r2, r3, r2, r3
 800e570:	0d5b      	lsrs	r3, r3, #21
 800e572:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800e576:	fb02 f303 	mul.w	r3, r2, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800e57a:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800e57e:	9301      	str	r3, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800e580:	d107      	bne.n	800e592 <HAL_SPI_Transmit+0xfa>
 800e582:	e098      	b.n	800e6b6 <HAL_SPI_Transmit+0x21e>
    {
      if (count == 0U)
      {
        break;
      }
      count--;
 800e584:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800e586:	6822      	ldr	r2, [r4, #0]
      count--;
 800e588:	3b01      	subs	r3, #1
 800e58a:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800e58c:	6893      	ldr	r3, [r2, #8]
 800e58e:	061b      	lsls	r3, r3, #24
 800e590:	d502      	bpl.n	800e598 <HAL_SPI_Transmit+0x100>
      if (count == 0U)
 800e592:	9b01      	ldr	r3, [sp, #4]
 800e594:	2b00      	cmp	r3, #0
 800e596:	d1f5      	bne.n	800e584 <HAL_SPI_Transmit+0xec>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800e598:	68a3      	ldr	r3, [r4, #8]
 800e59a:	b933      	cbnz	r3, 800e5aa <HAL_SPI_Transmit+0x112>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800e59c:	6822      	ldr	r2, [r4, #0]
 800e59e:	9300      	str	r3, [sp, #0]
 800e5a0:	68d3      	ldr	r3, [r2, #12]
 800e5a2:	9300      	str	r3, [sp, #0]
 800e5a4:	6893      	ldr	r3, [r2, #8]
 800e5a6:	9300      	str	r3, [sp, #0]
 800e5a8:	9b00      	ldr	r3, [sp, #0]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800e5aa:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800e5ac:	3800      	subs	r0, #0
 800e5ae:	bf18      	it	ne
 800e5b0:	2001      	movne	r0, #1
error:
 800e5b2:	e789      	b.n	800e4c8 <HAL_SPI_Transmit+0x30>
  __HAL_LOCK(hspi);
 800e5b4:	2002      	movs	r0, #2
}
 800e5b6:	b002      	add	sp, #8
 800e5b8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800e5bc:	6861      	ldr	r1, [r4, #4]
 800e5be:	2900      	cmp	r1, #0
 800e5c0:	d176      	bne.n	800e6b0 <HAL_SPI_Transmit+0x218>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800e5c2:	4643      	mov	r3, r8
 800e5c4:	f833 7b02 	ldrh.w	r7, [r3], #2
 800e5c8:	60c7      	str	r7, [r0, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800e5ca:	6323      	str	r3, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800e5cc:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e5ce:	3b01      	subs	r3, #1
 800e5d0:	b29b      	uxth	r3, r3
 800e5d2:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800e5d4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e5d6:	b29b      	uxth	r3, r3
 800e5d8:	2b00      	cmp	r3, #0
 800e5da:	d0c4      	beq.n	800e566 <HAL_SPI_Transmit+0xce>
 800e5dc:	1c6b      	adds	r3, r5, #1
 800e5de:	d15e      	bne.n	800e69e <HAL_SPI_Transmit+0x206>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800e5e0:	6883      	ldr	r3, [r0, #8]
 800e5e2:	079f      	lsls	r7, r3, #30
 800e5e4:	d50f      	bpl.n	800e606 <HAL_SPI_Transmit+0x16e>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800e5e6:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800e5e8:	f832 3b02 	ldrh.w	r3, [r2], #2
 800e5ec:	60c3      	str	r3, [r0, #12]
        hspi->TxXferCount--;
 800e5ee:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800e5f0:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800e5f2:	3b01      	subs	r3, #1
 800e5f4:	b29b      	uxth	r3, r3
 800e5f6:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800e5f8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e5fa:	b29b      	uxth	r3, r3
 800e5fc:	2b00      	cmp	r3, #0
 800e5fe:	d0b1      	beq.n	800e564 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800e600:	6883      	ldr	r3, [r0, #8]
 800e602:	079f      	lsls	r7, r3, #30
 800e604:	d4ef      	bmi.n	800e5e6 <HAL_SPI_Transmit+0x14e>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800e606:	f7fc ffc5 	bl	800b594 <HAL_GetTick>
    while (hspi->TxXferCount > 0U)
 800e60a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e60c:	b29b      	uxth	r3, r3
 800e60e:	2b00      	cmp	r3, #0
 800e610:	d0a8      	beq.n	800e564 <HAL_SPI_Transmit+0xcc>
 800e612:	6820      	ldr	r0, [r4, #0]
 800e614:	e7e4      	b.n	800e5e0 <HAL_SPI_Transmit+0x148>
    __HAL_SPI_DISABLE(hspi);
 800e616:	6803      	ldr	r3, [r0, #0]
 800e618:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800e61c:	6003      	str	r3, [r0, #0]
    SPI_1LINE_TX(hspi);
 800e61e:	6803      	ldr	r3, [r0, #0]
 800e620:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800e624:	6003      	str	r3, [r0, #0]
 800e626:	e771      	b.n	800e50c <HAL_SPI_Transmit+0x74>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800e628:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800e62a:	7812      	ldrb	r2, [r2, #0]
 800e62c:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800e62e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800e630:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800e632:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800e634:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800e636:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800e638:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800e63a:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800e63c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e63e:	b29b      	uxth	r3, r3
 800e640:	2b00      	cmp	r3, #0
 800e642:	d08f      	beq.n	800e564 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800e644:	6823      	ldr	r3, [r4, #0]
 800e646:	689a      	ldr	r2, [r3, #8]
 800e648:	0792      	lsls	r2, r2, #30
 800e64a:	d4ed      	bmi.n	800e628 <HAL_SPI_Transmit+0x190>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800e64c:	f7fc ffa2 	bl	800b594 <HAL_GetTick>
 800e650:	1b80      	subs	r0, r0, r6
 800e652:	42a8      	cmp	r0, r5
 800e654:	d3f2      	bcc.n	800e63c <HAL_SPI_Transmit+0x1a4>
          errorcode = HAL_TIMEOUT;
 800e656:	2003      	movs	r0, #3
 800e658:	e736      	b.n	800e4c8 <HAL_SPI_Transmit+0x30>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800e65a:	f898 3000 	ldrb.w	r3, [r8]
 800e65e:	7303      	strb	r3, [r0, #12]
      hspi->TxXferCount--;
 800e660:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800e662:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800e664:	3b01      	subs	r3, #1
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800e666:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800e668:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800e66a:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800e66c:	86e3      	strh	r3, [r4, #54]	; 0x36
 800e66e:	e760      	b.n	800e532 <HAL_SPI_Transmit+0x9a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800e670:	f7fc ff90 	bl	800b594 <HAL_GetTick>
    while (hspi->TxXferCount > 0U)
 800e674:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e676:	b29b      	uxth	r3, r3
 800e678:	2b00      	cmp	r3, #0
 800e67a:	f47f af60 	bne.w	800e53e <HAL_SPI_Transmit+0xa6>
 800e67e:	e771      	b.n	800e564 <HAL_SPI_Transmit+0xcc>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800e680:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800e682:	f831 3b02 	ldrh.w	r3, [r1], #2
 800e686:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800e688:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800e68a:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800e68c:	3b01      	subs	r3, #1
 800e68e:	b29b      	uxth	r3, r3
 800e690:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800e692:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e694:	b29b      	uxth	r3, r3
 800e696:	2b00      	cmp	r3, #0
 800e698:	f43f af64 	beq.w	800e564 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800e69c:	6822      	ldr	r2, [r4, #0]
 800e69e:	6893      	ldr	r3, [r2, #8]
 800e6a0:	0799      	lsls	r1, r3, #30
 800e6a2:	d4ed      	bmi.n	800e680 <HAL_SPI_Transmit+0x1e8>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800e6a4:	f7fc ff76 	bl	800b594 <HAL_GetTick>
 800e6a8:	1b80      	subs	r0, r0, r6
 800e6aa:	42a8      	cmp	r0, r5
 800e6ac:	d3f1      	bcc.n	800e692 <HAL_SPI_Transmit+0x1fa>
 800e6ae:	e7d2      	b.n	800e656 <HAL_SPI_Transmit+0x1be>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800e6b0:	2f01      	cmp	r7, #1
 800e6b2:	d18f      	bne.n	800e5d4 <HAL_SPI_Transmit+0x13c>
 800e6b4:	e785      	b.n	800e5c2 <HAL_SPI_Transmit+0x12a>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800e6b6:	4633      	mov	r3, r6
 800e6b8:	462a      	mov	r2, r5
 800e6ba:	2180      	movs	r1, #128	; 0x80
 800e6bc:	4620      	mov	r0, r4
 800e6be:	f7ff fdef 	bl	800e2a0 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800e6c2:	2800      	cmp	r0, #0
 800e6c4:	f43f af68 	beq.w	800e598 <HAL_SPI_Transmit+0x100>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800e6c8:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800e6ca:	2220      	movs	r2, #32
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800e6cc:	4313      	orrs	r3, r2
 800e6ce:	6563      	str	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800e6d0:	6562      	str	r2, [r4, #84]	; 0x54
 800e6d2:	e761      	b.n	800e598 <HAL_SPI_Transmit+0x100>
 800e6d4:	2000007c 	.word	0x2000007c
 800e6d8:	165e9f81 	.word	0x165e9f81

0800e6dc <HAL_SPI_TransmitReceive>:
{
 800e6dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e6e0:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800e6e2:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800e6e6:	2801      	cmp	r0, #1
{
 800e6e8:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800e6ea:	f000 80ac 	beq.w	800e846 <HAL_SPI_TransmitReceive+0x16a>
 800e6ee:	461e      	mov	r6, r3
 800e6f0:	2301      	movs	r3, #1
 800e6f2:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800e6f6:	4690      	mov	r8, r2
 800e6f8:	460f      	mov	r7, r1
 800e6fa:	f7fc ff4b 	bl	800b594 <HAL_GetTick>
 800e6fe:	4605      	mov	r5, r0
  tmp_state           = hspi->State;
 800e700:	f894 0051 	ldrb.w	r0, [r4, #81]	; 0x51
  tmp_mode            = hspi->Init.Mode;
 800e704:	6863      	ldr	r3, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800e706:	2801      	cmp	r0, #1
  tmp_state           = hspi->State;
 800e708:	b2c2      	uxtb	r2, r0
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800e70a:	d011      	beq.n	800e730 <HAL_SPI_TransmitReceive+0x54>
 800e70c:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800e710:	d009      	beq.n	800e726 <HAL_SPI_TransmitReceive+0x4a>
    errorcode = HAL_BUSY;
 800e712:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800e714:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800e716:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800e718:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800e71c:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800e720:	b002      	add	sp, #8
 800e722:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 800e726:	68a1      	ldr	r1, [r4, #8]
 800e728:	2900      	cmp	r1, #0
 800e72a:	d1f2      	bne.n	800e712 <HAL_SPI_TransmitReceive+0x36>
 800e72c:	2a04      	cmp	r2, #4
 800e72e:	d1f0      	bne.n	800e712 <HAL_SPI_TransmitReceive+0x36>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 800e730:	2f00      	cmp	r7, #0
 800e732:	f000 808c 	beq.w	800e84e <HAL_SPI_TransmitReceive+0x172>
 800e736:	f1b8 0f00 	cmp.w	r8, #0
 800e73a:	f000 8088 	beq.w	800e84e <HAL_SPI_TransmitReceive+0x172>
 800e73e:	2e00      	cmp	r6, #0
 800e740:	f000 8085 	beq.w	800e84e <HAL_SPI_TransmitReceive+0x172>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800e744:	f894 2051 	ldrb.w	r2, [r4, #81]	; 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 800e748:	f8c4 8038 	str.w	r8, [r4, #56]	; 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800e74c:	2a04      	cmp	r2, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 800e74e:	bf1c      	itt	ne
 800e750:	2205      	movne	r2, #5
 800e752:	f884 2051 	strbne.w	r2, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800e756:	2200      	movs	r2, #0
 800e758:	6562      	str	r2, [r4, #84]	; 0x54
  hspi->TxISR       = NULL;
 800e75a:	e9c4 2210 	strd	r2, r2, [r4, #64]	; 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800e75e:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferCount = Size;
 800e760:	87e6      	strh	r6, [r4, #62]	; 0x3e
  hspi->TxXferCount = Size;
 800e762:	86e6      	strh	r6, [r4, #54]	; 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800e764:	6811      	ldr	r1, [r2, #0]
  hspi->RxXferSize  = Size;
 800e766:	87a6      	strh	r6, [r4, #60]	; 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800e768:	0649      	lsls	r1, r1, #25
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 800e76a:	6327      	str	r7, [r4, #48]	; 0x30
  hspi->TxXferSize  = Size;
 800e76c:	86a6      	strh	r6, [r4, #52]	; 0x34
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800e76e:	d403      	bmi.n	800e778 <HAL_SPI_TransmitReceive+0x9c>
    __HAL_SPI_ENABLE(hspi);
 800e770:	6811      	ldr	r1, [r2, #0]
 800e772:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800e776:	6011      	str	r1, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800e778:	68e1      	ldr	r1, [r4, #12]
 800e77a:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
 800e77e:	f000 809e 	beq.w	800e8be <HAL_SPI_TransmitReceive+0x1e2>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800e782:	2b00      	cmp	r3, #0
 800e784:	f000 8091 	beq.w	800e8aa <HAL_SPI_TransmitReceive+0x1ce>
 800e788:	2e01      	cmp	r6, #1
 800e78a:	f000 808e 	beq.w	800e8aa <HAL_SPI_TransmitReceive+0x1ce>
 800e78e:	9b08      	ldr	r3, [sp, #32]
 800e790:	3301      	adds	r3, #1
        txallowed = 1U;
 800e792:	f04f 0601 	mov.w	r6, #1
 800e796:	d028      	beq.n	800e7ea <HAL_SPI_TransmitReceive+0x10e>
 800e798:	e05b      	b.n	800e852 <HAL_SPI_TransmitReceive+0x176>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800e79a:	6821      	ldr	r1, [r4, #0]
 800e79c:	688b      	ldr	r3, [r1, #8]
 800e79e:	0798      	lsls	r0, r3, #30
 800e7a0:	d50f      	bpl.n	800e7c2 <HAL_SPI_TransmitReceive+0xe6>
 800e7a2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e7a4:	b29b      	uxth	r3, r3
 800e7a6:	b163      	cbz	r3, 800e7c2 <HAL_SPI_TransmitReceive+0xe6>
 800e7a8:	b15e      	cbz	r6, 800e7c2 <HAL_SPI_TransmitReceive+0xe6>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800e7aa:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800e7ac:	781b      	ldrb	r3, [r3, #0]
 800e7ae:	730b      	strb	r3, [r1, #12]
        hspi->TxXferCount--;
 800e7b0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800e7b2:	6b22      	ldr	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800e7b4:	6821      	ldr	r1, [r4, #0]
        hspi->TxXferCount--;
 800e7b6:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr++;
 800e7b8:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800e7ba:	b29b      	uxth	r3, r3
        txallowed = 0U;
 800e7bc:	2600      	movs	r6, #0
        hspi->TxXferCount--;
 800e7be:	86e3      	strh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800e7c0:	6322      	str	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800e7c2:	688a      	ldr	r2, [r1, #8]
 800e7c4:	f012 0201 	ands.w	r2, r2, #1
 800e7c8:	d00d      	beq.n	800e7e6 <HAL_SPI_TransmitReceive+0x10a>
 800e7ca:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800e7cc:	b29b      	uxth	r3, r3
 800e7ce:	b153      	cbz	r3, 800e7e6 <HAL_SPI_TransmitReceive+0x10a>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800e7d0:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800e7d2:	68c9      	ldr	r1, [r1, #12]
 800e7d4:	7019      	strb	r1, [r3, #0]
        hspi->RxXferCount--;
 800e7d6:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800e7d8:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800e7da:	3b01      	subs	r3, #1
        hspi->pRxBuffPtr++;
 800e7dc:	3101      	adds	r1, #1
        hspi->RxXferCount--;
 800e7de:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr++;
 800e7e0:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800e7e2:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 800e7e4:	4616      	mov	r6, r2
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800e7e6:	f7fc fed5 	bl	800b594 <HAL_GetTick>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800e7ea:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800e7ec:	b292      	uxth	r2, r2
 800e7ee:	2a00      	cmp	r2, #0
 800e7f0:	d1d3      	bne.n	800e79a <HAL_SPI_TransmitReceive+0xbe>
 800e7f2:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800e7f4:	b29b      	uxth	r3, r3
 800e7f6:	2b00      	cmp	r3, #0
 800e7f8:	d1cf      	bne.n	800e79a <HAL_SPI_TransmitReceive+0xbe>
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800e7fa:	4b79      	ldr	r3, [pc, #484]	; (800e9e0 <HAL_SPI_TransmitReceive+0x304>)
 800e7fc:	4a79      	ldr	r2, [pc, #484]	; (800e9e4 <HAL_SPI_TransmitReceive+0x308>)
 800e7fe:	681b      	ldr	r3, [r3, #0]
 800e800:	fba2 2303 	umull	r2, r3, r2, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800e804:	6862      	ldr	r2, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800e806:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 800e80a:	0d5b      	lsrs	r3, r3, #21
 800e80c:	fb01 f303 	mul.w	r3, r1, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800e810:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800e814:	9301      	str	r3, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800e816:	d107      	bne.n	800e828 <HAL_SPI_TransmitReceive+0x14c>
 800e818:	e0d2      	b.n	800e9c0 <HAL_SPI_TransmitReceive+0x2e4>
      count--;
 800e81a:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800e81c:	6822      	ldr	r2, [r4, #0]
      count--;
 800e81e:	3b01      	subs	r3, #1
 800e820:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800e822:	6893      	ldr	r3, [r2, #8]
 800e824:	061b      	lsls	r3, r3, #24
 800e826:	d502      	bpl.n	800e82e <HAL_SPI_TransmitReceive+0x152>
      if (count == 0U)
 800e828:	9b01      	ldr	r3, [sp, #4]
 800e82a:	2b00      	cmp	r3, #0
 800e82c:	d1f5      	bne.n	800e81a <HAL_SPI_TransmitReceive+0x13e>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800e82e:	68a0      	ldr	r0, [r4, #8]
 800e830:	2800      	cmp	r0, #0
 800e832:	f040 8082 	bne.w	800e93a <HAL_SPI_TransmitReceive+0x25e>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800e836:	6823      	ldr	r3, [r4, #0]
 800e838:	9000      	str	r0, [sp, #0]
 800e83a:	68da      	ldr	r2, [r3, #12]
 800e83c:	9200      	str	r2, [sp, #0]
 800e83e:	689b      	ldr	r3, [r3, #8]
 800e840:	9300      	str	r3, [sp, #0]
 800e842:	9b00      	ldr	r3, [sp, #0]
 800e844:	e766      	b.n	800e714 <HAL_SPI_TransmitReceive+0x38>
  __HAL_LOCK(hspi);
 800e846:	2002      	movs	r0, #2
}
 800e848:	b002      	add	sp, #8
 800e84a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    errorcode = HAL_ERROR;
 800e84e:	2001      	movs	r0, #1
 800e850:	e760      	b.n	800e714 <HAL_SPI_TransmitReceive+0x38>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800e852:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e854:	b29b      	uxth	r3, r3
 800e856:	b91b      	cbnz	r3, 800e860 <HAL_SPI_TransmitReceive+0x184>
 800e858:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800e85a:	b29b      	uxth	r3, r3
 800e85c:	2b00      	cmp	r3, #0
 800e85e:	d0cc      	beq.n	800e7fa <HAL_SPI_TransmitReceive+0x11e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800e860:	6822      	ldr	r2, [r4, #0]
 800e862:	6893      	ldr	r3, [r2, #8]
 800e864:	0799      	lsls	r1, r3, #30
 800e866:	d50f      	bpl.n	800e888 <HAL_SPI_TransmitReceive+0x1ac>
 800e868:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e86a:	b29b      	uxth	r3, r3
 800e86c:	b163      	cbz	r3, 800e888 <HAL_SPI_TransmitReceive+0x1ac>
 800e86e:	b15e      	cbz	r6, 800e888 <HAL_SPI_TransmitReceive+0x1ac>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800e870:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800e872:	781b      	ldrb	r3, [r3, #0]
 800e874:	7313      	strb	r3, [r2, #12]
        hspi->TxXferCount--;
 800e876:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800e878:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800e87a:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr++;
 800e87c:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800e87e:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr++;
 800e880:	6322      	str	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800e882:	6822      	ldr	r2, [r4, #0]
        hspi->TxXferCount--;
 800e884:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800e886:	2600      	movs	r6, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800e888:	6893      	ldr	r3, [r2, #8]
 800e88a:	f013 0301 	ands.w	r3, r3, #1
 800e88e:	d004      	beq.n	800e89a <HAL_SPI_TransmitReceive+0x1be>
 800e890:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800e892:	b289      	uxth	r1, r1
 800e894:	2900      	cmp	r1, #0
 800e896:	f040 8087 	bne.w	800e9a8 <HAL_SPI_TransmitReceive+0x2cc>
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800e89a:	f7fc fe7b 	bl	800b594 <HAL_GetTick>
 800e89e:	9b08      	ldr	r3, [sp, #32]
 800e8a0:	1b40      	subs	r0, r0, r5
 800e8a2:	4298      	cmp	r0, r3
 800e8a4:	d3d5      	bcc.n	800e852 <HAL_SPI_TransmitReceive+0x176>
        errorcode = HAL_TIMEOUT;
 800e8a6:	2003      	movs	r0, #3
 800e8a8:	e734      	b.n	800e714 <HAL_SPI_TransmitReceive+0x38>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800e8aa:	783b      	ldrb	r3, [r7, #0]
 800e8ac:	7313      	strb	r3, [r2, #12]
      hspi->TxXferCount--;
 800e8ae:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800e8b0:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800e8b2:	3b01      	subs	r3, #1
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800e8b4:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800e8b6:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800e8b8:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800e8ba:	86e3      	strh	r3, [r4, #54]	; 0x36
 800e8bc:	e767      	b.n	800e78e <HAL_SPI_TransmitReceive+0xb2>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800e8be:	2b00      	cmp	r3, #0
 800e8c0:	d13d      	bne.n	800e93e <HAL_SPI_TransmitReceive+0x262>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800e8c2:	f837 3b02 	ldrh.w	r3, [r7], #2
 800e8c6:	60d3      	str	r3, [r2, #12]
      hspi->TxXferCount--;
 800e8c8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800e8ca:	6327      	str	r7, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800e8cc:	3b01      	subs	r3, #1
 800e8ce:	b29b      	uxth	r3, r3
 800e8d0:	86e3      	strh	r3, [r4, #54]	; 0x36
 800e8d2:	9b08      	ldr	r3, [sp, #32]
 800e8d4:	3301      	adds	r3, #1
{
 800e8d6:	f04f 0601 	mov.w	r6, #1
 800e8da:	d025      	beq.n	800e928 <HAL_SPI_TransmitReceive+0x24c>
 800e8dc:	e032      	b.n	800e944 <HAL_SPI_TransmitReceive+0x268>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800e8de:	6823      	ldr	r3, [r4, #0]
 800e8e0:	689a      	ldr	r2, [r3, #8]
 800e8e2:	0792      	lsls	r2, r2, #30
 800e8e4:	d50d      	bpl.n	800e902 <HAL_SPI_TransmitReceive+0x226>
 800e8e6:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800e8e8:	b292      	uxth	r2, r2
 800e8ea:	b152      	cbz	r2, 800e902 <HAL_SPI_TransmitReceive+0x226>
 800e8ec:	b14e      	cbz	r6, 800e902 <HAL_SPI_TransmitReceive+0x226>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800e8ee:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800e8f0:	f831 2b02 	ldrh.w	r2, [r1], #2
 800e8f4:	60da      	str	r2, [r3, #12]
        hspi->TxXferCount--;
 800e8f6:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800e8f8:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800e8fa:	3a01      	subs	r2, #1
 800e8fc:	b292      	uxth	r2, r2
        txallowed = 0U;
 800e8fe:	2600      	movs	r6, #0
        hspi->TxXferCount--;
 800e900:	86e2      	strh	r2, [r4, #54]	; 0x36
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800e902:	689a      	ldr	r2, [r3, #8]
 800e904:	f012 0201 	ands.w	r2, r2, #1
 800e908:	d00c      	beq.n	800e924 <HAL_SPI_TransmitReceive+0x248>
 800e90a:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800e90c:	b289      	uxth	r1, r1
 800e90e:	b149      	cbz	r1, 800e924 <HAL_SPI_TransmitReceive+0x248>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800e910:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800e912:	68db      	ldr	r3, [r3, #12]
 800e914:	f821 3b02 	strh.w	r3, [r1], #2
        hspi->RxXferCount--;
 800e918:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800e91a:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800e91c:	3b01      	subs	r3, #1
 800e91e:	b29b      	uxth	r3, r3
        txallowed = 1U;
 800e920:	4616      	mov	r6, r2
        hspi->RxXferCount--;
 800e922:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800e924:	f7fc fe36 	bl	800b594 <HAL_GetTick>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800e928:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e92a:	b29b      	uxth	r3, r3
 800e92c:	2b00      	cmp	r3, #0
 800e92e:	d1d6      	bne.n	800e8de <HAL_SPI_TransmitReceive+0x202>
 800e930:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800e932:	b29b      	uxth	r3, r3
 800e934:	2b00      	cmp	r3, #0
 800e936:	d1d2      	bne.n	800e8de <HAL_SPI_TransmitReceive+0x202>
 800e938:	e75f      	b.n	800e7fa <HAL_SPI_TransmitReceive+0x11e>
  HAL_StatusTypeDef    errorcode = HAL_OK;
 800e93a:	2000      	movs	r0, #0
 800e93c:	e6ea      	b.n	800e714 <HAL_SPI_TransmitReceive+0x38>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800e93e:	2e01      	cmp	r6, #1
 800e940:	d1c7      	bne.n	800e8d2 <HAL_SPI_TransmitReceive+0x1f6>
 800e942:	e7be      	b.n	800e8c2 <HAL_SPI_TransmitReceive+0x1e6>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800e944:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e946:	b29b      	uxth	r3, r3
 800e948:	b923      	cbnz	r3, 800e954 <HAL_SPI_TransmitReceive+0x278>
 800e94a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800e94c:	b29b      	uxth	r3, r3
 800e94e:	2b00      	cmp	r3, #0
 800e950:	f43f af53 	beq.w	800e7fa <HAL_SPI_TransmitReceive+0x11e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800e954:	6822      	ldr	r2, [r4, #0]
 800e956:	6893      	ldr	r3, [r2, #8]
 800e958:	079f      	lsls	r7, r3, #30
 800e95a:	d50d      	bpl.n	800e978 <HAL_SPI_TransmitReceive+0x29c>
 800e95c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e95e:	b29b      	uxth	r3, r3
 800e960:	b153      	cbz	r3, 800e978 <HAL_SPI_TransmitReceive+0x29c>
 800e962:	b14e      	cbz	r6, 800e978 <HAL_SPI_TransmitReceive+0x29c>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800e964:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800e966:	f831 3b02 	ldrh.w	r3, [r1], #2
 800e96a:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800e96c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800e96e:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800e970:	3b01      	subs	r3, #1
 800e972:	b29b      	uxth	r3, r3
 800e974:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800e976:	2600      	movs	r6, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800e978:	6893      	ldr	r3, [r2, #8]
 800e97a:	f013 0301 	ands.w	r3, r3, #1
 800e97e:	d00c      	beq.n	800e99a <HAL_SPI_TransmitReceive+0x2be>
 800e980:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800e982:	b289      	uxth	r1, r1
 800e984:	b149      	cbz	r1, 800e99a <HAL_SPI_TransmitReceive+0x2be>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800e986:	68d1      	ldr	r1, [r2, #12]
 800e988:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800e98a:	f822 1b02 	strh.w	r1, [r2], #2
        txallowed = 1U;
 800e98e:	461e      	mov	r6, r3
        hspi->RxXferCount--;
 800e990:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800e992:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800e994:	3b01      	subs	r3, #1
 800e996:	b29b      	uxth	r3, r3
 800e998:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800e99a:	f7fc fdfb 	bl	800b594 <HAL_GetTick>
 800e99e:	9b08      	ldr	r3, [sp, #32]
 800e9a0:	1b40      	subs	r0, r0, r5
 800e9a2:	4298      	cmp	r0, r3
 800e9a4:	d3ce      	bcc.n	800e944 <HAL_SPI_TransmitReceive+0x268>
 800e9a6:	e77e      	b.n	800e8a6 <HAL_SPI_TransmitReceive+0x1ca>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800e9a8:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800e9aa:	68d2      	ldr	r2, [r2, #12]
 800e9ac:	700a      	strb	r2, [r1, #0]
        hspi->RxXferCount--;
 800e9ae:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800e9b0:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800e9b2:	3a01      	subs	r2, #1
        hspi->pRxBuffPtr++;
 800e9b4:	3101      	adds	r1, #1
        hspi->RxXferCount--;
 800e9b6:	b292      	uxth	r2, r2
        hspi->pRxBuffPtr++;
 800e9b8:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800e9ba:	87e2      	strh	r2, [r4, #62]	; 0x3e
        txallowed = 1U;
 800e9bc:	461e      	mov	r6, r3
 800e9be:	e76c      	b.n	800e89a <HAL_SPI_TransmitReceive+0x1be>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800e9c0:	9a08      	ldr	r2, [sp, #32]
 800e9c2:	462b      	mov	r3, r5
 800e9c4:	2180      	movs	r1, #128	; 0x80
 800e9c6:	4620      	mov	r0, r4
 800e9c8:	f7ff fc6a 	bl	800e2a0 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800e9cc:	2800      	cmp	r0, #0
 800e9ce:	f43f af2e 	beq.w	800e82e <HAL_SPI_TransmitReceive+0x152>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800e9d2:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800e9d4:	2220      	movs	r2, #32
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800e9d6:	4313      	orrs	r3, r2
 800e9d8:	6563      	str	r3, [r4, #84]	; 0x54
    errorcode = HAL_ERROR;
 800e9da:	2001      	movs	r0, #1
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800e9dc:	6562      	str	r2, [r4, #84]	; 0x54
    goto error;
 800e9de:	e699      	b.n	800e714 <HAL_SPI_TransmitReceive+0x38>
 800e9e0:	2000007c 	.word	0x2000007c
 800e9e4:	165e9f81 	.word	0x165e9f81

0800e9e8 <HAL_SPI_Receive>:
{
 800e9e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800e9ec:	6846      	ldr	r6, [r0, #4]
 800e9ee:	f5b6 7f82 	cmp.w	r6, #260	; 0x104
{
 800e9f2:	b082      	sub	sp, #8
 800e9f4:	4604      	mov	r4, r0
 800e9f6:	4690      	mov	r8, r2
 800e9f8:	461d      	mov	r5, r3
 800e9fa:	460f      	mov	r7, r1
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800e9fc:	d06e      	beq.n	800eadc <HAL_SPI_Receive+0xf4>
  __HAL_LOCK(hspi);
 800e9fe:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 800ea02:	2b01      	cmp	r3, #1
 800ea04:	d076      	beq.n	800eaf4 <HAL_SPI_Receive+0x10c>
 800ea06:	2301      	movs	r3, #1
 800ea08:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800ea0c:	f7fc fdc2 	bl	800b594 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800ea10:	f894 c051 	ldrb.w	ip, [r4, #81]	; 0x51
 800ea14:	f1bc 0f01 	cmp.w	ip, #1
  tickstart = HAL_GetTick();
 800ea18:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800ea1a:	fa5f f08c 	uxtb.w	r0, ip
 800ea1e:	d009      	beq.n	800ea34 <HAL_SPI_Receive+0x4c>
    errorcode = HAL_BUSY;
 800ea20:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800ea22:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800ea24:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800ea26:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800ea2a:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800ea2e:	b002      	add	sp, #8
 800ea30:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800ea34:	2f00      	cmp	r7, #0
 800ea36:	d0f4      	beq.n	800ea22 <HAL_SPI_Receive+0x3a>
 800ea38:	f1b8 0f00 	cmp.w	r8, #0
 800ea3c:	d0f1      	beq.n	800ea22 <HAL_SPI_Receive+0x3a>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800ea3e:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 800ea40:	63a7      	str	r7, [r4, #56]	; 0x38
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800ea42:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
    __HAL_SPI_DISABLE(hspi);
 800ea46:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferSize  = Size;
 800ea48:	f8a4 803c 	strh.w	r8, [r4, #60]	; 0x3c
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800ea4c:	f04f 0300 	mov.w	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 800ea50:	f04f 0104 	mov.w	r1, #4
 800ea54:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
  hspi->TxISR       = NULL;
 800ea58:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800ea5c:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 800ea5e:	6323      	str	r3, [r4, #48]	; 0x30
  hspi->TxXferSize  = 0U;
 800ea60:	86a3      	strh	r3, [r4, #52]	; 0x34
  hspi->RxXferCount = Size;
 800ea62:	f8a4 803e 	strh.w	r8, [r4, #62]	; 0x3e
  hspi->TxXferCount = 0U;
 800ea66:	86e3      	strh	r3, [r4, #54]	; 0x36
    __HAL_SPI_DISABLE(hspi);
 800ea68:	4613      	mov	r3, r2
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800ea6a:	d107      	bne.n	800ea7c <HAL_SPI_Receive+0x94>
    __HAL_SPI_DISABLE(hspi);
 800ea6c:	6811      	ldr	r1, [r2, #0]
 800ea6e:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800ea72:	6011      	str	r1, [r2, #0]
    SPI_1LINE_RX(hspi);
 800ea74:	6811      	ldr	r1, [r2, #0]
 800ea76:	f421 4180 	bic.w	r1, r1, #16384	; 0x4000
 800ea7a:	6011      	str	r1, [r2, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800ea7c:	6811      	ldr	r1, [r2, #0]
 800ea7e:	0648      	lsls	r0, r1, #25
 800ea80:	d403      	bmi.n	800ea8a <HAL_SPI_Receive+0xa2>
    __HAL_SPI_ENABLE(hspi);
 800ea82:	6811      	ldr	r1, [r2, #0]
 800ea84:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800ea88:	6011      	str	r1, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 800ea8a:	68e1      	ldr	r1, [r4, #12]
 800ea8c:	2900      	cmp	r1, #0
 800ea8e:	d054      	beq.n	800eb3a <HAL_SPI_Receive+0x152>
    while (hspi->RxXferCount > 0U)
 800ea90:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800ea92:	b289      	uxth	r1, r1
 800ea94:	b1a9      	cbz	r1, 800eac2 <HAL_SPI_Receive+0xda>
 800ea96:	1c69      	adds	r1, r5, #1
 800ea98:	d13e      	bne.n	800eb18 <HAL_SPI_Receive+0x130>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800ea9a:	6893      	ldr	r3, [r2, #8]
 800ea9c:	07db      	lsls	r3, r3, #31
 800ea9e:	d544      	bpl.n	800eb2a <HAL_SPI_Receive+0x142>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800eaa0:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800eaa2:	68d1      	ldr	r1, [r2, #12]
 800eaa4:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->RxXferCount--;
 800eaa8:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800eaac:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800eaae:	f10c 3cff 	add.w	ip, ip, #4294967295
 800eab2:	fa1f fc8c 	uxth.w	ip, ip
 800eab6:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800eaba:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800eabc:	b29b      	uxth	r3, r3
 800eabe:	2b00      	cmp	r3, #0
 800eac0:	d1eb      	bne.n	800ea9a <HAL_SPI_Receive+0xb2>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800eac2:	4632      	mov	r2, r6
 800eac4:	4629      	mov	r1, r5
 800eac6:	4620      	mov	r0, r4
 800eac8:	f7ff fc48 	bl	800e35c <SPI_EndRxTransaction>
 800eacc:	b108      	cbz	r0, 800ead2 <HAL_SPI_Receive+0xea>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800eace:	2320      	movs	r3, #32
 800ead0:	6563      	str	r3, [r4, #84]	; 0x54
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800ead2:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800ead4:	3800      	subs	r0, #0
 800ead6:	bf18      	it	ne
 800ead8:	2001      	movne	r0, #1
error :
 800eada:	e7a2      	b.n	800ea22 <HAL_SPI_Receive+0x3a>
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800eadc:	6883      	ldr	r3, [r0, #8]
 800eade:	2b00      	cmp	r3, #0
 800eae0:	d18d      	bne.n	800e9fe <HAL_SPI_Receive+0x16>
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800eae2:	9500      	str	r5, [sp, #0]
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800eae4:	2504      	movs	r5, #4
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800eae6:	4613      	mov	r3, r2
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800eae8:	f880 5051 	strb.w	r5, [r0, #81]	; 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800eaec:	460a      	mov	r2, r1
 800eaee:	f7ff fdf5 	bl	800e6dc <HAL_SPI_TransmitReceive>
 800eaf2:	e79c      	b.n	800ea2e <HAL_SPI_Receive+0x46>
  __HAL_LOCK(hspi);
 800eaf4:	2002      	movs	r0, #2
}
 800eaf6:	b002      	add	sp, #8
 800eaf8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800eafc:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800eafe:	68db      	ldr	r3, [r3, #12]
 800eb00:	f822 3b02 	strh.w	r3, [r2], #2
        hspi->RxXferCount--;
 800eb04:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800eb06:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800eb08:	3b01      	subs	r3, #1
 800eb0a:	b29b      	uxth	r3, r3
 800eb0c:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800eb0e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800eb10:	b29b      	uxth	r3, r3
 800eb12:	2b00      	cmp	r3, #0
 800eb14:	d0d5      	beq.n	800eac2 <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800eb16:	6823      	ldr	r3, [r4, #0]
 800eb18:	689a      	ldr	r2, [r3, #8]
 800eb1a:	07d2      	lsls	r2, r2, #31
 800eb1c:	d4ee      	bmi.n	800eafc <HAL_SPI_Receive+0x114>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800eb1e:	f7fc fd39 	bl	800b594 <HAL_GetTick>
 800eb22:	1b80      	subs	r0, r0, r6
 800eb24:	42a8      	cmp	r0, r5
 800eb26:	d243      	bcs.n	800ebb0 <HAL_SPI_Receive+0x1c8>
 800eb28:	e7f1      	b.n	800eb0e <HAL_SPI_Receive+0x126>
 800eb2a:	f7fc fd33 	bl	800b594 <HAL_GetTick>
    while (hspi->RxXferCount > 0U)
 800eb2e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800eb30:	b29b      	uxth	r3, r3
 800eb32:	2b00      	cmp	r3, #0
 800eb34:	d0c5      	beq.n	800eac2 <HAL_SPI_Receive+0xda>
 800eb36:	6822      	ldr	r2, [r4, #0]
 800eb38:	e7af      	b.n	800ea9a <HAL_SPI_Receive+0xb2>
    while (hspi->RxXferCount > 0U)
 800eb3a:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 800eb3c:	b292      	uxth	r2, r2
 800eb3e:	2a00      	cmp	r2, #0
 800eb40:	d0bf      	beq.n	800eac2 <HAL_SPI_Receive+0xda>
 800eb42:	1c6f      	adds	r7, r5, #1
 800eb44:	d013      	beq.n	800eb6e <HAL_SPI_Receive+0x186>
 800eb46:	e02b      	b.n	800eba0 <HAL_SPI_Receive+0x1b8>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800eb48:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800eb4a:	7b1b      	ldrb	r3, [r3, #12]
 800eb4c:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
 800eb4e:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800eb52:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800eb54:	f10c 3cff 	add.w	ip, ip, #4294967295
 800eb58:	fa1f fc8c 	uxth.w	ip, ip
 800eb5c:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800eb60:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800eb62:	3201      	adds	r2, #1
    while (hspi->RxXferCount > 0U)
 800eb64:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800eb66:	63a2      	str	r2, [r4, #56]	; 0x38
    while (hspi->RxXferCount > 0U)
 800eb68:	2b00      	cmp	r3, #0
 800eb6a:	d0aa      	beq.n	800eac2 <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800eb6c:	6823      	ldr	r3, [r4, #0]
 800eb6e:	689a      	ldr	r2, [r3, #8]
 800eb70:	07d0      	lsls	r0, r2, #31
 800eb72:	d4e9      	bmi.n	800eb48 <HAL_SPI_Receive+0x160>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800eb74:	f7fc fd0e 	bl	800b594 <HAL_GetTick>
    while (hspi->RxXferCount > 0U)
 800eb78:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800eb7a:	b29b      	uxth	r3, r3
 800eb7c:	2b00      	cmp	r3, #0
 800eb7e:	d1f5      	bne.n	800eb6c <HAL_SPI_Receive+0x184>
 800eb80:	e79f      	b.n	800eac2 <HAL_SPI_Receive+0xda>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800eb82:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800eb84:	7b1b      	ldrb	r3, [r3, #12]
 800eb86:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
 800eb88:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800eb8a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800eb8c:	3b01      	subs	r3, #1
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800eb8e:	3201      	adds	r2, #1
        hspi->RxXferCount--;
 800eb90:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800eb92:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800eb94:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800eb96:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800eb98:	b29b      	uxth	r3, r3
 800eb9a:	2b00      	cmp	r3, #0
 800eb9c:	d091      	beq.n	800eac2 <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800eb9e:	6823      	ldr	r3, [r4, #0]
 800eba0:	689a      	ldr	r2, [r3, #8]
 800eba2:	07d1      	lsls	r1, r2, #31
 800eba4:	d4ed      	bmi.n	800eb82 <HAL_SPI_Receive+0x19a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800eba6:	f7fc fcf5 	bl	800b594 <HAL_GetTick>
 800ebaa:	1b80      	subs	r0, r0, r6
 800ebac:	42a8      	cmp	r0, r5
 800ebae:	d3f2      	bcc.n	800eb96 <HAL_SPI_Receive+0x1ae>
          errorcode = HAL_TIMEOUT;
 800ebb0:	2003      	movs	r0, #3
 800ebb2:	e736      	b.n	800ea22 <HAL_SPI_Receive+0x3a>

0800ebb4 <HAL_TIM_Base_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
  /* Check the TIM handle allocation */
  if (htim == NULL)
 800ebb4:	2800      	cmp	r0, #0
 800ebb6:	f000 8087 	beq.w	800ecc8 <HAL_TIM_Base_Init+0x114>
{
 800ebba:	b510      	push	{r4, lr}
  assert_param(IS_TIM_INSTANCE(htim->Instance));
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 800ebbc:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800ebc0:	4604      	mov	r4, r0
 800ebc2:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800ebc6:	2b00      	cmp	r3, #0
 800ebc8:	d079      	beq.n	800ecbe <HAL_TIM_Base_Init+0x10a>

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800ebca:	6822      	ldr	r2, [r4, #0]
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800ebcc:	493f      	ldr	r1, [pc, #252]	; (800eccc <HAL_TIM_Base_Init+0x118>)
  htim->State = HAL_TIM_STATE_BUSY;
 800ebce:	2302      	movs	r3, #2
 800ebd0:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800ebd4:	428a      	cmp	r2, r1
  tmpcr1 = TIMx->CR1;
 800ebd6:	6813      	ldr	r3, [r2, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800ebd8:	d05d      	beq.n	800ec96 <HAL_TIM_Base_Init+0xe2>
 800ebda:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 800ebde:	d031      	beq.n	800ec44 <HAL_TIM_Base_Init+0x90>
 800ebe0:	f5a1 417c 	sub.w	r1, r1, #64512	; 0xfc00
 800ebe4:	428a      	cmp	r2, r1
 800ebe6:	d02d      	beq.n	800ec44 <HAL_TIM_Base_Init+0x90>
 800ebe8:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800ebec:	428a      	cmp	r2, r1
 800ebee:	d029      	beq.n	800ec44 <HAL_TIM_Base_Init+0x90>
 800ebf0:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800ebf4:	428a      	cmp	r2, r1
 800ebf6:	d025      	beq.n	800ec44 <HAL_TIM_Base_Init+0x90>
 800ebf8:	f501 4178 	add.w	r1, r1, #63488	; 0xf800
 800ebfc:	428a      	cmp	r2, r1
 800ebfe:	d04a      	beq.n	800ec96 <HAL_TIM_Base_Init+0xe2>
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800ec00:	f501 5170 	add.w	r1, r1, #15360	; 0x3c00
 800ec04:	428a      	cmp	r2, r1
 800ec06:	d021      	beq.n	800ec4c <HAL_TIM_Base_Init+0x98>
 800ec08:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800ec0c:	428a      	cmp	r2, r1
 800ec0e:	d01d      	beq.n	800ec4c <HAL_TIM_Base_Init+0x98>
 800ec10:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800ec14:	428a      	cmp	r2, r1
 800ec16:	d019      	beq.n	800ec4c <HAL_TIM_Base_Init+0x98>
 800ec18:	f5a1 3198 	sub.w	r1, r1, #77824	; 0x13000
 800ec1c:	428a      	cmp	r2, r1
 800ec1e:	d015      	beq.n	800ec4c <HAL_TIM_Base_Init+0x98>
 800ec20:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800ec24:	428a      	cmp	r2, r1
 800ec26:	d011      	beq.n	800ec4c <HAL_TIM_Base_Init+0x98>
 800ec28:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800ec2c:	428a      	cmp	r2, r1
 800ec2e:	d00d      	beq.n	800ec4c <HAL_TIM_Base_Init+0x98>
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800ec30:	69a0      	ldr	r0, [r4, #24]

  TIMx->CR1 = tmpcr1;

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800ec32:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800ec34:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800ec38:	4303      	orrs	r3, r0
  TIMx->CR1 = tmpcr1;
 800ec3a:	6013      	str	r3, [r2, #0]

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 800ec3c:	6863      	ldr	r3, [r4, #4]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800ec3e:	62d1      	str	r1, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800ec40:	6293      	str	r3, [r2, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800ec42:	e010      	b.n	800ec66 <HAL_TIM_Base_Init+0xb2>
    tmpcr1 |= Structure->CounterMode;
 800ec44:	68a1      	ldr	r1, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800ec46:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800ec4a:	430b      	orrs	r3, r1
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800ec4c:	6920      	ldr	r0, [r4, #16]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800ec4e:	69a1      	ldr	r1, [r4, #24]
    tmpcr1 &= ~TIM_CR1_CKD;
 800ec50:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800ec54:	4303      	orrs	r3, r0
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800ec56:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  TIMx->ARR = (uint32_t)Structure->Period ;
 800ec5a:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800ec5c:	430b      	orrs	r3, r1
  TIMx->PSC = Structure->Prescaler;
 800ec5e:	6861      	ldr	r1, [r4, #4]
  TIMx->CR1 = tmpcr1;
 800ec60:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800ec62:	62d0      	str	r0, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800ec64:	6291      	str	r1, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 800ec66:	2301      	movs	r3, #1
 800ec68:	6153      	str	r3, [r2, #20]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800ec6a:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800ec6e:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 800ec72:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 800ec76:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800ec7a:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800ec7e:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800ec82:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800ec86:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800ec8a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 800ec8e:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 800ec92:	2000      	movs	r0, #0
}
 800ec94:	bd10      	pop	{r4, pc}
    tmpcr1 |= Structure->CounterMode;
 800ec96:	68a0      	ldr	r0, [r4, #8]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800ec98:	6921      	ldr	r1, [r4, #16]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800ec9a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800ec9e:	4303      	orrs	r3, r0
    tmpcr1 &= ~TIM_CR1_CKD;
 800eca0:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800eca4:	430b      	orrs	r3, r1
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800eca6:	69a1      	ldr	r1, [r4, #24]
 800eca8:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800ecac:	430b      	orrs	r3, r1
  TIMx->CR1 = tmpcr1;
 800ecae:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800ecb0:	68e3      	ldr	r3, [r4, #12]
 800ecb2:	62d3      	str	r3, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800ecb4:	6863      	ldr	r3, [r4, #4]
 800ecb6:	6293      	str	r3, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
 800ecb8:	6963      	ldr	r3, [r4, #20]
 800ecba:	6313      	str	r3, [r2, #48]	; 0x30
 800ecbc:	e7d3      	b.n	800ec66 <HAL_TIM_Base_Init+0xb2>
    htim->Lock = HAL_UNLOCKED;
 800ecbe:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 800ecc2:	f7f3 fc05 	bl	80024d0 <HAL_TIM_Base_MspInit>
 800ecc6:	e780      	b.n	800ebca <HAL_TIM_Base_Init+0x16>
    return HAL_ERROR;
 800ecc8:	2001      	movs	r0, #1
}
 800ecca:	4770      	bx	lr
 800eccc:	40010000 	.word	0x40010000

0800ecd0 <HAL_TIM_Base_Start_IT>:
  if (htim->State != HAL_TIM_STATE_READY)
 800ecd0:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800ecd4:	2b01      	cmp	r3, #1
 800ecd6:	d12f      	bne.n	800ed38 <HAL_TIM_Base_Start_IT+0x68>
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800ecd8:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800ecda:	4919      	ldr	r1, [pc, #100]	; (800ed40 <HAL_TIM_Base_Start_IT+0x70>)
  htim->State = HAL_TIM_STATE_BUSY;
 800ecdc:	2202      	movs	r2, #2
 800ecde:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800ece2:	68da      	ldr	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800ece4:	428b      	cmp	r3, r1
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800ece6:	f042 0201 	orr.w	r2, r2, #1
 800ecea:	60da      	str	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800ecec:	d019      	beq.n	800ed22 <HAL_TIM_Base_Start_IT+0x52>
 800ecee:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800ecf2:	d016      	beq.n	800ed22 <HAL_TIM_Base_Start_IT+0x52>
 800ecf4:	4a13      	ldr	r2, [pc, #76]	; (800ed44 <HAL_TIM_Base_Start_IT+0x74>)
 800ecf6:	4293      	cmp	r3, r2
 800ecf8:	d013      	beq.n	800ed22 <HAL_TIM_Base_Start_IT+0x52>
 800ecfa:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800ecfe:	4293      	cmp	r3, r2
 800ed00:	d00f      	beq.n	800ed22 <HAL_TIM_Base_Start_IT+0x52>
 800ed02:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800ed06:	4293      	cmp	r3, r2
 800ed08:	d00b      	beq.n	800ed22 <HAL_TIM_Base_Start_IT+0x52>
 800ed0a:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800ed0e:	4293      	cmp	r3, r2
 800ed10:	d007      	beq.n	800ed22 <HAL_TIM_Base_Start_IT+0x52>
 800ed12:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800ed16:	4293      	cmp	r3, r2
 800ed18:	d003      	beq.n	800ed22 <HAL_TIM_Base_Start_IT+0x52>
 800ed1a:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800ed1e:	4293      	cmp	r3, r2
 800ed20:	d104      	bne.n	800ed2c <HAL_TIM_Base_Start_IT+0x5c>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800ed22:	689a      	ldr	r2, [r3, #8]
 800ed24:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800ed28:	2a06      	cmp	r2, #6
 800ed2a:	d007      	beq.n	800ed3c <HAL_TIM_Base_Start_IT+0x6c>
    __HAL_TIM_ENABLE(htim);
 800ed2c:	681a      	ldr	r2, [r3, #0]
 800ed2e:	f042 0201 	orr.w	r2, r2, #1
  return HAL_OK;
 800ed32:	2000      	movs	r0, #0
    __HAL_TIM_ENABLE(htim);
 800ed34:	601a      	str	r2, [r3, #0]
 800ed36:	4770      	bx	lr
    return HAL_ERROR;
 800ed38:	2001      	movs	r0, #1
 800ed3a:	4770      	bx	lr
  return HAL_OK;
 800ed3c:	2000      	movs	r0, #0
}
 800ed3e:	4770      	bx	lr
 800ed40:	40010000 	.word	0x40010000
 800ed44:	40000400 	.word	0x40000400

0800ed48 <HAL_TIM_PWM_MspInit>:
 800ed48:	4770      	bx	lr
 800ed4a:	bf00      	nop

0800ed4c <HAL_TIM_PWM_Init>:
  if (htim == NULL)
 800ed4c:	2800      	cmp	r0, #0
 800ed4e:	f000 8087 	beq.w	800ee60 <HAL_TIM_PWM_Init+0x114>
{
 800ed52:	b510      	push	{r4, lr}
  if (htim->State == HAL_TIM_STATE_RESET)
 800ed54:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800ed58:	4604      	mov	r4, r0
 800ed5a:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800ed5e:	2b00      	cmp	r3, #0
 800ed60:	d079      	beq.n	800ee56 <HAL_TIM_PWM_Init+0x10a>
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800ed62:	6822      	ldr	r2, [r4, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800ed64:	493f      	ldr	r1, [pc, #252]	; (800ee64 <HAL_TIM_PWM_Init+0x118>)
  htim->State = HAL_TIM_STATE_BUSY;
 800ed66:	2302      	movs	r3, #2
 800ed68:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800ed6c:	428a      	cmp	r2, r1
  tmpcr1 = TIMx->CR1;
 800ed6e:	6813      	ldr	r3, [r2, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800ed70:	d05d      	beq.n	800ee2e <HAL_TIM_PWM_Init+0xe2>
 800ed72:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 800ed76:	d031      	beq.n	800eddc <HAL_TIM_PWM_Init+0x90>
 800ed78:	f5a1 417c 	sub.w	r1, r1, #64512	; 0xfc00
 800ed7c:	428a      	cmp	r2, r1
 800ed7e:	d02d      	beq.n	800eddc <HAL_TIM_PWM_Init+0x90>
 800ed80:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800ed84:	428a      	cmp	r2, r1
 800ed86:	d029      	beq.n	800eddc <HAL_TIM_PWM_Init+0x90>
 800ed88:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800ed8c:	428a      	cmp	r2, r1
 800ed8e:	d025      	beq.n	800eddc <HAL_TIM_PWM_Init+0x90>
 800ed90:	f501 4178 	add.w	r1, r1, #63488	; 0xf800
 800ed94:	428a      	cmp	r2, r1
 800ed96:	d04a      	beq.n	800ee2e <HAL_TIM_PWM_Init+0xe2>
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800ed98:	f501 5170 	add.w	r1, r1, #15360	; 0x3c00
 800ed9c:	428a      	cmp	r2, r1
 800ed9e:	d021      	beq.n	800ede4 <HAL_TIM_PWM_Init+0x98>
 800eda0:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800eda4:	428a      	cmp	r2, r1
 800eda6:	d01d      	beq.n	800ede4 <HAL_TIM_PWM_Init+0x98>
 800eda8:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800edac:	428a      	cmp	r2, r1
 800edae:	d019      	beq.n	800ede4 <HAL_TIM_PWM_Init+0x98>
 800edb0:	f5a1 3198 	sub.w	r1, r1, #77824	; 0x13000
 800edb4:	428a      	cmp	r2, r1
 800edb6:	d015      	beq.n	800ede4 <HAL_TIM_PWM_Init+0x98>
 800edb8:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800edbc:	428a      	cmp	r2, r1
 800edbe:	d011      	beq.n	800ede4 <HAL_TIM_PWM_Init+0x98>
 800edc0:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800edc4:	428a      	cmp	r2, r1
 800edc6:	d00d      	beq.n	800ede4 <HAL_TIM_PWM_Init+0x98>
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800edc8:	69a0      	ldr	r0, [r4, #24]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800edca:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800edcc:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800edd0:	4303      	orrs	r3, r0
  TIMx->CR1 = tmpcr1;
 800edd2:	6013      	str	r3, [r2, #0]
  TIMx->PSC = Structure->Prescaler;
 800edd4:	6863      	ldr	r3, [r4, #4]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800edd6:	62d1      	str	r1, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800edd8:	6293      	str	r3, [r2, #40]	; 0x28
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800edda:	e010      	b.n	800edfe <HAL_TIM_PWM_Init+0xb2>
    tmpcr1 |= Structure->CounterMode;
 800eddc:	68a1      	ldr	r1, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800edde:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800ede2:	430b      	orrs	r3, r1
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800ede4:	6920      	ldr	r0, [r4, #16]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800ede6:	69a1      	ldr	r1, [r4, #24]
    tmpcr1 &= ~TIM_CR1_CKD;
 800ede8:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800edec:	4303      	orrs	r3, r0
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800edee:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  TIMx->ARR = (uint32_t)Structure->Period ;
 800edf2:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800edf4:	430b      	orrs	r3, r1
  TIMx->PSC = Structure->Prescaler;
 800edf6:	6861      	ldr	r1, [r4, #4]
  TIMx->CR1 = tmpcr1;
 800edf8:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800edfa:	62d0      	str	r0, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800edfc:	6291      	str	r1, [r2, #40]	; 0x28
  TIMx->EGR = TIM_EGR_UG;
 800edfe:	2301      	movs	r3, #1
 800ee00:	6153      	str	r3, [r2, #20]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800ee02:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800ee06:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 800ee0a:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 800ee0e:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800ee12:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800ee16:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800ee1a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800ee1e:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800ee22:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 800ee26:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 800ee2a:	2000      	movs	r0, #0
}
 800ee2c:	bd10      	pop	{r4, pc}
    tmpcr1 |= Structure->CounterMode;
 800ee2e:	68a0      	ldr	r0, [r4, #8]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800ee30:	6921      	ldr	r1, [r4, #16]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800ee32:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800ee36:	4303      	orrs	r3, r0
    tmpcr1 &= ~TIM_CR1_CKD;
 800ee38:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800ee3c:	430b      	orrs	r3, r1
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800ee3e:	69a1      	ldr	r1, [r4, #24]
 800ee40:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800ee44:	430b      	orrs	r3, r1
  TIMx->CR1 = tmpcr1;
 800ee46:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800ee48:	68e3      	ldr	r3, [r4, #12]
 800ee4a:	62d3      	str	r3, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800ee4c:	6863      	ldr	r3, [r4, #4]
 800ee4e:	6293      	str	r3, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
 800ee50:	6963      	ldr	r3, [r4, #20]
 800ee52:	6313      	str	r3, [r2, #48]	; 0x30
 800ee54:	e7d3      	b.n	800edfe <HAL_TIM_PWM_Init+0xb2>
    htim->Lock = HAL_UNLOCKED;
 800ee56:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_PWM_MspInit(htim);
 800ee5a:	f7ff ff75 	bl	800ed48 <HAL_TIM_PWM_MspInit>
 800ee5e:	e780      	b.n	800ed62 <HAL_TIM_PWM_Init+0x16>
    return HAL_ERROR;
 800ee60:	2001      	movs	r0, #1
}
 800ee62:	4770      	bx	lr
 800ee64:	40010000 	.word	0x40010000

0800ee68 <HAL_TIM_PWM_Start>:
 800ee68:	2900      	cmp	r1, #0
 800ee6a:	d13c      	bne.n	800eee6 <HAL_TIM_PWM_Start+0x7e>
 800ee6c:	f890 303e 	ldrb.w	r3, [r0, #62]	; 0x3e
 800ee70:	2b01      	cmp	r3, #1
 800ee72:	d140      	bne.n	800eef6 <HAL_TIM_PWM_Start+0x8e>
 800ee74:	2302      	movs	r3, #2
 800ee76:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
 800ee7a:	6803      	ldr	r3, [r0, #0]
 800ee7c:	f001 011f 	and.w	r1, r1, #31
 800ee80:	6a18      	ldr	r0, [r3, #32]
 800ee82:	2201      	movs	r2, #1
 800ee84:	408a      	lsls	r2, r1
 800ee86:	ea20 0002 	bic.w	r0, r0, r2
 800ee8a:	6218      	str	r0, [r3, #32]
 800ee8c:	6a18      	ldr	r0, [r3, #32]
 800ee8e:	492c      	ldr	r1, [pc, #176]	; (800ef40 <HAL_TIM_PWM_Start+0xd8>)
 800ee90:	4302      	orrs	r2, r0
 800ee92:	428b      	cmp	r3, r1
 800ee94:	621a      	str	r2, [r3, #32]
 800ee96:	d038      	beq.n	800ef0a <HAL_TIM_PWM_Start+0xa2>
 800ee98:	4a2a      	ldr	r2, [pc, #168]	; (800ef44 <HAL_TIM_PWM_Start+0xdc>)
 800ee9a:	4293      	cmp	r3, r2
 800ee9c:	d035      	beq.n	800ef0a <HAL_TIM_PWM_Start+0xa2>
 800ee9e:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800eea2:	d015      	beq.n	800eed0 <HAL_TIM_PWM_Start+0x68>
 800eea4:	f5a1 417c 	sub.w	r1, r1, #64512	; 0xfc00
 800eea8:	428b      	cmp	r3, r1
 800eeaa:	d011      	beq.n	800eed0 <HAL_TIM_PWM_Start+0x68>
 800eeac:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800eeb0:	428b      	cmp	r3, r1
 800eeb2:	d00d      	beq.n	800eed0 <HAL_TIM_PWM_Start+0x68>
 800eeb4:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800eeb8:	428b      	cmp	r3, r1
 800eeba:	d009      	beq.n	800eed0 <HAL_TIM_PWM_Start+0x68>
 800eebc:	4293      	cmp	r3, r2
 800eebe:	d007      	beq.n	800eed0 <HAL_TIM_PWM_Start+0x68>
 800eec0:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800eec4:	4293      	cmp	r3, r2
 800eec6:	d003      	beq.n	800eed0 <HAL_TIM_PWM_Start+0x68>
 800eec8:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800eecc:	4293      	cmp	r3, r2
 800eece:	d104      	bne.n	800eeda <HAL_TIM_PWM_Start+0x72>
 800eed0:	689a      	ldr	r2, [r3, #8]
 800eed2:	f002 0207 	and.w	r2, r2, #7
 800eed6:	2a06      	cmp	r2, #6
 800eed8:	d020      	beq.n	800ef1c <HAL_TIM_PWM_Start+0xb4>
 800eeda:	681a      	ldr	r2, [r3, #0]
 800eedc:	f042 0201 	orr.w	r2, r2, #1
 800eee0:	2000      	movs	r0, #0
 800eee2:	601a      	str	r2, [r3, #0]
 800eee4:	4770      	bx	lr
 800eee6:	2904      	cmp	r1, #4
 800eee8:	d022      	beq.n	800ef30 <HAL_TIM_PWM_Start+0xc8>
 800eeea:	2908      	cmp	r1, #8
 800eeec:	d018      	beq.n	800ef20 <HAL_TIM_PWM_Start+0xb8>
 800eeee:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
 800eef2:	2b01      	cmp	r3, #1
 800eef4:	d001      	beq.n	800eefa <HAL_TIM_PWM_Start+0x92>
 800eef6:	2001      	movs	r0, #1
 800eef8:	4770      	bx	lr
 800eefa:	2904      	cmp	r1, #4
 800eefc:	d01c      	beq.n	800ef38 <HAL_TIM_PWM_Start+0xd0>
 800eefe:	2908      	cmp	r1, #8
 800ef00:	d012      	beq.n	800ef28 <HAL_TIM_PWM_Start+0xc0>
 800ef02:	2302      	movs	r3, #2
 800ef04:	f880 3041 	strb.w	r3, [r0, #65]	; 0x41
 800ef08:	e7b7      	b.n	800ee7a <HAL_TIM_PWM_Start+0x12>
 800ef0a:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800ef0c:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800ef10:	645a      	str	r2, [r3, #68]	; 0x44
 800ef12:	689a      	ldr	r2, [r3, #8]
 800ef14:	f002 0207 	and.w	r2, r2, #7
 800ef18:	2a06      	cmp	r2, #6
 800ef1a:	d1de      	bne.n	800eeda <HAL_TIM_PWM_Start+0x72>
 800ef1c:	2000      	movs	r0, #0
 800ef1e:	4770      	bx	lr
 800ef20:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
 800ef24:	2b01      	cmp	r3, #1
 800ef26:	d1e6      	bne.n	800eef6 <HAL_TIM_PWM_Start+0x8e>
 800ef28:	2302      	movs	r3, #2
 800ef2a:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
 800ef2e:	e7a4      	b.n	800ee7a <HAL_TIM_PWM_Start+0x12>
 800ef30:	f890 303f 	ldrb.w	r3, [r0, #63]	; 0x3f
 800ef34:	2b01      	cmp	r3, #1
 800ef36:	d1de      	bne.n	800eef6 <HAL_TIM_PWM_Start+0x8e>
 800ef38:	2302      	movs	r3, #2
 800ef3a:	f880 303f 	strb.w	r3, [r0, #63]	; 0x3f
 800ef3e:	e79c      	b.n	800ee7a <HAL_TIM_PWM_Start+0x12>
 800ef40:	40010000 	.word	0x40010000
 800ef44:	40010400 	.word	0x40010400

0800ef48 <HAL_TIM_PWM_Stop>:
 800ef48:	6803      	ldr	r3, [r0, #0]
 800ef4a:	b410      	push	{r4}
 800ef4c:	6a1a      	ldr	r2, [r3, #32]
 800ef4e:	f001 041f 	and.w	r4, r1, #31
 800ef52:	f04f 0c01 	mov.w	ip, #1
 800ef56:	fa0c fc04 	lsl.w	ip, ip, r4
 800ef5a:	ea22 020c 	bic.w	r2, r2, ip
 800ef5e:	621a      	str	r2, [r3, #32]
 800ef60:	4a20      	ldr	r2, [pc, #128]	; (800efe4 <HAL_TIM_PWM_Stop+0x9c>)
 800ef62:	6a1c      	ldr	r4, [r3, #32]
 800ef64:	621c      	str	r4, [r3, #32]
 800ef66:	4293      	cmp	r3, r2
 800ef68:	d015      	beq.n	800ef96 <HAL_TIM_PWM_Stop+0x4e>
 800ef6a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800ef6e:	4293      	cmp	r3, r2
 800ef70:	d011      	beq.n	800ef96 <HAL_TIM_PWM_Stop+0x4e>
 800ef72:	6a1c      	ldr	r4, [r3, #32]
 800ef74:	f241 1211 	movw	r2, #4369	; 0x1111
 800ef78:	4214      	tst	r4, r2
 800ef7a:	d104      	bne.n	800ef86 <HAL_TIM_PWM_Stop+0x3e>
 800ef7c:	6a1c      	ldr	r4, [r3, #32]
 800ef7e:	f240 4244 	movw	r2, #1092	; 0x444
 800ef82:	4214      	tst	r4, r2
 800ef84:	d022      	beq.n	800efcc <HAL_TIM_PWM_Stop+0x84>
 800ef86:	2301      	movs	r3, #1
 800ef88:	b9a1      	cbnz	r1, 800efb4 <HAL_TIM_PWM_Stop+0x6c>
 800ef8a:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
 800ef8e:	f85d 4b04 	ldr.w	r4, [sp], #4
 800ef92:	2000      	movs	r0, #0
 800ef94:	4770      	bx	lr
 800ef96:	6a1c      	ldr	r4, [r3, #32]
 800ef98:	f241 1211 	movw	r2, #4369	; 0x1111
 800ef9c:	4214      	tst	r4, r2
 800ef9e:	d1e8      	bne.n	800ef72 <HAL_TIM_PWM_Stop+0x2a>
 800efa0:	6a1c      	ldr	r4, [r3, #32]
 800efa2:	f240 4244 	movw	r2, #1092	; 0x444
 800efa6:	4214      	tst	r4, r2
 800efa8:	d1e3      	bne.n	800ef72 <HAL_TIM_PWM_Stop+0x2a>
 800efaa:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800efac:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800efb0:	645a      	str	r2, [r3, #68]	; 0x44
 800efb2:	e7de      	b.n	800ef72 <HAL_TIM_PWM_Stop+0x2a>
 800efb4:	2904      	cmp	r1, #4
 800efb6:	d00e      	beq.n	800efd6 <HAL_TIM_PWM_Stop+0x8e>
 800efb8:	2908      	cmp	r1, #8
 800efba:	bf0c      	ite	eq
 800efbc:	f880 3040 	strbeq.w	r3, [r0, #64]	; 0x40
 800efc0:	f880 3041 	strbne.w	r3, [r0, #65]	; 0x41
 800efc4:	f85d 4b04 	ldr.w	r4, [sp], #4
 800efc8:	2000      	movs	r0, #0
 800efca:	4770      	bx	lr
 800efcc:	681a      	ldr	r2, [r3, #0]
 800efce:	f022 0201 	bic.w	r2, r2, #1
 800efd2:	601a      	str	r2, [r3, #0]
 800efd4:	e7d7      	b.n	800ef86 <HAL_TIM_PWM_Stop+0x3e>
 800efd6:	f880 303f 	strb.w	r3, [r0, #63]	; 0x3f
 800efda:	f85d 4b04 	ldr.w	r4, [sp], #4
 800efde:	2000      	movs	r0, #0
 800efe0:	4770      	bx	lr
 800efe2:	bf00      	nop
 800efe4:	40010000 	.word	0x40010000

0800efe8 <HAL_TIM_PWM_ConfigChannel>:
  __HAL_LOCK(htim);
 800efe8:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800efec:	2b01      	cmp	r3, #1
 800efee:	f000 80d2 	beq.w	800f196 <HAL_TIM_PWM_ConfigChannel+0x1ae>
 800eff2:	2301      	movs	r3, #1
{
 800eff4:	b570      	push	{r4, r5, r6, lr}
 800eff6:	4684      	mov	ip, r0
  __HAL_LOCK(htim);
 800eff8:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  switch (Channel)
 800effc:	2a0c      	cmp	r2, #12
 800effe:	d808      	bhi.n	800f012 <HAL_TIM_PWM_ConfigChannel+0x2a>
 800f000:	e8df f002 	tbb	[pc, r2]
 800f004:	0707073e 	.word	0x0707073e
 800f008:	0707076b 	.word	0x0707076b
 800f00c:	0707079b 	.word	0x0707079b
 800f010:	0c          	.byte	0x0c
 800f011:	00          	.byte	0x00
  __HAL_UNLOCK(htim);
 800f012:	2300      	movs	r3, #0
 800f014:	f88c 303c 	strb.w	r3, [ip, #60]	; 0x3c
  switch (Channel)
 800f018:	2001      	movs	r0, #1
}
 800f01a:	bd70      	pop	{r4, r5, r6, pc}
      TIM_OC4_SetConfig(htim->Instance, sConfig);
 800f01c:	6803      	ldr	r3, [r0, #0]
  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC4M;
  tmpccmrx &= ~TIM_CCMR2_CC4S;

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800f01e:	680d      	ldr	r5, [r1, #0]
  TIMx->CCER &= ~TIM_CCER_CC4E;
 800f020:	6a1a      	ldr	r2, [r3, #32]
 800f022:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 800f026:	621a      	str	r2, [r3, #32]
  tmpccer = TIMx->CCER;
 800f028:	6a1a      	ldr	r2, [r3, #32]
  tmpcr2 =  TIMx->CR2;
 800f02a:	685c      	ldr	r4, [r3, #4]
  tmpccmrx = TIMx->CCMR2;
 800f02c:	69d8      	ldr	r0, [r3, #28]
  tmpccmrx &= ~TIM_CCMR2_CC4S;
 800f02e:	f420 40e6 	bic.w	r0, r0, #29440	; 0x7300
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800f032:	ea40 2005 	orr.w	r0, r0, r5, lsl #8

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC4P;
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 12U);
 800f036:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC4P;
 800f038:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
  tmpccer |= (OC_Config->OCPolarity << 12U);
 800f03c:	ea42 3205 	orr.w	r2, r2, r5, lsl #12

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800f040:	4d70      	ldr	r5, [pc, #448]	; (800f204 <HAL_TIM_PWM_ConfigChannel+0x21c>)
 800f042:	42ab      	cmp	r3, r5
 800f044:	f000 80c8 	beq.w	800f1d8 <HAL_TIM_PWM_ConfigChannel+0x1f0>
 800f048:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800f04c:	42ab      	cmp	r3, r5
 800f04e:	f000 80c3 	beq.w	800f1d8 <HAL_TIM_PWM_ConfigChannel+0x1f0>
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 800f052:	605c      	str	r4, [r3, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 800f054:	61d8      	str	r0, [r3, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR4 = OC_Config->Pulse;
 800f056:	6848      	ldr	r0, [r1, #4]
 800f058:	6418      	str	r0, [r3, #64]	; 0x40

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 800f05a:	621a      	str	r2, [r3, #32]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 800f05c:	69da      	ldr	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 800f05e:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 800f060:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800f064:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC4FE;
 800f066:	69da      	ldr	r2, [r3, #28]
 800f068:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800f06c:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 800f06e:	69da      	ldr	r2, [r3, #28]
 800f070:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 800f074:	61da      	str	r2, [r3, #28]
  __HAL_UNLOCK(htim);
 800f076:	2300      	movs	r3, #0
 800f078:	f88c 303c 	strb.w	r3, [ip, #60]	; 0x3c
  HAL_StatusTypeDef status = HAL_OK;
 800f07c:	2000      	movs	r0, #0
}
 800f07e:	bd70      	pop	{r4, r5, r6, pc}
      TIM_OC1_SetConfig(htim->Instance, sConfig);
 800f080:	6803      	ldr	r3, [r0, #0]
  tmpccmrx |= OC_Config->OCMode;
 800f082:	680d      	ldr	r5, [r1, #0]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800f084:	6a1a      	ldr	r2, [r3, #32]
 800f086:	f022 0201 	bic.w	r2, r2, #1
 800f08a:	621a      	str	r2, [r3, #32]
  tmpccer = TIMx->CCER;
 800f08c:	6a1a      	ldr	r2, [r3, #32]
  tmpcr2 =  TIMx->CR2;
 800f08e:	685c      	ldr	r4, [r3, #4]
  tmpccmrx = TIMx->CCMR1;
 800f090:	6998      	ldr	r0, [r3, #24]
  tmpccmrx &= ~TIM_CCMR1_CC1S;
 800f092:	f020 0073 	bic.w	r0, r0, #115	; 0x73
  tmpccmrx |= OC_Config->OCMode;
 800f096:	4328      	orrs	r0, r5
  tmpccer |= OC_Config->OCPolarity;
 800f098:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC1P;
 800f09a:	f022 0202 	bic.w	r2, r2, #2
  tmpccer |= OC_Config->OCPolarity;
 800f09e:	432a      	orrs	r2, r5
  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_1))
 800f0a0:	4d58      	ldr	r5, [pc, #352]	; (800f204 <HAL_TIM_PWM_ConfigChannel+0x21c>)
 800f0a2:	42ab      	cmp	r3, r5
 800f0a4:	d079      	beq.n	800f19a <HAL_TIM_PWM_ConfigChannel+0x1b2>
 800f0a6:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800f0aa:	42ab      	cmp	r3, r5
 800f0ac:	d075      	beq.n	800f19a <HAL_TIM_PWM_ConfigChannel+0x1b2>
  TIMx->CR2 = tmpcr2;
 800f0ae:	605c      	str	r4, [r3, #4]
  TIMx->CCMR1 = tmpccmrx;
 800f0b0:	6198      	str	r0, [r3, #24]
  TIMx->CCR1 = OC_Config->Pulse;
 800f0b2:	6848      	ldr	r0, [r1, #4]
 800f0b4:	6358      	str	r0, [r3, #52]	; 0x34
  TIMx->CCER = tmpccer;
 800f0b6:	621a      	str	r2, [r3, #32]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 800f0b8:	699a      	ldr	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 800f0ba:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 800f0bc:	f042 0208 	orr.w	r2, r2, #8
 800f0c0:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC1FE;
 800f0c2:	699a      	ldr	r2, [r3, #24]
 800f0c4:	f022 0204 	bic.w	r2, r2, #4
 800f0c8:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 800f0ca:	699a      	ldr	r2, [r3, #24]
 800f0cc:	430a      	orrs	r2, r1
 800f0ce:	619a      	str	r2, [r3, #24]
  __HAL_UNLOCK(htim);
 800f0d0:	2300      	movs	r3, #0
 800f0d2:	f88c 303c 	strb.w	r3, [ip, #60]	; 0x3c
  HAL_StatusTypeDef status = HAL_OK;
 800f0d6:	2000      	movs	r0, #0
}
 800f0d8:	bd70      	pop	{r4, r5, r6, pc}
      TIM_OC2_SetConfig(htim->Instance, sConfig);
 800f0da:	6803      	ldr	r3, [r0, #0]
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800f0dc:	680d      	ldr	r5, [r1, #0]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800f0de:	6a1a      	ldr	r2, [r3, #32]
 800f0e0:	f022 0210 	bic.w	r2, r2, #16
 800f0e4:	621a      	str	r2, [r3, #32]
  tmpccer = TIMx->CCER;
 800f0e6:	6a1a      	ldr	r2, [r3, #32]
  tmpcr2 =  TIMx->CR2;
 800f0e8:	685c      	ldr	r4, [r3, #4]
  tmpccmrx = TIMx->CCMR1;
 800f0ea:	6998      	ldr	r0, [r3, #24]
  tmpccmrx &= ~TIM_CCMR1_CC2S;
 800f0ec:	f420 40e6 	bic.w	r0, r0, #29440	; 0x7300
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800f0f0:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
  tmpccer |= (OC_Config->OCPolarity << 4U);
 800f0f4:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC2P;
 800f0f6:	f022 0220 	bic.w	r2, r2, #32
  tmpccer |= (OC_Config->OCPolarity << 4U);
 800f0fa:	ea42 1205 	orr.w	r2, r2, r5, lsl #4
  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_2))
 800f0fe:	4d41      	ldr	r5, [pc, #260]	; (800f204 <HAL_TIM_PWM_ConfigChannel+0x21c>)
 800f100:	42ab      	cmp	r3, r5
 800f102:	d059      	beq.n	800f1b8 <HAL_TIM_PWM_ConfigChannel+0x1d0>
 800f104:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800f108:	42ab      	cmp	r3, r5
 800f10a:	d055      	beq.n	800f1b8 <HAL_TIM_PWM_ConfigChannel+0x1d0>
  TIMx->CR2 = tmpcr2;
 800f10c:	605c      	str	r4, [r3, #4]
  TIMx->CCMR1 = tmpccmrx;
 800f10e:	6198      	str	r0, [r3, #24]
  TIMx->CCR2 = OC_Config->Pulse;
 800f110:	6848      	ldr	r0, [r1, #4]
 800f112:	6398      	str	r0, [r3, #56]	; 0x38
  TIMx->CCER = tmpccer;
 800f114:	621a      	str	r2, [r3, #32]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 800f116:	699a      	ldr	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 800f118:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 800f11a:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800f11e:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC2FE;
 800f120:	699a      	ldr	r2, [r3, #24]
 800f122:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800f126:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 800f128:	699a      	ldr	r2, [r3, #24]
 800f12a:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 800f12e:	619a      	str	r2, [r3, #24]
  __HAL_UNLOCK(htim);
 800f130:	2300      	movs	r3, #0
 800f132:	f88c 303c 	strb.w	r3, [ip, #60]	; 0x3c
  HAL_StatusTypeDef status = HAL_OK;
 800f136:	2000      	movs	r0, #0
}
 800f138:	bd70      	pop	{r4, r5, r6, pc}
      TIM_OC3_SetConfig(htim->Instance, sConfig);
 800f13a:	6803      	ldr	r3, [r0, #0]
  tmpccmrx |= OC_Config->OCMode;
 800f13c:	680d      	ldr	r5, [r1, #0]
  TIMx->CCER &= ~TIM_CCER_CC3E;
 800f13e:	6a1a      	ldr	r2, [r3, #32]
 800f140:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800f144:	621a      	str	r2, [r3, #32]
  tmpccer = TIMx->CCER;
 800f146:	6a1a      	ldr	r2, [r3, #32]
  tmpcr2 =  TIMx->CR2;
 800f148:	685c      	ldr	r4, [r3, #4]
  tmpccmrx = TIMx->CCMR2;
 800f14a:	69d8      	ldr	r0, [r3, #28]
  tmpccmrx &= ~TIM_CCMR2_CC3S;
 800f14c:	f020 0073 	bic.w	r0, r0, #115	; 0x73
  tmpccmrx |= OC_Config->OCMode;
 800f150:	4328      	orrs	r0, r5
  tmpccer |= (OC_Config->OCPolarity << 8U);
 800f152:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC3P;
 800f154:	f422 7200 	bic.w	r2, r2, #512	; 0x200
  tmpccer |= (OC_Config->OCPolarity << 8U);
 800f158:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_3))
 800f15c:	4d29      	ldr	r5, [pc, #164]	; (800f204 <HAL_TIM_PWM_ConfigChannel+0x21c>)
 800f15e:	42ab      	cmp	r3, r5
 800f160:	d040      	beq.n	800f1e4 <HAL_TIM_PWM_ConfigChannel+0x1fc>
 800f162:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800f166:	42ab      	cmp	r3, r5
 800f168:	d03c      	beq.n	800f1e4 <HAL_TIM_PWM_ConfigChannel+0x1fc>
  TIMx->CR2 = tmpcr2;
 800f16a:	605c      	str	r4, [r3, #4]
  TIMx->CCMR2 = tmpccmrx;
 800f16c:	61d8      	str	r0, [r3, #28]
  TIMx->CCR3 = OC_Config->Pulse;
 800f16e:	6848      	ldr	r0, [r1, #4]
 800f170:	63d8      	str	r0, [r3, #60]	; 0x3c
  TIMx->CCER = tmpccer;
 800f172:	621a      	str	r2, [r3, #32]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 800f174:	69da      	ldr	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 800f176:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 800f178:	f042 0208 	orr.w	r2, r2, #8
 800f17c:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC3FE;
 800f17e:	69da      	ldr	r2, [r3, #28]
 800f180:	f022 0204 	bic.w	r2, r2, #4
 800f184:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 800f186:	69da      	ldr	r2, [r3, #28]
 800f188:	430a      	orrs	r2, r1
 800f18a:	61da      	str	r2, [r3, #28]
  __HAL_UNLOCK(htim);
 800f18c:	2300      	movs	r3, #0
 800f18e:	f88c 303c 	strb.w	r3, [ip, #60]	; 0x3c
  HAL_StatusTypeDef status = HAL_OK;
 800f192:	2000      	movs	r0, #0
}
 800f194:	bd70      	pop	{r4, r5, r6, pc}
  __HAL_LOCK(htim);
 800f196:	2002      	movs	r0, #2
}
 800f198:	4770      	bx	lr
    tmpccer |= OC_Config->OCNPolarity;
 800f19a:	68cd      	ldr	r5, [r1, #12]
    tmpccer &= ~TIM_CCER_CC1NP;
 800f19c:	f022 0208 	bic.w	r2, r2, #8
    tmpccer |= OC_Config->OCNPolarity;
 800f1a0:	432a      	orrs	r2, r5
    tmpcr2 |= OC_Config->OCNIdleState;
 800f1a2:	e9d1 6505 	ldrd	r6, r5, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS1N;
 800f1a6:	f424 7440 	bic.w	r4, r4, #768	; 0x300
    tmpcr2 |= OC_Config->OCNIdleState;
 800f1aa:	ea46 0e05 	orr.w	lr, r6, r5
    tmpccer &= ~TIM_CCER_CC1NE;
 800f1ae:	f022 0204 	bic.w	r2, r2, #4
    tmpcr2 |= OC_Config->OCNIdleState;
 800f1b2:	ea4e 0404 	orr.w	r4, lr, r4
 800f1b6:	e77a      	b.n	800f0ae <HAL_TIM_PWM_ConfigChannel+0xc6>
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 800f1b8:	68cd      	ldr	r5, [r1, #12]
    tmpccer &= ~TIM_CCER_CC2NP;
 800f1ba:	f022 0280 	bic.w	r2, r2, #128	; 0x80
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 800f1be:	ea42 1205 	orr.w	r2, r2, r5, lsl #4
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 800f1c2:	e9d1 6505 	ldrd	r6, r5, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS2N;
 800f1c6:	f424 6440 	bic.w	r4, r4, #3072	; 0xc00
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 800f1ca:	ea46 0e05 	orr.w	lr, r6, r5
    tmpccer &= ~TIM_CCER_CC2NE;
 800f1ce:	f022 0240 	bic.w	r2, r2, #64	; 0x40
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 800f1d2:	ea44 048e 	orr.w	r4, r4, lr, lsl #2
 800f1d6:	e799      	b.n	800f10c <HAL_TIM_PWM_ConfigChannel+0x124>
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
 800f1d8:	694d      	ldr	r5, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS4;
 800f1da:	f424 4480 	bic.w	r4, r4, #16384	; 0x4000
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
 800f1de:	ea44 1485 	orr.w	r4, r4, r5, lsl #6
 800f1e2:	e736      	b.n	800f052 <HAL_TIM_PWM_ConfigChannel+0x6a>
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 800f1e4:	68cd      	ldr	r5, [r1, #12]
    tmpccer &= ~TIM_CCER_CC3NP;
 800f1e6:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 800f1ea:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 800f1ee:	e9d1 6505 	ldrd	r6, r5, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS3N;
 800f1f2:	f424 5440 	bic.w	r4, r4, #12288	; 0x3000
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 800f1f6:	ea46 0e05 	orr.w	lr, r6, r5
    tmpccer &= ~TIM_CCER_CC3NE;
 800f1fa:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 800f1fe:	ea44 140e 	orr.w	r4, r4, lr, lsl #4
 800f202:	e7b2      	b.n	800f16a <HAL_TIM_PWM_ConfigChannel+0x182>
 800f204:	40010000 	.word	0x40010000

0800f208 <HAL_TIM_ConfigClockSource>:
  __HAL_LOCK(htim);
 800f208:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800f20c:	2b01      	cmp	r3, #1
 800f20e:	d075      	beq.n	800f2fc <HAL_TIM_ConfigClockSource+0xf4>
 800f210:	4602      	mov	r2, r0
{
 800f212:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800f214:	2302      	movs	r3, #2
  tmpsmcr = htim->Instance->SMCR;
 800f216:	6804      	ldr	r4, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800f218:	f882 303d 	strb.w	r3, [r2, #61]	; 0x3d
  __HAL_LOCK(htim);
 800f21c:	2001      	movs	r0, #1
 800f21e:	f882 003c 	strb.w	r0, [r2, #60]	; 0x3c
  tmpsmcr = htim->Instance->SMCR;
 800f222:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800f224:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800f228:	f023 0377 	bic.w	r3, r3, #119	; 0x77
  htim->Instance->SMCR = tmpsmcr;
 800f22c:	60a3      	str	r3, [r4, #8]
  switch (sClockSourceConfig->ClockSource)
 800f22e:	680b      	ldr	r3, [r1, #0]
 800f230:	2b60      	cmp	r3, #96	; 0x60
 800f232:	d065      	beq.n	800f300 <HAL_TIM_ConfigClockSource+0xf8>
 800f234:	d824      	bhi.n	800f280 <HAL_TIM_ConfigClockSource+0x78>
 800f236:	2b40      	cmp	r3, #64	; 0x40
 800f238:	d07c      	beq.n	800f334 <HAL_TIM_ConfigClockSource+0x12c>
 800f23a:	d94b      	bls.n	800f2d4 <HAL_TIM_ConfigClockSource+0xcc>
 800f23c:	2b50      	cmp	r3, #80	; 0x50
 800f23e:	d117      	bne.n	800f270 <HAL_TIM_ConfigClockSource+0x68>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800f240:	684b      	ldr	r3, [r1, #4]
 800f242:	68cd      	ldr	r5, [r1, #12]
{
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 1: Reset the CC1E Bit */
  tmpccer = TIMx->CCER;
 800f244:	6a21      	ldr	r1, [r4, #32]
  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
  tmpccmr1 |= (TIM_ICFilter << 4U);

  /* Select the Polarity and set the CC1E Bit */
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800f246:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800f24a:	4319      	orrs	r1, r3
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800f24c:	6a23      	ldr	r3, [r4, #32]
 800f24e:	f023 0301 	bic.w	r3, r3, #1
 800f252:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800f254:	69a3      	ldr	r3, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800f256:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800f25a:	ea43 1305 	orr.w	r3, r3, r5, lsl #4

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1;
 800f25e:	61a3      	str	r3, [r4, #24]
  TIMx->CCER = tmpccer;
 800f260:	6221      	str	r1, [r4, #32]
static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint32_t InputTriggerSource)
{
  uint32_t tmpsmcr;

  /* Get the TIMx SMCR register value */
  tmpsmcr = TIMx->SMCR;
 800f262:	68a3      	ldr	r3, [r4, #8]
  /* Reset the TS Bits */
  tmpsmcr &= ~TIM_SMCR_TS;
 800f264:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  /* Set the Input Trigger source and the slave mode*/
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800f268:	f043 0357 	orr.w	r3, r3, #87	; 0x57
  HAL_StatusTypeDef status = HAL_OK;
 800f26c:	2000      	movs	r0, #0
  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800f26e:	60a3      	str	r3, [r4, #8]
  htim->State = HAL_TIM_STATE_READY;
 800f270:	2101      	movs	r1, #1
  __HAL_UNLOCK(htim);
 800f272:	2300      	movs	r3, #0
  htim->State = HAL_TIM_STATE_READY;
 800f274:	f882 103d 	strb.w	r1, [r2, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800f278:	f882 303c 	strb.w	r3, [r2, #60]	; 0x3c
}
 800f27c:	bc30      	pop	{r4, r5}
 800f27e:	4770      	bx	lr
  switch (sClockSourceConfig->ClockSource)
 800f280:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800f284:	d038      	beq.n	800f2f8 <HAL_TIM_ConfigClockSource+0xf0>
 800f286:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800f28a:	d110      	bne.n	800f2ae <HAL_TIM_ConfigClockSource+0xa6>

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800f28c:	e9d1 5301 	ldrd	r5, r3, [r1, #4]
  tmpsmcr = TIMx->SMCR;
 800f290:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800f292:	432b      	orrs	r3, r5
 800f294:	68cd      	ldr	r5, [r1, #12]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800f296:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800f29a:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 800f29e:	430b      	orrs	r3, r1

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800f2a0:	60a3      	str	r3, [r4, #8]
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800f2a2:	68a3      	ldr	r3, [r4, #8]
 800f2a4:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
  HAL_StatusTypeDef status = HAL_OK;
 800f2a8:	2000      	movs	r0, #0
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800f2aa:	60a3      	str	r3, [r4, #8]
      break;
 800f2ac:	e7e0      	b.n	800f270 <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800f2ae:	2b70      	cmp	r3, #112	; 0x70
 800f2b0:	d1de      	bne.n	800f270 <HAL_TIM_ConfigClockSource+0x68>
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800f2b2:	e9d1 5301 	ldrd	r5, r3, [r1, #4]
  tmpsmcr = TIMx->SMCR;
 800f2b6:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800f2b8:	432b      	orrs	r3, r5
 800f2ba:	68cd      	ldr	r5, [r1, #12]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800f2bc:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800f2c0:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 800f2c4:	430b      	orrs	r3, r1
  TIMx->SMCR = tmpsmcr;
 800f2c6:	60a3      	str	r3, [r4, #8]
      tmpsmcr = htim->Instance->SMCR;
 800f2c8:	68a3      	ldr	r3, [r4, #8]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 800f2ca:	f043 0377 	orr.w	r3, r3, #119	; 0x77
  HAL_StatusTypeDef status = HAL_OK;
 800f2ce:	2000      	movs	r0, #0
      htim->Instance->SMCR = tmpsmcr;
 800f2d0:	60a3      	str	r3, [r4, #8]
      break;
 800f2d2:	e7cd      	b.n	800f270 <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800f2d4:	2b20      	cmp	r3, #32
 800f2d6:	d002      	beq.n	800f2de <HAL_TIM_ConfigClockSource+0xd6>
 800f2d8:	d90a      	bls.n	800f2f0 <HAL_TIM_ConfigClockSource+0xe8>
 800f2da:	2b30      	cmp	r3, #48	; 0x30
 800f2dc:	d1c8      	bne.n	800f270 <HAL_TIM_ConfigClockSource+0x68>
  tmpsmcr = TIMx->SMCR;
 800f2de:	68a1      	ldr	r1, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800f2e0:	f021 0170 	bic.w	r1, r1, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800f2e4:	430b      	orrs	r3, r1
 800f2e6:	f043 0307 	orr.w	r3, r3, #7
  HAL_StatusTypeDef status = HAL_OK;
 800f2ea:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800f2ec:	60a3      	str	r3, [r4, #8]
}
 800f2ee:	e7bf      	b.n	800f270 <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800f2f0:	f033 0110 	bics.w	r1, r3, #16
 800f2f4:	d1bc      	bne.n	800f270 <HAL_TIM_ConfigClockSource+0x68>
 800f2f6:	e7f2      	b.n	800f2de <HAL_TIM_ConfigClockSource+0xd6>
  HAL_StatusTypeDef status = HAL_OK;
 800f2f8:	2000      	movs	r0, #0
 800f2fa:	e7b9      	b.n	800f270 <HAL_TIM_ConfigClockSource+0x68>
  __HAL_LOCK(htim);
 800f2fc:	2002      	movs	r0, #2
}
 800f2fe:	4770      	bx	lr
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800f300:	6a23      	ldr	r3, [r4, #32]
      TIM_TI2_ConfigInputStage(htim->Instance,
 800f302:	6848      	ldr	r0, [r1, #4]
 800f304:	68cd      	ldr	r5, [r1, #12]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800f306:	f023 0310 	bic.w	r3, r3, #16
 800f30a:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800f30c:	69a1      	ldr	r1, [r4, #24]
  tmpccer = TIMx->CCER;
 800f30e:	6a23      	ldr	r3, [r4, #32]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 800f310:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 800f314:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
  tmpccer |= (TIM_ICPolarity << 4U);
 800f318:	ea43 1300 	orr.w	r3, r3, r0, lsl #4
  tmpccmr1 |= (TIM_ICFilter << 12U);
 800f31c:	ea41 3105 	orr.w	r1, r1, r5, lsl #12
  TIMx->CCMR1 = tmpccmr1 ;
 800f320:	61a1      	str	r1, [r4, #24]
  TIMx->CCER = tmpccer;
 800f322:	6223      	str	r3, [r4, #32]
  tmpsmcr = TIMx->SMCR;
 800f324:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800f326:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800f32a:	f043 0367 	orr.w	r3, r3, #103	; 0x67
  HAL_StatusTypeDef status = HAL_OK;
 800f32e:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800f330:	60a3      	str	r3, [r4, #8]
}
 800f332:	e79d      	b.n	800f270 <HAL_TIM_ConfigClockSource+0x68>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800f334:	684b      	ldr	r3, [r1, #4]
 800f336:	68cd      	ldr	r5, [r1, #12]
  tmpccer = TIMx->CCER;
 800f338:	6a21      	ldr	r1, [r4, #32]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800f33a:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800f33e:	4319      	orrs	r1, r3
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800f340:	6a23      	ldr	r3, [r4, #32]
 800f342:	f023 0301 	bic.w	r3, r3, #1
 800f346:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800f348:	69a3      	ldr	r3, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800f34a:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800f34e:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  TIMx->CCMR1 = tmpccmr1;
 800f352:	61a3      	str	r3, [r4, #24]
  TIMx->CCER = tmpccer;
 800f354:	6221      	str	r1, [r4, #32]
  tmpsmcr = TIMx->SMCR;
 800f356:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800f358:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800f35c:	f043 0347 	orr.w	r3, r3, #71	; 0x47
  HAL_StatusTypeDef status = HAL_OK;
 800f360:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800f362:	60a3      	str	r3, [r4, #8]
}
 800f364:	e784      	b.n	800f270 <HAL_TIM_ConfigClockSource+0x68>
 800f366:	bf00      	nop

0800f368 <HAL_TIM_SlaveConfigSynchro>:
  __HAL_LOCK(htim);
 800f368:	f890 203c 	ldrb.w	r2, [r0, #60]	; 0x3c
 800f36c:	2a01      	cmp	r2, #1
 800f36e:	d050      	beq.n	800f412 <HAL_TIM_SlaveConfigSynchro+0xaa>
 800f370:	4603      	mov	r3, r0
{
 800f372:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800f374:	2202      	movs	r2, #2
  tmpsmcr = htim->Instance->SMCR;
 800f376:	6804      	ldr	r4, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800f378:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
  __HAL_LOCK(htim);
 800f37c:	2001      	movs	r0, #1
 800f37e:	f883 003c 	strb.w	r0, [r3, #60]	; 0x3c
  tmpsmcr = htim->Instance->SMCR;
 800f382:	68a2      	ldr	r2, [r4, #8]
  tmpsmcr |= sSlaveConfig->InputTrigger;
 800f384:	6848      	ldr	r0, [r1, #4]
  tmpsmcr |= sSlaveConfig->SlaveMode;
 800f386:	680d      	ldr	r5, [r1, #0]
  tmpsmcr &= ~TIM_SMCR_TS;
 800f388:	f022 0270 	bic.w	r2, r2, #112	; 0x70
  tmpsmcr |= sSlaveConfig->InputTrigger;
 800f38c:	4302      	orrs	r2, r0
  tmpsmcr &= ~TIM_SMCR_SMS;
 800f38e:	f022 0207 	bic.w	r2, r2, #7
  tmpsmcr |= sSlaveConfig->SlaveMode;
 800f392:	432a      	orrs	r2, r5
  switch (sSlaveConfig->InputTrigger)
 800f394:	2850      	cmp	r0, #80	; 0x50
  htim->Instance->SMCR = tmpsmcr;
 800f396:	60a2      	str	r2, [r4, #8]
  switch (sSlaveConfig->InputTrigger)
 800f398:	d060      	beq.n	800f45c <HAL_TIM_SlaveConfigSynchro+0xf4>
 800f39a:	d90f      	bls.n	800f3bc <HAL_TIM_SlaveConfigSynchro+0x54>
 800f39c:	2860      	cmp	r0, #96	; 0x60
 800f39e:	d03a      	beq.n	800f416 <HAL_TIM_SlaveConfigSynchro+0xae>
 800f3a0:	2870      	cmp	r0, #112	; 0x70
 800f3a2:	d10e      	bne.n	800f3c2 <HAL_TIM_SlaveConfigSynchro+0x5a>
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800f3a4:	e9d1 5202 	ldrd	r5, r2, [r1, #8]
  tmpsmcr = TIMx->SMCR;
 800f3a8:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800f3aa:	432a      	orrs	r2, r5
 800f3ac:	690d      	ldr	r5, [r1, #16]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800f3ae:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800f3b2:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 800f3b6:	430a      	orrs	r2, r1
  TIMx->SMCR = tmpsmcr;
 800f3b8:	60a2      	str	r2, [r4, #8]
 800f3ba:	e00f      	b.n	800f3dc <HAL_TIM_SlaveConfigSynchro+0x74>
  switch (sSlaveConfig->InputTrigger)
 800f3bc:	2840      	cmp	r0, #64	; 0x40
 800f3be:	d03d      	beq.n	800f43c <HAL_TIM_SlaveConfigSynchro+0xd4>
 800f3c0:	d907      	bls.n	800f3d2 <HAL_TIM_SlaveConfigSynchro+0x6a>
    htim->State = HAL_TIM_STATE_READY;
 800f3c2:	2001      	movs	r0, #1
    __HAL_UNLOCK(htim);
 800f3c4:	2200      	movs	r2, #0
    htim->State = HAL_TIM_STATE_READY;
 800f3c6:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_UNLOCK(htim);
 800f3ca:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
}
 800f3ce:	bc30      	pop	{r4, r5}
 800f3d0:	4770      	bx	lr
  switch (sSlaveConfig->InputTrigger)
 800f3d2:	2820      	cmp	r0, #32
 800f3d4:	d002      	beq.n	800f3dc <HAL_TIM_SlaveConfigSynchro+0x74>
 800f3d6:	d912      	bls.n	800f3fe <HAL_TIM_SlaveConfigSynchro+0x96>
 800f3d8:	2830      	cmp	r0, #48	; 0x30
 800f3da:	d1f2      	bne.n	800f3c2 <HAL_TIM_SlaveConfigSynchro+0x5a>
  __HAL_TIM_DISABLE_IT(htim, TIM_IT_TRIGGER);
 800f3dc:	68e2      	ldr	r2, [r4, #12]
 800f3de:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800f3e2:	60e2      	str	r2, [r4, #12]
  __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_TRIGGER);
 800f3e4:	68e2      	ldr	r2, [r4, #12]
  __HAL_UNLOCK(htim);
 800f3e6:	2100      	movs	r1, #0
  htim->State = HAL_TIM_STATE_READY;
 800f3e8:	2501      	movs	r5, #1
  __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_TRIGGER);
 800f3ea:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 800f3ee:	60e2      	str	r2, [r4, #12]
  htim->State = HAL_TIM_STATE_READY;
 800f3f0:	f883 503d 	strb.w	r5, [r3, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800f3f4:	f883 103c 	strb.w	r1, [r3, #60]	; 0x3c
  return HAL_OK;
 800f3f8:	4608      	mov	r0, r1
}
 800f3fa:	bc30      	pop	{r4, r5}
 800f3fc:	4770      	bx	lr
  switch (sSlaveConfig->InputTrigger)
 800f3fe:	f030 0210 	bics.w	r2, r0, #16
 800f402:	d0eb      	beq.n	800f3dc <HAL_TIM_SlaveConfigSynchro+0x74>
    htim->State = HAL_TIM_STATE_READY;
 800f404:	2001      	movs	r0, #1
    __HAL_UNLOCK(htim);
 800f406:	2200      	movs	r2, #0
    htim->State = HAL_TIM_STATE_READY;
 800f408:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_UNLOCK(htim);
 800f40c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    return HAL_ERROR;
 800f410:	e7dd      	b.n	800f3ce <HAL_TIM_SlaveConfigSynchro+0x66>
  __HAL_LOCK(htim);
 800f412:	2002      	movs	r0, #2
}
 800f414:	4770      	bx	lr
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800f416:	6a22      	ldr	r2, [r4, #32]
      TIM_TI2_ConfigInputStage(htim->Instance,
 800f418:	6888      	ldr	r0, [r1, #8]
 800f41a:	690d      	ldr	r5, [r1, #16]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800f41c:	f022 0210 	bic.w	r2, r2, #16
 800f420:	6222      	str	r2, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800f422:	69a1      	ldr	r1, [r4, #24]
  tmpccer = TIMx->CCER;
 800f424:	6a22      	ldr	r2, [r4, #32]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 800f426:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 800f42a:	f022 02a0 	bic.w	r2, r2, #160	; 0xa0
  tmpccmr1 |= (TIM_ICFilter << 12U);
 800f42e:	ea41 3105 	orr.w	r1, r1, r5, lsl #12
  tmpccer |= (TIM_ICPolarity << 4U);
 800f432:	ea42 1200 	orr.w	r2, r2, r0, lsl #4
  TIMx->CCMR1 = tmpccmr1 ;
 800f436:	61a1      	str	r1, [r4, #24]
  TIMx->CCER = tmpccer;
 800f438:	6222      	str	r2, [r4, #32]
 800f43a:	e7cf      	b.n	800f3dc <HAL_TIM_SlaveConfigSynchro+0x74>
      if (sSlaveConfig->SlaveMode == TIM_SLAVEMODE_GATED)
 800f43c:	2d05      	cmp	r5, #5
 800f43e:	d0c0      	beq.n	800f3c2 <HAL_TIM_SlaveConfigSynchro+0x5a>
      tmpccer = htim->Instance->CCER;
 800f440:	6a20      	ldr	r0, [r4, #32]
      htim->Instance->CCER &= ~TIM_CCER_CC1E;
 800f442:	6a22      	ldr	r2, [r4, #32]
      tmpccmr1 |= ((sSlaveConfig->TriggerFilter) << 4U);
 800f444:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCER &= ~TIM_CCER_CC1E;
 800f446:	f022 0201 	bic.w	r2, r2, #1
 800f44a:	6222      	str	r2, [r4, #32]
      tmpccmr1 = htim->Instance->CCMR1;
 800f44c:	69a2      	ldr	r2, [r4, #24]
      tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800f44e:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
      tmpccmr1 |= ((sSlaveConfig->TriggerFilter) << 4U);
 800f452:	ea42 1201 	orr.w	r2, r2, r1, lsl #4
      htim->Instance->CCMR1 = tmpccmr1;
 800f456:	61a2      	str	r2, [r4, #24]
      htim->Instance->CCER = tmpccer;
 800f458:	6220      	str	r0, [r4, #32]
      break;
 800f45a:	e7bf      	b.n	800f3dc <HAL_TIM_SlaveConfigSynchro+0x74>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800f45c:	688a      	ldr	r2, [r1, #8]
 800f45e:	6908      	ldr	r0, [r1, #16]
  tmpccer = TIMx->CCER;
 800f460:	6a21      	ldr	r1, [r4, #32]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800f462:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800f466:	4311      	orrs	r1, r2
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800f468:	6a22      	ldr	r2, [r4, #32]
 800f46a:	f022 0201 	bic.w	r2, r2, #1
 800f46e:	6222      	str	r2, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800f470:	69a2      	ldr	r2, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800f472:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800f476:	ea42 1200 	orr.w	r2, r2, r0, lsl #4
  TIMx->CCMR1 = tmpccmr1;
 800f47a:	61a2      	str	r2, [r4, #24]
  TIMx->CCER = tmpccer;
 800f47c:	6221      	str	r1, [r4, #32]
 800f47e:	e7ad      	b.n	800f3dc <HAL_TIM_SlaveConfigSynchro+0x74>

0800f480 <HAL_TIM_OC_DelayElapsedCallback>:
 800f480:	4770      	bx	lr
 800f482:	bf00      	nop

0800f484 <HAL_TIM_IC_CaptureCallback>:
 800f484:	4770      	bx	lr
 800f486:	bf00      	nop

0800f488 <HAL_TIM_PWM_PulseFinishedCallback>:
 800f488:	4770      	bx	lr
 800f48a:	bf00      	nop

0800f48c <HAL_TIM_TriggerCallback>:
 800f48c:	4770      	bx	lr
 800f48e:	bf00      	nop

0800f490 <HAL_TIM_IRQHandler>:
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800f490:	6803      	ldr	r3, [r0, #0]
 800f492:	691a      	ldr	r2, [r3, #16]
 800f494:	0791      	lsls	r1, r2, #30
{
 800f496:	b510      	push	{r4, lr}
 800f498:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800f49a:	d502      	bpl.n	800f4a2 <HAL_TIM_IRQHandler+0x12>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 800f49c:	68da      	ldr	r2, [r3, #12]
 800f49e:	0792      	lsls	r2, r2, #30
 800f4a0:	d45f      	bmi.n	800f562 <HAL_TIM_IRQHandler+0xd2>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800f4a2:	691a      	ldr	r2, [r3, #16]
 800f4a4:	0750      	lsls	r0, r2, #29
 800f4a6:	d502      	bpl.n	800f4ae <HAL_TIM_IRQHandler+0x1e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 800f4a8:	68da      	ldr	r2, [r3, #12]
 800f4aa:	0751      	lsls	r1, r2, #29
 800f4ac:	d446      	bmi.n	800f53c <HAL_TIM_IRQHandler+0xac>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800f4ae:	691a      	ldr	r2, [r3, #16]
 800f4b0:	0712      	lsls	r2, r2, #28
 800f4b2:	d502      	bpl.n	800f4ba <HAL_TIM_IRQHandler+0x2a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 800f4b4:	68da      	ldr	r2, [r3, #12]
 800f4b6:	0710      	lsls	r0, r2, #28
 800f4b8:	d42e      	bmi.n	800f518 <HAL_TIM_IRQHandler+0x88>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800f4ba:	691a      	ldr	r2, [r3, #16]
 800f4bc:	06d2      	lsls	r2, r2, #27
 800f4be:	d502      	bpl.n	800f4c6 <HAL_TIM_IRQHandler+0x36>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 800f4c0:	68da      	ldr	r2, [r3, #12]
 800f4c2:	06d0      	lsls	r0, r2, #27
 800f4c4:	d418      	bmi.n	800f4f8 <HAL_TIM_IRQHandler+0x68>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800f4c6:	691a      	ldr	r2, [r3, #16]
 800f4c8:	07d1      	lsls	r1, r2, #31
 800f4ca:	d502      	bpl.n	800f4d2 <HAL_TIM_IRQHandler+0x42>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 800f4cc:	68da      	ldr	r2, [r3, #12]
 800f4ce:	07d2      	lsls	r2, r2, #31
 800f4d0:	d45d      	bmi.n	800f58e <HAL_TIM_IRQHandler+0xfe>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800f4d2:	691a      	ldr	r2, [r3, #16]
 800f4d4:	0610      	lsls	r0, r2, #24
 800f4d6:	d502      	bpl.n	800f4de <HAL_TIM_IRQHandler+0x4e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 800f4d8:	68da      	ldr	r2, [r3, #12]
 800f4da:	0611      	lsls	r1, r2, #24
 800f4dc:	d45f      	bmi.n	800f59e <HAL_TIM_IRQHandler+0x10e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800f4de:	691a      	ldr	r2, [r3, #16]
 800f4e0:	0652      	lsls	r2, r2, #25
 800f4e2:	d502      	bpl.n	800f4ea <HAL_TIM_IRQHandler+0x5a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 800f4e4:	68da      	ldr	r2, [r3, #12]
 800f4e6:	0650      	lsls	r0, r2, #25
 800f4e8:	d461      	bmi.n	800f5ae <HAL_TIM_IRQHandler+0x11e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800f4ea:	691a      	ldr	r2, [r3, #16]
 800f4ec:	0691      	lsls	r1, r2, #26
 800f4ee:	d502      	bpl.n	800f4f6 <HAL_TIM_IRQHandler+0x66>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 800f4f0:	68da      	ldr	r2, [r3, #12]
 800f4f2:	0692      	lsls	r2, r2, #26
 800f4f4:	d443      	bmi.n	800f57e <HAL_TIM_IRQHandler+0xee>
}
 800f4f6:	bd10      	pop	{r4, pc}
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800f4f8:	f06f 0110 	mvn.w	r1, #16
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800f4fc:	2208      	movs	r2, #8
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800f4fe:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800f500:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800f502:	69db      	ldr	r3, [r3, #28]
 800f504:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800f508:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800f50a:	d064      	beq.n	800f5d6 <HAL_TIM_IRQHandler+0x146>
        HAL_TIM_IC_CaptureCallback(htim);
 800f50c:	f7ff ffba 	bl	800f484 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800f510:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800f512:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800f514:	7722      	strb	r2, [r4, #28]
 800f516:	e7d6      	b.n	800f4c6 <HAL_TIM_IRQHandler+0x36>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800f518:	f06f 0108 	mvn.w	r1, #8
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800f51c:	2204      	movs	r2, #4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800f51e:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800f520:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800f522:	69db      	ldr	r3, [r3, #28]
 800f524:	0799      	lsls	r1, r3, #30
        HAL_TIM_IC_CaptureCallback(htim);
 800f526:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800f528:	d152      	bne.n	800f5d0 <HAL_TIM_IRQHandler+0x140>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800f52a:	f7ff ffa9 	bl	800f480 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800f52e:	4620      	mov	r0, r4
 800f530:	f7ff ffaa 	bl	800f488 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800f534:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800f536:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800f538:	7722      	strb	r2, [r4, #28]
 800f53a:	e7be      	b.n	800f4ba <HAL_TIM_IRQHandler+0x2a>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800f53c:	f06f 0104 	mvn.w	r1, #4
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800f540:	2202      	movs	r2, #2
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800f542:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800f544:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800f546:	699b      	ldr	r3, [r3, #24]
 800f548:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800f54c:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800f54e:	d13c      	bne.n	800f5ca <HAL_TIM_IRQHandler+0x13a>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800f550:	f7ff ff96 	bl	800f480 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800f554:	4620      	mov	r0, r4
 800f556:	f7ff ff97 	bl	800f488 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800f55a:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800f55c:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800f55e:	7722      	strb	r2, [r4, #28]
 800f560:	e7a5      	b.n	800f4ae <HAL_TIM_IRQHandler+0x1e>
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800f562:	f06f 0102 	mvn.w	r1, #2
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800f566:	2201      	movs	r2, #1
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800f568:	6119      	str	r1, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800f56a:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 800f56c:	699b      	ldr	r3, [r3, #24]
 800f56e:	079b      	lsls	r3, r3, #30
 800f570:	d025      	beq.n	800f5be <HAL_TIM_IRQHandler+0x12e>
          HAL_TIM_IC_CaptureCallback(htim);
 800f572:	f7ff ff87 	bl	800f484 <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800f576:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800f578:	6823      	ldr	r3, [r4, #0]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800f57a:	7722      	strb	r2, [r4, #28]
 800f57c:	e791      	b.n	800f4a2 <HAL_TIM_IRQHandler+0x12>
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800f57e:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 800f582:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800f584:	611a      	str	r2, [r3, #16]
}
 800f586:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 800f58a:	f000 b86b 	b.w	800f664 <HAL_TIMEx_CommutCallback>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 800f58e:	f06f 0201 	mvn.w	r2, #1
 800f592:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 800f594:	4620      	mov	r0, r4
 800f596:	f7f2 fc7d 	bl	8001e94 <HAL_TIM_PeriodElapsedCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800f59a:	6823      	ldr	r3, [r4, #0]
 800f59c:	e799      	b.n	800f4d2 <HAL_TIM_IRQHandler+0x42>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 800f59e:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800f5a2:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 800f5a4:	4620      	mov	r0, r4
 800f5a6:	f000 f85f 	bl	800f668 <HAL_TIMEx_BreakCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800f5aa:	6823      	ldr	r3, [r4, #0]
 800f5ac:	e797      	b.n	800f4de <HAL_TIM_IRQHandler+0x4e>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 800f5ae:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800f5b2:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 800f5b4:	4620      	mov	r0, r4
 800f5b6:	f7ff ff69 	bl	800f48c <HAL_TIM_TriggerCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800f5ba:	6823      	ldr	r3, [r4, #0]
 800f5bc:	e795      	b.n	800f4ea <HAL_TIM_IRQHandler+0x5a>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800f5be:	f7ff ff5f 	bl	800f480 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 800f5c2:	4620      	mov	r0, r4
 800f5c4:	f7ff ff60 	bl	800f488 <HAL_TIM_PWM_PulseFinishedCallback>
 800f5c8:	e7d5      	b.n	800f576 <HAL_TIM_IRQHandler+0xe6>
        HAL_TIM_IC_CaptureCallback(htim);
 800f5ca:	f7ff ff5b 	bl	800f484 <HAL_TIM_IC_CaptureCallback>
 800f5ce:	e7c4      	b.n	800f55a <HAL_TIM_IRQHandler+0xca>
        HAL_TIM_IC_CaptureCallback(htim);
 800f5d0:	f7ff ff58 	bl	800f484 <HAL_TIM_IC_CaptureCallback>
 800f5d4:	e7ae      	b.n	800f534 <HAL_TIM_IRQHandler+0xa4>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800f5d6:	f7ff ff53 	bl	800f480 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800f5da:	4620      	mov	r0, r4
 800f5dc:	f7ff ff54 	bl	800f488 <HAL_TIM_PWM_PulseFinishedCallback>
 800f5e0:	e796      	b.n	800f510 <HAL_TIM_IRQHandler+0x80>
 800f5e2:	bf00      	nop

0800f5e4 <HAL_TIMEx_MasterConfigSynchronization>:
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 800f5e4:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800f5e8:	2b01      	cmp	r3, #1
 800f5ea:	d037      	beq.n	800f65c <HAL_TIMEx_MasterConfigSynchronization+0x78>

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 800f5ec:	6803      	ldr	r3, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800f5ee:	2202      	movs	r2, #2
{
 800f5f0:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800f5f2:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  tmpcr2 = htim->Instance->CR2;
 800f5f6:	685a      	ldr	r2, [r3, #4]
  tmpsmcr = htim->Instance->SMCR;

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800f5f8:	680d      	ldr	r5, [r1, #0]
  tmpsmcr = htim->Instance->SMCR;
 800f5fa:	689c      	ldr	r4, [r3, #8]
  tmpcr2 &= ~TIM_CR2_MMS;
 800f5fc:	f022 0270 	bic.w	r2, r2, #112	; 0x70
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800f600:	432a      	orrs	r2, r5

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 800f602:	605a      	str	r2, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800f604:	4a16      	ldr	r2, [pc, #88]	; (800f660 <HAL_TIMEx_MasterConfigSynchronization+0x7c>)
 800f606:	4293      	cmp	r3, r2
 800f608:	d01a      	beq.n	800f640 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800f60a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800f60e:	d017      	beq.n	800f640 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800f610:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800f614:	4293      	cmp	r3, r2
 800f616:	d013      	beq.n	800f640 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800f618:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800f61c:	4293      	cmp	r3, r2
 800f61e:	d00f      	beq.n	800f640 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800f620:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800f624:	4293      	cmp	r3, r2
 800f626:	d00b      	beq.n	800f640 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800f628:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800f62c:	4293      	cmp	r3, r2
 800f62e:	d007      	beq.n	800f640 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800f630:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800f634:	4293      	cmp	r3, r2
 800f636:	d003      	beq.n	800f640 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800f638:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800f63c:	4293      	cmp	r3, r2
 800f63e:	d104      	bne.n	800f64a <HAL_TIMEx_MasterConfigSynchronization+0x66>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800f640:	684a      	ldr	r2, [r1, #4]
    tmpsmcr &= ~TIM_SMCR_MSM;
 800f642:	f024 0480 	bic.w	r4, r4, #128	; 0x80
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800f646:	4314      	orrs	r4, r2

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 800f648:	609c      	str	r4, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;

  __HAL_UNLOCK(htim);
 800f64a:	2300      	movs	r3, #0
  htim->State = HAL_TIM_STATE_READY;
 800f64c:	2201      	movs	r2, #1
 800f64e:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800f652:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c

  return HAL_OK;
}
 800f656:	bc30      	pop	{r4, r5}
  return HAL_OK;
 800f658:	4618      	mov	r0, r3
}
 800f65a:	4770      	bx	lr
  __HAL_LOCK(htim);
 800f65c:	2002      	movs	r0, #2
}
 800f65e:	4770      	bx	lr
 800f660:	40010000 	.word	0x40010000

0800f664 <HAL_TIMEx_CommutCallback>:
 800f664:	4770      	bx	lr
 800f666:	bf00      	nop

0800f668 <HAL_TIMEx_BreakCallback>:
 800f668:	4770      	bx	lr
 800f66a:	bf00      	nop

0800f66c <FMC_SDRAM_Init>:
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800f66c:	680b      	ldr	r3, [r1, #0]
{
 800f66e:	b430      	push	{r4, r5}
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800f670:	b9d3      	cbnz	r3, 800f6a8 <FMC_SDRAM_Init+0x3c>
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800f672:	6803      	ldr	r3, [r0, #0]
 800f674:	684c      	ldr	r4, [r1, #4]
 800f676:	688a      	ldr	r2, [r1, #8]
 800f678:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800f67c:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800f680:	4323      	orrs	r3, r4
 800f682:	4313      	orrs	r3, r2
 800f684:	e9d1 4203 	ldrd	r4, r2, [r1, #12]
 800f688:	4323      	orrs	r3, r4
 800f68a:	4313      	orrs	r3, r2
 800f68c:	e9d1 4205 	ldrd	r4, r2, [r1, #20]
 800f690:	4323      	orrs	r3, r4
 800f692:	e9d1 5407 	ldrd	r5, r4, [r1, #28]
 800f696:	4313      	orrs	r3, r2
 800f698:	432b      	orrs	r3, r5
 800f69a:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 800f69c:	4323      	orrs	r3, r4
 800f69e:	4313      	orrs	r3, r2
 800f6a0:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 800f6a2:	bc30      	pop	{r4, r5}
 800f6a4:	2000      	movs	r0, #0
 800f6a6:	4770      	bx	lr
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800f6a8:	e9d1 4207 	ldrd	r4, r2, [r1, #28]
 800f6ac:	6803      	ldr	r3, [r0, #0]
 800f6ae:	f423 43f8 	bic.w	r3, r3, #31744	; 0x7c00
 800f6b2:	4323      	orrs	r3, r4
 800f6b4:	6a4c      	ldr	r4, [r1, #36]	; 0x24
 800f6b6:	4313      	orrs	r3, r2
 800f6b8:	4323      	orrs	r3, r4
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800f6ba:	684a      	ldr	r2, [r1, #4]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800f6bc:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800f6be:	6843      	ldr	r3, [r0, #4]
 800f6c0:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800f6c4:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800f6c8:	4313      	orrs	r3, r2
 800f6ca:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 800f6ce:	4323      	orrs	r3, r4
 800f6d0:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800f6d4:	4313      	orrs	r3, r2
 800f6d6:	432b      	orrs	r3, r5
 800f6d8:	698a      	ldr	r2, [r1, #24]
 800f6da:	4323      	orrs	r3, r4
 800f6dc:	4313      	orrs	r3, r2
 800f6de:	6043      	str	r3, [r0, #4]
}
 800f6e0:	bc30      	pop	{r4, r5}
 800f6e2:	2000      	movs	r0, #0
 800f6e4:	4770      	bx	lr
 800f6e6:	bf00      	nop

0800f6e8 <FMC_SDRAM_Timing_Init>:
  * @param  Bank SDRAM bank number
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
 800f6e8:	b430      	push	{r4, r5}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800f6ea:	6883      	ldr	r3, [r0, #8]
  if (Bank == FMC_SDRAM_BANK1)
 800f6ec:	bb02      	cbnz	r2, 800f730 <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800f6ee:	e9d1 2400 	ldrd	r2, r4, [r1]
 800f6f2:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800f6f6:	3c01      	subs	r4, #1
 800f6f8:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 800f6fc:	3a01      	subs	r2, #1
 800f6fe:	4313      	orrs	r3, r2
 800f700:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 800f704:	3c01      	subs	r4, #1
 800f706:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 800f70a:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800f70e:	3a01      	subs	r2, #1
 800f710:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
 800f714:	698a      	ldr	r2, [r1, #24]
 800f716:	1e69      	subs	r1, r5, #1
 800f718:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800f71c:	1e61      	subs	r1, r4, #1
 800f71e:	ea43 5301 	orr.w	r3, r3, r1, lsl #20
 800f722:	3a01      	subs	r2, #1
 800f724:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800f728:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 800f72a:	bc30      	pop	{r4, r5}
 800f72c:	2000      	movs	r0, #0
 800f72e:	4770      	bx	lr
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800f730:	68cc      	ldr	r4, [r1, #12]
 800f732:	694a      	ldr	r2, [r1, #20]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800f734:	688d      	ldr	r5, [r1, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800f736:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 800f73a:	3c01      	subs	r4, #1
 800f73c:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800f740:	ea43 3304 	orr.w	r3, r3, r4, lsl #12
 800f744:	3a01      	subs	r2, #1
 800f746:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
 800f74a:	6083      	str	r3, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800f74c:	e9d1 2400 	ldrd	r2, r4, [r1]
 800f750:	68c3      	ldr	r3, [r0, #12]
 800f752:	3c01      	subs	r4, #1
 800f754:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800f758:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 800f75c:	3a01      	subs	r2, #1
 800f75e:	690c      	ldr	r4, [r1, #16]
 800f760:	4313      	orrs	r3, r2
 800f762:	698a      	ldr	r2, [r1, #24]
 800f764:	1e69      	subs	r1, r5, #1
 800f766:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800f76a:	1e61      	subs	r1, r4, #1
 800f76c:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800f770:	3a01      	subs	r2, #1
 800f772:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800f776:	60c3      	str	r3, [r0, #12]
}
 800f778:	bc30      	pop	{r4, r5}
 800f77a:	2000      	movs	r0, #0
 800f77c:	4770      	bx	lr
 800f77e:	bf00      	nop

0800f780 <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 800f780:	b570      	push	{r4, r5, r6, lr}
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800f782:	680b      	ldr	r3, [r1, #0]
{
 800f784:	4615      	mov	r5, r2
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800f786:	684a      	ldr	r2, [r1, #4]
{
 800f788:	4604      	mov	r4, r0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800f78a:	4313      	orrs	r3, r2
 800f78c:	6900      	ldr	r0, [r0, #16]
 800f78e:	68ca      	ldr	r2, [r1, #12]
 800f790:	0d80      	lsrs	r0, r0, #22
 800f792:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
 800f796:	688a      	ldr	r2, [r1, #8]
 800f798:	0580      	lsls	r0, r0, #22
 800f79a:	4303      	orrs	r3, r0
 800f79c:	3a01      	subs	r2, #1
 800f79e:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800f7a2:	6123      	str	r3, [r4, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Get tick */
  tickstart = HAL_GetTick();
 800f7a4:	f7fb fef6 	bl	800b594 <HAL_GetTick>
 800f7a8:	4606      	mov	r6, r0

  /* wait until command is send */
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800f7aa:	1c6b      	adds	r3, r5, #1
 800f7ac:	d105      	bne.n	800f7ba <FMC_SDRAM_SendCommand+0x3a>
 800f7ae:	69a3      	ldr	r3, [r4, #24]
 800f7b0:	f013 0320 	ands.w	r3, r3, #32
 800f7b4:	d1fb      	bne.n	800f7ae <FMC_SDRAM_SendCommand+0x2e>
      {
        return HAL_TIMEOUT;
      }
    }
  }
  return HAL_OK;
 800f7b6:	4618      	mov	r0, r3
}
 800f7b8:	bd70      	pop	{r4, r5, r6, pc}
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800f7ba:	69a3      	ldr	r3, [r4, #24]
 800f7bc:	f013 0320 	ands.w	r3, r3, #32
 800f7c0:	d0f9      	beq.n	800f7b6 <FMC_SDRAM_SendCommand+0x36>
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 800f7c2:	b125      	cbz	r5, 800f7ce <FMC_SDRAM_SendCommand+0x4e>
 800f7c4:	f7fb fee6 	bl	800b594 <HAL_GetTick>
 800f7c8:	1b80      	subs	r0, r0, r6
 800f7ca:	42a8      	cmp	r0, r5
 800f7cc:	d9ed      	bls.n	800f7aa <FMC_SDRAM_SendCommand+0x2a>
        return HAL_TIMEOUT;
 800f7ce:	2003      	movs	r0, #3
}
 800f7d0:	bd70      	pop	{r4, r5, r6, pc}
 800f7d2:	bf00      	nop

0800f7d4 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800f7d4:	6943      	ldr	r3, [r0, #20]
 800f7d6:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
{
 800f7da:	4602      	mov	r2, r0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800f7dc:	f023 033e 	bic.w	r3, r3, #62	; 0x3e
 800f7e0:	ea43 0141 	orr.w	r1, r3, r1, lsl #1

  return HAL_OK;
}
 800f7e4:	2000      	movs	r0, #0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800f7e6:	6151      	str	r1, [r2, #20]
}
 800f7e8:	4770      	bx	lr
 800f7ea:	bf00      	nop

0800f7ec <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 800f7ec:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 800f7ee:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f7f2:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 800f7f4:	f002 fafe 	bl	8011df4 <xTaskGetSchedulerState>
 800f7f8:	2801      	cmp	r0, #1
 800f7fa:	d100      	bne.n	800f7fe <SysTick_Handler+0x12>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 800f7fc:	bd08      	pop	{r3, pc}
 800f7fe:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 800f802:	f000 bc3f 	b.w	8010084 <xPortSysTickHandler>
 800f806:	bf00      	nop

0800f808 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800f808:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 800f80c:	b92b      	cbnz	r3, 800f81a <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 800f80e:	4b06      	ldr	r3, [pc, #24]	; (800f828 <osKernelInitialize+0x20>)
 800f810:	6818      	ldr	r0, [r3, #0]
 800f812:	b928      	cbnz	r0, 800f820 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 800f814:	2201      	movs	r2, #1
 800f816:	601a      	str	r2, [r3, #0]
      stat = osOK;
 800f818:	4770      	bx	lr
    stat = osErrorISR;
 800f81a:	f06f 0005 	mvn.w	r0, #5
 800f81e:	4770      	bx	lr
    } else {
      stat = osError;
 800f820:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 800f824:	4770      	bx	lr
 800f826:	bf00      	nop
 800f828:	20002cfc 	.word	0x20002cfc

0800f82c <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 800f82c:	b510      	push	{r4, lr}
 800f82e:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800f832:	b974      	cbnz	r4, 800f852 <osKernelStart+0x26>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 800f834:	4b08      	ldr	r3, [pc, #32]	; (800f858 <osKernelStart+0x2c>)
 800f836:	681a      	ldr	r2, [r3, #0]
 800f838:	2a01      	cmp	r2, #1
 800f83a:	d107      	bne.n	800f84c <osKernelStart+0x20>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800f83c:	4907      	ldr	r1, [pc, #28]	; (800f85c <osKernelStart+0x30>)
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 800f83e:	2202      	movs	r2, #2
 800f840:	77cc      	strb	r4, [r1, #31]
 800f842:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 800f844:	f002 f8b0 	bl	80119a8 <vTaskStartScheduler>
      stat = osOK;
 800f848:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 800f84a:	bd10      	pop	{r4, pc}
      stat = osError;
 800f84c:	f04f 30ff 	mov.w	r0, #4294967295
}
 800f850:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800f852:	f06f 0005 	mvn.w	r0, #5
}
 800f856:	bd10      	pop	{r4, pc}
 800f858:	20002cfc 	.word	0x20002cfc
 800f85c:	e000ed00 	.word	0xe000ed00

0800f860 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800f860:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f862:	b087      	sub	sp, #28
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 800f864:	2400      	movs	r4, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800f866:	4615      	mov	r5, r2
  hTask = NULL;
 800f868:	9405      	str	r4, [sp, #20]
 800f86a:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 800f86e:	b9ea      	cbnz	r2, 800f8ac <osThreadNew+0x4c>
 800f870:	b350      	cbz	r0, 800f8c8 <osThreadNew+0x68>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 800f872:	b1f5      	cbz	r5, 800f8b2 <osThreadNew+0x52>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 800f874:	69ab      	ldr	r3, [r5, #24]
 800f876:	bb5b      	cbnz	r3, 800f8d0 <osThreadNew+0x70>
 800f878:	2318      	movs	r3, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800f87a:	686a      	ldr	r2, [r5, #4]
 800f87c:	07d2      	lsls	r2, r2, #31
 800f87e:	d423      	bmi.n	800f8c8 <osThreadNew+0x68>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 800f880:	696e      	ldr	r6, [r5, #20]
 800f882:	b34e      	cbz	r6, 800f8d8 <osThreadNew+0x78>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 800f884:	ea4f 0c96 	mov.w	ip, r6, lsr #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800f888:	68ac      	ldr	r4, [r5, #8]
      if (attr->name != NULL) {
 800f88a:	682f      	ldr	r7, [r5, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800f88c:	b34c      	cbz	r4, 800f8e2 <osThreadNew+0x82>
 800f88e:	68ea      	ldr	r2, [r5, #12]
 800f890:	2aab      	cmp	r2, #171	; 0xab
 800f892:	d919      	bls.n	800f8c8 <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800f894:	692d      	ldr	r5, [r5, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800f896:	b1bd      	cbz	r5, 800f8c8 <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800f898:	b1b6      	cbz	r6, 800f8c8 <osThreadNew+0x68>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 800f89a:	e9cd 5401 	strd	r5, r4, [sp, #4]
 800f89e:	9300      	str	r3, [sp, #0]
 800f8a0:	4662      	mov	r2, ip
 800f8a2:	460b      	mov	r3, r1
 800f8a4:	4639      	mov	r1, r7
 800f8a6:	f001 ffbd 	bl	8011824 <xTaskCreateStatic>
 800f8aa:	4604      	mov	r4, r0
      }
    }
  }

  return ((osThreadId_t)hTask);
}
 800f8ac:	4620      	mov	r0, r4
 800f8ae:	b007      	add	sp, #28
 800f8b0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f8b2:	2280      	movs	r2, #128	; 0x80
    prio  = (UBaseType_t)osPriorityNormal;
 800f8b4:	2318      	movs	r3, #24
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800f8b6:	ac05      	add	r4, sp, #20
 800f8b8:	9300      	str	r3, [sp, #0]
 800f8ba:	9401      	str	r4, [sp, #4]
 800f8bc:	460b      	mov	r3, r1
 800f8be:	4629      	mov	r1, r5
 800f8c0:	f001 ffea 	bl	8011898 <xTaskCreate>
 800f8c4:	2801      	cmp	r0, #1
 800f8c6:	d00a      	beq.n	800f8de <osThreadNew+0x7e>
        return (NULL);
 800f8c8:	2400      	movs	r4, #0
}
 800f8ca:	4620      	mov	r0, r4
 800f8cc:	b007      	add	sp, #28
 800f8ce:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800f8d0:	1e5c      	subs	r4, r3, #1
 800f8d2:	2c37      	cmp	r4, #55	; 0x37
 800f8d4:	d9d1      	bls.n	800f87a <osThreadNew+0x1a>
 800f8d6:	e7f7      	b.n	800f8c8 <osThreadNew+0x68>
    stack = configMINIMAL_STACK_SIZE;
 800f8d8:	f04f 0c80 	mov.w	ip, #128	; 0x80
 800f8dc:	e7d4      	b.n	800f888 <osThreadNew+0x28>
  return ((osThreadId_t)hTask);
 800f8de:	9c05      	ldr	r4, [sp, #20]
 800f8e0:	e7e4      	b.n	800f8ac <osThreadNew+0x4c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 800f8e2:	68ee      	ldr	r6, [r5, #12]
 800f8e4:	2e00      	cmp	r6, #0
 800f8e6:	d1e1      	bne.n	800f8ac <osThreadNew+0x4c>
 800f8e8:	692d      	ldr	r5, [r5, #16]
 800f8ea:	2d00      	cmp	r5, #0
 800f8ec:	d1de      	bne.n	800f8ac <osThreadNew+0x4c>
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800f8ee:	fa1f f28c 	uxth.w	r2, ip
 800f8f2:	463d      	mov	r5, r7
 800f8f4:	e7df      	b.n	800f8b6 <osThreadNew+0x56>
 800f8f6:	bf00      	nop

0800f8f8 <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 800f8f8:	b510      	push	{r4, lr}
 800f8fa:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800f8fe:	b92c      	cbnz	r4, 800f90c <osDelay+0x14>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 800f900:	b900      	cbnz	r0, 800f904 <osDelay+0xc>
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
 800f902:	bd10      	pop	{r4, pc}
      vTaskDelay(ticks);
 800f904:	f001 fffa 	bl	80118fc <vTaskDelay>
    stat = osOK;
 800f908:	4620      	mov	r0, r4
}
 800f90a:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800f90c:	f06f 0005 	mvn.w	r0, #5
}
 800f910:	bd10      	pop	{r4, pc}
 800f912:	bf00      	nop

0800f914 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 800f914:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f916:	b083      	sub	sp, #12
 800f918:	f3ef 8605 	mrs	r6, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800f91c:	b9fe      	cbnz	r6, 800f95e <osSemaphoreNew+0x4a>
 800f91e:	b1f0      	cbz	r0, 800f95e <osSemaphoreNew+0x4a>
 800f920:	4288      	cmp	r0, r1
 800f922:	460f      	mov	r7, r1
 800f924:	d31b      	bcc.n	800f95e <osSemaphoreNew+0x4a>
    mem = -1;

    if (attr != NULL) {
 800f926:	4615      	mov	r5, r2
 800f928:	b192      	cbz	r2, 800f950 <osSemaphoreNew+0x3c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 800f92a:	e9d2 2302 	ldrd	r2, r3, [r2, #8]
 800f92e:	b1d2      	cbz	r2, 800f966 <osSemaphoreNew+0x52>
 800f930:	2b4f      	cmp	r3, #79	; 0x4f
 800f932:	d914      	bls.n	800f95e <osSemaphoreNew+0x4a>
    else {
      mem = 0;
    }

    if (mem != -1) {
      if (max_count == 1U) {
 800f934:	2801      	cmp	r0, #1
 800f936:	d038      	beq.n	800f9aa <osSemaphoreNew+0x96>
        }
      }
      else {
        if (mem == 1) {
          #if (configSUPPORT_STATIC_ALLOCATION == 1)
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 800f938:	f000 fd8a 	bl	8010450 <xQueueCreateCountingSemaphoreStatic>
          #endif
        }
      }
      
      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hSemaphore != NULL) {
 800f93c:	4604      	mov	r4, r0
 800f93e:	b170      	cbz	r0, 800f95e <osSemaphoreNew+0x4a>
        if (attr != NULL) {
          name = attr->name;
 800f940:	682d      	ldr	r5, [r5, #0]
        } else {
          name = NULL;
        }
        vQueueAddToRegistry (hSemaphore, name);
 800f942:	4620      	mov	r0, r4
 800f944:	4629      	mov	r1, r5
 800f946:	f001 fc35 	bl	80111b4 <vQueueAddToRegistry>
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 800f94a:	4620      	mov	r0, r4
 800f94c:	b003      	add	sp, #12
 800f94e:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if (max_count == 1U) {
 800f950:	2801      	cmp	r0, #1
 800f952:	d012      	beq.n	800f97a <osSemaphoreNew+0x66>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800f954:	f000 fddc 	bl	8010510 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800f958:	4604      	mov	r4, r0
 800f95a:	2800      	cmp	r0, #0
 800f95c:	d1f1      	bne.n	800f942 <osSemaphoreNew+0x2e>
            hSemaphore = NULL;
 800f95e:	2400      	movs	r4, #0
}
 800f960:	4620      	mov	r0, r4
 800f962:	b003      	add	sp, #12
 800f964:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 800f966:	2b00      	cmp	r3, #0
 800f968:	d1f9      	bne.n	800f95e <osSemaphoreNew+0x4a>
      if (max_count == 1U) {
 800f96a:	2801      	cmp	r0, #1
 800f96c:	d005      	beq.n	800f97a <osSemaphoreNew+0x66>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800f96e:	f000 fdcf 	bl	8010510 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800f972:	4604      	mov	r4, r0
 800f974:	2800      	cmp	r0, #0
 800f976:	d1e3      	bne.n	800f940 <osSemaphoreNew+0x2c>
 800f978:	e7f1      	b.n	800f95e <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateBinary();
 800f97a:	2203      	movs	r2, #3
 800f97c:	2100      	movs	r1, #0
 800f97e:	2001      	movs	r0, #1
 800f980:	f000 fd24 	bl	80103cc <xQueueGenericCreate>
 800f984:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 800f986:	2c00      	cmp	r4, #0
 800f988:	d0e9      	beq.n	800f95e <osSemaphoreNew+0x4a>
 800f98a:	b917      	cbnz	r7, 800f992 <osSemaphoreNew+0x7e>
        if (attr != NULL) {
 800f98c:	2d00      	cmp	r5, #0
 800f98e:	d1d7      	bne.n	800f940 <osSemaphoreNew+0x2c>
 800f990:	e7d7      	b.n	800f942 <osSemaphoreNew+0x2e>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800f992:	2300      	movs	r3, #0
 800f994:	461a      	mov	r2, r3
 800f996:	4619      	mov	r1, r3
 800f998:	4620      	mov	r0, r4
 800f99a:	f000 fdff 	bl	801059c <xQueueGenericSend>
 800f99e:	2801      	cmp	r0, #1
 800f9a0:	d0f4      	beq.n	800f98c <osSemaphoreNew+0x78>
            vSemaphoreDelete (hSemaphore);
 800f9a2:	4620      	mov	r0, r4
 800f9a4:	f001 fbc0 	bl	8011128 <vQueueDelete>
 800f9a8:	e7d9      	b.n	800f95e <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 800f9aa:	4613      	mov	r3, r2
 800f9ac:	2203      	movs	r2, #3
 800f9ae:	9200      	str	r2, [sp, #0]
 800f9b0:	4631      	mov	r1, r6
 800f9b2:	4632      	mov	r2, r6
 800f9b4:	f000 fc9c 	bl	80102f0 <xQueueGenericCreateStatic>
 800f9b8:	4604      	mov	r4, r0
 800f9ba:	e7e4      	b.n	800f986 <osSemaphoreNew+0x72>

0800f9bc <osSemaphoreAcquire>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800f9bc:	b370      	cbz	r0, 800fa1c <osSemaphoreAcquire+0x60>
osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 800f9be:	b510      	push	{r4, lr}
 800f9c0:	460c      	mov	r4, r1
 800f9c2:	b082      	sub	sp, #8
 800f9c4:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800f9c8:	b1c3      	cbz	r3, 800f9fc <osSemaphoreAcquire+0x40>
    if (timeout != 0U) {
 800f9ca:	bb21      	cbnz	r1, 800fa16 <osSemaphoreAcquire+0x5a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800f9cc:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800f9ce:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800f9d0:	f001 fb28 	bl	8011024 <xQueueReceiveFromISR>
 800f9d4:	2801      	cmp	r0, #1
 800f9d6:	d11a      	bne.n	800fa0e <osSemaphoreAcquire+0x52>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800f9d8:	9b01      	ldr	r3, [sp, #4]
 800f9da:	b913      	cbnz	r3, 800f9e2 <osSemaphoreAcquire+0x26>
  stat = osOK;
 800f9dc:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 800f9de:	b002      	add	sp, #8
 800f9e0:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 800f9e2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f9e6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800f9ea:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800f9ee:	f3bf 8f4f 	dsb	sy
 800f9f2:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800f9f6:	4620      	mov	r0, r4
}
 800f9f8:	b002      	add	sp, #8
 800f9fa:	bd10      	pop	{r4, pc}
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 800f9fc:	f001 f988 	bl	8010d10 <xQueueSemaphoreTake>
 800fa00:	2801      	cmp	r0, #1
 800fa02:	d0eb      	beq.n	800f9dc <osSemaphoreAcquire+0x20>
      if (timeout != 0U) {
 800fa04:	b11c      	cbz	r4, 800fa0e <osSemaphoreAcquire+0x52>
        stat = osErrorTimeout;
 800fa06:	f06f 0001 	mvn.w	r0, #1
}
 800fa0a:	b002      	add	sp, #8
 800fa0c:	bd10      	pop	{r4, pc}
        stat = osErrorResource;
 800fa0e:	f06f 0002 	mvn.w	r0, #2
}
 800fa12:	b002      	add	sp, #8
 800fa14:	bd10      	pop	{r4, pc}
    stat = osErrorParameter;
 800fa16:	f06f 0003 	mvn.w	r0, #3
 800fa1a:	e7e0      	b.n	800f9de <osSemaphoreAcquire+0x22>
 800fa1c:	f06f 0003 	mvn.w	r0, #3
}
 800fa20:	4770      	bx	lr
 800fa22:	bf00      	nop

0800fa24 <osSemaphoreRelease>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800fa24:	b330      	cbz	r0, 800fa74 <osSemaphoreRelease+0x50>
osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 800fa26:	b510      	push	{r4, lr}
 800fa28:	b082      	sub	sp, #8
 800fa2a:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800fa2e:	b1ab      	cbz	r3, 800fa5c <osSemaphoreRelease+0x38>
    yield = pdFALSE;
 800fa30:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800fa32:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 800fa34:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800fa36:	f000 ff95 	bl	8010964 <xQueueGiveFromISR>
 800fa3a:	2801      	cmp	r0, #1
 800fa3c:	d117      	bne.n	800fa6e <osSemaphoreRelease+0x4a>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
 800fa3e:	9b01      	ldr	r3, [sp, #4]
 800fa40:	b193      	cbz	r3, 800fa68 <osSemaphoreRelease+0x44>
 800fa42:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800fa46:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800fa4a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800fa4e:	f3bf 8f4f 	dsb	sy
 800fa52:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800fa56:	4620      	mov	r0, r4
      stat = osErrorResource;
    }
  }

  return (stat);
}
 800fa58:	b002      	add	sp, #8
 800fa5a:	bd10      	pop	{r4, pc}
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800fa5c:	461a      	mov	r2, r3
 800fa5e:	4619      	mov	r1, r3
 800fa60:	f000 fd9c 	bl	801059c <xQueueGenericSend>
 800fa64:	2801      	cmp	r0, #1
 800fa66:	d102      	bne.n	800fa6e <osSemaphoreRelease+0x4a>
  stat = osOK;
 800fa68:	2000      	movs	r0, #0
}
 800fa6a:	b002      	add	sp, #8
 800fa6c:	bd10      	pop	{r4, pc}
      stat = osErrorResource;
 800fa6e:	f06f 0002 	mvn.w	r0, #2
 800fa72:	e7fa      	b.n	800fa6a <osSemaphoreRelease+0x46>
    stat = osErrorParameter;
 800fa74:	f06f 0003 	mvn.w	r0, #3
}
 800fa78:	4770      	bx	lr
 800fa7a:	bf00      	nop

0800fa7c <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 800fa7c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800fa7e:	b085      	sub	sp, #20
 800fa80:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800fa84:	b987      	cbnz	r7, 800faa8 <osMessageQueueNew+0x2c>
 800fa86:	4605      	mov	r5, r0
 800fa88:	b170      	cbz	r0, 800faa8 <osMessageQueueNew+0x2c>
 800fa8a:	b169      	cbz	r1, 800faa8 <osMessageQueueNew+0x2c>
    mem = -1;

    if (attr != NULL) {
 800fa8c:	4614      	mov	r4, r2
 800fa8e:	b1ea      	cbz	r2, 800facc <osMessageQueueNew+0x50>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800fa90:	6893      	ldr	r3, [r2, #8]
 800fa92:	b163      	cbz	r3, 800faae <osMessageQueueNew+0x32>
 800fa94:	68d2      	ldr	r2, [r2, #12]
 800fa96:	2a4f      	cmp	r2, #79	; 0x4f
 800fa98:	d906      	bls.n	800faa8 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800fa9a:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800fa9c:	b122      	cbz	r2, 800faa8 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800fa9e:	6966      	ldr	r6, [r4, #20]
 800faa0:	fb01 f505 	mul.w	r5, r1, r5
 800faa4:	42ae      	cmp	r6, r5
 800faa6:	d21c      	bcs.n	800fae2 <osMessageQueueNew+0x66>
  hQueue = NULL;
 800faa8:	2000      	movs	r0, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 800faaa:	b005      	add	sp, #20
 800faac:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 800faae:	68d3      	ldr	r3, [r2, #12]
 800fab0:	2b00      	cmp	r3, #0
 800fab2:	d1f9      	bne.n	800faa8 <osMessageQueueNew+0x2c>
 800fab4:	6913      	ldr	r3, [r2, #16]
 800fab6:	2b00      	cmp	r3, #0
 800fab8:	d1f6      	bne.n	800faa8 <osMessageQueueNew+0x2c>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 800faba:	6952      	ldr	r2, [r2, #20]
 800fabc:	2a00      	cmp	r2, #0
 800fabe:	d1f3      	bne.n	800faa8 <osMessageQueueNew+0x2c>
          hQueue = xQueueCreate (msg_count, msg_size);
 800fac0:	f000 fc84 	bl	80103cc <xQueueGenericCreate>
    if (hQueue != NULL) {
 800fac4:	2800      	cmp	r0, #0
 800fac6:	d0ef      	beq.n	800faa8 <osMessageQueueNew+0x2c>
        name = attr->name;
 800fac8:	6824      	ldr	r4, [r4, #0]
 800faca:	e003      	b.n	800fad4 <osMessageQueueNew+0x58>
          hQueue = xQueueCreate (msg_count, msg_size);
 800facc:	f000 fc7e 	bl	80103cc <xQueueGenericCreate>
    if (hQueue != NULL) {
 800fad0:	2800      	cmp	r0, #0
 800fad2:	d0e9      	beq.n	800faa8 <osMessageQueueNew+0x2c>
      vQueueAddToRegistry (hQueue, name);
 800fad4:	4621      	mov	r1, r4
 800fad6:	9003      	str	r0, [sp, #12]
 800fad8:	f001 fb6c 	bl	80111b4 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 800fadc:	9803      	ldr	r0, [sp, #12]
}
 800fade:	b005      	add	sp, #20
 800fae0:	bdf0      	pop	{r4, r5, r6, r7, pc}
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 800fae2:	9700      	str	r7, [sp, #0]
 800fae4:	f000 fc04 	bl	80102f0 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 800fae8:	2800      	cmp	r0, #0
 800faea:	d1ed      	bne.n	800fac8 <osMessageQueueNew+0x4c>
 800faec:	e7dc      	b.n	800faa8 <osMessageQueueNew+0x2c>
 800faee:	bf00      	nop

0800faf0 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 800faf0:	b570      	push	{r4, r5, r6, lr}
 800faf2:	461c      	mov	r4, r3
 800faf4:	b082      	sub	sp, #8
 800faf6:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800fafa:	b1be      	cbz	r6, 800fb2c <osMessageQueuePut+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800fafc:	b350      	cbz	r0, 800fb54 <osMessageQueuePut+0x64>
 800fafe:	b349      	cbz	r1, 800fb54 <osMessageQueuePut+0x64>
 800fb00:	bb43      	cbnz	r3, 800fb54 <osMessageQueuePut+0x64>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800fb02:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800fb04:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800fb06:	f000 fec7 	bl	8010898 <xQueueGenericSendFromISR>
 800fb0a:	2801      	cmp	r0, #1
 800fb0c:	d11e      	bne.n	800fb4c <osMessageQueuePut+0x5c>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800fb0e:	9b01      	ldr	r3, [sp, #4]
 800fb10:	b1cb      	cbz	r3, 800fb46 <osMessageQueuePut+0x56>
 800fb12:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800fb16:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800fb1a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800fb1e:	f3bf 8f4f 	dsb	sy
 800fb22:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800fb26:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
 800fb28:	b002      	add	sp, #8
 800fb2a:	bd70      	pop	{r4, r5, r6, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800fb2c:	b190      	cbz	r0, 800fb54 <osMessageQueuePut+0x64>
 800fb2e:	b189      	cbz	r1, 800fb54 <osMessageQueuePut+0x64>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800fb30:	4633      	mov	r3, r6
 800fb32:	4622      	mov	r2, r4
 800fb34:	f000 fd32 	bl	801059c <xQueueGenericSend>
 800fb38:	2801      	cmp	r0, #1
 800fb3a:	d004      	beq.n	800fb46 <osMessageQueuePut+0x56>
        if (timeout != 0U) {
 800fb3c:	b134      	cbz	r4, 800fb4c <osMessageQueuePut+0x5c>
          stat = osErrorTimeout;
 800fb3e:	f06f 0001 	mvn.w	r0, #1
}
 800fb42:	b002      	add	sp, #8
 800fb44:	bd70      	pop	{r4, r5, r6, pc}
  stat = osOK;
 800fb46:	2000      	movs	r0, #0
}
 800fb48:	b002      	add	sp, #8
 800fb4a:	bd70      	pop	{r4, r5, r6, pc}
          stat = osErrorResource;
 800fb4c:	f06f 0002 	mvn.w	r0, #2
}
 800fb50:	b002      	add	sp, #8
 800fb52:	bd70      	pop	{r4, r5, r6, pc}
      stat = osErrorParameter;
 800fb54:	f06f 0003 	mvn.w	r0, #3
 800fb58:	e7e6      	b.n	800fb28 <osMessageQueuePut+0x38>
 800fb5a:	bf00      	nop

0800fb5c <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 800fb5c:	b530      	push	{r4, r5, lr}
 800fb5e:	461c      	mov	r4, r3
 800fb60:	b083      	sub	sp, #12
 800fb62:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800fb66:	b1bb      	cbz	r3, 800fb98 <osMessageQueueGet+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800fb68:	b348      	cbz	r0, 800fbbe <osMessageQueueGet+0x62>
 800fb6a:	b341      	cbz	r1, 800fbbe <osMessageQueueGet+0x62>
 800fb6c:	bb3c      	cbnz	r4, 800fbbe <osMessageQueueGet+0x62>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800fb6e:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800fb70:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800fb72:	f001 fa57 	bl	8011024 <xQueueReceiveFromISR>
 800fb76:	2801      	cmp	r0, #1
 800fb78:	d11d      	bne.n	800fbb6 <osMessageQueueGet+0x5a>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800fb7a:	9b01      	ldr	r3, [sp, #4]
 800fb7c:	b1c3      	cbz	r3, 800fbb0 <osMessageQueueGet+0x54>
 800fb7e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800fb82:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800fb86:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800fb8a:	f3bf 8f4f 	dsb	sy
 800fb8e:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800fb92:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
 800fb94:	b003      	add	sp, #12
 800fb96:	bd30      	pop	{r4, r5, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800fb98:	b188      	cbz	r0, 800fbbe <osMessageQueueGet+0x62>
 800fb9a:	b181      	cbz	r1, 800fbbe <osMessageQueueGet+0x62>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800fb9c:	4622      	mov	r2, r4
 800fb9e:	f000 ff39 	bl	8010a14 <xQueueReceive>
 800fba2:	2801      	cmp	r0, #1
 800fba4:	d004      	beq.n	800fbb0 <osMessageQueueGet+0x54>
        if (timeout != 0U) {
 800fba6:	b134      	cbz	r4, 800fbb6 <osMessageQueueGet+0x5a>
          stat = osErrorTimeout;
 800fba8:	f06f 0001 	mvn.w	r0, #1
}
 800fbac:	b003      	add	sp, #12
 800fbae:	bd30      	pop	{r4, r5, pc}
  stat = osOK;
 800fbb0:	2000      	movs	r0, #0
}
 800fbb2:	b003      	add	sp, #12
 800fbb4:	bd30      	pop	{r4, r5, pc}
          stat = osErrorResource;
 800fbb6:	f06f 0002 	mvn.w	r0, #2
}
 800fbba:	b003      	add	sp, #12
 800fbbc:	bd30      	pop	{r4, r5, pc}
      stat = osErrorParameter;
 800fbbe:	f06f 0003 	mvn.w	r0, #3
 800fbc2:	e7e7      	b.n	800fb94 <osMessageQueueGet+0x38>

0800fbc4 <osMessageQueueGetCount>:
 800fbc4:	b130      	cbz	r0, 800fbd4 <osMessageQueueGetCount+0x10>
 800fbc6:	f3ef 8305 	mrs	r3, IPSR
 800fbca:	b10b      	cbz	r3, 800fbd0 <osMessageQueueGetCount+0xc>
 800fbcc:	f001 ba9e 	b.w	801110c <uxQueueMessagesWaitingFromISR>
 800fbd0:	f001 ba86 	b.w	80110e0 <uxQueueMessagesWaiting>
 800fbd4:	4770      	bx	lr
 800fbd6:	bf00      	nop

0800fbd8 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 800fbd8:	4b04      	ldr	r3, [pc, #16]	; (800fbec <vApplicationGetIdleTaskMemory+0x14>)
 800fbda:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
 800fbdc:	b410      	push	{r4}
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800fbde:	2380      	movs	r3, #128	; 0x80
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 800fbe0:	4c03      	ldr	r4, [pc, #12]	; (800fbf0 <vApplicationGetIdleTaskMemory+0x18>)
 800fbe2:	600c      	str	r4, [r1, #0]
}
 800fbe4:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800fbe8:	6013      	str	r3, [r2, #0]
}
 800fbea:	4770      	bx	lr
 800fbec:	20002c50 	.word	0x20002c50
 800fbf0:	20002a50 	.word	0x20002a50

0800fbf4 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 800fbf4:	4b05      	ldr	r3, [pc, #20]	; (800fc0c <vApplicationGetTimerTaskMemory+0x18>)
 800fbf6:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
 800fbf8:	b410      	push	{r4}
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800fbfa:	f44f 7380 	mov.w	r3, #256	; 0x100
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 800fbfe:	4c04      	ldr	r4, [pc, #16]	; (800fc10 <vApplicationGetTimerTaskMemory+0x1c>)
 800fc00:	600c      	str	r4, [r1, #0]
}
 800fc02:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800fc06:	6013      	str	r3, [r2, #0]
}
 800fc08:	4770      	bx	lr
 800fc0a:	bf00      	nop
 800fc0c:	20003100 	.word	0x20003100
 800fc10:	20002d00 	.word	0x20002d00

0800fc14 <pvPortMalloc>:
static size_t xBlockAllocatedBit = 0;

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
 800fc14:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fc18:	4605      	mov	r5, r0
BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
void *pvReturn = NULL;

	vTaskSuspendAll();
 800fc1a:	f001 ff41 	bl	8011aa0 <vTaskSuspendAll>
	{
		/* If this is the first call to malloc then the heap will require
		initialisation to setup the list of free blocks. */
		if( pxEnd == NULL )
 800fc1e:	4a54      	ldr	r2, [pc, #336]	; (800fd70 <pvPortMalloc+0x15c>)
 800fc20:	6816      	ldr	r6, [r2, #0]
 800fc22:	2e00      	cmp	r6, #0
 800fc24:	d06e      	beq.n	800fd04 <pvPortMalloc+0xf0>

		/* Check the requested block size is not so large that the top bit is
		set.  The top bit of the block size member of the BlockLink_t structure
		is used to determine who owns the block - the application or the
		kernel, so it must be free. */
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800fc26:	4b53      	ldr	r3, [pc, #332]	; (800fd74 <pvPortMalloc+0x160>)
 800fc28:	681f      	ldr	r7, [r3, #0]
 800fc2a:	423d      	tst	r5, r7
 800fc2c:	d12e      	bne.n	800fc8c <pvPortMalloc+0x78>
		{
			/* The wanted size is increased so it can contain a BlockLink_t
			structure in addition to the requested amount of bytes. */
			if( xWantedSize > 0 )
 800fc2e:	b36d      	cbz	r5, 800fc8c <pvPortMalloc+0x78>
			{
				xWantedSize += xHeapStructSize;
 800fc30:	f105 0408 	add.w	r4, r5, #8

				/* Ensure that blocks are always aligned to the required number
				of bytes. */
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 800fc34:	076d      	lsls	r5, r5, #29
				{
					/* Byte alignment required. */
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 800fc36:	bf1c      	itt	ne
 800fc38:	f024 0407 	bicne.w	r4, r4, #7
 800fc3c:	3408      	addne	r4, #8
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}

			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 800fc3e:	b32c      	cbz	r4, 800fc8c <pvPortMalloc+0x78>
 800fc40:	f8df c144 	ldr.w	ip, [pc, #324]	; 800fd88 <pvPortMalloc+0x174>
 800fc44:	f8dc 5000 	ldr.w	r5, [ip]
 800fc48:	42a5      	cmp	r5, r4
 800fc4a:	d31f      	bcc.n	800fc8c <pvPortMalloc+0x78>
			{
				/* Traverse the list from the start	(lowest address) block until
				one	of adequate size is found. */
				pxPreviousBlock = &xStart;
				pxBlock = xStart.pxNextFreeBlock;
 800fc4c:	484a      	ldr	r0, [pc, #296]	; (800fd78 <pvPortMalloc+0x164>)
 800fc4e:	6803      	ldr	r3, [r0, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 800fc50:	e003      	b.n	800fc5a <pvPortMalloc+0x46>
 800fc52:	681a      	ldr	r2, [r3, #0]
 800fc54:	b122      	cbz	r2, 800fc60 <pvPortMalloc+0x4c>
 800fc56:	4618      	mov	r0, r3
 800fc58:	4613      	mov	r3, r2
 800fc5a:	6859      	ldr	r1, [r3, #4]
 800fc5c:	42a1      	cmp	r1, r4
 800fc5e:	d3f8      	bcc.n	800fc52 <pvPortMalloc+0x3e>
					pxBlock = pxBlock->pxNextFreeBlock;
				}

				/* If the end marker was reached then a block of adequate size
				was	not found. */
				if( pxBlock != pxEnd )
 800fc60:	42b3      	cmp	r3, r6
 800fc62:	d013      	beq.n	800fc8c <pvPortMalloc+0x78>
				{
					/* Return the memory space pointed to - jumping over the
					BlockLink_t structure at its start. */
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800fc64:	4698      	mov	r8, r3
					of the list of free blocks. */
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;

					/* If the block is larger than required it can be split into
					two. */
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800fc66:	1b0a      	subs	r2, r1, r4
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800fc68:	f858 eb08 	ldr.w	lr, [r8], #8
 800fc6c:	f8c0 e000 	str.w	lr, [r0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800fc70:	2a10      	cmp	r2, #16
 800fc72:	d929      	bls.n	800fcc8 <pvPortMalloc+0xb4>
					{
						/* This block is to be split into two.  Create a new
						block following the number of bytes requested. The void
						cast is used to prevent byte alignment warnings from the
						compiler. */
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 800fc74:	1919      	adds	r1, r3, r4
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 800fc76:	0748      	lsls	r0, r1, #29
 800fc78:	d00f      	beq.n	800fc9a <pvPortMalloc+0x86>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 800fc7a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fc7e:	f383 8811 	msr	BASEPRI, r3
 800fc82:	f3bf 8f6f 	isb	sy
 800fc86:	f3bf 8f4f 	dsb	sy
 800fc8a:	e7fe      	b.n	800fc8a <pvPortMalloc+0x76>
			mtCOVERAGE_TEST_MARKER();
		}

		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
 800fc8c:	f001 ff10 	bl	8011ab0 <xTaskResumeAll>
 800fc90:	f04f 0800 	mov.w	r8, #0
	}
	#endif

	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
	return pvReturn;
}
 800fc94:	4640      	mov	r0, r8
 800fc96:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 800fc9a:	604a      	str	r2, [r1, #4]
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800fc9c:	4a36      	ldr	r2, [pc, #216]	; (800fd78 <pvPortMalloc+0x164>)
						pxBlock->xBlockSize = xWantedSize;
 800fc9e:	605c      	str	r4, [r3, #4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800fca0:	4614      	mov	r4, r2
 800fca2:	6812      	ldr	r2, [r2, #0]
 800fca4:	4291      	cmp	r1, r2
 800fca6:	d8fb      	bhi.n	800fca0 <pvPortMalloc+0x8c>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800fca8:	6860      	ldr	r0, [r4, #4]
 800fcaa:	eb04 0e00 	add.w	lr, r4, r0
 800fcae:	4571      	cmp	r1, lr
 800fcb0:	d04b      	beq.n	800fd4a <pvPortMalloc+0x136>
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800fcb2:	f8d1 e004 	ldr.w	lr, [r1, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800fcb6:	eb01 000e 	add.w	r0, r1, lr
 800fcba:	4282      	cmp	r2, r0
 800fcbc:	d051      	beq.n	800fd62 <pvPortMalloc+0x14e>

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 800fcbe:	428c      	cmp	r4, r1
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800fcc0:	600a      	str	r2, [r1, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800fcc2:	bf18      	it	ne
 800fcc4:	6021      	strne	r1, [r4, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800fcc6:	6859      	ldr	r1, [r3, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800fcc8:	4a2c      	ldr	r2, [pc, #176]	; (800fd7c <pvPortMalloc+0x168>)
 800fcca:	6810      	ldr	r0, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800fccc:	1a6d      	subs	r5, r5, r1
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800fcce:	4285      	cmp	r5, r0
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 800fcd0:	bf38      	it	cc
 800fcd2:	6015      	strcc	r5, [r2, #0]
					xNumberOfSuccessfulAllocations++;
 800fcd4:	4a2a      	ldr	r2, [pc, #168]	; (800fd80 <pvPortMalloc+0x16c>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800fcd6:	f8cc 5000 	str.w	r5, [ip]
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800fcda:	4339      	orrs	r1, r7
					pxBlock->pxNextFreeBlock = NULL;
 800fcdc:	2000      	movs	r0, #0
 800fcde:	e9c3 0100 	strd	r0, r1, [r3]
					xNumberOfSuccessfulAllocations++;
 800fce2:	6813      	ldr	r3, [r2, #0]
 800fce4:	3301      	adds	r3, #1
 800fce6:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
 800fce8:	f001 fee2 	bl	8011ab0 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 800fcec:	f018 0f07 	tst.w	r8, #7
 800fcf0:	d0d0      	beq.n	800fc94 <pvPortMalloc+0x80>
 800fcf2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fcf6:	f383 8811 	msr	BASEPRI, r3
 800fcfa:	f3bf 8f6f 	isb	sy
 800fcfe:	f3bf 8f4f 	dsb	sy
 800fd02:	e7fe      	b.n	800fd02 <pvPortMalloc+0xee>
	uxAddress = ( size_t ) ucHeap;
 800fd04:	4b1f      	ldr	r3, [pc, #124]	; (800fd84 <pvPortMalloc+0x170>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 800fd06:	075e      	lsls	r6, r3, #29
 800fd08:	d118      	bne.n	800fd3c <pvPortMalloc+0x128>
 800fd0a:	f503 3680 	add.w	r6, r3, #65536	; 0x10000
 800fd0e:	4619      	mov	r1, r3
	uxAddress -= xHeapStructSize;
 800fd10:	3e08      	subs	r6, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800fd12:	f026 0607 	bic.w	r6, r6, #7
	pxEnd = ( void * ) uxAddress;
 800fd16:	6016      	str	r6, [r2, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800fd18:	4a18      	ldr	r2, [pc, #96]	; (800fd7c <pvPortMalloc+0x168>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800fd1a:	4817      	ldr	r0, [pc, #92]	; (800fd78 <pvPortMalloc+0x164>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800fd1c:	4c15      	ldr	r4, [pc, #84]	; (800fd74 <pvPortMalloc+0x160>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800fd1e:	6001      	str	r1, [r0, #0]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 800fd20:	1af3      	subs	r3, r6, r3
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800fd22:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800fd24:	4a18      	ldr	r2, [pc, #96]	; (800fd88 <pvPortMalloc+0x174>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800fd26:	f04f 4700 	mov.w	r7, #2147483648	; 0x80000000
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800fd2a:	6013      	str	r3, [r2, #0]
	xStart.xBlockSize = ( size_t ) 0;
 800fd2c:	2200      	movs	r2, #0
 800fd2e:	6042      	str	r2, [r0, #4]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800fd30:	6027      	str	r7, [r4, #0]
	pxEnd->pxNextFreeBlock = NULL;
 800fd32:	e9c6 2200 	strd	r2, r2, [r6]
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 800fd36:	e9c1 6300 	strd	r6, r3, [r1]
}
 800fd3a:	e776      	b.n	800fc2a <pvPortMalloc+0x16>
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 800fd3c:	1dd9      	adds	r1, r3, #7
	pucAlignedHeap = ( uint8_t * ) uxAddress;
 800fd3e:	f021 0107 	bic.w	r1, r1, #7
 800fd42:	f503 3680 	add.w	r6, r3, #65536	; 0x10000
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800fd46:	460b      	mov	r3, r1
 800fd48:	e7e2      	b.n	800fd10 <pvPortMalloc+0xfc>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800fd4a:	6849      	ldr	r1, [r1, #4]
 800fd4c:	eb00 0e01 	add.w	lr, r0, r1
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800fd50:	eb04 010e 	add.w	r1, r4, lr
 800fd54:	428a      	cmp	r2, r1
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800fd56:	f8c4 e004 	str.w	lr, [r4, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800fd5a:	d001      	beq.n	800fd60 <pvPortMalloc+0x14c>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800fd5c:	6022      	str	r2, [r4, #0]
	if( pxIterator != pxBlockToInsert )
 800fd5e:	e7b2      	b.n	800fcc6 <pvPortMalloc+0xb2>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800fd60:	4621      	mov	r1, r4
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800fd62:	42b2      	cmp	r2, r6
 800fd64:	d0ab      	beq.n	800fcbe <pvPortMalloc+0xaa>
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800fd66:	6850      	ldr	r0, [r2, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800fd68:	6812      	ldr	r2, [r2, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800fd6a:	4470      	add	r0, lr
 800fd6c:	6048      	str	r0, [r1, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800fd6e:	e7a6      	b.n	800fcbe <pvPortMalloc+0xaa>
 800fd70:	200031ac 	.word	0x200031ac
 800fd74:	200131b0 	.word	0x200131b0
 800fd78:	200131c4 	.word	0x200131c4
 800fd7c:	200131b8 	.word	0x200131b8
 800fd80:	200131bc 	.word	0x200131bc
 800fd84:	200031b0 	.word	0x200031b0
 800fd88:	200131b4 	.word	0x200131b4

0800fd8c <vPortFree>:
	if( pv != NULL )
 800fd8c:	b1d0      	cbz	r0, 800fdc4 <vPortFree+0x38>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800fd8e:	4a2c      	ldr	r2, [pc, #176]	; (800fe40 <vPortFree+0xb4>)
 800fd90:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800fd94:	6812      	ldr	r2, [r2, #0]
 800fd96:	4213      	tst	r3, r2
 800fd98:	d00b      	beq.n	800fdb2 <vPortFree+0x26>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 800fd9a:	f850 1c08 	ldr.w	r1, [r0, #-8]
 800fd9e:	b191      	cbz	r1, 800fdc6 <vPortFree+0x3a>
 800fda0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fda4:	f383 8811 	msr	BASEPRI, r3
 800fda8:	f3bf 8f6f 	isb	sy
 800fdac:	f3bf 8f4f 	dsb	sy
 800fdb0:	e7fe      	b.n	800fdb0 <vPortFree+0x24>
 800fdb2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fdb6:	f383 8811 	msr	BASEPRI, r3
 800fdba:	f3bf 8f6f 	isb	sy
 800fdbe:	f3bf 8f4f 	dsb	sy
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800fdc2:	e7fe      	b.n	800fdc2 <vPortFree+0x36>
 800fdc4:	4770      	bx	lr
{
 800fdc6:	b510      	push	{r4, lr}
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800fdc8:	ea23 0302 	bic.w	r3, r3, r2
{
 800fdcc:	b082      	sub	sp, #8
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800fdce:	f840 3c04 	str.w	r3, [r0, #-4]
					xFreeBytesRemaining += pxLink->xBlockSize;
 800fdd2:	4c1c      	ldr	r4, [pc, #112]	; (800fe44 <vPortFree+0xb8>)
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800fdd4:	9001      	str	r0, [sp, #4]
				vTaskSuspendAll();
 800fdd6:	f001 fe63 	bl	8011aa0 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 800fdda:	9801      	ldr	r0, [sp, #4]
 800fddc:	6822      	ldr	r2, [r4, #0]
 800fdde:	f850 1c04 	ldr.w	r1, [r0, #-4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800fde2:	4b19      	ldr	r3, [pc, #100]	; (800fe48 <vPortFree+0xbc>)
					xFreeBytesRemaining += pxLink->xBlockSize;
 800fde4:	440a      	add	r2, r1
		puc -= xHeapStructSize;
 800fde6:	3808      	subs	r0, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 800fde8:	6022      	str	r2, [r4, #0]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800fdea:	461a      	mov	r2, r3
 800fdec:	681b      	ldr	r3, [r3, #0]
 800fdee:	4298      	cmp	r0, r3
 800fdf0:	d8fb      	bhi.n	800fdea <vPortFree+0x5e>
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800fdf2:	6854      	ldr	r4, [r2, #4]
 800fdf4:	eb02 0e04 	add.w	lr, r2, r4
 800fdf8:	4570      	cmp	r0, lr
 800fdfa:	d010      	beq.n	800fe1e <vPortFree+0x92>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800fdfc:	eb00 0c01 	add.w	ip, r0, r1
 800fe00:	4563      	cmp	r3, ip
 800fe02:	d014      	beq.n	800fe2e <vPortFree+0xa2>
	if( pxIterator != pxBlockToInsert )
 800fe04:	4282      	cmp	r2, r0
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800fe06:	6003      	str	r3, [r0, #0]
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800fe08:	bf18      	it	ne
 800fe0a:	6010      	strne	r0, [r2, #0]
					xNumberOfSuccessfulFrees++;
 800fe0c:	4a0f      	ldr	r2, [pc, #60]	; (800fe4c <vPortFree+0xc0>)
 800fe0e:	6813      	ldr	r3, [r2, #0]
 800fe10:	3301      	adds	r3, #1
 800fe12:	6013      	str	r3, [r2, #0]
}
 800fe14:	b002      	add	sp, #8
 800fe16:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				( void ) xTaskResumeAll();
 800fe1a:	f001 be49 	b.w	8011ab0 <xTaskResumeAll>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800fe1e:	4421      	add	r1, r4
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800fe20:	1850      	adds	r0, r2, r1
 800fe22:	4283      	cmp	r3, r0
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800fe24:	6051      	str	r1, [r2, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800fe26:	d001      	beq.n	800fe2c <vPortFree+0xa0>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800fe28:	6013      	str	r3, [r2, #0]
	if( pxIterator != pxBlockToInsert )
 800fe2a:	e7ef      	b.n	800fe0c <vPortFree+0x80>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800fe2c:	4610      	mov	r0, r2
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800fe2e:	4c08      	ldr	r4, [pc, #32]	; (800fe50 <vPortFree+0xc4>)
 800fe30:	6824      	ldr	r4, [r4, #0]
 800fe32:	42a3      	cmp	r3, r4
 800fe34:	d0e6      	beq.n	800fe04 <vPortFree+0x78>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800fe36:	e9d3 3400 	ldrd	r3, r4, [r3]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800fe3a:	4421      	add	r1, r4
 800fe3c:	6041      	str	r1, [r0, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800fe3e:	e7e1      	b.n	800fe04 <vPortFree+0x78>
 800fe40:	200131b0 	.word	0x200131b0
 800fe44:	200131b4 	.word	0x200131b4
 800fe48:	200131c4 	.word	0x200131c4
 800fe4c:	200131c0 	.word	0x200131c0
 800fe50:	200031ac 	.word	0x200031ac

0800fe54 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800fe54:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800fe58:	f04f 31ff 	mov.w	r1, #4294967295
	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800fe5c:	2200      	movs	r2, #0
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800fe5e:	e9c0 3101 	strd	r3, r1, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800fe62:	e9c0 3303 	strd	r3, r3, [r0, #12]
	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800fe66:	6002      	str	r2, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 800fe68:	4770      	bx	lr
 800fe6a:	bf00      	nop

0800fe6c <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 800fe6c:	2300      	movs	r3, #0
 800fe6e:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 800fe70:	4770      	bx	lr
 800fe72:	bf00      	nop

0800fe74 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 800fe74:	6843      	ldr	r3, [r0, #4]

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 800fe76:	689a      	ldr	r2, [r3, #8]
 800fe78:	608a      	str	r2, [r1, #8]
	pxIndex->pxPrevious = pxNewListItem;

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800fe7a:	6802      	ldr	r2, [r0, #0]
{
 800fe7c:	b410      	push	{r4}
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800fe7e:	689c      	ldr	r4, [r3, #8]
	pxNewListItem->pxNext = pxIndex;
 800fe80:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 800fe82:	3201      	adds	r2, #1
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800fe84:	6061      	str	r1, [r4, #4]
	pxIndex->pxPrevious = pxNewListItem;
 800fe86:	6099      	str	r1, [r3, #8]
}
 800fe88:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxNewListItem->pxContainer = pxList;
 800fe8c:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800fe8e:	6002      	str	r2, [r0, #0]
}
 800fe90:	4770      	bx	lr
 800fe92:	bf00      	nop

0800fe94 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 800fe94:	b430      	push	{r4, r5}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 800fe96:	680d      	ldr	r5, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 800fe98:	1c6b      	adds	r3, r5, #1
 800fe9a:	d010      	beq.n	800febe <vListInsert+0x2a>
			4) Using a queue or semaphore before it has been initialised or
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		**********************************************************************/

		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 800fe9c:	f100 0308 	add.w	r3, r0, #8
 800fea0:	461c      	mov	r4, r3
 800fea2:	685b      	ldr	r3, [r3, #4]
 800fea4:	681a      	ldr	r2, [r3, #0]
 800fea6:	42aa      	cmp	r2, r5
 800fea8:	d9fa      	bls.n	800fea0 <vListInsert+0xc>

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800feaa:	6802      	ldr	r2, [r0, #0]
	pxNewListItem->pxNext = pxIterator->pxNext;
 800feac:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 800feae:	3201      	adds	r2, #1
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 800feb0:	6099      	str	r1, [r3, #8]
	pxNewListItem->pxPrevious = pxIterator;
 800feb2:	608c      	str	r4, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 800feb4:	6061      	str	r1, [r4, #4]
	pxNewListItem->pxContainer = pxList;
 800feb6:	6108      	str	r0, [r1, #16]
}
 800feb8:	bc30      	pop	{r4, r5}
	( pxList->uxNumberOfItems )++;
 800feba:	6002      	str	r2, [r0, #0]
}
 800febc:	4770      	bx	lr
		pxIterator = pxList->xListEnd.pxPrevious;
 800febe:	6904      	ldr	r4, [r0, #16]
	pxNewListItem->pxNext = pxIterator->pxNext;
 800fec0:	6863      	ldr	r3, [r4, #4]
 800fec2:	e7f2      	b.n	800feaa <vListInsert+0x16>

0800fec4 <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
 800fec4:	6903      	ldr	r3, [r0, #16]
{
 800fec6:	b410      	push	{r4}

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800fec8:	e9d0 1201 	ldrd	r1, r2, [r0, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 800fecc:	685c      	ldr	r4, [r3, #4]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800fece:	608a      	str	r2, [r1, #8]
	if( pxList->pxIndex == pxItemToRemove )
 800fed0:	4284      	cmp	r4, r0
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 800fed2:	6051      	str	r1, [r2, #4]
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 800fed4:	bf08      	it	eq
 800fed6:	605a      	streq	r2, [r3, #4]
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
	( pxList->uxNumberOfItems )--;
 800fed8:	681a      	ldr	r2, [r3, #0]

	return pxList->uxNumberOfItems;
}
 800feda:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxItemToRemove->pxContainer = NULL;
 800fede:	2100      	movs	r1, #0
	( pxList->uxNumberOfItems )--;
 800fee0:	3a01      	subs	r2, #1
	pxItemToRemove->pxContainer = NULL;
 800fee2:	6101      	str	r1, [r0, #16]
	( pxList->uxNumberOfItems )--;
 800fee4:	601a      	str	r2, [r3, #0]
	return pxList->uxNumberOfItems;
 800fee6:	6818      	ldr	r0, [r3, #0]
}
 800fee8:	4770      	bx	lr
 800feea:	bf00      	nop

0800feec <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 800feec:	4808      	ldr	r0, [pc, #32]	; (800ff10 <prvPortStartFirstTask+0x24>)
 800feee:	6800      	ldr	r0, [r0, #0]
 800fef0:	6800      	ldr	r0, [r0, #0]
 800fef2:	f380 8808 	msr	MSP, r0
 800fef6:	f04f 0000 	mov.w	r0, #0
 800fefa:	f380 8814 	msr	CONTROL, r0
 800fefe:	b662      	cpsie	i
 800ff00:	b661      	cpsie	f
 800ff02:	f3bf 8f4f 	dsb	sy
 800ff06:	f3bf 8f6f 	isb	sy
 800ff0a:	df00      	svc	0
 800ff0c:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 800ff0e:	0000      	.short	0x0000
 800ff10:	e000ed08 	.word	0xe000ed08

0800ff14 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 800ff14:	f8df 000c 	ldr.w	r0, [pc, #12]	; 800ff24 <vPortEnableVFP+0x10>
 800ff18:	6801      	ldr	r1, [r0, #0]
 800ff1a:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800ff1e:	6001      	str	r1, [r0, #0]
 800ff20:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 800ff22:	0000      	.short	0x0000
 800ff24:	e000ed88 	.word	0xe000ed88

0800ff28 <prvTaskExitError>:
	configASSERT( uxCriticalNesting == ~0UL );
 800ff28:	4b0e      	ldr	r3, [pc, #56]	; (800ff64 <prvTaskExitError+0x3c>)
 800ff2a:	681b      	ldr	r3, [r3, #0]
{
 800ff2c:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 800ff2e:	2200      	movs	r2, #0
	configASSERT( uxCriticalNesting == ~0UL );
 800ff30:	3301      	adds	r3, #1
volatile uint32_t ulDummy = 0;
 800ff32:	9201      	str	r2, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 800ff34:	d008      	beq.n	800ff48 <prvTaskExitError+0x20>
 800ff36:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ff3a:	f383 8811 	msr	BASEPRI, r3
 800ff3e:	f3bf 8f6f 	isb	sy
 800ff42:	f3bf 8f4f 	dsb	sy
 800ff46:	e7fe      	b.n	800ff46 <prvTaskExitError+0x1e>
 800ff48:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ff4c:	f383 8811 	msr	BASEPRI, r3
 800ff50:	f3bf 8f6f 	isb	sy
 800ff54:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800ff58:	9b01      	ldr	r3, [sp, #4]
 800ff5a:	2b00      	cmp	r3, #0
 800ff5c:	d0fc      	beq.n	800ff58 <prvTaskExitError+0x30>
}
 800ff5e:	b002      	add	sp, #8
 800ff60:	4770      	bx	lr
 800ff62:	bf00      	nop
 800ff64:	20000088 	.word	0x20000088

0800ff68 <pxPortInitialiseStack>:
{
 800ff68:	b410      	push	{r4}
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800ff6a:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800ff6e:	4c07      	ldr	r4, [pc, #28]	; (800ff8c <pxPortInitialiseStack+0x24>)
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800ff70:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800ff74:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800ff78:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800ff7c:	e940 4103 	strd	r4, r1, [r0, #-12]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800ff80:	e940 3209 	strd	r3, r2, [r0, #-36]	; 0x24
}
 800ff84:	f85d 4b04 	ldr.w	r4, [sp], #4
 800ff88:	3844      	subs	r0, #68	; 0x44
 800ff8a:	4770      	bx	lr
 800ff8c:	0800ff29 	.word	0x0800ff29

0800ff90 <SVC_Handler>:
	__asm volatile (
 800ff90:	4b07      	ldr	r3, [pc, #28]	; (800ffb0 <pxCurrentTCBConst2>)
 800ff92:	6819      	ldr	r1, [r3, #0]
 800ff94:	6808      	ldr	r0, [r1, #0]
 800ff96:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ff9a:	f380 8809 	msr	PSP, r0
 800ff9e:	f3bf 8f6f 	isb	sy
 800ffa2:	f04f 0000 	mov.w	r0, #0
 800ffa6:	f380 8811 	msr	BASEPRI, r0
 800ffaa:	4770      	bx	lr
 800ffac:	f3af 8000 	nop.w

0800ffb0 <pxCurrentTCBConst2>:
 800ffb0:	20013218 	.word	0x20013218

0800ffb4 <vPortEnterCritical>:
 800ffb4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ffb8:	f383 8811 	msr	BASEPRI, r3
 800ffbc:	f3bf 8f6f 	isb	sy
 800ffc0:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 800ffc4:	4a0b      	ldr	r2, [pc, #44]	; (800fff4 <vPortEnterCritical+0x40>)
 800ffc6:	6813      	ldr	r3, [r2, #0]
 800ffc8:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800ffca:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800ffcc:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800ffce:	d000      	beq.n	800ffd2 <vPortEnterCritical+0x1e>
}
 800ffd0:	4770      	bx	lr
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 800ffd2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800ffd6:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 800ffda:	b2db      	uxtb	r3, r3
 800ffdc:	2b00      	cmp	r3, #0
 800ffde:	d0f7      	beq.n	800ffd0 <vPortEnterCritical+0x1c>
 800ffe0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ffe4:	f383 8811 	msr	BASEPRI, r3
 800ffe8:	f3bf 8f6f 	isb	sy
 800ffec:	f3bf 8f4f 	dsb	sy
 800fff0:	e7fe      	b.n	800fff0 <vPortEnterCritical+0x3c>
 800fff2:	bf00      	nop
 800fff4:	20000088 	.word	0x20000088

0800fff8 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 800fff8:	4a08      	ldr	r2, [pc, #32]	; (801001c <vPortExitCritical+0x24>)
 800fffa:	6813      	ldr	r3, [r2, #0]
 800fffc:	b943      	cbnz	r3, 8010010 <vPortExitCritical+0x18>
 800fffe:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010002:	f383 8811 	msr	BASEPRI, r3
 8010006:	f3bf 8f6f 	isb	sy
 801000a:	f3bf 8f4f 	dsb	sy
 801000e:	e7fe      	b.n	801000e <vPortExitCritical+0x16>
	uxCriticalNesting--;
 8010010:	3b01      	subs	r3, #1
 8010012:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 8010014:	b90b      	cbnz	r3, 801001a <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 8010016:	f383 8811 	msr	BASEPRI, r3
}
 801001a:	4770      	bx	lr
 801001c:	20000088 	.word	0x20000088

08010020 <PendSV_Handler>:
	__asm volatile
 8010020:	f3ef 8009 	mrs	r0, PSP
 8010024:	f3bf 8f6f 	isb	sy
 8010028:	4b15      	ldr	r3, [pc, #84]	; (8010080 <pxCurrentTCBConst>)
 801002a:	681a      	ldr	r2, [r3, #0]
 801002c:	f01e 0f10 	tst.w	lr, #16
 8010030:	bf08      	it	eq
 8010032:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 8010036:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801003a:	6010      	str	r0, [r2, #0]
 801003c:	e92d 0009 	stmdb	sp!, {r0, r3}
 8010040:	f04f 0050 	mov.w	r0, #80	; 0x50
 8010044:	f380 8811 	msr	BASEPRI, r0
 8010048:	f3bf 8f4f 	dsb	sy
 801004c:	f3bf 8f6f 	isb	sy
 8010050:	f001 fd54 	bl	8011afc <vTaskSwitchContext>
 8010054:	f04f 0000 	mov.w	r0, #0
 8010058:	f380 8811 	msr	BASEPRI, r0
 801005c:	bc09      	pop	{r0, r3}
 801005e:	6819      	ldr	r1, [r3, #0]
 8010060:	6808      	ldr	r0, [r1, #0]
 8010062:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010066:	f01e 0f10 	tst.w	lr, #16
 801006a:	bf08      	it	eq
 801006c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 8010070:	f380 8809 	msr	PSP, r0
 8010074:	f3bf 8f6f 	isb	sy
 8010078:	4770      	bx	lr
 801007a:	bf00      	nop
 801007c:	f3af 8000 	nop.w

08010080 <pxCurrentTCBConst>:
 8010080:	20013218 	.word	0x20013218

08010084 <xPortSysTickHandler>:
{
 8010084:	b508      	push	{r3, lr}
	__asm volatile
 8010086:	f04f 0350 	mov.w	r3, #80	; 0x50
 801008a:	f383 8811 	msr	BASEPRI, r3
 801008e:	f3bf 8f6f 	isb	sy
 8010092:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 8010096:	f001 fd21 	bl	8011adc <xTaskIncrementTick>
 801009a:	b128      	cbz	r0, 80100a8 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 801009c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80100a0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80100a4:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 80100a8:	2300      	movs	r3, #0
 80100aa:	f383 8811 	msr	BASEPRI, r3
}
 80100ae:	bd08      	pop	{r3, pc}

080100b0 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 80100b0:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 80100b4:	2300      	movs	r3, #0
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 80100b6:	4906      	ldr	r1, [pc, #24]	; (80100d0 <vPortSetupTimerInterrupt+0x20>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 80100b8:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 80100ba:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 80100bc:	680b      	ldr	r3, [r1, #0]
 80100be:	4905      	ldr	r1, [pc, #20]	; (80100d4 <vPortSetupTimerInterrupt+0x24>)
 80100c0:	fba1 1303 	umull	r1, r3, r1, r3
 80100c4:	099b      	lsrs	r3, r3, #6
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 80100c6:	2007      	movs	r0, #7
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 80100c8:	3b01      	subs	r3, #1
 80100ca:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 80100cc:	6110      	str	r0, [r2, #16]
}
 80100ce:	4770      	bx	lr
 80100d0:	2000007c 	.word	0x2000007c
 80100d4:	10624dd3 	.word	0x10624dd3

080100d8 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 80100d8:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80100dc:	4a49      	ldr	r2, [pc, #292]	; (8010204 <xPortStartScheduler+0x12c>)
 80100de:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 80100e2:	4291      	cmp	r1, r2
 80100e4:	d043      	beq.n	801016e <xPortStartScheduler+0x96>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 80100e6:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 80100ea:	4b47      	ldr	r3, [pc, #284]	; (8010208 <xPortStartScheduler+0x130>)
 80100ec:	429a      	cmp	r2, r3
 80100ee:	d035      	beq.n	801015c <xPortStartScheduler+0x84>
{
 80100f0:	b570      	push	{r4, r5, r6, lr}
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 80100f2:	4b46      	ldr	r3, [pc, #280]	; (801020c <xPortStartScheduler+0x134>)
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 80100f4:	4846      	ldr	r0, [pc, #280]	; (8010210 <xPortStartScheduler+0x138>)
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 80100f6:	781a      	ldrb	r2, [r3, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 80100f8:	4c46      	ldr	r4, [pc, #280]	; (8010214 <xPortStartScheduler+0x13c>)
{
 80100fa:	b084      	sub	sp, #16
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 80100fc:	21ff      	movs	r1, #255	; 0xff
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 80100fe:	b2d2      	uxtb	r2, r2
 8010100:	9202      	str	r2, [sp, #8]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 8010102:	7019      	strb	r1, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8010104:	781b      	ldrb	r3, [r3, #0]
 8010106:	b2db      	uxtb	r3, r3
 8010108:	f88d 3007 	strb.w	r3, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 801010c:	f89d 3007 	ldrb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8010110:	f89d 2007 	ldrb.w	r2, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8010114:	f003 0350 	and.w	r3, r3, #80	; 0x50
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 8010118:	2107      	movs	r1, #7
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 801011a:	7003      	strb	r3, [r0, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 801011c:	0610      	lsls	r0, r2, #24
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 801011e:	6021      	str	r1, [r4, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8010120:	bf48      	it	mi
 8010122:	2206      	movmi	r2, #6
 8010124:	d511      	bpl.n	801014a <xPortStartScheduler+0x72>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 8010126:	f89d 3007 	ldrb.w	r3, [sp, #7]
 801012a:	005b      	lsls	r3, r3, #1
 801012c:	b2db      	uxtb	r3, r3
 801012e:	f88d 3007 	strb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8010132:	f89d 1007 	ldrb.w	r1, [sp, #7]
 8010136:	0609      	lsls	r1, r1, #24
 8010138:	4610      	mov	r0, r2
 801013a:	f102 32ff 	add.w	r2, r2, #4294967295
 801013e:	d4f2      	bmi.n	8010126 <xPortStartScheduler+0x4e>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 8010140:	2803      	cmp	r0, #3
 8010142:	6020      	str	r0, [r4, #0]
 8010144:	f88d 3007 	strb.w	r3, [sp, #7]
 8010148:	d01a      	beq.n	8010180 <xPortStartScheduler+0xa8>
	__asm volatile
 801014a:	f04f 0350 	mov.w	r3, #80	; 0x50
 801014e:	f383 8811 	msr	BASEPRI, r3
 8010152:	f3bf 8f6f 	isb	sy
 8010156:	f3bf 8f4f 	dsb	sy
 801015a:	e7fe      	b.n	801015a <xPortStartScheduler+0x82>
 801015c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010160:	f383 8811 	msr	BASEPRI, r3
 8010164:	f3bf 8f6f 	isb	sy
 8010168:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 801016c:	e7fe      	b.n	801016c <xPortStartScheduler+0x94>
 801016e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010172:	f383 8811 	msr	BASEPRI, r3
 8010176:	f3bf 8f6f 	isb	sy
 801017a:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 801017e:	e7fe      	b.n	801017e <xPortStartScheduler+0xa6>
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8010180:	9b02      	ldr	r3, [sp, #8]
 8010182:	4a22      	ldr	r2, [pc, #136]	; (801020c <xPortStartScheduler+0x134>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8010184:	f04f 25e0 	mov.w	r5, #3758153728	; 0xe000e000
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 8010188:	f44f 7140 	mov.w	r1, #768	; 0x300
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 801018c:	b2db      	uxtb	r3, r3
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 801018e:	6021      	str	r1, [r4, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8010190:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8010192:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
	uxCriticalNesting = 0;
 8010196:	4c20      	ldr	r4, [pc, #128]	; (8010218 <xPortStartScheduler+0x140>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8010198:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 801019c:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 80101a0:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
 80101a4:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 80101a8:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	uxCriticalNesting = 0;
 80101ac:	2600      	movs	r6, #0
	vPortSetupTimerInterrupt();
 80101ae:	f7ff ff7f 	bl	80100b0 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 80101b2:	6026      	str	r6, [r4, #0]
	vPortEnableVFP();
 80101b4:	f7ff feae 	bl	800ff14 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 80101b8:	f8d5 3f34 	ldr.w	r3, [r5, #3892]	; 0xf34
 80101bc:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 80101c0:	f8c5 3f34 	str.w	r3, [r5, #3892]	; 0xf34
	prvPortStartFirstTask();
 80101c4:	f7ff fe92 	bl	800feec <prvPortStartFirstTask>
	vTaskSwitchContext();
 80101c8:	f001 fc98 	bl	8011afc <vTaskSwitchContext>
	configASSERT( uxCriticalNesting == ~0UL );
 80101cc:	6823      	ldr	r3, [r4, #0]
volatile uint32_t ulDummy = 0;
 80101ce:	9603      	str	r6, [sp, #12]
	configASSERT( uxCriticalNesting == ~0UL );
 80101d0:	3301      	adds	r3, #1
 80101d2:	d008      	beq.n	80101e6 <xPortStartScheduler+0x10e>
 80101d4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80101d8:	f383 8811 	msr	BASEPRI, r3
 80101dc:	f3bf 8f6f 	isb	sy
 80101e0:	f3bf 8f4f 	dsb	sy
 80101e4:	e7fe      	b.n	80101e4 <xPortStartScheduler+0x10c>
 80101e6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80101ea:	f383 8811 	msr	BASEPRI, r3
 80101ee:	f3bf 8f6f 	isb	sy
 80101f2:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 80101f6:	9b03      	ldr	r3, [sp, #12]
 80101f8:	2b00      	cmp	r3, #0
 80101fa:	d0fc      	beq.n	80101f6 <xPortStartScheduler+0x11e>
}
 80101fc:	2000      	movs	r0, #0
 80101fe:	b004      	add	sp, #16
 8010200:	bd70      	pop	{r4, r5, r6, pc}
 8010202:	bf00      	nop
 8010204:	410fc271 	.word	0x410fc271
 8010208:	410fc270 	.word	0x410fc270
 801020c:	e000e400 	.word	0xe000e400
 8010210:	200131cc 	.word	0x200131cc
 8010214:	200131d0 	.word	0x200131d0
 8010218:	20000088 	.word	0x20000088

0801021c <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 801021c:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 8010220:	2b0f      	cmp	r3, #15
 8010222:	d90e      	bls.n	8010242 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 8010224:	4911      	ldr	r1, [pc, #68]	; (801026c <vPortValidateInterruptPriority+0x50>)
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 8010226:	4a12      	ldr	r2, [pc, #72]	; (8010270 <vPortValidateInterruptPriority+0x54>)
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 8010228:	5c5b      	ldrb	r3, [r3, r1]
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 801022a:	7812      	ldrb	r2, [r2, #0]
 801022c:	429a      	cmp	r2, r3
 801022e:	d908      	bls.n	8010242 <vPortValidateInterruptPriority+0x26>
 8010230:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010234:	f383 8811 	msr	BASEPRI, r3
 8010238:	f3bf 8f6f 	isb	sy
 801023c:	f3bf 8f4f 	dsb	sy
 8010240:	e7fe      	b.n	8010240 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 8010242:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8010246:	4a0b      	ldr	r2, [pc, #44]	; (8010274 <vPortValidateInterruptPriority+0x58>)
 8010248:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 801024c:	6812      	ldr	r2, [r2, #0]
 801024e:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8010252:	4293      	cmp	r3, r2
 8010254:	d908      	bls.n	8010268 <vPortValidateInterruptPriority+0x4c>
 8010256:	f04f 0350 	mov.w	r3, #80	; 0x50
 801025a:	f383 8811 	msr	BASEPRI, r3
 801025e:	f3bf 8f6f 	isb	sy
 8010262:	f3bf 8f4f 	dsb	sy
 8010266:	e7fe      	b.n	8010266 <vPortValidateInterruptPriority+0x4a>
	}
 8010268:	4770      	bx	lr
 801026a:	bf00      	nop
 801026c:	e000e3f0 	.word	0xe000e3f0
 8010270:	200131cc 	.word	0x200131cc
 8010274:	200131d0 	.word	0x200131d0

08010278 <prvCopyDataToQueue>:

#endif /* configUSE_MUTEXES */
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
{
 8010278:	b570      	push	{r4, r5, r6, lr}
 801027a:	4604      	mov	r4, r0

	/* This function is called from a critical section. */

	uxMessagesWaiting = pxQueue->uxMessagesWaiting;

	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 801027c:	6c00      	ldr	r0, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 801027e:	6ba6      	ldr	r6, [r4, #56]	; 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8010280:	b920      	cbnz	r0, 801028c <prvCopyDataToQueue+0x14>
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8010282:	6825      	ldr	r5, [r4, #0]
 8010284:	b34d      	cbz	r5, 80102da <prvCopyDataToQueue+0x62>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8010286:	3601      	adds	r6, #1
 8010288:	63a6      	str	r6, [r4, #56]	; 0x38

	return xReturn;
}
 801028a:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
 801028c:	4615      	mov	r5, r2
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 801028e:	4602      	mov	r2, r0
	else if( xPosition == queueSEND_TO_BACK )
 8010290:	b97d      	cbnz	r5, 80102b2 <prvCopyDataToQueue+0x3a>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8010292:	6860      	ldr	r0, [r4, #4]
 8010294:	f01d fe3b 	bl	802df0e <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8010298:	6863      	ldr	r3, [r4, #4]
 801029a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 801029c:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 801029e:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80102a0:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 80102a2:	4293      	cmp	r3, r2
			pxQueue->pcWriteTo = pxQueue->pcHead;
 80102a4:	bf24      	itt	cs
 80102a6:	6823      	ldrcs	r3, [r4, #0]
 80102a8:	6063      	strcs	r3, [r4, #4]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 80102aa:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
 80102ac:	4628      	mov	r0, r5
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 80102ae:	63a6      	str	r6, [r4, #56]	; 0x38
}
 80102b0:	bd70      	pop	{r4, r5, r6, pc}
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 80102b2:	68e0      	ldr	r0, [r4, #12]
 80102b4:	f01d fe2b 	bl	802df0e <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 80102b8:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80102ba:	68e3      	ldr	r3, [r4, #12]
 80102bc:	4251      	negs	r1, r2
 80102be:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 80102c0:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 80102c2:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 80102c4:	4293      	cmp	r3, r2
 80102c6:	d202      	bcs.n	80102ce <prvCopyDataToQueue+0x56>
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 80102c8:	68a3      	ldr	r3, [r4, #8]
 80102ca:	440b      	add	r3, r1
 80102cc:	60e3      	str	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 80102ce:	2d02      	cmp	r5, #2
 80102d0:	d008      	beq.n	80102e4 <prvCopyDataToQueue+0x6c>
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 80102d2:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
 80102d4:	2000      	movs	r0, #0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 80102d6:	63a6      	str	r6, [r4, #56]	; 0x38
}
 80102d8:	bd70      	pop	{r4, r5, r6, pc}
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 80102da:	68a0      	ldr	r0, [r4, #8]
 80102dc:	f001 fde0 	bl	8011ea0 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 80102e0:	60a5      	str	r5, [r4, #8]
 80102e2:	e7d0      	b.n	8010286 <prvCopyDataToQueue+0xe>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 80102e4:	2e01      	cmp	r6, #1
 80102e6:	bf38      	it	cc
 80102e8:	2601      	movcc	r6, #1
BaseType_t xReturn = pdFALSE;
 80102ea:	2000      	movs	r0, #0
 80102ec:	e7cc      	b.n	8010288 <prvCopyDataToQueue+0x10>
 80102ee:	bf00      	nop

080102f0 <xQueueGenericCreateStatic>:
	{
 80102f0:	b530      	push	{r4, r5, lr}
 80102f2:	b083      	sub	sp, #12
 80102f4:	f89d 4018 	ldrb.w	r4, [sp, #24]
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 80102f8:	b940      	cbnz	r0, 801030c <xQueueGenericCreateStatic+0x1c>
 80102fa:	f04f 0350 	mov.w	r3, #80	; 0x50
 80102fe:	f383 8811 	msr	BASEPRI, r3
 8010302:	f3bf 8f6f 	isb	sy
 8010306:	f3bf 8f4f 	dsb	sy
 801030a:	e7fe      	b.n	801030a <xQueueGenericCreateStatic+0x1a>
		configASSERT( pxStaticQueue != NULL );
 801030c:	461d      	mov	r5, r3
 801030e:	b17b      	cbz	r3, 8010330 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 8010310:	b302      	cbz	r2, 8010354 <xQueueGenericCreateStatic+0x64>
 8010312:	b1b1      	cbz	r1, 8010342 <xQueueGenericCreateStatic+0x52>
			volatile size_t xSize = sizeof( StaticQueue_t );
 8010314:	2350      	movs	r3, #80	; 0x50
 8010316:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 8010318:	9b01      	ldr	r3, [sp, #4]
 801031a:	2b50      	cmp	r3, #80	; 0x50
 801031c:	d023      	beq.n	8010366 <xQueueGenericCreateStatic+0x76>
 801031e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010322:	f383 8811 	msr	BASEPRI, r3
 8010326:	f3bf 8f6f 	isb	sy
 801032a:	f3bf 8f4f 	dsb	sy
 801032e:	e7fe      	b.n	801032e <xQueueGenericCreateStatic+0x3e>
 8010330:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010334:	f383 8811 	msr	BASEPRI, r3
 8010338:	f3bf 8f6f 	isb	sy
 801033c:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 8010340:	e7fe      	b.n	8010340 <xQueueGenericCreateStatic+0x50>
 8010342:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010346:	f383 8811 	msr	BASEPRI, r3
 801034a:	f3bf 8f6f 	isb	sy
 801034e:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 8010352:	e7fe      	b.n	8010352 <xQueueGenericCreateStatic+0x62>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 8010354:	bb89      	cbnz	r1, 80103ba <xQueueGenericCreateStatic+0xca>
			volatile size_t xSize = sizeof( StaticQueue_t );
 8010356:	2250      	movs	r2, #80	; 0x50
 8010358:	9201      	str	r2, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 801035a:	9a01      	ldr	r2, [sp, #4]
 801035c:	2a50      	cmp	r2, #80	; 0x50
 801035e:	d1de      	bne.n	801031e <xQueueGenericCreateStatic+0x2e>
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 8010360:	9a01      	ldr	r2, [sp, #4]
 8010362:	462a      	mov	r2, r5
 8010364:	e000      	b.n	8010368 <xQueueGenericCreateStatic+0x78>
 8010366:	9b01      	ldr	r3, [sp, #4]
	if( uxItemSize == ( UBaseType_t ) 0 )
 8010368:	602a      	str	r2, [r5, #0]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 801036a:	2201      	movs	r2, #1
	pxNewQueue->uxItemSize = uxItemSize;
 801036c:	e9c5 010f 	strd	r0, r1, [r5, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8010370:	f885 2046 	strb.w	r2, [r5, #70]	; 0x46
	taskENTER_CRITICAL();
 8010374:	f7ff fe1e 	bl	800ffb4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010378:	e9d5 120f 	ldrd	r1, r2, [r5, #60]	; 0x3c
 801037c:	6828      	ldr	r0, [r5, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 801037e:	6068      	str	r0, [r5, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010380:	fb02 f101 	mul.w	r1, r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010384:	1a8a      	subs	r2, r1, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010386:	4401      	add	r1, r0
 8010388:	60a9      	str	r1, [r5, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 801038a:	2100      	movs	r1, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 801038c:	4402      	add	r2, r0
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 801038e:	63a9      	str	r1, [r5, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 8010390:	21ff      	movs	r1, #255	; 0xff
 8010392:	f885 1044 	strb.w	r1, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010396:	60ea      	str	r2, [r5, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 8010398:	f885 1045 	strb.w	r1, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 801039c:	f105 0010 	add.w	r0, r5, #16
 80103a0:	f7ff fd58 	bl	800fe54 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 80103a4:	f105 0024 	add.w	r0, r5, #36	; 0x24
 80103a8:	f7ff fd54 	bl	800fe54 <vListInitialise>
	taskEXIT_CRITICAL();
 80103ac:	f7ff fe24 	bl	800fff8 <vPortExitCritical>
	}
 80103b0:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
 80103b2:	f885 404c 	strb.w	r4, [r5, #76]	; 0x4c
	}
 80103b6:	b003      	add	sp, #12
 80103b8:	bd30      	pop	{r4, r5, pc}
 80103ba:	f04f 0350 	mov.w	r3, #80	; 0x50
 80103be:	f383 8811 	msr	BASEPRI, r3
 80103c2:	f3bf 8f6f 	isb	sy
 80103c6:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 80103ca:	e7fe      	b.n	80103ca <xQueueGenericCreateStatic+0xda>

080103cc <xQueueGenericCreate>:
	{
 80103cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 80103ce:	b940      	cbnz	r0, 80103e2 <xQueueGenericCreate+0x16>
 80103d0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80103d4:	f383 8811 	msr	BASEPRI, r3
 80103d8:	f3bf 8f6f 	isb	sy
 80103dc:	f3bf 8f4f 	dsb	sy
 80103e0:	e7fe      	b.n	80103e0 <xQueueGenericCreate+0x14>
 80103e2:	4605      	mov	r5, r0
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80103e4:	fb01 f000 	mul.w	r0, r1, r0
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 80103e8:	3050      	adds	r0, #80	; 0x50
 80103ea:	460e      	mov	r6, r1
 80103ec:	4617      	mov	r7, r2
 80103ee:	f7ff fc11 	bl	800fc14 <pvPortMalloc>
		if( pxNewQueue != NULL )
 80103f2:	4604      	mov	r4, r0
 80103f4:	b340      	cbz	r0, 8010448 <xQueueGenericCreate+0x7c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 80103f6:	2300      	movs	r3, #0
 80103f8:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 80103fc:	b336      	cbz	r6, 801044c <xQueueGenericCreate+0x80>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80103fe:	f100 0350 	add.w	r3, r0, #80	; 0x50
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 8010402:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 8010404:	e9c4 560f 	strd	r5, r6, [r4, #60]	; 0x3c
	taskENTER_CRITICAL();
 8010408:	f7ff fdd4 	bl	800ffb4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 801040c:	e9d4 230f 	ldrd	r2, r3, [r4, #60]	; 0x3c
 8010410:	6821      	ldr	r1, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 8010412:	6061      	str	r1, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010414:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010418:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 801041a:	440a      	add	r2, r1
 801041c:	60a2      	str	r2, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 801041e:	2200      	movs	r2, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010420:	440b      	add	r3, r1
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 8010422:	63a2      	str	r2, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 8010424:	22ff      	movs	r2, #255	; 0xff
 8010426:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 801042a:	60e3      	str	r3, [r4, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 801042c:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 8010430:	f104 0010 	add.w	r0, r4, #16
 8010434:	f7ff fd0e 	bl	800fe54 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 8010438:	f104 0024 	add.w	r0, r4, #36	; 0x24
 801043c:	f7ff fd0a 	bl	800fe54 <vListInitialise>
	taskEXIT_CRITICAL();
 8010440:	f7ff fdda 	bl	800fff8 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 8010444:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 8010448:	4620      	mov	r0, r4
 801044a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801044c:	4603      	mov	r3, r0
 801044e:	e7d8      	b.n	8010402 <xQueueGenericCreate+0x36>

08010450 <xQueueCreateCountingSemaphoreStatic>:
		configASSERT( uxMaxCount != 0 );
 8010450:	b940      	cbnz	r0, 8010464 <xQueueCreateCountingSemaphoreStatic+0x14>
 8010452:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010456:	f383 8811 	msr	BASEPRI, r3
 801045a:	f3bf 8f6f 	isb	sy
 801045e:	f3bf 8f4f 	dsb	sy
 8010462:	e7fe      	b.n	8010462 <xQueueCreateCountingSemaphoreStatic+0x12>
		configASSERT( uxInitialCount <= uxMaxCount );
 8010464:	4288      	cmp	r0, r1
 8010466:	d208      	bcs.n	801047a <xQueueCreateCountingSemaphoreStatic+0x2a>
 8010468:	f04f 0350 	mov.w	r3, #80	; 0x50
 801046c:	f383 8811 	msr	BASEPRI, r3
 8010470:	f3bf 8f6f 	isb	sy
 8010474:	f3bf 8f4f 	dsb	sy
 8010478:	e7fe      	b.n	8010478 <xQueueCreateCountingSemaphoreStatic+0x28>
	{
 801047a:	b530      	push	{r4, r5, lr}
 801047c:	4615      	mov	r5, r2
 801047e:	b085      	sub	sp, #20
		configASSERT( pxStaticQueue != NULL );
 8010480:	2a00      	cmp	r2, #0
 8010482:	d03c      	beq.n	80104fe <xQueueCreateCountingSemaphoreStatic+0xae>
			volatile size_t xSize = sizeof( StaticQueue_t );
 8010484:	2350      	movs	r3, #80	; 0x50
 8010486:	9303      	str	r3, [sp, #12]
			configASSERT( xSize == sizeof( Queue_t ) );
 8010488:	9b03      	ldr	r3, [sp, #12]
 801048a:	2b50      	cmp	r3, #80	; 0x50
 801048c:	d008      	beq.n	80104a0 <xQueueCreateCountingSemaphoreStatic+0x50>
 801048e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010492:	f383 8811 	msr	BASEPRI, r3
 8010496:	f3bf 8f6f 	isb	sy
 801049a:	f3bf 8f4f 	dsb	sy
 801049e:	e7fe      	b.n	801049e <xQueueCreateCountingSemaphoreStatic+0x4e>
	pxNewQueue->uxItemSize = uxItemSize;
 80104a0:	2400      	movs	r4, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 80104a2:	2301      	movs	r3, #1
 80104a4:	f882 3046 	strb.w	r3, [r2, #70]	; 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 80104a8:	602a      	str	r2, [r5, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 80104aa:	e9c2 040f 	strd	r0, r4, [r2, #60]	; 0x3c
 80104ae:	9101      	str	r1, [sp, #4]
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 80104b0:	9b03      	ldr	r3, [sp, #12]
	taskENTER_CRITICAL();
 80104b2:	f7ff fd7f 	bl	800ffb4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80104b6:	e9d5 030f 	ldrd	r0, r3, [r5, #60]	; 0x3c
 80104ba:	682a      	ldr	r2, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 80104bc:	63ac      	str	r4, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80104be:	fb03 f000 	mul.w	r0, r3, r0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80104c2:	1ac3      	subs	r3, r0, r3
 80104c4:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80104c6:	4410      	add	r0, r2
		pxQueue->cRxLock = queueUNLOCKED;
 80104c8:	f04f 0eff 	mov.w	lr, #255	; 0xff
 80104cc:	f885 e044 	strb.w	lr, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80104d0:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 80104d2:	606a      	str	r2, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 80104d4:	f885 e045 	strb.w	lr, [r5, #69]	; 0x45
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80104d8:	60a8      	str	r0, [r5, #8]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 80104da:	f105 0010 	add.w	r0, r5, #16
 80104de:	f7ff fcb9 	bl	800fe54 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 80104e2:	f105 0024 	add.w	r0, r5, #36	; 0x24
 80104e6:	f7ff fcb5 	bl	800fe54 <vListInitialise>
	taskEXIT_CRITICAL();
 80104ea:	f7ff fd85 	bl	800fff8 <vPortExitCritical>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 80104ee:	9901      	ldr	r1, [sp, #4]
 80104f0:	63a9      	str	r1, [r5, #56]	; 0x38
		pxNewQueue->ucQueueType = ucQueueType;
 80104f2:	2302      	movs	r3, #2
	}
 80104f4:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
 80104f6:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
	}
 80104fa:	b005      	add	sp, #20
 80104fc:	bd30      	pop	{r4, r5, pc}
 80104fe:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010502:	f383 8811 	msr	BASEPRI, r3
 8010506:	f3bf 8f6f 	isb	sy
 801050a:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 801050e:	e7fe      	b.n	801050e <xQueueCreateCountingSemaphoreStatic+0xbe>

08010510 <xQueueCreateCountingSemaphore>:
	{
 8010510:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxMaxCount != 0 );
 8010512:	b940      	cbnz	r0, 8010526 <xQueueCreateCountingSemaphore+0x16>
 8010514:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010518:	f383 8811 	msr	BASEPRI, r3
 801051c:	f3bf 8f6f 	isb	sy
 8010520:	f3bf 8f4f 	dsb	sy
 8010524:	e7fe      	b.n	8010524 <xQueueCreateCountingSemaphore+0x14>
		configASSERT( uxInitialCount <= uxMaxCount );
 8010526:	4288      	cmp	r0, r1
 8010528:	460e      	mov	r6, r1
 801052a:	4604      	mov	r4, r0
 801052c:	d208      	bcs.n	8010540 <xQueueCreateCountingSemaphore+0x30>
 801052e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010532:	f383 8811 	msr	BASEPRI, r3
 8010536:	f3bf 8f6f 	isb	sy
 801053a:	f3bf 8f4f 	dsb	sy
 801053e:	e7fe      	b.n	801053e <xQueueCreateCountingSemaphore+0x2e>
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 8010540:	2050      	movs	r0, #80	; 0x50
 8010542:	f7ff fb67 	bl	800fc14 <pvPortMalloc>
		if( pxNewQueue != NULL )
 8010546:	4605      	mov	r5, r0
 8010548:	b330      	cbz	r0, 8010598 <xQueueCreateCountingSemaphore+0x88>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 801054a:	2700      	movs	r7, #0
	pxNewQueue->uxItemSize = uxItemSize;
 801054c:	e9c0 470f 	strd	r4, r7, [r0, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 8010550:	f880 7046 	strb.w	r7, [r0, #70]	; 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 8010554:	6000      	str	r0, [r0, #0]
	taskENTER_CRITICAL();
 8010556:	f7ff fd2d 	bl	800ffb4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 801055a:	e9d5 230f 	ldrd	r2, r3, [r5, #60]	; 0x3c
 801055e:	6829      	ldr	r1, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 8010560:	63af      	str	r7, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010562:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010566:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010568:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 801056a:	440b      	add	r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 801056c:	60aa      	str	r2, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
 801056e:	22ff      	movs	r2, #255	; 0xff
 8010570:	f885 2044 	strb.w	r2, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010574:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 8010576:	6069      	str	r1, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 8010578:	f885 2045 	strb.w	r2, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 801057c:	f105 0010 	add.w	r0, r5, #16
 8010580:	f7ff fc68 	bl	800fe54 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 8010584:	f105 0024 	add.w	r0, r5, #36	; 0x24
 8010588:	f7ff fc64 	bl	800fe54 <vListInitialise>
	taskEXIT_CRITICAL();
 801058c:	f7ff fd34 	bl	800fff8 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 8010590:	2302      	movs	r3, #2
 8010592:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 8010596:	63ae      	str	r6, [r5, #56]	; 0x38
	}
 8010598:	4628      	mov	r0, r5
 801059a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0801059c <xQueueGenericSend>:
{
 801059c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80105a0:	b085      	sub	sp, #20
 80105a2:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
 80105a4:	2800      	cmp	r0, #0
 80105a6:	f000 80a4 	beq.w	80106f2 <xQueueGenericSend+0x156>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80105aa:	4688      	mov	r8, r1
 80105ac:	461f      	mov	r7, r3
 80105ae:	4604      	mov	r4, r0
 80105b0:	2900      	cmp	r1, #0
 80105b2:	f000 8091 	beq.w	80106d8 <xQueueGenericSend+0x13c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 80105b6:	2f02      	cmp	r7, #2
 80105b8:	d10b      	bne.n	80105d2 <xQueueGenericSend+0x36>
 80105ba:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80105bc:	2b01      	cmp	r3, #1
 80105be:	d008      	beq.n	80105d2 <xQueueGenericSend+0x36>
 80105c0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80105c4:	f383 8811 	msr	BASEPRI, r3
 80105c8:	f3bf 8f6f 	isb	sy
 80105cc:	f3bf 8f4f 	dsb	sy
 80105d0:	e7fe      	b.n	80105d0 <xQueueGenericSend+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 80105d2:	f001 fc0f 	bl	8011df4 <xTaskGetSchedulerState>
 80105d6:	4605      	mov	r5, r0
 80105d8:	2800      	cmp	r0, #0
 80105da:	f000 8093 	beq.w	8010704 <xQueueGenericSend+0x168>
 80105de:	2500      	movs	r5, #0
			{
				/* Tasks that are removed from the event list will get added to
				the pending ready list as the scheduler is still suspended. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80105e0:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
 80105e4:	f7ff fce6 	bl	800ffb4 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 80105e8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80105ea:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80105ec:	429a      	cmp	r2, r3
 80105ee:	f0c0 80ef 	bcc.w	80107d0 <xQueueGenericSend+0x234>
 80105f2:	2f02      	cmp	r7, #2
 80105f4:	f000 80ec 	beq.w	80107d0 <xQueueGenericSend+0x234>
				if( xTicksToWait == ( TickType_t ) 0 )
 80105f8:	9801      	ldr	r0, [sp, #4]
 80105fa:	2800      	cmp	r0, #0
 80105fc:	f000 8101 	beq.w	8010802 <xQueueGenericSend+0x266>
				else if( xEntryTimeSet == pdFALSE )
 8010600:	2d00      	cmp	r5, #0
 8010602:	f000 80e1 	beq.w	80107c8 <xQueueGenericSend+0x22c>
		taskEXIT_CRITICAL();
 8010606:	f7ff fcf7 	bl	800fff8 <vPortExitCritical>
		vTaskSuspendAll();
 801060a:	f001 fa49 	bl	8011aa0 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 801060e:	f7ff fcd1 	bl	800ffb4 <vPortEnterCritical>
 8010612:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8010616:	2bff      	cmp	r3, #255	; 0xff
 8010618:	bf04      	itt	eq
 801061a:	2300      	moveq	r3, #0
 801061c:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 8010620:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8010624:	2bff      	cmp	r3, #255	; 0xff
 8010626:	bf04      	itt	eq
 8010628:	2300      	moveq	r3, #0
 801062a:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 801062e:	f7ff fce3 	bl	800fff8 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8010632:	a901      	add	r1, sp, #4
 8010634:	a802      	add	r0, sp, #8
 8010636:	f001 fb8f 	bl	8011d58 <xTaskCheckForTimeOut>
 801063a:	2800      	cmp	r0, #0
 801063c:	f040 80e6 	bne.w	801080c <xQueueGenericSend+0x270>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8010640:	f7ff fcb8 	bl	800ffb4 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 8010644:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8010646:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8010648:	429a      	cmp	r2, r3
 801064a:	d068      	beq.n	801071e <xQueueGenericSend+0x182>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 801064c:	f7ff fcd4 	bl	800fff8 <vPortExitCritical>
	taskENTER_CRITICAL();
 8010650:	f7ff fcb0 	bl	800ffb4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8010654:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
 8010658:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 801065a:	2d00      	cmp	r5, #0
 801065c:	dc04      	bgt.n	8010668 <xQueueGenericSend+0xcc>
 801065e:	e011      	b.n	8010684 <xQueueGenericSend+0xe8>
			--cTxLock;
 8010660:	1e6a      	subs	r2, r5, #1
 8010662:	b2d3      	uxtb	r3, r2
 8010664:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010666:	b16b      	cbz	r3, 8010684 <xQueueGenericSend+0xe8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010668:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 801066a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 801066c:	b153      	cbz	r3, 8010684 <xQueueGenericSend+0xe8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 801066e:	f001 fb1f 	bl	8011cb0 <xTaskRemoveFromEventList>
 8010672:	2800      	cmp	r0, #0
 8010674:	d0f4      	beq.n	8010660 <xQueueGenericSend+0xc4>
						vTaskMissedYield();
 8010676:	f001 fbb7 	bl	8011de8 <vTaskMissedYield>
			--cTxLock;
 801067a:	1e6a      	subs	r2, r5, #1
 801067c:	b2d3      	uxtb	r3, r2
 801067e:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010680:	2b00      	cmp	r3, #0
 8010682:	d1f1      	bne.n	8010668 <xQueueGenericSend+0xcc>
		pxQueue->cTxLock = queueUNLOCKED;
 8010684:	23ff      	movs	r3, #255	; 0xff
 8010686:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 801068a:	f7ff fcb5 	bl	800fff8 <vPortExitCritical>
	taskENTER_CRITICAL();
 801068e:	f7ff fc91 	bl	800ffb4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8010692:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 8010696:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010698:	2d00      	cmp	r5, #0
 801069a:	dd14      	ble.n	80106c6 <xQueueGenericSend+0x12a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 801069c:	f104 0910 	add.w	r9, r4, #16
 80106a0:	e003      	b.n	80106aa <xQueueGenericSend+0x10e>
				--cRxLock;
 80106a2:	1e6a      	subs	r2, r5, #1
 80106a4:	b2d3      	uxtb	r3, r2
 80106a6:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 80106a8:	b16b      	cbz	r3, 80106c6 <xQueueGenericSend+0x12a>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80106aa:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80106ac:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80106ae:	b153      	cbz	r3, 80106c6 <xQueueGenericSend+0x12a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80106b0:	f001 fafe 	bl	8011cb0 <xTaskRemoveFromEventList>
 80106b4:	2800      	cmp	r0, #0
 80106b6:	d0f4      	beq.n	80106a2 <xQueueGenericSend+0x106>
					vTaskMissedYield();
 80106b8:	f001 fb96 	bl	8011de8 <vTaskMissedYield>
				--cRxLock;
 80106bc:	1e6a      	subs	r2, r5, #1
 80106be:	b2d3      	uxtb	r3, r2
 80106c0:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 80106c2:	2b00      	cmp	r3, #0
 80106c4:	d1f1      	bne.n	80106aa <xQueueGenericSend+0x10e>
		pxQueue->cRxLock = queueUNLOCKED;
 80106c6:	23ff      	movs	r3, #255	; 0xff
 80106c8:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 80106cc:	f7ff fc94 	bl	800fff8 <vPortExitCritical>
				( void ) xTaskResumeAll();
 80106d0:	f001 f9ee 	bl	8011ab0 <xTaskResumeAll>
 80106d4:	2501      	movs	r5, #1
 80106d6:	e785      	b.n	80105e4 <xQueueGenericSend+0x48>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80106d8:	6c03      	ldr	r3, [r0, #64]	; 0x40
 80106da:	2b00      	cmp	r3, #0
 80106dc:	f43f af6b 	beq.w	80105b6 <xQueueGenericSend+0x1a>
 80106e0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80106e4:	f383 8811 	msr	BASEPRI, r3
 80106e8:	f3bf 8f6f 	isb	sy
 80106ec:	f3bf 8f4f 	dsb	sy
 80106f0:	e7fe      	b.n	80106f0 <xQueueGenericSend+0x154>
 80106f2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80106f6:	f383 8811 	msr	BASEPRI, r3
 80106fa:	f3bf 8f6f 	isb	sy
 80106fe:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 8010702:	e7fe      	b.n	8010702 <xQueueGenericSend+0x166>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8010704:	9b01      	ldr	r3, [sp, #4]
 8010706:	2b00      	cmp	r3, #0
 8010708:	f43f af6a 	beq.w	80105e0 <xQueueGenericSend+0x44>
 801070c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010710:	f383 8811 	msr	BASEPRI, r3
 8010714:	f3bf 8f6f 	isb	sy
 8010718:	f3bf 8f4f 	dsb	sy
 801071c:	e7fe      	b.n	801071c <xQueueGenericSend+0x180>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 801071e:	f104 0910 	add.w	r9, r4, #16
	taskEXIT_CRITICAL();
 8010722:	f7ff fc69 	bl	800fff8 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 8010726:	9901      	ldr	r1, [sp, #4]
 8010728:	4648      	mov	r0, r9
 801072a:	f001 fa33 	bl	8011b94 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 801072e:	f7ff fc41 	bl	800ffb4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8010732:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8010736:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010738:	2d00      	cmp	r5, #0
 801073a:	dc04      	bgt.n	8010746 <xQueueGenericSend+0x1aa>
 801073c:	e011      	b.n	8010762 <xQueueGenericSend+0x1c6>
			--cTxLock;
 801073e:	1e6b      	subs	r3, r5, #1
 8010740:	b2da      	uxtb	r2, r3
 8010742:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010744:	b16a      	cbz	r2, 8010762 <xQueueGenericSend+0x1c6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010746:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010748:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 801074a:	b153      	cbz	r3, 8010762 <xQueueGenericSend+0x1c6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 801074c:	f001 fab0 	bl	8011cb0 <xTaskRemoveFromEventList>
 8010750:	2800      	cmp	r0, #0
 8010752:	d0f4      	beq.n	801073e <xQueueGenericSend+0x1a2>
						vTaskMissedYield();
 8010754:	f001 fb48 	bl	8011de8 <vTaskMissedYield>
			--cTxLock;
 8010758:	1e6b      	subs	r3, r5, #1
 801075a:	b2da      	uxtb	r2, r3
 801075c:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 801075e:	2a00      	cmp	r2, #0
 8010760:	d1f1      	bne.n	8010746 <xQueueGenericSend+0x1aa>
		pxQueue->cTxLock = queueUNLOCKED;
 8010762:	23ff      	movs	r3, #255	; 0xff
 8010764:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8010768:	f7ff fc46 	bl	800fff8 <vPortExitCritical>
	taskENTER_CRITICAL();
 801076c:	f7ff fc22 	bl	800ffb4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8010770:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8010774:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010776:	2d00      	cmp	r5, #0
 8010778:	dc04      	bgt.n	8010784 <xQueueGenericSend+0x1e8>
 801077a:	e011      	b.n	80107a0 <xQueueGenericSend+0x204>
				--cRxLock;
 801077c:	1e6b      	subs	r3, r5, #1
 801077e:	b2da      	uxtb	r2, r3
 8010780:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010782:	b16a      	cbz	r2, 80107a0 <xQueueGenericSend+0x204>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010784:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010786:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010788:	b153      	cbz	r3, 80107a0 <xQueueGenericSend+0x204>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 801078a:	f001 fa91 	bl	8011cb0 <xTaskRemoveFromEventList>
 801078e:	2800      	cmp	r0, #0
 8010790:	d0f4      	beq.n	801077c <xQueueGenericSend+0x1e0>
					vTaskMissedYield();
 8010792:	f001 fb29 	bl	8011de8 <vTaskMissedYield>
				--cRxLock;
 8010796:	1e6b      	subs	r3, r5, #1
 8010798:	b2da      	uxtb	r2, r3
 801079a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 801079c:	2a00      	cmp	r2, #0
 801079e:	d1f1      	bne.n	8010784 <xQueueGenericSend+0x1e8>
		pxQueue->cRxLock = queueUNLOCKED;
 80107a0:	23ff      	movs	r3, #255	; 0xff
 80107a2:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 80107a6:	f7ff fc27 	bl	800fff8 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 80107aa:	f001 f981 	bl	8011ab0 <xTaskResumeAll>
 80107ae:	2800      	cmp	r0, #0
 80107b0:	d190      	bne.n	80106d4 <xQueueGenericSend+0x138>
					portYIELD_WITHIN_API();
 80107b2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80107b6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80107ba:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80107be:	f3bf 8f4f 	dsb	sy
 80107c2:	f3bf 8f6f 	isb	sy
 80107c6:	e785      	b.n	80106d4 <xQueueGenericSend+0x138>
					vTaskInternalSetTimeOutState( &xTimeOut );
 80107c8:	a802      	add	r0, sp, #8
 80107ca:	f001 fab9 	bl	8011d40 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 80107ce:	e71a      	b.n	8010606 <xQueueGenericSend+0x6a>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 80107d0:	463a      	mov	r2, r7
 80107d2:	4641      	mov	r1, r8
 80107d4:	4620      	mov	r0, r4
 80107d6:	f7ff fd4f 	bl	8010278 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80107da:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80107dc:	2b00      	cmp	r3, #0
 80107de:	d153      	bne.n	8010888 <xQueueGenericSend+0x2ec>
					else if( xYieldRequired != pdFALSE )
 80107e0:	b148      	cbz	r0, 80107f6 <xQueueGenericSend+0x25a>
						queueYIELD_IF_USING_PREEMPTION();
 80107e2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80107e6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80107ea:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80107ee:	f3bf 8f4f 	dsb	sy
 80107f2:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 80107f6:	f7ff fbff 	bl	800fff8 <vPortExitCritical>
				return pdPASS;
 80107fa:	2001      	movs	r0, #1
}
 80107fc:	b005      	add	sp, #20
 80107fe:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010802:	9000      	str	r0, [sp, #0]
					taskEXIT_CRITICAL();
 8010804:	f7ff fbf8 	bl	800fff8 <vPortExitCritical>
					return errQUEUE_FULL;
 8010808:	9800      	ldr	r0, [sp, #0]
 801080a:	e7f7      	b.n	80107fc <xQueueGenericSend+0x260>
	taskENTER_CRITICAL();
 801080c:	f7ff fbd2 	bl	800ffb4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8010810:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8010814:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010816:	2d00      	cmp	r5, #0
 8010818:	dd10      	ble.n	801083c <xQueueGenericSend+0x2a0>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 801081a:	f104 0624 	add.w	r6, r4, #36	; 0x24
 801081e:	e003      	b.n	8010828 <xQueueGenericSend+0x28c>
			--cTxLock;
 8010820:	1e6b      	subs	r3, r5, #1
 8010822:	b2da      	uxtb	r2, r3
 8010824:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010826:	b14a      	cbz	r2, 801083c <xQueueGenericSend+0x2a0>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010828:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 801082a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 801082c:	b133      	cbz	r3, 801083c <xQueueGenericSend+0x2a0>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 801082e:	f001 fa3f 	bl	8011cb0 <xTaskRemoveFromEventList>
 8010832:	2800      	cmp	r0, #0
 8010834:	d0f4      	beq.n	8010820 <xQueueGenericSend+0x284>
						vTaskMissedYield();
 8010836:	f001 fad7 	bl	8011de8 <vTaskMissedYield>
 801083a:	e7f1      	b.n	8010820 <xQueueGenericSend+0x284>
		pxQueue->cTxLock = queueUNLOCKED;
 801083c:	23ff      	movs	r3, #255	; 0xff
 801083e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8010842:	f7ff fbd9 	bl	800fff8 <vPortExitCritical>
	taskENTER_CRITICAL();
 8010846:	f7ff fbb5 	bl	800ffb4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 801084a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 801084e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010850:	2d00      	cmp	r5, #0
 8010852:	dd10      	ble.n	8010876 <xQueueGenericSend+0x2da>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010854:	f104 0610 	add.w	r6, r4, #16
 8010858:	e003      	b.n	8010862 <xQueueGenericSend+0x2c6>
				--cRxLock;
 801085a:	1e6b      	subs	r3, r5, #1
 801085c:	b2da      	uxtb	r2, r3
 801085e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010860:	b14a      	cbz	r2, 8010876 <xQueueGenericSend+0x2da>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010862:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010864:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010866:	b133      	cbz	r3, 8010876 <xQueueGenericSend+0x2da>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010868:	f001 fa22 	bl	8011cb0 <xTaskRemoveFromEventList>
 801086c:	2800      	cmp	r0, #0
 801086e:	d0f4      	beq.n	801085a <xQueueGenericSend+0x2be>
					vTaskMissedYield();
 8010870:	f001 faba 	bl	8011de8 <vTaskMissedYield>
 8010874:	e7f1      	b.n	801085a <xQueueGenericSend+0x2be>
		pxQueue->cRxLock = queueUNLOCKED;
 8010876:	23ff      	movs	r3, #255	; 0xff
 8010878:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 801087c:	f7ff fbbc 	bl	800fff8 <vPortExitCritical>
			( void ) xTaskResumeAll();
 8010880:	f001 f916 	bl	8011ab0 <xTaskResumeAll>
			return errQUEUE_FULL;
 8010884:	2000      	movs	r0, #0
 8010886:	e7b9      	b.n	80107fc <xQueueGenericSend+0x260>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010888:	f104 0024 	add.w	r0, r4, #36	; 0x24
 801088c:	f001 fa10 	bl	8011cb0 <xTaskRemoveFromEventList>
 8010890:	2800      	cmp	r0, #0
 8010892:	d0b0      	beq.n	80107f6 <xQueueGenericSend+0x25a>
 8010894:	e7a5      	b.n	80107e2 <xQueueGenericSend+0x246>
 8010896:	bf00      	nop

08010898 <xQueueGenericSendFromISR>:
	configASSERT( pxQueue );
 8010898:	2800      	cmp	r0, #0
 801089a:	d04b      	beq.n	8010934 <xQueueGenericSendFromISR+0x9c>
{
 801089c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80108a0:	460e      	mov	r6, r1
 80108a2:	4617      	mov	r7, r2
 80108a4:	461d      	mov	r5, r3
 80108a6:	4604      	mov	r4, r0
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80108a8:	b321      	cbz	r1, 80108f4 <xQueueGenericSendFromISR+0x5c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 80108aa:	2d02      	cmp	r5, #2
 80108ac:	d10b      	bne.n	80108c6 <xQueueGenericSendFromISR+0x2e>
 80108ae:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80108b0:	2b01      	cmp	r3, #1
 80108b2:	d008      	beq.n	80108c6 <xQueueGenericSendFromISR+0x2e>
 80108b4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80108b8:	f383 8811 	msr	BASEPRI, r3
 80108bc:	f3bf 8f6f 	isb	sy
 80108c0:	f3bf 8f4f 	dsb	sy
 80108c4:	e7fe      	b.n	80108c4 <xQueueGenericSendFromISR+0x2c>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 80108c6:	f7ff fca9 	bl	801021c <vPortValidateInterruptPriority>
	__asm volatile
 80108ca:	f3ef 8811 	mrs	r8, BASEPRI
 80108ce:	f04f 0350 	mov.w	r3, #80	; 0x50
 80108d2:	f383 8811 	msr	BASEPRI, r3
 80108d6:	f3bf 8f6f 	isb	sy
 80108da:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 80108de:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80108e0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80108e2:	429a      	cmp	r2, r3
 80108e4:	d312      	bcc.n	801090c <xQueueGenericSendFromISR+0x74>
 80108e6:	2d02      	cmp	r5, #2
 80108e8:	d010      	beq.n	801090c <xQueueGenericSendFromISR+0x74>
			xReturn = errQUEUE_FULL;
 80108ea:	2000      	movs	r0, #0
	__asm volatile
 80108ec:	f388 8811 	msr	BASEPRI, r8
}
 80108f0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80108f4:	6c03      	ldr	r3, [r0, #64]	; 0x40
 80108f6:	2b00      	cmp	r3, #0
 80108f8:	d0d7      	beq.n	80108aa <xQueueGenericSendFromISR+0x12>
	__asm volatile
 80108fa:	f04f 0350 	mov.w	r3, #80	; 0x50
 80108fe:	f383 8811 	msr	BASEPRI, r3
 8010902:	f3bf 8f6f 	isb	sy
 8010906:	f3bf 8f4f 	dsb	sy
 801090a:	e7fe      	b.n	801090a <xQueueGenericSendFromISR+0x72>
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 801090c:	462a      	mov	r2, r5
			const int8_t cTxLock = pxQueue->cTxLock;
 801090e:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 8010912:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8010914:	4631      	mov	r1, r6
			const int8_t cTxLock = pxQueue->cTxLock;
 8010916:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8010918:	4620      	mov	r0, r4
 801091a:	f7ff fcad 	bl	8010278 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 801091e:	1c6b      	adds	r3, r5, #1
 8010920:	d011      	beq.n	8010946 <xQueueGenericSendFromISR+0xae>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8010922:	1c6b      	adds	r3, r5, #1
 8010924:	b25b      	sxtb	r3, r3
 8010926:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
			xReturn = pdPASS;
 801092a:	2001      	movs	r0, #1
	__asm volatile
 801092c:	f388 8811 	msr	BASEPRI, r8
}
 8010930:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	__asm volatile
 8010934:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010938:	f383 8811 	msr	BASEPRI, r3
 801093c:	f3bf 8f6f 	isb	sy
 8010940:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 8010944:	e7fe      	b.n	8010944 <xQueueGenericSendFromISR+0xac>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010946:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8010948:	2b00      	cmp	r3, #0
 801094a:	d0ee      	beq.n	801092a <xQueueGenericSendFromISR+0x92>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 801094c:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8010950:	f001 f9ae 	bl	8011cb0 <xTaskRemoveFromEventList>
 8010954:	2800      	cmp	r0, #0
 8010956:	d0e8      	beq.n	801092a <xQueueGenericSendFromISR+0x92>
							if( pxHigherPriorityTaskWoken != NULL )
 8010958:	2f00      	cmp	r7, #0
 801095a:	d0e6      	beq.n	801092a <xQueueGenericSendFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
 801095c:	2001      	movs	r0, #1
 801095e:	6038      	str	r0, [r7, #0]
 8010960:	e7c4      	b.n	80108ec <xQueueGenericSendFromISR+0x54>
 8010962:	bf00      	nop

08010964 <xQueueGiveFromISR>:
	configASSERT( pxQueue );
 8010964:	b370      	cbz	r0, 80109c4 <xQueueGiveFromISR+0x60>
	configASSERT( pxQueue->uxItemSize == 0 );
 8010966:	6c03      	ldr	r3, [r0, #64]	; 0x40
{
 8010968:	b570      	push	{r4, r5, r6, lr}
 801096a:	4606      	mov	r6, r0
	configASSERT( pxQueue->uxItemSize == 0 );
 801096c:	b143      	cbz	r3, 8010980 <xQueueGiveFromISR+0x1c>
 801096e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010972:	f383 8811 	msr	BASEPRI, r3
 8010976:	f3bf 8f6f 	isb	sy
 801097a:	f3bf 8f4f 	dsb	sy
 801097e:	e7fe      	b.n	801097e <xQueueGiveFromISR+0x1a>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 8010980:	6803      	ldr	r3, [r0, #0]
 8010982:	460c      	mov	r4, r1
 8010984:	b33b      	cbz	r3, 80109d6 <xQueueGiveFromISR+0x72>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8010986:	f7ff fc49 	bl	801021c <vPortValidateInterruptPriority>
	__asm volatile
 801098a:	f3ef 8511 	mrs	r5, BASEPRI
 801098e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010992:	f383 8811 	msr	BASEPRI, r3
 8010996:	f3bf 8f6f 	isb	sy
 801099a:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 801099e:	6bb3      	ldr	r3, [r6, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 80109a0:	6bf2      	ldr	r2, [r6, #60]	; 0x3c
 80109a2:	429a      	cmp	r2, r3
 80109a4:	d923      	bls.n	80109ee <xQueueGiveFromISR+0x8a>
			const int8_t cTxLock = pxQueue->cTxLock;
 80109a6:	f896 2045 	ldrb.w	r2, [r6, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 80109aa:	3301      	adds	r3, #1
			if( cTxLock == queueUNLOCKED )
 80109ac:	2aff      	cmp	r2, #255	; 0xff
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 80109ae:	63b3      	str	r3, [r6, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 80109b0:	b253      	sxtb	r3, r2
			if( cTxLock == queueUNLOCKED )
 80109b2:	d020      	beq.n	80109f6 <xQueueGiveFromISR+0x92>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 80109b4:	3301      	adds	r3, #1
 80109b6:	b25b      	sxtb	r3, r3
 80109b8:	f886 3045 	strb.w	r3, [r6, #69]	; 0x45
			xReturn = pdPASS;
 80109bc:	2001      	movs	r0, #1
	__asm volatile
 80109be:	f385 8811 	msr	BASEPRI, r5
}
 80109c2:	bd70      	pop	{r4, r5, r6, pc}
	__asm volatile
 80109c4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80109c8:	f383 8811 	msr	BASEPRI, r3
 80109cc:	f3bf 8f6f 	isb	sy
 80109d0:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 80109d4:	e7fe      	b.n	80109d4 <xQueueGiveFromISR+0x70>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 80109d6:	6883      	ldr	r3, [r0, #8]
 80109d8:	2b00      	cmp	r3, #0
 80109da:	d0d4      	beq.n	8010986 <xQueueGiveFromISR+0x22>
 80109dc:	f04f 0350 	mov.w	r3, #80	; 0x50
 80109e0:	f383 8811 	msr	BASEPRI, r3
 80109e4:	f3bf 8f6f 	isb	sy
 80109e8:	f3bf 8f4f 	dsb	sy
 80109ec:	e7fe      	b.n	80109ec <xQueueGiveFromISR+0x88>
			xReturn = errQUEUE_FULL;
 80109ee:	2000      	movs	r0, #0
	__asm volatile
 80109f0:	f385 8811 	msr	BASEPRI, r5
}
 80109f4:	bd70      	pop	{r4, r5, r6, pc}
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80109f6:	6a73      	ldr	r3, [r6, #36]	; 0x24
 80109f8:	2b00      	cmp	r3, #0
 80109fa:	d0df      	beq.n	80109bc <xQueueGiveFromISR+0x58>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80109fc:	f106 0024 	add.w	r0, r6, #36	; 0x24
 8010a00:	f001 f956 	bl	8011cb0 <xTaskRemoveFromEventList>
 8010a04:	2800      	cmp	r0, #0
 8010a06:	d0d9      	beq.n	80109bc <xQueueGiveFromISR+0x58>
							if( pxHigherPriorityTaskWoken != NULL )
 8010a08:	2c00      	cmp	r4, #0
 8010a0a:	d0d7      	beq.n	80109bc <xQueueGiveFromISR+0x58>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8010a0c:	2001      	movs	r0, #1
 8010a0e:	6020      	str	r0, [r4, #0]
 8010a10:	e7ee      	b.n	80109f0 <xQueueGiveFromISR+0x8c>
 8010a12:	bf00      	nop

08010a14 <xQueueReceive>:
{
 8010a14:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010a18:	b085      	sub	sp, #20
 8010a1a:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 8010a1c:	2800      	cmp	r0, #0
 8010a1e:	f000 815c 	beq.w	8010cda <xQueueReceive+0x2c6>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8010a22:	460f      	mov	r7, r1
 8010a24:	4604      	mov	r4, r0
 8010a26:	2900      	cmp	r1, #0
 8010a28:	d079      	beq.n	8010b1e <xQueueReceive+0x10a>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8010a2a:	f001 f9e3 	bl	8011df4 <xTaskGetSchedulerState>
 8010a2e:	2800      	cmp	r0, #0
 8010a30:	f000 8081 	beq.w	8010b36 <xQueueReceive+0x122>
		taskENTER_CRITICAL();
 8010a34:	f7ff fabe 	bl	800ffb4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8010a38:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8010a3a:	2d00      	cmp	r5, #0
 8010a3c:	f040 8138 	bne.w	8010cb0 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
 8010a40:	9b01      	ldr	r3, [sp, #4]
 8010a42:	2b00      	cmp	r3, #0
 8010a44:	f000 80d5 	beq.w	8010bf2 <xQueueReceive+0x1de>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8010a48:	a802      	add	r0, sp, #8
 8010a4a:	f001 f979 	bl	8011d40 <vTaskInternalSetTimeOutState>
		prvLockQueue( pxQueue );
 8010a4e:	46a8      	mov	r8, r5
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010a50:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskEXIT_CRITICAL();
 8010a54:	f7ff fad0 	bl	800fff8 <vPortExitCritical>
		vTaskSuspendAll();
 8010a58:	f001 f822 	bl	8011aa0 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8010a5c:	f7ff faaa 	bl	800ffb4 <vPortEnterCritical>
 8010a60:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8010a64:	2bff      	cmp	r3, #255	; 0xff
 8010a66:	bf08      	it	eq
 8010a68:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 8010a6c:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8010a70:	2bff      	cmp	r3, #255	; 0xff
 8010a72:	bf08      	it	eq
 8010a74:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 8010a78:	f7ff fabe 	bl	800fff8 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8010a7c:	a901      	add	r1, sp, #4
 8010a7e:	a802      	add	r0, sp, #8
 8010a80:	f001 f96a 	bl	8011d58 <xTaskCheckForTimeOut>
 8010a84:	2800      	cmp	r0, #0
 8010a86:	d163      	bne.n	8010b50 <xQueueReceive+0x13c>
	taskENTER_CRITICAL();
 8010a88:	f7ff fa94 	bl	800ffb4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 8010a8c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8010a8e:	2b00      	cmp	r3, #0
 8010a90:	f000 80b5 	beq.w	8010bfe <xQueueReceive+0x1ea>
	taskEXIT_CRITICAL();
 8010a94:	f7ff fab0 	bl	800fff8 <vPortExitCritical>
	taskENTER_CRITICAL();
 8010a98:	f7ff fa8c 	bl	800ffb4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8010a9c:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8010aa0:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010aa2:	2d00      	cmp	r5, #0
 8010aa4:	dc04      	bgt.n	8010ab0 <xQueueReceive+0x9c>
 8010aa6:	e011      	b.n	8010acc <xQueueReceive+0xb8>
			--cTxLock;
 8010aa8:	1e6b      	subs	r3, r5, #1
 8010aaa:	b2da      	uxtb	r2, r3
 8010aac:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010aae:	b16a      	cbz	r2, 8010acc <xQueueReceive+0xb8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010ab0:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010ab2:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010ab4:	b153      	cbz	r3, 8010acc <xQueueReceive+0xb8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010ab6:	f001 f8fb 	bl	8011cb0 <xTaskRemoveFromEventList>
 8010aba:	2800      	cmp	r0, #0
 8010abc:	d0f4      	beq.n	8010aa8 <xQueueReceive+0x94>
						vTaskMissedYield();
 8010abe:	f001 f993 	bl	8011de8 <vTaskMissedYield>
			--cTxLock;
 8010ac2:	1e6b      	subs	r3, r5, #1
 8010ac4:	b2da      	uxtb	r2, r3
 8010ac6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010ac8:	2a00      	cmp	r2, #0
 8010aca:	d1f1      	bne.n	8010ab0 <xQueueReceive+0x9c>
		pxQueue->cTxLock = queueUNLOCKED;
 8010acc:	23ff      	movs	r3, #255	; 0xff
 8010ace:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8010ad2:	f7ff fa91 	bl	800fff8 <vPortExitCritical>
	taskENTER_CRITICAL();
 8010ad6:	f7ff fa6d 	bl	800ffb4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8010ada:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8010ade:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010ae0:	2d00      	cmp	r5, #0
 8010ae2:	dd14      	ble.n	8010b0e <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010ae4:	f104 0910 	add.w	r9, r4, #16
 8010ae8:	e003      	b.n	8010af2 <xQueueReceive+0xde>
				--cRxLock;
 8010aea:	1e6b      	subs	r3, r5, #1
 8010aec:	b2da      	uxtb	r2, r3
 8010aee:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010af0:	b16a      	cbz	r2, 8010b0e <xQueueReceive+0xfa>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010af2:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010af4:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010af6:	b153      	cbz	r3, 8010b0e <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010af8:	f001 f8da 	bl	8011cb0 <xTaskRemoveFromEventList>
 8010afc:	2800      	cmp	r0, #0
 8010afe:	d0f4      	beq.n	8010aea <xQueueReceive+0xd6>
					vTaskMissedYield();
 8010b00:	f001 f972 	bl	8011de8 <vTaskMissedYield>
				--cRxLock;
 8010b04:	1e6b      	subs	r3, r5, #1
 8010b06:	b2da      	uxtb	r2, r3
 8010b08:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010b0a:	2a00      	cmp	r2, #0
 8010b0c:	d1f1      	bne.n	8010af2 <xQueueReceive+0xde>
		pxQueue->cRxLock = queueUNLOCKED;
 8010b0e:	23ff      	movs	r3, #255	; 0xff
 8010b10:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 8010b14:	f7ff fa70 	bl	800fff8 <vPortExitCritical>
				( void ) xTaskResumeAll();
 8010b18:	f000 ffca 	bl	8011ab0 <xTaskResumeAll>
		taskENTER_CRITICAL();
 8010b1c:	e060      	b.n	8010be0 <xQueueReceive+0x1cc>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8010b1e:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8010b20:	2b00      	cmp	r3, #0
 8010b22:	d082      	beq.n	8010a2a <xQueueReceive+0x16>
	__asm volatile
 8010b24:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010b28:	f383 8811 	msr	BASEPRI, r3
 8010b2c:	f3bf 8f6f 	isb	sy
 8010b30:	f3bf 8f4f 	dsb	sy
 8010b34:	e7fe      	b.n	8010b34 <xQueueReceive+0x120>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8010b36:	9b01      	ldr	r3, [sp, #4]
 8010b38:	2b00      	cmp	r3, #0
 8010b3a:	f43f af7b 	beq.w	8010a34 <xQueueReceive+0x20>
 8010b3e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010b42:	f383 8811 	msr	BASEPRI, r3
 8010b46:	f3bf 8f6f 	isb	sy
 8010b4a:	f3bf 8f4f 	dsb	sy
 8010b4e:	e7fe      	b.n	8010b4e <xQueueReceive+0x13a>
	taskENTER_CRITICAL();
 8010b50:	f7ff fa30 	bl	800ffb4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8010b54:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8010b58:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010b5a:	2d00      	cmp	r5, #0
 8010b5c:	dc04      	bgt.n	8010b68 <xQueueReceive+0x154>
 8010b5e:	e011      	b.n	8010b84 <xQueueReceive+0x170>
			--cTxLock;
 8010b60:	1e6b      	subs	r3, r5, #1
 8010b62:	b2da      	uxtb	r2, r3
 8010b64:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010b66:	b16a      	cbz	r2, 8010b84 <xQueueReceive+0x170>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010b68:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010b6a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010b6c:	b153      	cbz	r3, 8010b84 <xQueueReceive+0x170>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010b6e:	f001 f89f 	bl	8011cb0 <xTaskRemoveFromEventList>
 8010b72:	2800      	cmp	r0, #0
 8010b74:	d0f4      	beq.n	8010b60 <xQueueReceive+0x14c>
						vTaskMissedYield();
 8010b76:	f001 f937 	bl	8011de8 <vTaskMissedYield>
			--cTxLock;
 8010b7a:	1e6b      	subs	r3, r5, #1
 8010b7c:	b2da      	uxtb	r2, r3
 8010b7e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010b80:	2a00      	cmp	r2, #0
 8010b82:	d1f1      	bne.n	8010b68 <xQueueReceive+0x154>
		pxQueue->cTxLock = queueUNLOCKED;
 8010b84:	23ff      	movs	r3, #255	; 0xff
 8010b86:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8010b8a:	f7ff fa35 	bl	800fff8 <vPortExitCritical>
	taskENTER_CRITICAL();
 8010b8e:	f7ff fa11 	bl	800ffb4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8010b92:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8010b96:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010b98:	2d00      	cmp	r5, #0
 8010b9a:	dd14      	ble.n	8010bc6 <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010b9c:	f104 0910 	add.w	r9, r4, #16
 8010ba0:	e003      	b.n	8010baa <xQueueReceive+0x196>
				--cRxLock;
 8010ba2:	1e6b      	subs	r3, r5, #1
 8010ba4:	b2da      	uxtb	r2, r3
 8010ba6:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010ba8:	b16a      	cbz	r2, 8010bc6 <xQueueReceive+0x1b2>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010baa:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010bac:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010bae:	b153      	cbz	r3, 8010bc6 <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010bb0:	f001 f87e 	bl	8011cb0 <xTaskRemoveFromEventList>
 8010bb4:	2800      	cmp	r0, #0
 8010bb6:	d0f4      	beq.n	8010ba2 <xQueueReceive+0x18e>
					vTaskMissedYield();
 8010bb8:	f001 f916 	bl	8011de8 <vTaskMissedYield>
				--cRxLock;
 8010bbc:	1e6b      	subs	r3, r5, #1
 8010bbe:	b2da      	uxtb	r2, r3
 8010bc0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010bc2:	2a00      	cmp	r2, #0
 8010bc4:	d1f1      	bne.n	8010baa <xQueueReceive+0x196>
		pxQueue->cRxLock = queueUNLOCKED;
 8010bc6:	23ff      	movs	r3, #255	; 0xff
 8010bc8:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 8010bcc:	f7ff fa14 	bl	800fff8 <vPortExitCritical>
			( void ) xTaskResumeAll();
 8010bd0:	f000 ff6e 	bl	8011ab0 <xTaskResumeAll>
	taskENTER_CRITICAL();
 8010bd4:	f7ff f9ee 	bl	800ffb4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 8010bd8:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8010bda:	b153      	cbz	r3, 8010bf2 <xQueueReceive+0x1de>
	taskEXIT_CRITICAL();
 8010bdc:	f7ff fa0c 	bl	800fff8 <vPortExitCritical>
		taskENTER_CRITICAL();
 8010be0:	f7ff f9e8 	bl	800ffb4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8010be4:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8010be6:	2d00      	cmp	r5, #0
 8010be8:	d162      	bne.n	8010cb0 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
 8010bea:	9b01      	ldr	r3, [sp, #4]
 8010bec:	2b00      	cmp	r3, #0
 8010bee:	f47f af31 	bne.w	8010a54 <xQueueReceive+0x40>
					taskEXIT_CRITICAL();
 8010bf2:	f7ff fa01 	bl	800fff8 <vPortExitCritical>
					return errQUEUE_EMPTY;
 8010bf6:	2000      	movs	r0, #0
}
 8010bf8:	b005      	add	sp, #20
 8010bfa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 8010bfe:	f7ff f9fb 	bl	800fff8 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8010c02:	9901      	ldr	r1, [sp, #4]
 8010c04:	4630      	mov	r0, r6
 8010c06:	f000 ffc5 	bl	8011b94 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 8010c0a:	f7ff f9d3 	bl	800ffb4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8010c0e:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8010c12:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010c14:	2d00      	cmp	r5, #0
 8010c16:	dc04      	bgt.n	8010c22 <xQueueReceive+0x20e>
 8010c18:	e011      	b.n	8010c3e <xQueueReceive+0x22a>
			--cTxLock;
 8010c1a:	1e6b      	subs	r3, r5, #1
 8010c1c:	b2da      	uxtb	r2, r3
 8010c1e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010c20:	b16a      	cbz	r2, 8010c3e <xQueueReceive+0x22a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010c22:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010c24:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010c26:	b153      	cbz	r3, 8010c3e <xQueueReceive+0x22a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010c28:	f001 f842 	bl	8011cb0 <xTaskRemoveFromEventList>
 8010c2c:	2800      	cmp	r0, #0
 8010c2e:	d0f4      	beq.n	8010c1a <xQueueReceive+0x206>
						vTaskMissedYield();
 8010c30:	f001 f8da 	bl	8011de8 <vTaskMissedYield>
			--cTxLock;
 8010c34:	1e6b      	subs	r3, r5, #1
 8010c36:	b2da      	uxtb	r2, r3
 8010c38:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010c3a:	2a00      	cmp	r2, #0
 8010c3c:	d1f1      	bne.n	8010c22 <xQueueReceive+0x20e>
		pxQueue->cTxLock = queueUNLOCKED;
 8010c3e:	23ff      	movs	r3, #255	; 0xff
 8010c40:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8010c44:	f7ff f9d8 	bl	800fff8 <vPortExitCritical>
	taskENTER_CRITICAL();
 8010c48:	f7ff f9b4 	bl	800ffb4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8010c4c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8010c50:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010c52:	2d00      	cmp	r5, #0
 8010c54:	dd14      	ble.n	8010c80 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010c56:	f104 0910 	add.w	r9, r4, #16
 8010c5a:	e003      	b.n	8010c64 <xQueueReceive+0x250>
				--cRxLock;
 8010c5c:	1e6b      	subs	r3, r5, #1
 8010c5e:	b2da      	uxtb	r2, r3
 8010c60:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010c62:	b16a      	cbz	r2, 8010c80 <xQueueReceive+0x26c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010c64:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010c66:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010c68:	b153      	cbz	r3, 8010c80 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010c6a:	f001 f821 	bl	8011cb0 <xTaskRemoveFromEventList>
 8010c6e:	2800      	cmp	r0, #0
 8010c70:	d0f4      	beq.n	8010c5c <xQueueReceive+0x248>
					vTaskMissedYield();
 8010c72:	f001 f8b9 	bl	8011de8 <vTaskMissedYield>
				--cRxLock;
 8010c76:	1e6b      	subs	r3, r5, #1
 8010c78:	b2da      	uxtb	r2, r3
 8010c7a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010c7c:	2a00      	cmp	r2, #0
 8010c7e:	d1f1      	bne.n	8010c64 <xQueueReceive+0x250>
		pxQueue->cRxLock = queueUNLOCKED;
 8010c80:	23ff      	movs	r3, #255	; 0xff
 8010c82:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 8010c86:	f7ff f9b7 	bl	800fff8 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 8010c8a:	f000 ff11 	bl	8011ab0 <xTaskResumeAll>
 8010c8e:	2800      	cmp	r0, #0
 8010c90:	d1a6      	bne.n	8010be0 <xQueueReceive+0x1cc>
					portYIELD_WITHIN_API();
 8010c92:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8010c96:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8010c9a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8010c9e:	f3bf 8f4f 	dsb	sy
 8010ca2:	f3bf 8f6f 	isb	sy
		taskENTER_CRITICAL();
 8010ca6:	f7ff f985 	bl	800ffb4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8010caa:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8010cac:	2d00      	cmp	r5, #0
 8010cae:	d09c      	beq.n	8010bea <xQueueReceive+0x1d6>
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8010cb0:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8010cb2:	b152      	cbz	r2, 8010cca <xQueueReceive+0x2b6>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8010cb4:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8010cb6:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8010cb8:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8010cba:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8010cbc:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8010cbe:	bf24      	itt	cs
 8010cc0:	6821      	ldrcs	r1, [r4, #0]
 8010cc2:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8010cc4:	4638      	mov	r0, r7
 8010cc6:	f01d f922 	bl	802df0e <memcpy>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8010cca:	3d01      	subs	r5, #1
 8010ccc:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010cce:	6923      	ldr	r3, [r4, #16]
 8010cd0:	b963      	cbnz	r3, 8010cec <xQueueReceive+0x2d8>
				taskEXIT_CRITICAL();
 8010cd2:	f7ff f991 	bl	800fff8 <vPortExitCritical>
				return pdPASS;
 8010cd6:	2001      	movs	r0, #1
 8010cd8:	e78e      	b.n	8010bf8 <xQueueReceive+0x1e4>
 8010cda:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010cde:	f383 8811 	msr	BASEPRI, r3
 8010ce2:	f3bf 8f6f 	isb	sy
 8010ce6:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 8010cea:	e7fe      	b.n	8010cea <xQueueReceive+0x2d6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010cec:	f104 0010 	add.w	r0, r4, #16
 8010cf0:	f000 ffde 	bl	8011cb0 <xTaskRemoveFromEventList>
 8010cf4:	2800      	cmp	r0, #0
 8010cf6:	d0ec      	beq.n	8010cd2 <xQueueReceive+0x2be>
						queueYIELD_IF_USING_PREEMPTION();
 8010cf8:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8010cfc:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8010d00:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8010d04:	f3bf 8f4f 	dsb	sy
 8010d08:	f3bf 8f6f 	isb	sy
 8010d0c:	e7e1      	b.n	8010cd2 <xQueueReceive+0x2be>
 8010d0e:	bf00      	nop

08010d10 <xQueueSemaphoreTake>:
{
 8010d10:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010d14:	b084      	sub	sp, #16
 8010d16:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 8010d18:	2800      	cmp	r0, #0
 8010d1a:	d05c      	beq.n	8010dd6 <xQueueSemaphoreTake+0xc6>
	configASSERT( pxQueue->uxItemSize == 0 );
 8010d1c:	6c07      	ldr	r7, [r0, #64]	; 0x40
 8010d1e:	4604      	mov	r4, r0
 8010d20:	b147      	cbz	r7, 8010d34 <xQueueSemaphoreTake+0x24>
 8010d22:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010d26:	f383 8811 	msr	BASEPRI, r3
 8010d2a:	f3bf 8f6f 	isb	sy
 8010d2e:	f3bf 8f4f 	dsb	sy
 8010d32:	e7fe      	b.n	8010d32 <xQueueSemaphoreTake+0x22>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8010d34:	f001 f85e 	bl	8011df4 <xTaskGetSchedulerState>
 8010d38:	4605      	mov	r5, r0
 8010d3a:	2800      	cmp	r0, #0
 8010d3c:	d054      	beq.n	8010de8 <xQueueSemaphoreTake+0xd8>
 8010d3e:	463d      	mov	r5, r7
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010d40:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
 8010d44:	f7ff f936 	bl	800ffb4 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 8010d48:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 8010d4a:	2b00      	cmp	r3, #0
 8010d4c:	f040 8148 	bne.w	8010fe0 <xQueueSemaphoreTake+0x2d0>
				if( xTicksToWait == ( TickType_t ) 0 )
 8010d50:	9b01      	ldr	r3, [sp, #4]
 8010d52:	2b00      	cmp	r3, #0
 8010d54:	f000 813a 	beq.w	8010fcc <xQueueSemaphoreTake+0x2bc>
				else if( xEntryTimeSet == pdFALSE )
 8010d58:	2d00      	cmp	r5, #0
 8010d5a:	f000 809d 	beq.w	8010e98 <xQueueSemaphoreTake+0x188>
		taskEXIT_CRITICAL();
 8010d5e:	f7ff f94b 	bl	800fff8 <vPortExitCritical>
		vTaskSuspendAll();
 8010d62:	f000 fe9d 	bl	8011aa0 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8010d66:	f7ff f925 	bl	800ffb4 <vPortEnterCritical>
 8010d6a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8010d6e:	2bff      	cmp	r3, #255	; 0xff
 8010d70:	bf04      	itt	eq
 8010d72:	2300      	moveq	r3, #0
 8010d74:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 8010d78:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8010d7c:	2bff      	cmp	r3, #255	; 0xff
 8010d7e:	bf04      	itt	eq
 8010d80:	2300      	moveq	r3, #0
 8010d82:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 8010d86:	f7ff f937 	bl	800fff8 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8010d8a:	a901      	add	r1, sp, #4
 8010d8c:	a802      	add	r0, sp, #8
 8010d8e:	f000 ffe3 	bl	8011d58 <xTaskCheckForTimeOut>
 8010d92:	2800      	cmp	r0, #0
 8010d94:	d135      	bne.n	8010e02 <xQueueSemaphoreTake+0xf2>
	taskENTER_CRITICAL();
 8010d96:	f7ff f90d 	bl	800ffb4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 8010d9a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8010d9c:	2b00      	cmp	r3, #0
 8010d9e:	f000 80a4 	beq.w	8010eea <xQueueSemaphoreTake+0x1da>
	taskEXIT_CRITICAL();
 8010da2:	f7ff f929 	bl	800fff8 <vPortExitCritical>
	taskENTER_CRITICAL();
 8010da6:	f7ff f905 	bl	800ffb4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8010daa:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8010dae:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010db0:	2d00      	cmp	r5, #0
 8010db2:	dc05      	bgt.n	8010dc0 <xQueueSemaphoreTake+0xb0>
 8010db4:	e074      	b.n	8010ea0 <xQueueSemaphoreTake+0x190>
			--cTxLock;
 8010db6:	1e6b      	subs	r3, r5, #1
 8010db8:	b2da      	uxtb	r2, r3
 8010dba:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010dbc:	2a00      	cmp	r2, #0
 8010dbe:	d06f      	beq.n	8010ea0 <xQueueSemaphoreTake+0x190>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010dc0:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010dc2:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010dc4:	2b00      	cmp	r3, #0
 8010dc6:	d06b      	beq.n	8010ea0 <xQueueSemaphoreTake+0x190>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010dc8:	f000 ff72 	bl	8011cb0 <xTaskRemoveFromEventList>
 8010dcc:	2800      	cmp	r0, #0
 8010dce:	d0f2      	beq.n	8010db6 <xQueueSemaphoreTake+0xa6>
						vTaskMissedYield();
 8010dd0:	f001 f80a 	bl	8011de8 <vTaskMissedYield>
 8010dd4:	e7ef      	b.n	8010db6 <xQueueSemaphoreTake+0xa6>
 8010dd6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010dda:	f383 8811 	msr	BASEPRI, r3
 8010dde:	f3bf 8f6f 	isb	sy
 8010de2:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 8010de6:	e7fe      	b.n	8010de6 <xQueueSemaphoreTake+0xd6>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8010de8:	9b01      	ldr	r3, [sp, #4]
 8010dea:	2b00      	cmp	r3, #0
 8010dec:	f000 80d4 	beq.w	8010f98 <xQueueSemaphoreTake+0x288>
 8010df0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010df4:	f383 8811 	msr	BASEPRI, r3
 8010df8:	f3bf 8f6f 	isb	sy
 8010dfc:	f3bf 8f4f 	dsb	sy
 8010e00:	e7fe      	b.n	8010e00 <xQueueSemaphoreTake+0xf0>
	taskENTER_CRITICAL();
 8010e02:	f7ff f8d7 	bl	800ffb4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8010e06:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8010e0a:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010e0c:	2d00      	cmp	r5, #0
 8010e0e:	dc04      	bgt.n	8010e1a <xQueueSemaphoreTake+0x10a>
 8010e10:	e011      	b.n	8010e36 <xQueueSemaphoreTake+0x126>
			--cTxLock;
 8010e12:	1e6b      	subs	r3, r5, #1
 8010e14:	b2da      	uxtb	r2, r3
 8010e16:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010e18:	b16a      	cbz	r2, 8010e36 <xQueueSemaphoreTake+0x126>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010e1a:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010e1c:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010e1e:	b153      	cbz	r3, 8010e36 <xQueueSemaphoreTake+0x126>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010e20:	f000 ff46 	bl	8011cb0 <xTaskRemoveFromEventList>
 8010e24:	2800      	cmp	r0, #0
 8010e26:	d0f4      	beq.n	8010e12 <xQueueSemaphoreTake+0x102>
						vTaskMissedYield();
 8010e28:	f000 ffde 	bl	8011de8 <vTaskMissedYield>
			--cTxLock;
 8010e2c:	1e6b      	subs	r3, r5, #1
 8010e2e:	b2da      	uxtb	r2, r3
 8010e30:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010e32:	2a00      	cmp	r2, #0
 8010e34:	d1f1      	bne.n	8010e1a <xQueueSemaphoreTake+0x10a>
		pxQueue->cTxLock = queueUNLOCKED;
 8010e36:	23ff      	movs	r3, #255	; 0xff
 8010e38:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8010e3c:	f7ff f8dc 	bl	800fff8 <vPortExitCritical>
	taskENTER_CRITICAL();
 8010e40:	f7ff f8b8 	bl	800ffb4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8010e44:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8010e48:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010e4a:	2d00      	cmp	r5, #0
 8010e4c:	dd14      	ble.n	8010e78 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010e4e:	f104 0810 	add.w	r8, r4, #16
 8010e52:	e003      	b.n	8010e5c <xQueueSemaphoreTake+0x14c>
				--cRxLock;
 8010e54:	1e6b      	subs	r3, r5, #1
 8010e56:	b2da      	uxtb	r2, r3
 8010e58:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010e5a:	b16a      	cbz	r2, 8010e78 <xQueueSemaphoreTake+0x168>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010e5c:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010e5e:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010e60:	b153      	cbz	r3, 8010e78 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010e62:	f000 ff25 	bl	8011cb0 <xTaskRemoveFromEventList>
 8010e66:	2800      	cmp	r0, #0
 8010e68:	d0f4      	beq.n	8010e54 <xQueueSemaphoreTake+0x144>
					vTaskMissedYield();
 8010e6a:	f000 ffbd 	bl	8011de8 <vTaskMissedYield>
				--cRxLock;
 8010e6e:	1e6b      	subs	r3, r5, #1
 8010e70:	b2da      	uxtb	r2, r3
 8010e72:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010e74:	2a00      	cmp	r2, #0
 8010e76:	d1f1      	bne.n	8010e5c <xQueueSemaphoreTake+0x14c>
		pxQueue->cRxLock = queueUNLOCKED;
 8010e78:	23ff      	movs	r3, #255	; 0xff
 8010e7a:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 8010e7e:	f7ff f8bb 	bl	800fff8 <vPortExitCritical>
			( void ) xTaskResumeAll();
 8010e82:	f000 fe15 	bl	8011ab0 <xTaskResumeAll>
	taskENTER_CRITICAL();
 8010e86:	f7ff f895 	bl	800ffb4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 8010e8a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8010e8c:	2b00      	cmp	r3, #0
 8010e8e:	d07c      	beq.n	8010f8a <xQueueSemaphoreTake+0x27a>
	taskEXIT_CRITICAL();
 8010e90:	f7ff f8b2 	bl	800fff8 <vPortExitCritical>
	return xReturn;
 8010e94:	2501      	movs	r5, #1
 8010e96:	e755      	b.n	8010d44 <xQueueSemaphoreTake+0x34>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8010e98:	a802      	add	r0, sp, #8
 8010e9a:	f000 ff51 	bl	8011d40 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 8010e9e:	e75e      	b.n	8010d5e <xQueueSemaphoreTake+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 8010ea0:	23ff      	movs	r3, #255	; 0xff
 8010ea2:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8010ea6:	f7ff f8a7 	bl	800fff8 <vPortExitCritical>
	taskENTER_CRITICAL();
 8010eaa:	f7ff f883 	bl	800ffb4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8010eae:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8010eb2:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010eb4:	2d00      	cmp	r5, #0
 8010eb6:	dd10      	ble.n	8010eda <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010eb8:	f104 0810 	add.w	r8, r4, #16
 8010ebc:	e003      	b.n	8010ec6 <xQueueSemaphoreTake+0x1b6>
				--cRxLock;
 8010ebe:	1e6b      	subs	r3, r5, #1
 8010ec0:	b2da      	uxtb	r2, r3
 8010ec2:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010ec4:	b14a      	cbz	r2, 8010eda <xQueueSemaphoreTake+0x1ca>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010ec6:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010ec8:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010eca:	b133      	cbz	r3, 8010eda <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010ecc:	f000 fef0 	bl	8011cb0 <xTaskRemoveFromEventList>
 8010ed0:	2800      	cmp	r0, #0
 8010ed2:	d0f4      	beq.n	8010ebe <xQueueSemaphoreTake+0x1ae>
					vTaskMissedYield();
 8010ed4:	f000 ff88 	bl	8011de8 <vTaskMissedYield>
 8010ed8:	e7f1      	b.n	8010ebe <xQueueSemaphoreTake+0x1ae>
		pxQueue->cRxLock = queueUNLOCKED;
 8010eda:	23ff      	movs	r3, #255	; 0xff
 8010edc:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 8010ee0:	f7ff f88a 	bl	800fff8 <vPortExitCritical>
				( void ) xTaskResumeAll();
 8010ee4:	f000 fde4 	bl	8011ab0 <xTaskResumeAll>
 8010ee8:	e7d4      	b.n	8010e94 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
 8010eea:	f7ff f885 	bl	800fff8 <vPortExitCritical>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8010eee:	6823      	ldr	r3, [r4, #0]
 8010ef0:	2b00      	cmp	r3, #0
 8010ef2:	d062      	beq.n	8010fba <xQueueSemaphoreTake+0x2aa>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8010ef4:	9901      	ldr	r1, [sp, #4]
 8010ef6:	4630      	mov	r0, r6
 8010ef8:	f000 fe4c 	bl	8011b94 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 8010efc:	f7ff f85a 	bl	800ffb4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8010f00:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8010f04:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010f06:	2d00      	cmp	r5, #0
 8010f08:	dc04      	bgt.n	8010f14 <xQueueSemaphoreTake+0x204>
 8010f0a:	e00d      	b.n	8010f28 <xQueueSemaphoreTake+0x218>
			--cTxLock;
 8010f0c:	1e6b      	subs	r3, r5, #1
 8010f0e:	b2da      	uxtb	r2, r3
 8010f10:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010f12:	b14a      	cbz	r2, 8010f28 <xQueueSemaphoreTake+0x218>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010f14:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010f16:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010f18:	b133      	cbz	r3, 8010f28 <xQueueSemaphoreTake+0x218>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010f1a:	f000 fec9 	bl	8011cb0 <xTaskRemoveFromEventList>
 8010f1e:	2800      	cmp	r0, #0
 8010f20:	d0f4      	beq.n	8010f0c <xQueueSemaphoreTake+0x1fc>
						vTaskMissedYield();
 8010f22:	f000 ff61 	bl	8011de8 <vTaskMissedYield>
 8010f26:	e7f1      	b.n	8010f0c <xQueueSemaphoreTake+0x1fc>
		pxQueue->cTxLock = queueUNLOCKED;
 8010f28:	23ff      	movs	r3, #255	; 0xff
 8010f2a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8010f2e:	f7ff f863 	bl	800fff8 <vPortExitCritical>
	taskENTER_CRITICAL();
 8010f32:	f7ff f83f 	bl	800ffb4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8010f36:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8010f3a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010f3c:	2d00      	cmp	r5, #0
 8010f3e:	dd10      	ble.n	8010f62 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010f40:	f104 0810 	add.w	r8, r4, #16
 8010f44:	e003      	b.n	8010f4e <xQueueSemaphoreTake+0x23e>
				--cRxLock;
 8010f46:	1e6b      	subs	r3, r5, #1
 8010f48:	b2da      	uxtb	r2, r3
 8010f4a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010f4c:	b14a      	cbz	r2, 8010f62 <xQueueSemaphoreTake+0x252>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010f4e:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010f50:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010f52:	b133      	cbz	r3, 8010f62 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010f54:	f000 feac 	bl	8011cb0 <xTaskRemoveFromEventList>
 8010f58:	2800      	cmp	r0, #0
 8010f5a:	d0f4      	beq.n	8010f46 <xQueueSemaphoreTake+0x236>
					vTaskMissedYield();
 8010f5c:	f000 ff44 	bl	8011de8 <vTaskMissedYield>
 8010f60:	e7f1      	b.n	8010f46 <xQueueSemaphoreTake+0x236>
		pxQueue->cRxLock = queueUNLOCKED;
 8010f62:	23ff      	movs	r3, #255	; 0xff
 8010f64:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 8010f68:	f7ff f846 	bl	800fff8 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 8010f6c:	f000 fda0 	bl	8011ab0 <xTaskResumeAll>
 8010f70:	2800      	cmp	r0, #0
 8010f72:	d18f      	bne.n	8010e94 <xQueueSemaphoreTake+0x184>
					portYIELD_WITHIN_API();
 8010f74:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8010f78:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8010f7c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8010f80:	f3bf 8f4f 	dsb	sy
 8010f84:	f3bf 8f6f 	isb	sy
 8010f88:	e784      	b.n	8010e94 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
 8010f8a:	f7ff f835 	bl	800fff8 <vPortExitCritical>
					if( xInheritanceOccurred != pdFALSE )
 8010f8e:	b92f      	cbnz	r7, 8010f9c <xQueueSemaphoreTake+0x28c>
}
 8010f90:	4638      	mov	r0, r7
 8010f92:	b004      	add	sp, #16
 8010f94:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010f98:	4607      	mov	r7, r0
 8010f9a:	e6d1      	b.n	8010d40 <xQueueSemaphoreTake+0x30>
						taskENTER_CRITICAL();
 8010f9c:	f7ff f80a 	bl	800ffb4 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 8010fa0:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8010fa2:	b119      	cbz	r1, 8010fac <xQueueSemaphoreTake+0x29c>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 8010fa4:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8010fa6:	6819      	ldr	r1, [r3, #0]
 8010fa8:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 8010fac:	68a0      	ldr	r0, [r4, #8]
 8010fae:	f000 ffbd 	bl	8011f2c <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 8010fb2:	2700      	movs	r7, #0
						taskEXIT_CRITICAL();
 8010fb4:	f7ff f820 	bl	800fff8 <vPortExitCritical>
 8010fb8:	e7ea      	b.n	8010f90 <xQueueSemaphoreTake+0x280>
						taskENTER_CRITICAL();
 8010fba:	f7fe fffb 	bl	800ffb4 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 8010fbe:	68a0      	ldr	r0, [r4, #8]
 8010fc0:	f000 ff28 	bl	8011e14 <xTaskPriorityInherit>
 8010fc4:	4607      	mov	r7, r0
						taskEXIT_CRITICAL();
 8010fc6:	f7ff f817 	bl	800fff8 <vPortExitCritical>
 8010fca:	e793      	b.n	8010ef4 <xQueueSemaphoreTake+0x1e4>
						configASSERT( xInheritanceOccurred == pdFALSE );
 8010fcc:	b197      	cbz	r7, 8010ff4 <xQueueSemaphoreTake+0x2e4>
 8010fce:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010fd2:	f383 8811 	msr	BASEPRI, r3
 8010fd6:	f3bf 8f6f 	isb	sy
 8010fda:	f3bf 8f4f 	dsb	sy
 8010fde:	e7fe      	b.n	8010fde <xQueueSemaphoreTake+0x2ce>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8010fe0:	6822      	ldr	r2, [r4, #0]
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 8010fe2:	3b01      	subs	r3, #1
 8010fe4:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8010fe6:	b1ca      	cbz	r2, 801101c <xQueueSemaphoreTake+0x30c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010fe8:	6923      	ldr	r3, [r4, #16]
 8010fea:	b933      	cbnz	r3, 8010ffa <xQueueSemaphoreTake+0x2ea>
				taskEXIT_CRITICAL();
 8010fec:	f7ff f804 	bl	800fff8 <vPortExitCritical>
				return pdPASS;
 8010ff0:	2701      	movs	r7, #1
 8010ff2:	e7cd      	b.n	8010f90 <xQueueSemaphoreTake+0x280>
					taskEXIT_CRITICAL();
 8010ff4:	f7ff f800 	bl	800fff8 <vPortExitCritical>
					return errQUEUE_EMPTY;
 8010ff8:	e7ca      	b.n	8010f90 <xQueueSemaphoreTake+0x280>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010ffa:	f104 0010 	add.w	r0, r4, #16
 8010ffe:	f000 fe57 	bl	8011cb0 <xTaskRemoveFromEventList>
 8011002:	2800      	cmp	r0, #0
 8011004:	d0f2      	beq.n	8010fec <xQueueSemaphoreTake+0x2dc>
						queueYIELD_IF_USING_PREEMPTION();
 8011006:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 801100a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 801100e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8011012:	f3bf 8f4f 	dsb	sy
 8011016:	f3bf 8f6f 	isb	sy
 801101a:	e7e7      	b.n	8010fec <xQueueSemaphoreTake+0x2dc>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 801101c:	f000 ffda 	bl	8011fd4 <pvTaskIncrementMutexHeldCount>
 8011020:	60a0      	str	r0, [r4, #8]
 8011022:	e7e1      	b.n	8010fe8 <xQueueSemaphoreTake+0x2d8>

08011024 <xQueueReceiveFromISR>:
{
 8011024:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	configASSERT( pxQueue );
 8011028:	b310      	cbz	r0, 8011070 <xQueueReceiveFromISR+0x4c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 801102a:	460e      	mov	r6, r1
 801102c:	4617      	mov	r7, r2
 801102e:	4604      	mov	r4, r0
 8011030:	b191      	cbz	r1, 8011058 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8011032:	f7ff f8f3 	bl	801021c <vPortValidateInterruptPriority>
	__asm volatile
 8011036:	f3ef 8911 	mrs	r9, BASEPRI
 801103a:	f04f 0350 	mov.w	r3, #80	; 0x50
 801103e:	f383 8811 	msr	BASEPRI, r3
 8011042:	f3bf 8f6f 	isb	sy
 8011046:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 801104a:	6ba5      	ldr	r5, [r4, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 801104c:	b9cd      	cbnz	r5, 8011082 <xQueueReceiveFromISR+0x5e>
			xReturn = pdFAIL;
 801104e:	4628      	mov	r0, r5
	__asm volatile
 8011050:	f389 8811 	msr	BASEPRI, r9
}
 8011054:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8011058:	6c03      	ldr	r3, [r0, #64]	; 0x40
 801105a:	2b00      	cmp	r3, #0
 801105c:	d0e9      	beq.n	8011032 <xQueueReceiveFromISR+0xe>
	__asm volatile
 801105e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011062:	f383 8811 	msr	BASEPRI, r3
 8011066:	f3bf 8f6f 	isb	sy
 801106a:	f3bf 8f4f 	dsb	sy
 801106e:	e7fe      	b.n	801106e <xQueueReceiveFromISR+0x4a>
 8011070:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011074:	f383 8811 	msr	BASEPRI, r3
 8011078:	f3bf 8f6f 	isb	sy
 801107c:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 8011080:	e7fe      	b.n	8011080 <xQueueReceiveFromISR+0x5c>
			const int8_t cRxLock = pxQueue->cRxLock;
 8011082:	f894 8044 	ldrb.w	r8, [r4, #68]	; 0x44
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8011086:	6c22      	ldr	r2, [r4, #64]	; 0x40
			const int8_t cRxLock = pxQueue->cRxLock;
 8011088:	fa4f f888 	sxtb.w	r8, r8
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 801108c:	b152      	cbz	r2, 80110a4 <xQueueReceiveFromISR+0x80>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 801108e:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8011090:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8011092:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8011094:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8011096:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8011098:	bf24      	itt	cs
 801109a:	6821      	ldrcs	r1, [r4, #0]
 801109c:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 801109e:	4630      	mov	r0, r6
 80110a0:	f01c ff35 	bl	802df0e <memcpy>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80110a4:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
 80110a6:	f1b8 3fff 	cmp.w	r8, #4294967295
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80110aa:	63a5      	str	r5, [r4, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 80110ac:	d009      	beq.n	80110c2 <xQueueReceiveFromISR+0x9e>
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 80110ae:	f108 0301 	add.w	r3, r8, #1
 80110b2:	b25b      	sxtb	r3, r3
 80110b4:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
			xReturn = pdPASS;
 80110b8:	2001      	movs	r0, #1
	__asm volatile
 80110ba:	f389 8811 	msr	BASEPRI, r9
}
 80110be:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80110c2:	6923      	ldr	r3, [r4, #16]
 80110c4:	2b00      	cmp	r3, #0
 80110c6:	d0f7      	beq.n	80110b8 <xQueueReceiveFromISR+0x94>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80110c8:	f104 0010 	add.w	r0, r4, #16
 80110cc:	f000 fdf0 	bl	8011cb0 <xTaskRemoveFromEventList>
 80110d0:	2800      	cmp	r0, #0
 80110d2:	d0f1      	beq.n	80110b8 <xQueueReceiveFromISR+0x94>
						if( pxHigherPriorityTaskWoken != NULL )
 80110d4:	2f00      	cmp	r7, #0
 80110d6:	d0ef      	beq.n	80110b8 <xQueueReceiveFromISR+0x94>
							*pxHigherPriorityTaskWoken = pdTRUE;
 80110d8:	2001      	movs	r0, #1
 80110da:	6038      	str	r0, [r7, #0]
 80110dc:	e7b8      	b.n	8011050 <xQueueReceiveFromISR+0x2c>
 80110de:	bf00      	nop

080110e0 <uxQueueMessagesWaiting>:
	configASSERT( xQueue );
 80110e0:	b158      	cbz	r0, 80110fa <uxQueueMessagesWaiting+0x1a>
{
 80110e2:	b510      	push	{r4, lr}
 80110e4:	4604      	mov	r4, r0
 80110e6:	b082      	sub	sp, #8
	taskENTER_CRITICAL();
 80110e8:	f7fe ff64 	bl	800ffb4 <vPortEnterCritical>
		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
 80110ec:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 80110ee:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 80110f0:	f7fe ff82 	bl	800fff8 <vPortExitCritical>
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 80110f4:	9801      	ldr	r0, [sp, #4]
 80110f6:	b002      	add	sp, #8
 80110f8:	bd10      	pop	{r4, pc}
	__asm volatile
 80110fa:	f04f 0350 	mov.w	r3, #80	; 0x50
 80110fe:	f383 8811 	msr	BASEPRI, r3
 8011102:	f3bf 8f6f 	isb	sy
 8011106:	f3bf 8f4f 	dsb	sy
	configASSERT( xQueue );
 801110a:	e7fe      	b.n	801110a <uxQueueMessagesWaiting+0x2a>

0801110c <uxQueueMessagesWaitingFromISR>:
	configASSERT( pxQueue );
 801110c:	b108      	cbz	r0, 8011112 <uxQueueMessagesWaitingFromISR+0x6>
	uxReturn = pxQueue->uxMessagesWaiting;
 801110e:	6b80      	ldr	r0, [r0, #56]	; 0x38
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 8011110:	4770      	bx	lr
 8011112:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011116:	f383 8811 	msr	BASEPRI, r3
 801111a:	f3bf 8f6f 	isb	sy
 801111e:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 8011122:	e7fe      	b.n	8011122 <uxQueueMessagesWaitingFromISR+0x16>
 8011124:	0000      	movs	r0, r0
	...

08011128 <vQueueDelete>:
	configASSERT( pxQueue );
 8011128:	b1f0      	cbz	r0, 8011168 <vQueueDelete+0x40>

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 801112a:	4b21      	ldr	r3, [pc, #132]	; (80111b0 <vQueueDelete+0x88>)
 801112c:	685a      	ldr	r2, [r3, #4]
 801112e:	4290      	cmp	r0, r2
 8011130:	d025      	beq.n	801117e <vQueueDelete+0x56>
 8011132:	68da      	ldr	r2, [r3, #12]
 8011134:	4290      	cmp	r0, r2
 8011136:	d02c      	beq.n	8011192 <vQueueDelete+0x6a>
 8011138:	695a      	ldr	r2, [r3, #20]
 801113a:	4290      	cmp	r0, r2
 801113c:	d02b      	beq.n	8011196 <vQueueDelete+0x6e>
 801113e:	69da      	ldr	r2, [r3, #28]
 8011140:	4290      	cmp	r0, r2
 8011142:	d02a      	beq.n	801119a <vQueueDelete+0x72>
 8011144:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8011146:	4290      	cmp	r0, r2
 8011148:	d029      	beq.n	801119e <vQueueDelete+0x76>
 801114a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 801114c:	4290      	cmp	r0, r2
 801114e:	d01e      	beq.n	801118e <vQueueDelete+0x66>
 8011150:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8011152:	4290      	cmp	r0, r2
 8011154:	d025      	beq.n	80111a2 <vQueueDelete+0x7a>
 8011156:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8011158:	4290      	cmp	r0, r2
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 801115a:	bf08      	it	eq
 801115c:	2207      	moveq	r2, #7
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 801115e:	d00f      	beq.n	8011180 <vQueueDelete+0x58>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 8011160:	f890 3046 	ldrb.w	r3, [r0, #70]	; 0x46
 8011164:	b14b      	cbz	r3, 801117a <vQueueDelete+0x52>
}
 8011166:	4770      	bx	lr
 8011168:	f04f 0350 	mov.w	r3, #80	; 0x50
 801116c:	f383 8811 	msr	BASEPRI, r3
 8011170:	f3bf 8f6f 	isb	sy
 8011174:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 8011178:	e7fe      	b.n	8011178 <vQueueDelete+0x50>
			vPortFree( pxQueue );
 801117a:	f7fe be07 	b.w	800fd8c <vPortFree>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 801117e:	2200      	movs	r2, #0
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 8011180:	ed9f 7b09 	vldr	d7, [pc, #36]	; 80111a8 <vQueueDelete+0x80>
 8011184:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8011188:	ed83 7b00 	vstr	d7, [r3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
				break;
 801118c:	e7e8      	b.n	8011160 <vQueueDelete+0x38>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 801118e:	2205      	movs	r2, #5
 8011190:	e7f6      	b.n	8011180 <vQueueDelete+0x58>
 8011192:	2201      	movs	r2, #1
 8011194:	e7f4      	b.n	8011180 <vQueueDelete+0x58>
 8011196:	2202      	movs	r2, #2
 8011198:	e7f2      	b.n	8011180 <vQueueDelete+0x58>
 801119a:	2203      	movs	r2, #3
 801119c:	e7f0      	b.n	8011180 <vQueueDelete+0x58>
 801119e:	2204      	movs	r2, #4
 80111a0:	e7ee      	b.n	8011180 <vQueueDelete+0x58>
 80111a2:	2206      	movs	r2, #6
 80111a4:	e7ec      	b.n	8011180 <vQueueDelete+0x58>
 80111a6:	bf00      	nop
	...
 80111b0:	200131d8 	.word	0x200131d8

080111b4 <vQueueAddToRegistry>:
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 80111b4:	4b12      	ldr	r3, [pc, #72]	; (8011200 <vQueueAddToRegistry+0x4c>)
 80111b6:	681a      	ldr	r2, [r3, #0]
 80111b8:	b17a      	cbz	r2, 80111da <vQueueAddToRegistry+0x26>
 80111ba:	689a      	ldr	r2, [r3, #8]
 80111bc:	b162      	cbz	r2, 80111d8 <vQueueAddToRegistry+0x24>
 80111be:	691a      	ldr	r2, [r3, #16]
 80111c0:	b192      	cbz	r2, 80111e8 <vQueueAddToRegistry+0x34>
 80111c2:	699a      	ldr	r2, [r3, #24]
 80111c4:	b192      	cbz	r2, 80111ec <vQueueAddToRegistry+0x38>
 80111c6:	6a1a      	ldr	r2, [r3, #32]
 80111c8:	b192      	cbz	r2, 80111f0 <vQueueAddToRegistry+0x3c>
 80111ca:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80111cc:	b192      	cbz	r2, 80111f4 <vQueueAddToRegistry+0x40>
 80111ce:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80111d0:	b192      	cbz	r2, 80111f8 <vQueueAddToRegistry+0x44>
 80111d2:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80111d4:	b192      	cbz	r2, 80111fc <vQueueAddToRegistry+0x48>
	}
 80111d6:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80111d8:	2201      	movs	r2, #1
				xQueueRegistry[ ux ].xHandle = xQueue;
 80111da:	eb03 0cc2 	add.w	ip, r3, r2, lsl #3
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 80111de:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 80111e2:	f8cc 0004 	str.w	r0, [ip, #4]
	}
 80111e6:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80111e8:	2202      	movs	r2, #2
 80111ea:	e7f6      	b.n	80111da <vQueueAddToRegistry+0x26>
 80111ec:	2203      	movs	r2, #3
 80111ee:	e7f4      	b.n	80111da <vQueueAddToRegistry+0x26>
 80111f0:	2204      	movs	r2, #4
 80111f2:	e7f2      	b.n	80111da <vQueueAddToRegistry+0x26>
 80111f4:	2205      	movs	r2, #5
 80111f6:	e7f0      	b.n	80111da <vQueueAddToRegistry+0x26>
 80111f8:	2206      	movs	r2, #6
 80111fa:	e7ee      	b.n	80111da <vQueueAddToRegistry+0x26>
 80111fc:	2207      	movs	r2, #7
 80111fe:	e7ec      	b.n	80111da <vQueueAddToRegistry+0x26>
 8011200:	200131d8 	.word	0x200131d8

08011204 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 8011204:	b570      	push	{r4, r5, r6, lr}
 8011206:	4605      	mov	r5, r0
 8011208:	460e      	mov	r6, r1
 801120a:	4614      	mov	r4, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 801120c:	f7fe fed2 	bl	800ffb4 <vPortEnterCritical>
 8011210:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
 8011214:	2bff      	cmp	r3, #255	; 0xff
 8011216:	bf04      	itt	eq
 8011218:	2300      	moveq	r3, #0
 801121a:	f885 3044 	strbeq.w	r3, [r5, #68]	; 0x44
 801121e:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
 8011222:	2bff      	cmp	r3, #255	; 0xff
 8011224:	bf04      	itt	eq
 8011226:	2300      	moveq	r3, #0
 8011228:	f885 3045 	strbeq.w	r3, [r5, #69]	; 0x45
 801122c:	f7fe fee4 	bl	800fff8 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 8011230:	6bab      	ldr	r3, [r5, #56]	; 0x38
 8011232:	2b00      	cmp	r3, #0
 8011234:	d043      	beq.n	80112be <vQueueWaitForMessageRestricted+0xba>
	taskENTER_CRITICAL();
 8011236:	f7fe febd 	bl	800ffb4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 801123a:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
 801123e:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8011240:	2c00      	cmp	r4, #0
 8011242:	dd14      	ble.n	801126e <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8011244:	f105 0624 	add.w	r6, r5, #36	; 0x24
 8011248:	e003      	b.n	8011252 <vQueueWaitForMessageRestricted+0x4e>
			--cTxLock;
 801124a:	1e63      	subs	r3, r4, #1
 801124c:	b2da      	uxtb	r2, r3
 801124e:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8011250:	b16a      	cbz	r2, 801126e <vQueueWaitForMessageRestricted+0x6a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8011252:	6a6b      	ldr	r3, [r5, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8011254:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8011256:	b153      	cbz	r3, 801126e <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8011258:	f000 fd2a 	bl	8011cb0 <xTaskRemoveFromEventList>
 801125c:	2800      	cmp	r0, #0
 801125e:	d0f4      	beq.n	801124a <vQueueWaitForMessageRestricted+0x46>
						vTaskMissedYield();
 8011260:	f000 fdc2 	bl	8011de8 <vTaskMissedYield>
			--cTxLock;
 8011264:	1e63      	subs	r3, r4, #1
 8011266:	b2da      	uxtb	r2, r3
 8011268:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 801126a:	2a00      	cmp	r2, #0
 801126c:	d1f1      	bne.n	8011252 <vQueueWaitForMessageRestricted+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 801126e:	23ff      	movs	r3, #255	; 0xff
 8011270:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
	taskEXIT_CRITICAL();
 8011274:	f7fe fec0 	bl	800fff8 <vPortExitCritical>
	taskENTER_CRITICAL();
 8011278:	f7fe fe9c 	bl	800ffb4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 801127c:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
 8011280:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8011282:	2c00      	cmp	r4, #0
 8011284:	dd14      	ble.n	80112b0 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8011286:	f105 0610 	add.w	r6, r5, #16
 801128a:	e003      	b.n	8011294 <vQueueWaitForMessageRestricted+0x90>
				--cRxLock;
 801128c:	1e63      	subs	r3, r4, #1
 801128e:	b2da      	uxtb	r2, r3
 8011290:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8011292:	b16a      	cbz	r2, 80112b0 <vQueueWaitForMessageRestricted+0xac>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8011294:	692b      	ldr	r3, [r5, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8011296:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8011298:	b153      	cbz	r3, 80112b0 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 801129a:	f000 fd09 	bl	8011cb0 <xTaskRemoveFromEventList>
 801129e:	2800      	cmp	r0, #0
 80112a0:	d0f4      	beq.n	801128c <vQueueWaitForMessageRestricted+0x88>
					vTaskMissedYield();
 80112a2:	f000 fda1 	bl	8011de8 <vTaskMissedYield>
				--cRxLock;
 80112a6:	1e63      	subs	r3, r4, #1
 80112a8:	b2da      	uxtb	r2, r3
 80112aa:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 80112ac:	2a00      	cmp	r2, #0
 80112ae:	d1f1      	bne.n	8011294 <vQueueWaitForMessageRestricted+0x90>
		pxQueue->cRxLock = queueUNLOCKED;
 80112b0:	23ff      	movs	r3, #255	; 0xff
 80112b2:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
	}
 80112b6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 80112ba:	f7fe be9d 	b.w	800fff8 <vPortExitCritical>
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 80112be:	4622      	mov	r2, r4
 80112c0:	4631      	mov	r1, r6
 80112c2:	f105 0024 	add.w	r0, r5, #36	; 0x24
 80112c6:	f000 fca9 	bl	8011c1c <vTaskPlaceOnEventListRestricted>
 80112ca:	e7b4      	b.n	8011236 <vQueueWaitForMessageRestricted+0x32>

080112cc <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 80112cc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80112d0:	4605      	mov	r5, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 80112d2:	f7fe fe6f 	bl	800ffb4 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 80112d6:	4a34      	ldr	r2, [pc, #208]	; (80113a8 <prvAddNewTaskToReadyList+0xdc>)
		if( pxCurrentTCB == NULL )
 80112d8:	4e34      	ldr	r6, [pc, #208]	; (80113ac <prvAddNewTaskToReadyList+0xe0>)
		uxCurrentNumberOfTasks++;
 80112da:	6813      	ldr	r3, [r2, #0]
 80112dc:	3301      	adds	r3, #1
 80112de:	6013      	str	r3, [r2, #0]
		if( pxCurrentTCB == NULL )
 80112e0:	6833      	ldr	r3, [r6, #0]
 80112e2:	2b00      	cmp	r3, #0
 80112e4:	d032      	beq.n	801134c <prvAddNewTaskToReadyList+0x80>
		else
		{
			/* If the scheduler is not already running, make this task the
			current task if it is the highest priority task to be created
			so far. */
			if( xSchedulerRunning == pdFALSE )
 80112e6:	4c32      	ldr	r4, [pc, #200]	; (80113b0 <prvAddNewTaskToReadyList+0xe4>)
 80112e8:	6823      	ldr	r3, [r4, #0]
 80112ea:	b33b      	cbz	r3, 801133c <prvAddNewTaskToReadyList+0x70>
			{
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 80112ec:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 80112ee:	4f31      	ldr	r7, [pc, #196]	; (80113b4 <prvAddNewTaskToReadyList+0xe8>)
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

		uxTaskNumber++;
 80112f0:	4a31      	ldr	r2, [pc, #196]	; (80113b8 <prvAddNewTaskToReadyList+0xec>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
		}
		#endif /* configUSE_TRACE_FACILITY */
		traceTASK_CREATE( pxNewTCB );

		prvAddTaskToReadyList( pxNewTCB );
 80112f2:	4932      	ldr	r1, [pc, #200]	; (80113bc <prvAddNewTaskToReadyList+0xf0>)
		uxTaskNumber++;
 80112f4:	6813      	ldr	r3, [r2, #0]
 80112f6:	3301      	adds	r3, #1
 80112f8:	6013      	str	r3, [r2, #0]
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 80112fa:	646b      	str	r3, [r5, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 80112fc:	680b      	ldr	r3, [r1, #0]
 80112fe:	4283      	cmp	r3, r0
 8011300:	bf38      	it	cc
 8011302:	6008      	strcc	r0, [r1, #0]
 8011304:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8011308:	eb07 0080 	add.w	r0, r7, r0, lsl #2
 801130c:	1d29      	adds	r1, r5, #4
 801130e:	f7fe fdb1 	bl	800fe74 <vListInsertEnd>

		portSETUP_TCB( pxNewTCB );
	}
	taskEXIT_CRITICAL();
 8011312:	f7fe fe71 	bl	800fff8 <vPortExitCritical>

	if( xSchedulerRunning != pdFALSE )
 8011316:	6823      	ldr	r3, [r4, #0]
 8011318:	b173      	cbz	r3, 8011338 <prvAddNewTaskToReadyList+0x6c>
	{
		/* If the created task is of a higher priority than the current task
		then it should run now. */
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 801131a:	6832      	ldr	r2, [r6, #0]
 801131c:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 801131e:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8011320:	429a      	cmp	r2, r3
 8011322:	d209      	bcs.n	8011338 <prvAddNewTaskToReadyList+0x6c>
		{
			taskYIELD_IF_USING_PREEMPTION();
 8011324:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8011328:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 801132c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8011330:	f3bf 8f4f 	dsb	sy
 8011334:	f3bf 8f6f 	isb	sy
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 8011338:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 801133c:	6833      	ldr	r3, [r6, #0]
 801133e:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 8011340:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011342:	4f1c      	ldr	r7, [pc, #112]	; (80113b4 <prvAddNewTaskToReadyList+0xe8>)
 8011344:	4283      	cmp	r3, r0
					pxCurrentTCB = pxNewTCB;
 8011346:	bf98      	it	ls
 8011348:	6035      	strls	r5, [r6, #0]
 801134a:	e7d1      	b.n	80112f0 <prvAddNewTaskToReadyList+0x24>
			pxCurrentTCB = pxNewTCB;
 801134c:	6035      	str	r5, [r6, #0]
			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 801134e:	6813      	ldr	r3, [r2, #0]
 8011350:	2b01      	cmp	r3, #1
 8011352:	d003      	beq.n	801135c <prvAddNewTaskToReadyList+0x90>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 8011354:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 8011356:	4f17      	ldr	r7, [pc, #92]	; (80113b4 <prvAddNewTaskToReadyList+0xe8>)
 8011358:	4c15      	ldr	r4, [pc, #84]	; (80113b0 <prvAddNewTaskToReadyList+0xe4>)
 801135a:	e7c9      	b.n	80112f0 <prvAddNewTaskToReadyList+0x24>
 801135c:	4f15      	ldr	r7, [pc, #84]	; (80113b4 <prvAddNewTaskToReadyList+0xe8>)
 801135e:	463c      	mov	r4, r7
 8011360:	f507 688c 	add.w	r8, r7, #1120	; 0x460
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 8011364:	4620      	mov	r0, r4
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8011366:	3414      	adds	r4, #20
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 8011368:	f7fe fd74 	bl	800fe54 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 801136c:	45a0      	cmp	r8, r4
 801136e:	d1f9      	bne.n	8011364 <prvAddNewTaskToReadyList+0x98>
	}

	vListInitialise( &xDelayedTaskList1 );
 8011370:	f8df 9060 	ldr.w	r9, [pc, #96]	; 80113d4 <prvAddNewTaskToReadyList+0x108>
	vListInitialise( &xDelayedTaskList2 );
 8011374:	f8df 8060 	ldr.w	r8, [pc, #96]	; 80113d8 <prvAddNewTaskToReadyList+0x10c>
 8011378:	4c0d      	ldr	r4, [pc, #52]	; (80113b0 <prvAddNewTaskToReadyList+0xe4>)
	vListInitialise( &xDelayedTaskList1 );
 801137a:	4648      	mov	r0, r9
 801137c:	f7fe fd6a 	bl	800fe54 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 8011380:	4640      	mov	r0, r8
 8011382:	f7fe fd67 	bl	800fe54 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 8011386:	480e      	ldr	r0, [pc, #56]	; (80113c0 <prvAddNewTaskToReadyList+0xf4>)
 8011388:	f7fe fd64 	bl	800fe54 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 801138c:	480d      	ldr	r0, [pc, #52]	; (80113c4 <prvAddNewTaskToReadyList+0xf8>)
 801138e:	f7fe fd61 	bl	800fe54 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 8011392:	480d      	ldr	r0, [pc, #52]	; (80113c8 <prvAddNewTaskToReadyList+0xfc>)
 8011394:	f7fe fd5e 	bl	800fe54 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 8011398:	4b0c      	ldr	r3, [pc, #48]	; (80113cc <prvAddNewTaskToReadyList+0x100>)
		prvAddTaskToReadyList( pxNewTCB );
 801139a:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
	pxDelayedTaskList = &xDelayedTaskList1;
 801139c:	f8c3 9000 	str.w	r9, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 80113a0:	4b0b      	ldr	r3, [pc, #44]	; (80113d0 <prvAddNewTaskToReadyList+0x104>)
 80113a2:	f8c3 8000 	str.w	r8, [r3]
}
 80113a6:	e7a3      	b.n	80112f0 <prvAddNewTaskToReadyList+0x24>
 80113a8:	20013684 	.word	0x20013684
 80113ac:	20013218 	.word	0x20013218
 80113b0:	200136e0 	.word	0x200136e0
 80113b4:	20013224 	.word	0x20013224
 80113b8:	20013690 	.word	0x20013690
 80113bc:	20013694 	.word	0x20013694
 80113c0:	200136cc 	.word	0x200136cc
 80113c4:	200136f8 	.word	0x200136f8
 80113c8:	200136e4 	.word	0x200136e4
 80113cc:	2001321c 	.word	0x2001321c
 80113d0:	20013220 	.word	0x20013220
 80113d4:	20013698 	.word	0x20013698
 80113d8:	200136ac 	.word	0x200136ac

080113dc <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 80113dc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80113e0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80113e2:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 80113e6:	ea4f 0982 	mov.w	r9, r2, lsl #2
 80113ea:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 80113ec:	4606      	mov	r6, r0
 80113ee:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 80113f0:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80113f2:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 80113f4:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 80113f6:	f01c fc64 	bl	802dcc2 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 80113fa:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80113fc:	f1a9 0904 	sub.w	r9, r9, #4
 8011400:	444b      	add	r3, r9
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 8011402:	f023 0907 	bic.w	r9, r3, #7
	if( pcName != NULL )
 8011406:	2d00      	cmp	r5, #0
 8011408:	d079      	beq.n	80114fe <prvInitialiseNewTask.constprop.0+0x122>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 801140a:	782b      	ldrb	r3, [r5, #0]
 801140c:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
			if( pcName[ x ] == ( char ) 0x00 )
 8011410:	2b00      	cmp	r3, #0
 8011412:	d03b      	beq.n	801148c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8011414:	786b      	ldrb	r3, [r5, #1]
 8011416:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
			if( pcName[ x ] == ( char ) 0x00 )
 801141a:	2b00      	cmp	r3, #0
 801141c:	d036      	beq.n	801148c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 801141e:	78ab      	ldrb	r3, [r5, #2]
 8011420:	f884 3036 	strb.w	r3, [r4, #54]	; 0x36
			if( pcName[ x ] == ( char ) 0x00 )
 8011424:	b393      	cbz	r3, 801148c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8011426:	78eb      	ldrb	r3, [r5, #3]
 8011428:	f884 3037 	strb.w	r3, [r4, #55]	; 0x37
			if( pcName[ x ] == ( char ) 0x00 )
 801142c:	b373      	cbz	r3, 801148c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 801142e:	792b      	ldrb	r3, [r5, #4]
 8011430:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
			if( pcName[ x ] == ( char ) 0x00 )
 8011434:	b353      	cbz	r3, 801148c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8011436:	796b      	ldrb	r3, [r5, #5]
 8011438:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
			if( pcName[ x ] == ( char ) 0x00 )
 801143c:	b333      	cbz	r3, 801148c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 801143e:	79ab      	ldrb	r3, [r5, #6]
 8011440:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
 8011444:	b313      	cbz	r3, 801148c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8011446:	79eb      	ldrb	r3, [r5, #7]
 8011448:	f884 303b 	strb.w	r3, [r4, #59]	; 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
 801144c:	b1f3      	cbz	r3, 801148c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 801144e:	7a2b      	ldrb	r3, [r5, #8]
 8011450:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
 8011454:	b1d3      	cbz	r3, 801148c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8011456:	7a6b      	ldrb	r3, [r5, #9]
 8011458:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
 801145c:	b1b3      	cbz	r3, 801148c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 801145e:	7aab      	ldrb	r3, [r5, #10]
 8011460:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
 8011464:	b193      	cbz	r3, 801148c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8011466:	7aeb      	ldrb	r3, [r5, #11]
 8011468:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
 801146c:	b173      	cbz	r3, 801148c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 801146e:	7b2b      	ldrb	r3, [r5, #12]
 8011470:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
			if( pcName[ x ] == ( char ) 0x00 )
 8011474:	b153      	cbz	r3, 801148c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8011476:	7b6b      	ldrb	r3, [r5, #13]
 8011478:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
			if( pcName[ x ] == ( char ) 0x00 )
 801147c:	b133      	cbz	r3, 801148c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 801147e:	7bab      	ldrb	r3, [r5, #14]
 8011480:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
			if( pcName[ x ] == ( char ) 0x00 )
 8011484:	b113      	cbz	r3, 801148c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8011486:	7beb      	ldrb	r3, [r5, #15]
 8011488:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 801148c:	2300      	movs	r3, #0
 801148e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 8011492:	9d08      	ldr	r5, [sp, #32]
 8011494:	2d37      	cmp	r5, #55	; 0x37
 8011496:	bf28      	it	cs
 8011498:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 801149a:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 801149e:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 80114a0:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 80114a2:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 80114a4:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 80114a8:	f7fe fce0 	bl	800fe6c <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80114ac:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 80114b0:	f104 0018 	add.w	r0, r4, #24
 80114b4:	f7fe fcda 	bl	800fe6c <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80114b8:	61a5      	str	r5, [r4, #24]
		pxNewTCB->ulNotifiedValue = 0;
 80114ba:	f8c4 a0a4 	str.w	sl, [r4, #164]	; 0xa4
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 80114be:	4651      	mov	r1, sl
 80114c0:	224c      	movs	r2, #76	; 0x4c
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 80114c2:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 80114c4:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 80114c6:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 80114ca:	f884 a0a8 	strb.w	sl, [r4, #168]	; 0xa8
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 80114ce:	f104 0058 	add.w	r0, r4, #88	; 0x58
 80114d2:	f01c fbf6 	bl	802dcc2 <memset>
 80114d6:	4b0b      	ldr	r3, [pc, #44]	; (8011504 <prvInitialiseNewTask.constprop.0+0x128>)
 80114d8:	65e3      	str	r3, [r4, #92]	; 0x5c
 80114da:	f103 0568 	add.w	r5, r3, #104	; 0x68
 80114de:	33d0      	adds	r3, #208	; 0xd0
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 80114e0:	463a      	mov	r2, r7
 80114e2:	4631      	mov	r1, r6
 80114e4:	4648      	mov	r0, r9
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 80114e6:	6625      	str	r5, [r4, #96]	; 0x60
 80114e8:	6663      	str	r3, [r4, #100]	; 0x64
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 80114ea:	f7fe fd3d 	bl	800ff68 <pxPortInitialiseStack>
 80114ee:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 80114f0:	f1b8 0f00 	cmp.w	r8, #0
 80114f4:	d001      	beq.n	80114fa <prvInitialiseNewTask.constprop.0+0x11e>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 80114f6:	f8c8 4000 	str.w	r4, [r8]
}
 80114fa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 80114fe:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 8011502:	e7c6      	b.n	8011492 <prvInitialiseNewTask.constprop.0+0xb6>
 8011504:	200141a8 	.word	0x200141a8

08011508 <prvIdleTask>:
{
 8011508:	b580      	push	{r7, lr}
 801150a:	4d23      	ldr	r5, [pc, #140]	; (8011598 <prvIdleTask+0x90>)
 801150c:	4f23      	ldr	r7, [pc, #140]	; (801159c <prvIdleTask+0x94>)
 801150e:	4e24      	ldr	r6, [pc, #144]	; (80115a0 <prvIdleTask+0x98>)
 8011510:	f8df 8090 	ldr.w	r8, [pc, #144]	; 80115a4 <prvIdleTask+0x9c>
				taskYIELD();
 8011514:	f04f 2ae0 	mov.w	sl, #3758153728	; 0xe000e000
 8011518:	f04f 5980 	mov.w	r9, #268435456	; 0x10000000
	{
		TCB_t *pxTCB;

		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
		being called too often in the idle task. */
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 801151c:	682b      	ldr	r3, [r5, #0]
 801151e:	b35b      	cbz	r3, 8011578 <prvIdleTask+0x70>
		{
			taskENTER_CRITICAL();
 8011520:	f7fe fd48 	bl	800ffb4 <vPortEnterCritical>
			{
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8011524:	68fb      	ldr	r3, [r7, #12]
 8011526:	68dc      	ldr	r4, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8011528:	1d20      	adds	r0, r4, #4
 801152a:	f7fe fccb 	bl	800fec4 <uxListRemove>
				--uxCurrentNumberOfTasks;
 801152e:	6833      	ldr	r3, [r6, #0]
 8011530:	3b01      	subs	r3, #1
 8011532:	6033      	str	r3, [r6, #0]
				--uxDeletedTasksWaitingCleanUp;
 8011534:	682b      	ldr	r3, [r5, #0]
 8011536:	3b01      	subs	r3, #1
 8011538:	602b      	str	r3, [r5, #0]
			}
			taskEXIT_CRITICAL();
 801153a:	f7fe fd5d 	bl	800fff8 <vPortExitCritical>
		to the task to free any memory allocated at the application level.
		See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
		for additional information. */
		#if ( configUSE_NEWLIB_REENTRANT == 1 )
		{
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
 801153e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8011542:	f01c fc07 	bl	802dd54 <_reclaim_reent>
		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
		{
			/* The task could have been allocated statically or dynamically, so
			check what was statically allocated before trying to free the
			memory. */
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8011546:	f894 30a9 	ldrb.w	r3, [r4, #169]	; 0xa9
 801154a:	b163      	cbz	r3, 8011566 <prvIdleTask+0x5e>
				/* Both the stack and TCB were allocated dynamically, so both
				must be freed. */
				vPortFree( pxTCB->pxStack );
				vPortFree( pxTCB );
			}
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 801154c:	2b01      	cmp	r3, #1
 801154e:	d01e      	beq.n	801158e <prvIdleTask+0x86>
			}
			else
			{
				/* Neither the stack nor the TCB were allocated dynamically, so
				nothing needs to be freed. */
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 8011550:	2b02      	cmp	r3, #2
 8011552:	d0e3      	beq.n	801151c <prvIdleTask+0x14>
 8011554:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011558:	f383 8811 	msr	BASEPRI, r3
 801155c:	f3bf 8f6f 	isb	sy
 8011560:	f3bf 8f4f 	dsb	sy
 8011564:	e7fe      	b.n	8011564 <prvIdleTask+0x5c>
				vPortFree( pxTCB->pxStack );
 8011566:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8011568:	f7fe fc10 	bl	800fd8c <vPortFree>
				vPortFree( pxTCB );
 801156c:	4620      	mov	r0, r4
 801156e:	f7fe fc0d 	bl	800fd8c <vPortFree>
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8011572:	682b      	ldr	r3, [r5, #0]
 8011574:	2b00      	cmp	r3, #0
 8011576:	d1d3      	bne.n	8011520 <prvIdleTask+0x18>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 8011578:	f8d8 3000 	ldr.w	r3, [r8]
 801157c:	2b01      	cmp	r3, #1
 801157e:	d9cd      	bls.n	801151c <prvIdleTask+0x14>
				taskYIELD();
 8011580:	f8ca 9d04 	str.w	r9, [sl, #3332]	; 0xd04
 8011584:	f3bf 8f4f 	dsb	sy
 8011588:	f3bf 8f6f 	isb	sy
 801158c:	e7c6      	b.n	801151c <prvIdleTask+0x14>
				vPortFree( pxTCB );
 801158e:	4620      	mov	r0, r4
 8011590:	f7fe fbfc 	bl	800fd8c <vPortFree>
 8011594:	e7c2      	b.n	801151c <prvIdleTask+0x14>
 8011596:	bf00      	nop
 8011598:	20013688 	.word	0x20013688
 801159c:	200136f8 	.word	0x200136f8
 80115a0:	20013684 	.word	0x20013684
 80115a4:	20013224 	.word	0x20013224

080115a8 <xTaskIncrementTick.part.0>:
BaseType_t xTaskIncrementTick( void )
 80115a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 80115ac:	4b47      	ldr	r3, [pc, #284]	; (80116cc <xTaskIncrementTick.part.0+0x124>)
 80115ae:	681e      	ldr	r6, [r3, #0]
 80115b0:	3601      	adds	r6, #1
BaseType_t xTaskIncrementTick( void )
 80115b2:	b083      	sub	sp, #12
		xTickCount = xConstTickCount;
 80115b4:	601e      	str	r6, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 80115b6:	2e00      	cmp	r6, #0
 80115b8:	d040      	beq.n	801163c <xTaskIncrementTick.part.0+0x94>
 80115ba:	f8df b124 	ldr.w	fp, [pc, #292]	; 80116e0 <xTaskIncrementTick.part.0+0x138>
		if( xConstTickCount >= xNextTaskUnblockTime )
 80115be:	f8db 3000 	ldr.w	r3, [fp]
 80115c2:	429e      	cmp	r6, r3
 80115c4:	d347      	bcc.n	8011656 <xTaskIncrementTick.part.0+0xae>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 80115c6:	4f42      	ldr	r7, [pc, #264]	; (80116d0 <xTaskIncrementTick.part.0+0x128>)
 80115c8:	f8df 9118 	ldr.w	r9, [pc, #280]	; 80116e4 <xTaskIncrementTick.part.0+0x13c>
 80115cc:	683b      	ldr	r3, [r7, #0]
 80115ce:	f8df a118 	ldr.w	sl, [pc, #280]	; 80116e8 <xTaskIncrementTick.part.0+0x140>
 80115d2:	681d      	ldr	r5, [r3, #0]
 80115d4:	2d00      	cmp	r5, #0
 80115d6:	d073      	beq.n	80116c0 <xTaskIncrementTick.part.0+0x118>
					prvAddTaskToReadyList( pxTCB );
 80115d8:	f8df 8110 	ldr.w	r8, [pc, #272]	; 80116ec <xTaskIncrementTick.part.0+0x144>
BaseType_t xSwitchRequired = pdFALSE;
 80115dc:	2500      	movs	r5, #0
 80115de:	e022      	b.n	8011626 <xTaskIncrementTick.part.0+0x7e>
 80115e0:	9101      	str	r1, [sp, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 80115e2:	f7fe fc6f 	bl	800fec4 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 80115e6:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 80115e8:	9901      	ldr	r1, [sp, #4]
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 80115ea:	f104 0018 	add.w	r0, r4, #24
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 80115ee:	b113      	cbz	r3, 80115f6 <xTaskIncrementTick.part.0+0x4e>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 80115f0:	f7fe fc68 	bl	800fec4 <uxListRemove>
 80115f4:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 80115f6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80115f8:	f8d8 2000 	ldr.w	r2, [r8]
 80115fc:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 8011600:	4293      	cmp	r3, r2
 8011602:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 8011606:	bf88      	it	hi
 8011608:	f8c8 3000 	strhi.w	r3, [r8]
 801160c:	f7fe fc32 	bl	800fe74 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8011610:	f8da 2000 	ldr.w	r2, [sl]
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8011614:	683b      	ldr	r3, [r7, #0]
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8011616:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8011618:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 801161a:	681b      	ldr	r3, [r3, #0]
							xSwitchRequired = pdTRUE;
 801161c:	4291      	cmp	r1, r2
 801161e:	bf28      	it	cs
 8011620:	2501      	movcs	r5, #1
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8011622:	2b00      	cmp	r3, #0
 8011624:	d04c      	beq.n	80116c0 <xTaskIncrementTick.part.0+0x118>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8011626:	683b      	ldr	r3, [r7, #0]
 8011628:	68db      	ldr	r3, [r3, #12]
 801162a:	68dc      	ldr	r4, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 801162c:	6863      	ldr	r3, [r4, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 801162e:	1d21      	adds	r1, r4, #4
					if( xConstTickCount < xItemValue )
 8011630:	429e      	cmp	r6, r3
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8011632:	4608      	mov	r0, r1
					if( xConstTickCount < xItemValue )
 8011634:	d2d4      	bcs.n	80115e0 <xTaskIncrementTick.part.0+0x38>
						xNextTaskUnblockTime = xItemValue;
 8011636:	f8cb 3000 	str.w	r3, [fp]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 801163a:	e011      	b.n	8011660 <xTaskIncrementTick.part.0+0xb8>
			taskSWITCH_DELAYED_LISTS();
 801163c:	4b24      	ldr	r3, [pc, #144]	; (80116d0 <xTaskIncrementTick.part.0+0x128>)
 801163e:	681a      	ldr	r2, [r3, #0]
 8011640:	6812      	ldr	r2, [r2, #0]
 8011642:	b30a      	cbz	r2, 8011688 <xTaskIncrementTick.part.0+0xe0>
 8011644:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011648:	f383 8811 	msr	BASEPRI, r3
 801164c:	f3bf 8f6f 	isb	sy
 8011650:	f3bf 8f4f 	dsb	sy
 8011654:	e7fe      	b.n	8011654 <xTaskIncrementTick.part.0+0xac>
 8011656:	f8df 908c 	ldr.w	r9, [pc, #140]	; 80116e4 <xTaskIncrementTick.part.0+0x13c>
 801165a:	f8df a08c 	ldr.w	sl, [pc, #140]	; 80116e8 <xTaskIncrementTick.part.0+0x140>
BaseType_t xSwitchRequired = pdFALSE;
 801165e:	2500      	movs	r5, #0
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 8011660:	f8da 3000 	ldr.w	r3, [sl]
			if( xYieldPending != pdFALSE )
 8011664:	491b      	ldr	r1, [pc, #108]	; (80116d4 <xTaskIncrementTick.part.0+0x12c>)
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 8011666:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011668:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 801166c:	009b      	lsls	r3, r3, #2
 801166e:	f859 2003 	ldr.w	r2, [r9, r3]
			if( xYieldPending != pdFALSE )
 8011672:	680b      	ldr	r3, [r1, #0]
				xSwitchRequired = pdTRUE;
 8011674:	2a02      	cmp	r2, #2
 8011676:	bf28      	it	cs
 8011678:	2501      	movcs	r5, #1
				xSwitchRequired = pdTRUE;
 801167a:	2b00      	cmp	r3, #0
}
 801167c:	bf0c      	ite	eq
 801167e:	4628      	moveq	r0, r5
 8011680:	2001      	movne	r0, #1
 8011682:	b003      	add	sp, #12
 8011684:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			taskSWITCH_DELAYED_LISTS();
 8011688:	4a13      	ldr	r2, [pc, #76]	; (80116d8 <xTaskIncrementTick.part.0+0x130>)
 801168a:	6818      	ldr	r0, [r3, #0]
 801168c:	6811      	ldr	r1, [r2, #0]
 801168e:	6019      	str	r1, [r3, #0]
 8011690:	4912      	ldr	r1, [pc, #72]	; (80116dc <xTaskIncrementTick.part.0+0x134>)
 8011692:	6010      	str	r0, [r2, #0]
 8011694:	680a      	ldr	r2, [r1, #0]
 8011696:	3201      	adds	r2, #1
 8011698:	600a      	str	r2, [r1, #0]

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 801169a:	681a      	ldr	r2, [r3, #0]
 801169c:	6812      	ldr	r2, [r2, #0]
 801169e:	b932      	cbnz	r2, 80116ae <xTaskIncrementTick.part.0+0x106>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
 80116a0:	f8df b03c 	ldr.w	fp, [pc, #60]	; 80116e0 <xTaskIncrementTick.part.0+0x138>
 80116a4:	f04f 33ff 	mov.w	r3, #4294967295
 80116a8:	f8cb 3000 	str.w	r3, [fp]
 80116ac:	e787      	b.n	80115be <xTaskIncrementTick.part.0+0x16>
	{
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80116ae:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 80116b0:	f8df b02c 	ldr.w	fp, [pc, #44]	; 80116e0 <xTaskIncrementTick.part.0+0x138>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80116b4:	68db      	ldr	r3, [r3, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 80116b6:	68db      	ldr	r3, [r3, #12]
 80116b8:	685b      	ldr	r3, [r3, #4]
 80116ba:	f8cb 3000 	str.w	r3, [fp]
	}
}
 80116be:	e77e      	b.n	80115be <xTaskIncrementTick.part.0+0x16>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80116c0:	f04f 33ff 	mov.w	r3, #4294967295
 80116c4:	f8cb 3000 	str.w	r3, [fp]
					break;
 80116c8:	e7ca      	b.n	8011660 <xTaskIncrementTick.part.0+0xb8>
 80116ca:	bf00      	nop
 80116cc:	2001370c 	.word	0x2001370c
 80116d0:	2001321c 	.word	0x2001321c
 80116d4:	20013710 	.word	0x20013710
 80116d8:	20013220 	.word	0x20013220
 80116dc:	200136c4 	.word	0x200136c4
 80116e0:	200136c0 	.word	0x200136c0
 80116e4:	20013224 	.word	0x20013224
 80116e8:	20013218 	.word	0x20013218
 80116ec:	20013694 	.word	0x20013694

080116f0 <xTaskResumeAll.part.0>:
BaseType_t xTaskResumeAll( void )
 80116f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		--uxSchedulerSuspended;
 80116f4:	4d41      	ldr	r5, [pc, #260]	; (80117fc <xTaskResumeAll.part.0+0x10c>)
BaseType_t xTaskResumeAll( void )
 80116f6:	b083      	sub	sp, #12
	taskENTER_CRITICAL();
 80116f8:	f7fe fc5c 	bl	800ffb4 <vPortEnterCritical>
		--uxSchedulerSuspended;
 80116fc:	682b      	ldr	r3, [r5, #0]
 80116fe:	3b01      	subs	r3, #1
 8011700:	602b      	str	r3, [r5, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8011702:	682b      	ldr	r3, [r5, #0]
 8011704:	2b00      	cmp	r3, #0
 8011706:	d161      	bne.n	80117cc <xTaskResumeAll.part.0+0xdc>
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 8011708:	4b3d      	ldr	r3, [pc, #244]	; (8011800 <xTaskResumeAll.part.0+0x110>)
 801170a:	681b      	ldr	r3, [r3, #0]
 801170c:	2b00      	cmp	r3, #0
 801170e:	d05d      	beq.n	80117cc <xTaskResumeAll.part.0+0xdc>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8011710:	4e3c      	ldr	r6, [pc, #240]	; (8011804 <xTaskResumeAll.part.0+0x114>)
 8011712:	6833      	ldr	r3, [r6, #0]
 8011714:	2b00      	cmp	r3, #0
 8011716:	d06e      	beq.n	80117f6 <xTaskResumeAll.part.0+0x106>
 8011718:	4f3b      	ldr	r7, [pc, #236]	; (8011808 <xTaskResumeAll.part.0+0x118>)
 801171a:	f8df 90fc 	ldr.w	r9, [pc, #252]	; 8011818 <xTaskResumeAll.part.0+0x128>
 801171e:	f8df 80fc 	ldr.w	r8, [pc, #252]	; 801181c <xTaskResumeAll.part.0+0x12c>
 8011722:	f8df a0fc 	ldr.w	sl, [pc, #252]	; 8011820 <xTaskResumeAll.part.0+0x130>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8011726:	68f3      	ldr	r3, [r6, #12]
 8011728:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 801172a:	f104 0b04 	add.w	fp, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 801172e:	f104 0018 	add.w	r0, r4, #24
 8011732:	f7fe fbc7 	bl	800fec4 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8011736:	4658      	mov	r0, fp
 8011738:	f7fe fbc4 	bl	800fec4 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 801173c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 801173e:	683a      	ldr	r2, [r7, #0]
 8011740:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 8011744:	4293      	cmp	r3, r2
 8011746:	4659      	mov	r1, fp
 8011748:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 801174c:	bf88      	it	hi
 801174e:	603b      	strhi	r3, [r7, #0]
 8011750:	f7fe fb90 	bl	800fe74 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8011754:	f8d8 3000 	ldr.w	r3, [r8]
 8011758:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 801175a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801175c:	429a      	cmp	r2, r3
 801175e:	d33d      	bcc.n	80117dc <xTaskResumeAll.part.0+0xec>
						xYieldPending = pdTRUE;
 8011760:	2301      	movs	r3, #1
 8011762:	f8ca 3000 	str.w	r3, [sl]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8011766:	6833      	ldr	r3, [r6, #0]
 8011768:	2b00      	cmp	r3, #0
 801176a:	d1dc      	bne.n	8011726 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 801176c:	4b27      	ldr	r3, [pc, #156]	; (801180c <xTaskResumeAll.part.0+0x11c>)
 801176e:	681a      	ldr	r2, [r3, #0]
 8011770:	6812      	ldr	r2, [r2, #0]
 8011772:	2a00      	cmp	r2, #0
 8011774:	d03a      	beq.n	80117ec <xTaskResumeAll.part.0+0xfc>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8011776:	681a      	ldr	r2, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8011778:	4b25      	ldr	r3, [pc, #148]	; (8011810 <xTaskResumeAll.part.0+0x120>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 801177a:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 801177c:	68d2      	ldr	r2, [r2, #12]
 801177e:	6852      	ldr	r2, [r2, #4]
 8011780:	601a      	str	r2, [r3, #0]
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 8011782:	4e24      	ldr	r6, [pc, #144]	; (8011814 <xTaskResumeAll.part.0+0x124>)
 8011784:	6834      	ldr	r4, [r6, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 8011786:	b194      	cbz	r4, 80117ae <xTaskResumeAll.part.0+0xbe>
								xYieldPending = pdTRUE;
 8011788:	2701      	movs	r7, #1
 801178a:	e006      	b.n	801179a <xTaskResumeAll.part.0+0xaa>
 801178c:	f7ff ff0c 	bl	80115a8 <xTaskIncrementTick.part.0>
							if( xTaskIncrementTick() != pdFALSE )
 8011790:	b108      	cbz	r0, 8011796 <xTaskResumeAll.part.0+0xa6>
								xYieldPending = pdTRUE;
 8011792:	f8ca 7000 	str.w	r7, [sl]
						} while( xPendedCounts > ( TickType_t ) 0U );
 8011796:	3c01      	subs	r4, #1
 8011798:	d008      	beq.n	80117ac <xTaskResumeAll.part.0+0xbc>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 801179a:	682b      	ldr	r3, [r5, #0]
 801179c:	2b00      	cmp	r3, #0
 801179e:	d0f5      	beq.n	801178c <xTaskResumeAll.part.0+0x9c>
		++xPendedTicks;
 80117a0:	6833      	ldr	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 80117a2:	3c01      	subs	r4, #1
		++xPendedTicks;
 80117a4:	f103 0301 	add.w	r3, r3, #1
 80117a8:	6033      	str	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 80117aa:	d1f6      	bne.n	801179a <xTaskResumeAll.part.0+0xaa>
						xPendedTicks = 0;
 80117ac:	6034      	str	r4, [r6, #0]
				if( xYieldPending != pdFALSE )
 80117ae:	f8da 3000 	ldr.w	r3, [sl]
 80117b2:	b15b      	cbz	r3, 80117cc <xTaskResumeAll.part.0+0xdc>
					taskYIELD_IF_USING_PREEMPTION();
 80117b4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80117b8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80117bc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80117c0:	f3bf 8f4f 	dsb	sy
 80117c4:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 80117c8:	2001      	movs	r0, #1
 80117ca:	e000      	b.n	80117ce <xTaskResumeAll.part.0+0xde>
BaseType_t xAlreadyYielded = pdFALSE;
 80117cc:	2000      	movs	r0, #0
 80117ce:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 80117d0:	f7fe fc12 	bl	800fff8 <vPortExitCritical>
}
 80117d4:	9801      	ldr	r0, [sp, #4]
 80117d6:	b003      	add	sp, #12
 80117d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 80117dc:	6833      	ldr	r3, [r6, #0]
 80117de:	2b00      	cmp	r3, #0
 80117e0:	d1a1      	bne.n	8011726 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 80117e2:	4b0a      	ldr	r3, [pc, #40]	; (801180c <xTaskResumeAll.part.0+0x11c>)
 80117e4:	681a      	ldr	r2, [r3, #0]
 80117e6:	6812      	ldr	r2, [r2, #0]
 80117e8:	2a00      	cmp	r2, #0
 80117ea:	d1c4      	bne.n	8011776 <xTaskResumeAll.part.0+0x86>
		xNextTaskUnblockTime = portMAX_DELAY;
 80117ec:	4b08      	ldr	r3, [pc, #32]	; (8011810 <xTaskResumeAll.part.0+0x120>)
 80117ee:	f04f 32ff 	mov.w	r2, #4294967295
 80117f2:	601a      	str	r2, [r3, #0]
 80117f4:	e7c5      	b.n	8011782 <xTaskResumeAll.part.0+0x92>
 80117f6:	f8df a028 	ldr.w	sl, [pc, #40]	; 8011820 <xTaskResumeAll.part.0+0x130>
 80117fa:	e7c2      	b.n	8011782 <xTaskResumeAll.part.0+0x92>
 80117fc:	2001368c 	.word	0x2001368c
 8011800:	20013684 	.word	0x20013684
 8011804:	200136cc 	.word	0x200136cc
 8011808:	20013694 	.word	0x20013694
 801180c:	2001321c 	.word	0x2001321c
 8011810:	200136c0 	.word	0x200136c0
 8011814:	200136c8 	.word	0x200136c8
 8011818:	20013224 	.word	0x20013224
 801181c:	20013218 	.word	0x20013218
 8011820:	20013710 	.word	0x20013710

08011824 <xTaskCreateStatic>:
	{
 8011824:	b530      	push	{r4, r5, lr}
 8011826:	b087      	sub	sp, #28
 8011828:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 801182a:	b1c4      	cbz	r4, 801185e <xTaskCreateStatic+0x3a>
		configASSERT( pxTaskBuffer != NULL );
 801182c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801182e:	b16d      	cbz	r5, 801184c <xTaskCreateStatic+0x28>
			volatile size_t xSize = sizeof( StaticTask_t );
 8011830:	25ac      	movs	r5, #172	; 0xac
 8011832:	9505      	str	r5, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 8011834:	9d05      	ldr	r5, [sp, #20]
 8011836:	2dac      	cmp	r5, #172	; 0xac
 8011838:	d01a      	beq.n	8011870 <xTaskCreateStatic+0x4c>
 801183a:	f04f 0350 	mov.w	r3, #80	; 0x50
 801183e:	f383 8811 	msr	BASEPRI, r3
 8011842:	f3bf 8f6f 	isb	sy
 8011846:	f3bf 8f4f 	dsb	sy
 801184a:	e7fe      	b.n	801184a <xTaskCreateStatic+0x26>
 801184c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011850:	f383 8811 	msr	BASEPRI, r3
 8011854:	f3bf 8f6f 	isb	sy
 8011858:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 801185c:	e7fe      	b.n	801185c <xTaskCreateStatic+0x38>
 801185e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011862:	f383 8811 	msr	BASEPRI, r3
 8011866:	f3bf 8f6f 	isb	sy
 801186a:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 801186e:	e7fe      	b.n	801186e <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 8011870:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8011872:	632c      	str	r4, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 8011874:	2402      	movs	r4, #2
 8011876:	f885 40a9 	strb.w	r4, [r5, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 801187a:	ac04      	add	r4, sp, #16
 801187c:	e9cd 4501 	strd	r4, r5, [sp, #4]
 8011880:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8011882:	9400      	str	r4, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 8011884:	9c05      	ldr	r4, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8011886:	f7ff fda9 	bl	80113dc <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 801188a:	980c      	ldr	r0, [sp, #48]	; 0x30
 801188c:	f7ff fd1e 	bl	80112cc <prvAddNewTaskToReadyList>
	}
 8011890:	9804      	ldr	r0, [sp, #16]
 8011892:	b007      	add	sp, #28
 8011894:	bd30      	pop	{r4, r5, pc}
 8011896:	bf00      	nop

08011898 <xTaskCreate>:
	{
 8011898:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801189c:	4607      	mov	r7, r0
 801189e:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 80118a0:	0090      	lsls	r0, r2, #2
	{
 80118a2:	4615      	mov	r5, r2
 80118a4:	4688      	mov	r8, r1
 80118a6:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 80118a8:	f7fe f9b4 	bl	800fc14 <pvPortMalloc>
			if( pxStack != NULL )
 80118ac:	b1d8      	cbz	r0, 80118e6 <xTaskCreate+0x4e>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 80118ae:	4604      	mov	r4, r0
 80118b0:	20ac      	movs	r0, #172	; 0xac
 80118b2:	f7fe f9af 	bl	800fc14 <pvPortMalloc>
				if( pxNewTCB != NULL )
 80118b6:	4606      	mov	r6, r0
 80118b8:	b1d0      	cbz	r0, 80118f0 <xTaskCreate+0x58>
					pxNewTCB->pxStack = pxStack;
 80118ba:	6304      	str	r4, [r0, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 80118bc:	2400      	movs	r4, #0
 80118be:	f886 40a9 	strb.w	r4, [r6, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 80118c2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80118c4:	9401      	str	r4, [sp, #4]
 80118c6:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80118c8:	9602      	str	r6, [sp, #8]
 80118ca:	464b      	mov	r3, r9
 80118cc:	462a      	mov	r2, r5
 80118ce:	4641      	mov	r1, r8
 80118d0:	4638      	mov	r0, r7
 80118d2:	9400      	str	r4, [sp, #0]
 80118d4:	f7ff fd82 	bl	80113dc <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 80118d8:	4630      	mov	r0, r6
 80118da:	f7ff fcf7 	bl	80112cc <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 80118de:	2001      	movs	r0, #1
	}
 80118e0:	b005      	add	sp, #20
 80118e2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 80118e6:	f04f 30ff 	mov.w	r0, #4294967295
	}
 80118ea:	b005      	add	sp, #20
 80118ec:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 80118f0:	4620      	mov	r0, r4
 80118f2:	f7fe fa4b 	bl	800fd8c <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 80118f6:	f04f 30ff 	mov.w	r0, #4294967295
 80118fa:	e7f1      	b.n	80118e0 <xTaskCreate+0x48>

080118fc <vTaskDelay>:
	{
 80118fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 80118fe:	b950      	cbnz	r0, 8011916 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 8011900:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8011904:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8011908:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 801190c:	f3bf 8f4f 	dsb	sy
 8011910:	f3bf 8f6f 	isb	sy
	}
 8011914:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 8011916:	4d1e      	ldr	r5, [pc, #120]	; (8011990 <vTaskDelay+0x94>)
 8011918:	682b      	ldr	r3, [r5, #0]
 801191a:	b143      	cbz	r3, 801192e <vTaskDelay+0x32>
 801191c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011920:	f383 8811 	msr	BASEPRI, r3
 8011924:	f3bf 8f6f 	isb	sy
 8011928:	f3bf 8f4f 	dsb	sy
 801192c:	e7fe      	b.n	801192c <vTaskDelay+0x30>
	++uxSchedulerSuspended;
 801192e:	682b      	ldr	r3, [r5, #0]
 8011930:	3301      	adds	r3, #1
 8011932:	4604      	mov	r4, r0
 8011934:	602b      	str	r3, [r5, #0]
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 8011936:	4b17      	ldr	r3, [pc, #92]	; (8011994 <vTaskDelay+0x98>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8011938:	4e17      	ldr	r6, [pc, #92]	; (8011998 <vTaskDelay+0x9c>)
const TickType_t xConstTickCount = xTickCount;
 801193a:	681f      	ldr	r7, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 801193c:	6830      	ldr	r0, [r6, #0]
 801193e:	3004      	adds	r0, #4
 8011940:	f7fe fac0 	bl	800fec4 <uxListRemove>
			does not occur.  This may overflow but this doesn't matter, the
			kernel will manage it correctly. */
			xTimeToWake = xConstTickCount + xTicksToWait;

			/* The list item will be inserted in wake time order. */
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 8011944:	6833      	ldr	r3, [r6, #0]
 8011946:	19e4      	adds	r4, r4, r7
 8011948:	605c      	str	r4, [r3, #4]

			if( xTimeToWake < xConstTickCount )
 801194a:	d310      	bcc.n	801196e <vTaskDelay+0x72>
			{
				/* Wake time has overflowed.  Place this item in the overflow
				list. */
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 801194c:	4b13      	ldr	r3, [pc, #76]	; (801199c <vTaskDelay+0xa0>)
 801194e:	6818      	ldr	r0, [r3, #0]
 8011950:	6831      	ldr	r1, [r6, #0]
 8011952:	3104      	adds	r1, #4
 8011954:	f7fe fa9e 	bl	800fe94 <vListInsert>
	configASSERT( uxSchedulerSuspended );
 8011958:	682b      	ldr	r3, [r5, #0]
 801195a:	b9a3      	cbnz	r3, 8011986 <vTaskDelay+0x8a>
 801195c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011960:	f383 8811 	msr	BASEPRI, r3
 8011964:	f3bf 8f6f 	isb	sy
 8011968:	f3bf 8f4f 	dsb	sy
 801196c:	e7fe      	b.n	801196c <vTaskDelay+0x70>
			}
			else
			{
				/* The wake time has not overflowed, so the current block list
				is used. */
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 801196e:	4b0c      	ldr	r3, [pc, #48]	; (80119a0 <vTaskDelay+0xa4>)
 8011970:	6818      	ldr	r0, [r3, #0]
 8011972:	6831      	ldr	r1, [r6, #0]
 8011974:	3104      	adds	r1, #4
 8011976:	f7fe fa8d 	bl	800fe94 <vListInsert>

				/* If the task entering the blocked state was placed at the
				head of the list of blocked tasks then xNextTaskUnblockTime
				needs to be updated too. */
				if( xTimeToWake < xNextTaskUnblockTime )
 801197a:	4b0a      	ldr	r3, [pc, #40]	; (80119a4 <vTaskDelay+0xa8>)
 801197c:	681a      	ldr	r2, [r3, #0]
 801197e:	4294      	cmp	r4, r2
				{
					xNextTaskUnblockTime = xTimeToWake;
 8011980:	bf38      	it	cc
 8011982:	601c      	strcc	r4, [r3, #0]
 8011984:	e7e8      	b.n	8011958 <vTaskDelay+0x5c>
 8011986:	f7ff feb3 	bl	80116f0 <xTaskResumeAll.part.0>
		if( xAlreadyYielded == pdFALSE )
 801198a:	2800      	cmp	r0, #0
 801198c:	d0b8      	beq.n	8011900 <vTaskDelay+0x4>
	}
 801198e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8011990:	2001368c 	.word	0x2001368c
 8011994:	2001370c 	.word	0x2001370c
 8011998:	20013218 	.word	0x20013218
 801199c:	20013220 	.word	0x20013220
 80119a0:	2001321c 	.word	0x2001321c
 80119a4:	200136c0 	.word	0x200136c0

080119a8 <vTaskStartScheduler>:
{
 80119a8:	b530      	push	{r4, r5, lr}
 80119aa:	b08b      	sub	sp, #44	; 0x2c
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 80119ac:	aa07      	add	r2, sp, #28
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 80119ae:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 80119b0:	a906      	add	r1, sp, #24
 80119b2:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 80119b4:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 80119b8:	f7fe f90e 	bl	800fbd8 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 80119bc:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 80119c0:	9d05      	ldr	r5, [sp, #20]
		configASSERT( puxStackBuffer != NULL );
 80119c2:	b1bb      	cbz	r3, 80119f4 <vTaskStartScheduler+0x4c>
		configASSERT( pxTaskBuffer != NULL );
 80119c4:	b16d      	cbz	r5, 80119e2 <vTaskStartScheduler+0x3a>
			volatile size_t xSize = sizeof( StaticTask_t );
 80119c6:	21ac      	movs	r1, #172	; 0xac
 80119c8:	9109      	str	r1, [sp, #36]	; 0x24
			configASSERT( xSize == sizeof( TCB_t ) );
 80119ca:	9909      	ldr	r1, [sp, #36]	; 0x24
 80119cc:	29ac      	cmp	r1, #172	; 0xac
 80119ce:	d01a      	beq.n	8011a06 <vTaskStartScheduler+0x5e>
 80119d0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80119d4:	f383 8811 	msr	BASEPRI, r3
 80119d8:	f3bf 8f6f 	isb	sy
 80119dc:	f3bf 8f4f 	dsb	sy
 80119e0:	e7fe      	b.n	80119e0 <vTaskStartScheduler+0x38>
 80119e2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80119e6:	f383 8811 	msr	BASEPRI, r3
 80119ea:	f3bf 8f6f 	isb	sy
 80119ee:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 80119f2:	e7fe      	b.n	80119f2 <vTaskStartScheduler+0x4a>
 80119f4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80119f8:	f383 8811 	msr	BASEPRI, r3
 80119fc:	f3bf 8f6f 	isb	sy
 8011a00:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 8011a04:	e7fe      	b.n	8011a04 <vTaskStartScheduler+0x5c>
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 8011a06:	2102      	movs	r1, #2
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8011a08:	a808      	add	r0, sp, #32
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 8011a0a:	632b      	str	r3, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 8011a0c:	f885 10a9 	strb.w	r1, [r5, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8011a10:	4623      	mov	r3, r4
 8011a12:	e9cd 0501 	strd	r0, r5, [sp, #4]
 8011a16:	491b      	ldr	r1, [pc, #108]	; (8011a84 <vTaskStartScheduler+0xdc>)
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 8011a18:	9809      	ldr	r0, [sp, #36]	; 0x24
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8011a1a:	9400      	str	r4, [sp, #0]
 8011a1c:	481a      	ldr	r0, [pc, #104]	; (8011a88 <vTaskStartScheduler+0xe0>)
 8011a1e:	f7ff fcdd 	bl	80113dc <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8011a22:	4628      	mov	r0, r5
 8011a24:	f7ff fc52 	bl	80112cc <prvAddNewTaskToReadyList>
		return xReturn;
 8011a28:	9b08      	ldr	r3, [sp, #32]
		if( xIdleTaskHandle != NULL )
 8011a2a:	b1eb      	cbz	r3, 8011a68 <vTaskStartScheduler+0xc0>
			xReturn = xTimerCreateTimerTask();
 8011a2c:	f000 fc6e 	bl	801230c <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 8011a30:	2801      	cmp	r0, #1
 8011a32:	d11b      	bne.n	8011a6c <vTaskStartScheduler+0xc4>
 8011a34:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011a38:	f383 8811 	msr	BASEPRI, r3
 8011a3c:	f3bf 8f6f 	isb	sy
 8011a40:	f3bf 8f4f 	dsb	sy
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 8011a44:	4b11      	ldr	r3, [pc, #68]	; (8011a8c <vTaskStartScheduler+0xe4>)
 8011a46:	4a12      	ldr	r2, [pc, #72]	; (8011a90 <vTaskStartScheduler+0xe8>)
 8011a48:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = portMAX_DELAY;
 8011a4a:	4912      	ldr	r1, [pc, #72]	; (8011a94 <vTaskStartScheduler+0xec>)
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 8011a4c:	3358      	adds	r3, #88	; 0x58
 8011a4e:	6013      	str	r3, [r2, #0]
		xSchedulerRunning = pdTRUE;
 8011a50:	4a11      	ldr	r2, [pc, #68]	; (8011a98 <vTaskStartScheduler+0xf0>)
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 8011a52:	4b12      	ldr	r3, [pc, #72]	; (8011a9c <vTaskStartScheduler+0xf4>)
		xNextTaskUnblockTime = portMAX_DELAY;
 8011a54:	f04f 35ff 	mov.w	r5, #4294967295
 8011a58:	600d      	str	r5, [r1, #0]
		xSchedulerRunning = pdTRUE;
 8011a5a:	6010      	str	r0, [r2, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 8011a5c:	601c      	str	r4, [r3, #0]
}
 8011a5e:	b00b      	add	sp, #44	; 0x2c
 8011a60:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
		if( xPortStartScheduler() != pdFALSE )
 8011a64:	f7fe bb38 	b.w	80100d8 <xPortStartScheduler>
}
 8011a68:	b00b      	add	sp, #44	; 0x2c
 8011a6a:	bd30      	pop	{r4, r5, pc}
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 8011a6c:	3001      	adds	r0, #1
 8011a6e:	d1fb      	bne.n	8011a68 <vTaskStartScheduler+0xc0>
 8011a70:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011a74:	f383 8811 	msr	BASEPRI, r3
 8011a78:	f3bf 8f6f 	isb	sy
 8011a7c:	f3bf 8f4f 	dsb	sy
 8011a80:	e7fe      	b.n	8011a80 <vTaskStartScheduler+0xd8>
 8011a82:	bf00      	nop
 8011a84:	08031398 	.word	0x08031398
 8011a88:	08011509 	.word	0x08011509
 8011a8c:	20013218 	.word	0x20013218
 8011a90:	20000164 	.word	0x20000164
 8011a94:	200136c0 	.word	0x200136c0
 8011a98:	200136e0 	.word	0x200136e0
 8011a9c:	2001370c 	.word	0x2001370c

08011aa0 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 8011aa0:	4a02      	ldr	r2, [pc, #8]	; (8011aac <vTaskSuspendAll+0xc>)
 8011aa2:	6813      	ldr	r3, [r2, #0]
 8011aa4:	3301      	adds	r3, #1
 8011aa6:	6013      	str	r3, [r2, #0]
}
 8011aa8:	4770      	bx	lr
 8011aaa:	bf00      	nop
 8011aac:	2001368c 	.word	0x2001368c

08011ab0 <xTaskResumeAll>:
	configASSERT( uxSchedulerSuspended );
 8011ab0:	4b06      	ldr	r3, [pc, #24]	; (8011acc <xTaskResumeAll+0x1c>)
 8011ab2:	681b      	ldr	r3, [r3, #0]
 8011ab4:	b943      	cbnz	r3, 8011ac8 <xTaskResumeAll+0x18>
 8011ab6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011aba:	f383 8811 	msr	BASEPRI, r3
 8011abe:	f3bf 8f6f 	isb	sy
 8011ac2:	f3bf 8f4f 	dsb	sy
 8011ac6:	e7fe      	b.n	8011ac6 <xTaskResumeAll+0x16>
 8011ac8:	f7ff be12 	b.w	80116f0 <xTaskResumeAll.part.0>
 8011acc:	2001368c 	.word	0x2001368c

08011ad0 <xTaskGetTickCount>:
		xTicks = xTickCount;
 8011ad0:	4b01      	ldr	r3, [pc, #4]	; (8011ad8 <xTaskGetTickCount+0x8>)
 8011ad2:	6818      	ldr	r0, [r3, #0]
}
 8011ad4:	4770      	bx	lr
 8011ad6:	bf00      	nop
 8011ad8:	2001370c 	.word	0x2001370c

08011adc <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8011adc:	4b05      	ldr	r3, [pc, #20]	; (8011af4 <xTaskIncrementTick+0x18>)
 8011ade:	681b      	ldr	r3, [r3, #0]
 8011ae0:	b90b      	cbnz	r3, 8011ae6 <xTaskIncrementTick+0xa>
 8011ae2:	f7ff bd61 	b.w	80115a8 <xTaskIncrementTick.part.0>
		++xPendedTicks;
 8011ae6:	4a04      	ldr	r2, [pc, #16]	; (8011af8 <xTaskIncrementTick+0x1c>)
 8011ae8:	6813      	ldr	r3, [r2, #0]
 8011aea:	3301      	adds	r3, #1
}
 8011aec:	2000      	movs	r0, #0
		++xPendedTicks;
 8011aee:	6013      	str	r3, [r2, #0]
}
 8011af0:	4770      	bx	lr
 8011af2:	bf00      	nop
 8011af4:	2001368c 	.word	0x2001368c
 8011af8:	200136c8 	.word	0x200136c8

08011afc <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8011afc:	4b1f      	ldr	r3, [pc, #124]	; (8011b7c <vTaskSwitchContext+0x80>)
 8011afe:	681b      	ldr	r3, [r3, #0]
 8011b00:	b11b      	cbz	r3, 8011b0a <vTaskSwitchContext+0xe>
		xYieldPending = pdTRUE;
 8011b02:	4b1f      	ldr	r3, [pc, #124]	; (8011b80 <vTaskSwitchContext+0x84>)
 8011b04:	2201      	movs	r2, #1
 8011b06:	601a      	str	r2, [r3, #0]
 8011b08:	4770      	bx	lr
		xYieldPending = pdFALSE;
 8011b0a:	4a1d      	ldr	r2, [pc, #116]	; (8011b80 <vTaskSwitchContext+0x84>)
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8011b0c:	491d      	ldr	r1, [pc, #116]	; (8011b84 <vTaskSwitchContext+0x88>)
{
 8011b0e:	b410      	push	{r4}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8011b10:	4c1d      	ldr	r4, [pc, #116]	; (8011b88 <vTaskSwitchContext+0x8c>)
		xYieldPending = pdFALSE;
 8011b12:	6013      	str	r3, [r2, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8011b14:	6823      	ldr	r3, [r4, #0]
 8011b16:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 8011b1a:	0092      	lsls	r2, r2, #2
 8011b1c:	0098      	lsls	r0, r3, #2
 8011b1e:	588a      	ldr	r2, [r1, r2]
 8011b20:	b942      	cbnz	r2, 8011b34 <vTaskSwitchContext+0x38>
 8011b22:	b313      	cbz	r3, 8011b6a <vTaskSwitchContext+0x6e>
 8011b24:	3b01      	subs	r3, #1
 8011b26:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 8011b2a:	0098      	lsls	r0, r3, #2
 8011b2c:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8011b30:	2a00      	cmp	r2, #0
 8011b32:	d0f6      	beq.n	8011b22 <vTaskSwitchContext+0x26>
 8011b34:	4418      	add	r0, r3
 8011b36:	eb01 0c80 	add.w	ip, r1, r0, lsl #2
 8011b3a:	4662      	mov	r2, ip
 8011b3c:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8011b40:	6849      	ldr	r1, [r1, #4]
 8011b42:	f8cc 1004 	str.w	r1, [ip, #4]
 8011b46:	3208      	adds	r2, #8
 8011b48:	4291      	cmp	r1, r2
 8011b4a:	bf08      	it	eq
 8011b4c:	6849      	ldreq	r1, [r1, #4]
 8011b4e:	4a0f      	ldr	r2, [pc, #60]	; (8011b8c <vTaskSwitchContext+0x90>)
 8011b50:	bf08      	it	eq
 8011b52:	f8cc 1004 	streq.w	r1, [ip, #4]
 8011b56:	68c9      	ldr	r1, [r1, #12]
 8011b58:	6011      	str	r1, [r2, #0]
 8011b5a:	6023      	str	r3, [r4, #0]
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 8011b5c:	6813      	ldr	r3, [r2, #0]
 8011b5e:	4a0c      	ldr	r2, [pc, #48]	; (8011b90 <vTaskSwitchContext+0x94>)
}
 8011b60:	f85d 4b04 	ldr.w	r4, [sp], #4
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 8011b64:	3358      	adds	r3, #88	; 0x58
 8011b66:	6013      	str	r3, [r2, #0]
}
 8011b68:	4770      	bx	lr
 8011b6a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011b6e:	f383 8811 	msr	BASEPRI, r3
 8011b72:	f3bf 8f6f 	isb	sy
 8011b76:	f3bf 8f4f 	dsb	sy
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8011b7a:	e7fe      	b.n	8011b7a <vTaskSwitchContext+0x7e>
 8011b7c:	2001368c 	.word	0x2001368c
 8011b80:	20013710 	.word	0x20013710
 8011b84:	20013224 	.word	0x20013224
 8011b88:	20013694 	.word	0x20013694
 8011b8c:	20013218 	.word	0x20013218
 8011b90:	20000164 	.word	0x20000164

08011b94 <vTaskPlaceOnEventList>:
	configASSERT( pxEventList );
 8011b94:	b1d0      	cbz	r0, 8011bcc <vTaskPlaceOnEventList+0x38>
{
 8011b96:	b570      	push	{r4, r5, r6, lr}
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8011b98:	4d1a      	ldr	r5, [pc, #104]	; (8011c04 <vTaskPlaceOnEventList+0x70>)
 8011b9a:	460c      	mov	r4, r1
 8011b9c:	6829      	ldr	r1, [r5, #0]
 8011b9e:	3118      	adds	r1, #24
 8011ba0:	f7fe f978 	bl	800fe94 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 8011ba4:	4b18      	ldr	r3, [pc, #96]	; (8011c08 <vTaskPlaceOnEventList+0x74>)
 8011ba6:	681e      	ldr	r6, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8011ba8:	6828      	ldr	r0, [r5, #0]
 8011baa:	3004      	adds	r0, #4
 8011bac:	f7fe f98a 	bl	800fec4 <uxListRemove>
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 8011bb0:	1c63      	adds	r3, r4, #1
 8011bb2:	d014      	beq.n	8011bde <vTaskPlaceOnEventList+0x4a>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 8011bb4:	682b      	ldr	r3, [r5, #0]
 8011bb6:	19a4      	adds	r4, r4, r6
 8011bb8:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 8011bba:	d317      	bcc.n	8011bec <vTaskPlaceOnEventList+0x58>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8011bbc:	4b13      	ldr	r3, [pc, #76]	; (8011c0c <vTaskPlaceOnEventList+0x78>)
 8011bbe:	6818      	ldr	r0, [r3, #0]
 8011bc0:	6829      	ldr	r1, [r5, #0]
}
 8011bc2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8011bc6:	3104      	adds	r1, #4
 8011bc8:	f7fe b964 	b.w	800fe94 <vListInsert>
 8011bcc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011bd0:	f383 8811 	msr	BASEPRI, r3
 8011bd4:	f3bf 8f6f 	isb	sy
 8011bd8:	f3bf 8f4f 	dsb	sy
	configASSERT( pxEventList );
 8011bdc:	e7fe      	b.n	8011bdc <vTaskPlaceOnEventList+0x48>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8011bde:	6829      	ldr	r1, [r5, #0]
 8011be0:	480b      	ldr	r0, [pc, #44]	; (8011c10 <vTaskPlaceOnEventList+0x7c>)
}
 8011be2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8011be6:	3104      	adds	r1, #4
 8011be8:	f7fe b944 	b.w	800fe74 <vListInsertEnd>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8011bec:	4b09      	ldr	r3, [pc, #36]	; (8011c14 <vTaskPlaceOnEventList+0x80>)
 8011bee:	6818      	ldr	r0, [r3, #0]
 8011bf0:	6829      	ldr	r1, [r5, #0]
 8011bf2:	3104      	adds	r1, #4
 8011bf4:	f7fe f94e 	bl	800fe94 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 8011bf8:	4b07      	ldr	r3, [pc, #28]	; (8011c18 <vTaskPlaceOnEventList+0x84>)
 8011bfa:	681a      	ldr	r2, [r3, #0]
 8011bfc:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 8011bfe:	bf38      	it	cc
 8011c00:	601c      	strcc	r4, [r3, #0]
}
 8011c02:	bd70      	pop	{r4, r5, r6, pc}
 8011c04:	20013218 	.word	0x20013218
 8011c08:	2001370c 	.word	0x2001370c
 8011c0c:	20013220 	.word	0x20013220
 8011c10:	200136e4 	.word	0x200136e4
 8011c14:	2001321c 	.word	0x2001321c
 8011c18:	200136c0 	.word	0x200136c0

08011c1c <vTaskPlaceOnEventListRestricted>:
		configASSERT( pxEventList );
 8011c1c:	b330      	cbz	r0, 8011c6c <vTaskPlaceOnEventListRestricted+0x50>
	{
 8011c1e:	b570      	push	{r4, r5, r6, lr}
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8011c20:	4e1d      	ldr	r6, [pc, #116]	; (8011c98 <vTaskPlaceOnEventListRestricted+0x7c>)
 8011c22:	460c      	mov	r4, r1
 8011c24:	6831      	ldr	r1, [r6, #0]
 8011c26:	4615      	mov	r5, r2
 8011c28:	3118      	adds	r1, #24
 8011c2a:	f7fe f923 	bl	800fe74 <vListInsertEnd>
const TickType_t xConstTickCount = xTickCount;
 8011c2e:	4b1b      	ldr	r3, [pc, #108]	; (8011c9c <vTaskPlaceOnEventListRestricted+0x80>)
		if( xWaitIndefinitely != pdFALSE )
 8011c30:	b985      	cbnz	r5, 8011c54 <vTaskPlaceOnEventListRestricted+0x38>
const TickType_t xConstTickCount = xTickCount;
 8011c32:	681d      	ldr	r5, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8011c34:	6830      	ldr	r0, [r6, #0]
 8011c36:	3004      	adds	r0, #4
 8011c38:	f7fe f944 	bl	800fec4 <uxListRemove>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 8011c3c:	6833      	ldr	r3, [r6, #0]
 8011c3e:	1964      	adds	r4, r4, r5
 8011c40:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 8011c42:	d31c      	bcc.n	8011c7e <vTaskPlaceOnEventListRestricted+0x62>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8011c44:	4b16      	ldr	r3, [pc, #88]	; (8011ca0 <vTaskPlaceOnEventListRestricted+0x84>)
 8011c46:	6818      	ldr	r0, [r3, #0]
 8011c48:	6831      	ldr	r1, [r6, #0]
	}
 8011c4a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8011c4e:	3104      	adds	r1, #4
 8011c50:	f7fe b920 	b.w	800fe94 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 8011c54:	681b      	ldr	r3, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8011c56:	6830      	ldr	r0, [r6, #0]
 8011c58:	3004      	adds	r0, #4
 8011c5a:	f7fe f933 	bl	800fec4 <uxListRemove>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8011c5e:	6831      	ldr	r1, [r6, #0]
 8011c60:	4810      	ldr	r0, [pc, #64]	; (8011ca4 <vTaskPlaceOnEventListRestricted+0x88>)
	}
 8011c62:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8011c66:	3104      	adds	r1, #4
 8011c68:	f7fe b904 	b.w	800fe74 <vListInsertEnd>
 8011c6c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011c70:	f383 8811 	msr	BASEPRI, r3
 8011c74:	f3bf 8f6f 	isb	sy
 8011c78:	f3bf 8f4f 	dsb	sy
		configASSERT( pxEventList );
 8011c7c:	e7fe      	b.n	8011c7c <vTaskPlaceOnEventListRestricted+0x60>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8011c7e:	4b0a      	ldr	r3, [pc, #40]	; (8011ca8 <vTaskPlaceOnEventListRestricted+0x8c>)
 8011c80:	6818      	ldr	r0, [r3, #0]
 8011c82:	6831      	ldr	r1, [r6, #0]
 8011c84:	3104      	adds	r1, #4
 8011c86:	f7fe f905 	bl	800fe94 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 8011c8a:	4b08      	ldr	r3, [pc, #32]	; (8011cac <vTaskPlaceOnEventListRestricted+0x90>)
 8011c8c:	681a      	ldr	r2, [r3, #0]
 8011c8e:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 8011c90:	bf38      	it	cc
 8011c92:	601c      	strcc	r4, [r3, #0]
	}
 8011c94:	bd70      	pop	{r4, r5, r6, pc}
 8011c96:	bf00      	nop
 8011c98:	20013218 	.word	0x20013218
 8011c9c:	2001370c 	.word	0x2001370c
 8011ca0:	20013220 	.word	0x20013220
 8011ca4:	200136e4 	.word	0x200136e4
 8011ca8:	2001321c 	.word	0x2001321c
 8011cac:	200136c0 	.word	0x200136c0

08011cb0 <xTaskRemoveFromEventList>:
{
 8011cb0:	b530      	push	{r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8011cb2:	68c3      	ldr	r3, [r0, #12]
 8011cb4:	68dc      	ldr	r4, [r3, #12]
{
 8011cb6:	b083      	sub	sp, #12
	configASSERT( pxUnblockedTCB );
 8011cb8:	2c00      	cmp	r4, #0
 8011cba:	d02b      	beq.n	8011d14 <xTaskRemoveFromEventList+0x64>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 8011cbc:	f104 0518 	add.w	r5, r4, #24
 8011cc0:	4628      	mov	r0, r5
 8011cc2:	f7fe f8ff 	bl	800fec4 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8011cc6:	4b18      	ldr	r3, [pc, #96]	; (8011d28 <xTaskRemoveFromEventList+0x78>)
 8011cc8:	681b      	ldr	r3, [r3, #0]
 8011cca:	b17b      	cbz	r3, 8011cec <xTaskRemoveFromEventList+0x3c>
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 8011ccc:	4817      	ldr	r0, [pc, #92]	; (8011d2c <xTaskRemoveFromEventList+0x7c>)
 8011cce:	4629      	mov	r1, r5
 8011cd0:	f7fe f8d0 	bl	800fe74 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 8011cd4:	4b16      	ldr	r3, [pc, #88]	; (8011d30 <xTaskRemoveFromEventList+0x80>)
 8011cd6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8011cd8:	681b      	ldr	r3, [r3, #0]
 8011cda:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011cdc:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 8011cde:	bf85      	ittet	hi
 8011ce0:	4b14      	ldrhi	r3, [pc, #80]	; (8011d34 <xTaskRemoveFromEventList+0x84>)
 8011ce2:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 8011ce4:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 8011ce6:	6018      	strhi	r0, [r3, #0]
}
 8011ce8:	b003      	add	sp, #12
 8011cea:	bd30      	pop	{r4, r5, pc}
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 8011cec:	1d21      	adds	r1, r4, #4
 8011cee:	4608      	mov	r0, r1
 8011cf0:	9101      	str	r1, [sp, #4]
 8011cf2:	f7fe f8e7 	bl	800fec4 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 8011cf6:	4a10      	ldr	r2, [pc, #64]	; (8011d38 <xTaskRemoveFromEventList+0x88>)
 8011cf8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8011cfa:	6810      	ldr	r0, [r2, #0]
 8011cfc:	9901      	ldr	r1, [sp, #4]
 8011cfe:	4283      	cmp	r3, r0
 8011d00:	480e      	ldr	r0, [pc, #56]	; (8011d3c <xTaskRemoveFromEventList+0x8c>)
 8011d02:	bf88      	it	hi
 8011d04:	6013      	strhi	r3, [r2, #0]
 8011d06:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8011d0a:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 8011d0e:	f7fe f8b1 	bl	800fe74 <vListInsertEnd>
 8011d12:	e7df      	b.n	8011cd4 <xTaskRemoveFromEventList+0x24>
 8011d14:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011d18:	f383 8811 	msr	BASEPRI, r3
 8011d1c:	f3bf 8f6f 	isb	sy
 8011d20:	f3bf 8f4f 	dsb	sy
	configASSERT( pxUnblockedTCB );
 8011d24:	e7fe      	b.n	8011d24 <xTaskRemoveFromEventList+0x74>
 8011d26:	bf00      	nop
 8011d28:	2001368c 	.word	0x2001368c
 8011d2c:	200136cc 	.word	0x200136cc
 8011d30:	20013218 	.word	0x20013218
 8011d34:	20013710 	.word	0x20013710
 8011d38:	20013694 	.word	0x20013694
 8011d3c:	20013224 	.word	0x20013224

08011d40 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 8011d40:	4a03      	ldr	r2, [pc, #12]	; (8011d50 <vTaskInternalSetTimeOutState+0x10>)
	pxTimeOut->xTimeOnEntering = xTickCount;
 8011d42:	4b04      	ldr	r3, [pc, #16]	; (8011d54 <vTaskInternalSetTimeOutState+0x14>)
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 8011d44:	6812      	ldr	r2, [r2, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 8011d46:	681b      	ldr	r3, [r3, #0]
 8011d48:	e9c0 2300 	strd	r2, r3, [r0]
}
 8011d4c:	4770      	bx	lr
 8011d4e:	bf00      	nop
 8011d50:	200136c4 	.word	0x200136c4
 8011d54:	2001370c 	.word	0x2001370c

08011d58 <xTaskCheckForTimeOut>:
	configASSERT( pxTimeOut );
 8011d58:	b328      	cbz	r0, 8011da6 <xTaskCheckForTimeOut+0x4e>
{
 8011d5a:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011d5c:	460d      	mov	r5, r1
 8011d5e:	b083      	sub	sp, #12
	configASSERT( pxTicksToWait );
 8011d60:	b1c1      	cbz	r1, 8011d94 <xTaskCheckForTimeOut+0x3c>
 8011d62:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 8011d64:	f7fe f926 	bl	800ffb4 <vPortEnterCritical>
			if( *pxTicksToWait == portMAX_DELAY )
 8011d68:	682b      	ldr	r3, [r5, #0]
		const TickType_t xConstTickCount = xTickCount;
 8011d6a:	4a1d      	ldr	r2, [pc, #116]	; (8011de0 <xTaskCheckForTimeOut+0x88>)
			if( *pxTicksToWait == portMAX_DELAY )
 8011d6c:	1c58      	adds	r0, r3, #1
		const TickType_t xConstTickCount = xTickCount;
 8011d6e:	6811      	ldr	r1, [r2, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 8011d70:	d030      	beq.n	8011dd4 <xTaskCheckForTimeOut+0x7c>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 8011d72:	f8df c070 	ldr.w	ip, [pc, #112]	; 8011de4 <xTaskCheckForTimeOut+0x8c>
 8011d76:	e9d4 6000 	ldrd	r6, r0, [r4]
 8011d7a:	f8dc 7000 	ldr.w	r7, [ip]
 8011d7e:	42be      	cmp	r6, r7
 8011d80:	d01a      	beq.n	8011db8 <xTaskCheckForTimeOut+0x60>
 8011d82:	4288      	cmp	r0, r1
 8011d84:	d818      	bhi.n	8011db8 <xTaskCheckForTimeOut+0x60>
			xReturn = pdTRUE;
 8011d86:	2001      	movs	r0, #1
 8011d88:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 8011d8a:	f7fe f935 	bl	800fff8 <vPortExitCritical>
}
 8011d8e:	9801      	ldr	r0, [sp, #4]
 8011d90:	b003      	add	sp, #12
 8011d92:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011d94:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011d98:	f383 8811 	msr	BASEPRI, r3
 8011d9c:	f3bf 8f6f 	isb	sy
 8011da0:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTicksToWait );
 8011da4:	e7fe      	b.n	8011da4 <xTaskCheckForTimeOut+0x4c>
 8011da6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011daa:	f383 8811 	msr	BASEPRI, r3
 8011dae:	f3bf 8f6f 	isb	sy
 8011db2:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTimeOut );
 8011db6:	e7fe      	b.n	8011db6 <xTaskCheckForTimeOut+0x5e>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8011db8:	eba1 0e00 	sub.w	lr, r1, r0
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 8011dbc:	4573      	cmp	r3, lr
 8011dbe:	d90b      	bls.n	8011dd8 <xTaskCheckForTimeOut+0x80>
			*pxTicksToWait -= xElapsedTime;
 8011dc0:	1a5b      	subs	r3, r3, r1
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 8011dc2:	f8dc 1000 	ldr.w	r1, [ip]
	pxTimeOut->xTimeOnEntering = xTickCount;
 8011dc6:	6812      	ldr	r2, [r2, #0]
			*pxTicksToWait -= xElapsedTime;
 8011dc8:	4403      	add	r3, r0
 8011dca:	602b      	str	r3, [r5, #0]
			xReturn = pdFALSE;
 8011dcc:	2000      	movs	r0, #0
	pxTimeOut->xTimeOnEntering = xTickCount;
 8011dce:	e9c4 1200 	strd	r1, r2, [r4]
			xReturn = pdFALSE;
 8011dd2:	e7d9      	b.n	8011d88 <xTaskCheckForTimeOut+0x30>
				xReturn = pdFALSE;
 8011dd4:	2000      	movs	r0, #0
 8011dd6:	e7d7      	b.n	8011d88 <xTaskCheckForTimeOut+0x30>
			*pxTicksToWait = 0;
 8011dd8:	2300      	movs	r3, #0
 8011dda:	602b      	str	r3, [r5, #0]
			xReturn = pdTRUE;
 8011ddc:	2001      	movs	r0, #1
 8011dde:	e7d3      	b.n	8011d88 <xTaskCheckForTimeOut+0x30>
 8011de0:	2001370c 	.word	0x2001370c
 8011de4:	200136c4 	.word	0x200136c4

08011de8 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 8011de8:	4b01      	ldr	r3, [pc, #4]	; (8011df0 <vTaskMissedYield+0x8>)
 8011dea:	2201      	movs	r2, #1
 8011dec:	601a      	str	r2, [r3, #0]
}
 8011dee:	4770      	bx	lr
 8011df0:	20013710 	.word	0x20013710

08011df4 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 8011df4:	4b05      	ldr	r3, [pc, #20]	; (8011e0c <xTaskGetSchedulerState+0x18>)
 8011df6:	681b      	ldr	r3, [r3, #0]
 8011df8:	b133      	cbz	r3, 8011e08 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8011dfa:	4b05      	ldr	r3, [pc, #20]	; (8011e10 <xTaskGetSchedulerState+0x1c>)
 8011dfc:	6818      	ldr	r0, [r3, #0]
 8011dfe:	fab0 f080 	clz	r0, r0
 8011e02:	0940      	lsrs	r0, r0, #5
 8011e04:	0040      	lsls	r0, r0, #1
 8011e06:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 8011e08:	2001      	movs	r0, #1
	}
 8011e0a:	4770      	bx	lr
 8011e0c:	200136e0 	.word	0x200136e0
 8011e10:	2001368c 	.word	0x2001368c

08011e14 <xTaskPriorityInherit>:
	{
 8011e14:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 8011e16:	4604      	mov	r4, r0
	{
 8011e18:	b082      	sub	sp, #8
		if( pxMutexHolder != NULL )
 8011e1a:	b1c8      	cbz	r0, 8011e50 <xTaskPriorityInherit+0x3c>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 8011e1c:	4d1d      	ldr	r5, [pc, #116]	; (8011e94 <xTaskPriorityInherit+0x80>)
 8011e1e:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8011e20:	682a      	ldr	r2, [r5, #0]
 8011e22:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8011e24:	4293      	cmp	r3, r2
 8011e26:	d215      	bcs.n	8011e54 <xTaskPriorityInherit+0x40>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8011e28:	6982      	ldr	r2, [r0, #24]
 8011e2a:	2a00      	cmp	r2, #0
 8011e2c:	db04      	blt.n	8011e38 <xTaskPriorityInherit+0x24>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8011e2e:	682a      	ldr	r2, [r5, #0]
 8011e30:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8011e32:	f1c2 0238 	rsb	r2, r2, #56	; 0x38
 8011e36:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8011e38:	4e17      	ldr	r6, [pc, #92]	; (8011e98 <xTaskPriorityInherit+0x84>)
 8011e3a:	6962      	ldr	r2, [r4, #20]
 8011e3c:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8011e40:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 8011e44:	429a      	cmp	r2, r3
 8011e46:	d00e      	beq.n	8011e66 <xTaskPriorityInherit+0x52>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8011e48:	682b      	ldr	r3, [r5, #0]
 8011e4a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011e4c:	62e3      	str	r3, [r4, #44]	; 0x2c
				xReturn = pdTRUE;
 8011e4e:	2001      	movs	r0, #1
	}
 8011e50:	b002      	add	sp, #8
 8011e52:	bd70      	pop	{r4, r5, r6, pc}
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 8011e54:	682b      	ldr	r3, [r5, #0]
 8011e56:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8011e58:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011e5a:	4298      	cmp	r0, r3
 8011e5c:	bf2c      	ite	cs
 8011e5e:	2000      	movcs	r0, #0
 8011e60:	2001      	movcc	r0, #1
	}
 8011e62:	b002      	add	sp, #8
 8011e64:	bd70      	pop	{r4, r5, r6, pc}
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8011e66:	1d21      	adds	r1, r4, #4
 8011e68:	4608      	mov	r0, r1
 8011e6a:	9101      	str	r1, [sp, #4]
 8011e6c:	f7fe f82a 	bl	800fec4 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8011e70:	682a      	ldr	r2, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8011e72:	4b0a      	ldr	r3, [pc, #40]	; (8011e9c <xTaskPriorityInherit+0x88>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8011e74:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8011e76:	681a      	ldr	r2, [r3, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8011e78:	62e0      	str	r0, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8011e7a:	4290      	cmp	r0, r2
 8011e7c:	bf88      	it	hi
 8011e7e:	6018      	strhi	r0, [r3, #0]
 8011e80:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8011e84:	eb06 0080 	add.w	r0, r6, r0, lsl #2
 8011e88:	9901      	ldr	r1, [sp, #4]
 8011e8a:	f7fd fff3 	bl	800fe74 <vListInsertEnd>
				xReturn = pdTRUE;
 8011e8e:	2001      	movs	r0, #1
 8011e90:	e7de      	b.n	8011e50 <xTaskPriorityInherit+0x3c>
 8011e92:	bf00      	nop
 8011e94:	20013218 	.word	0x20013218
 8011e98:	20013224 	.word	0x20013224
 8011e9c:	20013694 	.word	0x20013694

08011ea0 <xTaskPriorityDisinherit>:
		if( pxMutexHolder != NULL )
 8011ea0:	b318      	cbz	r0, 8011eea <xTaskPriorityDisinherit+0x4a>
	{
 8011ea2:	b510      	push	{r4, lr}
			configASSERT( pxTCB == pxCurrentTCB );
 8011ea4:	4b1e      	ldr	r3, [pc, #120]	; (8011f20 <xTaskPriorityDisinherit+0x80>)
 8011ea6:	681c      	ldr	r4, [r3, #0]
 8011ea8:	4284      	cmp	r4, r0
	{
 8011eaa:	b082      	sub	sp, #8
			configASSERT( pxTCB == pxCurrentTCB );
 8011eac:	d008      	beq.n	8011ec0 <xTaskPriorityDisinherit+0x20>
 8011eae:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011eb2:	f383 8811 	msr	BASEPRI, r3
 8011eb6:	f3bf 8f6f 	isb	sy
 8011eba:	f3bf 8f4f 	dsb	sy
 8011ebe:	e7fe      	b.n	8011ebe <xTaskPriorityDisinherit+0x1e>
			configASSERT( pxTCB->uxMutexesHeld );
 8011ec0:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8011ec2:	b14b      	cbz	r3, 8011ed8 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8011ec4:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8011ec6:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 8011ec8:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8011eca:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 8011ecc:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8011ece:	d000      	beq.n	8011ed2 <xTaskPriorityDisinherit+0x32>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 8011ed0:	b16b      	cbz	r3, 8011eee <xTaskPriorityDisinherit+0x4e>
	BaseType_t xReturn = pdFALSE;
 8011ed2:	2000      	movs	r0, #0
	}
 8011ed4:	b002      	add	sp, #8
 8011ed6:	bd10      	pop	{r4, pc}
 8011ed8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011edc:	f383 8811 	msr	BASEPRI, r3
 8011ee0:	f3bf 8f6f 	isb	sy
 8011ee4:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 8011ee8:	e7fe      	b.n	8011ee8 <xTaskPriorityDisinherit+0x48>
	BaseType_t xReturn = pdFALSE;
 8011eea:	2000      	movs	r0, #0
	}
 8011eec:	4770      	bx	lr
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8011eee:	1d21      	adds	r1, r4, #4
 8011ef0:	4608      	mov	r0, r1
 8011ef2:	9101      	str	r1, [sp, #4]
 8011ef4:	f7fd ffe6 	bl	800fec4 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 8011ef8:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 8011efa:	4a0a      	ldr	r2, [pc, #40]	; (8011f24 <xTaskPriorityDisinherit+0x84>)
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 8011efc:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8011efe:	f1c3 0038 	rsb	r0, r3, #56	; 0x38
 8011f02:	61a0      	str	r0, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 8011f04:	6810      	ldr	r0, [r2, #0]
 8011f06:	9901      	ldr	r1, [sp, #4]
 8011f08:	4283      	cmp	r3, r0
 8011f0a:	4807      	ldr	r0, [pc, #28]	; (8011f28 <xTaskPriorityDisinherit+0x88>)
 8011f0c:	bf88      	it	hi
 8011f0e:	6013      	strhi	r3, [r2, #0]
 8011f10:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8011f14:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 8011f18:	f7fd ffac 	bl	800fe74 <vListInsertEnd>
					xReturn = pdTRUE;
 8011f1c:	2001      	movs	r0, #1
		return xReturn;
 8011f1e:	e7d9      	b.n	8011ed4 <xTaskPriorityDisinherit+0x34>
 8011f20:	20013218 	.word	0x20013218
 8011f24:	20013694 	.word	0x20013694
 8011f28:	20013224 	.word	0x20013224

08011f2c <vTaskPriorityDisinheritAfterTimeout>:
		if( pxMutexHolder != NULL )
 8011f2c:	2800      	cmp	r0, #0
 8011f2e:	d041      	beq.n	8011fb4 <vTaskPriorityDisinheritAfterTimeout+0x88>
	{
 8011f30:	b530      	push	{r4, r5, lr}
			configASSERT( pxTCB->uxMutexesHeld );
 8011f32:	6d03      	ldr	r3, [r0, #80]	; 0x50
	{
 8011f34:	b083      	sub	sp, #12
 8011f36:	4604      	mov	r4, r0
			configASSERT( pxTCB->uxMutexesHeld );
 8011f38:	b153      	cbz	r3, 8011f50 <vTaskPriorityDisinheritAfterTimeout+0x24>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 8011f3a:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
			if( pxTCB->uxPriority != uxPriorityToUse )
 8011f3c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8011f3e:	4281      	cmp	r1, r0
 8011f40:	bf38      	it	cc
 8011f42:	4601      	movcc	r1, r0
 8011f44:	428a      	cmp	r2, r1
 8011f46:	d001      	beq.n	8011f4c <vTaskPriorityDisinheritAfterTimeout+0x20>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 8011f48:	2b01      	cmp	r3, #1
 8011f4a:	d00a      	beq.n	8011f62 <vTaskPriorityDisinheritAfterTimeout+0x36>
	}
 8011f4c:	b003      	add	sp, #12
 8011f4e:	bd30      	pop	{r4, r5, pc}
 8011f50:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011f54:	f383 8811 	msr	BASEPRI, r3
 8011f58:	f3bf 8f6f 	isb	sy
 8011f5c:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 8011f60:	e7fe      	b.n	8011f60 <vTaskPriorityDisinheritAfterTimeout+0x34>
					configASSERT( pxTCB != pxCurrentTCB );
 8011f62:	4b19      	ldr	r3, [pc, #100]	; (8011fc8 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
 8011f64:	681b      	ldr	r3, [r3, #0]
 8011f66:	42a3      	cmp	r3, r4
 8011f68:	d025      	beq.n	8011fb6 <vTaskPriorityDisinheritAfterTimeout+0x8a>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8011f6a:	69a3      	ldr	r3, [r4, #24]
					pxTCB->uxPriority = uxPriorityToUse;
 8011f6c:	62e1      	str	r1, [r4, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8011f6e:	2b00      	cmp	r3, #0
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8011f70:	bfa8      	it	ge
 8011f72:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8011f76:	4d15      	ldr	r5, [pc, #84]	; (8011fcc <vTaskPriorityDisinheritAfterTimeout+0xa0>)
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8011f78:	bfa8      	it	ge
 8011f7a:	61a1      	strge	r1, [r4, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8011f7c:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8011f80:	6961      	ldr	r1, [r4, #20]
 8011f82:	eb05 0382 	add.w	r3, r5, r2, lsl #2
 8011f86:	4299      	cmp	r1, r3
 8011f88:	d1e0      	bne.n	8011f4c <vTaskPriorityDisinheritAfterTimeout+0x20>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8011f8a:	1d21      	adds	r1, r4, #4
 8011f8c:	4608      	mov	r0, r1
 8011f8e:	9101      	str	r1, [sp, #4]
 8011f90:	f7fd ff98 	bl	800fec4 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 8011f94:	4b0e      	ldr	r3, [pc, #56]	; (8011fd0 <vTaskPriorityDisinheritAfterTimeout+0xa4>)
 8011f96:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 8011f98:	681a      	ldr	r2, [r3, #0]
 8011f9a:	9901      	ldr	r1, [sp, #4]
 8011f9c:	4290      	cmp	r0, r2
 8011f9e:	bf88      	it	hi
 8011fa0:	6018      	strhi	r0, [r3, #0]
 8011fa2:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8011fa6:	eb05 0080 	add.w	r0, r5, r0, lsl #2
	}
 8011faa:	b003      	add	sp, #12
 8011fac:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 8011fb0:	f7fd bf60 	b.w	800fe74 <vListInsertEnd>
 8011fb4:	4770      	bx	lr
 8011fb6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011fba:	f383 8811 	msr	BASEPRI, r3
 8011fbe:	f3bf 8f6f 	isb	sy
 8011fc2:	f3bf 8f4f 	dsb	sy
					configASSERT( pxTCB != pxCurrentTCB );
 8011fc6:	e7fe      	b.n	8011fc6 <vTaskPriorityDisinheritAfterTimeout+0x9a>
 8011fc8:	20013218 	.word	0x20013218
 8011fcc:	20013224 	.word	0x20013224
 8011fd0:	20013694 	.word	0x20013694

08011fd4 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 8011fd4:	4b04      	ldr	r3, [pc, #16]	; (8011fe8 <pvTaskIncrementMutexHeldCount+0x14>)
 8011fd6:	681a      	ldr	r2, [r3, #0]
 8011fd8:	b11a      	cbz	r2, 8011fe2 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 8011fda:	6819      	ldr	r1, [r3, #0]
 8011fdc:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 8011fde:	3201      	adds	r2, #1
 8011fe0:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 8011fe2:	6818      	ldr	r0, [r3, #0]
	}
 8011fe4:	4770      	bx	lr
 8011fe6:	bf00      	nop
 8011fe8:	20013218 	.word	0x20013218

08011fec <prvSwitchTimerLists>:
	}
}
/*-----------------------------------------------------------*/

static void prvSwitchTimerLists( void )
{
 8011fec:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011ff0:	4e22      	ldr	r6, [pc, #136]	; (801207c <prvSwitchTimerLists+0x90>)
	if( xTimerQueue != NULL )
 8011ff2:	f8df 9090 	ldr.w	r9, [pc, #144]	; 8012084 <prvSwitchTimerLists+0x98>
{
 8011ff6:	b085      	sub	sp, #20
		xMessage.xMessageID = xCommandID;
 8011ff8:	f04f 0800 	mov.w	r8, #0

	/* The tick count has overflowed.  The timer lists must be switched.
	If there are any timers still referenced from the current timer list
	then they must have expired and should be processed before the lists
	are switched. */
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 8011ffc:	e00d      	b.n	801201a <prvSwitchTimerLists+0x2e>
	{
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8011ffe:	68db      	ldr	r3, [r3, #12]

		/* Remove the timer from the list. */
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8012000:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8012002:	681f      	ldr	r7, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8012004:	1d25      	adds	r5, r4, #4
 8012006:	4628      	mov	r0, r5
 8012008:	f7fd ff5c 	bl	800fec4 <uxListRemove>
		traceTIMER_EXPIRED( pxTimer );

		/* Execute its callback, then send a command to restart the timer if
		it is an auto-reload timer.  It cannot be restarted here as the lists
		have not yet been switched. */
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 801200c:	6a23      	ldr	r3, [r4, #32]
 801200e:	4620      	mov	r0, r4
 8012010:	4798      	blx	r3

		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8012012:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8012016:	075b      	lsls	r3, r3, #29
 8012018:	d40a      	bmi.n	8012030 <prvSwitchTimerLists+0x44>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 801201a:	6833      	ldr	r3, [r6, #0]
 801201c:	681a      	ldr	r2, [r3, #0]
 801201e:	2a00      	cmp	r2, #0
 8012020:	d1ed      	bne.n	8011ffe <prvSwitchTimerLists+0x12>
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxTemp = pxCurrentTimerList;
	pxCurrentTimerList = pxOverflowTimerList;
 8012022:	4a17      	ldr	r2, [pc, #92]	; (8012080 <prvSwitchTimerLists+0x94>)
 8012024:	6811      	ldr	r1, [r2, #0]
 8012026:	6031      	str	r1, [r6, #0]
	pxOverflowTimerList = pxTemp;
 8012028:	6013      	str	r3, [r2, #0]
}
 801202a:	b005      	add	sp, #20
 801202c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 8012030:	69a3      	ldr	r3, [r4, #24]
 8012032:	443b      	add	r3, r7
			if( xReloadTime > xNextExpireTime )
 8012034:	429f      	cmp	r7, r3
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8012036:	4629      	mov	r1, r5
			if( xReloadTime > xNextExpireTime )
 8012038:	d205      	bcs.n	8012046 <prvSwitchTimerLists+0x5a>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 801203a:	6830      	ldr	r0, [r6, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 801203c:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 801203e:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8012040:	f7fd ff28 	bl	800fe94 <vListInsert>
 8012044:	e7e9      	b.n	801201a <prvSwitchTimerLists+0x2e>
	if( xTimerQueue != NULL )
 8012046:	f8d9 3000 	ldr.w	r3, [r9]
 801204a:	b16b      	cbz	r3, 8012068 <prvSwitchTimerLists+0x7c>
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 801204c:	e9cd 8700 	strd	r8, r7, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 8012050:	9402      	str	r4, [sp, #8]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8012052:	f7ff fecf 	bl	8011df4 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8012056:	2300      	movs	r3, #0
 8012058:	f8d9 0000 	ldr.w	r0, [r9]
 801205c:	461a      	mov	r2, r3
 801205e:	4669      	mov	r1, sp
 8012060:	f7fe fa9c 	bl	801059c <xQueueGenericSend>
				configASSERT( xResult );
 8012064:	2800      	cmp	r0, #0
 8012066:	d1d8      	bne.n	801201a <prvSwitchTimerLists+0x2e>
 8012068:	f04f 0350 	mov.w	r3, #80	; 0x50
 801206c:	f383 8811 	msr	BASEPRI, r3
 8012070:	f3bf 8f6f 	isb	sy
 8012074:	f3bf 8f4f 	dsb	sy
 8012078:	e7fe      	b.n	8012078 <prvSwitchTimerLists+0x8c>
 801207a:	bf00      	nop
 801207c:	20013714 	.word	0x20013714
 8012080:	20013718 	.word	0x20013718
 8012084:	20013838 	.word	0x20013838

08012088 <prvTimerTask>:
{
 8012088:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801208c:	4e9b      	ldr	r6, [pc, #620]	; (80122fc <prvTimerTask+0x274>)
 801208e:	4d9c      	ldr	r5, [pc, #624]	; (8012300 <prvTimerTask+0x278>)
 8012090:	4c9c      	ldr	r4, [pc, #624]	; (8012304 <prvTimerTask+0x27c>)
 8012092:	b08b      	sub	sp, #44	; 0x2c
					portYIELD_WITHIN_API();
 8012094:	f04f 29e0 	mov.w	r9, #3758153728	; 0xe000e000
 8012098:	f04f 5880 	mov.w	r8, #268435456	; 0x10000000
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 801209c:	6833      	ldr	r3, [r6, #0]
 801209e:	681f      	ldr	r7, [r3, #0]
 80120a0:	2f00      	cmp	r7, #0
 80120a2:	f000 80a8 	beq.w	80121f6 <prvTimerTask+0x16e>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 80120a6:	68db      	ldr	r3, [r3, #12]
 80120a8:	681f      	ldr	r7, [r3, #0]
	vTaskSuspendAll();
 80120aa:	f7ff fcf9 	bl	8011aa0 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 80120ae:	f7ff fd0f 	bl	8011ad0 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 80120b2:	682a      	ldr	r2, [r5, #0]
 80120b4:	4290      	cmp	r0, r2
	xTimeNow = xTaskGetTickCount();
 80120b6:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 80120b8:	f0c0 80ae 	bcc.w	8012218 <prvTimerTask+0x190>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 80120bc:	4287      	cmp	r7, r0
	xLastTime = xTimeNow;
 80120be:	6028      	str	r0, [r5, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 80120c0:	f240 80b4 	bls.w	801222c <prvTimerTask+0x1a4>
 80120c4:	2200      	movs	r2, #0
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 80120c6:	6820      	ldr	r0, [r4, #0]
 80120c8:	eba7 010a 	sub.w	r1, r7, sl
 80120cc:	f7ff f89a 	bl	8011204 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 80120d0:	f7ff fcee 	bl	8011ab0 <xTaskResumeAll>
 80120d4:	b928      	cbnz	r0, 80120e2 <prvTimerTask+0x5a>
					portYIELD_WITHIN_API();
 80120d6:	f8c9 8d04 	str.w	r8, [r9, #3332]	; 0xd04
 80120da:	f3bf 8f4f 	dsb	sy
 80120de:	f3bf 8f6f 	isb	sy
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 80120e2:	6820      	ldr	r0, [r4, #0]
 80120e4:	2200      	movs	r2, #0
 80120e6:	a902      	add	r1, sp, #8
 80120e8:	f7fe fc94 	bl	8010a14 <xQueueReceive>
 80120ec:	2800      	cmp	r0, #0
 80120ee:	d0d5      	beq.n	801209c <prvTimerTask+0x14>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 80120f0:	9b02      	ldr	r3, [sp, #8]
 80120f2:	2b00      	cmp	r3, #0
 80120f4:	db76      	blt.n	80121e4 <prvTimerTask+0x15c>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 80120f6:	9f04      	ldr	r7, [sp, #16]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 80120f8:	697b      	ldr	r3, [r7, #20]
 80120fa:	b113      	cbz	r3, 8012102 <prvTimerTask+0x7a>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 80120fc:	1d38      	adds	r0, r7, #4
 80120fe:	f7fd fee1 	bl	800fec4 <uxListRemove>
	xTimeNow = xTaskGetTickCount();
 8012102:	f7ff fce5 	bl	8011ad0 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 8012106:	682b      	ldr	r3, [r5, #0]
 8012108:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 801210a:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 801210c:	f0c0 808b 	bcc.w	8012226 <prvTimerTask+0x19e>
			switch( xMessage.xMessageID )
 8012110:	9b02      	ldr	r3, [sp, #8]
	xLastTime = xTimeNow;
 8012112:	f8c5 a000 	str.w	sl, [r5]
			switch( xMessage.xMessageID )
 8012116:	2b09      	cmp	r3, #9
 8012118:	d8e3      	bhi.n	80120e2 <prvTimerTask+0x5a>
 801211a:	e8df f003 	tbb	[pc, r3]
 801211e:	0505      	.short	0x0505
 8012120:	5a3d5305 	.word	0x5a3d5305
 8012124:	3d530505 	.word	0x3d530505
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8012128:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 801212c:	69ba      	ldr	r2, [r7, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 801212e:	613f      	str	r7, [r7, #16]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8012130:	f043 0301 	orr.w	r3, r3, #1
 8012134:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8012138:	9b03      	ldr	r3, [sp, #12]
 801213a:	1899      	adds	r1, r3, r2
 801213c:	bf2c      	ite	cs
 801213e:	2001      	movcs	r0, #1
 8012140:	2000      	movcc	r0, #0
	if( xNextExpiryTime <= xTimeNow )
 8012142:	4551      	cmp	r1, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 8012144:	6079      	str	r1, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
 8012146:	f200 808c 	bhi.w	8012262 <prvTimerTask+0x1da>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 801214a:	ebaa 0303 	sub.w	r3, sl, r3
 801214e:	429a      	cmp	r2, r3
 8012150:	d832      	bhi.n	80121b8 <prvTimerTask+0x130>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8012152:	6a3b      	ldr	r3, [r7, #32]
 8012154:	4638      	mov	r0, r7
 8012156:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8012158:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 801215c:	075b      	lsls	r3, r3, #29
 801215e:	d5c0      	bpl.n	80120e2 <prvTimerTask+0x5a>
	if( xTimerQueue != NULL )
 8012160:	6822      	ldr	r2, [r4, #0]
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 8012162:	9903      	ldr	r1, [sp, #12]
 8012164:	69bb      	ldr	r3, [r7, #24]
	if( xTimerQueue != NULL )
 8012166:	b172      	cbz	r2, 8012186 <prvTimerTask+0xfe>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 8012168:	440b      	add	r3, r1
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 801216a:	e9cd 3707 	strd	r3, r7, [sp, #28]
		xMessage.xMessageID = xCommandID;
 801216e:	2300      	movs	r3, #0
 8012170:	9306      	str	r3, [sp, #24]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8012172:	f7ff fe3f 	bl	8011df4 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8012176:	2300      	movs	r3, #0
 8012178:	6820      	ldr	r0, [r4, #0]
 801217a:	461a      	mov	r2, r3
 801217c:	a906      	add	r1, sp, #24
 801217e:	f7fe fa0d 	bl	801059c <xQueueGenericSend>
							configASSERT( xResult );
 8012182:	2800      	cmp	r0, #0
 8012184:	d1ad      	bne.n	80120e2 <prvTimerTask+0x5a>
 8012186:	f04f 0350 	mov.w	r3, #80	; 0x50
 801218a:	f383 8811 	msr	BASEPRI, r3
 801218e:	f3bf 8f6f 	isb	sy
 8012192:	f3bf 8f4f 	dsb	sy
 8012196:	e7fe      	b.n	8012196 <prvTimerTask+0x10e>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8012198:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 801219c:	f043 0301 	orr.w	r3, r3, #1
 80121a0:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 80121a4:	9b03      	ldr	r3, [sp, #12]
 80121a6:	61bb      	str	r3, [r7, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 80121a8:	2b00      	cmp	r3, #0
 80121aa:	f000 809d 	beq.w	80122e8 <prvTimerTask+0x260>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 80121ae:	4453      	add	r3, sl
	if( xNextExpiryTime <= xTimeNow )
 80121b0:	4553      	cmp	r3, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 80121b2:	607b      	str	r3, [r7, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 80121b4:	613f      	str	r7, [r7, #16]
	if( xNextExpiryTime <= xTimeNow )
 80121b6:	d85e      	bhi.n	8012276 <prvTimerTask+0x1ee>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 80121b8:	4b53      	ldr	r3, [pc, #332]	; (8012308 <prvTimerTask+0x280>)
 80121ba:	1d39      	adds	r1, r7, #4
 80121bc:	6818      	ldr	r0, [r3, #0]
 80121be:	f7fd fe69 	bl	800fe94 <vListInsert>
	return xProcessTimerNow;
 80121c2:	e78e      	b.n	80120e2 <prvTimerTask+0x5a>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 80121c4:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 80121c8:	f023 0301 	bic.w	r3, r3, #1
 80121cc:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					break;
 80121d0:	e787      	b.n	80120e2 <prvTimerTask+0x5a>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 80121d2:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 80121d6:	079a      	lsls	r2, r3, #30
 80121d8:	d552      	bpl.n	8012280 <prvTimerTask+0x1f8>
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 80121da:	f023 0301 	bic.w	r3, r3, #1
 80121de:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
 80121e2:	e77e      	b.n	80120e2 <prvTimerTask+0x5a>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 80121e4:	9b03      	ldr	r3, [sp, #12]
 80121e6:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80121ea:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 80121ec:	9b02      	ldr	r3, [sp, #8]
 80121ee:	2b00      	cmp	r3, #0
 80121f0:	f6ff af77 	blt.w	80120e2 <prvTimerTask+0x5a>
 80121f4:	e77f      	b.n	80120f6 <prvTimerTask+0x6e>
	vTaskSuspendAll();
 80121f6:	f7ff fc53 	bl	8011aa0 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 80121fa:	f7ff fc69 	bl	8011ad0 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 80121fe:	682a      	ldr	r2, [r5, #0]
 8012200:	4282      	cmp	r2, r0
	xTimeNow = xTaskGetTickCount();
 8012202:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 8012204:	d808      	bhi.n	8012218 <prvTimerTask+0x190>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 8012206:	4b40      	ldr	r3, [pc, #256]	; (8012308 <prvTimerTask+0x280>)
	xLastTime = xTimeNow;
 8012208:	f8c5 a000 	str.w	sl, [r5]
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 801220c:	681a      	ldr	r2, [r3, #0]
 801220e:	6812      	ldr	r2, [r2, #0]
 8012210:	fab2 f282 	clz	r2, r2
 8012214:	0952      	lsrs	r2, r2, #5
 8012216:	e756      	b.n	80120c6 <prvTimerTask+0x3e>
		prvSwitchTimerLists();
 8012218:	f7ff fee8 	bl	8011fec <prvSwitchTimerLists>
	xLastTime = xTimeNow;
 801221c:	f8c5 a000 	str.w	sl, [r5]
			( void ) xTaskResumeAll();
 8012220:	f7ff fc46 	bl	8011ab0 <xTaskResumeAll>
 8012224:	e75d      	b.n	80120e2 <prvTimerTask+0x5a>
		prvSwitchTimerLists();
 8012226:	f7ff fee1 	bl	8011fec <prvSwitchTimerLists>
		*pxTimerListsWereSwitched = pdTRUE;
 801222a:	e771      	b.n	8012110 <prvTimerTask+0x88>
				( void ) xTaskResumeAll();
 801222c:	f7ff fc40 	bl	8011ab0 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8012230:	6832      	ldr	r2, [r6, #0]
 8012232:	68d2      	ldr	r2, [r2, #12]
 8012234:	f8d2 b00c 	ldr.w	fp, [r2, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8012238:	f10b 0104 	add.w	r1, fp, #4
 801223c:	4608      	mov	r0, r1
 801223e:	9101      	str	r1, [sp, #4]
 8012240:	f7fd fe40 	bl	800fec4 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8012244:	f89b 0028 	ldrb.w	r0, [fp, #40]	; 0x28
 8012248:	9901      	ldr	r1, [sp, #4]
 801224a:	f010 0f04 	tst.w	r0, #4
 801224e:	d11b      	bne.n	8012288 <prvTimerTask+0x200>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8012250:	f020 0001 	bic.w	r0, r0, #1
 8012254:	f88b 0028 	strb.w	r0, [fp, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8012258:	f8db 3020 	ldr.w	r3, [fp, #32]
 801225c:	4658      	mov	r0, fp
 801225e:	4798      	blx	r3
}
 8012260:	e73f      	b.n	80120e2 <prvTimerTask+0x5a>
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 8012262:	4553      	cmp	r3, sl
 8012264:	d902      	bls.n	801226c <prvTimerTask+0x1e4>
 8012266:	2800      	cmp	r0, #0
 8012268:	f43f af73 	beq.w	8012152 <prvTimerTask+0xca>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 801226c:	6830      	ldr	r0, [r6, #0]
 801226e:	1d39      	adds	r1, r7, #4
 8012270:	f7fd fe10 	bl	800fe94 <vListInsert>
	return xProcessTimerNow;
 8012274:	e735      	b.n	80120e2 <prvTimerTask+0x5a>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8012276:	6830      	ldr	r0, [r6, #0]
 8012278:	1d39      	adds	r1, r7, #4
 801227a:	f7fd fe0b 	bl	800fe94 <vListInsert>
 801227e:	e730      	b.n	80120e2 <prvTimerTask+0x5a>
							vPortFree( pxTimer );
 8012280:	4638      	mov	r0, r7
 8012282:	f7fd fd83 	bl	800fd8c <vPortFree>
 8012286:	e72c      	b.n	80120e2 <prvTimerTask+0x5a>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 8012288:	f8db 2018 	ldr.w	r2, [fp, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 801228c:	f8cb b010 	str.w	fp, [fp, #16]
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 8012290:	18b8      	adds	r0, r7, r2
	if( xNextExpiryTime <= xTimeNow )
 8012292:	4550      	cmp	r0, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 8012294:	f8cb 0004 	str.w	r0, [fp, #4]
	if( xNextExpiryTime <= xTimeNow )
 8012298:	d903      	bls.n	80122a2 <prvTimerTask+0x21a>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 801229a:	6830      	ldr	r0, [r6, #0]
 801229c:	f7fd fdfa 	bl	800fe94 <vListInsert>
	return xProcessTimerNow;
 80122a0:	e7da      	b.n	8012258 <prvTimerTask+0x1d0>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80122a2:	ebaa 0307 	sub.w	r3, sl, r7
 80122a6:	429a      	cmp	r2, r3
 80122a8:	d819      	bhi.n	80122de <prvTimerTask+0x256>
	if( xTimerQueue != NULL )
 80122aa:	6823      	ldr	r3, [r4, #0]
 80122ac:	b173      	cbz	r3, 80122cc <prvTimerTask+0x244>
		xMessage.xMessageID = xCommandID;
 80122ae:	2300      	movs	r3, #0
 80122b0:	9306      	str	r3, [sp, #24]
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 80122b2:	9707      	str	r7, [sp, #28]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 80122b4:	f8cd b020 	str.w	fp, [sp, #32]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 80122b8:	f7ff fd9c 	bl	8011df4 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 80122bc:	2300      	movs	r3, #0
 80122be:	6820      	ldr	r0, [r4, #0]
 80122c0:	461a      	mov	r2, r3
 80122c2:	a906      	add	r1, sp, #24
 80122c4:	f7fe f96a 	bl	801059c <xQueueGenericSend>
			configASSERT( xResult );
 80122c8:	2800      	cmp	r0, #0
 80122ca:	d1c5      	bne.n	8012258 <prvTimerTask+0x1d0>
 80122cc:	f04f 0350 	mov.w	r3, #80	; 0x50
 80122d0:	f383 8811 	msr	BASEPRI, r3
 80122d4:	f3bf 8f6f 	isb	sy
 80122d8:	f3bf 8f4f 	dsb	sy
 80122dc:	e7fe      	b.n	80122dc <prvTimerTask+0x254>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 80122de:	4b0a      	ldr	r3, [pc, #40]	; (8012308 <prvTimerTask+0x280>)
 80122e0:	6818      	ldr	r0, [r3, #0]
 80122e2:	f7fd fdd7 	bl	800fe94 <vListInsert>
	return xProcessTimerNow;
 80122e6:	e7b7      	b.n	8012258 <prvTimerTask+0x1d0>
 80122e8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80122ec:	f383 8811 	msr	BASEPRI, r3
 80122f0:	f3bf 8f6f 	isb	sy
 80122f4:	f3bf 8f4f 	dsb	sy
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 80122f8:	e7fe      	b.n	80122f8 <prvTimerTask+0x270>
 80122fa:	bf00      	nop
 80122fc:	20013714 	.word	0x20013714
 8012300:	200137e4 	.word	0x200137e4
 8012304:	20013838 	.word	0x20013838
 8012308:	20013718 	.word	0x20013718

0801230c <xTimerCreateTimerTask>:
{
 801230c:	b5f0      	push	{r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 801230e:	4c23      	ldr	r4, [pc, #140]	; (801239c <xTimerCreateTimerTask+0x90>)
{
 8012310:	b089      	sub	sp, #36	; 0x24
	taskENTER_CRITICAL();
 8012312:	f7fd fe4f 	bl	800ffb4 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 8012316:	6825      	ldr	r5, [r4, #0]
 8012318:	b335      	cbz	r5, 8012368 <xTimerCreateTimerTask+0x5c>
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
 801231a:	f7fd fe6d 	bl	800fff8 <vPortExitCritical>
	if( xTimerQueue != NULL )
 801231e:	6823      	ldr	r3, [r4, #0]
 8012320:	b1cb      	cbz	r3, 8012356 <xTimerCreateTimerTask+0x4a>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 8012322:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 8012324:	aa07      	add	r2, sp, #28
 8012326:	a906      	add	r1, sp, #24
 8012328:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 801232a:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 801232e:	f7fd fc61 	bl	800fbf4 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 8012332:	e9dd 0105 	ldrd	r0, r1, [sp, #20]
 8012336:	2302      	movs	r3, #2
 8012338:	e9cd 1001 	strd	r1, r0, [sp, #4]
 801233c:	9300      	str	r3, [sp, #0]
 801233e:	9a07      	ldr	r2, [sp, #28]
 8012340:	4917      	ldr	r1, [pc, #92]	; (80123a0 <xTimerCreateTimerTask+0x94>)
 8012342:	4818      	ldr	r0, [pc, #96]	; (80123a4 <xTimerCreateTimerTask+0x98>)
 8012344:	4623      	mov	r3, r4
 8012346:	f7ff fa6d 	bl	8011824 <xTaskCreateStatic>
 801234a:	4b17      	ldr	r3, [pc, #92]	; (80123a8 <xTimerCreateTimerTask+0x9c>)
 801234c:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 801234e:	b110      	cbz	r0, 8012356 <xTimerCreateTimerTask+0x4a>
}
 8012350:	2001      	movs	r0, #1
 8012352:	b009      	add	sp, #36	; 0x24
 8012354:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012356:	f04f 0350 	mov.w	r3, #80	; 0x50
 801235a:	f383 8811 	msr	BASEPRI, r3
 801235e:	f3bf 8f6f 	isb	sy
 8012362:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 8012366:	e7fe      	b.n	8012366 <xTimerCreateTimerTask+0x5a>
			vListInitialise( &xActiveTimerList1 );
 8012368:	4f10      	ldr	r7, [pc, #64]	; (80123ac <xTimerCreateTimerTask+0xa0>)
			vListInitialise( &xActiveTimerList2 );
 801236a:	4e11      	ldr	r6, [pc, #68]	; (80123b0 <xTimerCreateTimerTask+0xa4>)
			vListInitialise( &xActiveTimerList1 );
 801236c:	4638      	mov	r0, r7
 801236e:	f7fd fd71 	bl	800fe54 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 8012372:	4630      	mov	r0, r6
 8012374:	f7fd fd6e 	bl	800fe54 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 8012378:	4a0e      	ldr	r2, [pc, #56]	; (80123b4 <xTimerCreateTimerTask+0xa8>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 801237a:	9500      	str	r5, [sp, #0]
			pxCurrentTimerList = &xActiveTimerList1;
 801237c:	6017      	str	r7, [r2, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 801237e:	4a0e      	ldr	r2, [pc, #56]	; (80123b8 <xTimerCreateTimerTask+0xac>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8012380:	4b0e      	ldr	r3, [pc, #56]	; (80123bc <xTimerCreateTimerTask+0xb0>)
			pxOverflowTimerList = &xActiveTimerList2;
 8012382:	6016      	str	r6, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8012384:	2110      	movs	r1, #16
 8012386:	4a0e      	ldr	r2, [pc, #56]	; (80123c0 <xTimerCreateTimerTask+0xb4>)
 8012388:	200a      	movs	r0, #10
 801238a:	f7fd ffb1 	bl	80102f0 <xQueueGenericCreateStatic>
 801238e:	6020      	str	r0, [r4, #0]
				if( xTimerQueue != NULL )
 8012390:	2800      	cmp	r0, #0
 8012392:	d0c2      	beq.n	801231a <xTimerCreateTimerTask+0xe>
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 8012394:	490b      	ldr	r1, [pc, #44]	; (80123c4 <xTimerCreateTimerTask+0xb8>)
 8012396:	f7fe ff0d 	bl	80111b4 <vQueueAddToRegistry>
 801239a:	e7be      	b.n	801231a <xTimerCreateTimerTask+0xe>
 801239c:	20013838 	.word	0x20013838
 80123a0:	080313a8 	.word	0x080313a8
 80123a4:	08012089 	.word	0x08012089
 80123a8:	2001383c 	.word	0x2001383c
 80123ac:	200137bc 	.word	0x200137bc
 80123b0:	200137d0 	.word	0x200137d0
 80123b4:	20013714 	.word	0x20013714
 80123b8:	20013718 	.word	0x20013718
 80123bc:	200137e8 	.word	0x200137e8
 80123c0:	2001371c 	.word	0x2001371c
 80123c4:	080313a0 	.word	0x080313a0

080123c8 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 80123c8:	8880      	ldrh	r0, [r0, #4]
 80123ca:	4770      	bx	lr

080123cc <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 80123cc:	b570      	push	{r4, r5, r6, lr}
 80123ce:	6803      	ldr	r3, [r0, #0]
 80123d0:	4605      	mov	r5, r0
 80123d2:	460c      	mov	r4, r1
 80123d4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80123d6:	2100      	movs	r1, #0
 80123d8:	4798      	blx	r3
 80123da:	682b      	ldr	r3, [r5, #0]
 80123dc:	4606      	mov	r6, r0
 80123de:	6a1b      	ldr	r3, [r3, #32]
 80123e0:	4628      	mov	r0, r5
 80123e2:	4798      	blx	r3
 80123e4:	1ba4      	subs	r4, r4, r6
 80123e6:	b2a4      	uxth	r4, r4
 80123e8:	fbb4 f0f0 	udiv	r0, r4, r0
 80123ec:	bd70      	pop	{r4, r5, r6, pc}

080123ee <_ZN8touchgfx17AbstractPartition5clearEv>:
 80123ee:	2300      	movs	r3, #0
 80123f0:	8083      	strh	r3, [r0, #4]
 80123f2:	4770      	bx	lr

080123f4 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 80123f4:	b510      	push	{r4, lr}
 80123f6:	6803      	ldr	r3, [r0, #0]
 80123f8:	8881      	ldrh	r1, [r0, #4]
 80123fa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80123fc:	4604      	mov	r4, r0
 80123fe:	4798      	blx	r3
 8012400:	88a3      	ldrh	r3, [r4, #4]
 8012402:	3301      	adds	r3, #1
 8012404:	80a3      	strh	r3, [r4, #4]
 8012406:	bd10      	pop	{r4, pc}

08012408 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 8012408:	6803      	ldr	r3, [r0, #0]
 801240a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801240c:	4718      	bx	r3

0801240e <_ZN8touchgfx17AbstractPartitionD1Ev>:
 801240e:	4770      	bx	lr

08012410 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 8012410:	4a02      	ldr	r2, [pc, #8]	; (801241c <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 8012412:	6002      	str	r2, [r0, #0]
 8012414:	2200      	movs	r2, #0
 8012416:	8082      	strh	r2, [r0, #4]
 8012418:	4770      	bx	lr
 801241a:	bf00      	nop
 801241c:	080313b8 	.word	0x080313b8

08012420 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv>:
 8012420:	b510      	push	{r4, lr}
 8012422:	6803      	ldr	r3, [r0, #0]
 8012424:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8012428:	4604      	mov	r4, r0
 801242a:	4798      	blx	r3
 801242c:	b110      	cbz	r0, 8012434 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv+0x14>
 801242e:	4620      	mov	r0, r4
 8012430:	f7f0 fef6 	bl	8003220 <_ZNK8touchgfx8Drawable17invalidateContentEv>
 8012434:	bd10      	pop	{r4, pc}

08012436 <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorXEv>:
 8012436:	f9b0 005c 	ldrsh.w	r0, [r0, #92]	; 0x5c
 801243a:	4770      	bx	lr

0801243c <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorYEv>:
 801243c:	f9b0 005e 	ldrsh.w	r0, [r0, #94]	; 0x5e
 8012440:	4770      	bx	lr

08012442 <_ZNK8touchgfx25AbstractProgressIndicator25getProgressIndicatorWidthEv>:
 8012442:	f9b0 0060 	ldrsh.w	r0, [r0, #96]	; 0x60
 8012446:	4770      	bx	lr

08012448 <_ZNK8touchgfx25AbstractProgressIndicator26getProgressIndicatorHeightEv>:
 8012448:	f9b0 0062 	ldrsh.w	r0, [r0, #98]	; 0x62
 801244c:	4770      	bx	lr

0801244e <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>:
 801244e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8012450:	e9c0 1221 	strd	r1, r2, [r0, #132]	; 0x84
 8012454:	461e      	mov	r6, r3
 8012456:	6803      	ldr	r3, [r0, #0]
 8012458:	460f      	mov	r7, r1
 801245a:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 801245e:	f8d0 108c 	ldr.w	r1, [r0, #140]	; 0x8c
 8012462:	4604      	mov	r4, r0
 8012464:	4615      	mov	r5, r2
 8012466:	4798      	blx	r3
 8012468:	b93e      	cbnz	r6, 801247a <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x2c>
 801246a:	1bed      	subs	r5, r5, r7
 801246c:	f8a4 5090 	strh.w	r5, [r4, #144]	; 0x90
 8012470:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 8012474:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 8012478:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801247a:	f8a4 6090 	strh.w	r6, [r4, #144]	; 0x90
 801247e:	e7f7      	b.n	8012470 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x22>

08012480 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_RtS2_>:
 8012480:	b510      	push	{r4, lr}
 8012482:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 8012486:	600c      	str	r4, [r1, #0]
 8012488:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 801248c:	6011      	str	r1, [r2, #0]
 801248e:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 8012492:	801a      	strh	r2, [r3, #0]
 8012494:	9b02      	ldr	r3, [sp, #8]
 8012496:	f8b0 2092 	ldrh.w	r2, [r0, #146]	; 0x92
 801249a:	801a      	strh	r2, [r3, #0]
 801249c:	bd10      	pop	{r4, pc}

0801249e <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_Rt>:
 801249e:	b510      	push	{r4, lr}
 80124a0:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 80124a4:	600c      	str	r4, [r1, #0]
 80124a6:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 80124aa:	6011      	str	r1, [r2, #0]
 80124ac:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 80124b0:	801a      	strh	r2, [r3, #0]
 80124b2:	bd10      	pop	{r4, pc}

080124b4 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_>:
 80124b4:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 80124b8:	600b      	str	r3, [r1, #0]
 80124ba:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 80124be:	6013      	str	r3, [r2, #0]
 80124c0:	4770      	bx	lr

080124c2 <_ZN8touchgfx25AbstractProgressIndicator17setEasingEquationEPFstsstE>:
 80124c2:	f8c0 1094 	str.w	r1, [r0, #148]	; 0x94
 80124c6:	4770      	bx	lr

080124c8 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>:
 80124c8:	f8d0 008c 	ldr.w	r0, [r0, #140]	; 0x8c
 80124cc:	4770      	bx	lr

080124ce <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>:
 80124ce:	f880 1054 	strb.w	r1, [r0, #84]	; 0x54
 80124d2:	4770      	bx	lr

080124d4 <_ZNK8touchgfx25AbstractProgressIndicator8getAlphaEv>:
 80124d4:	f890 0054 	ldrb.w	r0, [r0, #84]	; 0x54
 80124d8:	4770      	bx	lr

080124da <_ZN8touchgfx25AbstractProgressIndicatorD1Ev>:
 80124da:	4770      	bx	lr

080124dc <_ZN8touchgfx25AbstractProgressIndicatorD0Ev>:
 80124dc:	b510      	push	{r4, lr}
 80124de:	21b4      	movs	r1, #180	; 0xb4
 80124e0:	4604      	mov	r4, r0
 80124e2:	f01a fb02 	bl	802caea <_ZdlPvj>
 80124e6:	4620      	mov	r0, r4
 80124e8:	bd10      	pop	{r4, pc}

080124ea <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit>:
 80124ea:	b570      	push	{r4, r5, r6, lr}
 80124ec:	f8d0 5084 	ldr.w	r5, [r0, #132]	; 0x84
 80124f0:	428d      	cmp	r5, r1
 80124f2:	bfb8      	it	lt
 80124f4:	460d      	movlt	r5, r1
 80124f6:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 80124fa:	428d      	cmp	r5, r1
 80124fc:	4604      	mov	r4, r0
 80124fe:	bfa8      	it	ge
 8012500:	460d      	movge	r5, r1
 8012502:	4616      	mov	r6, r2
 8012504:	b99a      	cbnz	r2, 801252e <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x44>
 8012506:	6803      	ldr	r3, [r0, #0]
 8012508:	4629      	mov	r1, r5
 801250a:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 801250e:	4798      	blx	r3
 8012510:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 8012514:	b368      	cbz	r0, 8012572 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 8012516:	6803      	ldr	r3, [r0, #0]
 8012518:	68db      	ldr	r3, [r3, #12]
 801251a:	4798      	blx	r3
 801251c:	b348      	cbz	r0, 8012572 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 801251e:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 8012522:	6803      	ldr	r3, [r0, #0]
 8012524:	4621      	mov	r1, r4
 8012526:	689b      	ldr	r3, [r3, #8]
 8012528:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801252c:	4718      	bx	r3
 801252e:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 8012532:	2b00      	cmp	r3, #0
 8012534:	dd08      	ble.n	8012548 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x5e>
 8012536:	f006 fa23 	bl	8018980 <_ZN8touchgfx11Application11getInstanceEv>
 801253a:	4621      	mov	r1, r4
 801253c:	3004      	adds	r0, #4
 801253e:	f006 fa6c 	bl	8018a1a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 8012542:	2300      	movs	r3, #0
 8012544:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 8012548:	6823      	ldr	r3, [r4, #0]
 801254a:	4620      	mov	r0, r4
 801254c:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8012550:	4798      	blx	r3
 8012552:	2300      	movs	r3, #0
 8012554:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 8012558:	e9c4 0527 	strd	r0, r5, [r4, #156]	; 0x9c
 801255c:	f8c4 60a4 	str.w	r6, [r4, #164]	; 0xa4
 8012560:	f006 fa0e 	bl	8018980 <_ZN8touchgfx11Application11getInstanceEv>
 8012564:	4621      	mov	r1, r4
 8012566:	3004      	adds	r0, #4
 8012568:	f006 fb00 	bl	8018b6c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 801256c:	2301      	movs	r3, #1
 801256e:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 8012572:	bd70      	pop	{r4, r5, r6, pc}

08012574 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>:
 8012574:	b510      	push	{r4, lr}
 8012576:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 801257a:	4299      	cmp	r1, r3
 801257c:	bfb8      	it	lt
 801257e:	4619      	movlt	r1, r3
 8012580:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 8012584:	4299      	cmp	r1, r3
 8012586:	bfa8      	it	ge
 8012588:	4619      	movge	r1, r3
 801258a:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
 801258e:	428b      	cmp	r3, r1
 8012590:	4604      	mov	r4, r0
 8012592:	d010      	beq.n	80125b6 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 8012594:	f8c0 108c 	str.w	r1, [r0, #140]	; 0x8c
 8012598:	f8d0 00ac 	ldr.w	r0, [r0, #172]	; 0xac
 801259c:	b158      	cbz	r0, 80125b6 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 801259e:	6803      	ldr	r3, [r0, #0]
 80125a0:	68db      	ldr	r3, [r3, #12]
 80125a2:	4798      	blx	r3
 80125a4:	b138      	cbz	r0, 80125b6 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 80125a6:	f8d4 00ac 	ldr.w	r0, [r4, #172]	; 0xac
 80125aa:	6803      	ldr	r3, [r0, #0]
 80125ac:	4621      	mov	r1, r4
 80125ae:	689b      	ldr	r3, [r3, #8]
 80125b0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80125b4:	4718      	bx	r3
 80125b6:	bd10      	pop	{r4, pc}

080125b8 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>:
 80125b8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80125ba:	4604      	mov	r4, r0
 80125bc:	460d      	mov	r5, r1
 80125be:	b1a9      	cbz	r1, 80125ec <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt+0x34>
 80125c0:	f8b0 6092 	ldrh.w	r6, [r0, #146]	; 0x92
 80125c4:	f8b4 1090 	ldrh.w	r1, [r4, #144]	; 0x90
 80125c8:	f8d4 708c 	ldr.w	r7, [r4, #140]	; 0x8c
 80125cc:	e9d0 0221 	ldrd	r0, r2, [r0, #132]	; 0x84
 80125d0:	ab01      	add	r3, sp, #4
 80125d2:	1a12      	subs	r2, r2, r0
 80125d4:	1b89      	subs	r1, r1, r6
 80125d6:	1a38      	subs	r0, r7, r0
 80125d8:	f007 fc88 	bl	8019eec <_ZN8touchgfx6muldivElllRl>
 80125dc:	4629      	mov	r1, r5
 80125de:	ab01      	add	r3, sp, #4
 80125e0:	f8b4 2090 	ldrh.w	r2, [r4, #144]	; 0x90
 80125e4:	4430      	add	r0, r6
 80125e6:	f007 fc81 	bl	8019eec <_ZN8touchgfx6muldivElllRl>
 80125ea:	b285      	uxth	r5, r0
 80125ec:	4628      	mov	r0, r5
 80125ee:	b003      	add	sp, #12
 80125f0:	bdf0      	pop	{r4, r5, r6, r7, pc}

080125f2 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv>:
 80125f2:	b570      	push	{r4, r5, r6, lr}
 80125f4:	f890 3098 	ldrb.w	r3, [r0, #152]	; 0x98
 80125f8:	4604      	mov	r4, r0
 80125fa:	2b00      	cmp	r3, #0
 80125fc:	d035      	beq.n	801266a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 80125fe:	e9d4 3227 	ldrd	r3, r2, [r4, #156]	; 0x9c
 8012602:	f8d0 00a8 	ldr.w	r0, [r0, #168]	; 0xa8
 8012606:	f8d4 5094 	ldr.w	r5, [r4, #148]	; 0x94
 801260a:	3001      	adds	r0, #1
 801260c:	1ad2      	subs	r2, r2, r3
 801260e:	b212      	sxth	r2, r2
 8012610:	f8c4 00a8 	str.w	r0, [r4, #168]	; 0xa8
 8012614:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8012618:	2100      	movs	r1, #0
 801261a:	b280      	uxth	r0, r0
 801261c:	47a8      	blx	r5
 801261e:	f8d4 109c 	ldr.w	r1, [r4, #156]	; 0x9c
 8012622:	6823      	ldr	r3, [r4, #0]
 8012624:	4401      	add	r1, r0
 8012626:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 801262a:	4620      	mov	r0, r4
 801262c:	4798      	blx	r3
 801262e:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 8012632:	429a      	cmp	r2, r3
 8012634:	db19      	blt.n	801266a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 8012636:	2500      	movs	r5, #0
 8012638:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 801263c:	f006 f9a0 	bl	8018980 <_ZN8touchgfx11Application11getInstanceEv>
 8012640:	4621      	mov	r1, r4
 8012642:	3004      	adds	r0, #4
 8012644:	f006 f9e9 	bl	8018a1a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 8012648:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 801264c:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 8012650:	b158      	cbz	r0, 801266a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 8012652:	6803      	ldr	r3, [r0, #0]
 8012654:	68db      	ldr	r3, [r3, #12]
 8012656:	4798      	blx	r3
 8012658:	b138      	cbz	r0, 801266a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 801265a:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 801265e:	6803      	ldr	r3, [r0, #0]
 8012660:	4621      	mov	r1, r4
 8012662:	689b      	ldr	r3, [r3, #8]
 8012664:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012668:	4718      	bx	r3
 801266a:	bd70      	pop	{r4, r5, r6, pc}

0801266c <_ZN8touchgfx8DrawableC1Ev>:
 801266c:	4a0a      	ldr	r2, [pc, #40]	; (8012698 <_ZN8touchgfx8DrawableC1Ev+0x2c>)
 801266e:	6002      	str	r2, [r0, #0]
 8012670:	2200      	movs	r2, #0
 8012672:	8082      	strh	r2, [r0, #4]
 8012674:	80c2      	strh	r2, [r0, #6]
 8012676:	8102      	strh	r2, [r0, #8]
 8012678:	8142      	strh	r2, [r0, #10]
 801267a:	8182      	strh	r2, [r0, #12]
 801267c:	81c2      	strh	r2, [r0, #14]
 801267e:	8202      	strh	r2, [r0, #16]
 8012680:	8242      	strh	r2, [r0, #18]
 8012682:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8012686:	61c2      	str	r2, [r0, #28]
 8012688:	8402      	strh	r2, [r0, #32]
 801268a:	8442      	strh	r2, [r0, #34]	; 0x22
 801268c:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 8012690:	2201      	movs	r2, #1
 8012692:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 8012696:	4770      	bx	lr
 8012698:	08031d38 	.word	0x08031d38

0801269c <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 801269c:	b570      	push	{r4, r5, r6, lr}
 801269e:	6803      	ldr	r3, [r0, #0]
 80126a0:	4604      	mov	r4, r0
 80126a2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80126a4:	4615      	mov	r5, r2
 80126a6:	4798      	blx	r3
 80126a8:	6823      	ldr	r3, [r4, #0]
 80126aa:	4629      	mov	r1, r5
 80126ac:	4620      	mov	r0, r4
 80126ae:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80126b0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80126b4:	4718      	bx	r3

080126b6 <_ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss>:
 80126b6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80126ba:	4604      	mov	r4, r0
 80126bc:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
 80126c0:	f8a4 105c 	strh.w	r1, [r4, #92]	; 0x5c
 80126c4:	460e      	mov	r6, r1
 80126c6:	4615      	mov	r5, r2
 80126c8:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 80126cc:	4619      	mov	r1, r3
 80126ce:	463a      	mov	r2, r7
 80126d0:	3058      	adds	r0, #88	; 0x58
 80126d2:	4698      	mov	r8, r3
 80126d4:	f7ff ffe2 	bl	801269c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80126d8:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 80126dc:	4446      	add	r6, r8
 80126de:	42b3      	cmp	r3, r6
 80126e0:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 80126e4:	bfb8      	it	lt
 80126e6:	8126      	strhlt	r6, [r4, #8]
 80126e8:	443d      	add	r5, r7
 80126ea:	42ab      	cmp	r3, r5
 80126ec:	bfb8      	it	lt
 80126ee:	8165      	strhlt	r5, [r4, #10]
 80126f0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080126f4 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>:
 80126f4:	b510      	push	{r4, lr}
 80126f6:	4604      	mov	r4, r0
 80126f8:	302c      	adds	r0, #44	; 0x2c
 80126fa:	f003 fc42 	bl	8015f82 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80126fe:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	; 0x36
 8012702:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 8012706:	4620      	mov	r0, r4
 8012708:	f7ff ffc8 	bl	801269c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 801270c:	bd10      	pop	{r4, pc}
	...

08012710 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>:
 8012710:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8012712:	4604      	mov	r4, r0
 8012714:	4626      	mov	r6, r4
 8012716:	2500      	movs	r5, #0
 8012718:	f7ff ffa8 	bl	801266c <_ZN8touchgfx8DrawableC1Ev>
 801271c:	4b23      	ldr	r3, [pc, #140]	; (80127ac <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0x9c>)
 801271e:	62a5      	str	r5, [r4, #40]	; 0x28
 8012720:	f846 3b2c 	str.w	r3, [r6], #44
 8012724:	2226      	movs	r2, #38	; 0x26
 8012726:	4629      	mov	r1, r5
 8012728:	f64f 77ff 	movw	r7, #65535	; 0xffff
 801272c:	4630      	mov	r0, r6
 801272e:	f8ad 7004 	strh.w	r7, [sp, #4]
 8012732:	f01b fac6 	bl	802dcc2 <memset>
 8012736:	4630      	mov	r0, r6
 8012738:	f7ff ff98 	bl	801266c <_ZN8touchgfx8DrawableC1Ev>
 801273c:	a902      	add	r1, sp, #8
 801273e:	4b1c      	ldr	r3, [pc, #112]	; (80127b0 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa0>)
 8012740:	62e3      	str	r3, [r4, #44]	; 0x2c
 8012742:	f831 3d04 	ldrh.w	r3, [r1, #-4]!
 8012746:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 801274a:	f884 7054 	strb.w	r7, [r4, #84]	; 0x54
 801274e:	4630      	mov	r0, r6
 8012750:	f104 0758 	add.w	r7, r4, #88	; 0x58
 8012754:	f003 fc15 	bl	8015f82 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8012758:	4638      	mov	r0, r7
 801275a:	f7ff ff87 	bl	801266c <_ZN8touchgfx8DrawableC1Ev>
 801275e:	4b15      	ldr	r3, [pc, #84]	; (80127b4 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa4>)
 8012760:	65a3      	str	r3, [r4, #88]	; 0x58
 8012762:	2364      	movs	r3, #100	; 0x64
 8012764:	e9c4 3522 	strd	r3, r5, [r4, #136]	; 0x88
 8012768:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
 801276c:	4b12      	ldr	r3, [pc, #72]	; (80127b8 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa8>)
 801276e:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 8012772:	4629      	mov	r1, r5
 8012774:	4630      	mov	r0, r6
 8012776:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
 801277a:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 801277e:	e9c4 5527 	strd	r5, r5, [r4, #156]	; 0x9c
 8012782:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 8012786:	e9c4 552b 	strd	r5, r5, [r4, #172]	; 0xac
 801278a:	f7f0 fca5 	bl	80030d8 <_ZN8touchgfx8Drawable4setXEs>
 801278e:	4629      	mov	r1, r5
 8012790:	4630      	mov	r0, r6
 8012792:	f7f0 fca3 	bl	80030dc <_ZN8touchgfx8Drawable4setYEs>
 8012796:	4631      	mov	r1, r6
 8012798:	4620      	mov	r0, r4
 801279a:	f000 f819 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 801279e:	4620      	mov	r0, r4
 80127a0:	4639      	mov	r1, r7
 80127a2:	f000 f815 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80127a6:	4620      	mov	r0, r4
 80127a8:	b003      	add	sp, #12
 80127aa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80127ac:	080313ec 	.word	0x080313ec
 80127b0:	08031bf4 	.word	0x08031bf4
 80127b4:	080314c0 	.word	0x080314c0
 80127b8:	0801a6c7 	.word	0x0801a6c7

080127bc <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 80127bc:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80127be:	2000      	movs	r0, #0
 80127c0:	b12b      	cbz	r3, 80127ce <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 80127c2:	b920      	cbnz	r0, 80127ce <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 80127c4:	1a5a      	subs	r2, r3, r1
 80127c6:	4250      	negs	r0, r2
 80127c8:	4150      	adcs	r0, r2
 80127ca:	699b      	ldr	r3, [r3, #24]
 80127cc:	e7f8      	b.n	80127c0 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 80127ce:	4770      	bx	lr

080127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 80127d0:	2300      	movs	r3, #0
 80127d2:	6148      	str	r0, [r1, #20]
 80127d4:	618b      	str	r3, [r1, #24]
 80127d6:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80127d8:	b913      	cbnz	r3, 80127e0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 80127da:	6281      	str	r1, [r0, #40]	; 0x28
 80127dc:	4770      	bx	lr
 80127de:	4613      	mov	r3, r2
 80127e0:	699a      	ldr	r2, [r3, #24]
 80127e2:	2a00      	cmp	r2, #0
 80127e4:	d1fb      	bne.n	80127de <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 80127e6:	6199      	str	r1, [r3, #24]
 80127e8:	4770      	bx	lr

080127ea <_ZN8touchgfx9Container9removeAllEv>:
 80127ea:	2200      	movs	r2, #0
 80127ec:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80127ee:	b123      	cbz	r3, 80127fa <_ZN8touchgfx9Container9removeAllEv+0x10>
 80127f0:	6999      	ldr	r1, [r3, #24]
 80127f2:	6281      	str	r1, [r0, #40]	; 0x28
 80127f4:	e9c3 2205 	strd	r2, r2, [r3, #20]
 80127f8:	e7f8      	b.n	80127ec <_ZN8touchgfx9Container9removeAllEv+0x2>
 80127fa:	4770      	bx	lr

080127fc <_ZN8touchgfx9Container6unlinkEv>:
 80127fc:	2300      	movs	r3, #0
 80127fe:	6283      	str	r3, [r0, #40]	; 0x28
 8012800:	4770      	bx	lr

08012802 <_ZNK8touchgfx9Container12getSolidRectEv>:
 8012802:	2200      	movs	r2, #0
 8012804:	8002      	strh	r2, [r0, #0]
 8012806:	8042      	strh	r2, [r0, #2]
 8012808:	8082      	strh	r2, [r0, #4]
 801280a:	80c2      	strh	r2, [r0, #6]
 801280c:	4770      	bx	lr

0801280e <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 801280e:	b570      	push	{r4, r5, r6, lr}
 8012810:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8012812:	460d      	mov	r5, r1
 8012814:	4616      	mov	r6, r2
 8012816:	b13c      	cbz	r4, 8012828 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 8012818:	6823      	ldr	r3, [r4, #0]
 801281a:	4620      	mov	r0, r4
 801281c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 801281e:	4632      	mov	r2, r6
 8012820:	4629      	mov	r1, r5
 8012822:	4798      	blx	r3
 8012824:	69a4      	ldr	r4, [r4, #24]
 8012826:	e7f6      	b.n	8012816 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 8012828:	bd70      	pop	{r4, r5, r6, pc}

0801282a <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 801282a:	b538      	push	{r3, r4, r5, lr}
 801282c:	6a84      	ldr	r4, [r0, #40]	; 0x28
 801282e:	460d      	mov	r5, r1
 8012830:	b134      	cbz	r4, 8012840 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 8012832:	682b      	ldr	r3, [r5, #0]
 8012834:	4621      	mov	r1, r4
 8012836:	689b      	ldr	r3, [r3, #8]
 8012838:	4628      	mov	r0, r5
 801283a:	4798      	blx	r3
 801283c:	69a4      	ldr	r4, [r4, #24]
 801283e:	e7f7      	b.n	8012830 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 8012840:	bd38      	pop	{r3, r4, r5, pc}

08012842 <_ZN8touchgfx9ContainerD1Ev>:
 8012842:	4770      	bx	lr

08012844 <_ZN8touchgfx9ContainerD0Ev>:
 8012844:	b510      	push	{r4, lr}
 8012846:	212c      	movs	r1, #44	; 0x2c
 8012848:	4604      	mov	r4, r0
 801284a:	f01a f94e 	bl	802caea <_ZdlPvj>
 801284e:	4620      	mov	r0, r4
 8012850:	bd10      	pop	{r4, pc}

08012852 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 8012852:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8012854:	b19b      	cbz	r3, 801287e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8012856:	428b      	cmp	r3, r1
 8012858:	d109      	bne.n	801286e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 801285a:	699a      	ldr	r2, [r3, #24]
 801285c:	2100      	movs	r1, #0
 801285e:	6159      	str	r1, [r3, #20]
 8012860:	6282      	str	r2, [r0, #40]	; 0x28
 8012862:	b902      	cbnz	r2, 8012866 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 8012864:	4770      	bx	lr
 8012866:	6199      	str	r1, [r3, #24]
 8012868:	4770      	bx	lr
 801286a:	4613      	mov	r3, r2
 801286c:	b13a      	cbz	r2, 801287e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 801286e:	699a      	ldr	r2, [r3, #24]
 8012870:	428a      	cmp	r2, r1
 8012872:	d1fa      	bne.n	801286a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 8012874:	698a      	ldr	r2, [r1, #24]
 8012876:	619a      	str	r2, [r3, #24]
 8012878:	2300      	movs	r3, #0
 801287a:	e9c1 3305 	strd	r3, r3, [r1, #20]
 801287e:	4770      	bx	lr

08012880 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 8012880:	b410      	push	{r4}
 8012882:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8012884:	4604      	mov	r4, r0
 8012886:	b92b      	cbnz	r3, 8012894 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 8012888:	6803      	ldr	r3, [r0, #0]
 801288a:	f85d 4b04 	ldr.w	r4, [sp], #4
 801288e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8012890:	4611      	mov	r1, r2
 8012892:	4718      	bx	r3
 8012894:	b941      	cbnz	r1, 80128a8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 8012896:	6193      	str	r3, [r2, #24]
 8012898:	6282      	str	r2, [r0, #40]	; 0x28
 801289a:	6154      	str	r4, [r2, #20]
 801289c:	f85d 4b04 	ldr.w	r4, [sp], #4
 80128a0:	4770      	bx	lr
 80128a2:	4603      	mov	r3, r0
 80128a4:	2800      	cmp	r0, #0
 80128a6:	d0f9      	beq.n	801289c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 80128a8:	4299      	cmp	r1, r3
 80128aa:	6998      	ldr	r0, [r3, #24]
 80128ac:	d1f9      	bne.n	80128a2 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 80128ae:	6190      	str	r0, [r2, #24]
 80128b0:	618a      	str	r2, [r1, #24]
 80128b2:	e7f2      	b.n	801289a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

080128b4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 80128b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80128b8:	461f      	mov	r7, r3
 80128ba:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 80128be:	460d      	mov	r5, r1
 80128c0:	4616      	mov	r6, r2
 80128c2:	b103      	cbz	r3, 80128c6 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 80128c4:	6038      	str	r0, [r7, #0]
 80128c6:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80128c8:	b314      	cbz	r4, 8012910 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 80128ca:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 80128ce:	b1eb      	cbz	r3, 801290c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80128d0:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80128d4:	428d      	cmp	r5, r1
 80128d6:	db19      	blt.n	801290c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80128d8:	8923      	ldrh	r3, [r4, #8]
 80128da:	b289      	uxth	r1, r1
 80128dc:	440b      	add	r3, r1
 80128de:	b21b      	sxth	r3, r3
 80128e0:	429d      	cmp	r5, r3
 80128e2:	da13      	bge.n	801290c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80128e4:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 80128e8:	4296      	cmp	r6, r2
 80128ea:	db0f      	blt.n	801290c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80128ec:	8963      	ldrh	r3, [r4, #10]
 80128ee:	b292      	uxth	r2, r2
 80128f0:	4413      	add	r3, r2
 80128f2:	b21b      	sxth	r3, r3
 80128f4:	429e      	cmp	r6, r3
 80128f6:	da09      	bge.n	801290c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80128f8:	6823      	ldr	r3, [r4, #0]
 80128fa:	1ab2      	subs	r2, r6, r2
 80128fc:	1a69      	subs	r1, r5, r1
 80128fe:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 8012902:	b212      	sxth	r2, r2
 8012904:	463b      	mov	r3, r7
 8012906:	b209      	sxth	r1, r1
 8012908:	4620      	mov	r0, r4
 801290a:	47c0      	blx	r8
 801290c:	69a4      	ldr	r4, [r4, #24]
 801290e:	e7db      	b.n	80128c8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 8012910:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08012914 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 8012914:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012918:	4c6e      	ldr	r4, [pc, #440]	; (8012ad4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 801291a:	b0a1      	sub	sp, #132	; 0x84
 801291c:	6824      	ldr	r4, [r4, #0]
 801291e:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 8012920:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 8012924:	9303      	str	r3, [sp, #12]
 8012926:	2400      	movs	r4, #0
 8012928:	802c      	strh	r4, [r5, #0]
 801292a:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 801292c:	802c      	strh	r4, [r5, #0]
 801292e:	601c      	str	r4, [r3, #0]
 8012930:	4606      	mov	r6, r0
 8012932:	e9cd 1201 	strd	r1, r2, [sp, #4]
 8012936:	f7ff ffbd 	bl	80128b4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 801293a:	f1b9 0f03 	cmp.w	r9, #3
 801293e:	f340 80c2 	ble.w	8012ac6 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 8012942:	4631      	mov	r1, r6
 8012944:	a80c      	add	r0, sp, #48	; 0x30
 8012946:	f007 f99f 	bl	8019c88 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801294a:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 801294e:	9306      	str	r3, [sp, #24]
 8012950:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8012954:	9307      	str	r3, [sp, #28]
 8012956:	9b03      	ldr	r3, [sp, #12]
 8012958:	f8d3 a000 	ldr.w	sl, [r3]
 801295c:	f1ba 0f00 	cmp.w	sl, #0
 8012960:	f000 80b4 	beq.w	8012acc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 8012964:	4651      	mov	r1, sl
 8012966:	a810      	add	r0, sp, #64	; 0x40
 8012968:	f007 f98e 	bl	8019c88 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801296c:	9b01      	ldr	r3, [sp, #4]
 801296e:	9a06      	ldr	r2, [sp, #24]
 8012970:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 8012974:	189d      	adds	r5, r3, r2
 8012976:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 801297a:	9a07      	ldr	r2, [sp, #28]
 801297c:	2002      	movs	r0, #2
 801297e:	fb91 f1f0 	sdiv	r1, r1, r0
 8012982:	4419      	add	r1, r3
 8012984:	1a6d      	subs	r5, r5, r1
 8012986:	9b02      	ldr	r3, [sp, #8]
 8012988:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 801298c:	4413      	add	r3, r2
 801298e:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 8012992:	fb92 f2f0 	sdiv	r2, r2, r0
 8012996:	440a      	add	r2, r1
 8012998:	1a9b      	subs	r3, r3, r2
 801299a:	435b      	muls	r3, r3
 801299c:	fb05 3505 	mla	r5, r5, r5, r3
 80129a0:	4f4d      	ldr	r7, [pc, #308]	; (8012ad8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 80129a2:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 80129a4:	ac10      	add	r4, sp, #64	; 0x40
 80129a6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80129a8:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 80129aa:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80129ac:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 80129ae:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80129b0:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 80129b4:	f1b9 0f0c 	cmp.w	r9, #12
 80129b8:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 80129bc:	f04f 0303 	mov.w	r3, #3
 80129c0:	bfc8      	it	gt
 80129c2:	4698      	movgt	r8, r3
 80129c4:	f8cd 9000 	str.w	r9, [sp]
 80129c8:	f04f 0400 	mov.w	r4, #0
 80129cc:	bfdc      	itt	le
 80129ce:	f109 32ff 	addle.w	r2, r9, #4294967295
 80129d2:	fb92 f8f3 	sdivle	r8, r2, r3
 80129d6:	1c63      	adds	r3, r4, #1
 80129d8:	aa10      	add	r2, sp, #64	; 0x40
 80129da:	f004 0401 	and.w	r4, r4, #1
 80129de:	9308      	str	r3, [sp, #32]
 80129e0:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 80129e4:	9b00      	ldr	r3, [sp, #0]
 80129e6:	fb93 f3f8 	sdiv	r3, r3, r8
 80129ea:	b29b      	uxth	r3, r3
 80129ec:	3404      	adds	r4, #4
 80129ee:	f04f 0b00 	mov.w	fp, #0
 80129f2:	9304      	str	r3, [sp, #16]
 80129f4:	9a04      	ldr	r2, [sp, #16]
 80129f6:	f854 3c04 	ldr.w	r3, [r4, #-4]
 80129fa:	fb13 f302 	smulbb	r3, r3, r2
 80129fe:	9a01      	ldr	r2, [sp, #4]
 8012a00:	b29b      	uxth	r3, r3
 8012a02:	1899      	adds	r1, r3, r2
 8012a04:	9305      	str	r3, [sp, #20]
 8012a06:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8012a0a:	b209      	sxth	r1, r1
 8012a0c:	4299      	cmp	r1, r3
 8012a0e:	db4d      	blt.n	8012aac <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8012a10:	8932      	ldrh	r2, [r6, #8]
 8012a12:	4413      	add	r3, r2
 8012a14:	b21b      	sxth	r3, r3
 8012a16:	4299      	cmp	r1, r3
 8012a18:	da48      	bge.n	8012aac <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8012a1a:	9b04      	ldr	r3, [sp, #16]
 8012a1c:	6827      	ldr	r7, [r4, #0]
 8012a1e:	fb17 f703 	smulbb	r7, r7, r3
 8012a22:	9b02      	ldr	r3, [sp, #8]
 8012a24:	b2bf      	uxth	r7, r7
 8012a26:	18fa      	adds	r2, r7, r3
 8012a28:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8012a2c:	b212      	sxth	r2, r2
 8012a2e:	429a      	cmp	r2, r3
 8012a30:	db3c      	blt.n	8012aac <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8012a32:	8970      	ldrh	r0, [r6, #10]
 8012a34:	4403      	add	r3, r0
 8012a36:	b21b      	sxth	r3, r3
 8012a38:	429a      	cmp	r2, r3
 8012a3a:	da37      	bge.n	8012aac <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8012a3c:	2300      	movs	r3, #0
 8012a3e:	930b      	str	r3, [sp, #44]	; 0x2c
 8012a40:	4630      	mov	r0, r6
 8012a42:	ab0b      	add	r3, sp, #44	; 0x2c
 8012a44:	f7ff ff36 	bl	80128b4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8012a48:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8012a4a:	b37a      	cbz	r2, 8012aac <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8012a4c:	4552      	cmp	r2, sl
 8012a4e:	d02d      	beq.n	8012aac <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8012a50:	4611      	mov	r1, r2
 8012a52:	a80e      	add	r0, sp, #56	; 0x38
 8012a54:	9209      	str	r2, [sp, #36]	; 0x24
 8012a56:	f007 f917 	bl	8019c88 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012a5a:	9a06      	ldr	r2, [sp, #24]
 8012a5c:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 8012a60:	9b01      	ldr	r3, [sp, #4]
 8012a62:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 8012a66:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 8012a6a:	4413      	add	r3, r2
 8012a6c:	f04f 0e02 	mov.w	lr, #2
 8012a70:	fb91 f1fe 	sdiv	r1, r1, lr
 8012a74:	4401      	add	r1, r0
 8012a76:	1a58      	subs	r0, r3, r1
 8012a78:	9a07      	ldr	r2, [sp, #28]
 8012a7a:	9b02      	ldr	r3, [sp, #8]
 8012a7c:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 8012a80:	fb9c fcfe 	sdiv	ip, ip, lr
 8012a84:	4413      	add	r3, r2
 8012a86:	448c      	add	ip, r1
 8012a88:	eba3 030c 	sub.w	r3, r3, ip
 8012a8c:	435b      	muls	r3, r3
 8012a8e:	fb00 3300 	mla	r3, r0, r0, r3
 8012a92:	42ab      	cmp	r3, r5
 8012a94:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8012a96:	d208      	bcs.n	8012aaa <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 8012a98:	9803      	ldr	r0, [sp, #12]
 8012a9a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8012a9c:	6001      	str	r1, [r0, #0]
 8012a9e:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8012aa0:	9805      	ldr	r0, [sp, #20]
 8012aa2:	8008      	strh	r0, [r1, #0]
 8012aa4:	992b      	ldr	r1, [sp, #172]	; 0xac
 8012aa6:	461d      	mov	r5, r3
 8012aa8:	800f      	strh	r7, [r1, #0]
 8012aaa:	4692      	mov	sl, r2
 8012aac:	f10b 0b01 	add.w	fp, fp, #1
 8012ab0:	f1bb 0f04 	cmp.w	fp, #4
 8012ab4:	f104 0408 	add.w	r4, r4, #8
 8012ab8:	d19c      	bne.n	80129f4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 8012aba:	9b00      	ldr	r3, [sp, #0]
 8012abc:	9c08      	ldr	r4, [sp, #32]
 8012abe:	444b      	add	r3, r9
 8012ac0:	4544      	cmp	r4, r8
 8012ac2:	9300      	str	r3, [sp, #0]
 8012ac4:	d187      	bne.n	80129d6 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 8012ac6:	b021      	add	sp, #132	; 0x84
 8012ac8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012acc:	f04f 35ff 	mov.w	r5, #4294967295
 8012ad0:	e766      	b.n	80129a0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 8012ad2:	bf00      	nop
 8012ad4:	2001384c 	.word	0x2001384c
 8012ad8:	0802e9dc 	.word	0x0802e9dc

08012adc <_ZN8touchgfx4RectaNERKS0_>:
 8012adc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012ae0:	f9b1 7000 	ldrsh.w	r7, [r1]
 8012ae4:	888c      	ldrh	r4, [r1, #4]
 8012ae6:	f9b0 9000 	ldrsh.w	r9, [r0]
 8012aea:	443c      	add	r4, r7
 8012aec:	b2a4      	uxth	r4, r4
 8012aee:	fa0f f884 	sxth.w	r8, r4
 8012af2:	45c1      	cmp	r9, r8
 8012af4:	da2f      	bge.n	8012b56 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8012af6:	8882      	ldrh	r2, [r0, #4]
 8012af8:	444a      	add	r2, r9
 8012afa:	b292      	uxth	r2, r2
 8012afc:	fa0f fe82 	sxth.w	lr, r2
 8012b00:	4577      	cmp	r7, lr
 8012b02:	da28      	bge.n	8012b56 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8012b04:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8012b08:	88cb      	ldrh	r3, [r1, #6]
 8012b0a:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8012b0e:	442b      	add	r3, r5
 8012b10:	b21b      	sxth	r3, r3
 8012b12:	429e      	cmp	r6, r3
 8012b14:	da1f      	bge.n	8012b56 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8012b16:	88c3      	ldrh	r3, [r0, #6]
 8012b18:	4433      	add	r3, r6
 8012b1a:	b29b      	uxth	r3, r3
 8012b1c:	fa0f fc83 	sxth.w	ip, r3
 8012b20:	4565      	cmp	r5, ip
 8012b22:	da18      	bge.n	8012b56 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8012b24:	454f      	cmp	r7, r9
 8012b26:	bfb8      	it	lt
 8012b28:	464f      	movlt	r7, r9
 8012b2a:	42b5      	cmp	r5, r6
 8012b2c:	bfb8      	it	lt
 8012b2e:	4635      	movlt	r5, r6
 8012b30:	45f0      	cmp	r8, lr
 8012b32:	bfd8      	it	le
 8012b34:	4622      	movle	r2, r4
 8012b36:	1bd2      	subs	r2, r2, r7
 8012b38:	8082      	strh	r2, [r0, #4]
 8012b3a:	884a      	ldrh	r2, [r1, #2]
 8012b3c:	88c9      	ldrh	r1, [r1, #6]
 8012b3e:	8007      	strh	r7, [r0, #0]
 8012b40:	440a      	add	r2, r1
 8012b42:	b292      	uxth	r2, r2
 8012b44:	b211      	sxth	r1, r2
 8012b46:	458c      	cmp	ip, r1
 8012b48:	bfa8      	it	ge
 8012b4a:	4613      	movge	r3, r2
 8012b4c:	1b5b      	subs	r3, r3, r5
 8012b4e:	80c3      	strh	r3, [r0, #6]
 8012b50:	8045      	strh	r5, [r0, #2]
 8012b52:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012b56:	2300      	movs	r3, #0
 8012b58:	8003      	strh	r3, [r0, #0]
 8012b5a:	8043      	strh	r3, [r0, #2]
 8012b5c:	8083      	strh	r3, [r0, #4]
 8012b5e:	80c3      	strh	r3, [r0, #6]
 8012b60:	e7f7      	b.n	8012b52 <_ZN8touchgfx4RectaNERKS0_+0x76>

08012b62 <_ZNK8touchgfx4Rect7isEmptyEv>:
 8012b62:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8012b66:	2b00      	cmp	r3, #0
 8012b68:	dd06      	ble.n	8012b78 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 8012b6a:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 8012b6e:	2800      	cmp	r0, #0
 8012b70:	bfcc      	ite	gt
 8012b72:	2000      	movgt	r0, #0
 8012b74:	2001      	movle	r0, #1
 8012b76:	4770      	bx	lr
 8012b78:	2001      	movs	r0, #1
 8012b7a:	4770      	bx	lr

08012b7c <_ZNK8touchgfx9Container16getContainedAreaEv>:
 8012b7c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012b80:	2300      	movs	r3, #0
 8012b82:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8012b84:	8003      	strh	r3, [r0, #0]
 8012b86:	4604      	mov	r4, r0
 8012b88:	8043      	strh	r3, [r0, #2]
 8012b8a:	8083      	strh	r3, [r0, #4]
 8012b8c:	80c3      	strh	r3, [r0, #6]
 8012b8e:	2d00      	cmp	r5, #0
 8012b90:	d040      	beq.n	8012c14 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 8012b92:	1d28      	adds	r0, r5, #4
 8012b94:	f7ff ffe5 	bl	8012b62 <_ZNK8touchgfx4Rect7isEmptyEv>
 8012b98:	b988      	cbnz	r0, 8012bbe <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8012b9a:	4620      	mov	r0, r4
 8012b9c:	f7ff ffe1 	bl	8012b62 <_ZNK8touchgfx4Rect7isEmptyEv>
 8012ba0:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8012ba4:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8012ba8:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 8012bac:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 8012bb0:	b138      	cbz	r0, 8012bc2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 8012bb2:	8022      	strh	r2, [r4, #0]
 8012bb4:	8063      	strh	r3, [r4, #2]
 8012bb6:	f8a4 e004 	strh.w	lr, [r4, #4]
 8012bba:	f8a4 c006 	strh.w	ip, [r4, #6]
 8012bbe:	69ad      	ldr	r5, [r5, #24]
 8012bc0:	e7e5      	b.n	8012b8e <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 8012bc2:	f9b4 0000 	ldrsh.w	r0, [r4]
 8012bc6:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8012bca:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 8012bce:	4290      	cmp	r0, r2
 8012bd0:	4607      	mov	r7, r0
 8012bd2:	bfa8      	it	ge
 8012bd4:	4617      	movge	r7, r2
 8012bd6:	4472      	add	r2, lr
 8012bd8:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 8012bdc:	8027      	strh	r7, [r4, #0]
 8012bde:	4299      	cmp	r1, r3
 8012be0:	460e      	mov	r6, r1
 8012be2:	4440      	add	r0, r8
 8012be4:	bfa8      	it	ge
 8012be6:	461e      	movge	r6, r3
 8012be8:	4471      	add	r1, lr
 8012bea:	4463      	add	r3, ip
 8012bec:	b200      	sxth	r0, r0
 8012bee:	b212      	sxth	r2, r2
 8012bf0:	b209      	sxth	r1, r1
 8012bf2:	b21b      	sxth	r3, r3
 8012bf4:	4290      	cmp	r0, r2
 8012bf6:	bfac      	ite	ge
 8012bf8:	ebc7 0200 	rsbge	r2, r7, r0
 8012bfc:	ebc7 0202 	rsblt	r2, r7, r2
 8012c00:	4299      	cmp	r1, r3
 8012c02:	bfac      	ite	ge
 8012c04:	ebc6 0301 	rsbge	r3, r6, r1
 8012c08:	ebc6 0303 	rsblt	r3, r6, r3
 8012c0c:	8066      	strh	r6, [r4, #2]
 8012c0e:	80a2      	strh	r2, [r4, #4]
 8012c10:	80e3      	strh	r3, [r4, #6]
 8012c12:	e7d4      	b.n	8012bbe <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8012c14:	4620      	mov	r0, r4
 8012c16:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08012c1a <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 8012c1a:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8012c1e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8012c22:	b383      	cbz	r3, 8012c86 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8012c24:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8012c26:	b374      	cbz	r4, 8012c86 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8012c28:	f9b1 5000 	ldrsh.w	r5, [r1]
 8012c2c:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 8012c30:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 8012c34:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 8012c38:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8012c3c:	b303      	cbz	r3, 8012c80 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8012c3e:	4668      	mov	r0, sp
 8012c40:	1d21      	adds	r1, r4, #4
 8012c42:	f8ad 5000 	strh.w	r5, [sp]
 8012c46:	f8ad 6002 	strh.w	r6, [sp, #2]
 8012c4a:	f8ad 7004 	strh.w	r7, [sp, #4]
 8012c4e:	f8ad 8006 	strh.w	r8, [sp, #6]
 8012c52:	f7ff ff43 	bl	8012adc <_ZN8touchgfx4RectaNERKS0_>
 8012c56:	4668      	mov	r0, sp
 8012c58:	f7ff ff83 	bl	8012b62 <_ZNK8touchgfx4Rect7isEmptyEv>
 8012c5c:	b980      	cbnz	r0, 8012c80 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8012c5e:	f8bd 3000 	ldrh.w	r3, [sp]
 8012c62:	88a2      	ldrh	r2, [r4, #4]
 8012c64:	1a9b      	subs	r3, r3, r2
 8012c66:	f8ad 3000 	strh.w	r3, [sp]
 8012c6a:	88e2      	ldrh	r2, [r4, #6]
 8012c6c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8012c70:	1a9b      	subs	r3, r3, r2
 8012c72:	f8ad 3002 	strh.w	r3, [sp, #2]
 8012c76:	6823      	ldr	r3, [r4, #0]
 8012c78:	4669      	mov	r1, sp
 8012c7a:	689b      	ldr	r3, [r3, #8]
 8012c7c:	4620      	mov	r0, r4
 8012c7e:	4798      	blx	r3
 8012c80:	69a4      	ldr	r4, [r4, #24]
 8012c82:	2c00      	cmp	r4, #0
 8012c84:	d1d8      	bne.n	8012c38 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 8012c86:	b002      	add	sp, #8
 8012c88:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08012c8c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 8012c8c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8012c8e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8012c92:	460d      	mov	r5, r1
 8012c94:	4616      	mov	r6, r2
 8012c96:	b323      	cbz	r3, 8012ce2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8012c98:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8012c9a:	b314      	cbz	r4, 8012ce2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8012c9c:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8012ca0:	b1eb      	cbz	r3, 8012cde <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8012ca2:	6828      	ldr	r0, [r5, #0]
 8012ca4:	6869      	ldr	r1, [r5, #4]
 8012ca6:	466b      	mov	r3, sp
 8012ca8:	c303      	stmia	r3!, {r0, r1}
 8012caa:	4668      	mov	r0, sp
 8012cac:	1d21      	adds	r1, r4, #4
 8012cae:	f7ff ff15 	bl	8012adc <_ZN8touchgfx4RectaNERKS0_>
 8012cb2:	4668      	mov	r0, sp
 8012cb4:	f7ff ff55 	bl	8012b62 <_ZNK8touchgfx4Rect7isEmptyEv>
 8012cb8:	b988      	cbnz	r0, 8012cde <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8012cba:	f8bd 3000 	ldrh.w	r3, [sp]
 8012cbe:	88a2      	ldrh	r2, [r4, #4]
 8012cc0:	1a9b      	subs	r3, r3, r2
 8012cc2:	f8ad 3000 	strh.w	r3, [sp]
 8012cc6:	88e2      	ldrh	r2, [r4, #6]
 8012cc8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8012ccc:	1a9b      	subs	r3, r3, r2
 8012cce:	f8ad 3002 	strh.w	r3, [sp, #2]
 8012cd2:	6823      	ldr	r3, [r4, #0]
 8012cd4:	4632      	mov	r2, r6
 8012cd6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8012cd8:	4669      	mov	r1, sp
 8012cda:	4620      	mov	r0, r4
 8012cdc:	4798      	blx	r3
 8012cde:	69a4      	ldr	r4, [r4, #24]
 8012ce0:	e7db      	b.n	8012c9a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 8012ce2:	b002      	add	sp, #8
 8012ce4:	bd70      	pop	{r4, r5, r6, pc}

08012ce6 <_ZN8touchgfx14SwipeContainer14setSwipeCutoffEt>:
 8012ce6:	85c1      	strh	r1, [r0, #46]	; 0x2e
 8012ce8:	4770      	bx	lr
	...

08012cec <_ZN8touchgfx14SwipeContainerD1Ev>:
 8012cec:	4b05      	ldr	r3, [pc, #20]	; (8012d04 <_ZN8touchgfx14SwipeContainerD1Ev+0x18>)
 8012cee:	b510      	push	{r4, lr}
 8012cf0:	6003      	str	r3, [r0, #0]
 8012cf2:	4604      	mov	r4, r0
 8012cf4:	f005 fe44 	bl	8018980 <_ZN8touchgfx11Application11getInstanceEv>
 8012cf8:	4621      	mov	r1, r4
 8012cfa:	3004      	adds	r0, #4
 8012cfc:	f005 fe8d 	bl	8018a1a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 8012d00:	4620      	mov	r0, r4
 8012d02:	bd10      	pop	{r4, pc}
 8012d04:	08031550 	.word	0x08031550

08012d08 <_ZN8touchgfx14SwipeContainerD0Ev>:
 8012d08:	b510      	push	{r4, lr}
 8012d0a:	4604      	mov	r4, r0
 8012d0c:	f7ff ffee 	bl	8012cec <_ZN8touchgfx14SwipeContainerD1Ev>
 8012d10:	4620      	mov	r0, r4
 8012d12:	21f4      	movs	r1, #244	; 0xf4
 8012d14:	f019 fee9 	bl	802caea <_ZdlPvj>
 8012d18:	4620      	mov	r0, r4
 8012d1a:	bd10      	pop	{r4, pc}

08012d1c <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE>:
 8012d1c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8012d20:	2b04      	cmp	r3, #4
 8012d22:	d117      	bne.n	8012d54 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x38>
 8012d24:	790b      	ldrb	r3, [r1, #4]
 8012d26:	2b01      	cmp	r3, #1
 8012d28:	d114      	bne.n	8012d54 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x38>
 8012d2a:	f9b0 3030 	ldrsh.w	r3, [r0, #48]	; 0x30
 8012d2e:	8f82      	ldrh	r2, [r0, #60]	; 0x3c
 8012d30:	8643      	strh	r3, [r0, #50]	; 0x32
 8012d32:	2b00      	cmp	r3, #0
 8012d34:	8682      	strh	r2, [r0, #52]	; 0x34
 8012d36:	f890 10f1 	ldrb.w	r1, [r0, #241]	; 0xf1
 8012d3a:	da0e      	bge.n	8012d5a <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x3e>
 8012d3c:	f890 20f0 	ldrb.w	r2, [r0, #240]	; 0xf0
 8012d40:	3a01      	subs	r2, #1
 8012d42:	4291      	cmp	r1, r2
 8012d44:	d007      	beq.n	8012d56 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x3a>
 8012d46:	8dc2      	ldrh	r2, [r0, #46]	; 0x2e
 8012d48:	4252      	negs	r2, r2
 8012d4a:	4293      	cmp	r3, r2
 8012d4c:	dc03      	bgt.n	8012d56 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x3a>
 8012d4e:	2302      	movs	r3, #2
 8012d50:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8012d54:	4770      	bx	lr
 8012d56:	2300      	movs	r3, #0
 8012d58:	e7fa      	b.n	8012d50 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x34>
 8012d5a:	d0fb      	beq.n	8012d54 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x38>
 8012d5c:	b111      	cbz	r1, 8012d64 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x48>
 8012d5e:	8dc2      	ldrh	r2, [r0, #46]	; 0x2e
 8012d60:	4293      	cmp	r3, r2
 8012d62:	da01      	bge.n	8012d68 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x4c>
 8012d64:	2301      	movs	r3, #1
 8012d66:	e7f3      	b.n	8012d50 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x34>
 8012d68:	2303      	movs	r3, #3
 8012d6a:	e7f1      	b.n	8012d50 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x34>

08012d6c <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE>:
 8012d6c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8012d70:	2b04      	cmp	r3, #4
 8012d72:	d113      	bne.n	8012d9c <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 8012d74:	790b      	ldrb	r3, [r1, #4]
 8012d76:	b98b      	cbnz	r3, 8012d9c <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 8012d78:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8012d7a:	8643      	strh	r3, [r0, #50]	; 0x32
 8012d7c:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 8012d7e:	8683      	strh	r3, [r0, #52]	; 0x34
 8012d80:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8012d84:	f890 20f1 	ldrb.w	r2, [r0, #241]	; 0xf1
 8012d88:	2b00      	cmp	r3, #0
 8012d8a:	da08      	bge.n	8012d9e <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x32>
 8012d8c:	f890 30f0 	ldrb.w	r3, [r0, #240]	; 0xf0
 8012d90:	3b01      	subs	r3, #1
 8012d92:	429a      	cmp	r2, r3
 8012d94:	da02      	bge.n	8012d9c <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 8012d96:	2302      	movs	r3, #2
 8012d98:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8012d9c:	4770      	bx	lr
 8012d9e:	d0fd      	beq.n	8012d9c <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 8012da0:	2a00      	cmp	r2, #0
 8012da2:	d0fb      	beq.n	8012d9c <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 8012da4:	2303      	movs	r3, #3
 8012da6:	e7f7      	b.n	8012d98 <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x2c>

08012da8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
 8012da8:	b538      	push	{r3, r4, r5, lr}
 8012daa:	2226      	movs	r2, #38	; 0x26
 8012dac:	4604      	mov	r4, r0
 8012dae:	460d      	mov	r5, r1
 8012db0:	2100      	movs	r1, #0
 8012db2:	f01a ff86 	bl	802dcc2 <memset>
 8012db6:	4620      	mov	r0, r4
 8012db8:	f7ff fc58 	bl	801266c <_ZN8touchgfx8DrawableC1Ev>
 8012dbc:	4b06      	ldr	r3, [pc, #24]	; (8012dd8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x30>)
 8012dbe:	6023      	str	r3, [r4, #0]
 8012dc0:	882b      	ldrh	r3, [r5, #0]
 8012dc2:	84e3      	strh	r3, [r4, #38]	; 0x26
 8012dc4:	23ff      	movs	r3, #255	; 0xff
 8012dc6:	4620      	mov	r0, r4
 8012dc8:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 8012dcc:	4629      	mov	r1, r5
 8012dce:	f003 f8d8 	bl	8015f82 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8012dd2:	4620      	mov	r0, r4
 8012dd4:	bd38      	pop	{r3, r4, r5, pc}
 8012dd6:	bf00      	nop
 8012dd8:	08031bf4 	.word	0x08031bf4

08012ddc <_ZN8touchgfx14SwipeContainer23setEndSwipeElasticWidthEt>:
 8012ddc:	86c1      	strh	r1, [r0, #54]	; 0x36
 8012dde:	4770      	bx	lr

08012de0 <_ZN8touchgfx14SwipeContainer18setPageIndicatorXYEss>:
 8012de0:	b508      	push	{r3, lr}
 8012de2:	3068      	adds	r0, #104	; 0x68
 8012de4:	f7f0 fbfa 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8012de8:	bd08      	pop	{r3, pc}

08012dea <_ZN8touchgfx14SwipeContainer11adjustPagesEv>:
 8012dea:	b508      	push	{r3, lr}
 8012dec:	8e02      	ldrh	r2, [r0, #48]	; 0x30
 8012dee:	f890 10f1 	ldrb.w	r1, [r0, #241]	; 0xf1
 8012df2:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8012df6:	fb03 2111 	mls	r1, r3, r1, r2
 8012dfa:	b209      	sxth	r1, r1
 8012dfc:	2200      	movs	r2, #0
 8012dfe:	3038      	adds	r0, #56	; 0x38
 8012e00:	f7f0 f977 	bl	80030f2 <_ZN8touchgfx8Drawable6moveToEss>
 8012e04:	bd08      	pop	{r3, pc}

08012e06 <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE>:
 8012e06:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8012e0a:	2b04      	cmp	r3, #4
 8012e0c:	d119      	bne.n	8012e42 <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x3c>
 8012e0e:	88ca      	ldrh	r2, [r1, #6]
 8012e10:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8012e12:	1a9b      	subs	r3, r3, r2
 8012e14:	894a      	ldrh	r2, [r1, #10]
 8012e16:	f890 10f1 	ldrb.w	r1, [r0, #241]	; 0xf1
 8012e1a:	4413      	add	r3, r2
 8012e1c:	b21b      	sxth	r3, r3
 8012e1e:	8603      	strh	r3, [r0, #48]	; 0x30
 8012e20:	b921      	cbnz	r1, 8012e2c <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x26>
 8012e22:	8ec2      	ldrh	r2, [r0, #54]	; 0x36
 8012e24:	4293      	cmp	r3, r2
 8012e26:	dd01      	ble.n	8012e2c <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x26>
 8012e28:	8602      	strh	r2, [r0, #48]	; 0x30
 8012e2a:	e008      	b.n	8012e3e <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x38>
 8012e2c:	f890 20f0 	ldrb.w	r2, [r0, #240]	; 0xf0
 8012e30:	3a01      	subs	r2, #1
 8012e32:	4291      	cmp	r1, r2
 8012e34:	d103      	bne.n	8012e3e <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x38>
 8012e36:	8ec2      	ldrh	r2, [r0, #54]	; 0x36
 8012e38:	4252      	negs	r2, r2
 8012e3a:	4293      	cmp	r3, r2
 8012e3c:	dbf4      	blt.n	8012e28 <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x22>
 8012e3e:	f7ff bfd4 	b.w	8012dea <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 8012e42:	4770      	bx	lr

08012e44 <_ZN8touchgfx14SwipeContainer25animateSwipeCancelledLeftEv>:
 8012e44:	b538      	push	{r3, r4, r5, lr}
 8012e46:	f890 502d 	ldrb.w	r5, [r0, #45]	; 0x2d
 8012e4a:	2d0e      	cmp	r5, #14
 8012e4c:	4604      	mov	r4, r0
 8012e4e:	d813      	bhi.n	8012e78 <_ZN8touchgfx14SwipeContainer25animateSwipeCancelledLeftEv+0x34>
 8012e50:	8e42      	ldrh	r2, [r0, #50]	; 0x32
 8012e52:	4252      	negs	r2, r2
 8012e54:	230e      	movs	r3, #14
 8012e56:	b212      	sxth	r2, r2
 8012e58:	2100      	movs	r1, #0
 8012e5a:	4628      	mov	r0, r5
 8012e5c:	f007 fbc2 	bl	801a5e4 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst>
 8012e60:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 8012e62:	4418      	add	r0, r3
 8012e64:	8620      	strh	r0, [r4, #48]	; 0x30
 8012e66:	4620      	mov	r0, r4
 8012e68:	f7ff ffbf 	bl	8012dea <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 8012e6c:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
 8012e70:	3301      	adds	r3, #1
 8012e72:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 8012e76:	bd38      	pop	{r3, r4, r5, pc}
 8012e78:	2304      	movs	r3, #4
 8012e7a:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8012e7e:	2300      	movs	r3, #0
 8012e80:	f880 302d 	strb.w	r3, [r0, #45]	; 0x2d
 8012e84:	8603      	strh	r3, [r0, #48]	; 0x30
 8012e86:	e7ef      	b.n	8012e68 <_ZN8touchgfx14SwipeContainer25animateSwipeCancelledLeftEv+0x24>

08012e88 <_ZN8touchgfx14SwipeContainer26animateSwipeCancelledRightEv>:
 8012e88:	b538      	push	{r3, r4, r5, lr}
 8012e8a:	f890 502d 	ldrb.w	r5, [r0, #45]	; 0x2d
 8012e8e:	2d0e      	cmp	r5, #14
 8012e90:	4604      	mov	r4, r0
 8012e92:	d812      	bhi.n	8012eba <_ZN8touchgfx14SwipeContainer26animateSwipeCancelledRightEv+0x32>
 8012e94:	230e      	movs	r3, #14
 8012e96:	f9b0 2032 	ldrsh.w	r2, [r0, #50]	; 0x32
 8012e9a:	2100      	movs	r1, #0
 8012e9c:	4628      	mov	r0, r5
 8012e9e:	f007 fba1 	bl	801a5e4 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst>
 8012ea2:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 8012ea4:	1a18      	subs	r0, r3, r0
 8012ea6:	8620      	strh	r0, [r4, #48]	; 0x30
 8012ea8:	4620      	mov	r0, r4
 8012eaa:	f7ff ff9e 	bl	8012dea <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 8012eae:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
 8012eb2:	3301      	adds	r3, #1
 8012eb4:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 8012eb8:	bd38      	pop	{r3, r4, r5, pc}
 8012eba:	2304      	movs	r3, #4
 8012ebc:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8012ec0:	2300      	movs	r3, #0
 8012ec2:	f880 302d 	strb.w	r3, [r0, #45]	; 0x2d
 8012ec6:	8603      	strh	r3, [r0, #48]	; 0x30
 8012ec8:	e7ef      	b.n	8012eaa <_ZN8touchgfx14SwipeContainer26animateSwipeCancelledRightEv+0x22>
	...

08012ecc <_ZN8touchgfx14SwipeContainer13PageIndicatorC1Ev>:
 8012ecc:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8012ed0:	4604      	mov	r4, r0
 8012ed2:	4626      	mov	r6, r4
 8012ed4:	af02      	add	r7, sp, #8
 8012ed6:	f7ff fbc9 	bl	801266c <_ZN8touchgfx8DrawableC1Ev>
 8012eda:	2500      	movs	r5, #0
 8012edc:	4b18      	ldr	r3, [pc, #96]	; (8012f40 <_ZN8touchgfx14SwipeContainer13PageIndicatorC1Ev+0x74>)
 8012ede:	62a5      	str	r5, [r4, #40]	; 0x28
 8012ee0:	f64f 79ff 	movw	r9, #65535	; 0xffff
 8012ee4:	f846 3b2c 	str.w	r3, [r6], #44
 8012ee8:	f827 9d04 	strh.w	r9, [r7, #-4]!
 8012eec:	4630      	mov	r0, r6
 8012eee:	4639      	mov	r1, r7
 8012ef0:	f7ff ff5a 	bl	8012da8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8012ef4:	f104 085c 	add.w	r8, r4, #92	; 0x5c
 8012ef8:	4b12      	ldr	r3, [pc, #72]	; (8012f44 <_ZN8touchgfx14SwipeContainer13PageIndicatorC1Ev+0x78>)
 8012efa:	62e3      	str	r3, [r4, #44]	; 0x2c
 8012efc:	4639      	mov	r1, r7
 8012efe:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 8012f02:	f8a4 5058 	strh.w	r5, [r4, #88]	; 0x58
 8012f06:	4640      	mov	r0, r8
 8012f08:	f8ad 9004 	strh.w	r9, [sp, #4]
 8012f0c:	f7ff ff4c 	bl	8012da8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8012f10:	462a      	mov	r2, r5
 8012f12:	4629      	mov	r1, r5
 8012f14:	4630      	mov	r0, r6
 8012f16:	f8a4 5088 	strh.w	r5, [r4, #136]	; 0x88
 8012f1a:	f7f0 fb5f 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8012f1e:	462a      	mov	r2, r5
 8012f20:	4629      	mov	r1, r5
 8012f22:	4640      	mov	r0, r8
 8012f24:	f7f0 fb5a 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8012f28:	4631      	mov	r1, r6
 8012f2a:	4620      	mov	r0, r4
 8012f2c:	f7ff fc50 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8012f30:	4620      	mov	r0, r4
 8012f32:	4641      	mov	r1, r8
 8012f34:	f7ff fc4c 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8012f38:	4620      	mov	r0, r4
 8012f3a:	b003      	add	sp, #12
 8012f3c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012f40:	0802f464 	.word	0x0802f464
 8012f44:	08031a10 	.word	0x08031a10

08012f48 <_ZN8touchgfx14SwipeContainerC1Ev>:
 8012f48:	b570      	push	{r4, r5, r6, lr}
 8012f4a:	4604      	mov	r4, r0
 8012f4c:	f7ff fb8e 	bl	801266c <_ZN8touchgfx8DrawableC1Ev>
 8012f50:	4b1a      	ldr	r3, [pc, #104]	; (8012fbc <_ZN8touchgfx14SwipeContainerC1Ev+0x74>)
 8012f52:	6023      	str	r3, [r4, #0]
 8012f54:	2304      	movs	r3, #4
 8012f56:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 8012f5a:	2350      	movs	r3, #80	; 0x50
 8012f5c:	2500      	movs	r5, #0
 8012f5e:	85e3      	strh	r3, [r4, #46]	; 0x2e
 8012f60:	f104 0638 	add.w	r6, r4, #56	; 0x38
 8012f64:	231e      	movs	r3, #30
 8012f66:	62a5      	str	r5, [r4, #40]	; 0x28
 8012f68:	f884 502d 	strb.w	r5, [r4, #45]	; 0x2d
 8012f6c:	8625      	strh	r5, [r4, #48]	; 0x30
 8012f6e:	8665      	strh	r5, [r4, #50]	; 0x32
 8012f70:	86a5      	strh	r5, [r4, #52]	; 0x34
 8012f72:	86e3      	strh	r3, [r4, #54]	; 0x36
 8012f74:	4630      	mov	r0, r6
 8012f76:	f7ff fb79 	bl	801266c <_ZN8touchgfx8DrawableC1Ev>
 8012f7a:	4b11      	ldr	r3, [pc, #68]	; (8012fc0 <_ZN8touchgfx14SwipeContainerC1Ev+0x78>)
 8012f7c:	6625      	str	r5, [r4, #96]	; 0x60
 8012f7e:	63a3      	str	r3, [r4, #56]	; 0x38
 8012f80:	f8a4 5066 	strh.w	r5, [r4, #102]	; 0x66
 8012f84:	2302      	movs	r3, #2
 8012f86:	f104 0568 	add.w	r5, r4, #104	; 0x68
 8012f8a:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 8012f8e:	4628      	mov	r0, r5
 8012f90:	f7ff ff9c 	bl	8012ecc <_ZN8touchgfx14SwipeContainer13PageIndicatorC1Ev>
 8012f94:	f005 fcf4 	bl	8018980 <_ZN8touchgfx11Application11getInstanceEv>
 8012f98:	4621      	mov	r1, r4
 8012f9a:	3004      	adds	r0, #4
 8012f9c:	f005 fde6 	bl	8018b6c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 8012fa0:	2301      	movs	r3, #1
 8012fa2:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
 8012fa6:	4631      	mov	r1, r6
 8012fa8:	4620      	mov	r0, r4
 8012faa:	f7ff fc11 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8012fae:	4620      	mov	r0, r4
 8012fb0:	4629      	mov	r1, r5
 8012fb2:	f7ff fc0d 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8012fb6:	4620      	mov	r0, r4
 8012fb8:	bd70      	pop	{r4, r5, r6, pc}
 8012fba:	bf00      	nop
 8012fbc:	08031550 	.word	0x08031550
 8012fc0:	08031614 	.word	0x08031614

08012fc4 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>:
 8012fc4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8012fc6:	f890 3088 	ldrb.w	r3, [r0, #136]	; 0x88
 8012fca:	428b      	cmp	r3, r1
 8012fcc:	4604      	mov	r4, r0
 8012fce:	460d      	mov	r5, r1
 8012fd0:	d915      	bls.n	8012ffe <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh+0x3a>
 8012fd2:	f890 3089 	ldrb.w	r3, [r0, #137]	; 0x89
 8012fd6:	428b      	cmp	r3, r1
 8012fd8:	d011      	beq.n	8012ffe <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh+0x3a>
 8012fda:	f884 1089 	strb.w	r1, [r4, #137]	; 0x89
 8012fde:	f8b0 3052 	ldrh.w	r3, [r0, #82]	; 0x52
 8012fe2:	a802      	add	r0, sp, #8
 8012fe4:	f820 3d04 	strh.w	r3, [r0, #-4]!
 8012fe8:	f009 f91a 	bl	801c220 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012fec:	fb15 f100 	smulbb	r1, r5, r0
 8012ff0:	f9b4 2062 	ldrsh.w	r2, [r4, #98]	; 0x62
 8012ff4:	b209      	sxth	r1, r1
 8012ff6:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8012ffa:	f7f0 f87a 	bl	80030f2 <_ZN8touchgfx8Drawable6moveToEss>
 8012ffe:	b003      	add	sp, #12
 8013000:	bd30      	pop	{r4, r5, pc}

08013002 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh>:
 8013002:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8013004:	4604      	mov	r4, r0
 8013006:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801300a:	f884 1088 	strb.w	r1, [r4, #136]	; 0x88
 801300e:	f8b0 3052 	ldrh.w	r3, [r0, #82]	; 0x52
 8013012:	4293      	cmp	r3, r2
 8013014:	460d      	mov	r5, r1
 8013016:	d01e      	beq.n	8013056 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh+0x54>
 8013018:	a802      	add	r0, sp, #8
 801301a:	f820 3d04 	strh.w	r3, [r0, #-4]!
 801301e:	f009 f8ff 	bl	801c220 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013022:	6823      	ldr	r3, [r4, #0]
 8013024:	fb15 f000 	smulbb	r0, r5, r0
 8013028:	86a0      	strh	r0, [r4, #52]	; 0x34
 801302a:	695b      	ldr	r3, [r3, #20]
 801302c:	4620      	mov	r0, r4
 801302e:	4798      	blx	r3
 8013030:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	; 0x36
 8013034:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 8013038:	4620      	mov	r0, r4
 801303a:	f7ff fb2f 	bl	801269c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 801303e:	f894 1089 	ldrb.w	r1, [r4, #137]	; 0x89
 8013042:	42a9      	cmp	r1, r5
 8013044:	4620      	mov	r0, r4
 8013046:	bf28      	it	cs
 8013048:	4629      	movcs	r1, r5
 801304a:	f7ff ffbb 	bl	8012fc4 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>
 801304e:	6823      	ldr	r3, [r4, #0]
 8013050:	4620      	mov	r0, r4
 8013052:	695b      	ldr	r3, [r3, #20]
 8013054:	4798      	blx	r3
 8013056:	b003      	add	sp, #12
 8013058:	bd30      	pop	{r4, r5, pc}

0801305a <_ZN8touchgfx14SwipeContainer13PageIndicator10setBitmapsERKNS_6BitmapES4_>:
 801305a:	b538      	push	{r3, r4, r5, lr}
 801305c:	4604      	mov	r4, r0
 801305e:	460d      	mov	r5, r1
 8013060:	305c      	adds	r0, #92	; 0x5c
 8013062:	4611      	mov	r1, r2
 8013064:	f002 ff8d 	bl	8015f82 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8013068:	4629      	mov	r1, r5
 801306a:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 801306e:	f002 fa53 	bl	8015518 <_ZN8touchgfx10TiledImage9setBitmapERKNS_6BitmapE>
 8013072:	f894 1088 	ldrb.w	r1, [r4, #136]	; 0x88
 8013076:	b121      	cbz	r1, 8013082 <_ZN8touchgfx14SwipeContainer13PageIndicator10setBitmapsERKNS_6BitmapES4_+0x28>
 8013078:	4620      	mov	r0, r4
 801307a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801307e:	f7ff bfc0 	b.w	8013002 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh>
 8013082:	bd38      	pop	{r3, r4, r5, pc}

08013084 <_ZN8touchgfx14SwipeContainer23setPageIndicatorBitmapsERKNS_6BitmapES3_>:
 8013084:	3068      	adds	r0, #104	; 0x68
 8013086:	f7ff bfe8 	b.w	801305a <_ZN8touchgfx14SwipeContainer13PageIndicator10setBitmapsERKNS_6BitmapES4_>

0801308a <_ZN8touchgfx14SwipeContainer13PageIndicator7goRightEv>:
 801308a:	f890 1089 	ldrb.w	r1, [r0, #137]	; 0x89
 801308e:	f890 2088 	ldrb.w	r2, [r0, #136]	; 0x88
 8013092:	3101      	adds	r1, #1
 8013094:	fb91 f3f2 	sdiv	r3, r1, r2
 8013098:	fb02 1113 	mls	r1, r2, r3, r1
 801309c:	b2c9      	uxtb	r1, r1
 801309e:	f7ff bf91 	b.w	8012fc4 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>

080130a2 <_ZN8touchgfx14SwipeContainer11animateLeftEv>:
 80130a2:	b510      	push	{r4, lr}
 80130a4:	4604      	mov	r4, r0
 80130a6:	f890 002d 	ldrb.w	r0, [r0, #45]	; 0x2d
 80130aa:	280a      	cmp	r0, #10
 80130ac:	d813      	bhi.n	80130d6 <_ZN8touchgfx14SwipeContainer11animateLeftEv+0x34>
 80130ae:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 80130b0:	8922      	ldrh	r2, [r4, #8]
 80130b2:	441a      	add	r2, r3
 80130b4:	b212      	sxth	r2, r2
 80130b6:	230a      	movs	r3, #10
 80130b8:	2100      	movs	r1, #0
 80130ba:	f007 fad1 	bl	801a660 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
 80130be:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 80130c0:	1a18      	subs	r0, r3, r0
 80130c2:	8620      	strh	r0, [r4, #48]	; 0x30
 80130c4:	4620      	mov	r0, r4
 80130c6:	f7ff fe90 	bl	8012dea <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 80130ca:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
 80130ce:	3301      	adds	r3, #1
 80130d0:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 80130d4:	bd10      	pop	{r4, pc}
 80130d6:	2304      	movs	r3, #4
 80130d8:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 80130dc:	2300      	movs	r3, #0
 80130de:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 80130e2:	8623      	strh	r3, [r4, #48]	; 0x30
 80130e4:	f104 0068 	add.w	r0, r4, #104	; 0x68
 80130e8:	f7ff ffcf 	bl	801308a <_ZN8touchgfx14SwipeContainer13PageIndicator7goRightEv>
 80130ec:	e7ea      	b.n	80130c4 <_ZN8touchgfx14SwipeContainer11animateLeftEv+0x22>

080130ee <_ZN8touchgfx14SwipeContainer13PageIndicator6goLeftEv>:
 80130ee:	f890 2088 	ldrb.w	r2, [r0, #136]	; 0x88
 80130f2:	f890 1089 	ldrb.w	r1, [r0, #137]	; 0x89
 80130f6:	4411      	add	r1, r2
 80130f8:	3901      	subs	r1, #1
 80130fa:	fb91 f3f2 	sdiv	r3, r1, r2
 80130fe:	fb02 1113 	mls	r1, r2, r3, r1
 8013102:	b2c9      	uxtb	r1, r1
 8013104:	f7ff bf5e 	b.w	8012fc4 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>

08013108 <_ZN8touchgfx14SwipeContainer12animateRightEv>:
 8013108:	b510      	push	{r4, lr}
 801310a:	4604      	mov	r4, r0
 801310c:	f890 002d 	ldrb.w	r0, [r0, #45]	; 0x2d
 8013110:	280a      	cmp	r0, #10
 8013112:	d813      	bhi.n	801313c <_ZN8touchgfx14SwipeContainer12animateRightEv+0x34>
 8013114:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 8013116:	8922      	ldrh	r2, [r4, #8]
 8013118:	1ad2      	subs	r2, r2, r3
 801311a:	b212      	sxth	r2, r2
 801311c:	230a      	movs	r3, #10
 801311e:	2100      	movs	r1, #0
 8013120:	f007 fa9e 	bl	801a660 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
 8013124:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 8013126:	4418      	add	r0, r3
 8013128:	8620      	strh	r0, [r4, #48]	; 0x30
 801312a:	4620      	mov	r0, r4
 801312c:	f7ff fe5d 	bl	8012dea <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 8013130:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
 8013134:	3301      	adds	r3, #1
 8013136:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 801313a:	bd10      	pop	{r4, pc}
 801313c:	2304      	movs	r3, #4
 801313e:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 8013142:	2300      	movs	r3, #0
 8013144:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 8013148:	8623      	strh	r3, [r4, #48]	; 0x30
 801314a:	f104 0068 	add.w	r0, r4, #104	; 0x68
 801314e:	f7ff ffce 	bl	80130ee <_ZN8touchgfx14SwipeContainer13PageIndicator6goLeftEv>
 8013152:	e7ea      	b.n	801312a <_ZN8touchgfx14SwipeContainer12animateRightEv+0x22>

08013154 <_ZN8touchgfx14SwipeContainer15handleTickEventEv>:
 8013154:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8013158:	b90b      	cbnz	r3, 801315e <_ZN8touchgfx14SwipeContainer15handleTickEventEv+0xa>
 801315a:	f7ff be73 	b.w	8012e44 <_ZN8touchgfx14SwipeContainer25animateSwipeCancelledLeftEv>
 801315e:	2b01      	cmp	r3, #1
 8013160:	d101      	bne.n	8013166 <_ZN8touchgfx14SwipeContainer15handleTickEventEv+0x12>
 8013162:	f7ff be91 	b.w	8012e88 <_ZN8touchgfx14SwipeContainer26animateSwipeCancelledRightEv>
 8013166:	2b02      	cmp	r3, #2
 8013168:	d101      	bne.n	801316e <_ZN8touchgfx14SwipeContainer15handleTickEventEv+0x1a>
 801316a:	f7ff bf9a 	b.w	80130a2 <_ZN8touchgfx14SwipeContainer11animateLeftEv>
 801316e:	2b03      	cmp	r3, #3
 8013170:	d101      	bne.n	8013176 <_ZN8touchgfx14SwipeContainer15handleTickEventEv+0x22>
 8013172:	f7ff bfc9 	b.w	8013108 <_ZN8touchgfx14SwipeContainer12animateRightEv>
 8013176:	4770      	bx	lr

08013178 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh>:
 8013178:	b510      	push	{r4, lr}
 801317a:	f890 30f0 	ldrb.w	r3, [r0, #240]	; 0xf0
 801317e:	428b      	cmp	r3, r1
 8013180:	4604      	mov	r4, r0
 8013182:	d907      	bls.n	8013194 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh+0x1c>
 8013184:	3068      	adds	r0, #104	; 0x68
 8013186:	f7ff ff1d 	bl	8012fc4 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>
 801318a:	4620      	mov	r0, r4
 801318c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013190:	f7ff be2b 	b.w	8012dea <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 8013194:	bd10      	pop	{r4, pc}

08013196 <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>:
 8013196:	b538      	push	{r3, r4, r5, lr}
 8013198:	4604      	mov	r4, r0
 801319a:	3038      	adds	r0, #56	; 0x38
 801319c:	460d      	mov	r5, r1
 801319e:	f000 f963 	bl	8013468 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
 80131a2:	f894 10f0 	ldrb.w	r1, [r4, #240]	; 0xf0
 80131a6:	3101      	adds	r1, #1
 80131a8:	f104 0068 	add.w	r0, r4, #104	; 0x68
 80131ac:	b2c9      	uxtb	r1, r1
 80131ae:	f7ff ff28 	bl	8013002 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh>
 80131b2:	f894 10f1 	ldrb.w	r1, [r4, #241]	; 0xf1
 80131b6:	4620      	mov	r0, r4
 80131b8:	f7ff ffde 	bl	8013178 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh>
 80131bc:	f9b5 200a 	ldrsh.w	r2, [r5, #10]
 80131c0:	f9b5 1008 	ldrsh.w	r1, [r5, #8]
 80131c4:	4620      	mov	r0, r4
 80131c6:	f7ff fa69 	bl	801269c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80131ca:	bd38      	pop	{r3, r4, r5, pc}

080131cc <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE>:
 80131cc:	b538      	push	{r3, r4, r5, lr}
 80131ce:	f890 30f0 	ldrb.w	r3, [r0, #240]	; 0xf0
 80131d2:	4604      	mov	r4, r0
 80131d4:	b1e3      	cbz	r3, 8013210 <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0x44>
 80131d6:	6e03      	ldr	r3, [r0, #96]	; 0x60
 80131d8:	b1d3      	cbz	r3, 8013210 <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0x44>
 80131da:	428b      	cmp	r3, r1
 80131dc:	d125      	bne.n	801322a <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0x5e>
 80131de:	4619      	mov	r1, r3
 80131e0:	f104 0038 	add.w	r0, r4, #56	; 0x38
 80131e4:	f000 f9c0 	bl	8013568 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE>
 80131e8:	f894 10f0 	ldrb.w	r1, [r4, #240]	; 0xf0
 80131ec:	3901      	subs	r1, #1
 80131ee:	b2c9      	uxtb	r1, r1
 80131f0:	f104 0068 	add.w	r0, r4, #104	; 0x68
 80131f4:	f7ff ff05 	bl	8013002 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh>
 80131f8:	f894 50f0 	ldrb.w	r5, [r4, #240]	; 0xf0
 80131fc:	b94d      	cbnz	r5, 8013212 <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0x46>
 80131fe:	6823      	ldr	r3, [r4, #0]
 8013200:	4620      	mov	r0, r4
 8013202:	695b      	ldr	r3, [r3, #20]
 8013204:	4798      	blx	r3
 8013206:	462a      	mov	r2, r5
 8013208:	4629      	mov	r1, r5
 801320a:	4620      	mov	r0, r4
 801320c:	f7ff fa46 	bl	801269c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8013210:	bd38      	pop	{r3, r4, r5, pc}
 8013212:	f894 10f1 	ldrb.w	r1, [r4, #241]	; 0xf1
 8013216:	3d01      	subs	r5, #1
 8013218:	42a9      	cmp	r1, r5
 801321a:	bfa8      	it	ge
 801321c:	4629      	movge	r1, r5
 801321e:	4620      	mov	r0, r4
 8013220:	b2c9      	uxtb	r1, r1
 8013222:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8013226:	f7ff bfa7 	b.w	8013178 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh>
 801322a:	699b      	ldr	r3, [r3, #24]
 801322c:	e7d4      	b.n	80131d8 <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0xc>

0801322e <_ZNK8touchgfx10ListLayout12getDirectionEv>:
 801322e:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8013232:	4770      	bx	lr

08013234 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE>:
 8013234:	b538      	push	{r3, r4, r5, lr}
 8013236:	7882      	ldrb	r2, [r0, #2]
 8013238:	6843      	ldr	r3, [r0, #4]
 801323a:	4604      	mov	r4, r0
 801323c:	460d      	mov	r5, r1
 801323e:	b98a      	cbnz	r2, 8013264 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x30>
 8013240:	4299      	cmp	r1, r3
 8013242:	d101      	bne.n	8013248 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x14>
 8013244:	2301      	movs	r3, #1
 8013246:	7083      	strb	r3, [r0, #2]
 8013248:	6863      	ldr	r3, [r4, #4]
 801324a:	42ab      	cmp	r3, r5
 801324c:	d009      	beq.n	8013262 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x2e>
 801324e:	7a23      	ldrb	r3, [r4, #8]
 8013250:	2b01      	cmp	r3, #1
 8013252:	d11b      	bne.n	801328c <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x58>
 8013254:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
 8013258:	f9b4 2000 	ldrsh.w	r2, [r4]
 801325c:	429a      	cmp	r2, r3
 801325e:	bfb8      	it	lt
 8013260:	8023      	strhlt	r3, [r4, #0]
 8013262:	bd38      	pop	{r3, r4, r5, pc}
 8013264:	7a02      	ldrb	r2, [r0, #8]
 8013266:	2a01      	cmp	r2, #1
 8013268:	d108      	bne.n	801327c <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x48>
 801326a:	895b      	ldrh	r3, [r3, #10]
 801326c:	88c9      	ldrh	r1, [r1, #6]
 801326e:	1ac9      	subs	r1, r1, r3
 8013270:	682b      	ldr	r3, [r5, #0]
 8013272:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8013274:	b209      	sxth	r1, r1
 8013276:	4628      	mov	r0, r5
 8013278:	4798      	blx	r3
 801327a:	e7e5      	b.n	8013248 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x14>
 801327c:	2a02      	cmp	r2, #2
 801327e:	d1e3      	bne.n	8013248 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x14>
 8013280:	891b      	ldrh	r3, [r3, #8]
 8013282:	8889      	ldrh	r1, [r1, #4]
 8013284:	1ac9      	subs	r1, r1, r3
 8013286:	682b      	ldr	r3, [r5, #0]
 8013288:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801328a:	e7f3      	b.n	8013274 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x40>
 801328c:	2b02      	cmp	r3, #2
 801328e:	d1e8      	bne.n	8013262 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x2e>
 8013290:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
 8013294:	e7e0      	b.n	8013258 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x24>

08013296 <_ZN8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvED1Ev>:
 8013296:	4770      	bx	lr

08013298 <_ZN8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvED1Ev>:
 8013298:	4770      	bx	lr

0801329a <_ZN8touchgfx10ListLayoutD1Ev>:
 801329a:	4770      	bx	lr

0801329c <_ZN8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7executeES3_>:
 801329c:	b430      	push	{r4, r5}
 801329e:	68c5      	ldr	r5, [r0, #12]
 80132a0:	6844      	ldr	r4, [r0, #4]
 80132a2:	106a      	asrs	r2, r5, #1
 80132a4:	4603      	mov	r3, r0
 80132a6:	07ed      	lsls	r5, r5, #31
 80132a8:	eb04 0002 	add.w	r0, r4, r2
 80132ac:	689b      	ldr	r3, [r3, #8]
 80132ae:	bf48      	it	mi
 80132b0:	58a2      	ldrmi	r2, [r4, r2]
 80132b2:	bc30      	pop	{r4, r5}
 80132b4:	bf48      	it	mi
 80132b6:	58d3      	ldrmi	r3, [r2, r3]
 80132b8:	4718      	bx	r3

080132ba <_ZNK8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7isValidEv>:
 80132ba:	6843      	ldr	r3, [r0, #4]
 80132bc:	b12b      	cbz	r3, 80132ca <_ZNK8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7isValidEv+0x10>
 80132be:	6883      	ldr	r3, [r0, #8]
 80132c0:	b92b      	cbnz	r3, 80132ce <_ZNK8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7isValidEv+0x14>
 80132c2:	68c0      	ldr	r0, [r0, #12]
 80132c4:	f000 0001 	and.w	r0, r0, #1
 80132c8:	4770      	bx	lr
 80132ca:	4618      	mov	r0, r3
 80132cc:	4770      	bx	lr
 80132ce:	2001      	movs	r0, #1
 80132d0:	4770      	bx	lr

080132d2 <_ZN8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7executeES3_>:
 80132d2:	b430      	push	{r4, r5}
 80132d4:	68c5      	ldr	r5, [r0, #12]
 80132d6:	6844      	ldr	r4, [r0, #4]
 80132d8:	106a      	asrs	r2, r5, #1
 80132da:	4603      	mov	r3, r0
 80132dc:	07ed      	lsls	r5, r5, #31
 80132de:	eb04 0002 	add.w	r0, r4, r2
 80132e2:	689b      	ldr	r3, [r3, #8]
 80132e4:	bf48      	it	mi
 80132e6:	58a2      	ldrmi	r2, [r4, r2]
 80132e8:	bc30      	pop	{r4, r5}
 80132ea:	bf48      	it	mi
 80132ec:	58d3      	ldrmi	r3, [r2, r3]
 80132ee:	4718      	bx	r3

080132f0 <_ZNK8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7isValidEv>:
 80132f0:	6843      	ldr	r3, [r0, #4]
 80132f2:	b12b      	cbz	r3, 8013300 <_ZNK8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7isValidEv+0x10>
 80132f4:	6883      	ldr	r3, [r0, #8]
 80132f6:	b92b      	cbnz	r3, 8013304 <_ZNK8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7isValidEv+0x14>
 80132f8:	68c0      	ldr	r0, [r0, #12]
 80132fa:	f000 0001 	and.w	r0, r0, #1
 80132fe:	4770      	bx	lr
 8013300:	4618      	mov	r0, r3
 8013302:	4770      	bx	lr
 8013304:	2001      	movs	r0, #1
 8013306:	4770      	bx	lr

08013308 <_ZN8touchgfx10ListLayoutD0Ev>:
 8013308:	b510      	push	{r4, lr}
 801330a:	2130      	movs	r1, #48	; 0x30
 801330c:	4604      	mov	r4, r0
 801330e:	f019 fbec 	bl	802caea <_ZdlPvj>
 8013312:	4620      	mov	r0, r4
 8013314:	bd10      	pop	{r4, pc}

08013316 <_ZN8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvED0Ev>:
 8013316:	b510      	push	{r4, lr}
 8013318:	2110      	movs	r1, #16
 801331a:	4604      	mov	r4, r0
 801331c:	f019 fbe5 	bl	802caea <_ZdlPvj>
 8013320:	4620      	mov	r0, r4
 8013322:	bd10      	pop	{r4, pc}

08013324 <_ZN8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvED0Ev>:
 8013324:	b510      	push	{r4, lr}
 8013326:	2110      	movs	r1, #16
 8013328:	4604      	mov	r4, r0
 801332a:	f019 fbde 	bl	802caea <_ZdlPvj>
 801332e:	4620      	mov	r0, r4
 8013330:	bd10      	pop	{r4, pc}

08013332 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE>:
 8013332:	4603      	mov	r3, r0
 8013334:	4608      	mov	r0, r1
 8013336:	789a      	ldrb	r2, [r3, #2]
 8013338:	b992      	cbnz	r2, 8013360 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x2e>
 801333a:	685a      	ldr	r2, [r3, #4]
 801333c:	428a      	cmp	r2, r1
 801333e:	d102      	bne.n	8013346 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x14>
 8013340:	2201      	movs	r2, #1
 8013342:	709a      	strb	r2, [r3, #2]
 8013344:	4770      	bx	lr
 8013346:	7a1a      	ldrb	r2, [r3, #8]
 8013348:	2a01      	cmp	r2, #1
 801334a:	d104      	bne.n	8013356 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x24>
 801334c:	88ca      	ldrh	r2, [r1, #6]
 801334e:	8949      	ldrh	r1, [r1, #10]
 8013350:	440a      	add	r2, r1
 8013352:	801a      	strh	r2, [r3, #0]
 8013354:	4770      	bx	lr
 8013356:	2a02      	cmp	r2, #2
 8013358:	d116      	bne.n	8013388 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x56>
 801335a:	888a      	ldrh	r2, [r1, #4]
 801335c:	8909      	ldrh	r1, [r1, #8]
 801335e:	e7f7      	b.n	8013350 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x1e>
 8013360:	7a1a      	ldrb	r2, [r3, #8]
 8013362:	2a01      	cmp	r2, #1
 8013364:	d107      	bne.n	8013376 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x44>
 8013366:	685b      	ldr	r3, [r3, #4]
 8013368:	8959      	ldrh	r1, [r3, #10]
 801336a:	88c3      	ldrh	r3, [r0, #6]
 801336c:	4419      	add	r1, r3
 801336e:	6803      	ldr	r3, [r0, #0]
 8013370:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8013372:	b209      	sxth	r1, r1
 8013374:	4718      	bx	r3
 8013376:	2a02      	cmp	r2, #2
 8013378:	d106      	bne.n	8013388 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x56>
 801337a:	685b      	ldr	r3, [r3, #4]
 801337c:	8919      	ldrh	r1, [r3, #8]
 801337e:	8883      	ldrh	r3, [r0, #4]
 8013380:	4419      	add	r1, r3
 8013382:	6803      	ldr	r3, [r0, #0]
 8013384:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8013386:	e7f4      	b.n	8013372 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x40>
 8013388:	4770      	bx	lr

0801338a <_ZN8touchgfx10ListLayout9removeAllEv>:
 801338a:	2200      	movs	r2, #0
 801338c:	b510      	push	{r4, lr}
 801338e:	4611      	mov	r1, r2
 8013390:	4604      	mov	r4, r0
 8013392:	85c2      	strh	r2, [r0, #46]	; 0x2e
 8013394:	f7ff f982 	bl	801269c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8013398:	4620      	mov	r0, r4
 801339a:	f7ff fa26 	bl	80127ea <_ZN8touchgfx9Container9removeAllEv>
 801339e:	6960      	ldr	r0, [r4, #20]
 80133a0:	b120      	cbz	r0, 80133ac <_ZN8touchgfx10ListLayout9removeAllEv+0x22>
 80133a2:	6803      	ldr	r3, [r0, #0]
 80133a4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80133a8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80133aa:	4718      	bx	r3
 80133ac:	bd10      	pop	{r4, pc}
	...

080133b0 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE>:
 80133b0:	b530      	push	{r4, r5, lr}
 80133b2:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80133b6:	428b      	cmp	r3, r1
 80133b8:	b085      	sub	sp, #20
 80133ba:	4604      	mov	r4, r0
 80133bc:	d017      	beq.n	80133ee <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x3e>
 80133be:	2500      	movs	r5, #0
 80133c0:	f880 102c 	strb.w	r1, [r0, #44]	; 0x2c
 80133c4:	85c5      	strh	r5, [r0, #46]	; 0x2e
 80133c6:	462a      	mov	r2, r5
 80133c8:	4629      	mov	r1, r5
 80133ca:	f7ff f967 	bl	801269c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80133ce:	4b09      	ldr	r3, [pc, #36]	; (80133f4 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x44>)
 80133d0:	e9cd 3400 	strd	r3, r4, [sp]
 80133d4:	4b08      	ldr	r3, [pc, #32]	; (80133f8 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x48>)
 80133d6:	e9cd 3502 	strd	r3, r5, [sp, #8]
 80133da:	6823      	ldr	r3, [r4, #0]
 80133dc:	4620      	mov	r0, r4
 80133de:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80133e0:	4669      	mov	r1, sp
 80133e2:	4798      	blx	r3
 80133e4:	6960      	ldr	r0, [r4, #20]
 80133e6:	b110      	cbz	r0, 80133ee <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x3e>
 80133e8:	6803      	ldr	r3, [r0, #0]
 80133ea:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80133ec:	4798      	blx	r3
 80133ee:	b005      	add	sp, #20
 80133f0:	bd30      	pop	{r4, r5, pc}
 80133f2:	bf00      	nop
 80133f4:	080315e4 	.word	0x080315e4
 80133f8:	08013461 	.word	0x08013461

080133fc <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs>:
 80133fc:	b538      	push	{r3, r4, r5, lr}
 80133fe:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8013402:	2b01      	cmp	r3, #1
 8013404:	460d      	mov	r5, r1
 8013406:	4604      	mov	r4, r0
 8013408:	4611      	mov	r1, r2
 801340a:	d002      	beq.n	8013412 <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x16>
 801340c:	2b02      	cmp	r3, #2
 801340e:	d015      	beq.n	801343c <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x40>
 8013410:	bd38      	pop	{r3, r4, r5, pc}
 8013412:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
 8013416:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 801341a:	429a      	cmp	r2, r3
 801341c:	bfb8      	it	lt
 801341e:	8103      	strhlt	r3, [r0, #8]
 8013420:	896a      	ldrh	r2, [r5, #10]
 8013422:	8943      	ldrh	r3, [r0, #10]
 8013424:	4413      	add	r3, r2
 8013426:	8143      	strh	r3, [r0, #10]
 8013428:	460a      	mov	r2, r1
 801342a:	4628      	mov	r0, r5
 801342c:	2100      	movs	r1, #0
 801342e:	f7f0 f8d5 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8013432:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 8013434:	896a      	ldrh	r2, [r5, #10]
 8013436:	4413      	add	r3, r2
 8013438:	85e3      	strh	r3, [r4, #46]	; 0x2e
 801343a:	e7e9      	b.n	8013410 <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x14>
 801343c:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
 8013440:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8013444:	429a      	cmp	r2, r3
 8013446:	bfb8      	it	lt
 8013448:	8143      	strhlt	r3, [r0, #10]
 801344a:	892a      	ldrh	r2, [r5, #8]
 801344c:	8903      	ldrh	r3, [r0, #8]
 801344e:	4413      	add	r3, r2
 8013450:	8103      	strh	r3, [r0, #8]
 8013452:	2200      	movs	r2, #0
 8013454:	4628      	mov	r0, r5
 8013456:	f7f0 f8c1 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 801345a:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 801345c:	892a      	ldrh	r2, [r5, #8]
 801345e:	e7ea      	b.n	8013436 <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x3a>

08013460 <_ZN8touchgfx10ListLayout18internalAddElementERNS_8DrawableE>:
 8013460:	f9b0 202e 	ldrsh.w	r2, [r0, #46]	; 0x2e
 8013464:	f7ff bfca 	b.w	80133fc <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs>

08013468 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>:
 8013468:	b570      	push	{r4, r5, r6, lr}
 801346a:	4604      	mov	r4, r0
 801346c:	460d      	mov	r5, r1
 801346e:	f7ff fff7 	bl	8013460 <_ZN8touchgfx10ListLayout18internalAddElementERNS_8DrawableE>
 8013472:	4620      	mov	r0, r4
 8013474:	4629      	mov	r1, r5
 8013476:	f7ff f9ab 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 801347a:	6960      	ldr	r0, [r4, #20]
 801347c:	b120      	cbz	r0, 8013488 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE+0x20>
 801347e:	6803      	ldr	r3, [r0, #0]
 8013480:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013484:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8013486:	4718      	bx	r3
 8013488:	bd70      	pop	{r4, r5, r6, pc}
	...

0801348c <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_>:
 801348c:	b530      	push	{r4, r5, lr}
 801348e:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8013490:	b089      	sub	sp, #36	; 0x24
 8013492:	4604      	mov	r4, r0
 8013494:	4615      	mov	r5, r2
 8013496:	b92b      	cbnz	r3, 80134a4 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x18>
 8013498:	6803      	ldr	r3, [r0, #0]
 801349a:	4611      	mov	r1, r2
 801349c:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 801349e:	4798      	blx	r3
 80134a0:	b009      	add	sp, #36	; 0x24
 80134a2:	bd30      	pop	{r4, r5, pc}
 80134a4:	f7ff f9ec 	bl	8012880 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>
 80134a8:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
 80134ac:	f88d 200c 	strb.w	r2, [sp, #12]
 80134b0:	4a0f      	ldr	r2, [pc, #60]	; (80134f0 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x64>)
 80134b2:	9204      	str	r2, [sp, #16]
 80134b4:	aa01      	add	r2, sp, #4
 80134b6:	9205      	str	r2, [sp, #20]
 80134b8:	4a0e      	ldr	r2, [pc, #56]	; (80134f4 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x68>)
 80134ba:	9502      	str	r5, [sp, #8]
 80134bc:	2300      	movs	r3, #0
 80134be:	e9cd 2306 	strd	r2, r3, [sp, #24]
 80134c2:	f8ad 3004 	strh.w	r3, [sp, #4]
 80134c6:	f88d 3006 	strb.w	r3, [sp, #6]
 80134ca:	6823      	ldr	r3, [r4, #0]
 80134cc:	a904      	add	r1, sp, #16
 80134ce:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80134d0:	4620      	mov	r0, r4
 80134d2:	4798      	blx	r3
 80134d4:	4620      	mov	r0, r4
 80134d6:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 80134da:	4629      	mov	r1, r5
 80134dc:	f7ff ff8e 	bl	80133fc <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs>
 80134e0:	6960      	ldr	r0, [r4, #20]
 80134e2:	2800      	cmp	r0, #0
 80134e4:	d0dc      	beq.n	80134a0 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x14>
 80134e6:	6803      	ldr	r3, [r0, #0]
 80134e8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80134ea:	4798      	blx	r3
 80134ec:	e7d8      	b.n	80134a0 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x14>
 80134ee:	bf00      	nop
 80134f0:	080315fc 	.word	0x080315fc
 80134f4:	08013333 	.word	0x08013333

080134f8 <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs>:
 80134f8:	b538      	push	{r3, r4, r5, lr}
 80134fa:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80134fe:	2b01      	cmp	r3, #1
 8013500:	4604      	mov	r4, r0
 8013502:	460d      	mov	r5, r1
 8013504:	d002      	beq.n	801350c <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x14>
 8013506:	2b02      	cmp	r3, #2
 8013508:	d018      	beq.n	801353c <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x44>
 801350a:	bd38      	pop	{r3, r4, r5, pc}
 801350c:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8013510:	4293      	cmp	r3, r2
 8013512:	bfc8      	it	gt
 8013514:	8102      	strhgt	r2, [r0, #8]
 8013516:	894a      	ldrh	r2, [r1, #10]
 8013518:	8943      	ldrh	r3, [r0, #10]
 801351a:	1a9b      	subs	r3, r3, r2
 801351c:	8143      	strh	r3, [r0, #10]
 801351e:	680b      	ldr	r3, [r1, #0]
 8013520:	4628      	mov	r0, r5
 8013522:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8013524:	2100      	movs	r1, #0
 8013526:	4798      	blx	r3
 8013528:	682b      	ldr	r3, [r5, #0]
 801352a:	2100      	movs	r1, #0
 801352c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801352e:	4628      	mov	r0, r5
 8013530:	4798      	blx	r3
 8013532:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 8013534:	896a      	ldrh	r2, [r5, #10]
 8013536:	1a9b      	subs	r3, r3, r2
 8013538:	85e3      	strh	r3, [r4, #46]	; 0x2e
 801353a:	e7e6      	b.n	801350a <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x12>
 801353c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8013540:	4293      	cmp	r3, r2
 8013542:	bfc8      	it	gt
 8013544:	8142      	strhgt	r2, [r0, #10]
 8013546:	890a      	ldrh	r2, [r1, #8]
 8013548:	8903      	ldrh	r3, [r0, #8]
 801354a:	1a9b      	subs	r3, r3, r2
 801354c:	8103      	strh	r3, [r0, #8]
 801354e:	680b      	ldr	r3, [r1, #0]
 8013550:	4628      	mov	r0, r5
 8013552:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8013554:	2100      	movs	r1, #0
 8013556:	4798      	blx	r3
 8013558:	682b      	ldr	r3, [r5, #0]
 801355a:	2100      	movs	r1, #0
 801355c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801355e:	4628      	mov	r0, r5
 8013560:	4798      	blx	r3
 8013562:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 8013564:	892a      	ldrh	r2, [r5, #8]
 8013566:	e7e6      	b.n	8013536 <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x3e>

08013568 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE>:
 8013568:	b530      	push	{r4, r5, lr}
 801356a:	b089      	sub	sp, #36	; 0x24
 801356c:	f890 202c 	ldrb.w	r2, [r0, #44]	; 0x2c
 8013570:	f88d 200c 	strb.w	r2, [sp, #12]
 8013574:	4a13      	ldr	r2, [pc, #76]	; (80135c4 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x5c>)
 8013576:	9204      	str	r2, [sp, #16]
 8013578:	aa01      	add	r2, sp, #4
 801357a:	9205      	str	r2, [sp, #20]
 801357c:	4a12      	ldr	r2, [pc, #72]	; (80135c8 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x60>)
 801357e:	9102      	str	r1, [sp, #8]
 8013580:	2300      	movs	r3, #0
 8013582:	f8ad 3004 	strh.w	r3, [sp, #4]
 8013586:	f88d 3006 	strb.w	r3, [sp, #6]
 801358a:	e9cd 2306 	strd	r2, r3, [sp, #24]
 801358e:	6803      	ldr	r3, [r0, #0]
 8013590:	460d      	mov	r5, r1
 8013592:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8013594:	a904      	add	r1, sp, #16
 8013596:	4604      	mov	r4, r0
 8013598:	4798      	blx	r3
 801359a:	f89d 3006 	ldrb.w	r3, [sp, #6]
 801359e:	b14b      	cbz	r3, 80135b4 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x4c>
 80135a0:	4629      	mov	r1, r5
 80135a2:	4620      	mov	r0, r4
 80135a4:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 80135a8:	f7ff ffa6 	bl	80134f8 <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs>
 80135ac:	4629      	mov	r1, r5
 80135ae:	4620      	mov	r0, r4
 80135b0:	f7ff f94f 	bl	8012852 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 80135b4:	6960      	ldr	r0, [r4, #20]
 80135b6:	b110      	cbz	r0, 80135be <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x56>
 80135b8:	6803      	ldr	r3, [r0, #0]
 80135ba:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80135bc:	4798      	blx	r3
 80135be:	b009      	add	sp, #36	; 0x24
 80135c0:	bd30      	pop	{r4, r5, pc}
 80135c2:	bf00      	nop
 80135c4:	080315fc 	.word	0x080315fc
 80135c8:	08013235 	.word	0x08013235

080135cc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 80135cc:	b513      	push	{r0, r1, r4, lr}
 80135ce:	6803      	ldr	r3, [r0, #0]
 80135d0:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 80135d4:	2300      	movs	r3, #0
 80135d6:	e9cd 3300 	strd	r3, r3, [sp]
 80135da:	466b      	mov	r3, sp
 80135dc:	47a0      	blx	r4
 80135de:	b002      	add	sp, #8
 80135e0:	bd10      	pop	{r4, pc}

080135e2 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 80135e2:	2301      	movs	r3, #1
 80135e4:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 80135e8:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 80135ec:	4770      	bx	lr

080135ee <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 80135ee:	2301      	movs	r3, #1
 80135f0:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 80135f4:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 80135f8:	4770      	bx	lr

080135fa <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 80135fa:	6843      	ldr	r3, [r0, #4]
 80135fc:	2201      	movs	r2, #1
 80135fe:	725a      	strb	r2, [r3, #9]
 8013600:	6840      	ldr	r0, [r0, #4]
 8013602:	6803      	ldr	r3, [r0, #0]
 8013604:	691b      	ldr	r3, [r3, #16]
 8013606:	4718      	bx	r3

08013608 <_ZN8touchgfx3HAL8flushDMAEv>:
 8013608:	6840      	ldr	r0, [r0, #4]
 801360a:	6803      	ldr	r3, [r0, #0]
 801360c:	689b      	ldr	r3, [r3, #8]
 801360e:	4718      	bx	r3

08013610 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 8013610:	b530      	push	{r4, r5, lr}
 8013612:	b08b      	sub	sp, #44	; 0x2c
 8013614:	6804      	ldr	r4, [r0, #0]
 8013616:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 801361a:	9509      	str	r5, [sp, #36]	; 0x24
 801361c:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 8013620:	9508      	str	r5, [sp, #32]
 8013622:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8013626:	9507      	str	r5, [sp, #28]
 8013628:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 801362c:	9506      	str	r5, [sp, #24]
 801362e:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 8013632:	9505      	str	r5, [sp, #20]
 8013634:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8013638:	9504      	str	r5, [sp, #16]
 801363a:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 801363e:	9503      	str	r5, [sp, #12]
 8013640:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 8013644:	9502      	str	r5, [sp, #8]
 8013646:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 801364a:	e9cd 3500 	strd	r3, r5, [sp]
 801364e:	4613      	mov	r3, r2
 8013650:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 8013652:	2200      	movs	r2, #0
 8013654:	47a0      	blx	r4
 8013656:	b00b      	add	sp, #44	; 0x2c
 8013658:	bd30      	pop	{r4, r5, pc}
	...

0801365c <_ZN8touchgfx3HAL10beginFrameEv>:
 801365c:	4b04      	ldr	r3, [pc, #16]	; (8013670 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 801365e:	781b      	ldrb	r3, [r3, #0]
 8013660:	b123      	cbz	r3, 801366c <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 8013662:	f890 006e 	ldrb.w	r0, [r0, #110]	; 0x6e
 8013666:	f080 0001 	eor.w	r0, r0, #1
 801366a:	4770      	bx	lr
 801366c:	2001      	movs	r0, #1
 801366e:	4770      	bx	lr
 8013670:	2001384a 	.word	0x2001384a

08013674 <_ZN8touchgfx3HAL8endFrameEv>:
 8013674:	b510      	push	{r4, lr}
 8013676:	4604      	mov	r4, r0
 8013678:	6840      	ldr	r0, [r0, #4]
 801367a:	6803      	ldr	r3, [r0, #0]
 801367c:	689b      	ldr	r3, [r3, #8]
 801367e:	4798      	blx	r3
 8013680:	f894 306d 	ldrb.w	r3, [r4, #109]	; 0x6d
 8013684:	b113      	cbz	r3, 801368c <_ZN8touchgfx3HAL8endFrameEv+0x18>
 8013686:	2301      	movs	r3, #1
 8013688:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 801368c:	bd10      	pop	{r4, pc}

0801368e <_ZN8touchgfx3HAL10initializeEv>:
 801368e:	b510      	push	{r4, lr}
 8013690:	4604      	mov	r4, r0
 8013692:	f7ef fb0b 	bl	8002cac <_ZN8touchgfx10OSWrappers10initializeEv>
 8013696:	f7ef fa17 	bl	8002ac8 <_ZN8touchgfx4GPIO4initEv>
 801369a:	6860      	ldr	r0, [r4, #4]
 801369c:	6803      	ldr	r3, [r0, #0]
 801369e:	68db      	ldr	r3, [r3, #12]
 80136a0:	4798      	blx	r3
 80136a2:	68e0      	ldr	r0, [r4, #12]
 80136a4:	6803      	ldr	r3, [r0, #0]
 80136a6:	689b      	ldr	r3, [r3, #8]
 80136a8:	4798      	blx	r3
 80136aa:	6823      	ldr	r3, [r4, #0]
 80136ac:	4620      	mov	r0, r4
 80136ae:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80136b0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80136b4:	4718      	bx	r3
	...

080136b8 <_ZN8touchgfx3HAL4tickEv>:
 80136b8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80136ba:	6803      	ldr	r3, [r0, #0]
 80136bc:	4d5b      	ldr	r5, [pc, #364]	; (801382c <_ZN8touchgfx3HAL4tickEv+0x174>)
 80136be:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 80136c2:	4604      	mov	r4, r0
 80136c4:	4798      	blx	r3
 80136c6:	2800      	cmp	r0, #0
 80136c8:	f000 8095 	beq.w	80137f6 <_ZN8touchgfx3HAL4tickEv+0x13e>
 80136cc:	2001      	movs	r0, #1
 80136ce:	f7ef f9ad 	bl	8002a2c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 80136d2:	f894 306a 	ldrb.w	r3, [r4, #106]	; 0x6a
 80136d6:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 80136da:	f894 3079 	ldrb.w	r3, [r4, #121]	; 0x79
 80136de:	2600      	movs	r6, #0
 80136e0:	f884 606a 	strb.w	r6, [r4, #106]	; 0x6a
 80136e4:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 80136e8:	b133      	cbz	r3, 80136f8 <_ZN8touchgfx3HAL4tickEv+0x40>
 80136ea:	6823      	ldr	r3, [r4, #0]
 80136ec:	4620      	mov	r0, r4
 80136ee:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 80136f2:	4798      	blx	r3
 80136f4:	f884 6079 	strb.w	r6, [r4, #121]	; 0x79
 80136f8:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 80136fc:	6862      	ldr	r2, [r4, #4]
 80136fe:	f083 0301 	eor.w	r3, r3, #1
 8013702:	7253      	strb	r3, [r2, #9]
 8013704:	2601      	movs	r6, #1
 8013706:	702e      	strb	r6, [r5, #0]
 8013708:	f005 f93a 	bl	8018980 <_ZN8touchgfx11Application11getInstanceEv>
 801370c:	6803      	ldr	r3, [r0, #0]
 801370e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8013710:	4798      	blx	r3
 8013712:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 8013716:	b90b      	cbnz	r3, 801371c <_ZN8touchgfx3HAL4tickEv+0x64>
 8013718:	f884 606b 	strb.w	r6, [r4, #107]	; 0x6b
 801371c:	f005 f930 	bl	8018980 <_ZN8touchgfx11Application11getInstanceEv>
 8013720:	6803      	ldr	r3, [r0, #0]
 8013722:	695b      	ldr	r3, [r3, #20]
 8013724:	4798      	blx	r3
 8013726:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 8013728:	6803      	ldr	r3, [r0, #0]
 801372a:	691b      	ldr	r3, [r3, #16]
 801372c:	4798      	blx	r3
 801372e:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 8013732:	f894 206c 	ldrb.w	r2, [r4, #108]	; 0x6c
 8013736:	3b01      	subs	r3, #1
 8013738:	b2db      	uxtb	r3, r3
 801373a:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 801373e:	b10a      	cbz	r2, 8013744 <_ZN8touchgfx3HAL4tickEv+0x8c>
 8013740:	2b00      	cmp	r3, #0
 8013742:	d1eb      	bne.n	801371c <_ZN8touchgfx3HAL4tickEv+0x64>
 8013744:	4a3a      	ldr	r2, [pc, #232]	; (8013830 <_ZN8touchgfx3HAL4tickEv+0x178>)
 8013746:	f994 1068 	ldrsb.w	r1, [r4, #104]	; 0x68
 801374a:	7813      	ldrb	r3, [r2, #0]
 801374c:	3301      	adds	r3, #1
 801374e:	b25b      	sxtb	r3, r3
 8013750:	4299      	cmp	r1, r3
 8013752:	7013      	strb	r3, [r2, #0]
 8013754:	dc10      	bgt.n	8013778 <_ZN8touchgfx3HAL4tickEv+0xc0>
 8013756:	68e0      	ldr	r0, [r4, #12]
 8013758:	2300      	movs	r3, #0
 801375a:	7013      	strb	r3, [r2, #0]
 801375c:	6803      	ldr	r3, [r0, #0]
 801375e:	aa03      	add	r2, sp, #12
 8013760:	68db      	ldr	r3, [r3, #12]
 8013762:	a902      	add	r1, sp, #8
 8013764:	4798      	blx	r3
 8013766:	6823      	ldr	r3, [r4, #0]
 8013768:	2800      	cmp	r0, #0
 801376a:	d050      	beq.n	801380e <_ZN8touchgfx3HAL4tickEv+0x156>
 801376c:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8013770:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 8013774:	4620      	mov	r0, r4
 8013776:	4798      	blx	r3
 8013778:	6960      	ldr	r0, [r4, #20]
 801377a:	2300      	movs	r3, #0
 801377c:	f88d 3007 	strb.w	r3, [sp, #7]
 8013780:	b158      	cbz	r0, 801379a <_ZN8touchgfx3HAL4tickEv+0xe2>
 8013782:	6803      	ldr	r3, [r0, #0]
 8013784:	f10d 0107 	add.w	r1, sp, #7
 8013788:	68db      	ldr	r3, [r3, #12]
 801378a:	4798      	blx	r3
 801378c:	b128      	cbz	r0, 801379a <_ZN8touchgfx3HAL4tickEv+0xe2>
 801378e:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 8013790:	f89d 1007 	ldrb.w	r1, [sp, #7]
 8013794:	6803      	ldr	r3, [r0, #0]
 8013796:	68db      	ldr	r3, [r3, #12]
 8013798:	4798      	blx	r3
 801379a:	f104 001c 	add.w	r0, r4, #28
 801379e:	f016 f8c3 	bl	8029928 <_ZN8touchgfx8Gestures4tickEv>
 80137a2:	f894 3070 	ldrb.w	r3, [r4, #112]	; 0x70
 80137a6:	b30b      	cbz	r3, 80137ec <_ZN8touchgfx3HAL4tickEv+0x134>
 80137a8:	6920      	ldr	r0, [r4, #16]
 80137aa:	6803      	ldr	r3, [r0, #0]
 80137ac:	691b      	ldr	r3, [r3, #16]
 80137ae:	4798      	blx	r3
 80137b0:	6f63      	ldr	r3, [r4, #116]	; 0x74
 80137b2:	4606      	mov	r6, r0
 80137b4:	b903      	cbnz	r3, 80137b8 <_ZN8touchgfx3HAL4tickEv+0x100>
 80137b6:	6760      	str	r0, [r4, #116]	; 0x74
 80137b8:	6f63      	ldr	r3, [r4, #116]	; 0x74
 80137ba:	4a1e      	ldr	r2, [pc, #120]	; (8013834 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 80137bc:	1af3      	subs	r3, r6, r3
 80137be:	4293      	cmp	r3, r2
 80137c0:	d914      	bls.n	80137ec <_ZN8touchgfx3HAL4tickEv+0x134>
 80137c2:	6920      	ldr	r0, [r4, #16]
 80137c4:	6803      	ldr	r3, [r0, #0]
 80137c6:	699b      	ldr	r3, [r3, #24]
 80137c8:	4798      	blx	r3
 80137ca:	6f63      	ldr	r3, [r4, #116]	; 0x74
 80137cc:	2264      	movs	r2, #100	; 0x64
 80137ce:	1af3      	subs	r3, r6, r3
 80137d0:	fbb3 f3f2 	udiv	r3, r3, r2
 80137d4:	fbb0 f0f3 	udiv	r0, r0, r3
 80137d8:	2800      	cmp	r0, #0
 80137da:	dc1d      	bgt.n	8013818 <_ZN8touchgfx3HAL4tickEv+0x160>
 80137dc:	f884 2069 	strb.w	r2, [r4, #105]	; 0x69
 80137e0:	6920      	ldr	r0, [r4, #16]
 80137e2:	6803      	ldr	r3, [r0, #0]
 80137e4:	2100      	movs	r1, #0
 80137e6:	69db      	ldr	r3, [r3, #28]
 80137e8:	4798      	blx	r3
 80137ea:	6766      	str	r6, [r4, #116]	; 0x74
 80137ec:	f005 f8c8 	bl	8018980 <_ZN8touchgfx11Application11getInstanceEv>
 80137f0:	6803      	ldr	r3, [r0, #0]
 80137f2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80137f4:	4798      	blx	r3
 80137f6:	6823      	ldr	r3, [r4, #0]
 80137f8:	4620      	mov	r0, r4
 80137fa:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 80137fe:	4798      	blx	r3
 8013800:	2001      	movs	r0, #1
 8013802:	f7ef f92b 	bl	8002a5c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 8013806:	2300      	movs	r3, #0
 8013808:	702b      	strb	r3, [r5, #0]
 801380a:	b004      	add	sp, #16
 801380c:	bd70      	pop	{r4, r5, r6, pc}
 801380e:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 8013812:	4620      	mov	r0, r4
 8013814:	4798      	blx	r3
 8013816:	e7af      	b.n	8013778 <_ZN8touchgfx3HAL4tickEv+0xc0>
 8013818:	2863      	cmp	r0, #99	; 0x63
 801381a:	bfcb      	itete	gt
 801381c:	2300      	movgt	r3, #0
 801381e:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 8013822:	f884 3069 	strbgt.w	r3, [r4, #105]	; 0x69
 8013826:	f884 0069 	strble.w	r0, [r4, #105]	; 0x69
 801382a:	e7d9      	b.n	80137e0 <_ZN8touchgfx3HAL4tickEv+0x128>
 801382c:	20013850 	.word	0x20013850
 8013830:	20013851 	.word	0x20013851
 8013834:	05f5e100 	.word	0x05f5e100

08013838 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 8013838:	b510      	push	{r4, lr}
 801383a:	4604      	mov	r4, r0
 801383c:	f7ef fa66 	bl	8002d0c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 8013840:	6863      	ldr	r3, [r4, #4]
 8013842:	2200      	movs	r2, #0
 8013844:	729a      	strb	r2, [r3, #10]
 8013846:	bd10      	pop	{r4, pc}

08013848 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 8013848:	65c1      	str	r1, [r0, #92]	; 0x5c
 801384a:	301c      	adds	r0, #28
 801384c:	f016 b86a 	b.w	8029924 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

08013850 <_ZN8touchgfx3HAL5touchEll>:
 8013850:	b530      	push	{r4, r5, lr}
 8013852:	b087      	sub	sp, #28
 8013854:	4604      	mov	r4, r0
 8013856:	a804      	add	r0, sp, #16
 8013858:	e9cd 1204 	strd	r1, r2, [sp, #16]
 801385c:	f004 fe5c 	bl	8018518 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 8013860:	9b04      	ldr	r3, [sp, #16]
 8013862:	f8ad 300c 	strh.w	r3, [sp, #12]
 8013866:	a906      	add	r1, sp, #24
 8013868:	9b05      	ldr	r3, [sp, #20]
 801386a:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 801386e:	a803      	add	r0, sp, #12
 8013870:	f004 fea4 	bl	80185bc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 8013874:	f894 106f 	ldrb.w	r1, [r4, #111]	; 0x6f
 8013878:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 801387c:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8013880:	f104 001c 	add.w	r0, r4, #28
 8013884:	b189      	cbz	r1, 80138aa <_ZN8touchgfx3HAL5touchEll+0x5a>
 8013886:	f8b4 5064 	ldrh.w	r5, [r4, #100]	; 0x64
 801388a:	9300      	str	r3, [sp, #0]
 801388c:	f8b4 1060 	ldrh.w	r1, [r4, #96]	; 0x60
 8013890:	4613      	mov	r3, r2
 8013892:	462a      	mov	r2, r5
 8013894:	f016 f856 	bl	8029944 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 8013898:	b128      	cbz	r0, 80138a6 <_ZN8touchgfx3HAL5touchEll+0x56>
 801389a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801389e:	6623      	str	r3, [r4, #96]	; 0x60
 80138a0:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 80138a4:	6663      	str	r3, [r4, #100]	; 0x64
 80138a6:	b007      	add	sp, #28
 80138a8:	bd30      	pop	{r4, r5, pc}
 80138aa:	f016 f88b 	bl	80299c4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 80138ae:	2301      	movs	r3, #1
 80138b0:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 80138b4:	e7f1      	b.n	801389a <_ZN8touchgfx3HAL5touchEll+0x4a>

080138b6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 80138b6:	b510      	push	{r4, lr}
 80138b8:	2b00      	cmp	r3, #0
 80138ba:	d046      	beq.n	801394a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 80138bc:	ea81 0002 	eor.w	r0, r1, r2
 80138c0:	07c4      	lsls	r4, r0, #31
 80138c2:	d508      	bpl.n	80138d6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 80138c4:	440b      	add	r3, r1
 80138c6:	3a01      	subs	r2, #1
 80138c8:	428b      	cmp	r3, r1
 80138ca:	d93e      	bls.n	801394a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 80138cc:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 80138d0:	f801 0b01 	strb.w	r0, [r1], #1
 80138d4:	e7f8      	b.n	80138c8 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 80138d6:	07d0      	lsls	r0, r2, #31
 80138d8:	bf42      	ittt	mi
 80138da:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 80138de:	f801 0b01 	strbmi.w	r0, [r1], #1
 80138e2:	f103 33ff 	addmi.w	r3, r3, #4294967295
 80138e6:	2b01      	cmp	r3, #1
 80138e8:	d911      	bls.n	801390e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 80138ea:	ea81 0402 	eor.w	r4, r1, r2
 80138ee:	07a4      	lsls	r4, r4, #30
 80138f0:	4610      	mov	r0, r2
 80138f2:	d022      	beq.n	801393a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 80138f4:	f023 0401 	bic.w	r4, r3, #1
 80138f8:	440c      	add	r4, r1
 80138fa:	428c      	cmp	r4, r1
 80138fc:	4602      	mov	r2, r0
 80138fe:	d904      	bls.n	801390a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 8013900:	8812      	ldrh	r2, [r2, #0]
 8013902:	f821 2b02 	strh.w	r2, [r1], #2
 8013906:	3002      	adds	r0, #2
 8013908:	e7f7      	b.n	80138fa <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 801390a:	f003 0301 	and.w	r3, r3, #1
 801390e:	f023 0003 	bic.w	r0, r3, #3
 8013912:	4408      	add	r0, r1
 8013914:	4288      	cmp	r0, r1
 8013916:	4614      	mov	r4, r2
 8013918:	d904      	bls.n	8013924 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 801391a:	6824      	ldr	r4, [r4, #0]
 801391c:	f841 4b04 	str.w	r4, [r1], #4
 8013920:	3204      	adds	r2, #4
 8013922:	e7f7      	b.n	8013914 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 8013924:	f003 0303 	and.w	r3, r3, #3
 8013928:	440b      	add	r3, r1
 801392a:	3a01      	subs	r2, #1
 801392c:	428b      	cmp	r3, r1
 801392e:	d90c      	bls.n	801394a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8013930:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8013934:	f801 0b01 	strb.w	r0, [r1], #1
 8013938:	e7f8      	b.n	801392c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 801393a:	0790      	lsls	r0, r2, #30
 801393c:	d0e7      	beq.n	801390e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 801393e:	f832 0b02 	ldrh.w	r0, [r2], #2
 8013942:	f821 0b02 	strh.w	r0, [r1], #2
 8013946:	3b02      	subs	r3, #2
 8013948:	e7e1      	b.n	801390e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 801394a:	2001      	movs	r0, #1
 801394c:	bd10      	pop	{r4, pc}

0801394e <_ZN8touchgfx3HAL7noTouchEv>:
 801394e:	b510      	push	{r4, lr}
 8013950:	f890 306f 	ldrb.w	r3, [r0, #111]	; 0x6f
 8013954:	4604      	mov	r4, r0
 8013956:	b153      	cbz	r3, 801396e <_ZN8touchgfx3HAL7noTouchEv+0x20>
 8013958:	f8b0 3064 	ldrh.w	r3, [r0, #100]	; 0x64
 801395c:	f8b0 2060 	ldrh.w	r2, [r0, #96]	; 0x60
 8013960:	2101      	movs	r1, #1
 8013962:	301c      	adds	r0, #28
 8013964:	f016 f82e 	bl	80299c4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8013968:	2300      	movs	r3, #0
 801396a:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 801396e:	bd10      	pop	{r4, pc}

08013970 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 8013970:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013974:	b085      	sub	sp, #20
 8013976:	ad04      	add	r5, sp, #16
 8013978:	4604      	mov	r4, r0
 801397a:	2000      	movs	r0, #0
 801397c:	f845 0d04 	str.w	r0, [r5, #-4]!
 8013980:	69a0      	ldr	r0, [r4, #24]
 8013982:	6806      	ldr	r6, [r0, #0]
 8013984:	9501      	str	r5, [sp, #4]
 8013986:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 801398a:	9500      	str	r5, [sp, #0]
 801398c:	6835      	ldr	r5, [r6, #0]
 801398e:	4699      	mov	r9, r3
 8013990:	460f      	mov	r7, r1
 8013992:	4690      	mov	r8, r2
 8013994:	47a8      	blx	r5
 8013996:	4d10      	ldr	r5, [pc, #64]	; (80139d8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 8013998:	4606      	mov	r6, r0
 801399a:	f8a5 9000 	strh.w	r9, [r5]
 801399e:	f7f1 fd83 	bl	80054a8 <_ZN8touchgfx3HAL3lcdEv>
 80139a2:	6803      	ldr	r3, [r0, #0]
 80139a4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80139a6:	4798      	blx	r3
 80139a8:	b128      	cbz	r0, 80139b6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 80139aa:	2801      	cmp	r0, #1
 80139ac:	d00b      	beq.n	80139c6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 80139ae:	4630      	mov	r0, r6
 80139b0:	b005      	add	sp, #20
 80139b2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80139b6:	882b      	ldrh	r3, [r5, #0]
 80139b8:	fb08 7203 	mla	r2, r8, r3, r7
 80139bc:	9b03      	ldr	r3, [sp, #12]
 80139be:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 80139c2:	63e3      	str	r3, [r4, #60]	; 0x3c
 80139c4:	e7f3      	b.n	80139ae <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 80139c6:	882a      	ldrh	r2, [r5, #0]
 80139c8:	9b03      	ldr	r3, [sp, #12]
 80139ca:	fb08 7202 	mla	r2, r8, r2, r7
 80139ce:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80139d2:	1a9a      	subs	r2, r3, r2
 80139d4:	63e2      	str	r2, [r4, #60]	; 0x3c
 80139d6:	e7ea      	b.n	80139ae <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 80139d8:	20013846 	.word	0x20013846

080139dc <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 80139dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80139de:	b08b      	sub	sp, #44	; 0x2c
 80139e0:	4617      	mov	r7, r2
 80139e2:	4604      	mov	r4, r0
 80139e4:	460e      	mov	r6, r1
 80139e6:	461d      	mov	r5, r3
 80139e8:	f7f1 fd5e 	bl	80054a8 <_ZN8touchgfx3HAL3lcdEv>
 80139ec:	6803      	ldr	r3, [r0, #0]
 80139ee:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80139f0:	4798      	blx	r3
 80139f2:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 80139f6:	9007      	str	r0, [sp, #28]
 80139f8:	e9cd 0308 	strd	r0, r3, [sp, #32]
 80139fc:	4b0d      	ldr	r3, [pc, #52]	; (8013a34 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 80139fe:	6822      	ldr	r2, [r4, #0]
 8013a00:	881b      	ldrh	r3, [r3, #0]
 8013a02:	9306      	str	r3, [sp, #24]
 8013a04:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8013a08:	9305      	str	r3, [sp, #20]
 8013a0a:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 8013a0e:	9304      	str	r3, [sp, #16]
 8013a10:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8013a14:	9303      	str	r3, [sp, #12]
 8013a16:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8013a1a:	9302      	str	r3, [sp, #8]
 8013a1c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8013a20:	e9cd 5300 	strd	r5, r3, [sp]
 8013a24:	4631      	mov	r1, r6
 8013a26:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 8013a28:	463b      	mov	r3, r7
 8013a2a:	2200      	movs	r2, #0
 8013a2c:	4620      	mov	r0, r4
 8013a2e:	47a8      	blx	r5
 8013a30:	b00b      	add	sp, #44	; 0x2c
 8013a32:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013a34:	20013846 	.word	0x20013846

08013a38 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 8013a38:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013a3c:	4698      	mov	r8, r3
 8013a3e:	6803      	ldr	r3, [r0, #0]
 8013a40:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 8013a42:	4b15      	ldr	r3, [pc, #84]	; (8013a98 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 8013a44:	b08b      	sub	sp, #44	; 0x2c
 8013a46:	4617      	mov	r7, r2
 8013a48:	f8b3 9000 	ldrh.w	r9, [r3]
 8013a4c:	460e      	mov	r6, r1
 8013a4e:	4604      	mov	r4, r0
 8013a50:	f7f1 fd2a 	bl	80054a8 <_ZN8touchgfx3HAL3lcdEv>
 8013a54:	6803      	ldr	r3, [r0, #0]
 8013a56:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013a58:	4798      	blx	r3
 8013a5a:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 8013a5e:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8013a62:	2302      	movs	r3, #2
 8013a64:	e9cd 9306 	strd	r9, r3, [sp, #24]
 8013a68:	2301      	movs	r3, #1
 8013a6a:	9305      	str	r3, [sp, #20]
 8013a6c:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8013a70:	9304      	str	r3, [sp, #16]
 8013a72:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8013a76:	9303      	str	r3, [sp, #12]
 8013a78:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8013a7c:	9302      	str	r3, [sp, #8]
 8013a7e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8013a82:	2200      	movs	r2, #0
 8013a84:	e9cd 8300 	strd	r8, r3, [sp]
 8013a88:	4631      	mov	r1, r6
 8013a8a:	463b      	mov	r3, r7
 8013a8c:	4620      	mov	r0, r4
 8013a8e:	47a8      	blx	r5
 8013a90:	b00b      	add	sp, #44	; 0x2c
 8013a92:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013a96:	bf00      	nop
 8013a98:	20013846 	.word	0x20013846

08013a9c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 8013a9c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013aa0:	4698      	mov	r8, r3
 8013aa2:	6803      	ldr	r3, [r0, #0]
 8013aa4:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 8013aa6:	4b11      	ldr	r3, [pc, #68]	; (8013aec <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 8013aa8:	b087      	sub	sp, #28
 8013aaa:	f8b3 9000 	ldrh.w	r9, [r3]
 8013aae:	460e      	mov	r6, r1
 8013ab0:	4617      	mov	r7, r2
 8013ab2:	4604      	mov	r4, r0
 8013ab4:	f7f1 fcf8 	bl	80054a8 <_ZN8touchgfx3HAL3lcdEv>
 8013ab8:	6803      	ldr	r3, [r0, #0]
 8013aba:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013abc:	4798      	blx	r3
 8013abe:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 8013ac2:	f8cd 900c 	str.w	r9, [sp, #12]
 8013ac6:	e9cd 0304 	strd	r0, r3, [sp, #16]
 8013aca:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 8013ace:	9302      	str	r3, [sp, #8]
 8013ad0:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8013ad4:	9301      	str	r3, [sp, #4]
 8013ad6:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8013ada:	9300      	str	r3, [sp, #0]
 8013adc:	463a      	mov	r2, r7
 8013ade:	4643      	mov	r3, r8
 8013ae0:	4631      	mov	r1, r6
 8013ae2:	4620      	mov	r0, r4
 8013ae4:	47a8      	blx	r5
 8013ae6:	b007      	add	sp, #28
 8013ae8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013aec:	20013846 	.word	0x20013846

08013af0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 8013af0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013af4:	4604      	mov	r4, r0
 8013af6:	b08f      	sub	sp, #60	; 0x3c
 8013af8:	4610      	mov	r0, r2
 8013afa:	460d      	mov	r5, r1
 8013afc:	4691      	mov	r9, r2
 8013afe:	461e      	mov	r6, r3
 8013b00:	f008 fafa 	bl	801c0f8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8013b04:	2800      	cmp	r0, #0
 8013b06:	f000 809d 	beq.w	8013c44 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 8013b0a:	6823      	ldr	r3, [r4, #0]
 8013b0c:	f8df b198 	ldr.w	fp, [pc, #408]	; 8013ca8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 8013b10:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8013b12:	f8df a198 	ldr.w	sl, [pc, #408]	; 8013cac <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 8013b16:	4f61      	ldr	r7, [pc, #388]	; (8013c9c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8013b18:	4620      	mov	r0, r4
 8013b1a:	4798      	blx	r3
 8013b1c:	6823      	ldr	r3, [r4, #0]
 8013b1e:	4620      	mov	r0, r4
 8013b20:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013b22:	4798      	blx	r3
 8013b24:	f8bb 3000 	ldrh.w	r3, [fp]
 8013b28:	9301      	str	r3, [sp, #4]
 8013b2a:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 8013b2e:	f8ba 3000 	ldrh.w	r3, [sl]
 8013b32:	9302      	str	r3, [sp, #8]
 8013b34:	883b      	ldrh	r3, [r7, #0]
 8013b36:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 8013b3a:	9303      	str	r3, [sp, #12]
 8013b3c:	4b58      	ldr	r3, [pc, #352]	; (8013ca0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8013b3e:	9305      	str	r3, [sp, #20]
 8013b40:	881a      	ldrh	r2, [r3, #0]
 8013b42:	9204      	str	r2, [sp, #16]
 8013b44:	4640      	mov	r0, r8
 8013b46:	f008 fb6b 	bl	801c220 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013b4a:	8038      	strh	r0, [r7, #0]
 8013b4c:	4640      	mov	r0, r8
 8013b4e:	f008 fb9b 	bl	801c288 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013b52:	9b05      	ldr	r3, [sp, #20]
 8013b54:	b280      	uxth	r0, r0
 8013b56:	8018      	strh	r0, [r3, #0]
 8013b58:	4b52      	ldr	r3, [pc, #328]	; (8013ca4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 8013b5a:	781b      	ldrb	r3, [r3, #0]
 8013b5c:	2b00      	cmp	r3, #0
 8013b5e:	d174      	bne.n	8013c4a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 8013b60:	883b      	ldrh	r3, [r7, #0]
 8013b62:	f8ab 3000 	strh.w	r3, [fp]
 8013b66:	f8aa 0000 	strh.w	r0, [sl]
 8013b6a:	4648      	mov	r0, r9
 8013b6c:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 8013b70:	f008 fac2 	bl	801c0f8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8013b74:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 8013b78:	2200      	movs	r2, #0
 8013b7a:	4611      	mov	r1, r2
 8013b7c:	4628      	mov	r0, r5
 8013b7e:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 8013b82:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 8013b86:	f7ef fd29 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8013b8a:	2301      	movs	r3, #1
 8013b8c:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 8013b90:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 8013b94:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8013b98:	2b00      	cmp	r3, #0
 8013b9a:	dd5c      	ble.n	8013c56 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8013b9c:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8013ba0:	2b00      	cmp	r3, #0
 8013ba2:	dd58      	ble.n	8013c56 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8013ba4:	462a      	mov	r2, r5
 8013ba6:	ab0a      	add	r3, sp, #40	; 0x28
 8013ba8:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8013bac:	6851      	ldr	r1, [r2, #4]
 8013bae:	c303      	stmia	r3!, {r0, r1}
 8013bb0:	4631      	mov	r1, r6
 8013bb2:	a80a      	add	r0, sp, #40	; 0x28
 8013bb4:	f7fe ff92 	bl	8012adc <_ZN8touchgfx4RectaNERKS0_>
 8013bb8:	4b38      	ldr	r3, [pc, #224]	; (8013c9c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8013bba:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013bbe:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8013bc2:	2100      	movs	r1, #0
 8013bc4:	aa0a      	add	r2, sp, #40	; 0x28
 8013bc6:	4b36      	ldr	r3, [pc, #216]	; (8013ca0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8013bc8:	910c      	str	r1, [sp, #48]	; 0x30
 8013bca:	e892 0003 	ldmia.w	r2, {r0, r1}
 8013bce:	f9b3 3000 	ldrsh.w	r3, [r3]
 8013bd2:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8013bd6:	ab08      	add	r3, sp, #32
 8013bd8:	e883 0003 	stmia.w	r3, {r0, r1}
 8013bdc:	4618      	mov	r0, r3
 8013bde:	a90c      	add	r1, sp, #48	; 0x30
 8013be0:	f7fe ff7c 	bl	8012adc <_ZN8touchgfx4RectaNERKS0_>
 8013be4:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 8013be6:	2b00      	cmp	r3, #0
 8013be8:	d13c      	bne.n	8013c64 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 8013bea:	2000      	movs	r0, #0
 8013bec:	f884 0058 	strb.w	r0, [r4, #88]	; 0x58
 8013bf0:	2600      	movs	r6, #0
 8013bf2:	682a      	ldr	r2, [r5, #0]
 8013bf4:	696b      	ldr	r3, [r5, #20]
 8013bf6:	616e      	str	r6, [r5, #20]
 8013bf8:	9305      	str	r3, [sp, #20]
 8013bfa:	6892      	ldr	r2, [r2, #8]
 8013bfc:	a908      	add	r1, sp, #32
 8013bfe:	4628      	mov	r0, r5
 8013c00:	4790      	blx	r2
 8013c02:	9b05      	ldr	r3, [sp, #20]
 8013c04:	616b      	str	r3, [r5, #20]
 8013c06:	4652      	mov	r2, sl
 8013c08:	f884 6058 	strb.w	r6, [r4, #88]	; 0x58
 8013c0c:	4649      	mov	r1, r9
 8013c0e:	4628      	mov	r0, r5
 8013c10:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 8013c14:	f7ef fce2 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8013c18:	4b23      	ldr	r3, [pc, #140]	; (8013ca8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 8013c1a:	9a01      	ldr	r2, [sp, #4]
 8013c1c:	801a      	strh	r2, [r3, #0]
 8013c1e:	4b23      	ldr	r3, [pc, #140]	; (8013cac <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 8013c20:	9a02      	ldr	r2, [sp, #8]
 8013c22:	801a      	strh	r2, [r3, #0]
 8013c24:	4b1d      	ldr	r3, [pc, #116]	; (8013c9c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8013c26:	9a03      	ldr	r2, [sp, #12]
 8013c28:	801a      	strh	r2, [r3, #0]
 8013c2a:	4b1d      	ldr	r3, [pc, #116]	; (8013ca0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8013c2c:	9a04      	ldr	r2, [sp, #16]
 8013c2e:	801a      	strh	r2, [r3, #0]
 8013c30:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 8013c34:	6823      	ldr	r3, [r4, #0]
 8013c36:	4620      	mov	r0, r4
 8013c38:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8013c3a:	4798      	blx	r3
 8013c3c:	6823      	ldr	r3, [r4, #0]
 8013c3e:	4620      	mov	r0, r4
 8013c40:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013c42:	4798      	blx	r3
 8013c44:	b00f      	add	sp, #60	; 0x3c
 8013c46:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013c4a:	883b      	ldrh	r3, [r7, #0]
 8013c4c:	f8ab 0000 	strh.w	r0, [fp]
 8013c50:	f8aa 3000 	strh.w	r3, [sl]
 8013c54:	e789      	b.n	8013b6a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 8013c56:	462a      	mov	r2, r5
 8013c58:	ab0a      	add	r3, sp, #40	; 0x28
 8013c5a:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8013c5e:	6851      	ldr	r1, [r2, #4]
 8013c60:	c303      	stmia	r3!, {r0, r1}
 8013c62:	e7a9      	b.n	8013bb8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 8013c64:	a807      	add	r0, sp, #28
 8013c66:	f008 fc4b 	bl	801c500 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8013c6a:	4606      	mov	r6, r0
 8013c6c:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 8013c6e:	6803      	ldr	r3, [r0, #0]
 8013c70:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013c72:	4798      	blx	r3
 8013c74:	4286      	cmp	r6, r0
 8013c76:	d1b8      	bne.n	8013bea <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 8013c78:	f7f1 fc16 	bl	80054a8 <_ZN8touchgfx3HAL3lcdEv>
 8013c7c:	6803      	ldr	r3, [r0, #0]
 8013c7e:	4606      	mov	r6, r0
 8013c80:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8013c82:	9305      	str	r3, [sp, #20]
 8013c84:	a807      	add	r0, sp, #28
 8013c86:	f008 fc3b 	bl	801c500 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8013c8a:	9b05      	ldr	r3, [sp, #20]
 8013c8c:	4601      	mov	r1, r0
 8013c8e:	4630      	mov	r0, r6
 8013c90:	4798      	blx	r3
 8013c92:	f080 0001 	eor.w	r0, r0, #1
 8013c96:	b2c0      	uxtb	r0, r0
 8013c98:	e7a8      	b.n	8013bec <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 8013c9a:	bf00      	nop
 8013c9c:	20013840 	.word	0x20013840
 8013ca0:	20013842 	.word	0x20013842
 8013ca4:	20013844 	.word	0x20013844
 8013ca8:	20013846 	.word	0x20013846
 8013cac:	20013848 	.word	0x20013848

08013cb0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 8013cb0:	b510      	push	{r4, lr}
 8013cb2:	4b07      	ldr	r3, [pc, #28]	; (8013cd0 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 8013cb4:	781b      	ldrb	r3, [r3, #0]
 8013cb6:	4604      	mov	r4, r0
 8013cb8:	b13b      	cbz	r3, 8013cca <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8013cba:	6803      	ldr	r3, [r0, #0]
 8013cbc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8013cbe:	4798      	blx	r3
 8013cc0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8013cc2:	4283      	cmp	r3, r0
 8013cc4:	d101      	bne.n	8013cca <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8013cc6:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8013cc8:	bd10      	pop	{r4, pc}
 8013cca:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8013ccc:	e7fc      	b.n	8013cc8 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 8013cce:	bf00      	nop
 8013cd0:	2001384a 	.word	0x2001384a

08013cd4 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 8013cd4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013cd8:	b08a      	sub	sp, #40	; 0x28
 8013cda:	461d      	mov	r5, r3
 8013cdc:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8013ce0:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8013ce4:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8013ce8:	f8ad 3018 	strh.w	r3, [sp, #24]
 8013cec:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8013cf0:	f8ad 301a 	strh.w	r3, [sp, #26]
 8013cf4:	2400      	movs	r4, #0
 8013cf6:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8013cfa:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 8013cfe:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013d02:	4690      	mov	r8, r2
 8013d04:	4607      	mov	r7, r0
 8013d06:	9404      	str	r4, [sp, #16]
 8013d08:	f88d 4020 	strb.w	r4, [sp, #32]
 8013d0c:	f7ff ffd0 	bl	8013cb0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8013d10:	fb06 8505 	mla	r5, r6, r5, r8
 8013d14:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8013d18:	6878      	ldr	r0, [r7, #4]
 8013d1a:	9505      	str	r5, [sp, #20]
 8013d1c:	f8ad 601e 	strh.w	r6, [sp, #30]
 8013d20:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8013d24:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 8013d28:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 8013d2c:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8013d30:	6803      	ldr	r3, [r0, #0]
 8013d32:	a901      	add	r1, sp, #4
 8013d34:	685b      	ldr	r3, [r3, #4]
 8013d36:	4798      	blx	r3
 8013d38:	b00a      	add	sp, #40	; 0x28
 8013d3a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08013d3e <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 8013d3e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013d42:	b08b      	sub	sp, #44	; 0x2c
 8013d44:	2400      	movs	r4, #0
 8013d46:	461d      	mov	r5, r3
 8013d48:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8013d4c:	4688      	mov	r8, r1
 8013d4e:	4691      	mov	r9, r2
 8013d50:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 8013d54:	9404      	str	r4, [sp, #16]
 8013d56:	4607      	mov	r7, r0
 8013d58:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8013d5c:	f7ff ffa8 	bl	8013cb0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8013d60:	fb06 9505 	mla	r5, r6, r5, r9
 8013d64:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8013d68:	f8ad 3018 	strh.w	r3, [sp, #24]
 8013d6c:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8013d70:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8013d74:	6878      	ldr	r0, [r7, #4]
 8013d76:	9505      	str	r5, [sp, #20]
 8013d78:	f8ad 301a 	strh.w	r3, [sp, #26]
 8013d7c:	f8ad 401c 	strh.w	r4, [sp, #28]
 8013d80:	f8ad 601e 	strh.w	r6, [sp, #30]
 8013d84:	f8cd 8010 	str.w	r8, [sp, #16]
 8013d88:	f8ad 4020 	strh.w	r4, [sp, #32]
 8013d8c:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8013d90:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 8013d94:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8013d98:	6803      	ldr	r3, [r0, #0]
 8013d9a:	a901      	add	r1, sp, #4
 8013d9c:	685b      	ldr	r3, [r3, #4]
 8013d9e:	4798      	blx	r3
 8013da0:	b00b      	add	sp, #44	; 0x2c
 8013da2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

08013da8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 8013da8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013dac:	b08a      	sub	sp, #40	; 0x28
 8013dae:	4698      	mov	r8, r3
 8013db0:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 8013db4:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 8013db8:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 8013dbc:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 8013dc0:	2300      	movs	r3, #0
 8013dc2:	2d0b      	cmp	r5, #11
 8013dc4:	4606      	mov	r6, r0
 8013dc6:	9304      	str	r3, [sp, #16]
 8013dc8:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 8013dcc:	d138      	bne.n	8013e40 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 8013dce:	2380      	movs	r3, #128	; 0x80
 8013dd0:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8013dd4:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8013dd8:	f8ad 3018 	strh.w	r3, [sp, #24]
 8013ddc:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8013de0:	f8ad 301a 	strh.w	r3, [sp, #26]
 8013de4:	f88d 0020 	strb.w	r0, [sp, #32]
 8013de8:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8013dec:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013df0:	4630      	mov	r0, r6
 8013df2:	9203      	str	r2, [sp, #12]
 8013df4:	f7ff ff5c 	bl	8013cb0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8013df8:	2c0b      	cmp	r4, #11
 8013dfa:	bf98      	it	ls
 8013dfc:	4b1b      	ldrls	r3, [pc, #108]	; (8013e6c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 8013dfe:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 8013e02:	bf98      	it	ls
 8013e04:	5d19      	ldrbls	r1, [r3, r4]
 8013e06:	f8ad 701e 	strh.w	r7, [sp, #30]
 8013e0a:	bf88      	it	hi
 8013e0c:	2100      	movhi	r1, #0
 8013e0e:	fb02 8307 	mla	r3, r2, r7, r8
 8013e12:	10c9      	asrs	r1, r1, #3
 8013e14:	fb01 0003 	mla	r0, r1, r3, r0
 8013e18:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 8013e1c:	9005      	str	r0, [sp, #20]
 8013e1e:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 8013e22:	6870      	ldr	r0, [r6, #4]
 8013e24:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 8013e28:	2300      	movs	r3, #0
 8013e2a:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8013e2e:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8013e32:	6803      	ldr	r3, [r0, #0]
 8013e34:	a901      	add	r1, sp, #4
 8013e36:	685b      	ldr	r3, [r3, #4]
 8013e38:	4798      	blx	r3
 8013e3a:	b00a      	add	sp, #40	; 0x28
 8013e3c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013e40:	2d02      	cmp	r5, #2
 8013e42:	d109      	bne.n	8013e58 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 8013e44:	28ff      	cmp	r0, #255	; 0xff
 8013e46:	d105      	bne.n	8013e54 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 8013e48:	f1bc 0f00 	cmp.w	ip, #0
 8013e4c:	bf14      	ite	ne
 8013e4e:	2340      	movne	r3, #64	; 0x40
 8013e50:	2320      	moveq	r3, #32
 8013e52:	e7bd      	b.n	8013dd0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8013e54:	2340      	movs	r3, #64	; 0x40
 8013e56:	e7bb      	b.n	8013dd0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8013e58:	28ff      	cmp	r0, #255	; 0xff
 8013e5a:	d105      	bne.n	8013e68 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 8013e5c:	f1bc 0f00 	cmp.w	ip, #0
 8013e60:	bf14      	ite	ne
 8013e62:	2304      	movne	r3, #4
 8013e64:	2301      	moveq	r3, #1
 8013e66:	e7b3      	b.n	8013dd0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8013e68:	2304      	movs	r3, #4
 8013e6a:	e7b1      	b.n	8013dd0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8013e6c:	080316a4 	.word	0x080316a4

08013e70 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 8013e70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013e74:	b08b      	sub	sp, #44	; 0x2c
 8013e76:	461d      	mov	r5, r3
 8013e78:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 8013e7c:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 8013e80:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 8013e84:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8013e88:	bf14      	ite	ne
 8013e8a:	2308      	movne	r3, #8
 8013e8c:	2302      	moveq	r3, #2
 8013e8e:	2400      	movs	r4, #0
 8013e90:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8013e94:	4688      	mov	r8, r1
 8013e96:	4693      	mov	fp, r2
 8013e98:	9404      	str	r4, [sp, #16]
 8013e9a:	4607      	mov	r7, r0
 8013e9c:	f7ff ff08 	bl	8013cb0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8013ea0:	2e0b      	cmp	r6, #11
 8013ea2:	bf98      	it	ls
 8013ea4:	4b15      	ldrls	r3, [pc, #84]	; (8013efc <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 8013ea6:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8013eaa:	bf98      	it	ls
 8013eac:	5d9c      	ldrbls	r4, [r3, r6]
 8013eae:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8013eb2:	f8ad 3018 	strh.w	r3, [sp, #24]
 8013eb6:	fb05 b50a 	mla	r5, r5, sl, fp
 8013eba:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8013ebe:	f8ad 301a 	strh.w	r3, [sp, #26]
 8013ec2:	10e4      	asrs	r4, r4, #3
 8013ec4:	fb04 0405 	mla	r4, r4, r5, r0
 8013ec8:	2300      	movs	r3, #0
 8013eca:	6878      	ldr	r0, [r7, #4]
 8013ecc:	9405      	str	r4, [sp, #20]
 8013ece:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013ed2:	f8ad a01e 	strh.w	sl, [sp, #30]
 8013ed6:	f8cd 8010 	str.w	r8, [sp, #16]
 8013eda:	f88d 9020 	strb.w	r9, [sp, #32]
 8013ede:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 8013ee2:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8013ee6:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 8013eea:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 8013eee:	6803      	ldr	r3, [r0, #0]
 8013ef0:	a901      	add	r1, sp, #4
 8013ef2:	685b      	ldr	r3, [r3, #4]
 8013ef4:	4798      	blx	r3
 8013ef6:	b00b      	add	sp, #44	; 0x2c
 8013ef8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013efc:	080316a4 	.word	0x080316a4

08013f00 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 8013f00:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013f04:	461e      	mov	r6, r3
 8013f06:	4b0a      	ldr	r3, [pc, #40]	; (8013f30 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 8013f08:	460f      	mov	r7, r1
 8013f0a:	881d      	ldrh	r5, [r3, #0]
 8013f0c:	4690      	mov	r8, r2
 8013f0e:	f7f1 facb 	bl	80054a8 <_ZN8touchgfx3HAL3lcdEv>
 8013f12:	6803      	ldr	r3, [r0, #0]
 8013f14:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013f16:	4798      	blx	r3
 8013f18:	280b      	cmp	r0, #11
 8013f1a:	bf9a      	itte	ls
 8013f1c:	4b05      	ldrls	r3, [pc, #20]	; (8013f34 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 8013f1e:	5c1c      	ldrbls	r4, [r3, r0]
 8013f20:	2400      	movhi	r4, #0
 8013f22:	fb08 7005 	mla	r0, r8, r5, r7
 8013f26:	10e4      	asrs	r4, r4, #3
 8013f28:	fb04 6000 	mla	r0, r4, r0, r6
 8013f2c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013f30:	20013846 	.word	0x20013846
 8013f34:	080316a4 	.word	0x080316a4

08013f38 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 8013f38:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013f3a:	b08b      	sub	sp, #44	; 0x2c
 8013f3c:	461f      	mov	r7, r3
 8013f3e:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8013f42:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8013f46:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8013f4a:	f8ad 3018 	strh.w	r3, [sp, #24]
 8013f4e:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8013f52:	f8ad 301a 	strh.w	r3, [sp, #26]
 8013f56:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8013f5a:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013f5e:	2500      	movs	r5, #0
 8013f60:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8013f64:	f88d 3020 	strb.w	r3, [sp, #32]
 8013f68:	4604      	mov	r4, r0
 8013f6a:	4616      	mov	r6, r2
 8013f6c:	9504      	str	r5, [sp, #16]
 8013f6e:	f7ff fe9f 	bl	8013cb0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8013f72:	463a      	mov	r2, r7
 8013f74:	4631      	mov	r1, r6
 8013f76:	4603      	mov	r3, r0
 8013f78:	4620      	mov	r0, r4
 8013f7a:	f7ff ffc1 	bl	8013f00 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8013f7e:	4b0e      	ldr	r3, [pc, #56]	; (8013fb8 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 8013f80:	9005      	str	r0, [sp, #20]
 8013f82:	881b      	ldrh	r3, [r3, #0]
 8013f84:	f8ad 301e 	strh.w	r3, [sp, #30]
 8013f88:	f7f1 fa8e 	bl	80054a8 <_ZN8touchgfx3HAL3lcdEv>
 8013f8c:	6803      	ldr	r3, [r0, #0]
 8013f8e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013f90:	4798      	blx	r3
 8013f92:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8013f94:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 8013f98:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 8013f9c:	9304      	str	r3, [sp, #16]
 8013f9e:	6860      	ldr	r0, [r4, #4]
 8013fa0:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 8013fa4:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 8013fa8:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 8013fac:	6803      	ldr	r3, [r0, #0]
 8013fae:	a901      	add	r1, sp, #4
 8013fb0:	685b      	ldr	r3, [r3, #4]
 8013fb2:	4798      	blx	r3
 8013fb4:	b00b      	add	sp, #44	; 0x2c
 8013fb6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013fb8:	20013846 	.word	0x20013846

08013fbc <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 8013fbc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013fbe:	b08d      	sub	sp, #52	; 0x34
 8013fc0:	466b      	mov	r3, sp
 8013fc2:	e883 0006 	stmia.w	r3, {r1, r2}
 8013fc6:	2300      	movs	r3, #0
 8013fc8:	9306      	str	r3, [sp, #24]
 8013fca:	6803      	ldr	r3, [r0, #0]
 8013fcc:	f8bd 6000 	ldrh.w	r6, [sp]
 8013fd0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8013fd2:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 8013fd6:	2501      	movs	r5, #1
 8013fd8:	9503      	str	r5, [sp, #12]
 8013fda:	4604      	mov	r4, r0
 8013fdc:	4798      	blx	r3
 8013fde:	463a      	mov	r2, r7
 8013fe0:	4631      	mov	r1, r6
 8013fe2:	4603      	mov	r3, r0
 8013fe4:	4620      	mov	r0, r4
 8013fe6:	f7ff ff8b 	bl	8013f00 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8013fea:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8013fec:	9307      	str	r3, [sp, #28]
 8013fee:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8013ff2:	f8ad 3020 	strh.w	r3, [sp, #32]
 8013ff6:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8013ffa:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8013ffe:	4b0f      	ldr	r3, [pc, #60]	; (801403c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 8014000:	9004      	str	r0, [sp, #16]
 8014002:	881b      	ldrh	r3, [r3, #0]
 8014004:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8014008:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 801400c:	f7f1 fa4c 	bl	80054a8 <_ZN8touchgfx3HAL3lcdEv>
 8014010:	6803      	ldr	r3, [r0, #0]
 8014012:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014014:	4798      	blx	r3
 8014016:	23ff      	movs	r3, #255	; 0xff
 8014018:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 801401c:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8014020:	6860      	ldr	r0, [r4, #4]
 8014022:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 8014026:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 801402a:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 801402e:	6803      	ldr	r3, [r0, #0]
 8014030:	a903      	add	r1, sp, #12
 8014032:	685b      	ldr	r3, [r3, #4]
 8014034:	4798      	blx	r3
 8014036:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8014038:	b00d      	add	sp, #52	; 0x34
 801403a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801403c:	20013846 	.word	0x20013846

08014040 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 8014040:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014044:	b08c      	sub	sp, #48	; 0x30
 8014046:	461e      	mov	r6, r3
 8014048:	466d      	mov	r5, sp
 801404a:	2300      	movs	r3, #0
 801404c:	e885 0006 	stmia.w	r5, {r1, r2}
 8014050:	9306      	str	r3, [sp, #24]
 8014052:	6803      	ldr	r3, [r0, #0]
 8014054:	f8bd 7000 	ldrh.w	r7, [sp]
 8014058:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801405a:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 801405e:	2501      	movs	r5, #1
 8014060:	9503      	str	r5, [sp, #12]
 8014062:	4604      	mov	r4, r0
 8014064:	4798      	blx	r3
 8014066:	4642      	mov	r2, r8
 8014068:	4639      	mov	r1, r7
 801406a:	4603      	mov	r3, r0
 801406c:	4620      	mov	r0, r4
 801406e:	f7ff ff47 	bl	8013f00 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8014072:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8014076:	f8ad 3020 	strh.w	r3, [sp, #32]
 801407a:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 801407e:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8014082:	4b11      	ldr	r3, [pc, #68]	; (80140c8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 8014084:	9004      	str	r0, [sp, #16]
 8014086:	881b      	ldrh	r3, [r3, #0]
 8014088:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 801408c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801408e:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8014092:	9607      	str	r6, [sp, #28]
 8014094:	f7f1 fa08 	bl	80054a8 <_ZN8touchgfx3HAL3lcdEv>
 8014098:	6803      	ldr	r3, [r0, #0]
 801409a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801409c:	4798      	blx	r3
 801409e:	23ff      	movs	r3, #255	; 0xff
 80140a0:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 80140a4:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 80140a8:	6860      	ldr	r0, [r4, #4]
 80140aa:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 80140ae:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 80140b2:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 80140b6:	6803      	ldr	r3, [r0, #0]
 80140b8:	a903      	add	r1, sp, #12
 80140ba:	685b      	ldr	r3, [r3, #4]
 80140bc:	4798      	blx	r3
 80140be:	4630      	mov	r0, r6
 80140c0:	b00c      	add	sp, #48	; 0x30
 80140c2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80140c6:	bf00      	nop
 80140c8:	20013846 	.word	0x20013846

080140cc <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 80140cc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80140ce:	b085      	sub	sp, #20
 80140d0:	ac02      	add	r4, sp, #8
 80140d2:	e884 0006 	stmia.w	r4, {r1, r2}
 80140d6:	4605      	mov	r5, r0
 80140d8:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 80140dc:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 80140e0:	f7ff fde6 	bl	8013cb0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80140e4:	463a      	mov	r2, r7
 80140e6:	4603      	mov	r3, r0
 80140e8:	4631      	mov	r1, r6
 80140ea:	4628      	mov	r0, r5
 80140ec:	f7ff ff08 	bl	8013f00 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80140f0:	4a05      	ldr	r2, [pc, #20]	; (8014108 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 80140f2:	682b      	ldr	r3, [r5, #0]
 80140f4:	8812      	ldrh	r2, [r2, #0]
 80140f6:	9200      	str	r2, [sp, #0]
 80140f8:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 80140fa:	e894 0006 	ldmia.w	r4, {r1, r2}
 80140fe:	4603      	mov	r3, r0
 8014100:	4628      	mov	r0, r5
 8014102:	47b0      	blx	r6
 8014104:	b005      	add	sp, #20
 8014106:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8014108:	20013846 	.word	0x20013846

0801410c <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 801410c:	b570      	push	{r4, r5, r6, lr}
 801410e:	f890 306e 	ldrb.w	r3, [r0, #110]	; 0x6e
 8014112:	4604      	mov	r4, r0
 8014114:	b19b      	cbz	r3, 801413e <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 8014116:	2002      	movs	r0, #2
 8014118:	f7ee fcb8 	bl	8002a8c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 801411c:	2300      	movs	r3, #0
 801411e:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 8014122:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
 8014126:	6823      	ldr	r3, [r4, #0]
 8014128:	4620      	mov	r0, r4
 801412a:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 801412e:	f7ff fdbf 	bl	8013cb0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8014132:	462b      	mov	r3, r5
 8014134:	4601      	mov	r1, r0
 8014136:	4620      	mov	r0, r4
 8014138:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801413c:	4718      	bx	r3
 801413e:	bd70      	pop	{r4, r5, r6, pc}

08014140 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 8014140:	b538      	push	{r3, r4, r5, lr}
 8014142:	f890 307b 	ldrb.w	r3, [r0, #123]	; 0x7b
 8014146:	428b      	cmp	r3, r1
 8014148:	4604      	mov	r4, r0
 801414a:	460d      	mov	r5, r1
 801414c:	d006      	beq.n	801415c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 801414e:	6803      	ldr	r3, [r0, #0]
 8014150:	b929      	cbnz	r1, 801415e <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 8014152:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8014156:	4798      	blx	r3
 8014158:	f884 507b 	strb.w	r5, [r4, #123]	; 0x7b
 801415c:	bd38      	pop	{r3, r4, r5, pc}
 801415e:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 8014162:	e7f8      	b.n	8014156 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

08014164 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 8014164:	b510      	push	{r4, lr}
 8014166:	4b0d      	ldr	r3, [pc, #52]	; (801419c <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 8014168:	781b      	ldrb	r3, [r3, #0]
 801416a:	4604      	mov	r4, r0
 801416c:	b95b      	cbnz	r3, 8014186 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 801416e:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 8014172:	2b02      	cmp	r3, #2
 8014174:	d007      	beq.n	8014186 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8014176:	6840      	ldr	r0, [r0, #4]
 8014178:	f000 f92c 	bl	80143d4 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 801417c:	b118      	cbz	r0, 8014186 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 801417e:	6862      	ldr	r2, [r4, #4]
 8014180:	7a53      	ldrb	r3, [r2, #9]
 8014182:	2b00      	cmp	r3, #0
 8014184:	d0fc      	beq.n	8014180 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 8014186:	f7ee fdb9 	bl	8002cfc <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 801418a:	4620      	mov	r0, r4
 801418c:	2100      	movs	r1, #0
 801418e:	f7ff ffd7 	bl	8014140 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8014192:	4620      	mov	r0, r4
 8014194:	f7ff fd8c 	bl	8013cb0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8014198:	bd10      	pop	{r4, pc}
 801419a:	bf00      	nop
 801419c:	2001384a 	.word	0x2001384a

080141a0 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 80141a0:	b570      	push	{r4, r5, r6, lr}
 80141a2:	4604      	mov	r4, r0
 80141a4:	6803      	ldr	r3, [r0, #0]
 80141a6:	b919      	cbnz	r1, 80141b0 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 80141a8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80141aa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80141ae:	4718      	bx	r3
 80141b0:	2200      	movs	r2, #0
 80141b2:	f890 607b 	ldrb.w	r6, [r0, #123]	; 0x7b
 80141b6:	f880 207b 	strb.w	r2, [r0, #123]	; 0x7b
 80141ba:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80141bc:	4798      	blx	r3
 80141be:	6863      	ldr	r3, [r4, #4]
 80141c0:	2101      	movs	r1, #1
 80141c2:	4605      	mov	r5, r0
 80141c4:	7299      	strb	r1, [r3, #10]
 80141c6:	4620      	mov	r0, r4
 80141c8:	f884 607b 	strb.w	r6, [r4, #123]	; 0x7b
 80141cc:	f7ff ffb8 	bl	8014140 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 80141d0:	4628      	mov	r0, r5
 80141d2:	bd70      	pop	{r4, r5, r6, pc}

080141d4 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 80141d4:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 80141d8:	1a13      	subs	r3, r2, r0
 80141da:	4258      	negs	r0, r3
 80141dc:	4158      	adcs	r0, r3
 80141de:	4770      	bx	lr

080141e0 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 80141e0:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 80141e4:	1a9b      	subs	r3, r3, r2
 80141e6:	2b00      	cmp	r3, #0
 80141e8:	bfdc      	itt	le
 80141ea:	6882      	ldrle	r2, [r0, #8]
 80141ec:	189b      	addle	r3, r3, r2
 80141ee:	2b01      	cmp	r3, #1
 80141f0:	bfcc      	ite	gt
 80141f2:	2000      	movgt	r0, #0
 80141f4:	2001      	movle	r0, #1
 80141f6:	4770      	bx	lr

080141f8 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 80141f8:	6902      	ldr	r2, [r0, #16]
 80141fa:	6843      	ldr	r3, [r0, #4]
 80141fc:	2024      	movs	r0, #36	; 0x24
 80141fe:	fb00 3002 	mla	r0, r0, r2, r3
 8014202:	4770      	bx	lr

08014204 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 8014204:	6803      	ldr	r3, [r0, #0]
 8014206:	691b      	ldr	r3, [r3, #16]
 8014208:	4718      	bx	r3

0801420a <_ZN8touchgfx13DMA_Interface7executeEv>:
 801420a:	b570      	push	{r4, r5, r6, lr}
 801420c:	2301      	movs	r3, #1
 801420e:	7203      	strb	r3, [r0, #8]
 8014210:	4604      	mov	r4, r0
 8014212:	6840      	ldr	r0, [r0, #4]
 8014214:	6803      	ldr	r3, [r0, #0]
 8014216:	699b      	ldr	r3, [r3, #24]
 8014218:	4798      	blx	r3
 801421a:	6803      	ldr	r3, [r0, #0]
 801421c:	2b40      	cmp	r3, #64	; 0x40
 801421e:	4605      	mov	r5, r0
 8014220:	d00c      	beq.n	801423c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8014222:	d810      	bhi.n	8014246 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 8014224:	2b04      	cmp	r3, #4
 8014226:	d01d      	beq.n	8014264 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 8014228:	d804      	bhi.n	8014234 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 801422a:	2b01      	cmp	r3, #1
 801422c:	d006      	beq.n	801423c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 801422e:	2b02      	cmp	r3, #2
 8014230:	d02c      	beq.n	801428c <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 8014232:	bd70      	pop	{r4, r5, r6, pc}
 8014234:	2b08      	cmp	r3, #8
 8014236:	d01d      	beq.n	8014274 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 8014238:	2b20      	cmp	r3, #32
 801423a:	d1fa      	bne.n	8014232 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 801423c:	6823      	ldr	r3, [r4, #0]
 801423e:	4620      	mov	r0, r4
 8014240:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8014242:	4798      	blx	r3
 8014244:	e013      	b.n	801426e <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 8014246:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 801424a:	d0f7      	beq.n	801423c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 801424c:	d804      	bhi.n	8014258 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 801424e:	2b80      	cmp	r3, #128	; 0x80
 8014250:	d0f4      	beq.n	801423c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8014252:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8014256:	e7f0      	b.n	801423a <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 8014258:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801425c:	d0ee      	beq.n	801423c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 801425e:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8014262:	e7e5      	b.n	8014230 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 8014264:	6823      	ldr	r3, [r4, #0]
 8014266:	7f01      	ldrb	r1, [r0, #28]
 8014268:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801426a:	4620      	mov	r0, r4
 801426c:	4798      	blx	r3
 801426e:	6823      	ldr	r3, [r4, #0]
 8014270:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8014272:	e006      	b.n	8014282 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 8014274:	6823      	ldr	r3, [r4, #0]
 8014276:	7f01      	ldrb	r1, [r0, #28]
 8014278:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801427a:	4620      	mov	r0, r4
 801427c:	4798      	blx	r3
 801427e:	6823      	ldr	r3, [r4, #0]
 8014280:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8014282:	4629      	mov	r1, r5
 8014284:	4620      	mov	r0, r4
 8014286:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801428a:	4718      	bx	r3
 801428c:	6823      	ldr	r3, [r4, #0]
 801428e:	4620      	mov	r0, r4
 8014290:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8014292:	4798      	blx	r3
 8014294:	e7f3      	b.n	801427e <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

08014296 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 8014296:	4770      	bx	lr

08014298 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 8014298:	4770      	bx	lr

0801429a <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 801429a:	4770      	bx	lr

0801429c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 801429c:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 80142a0:	1ad2      	subs	r2, r2, r3
 80142a2:	2a00      	cmp	r2, #0
 80142a4:	b510      	push	{r4, lr}
 80142a6:	bfdc      	itt	le
 80142a8:	6884      	ldrle	r4, [r0, #8]
 80142aa:	1912      	addle	r2, r2, r4
 80142ac:	2a01      	cmp	r2, #1
 80142ae:	dd16      	ble.n	80142de <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 80142b0:	6842      	ldr	r2, [r0, #4]
 80142b2:	2424      	movs	r4, #36	; 0x24
 80142b4:	fb04 2303 	mla	r3, r4, r3, r2
 80142b8:	f101 0220 	add.w	r2, r1, #32
 80142bc:	f851 4b04 	ldr.w	r4, [r1], #4
 80142c0:	f843 4b04 	str.w	r4, [r3], #4
 80142c4:	4291      	cmp	r1, r2
 80142c6:	d1f9      	bne.n	80142bc <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 80142c8:	780a      	ldrb	r2, [r1, #0]
 80142ca:	701a      	strb	r2, [r3, #0]
 80142cc:	68c3      	ldr	r3, [r0, #12]
 80142ce:	6882      	ldr	r2, [r0, #8]
 80142d0:	f3bf 8f5b 	dmb	ish
 80142d4:	3301      	adds	r3, #1
 80142d6:	429a      	cmp	r2, r3
 80142d8:	bfd8      	it	le
 80142da:	1a9b      	suble	r3, r3, r2
 80142dc:	60c3      	str	r3, [r0, #12]
 80142de:	bd10      	pop	{r4, pc}

080142e0 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 80142e0:	6903      	ldr	r3, [r0, #16]
 80142e2:	6882      	ldr	r2, [r0, #8]
 80142e4:	f3bf 8f5b 	dmb	ish
 80142e8:	3301      	adds	r3, #1
 80142ea:	429a      	cmp	r2, r3
 80142ec:	bfd8      	it	le
 80142ee:	1a9b      	suble	r3, r3, r2
 80142f0:	6103      	str	r3, [r0, #16]
 80142f2:	4770      	bx	lr

080142f4 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 80142f4:	b570      	push	{r4, r5, r6, lr}
 80142f6:	4604      	mov	r4, r0
 80142f8:	460e      	mov	r6, r1
 80142fa:	6860      	ldr	r0, [r4, #4]
 80142fc:	6803      	ldr	r3, [r0, #0]
 80142fe:	685b      	ldr	r3, [r3, #4]
 8014300:	4798      	blx	r3
 8014302:	2800      	cmp	r0, #0
 8014304:	d1f9      	bne.n	80142fa <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 8014306:	4d0d      	ldr	r5, [pc, #52]	; (801433c <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 8014308:	6828      	ldr	r0, [r5, #0]
 801430a:	6803      	ldr	r3, [r0, #0]
 801430c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 801430e:	4798      	blx	r3
 8014310:	f7ee fd02 	bl	8002d18 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 8014314:	6828      	ldr	r0, [r5, #0]
 8014316:	2101      	movs	r1, #1
 8014318:	f7ff ff12 	bl	8014140 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 801431c:	6860      	ldr	r0, [r4, #4]
 801431e:	6803      	ldr	r3, [r0, #0]
 8014320:	4631      	mov	r1, r6
 8014322:	689b      	ldr	r3, [r3, #8]
 8014324:	4798      	blx	r3
 8014326:	6823      	ldr	r3, [r4, #0]
 8014328:	4620      	mov	r0, r4
 801432a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801432c:	4798      	blx	r3
 801432e:	6828      	ldr	r0, [r5, #0]
 8014330:	6803      	ldr	r3, [r0, #0]
 8014332:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8014336:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8014338:	4718      	bx	r3
 801433a:	bf00      	nop
 801433c:	2001384c 	.word	0x2001384c

08014340 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 8014340:	b508      	push	{r3, lr}
 8014342:	f7ee fcdb 	bl	8002cfc <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8014346:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 801434a:	f7ee bcdf 	b.w	8002d0c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0801434e <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 801434e:	b510      	push	{r4, lr}
 8014350:	2114      	movs	r1, #20
 8014352:	4604      	mov	r4, r0
 8014354:	f018 fbc9 	bl	802caea <_ZdlPvj>
 8014358:	4620      	mov	r0, r4
 801435a:	bd10      	pop	{r4, pc}

0801435c <_ZN8touchgfx13DMA_Interface5startEv>:
 801435c:	b510      	push	{r4, lr}
 801435e:	4604      	mov	r4, r0
 8014360:	6840      	ldr	r0, [r0, #4]
 8014362:	6803      	ldr	r3, [r0, #0]
 8014364:	681b      	ldr	r3, [r3, #0]
 8014366:	4798      	blx	r3
 8014368:	b948      	cbnz	r0, 801437e <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 801436a:	7a63      	ldrb	r3, [r4, #9]
 801436c:	b13b      	cbz	r3, 801437e <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 801436e:	7a23      	ldrb	r3, [r4, #8]
 8014370:	b92b      	cbnz	r3, 801437e <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8014372:	6823      	ldr	r3, [r4, #0]
 8014374:	4620      	mov	r0, r4
 8014376:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8014378:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801437c:	4718      	bx	r3
 801437e:	bd10      	pop	{r4, pc}

08014380 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 8014380:	b570      	push	{r4, r5, r6, lr}
 8014382:	4604      	mov	r4, r0
 8014384:	6840      	ldr	r0, [r0, #4]
 8014386:	6803      	ldr	r3, [r0, #0]
 8014388:	681b      	ldr	r3, [r3, #0]
 801438a:	4798      	blx	r3
 801438c:	4605      	mov	r5, r0
 801438e:	b930      	cbnz	r0, 801439e <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8014390:	7a23      	ldrb	r3, [r4, #8]
 8014392:	b123      	cbz	r3, 801439e <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8014394:	6860      	ldr	r0, [r4, #4]
 8014396:	6803      	ldr	r3, [r0, #0]
 8014398:	695b      	ldr	r3, [r3, #20]
 801439a:	4798      	blx	r3
 801439c:	7225      	strb	r5, [r4, #8]
 801439e:	6860      	ldr	r0, [r4, #4]
 80143a0:	6803      	ldr	r3, [r0, #0]
 80143a2:	681b      	ldr	r3, [r3, #0]
 80143a4:	4798      	blx	r3
 80143a6:	b928      	cbnz	r0, 80143b4 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 80143a8:	6823      	ldr	r3, [r4, #0]
 80143aa:	4620      	mov	r0, r4
 80143ac:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80143ae:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80143b2:	4718      	bx	r3
 80143b4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80143b8:	f7ee bcb6 	b.w	8002d28 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

080143bc <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 80143bc:	b510      	push	{r4, lr}
 80143be:	4c04      	ldr	r4, [pc, #16]	; (80143d0 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 80143c0:	6082      	str	r2, [r0, #8]
 80143c2:	2200      	movs	r2, #0
 80143c4:	e9c0 4100 	strd	r4, r1, [r0]
 80143c8:	e9c0 2203 	strd	r2, r2, [r0, #12]
 80143cc:	bd10      	pop	{r4, pc}
 80143ce:	bf00      	nop
 80143d0:	080316b8 	.word	0x080316b8

080143d4 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 80143d4:	6840      	ldr	r0, [r0, #4]
 80143d6:	6803      	ldr	r3, [r0, #0]
 80143d8:	681b      	ldr	r3, [r3, #0]
 80143da:	4718      	bx	r3

080143dc <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 80143dc:	4b06      	ldr	r3, [pc, #24]	; (80143f8 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
 80143de:	60c1      	str	r1, [r0, #12]
 80143e0:	094a      	lsrs	r2, r1, #5
 80143e2:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 80143e6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80143ea:	4313      	orrs	r3, r2
 80143ec:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 80143f0:	4319      	orrs	r1, r3
 80143f2:	8201      	strh	r1, [r0, #16]
 80143f4:	4770      	bx	lr
 80143f6:	bf00      	nop
 80143f8:	fffff800 	.word	0xfffff800

080143fc <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 80143fc:	f1a0 0008 	sub.w	r0, r0, #8
 8014400:	e7ec      	b.n	80143dc <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 8014402:	bf00      	nop

08014404 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 8014404:	b508      	push	{r3, lr}
 8014406:	4b05      	ldr	r3, [pc, #20]	; (801441c <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 8014408:	6818      	ldr	r0, [r3, #0]
 801440a:	6803      	ldr	r3, [r0, #0]
 801440c:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 8014410:	4798      	blx	r3
 8014412:	1e43      	subs	r3, r0, #1
 8014414:	4258      	negs	r0, r3
 8014416:	4158      	adcs	r0, r3
 8014418:	bd08      	pop	{r3, pc}
 801441a:	bf00      	nop
 801441c:	2001384c 	.word	0x2001384c

08014420 <_ZN8touchgfx13PainterRGB565D1Ev>:
 8014420:	4770      	bx	lr

08014422 <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 8014422:	3808      	subs	r0, #8
 8014424:	4770      	bx	lr

08014426 <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 8014426:	b430      	push	{r4, r5}
 8014428:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 801442c:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 8014430:	8a02      	ldrh	r2, [r0, #16]
 8014432:	9202      	str	r2, [sp, #8]
 8014434:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8014438:	68c2      	ldr	r2, [r0, #12]
 801443a:	4629      	mov	r1, r5
 801443c:	4620      	mov	r0, r4
 801443e:	bc30      	pop	{r4, r5}
 8014440:	f7ee bf36 	b.w	80032b0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

08014444 <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 8014444:	f7ee bf32 	b.w	80032ac <_ZN8touchgfx5paint8tearDownEv>

08014448 <_ZN8touchgfx13PainterRGB565D0Ev>:
 8014448:	b510      	push	{r4, lr}
 801444a:	2114      	movs	r1, #20
 801444c:	4604      	mov	r4, r0
 801444e:	f018 fb4c 	bl	802caea <_ZdlPvj>
 8014452:	4620      	mov	r0, r4
 8014454:	bd10      	pop	{r4, pc}

08014456 <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 8014456:	f1a0 0008 	sub.w	r0, r0, #8
 801445a:	e7f5      	b.n	8014448 <_ZN8touchgfx13PainterRGB565D0Ev>

0801445c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 801445c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 801445e:	6803      	ldr	r3, [r0, #0]
 8014460:	460d      	mov	r5, r1
 8014462:	4604      	mov	r4, r0
 8014464:	4601      	mov	r1, r0
 8014466:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8014468:	a802      	add	r0, sp, #8
 801446a:	4798      	blx	r3
 801446c:	6828      	ldr	r0, [r5, #0]
 801446e:	6869      	ldr	r1, [r5, #4]
 8014470:	466b      	mov	r3, sp
 8014472:	c303      	stmia	r3!, {r0, r1}
 8014474:	4668      	mov	r0, sp
 8014476:	4619      	mov	r1, r3
 8014478:	f7fe fb30 	bl	8012adc <_ZN8touchgfx4RectaNERKS0_>
 801447c:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 801447e:	b188      	cbz	r0, 80144a4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8014480:	6803      	ldr	r3, [r0, #0]
 8014482:	1d21      	adds	r1, r4, #4
 8014484:	68db      	ldr	r3, [r3, #12]
 8014486:	4798      	blx	r3
 8014488:	b160      	cbz	r0, 80144a4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 801448a:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801448e:	2b00      	cmp	r3, #0
 8014490:	dd08      	ble.n	80144a4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8014492:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 8014496:	2d00      	cmp	r5, #0
 8014498:	dd04      	ble.n	80144a4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 801449a:	4a2b      	ldr	r2, [pc, #172]	; (8014548 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
 801449c:	7812      	ldrb	r2, [r2, #0]
 801449e:	b11a      	cbz	r2, 80144a8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
 80144a0:	2a01      	cmp	r2, #1
 80144a2:	d029      	beq.n	80144f8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
 80144a4:	b004      	add	sp, #16
 80144a6:	bd70      	pop	{r4, r5, r6, pc}
 80144a8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80144ac:	441d      	add	r5, r3
 80144ae:	b2ad      	uxth	r5, r5
 80144b0:	b22e      	sxth	r6, r5
 80144b2:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 80144b6:	42b3      	cmp	r3, r6
 80144b8:	daf4      	bge.n	80144a4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80144ba:	6823      	ldr	r3, [r4, #0]
 80144bc:	4669      	mov	r1, sp
 80144be:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80144c0:	4620      	mov	r0, r4
 80144c2:	4798      	blx	r3
 80144c4:	b940      	cbnz	r0, 80144d8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 80144c6:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 80144ca:	2b01      	cmp	r3, #1
 80144cc:	d004      	beq.n	80144d8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 80144ce:	3301      	adds	r3, #1
 80144d0:	105b      	asrs	r3, r3, #1
 80144d2:	f8ad 3006 	strh.w	r3, [sp, #6]
 80144d6:	e7f0      	b.n	80144ba <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 80144d8:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 80144dc:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80144e0:	4413      	add	r3, r2
 80144e2:	b29b      	uxth	r3, r3
 80144e4:	441a      	add	r2, r3
 80144e6:	b212      	sxth	r2, r2
 80144e8:	4296      	cmp	r6, r2
 80144ea:	f8ad 3002 	strh.w	r3, [sp, #2]
 80144ee:	dae0      	bge.n	80144b2 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 80144f0:	1aeb      	subs	r3, r5, r3
 80144f2:	f8ad 3006 	strh.w	r3, [sp, #6]
 80144f6:	e7dc      	b.n	80144b2 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 80144f8:	f8bd 5000 	ldrh.w	r5, [sp]
 80144fc:	441d      	add	r5, r3
 80144fe:	b2ad      	uxth	r5, r5
 8014500:	b22e      	sxth	r6, r5
 8014502:	f9bd 3000 	ldrsh.w	r3, [sp]
 8014506:	42b3      	cmp	r3, r6
 8014508:	dacc      	bge.n	80144a4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 801450a:	6823      	ldr	r3, [r4, #0]
 801450c:	4669      	mov	r1, sp
 801450e:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8014510:	4620      	mov	r0, r4
 8014512:	4798      	blx	r3
 8014514:	b940      	cbnz	r0, 8014528 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 8014516:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801451a:	2b01      	cmp	r3, #1
 801451c:	d004      	beq.n	8014528 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 801451e:	3301      	adds	r3, #1
 8014520:	105b      	asrs	r3, r3, #1
 8014522:	f8ad 3004 	strh.w	r3, [sp, #4]
 8014526:	e7f0      	b.n	801450a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 8014528:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 801452c:	f8bd 3000 	ldrh.w	r3, [sp]
 8014530:	4413      	add	r3, r2
 8014532:	b29b      	uxth	r3, r3
 8014534:	441a      	add	r2, r3
 8014536:	b212      	sxth	r2, r2
 8014538:	4296      	cmp	r6, r2
 801453a:	f8ad 3000 	strh.w	r3, [sp]
 801453e:	dae0      	bge.n	8014502 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8014540:	1aeb      	subs	r3, r5, r3
 8014542:	f8ad 3004 	strh.w	r3, [sp, #4]
 8014546:	e7dc      	b.n	8014502 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8014548:	20013844 	.word	0x20013844

0801454c <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 801454c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801454e:	6803      	ldr	r3, [r0, #0]
 8014550:	4604      	mov	r4, r0
 8014552:	4601      	mov	r1, r0
 8014554:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8014556:	4668      	mov	r0, sp
 8014558:	4798      	blx	r3
 801455a:	2100      	movs	r1, #0
 801455c:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 8014560:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8014564:	9102      	str	r1, [sp, #8]
 8014566:	4668      	mov	r0, sp
 8014568:	a902      	add	r1, sp, #8
 801456a:	f8ad 200c 	strh.w	r2, [sp, #12]
 801456e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8014572:	f7fe fab3 	bl	8012adc <_ZN8touchgfx4RectaNERKS0_>
 8014576:	6823      	ldr	r3, [r4, #0]
 8014578:	4669      	mov	r1, sp
 801457a:	691b      	ldr	r3, [r3, #16]
 801457c:	4620      	mov	r0, r4
 801457e:	4798      	blx	r3
 8014580:	b004      	add	sp, #16
 8014582:	bd10      	pop	{r4, pc}

08014584 <_ZN8touchgfx12CanvasWidgetC1Ev>:
 8014584:	2101      	movs	r1, #1
 8014586:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 801458a:	490b      	ldr	r1, [pc, #44]	; (80145b8 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 801458c:	6001      	str	r1, [r0, #0]
 801458e:	2200      	movs	r2, #0
 8014590:	21ff      	movs	r1, #255	; 0xff
 8014592:	8082      	strh	r2, [r0, #4]
 8014594:	80c2      	strh	r2, [r0, #6]
 8014596:	8102      	strh	r2, [r0, #8]
 8014598:	8142      	strh	r2, [r0, #10]
 801459a:	8182      	strh	r2, [r0, #12]
 801459c:	81c2      	strh	r2, [r0, #14]
 801459e:	8202      	strh	r2, [r0, #16]
 80145a0:	8242      	strh	r2, [r0, #18]
 80145a2:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80145a6:	61c2      	str	r2, [r0, #28]
 80145a8:	8402      	strh	r2, [r0, #32]
 80145aa:	8442      	strh	r2, [r0, #34]	; 0x22
 80145ac:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 80145b0:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 80145b4:	6282      	str	r2, [r0, #40]	; 0x28
 80145b6:	4770      	bx	lr
 80145b8:	08031714 	.word	0x08031714

080145bc <_ZNK8touchgfx4Line14getMinimalRectEv>:
 80145bc:	f101 0364 	add.w	r3, r1, #100	; 0x64
 80145c0:	4602      	mov	r2, r0
 80145c2:	cb03      	ldmia	r3!, {r0, r1}
 80145c4:	6010      	str	r0, [r2, #0]
 80145c6:	6051      	str	r1, [r2, #4]
 80145c8:	4610      	mov	r0, r2
 80145ca:	4770      	bx	lr

080145cc <_ZN8touchgfx4LineD1Ev>:
 80145cc:	4770      	bx	lr

080145ce <_ZN8touchgfx4LineD0Ev>:
 80145ce:	b510      	push	{r4, lr}
 80145d0:	2170      	movs	r1, #112	; 0x70
 80145d2:	4604      	mov	r4, r0
 80145d4:	f018 fa89 	bl	802caea <_ZdlPvj>
 80145d8:	4620      	mov	r0, r4
 80145da:	bd10      	pop	{r4, pc}

080145dc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
 80145dc:	b507      	push	{r0, r1, r2, lr}
 80145de:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 80145e2:	ab01      	add	r3, sp, #4
 80145e4:	6809      	ldr	r1, [r1, #0]
 80145e6:	6800      	ldr	r0, [r0, #0]
 80145e8:	f005 fc80 	bl	8019eec <_ZN8touchgfx6muldivElllRl>
 80145ec:	b003      	add	sp, #12
 80145ee:	f85d fb04 	ldr.w	pc, [sp], #4

080145f2 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
 80145f2:	6800      	ldr	r0, [r0, #0]
 80145f4:	2800      	cmp	r0, #0
 80145f6:	bfb9      	ittee	lt
 80145f8:	2320      	movlt	r3, #32
 80145fa:	fb90 f0f3 	sdivlt	r0, r0, r3
 80145fe:	301f      	addge	r0, #31
 8014600:	1140      	asrge	r0, r0, #5
 8014602:	4770      	bx	lr

08014604 <_ZNK8touchgfx4Line17invalidateContentEv>:
 8014604:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014608:	f890 3026 	ldrb.w	r3, [r0, #38]	; 0x26
 801460c:	b089      	sub	sp, #36	; 0x24
 801460e:	4604      	mov	r4, r0
 8014610:	b353      	cbz	r3, 8014668 <_ZNK8touchgfx4Line17invalidateContentEv+0x64>
 8014612:	6803      	ldr	r3, [r0, #0]
 8014614:	4601      	mov	r1, r0
 8014616:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8014618:	a802      	add	r0, sp, #8
 801461a:	4798      	blx	r3
 801461c:	2220      	movs	r2, #32
 801461e:	f8d4 a02c 	ldr.w	sl, [r4, #44]	; 0x2c
 8014622:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8014624:	fb9a f0f2 	sdiv	r0, sl, r2
 8014628:	fb91 f5f2 	sdiv	r5, r1, r2
 801462c:	1b40      	subs	r0, r0, r5
 801462e:	2800      	cmp	r0, #0
 8014630:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8014632:	fb93 f6f2 	sdiv	r6, r3, r2
 8014636:	bfb8      	it	lt
 8014638:	4240      	neglt	r0, r0
 801463a:	0076      	lsls	r6, r6, #1
 801463c:	4286      	cmp	r6, r0
 801463e:	f8d4 b000 	ldr.w	fp, [r4]
 8014642:	dc0c      	bgt.n	801465e <_ZNK8touchgfx4Line17invalidateContentEv+0x5a>
 8014644:	6b25      	ldr	r5, [r4, #48]	; 0x30
 8014646:	f8d4 8038 	ldr.w	r8, [r4, #56]	; 0x38
 801464a:	fb95 f0f2 	sdiv	r0, r5, r2
 801464e:	fb98 f7f2 	sdiv	r7, r8, r2
 8014652:	1bc0      	subs	r0, r0, r7
 8014654:	2800      	cmp	r0, #0
 8014656:	bfb8      	it	lt
 8014658:	4240      	neglt	r0, r0
 801465a:	4286      	cmp	r6, r0
 801465c:	dd07      	ble.n	801466e <_ZNK8touchgfx4Line17invalidateContentEv+0x6a>
 801465e:	f8db 3010 	ldr.w	r3, [fp, #16]
 8014662:	a902      	add	r1, sp, #8
 8014664:	4620      	mov	r0, r4
 8014666:	4798      	blx	r3
 8014668:	b009      	add	sp, #36	; 0x24
 801466a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801466e:	3301      	adds	r3, #1
 8014670:	2002      	movs	r0, #2
 8014672:	f10d 0920 	add.w	r9, sp, #32
 8014676:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801467a:	4103      	asrs	r3, r0
 801467c:	f849 3d08 	str.w	r3, [r9, #-8]!
 8014680:	eb01 060a 	add.w	r6, r1, sl
 8014684:	eb08 0705 	add.w	r7, r8, r5
 8014688:	fb96 f6f0 	sdiv	r6, r6, r0
 801468c:	fb97 f7f0 	sdiv	r7, r7, r0
 8014690:	4648      	mov	r0, r9
 8014692:	9101      	str	r1, [sp, #4]
 8014694:	b236      	sxth	r6, r6
 8014696:	b23f      	sxth	r7, r7
 8014698:	fb96 f6f2 	sdiv	r6, r6, r2
 801469c:	fb97 f7f2 	sdiv	r7, r7, r2
 80146a0:	f7ff ffa7 	bl	80145f2 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 80146a4:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80146a8:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
 80146ac:	9901      	ldr	r1, [sp, #4]
 80146ae:	4293      	cmp	r3, r2
 80146b0:	fa1f fe87 	uxth.w	lr, r7
 80146b4:	fa1f fc86 	uxth.w	ip, r6
 80146b8:	eba1 0a0a 	sub.w	sl, r1, sl
 80146bc:	b280      	uxth	r0, r0
 80146be:	da54      	bge.n	801476a <_ZNK8touchgfx4Line17invalidateContentEv+0x166>
 80146c0:	ebac 0100 	sub.w	r1, ip, r0
 80146c4:	b289      	uxth	r1, r1
 80146c6:	4460      	add	r0, ip
 80146c8:	f1ba 0f00 	cmp.w	sl, #0
 80146cc:	b20e      	sxth	r6, r1
 80146ce:	b280      	uxth	r0, r0
 80146d0:	f9bd a008 	ldrsh.w	sl, [sp, #8]
 80146d4:	f9bd c00a 	ldrsh.w	ip, [sp, #10]
 80146d8:	da29      	bge.n	801472e <_ZNK8touchgfx4Line17invalidateContentEv+0x12a>
 80146da:	eba8 0505 	sub.w	r5, r8, r5
 80146de:	2d00      	cmp	r5, #0
 80146e0:	da2a      	bge.n	8014738 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 80146e2:	fa1f f88a 	uxth.w	r8, sl
 80146e6:	eba0 0008 	sub.w	r0, r0, r8
 80146ea:	fa1f f58c 	uxth.w	r5, ip
 80146ee:	4443      	add	r3, r8
 80146f0:	f8ad 0014 	strh.w	r0, [sp, #20]
 80146f4:	1a59      	subs	r1, r3, r1
 80146f6:	ebae 0005 	sub.w	r0, lr, r5
 80146fa:	f8ad a010 	strh.w	sl, [sp, #16]
 80146fe:	f8ad c012 	strh.w	ip, [sp, #18]
 8014702:	f8ad 0016 	strh.w	r0, [sp, #22]
 8014706:	f8ad 6018 	strh.w	r6, [sp, #24]
 801470a:	f8ad 701a 	strh.w	r7, [sp, #26]
 801470e:	f8ad 101c 	strh.w	r1, [sp, #28]
 8014712:	442a      	add	r2, r5
 8014714:	eba2 0e0e 	sub.w	lr, r2, lr
 8014718:	f8ad e01e 	strh.w	lr, [sp, #30]
 801471c:	f8db 3010 	ldr.w	r3, [fp, #16]
 8014720:	a904      	add	r1, sp, #16
 8014722:	4620      	mov	r0, r4
 8014724:	4798      	blx	r3
 8014726:	6823      	ldr	r3, [r4, #0]
 8014728:	4649      	mov	r1, r9
 801472a:	691b      	ldr	r3, [r3, #16]
 801472c:	e79a      	b.n	8014664 <_ZNK8touchgfx4Line17invalidateContentEv+0x60>
 801472e:	d003      	beq.n	8014738 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 8014730:	eba8 0505 	sub.w	r5, r8, r5
 8014734:	2d00      	cmp	r5, #0
 8014736:	dcd4      	bgt.n	80146e2 <_ZNK8touchgfx4Line17invalidateContentEv+0xde>
 8014738:	fa1f f88a 	uxth.w	r8, sl
 801473c:	4443      	add	r3, r8
 801473e:	fa1f f58c 	uxth.w	r5, ip
 8014742:	1a59      	subs	r1, r3, r1
 8014744:	eba0 0008 	sub.w	r0, r0, r8
 8014748:	ebae 0305 	sub.w	r3, lr, r5
 801474c:	f8ad 6010 	strh.w	r6, [sp, #16]
 8014750:	f8ad c012 	strh.w	ip, [sp, #18]
 8014754:	f8ad 1014 	strh.w	r1, [sp, #20]
 8014758:	f8ad 3016 	strh.w	r3, [sp, #22]
 801475c:	f8ad a018 	strh.w	sl, [sp, #24]
 8014760:	f8ad 701a 	strh.w	r7, [sp, #26]
 8014764:	f8ad 001c 	strh.w	r0, [sp, #28]
 8014768:	e7d3      	b.n	8014712 <_ZNK8touchgfx4Line17invalidateContentEv+0x10e>
 801476a:	ebae 0100 	sub.w	r1, lr, r0
 801476e:	b289      	uxth	r1, r1
 8014770:	4470      	add	r0, lr
 8014772:	f1ba 0f00 	cmp.w	sl, #0
 8014776:	b20f      	sxth	r7, r1
 8014778:	b280      	uxth	r0, r0
 801477a:	f9bd e008 	ldrsh.w	lr, [sp, #8]
 801477e:	f9bd a00a 	ldrsh.w	sl, [sp, #10]
 8014782:	da20      	bge.n	80147c6 <_ZNK8touchgfx4Line17invalidateContentEv+0x1c2>
 8014784:	eba8 0505 	sub.w	r5, r8, r5
 8014788:	2d00      	cmp	r5, #0
 801478a:	da21      	bge.n	80147d0 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 801478c:	fa1f f88e 	uxth.w	r8, lr
 8014790:	fa1f f58a 	uxth.w	r5, sl
 8014794:	4443      	add	r3, r8
 8014796:	442a      	add	r2, r5
 8014798:	f8ad e010 	strh.w	lr, [sp, #16]
 801479c:	1b40      	subs	r0, r0, r5
 801479e:	ebac 0e08 	sub.w	lr, ip, r8
 80147a2:	1a51      	subs	r1, r2, r1
 80147a4:	eba3 0c0c 	sub.w	ip, r3, ip
 80147a8:	f8ad a012 	strh.w	sl, [sp, #18]
 80147ac:	f8ad e014 	strh.w	lr, [sp, #20]
 80147b0:	f8ad 0016 	strh.w	r0, [sp, #22]
 80147b4:	f8ad 6018 	strh.w	r6, [sp, #24]
 80147b8:	f8ad 701a 	strh.w	r7, [sp, #26]
 80147bc:	f8ad c01c 	strh.w	ip, [sp, #28]
 80147c0:	f8ad 101e 	strh.w	r1, [sp, #30]
 80147c4:	e7aa      	b.n	801471c <_ZNK8touchgfx4Line17invalidateContentEv+0x118>
 80147c6:	d003      	beq.n	80147d0 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 80147c8:	eba8 0505 	sub.w	r5, r8, r5
 80147cc:	2d00      	cmp	r5, #0
 80147ce:	dcdd      	bgt.n	801478c <_ZNK8touchgfx4Line17invalidateContentEv+0x188>
 80147d0:	fa1f f58e 	uxth.w	r5, lr
 80147d4:	fa1f f88a 	uxth.w	r8, sl
 80147d8:	4442      	add	r2, r8
 80147da:	442b      	add	r3, r5
 80147dc:	f8ad 7012 	strh.w	r7, [sp, #18]
 80147e0:	1a51      	subs	r1, r2, r1
 80147e2:	ebac 0705 	sub.w	r7, ip, r5
 80147e6:	eba0 0008 	sub.w	r0, r0, r8
 80147ea:	eba3 0c0c 	sub.w	ip, r3, ip
 80147ee:	f8ad e010 	strh.w	lr, [sp, #16]
 80147f2:	f8ad 7014 	strh.w	r7, [sp, #20]
 80147f6:	f8ad 1016 	strh.w	r1, [sp, #22]
 80147fa:	f8ad 6018 	strh.w	r6, [sp, #24]
 80147fe:	f8ad a01a 	strh.w	sl, [sp, #26]
 8014802:	f8ad c01c 	strh.w	ip, [sp, #28]
 8014806:	f8ad 001e 	strh.w	r0, [sp, #30]
 801480a:	e787      	b.n	801471c <_ZNK8touchgfx4Line17invalidateContentEv+0x118>

0801480c <_ZN8touchgfx7CWRUtil4sineEi>:
 801480c:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8014810:	fb90 f2f3 	sdiv	r2, r0, r3
 8014814:	fb02 0013 	mls	r0, r2, r3, r0
 8014818:	2800      	cmp	r0, #0
 801481a:	bfb8      	it	lt
 801481c:	18c0      	addlt	r0, r0, r3
 801481e:	285a      	cmp	r0, #90	; 0x5a
 8014820:	4b09      	ldr	r3, [pc, #36]	; (8014848 <_ZN8touchgfx7CWRUtil4sineEi+0x3c>)
 8014822:	dc02      	bgt.n	801482a <_ZN8touchgfx7CWRUtil4sineEi+0x1e>
 8014824:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8014828:	4770      	bx	lr
 801482a:	28b4      	cmp	r0, #180	; 0xb4
 801482c:	dc02      	bgt.n	8014834 <_ZN8touchgfx7CWRUtil4sineEi+0x28>
 801482e:	f1c0 00b4 	rsb	r0, r0, #180	; 0xb4
 8014832:	e7f7      	b.n	8014824 <_ZN8touchgfx7CWRUtil4sineEi+0x18>
 8014834:	f5b0 7f87 	cmp.w	r0, #270	; 0x10e
 8014838:	bfd4      	ite	le
 801483a:	38b4      	suble	r0, #180	; 0xb4
 801483c:	f5c0 70b4 	rsbgt	r0, r0, #360	; 0x168
 8014840:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8014844:	4240      	negs	r0, r0
 8014846:	4770      	bx	lr
 8014848:	080317e0 	.word	0x080317e0

0801484c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>:
 801484c:	f44f 5334 	mov.w	r3, #11520	; 0x2d00
 8014850:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8014852:	fb90 f2f3 	sdiv	r2, r0, r3
 8014856:	fb02 0013 	mls	r0, r2, r3, r0
 801485a:	2800      	cmp	r0, #0
 801485c:	bfb8      	it	lt
 801485e:	18c0      	addlt	r0, r0, r3
 8014860:	1144      	asrs	r4, r0, #5
 8014862:	f000 061f 	and.w	r6, r0, #31
 8014866:	4620      	mov	r0, r4
 8014868:	f7ff ffd0 	bl	801480c <_ZN8touchgfx7CWRUtil4sineEi>
 801486c:	4605      	mov	r5, r0
 801486e:	b90e      	cbnz	r6, 8014874 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x28>
 8014870:	b002      	add	sp, #8
 8014872:	bd70      	pop	{r4, r5, r6, pc}
 8014874:	1c60      	adds	r0, r4, #1
 8014876:	f7ff ffc9 	bl	801480c <_ZN8touchgfx7CWRUtil4sineEi>
 801487a:	ab01      	add	r3, sp, #4
 801487c:	2220      	movs	r2, #32
 801487e:	4631      	mov	r1, r6
 8014880:	1b40      	subs	r0, r0, r5
 8014882:	f005 fb33 	bl	8019eec <_ZN8touchgfx6muldivElllRl>
 8014886:	4428      	add	r0, r5
 8014888:	e7f2      	b.n	8014870 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x24>

0801488a <_ZN8touchgfx7CWRUtil5isqrtEm>:
 801488a:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
 801488e:	bf2c      	ite	cs
 8014890:	f04f 4280 	movcs.w	r2, #1073741824	; 0x40000000
 8014894:	f44f 4280 	movcc.w	r2, #16384	; 0x4000
 8014898:	2300      	movs	r3, #0
 801489a:	1899      	adds	r1, r3, r2
 801489c:	4288      	cmp	r0, r1
 801489e:	bf24      	itt	cs
 80148a0:	1853      	addcs	r3, r2, r1
 80148a2:	1a40      	subcs	r0, r0, r1
 80148a4:	0892      	lsrs	r2, r2, #2
 80148a6:	ea4f 0353 	mov.w	r3, r3, lsr #1
 80148aa:	d1f6      	bne.n	801489a <_ZN8touchgfx7CWRUtil5isqrtEm+0x10>
 80148ac:	4618      	mov	r0, r3
 80148ae:	4770      	bx	lr

080148b0 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
 80148b0:	b510      	push	{r4, lr}
 80148b2:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
 80148b6:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
 80148ba:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
 80148be:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
 80148c2:	13a4      	asrs	r4, r4, #14
 80148c4:	139b      	asrs	r3, r3, #14
 80148c6:	429c      	cmp	r4, r3
 80148c8:	bfb8      	it	lt
 80148ca:	461c      	movlt	r4, r3
 80148cc:	2c01      	cmp	r4, #1
 80148ce:	dd07      	ble.n	80148e0 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
 80148d0:	fb91 f1f4 	sdiv	r1, r1, r4
 80148d4:	fb90 f0f4 	sdiv	r0, r0, r4
 80148d8:	f7ff ffea 	bl	80148b0 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 80148dc:	4360      	muls	r0, r4
 80148de:	bd10      	pop	{r4, pc}
 80148e0:	4340      	muls	r0, r0
 80148e2:	fb01 0001 	mla	r0, r1, r1, r0
 80148e6:	f7ff ffd0 	bl	801488a <_ZN8touchgfx7CWRUtil5isqrtEm>
 80148ea:	e7f8      	b.n	80148de <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>

080148ec <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>:
 80148ec:	2800      	cmp	r0, #0
 80148ee:	b508      	push	{r3, lr}
 80148f0:	da05      	bge.n	80148fe <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x12>
 80148f2:	4240      	negs	r0, r0
 80148f4:	f7ff fffa 	bl	80148ec <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 80148f8:	4240      	negs	r0, r0
 80148fa:	b240      	sxtb	r0, r0
 80148fc:	bd08      	pop	{r3, pc}
 80148fe:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
 8014902:	dc11      	bgt.n	8014928 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x3c>
 8014904:	f5b0 7f35 	cmp.w	r0, #724	; 0x2d4
 8014908:	dd09      	ble.n	801491e <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x32>
 801490a:	4340      	muls	r0, r0
 801490c:	f5c0 1080 	rsb	r0, r0, #1048576	; 0x100000
 8014910:	f7ff ffbb 	bl	801488a <_ZN8touchgfx7CWRUtil5isqrtEm>
 8014914:	f7ff ffea 	bl	80148ec <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8014918:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 801491c:	e7ed      	b.n	80148fa <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0xe>
 801491e:	3003      	adds	r0, #3
 8014920:	10c0      	asrs	r0, r0, #3
 8014922:	4b02      	ldr	r3, [pc, #8]	; (801492c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x40>)
 8014924:	5618      	ldrsb	r0, [r3, r0]
 8014926:	e7e9      	b.n	80148fc <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 8014928:	2000      	movs	r0, #0
 801492a:	e7e7      	b.n	80148fc <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 801492c:	08031784 	.word	0x08031784

08014930 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>:
 8014930:	4281      	cmp	r1, r0
 8014932:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8014934:	460c      	mov	r4, r1
 8014936:	4615      	mov	r5, r2
 8014938:	dd07      	ble.n	801494a <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x1a>
 801493a:	4601      	mov	r1, r0
 801493c:	4620      	mov	r0, r4
 801493e:	f7ff fff7 	bl	8014930 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8014942:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 8014946:	b003      	add	sp, #12
 8014948:	bd30      	pop	{r4, r5, pc}
 801494a:	f7ff ffb1 	bl	80148b0 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 801494e:	6028      	str	r0, [r5, #0]
 8014950:	2800      	cmp	r0, #0
 8014952:	d0f8      	beq.n	8014946 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>
 8014954:	4602      	mov	r2, r0
 8014956:	ab01      	add	r3, sp, #4
 8014958:	f44f 6180 	mov.w	r1, #1024	; 0x400
 801495c:	4620      	mov	r0, r4
 801495e:	f005 fac5 	bl	8019eec <_ZN8touchgfx6muldivElllRl>
 8014962:	f7ff ffc3 	bl	80148ec <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8014966:	e7ee      	b.n	8014946 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>

08014968 <_ZN8touchgfx4LineC1Ev>:
 8014968:	b510      	push	{r4, lr}
 801496a:	4604      	mov	r4, r0
 801496c:	f7ff fe0a 	bl	8014584 <_ZN8touchgfx12CanvasWidgetC1Ev>
 8014970:	4b0c      	ldr	r3, [pc, #48]	; (80149a4 <_ZN8touchgfx4LineC1Ev+0x3c>)
 8014972:	6023      	str	r3, [r4, #0]
 8014974:	2220      	movs	r2, #32
 8014976:	2300      	movs	r3, #0
 8014978:	63e2      	str	r2, [r4, #60]	; 0x3c
 801497a:	2212      	movs	r2, #18
 801497c:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 8014980:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 8014984:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 8014988:	e9c4 3311 	strd	r3, r3, [r4, #68]	; 0x44
 801498c:	e9c4 3313 	strd	r3, r3, [r4, #76]	; 0x4c
 8014990:	e9c4 3315 	strd	r3, r3, [r4, #84]	; 0x54
 8014994:	e9c4 3317 	strd	r3, r3, [r4, #92]	; 0x5c
 8014998:	e9c4 3319 	strd	r3, r3, [r4, #100]	; 0x64
 801499c:	66e2      	str	r2, [r4, #108]	; 0x6c
 801499e:	60a3      	str	r3, [r4, #8]
 80149a0:	4620      	mov	r0, r4
 80149a2:	bd10      	pop	{r4, pc}
 80149a4:	080318a0 	.word	0x080318a0

080149a8 <_ZN8touchgfx4Line17updateCachedShapeEv>:
 80149a8:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 80149ac:	6b47      	ldr	r7, [r0, #52]	; 0x34
 80149ae:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80149b0:	6b85      	ldr	r5, [r0, #56]	; 0x38
 80149b2:	6b02      	ldr	r2, [r0, #48]	; 0x30
 80149b4:	1aff      	subs	r7, r7, r3
 80149b6:	4604      	mov	r4, r0
 80149b8:	eba5 0502 	sub.w	r5, r5, r2
 80149bc:	d142      	bne.n	8014a44 <_ZN8touchgfx4Line17updateCachedShapeEv+0x9c>
 80149be:	b955      	cbnz	r5, 80149d6 <_ZN8touchgfx4Line17updateCachedShapeEv+0x2e>
 80149c0:	e9c0 3313 	strd	r3, r3, [r0, #76]	; 0x4c
 80149c4:	e9c0 3311 	strd	r3, r3, [r0, #68]	; 0x44
 80149c8:	e9c0 2217 	strd	r2, r2, [r0, #92]	; 0x5c
 80149cc:	e9c0 2215 	strd	r2, r2, [r0, #84]	; 0x54
 80149d0:	b002      	add	sp, #8
 80149d2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80149d6:	ea85 78e5 	eor.w	r8, r5, r5, asr #31
 80149da:	eba8 78e5 	sub.w	r8, r8, r5, asr #31
 80149de:	4629      	mov	r1, r5
 80149e0:	4642      	mov	r2, r8
 80149e2:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 80149e4:	f005 faa1 	bl	8019f2a <_ZN8touchgfx6muldivElll>
 80149e8:	2502      	movs	r5, #2
 80149ea:	4642      	mov	r2, r8
 80149ec:	fb90 f6f5 	sdiv	r6, r0, r5
 80149f0:	4639      	mov	r1, r7
 80149f2:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 80149f4:	f005 fa99 	bl	8019f2a <_ZN8touchgfx6muldivElll>
 80149f8:	f894 9040 	ldrb.w	r9, [r4, #64]	; 0x40
 80149fc:	fb90 f5f5 	sdiv	r5, r0, r5
 8014a00:	f1b9 0f00 	cmp.w	r9, #0
 8014a04:	d067      	beq.n	8014ad6 <_ZN8touchgfx4Line17updateCachedShapeEv+0x12e>
 8014a06:	f1b9 0f02 	cmp.w	r9, #2
 8014a0a:	d878      	bhi.n	8014afe <_ZN8touchgfx4Line17updateCachedShapeEv+0x156>
 8014a0c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8014a0e:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8014a10:	1b93      	subs	r3, r2, r6
 8014a12:	1b5b      	subs	r3, r3, r5
 8014a14:	6463      	str	r3, [r4, #68]	; 0x44
 8014a16:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8014a18:	18e9      	adds	r1, r5, r3
 8014a1a:	1b89      	subs	r1, r1, r6
 8014a1c:	6561      	str	r1, [r4, #84]	; 0x54
 8014a1e:	1b81      	subs	r1, r0, r6
 8014a20:	4429      	add	r1, r5
 8014a22:	64a1      	str	r1, [r4, #72]	; 0x48
 8014a24:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8014a26:	4430      	add	r0, r6
 8014a28:	186f      	adds	r7, r5, r1
 8014a2a:	4432      	add	r2, r6
 8014a2c:	1b49      	subs	r1, r1, r5
 8014a2e:	4437      	add	r7, r6
 8014a30:	4428      	add	r0, r5
 8014a32:	4431      	add	r1, r6
 8014a34:	1b52      	subs	r2, r2, r5
 8014a36:	1b5b      	subs	r3, r3, r5
 8014a38:	65a7      	str	r7, [r4, #88]	; 0x58
 8014a3a:	64e0      	str	r0, [r4, #76]	; 0x4c
 8014a3c:	65e1      	str	r1, [r4, #92]	; 0x5c
 8014a3e:	6522      	str	r2, [r4, #80]	; 0x50
 8014a40:	1b9b      	subs	r3, r3, r6
 8014a42:	e05b      	b.n	8014afc <_ZN8touchgfx4Line17updateCachedShapeEv+0x154>
 8014a44:	ea87 78e7 	eor.w	r8, r7, r7, asr #31
 8014a48:	eba8 78e7 	sub.w	r8, r8, r7, asr #31
 8014a4c:	2d00      	cmp	r5, #0
 8014a4e:	d0c6      	beq.n	80149de <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 8014a50:	ea85 73e5 	eor.w	r3, r5, r5, asr #31
 8014a54:	eba3 73e5 	sub.w	r3, r3, r5, asr #31
 8014a58:	fb93 f2f8 	sdiv	r2, r3, r8
 8014a5c:	fb08 3312 	mls	r3, r8, r2, r3
 8014a60:	b353      	cbz	r3, 8014ab8 <_ZN8touchgfx4Line17updateCachedShapeEv+0x110>
 8014a62:	fb98 f2f3 	sdiv	r2, r8, r3
 8014a66:	fb03 8812 	mls	r8, r3, r2, r8
 8014a6a:	f1b8 0f00 	cmp.w	r8, #0
 8014a6e:	d1f3      	bne.n	8014a58 <_ZN8touchgfx4Line17updateCachedShapeEv+0xb0>
 8014a70:	2b01      	cmp	r3, #1
 8014a72:	bf1c      	itt	ne
 8014a74:	fb95 f5f3 	sdivne	r5, r5, r3
 8014a78:	fb97 f7f3 	sdivne	r7, r7, r3
 8014a7c:	ea87 73e7 	eor.w	r3, r7, r7, asr #31
 8014a80:	f24b 5104 	movw	r1, #46340	; 0xb504
 8014a84:	eba3 73e7 	sub.w	r3, r3, r7, asr #31
 8014a88:	ea85 72e5 	eor.w	r2, r5, r5, asr #31
 8014a8c:	428b      	cmp	r3, r1
 8014a8e:	eba2 72e5 	sub.w	r2, r2, r5, asr #31
 8014a92:	4608      	mov	r0, r1
 8014a94:	dd01      	ble.n	8014a9a <_ZN8touchgfx4Line17updateCachedShapeEv+0xf2>
 8014a96:	428a      	cmp	r2, r1
 8014a98:	dc10      	bgt.n	8014abc <_ZN8touchgfx4Line17updateCachedShapeEv+0x114>
 8014a9a:	fb90 f3f3 	sdiv	r3, r0, r3
 8014a9e:	fb90 f2f2 	sdiv	r2, r0, r2
 8014aa2:	4293      	cmp	r3, r2
 8014aa4:	bfa8      	it	ge
 8014aa6:	4613      	movge	r3, r2
 8014aa8:	435f      	muls	r7, r3
 8014aaa:	435d      	muls	r5, r3
 8014aac:	4629      	mov	r1, r5
 8014aae:	4638      	mov	r0, r7
 8014ab0:	f7ff fefe 	bl	80148b0 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8014ab4:	4680      	mov	r8, r0
 8014ab6:	e792      	b.n	80149de <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 8014ab8:	4643      	mov	r3, r8
 8014aba:	e7d9      	b.n	8014a70 <_ZN8touchgfx4Line17updateCachedShapeEv+0xc8>
 8014abc:	fb93 f3f1 	sdiv	r3, r3, r1
 8014ac0:	fb92 f2f1 	sdiv	r2, r2, r1
 8014ac4:	4293      	cmp	r3, r2
 8014ac6:	bfcc      	ite	gt
 8014ac8:	3301      	addgt	r3, #1
 8014aca:	1c53      	addle	r3, r2, #1
 8014acc:	fb97 f7f3 	sdiv	r7, r7, r3
 8014ad0:	fb95 f5f3 	sdiv	r5, r5, r3
 8014ad4:	e7ea      	b.n	8014aac <_ZN8touchgfx4Line17updateCachedShapeEv+0x104>
 8014ad6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8014ad8:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8014ada:	1b93      	subs	r3, r2, r6
 8014adc:	6463      	str	r3, [r4, #68]	; 0x44
 8014ade:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8014ae0:	18e9      	adds	r1, r5, r3
 8014ae2:	6561      	str	r1, [r4, #84]	; 0x54
 8014ae4:	1b81      	subs	r1, r0, r6
 8014ae6:	64a1      	str	r1, [r4, #72]	; 0x48
 8014ae8:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8014aea:	4430      	add	r0, r6
 8014aec:	186f      	adds	r7, r5, r1
 8014aee:	4432      	add	r2, r6
 8014af0:	1b49      	subs	r1, r1, r5
 8014af2:	65a7      	str	r7, [r4, #88]	; 0x58
 8014af4:	64e0      	str	r0, [r4, #76]	; 0x4c
 8014af6:	65e1      	str	r1, [r4, #92]	; 0x5c
 8014af8:	6522      	str	r2, [r4, #80]	; 0x50
 8014afa:	1b5b      	subs	r3, r3, r5
 8014afc:	6623      	str	r3, [r4, #96]	; 0x60
 8014afe:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8014b00:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8014b02:	9200      	str	r2, [sp, #0]
 8014b04:	9301      	str	r3, [sp, #4]
 8014b06:	f104 0148 	add.w	r1, r4, #72	; 0x48
 8014b0a:	f104 0c54 	add.w	ip, r4, #84	; 0x54
 8014b0e:	680f      	ldr	r7, [r1, #0]
 8014b10:	9800      	ldr	r0, [sp, #0]
 8014b12:	42ba      	cmp	r2, r7
 8014b14:	bfa8      	it	ge
 8014b16:	463a      	movge	r2, r7
 8014b18:	4287      	cmp	r7, r0
 8014b1a:	bfc8      	it	gt
 8014b1c:	9700      	strgt	r7, [sp, #0]
 8014b1e:	690f      	ldr	r7, [r1, #16]
 8014b20:	9801      	ldr	r0, [sp, #4]
 8014b22:	42bb      	cmp	r3, r7
 8014b24:	bfa8      	it	ge
 8014b26:	463b      	movge	r3, r7
 8014b28:	3104      	adds	r1, #4
 8014b2a:	4287      	cmp	r7, r0
 8014b2c:	bfc8      	it	gt
 8014b2e:	9701      	strgt	r7, [sp, #4]
 8014b30:	458c      	cmp	ip, r1
 8014b32:	d1ec      	bne.n	8014b0e <_ZN8touchgfx4Line17updateCachedShapeEv+0x166>
 8014b34:	4668      	mov	r0, sp
 8014b36:	2720      	movs	r7, #32
 8014b38:	fb92 f8f7 	sdiv	r8, r2, r7
 8014b3c:	fb93 f7f7 	sdiv	r7, r3, r7
 8014b40:	f7ff fd57 	bl	80145f2 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8014b44:	4682      	mov	sl, r0
 8014b46:	a801      	add	r0, sp, #4
 8014b48:	f7ff fd53 	bl	80145f2 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8014b4c:	ebaa 0208 	sub.w	r2, sl, r8
 8014b50:	1bc0      	subs	r0, r0, r7
 8014b52:	f1b9 0f01 	cmp.w	r9, #1
 8014b56:	f8a4 8064 	strh.w	r8, [r4, #100]	; 0x64
 8014b5a:	f8a4 7066 	strh.w	r7, [r4, #102]	; 0x66
 8014b5e:	f8a4 2068 	strh.w	r2, [r4, #104]	; 0x68
 8014b62:	f8a4 006a 	strh.w	r0, [r4, #106]	; 0x6a
 8014b66:	f47f af33 	bne.w	80149d0 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>
 8014b6a:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 8014b6c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8014b6e:	1b83      	subs	r3, r0, r6
 8014b70:	6463      	str	r3, [r4, #68]	; 0x44
 8014b72:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8014b74:	18ea      	adds	r2, r5, r3
 8014b76:	6562      	str	r2, [r4, #84]	; 0x54
 8014b78:	1b8a      	subs	r2, r1, r6
 8014b7a:	64a2      	str	r2, [r4, #72]	; 0x48
 8014b7c:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8014b7e:	4431      	add	r1, r6
 8014b80:	18af      	adds	r7, r5, r2
 8014b82:	4406      	add	r6, r0
 8014b84:	1b52      	subs	r2, r2, r5
 8014b86:	1b5d      	subs	r5, r3, r5
 8014b88:	65a7      	str	r7, [r4, #88]	; 0x58
 8014b8a:	64e1      	str	r1, [r4, #76]	; 0x4c
 8014b8c:	65e2      	str	r2, [r4, #92]	; 0x5c
 8014b8e:	6526      	str	r6, [r4, #80]	; 0x50
 8014b90:	6625      	str	r5, [r4, #96]	; 0x60
 8014b92:	e71d      	b.n	80149d0 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>

08014b94 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>:
 8014b94:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8014b96:	428b      	cmp	r3, r1
 8014b98:	d102      	bne.n	8014ba0 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0xc>
 8014b9a:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8014b9c:	4293      	cmp	r3, r2
 8014b9e:	d003      	beq.n	8014ba8 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0x14>
 8014ba0:	e9c0 120b 	strd	r1, r2, [r0, #44]	; 0x2c
 8014ba4:	f7ff bf00 	b.w	80149a8 <_ZN8touchgfx4Line17updateCachedShapeEv>
 8014ba8:	4770      	bx	lr

08014baa <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>:
 8014baa:	6b43      	ldr	r3, [r0, #52]	; 0x34
 8014bac:	428b      	cmp	r3, r1
 8014bae:	d102      	bne.n	8014bb6 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0xc>
 8014bb0:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8014bb2:	4293      	cmp	r3, r2
 8014bb4:	d003      	beq.n	8014bbe <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0x14>
 8014bb6:	e9c0 120d 	strd	r1, r2, [r0, #52]	; 0x34
 8014bba:	f7ff bef5 	b.w	80149a8 <_ZN8touchgfx4Line17updateCachedShapeEv>
 8014bbe:	4770      	bx	lr

08014bc0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>:
 8014bc0:	f880 1040 	strb.w	r1, [r0, #64]	; 0x40
 8014bc4:	f7ff bef0 	b.w	80149a8 <_ZN8touchgfx4Line17updateCachedShapeEv>

08014bc8 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE>:
 8014bc8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014bcc:	b0a0      	sub	sp, #128	; 0x80
 8014bce:	4604      	mov	r4, r0
 8014bd0:	460a      	mov	r2, r1
 8014bd2:	4601      	mov	r1, r0
 8014bd4:	a804      	add	r0, sp, #16
 8014bd6:	f015 f845 	bl	8029c64 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 8014bda:	2300      	movs	r3, #0
 8014bdc:	9301      	str	r3, [sp, #4]
 8014bde:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8014be2:	2b01      	cmp	r3, #1
 8014be4:	d17c      	bne.n	8014ce0 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x118>
 8014be6:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8014be8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8014bea:	6d61      	ldr	r1, [r4, #84]	; 0x54
 8014bec:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8014bee:	1ac0      	subs	r0, r0, r3
 8014bf0:	eba1 0102 	sub.w	r1, r1, r2
 8014bf4:	d437      	bmi.n	8014c66 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x9e>
 8014bf6:	2900      	cmp	r1, #0
 8014bf8:	aa01      	add	r2, sp, #4
 8014bfa:	db2e      	blt.n	8014c5a <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x92>
 8014bfc:	f7ff fe98 	bl	8014930 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8014c00:	f100 065a 	add.w	r6, r0, #90	; 0x5a
 8014c04:	6d62      	ldr	r2, [r4, #84]	; 0x54
 8014c06:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8014c08:	a804      	add	r0, sp, #16
 8014c0a:	f015 f9ab 	bl	8029f64 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8014c0e:	6da2      	ldr	r2, [r4, #88]	; 0x58
 8014c10:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8014c12:	a804      	add	r0, sp, #16
 8014c14:	f015 f9f3 	bl	8029ffe <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8014c18:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 8014c1a:	2db3      	cmp	r5, #179	; 0xb3
 8014c1c:	dc33      	bgt.n	8014c86 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xbe>
 8014c1e:	eba6 0805 	sub.w	r8, r6, r5
 8014c22:	4640      	mov	r0, r8
 8014c24:	f7ff fdf2 	bl	801480c <_ZN8touchgfx7CWRUtil4sineEi>
 8014c28:	a902      	add	r1, sp, #8
 8014c2a:	9002      	str	r0, [sp, #8]
 8014c2c:	a801      	add	r0, sp, #4
 8014c2e:	f7ff fcd5 	bl	80145dc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014c32:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8014c34:	1847      	adds	r7, r0, r1
 8014c36:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 8014c3a:	f7ff fde7 	bl	801480c <_ZN8touchgfx7CWRUtil4sineEi>
 8014c3e:	a903      	add	r1, sp, #12
 8014c40:	9003      	str	r0, [sp, #12]
 8014c42:	a801      	add	r0, sp, #4
 8014c44:	f7ff fcca 	bl	80145dc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014c48:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8014c4a:	4639      	mov	r1, r7
 8014c4c:	1a12      	subs	r2, r2, r0
 8014c4e:	a804      	add	r0, sp, #16
 8014c50:	f015 f9d5 	bl	8029ffe <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8014c54:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 8014c56:	441d      	add	r5, r3
 8014c58:	e7df      	b.n	8014c1a <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x52>
 8014c5a:	4249      	negs	r1, r1
 8014c5c:	f7ff fe68 	bl	8014930 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8014c60:	f1c0 065a 	rsb	r6, r0, #90	; 0x5a
 8014c64:	e7ce      	b.n	8014c04 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8014c66:	2900      	cmp	r1, #0
 8014c68:	f1c0 0000 	rsb	r0, r0, #0
 8014c6c:	aa01      	add	r2, sp, #4
 8014c6e:	db04      	blt.n	8014c7a <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xb2>
 8014c70:	f7ff fe5e 	bl	8014930 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8014c74:	f5c0 7687 	rsb	r6, r0, #270	; 0x10e
 8014c78:	e7c4      	b.n	8014c04 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8014c7a:	4249      	negs	r1, r1
 8014c7c:	f7ff fe58 	bl	8014930 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8014c80:	f500 7687 	add.w	r6, r0, #270	; 0x10e
 8014c84:	e7be      	b.n	8014c04 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8014c86:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8014c88:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8014c8a:	a804      	add	r0, sp, #16
 8014c8c:	f015 f9b7 	bl	8029ffe <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8014c90:	6e22      	ldr	r2, [r4, #96]	; 0x60
 8014c92:	6d21      	ldr	r1, [r4, #80]	; 0x50
 8014c94:	a804      	add	r0, sp, #16
 8014c96:	f015 f9b2 	bl	8029ffe <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8014c9a:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 8014c9c:	f1c5 05b4 	rsb	r5, r5, #180	; 0xb4
 8014ca0:	2d00      	cmp	r5, #0
 8014ca2:	dd31      	ble.n	8014d08 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x140>
 8014ca4:	eb05 0806 	add.w	r8, r5, r6
 8014ca8:	4640      	mov	r0, r8
 8014caa:	f7ff fdaf 	bl	801480c <_ZN8touchgfx7CWRUtil4sineEi>
 8014cae:	a902      	add	r1, sp, #8
 8014cb0:	9002      	str	r0, [sp, #8]
 8014cb2:	a801      	add	r0, sp, #4
 8014cb4:	f7ff fc92 	bl	80145dc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014cb8:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8014cba:	1847      	adds	r7, r0, r1
 8014cbc:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 8014cc0:	f7ff fda4 	bl	801480c <_ZN8touchgfx7CWRUtil4sineEi>
 8014cc4:	a903      	add	r1, sp, #12
 8014cc6:	9003      	str	r0, [sp, #12]
 8014cc8:	a801      	add	r0, sp, #4
 8014cca:	f7ff fc87 	bl	80145dc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014cce:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8014cd0:	4639      	mov	r1, r7
 8014cd2:	1a12      	subs	r2, r2, r0
 8014cd4:	a804      	add	r0, sp, #16
 8014cd6:	f015 f992 	bl	8029ffe <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8014cda:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 8014cdc:	1aed      	subs	r5, r5, r3
 8014cde:	e7df      	b.n	8014ca0 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xd8>
 8014ce0:	6d62      	ldr	r2, [r4, #84]	; 0x54
 8014ce2:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8014ce4:	a804      	add	r0, sp, #16
 8014ce6:	f015 f93d 	bl	8029f64 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8014cea:	6da2      	ldr	r2, [r4, #88]	; 0x58
 8014cec:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8014cee:	a804      	add	r0, sp, #16
 8014cf0:	f015 f985 	bl	8029ffe <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8014cf4:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8014cf6:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8014cf8:	a804      	add	r0, sp, #16
 8014cfa:	f015 f980 	bl	8029ffe <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8014cfe:	6e22      	ldr	r2, [r4, #96]	; 0x60
 8014d00:	6d21      	ldr	r1, [r4, #80]	; 0x50
 8014d02:	a804      	add	r0, sp, #16
 8014d04:	f015 f97b 	bl	8029ffe <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8014d08:	21ff      	movs	r1, #255	; 0xff
 8014d0a:	a804      	add	r0, sp, #16
 8014d0c:	f015 f866 	bl	8029ddc <_ZN8touchgfx6Canvas6renderEh>
 8014d10:	4b04      	ldr	r3, [pc, #16]	; (8014d24 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x15c>)
 8014d12:	9304      	str	r3, [sp, #16]
 8014d14:	4604      	mov	r4, r0
 8014d16:	a80c      	add	r0, sp, #48	; 0x30
 8014d18:	f001 fa98 	bl	801624c <_ZN8touchgfx7OutlineD1Ev>
 8014d1c:	4620      	mov	r0, r4
 8014d1e:	b020      	add	sp, #128	; 0x80
 8014d20:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8014d24:	0803214c 	.word	0x0803214c

08014d28 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 8014d28:	2000      	movs	r0, #0
 8014d2a:	4770      	bx	lr

08014d2c <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 8014d2c:	4b07      	ldr	r3, [pc, #28]	; (8014d4c <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 8014d2e:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8014d30:	881b      	ldrh	r3, [r3, #0]
 8014d32:	4293      	cmp	r3, r2
 8014d34:	bf81      	itttt	hi
 8014d36:	4b06      	ldrhi	r3, [pc, #24]	; (8014d50 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 8014d38:	681b      	ldrhi	r3, [r3, #0]
 8014d3a:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 8014d3e:	7858      	ldrbhi	r0, [r3, #1]
 8014d40:	bf8c      	ite	hi
 8014d42:	f000 0003 	andhi.w	r0, r0, #3
 8014d46:	2000      	movls	r0, #0
 8014d48:	4770      	bx	lr
 8014d4a:	bf00      	nop
 8014d4c:	200138a8 	.word	0x200138a8
 8014d50:	200138a4 	.word	0x200138a4

08014d54 <_ZN8touchgfx8TextAreaD1Ev>:
 8014d54:	4770      	bx	lr
	...

08014d58 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 8014d58:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014d5c:	4b10      	ldr	r3, [pc, #64]	; (8014da0 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 8014d5e:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8014d60:	881b      	ldrh	r3, [r3, #0]
 8014d62:	428b      	cmp	r3, r1
 8014d64:	4604      	mov	r4, r0
 8014d66:	d918      	bls.n	8014d9a <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 8014d68:	6803      	ldr	r3, [r0, #0]
 8014d6a:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 8014d6c:	4b0d      	ldr	r3, [pc, #52]	; (8014da4 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 8014d6e:	6818      	ldr	r0, [r3, #0]
 8014d70:	f7f5 fc72 	bl	800a658 <_ZNK8touchgfx5Texts7getTextEt>
 8014d74:	6823      	ldr	r3, [r4, #0]
 8014d76:	4606      	mov	r6, r0
 8014d78:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8014d7a:	4620      	mov	r0, r4
 8014d7c:	4798      	blx	r3
 8014d7e:	6823      	ldr	r3, [r4, #0]
 8014d80:	4607      	mov	r7, r0
 8014d82:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8014d86:	4620      	mov	r0, r4
 8014d88:	4798      	blx	r3
 8014d8a:	463a      	mov	r2, r7
 8014d8c:	4603      	mov	r3, r0
 8014d8e:	4631      	mov	r1, r6
 8014d90:	4620      	mov	r0, r4
 8014d92:	46ac      	mov	ip, r5
 8014d94:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8014d98:	4760      	bx	ip
 8014d9a:	2000      	movs	r0, #0
 8014d9c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8014da0:	200138a8 	.word	0x200138a8
 8014da4:	200138b0 	.word	0x200138b0

08014da8 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 8014da8:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8014dac:	4b17      	ldr	r3, [pc, #92]	; (8014e0c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 8014dae:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8014db0:	881b      	ldrh	r3, [r3, #0]
 8014db2:	428b      	cmp	r3, r1
 8014db4:	4604      	mov	r4, r0
 8014db6:	d926      	bls.n	8014e06 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 8014db8:	4b15      	ldr	r3, [pc, #84]	; (8014e10 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 8014dba:	681b      	ldr	r3, [r3, #0]
 8014dbc:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 8014dc0:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 8014dc4:	4b13      	ldr	r3, [pc, #76]	; (8014e14 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 8014dc6:	7855      	ldrb	r5, [r2, #1]
 8014dc8:	681b      	ldr	r3, [r3, #0]
 8014dca:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 8014dce:	6833      	ldr	r3, [r6, #0]
 8014dd0:	69df      	ldr	r7, [r3, #28]
 8014dd2:	4b11      	ldr	r3, [pc, #68]	; (8014e18 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 8014dd4:	6818      	ldr	r0, [r3, #0]
 8014dd6:	f7f5 fc3f 	bl	800a658 <_ZNK8touchgfx5Texts7getTextEt>
 8014dda:	6823      	ldr	r3, [r4, #0]
 8014ddc:	4680      	mov	r8, r0
 8014dde:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8014de0:	4620      	mov	r0, r4
 8014de2:	4798      	blx	r3
 8014de4:	6823      	ldr	r3, [r4, #0]
 8014de6:	4681      	mov	r9, r0
 8014de8:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8014dec:	4620      	mov	r0, r4
 8014dee:	4798      	blx	r3
 8014df0:	f3c5 0581 	ubfx	r5, r5, #2, #2
 8014df4:	9000      	str	r0, [sp, #0]
 8014df6:	464b      	mov	r3, r9
 8014df8:	4642      	mov	r2, r8
 8014dfa:	4629      	mov	r1, r5
 8014dfc:	4630      	mov	r0, r6
 8014dfe:	47b8      	blx	r7
 8014e00:	b003      	add	sp, #12
 8014e02:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8014e06:	2000      	movs	r0, #0
 8014e08:	e7fa      	b.n	8014e00 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 8014e0a:	bf00      	nop
 8014e0c:	200138a8 	.word	0x200138a8
 8014e10:	200138a4 	.word	0x200138a4
 8014e14:	200138ac 	.word	0x200138ac
 8014e18:	200138b0 	.word	0x200138b0

08014e1c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 8014e1c:	b40e      	push	{r1, r2, r3}
 8014e1e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8014e22:	4b2f      	ldr	r3, [pc, #188]	; (8014ee0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 8014e24:	881a      	ldrh	r2, [r3, #0]
 8014e26:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 8014e28:	429a      	cmp	r2, r3
 8014e2a:	b09d      	sub	sp, #116	; 0x74
 8014e2c:	4604      	mov	r4, r0
 8014e2e:	d954      	bls.n	8014eda <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 8014e30:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 8014ee4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 8014e34:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 8014ee8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 8014e38:	aa26      	add	r2, sp, #152	; 0x98
 8014e3a:	9202      	str	r2, [sp, #8]
 8014e3c:	f8d9 2000 	ldr.w	r2, [r9]
 8014e40:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 8014e44:	f8d8 3000 	ldr.w	r3, [r8]
 8014e48:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8014e4c:	682b      	ldr	r3, [r5, #0]
 8014e4e:	4628      	mov	r0, r5
 8014e50:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014e52:	4798      	blx	r3
 8014e54:	b207      	sxth	r7, r0
 8014e56:	4606      	mov	r6, r0
 8014e58:	a803      	add	r0, sp, #12
 8014e5a:	f005 fc61 	bl	801a720 <_ZN8touchgfx12TextProviderC1Ev>
 8014e5e:	682b      	ldr	r3, [r5, #0]
 8014e60:	4628      	mov	r0, r5
 8014e62:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8014e64:	4798      	blx	r3
 8014e66:	682b      	ldr	r3, [r5, #0]
 8014e68:	4682      	mov	sl, r0
 8014e6a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8014e6c:	4628      	mov	r0, r5
 8014e6e:	4798      	blx	r3
 8014e70:	4653      	mov	r3, sl
 8014e72:	9000      	str	r0, [sp, #0]
 8014e74:	9a02      	ldr	r2, [sp, #8]
 8014e76:	9925      	ldr	r1, [sp, #148]	; 0x94
 8014e78:	a803      	add	r0, sp, #12
 8014e7a:	f005 fcac 	bl	801a7d6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8014e7e:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8014e80:	f8d9 3000 	ldr.w	r3, [r9]
 8014e84:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 8014e88:	8925      	ldrh	r5, [r4, #8]
 8014e8a:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 8014e8e:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 8014e92:	eba5 050c 	sub.w	r5, r5, ip
 8014e96:	784a      	ldrb	r2, [r1, #1]
 8014e98:	f8d8 3000 	ldr.w	r3, [r8]
 8014e9c:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 8014ea0:	b22d      	sxth	r5, r5
 8014ea2:	9500      	str	r5, [sp, #0]
 8014ea4:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8014ea8:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8014eac:	a803      	add	r0, sp, #12
 8014eae:	f003 f8b9 	bl	8018024 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 8014eb2:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 8014eb6:	18b9      	adds	r1, r7, r2
 8014eb8:	2900      	cmp	r1, #0
 8014eba:	b203      	sxth	r3, r0
 8014ebc:	dd0b      	ble.n	8014ed6 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 8014ebe:	3b01      	subs	r3, #1
 8014ec0:	fb13 f302 	smulbb	r3, r3, r2
 8014ec4:	fb16 3300 	smlabb	r3, r6, r0, r3
 8014ec8:	b21f      	sxth	r7, r3
 8014eca:	4638      	mov	r0, r7
 8014ecc:	b01d      	add	sp, #116	; 0x74
 8014ece:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8014ed2:	b003      	add	sp, #12
 8014ed4:	4770      	bx	lr
 8014ed6:	2b00      	cmp	r3, #0
 8014ed8:	dcf7      	bgt.n	8014eca <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8014eda:	2700      	movs	r7, #0
 8014edc:	e7f5      	b.n	8014eca <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8014ede:	bf00      	nop
 8014ee0:	200138a8 	.word	0x200138a8
 8014ee4:	200138a4 	.word	0x200138a4
 8014ee8:	200138ac 	.word	0x200138ac

08014eec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 8014eec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014ef0:	4bbc      	ldr	r3, [pc, #752]	; (80151e4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 8014ef2:	460c      	mov	r4, r1
 8014ef4:	881b      	ldrh	r3, [r3, #0]
 8014ef6:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 8014ef8:	428b      	cmp	r3, r1
 8014efa:	b0a9      	sub	sp, #164	; 0xa4
 8014efc:	4680      	mov	r8, r0
 8014efe:	d809      	bhi.n	8014f14 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 8014f00:	2300      	movs	r3, #0
 8014f02:	f04f 32ff 	mov.w	r2, #4294967295
 8014f06:	e9c0 3200 	strd	r3, r2, [r0]
 8014f0a:	6083      	str	r3, [r0, #8]
 8014f0c:	4640      	mov	r0, r8
 8014f0e:	b029      	add	sp, #164	; 0xa4
 8014f10:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014f14:	4eb4      	ldr	r6, [pc, #720]	; (80151e8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 8014f16:	6833      	ldr	r3, [r6, #0]
 8014f18:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8014f1c:	4bb3      	ldr	r3, [pc, #716]	; (80151ec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 8014f1e:	681b      	ldr	r3, [r3, #0]
 8014f20:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8014f24:	4bb2      	ldr	r3, [pc, #712]	; (80151f0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 8014f26:	6818      	ldr	r0, [r3, #0]
 8014f28:	f7f5 fb96 	bl	800a658 <_ZNK8touchgfx5Texts7getTextEt>
 8014f2c:	682b      	ldr	r3, [r5, #0]
 8014f2e:	4681      	mov	r9, r0
 8014f30:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014f32:	4628      	mov	r0, r5
 8014f34:	4798      	blx	r3
 8014f36:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
 8014f38:	b203      	sxth	r3, r0
 8014f3a:	4407      	add	r7, r0
 8014f3c:	9304      	str	r3, [sp, #16]
 8014f3e:	b2bb      	uxth	r3, r7
 8014f40:	9303      	str	r3, [sp, #12]
 8014f42:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 8014f46:	4682      	mov	sl, r0
 8014f48:	a80f      	add	r0, sp, #60	; 0x3c
 8014f4a:	2b00      	cmp	r3, #0
 8014f4c:	f040 80a6 	bne.w	801509c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1b0>
 8014f50:	f005 fbe6 	bl	801a720 <_ZN8touchgfx12TextProviderC1Ev>
 8014f54:	682b      	ldr	r3, [r5, #0]
 8014f56:	4628      	mov	r0, r5
 8014f58:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8014f5a:	4798      	blx	r3
 8014f5c:	682b      	ldr	r3, [r5, #0]
 8014f5e:	4606      	mov	r6, r0
 8014f60:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8014f62:	4628      	mov	r0, r5
 8014f64:	4798      	blx	r3
 8014f66:	6823      	ldr	r3, [r4, #0]
 8014f68:	4607      	mov	r7, r0
 8014f6a:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8014f6c:	4620      	mov	r0, r4
 8014f6e:	4798      	blx	r3
 8014f70:	6823      	ldr	r3, [r4, #0]
 8014f72:	4683      	mov	fp, r0
 8014f74:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8014f78:	4620      	mov	r0, r4
 8014f7a:	4798      	blx	r3
 8014f7c:	463b      	mov	r3, r7
 8014f7e:	e9cd b000 	strd	fp, r0, [sp]
 8014f82:	4649      	mov	r1, r9
 8014f84:	4632      	mov	r2, r6
 8014f86:	a80f      	add	r0, sp, #60	; 0x3c
 8014f88:	f005 fc3a 	bl	801a800 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8014f8c:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8014f90:	f8df b254 	ldr.w	fp, [pc, #596]	; 80151e8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 8014f94:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8014f98:	f04f 0600 	mov.w	r6, #0
 8014f9c:	bf0c      	ite	eq
 8014f9e:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 8014fa2:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 8014fa6:	4637      	mov	r7, r6
 8014fa8:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8014faa:	f8db 3000 	ldr.w	r3, [fp]
 8014fae:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8014fb2:	4629      	mov	r1, r5
 8014fb4:	785b      	ldrb	r3, [r3, #1]
 8014fb6:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8014fba:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8014fbe:	a80f      	add	r0, sp, #60	; 0x3c
 8014fc0:	f002 fd4b 	bl	8017a5a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8014fc4:	9b03      	ldr	r3, [sp, #12]
 8014fc6:	4286      	cmp	r6, r0
 8014fc8:	bfb8      	it	lt
 8014fca:	4606      	movlt	r6, r0
 8014fcc:	3701      	adds	r7, #1
 8014fce:	eba9 0903 	sub.w	r9, r9, r3
 8014fd2:	a80f      	add	r0, sp, #60	; 0x3c
 8014fd4:	b236      	sxth	r6, r6
 8014fd6:	b2bf      	uxth	r7, r7
 8014fd8:	fa0f f989 	sxth.w	r9, r9
 8014fdc:	f005 fbc7 	bl	801a76e <_ZN8touchgfx12TextProvider11endOfStringEv>
 8014fe0:	b918      	cbnz	r0, 8014fea <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8014fe2:	7a2b      	ldrb	r3, [r5, #8]
 8014fe4:	444b      	add	r3, r9
 8014fe6:	2b00      	cmp	r3, #0
 8014fe8:	dcde      	bgt.n	8014fa8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xbc>
 8014fea:	9b03      	ldr	r3, [sp, #12]
 8014fec:	9a04      	ldr	r2, [sp, #16]
 8014fee:	f895 9009 	ldrb.w	r9, [r5, #9]
 8014ff2:	fb13 f707 	smulbb	r7, r3, r7
 8014ff6:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8014ff8:	1aff      	subs	r7, r7, r3
 8014ffa:	b2bf      	uxth	r7, r7
 8014ffc:	b23b      	sxth	r3, r7
 8014ffe:	429a      	cmp	r2, r3
 8015000:	bfa8      	it	ge
 8015002:	4657      	movge	r7, sl
 8015004:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8015008:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 801500c:	6823      	ldr	r3, [r4, #0]
 801500e:	bf08      	it	eq
 8015010:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 8015014:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8015016:	bf18      	it	ne
 8015018:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 801501c:	4620      	mov	r0, r4
 801501e:	4798      	blx	r3
 8015020:	444f      	add	r7, r9
 8015022:	fa1f f987 	uxth.w	r9, r7
 8015026:	2801      	cmp	r0, #1
 8015028:	fa0f f789 	sxth.w	r7, r9
 801502c:	b2b3      	uxth	r3, r6
 801502e:	f000 80e1 	beq.w	80151f4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 8015032:	2802      	cmp	r0, #2
 8015034:	f894 6037 	ldrb.w	r6, [r4, #55]	; 0x37
 8015038:	f000 80e2 	beq.w	8015200 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 801503c:	7aea      	ldrb	r2, [r5, #11]
 801503e:	7b2d      	ldrb	r5, [r5, #12]
 8015040:	b236      	sxth	r6, r6
 8015042:	1ab6      	subs	r6, r6, r2
 8015044:	442a      	add	r2, r5
 8015046:	4413      	add	r3, r2
 8015048:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 801504c:	fa1f fa86 	uxth.w	sl, r6
 8015050:	b29b      	uxth	r3, r3
 8015052:	2a02      	cmp	r2, #2
 8015054:	fa0f fb8a 	sxth.w	fp, sl
 8015058:	b21e      	sxth	r6, r3
 801505a:	f000 80d5 	beq.w	8015208 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 801505e:	2a03      	cmp	r2, #3
 8015060:	f000 80dd 	beq.w	801521e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 8015064:	2a01      	cmp	r2, #1
 8015066:	f040 80e5 	bne.w	8015234 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 801506a:	8925      	ldrh	r5, [r4, #8]
 801506c:	4633      	mov	r3, r6
 801506e:	eba5 0909 	sub.w	r9, r5, r9
 8015072:	463e      	mov	r6, r7
 8015074:	465d      	mov	r5, fp
 8015076:	461f      	mov	r7, r3
 8015078:	fa0f fb89 	sxth.w	fp, r9
 801507c:	4b5c      	ldr	r3, [pc, #368]	; (80151f0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 801507e:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8015080:	6818      	ldr	r0, [r3, #0]
 8015082:	f7f5 fae9 	bl	800a658 <_ZNK8touchgfx5Texts7getTextEt>
 8015086:	f8a8 b000 	strh.w	fp, [r8]
 801508a:	f8a8 5002 	strh.w	r5, [r8, #2]
 801508e:	f8a8 6004 	strh.w	r6, [r8, #4]
 8015092:	f8a8 7006 	strh.w	r7, [r8, #6]
 8015096:	f8c8 0008 	str.w	r0, [r8, #8]
 801509a:	e737      	b.n	8014f0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 801509c:	f005 fb40 	bl	801a720 <_ZN8touchgfx12TextProviderC1Ev>
 80150a0:	682b      	ldr	r3, [r5, #0]
 80150a2:	4628      	mov	r0, r5
 80150a4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80150a6:	4798      	blx	r3
 80150a8:	682b      	ldr	r3, [r5, #0]
 80150aa:	4607      	mov	r7, r0
 80150ac:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80150ae:	4628      	mov	r0, r5
 80150b0:	4798      	blx	r3
 80150b2:	6823      	ldr	r3, [r4, #0]
 80150b4:	4683      	mov	fp, r0
 80150b6:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80150b8:	4620      	mov	r0, r4
 80150ba:	4798      	blx	r3
 80150bc:	6822      	ldr	r2, [r4, #0]
 80150be:	9005      	str	r0, [sp, #20]
 80150c0:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 80150c4:	4620      	mov	r0, r4
 80150c6:	4790      	blx	r2
 80150c8:	9b05      	ldr	r3, [sp, #20]
 80150ca:	9001      	str	r0, [sp, #4]
 80150cc:	463a      	mov	r2, r7
 80150ce:	4649      	mov	r1, r9
 80150d0:	9300      	str	r3, [sp, #0]
 80150d2:	a80f      	add	r0, sp, #60	; 0x3c
 80150d4:	465b      	mov	r3, fp
 80150d6:	f005 fb93 	bl	801a800 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 80150da:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80150de:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 80150e2:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 80150e4:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 80150e8:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 80150ec:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 80150f0:	bf0a      	itet	eq
 80150f2:	464a      	moveq	r2, r9
 80150f4:	461a      	movne	r2, r3
 80150f6:	4699      	moveq	r9, r3
 80150f8:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 80150fc:	1ad2      	subs	r2, r2, r3
 80150fe:	6833      	ldr	r3, [r6, #0]
 8015100:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	; 0x34
 8015104:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8015108:	af0f      	add	r7, sp, #60	; 0x3c
 801510a:	7859      	ldrb	r1, [r3, #1]
 801510c:	9707      	str	r7, [sp, #28]
 801510e:	2300      	movs	r3, #0
 8015110:	f3c1 0181 	ubfx	r1, r1, #2, #2
 8015114:	f8ad 3018 	strh.w	r3, [sp, #24]
 8015118:	f88d 1020 	strb.w	r1, [sp, #32]
 801511c:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 8015120:	9509      	str	r5, [sp, #36]	; 0x24
 8015122:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8015126:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 801512a:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 801512e:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8015132:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8015136:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801513a:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 801513e:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8015142:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8015146:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 801514a:	b350      	cbz	r0, 80151a2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 801514c:	682b      	ldr	r3, [r5, #0]
 801514e:	4628      	mov	r0, r5
 8015150:	695b      	ldr	r3, [r3, #20]
 8015152:	4798      	blx	r3
 8015154:	4607      	mov	r7, r0
 8015156:	b320      	cbz	r0, 80151a2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8015158:	9809      	ldr	r0, [sp, #36]	; 0x24
 801515a:	6803      	ldr	r3, [r0, #0]
 801515c:	4639      	mov	r1, r7
 801515e:	68db      	ldr	r3, [r3, #12]
 8015160:	4798      	blx	r3
 8015162:	4606      	mov	r6, r0
 8015164:	b1e8      	cbz	r0, 80151a2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8015166:	7b43      	ldrb	r3, [r0, #13]
 8015168:	7a82      	ldrb	r2, [r0, #10]
 801516a:	005b      	lsls	r3, r3, #1
 801516c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8015170:	4313      	orrs	r3, r2
 8015172:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8015176:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
 801517a:	2b06      	cmp	r3, #6
 801517c:	d111      	bne.n	80151a2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 801517e:	9809      	ldr	r0, [sp, #36]	; 0x24
 8015180:	6803      	ldr	r3, [r0, #0]
 8015182:	4632      	mov	r2, r6
 8015184:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8015186:	4639      	mov	r1, r7
 8015188:	4798      	blx	r3
 801518a:	7b73      	ldrb	r3, [r6, #13]
 801518c:	005b      	lsls	r3, r3, #1
 801518e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8015192:	7ab3      	ldrb	r3, [r6, #10]
 8015194:	4313      	orrs	r3, r2
 8015196:	4418      	add	r0, r3
 8015198:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801519c:	4418      	add	r0, r3
 801519e:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 80151a2:	2600      	movs	r6, #0
 80151a4:	4637      	mov	r7, r6
 80151a6:	a806      	add	r0, sp, #24
 80151a8:	f002 fe38 	bl	8017e1c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 80151ac:	f8bd 0036 	ldrh.w	r0, [sp, #54]	; 0x36
 80151b0:	9b03      	ldr	r3, [sp, #12]
 80151b2:	4286      	cmp	r6, r0
 80151b4:	eba9 0903 	sub.w	r9, r9, r3
 80151b8:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 80151bc:	bfb8      	it	lt
 80151be:	4606      	movlt	r6, r0
 80151c0:	3701      	adds	r7, #1
 80151c2:	b236      	sxth	r6, r6
 80151c4:	b2bf      	uxth	r7, r7
 80151c6:	fa0f f989 	sxth.w	r9, r9
 80151ca:	2b00      	cmp	r3, #0
 80151cc:	f43f af0d 	beq.w	8014fea <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 80151d0:	f89d 303a 	ldrb.w	r3, [sp, #58]	; 0x3a
 80151d4:	2b00      	cmp	r3, #0
 80151d6:	f47f af08 	bne.w	8014fea <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 80151da:	7a2b      	ldrb	r3, [r5, #8]
 80151dc:	444b      	add	r3, r9
 80151de:	2b00      	cmp	r3, #0
 80151e0:	dce1      	bgt.n	80151a6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ba>
 80151e2:	e702      	b.n	8014fea <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 80151e4:	200138a8 	.word	0x200138a8
 80151e8:	200138a4 	.word	0x200138a4
 80151ec:	200138ac 	.word	0x200138ac
 80151f0:	200138b0 	.word	0x200138b0
 80151f4:	ebaa 0606 	sub.w	r6, sl, r6
 80151f8:	2002      	movs	r0, #2
 80151fa:	fb96 f6f0 	sdiv	r6, r6, r0
 80151fe:	e71d      	b.n	801503c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8015200:	441e      	add	r6, r3
 8015202:	ebaa 0606 	sub.w	r6, sl, r6
 8015206:	e719      	b.n	801503c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8015208:	8925      	ldrh	r5, [r4, #8]
 801520a:	1aed      	subs	r5, r5, r3
 801520c:	eba5 050a 	sub.w	r5, r5, sl
 8015210:	fa0f fb85 	sxth.w	fp, r5
 8015214:	8965      	ldrh	r5, [r4, #10]
 8015216:	eba5 0509 	sub.w	r5, r5, r9
 801521a:	b22d      	sxth	r5, r5
 801521c:	e72e      	b.n	801507c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 801521e:	8965      	ldrh	r5, [r4, #10]
 8015220:	1aed      	subs	r5, r5, r3
 8015222:	eba5 050a 	sub.w	r5, r5, sl
 8015226:	4633      	mov	r3, r6
 8015228:	b22d      	sxth	r5, r5
 801522a:	463e      	mov	r6, r7
 801522c:	f04f 0b00 	mov.w	fp, #0
 8015230:	461f      	mov	r7, r3
 8015232:	e723      	b.n	801507c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 8015234:	2500      	movs	r5, #0
 8015236:	e721      	b.n	801507c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>

08015238 <_ZN8touchgfx8TextAreaD0Ev>:
 8015238:	b510      	push	{r4, lr}
 801523a:	2148      	movs	r1, #72	; 0x48
 801523c:	4604      	mov	r4, r0
 801523e:	f017 fc54 	bl	802caea <_ZdlPvj>
 8015242:	4620      	mov	r0, r4
 8015244:	bd10      	pop	{r4, pc}
	...

08015248 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 8015248:	b513      	push	{r0, r1, r4, lr}
 801524a:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 801524e:	4604      	mov	r4, r0
 8015250:	b1fb      	cbz	r3, 8015292 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8015252:	4b16      	ldr	r3, [pc, #88]	; (80152ac <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 8015254:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8015256:	881b      	ldrh	r3, [r3, #0]
 8015258:	428b      	cmp	r3, r1
 801525a:	d91a      	bls.n	8015292 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 801525c:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8015260:	2b00      	cmp	r3, #0
 8015262:	dd16      	ble.n	8015292 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8015264:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8015268:	2b00      	cmp	r3, #0
 801526a:	dd12      	ble.n	8015292 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 801526c:	4b10      	ldr	r3, [pc, #64]	; (80152b0 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 801526e:	6818      	ldr	r0, [r3, #0]
 8015270:	f7f5 f9f2 	bl	800a658 <_ZNK8touchgfx5Texts7getTextEt>
 8015274:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 8015278:	6822      	ldr	r2, [r4, #0]
 801527a:	2b00      	cmp	r3, #0
 801527c:	db06      	blt.n	801528c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 801527e:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 8015282:	2b00      	cmp	r3, #0
 8015284:	db02      	blt.n	801528c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 8015286:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8015288:	4298      	cmp	r0, r3
 801528a:	d004      	beq.n	8015296 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 801528c:	6953      	ldr	r3, [r2, #20]
 801528e:	4620      	mov	r0, r4
 8015290:	4798      	blx	r3
 8015292:	b002      	add	sp, #8
 8015294:	bd10      	pop	{r4, pc}
 8015296:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 801529a:	c903      	ldmia	r1, {r0, r1}
 801529c:	466b      	mov	r3, sp
 801529e:	e883 0003 	stmia.w	r3, {r0, r1}
 80152a2:	6912      	ldr	r2, [r2, #16]
 80152a4:	4619      	mov	r1, r3
 80152a6:	4620      	mov	r0, r4
 80152a8:	4790      	blx	r2
 80152aa:	e7f2      	b.n	8015292 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 80152ac:	200138a8 	.word	0x200138a8
 80152b0:	200138b0 	.word	0x200138b0

080152b4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 80152b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80152b8:	4b44      	ldr	r3, [pc, #272]	; (80153cc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 80152ba:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 80152bc:	881b      	ldrh	r3, [r3, #0]
 80152be:	4293      	cmp	r3, r2
 80152c0:	b08e      	sub	sp, #56	; 0x38
 80152c2:	4604      	mov	r4, r0
 80152c4:	d97e      	bls.n	80153c4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 80152c6:	6808      	ldr	r0, [r1, #0]
 80152c8:	4d41      	ldr	r5, [pc, #260]	; (80153d0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 80152ca:	6849      	ldr	r1, [r1, #4]
 80152cc:	ab05      	add	r3, sp, #20
 80152ce:	c303      	stmia	r3!, {r0, r1}
 80152d0:	4611      	mov	r1, r2
 80152d2:	6828      	ldr	r0, [r5, #0]
 80152d4:	f7f5 f9c0 	bl	800a658 <_ZNK8touchgfx5Texts7getTextEt>
 80152d8:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 80152dc:	2b00      	cmp	r3, #0
 80152de:	db11      	blt.n	8015304 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 80152e0:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 80152e4:	2b00      	cmp	r3, #0
 80152e6:	db0d      	blt.n	8015304 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 80152e8:	6c63      	ldr	r3, [r4, #68]	; 0x44
 80152ea:	4298      	cmp	r0, r3
 80152ec:	d10a      	bne.n	8015304 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 80152ee:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 80152f2:	e892 0003 	ldmia.w	r2, {r0, r1}
 80152f6:	ab09      	add	r3, sp, #36	; 0x24
 80152f8:	e883 0003 	stmia.w	r3, {r0, r1}
 80152fc:	4619      	mov	r1, r3
 80152fe:	a805      	add	r0, sp, #20
 8015300:	f7fd fbec 	bl	8012adc <_ZN8touchgfx4RectaNERKS0_>
 8015304:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8015308:	2b00      	cmp	r3, #0
 801530a:	dd5b      	ble.n	80153c4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 801530c:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8015310:	2b00      	cmp	r3, #0
 8015312:	dd57      	ble.n	80153c4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8015314:	4f2f      	ldr	r7, [pc, #188]	; (80153d4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 8015316:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8015318:	683b      	ldr	r3, [r7, #0]
 801531a:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 801531e:	4b2e      	ldr	r3, [pc, #184]	; (80153d8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 8015320:	681b      	ldr	r3, [r3, #0]
 8015322:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8015326:	2e00      	cmp	r6, #0
 8015328:	d04c      	beq.n	80153c4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 801532a:	6823      	ldr	r3, [r4, #0]
 801532c:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 8015330:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8015332:	4620      	mov	r0, r4
 8015334:	4798      	blx	r3
 8015336:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8015338:	683b      	ldr	r3, [r7, #0]
 801533a:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 801533e:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 8015342:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 8015346:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8015348:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 801534c:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 8015350:	785b      	ldrb	r3, [r3, #1]
 8015352:	9609      	str	r6, [sp, #36]	; 0x24
 8015354:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8015358:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 801535c:	4b1f      	ldr	r3, [pc, #124]	; (80153dc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 801535e:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 8015362:	681b      	ldr	r3, [r3, #0]
 8015364:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 8015368:	910b      	str	r1, [sp, #44]	; 0x2c
 801536a:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 801536e:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 8015372:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 8015376:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 801537a:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 801537e:	b10a      	cbz	r2, 8015384 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 8015380:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 8015382:	b906      	cbnz	r6, 8015386 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 8015384:	689e      	ldr	r6, [r3, #8]
 8015386:	af07      	add	r7, sp, #28
 8015388:	4621      	mov	r1, r4
 801538a:	4638      	mov	r0, r7
 801538c:	f004 fc7c 	bl	8019c88 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8015390:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8015392:	6828      	ldr	r0, [r5, #0]
 8015394:	f7f5 f960 	bl	800a658 <_ZNK8touchgfx5Texts7getTextEt>
 8015398:	6823      	ldr	r3, [r4, #0]
 801539a:	4605      	mov	r5, r0
 801539c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 801539e:	4620      	mov	r0, r4
 80153a0:	4798      	blx	r3
 80153a2:	6823      	ldr	r3, [r4, #0]
 80153a4:	4680      	mov	r8, r0
 80153a6:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80153aa:	4620      	mov	r0, r4
 80153ac:	4798      	blx	r3
 80153ae:	e9cd 8002 	strd	r8, r0, [sp, #8]
 80153b2:	ab09      	add	r3, sp, #36	; 0x24
 80153b4:	9300      	str	r3, [sp, #0]
 80153b6:	9501      	str	r5, [sp, #4]
 80153b8:	ab05      	add	r3, sp, #20
 80153ba:	e897 0006 	ldmia.w	r7, {r1, r2}
 80153be:	4630      	mov	r0, r6
 80153c0:	f7f5 f8fc 	bl	800a5bc <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 80153c4:	b00e      	add	sp, #56	; 0x38
 80153c6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80153ca:	bf00      	nop
 80153cc:	200138a8 	.word	0x200138a8
 80153d0:	200138b0 	.word	0x200138b0
 80153d4:	200138a4 	.word	0x200138a4
 80153d8:	200138ac 	.word	0x200138ac
 80153dc:	2001384c 	.word	0x2001384c

080153e0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 80153e0:	b538      	push	{r3, r4, r5, lr}
 80153e2:	4b0e      	ldr	r3, [pc, #56]	; (801541c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 80153e4:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 80153e6:	881b      	ldrh	r3, [r3, #0]
 80153e8:	429a      	cmp	r2, r3
 80153ea:	4604      	mov	r4, r0
 80153ec:	d214      	bcs.n	8015418 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 80153ee:	6803      	ldr	r3, [r0, #0]
 80153f0:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80153f2:	4798      	blx	r3
 80153f4:	6823      	ldr	r3, [r4, #0]
 80153f6:	4605      	mov	r5, r0
 80153f8:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80153fa:	4620      	mov	r0, r4
 80153fc:	4798      	blx	r3
 80153fe:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8015402:	b22d      	sxth	r5, r5
 8015404:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8015408:	4601      	mov	r1, r0
 801540a:	bf06      	itte	eq
 801540c:	4602      	moveq	r2, r0
 801540e:	4629      	moveq	r1, r5
 8015410:	462a      	movne	r2, r5
 8015412:	4620      	mov	r0, r4
 8015414:	f7fd f942 	bl	801269c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8015418:	bd38      	pop	{r3, r4, r5, pc}
 801541a:	bf00      	nop
 801541c:	200138a8 	.word	0x200138a8

08015420 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 8015420:	b530      	push	{r4, r5, lr}
 8015422:	888b      	ldrh	r3, [r1, #4]
 8015424:	8583      	strh	r3, [r0, #44]	; 0x2c
 8015426:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 801542a:	b085      	sub	sp, #20
 801542c:	4604      	mov	r4, r0
 801542e:	b923      	cbnz	r3, 801543a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8015430:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8015434:	b90b      	cbnz	r3, 801543a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8015436:	f7ff ffd3 	bl	80153e0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 801543a:	6823      	ldr	r3, [r4, #0]
 801543c:	466d      	mov	r5, sp
 801543e:	4621      	mov	r1, r4
 8015440:	4628      	mov	r0, r5
 8015442:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8015446:	4798      	blx	r3
 8015448:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 801544c:	343c      	adds	r4, #60	; 0x3c
 801544e:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8015452:	b005      	add	sp, #20
 8015454:	bd30      	pop	{r4, r5, pc}

08015456 <_ZNK8touchgfx3Box12getSolidRectEv>:
 8015456:	2300      	movs	r3, #0
 8015458:	8083      	strh	r3, [r0, #4]
 801545a:	80c3      	strh	r3, [r0, #6]
 801545c:	8003      	strh	r3, [r0, #0]
 801545e:	8043      	strh	r3, [r0, #2]
 8015460:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 8015464:	2bff      	cmp	r3, #255	; 0xff
 8015466:	bf01      	itttt	eq
 8015468:	890b      	ldrheq	r3, [r1, #8]
 801546a:	8083      	strheq	r3, [r0, #4]
 801546c:	894b      	ldrheq	r3, [r1, #10]
 801546e:	80c3      	strheq	r3, [r0, #6]
 8015470:	4770      	bx	lr
	...

08015474 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 8015474:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8015476:	4604      	mov	r4, r0
 8015478:	6808      	ldr	r0, [r1, #0]
 801547a:	6849      	ldr	r1, [r1, #4]
 801547c:	466b      	mov	r3, sp
 801547e:	c303      	stmia	r3!, {r0, r1}
 8015480:	6823      	ldr	r3, [r4, #0]
 8015482:	4669      	mov	r1, sp
 8015484:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8015486:	4620      	mov	r0, r4
 8015488:	4798      	blx	r3
 801548a:	4b08      	ldr	r3, [pc, #32]	; (80154ac <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 801548c:	681b      	ldr	r3, [r3, #0]
 801548e:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8015492:	b10a      	cbz	r2, 8015498 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 8015494:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8015496:	b900      	cbnz	r0, 801549a <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 8015498:	6898      	ldr	r0, [r3, #8]
 801549a:	6803      	ldr	r3, [r0, #0]
 801549c:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 801549e:	6a1d      	ldr	r5, [r3, #32]
 80154a0:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 80154a4:	4669      	mov	r1, sp
 80154a6:	47a8      	blx	r5
 80154a8:	b003      	add	sp, #12
 80154aa:	bd30      	pop	{r4, r5, pc}
 80154ac:	2001384c 	.word	0x2001384c

080154b0 <_ZN8touchgfx3BoxD1Ev>:
 80154b0:	4770      	bx	lr

080154b2 <_ZN8touchgfx3BoxD0Ev>:
 80154b2:	b510      	push	{r4, lr}
 80154b4:	212c      	movs	r1, #44	; 0x2c
 80154b6:	4604      	mov	r4, r0
 80154b8:	f017 fb17 	bl	802caea <_ZdlPvj>
 80154bc:	4620      	mov	r0, r4
 80154be:	bd10      	pop	{r4, pc}

080154c0 <_ZNK8touchgfx3Box17invalidateContentEv>:
 80154c0:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 80154c4:	b12a      	cbz	r2, 80154d2 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 80154c6:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80154ca:	b112      	cbz	r2, 80154d2 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 80154cc:	6803      	ldr	r3, [r0, #0]
 80154ce:	695b      	ldr	r3, [r3, #20]
 80154d0:	4718      	bx	r3
 80154d2:	4770      	bx	lr

080154d4 <_ZN8touchgfx10TiledImage9setOffsetEss>:
 80154d4:	b570      	push	{r4, r5, r6, lr}
 80154d6:	6803      	ldr	r3, [r0, #0]
 80154d8:	4604      	mov	r4, r0
 80154da:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 80154dc:	4615      	mov	r5, r2
 80154de:	4798      	blx	r3
 80154e0:	6823      	ldr	r3, [r4, #0]
 80154e2:	4629      	mov	r1, r5
 80154e4:	4620      	mov	r0, r4
 80154e6:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80154e8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80154ec:	4718      	bx	r3

080154ee <_ZN8touchgfx10TiledImage9getOffsetERsS1_>:
 80154ee:	b570      	push	{r4, r5, r6, lr}
 80154f0:	6803      	ldr	r3, [r0, #0]
 80154f2:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80154f4:	4604      	mov	r4, r0
 80154f6:	460e      	mov	r6, r1
 80154f8:	4615      	mov	r5, r2
 80154fa:	4798      	blx	r3
 80154fc:	8030      	strh	r0, [r6, #0]
 80154fe:	6823      	ldr	r3, [r4, #0]
 8015500:	4620      	mov	r0, r4
 8015502:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8015504:	4798      	blx	r3
 8015506:	8028      	strh	r0, [r5, #0]
 8015508:	bd70      	pop	{r4, r5, r6, pc}

0801550a <_ZN8touchgfx10TiledImage10getXOffsetEv>:
 801550a:	f9b0 002a 	ldrsh.w	r0, [r0, #42]	; 0x2a
 801550e:	4770      	bx	lr

08015510 <_ZN8touchgfx10TiledImage10getYOffsetEv>:
 8015510:	f9b0 002c 	ldrsh.w	r0, [r0, #44]	; 0x2c
 8015514:	4770      	bx	lr

08015516 <_ZN8touchgfx10TiledImageD1Ev>:
 8015516:	4770      	bx	lr

08015518 <_ZN8touchgfx10TiledImage9setBitmapERKNS_6BitmapE>:
 8015518:	b510      	push	{r4, lr}
 801551a:	4604      	mov	r4, r0
 801551c:	f000 fd31 	bl	8015f82 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8015520:	6823      	ldr	r3, [r4, #0]
 8015522:	f9b4 202c 	ldrsh.w	r2, [r4, #44]	; 0x2c
 8015526:	f9b4 102a 	ldrsh.w	r1, [r4, #42]	; 0x2a
 801552a:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 801552c:	4620      	mov	r0, r4
 801552e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015532:	4718      	bx	r3

08015534 <_ZN8touchgfx10TiledImage10setXOffsetEs>:
 8015534:	b538      	push	{r3, r4, r5, lr}
 8015536:	f100 0526 	add.w	r5, r0, #38	; 0x26
 801553a:	4604      	mov	r4, r0
 801553c:	8541      	strh	r1, [r0, #42]	; 0x2a
 801553e:	4628      	mov	r0, r5
 8015540:	f006 fe6e 	bl	801c220 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8015544:	b188      	cbz	r0, 801556a <_ZN8touchgfx10TiledImage10setXOffsetEs+0x36>
 8015546:	4628      	mov	r0, r5
 8015548:	f006 fe6a 	bl	801c220 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801554c:	f9b4 202a 	ldrsh.w	r2, [r4, #42]	; 0x2a
 8015550:	fb92 f3f0 	sdiv	r3, r2, r0
 8015554:	fb03 2010 	mls	r0, r3, r0, r2
 8015558:	2800      	cmp	r0, #0
 801555a:	8560      	strh	r0, [r4, #42]	; 0x2a
 801555c:	da05      	bge.n	801556a <_ZN8touchgfx10TiledImage10setXOffsetEs+0x36>
 801555e:	4628      	mov	r0, r5
 8015560:	f006 fe5e 	bl	801c220 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8015564:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8015566:	4418      	add	r0, r3
 8015568:	8560      	strh	r0, [r4, #42]	; 0x2a
 801556a:	bd38      	pop	{r3, r4, r5, pc}

0801556c <_ZN8touchgfx10TiledImage10setYOffsetEs>:
 801556c:	b538      	push	{r3, r4, r5, lr}
 801556e:	f100 0526 	add.w	r5, r0, #38	; 0x26
 8015572:	4604      	mov	r4, r0
 8015574:	8581      	strh	r1, [r0, #44]	; 0x2c
 8015576:	4628      	mov	r0, r5
 8015578:	f006 fe86 	bl	801c288 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801557c:	b188      	cbz	r0, 80155a2 <_ZN8touchgfx10TiledImage10setYOffsetEs+0x36>
 801557e:	4628      	mov	r0, r5
 8015580:	f006 fe82 	bl	801c288 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8015584:	f9b4 202c 	ldrsh.w	r2, [r4, #44]	; 0x2c
 8015588:	fb92 f3f0 	sdiv	r3, r2, r0
 801558c:	fb03 2010 	mls	r0, r3, r0, r2
 8015590:	2800      	cmp	r0, #0
 8015592:	85a0      	strh	r0, [r4, #44]	; 0x2c
 8015594:	da05      	bge.n	80155a2 <_ZN8touchgfx10TiledImage10setYOffsetEs+0x36>
 8015596:	4628      	mov	r0, r5
 8015598:	f006 fe76 	bl	801c288 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801559c:	8da3      	ldrh	r3, [r4, #44]	; 0x2c
 801559e:	4418      	add	r0, r3
 80155a0:	85a0      	strh	r0, [r4, #44]	; 0x2c
 80155a2:	bd38      	pop	{r3, r4, r5, pc}

080155a4 <_ZN8touchgfx10TiledImageD0Ev>:
 80155a4:	b510      	push	{r4, lr}
 80155a6:	2130      	movs	r1, #48	; 0x30
 80155a8:	4604      	mov	r4, r0
 80155aa:	f017 fa9e 	bl	802caea <_ZdlPvj>
 80155ae:	4620      	mov	r0, r4
 80155b0:	bd10      	pop	{r4, pc}
	...

080155b4 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE>:
 80155b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80155b8:	f100 0b26 	add.w	fp, r0, #38	; 0x26
 80155bc:	b093      	sub	sp, #76	; 0x4c
 80155be:	4607      	mov	r7, r0
 80155c0:	4658      	mov	r0, fp
 80155c2:	460e      	mov	r6, r1
 80155c4:	f006 fe2c 	bl	801c220 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80155c8:	4681      	mov	r9, r0
 80155ca:	4658      	mov	r0, fp
 80155cc:	f006 fe5c 	bl	801c288 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80155d0:	4605      	mov	r5, r0
 80155d2:	f1b9 0f00 	cmp.w	r9, #0
 80155d6:	f000 80c4 	beq.w	8015762 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1ae>
 80155da:	2800      	cmp	r0, #0
 80155dc:	f000 80c1 	beq.w	8015762 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1ae>
 80155e0:	2300      	movs	r3, #0
 80155e2:	e9cd 330e 	strd	r3, r3, [sp, #56]	; 0x38
 80155e6:	683b      	ldr	r3, [r7, #0]
 80155e8:	a90e      	add	r1, sp, #56	; 0x38
 80155ea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80155ec:	4638      	mov	r0, r7
 80155ee:	4798      	blx	r3
 80155f0:	f9b7 202a 	ldrsh.w	r2, [r7, #42]	; 0x2a
 80155f4:	f9b6 3000 	ldrsh.w	r3, [r6]
 80155f8:	88b1      	ldrh	r1, [r6, #4]
 80155fa:	fa1f f889 	uxth.w	r8, r9
 80155fe:	189c      	adds	r4, r3, r2
 8015600:	440b      	add	r3, r1
 8015602:	fa02 f383 	sxtah	r3, r2, r3
 8015606:	fb94 f4f9 	sdiv	r4, r4, r9
 801560a:	fb14 f408 	smulbb	r4, r4, r8
 801560e:	1aa4      	subs	r4, r4, r2
 8015610:	3b01      	subs	r3, #1
 8015612:	b2aa      	uxth	r2, r5
 8015614:	fb93 f3f9 	sdiv	r3, r3, r9
 8015618:	fb13 f308 	smulbb	r3, r3, r8
 801561c:	b21b      	sxth	r3, r3
 801561e:	9205      	str	r2, [sp, #20]
 8015620:	f9b7 102c 	ldrsh.w	r1, [r7, #44]	; 0x2c
 8015624:	9805      	ldr	r0, [sp, #20]
 8015626:	930b      	str	r3, [sp, #44]	; 0x2c
 8015628:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 801562c:	185a      	adds	r2, r3, r1
 801562e:	fb92 f2f5 	sdiv	r2, r2, r5
 8015632:	fb12 f200 	smulbb	r2, r2, r0
 8015636:	1a52      	subs	r2, r2, r1
 8015638:	b212      	sxth	r2, r2
 801563a:	920c      	str	r2, [sp, #48]	; 0x30
 801563c:	88f2      	ldrh	r2, [r6, #6]
 801563e:	4413      	add	r3, r2
 8015640:	fa01 f383 	sxtah	r3, r1, r3
 8015644:	3b01      	subs	r3, #1
 8015646:	fb93 f3f5 	sdiv	r3, r3, r5
 801564a:	fb13 f300 	smulbb	r3, r3, r0
 801564e:	b2a4      	uxth	r4, r4
 8015650:	b21b      	sxth	r3, r3
 8015652:	930d      	str	r3, [sp, #52]	; 0x34
 8015654:	eb08 0504 	add.w	r5, r8, r4
 8015658:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801565a:	b223      	sxth	r3, r4
 801565c:	4293      	cmp	r3, r2
 801565e:	b2ad      	uxth	r5, r5
 8015660:	9306      	str	r3, [sp, #24]
 8015662:	dc7e      	bgt.n	8015762 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1ae>
 8015664:	b22b      	sxth	r3, r5
 8015666:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 801566a:	930a      	str	r3, [sp, #40]	; 0x28
 801566c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801566e:	4599      	cmp	r9, r3
 8015670:	dd03      	ble.n	801567a <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0xc6>
 8015672:	4444      	add	r4, r8
 8015674:	b2a4      	uxth	r4, r4
 8015676:	4445      	add	r5, r8
 8015678:	e7ee      	b.n	8015658 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0xa4>
 801567a:	f9b6 c000 	ldrsh.w	ip, [r6]
 801567e:	88b2      	ldrh	r2, [r6, #4]
 8015680:	9806      	ldr	r0, [sp, #24]
 8015682:	9905      	ldr	r1, [sp, #20]
 8015684:	4462      	add	r2, ip
 8015686:	b292      	uxth	r2, r2
 8015688:	b213      	sxth	r3, r2
 801568a:	9308      	str	r3, [sp, #32]
 801568c:	fa1f f389 	uxth.w	r3, r9
 8015690:	4419      	add	r1, r3
 8015692:	9307      	str	r3, [sp, #28]
 8015694:	4603      	mov	r3, r0
 8015696:	9808      	ldr	r0, [sp, #32]
 8015698:	b289      	uxth	r1, r1
 801569a:	4283      	cmp	r3, r0
 801569c:	fa0f fa81 	sxth.w	sl, r1
 80156a0:	da5b      	bge.n	801575a <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1a6>
 80156a2:	980a      	ldr	r0, [sp, #40]	; 0x28
 80156a4:	4584      	cmp	ip, r0
 80156a6:	da58      	bge.n	801575a <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1a6>
 80156a8:	f9b6 0002 	ldrsh.w	r0, [r6, #2]
 80156ac:	f8b6 e006 	ldrh.w	lr, [r6, #6]
 80156b0:	4486      	add	lr, r0
 80156b2:	fa1f fe8e 	uxth.w	lr, lr
 80156b6:	fa0f f38e 	sxth.w	r3, lr
 80156ba:	4599      	cmp	r9, r3
 80156bc:	9309      	str	r3, [sp, #36]	; 0x24
 80156be:	da4c      	bge.n	801575a <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1a6>
 80156c0:	4550      	cmp	r0, sl
 80156c2:	da4a      	bge.n	801575a <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1a6>
 80156c4:	9b06      	ldr	r3, [sp, #24]
 80156c6:	459c      	cmp	ip, r3
 80156c8:	bfb8      	it	lt
 80156ca:	469c      	movlt	ip, r3
 80156cc:	9b08      	ldr	r3, [sp, #32]
 80156ce:	f8ad c040 	strh.w	ip, [sp, #64]	; 0x40
 80156d2:	4548      	cmp	r0, r9
 80156d4:	bfb8      	it	lt
 80156d6:	4648      	movlt	r0, r9
 80156d8:	4699      	mov	r9, r3
 80156da:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80156dc:	f8ad 0042 	strh.w	r0, [sp, #66]	; 0x42
 80156e0:	4599      	cmp	r9, r3
 80156e2:	bfc8      	it	gt
 80156e4:	462a      	movgt	r2, r5
 80156e6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80156e8:	4553      	cmp	r3, sl
 80156ea:	bfd8      	it	le
 80156ec:	4671      	movle	r1, lr
 80156ee:	eba2 020c 	sub.w	r2, r2, ip
 80156f2:	1a09      	subs	r1, r1, r0
 80156f4:	f8ad 2044 	strh.w	r2, [sp, #68]	; 0x44
 80156f8:	f8ad 1046 	strh.w	r1, [sp, #70]	; 0x46
 80156fc:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 8015700:	9b07      	ldr	r3, [sp, #28]
 8015702:	1b12      	subs	r2, r2, r4
 8015704:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8015708:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 801570c:	1ad2      	subs	r2, r2, r3
 801570e:	4b16      	ldr	r3, [pc, #88]	; (8015768 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1b4>)
 8015710:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 8015714:	681a      	ldr	r2, [r3, #0]
 8015716:	f892 1058 	ldrb.w	r1, [r2, #88]	; 0x58
 801571a:	b109      	cbz	r1, 8015720 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x16c>
 801571c:	6cd0      	ldr	r0, [r2, #76]	; 0x4c
 801571e:	b900      	cbnz	r0, 8015722 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x16e>
 8015720:	6890      	ldr	r0, [r2, #8]
 8015722:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8015726:	9b07      	ldr	r3, [sp, #28]
 8015728:	6801      	ldr	r1, [r0, #0]
 801572a:	f04f 0c01 	mov.w	ip, #1
 801572e:	f8cd c008 	str.w	ip, [sp, #8]
 8015732:	f897 c028 	ldrb.w	ip, [r7, #40]	; 0x28
 8015736:	f8cd c004 	str.w	ip, [sp, #4]
 801573a:	4413      	add	r3, r2
 801573c:	f8bd 2038 	ldrh.w	r2, [sp, #56]	; 0x38
 8015740:	f10d 0c40 	add.w	ip, sp, #64	; 0x40
 8015744:	f8cd c000 	str.w	ip, [sp]
 8015748:	4422      	add	r2, r4
 801574a:	f8d1 9008 	ldr.w	r9, [r1, #8]
 801574e:	b21b      	sxth	r3, r3
 8015750:	b212      	sxth	r2, r2
 8015752:	4659      	mov	r1, fp
 8015754:	47c8      	blx	r9
 8015756:	46d1      	mov	r9, sl
 8015758:	e788      	b.n	801566c <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0xb8>
 801575a:	2300      	movs	r3, #0
 801575c:	e9cd 3310 	strd	r3, r3, [sp, #64]	; 0x40
 8015760:	e7cc      	b.n	80156fc <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x148>
 8015762:	b013      	add	sp, #76	; 0x4c
 8015764:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015768:	2001384c 	.word	0x2001384c

0801576c <_ZNK8touchgfx10TiledImage12getSolidRectEv>:
 801576c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015770:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 8015774:	2bff      	cmp	r3, #255	; 0xff
 8015776:	4606      	mov	r6, r0
 8015778:	4689      	mov	r9, r1
 801577a:	d008      	beq.n	801578e <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x22>
 801577c:	2300      	movs	r3, #0
 801577e:	8003      	strh	r3, [r0, #0]
 8015780:	8043      	strh	r3, [r0, #2]
 8015782:	8083      	strh	r3, [r0, #4]
 8015784:	4630      	mov	r0, r6
 8015786:	80f3      	strh	r3, [r6, #6]
 8015788:	b003      	add	sp, #12
 801578a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801578e:	f101 0b26 	add.w	fp, r1, #38	; 0x26
 8015792:	4659      	mov	r1, fp
 8015794:	4668      	mov	r0, sp
 8015796:	f006 fdab 	bl	801c2f0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801579a:	4658      	mov	r0, fp
 801579c:	f9bd 4004 	ldrsh.w	r4, [sp, #4]
 80157a0:	f9bd 7000 	ldrsh.w	r7, [sp]
 80157a4:	f9bd a002 	ldrsh.w	sl, [sp, #2]
 80157a8:	f9bd 8006 	ldrsh.w	r8, [sp, #6]
 80157ac:	f006 fd38 	bl	801c220 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80157b0:	4284      	cmp	r4, r0
 80157b2:	d10d      	bne.n	80157d0 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x64>
 80157b4:	f9b9 5008 	ldrsh.w	r5, [r9, #8]
 80157b8:	4658      	mov	r0, fp
 80157ba:	f006 fd65 	bl	801c288 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80157be:	4580      	cmp	r8, r0
 80157c0:	d129      	bne.n	8015816 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0xaa>
 80157c2:	f9b9 300a 	ldrsh.w	r3, [r9, #10]
 80157c6:	8037      	strh	r7, [r6, #0]
 80157c8:	f8a6 a002 	strh.w	sl, [r6, #2]
 80157cc:	80b5      	strh	r5, [r6, #4]
 80157ce:	e7d9      	b.n	8015784 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x18>
 80157d0:	f8b9 502a 	ldrh.w	r5, [r9, #42]	; 0x2a
 80157d4:	4658      	mov	r0, fp
 80157d6:	f006 fd23 	bl	801c220 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80157da:	1b7f      	subs	r7, r7, r5
 80157dc:	b2bd      	uxth	r5, r7
 80157de:	b22f      	sxth	r7, r5
 80157e0:	4428      	add	r0, r5
 80157e2:	2f00      	cmp	r7, #0
 80157e4:	b2a3      	uxth	r3, r4
 80157e6:	b280      	uxth	r0, r0
 80157e8:	bfb8      	it	lt
 80157ea:	18ed      	addlt	r5, r5, r3
 80157ec:	4403      	add	r3, r0
 80157ee:	b29b      	uxth	r3, r3
 80157f0:	f9b9 2008 	ldrsh.w	r2, [r9, #8]
 80157f4:	bfb8      	it	lt
 80157f6:	b22d      	sxthlt	r5, r5
 80157f8:	b219      	sxth	r1, r3
 80157fa:	bfae      	itee	ge
 80157fc:	4625      	movge	r5, r4
 80157fe:	ea25 75e5 	biclt.w	r5, r5, r5, asr #31
 8015802:	2700      	movlt	r7, #0
 8015804:	4291      	cmp	r1, r2
 8015806:	bfc4      	itt	gt
 8015808:	1a9c      	subgt	r4, r3, r2
 801580a:	b224      	sxthgt	r4, r4
 801580c:	42ac      	cmp	r4, r5
 801580e:	bfc4      	itt	gt
 8015810:	b207      	sxthgt	r7, r0
 8015812:	4625      	movgt	r5, r4
 8015814:	e7d0      	b.n	80157b8 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x4c>
 8015816:	f8b9 402c 	ldrh.w	r4, [r9, #44]	; 0x2c
 801581a:	4658      	mov	r0, fp
 801581c:	f006 fd34 	bl	801c288 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8015820:	ebaa 0404 	sub.w	r4, sl, r4
 8015824:	b2a4      	uxth	r4, r4
 8015826:	fa0f fa84 	sxth.w	sl, r4
 801582a:	4420      	add	r0, r4
 801582c:	f1ba 0f00 	cmp.w	sl, #0
 8015830:	fa1f f288 	uxth.w	r2, r8
 8015834:	b280      	uxth	r0, r0
 8015836:	bfb8      	it	lt
 8015838:	18a3      	addlt	r3, r4, r2
 801583a:	4402      	add	r2, r0
 801583c:	b292      	uxth	r2, r2
 801583e:	f9b9 100a 	ldrsh.w	r1, [r9, #10]
 8015842:	bfb8      	it	lt
 8015844:	b21b      	sxthlt	r3, r3
 8015846:	b214      	sxth	r4, r2
 8015848:	bfae      	itee	ge
 801584a:	4643      	movge	r3, r8
 801584c:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8015850:	f04f 0a00 	movlt.w	sl, #0
 8015854:	428c      	cmp	r4, r1
 8015856:	bfc4      	itt	gt
 8015858:	eba2 0801 	subgt.w	r8, r2, r1
 801585c:	fa0f f888 	sxthgt.w	r8, r8
 8015860:	4598      	cmp	r8, r3
 8015862:	bfc4      	itt	gt
 8015864:	fa0f fa80 	sxthgt.w	sl, r0
 8015868:	4643      	movgt	r3, r8
 801586a:	e7ac      	b.n	80157c6 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x5a>

0801586c <_ZNK8touchgfx5Image17invalidateContentEv>:
 801586c:	f890 2028 	ldrb.w	r2, [r0, #40]	; 0x28
 8015870:	b12a      	cbz	r2, 801587e <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 8015872:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8015876:	b112      	cbz	r2, 801587e <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 8015878:	6803      	ldr	r3, [r0, #0]
 801587a:	695b      	ldr	r3, [r3, #20]
 801587c:	4718      	bx	r3
 801587e:	4770      	bx	lr

08015880 <_ZNK8touchgfx5Gauge9getCenterERiS1_>:
 8015880:	f9b0 3150 	ldrsh.w	r3, [r0, #336]	; 0x150
 8015884:	600b      	str	r3, [r1, #0]
 8015886:	f9b0 3152 	ldrsh.w	r3, [r0, #338]	; 0x152
 801588a:	6013      	str	r3, [r2, #0]
 801588c:	4770      	bx	lr

0801588e <_ZN8touchgfx5Gauge8setWidthEs>:
 801588e:	8101      	strh	r1, [r0, #8]
 8015890:	f8a0 10bc 	strh.w	r1, [r0, #188]	; 0xbc
 8015894:	f8a0 1160 	strh.w	r1, [r0, #352]	; 0x160
 8015898:	4770      	bx	lr

0801589a <_ZN8touchgfx5Gauge9setHeightEs>:
 801589a:	8141      	strh	r1, [r0, #10]
 801589c:	f8a0 10be 	strh.w	r1, [r0, #190]	; 0xbe
 80158a0:	f8a0 1162 	strh.w	r1, [r0, #354]	; 0x162
 80158a4:	4770      	bx	lr

080158a6 <_ZNK8touchgfx5Gauge13getStartAngleEv>:
 80158a6:	f8d0 0148 	ldr.w	r0, [r0, #328]	; 0x148
 80158aa:	4770      	bx	lr

080158ac <_ZNK8touchgfx5Gauge11getEndAngleEv>:
 80158ac:	f8d0 014c 	ldr.w	r0, [r0, #332]	; 0x14c
 80158b0:	4770      	bx	lr

080158b2 <_ZN8touchgfx5Gauge28setProgressIndicatorPositionEssss>:
 80158b2:	4770      	bx	lr

080158b4 <_ZN8touchgfx5GaugeD1Ev>:
 80158b4:	4770      	bx	lr

080158b6 <_ZN8touchgfx5Gauge8setAlphaEh>:
 80158b6:	b538      	push	{r3, r4, r5, lr}
 80158b8:	4604      	mov	r4, r0
 80158ba:	460d      	mov	r5, r1
 80158bc:	f7fc fe07 	bl	80124ce <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>
 80158c0:	f884 50dc 	strb.w	r5, [r4, #220]	; 0xdc
 80158c4:	f884 517e 	strb.w	r5, [r4, #382]	; 0x17e
 80158c8:	bd38      	pop	{r3, r4, r5, pc}

080158ca <_ZN8touchgfx5GaugeD0Ev>:
 80158ca:	b510      	push	{r4, lr}
 80158cc:	f44f 71d0 	mov.w	r1, #416	; 0x1a0
 80158d0:	4604      	mov	r4, r0
 80158d2:	f017 f90a 	bl	802caea <_ZdlPvj>
 80158d6:	4620      	mov	r0, r4
 80158d8:	bd10      	pop	{r4, pc}

080158da <_ZNK8touchgfx5Gauge17invalidateContentEv>:
 80158da:	b510      	push	{r4, lr}
 80158dc:	6803      	ldr	r3, [r0, #0]
 80158de:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 80158e2:	4604      	mov	r4, r0
 80158e4:	4798      	blx	r3
 80158e6:	b170      	cbz	r0, 8015906 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 80158e8:	6823      	ldr	r3, [r4, #0]
 80158ea:	4620      	mov	r0, r4
 80158ec:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 80158f0:	4798      	blx	r3
 80158f2:	b140      	cbz	r0, 8015906 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 80158f4:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 80158f8:	b12b      	cbz	r3, 8015906 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 80158fa:	6823      	ldr	r3, [r4, #0]
 80158fc:	4620      	mov	r0, r4
 80158fe:	695b      	ldr	r3, [r3, #20]
 8015900:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015904:	4718      	bx	r3
 8015906:	bd10      	pop	{r4, pc}

08015908 <_ZN8touchgfx5GaugeC1Ev>:
 8015908:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801590a:	4604      	mov	r4, r0
 801590c:	4626      	mov	r6, r4
 801590e:	f7fc feff 	bl	8012710 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>
 8015912:	4b18      	ldr	r3, [pc, #96]	; (8015974 <_ZN8touchgfx5GaugeC1Ev+0x6c>)
 8015914:	f846 3bb4 	str.w	r3, [r6], #180
 8015918:	a902      	add	r1, sp, #8
 801591a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 801591e:	f821 3d04 	strh.w	r3, [r1, #-4]!
 8015922:	4630      	mov	r0, r6
 8015924:	f015 f9a4 	bl	802ac70 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>
 8015928:	2500      	movs	r5, #0
 801592a:	2301      	movs	r3, #1
 801592c:	f504 77ac 	add.w	r7, r4, #344	; 0x158
 8015930:	f884 3144 	strb.w	r3, [r4, #324]	; 0x144
 8015934:	f884 3145 	strb.w	r3, [r4, #325]	; 0x145
 8015938:	f8c4 5148 	str.w	r5, [r4, #328]	; 0x148
 801593c:	f8c4 514c 	str.w	r5, [r4, #332]	; 0x14c
 8015940:	f8c4 5150 	str.w	r5, [r4, #336]	; 0x150
 8015944:	f8c4 5154 	str.w	r5, [r4, #340]	; 0x154
 8015948:	4638      	mov	r0, r7
 801594a:	f014 fbd5 	bl	802a0f8 <_ZN8touchgfx6CircleC1Ev>
 801594e:	f104 0158 	add.w	r1, r4, #88	; 0x58
 8015952:	4620      	mov	r0, r4
 8015954:	f7fc ff7d 	bl	8012852 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 8015958:	4639      	mov	r1, r7
 801595a:	4620      	mov	r0, r4
 801595c:	f7fc ff38 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8015960:	4620      	mov	r0, r4
 8015962:	4631      	mov	r1, r6
 8015964:	f7fc ff34 	bl	80127d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8015968:	4620      	mov	r0, r4
 801596a:	f884 517d 	strb.w	r5, [r4, #381]	; 0x17d
 801596e:	b003      	add	sp, #12
 8015970:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8015972:	bf00      	nop
 8015974:	08031a94 	.word	0x08031a94

08015978 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 8015978:	f880 1144 	strb.w	r1, [r0, #324]	; 0x144
 801597c:	4770      	bx	lr

0801597e <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 801597e:	f880 1145 	strb.w	r1, [r0, #325]	; 0x145
 8015982:	4770      	bx	lr

08015984 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>:
 8015984:	b538      	push	{r3, r4, r5, lr}
 8015986:	8902      	ldrh	r2, [r0, #8]
 8015988:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 801598c:	f8a0 20bc 	strh.w	r2, [r0, #188]	; 0xbc
 8015990:	4604      	mov	r4, r0
 8015992:	f100 05b4 	add.w	r5, r0, #180	; 0xb4
 8015996:	2200      	movs	r2, #0
 8015998:	4611      	mov	r1, r2
 801599a:	f8a0 30be 	strh.w	r3, [r0, #190]	; 0xbe
 801599e:	4628      	mov	r0, r5
 80159a0:	f7ed fe1c 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 80159a4:	f9b4 2156 	ldrsh.w	r2, [r4, #342]	; 0x156
 80159a8:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 80159ac:	1a9b      	subs	r3, r3, r2
 80159ae:	ee07 3a90 	vmov	s15, r3
 80159b2:	f9b4 2154 	ldrsh.w	r2, [r4, #340]	; 0x154
 80159b6:	f9b4 3150 	ldrsh.w	r3, [r4, #336]	; 0x150
 80159ba:	1a9b      	subs	r3, r3, r2
 80159bc:	ee07 3a10 	vmov	s14, r3
 80159c0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80159c4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80159c8:	edc4 7a39 	vstr	s15, [r4, #228]	; 0xe4
 80159cc:	ed84 7a38 	vstr	s14, [r4, #224]	; 0xe0
 80159d0:	4628      	mov	r0, r5
 80159d2:	f015 f999 	bl	802ad08 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 80159d6:	4b16      	ldr	r3, [pc, #88]	; (8015a30 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv+0xac>)
 80159d8:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
 80159dc:	4628      	mov	r0, r5
 80159de:	f015 f993 	bl	802ad08 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 80159e2:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 80159e6:	f9b4 2150 	ldrsh.w	r2, [r4, #336]	; 0x150
 80159ea:	ee07 3a90 	vmov	s15, r3
 80159ee:	ee07 2a10 	vmov	s14, r2
 80159f2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80159f6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80159fa:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 80159fe:	ed84 7a3e 	vstr	s14, [r4, #248]	; 0xf8
 8015a02:	edc4 7a3f 	vstr	s15, [r4, #252]	; 0xfc
 8015a06:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8015a0a:	4628      	mov	r0, r5
 8015a0c:	f015 f97c 	bl	802ad08 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8015a10:	f8d4 30fc 	ldr.w	r3, [r4, #252]	; 0xfc
 8015a14:	f8d4 20f8 	ldr.w	r2, [r4, #248]	; 0xf8
 8015a18:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 8015a1c:	f8c4 2104 	str.w	r2, [r4, #260]	; 0x104
 8015a20:	4628      	mov	r0, r5
 8015a22:	f015 f971 	bl	802ad08 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8015a26:	2301      	movs	r3, #1
 8015a28:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 8015a2c:	bd38      	pop	{r3, r4, r5, pc}
 8015a2e:	bf00      	nop
 8015a30:	43960000 	.word	0x43960000

08015a34 <_ZN8touchgfx5Gauge9setNeedleEtss>:
 8015a34:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8015a36:	4604      	mov	r4, r0
 8015a38:	a802      	add	r0, sp, #8
 8015a3a:	4616      	mov	r6, r2
 8015a3c:	f820 1d04 	strh.w	r1, [r0, #-4]!
 8015a40:	461d      	mov	r5, r3
 8015a42:	4601      	mov	r1, r0
 8015a44:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 8015a48:	f015 fab4 	bl	802afb4 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>
 8015a4c:	f8a4 6154 	strh.w	r6, [r4, #340]	; 0x154
 8015a50:	f8a4 5156 	strh.w	r5, [r4, #342]	; 0x156
 8015a54:	4620      	mov	r0, r4
 8015a56:	f7ff ff95 	bl	8015984 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 8015a5a:	b002      	add	sp, #8
 8015a5c:	bd70      	pop	{r4, r5, r6, pc}

08015a5e <_ZN8touchgfx5Gauge9setCenterEii>:
 8015a5e:	b570      	push	{r4, r5, r6, lr}
 8015a60:	4606      	mov	r6, r0
 8015a62:	460d      	mov	r5, r1
 8015a64:	f8a6 1150 	strh.w	r1, [r6, #336]	; 0x150
 8015a68:	f8a6 2152 	strh.w	r2, [r6, #338]	; 0x152
 8015a6c:	4614      	mov	r4, r2
 8015a6e:	f7ff ff89 	bl	8015984 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 8015a72:	f9b6 215e 	ldrsh.w	r2, [r6, #350]	; 0x15e
 8015a76:	f9b6 115c 	ldrsh.w	r1, [r6, #348]	; 0x15c
 8015a7a:	1aa4      	subs	r4, r4, r2
 8015a7c:	1a6d      	subs	r5, r5, r1
 8015a7e:	0164      	lsls	r4, r4, #5
 8015a80:	016d      	lsls	r5, r5, #5
 8015a82:	3410      	adds	r4, #16
 8015a84:	3510      	adds	r5, #16
 8015a86:	f8c6 5184 	str.w	r5, [r6, #388]	; 0x184
 8015a8a:	f8c6 4188 	str.w	r4, [r6, #392]	; 0x188
 8015a8e:	bd70      	pop	{r4, r5, r6, pc}

08015a90 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>:
 8015a90:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8015a92:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 8015a94:	0149      	lsls	r1, r1, #5
 8015a96:	4299      	cmp	r1, r3
 8015a98:	4604      	mov	r4, r0
 8015a9a:	9101      	str	r1, [sp, #4]
 8015a9c:	d00b      	beq.n	8015ab6 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_+0x26>
 8015a9e:	4601      	mov	r1, r0
 8015aa0:	aa01      	add	r2, sp, #4
 8015aa2:	a802      	add	r0, sp, #8
 8015aa4:	f014 fd26 	bl	802a4f4 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>
 8015aa8:	9b01      	ldr	r3, [sp, #4]
 8015aaa:	63e3      	str	r3, [r4, #60]	; 0x3c
 8015aac:	6823      	ldr	r3, [r4, #0]
 8015aae:	a902      	add	r1, sp, #8
 8015ab0:	691b      	ldr	r3, [r3, #16]
 8015ab2:	4620      	mov	r0, r4
 8015ab4:	4798      	blx	r3
 8015ab6:	b004      	add	sp, #16
 8015ab8:	bd10      	pop	{r4, pc}
	...

08015abc <_ZN8touchgfx5Gauge8setValueEi>:
 8015abc:	b570      	push	{r4, r5, r6, lr}
 8015abe:	4604      	mov	r4, r0
 8015ac0:	f7fc fd58 	bl	8012574 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>
 8015ac4:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 8015ac8:	429a      	cmp	r2, r3
 8015aca:	bfac      	ite	ge
 8015acc:	f894 3145 	ldrbge.w	r3, [r4, #325]	; 0x145
 8015ad0:	f894 3144 	ldrblt.w	r3, [r4, #324]	; 0x144
 8015ad4:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 8015ad8:	f8d4 114c 	ldr.w	r1, [r4, #332]	; 0x14c
 8015adc:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 8015ae0:	1ac9      	subs	r1, r1, r3
 8015ae2:	2900      	cmp	r1, #0
 8015ae4:	bfb8      	it	lt
 8015ae6:	4249      	neglt	r1, r1
 8015ae8:	b289      	uxth	r1, r1
 8015aea:	4620      	mov	r0, r4
 8015aec:	f7fc fd64 	bl	80125b8 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>
 8015af0:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 8015af4:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
 8015af8:	eddf 6a19 	vldr	s13, [pc, #100]	; 8015b60 <_ZN8touchgfx5Gauge8setValueEi+0xa4>
 8015afc:	ed9f 7a19 	vldr	s14, [pc, #100]	; 8015b64 <_ZN8touchgfx5Gauge8setValueEi+0xa8>
 8015b00:	429a      	cmp	r2, r3
 8015b02:	4605      	mov	r5, r0
 8015b04:	f504 76ac 	add.w	r6, r4, #344	; 0x158
 8015b08:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 8015b0c:	da15      	bge.n	8015b3a <_ZN8touchgfx5Gauge8setValueEi+0x7e>
 8015b0e:	1b5b      	subs	r3, r3, r5
 8015b10:	ee07 3a90 	vmov	s15, r3
 8015b14:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8015b18:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 8015b1c:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 8015b20:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 8015b24:	ee21 1a07 	vmul.f32	s2, s2, s14
 8015b28:	f015 f85d 	bl	802abe6 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 8015b2c:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 8015b30:	1b49      	subs	r1, r1, r5
 8015b32:	4630      	mov	r0, r6
 8015b34:	f7ff ffac 	bl	8015a90 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>
 8015b38:	bd70      	pop	{r4, r5, r6, pc}
 8015b3a:	442b      	add	r3, r5
 8015b3c:	ee07 3a90 	vmov	s15, r3
 8015b40:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8015b44:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 8015b48:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 8015b4c:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 8015b50:	ee21 1a07 	vmul.f32	s2, s2, s14
 8015b54:	f015 f847 	bl	802abe6 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 8015b58:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 8015b5c:	4429      	add	r1, r5
 8015b5e:	e7e8      	b.n	8015b32 <_ZN8touchgfx5Gauge8setValueEi+0x76>
 8015b60:	43340000 	.word	0x43340000
 8015b64:	40490fdb 	.word	0x40490fdb

08015b68 <_ZN8touchgfx5Gauge16setStartEndAngleEii>:
 8015b68:	b510      	push	{r4, lr}
 8015b6a:	f8c0 1148 	str.w	r1, [r0, #328]	; 0x148
 8015b6e:	f8c0 214c 	str.w	r2, [r0, #332]	; 0x14c
 8015b72:	0149      	lsls	r1, r1, #5
 8015b74:	0152      	lsls	r2, r2, #5
 8015b76:	f8c0 1190 	str.w	r1, [r0, #400]	; 0x190
 8015b7a:	f8c0 2194 	str.w	r2, [r0, #404]	; 0x194
 8015b7e:	4604      	mov	r4, r0
 8015b80:	f7fc fca2 	bl	80124c8 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>
 8015b84:	4601      	mov	r1, r0
 8015b86:	4620      	mov	r0, r4
 8015b88:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015b8c:	f7ff bf96 	b.w	8015abc <_ZN8touchgfx5Gauge8setValueEi>

08015b90 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 8015b90:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8015b94:	4770      	bx	lr

08015b96 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 8015b96:	b570      	push	{r4, r5, r6, lr}
 8015b98:	880b      	ldrh	r3, [r1, #0]
 8015b9a:	85c3      	strh	r3, [r0, #46]	; 0x2e
 8015b9c:	4605      	mov	r5, r0
 8015b9e:	8813      	ldrh	r3, [r2, #0]
 8015ba0:	f825 3f30 	strh.w	r3, [r5, #48]!
 8015ba4:	4604      	mov	r4, r0
 8015ba6:	4628      	mov	r0, r5
 8015ba8:	f006 fb3a 	bl	801c220 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8015bac:	4606      	mov	r6, r0
 8015bae:	4628      	mov	r0, r5
 8015bb0:	f006 fb6a 	bl	801c288 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8015bb4:	6823      	ldr	r3, [r4, #0]
 8015bb6:	4605      	mov	r5, r0
 8015bb8:	4631      	mov	r1, r6
 8015bba:	4620      	mov	r0, r4
 8015bbc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015bbe:	4798      	blx	r3
 8015bc0:	6823      	ldr	r3, [r4, #0]
 8015bc2:	4629      	mov	r1, r5
 8015bc4:	4620      	mov	r0, r4
 8015bc6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8015bc8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015bcc:	4718      	bx	r3

08015bce <_ZN8touchgfx14AbstractButton13executeActionEv>:
 8015bce:	b510      	push	{r4, lr}
 8015bd0:	4604      	mov	r4, r0
 8015bd2:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8015bd4:	b150      	cbz	r0, 8015bec <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8015bd6:	6803      	ldr	r3, [r0, #0]
 8015bd8:	68db      	ldr	r3, [r3, #12]
 8015bda:	4798      	blx	r3
 8015bdc:	b130      	cbz	r0, 8015bec <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8015bde:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8015be0:	6803      	ldr	r3, [r0, #0]
 8015be2:	4621      	mov	r1, r4
 8015be4:	689b      	ldr	r3, [r3, #8]
 8015be6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015bea:	4718      	bx	r3
 8015bec:	bd10      	pop	{r4, pc}

08015bee <_ZNK8touchgfx6Button12getSolidRectEv>:
 8015bee:	b510      	push	{r4, lr}
 8015bf0:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 8015bf4:	2bff      	cmp	r3, #255	; 0xff
 8015bf6:	4604      	mov	r4, r0
 8015bf8:	d006      	beq.n	8015c08 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 8015bfa:	2300      	movs	r3, #0
 8015bfc:	8003      	strh	r3, [r0, #0]
 8015bfe:	8043      	strh	r3, [r0, #2]
 8015c00:	8083      	strh	r3, [r0, #4]
 8015c02:	80c3      	strh	r3, [r0, #6]
 8015c04:	4620      	mov	r0, r4
 8015c06:	bd10      	pop	{r4, pc}
 8015c08:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 8015c0c:	b11b      	cbz	r3, 8015c16 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 8015c0e:	3130      	adds	r1, #48	; 0x30
 8015c10:	f006 fb6e 	bl	801c2f0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8015c14:	e7f6      	b.n	8015c04 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 8015c16:	312e      	adds	r1, #46	; 0x2e
 8015c18:	e7fa      	b.n	8015c10 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

08015c1c <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 8015c1c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015c20:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8015c24:	b08a      	sub	sp, #40	; 0x28
 8015c26:	4604      	mov	r4, r0
 8015c28:	4688      	mov	r8, r1
 8015c2a:	2b00      	cmp	r3, #0
 8015c2c:	d066      	beq.n	8015cfc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 8015c2e:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8015c30:	f8ad 3014 	strh.w	r3, [sp, #20]
 8015c34:	a805      	add	r0, sp, #20
 8015c36:	f006 faf3 	bl	801c220 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8015c3a:	4607      	mov	r7, r0
 8015c3c:	a805      	add	r0, sp, #20
 8015c3e:	f006 fb23 	bl	801c288 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8015c42:	f9b8 6000 	ldrsh.w	r6, [r8]
 8015c46:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 8015c4a:	4432      	add	r2, r6
 8015c4c:	b292      	uxth	r2, r2
 8015c4e:	2300      	movs	r3, #0
 8015c50:	fa0f fc82 	sxth.w	ip, r2
 8015c54:	459c      	cmp	ip, r3
 8015c56:	9306      	str	r3, [sp, #24]
 8015c58:	dd52      	ble.n	8015d00 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8015c5a:	42b7      	cmp	r7, r6
 8015c5c:	dd50      	ble.n	8015d00 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8015c5e:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 8015c62:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8015c66:	442b      	add	r3, r5
 8015c68:	b29b      	uxth	r3, r3
 8015c6a:	b219      	sxth	r1, r3
 8015c6c:	2900      	cmp	r1, #0
 8015c6e:	dd47      	ble.n	8015d00 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8015c70:	42a8      	cmp	r0, r5
 8015c72:	dd45      	ble.n	8015d00 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8015c74:	4567      	cmp	r7, ip
 8015c76:	bfb8      	it	lt
 8015c78:	b2ba      	uxthlt	r2, r7
 8015c7a:	4288      	cmp	r0, r1
 8015c7c:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 8015c80:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8015c84:	bfb8      	it	lt
 8015c86:	b283      	uxthlt	r3, r0
 8015c88:	1b92      	subs	r2, r2, r6
 8015c8a:	1b5b      	subs	r3, r3, r5
 8015c8c:	f8ad 201c 	strh.w	r2, [sp, #28]
 8015c90:	f8ad 301e 	strh.w	r3, [sp, #30]
 8015c94:	f8ad 6018 	strh.w	r6, [sp, #24]
 8015c98:	f8ad 501a 	strh.w	r5, [sp, #26]
 8015c9c:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8015ca0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8015ca4:	429a      	cmp	r2, r3
 8015ca6:	d026      	beq.n	8015cf6 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8015ca8:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8015cac:	2b00      	cmp	r3, #0
 8015cae:	dd22      	ble.n	8015cf6 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8015cb0:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8015cb4:	2b00      	cmp	r3, #0
 8015cb6:	dd1e      	ble.n	8015cf6 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8015cb8:	2300      	movs	r3, #0
 8015cba:	e9cd 3308 	strd	r3, r3, [sp, #32]
 8015cbe:	6823      	ldr	r3, [r4, #0]
 8015cc0:	a908      	add	r1, sp, #32
 8015cc2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8015cc4:	4620      	mov	r0, r4
 8015cc6:	4798      	blx	r3
 8015cc8:	4b0f      	ldr	r3, [pc, #60]	; (8015d08 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 8015cca:	681b      	ldr	r3, [r3, #0]
 8015ccc:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8015cd0:	b10a      	cbz	r2, 8015cd6 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 8015cd2:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8015cd4:	b900      	cbnz	r0, 8015cd8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 8015cd6:	6898      	ldr	r0, [r3, #8]
 8015cd8:	6801      	ldr	r1, [r0, #0]
 8015cda:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8015cde:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8015ce2:	2501      	movs	r5, #1
 8015ce4:	9502      	str	r5, [sp, #8]
 8015ce6:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 8015cea:	9401      	str	r4, [sp, #4]
 8015cec:	ac06      	add	r4, sp, #24
 8015cee:	9400      	str	r4, [sp, #0]
 8015cf0:	688c      	ldr	r4, [r1, #8]
 8015cf2:	a905      	add	r1, sp, #20
 8015cf4:	47a0      	blx	r4
 8015cf6:	b00a      	add	sp, #40	; 0x28
 8015cf8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8015cfc:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 8015cfe:	e797      	b.n	8015c30 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 8015d00:	2300      	movs	r3, #0
 8015d02:	9307      	str	r3, [sp, #28]
 8015d04:	e7ca      	b.n	8015c9c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 8015d06:	bf00      	nop
 8015d08:	2001384c 	.word	0x2001384c

08015d0c <_ZNK8touchgfx6Button17invalidateContentEv>:
 8015d0c:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 8015d10:	b12a      	cbz	r2, 8015d1e <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8015d12:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8015d16:	b112      	cbz	r2, 8015d1e <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8015d18:	6803      	ldr	r3, [r0, #0]
 8015d1a:	695b      	ldr	r3, [r3, #20]
 8015d1c:	4718      	bx	r3
 8015d1e:	4770      	bx	lr

08015d20 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 8015d20:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8015d24:	4b2f      	ldr	r3, [pc, #188]	; (8015de4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 8015d26:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8015d28:	881b      	ldrh	r3, [r3, #0]
 8015d2a:	4293      	cmp	r3, r2
 8015d2c:	b08d      	sub	sp, #52	; 0x34
 8015d2e:	4604      	mov	r4, r0
 8015d30:	460f      	mov	r7, r1
 8015d32:	d954      	bls.n	8015dde <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8015d34:	4b2c      	ldr	r3, [pc, #176]	; (8015de8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 8015d36:	6819      	ldr	r1, [r3, #0]
 8015d38:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 8015d3c:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 8015d40:	4a2a      	ldr	r2, [pc, #168]	; (8015dec <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 8015d42:	6812      	ldr	r2, [r2, #0]
 8015d44:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 8015d48:	2900      	cmp	r1, #0
 8015d4a:	d048      	beq.n	8015dde <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8015d4c:	785a      	ldrb	r2, [r3, #1]
 8015d4e:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 8015d52:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 8015d56:	4b26      	ldr	r3, [pc, #152]	; (8015df0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 8015d58:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
 8015d5c:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 8015d60:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 8015d64:	6b26      	ldr	r6, [r4, #48]	; 0x30
 8015d66:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
 8015d6a:	9107      	str	r1, [sp, #28]
 8015d6c:	f3c2 0801 	ubfx	r8, r2, #0, #2
 8015d70:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8015d74:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
 8015d78:	681a      	ldr	r2, [r3, #0]
 8015d7a:	f88d 8020 	strb.w	r8, [sp, #32]
 8015d7e:	f892 3058 	ldrb.w	r3, [r2, #88]	; 0x58
 8015d82:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 8015d86:	9609      	str	r6, [sp, #36]	; 0x24
 8015d88:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 8015d8c:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
 8015d90:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
 8015d94:	b10b      	cbz	r3, 8015d9a <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 8015d96:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
 8015d98:	b905      	cbnz	r5, 8015d9c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 8015d9a:	6895      	ldr	r5, [r2, #8]
 8015d9c:	ae05      	add	r6, sp, #20
 8015d9e:	4621      	mov	r1, r4
 8015da0:	4630      	mov	r0, r6
 8015da2:	f003 ff71 	bl	8019c88 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8015da6:	4b13      	ldr	r3, [pc, #76]	; (8015df4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 8015da8:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8015daa:	6818      	ldr	r0, [r3, #0]
 8015dac:	f7f4 fc54 	bl	800a658 <_ZNK8touchgfx5Texts7getTextEt>
 8015db0:	6823      	ldr	r3, [r4, #0]
 8015db2:	4680      	mov	r8, r0
 8015db4:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8015db6:	4620      	mov	r0, r4
 8015db8:	4798      	blx	r3
 8015dba:	6823      	ldr	r3, [r4, #0]
 8015dbc:	4681      	mov	r9, r0
 8015dbe:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8015dc2:	4620      	mov	r0, r4
 8015dc4:	4798      	blx	r3
 8015dc6:	e9cd 9002 	strd	r9, r0, [sp, #8]
 8015dca:	ab07      	add	r3, sp, #28
 8015dcc:	9300      	str	r3, [sp, #0]
 8015dce:	f8cd 8004 	str.w	r8, [sp, #4]
 8015dd2:	463b      	mov	r3, r7
 8015dd4:	e896 0006 	ldmia.w	r6, {r1, r2}
 8015dd8:	4628      	mov	r0, r5
 8015dda:	f7f4 fbef 	bl	800a5bc <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8015dde:	b00d      	add	sp, #52	; 0x34
 8015de0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8015de4:	200138a8 	.word	0x200138a8
 8015de8:	200138a4 	.word	0x200138a4
 8015dec:	200138ac 	.word	0x200138ac
 8015df0:	2001384c 	.word	0x2001384c
 8015df4:	200138b0 	.word	0x200138b0

08015df8 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_>:
 8015df8:	4770      	bx	lr

08015dfa <_ZN8touchgfx14ButtonWithIconD1Ev>:
 8015dfa:	4770      	bx	lr

08015dfc <_ZN8touchgfx14ButtonWithIconD0Ev>:
 8015dfc:	b510      	push	{r4, lr}
 8015dfe:	213c      	movs	r1, #60	; 0x3c
 8015e00:	4604      	mov	r4, r0
 8015e02:	f016 fe72 	bl	802caea <_ZdlPvj>
 8015e06:	4620      	mov	r0, r4
 8015e08:	bd10      	pop	{r4, pc}

08015e0a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>:
 8015e0a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015e0e:	461c      	mov	r4, r3
 8015e10:	4606      	mov	r6, r0
 8015e12:	9f06      	ldr	r7, [sp, #24]
 8015e14:	f7ff febf 	bl	8015b96 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8015e18:	8823      	ldrh	r3, [r4, #0]
 8015e1a:	86b3      	strh	r3, [r6, #52]	; 0x34
 8015e1c:	883b      	ldrh	r3, [r7, #0]
 8015e1e:	86f3      	strh	r3, [r6, #54]	; 0x36
 8015e20:	4638      	mov	r0, r7
 8015e22:	f9b6 5008 	ldrsh.w	r5, [r6, #8]
 8015e26:	f006 f9fb 	bl	801c220 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8015e2a:	f04f 0802 	mov.w	r8, #2
 8015e2e:	fb95 f5f8 	sdiv	r5, r5, r8
 8015e32:	b2ad      	uxth	r5, r5
 8015e34:	fb90 f0f8 	sdiv	r0, r0, r8
 8015e38:	1a2d      	subs	r5, r5, r0
 8015e3a:	8735      	strh	r5, [r6, #56]	; 0x38
 8015e3c:	4638      	mov	r0, r7
 8015e3e:	f9b6 400a 	ldrsh.w	r4, [r6, #10]
 8015e42:	fb94 f4f8 	sdiv	r4, r4, r8
 8015e46:	f006 fa1f 	bl	801c288 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8015e4a:	b2a4      	uxth	r4, r4
 8015e4c:	fb90 f0f8 	sdiv	r0, r0, r8
 8015e50:	1a24      	subs	r4, r4, r0
 8015e52:	8774      	strh	r4, [r6, #58]	; 0x3a
 8015e54:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08015e58 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE>:
 8015e58:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015e5c:	4604      	mov	r4, r0
 8015e5e:	b08c      	sub	sp, #48	; 0x30
 8015e60:	460d      	mov	r5, r1
 8015e62:	f7ff fedb 	bl	8015c1c <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 8015e66:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 8015e6a:	2b00      	cmp	r3, #0
 8015e6c:	d05d      	beq.n	8015f2a <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd2>
 8015e6e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8015e70:	f8ad 3014 	strh.w	r3, [sp, #20]
 8015e74:	a805      	add	r0, sp, #20
 8015e76:	f9b4 8038 	ldrsh.w	r8, [r4, #56]	; 0x38
 8015e7a:	f9b4 703a 	ldrsh.w	r7, [r4, #58]	; 0x3a
 8015e7e:	f006 f9cf 	bl	801c220 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8015e82:	4606      	mov	r6, r0
 8015e84:	a805      	add	r0, sp, #20
 8015e86:	f006 f9ff 	bl	801c288 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8015e8a:	6869      	ldr	r1, [r5, #4]
 8015e8c:	f8ad 001e 	strh.w	r0, [sp, #30]
 8015e90:	6828      	ldr	r0, [r5, #0]
 8015e92:	f8ad 8018 	strh.w	r8, [sp, #24]
 8015e96:	ab08      	add	r3, sp, #32
 8015e98:	ad08      	add	r5, sp, #32
 8015e9a:	c303      	stmia	r3!, {r0, r1}
 8015e9c:	a906      	add	r1, sp, #24
 8015e9e:	4628      	mov	r0, r5
 8015ea0:	f8ad 701a 	strh.w	r7, [sp, #26]
 8015ea4:	f8ad 601c 	strh.w	r6, [sp, #28]
 8015ea8:	f7fc fe18 	bl	8012adc <_ZN8touchgfx4RectaNERKS0_>
 8015eac:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8015eb0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8015eb4:	429a      	cmp	r2, r3
 8015eb6:	d035      	beq.n	8015f24 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8015eb8:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8015ebc:	2b00      	cmp	r3, #0
 8015ebe:	dd31      	ble.n	8015f24 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8015ec0:	f9bd 3026 	ldrsh.w	r3, [sp, #38]	; 0x26
 8015ec4:	2b00      	cmp	r3, #0
 8015ec6:	dd2d      	ble.n	8015f24 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8015ec8:	2300      	movs	r3, #0
 8015eca:	e9cd 330a 	strd	r3, r3, [sp, #40]	; 0x28
 8015ece:	6823      	ldr	r3, [r4, #0]
 8015ed0:	a90a      	add	r1, sp, #40	; 0x28
 8015ed2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8015ed4:	4620      	mov	r0, r4
 8015ed6:	4798      	blx	r3
 8015ed8:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8015edc:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 8015ede:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 8015ee2:	1a9b      	subs	r3, r3, r2
 8015ee4:	f8ad 3020 	strh.w	r3, [sp, #32]
 8015ee8:	8f63      	ldrh	r3, [r4, #58]	; 0x3a
 8015eea:	1ac9      	subs	r1, r1, r3
 8015eec:	f8ad 1022 	strh.w	r1, [sp, #34]	; 0x22
 8015ef0:	490f      	ldr	r1, [pc, #60]	; (8015f30 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd8>)
 8015ef2:	6809      	ldr	r1, [r1, #0]
 8015ef4:	f891 0058 	ldrb.w	r0, [r1, #88]	; 0x58
 8015ef8:	b108      	cbz	r0, 8015efe <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa6>
 8015efa:	6cc8      	ldr	r0, [r1, #76]	; 0x4c
 8015efc:	b900      	cbnz	r0, 8015f00 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa8>
 8015efe:	6888      	ldr	r0, [r1, #8]
 8015f00:	f8bd 102a 	ldrh.w	r1, [sp, #42]	; 0x2a
 8015f04:	440b      	add	r3, r1
 8015f06:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 8015f0a:	2601      	movs	r6, #1
 8015f0c:	440a      	add	r2, r1
 8015f0e:	6801      	ldr	r1, [r0, #0]
 8015f10:	9602      	str	r6, [sp, #8]
 8015f12:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 8015f16:	e9cd 5400 	strd	r5, r4, [sp]
 8015f1a:	b21b      	sxth	r3, r3
 8015f1c:	688c      	ldr	r4, [r1, #8]
 8015f1e:	b212      	sxth	r2, r2
 8015f20:	a905      	add	r1, sp, #20
 8015f22:	47a0      	blx	r4
 8015f24:	b00c      	add	sp, #48	; 0x30
 8015f26:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8015f2a:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8015f2c:	e7a0      	b.n	8015e70 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x18>
 8015f2e:	bf00      	nop
 8015f30:	2001384c 	.word	0x2001384c

08015f34 <_ZN8touchgfx14ButtonWithIconC1Ev>:
 8015f34:	b510      	push	{r4, lr}
 8015f36:	2101      	movs	r1, #1
 8015f38:	2200      	movs	r2, #0
 8015f3a:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 8015f3e:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 8015f42:	4c0e      	ldr	r4, [pc, #56]	; (8015f7c <_ZN8touchgfx14ButtonWithIconC1Ev+0x48>)
 8015f44:	8082      	strh	r2, [r0, #4]
 8015f46:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8015f4a:	80c2      	strh	r2, [r0, #6]
 8015f4c:	8102      	strh	r2, [r0, #8]
 8015f4e:	8142      	strh	r2, [r0, #10]
 8015f50:	8182      	strh	r2, [r0, #12]
 8015f52:	81c2      	strh	r2, [r0, #14]
 8015f54:	8202      	strh	r2, [r0, #16]
 8015f56:	8242      	strh	r2, [r0, #18]
 8015f58:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8015f5c:	61c2      	str	r2, [r0, #28]
 8015f5e:	8402      	strh	r2, [r0, #32]
 8015f60:	8442      	strh	r2, [r0, #34]	; 0x22
 8015f62:	6282      	str	r2, [r0, #40]	; 0x28
 8015f64:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 8015f68:	85c1      	strh	r1, [r0, #46]	; 0x2e
 8015f6a:	8601      	strh	r1, [r0, #48]	; 0x30
 8015f6c:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 8015f70:	6004      	str	r4, [r0, #0]
 8015f72:	8681      	strh	r1, [r0, #52]	; 0x34
 8015f74:	86c1      	strh	r1, [r0, #54]	; 0x36
 8015f76:	8702      	strh	r2, [r0, #56]	; 0x38
 8015f78:	8742      	strh	r2, [r0, #58]	; 0x3a
 8015f7a:	bd10      	pop	{r4, pc}
 8015f7c:	08031b7c 	.word	0x08031b7c

08015f80 <_ZN8touchgfx5ImageD1Ev>:
 8015f80:	4770      	bx	lr

08015f82 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 8015f82:	b570      	push	{r4, r5, r6, lr}
 8015f84:	880b      	ldrh	r3, [r1, #0]
 8015f86:	84c3      	strh	r3, [r0, #38]	; 0x26
 8015f88:	4604      	mov	r4, r0
 8015f8a:	4608      	mov	r0, r1
 8015f8c:	460d      	mov	r5, r1
 8015f8e:	f006 f947 	bl	801c220 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8015f92:	4606      	mov	r6, r0
 8015f94:	4628      	mov	r0, r5
 8015f96:	f006 f977 	bl	801c288 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8015f9a:	6823      	ldr	r3, [r4, #0]
 8015f9c:	4605      	mov	r5, r0
 8015f9e:	4631      	mov	r1, r6
 8015fa0:	4620      	mov	r0, r4
 8015fa2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015fa4:	4798      	blx	r3
 8015fa6:	6823      	ldr	r3, [r4, #0]
 8015fa8:	4629      	mov	r1, r5
 8015faa:	4620      	mov	r0, r4
 8015fac:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8015fae:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015fb2:	4718      	bx	r3

08015fb4 <_ZN8touchgfx5ImageD0Ev>:
 8015fb4:	b510      	push	{r4, lr}
 8015fb6:	212c      	movs	r1, #44	; 0x2c
 8015fb8:	4604      	mov	r4, r0
 8015fba:	f016 fd96 	bl	802caea <_ZdlPvj>
 8015fbe:	4620      	mov	r0, r4
 8015fc0:	bd10      	pop	{r4, pc}

08015fc2 <_ZNK8touchgfx5Image12getSolidRectEv>:
 8015fc2:	b510      	push	{r4, lr}
 8015fc4:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 8015fc8:	2bff      	cmp	r3, #255	; 0xff
 8015fca:	4604      	mov	r4, r0
 8015fcc:	d006      	beq.n	8015fdc <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 8015fce:	2300      	movs	r3, #0
 8015fd0:	8003      	strh	r3, [r0, #0]
 8015fd2:	8043      	strh	r3, [r0, #2]
 8015fd4:	8083      	strh	r3, [r0, #4]
 8015fd6:	80c3      	strh	r3, [r0, #6]
 8015fd8:	4620      	mov	r0, r4
 8015fda:	bd10      	pop	{r4, pc}
 8015fdc:	3126      	adds	r1, #38	; 0x26
 8015fde:	f006 f987 	bl	801c2f0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8015fe2:	e7f9      	b.n	8015fd8 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

08015fe4 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 8015fe4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015fe8:	4604      	mov	r4, r0
 8015fea:	b088      	sub	sp, #32
 8015fec:	f854 3b26 	ldr.w	r3, [r4], #38
 8015ff0:	2500      	movs	r5, #0
 8015ff2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8015ff4:	460f      	mov	r7, r1
 8015ff6:	e9cd 5504 	strd	r5, r5, [sp, #16]
 8015ffa:	a904      	add	r1, sp, #16
 8015ffc:	4606      	mov	r6, r0
 8015ffe:	4798      	blx	r3
 8016000:	4620      	mov	r0, r4
 8016002:	f006 f90d 	bl	801c220 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8016006:	4680      	mov	r8, r0
 8016008:	4620      	mov	r0, r4
 801600a:	f006 f93d 	bl	801c288 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801600e:	9506      	str	r5, [sp, #24]
 8016010:	ad06      	add	r5, sp, #24
 8016012:	f8ad 001e 	strh.w	r0, [sp, #30]
 8016016:	4639      	mov	r1, r7
 8016018:	4628      	mov	r0, r5
 801601a:	f8ad 801c 	strh.w	r8, [sp, #28]
 801601e:	f7fc fd5d 	bl	8012adc <_ZN8touchgfx4RectaNERKS0_>
 8016022:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8016026:	2b00      	cmp	r3, #0
 8016028:	dd19      	ble.n	801605e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 801602a:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 801602e:	2b00      	cmp	r3, #0
 8016030:	dd15      	ble.n	801605e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 8016032:	4b0c      	ldr	r3, [pc, #48]	; (8016064 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 8016034:	681b      	ldr	r3, [r3, #0]
 8016036:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 801603a:	b10a      	cbz	r2, 8016040 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 801603c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 801603e:	b900      	cbnz	r0, 8016042 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 8016040:	6898      	ldr	r0, [r3, #8]
 8016042:	6801      	ldr	r1, [r0, #0]
 8016044:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8016048:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801604c:	2701      	movs	r7, #1
 801604e:	9702      	str	r7, [sp, #8]
 8016050:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 8016054:	e9cd 5600 	strd	r5, r6, [sp]
 8016058:	688d      	ldr	r5, [r1, #8]
 801605a:	4621      	mov	r1, r4
 801605c:	47a8      	blx	r5
 801605e:	b008      	add	sp, #32
 8016060:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8016064:	2001384c 	.word	0x2001384c

08016068 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 8016068:	4770      	bx	lr

0801606a <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 801606a:	b510      	push	{r4, lr}
 801606c:	2148      	movs	r1, #72	; 0x48
 801606e:	4604      	mov	r4, r0
 8016070:	f016 fd3b 	bl	802caea <_ZdlPvj>
 8016074:	4620      	mov	r0, r4
 8016076:	bd10      	pop	{r4, pc}

08016078 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 8016078:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801607c:	b08d      	sub	sp, #52	; 0x34
 801607e:	4604      	mov	r4, r0
 8016080:	460f      	mov	r7, r1
 8016082:	f7ff fdcb 	bl	8015c1c <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 8016086:	4a55      	ldr	r2, [pc, #340]	; (80161dc <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
 8016088:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801608a:	8812      	ldrh	r2, [r2, #0]
 801608c:	429a      	cmp	r2, r3
 801608e:	f240 8082 	bls.w	8016196 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8016092:	4d53      	ldr	r5, [pc, #332]	; (80161e0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
 8016094:	682a      	ldr	r2, [r5, #0]
 8016096:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 801609a:	4b52      	ldr	r3, [pc, #328]	; (80161e4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
 801609c:	681b      	ldr	r3, [r3, #0]
 801609e:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 80160a2:	f9b4 3046 	ldrsh.w	r3, [r4, #70]	; 0x46
 80160a6:	2200      	movs	r2, #0
 80160a8:	e9cd 2203 	strd	r2, r2, [sp, #12]
 80160ac:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 80160b0:	2a03      	cmp	r2, #3
 80160b2:	d811      	bhi.n	80160d8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 80160b4:	e8df f002 	tbb	[pc, r2]
 80160b8:	89727902 	.word	0x89727902
 80160bc:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 80160c0:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 80160c4:	1ad2      	subs	r2, r2, r3
 80160c6:	2002      	movs	r0, #2
 80160c8:	f8ad 1010 	strh.w	r1, [sp, #16]
 80160cc:	fb92 f2f0 	sdiv	r2, r2, r0
 80160d0:	f8ad 3012 	strh.w	r3, [sp, #18]
 80160d4:	f8ad 200e 	strh.w	r2, [sp, #14]
 80160d8:	f10d 080c 	add.w	r8, sp, #12
 80160dc:	e898 0003 	ldmia.w	r8, {r0, r1}
 80160e0:	f10d 0914 	add.w	r9, sp, #20
 80160e4:	e889 0003 	stmia.w	r9, {r0, r1}
 80160e8:	4639      	mov	r1, r7
 80160ea:	4648      	mov	r0, r9
 80160ec:	f7fc fcf6 	bl	8012adc <_ZN8touchgfx4RectaNERKS0_>
 80160f0:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80160f4:	2b00      	cmp	r3, #0
 80160f6:	dd4e      	ble.n	8016196 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 80160f8:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 80160fc:	2b00      	cmp	r3, #0
 80160fe:	dd4a      	ble.n	8016196 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8016100:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8016104:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8016108:	1a9b      	subs	r3, r3, r2
 801610a:	f8ad 3014 	strh.w	r3, [sp, #20]
 801610e:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 8016112:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 8016116:	1a9b      	subs	r3, r3, r2
 8016118:	f8ad 3016 	strh.w	r3, [sp, #22]
 801611c:	6823      	ldr	r3, [r4, #0]
 801611e:	4641      	mov	r1, r8
 8016120:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016122:	4620      	mov	r0, r4
 8016124:	4798      	blx	r3
 8016126:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 801612a:	2b00      	cmp	r3, #0
 801612c:	d053      	beq.n	80161d6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15e>
 801612e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8016130:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 8016132:	682b      	ldr	r3, [r5, #0]
 8016134:	f894 0032 	ldrb.w	r0, [r4, #50]	; 0x32
 8016138:	f894 4044 	ldrb.w	r4, [r4, #68]	; 0x44
 801613c:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8016140:	785b      	ldrb	r3, [r3, #1]
 8016142:	9209      	str	r2, [sp, #36]	; 0x24
 8016144:	f3c3 0501 	ubfx	r5, r3, #0, #2
 8016148:	f3c3 0381 	ubfx	r3, r3, #2, #2
 801614c:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 8016150:	2300      	movs	r3, #0
 8016152:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8016156:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 801615a:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 801615e:	4b22      	ldr	r3, [pc, #136]	; (80161e8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
 8016160:	9607      	str	r6, [sp, #28]
 8016162:	681b      	ldr	r3, [r3, #0]
 8016164:	f88d 5020 	strb.w	r5, [sp, #32]
 8016168:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 801616c:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8016170:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8016174:	b10a      	cbz	r2, 801617a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
 8016176:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 8016178:	b904      	cbnz	r4, 801617c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x104>
 801617a:	689c      	ldr	r4, [r3, #8]
 801617c:	4b1b      	ldr	r3, [pc, #108]	; (80161ec <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
 801617e:	6818      	ldr	r0, [r3, #0]
 8016180:	f7f4 fa6a 	bl	800a658 <_ZNK8touchgfx5Texts7getTextEt>
 8016184:	ab07      	add	r3, sp, #28
 8016186:	9001      	str	r0, [sp, #4]
 8016188:	9300      	str	r3, [sp, #0]
 801618a:	e898 0006 	ldmia.w	r8, {r1, r2}
 801618e:	464b      	mov	r3, r9
 8016190:	4620      	mov	r0, r4
 8016192:	f7f4 fa13 	bl	800a5bc <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8016196:	b00d      	add	sp, #52	; 0x34
 8016198:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801619c:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 80161a0:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 80161a4:	1ad2      	subs	r2, r2, r3
 80161a6:	3201      	adds	r2, #1
 80161a8:	e78d      	b.n	80160c6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x4e>
 80161aa:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 80161ae:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 80161b2:	1ad2      	subs	r2, r2, r3
 80161b4:	3201      	adds	r2, #1
 80161b6:	2002      	movs	r0, #2
 80161b8:	f8ad 3010 	strh.w	r3, [sp, #16]
 80161bc:	fb92 f2f0 	sdiv	r2, r2, r0
 80161c0:	f8ad 1012 	strh.w	r1, [sp, #18]
 80161c4:	f8ad 200c 	strh.w	r2, [sp, #12]
 80161c8:	e786      	b.n	80160d8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 80161ca:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 80161ce:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 80161d2:	1ad2      	subs	r2, r2, r3
 80161d4:	e7ef      	b.n	80161b6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x13e>
 80161d6:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 80161d8:	e7aa      	b.n	8016130 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb8>
 80161da:	bf00      	nop
 80161dc:	200138a8 	.word	0x200138a8
 80161e0:	200138a4 	.word	0x200138a4
 80161e4:	200138ac 	.word	0x200138ac
 80161e8:	2001384c 	.word	0x2001384c
 80161ec:	200138b0 	.word	0x200138b0

080161f0 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 80161f0:	b510      	push	{r4, lr}
 80161f2:	2101      	movs	r1, #1
 80161f4:	4c13      	ldr	r4, [pc, #76]	; (8016244 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 80161f6:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 80161fa:	2200      	movs	r2, #0
 80161fc:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 8016200:	6004      	str	r4, [r0, #0]
 8016202:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8016206:	4c10      	ldr	r4, [pc, #64]	; (8016248 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 8016208:	8082      	strh	r2, [r0, #4]
 801620a:	80c2      	strh	r2, [r0, #6]
 801620c:	8102      	strh	r2, [r0, #8]
 801620e:	8142      	strh	r2, [r0, #10]
 8016210:	8182      	strh	r2, [r0, #12]
 8016212:	81c2      	strh	r2, [r0, #14]
 8016214:	8202      	strh	r2, [r0, #16]
 8016216:	8242      	strh	r2, [r0, #18]
 8016218:	e9c0 2205 	strd	r2, r2, [r0, #20]
 801621c:	61c2      	str	r2, [r0, #28]
 801621e:	8402      	strh	r2, [r0, #32]
 8016220:	8442      	strh	r2, [r0, #34]	; 0x22
 8016222:	6282      	str	r2, [r0, #40]	; 0x28
 8016224:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 8016228:	85c1      	strh	r1, [r0, #46]	; 0x2e
 801622a:	8601      	strh	r1, [r0, #48]	; 0x30
 801622c:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 8016230:	6344      	str	r4, [r0, #52]	; 0x34
 8016232:	8701      	strh	r1, [r0, #56]	; 0x38
 8016234:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
 8016238:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
 801623c:	f8a0 2046 	strh.w	r2, [r0, #70]	; 0x46
 8016240:	bd10      	pop	{r4, pc}
 8016242:	bf00      	nop
 8016244:	08031c60 	.word	0x08031c60
 8016248:	0802f454 	.word	0x0802f454

0801624c <_ZN8touchgfx7OutlineD1Ev>:
 801624c:	4770      	bx	lr

0801624e <_ZN8touchgfx7OutlineD0Ev>:
 801624e:	b510      	push	{r4, lr}
 8016250:	2130      	movs	r1, #48	; 0x30
 8016252:	4604      	mov	r4, r0
 8016254:	f016 fc49 	bl	802caea <_ZdlPvj>
 8016258:	4620      	mov	r0, r4
 801625a:	bd10      	pop	{r4, pc}

0801625c <_ZN8touchgfx7Outline5resetEv>:
 801625c:	b510      	push	{r4, lr}
 801625e:	4604      	mov	r4, r0
 8016260:	f000 fe96 	bl	8016f90 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 8016264:	60e0      	str	r0, [r4, #12]
 8016266:	f000 fe99 	bl	8016f9c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 801626a:	68e3      	ldr	r3, [r4, #12]
 801626c:	6123      	str	r3, [r4, #16]
 801626e:	08c0      	lsrs	r0, r0, #3
 8016270:	2200      	movs	r2, #0
 8016272:	f647 71ff 	movw	r1, #32767	; 0x7fff
 8016276:	3801      	subs	r0, #1
 8016278:	6060      	str	r0, [r4, #4]
 801627a:	60a2      	str	r2, [r4, #8]
 801627c:	8019      	strh	r1, [r3, #0]
 801627e:	8059      	strh	r1, [r3, #2]
 8016280:	809a      	strh	r2, [r3, #4]
 8016282:	80da      	strh	r2, [r3, #6]
 8016284:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8016286:	f023 0301 	bic.w	r3, r3, #1
 801628a:	f043 0302 	orr.w	r3, r3, #2
 801628e:	6263      	str	r3, [r4, #36]	; 0x24
 8016290:	bd10      	pop	{r4, pc}
	...

08016294 <_ZN8touchgfx7OutlineC1Ev>:
 8016294:	b510      	push	{r4, lr}
 8016296:	4b0a      	ldr	r3, [pc, #40]	; (80162c0 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 8016298:	6003      	str	r3, [r0, #0]
 801629a:	2300      	movs	r3, #0
 801629c:	e9c0 3301 	strd	r3, r3, [r0, #4]
 80162a0:	e9c0 3303 	strd	r3, r3, [r0, #12]
 80162a4:	e9c0 3305 	strd	r3, r3, [r0, #20]
 80162a8:	e9c0 3307 	strd	r3, r3, [r0, #28]
 80162ac:	6243      	str	r3, [r0, #36]	; 0x24
 80162ae:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 80162b2:	4604      	mov	r4, r0
 80162b4:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 80162b8:	f7ff ffd0 	bl	801625c <_ZN8touchgfx7Outline5resetEv>
 80162bc:	4620      	mov	r0, r4
 80162be:	bd10      	pop	{r4, pc}
 80162c0:	08031cd4 	.word	0x08031cd4

080162c4 <_ZN8touchgfx7Outline10renderLineEiiii>:
 80162c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80162c8:	b093      	sub	sp, #76	; 0x4c
 80162ca:	1156      	asrs	r6, r2, #5
 80162cc:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 80162ce:	9305      	str	r3, [sp, #20]
 80162d0:	f004 051f 	and.w	r5, r4, #31
 80162d4:	1153      	asrs	r3, r2, #5
 80162d6:	9504      	str	r5, [sp, #16]
 80162d8:	1165      	asrs	r5, r4, #5
 80162da:	9303      	str	r3, [sp, #12]
 80162dc:	42ae      	cmp	r6, r5
 80162de:	ea4f 1364 	mov.w	r3, r4, asr #5
 80162e2:	9306      	str	r3, [sp, #24]
 80162e4:	f002 031f 	and.w	r3, r2, #31
 80162e8:	f040 80f8 	bne.w	80164dc <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 80162ec:	9c04      	ldr	r4, [sp, #16]
 80162ee:	9a05      	ldr	r2, [sp, #20]
 80162f0:	42a3      	cmp	r3, r4
 80162f2:	ea4f 1e62 	mov.w	lr, r2, asr #5
 80162f6:	6902      	ldr	r2, [r0, #16]
 80162f8:	d125      	bne.n	8016346 <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 80162fa:	f9b2 3000 	ldrsh.w	r3, [r2]
 80162fe:	459e      	cmp	lr, r3
 8016300:	d103      	bne.n	801630a <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 8016302:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8016306:	429e      	cmp	r6, r3
 8016308:	d035      	beq.n	8016376 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801630a:	88d1      	ldrh	r1, [r2, #6]
 801630c:	8893      	ldrh	r3, [r2, #4]
 801630e:	430b      	orrs	r3, r1
 8016310:	d010      	beq.n	8016334 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8016312:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8016316:	2b00      	cmp	r3, #0
 8016318:	db0c      	blt.n	8016334 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 801631a:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 801631c:	428b      	cmp	r3, r1
 801631e:	da09      	bge.n	8016334 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8016320:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8016324:	428b      	cmp	r3, r1
 8016326:	bf38      	it	cc
 8016328:	3208      	addcc	r2, #8
 801632a:	f103 0301 	add.w	r3, r3, #1
 801632e:	bf38      	it	cc
 8016330:	6102      	strcc	r2, [r0, #16]
 8016332:	6083      	str	r3, [r0, #8]
 8016334:	6903      	ldr	r3, [r0, #16]
 8016336:	9a03      	ldr	r2, [sp, #12]
 8016338:	f8a3 e000 	strh.w	lr, [r3]
 801633c:	805a      	strh	r2, [r3, #2]
 801633e:	2200      	movs	r2, #0
 8016340:	809a      	strh	r2, [r3, #4]
 8016342:	80da      	strh	r2, [r3, #6]
 8016344:	e017      	b.n	8016376 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8016346:	9c05      	ldr	r4, [sp, #20]
 8016348:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 801634c:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 8016350:	f004 041f 	and.w	r4, r4, #31
 8016354:	114e      	asrs	r6, r1, #5
 8016356:	9402      	str	r4, [sp, #8]
 8016358:	9c04      	ldr	r4, [sp, #16]
 801635a:	4576      	cmp	r6, lr
 801635c:	f001 0c1f 	and.w	ip, r1, #31
 8016360:	eba4 0403 	sub.w	r4, r4, r3
 8016364:	d10a      	bne.n	801637c <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 8016366:	9b02      	ldr	r3, [sp, #8]
 8016368:	449c      	add	ip, r3
 801636a:	44a0      	add	r8, r4
 801636c:	fb04 a40c 	mla	r4, r4, ip, sl
 8016370:	f8a2 8004 	strh.w	r8, [r2, #4]
 8016374:	80d4      	strh	r4, [r2, #6]
 8016376:	b013      	add	sp, #76	; 0x4c
 8016378:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801637c:	9d05      	ldr	r5, [sp, #20]
 801637e:	1a69      	subs	r1, r5, r1
 8016380:	bf5b      	ittet	pl
 8016382:	f1cc 0520 	rsbpl	r5, ip, #32
 8016386:	436c      	mulpl	r4, r5
 8016388:	2500      	movmi	r5, #0
 801638a:	2520      	movpl	r5, #32
 801638c:	bf44      	itt	mi
 801638e:	fb04 f40c 	mulmi.w	r4, r4, ip
 8016392:	4249      	negmi	r1, r1
 8016394:	9501      	str	r5, [sp, #4]
 8016396:	9f01      	ldr	r7, [sp, #4]
 8016398:	fb94 f5f1 	sdiv	r5, r4, r1
 801639c:	fb01 4415 	mls	r4, r1, r5, r4
 80163a0:	bf54      	ite	pl
 80163a2:	f04f 0901 	movpl.w	r9, #1
 80163a6:	f04f 39ff 	movmi.w	r9, #4294967295
 80163aa:	2c00      	cmp	r4, #0
 80163ac:	bfb8      	it	lt
 80163ae:	f105 35ff 	addlt.w	r5, r5, #4294967295
 80163b2:	44bc      	add	ip, r7
 80163b4:	44a8      	add	r8, r5
 80163b6:	fb05 ac0c 	mla	ip, r5, ip, sl
 80163ba:	f8a2 8004 	strh.w	r8, [r2, #4]
 80163be:	f8a2 c006 	strh.w	ip, [r2, #6]
 80163c2:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80163c6:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 80163ca:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 80163ce:	bfb8      	it	lt
 80163d0:	1864      	addlt	r4, r4, r1
 80163d2:	ea58 0202 	orrs.w	r2, r8, r2
 80163d6:	444e      	add	r6, r9
 80163d8:	d011      	beq.n	80163fe <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 80163da:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 80163de:	f1b8 0f00 	cmp.w	r8, #0
 80163e2:	db0c      	blt.n	80163fe <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 80163e4:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 80163e6:	4590      	cmp	r8, r2
 80163e8:	da09      	bge.n	80163fe <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 80163ea:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 80163ee:	4590      	cmp	r8, r2
 80163f0:	bf3c      	itt	cc
 80163f2:	f10c 0208 	addcc.w	r2, ip, #8
 80163f6:	6102      	strcc	r2, [r0, #16]
 80163f8:	f108 0201 	add.w	r2, r8, #1
 80163fc:	6082      	str	r2, [r0, #8]
 80163fe:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8016402:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8016406:	f8ac 6000 	strh.w	r6, [ip]
 801640a:	2700      	movs	r7, #0
 801640c:	45b6      	cmp	lr, r6
 801640e:	f8ac 2002 	strh.w	r2, [ip, #2]
 8016412:	f8ac 7004 	strh.w	r7, [ip, #4]
 8016416:	f8ac 7006 	strh.w	r7, [ip, #6]
 801641a:	442b      	add	r3, r5
 801641c:	d04d      	beq.n	80164ba <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 801641e:	9f04      	ldr	r7, [sp, #16]
 8016420:	1aff      	subs	r7, r7, r3
 8016422:	443d      	add	r5, r7
 8016424:	016d      	lsls	r5, r5, #5
 8016426:	fb95 f8f1 	sdiv	r8, r5, r1
 801642a:	fb01 5518 	mls	r5, r1, r8, r5
 801642e:	2d00      	cmp	r5, #0
 8016430:	bfb8      	it	lt
 8016432:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8016436:	f108 0701 	add.w	r7, r8, #1
 801643a:	bfb8      	it	lt
 801643c:	186d      	addlt	r5, r5, r1
 801643e:	1a64      	subs	r4, r4, r1
 8016440:	9703      	str	r7, [sp, #12]
 8016442:	f04f 0a00 	mov.w	sl, #0
 8016446:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801644a:	1964      	adds	r4, r4, r5
 801644c:	bf58      	it	pl
 801644e:	9f03      	ldrpl	r7, [sp, #12]
 8016450:	f8bc b004 	ldrh.w	fp, [ip, #4]
 8016454:	bf48      	it	mi
 8016456:	4647      	movmi	r7, r8
 8016458:	44bb      	add	fp, r7
 801645a:	f8ac b004 	strh.w	fp, [ip, #4]
 801645e:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8016462:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8016466:	f8ac b006 	strh.w	fp, [ip, #6]
 801646a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801646e:	443b      	add	r3, r7
 8016470:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8016474:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8016478:	bf58      	it	pl
 801647a:	1a64      	subpl	r4, r4, r1
 801647c:	ea5b 0707 	orrs.w	r7, fp, r7
 8016480:	444e      	add	r6, r9
 8016482:	d011      	beq.n	80164a8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8016484:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 8016488:	f1bb 0f00 	cmp.w	fp, #0
 801648c:	db0c      	blt.n	80164a8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 801648e:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8016490:	45bb      	cmp	fp, r7
 8016492:	da09      	bge.n	80164a8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8016494:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8016498:	45bb      	cmp	fp, r7
 801649a:	bf3c      	itt	cc
 801649c:	f10c 0708 	addcc.w	r7, ip, #8
 80164a0:	6107      	strcc	r7, [r0, #16]
 80164a2:	f10b 0701 	add.w	r7, fp, #1
 80164a6:	6087      	str	r7, [r0, #8]
 80164a8:	6907      	ldr	r7, [r0, #16]
 80164aa:	45b6      	cmp	lr, r6
 80164ac:	803e      	strh	r6, [r7, #0]
 80164ae:	807a      	strh	r2, [r7, #2]
 80164b0:	f8a7 a004 	strh.w	sl, [r7, #4]
 80164b4:	f8a7 a006 	strh.w	sl, [r7, #6]
 80164b8:	d1c5      	bne.n	8016446 <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 80164ba:	9a04      	ldr	r2, [sp, #16]
 80164bc:	1ad3      	subs	r3, r2, r3
 80164be:	6902      	ldr	r2, [r0, #16]
 80164c0:	8891      	ldrh	r1, [r2, #4]
 80164c2:	88d6      	ldrh	r6, [r2, #6]
 80164c4:	4419      	add	r1, r3
 80164c6:	8091      	strh	r1, [r2, #4]
 80164c8:	9902      	ldr	r1, [sp, #8]
 80164ca:	f101 0c20 	add.w	ip, r1, #32
 80164ce:	9901      	ldr	r1, [sp, #4]
 80164d0:	ebac 0c01 	sub.w	ip, ip, r1
 80164d4:	fb03 630c 	mla	r3, r3, ip, r6
 80164d8:	80d3      	strh	r3, [r2, #6]
 80164da:	e74c      	b.n	8016376 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 80164dc:	9d05      	ldr	r5, [sp, #20]
 80164de:	1aa2      	subs	r2, r4, r2
 80164e0:	eba5 0501 	sub.w	r5, r5, r1
 80164e4:	9508      	str	r5, [sp, #32]
 80164e6:	9202      	str	r2, [sp, #8]
 80164e8:	f140 8128 	bpl.w	801673c <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 80164ec:	9a03      	ldr	r2, [sp, #12]
 80164ee:	2a00      	cmp	r2, #0
 80164f0:	f6ff af41 	blt.w	8016376 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 80164f4:	9a02      	ldr	r2, [sp, #8]
 80164f6:	4252      	negs	r2, r2
 80164f8:	9202      	str	r2, [sp, #8]
 80164fa:	9a06      	ldr	r2, [sp, #24]
 80164fc:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 8016500:	f04f 34ff 	mov.w	r4, #4294967295
 8016504:	9206      	str	r2, [sp, #24]
 8016506:	462a      	mov	r2, r5
 8016508:	940b      	str	r4, [sp, #44]	; 0x2c
 801650a:	435a      	muls	r2, r3
 801650c:	2400      	movs	r4, #0
 801650e:	9d02      	ldr	r5, [sp, #8]
 8016510:	9401      	str	r4, [sp, #4]
 8016512:	9c02      	ldr	r4, [sp, #8]
 8016514:	fb92 f4f4 	sdiv	r4, r2, r4
 8016518:	fb05 2214 	mls	r2, r5, r4, r2
 801651c:	2a00      	cmp	r2, #0
 801651e:	9207      	str	r2, [sp, #28]
 8016520:	bfbc      	itt	lt
 8016522:	1952      	addlt	r2, r2, r5
 8016524:	9207      	strlt	r2, [sp, #28]
 8016526:	9a01      	ldr	r2, [sp, #4]
 8016528:	6905      	ldr	r5, [r0, #16]
 801652a:	bfb8      	it	lt
 801652c:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8016530:	eb04 0901 	add.w	r9, r4, r1
 8016534:	429a      	cmp	r2, r3
 8016536:	ea4f 1669 	mov.w	r6, r9, asr #5
 801653a:	f040 8112 	bne.w	8016762 <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 801653e:	f9b5 3000 	ldrsh.w	r3, [r5]
 8016542:	429e      	cmp	r6, r3
 8016544:	d104      	bne.n	8016550 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 8016546:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801654a:	9a03      	ldr	r2, [sp, #12]
 801654c:	429a      	cmp	r2, r3
 801654e:	d01b      	beq.n	8016588 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8016550:	88ea      	ldrh	r2, [r5, #6]
 8016552:	88ab      	ldrh	r3, [r5, #4]
 8016554:	4313      	orrs	r3, r2
 8016556:	d010      	beq.n	801657a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8016558:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801655c:	2a00      	cmp	r2, #0
 801655e:	db0c      	blt.n	801657a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8016560:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8016562:	429a      	cmp	r2, r3
 8016564:	da09      	bge.n	801657a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8016566:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 801656a:	429a      	cmp	r2, r3
 801656c:	bf38      	it	cc
 801656e:	3508      	addcc	r5, #8
 8016570:	f102 0201 	add.w	r2, r2, #1
 8016574:	bf38      	it	cc
 8016576:	6105      	strcc	r5, [r0, #16]
 8016578:	6082      	str	r2, [r0, #8]
 801657a:	6903      	ldr	r3, [r0, #16]
 801657c:	9a03      	ldr	r2, [sp, #12]
 801657e:	805a      	strh	r2, [r3, #2]
 8016580:	2200      	movs	r2, #0
 8016582:	801e      	strh	r6, [r3, #0]
 8016584:	809a      	strh	r2, [r3, #4]
 8016586:	80da      	strh	r2, [r3, #6]
 8016588:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801658a:	9a03      	ldr	r2, [sp, #12]
 801658c:	6901      	ldr	r1, [r0, #16]
 801658e:	441a      	add	r2, r3
 8016590:	f9b1 3000 	ldrsh.w	r3, [r1]
 8016594:	42b3      	cmp	r3, r6
 8016596:	d103      	bne.n	80165a0 <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 8016598:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 801659c:	429a      	cmp	r2, r3
 801659e:	d01a      	beq.n	80165d6 <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 80165a0:	88cc      	ldrh	r4, [r1, #6]
 80165a2:	888b      	ldrh	r3, [r1, #4]
 80165a4:	4323      	orrs	r3, r4
 80165a6:	d010      	beq.n	80165ca <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 80165a8:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 80165ac:	2c00      	cmp	r4, #0
 80165ae:	db0c      	blt.n	80165ca <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 80165b0:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80165b2:	429c      	cmp	r4, r3
 80165b4:	da09      	bge.n	80165ca <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 80165b6:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 80165ba:	429c      	cmp	r4, r3
 80165bc:	bf38      	it	cc
 80165be:	3108      	addcc	r1, #8
 80165c0:	f104 0401 	add.w	r4, r4, #1
 80165c4:	bf38      	it	cc
 80165c6:	6101      	strcc	r1, [r0, #16]
 80165c8:	6084      	str	r4, [r0, #8]
 80165ca:	6903      	ldr	r3, [r0, #16]
 80165cc:	2100      	movs	r1, #0
 80165ce:	801e      	strh	r6, [r3, #0]
 80165d0:	805a      	strh	r2, [r3, #2]
 80165d2:	8099      	strh	r1, [r3, #4]
 80165d4:	80d9      	strh	r1, [r3, #6]
 80165d6:	9b06      	ldr	r3, [sp, #24]
 80165d8:	4293      	cmp	r3, r2
 80165da:	f000 8082 	beq.w	80166e2 <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 80165de:	9b08      	ldr	r3, [sp, #32]
 80165e0:	9c02      	ldr	r4, [sp, #8]
 80165e2:	9902      	ldr	r1, [sp, #8]
 80165e4:	015b      	lsls	r3, r3, #5
 80165e6:	fb93 f1f1 	sdiv	r1, r3, r1
 80165ea:	fb04 3311 	mls	r3, r4, r1, r3
 80165ee:	2b00      	cmp	r3, #0
 80165f0:	9103      	str	r1, [sp, #12]
 80165f2:	9308      	str	r3, [sp, #32]
 80165f4:	da04      	bge.n	8016600 <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 80165f6:	1e4b      	subs	r3, r1, #1
 80165f8:	9303      	str	r3, [sp, #12]
 80165fa:	9b08      	ldr	r3, [sp, #32]
 80165fc:	4423      	add	r3, r4
 80165fe:	9308      	str	r3, [sp, #32]
 8016600:	9b07      	ldr	r3, [sp, #28]
 8016602:	9902      	ldr	r1, [sp, #8]
 8016604:	1a5b      	subs	r3, r3, r1
 8016606:	9307      	str	r3, [sp, #28]
 8016608:	9b01      	ldr	r3, [sp, #4]
 801660a:	f1c3 0320 	rsb	r3, r3, #32
 801660e:	930e      	str	r3, [sp, #56]	; 0x38
 8016610:	990e      	ldr	r1, [sp, #56]	; 0x38
 8016612:	9b01      	ldr	r3, [sp, #4]
 8016614:	1a5b      	subs	r3, r3, r1
 8016616:	464f      	mov	r7, r9
 8016618:	930a      	str	r3, [sp, #40]	; 0x28
 801661a:	2600      	movs	r6, #0
 801661c:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 8016620:	185b      	adds	r3, r3, r1
 8016622:	bf58      	it	pl
 8016624:	9902      	ldrpl	r1, [sp, #8]
 8016626:	9307      	str	r3, [sp, #28]
 8016628:	bf5d      	ittte	pl
 801662a:	1a5b      	subpl	r3, r3, r1
 801662c:	9307      	strpl	r3, [sp, #28]
 801662e:	9b03      	ldrpl	r3, [sp, #12]
 8016630:	9903      	ldrmi	r1, [sp, #12]
 8016632:	bf58      	it	pl
 8016634:	1c59      	addpl	r1, r3, #1
 8016636:	4489      	add	r9, r1
 8016638:	2a00      	cmp	r2, #0
 801663a:	ea4f 1a69 	mov.w	sl, r9, asr #5
 801663e:	db2e      	blt.n	801669e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8016640:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8016642:	4293      	cmp	r3, r2
 8016644:	dd2b      	ble.n	801669e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8016646:	9c01      	ldr	r4, [sp, #4]
 8016648:	6905      	ldr	r5, [r0, #16]
 801664a:	46a0      	mov	r8, r4
 801664c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801664e:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 8016652:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 8016656:	45a0      	cmp	r8, r4
 8016658:	f040 814f 	bne.w	80168fa <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 801665c:	f9b5 1000 	ldrsh.w	r1, [r5]
 8016660:	4551      	cmp	r1, sl
 8016662:	d103      	bne.n	801666c <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 8016664:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8016668:	4291      	cmp	r1, r2
 801666a:	d018      	beq.n	801669e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 801666c:	ea5c 010e 	orrs.w	r1, ip, lr
 8016670:	d00f      	beq.n	8016692 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 8016672:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8016676:	2900      	cmp	r1, #0
 8016678:	db0b      	blt.n	8016692 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 801667a:	428b      	cmp	r3, r1
 801667c:	dd09      	ble.n	8016692 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 801667e:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 8016682:	4299      	cmp	r1, r3
 8016684:	bf38      	it	cc
 8016686:	3508      	addcc	r5, #8
 8016688:	f101 0101 	add.w	r1, r1, #1
 801668c:	bf38      	it	cc
 801668e:	6105      	strcc	r5, [r0, #16]
 8016690:	6081      	str	r1, [r0, #8]
 8016692:	6903      	ldr	r3, [r0, #16]
 8016694:	f8a3 a000 	strh.w	sl, [r3]
 8016698:	805a      	strh	r2, [r3, #2]
 801669a:	809e      	strh	r6, [r3, #4]
 801669c:	80de      	strh	r6, [r3, #6]
 801669e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80166a0:	6901      	ldr	r1, [r0, #16]
 80166a2:	441a      	add	r2, r3
 80166a4:	88cc      	ldrh	r4, [r1, #6]
 80166a6:	888b      	ldrh	r3, [r1, #4]
 80166a8:	4323      	orrs	r3, r4
 80166aa:	d010      	beq.n	80166ce <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 80166ac:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 80166b0:	2c00      	cmp	r4, #0
 80166b2:	db0c      	blt.n	80166ce <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 80166b4:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80166b6:	429c      	cmp	r4, r3
 80166b8:	da09      	bge.n	80166ce <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 80166ba:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 80166be:	429c      	cmp	r4, r3
 80166c0:	bf38      	it	cc
 80166c2:	3108      	addcc	r1, #8
 80166c4:	f104 0401 	add.w	r4, r4, #1
 80166c8:	bf38      	it	cc
 80166ca:	6101      	strcc	r1, [r0, #16]
 80166cc:	6084      	str	r4, [r0, #8]
 80166ce:	6903      	ldr	r3, [r0, #16]
 80166d0:	f8a3 a000 	strh.w	sl, [r3]
 80166d4:	805a      	strh	r2, [r3, #2]
 80166d6:	809e      	strh	r6, [r3, #4]
 80166d8:	80de      	strh	r6, [r3, #6]
 80166da:	9b06      	ldr	r3, [sp, #24]
 80166dc:	4293      	cmp	r3, r2
 80166de:	464f      	mov	r7, r9
 80166e0:	d19c      	bne.n	801661c <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 80166e2:	9b01      	ldr	r3, [sp, #4]
 80166e4:	6907      	ldr	r7, [r0, #16]
 80166e6:	f1c3 0620 	rsb	r6, r3, #32
 80166ea:	9b05      	ldr	r3, [sp, #20]
 80166ec:	ea4f 1e63 	mov.w	lr, r3, asr #5
 80166f0:	9b04      	ldr	r3, [sp, #16]
 80166f2:	429e      	cmp	r6, r3
 80166f4:	f040 81cc 	bne.w	8016a90 <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 80166f8:	f9b7 3000 	ldrsh.w	r3, [r7]
 80166fc:	459e      	cmp	lr, r3
 80166fe:	d104      	bne.n	801670a <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 8016700:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8016704:	429a      	cmp	r2, r3
 8016706:	f43f ae36 	beq.w	8016376 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801670a:	88f9      	ldrh	r1, [r7, #6]
 801670c:	88bb      	ldrh	r3, [r7, #4]
 801670e:	430b      	orrs	r3, r1
 8016710:	d010      	beq.n	8016734 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8016712:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8016716:	2b00      	cmp	r3, #0
 8016718:	db0c      	blt.n	8016734 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 801671a:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 801671c:	428b      	cmp	r3, r1
 801671e:	da09      	bge.n	8016734 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8016720:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8016724:	428b      	cmp	r3, r1
 8016726:	bf38      	it	cc
 8016728:	3708      	addcc	r7, #8
 801672a:	f103 0301 	add.w	r3, r3, #1
 801672e:	bf38      	it	cc
 8016730:	6107      	strcc	r7, [r0, #16]
 8016732:	6083      	str	r3, [r0, #8]
 8016734:	6903      	ldr	r3, [r0, #16]
 8016736:	f8a3 e000 	strh.w	lr, [r3]
 801673a:	e5ff      	b.n	801633c <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 801673c:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 801673e:	9c03      	ldr	r4, [sp, #12]
 8016740:	42a2      	cmp	r2, r4
 8016742:	f6ff ae18 	blt.w	8016376 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8016746:	9c06      	ldr	r4, [sp, #24]
 8016748:	42a2      	cmp	r2, r4
 801674a:	bfb8      	it	lt
 801674c:	3201      	addlt	r2, #1
 801674e:	9c08      	ldr	r4, [sp, #32]
 8016750:	bfb8      	it	lt
 8016752:	9206      	strlt	r2, [sp, #24]
 8016754:	f1c3 0220 	rsb	r2, r3, #32
 8016758:	4362      	muls	r2, r4
 801675a:	2401      	movs	r4, #1
 801675c:	940b      	str	r4, [sp, #44]	; 0x2c
 801675e:	2420      	movs	r4, #32
 8016760:	e6d5      	b.n	801650e <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 8016762:	f009 021f 	and.w	r2, r9, #31
 8016766:	ea4f 1861 	mov.w	r8, r1, asr #5
 801676a:	920c      	str	r2, [sp, #48]	; 0x30
 801676c:	9a01      	ldr	r2, [sp, #4]
 801676e:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 8016772:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 8016776:	45b0      	cmp	r8, r6
 8016778:	f001 011f 	and.w	r1, r1, #31
 801677c:	eba2 0203 	sub.w	r2, r2, r3
 8016780:	d108      	bne.n	8016794 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 8016782:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8016784:	4419      	add	r1, r3
 8016786:	4496      	add	lr, r2
 8016788:	fb02 a101 	mla	r1, r2, r1, sl
 801678c:	f8a5 e004 	strh.w	lr, [r5, #4]
 8016790:	80e9      	strh	r1, [r5, #6]
 8016792:	e6f9      	b.n	8016588 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8016794:	2c00      	cmp	r4, #0
 8016796:	f2c0 80a9 	blt.w	80168ec <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 801679a:	2701      	movs	r7, #1
 801679c:	f1c1 0c20 	rsb	ip, r1, #32
 80167a0:	970a      	str	r7, [sp, #40]	; 0x28
 80167a2:	fb02 f20c 	mul.w	r2, r2, ip
 80167a6:	2720      	movs	r7, #32
 80167a8:	9709      	str	r7, [sp, #36]	; 0x24
 80167aa:	fb92 fcf4 	sdiv	ip, r2, r4
 80167ae:	9f09      	ldr	r7, [sp, #36]	; 0x24
 80167b0:	fb04 221c 	mls	r2, r4, ip, r2
 80167b4:	2a00      	cmp	r2, #0
 80167b6:	bfb8      	it	lt
 80167b8:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 80167bc:	4439      	add	r1, r7
 80167be:	fb0c a101 	mla	r1, ip, r1, sl
 80167c2:	80e9      	strh	r1, [r5, #6]
 80167c4:	44e6      	add	lr, ip
 80167c6:	990a      	ldr	r1, [sp, #40]	; 0x28
 80167c8:	f8a5 e004 	strh.w	lr, [r5, #4]
 80167cc:	eb08 0501 	add.w	r5, r8, r1
 80167d0:	6901      	ldr	r1, [r0, #16]
 80167d2:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 80167d6:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 80167da:	bfb8      	it	lt
 80167dc:	1912      	addlt	r2, r2, r4
 80167de:	ea58 070e 	orrs.w	r7, r8, lr
 80167e2:	d010      	beq.n	8016806 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 80167e4:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 80167e8:	f1be 0f00 	cmp.w	lr, #0
 80167ec:	db0b      	blt.n	8016806 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 80167ee:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 80167f0:	45be      	cmp	lr, r7
 80167f2:	da08      	bge.n	8016806 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 80167f4:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 80167f8:	45be      	cmp	lr, r7
 80167fa:	bf3c      	itt	cc
 80167fc:	3108      	addcc	r1, #8
 80167fe:	6101      	strcc	r1, [r0, #16]
 8016800:	f10e 0101 	add.w	r1, lr, #1
 8016804:	6081      	str	r1, [r0, #8]
 8016806:	6901      	ldr	r1, [r0, #16]
 8016808:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801680c:	800d      	strh	r5, [r1, #0]
 801680e:	f04f 0e00 	mov.w	lr, #0
 8016812:	42ae      	cmp	r6, r5
 8016814:	f8a1 8002 	strh.w	r8, [r1, #2]
 8016818:	f8a1 e004 	strh.w	lr, [r1, #4]
 801681c:	f8a1 e006 	strh.w	lr, [r1, #6]
 8016820:	4463      	add	r3, ip
 8016822:	d054      	beq.n	80168ce <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 8016824:	9901      	ldr	r1, [sp, #4]
 8016826:	1ac9      	subs	r1, r1, r3
 8016828:	4461      	add	r1, ip
 801682a:	0149      	lsls	r1, r1, #5
 801682c:	fb91 fef4 	sdiv	lr, r1, r4
 8016830:	fb04 111e 	mls	r1, r4, lr, r1
 8016834:	2900      	cmp	r1, #0
 8016836:	bfb8      	it	lt
 8016838:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 801683c:	f10e 0701 	add.w	r7, lr, #1
 8016840:	bfb8      	it	lt
 8016842:	1909      	addlt	r1, r1, r4
 8016844:	1b12      	subs	r2, r2, r4
 8016846:	970d      	str	r7, [sp, #52]	; 0x34
 8016848:	f8d0 a010 	ldr.w	sl, [r0, #16]
 801684c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801684e:	f8ba b004 	ldrh.w	fp, [sl, #4]
 8016852:	1852      	adds	r2, r2, r1
 8016854:	bf54      	ite	pl
 8016856:	f8dd c034 	ldrpl.w	ip, [sp, #52]	; 0x34
 801685a:	46f4      	movmi	ip, lr
 801685c:	44e3      	add	fp, ip
 801685e:	f8aa b004 	strh.w	fp, [sl, #4]
 8016862:	f8ba b006 	ldrh.w	fp, [sl, #6]
 8016866:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 801686a:	f8aa b006 	strh.w	fp, [sl, #6]
 801686e:	4463      	add	r3, ip
 8016870:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8016874:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8016878:	f8bc a004 	ldrh.w	sl, [ip, #4]
 801687c:	bf58      	it	pl
 801687e:	1b12      	subpl	r2, r2, r4
 8016880:	443d      	add	r5, r7
 8016882:	ea5b 070a 	orrs.w	r7, fp, sl
 8016886:	d014      	beq.n	80168b2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8016888:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 801688c:	f1ba 0f00 	cmp.w	sl, #0
 8016890:	db0f      	blt.n	80168b2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8016892:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8016894:	45ba      	cmp	sl, r7
 8016896:	da0c      	bge.n	80168b2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8016898:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 801689c:	45ba      	cmp	sl, r7
 801689e:	bf38      	it	cc
 80168a0:	f10c 0c08 	addcc.w	ip, ip, #8
 80168a4:	f10a 0a01 	add.w	sl, sl, #1
 80168a8:	bf38      	it	cc
 80168aa:	f8c0 c010 	strcc.w	ip, [r0, #16]
 80168ae:	f8c0 a008 	str.w	sl, [r0, #8]
 80168b2:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80168b6:	f04f 0700 	mov.w	r7, #0
 80168ba:	42ae      	cmp	r6, r5
 80168bc:	f8ac 5000 	strh.w	r5, [ip]
 80168c0:	f8ac 8002 	strh.w	r8, [ip, #2]
 80168c4:	f8ac 7004 	strh.w	r7, [ip, #4]
 80168c8:	f8ac 7006 	strh.w	r7, [ip, #6]
 80168cc:	d1bc      	bne.n	8016848 <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 80168ce:	6904      	ldr	r4, [r0, #16]
 80168d0:	9a01      	ldr	r2, [sp, #4]
 80168d2:	990c      	ldr	r1, [sp, #48]	; 0x30
 80168d4:	1ad3      	subs	r3, r2, r3
 80168d6:	88a2      	ldrh	r2, [r4, #4]
 80168d8:	441a      	add	r2, r3
 80168da:	80a2      	strh	r2, [r4, #4]
 80168dc:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80168de:	3120      	adds	r1, #32
 80168e0:	1a89      	subs	r1, r1, r2
 80168e2:	88e2      	ldrh	r2, [r4, #6]
 80168e4:	fb03 2301 	mla	r3, r3, r1, r2
 80168e8:	80e3      	strh	r3, [r4, #6]
 80168ea:	e64d      	b.n	8016588 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 80168ec:	f04f 37ff 	mov.w	r7, #4294967295
 80168f0:	970a      	str	r7, [sp, #40]	; 0x28
 80168f2:	434a      	muls	r2, r1
 80168f4:	4264      	negs	r4, r4
 80168f6:	2700      	movs	r7, #0
 80168f8:	e756      	b.n	80167a8 <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 80168fa:	ea4f 1867 	mov.w	r8, r7, asr #5
 80168fe:	f009 031f 	and.w	r3, r9, #31
 8016902:	45d0      	cmp	r8, sl
 8016904:	f007 071f 	and.w	r7, r7, #31
 8016908:	930f      	str	r3, [sp, #60]	; 0x3c
 801690a:	fa1f fc8c 	uxth.w	ip, ip
 801690e:	fa1f fe8e 	uxth.w	lr, lr
 8016912:	d10a      	bne.n	801692a <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 8016914:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016916:	449c      	add	ip, r3
 8016918:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801691a:	f8a5 c004 	strh.w	ip, [r5, #4]
 801691e:	441f      	add	r7, r3
 8016920:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016922:	fb03 e707 	mla	r7, r3, r7, lr
 8016926:	80ef      	strh	r7, [r5, #6]
 8016928:	e6b9      	b.n	801669e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 801692a:	2900      	cmp	r1, #0
 801692c:	f2c0 80a8 	blt.w	8016a80 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 8016930:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8016932:	f1c7 0320 	rsb	r3, r7, #32
 8016936:	4363      	muls	r3, r4
 8016938:	2401      	movs	r4, #1
 801693a:	940d      	str	r4, [sp, #52]	; 0x34
 801693c:	2420      	movs	r4, #32
 801693e:	940c      	str	r4, [sp, #48]	; 0x30
 8016940:	fb93 f4f1 	sdiv	r4, r3, r1
 8016944:	fb01 3b14 	mls	fp, r1, r4, r3
 8016948:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801694a:	f1bb 0f00 	cmp.w	fp, #0
 801694e:	bfb8      	it	lt
 8016950:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8016954:	441f      	add	r7, r3
 8016956:	fb04 e707 	mla	r7, r4, r7, lr
 801695a:	44a4      	add	ip, r4
 801695c:	f8a5 c004 	strh.w	ip, [r5, #4]
 8016960:	80ef      	strh	r7, [r5, #6]
 8016962:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8016966:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8016968:	f8bc e006 	ldrh.w	lr, [ip, #6]
 801696c:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8016970:	bfb8      	it	lt
 8016972:	448b      	addlt	fp, r1
 8016974:	eb08 0503 	add.w	r5, r8, r3
 8016978:	ea5e 0307 	orrs.w	r3, lr, r7
 801697c:	d011      	beq.n	80169a2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 801697e:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 8016982:	f1be 0f00 	cmp.w	lr, #0
 8016986:	db0c      	blt.n	80169a2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8016988:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 801698a:	45be      	cmp	lr, r7
 801698c:	da09      	bge.n	80169a2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 801698e:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8016992:	45be      	cmp	lr, r7
 8016994:	bf3c      	itt	cc
 8016996:	f10c 0708 	addcc.w	r7, ip, #8
 801699a:	6107      	strcc	r7, [r0, #16]
 801699c:	f10e 0701 	add.w	r7, lr, #1
 80169a0:	6087      	str	r7, [r0, #8]
 80169a2:	6907      	ldr	r7, [r0, #16]
 80169a4:	b213      	sxth	r3, r2
 80169a6:	9310      	str	r3, [sp, #64]	; 0x40
 80169a8:	807b      	strh	r3, [r7, #2]
 80169aa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80169ac:	803d      	strh	r5, [r7, #0]
 80169ae:	4555      	cmp	r5, sl
 80169b0:	80be      	strh	r6, [r7, #4]
 80169b2:	80fe      	strh	r6, [r7, #6]
 80169b4:	eb04 0c03 	add.w	ip, r4, r3
 80169b8:	d051      	beq.n	8016a5e <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 80169ba:	9b01      	ldr	r3, [sp, #4]
 80169bc:	eba3 070c 	sub.w	r7, r3, ip
 80169c0:	443c      	add	r4, r7
 80169c2:	0164      	lsls	r4, r4, #5
 80169c4:	fb94 f8f1 	sdiv	r8, r4, r1
 80169c8:	fb01 4418 	mls	r4, r1, r8, r4
 80169cc:	2c00      	cmp	r4, #0
 80169ce:	bfb8      	it	lt
 80169d0:	f108 38ff 	addlt.w	r8, r8, #4294967295
 80169d4:	ebab 0301 	sub.w	r3, fp, r1
 80169d8:	f108 0701 	add.w	r7, r8, #1
 80169dc:	bfb8      	it	lt
 80169de:	1864      	addlt	r4, r4, r1
 80169e0:	9309      	str	r3, [sp, #36]	; 0x24
 80169e2:	9711      	str	r7, [sp, #68]	; 0x44
 80169e4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80169e6:	f8d0 e010 	ldr.w	lr, [r0, #16]
 80169ea:	191b      	adds	r3, r3, r4
 80169ec:	bf58      	it	pl
 80169ee:	9f11      	ldrpl	r7, [sp, #68]	; 0x44
 80169f0:	f8be b004 	ldrh.w	fp, [lr, #4]
 80169f4:	9309      	str	r3, [sp, #36]	; 0x24
 80169f6:	bf48      	it	mi
 80169f8:	4647      	movmi	r7, r8
 80169fa:	44bb      	add	fp, r7
 80169fc:	f8ae b004 	strh.w	fp, [lr, #4]
 8016a00:	f8be b006 	ldrh.w	fp, [lr, #6]
 8016a04:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8016a08:	f8ae b006 	strh.w	fp, [lr, #6]
 8016a0c:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8016a10:	44bc      	add	ip, r7
 8016a12:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8016a14:	f8be b006 	ldrh.w	fp, [lr, #6]
 8016a18:	443d      	add	r5, r7
 8016a1a:	f8be 7004 	ldrh.w	r7, [lr, #4]
 8016a1e:	bf5c      	itt	pl
 8016a20:	1a5b      	subpl	r3, r3, r1
 8016a22:	9309      	strpl	r3, [sp, #36]	; 0x24
 8016a24:	ea5b 0307 	orrs.w	r3, fp, r7
 8016a28:	d011      	beq.n	8016a4e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8016a2a:	f9be b002 	ldrsh.w	fp, [lr, #2]
 8016a2e:	f1bb 0f00 	cmp.w	fp, #0
 8016a32:	db0c      	blt.n	8016a4e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8016a34:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8016a36:	45bb      	cmp	fp, r7
 8016a38:	da09      	bge.n	8016a4e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8016a3a:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8016a3e:	45bb      	cmp	fp, r7
 8016a40:	bf3c      	itt	cc
 8016a42:	f10e 0708 	addcc.w	r7, lr, #8
 8016a46:	6107      	strcc	r7, [r0, #16]
 8016a48:	f10b 0701 	add.w	r7, fp, #1
 8016a4c:	6087      	str	r7, [r0, #8]
 8016a4e:	6907      	ldr	r7, [r0, #16]
 8016a50:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016a52:	803d      	strh	r5, [r7, #0]
 8016a54:	4555      	cmp	r5, sl
 8016a56:	807b      	strh	r3, [r7, #2]
 8016a58:	80be      	strh	r6, [r7, #4]
 8016a5a:	80fe      	strh	r6, [r7, #6]
 8016a5c:	d1c2      	bne.n	80169e4 <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 8016a5e:	9b01      	ldr	r3, [sp, #4]
 8016a60:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8016a62:	eba3 0c0c 	sub.w	ip, r3, ip
 8016a66:	6903      	ldr	r3, [r0, #16]
 8016a68:	8899      	ldrh	r1, [r3, #4]
 8016a6a:	4461      	add	r1, ip
 8016a6c:	8099      	strh	r1, [r3, #4]
 8016a6e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8016a70:	3720      	adds	r7, #32
 8016a72:	1a7f      	subs	r7, r7, r1
 8016a74:	88d9      	ldrh	r1, [r3, #6]
 8016a76:	fb0c 1c07 	mla	ip, ip, r7, r1
 8016a7a:	f8a3 c006 	strh.w	ip, [r3, #6]
 8016a7e:	e60e      	b.n	801669e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8016a80:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016a82:	f04f 34ff 	mov.w	r4, #4294967295
 8016a86:	940d      	str	r4, [sp, #52]	; 0x34
 8016a88:	437b      	muls	r3, r7
 8016a8a:	4249      	negs	r1, r1
 8016a8c:	2400      	movs	r4, #0
 8016a8e:	e756      	b.n	801693e <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 8016a90:	9905      	ldr	r1, [sp, #20]
 8016a92:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 8016a96:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 8016a9a:	f001 011f 	and.w	r1, r1, #31
 8016a9e:	ea4f 1b69 	mov.w	fp, r9, asr #5
 8016aa2:	9102      	str	r1, [sp, #8]
 8016aa4:	9904      	ldr	r1, [sp, #16]
 8016aa6:	45f3      	cmp	fp, lr
 8016aa8:	f009 0c1f 	and.w	ip, r9, #31
 8016aac:	eba1 0406 	sub.w	r4, r1, r6
 8016ab0:	d108      	bne.n	8016ac4 <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 8016ab2:	9b02      	ldr	r3, [sp, #8]
 8016ab4:	449c      	add	ip, r3
 8016ab6:	44a0      	add	r8, r4
 8016ab8:	fb04 a40c 	mla	r4, r4, ip, sl
 8016abc:	f8a7 8004 	strh.w	r8, [r7, #4]
 8016ac0:	80fc      	strh	r4, [r7, #6]
 8016ac2:	e458      	b.n	8016376 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8016ac4:	9905      	ldr	r1, [sp, #20]
 8016ac6:	ebb1 0109 	subs.w	r1, r1, r9
 8016aca:	bf5b      	ittet	pl
 8016acc:	f1cc 0520 	rsbpl	r5, ip, #32
 8016ad0:	436c      	mulpl	r4, r5
 8016ad2:	2500      	movmi	r5, #0
 8016ad4:	2520      	movpl	r5, #32
 8016ad6:	bf44      	itt	mi
 8016ad8:	fb04 f40c 	mulmi.w	r4, r4, ip
 8016adc:	4249      	negmi	r1, r1
 8016ade:	9501      	str	r5, [sp, #4]
 8016ae0:	9b01      	ldr	r3, [sp, #4]
 8016ae2:	fb94 f5f1 	sdiv	r5, r4, r1
 8016ae6:	fb01 4415 	mls	r4, r1, r5, r4
 8016aea:	bf54      	ite	pl
 8016aec:	f04f 0901 	movpl.w	r9, #1
 8016af0:	f04f 39ff 	movmi.w	r9, #4294967295
 8016af4:	2c00      	cmp	r4, #0
 8016af6:	bfb8      	it	lt
 8016af8:	f105 35ff 	addlt.w	r5, r5, #4294967295
 8016afc:	449c      	add	ip, r3
 8016afe:	44a8      	add	r8, r5
 8016b00:	fb05 ac0c 	mla	ip, r5, ip, sl
 8016b04:	f8a7 8004 	strh.w	r8, [r7, #4]
 8016b08:	f8a7 c006 	strh.w	ip, [r7, #6]
 8016b0c:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8016b10:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 8016b14:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8016b18:	bfb8      	it	lt
 8016b1a:	1864      	addlt	r4, r4, r1
 8016b1c:	ea58 0707 	orrs.w	r7, r8, r7
 8016b20:	eb0b 0309 	add.w	r3, fp, r9
 8016b24:	d011      	beq.n	8016b4a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8016b26:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 8016b2a:	f1b8 0f00 	cmp.w	r8, #0
 8016b2e:	db0c      	blt.n	8016b4a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8016b30:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8016b32:	45b8      	cmp	r8, r7
 8016b34:	da09      	bge.n	8016b4a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8016b36:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 8016b3a:	45b8      	cmp	r8, r7
 8016b3c:	bf3c      	itt	cc
 8016b3e:	f10c 0708 	addcc.w	r7, ip, #8
 8016b42:	6107      	strcc	r7, [r0, #16]
 8016b44:	f108 0701 	add.w	r7, r8, #1
 8016b48:	6087      	str	r7, [r0, #8]
 8016b4a:	6907      	ldr	r7, [r0, #16]
 8016b4c:	f04f 0c00 	mov.w	ip, #0
 8016b50:	b212      	sxth	r2, r2
 8016b52:	459e      	cmp	lr, r3
 8016b54:	803b      	strh	r3, [r7, #0]
 8016b56:	807a      	strh	r2, [r7, #2]
 8016b58:	f8a7 c004 	strh.w	ip, [r7, #4]
 8016b5c:	f8a7 c006 	strh.w	ip, [r7, #6]
 8016b60:	442e      	add	r6, r5
 8016b62:	d04d      	beq.n	8016c00 <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 8016b64:	9f04      	ldr	r7, [sp, #16]
 8016b66:	1bbf      	subs	r7, r7, r6
 8016b68:	443d      	add	r5, r7
 8016b6a:	016d      	lsls	r5, r5, #5
 8016b6c:	fb95 f8f1 	sdiv	r8, r5, r1
 8016b70:	fb01 5518 	mls	r5, r1, r8, r5
 8016b74:	4565      	cmp	r5, ip
 8016b76:	bfb8      	it	lt
 8016b78:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8016b7c:	f108 0701 	add.w	r7, r8, #1
 8016b80:	bfb8      	it	lt
 8016b82:	186d      	addlt	r5, r5, r1
 8016b84:	1a64      	subs	r4, r4, r1
 8016b86:	9703      	str	r7, [sp, #12]
 8016b88:	f04f 0a00 	mov.w	sl, #0
 8016b8c:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8016b90:	1964      	adds	r4, r4, r5
 8016b92:	bf58      	it	pl
 8016b94:	9f03      	ldrpl	r7, [sp, #12]
 8016b96:	f8bc b004 	ldrh.w	fp, [ip, #4]
 8016b9a:	bf48      	it	mi
 8016b9c:	4647      	movmi	r7, r8
 8016b9e:	44bb      	add	fp, r7
 8016ba0:	f8ac b004 	strh.w	fp, [ip, #4]
 8016ba4:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8016ba8:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8016bac:	f8ac b006 	strh.w	fp, [ip, #6]
 8016bb0:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8016bb4:	443e      	add	r6, r7
 8016bb6:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8016bba:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8016bbe:	bf58      	it	pl
 8016bc0:	1a64      	subpl	r4, r4, r1
 8016bc2:	ea5b 0707 	orrs.w	r7, fp, r7
 8016bc6:	444b      	add	r3, r9
 8016bc8:	d011      	beq.n	8016bee <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8016bca:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 8016bce:	f1bb 0f00 	cmp.w	fp, #0
 8016bd2:	db0c      	blt.n	8016bee <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8016bd4:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8016bd6:	45bb      	cmp	fp, r7
 8016bd8:	da09      	bge.n	8016bee <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8016bda:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8016bde:	45bb      	cmp	fp, r7
 8016be0:	bf3c      	itt	cc
 8016be2:	f10c 0708 	addcc.w	r7, ip, #8
 8016be6:	6107      	strcc	r7, [r0, #16]
 8016be8:	f10b 0701 	add.w	r7, fp, #1
 8016bec:	6087      	str	r7, [r0, #8]
 8016bee:	6907      	ldr	r7, [r0, #16]
 8016bf0:	459e      	cmp	lr, r3
 8016bf2:	803b      	strh	r3, [r7, #0]
 8016bf4:	807a      	strh	r2, [r7, #2]
 8016bf6:	f8a7 a004 	strh.w	sl, [r7, #4]
 8016bfa:	f8a7 a006 	strh.w	sl, [r7, #6]
 8016bfe:	d1c5      	bne.n	8016b8c <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 8016c00:	9b04      	ldr	r3, [sp, #16]
 8016c02:	1b9e      	subs	r6, r3, r6
 8016c04:	6903      	ldr	r3, [r0, #16]
 8016c06:	889a      	ldrh	r2, [r3, #4]
 8016c08:	4432      	add	r2, r6
 8016c0a:	809a      	strh	r2, [r3, #4]
 8016c0c:	9a02      	ldr	r2, [sp, #8]
 8016c0e:	f102 0c20 	add.w	ip, r2, #32
 8016c12:	9a01      	ldr	r2, [sp, #4]
 8016c14:	ebac 0c02 	sub.w	ip, ip, r2
 8016c18:	88da      	ldrh	r2, [r3, #6]
 8016c1a:	fb06 260c 	mla	r6, r6, ip, r2
 8016c1e:	80de      	strh	r6, [r3, #6]
 8016c20:	f7ff bba9 	b.w	8016376 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

08016c24 <_ZN8touchgfx7Outline6lineToEii>:
 8016c24:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8016c26:	079b      	lsls	r3, r3, #30
 8016c28:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8016c2a:	460e      	mov	r6, r1
 8016c2c:	4615      	mov	r5, r2
 8016c2e:	d511      	bpl.n	8016c54 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8016c30:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 8016c34:	ea86 0701 	eor.w	r7, r6, r1
 8016c38:	ea85 0302 	eor.w	r3, r5, r2
 8016c3c:	433b      	orrs	r3, r7
 8016c3e:	d009      	beq.n	8016c54 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8016c40:	4633      	mov	r3, r6
 8016c42:	9500      	str	r5, [sp, #0]
 8016c44:	f7ff fb3e 	bl	80162c4 <_ZN8touchgfx7Outline10renderLineEiiii>
 8016c48:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8016c4a:	e9c0 6505 	strd	r6, r5, [r0, #20]
 8016c4e:	f043 0301 	orr.w	r3, r3, #1
 8016c52:	6243      	str	r3, [r0, #36]	; 0x24
 8016c54:	b003      	add	sp, #12
 8016c56:	bdf0      	pop	{r4, r5, r6, r7, pc}

08016c58 <_ZN8touchgfx7Outline6moveToEii>:
 8016c58:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8016c5a:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8016c5c:	4615      	mov	r5, r2
 8016c5e:	079a      	lsls	r2, r3, #30
 8016c60:	4604      	mov	r4, r0
 8016c62:	460e      	mov	r6, r1
 8016c64:	d401      	bmi.n	8016c6a <_ZN8touchgfx7Outline6moveToEii+0x12>
 8016c66:	f7ff faf9 	bl	801625c <_ZN8touchgfx7Outline5resetEv>
 8016c6a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8016c6c:	07db      	lsls	r3, r3, #31
 8016c6e:	d504      	bpl.n	8016c7a <_ZN8touchgfx7Outline6moveToEii+0x22>
 8016c70:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 8016c74:	4620      	mov	r0, r4
 8016c76:	f7ff ffd5 	bl	8016c24 <_ZN8touchgfx7Outline6lineToEii>
 8016c7a:	6923      	ldr	r3, [r4, #16]
 8016c7c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8016c80:	1170      	asrs	r0, r6, #5
 8016c82:	4290      	cmp	r0, r2
 8016c84:	ea4f 1165 	mov.w	r1, r5, asr #5
 8016c88:	d103      	bne.n	8016c92 <_ZN8touchgfx7Outline6moveToEii+0x3a>
 8016c8a:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8016c8e:	4291      	cmp	r1, r2
 8016c90:	d01a      	beq.n	8016cc8 <_ZN8touchgfx7Outline6moveToEii+0x70>
 8016c92:	88df      	ldrh	r7, [r3, #6]
 8016c94:	889a      	ldrh	r2, [r3, #4]
 8016c96:	433a      	orrs	r2, r7
 8016c98:	d010      	beq.n	8016cbc <_ZN8touchgfx7Outline6moveToEii+0x64>
 8016c9a:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8016c9e:	2a00      	cmp	r2, #0
 8016ca0:	db0c      	blt.n	8016cbc <_ZN8touchgfx7Outline6moveToEii+0x64>
 8016ca2:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8016ca4:	42ba      	cmp	r2, r7
 8016ca6:	da09      	bge.n	8016cbc <_ZN8touchgfx7Outline6moveToEii+0x64>
 8016ca8:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 8016cac:	42ba      	cmp	r2, r7
 8016cae:	bf38      	it	cc
 8016cb0:	3308      	addcc	r3, #8
 8016cb2:	f102 0201 	add.w	r2, r2, #1
 8016cb6:	bf38      	it	cc
 8016cb8:	6123      	strcc	r3, [r4, #16]
 8016cba:	60a2      	str	r2, [r4, #8]
 8016cbc:	6923      	ldr	r3, [r4, #16]
 8016cbe:	2200      	movs	r2, #0
 8016cc0:	8018      	strh	r0, [r3, #0]
 8016cc2:	8059      	strh	r1, [r3, #2]
 8016cc4:	809a      	strh	r2, [r3, #4]
 8016cc6:	80da      	strh	r2, [r3, #6]
 8016cc8:	6166      	str	r6, [r4, #20]
 8016cca:	e9c4 5606 	strd	r5, r6, [r4, #24]
 8016cce:	6225      	str	r5, [r4, #32]
 8016cd0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08016cd2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 8016cd2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8016cd6:	b0d0      	sub	sp, #320	; 0x140
 8016cd8:	466c      	mov	r4, sp
 8016cda:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 8016cde:	4627      	mov	r7, r4
 8016ce0:	1a0d      	subs	r5, r1, r0
 8016ce2:	2d48      	cmp	r5, #72	; 0x48
 8016ce4:	f100 0308 	add.w	r3, r0, #8
 8016ce8:	f340 80d5 	ble.w	8016e96 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 8016cec:	112d      	asrs	r5, r5, #4
 8016cee:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 8016cf2:	f9b0 9000 	ldrsh.w	r9, [r0]
 8016cf6:	6816      	ldr	r6, [r2, #0]
 8016cf8:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 8016cfc:	6006      	str	r6, [r0, #0]
 8016cfe:	6856      	ldr	r6, [r2, #4]
 8016d00:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8016d04:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8016d08:	6046      	str	r6, [r0, #4]
 8016d0a:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 8016d0e:	f8a2 8002 	strh.w	r8, [r2, #2]
 8016d12:	f8a2 e004 	strh.w	lr, [r2, #4]
 8016d16:	f8a2 c006 	strh.w	ip, [r2, #6]
 8016d1a:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 8016d1e:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 8016d22:	4565      	cmp	r5, ip
 8016d24:	f1a1 0208 	sub.w	r2, r1, #8
 8016d28:	db06      	blt.n	8016d38 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 8016d2a:	d119      	bne.n	8016d60 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 8016d2c:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 8016d30:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 8016d34:	42ae      	cmp	r6, r5
 8016d36:	dd13      	ble.n	8016d60 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 8016d38:	460e      	mov	r6, r1
 8016d3a:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 8016d3e:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8016d42:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 8016d46:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 8016d4a:	601d      	str	r5, [r3, #0]
 8016d4c:	6875      	ldr	r5, [r6, #4]
 8016d4e:	605d      	str	r5, [r3, #4]
 8016d50:	f821 9c08 	strh.w	r9, [r1, #-8]
 8016d54:	f821 cc06 	strh.w	ip, [r1, #-6]
 8016d58:	f821 8c04 	strh.w	r8, [r1, #-4]
 8016d5c:	f821 ec02 	strh.w	lr, [r1, #-2]
 8016d60:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8016d64:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 8016d68:	42ae      	cmp	r6, r5
 8016d6a:	db06      	blt.n	8016d7a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 8016d6c:	d116      	bne.n	8016d9c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 8016d6e:	f9b0 c000 	ldrsh.w	ip, [r0]
 8016d72:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 8016d76:	45ac      	cmp	ip, r5
 8016d78:	da10      	bge.n	8016d9c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 8016d7a:	681d      	ldr	r5, [r3, #0]
 8016d7c:	f9b0 8000 	ldrsh.w	r8, [r0]
 8016d80:	6005      	str	r5, [r0, #0]
 8016d82:	685d      	ldr	r5, [r3, #4]
 8016d84:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8016d88:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8016d8c:	f8a0 8008 	strh.w	r8, [r0, #8]
 8016d90:	6045      	str	r5, [r0, #4]
 8016d92:	8146      	strh	r6, [r0, #10]
 8016d94:	f8a0 e00c 	strh.w	lr, [r0, #12]
 8016d98:	f8a0 c00e 	strh.w	ip, [r0, #14]
 8016d9c:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 8016da0:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 8016da4:	4565      	cmp	r5, ip
 8016da6:	db06      	blt.n	8016db6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 8016da8:	d119      	bne.n	8016dde <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8016daa:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 8016dae:	f9b0 5000 	ldrsh.w	r5, [r0]
 8016db2:	42ae      	cmp	r6, r5
 8016db4:	da13      	bge.n	8016dde <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8016db6:	460e      	mov	r6, r1
 8016db8:	f9b0 9000 	ldrsh.w	r9, [r0]
 8016dbc:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8016dc0:	6005      	str	r5, [r0, #0]
 8016dc2:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 8016dc6:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 8016dca:	6875      	ldr	r5, [r6, #4]
 8016dcc:	6045      	str	r5, [r0, #4]
 8016dce:	f821 9c08 	strh.w	r9, [r1, #-8]
 8016dd2:	f821 cc06 	strh.w	ip, [r1, #-6]
 8016dd6:	f821 8c04 	strh.w	r8, [r1, #-4]
 8016dda:	f821 ec02 	strh.w	lr, [r1, #-2]
 8016dde:	3308      	adds	r3, #8
 8016de0:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 8016de4:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 8016de8:	45e6      	cmp	lr, ip
 8016dea:	dbf8      	blt.n	8016dde <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8016dec:	d105      	bne.n	8016dfa <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8016dee:	f9b3 6000 	ldrsh.w	r6, [r3]
 8016df2:	f9b0 5000 	ldrsh.w	r5, [r0]
 8016df6:	42ae      	cmp	r6, r5
 8016df8:	dbf1      	blt.n	8016dde <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8016dfa:	4615      	mov	r5, r2
 8016dfc:	3a08      	subs	r2, #8
 8016dfe:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 8016e02:	45b4      	cmp	ip, r6
 8016e04:	dbf9      	blt.n	8016dfa <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8016e06:	d105      	bne.n	8016e14 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 8016e08:	f9b0 8000 	ldrsh.w	r8, [r0]
 8016e0c:	f9b2 6000 	ldrsh.w	r6, [r2]
 8016e10:	45b0      	cmp	r8, r6
 8016e12:	dbf2      	blt.n	8016dfa <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8016e14:	4293      	cmp	r3, r2
 8016e16:	f1a5 0608 	sub.w	r6, r5, #8
 8016e1a:	d816      	bhi.n	8016e4a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 8016e1c:	f8d6 c000 	ldr.w	ip, [r6]
 8016e20:	f9b3 a000 	ldrsh.w	sl, [r3]
 8016e24:	f8c3 c000 	str.w	ip, [r3]
 8016e28:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 8016e2c:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 8016e30:	f8d6 c004 	ldr.w	ip, [r6, #4]
 8016e34:	f8c3 c004 	str.w	ip, [r3, #4]
 8016e38:	f825 ac08 	strh.w	sl, [r5, #-8]
 8016e3c:	f825 ec06 	strh.w	lr, [r5, #-6]
 8016e40:	f825 9c04 	strh.w	r9, [r5, #-4]
 8016e44:	f825 8c02 	strh.w	r8, [r5, #-2]
 8016e48:	e7c9      	b.n	8016dde <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8016e4a:	f8d6 e000 	ldr.w	lr, [r6]
 8016e4e:	f9b0 a000 	ldrsh.w	sl, [r0]
 8016e52:	f8c0 e000 	str.w	lr, [r0]
 8016e56:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 8016e5a:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 8016e5e:	f8d6 e004 	ldr.w	lr, [r6, #4]
 8016e62:	f8c0 e004 	str.w	lr, [r0, #4]
 8016e66:	f825 ac08 	strh.w	sl, [r5, #-8]
 8016e6a:	f825 cc06 	strh.w	ip, [r5, #-6]
 8016e6e:	f825 9c04 	strh.w	r9, [r5, #-4]
 8016e72:	f825 8c02 	strh.w	r8, [r5, #-2]
 8016e76:	1acd      	subs	r5, r1, r3
 8016e78:	1a16      	subs	r6, r2, r0
 8016e7a:	10ed      	asrs	r5, r5, #3
 8016e7c:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 8016e80:	bfb5      	itete	lt
 8016e82:	e9c4 0200 	strdlt	r0, r2, [r4]
 8016e86:	e9c4 3100 	strdge	r3, r1, [r4]
 8016e8a:	460a      	movlt	r2, r1
 8016e8c:	4603      	movge	r3, r0
 8016e8e:	3408      	adds	r4, #8
 8016e90:	4618      	mov	r0, r3
 8016e92:	4611      	mov	r1, r2
 8016e94:	e724      	b.n	8016ce0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 8016e96:	4299      	cmp	r1, r3
 8016e98:	d928      	bls.n	8016eec <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 8016e9a:	f1a3 0210 	sub.w	r2, r3, #16
 8016e9e:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 8016ea2:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 8016ea6:	45ac      	cmp	ip, r5
 8016ea8:	db06      	blt.n	8016eb8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 8016eaa:	d11d      	bne.n	8016ee8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 8016eac:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 8016eb0:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 8016eb4:	42ae      	cmp	r6, r5
 8016eb6:	da17      	bge.n	8016ee8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 8016eb8:	4615      	mov	r5, r2
 8016eba:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 8016ebe:	f855 6f08 	ldr.w	r6, [r5, #8]!
 8016ec2:	6116      	str	r6, [r2, #16]
 8016ec4:	686e      	ldr	r6, [r5, #4]
 8016ec6:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 8016eca:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 8016ece:	f8a2 9008 	strh.w	r9, [r2, #8]
 8016ed2:	42a8      	cmp	r0, r5
 8016ed4:	6156      	str	r6, [r2, #20]
 8016ed6:	f8a2 c00a 	strh.w	ip, [r2, #10]
 8016eda:	f8a2 800c 	strh.w	r8, [r2, #12]
 8016ede:	f8a2 e00e 	strh.w	lr, [r2, #14]
 8016ee2:	f1a2 0208 	sub.w	r2, r2, #8
 8016ee6:	d1da      	bne.n	8016e9e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 8016ee8:	3308      	adds	r3, #8
 8016eea:	e7d4      	b.n	8016e96 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 8016eec:	42bc      	cmp	r4, r7
 8016eee:	d903      	bls.n	8016ef8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 8016ef0:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 8016ef4:	3c08      	subs	r4, #8
 8016ef6:	e6f3      	b.n	8016ce0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 8016ef8:	b050      	add	sp, #320	; 0x140
 8016efa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08016efe <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 8016efe:	b510      	push	{r4, lr}
 8016f00:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8016f02:	07da      	lsls	r2, r3, #31
 8016f04:	4604      	mov	r4, r0
 8016f06:	d507      	bpl.n	8016f18 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 8016f08:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 8016f0c:	f7ff fe8a 	bl	8016c24 <_ZN8touchgfx7Outline6lineToEii>
 8016f10:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8016f12:	f023 0301 	bic.w	r3, r3, #1
 8016f16:	6243      	str	r3, [r0, #36]	; 0x24
 8016f18:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8016f1a:	079b      	lsls	r3, r3, #30
 8016f1c:	d521      	bpl.n	8016f62 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 8016f1e:	6923      	ldr	r3, [r4, #16]
 8016f20:	88d9      	ldrh	r1, [r3, #6]
 8016f22:	889a      	ldrh	r2, [r3, #4]
 8016f24:	430a      	orrs	r2, r1
 8016f26:	d010      	beq.n	8016f4a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8016f28:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8016f2c:	2a00      	cmp	r2, #0
 8016f2e:	db0c      	blt.n	8016f4a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8016f30:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8016f32:	428a      	cmp	r2, r1
 8016f34:	da09      	bge.n	8016f4a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8016f36:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 8016f3a:	4291      	cmp	r1, r2
 8016f3c:	bf88      	it	hi
 8016f3e:	3308      	addhi	r3, #8
 8016f40:	f102 0201 	add.w	r2, r2, #1
 8016f44:	bf88      	it	hi
 8016f46:	6123      	strhi	r3, [r4, #16]
 8016f48:	60a2      	str	r2, [r4, #8]
 8016f4a:	68a1      	ldr	r1, [r4, #8]
 8016f4c:	b129      	cbz	r1, 8016f5a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 8016f4e:	6863      	ldr	r3, [r4, #4]
 8016f50:	4299      	cmp	r1, r3
 8016f52:	d802      	bhi.n	8016f5a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 8016f54:	68e0      	ldr	r0, [r4, #12]
 8016f56:	f7ff febc 	bl	8016cd2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 8016f5a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8016f5c:	f023 0302 	bic.w	r3, r3, #2
 8016f60:	6263      	str	r3, [r4, #36]	; 0x24
 8016f62:	68e0      	ldr	r0, [r4, #12]
 8016f64:	bd10      	pop	{r4, pc}
	...

08016f68 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 8016f68:	4b02      	ldr	r3, [pc, #8]	; (8016f74 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 8016f6a:	6018      	str	r0, [r3, #0]
 8016f6c:	4b02      	ldr	r3, [pc, #8]	; (8016f78 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 8016f6e:	6019      	str	r1, [r3, #0]
 8016f70:	4770      	bx	lr
 8016f72:	bf00      	nop
 8016f74:	20013854 	.word	0x20013854
 8016f78:	20013858 	.word	0x20013858

08016f7c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>:
 8016f7c:	4a02      	ldr	r2, [pc, #8]	; (8016f88 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0xc>)
 8016f7e:	2300      	movs	r3, #0
 8016f80:	6013      	str	r3, [r2, #0]
 8016f82:	4a02      	ldr	r2, [pc, #8]	; (8016f8c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0x10>)
 8016f84:	6013      	str	r3, [r2, #0]
 8016f86:	4770      	bx	lr
 8016f88:	20013854 	.word	0x20013854
 8016f8c:	20013858 	.word	0x20013858

08016f90 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 8016f90:	4b01      	ldr	r3, [pc, #4]	; (8016f98 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 8016f92:	6818      	ldr	r0, [r3, #0]
 8016f94:	4770      	bx	lr
 8016f96:	bf00      	nop
 8016f98:	20013854 	.word	0x20013854

08016f9c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 8016f9c:	4b01      	ldr	r3, [pc, #4]	; (8016fa4 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 8016f9e:	6818      	ldr	r0, [r3, #0]
 8016fa0:	4770      	bx	lr
 8016fa2:	bf00      	nop
 8016fa4:	20013858 	.word	0x20013858

08016fa8 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 8016fa8:	b510      	push	{r4, lr}
 8016faa:	6803      	ldr	r3, [r0, #0]
 8016fac:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016fae:	460c      	mov	r4, r1
 8016fb0:	4798      	blx	r3
 8016fb2:	1b03      	subs	r3, r0, r4
 8016fb4:	4258      	negs	r0, r3
 8016fb6:	4158      	adcs	r0, r3
 8016fb8:	bd10      	pop	{r4, pc}
	...

08016fbc <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 8016fbc:	4b01      	ldr	r3, [pc, #4]	; (8016fc4 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 8016fbe:	6019      	str	r1, [r3, #0]
 8016fc0:	4770      	bx	lr
 8016fc2:	bf00      	nop
 8016fc4:	2001385c 	.word	0x2001385c

08016fc8 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8016fc8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016fcc:	4696      	mov	lr, r2
 8016fce:	4605      	mov	r5, r0
 8016fd0:	4614      	mov	r4, r2
 8016fd2:	460e      	mov	r6, r1
 8016fd4:	461f      	mov	r7, r3
 8016fd6:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8016fda:	b097      	sub	sp, #92	; 0x5c
 8016fdc:	f10d 0c1c 	add.w	ip, sp, #28
 8016fe0:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8016fe4:	f8de 3000 	ldr.w	r3, [lr]
 8016fe8:	f8cc 3000 	str.w	r3, [ip]
 8016fec:	f104 0e14 	add.w	lr, r4, #20
 8016ff0:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8016ff4:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8016ff8:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8016ffc:	f8de 3000 	ldr.w	r3, [lr]
 8017000:	f8cc 3000 	str.w	r3, [ip]
 8017004:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8017008:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801700c:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8017010:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8017014:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 8017018:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 801701c:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 8017020:	f8de 3000 	ldr.w	r3, [lr]
 8017024:	f8cc 3000 	str.w	r3, [ip]
 8017028:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801702a:	682b      	ldr	r3, [r5, #0]
 801702c:	9201      	str	r2, [sp, #4]
 801702e:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8017032:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8017034:	9200      	str	r2, [sp, #0]
 8017036:	f8cd 8008 	str.w	r8, [sp, #8]
 801703a:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 801703e:	aa07      	add	r2, sp, #28
 8017040:	463b      	mov	r3, r7
 8017042:	4631      	mov	r1, r6
 8017044:	4628      	mov	r0, r5
 8017046:	47d8      	blx	fp
 8017048:	46a6      	mov	lr, r4
 801704a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801704e:	f10d 0c1c 	add.w	ip, sp, #28
 8017052:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8017056:	f8de 3000 	ldr.w	r3, [lr]
 801705a:	f8cc 3000 	str.w	r3, [ip]
 801705e:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8017062:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8017066:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 801706a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801706e:	343c      	adds	r4, #60	; 0x3c
 8017070:	f8de 3000 	ldr.w	r3, [lr]
 8017074:	f8cc 3000 	str.w	r3, [ip]
 8017078:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801707a:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 801707e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8017082:	6823      	ldr	r3, [r4, #0]
 8017084:	f8cc 3000 	str.w	r3, [ip]
 8017088:	682b      	ldr	r3, [r5, #0]
 801708a:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 801708e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8017090:	9201      	str	r2, [sp, #4]
 8017092:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8017094:	9200      	str	r2, [sp, #0]
 8017096:	f8cd 8008 	str.w	r8, [sp, #8]
 801709a:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 801709c:	aa07      	add	r2, sp, #28
 801709e:	463b      	mov	r3, r7
 80170a0:	4631      	mov	r1, r6
 80170a2:	4628      	mov	r0, r5
 80170a4:	47a0      	blx	r4
 80170a6:	b017      	add	sp, #92	; 0x5c
 80170a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080170ac <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 80170ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80170b0:	b08d      	sub	sp, #52	; 0x34
 80170b2:	4688      	mov	r8, r1
 80170b4:	9916      	ldr	r1, [sp, #88]	; 0x58
 80170b6:	f8d3 c000 	ldr.w	ip, [r3]
 80170ba:	680f      	ldr	r7, [r1, #0]
 80170bc:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 80170c0:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 80170c4:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 80170c8:	edd3 6a07 	vldr	s13, [r3, #28]
 80170cc:	9918      	ldr	r1, [sp, #96]	; 0x60
 80170ce:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 80170d2:	f9b1 9000 	ldrsh.w	r9, [r1]
 80170d6:	f9ba 1000 	ldrsh.w	r1, [sl]
 80170da:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 80170de:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 80170e2:	eba7 070c 	sub.w	r7, r7, ip
 80170e6:	42bc      	cmp	r4, r7
 80170e8:	bfa8      	it	ge
 80170ea:	463c      	movge	r4, r7
 80170ec:	ee07 4a90 	vmov	s15, r4
 80170f0:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 80170f4:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 80170f8:	ee25 4a04 	vmul.f32	s8, s10, s8
 80170fc:	ee65 4a24 	vmul.f32	s9, s10, s9
 8017100:	ee25 5a27 	vmul.f32	s10, s10, s15
 8017104:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8017108:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 801710c:	eb09 0e0c 	add.w	lr, r9, ip
 8017110:	4571      	cmp	r1, lr
 8017112:	ee71 0aa4 	vadd.f32	s1, s3, s9
 8017116:	ee32 1a05 	vadd.f32	s2, s4, s10
 801711a:	ee36 0a84 	vadd.f32	s0, s13, s8
 801711e:	ee61 1a87 	vmul.f32	s3, s3, s14
 8017122:	ee22 2a07 	vmul.f32	s4, s4, s14
 8017126:	f340 808d 	ble.w	8017244 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 801712a:	eba1 060e 	sub.w	r6, r1, lr
 801712e:	fb96 f5f4 	sdiv	r5, r6, r4
 8017132:	ee07 5a10 	vmov	s14, r5
 8017136:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801713a:	2d00      	cmp	r5, #0
 801713c:	fb04 6615 	mls	r6, r4, r5, r6
 8017140:	eea7 0a04 	vfma.f32	s0, s14, s8
 8017144:	eee7 0a24 	vfma.f32	s1, s14, s9
 8017148:	eea7 1a05 	vfma.f32	s2, s14, s10
 801714c:	dd13      	ble.n	8017176 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 801714e:	ee70 6a44 	vsub.f32	s13, s0, s8
 8017152:	ee70 1ae4 	vsub.f32	s3, s1, s9
 8017156:	eef5 6a40 	vcmp.f32	s13, #0.0
 801715a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801715e:	bf18      	it	ne
 8017160:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 8017164:	ee31 2a45 	vsub.f32	s4, s2, s10
 8017168:	bf08      	it	eq
 801716a:	eeb0 7a67 	vmoveq.f32	s14, s15
 801716e:	ee61 1a87 	vmul.f32	s3, s3, s14
 8017172:	ee22 2a07 	vmul.f32	s4, s4, s14
 8017176:	fb05 f204 	mul.w	r2, r5, r4
 801717a:	1abf      	subs	r7, r7, r2
 801717c:	4494      	add	ip, r2
 801717e:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 8017182:	4411      	add	r1, r2
 8017184:	eb09 020c 	add.w	r2, r9, ip
 8017188:	443a      	add	r2, r7
 801718a:	b209      	sxth	r1, r1
 801718c:	428a      	cmp	r2, r1
 801718e:	bfc4      	itt	gt
 8017190:	eba1 0209 	subgt.w	r2, r1, r9
 8017194:	eba2 070c 	subgt.w	r7, r2, ip
 8017198:	2f00      	cmp	r7, #0
 801719a:	dd50      	ble.n	801723e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 801719c:	fb97 f1f4 	sdiv	r1, r7, r4
 80171a0:	fb04 7211 	mls	r2, r4, r1, r7
 80171a4:	b90a      	cbnz	r2, 80171aa <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 80171a6:	3901      	subs	r1, #1
 80171a8:	4622      	mov	r2, r4
 80171aa:	eec7 3a80 	vdiv.f32	s7, s15, s0
 80171ae:	6840      	ldr	r0, [r0, #4]
 80171b0:	900b      	str	r0, [sp, #44]	; 0x2c
 80171b2:	f8d0 a000 	ldr.w	sl, [r0]
 80171b6:	9817      	ldr	r0, [sp, #92]	; 0x5c
 80171b8:	9008      	str	r0, [sp, #32]
 80171ba:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 80171be:	9818      	ldr	r0, [sp, #96]	; 0x60
 80171c0:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 80171c4:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 80171c8:	695b      	ldr	r3, [r3, #20]
 80171ca:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80171cc:	445b      	add	r3, fp
 80171ce:	eef0 6a42 	vmov.f32	s13, s4
 80171d2:	ee60 2aa3 	vmul.f32	s5, s1, s7
 80171d6:	ee21 3a23 	vmul.f32	s6, s2, s7
 80171da:	ee72 7ae1 	vsub.f32	s15, s5, s3
 80171de:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80171e2:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 80171e6:	9307      	str	r3, [sp, #28]
 80171e8:	ee17 7a90 	vmov	r7, s15
 80171ec:	ee73 7a42 	vsub.f32	s15, s6, s4
 80171f0:	eeb0 7a61 	vmov.f32	s14, s3
 80171f4:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 80171f8:	ee16 3a90 	vmov	r3, s13
 80171fc:	fb97 f7f4 	sdiv	r7, r7, r4
 8017200:	ee17 ca90 	vmov	ip, s15
 8017204:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8017208:	fb9c fcf4 	sdiv	ip, ip, r4
 801720c:	fb0c 3306 	mla	r3, ip, r6, r3
 8017210:	9302      	str	r3, [sp, #8]
 8017212:	ee17 3a10 	vmov	r3, s14
 8017216:	44b6      	add	lr, r6
 8017218:	fb04 e505 	mla	r5, r4, r5, lr
 801721c:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 8017220:	fb07 3706 	mla	r7, r7, r6, r3
 8017224:	e9cd 8505 	strd	r8, r5, [sp, #20]
 8017228:	e9cd 4700 	strd	r4, r7, [sp]
 801722c:	2900      	cmp	r1, #0
 801722e:	bfcc      	ite	gt
 8017230:	46a1      	movgt	r9, r4
 8017232:	4691      	movle	r9, r2
 8017234:	eba9 0306 	sub.w	r3, r9, r6
 8017238:	f8da 4008 	ldr.w	r4, [sl, #8]
 801723c:	47a0      	blx	r4
 801723e:	b00d      	add	sp, #52	; 0x34
 8017240:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017244:	2500      	movs	r5, #0
 8017246:	462e      	mov	r6, r5
 8017248:	e799      	b.n	801717e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

0801724c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 801724c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017250:	b0db      	sub	sp, #364	; 0x16c
 8017252:	461d      	mov	r5, r3
 8017254:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 8017258:	930a      	str	r3, [sp, #40]	; 0x28
 801725a:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 801725e:	930b      	str	r3, [sp, #44]	; 0x2c
 8017260:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 8017264:	9310      	str	r3, [sp, #64]	; 0x40
 8017266:	6803      	ldr	r3, [r0, #0]
 8017268:	910f      	str	r1, [sp, #60]	; 0x3c
 801726a:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 801726c:	9009      	str	r0, [sp, #36]	; 0x24
 801726e:	4614      	mov	r4, r2
 8017270:	4629      	mov	r1, r5
 8017272:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8017276:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 801727a:	47b8      	blx	r7
 801727c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801727e:	6058      	str	r0, [r3, #4]
 8017280:	2800      	cmp	r0, #0
 8017282:	f000 83a1 	beq.w	80179c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8017286:	682b      	ldr	r3, [r5, #0]
 8017288:	9314      	str	r3, [sp, #80]	; 0x50
 801728a:	686b      	ldr	r3, [r5, #4]
 801728c:	9315      	str	r3, [sp, #84]	; 0x54
 801728e:	4bc4      	ldr	r3, [pc, #784]	; (80175a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 8017290:	ed94 7a02 	vldr	s14, [r4, #8]
 8017294:	7819      	ldrb	r1, [r3, #0]
 8017296:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 801729a:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 801729e:	2900      	cmp	r1, #0
 80172a0:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80172a4:	bf16      	itet	ne
 80172a6:	4619      	movne	r1, r3
 80172a8:	4611      	moveq	r1, r2
 80172aa:	4613      	movne	r3, r2
 80172ac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80172b0:	9116      	str	r1, [sp, #88]	; 0x58
 80172b2:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 80172b6:	f240 8387 	bls.w	80179c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80172ba:	ed94 7a07 	vldr	s14, [r4, #28]
 80172be:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80172c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80172c6:	f240 837f 	bls.w	80179c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80172ca:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 80172ce:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80172d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80172d6:	f240 8377 	bls.w	80179c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80172da:	6822      	ldr	r2, [r4, #0]
 80172dc:	4bb1      	ldr	r3, [pc, #708]	; (80175a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 80172de:	429a      	cmp	r2, r3
 80172e0:	f2c0 8372 	blt.w	80179c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80172e4:	49b0      	ldr	r1, [pc, #704]	; (80175a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 80172e6:	6963      	ldr	r3, [r4, #20]
 80172e8:	428a      	cmp	r2, r1
 80172ea:	f300 836d 	bgt.w	80179c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80172ee:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 80172f2:	48ae      	ldr	r0, [pc, #696]	; (80175ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 80172f4:	33ff      	adds	r3, #255	; 0xff
 80172f6:	4283      	cmp	r3, r0
 80172f8:	f200 8366 	bhi.w	80179c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80172fc:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 80172fe:	4dac      	ldr	r5, [pc, #688]	; (80175b0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 8017300:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8017304:	33ff      	adds	r3, #255	; 0xff
 8017306:	42ab      	cmp	r3, r5
 8017308:	f200 835e 	bhi.w	80179c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801730c:	6862      	ldr	r2, [r4, #4]
 801730e:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 8017312:	33ff      	adds	r3, #255	; 0xff
 8017314:	4283      	cmp	r3, r0
 8017316:	f200 8357 	bhi.w	80179c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801731a:	69a1      	ldr	r1, [r4, #24]
 801731c:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 8017320:	33ff      	adds	r3, #255	; 0xff
 8017322:	4283      	cmp	r3, r0
 8017324:	f200 8350 	bhi.w	80179c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8017328:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 801732a:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 801732e:	30ff      	adds	r0, #255	; 0xff
 8017330:	42a8      	cmp	r0, r5
 8017332:	f200 8349 	bhi.w	80179c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8017336:	428a      	cmp	r2, r1
 8017338:	f280 8110 	bge.w	801755c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 801733c:	429a      	cmp	r2, r3
 801733e:	f300 8119 	bgt.w	8017574 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 8017342:	4299      	cmp	r1, r3
 8017344:	f280 811d 	bge.w	8017582 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 8017348:	2502      	movs	r5, #2
 801734a:	2701      	movs	r7, #1
 801734c:	46a9      	mov	r9, r5
 801734e:	46b8      	mov	r8, r7
 8017350:	f04f 0a00 	mov.w	sl, #0
 8017354:	4621      	mov	r1, r4
 8017356:	a849      	add	r0, sp, #292	; 0x124
 8017358:	f003 ff2a 	bl	801b1b0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 801735c:	4622      	mov	r2, r4
 801735e:	4653      	mov	r3, sl
 8017360:	a949      	add	r1, sp, #292	; 0x124
 8017362:	f8cd 9000 	str.w	r9, [sp]
 8017366:	a819      	add	r0, sp, #100	; 0x64
 8017368:	f004 f852 	bl	801b410 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 801736c:	4622      	mov	r2, r4
 801736e:	4653      	mov	r3, sl
 8017370:	a949      	add	r1, sp, #292	; 0x124
 8017372:	f8cd 8000 	str.w	r8, [sp]
 8017376:	a829      	add	r0, sp, #164	; 0xa4
 8017378:	f004 f84a 	bl	801b410 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 801737c:	4643      	mov	r3, r8
 801737e:	4622      	mov	r2, r4
 8017380:	a949      	add	r1, sp, #292	; 0x124
 8017382:	f8cd 9000 	str.w	r9, [sp]
 8017386:	a839      	add	r0, sp, #228	; 0xe4
 8017388:	f004 f842 	bl	801b410 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 801738c:	42af      	cmp	r7, r5
 801738e:	bfb5      	itete	lt
 8017390:	2300      	movlt	r3, #0
 8017392:	2301      	movge	r3, #1
 8017394:	930e      	strlt	r3, [sp, #56]	; 0x38
 8017396:	930e      	strge	r3, [sp, #56]	; 0x38
 8017398:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801739a:	e893 0003 	ldmia.w	r3, {r0, r1}
 801739e:	af12      	add	r7, sp, #72	; 0x48
 80173a0:	bfb9      	ittee	lt
 80173a2:	ad29      	addlt	r5, sp, #164	; 0xa4
 80173a4:	ac19      	addlt	r4, sp, #100	; 0x64
 80173a6:	ad19      	addge	r5, sp, #100	; 0x64
 80173a8:	ac29      	addge	r4, sp, #164	; 0xa4
 80173aa:	e887 0003 	stmia.w	r7, {r0, r1}
 80173ae:	b928      	cbnz	r0, 80173bc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 80173b0:	4b80      	ldr	r3, [pc, #512]	; (80175b4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 80173b2:	6818      	ldr	r0, [r3, #0]
 80173b4:	6803      	ldr	r3, [r0, #0]
 80173b6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80173b8:	4798      	blx	r3
 80173ba:	6038      	str	r0, [r7, #0]
 80173bc:	9b64      	ldr	r3, [sp, #400]	; 0x190
 80173be:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 80173c2:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80173c6:	930c      	str	r3, [sp, #48]	; 0x30
 80173c8:	990c      	ldr	r1, [sp, #48]	; 0x30
 80173ca:	6963      	ldr	r3, [r4, #20]
 80173cc:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 80173ce:	440b      	add	r3, r1
 80173d0:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 80173d4:	4408      	add	r0, r1
 80173d6:	b200      	sxth	r0, r0
 80173d8:	4283      	cmp	r3, r0
 80173da:	900d      	str	r0, [sp, #52]	; 0x34
 80173dc:	f280 80dd 	bge.w	801759a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 80173e0:	428b      	cmp	r3, r1
 80173e2:	da08      	bge.n	80173f6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 80173e4:	2a00      	cmp	r2, #0
 80173e6:	dd06      	ble.n	80173f6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 80173e8:	1acb      	subs	r3, r1, r3
 80173ea:	429a      	cmp	r2, r3
 80173ec:	f2c0 80e4 	blt.w	80175b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 80173f0:	2b00      	cmp	r3, #0
 80173f2:	f300 80e2 	bgt.w	80175ba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 80173f6:	6967      	ldr	r7, [r4, #20]
 80173f8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80173fa:	443b      	add	r3, r7
 80173fc:	461f      	mov	r7, r3
 80173fe:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017400:	1bdf      	subs	r7, r3, r7
 8017402:	4297      	cmp	r7, r2
 8017404:	bfa8      	it	ge
 8017406:	4617      	movge	r7, r2
 8017408:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 801740c:	2f00      	cmp	r7, #0
 801740e:	f340 8166 	ble.w	80176de <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 8017412:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8017414:	6829      	ldr	r1, [r5, #0]
 8017416:	f9b3 2000 	ldrsh.w	r2, [r3]
 801741a:	f9bb 3000 	ldrsh.w	r3, [fp]
 801741e:	6820      	ldr	r0, [r4, #0]
 8017420:	4411      	add	r1, r2
 8017422:	4299      	cmp	r1, r3
 8017424:	dd1a      	ble.n	801745c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8017426:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 801742a:	440b      	add	r3, r1
 801742c:	4402      	add	r2, r0
 801742e:	b21b      	sxth	r3, r3
 8017430:	429a      	cmp	r2, r3
 8017432:	dc13      	bgt.n	801745c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8017434:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017436:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8017438:	681b      	ldr	r3, [r3, #0]
 801743a:	9206      	str	r2, [sp, #24]
 801743c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801743e:	9205      	str	r2, [sp, #20]
 8017440:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8017442:	9500      	str	r5, [sp, #0]
 8017444:	e9cd b203 	strd	fp, r2, [sp, #12]
 8017448:	9a64      	ldr	r2, [sp, #400]	; 0x190
 801744a:	9809      	ldr	r0, [sp, #36]	; 0x24
 801744c:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8017450:	a912      	add	r1, sp, #72	; 0x48
 8017452:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8017456:	aa49      	add	r2, sp, #292	; 0x124
 8017458:	4623      	mov	r3, r4
 801745a:	47c8      	blx	r9
 801745c:	e9d4 2300 	ldrd	r2, r3, [r4]
 8017460:	441a      	add	r2, r3
 8017462:	6963      	ldr	r3, [r4, #20]
 8017464:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8017468:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 801746c:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8017470:	68a1      	ldr	r1, [r4, #8]
 8017472:	ed94 6a08 	vldr	s12, [r4, #32]
 8017476:	6022      	str	r2, [r4, #0]
 8017478:	3301      	adds	r3, #1
 801747a:	6163      	str	r3, [r4, #20]
 801747c:	69a3      	ldr	r3, [r4, #24]
 801747e:	ee37 7a27 	vadd.f32	s14, s14, s15
 8017482:	3b01      	subs	r3, #1
 8017484:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8017488:	61a3      	str	r3, [r4, #24]
 801748a:	6923      	ldr	r3, [r4, #16]
 801748c:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8017490:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8017494:	edd4 6a07 	vldr	s13, [r4, #28]
 8017498:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 801749c:	440b      	add	r3, r1
 801749e:	68e1      	ldr	r1, [r4, #12]
 80174a0:	6123      	str	r3, [r4, #16]
 80174a2:	ee76 6a86 	vadd.f32	s13, s13, s12
 80174a6:	428b      	cmp	r3, r1
 80174a8:	edc4 6a07 	vstr	s13, [r4, #28]
 80174ac:	db15      	blt.n	80174da <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 80174ae:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 80174b2:	ee76 6a26 	vadd.f32	s13, s12, s13
 80174b6:	3201      	adds	r2, #1
 80174b8:	edc4 6a07 	vstr	s13, [r4, #28]
 80174bc:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 80174c0:	6022      	str	r2, [r4, #0]
 80174c2:	ee36 7a87 	vadd.f32	s14, s13, s14
 80174c6:	1a5b      	subs	r3, r3, r1
 80174c8:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 80174cc:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 80174d0:	6123      	str	r3, [r4, #16]
 80174d2:	ee77 7a27 	vadd.f32	s15, s14, s15
 80174d6:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 80174da:	e9d5 2300 	ldrd	r2, r3, [r5]
 80174de:	441a      	add	r2, r3
 80174e0:	696b      	ldr	r3, [r5, #20]
 80174e2:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 80174e6:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 80174ea:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 80174ee:	68a9      	ldr	r1, [r5, #8]
 80174f0:	ed95 6a08 	vldr	s12, [r5, #32]
 80174f4:	602a      	str	r2, [r5, #0]
 80174f6:	3301      	adds	r3, #1
 80174f8:	616b      	str	r3, [r5, #20]
 80174fa:	69ab      	ldr	r3, [r5, #24]
 80174fc:	ee37 7a27 	vadd.f32	s14, s14, s15
 8017500:	3b01      	subs	r3, #1
 8017502:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8017506:	61ab      	str	r3, [r5, #24]
 8017508:	692b      	ldr	r3, [r5, #16]
 801750a:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801750e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8017512:	edd5 6a07 	vldr	s13, [r5, #28]
 8017516:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 801751a:	440b      	add	r3, r1
 801751c:	68e9      	ldr	r1, [r5, #12]
 801751e:	612b      	str	r3, [r5, #16]
 8017520:	ee76 6a86 	vadd.f32	s13, s13, s12
 8017524:	428b      	cmp	r3, r1
 8017526:	edc5 6a07 	vstr	s13, [r5, #28]
 801752a:	db15      	blt.n	8017558 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 801752c:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8017530:	ee76 6a26 	vadd.f32	s13, s12, s13
 8017534:	3201      	adds	r2, #1
 8017536:	edc5 6a07 	vstr	s13, [r5, #28]
 801753a:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 801753e:	602a      	str	r2, [r5, #0]
 8017540:	ee36 7a87 	vadd.f32	s14, s13, s14
 8017544:	1a5b      	subs	r3, r3, r1
 8017546:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801754a:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 801754e:	612b      	str	r3, [r5, #16]
 8017550:	ee77 7a27 	vadd.f32	s15, s14, s15
 8017554:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8017558:	3f01      	subs	r7, #1
 801755a:	e757      	b.n	801740c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 801755c:	4299      	cmp	r1, r3
 801755e:	dc13      	bgt.n	8017588 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 8017560:	429a      	cmp	r2, r3
 8017562:	da14      	bge.n	801758e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 8017564:	2502      	movs	r5, #2
 8017566:	2703      	movs	r7, #3
 8017568:	46a9      	mov	r9, r5
 801756a:	f04f 0800 	mov.w	r8, #0
 801756e:	f04f 0a01 	mov.w	sl, #1
 8017572:	e6ef      	b.n	8017354 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8017574:	2501      	movs	r5, #1
 8017576:	2700      	movs	r7, #0
 8017578:	46a9      	mov	r9, r5
 801757a:	46b8      	mov	r8, r7
 801757c:	f04f 0a02 	mov.w	sl, #2
 8017580:	e6e8      	b.n	8017354 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8017582:	2501      	movs	r5, #1
 8017584:	2702      	movs	r7, #2
 8017586:	e6e1      	b.n	801734c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 8017588:	2500      	movs	r5, #0
 801758a:	2701      	movs	r7, #1
 801758c:	e7f4      	b.n	8017578 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 801758e:	2702      	movs	r7, #2
 8017590:	2503      	movs	r5, #3
 8017592:	f04f 0900 	mov.w	r9, #0
 8017596:	46b8      	mov	r8, r7
 8017598:	e7e9      	b.n	801756e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 801759a:	4613      	mov	r3, r2
 801759c:	e728      	b.n	80173f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 801759e:	bf00      	nop
 80175a0:	20013844 	.word	0x20013844
 80175a4:	fffd8f01 	.word	0xfffd8f01
 80175a8:	00027100 	.word	0x00027100
 80175ac:	0004e1ff 	.word	0x0004e1ff
 80175b0:	0004e1fe 	.word	0x0004e1fe
 80175b4:	2001384c 	.word	0x2001384c
 80175b8:	4613      	mov	r3, r2
 80175ba:	992b      	ldr	r1, [sp, #172]	; 0xac
 80175bc:	9111      	str	r1, [sp, #68]	; 0x44
 80175be:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 80175c2:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 80175c6:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 80175c8:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 80175cc:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 80175d0:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 80175d4:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 80175d8:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 80175dc:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 80175e0:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 80175e4:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 80175e8:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 80175ec:	469e      	mov	lr, r3
 80175ee:	469c      	mov	ip, r3
 80175f0:	f04f 0900 	mov.w	r9, #0
 80175f4:	f1bc 0f00 	cmp.w	ip, #0
 80175f8:	d147      	bne.n	801768a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 80175fa:	eb03 0c07 	add.w	ip, r3, r7
 80175fe:	1ad7      	subs	r7, r2, r3
 8017600:	f1b9 0f00 	cmp.w	r9, #0
 8017604:	d009      	beq.n	801761a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 8017606:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 801760a:	9029      	str	r0, [sp, #164]	; 0xa4
 801760c:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 8017610:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 8017614:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 8017618:	912d      	str	r1, [sp, #180]	; 0xb4
 801761a:	991b      	ldr	r1, [sp, #108]	; 0x6c
 801761c:	9111      	str	r1, [sp, #68]	; 0x44
 801761e:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8017622:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8017626:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 801762a:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 801762e:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8017632:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8017636:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 801763a:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 801763e:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8017642:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8017646:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 801764a:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 801764e:	f04f 0800 	mov.w	r8, #0
 8017652:	f1be 0f00 	cmp.w	lr, #0
 8017656:	d031      	beq.n	80176bc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 8017658:	9e11      	ldr	r6, [sp, #68]	; 0x44
 801765a:	4431      	add	r1, r6
 801765c:	4549      	cmp	r1, r9
 801765e:	4450      	add	r0, sl
 8017660:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8017664:	ee37 7a04 	vadd.f32	s14, s14, s8
 8017668:	ee77 7aa3 	vadd.f32	s15, s15, s7
 801766c:	db08      	blt.n	8017680 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 801766e:	ee77 7a85 	vadd.f32	s15, s15, s10
 8017672:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8017676:	ee37 7a06 	vadd.f32	s14, s14, s12
 801767a:	3001      	adds	r0, #1
 801767c:	eba1 0109 	sub.w	r1, r1, r9
 8017680:	f10e 3eff 	add.w	lr, lr, #4294967295
 8017684:	f04f 0801 	mov.w	r8, #1
 8017688:	e7e3      	b.n	8017652 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 801768a:	9e11      	ldr	r6, [sp, #68]	; 0x44
 801768c:	4431      	add	r1, r6
 801768e:	4541      	cmp	r1, r8
 8017690:	4450      	add	r0, sl
 8017692:	ee37 7a24 	vadd.f32	s14, s14, s9
 8017696:	ee77 7a84 	vadd.f32	s15, s15, s8
 801769a:	ee76 6aa3 	vadd.f32	s13, s13, s7
 801769e:	db08      	blt.n	80176b2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 80176a0:	ee76 6a85 	vadd.f32	s13, s13, s10
 80176a4:	ee37 7a25 	vadd.f32	s14, s14, s11
 80176a8:	ee77 7a86 	vadd.f32	s15, s15, s12
 80176ac:	3001      	adds	r0, #1
 80176ae:	eba1 0108 	sub.w	r1, r1, r8
 80176b2:	f10c 3cff 	add.w	ip, ip, #4294967295
 80176b6:	f04f 0901 	mov.w	r9, #1
 80176ba:	e79b      	b.n	80175f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 80176bc:	449c      	add	ip, r3
 80176be:	1aff      	subs	r7, r7, r3
 80176c0:	f1b8 0f00 	cmp.w	r8, #0
 80176c4:	d009      	beq.n	80176da <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 80176c6:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 80176ca:	9019      	str	r0, [sp, #100]	; 0x64
 80176cc:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 80176d0:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 80176d4:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 80176d8:	911d      	str	r1, [sp, #116]	; 0x74
 80176da:	1ad2      	subs	r2, r2, r3
 80176dc:	e68b      	b.n	80173f6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 80176de:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80176e0:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 80176e2:	2b00      	cmp	r3, #0
 80176e4:	f000 80d1 	beq.w	801788a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 80176e8:	ad19      	add	r5, sp, #100	; 0x64
 80176ea:	ac39      	add	r4, sp, #228	; 0xe4
 80176ec:	9b64      	ldr	r3, [sp, #400]	; 0x190
 80176ee:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 80176f2:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80176f6:	930c      	str	r3, [sp, #48]	; 0x30
 80176f8:	990c      	ldr	r1, [sp, #48]	; 0x30
 80176fa:	6963      	ldr	r3, [r4, #20]
 80176fc:	440b      	add	r3, r1
 80176fe:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8017702:	4408      	add	r0, r1
 8017704:	b200      	sxth	r0, r0
 8017706:	4283      	cmp	r3, r0
 8017708:	900d      	str	r0, [sp, #52]	; 0x34
 801770a:	f280 80c1 	bge.w	8017890 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 801770e:	428b      	cmp	r3, r1
 8017710:	da08      	bge.n	8017724 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8017712:	2a00      	cmp	r2, #0
 8017714:	dd06      	ble.n	8017724 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8017716:	1acb      	subs	r3, r1, r3
 8017718:	429a      	cmp	r2, r3
 801771a:	f2c0 80bb 	blt.w	8017894 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 801771e:	2b00      	cmp	r3, #0
 8017720:	f300 80b9 	bgt.w	8017896 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 8017724:	6967      	ldr	r7, [r4, #20]
 8017726:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8017728:	443b      	add	r3, r7
 801772a:	461f      	mov	r7, r3
 801772c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801772e:	1bdf      	subs	r7, r3, r7
 8017730:	4297      	cmp	r7, r2
 8017732:	bfa8      	it	ge
 8017734:	4617      	movge	r7, r2
 8017736:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 801773a:	2f00      	cmp	r7, #0
 801773c:	f340 813c 	ble.w	80179b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 8017740:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8017742:	6829      	ldr	r1, [r5, #0]
 8017744:	f9b3 2000 	ldrsh.w	r2, [r3]
 8017748:	f9bb 3000 	ldrsh.w	r3, [fp]
 801774c:	6820      	ldr	r0, [r4, #0]
 801774e:	4411      	add	r1, r2
 8017750:	4299      	cmp	r1, r3
 8017752:	dd1a      	ble.n	801778a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8017754:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8017758:	440b      	add	r3, r1
 801775a:	4402      	add	r2, r0
 801775c:	b21b      	sxth	r3, r3
 801775e:	429a      	cmp	r2, r3
 8017760:	dc13      	bgt.n	801778a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8017762:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017764:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8017766:	681b      	ldr	r3, [r3, #0]
 8017768:	9206      	str	r2, [sp, #24]
 801776a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801776c:	9205      	str	r2, [sp, #20]
 801776e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8017770:	9500      	str	r5, [sp, #0]
 8017772:	e9cd b203 	strd	fp, r2, [sp, #12]
 8017776:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8017778:	9809      	ldr	r0, [sp, #36]	; 0x24
 801777a:	e9cd 8201 	strd	r8, r2, [sp, #4]
 801777e:	a912      	add	r1, sp, #72	; 0x48
 8017780:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8017784:	aa49      	add	r2, sp, #292	; 0x124
 8017786:	4623      	mov	r3, r4
 8017788:	47c8      	blx	r9
 801778a:	e9d4 2300 	ldrd	r2, r3, [r4]
 801778e:	441a      	add	r2, r3
 8017790:	6963      	ldr	r3, [r4, #20]
 8017792:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8017796:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 801779a:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 801779e:	68a1      	ldr	r1, [r4, #8]
 80177a0:	ed94 6a08 	vldr	s12, [r4, #32]
 80177a4:	6022      	str	r2, [r4, #0]
 80177a6:	3301      	adds	r3, #1
 80177a8:	6163      	str	r3, [r4, #20]
 80177aa:	69a3      	ldr	r3, [r4, #24]
 80177ac:	ee37 7a27 	vadd.f32	s14, s14, s15
 80177b0:	3b01      	subs	r3, #1
 80177b2:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 80177b6:	61a3      	str	r3, [r4, #24]
 80177b8:	6923      	ldr	r3, [r4, #16]
 80177ba:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 80177be:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80177c2:	edd4 6a07 	vldr	s13, [r4, #28]
 80177c6:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 80177ca:	440b      	add	r3, r1
 80177cc:	68e1      	ldr	r1, [r4, #12]
 80177ce:	6123      	str	r3, [r4, #16]
 80177d0:	ee76 6a86 	vadd.f32	s13, s13, s12
 80177d4:	428b      	cmp	r3, r1
 80177d6:	edc4 6a07 	vstr	s13, [r4, #28]
 80177da:	db15      	blt.n	8017808 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 80177dc:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 80177e0:	ee76 6a26 	vadd.f32	s13, s12, s13
 80177e4:	3201      	adds	r2, #1
 80177e6:	edc4 6a07 	vstr	s13, [r4, #28]
 80177ea:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 80177ee:	6022      	str	r2, [r4, #0]
 80177f0:	ee36 7a87 	vadd.f32	s14, s13, s14
 80177f4:	1a5b      	subs	r3, r3, r1
 80177f6:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 80177fa:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 80177fe:	6123      	str	r3, [r4, #16]
 8017800:	ee77 7a27 	vadd.f32	s15, s14, s15
 8017804:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8017808:	e9d5 2300 	ldrd	r2, r3, [r5]
 801780c:	441a      	add	r2, r3
 801780e:	696b      	ldr	r3, [r5, #20]
 8017810:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8017814:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 8017818:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 801781c:	68a9      	ldr	r1, [r5, #8]
 801781e:	ed95 6a08 	vldr	s12, [r5, #32]
 8017822:	602a      	str	r2, [r5, #0]
 8017824:	3301      	adds	r3, #1
 8017826:	616b      	str	r3, [r5, #20]
 8017828:	69ab      	ldr	r3, [r5, #24]
 801782a:	ee37 7a27 	vadd.f32	s14, s14, s15
 801782e:	3b01      	subs	r3, #1
 8017830:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8017834:	61ab      	str	r3, [r5, #24]
 8017836:	692b      	ldr	r3, [r5, #16]
 8017838:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801783c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8017840:	edd5 6a07 	vldr	s13, [r5, #28]
 8017844:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8017848:	440b      	add	r3, r1
 801784a:	68e9      	ldr	r1, [r5, #12]
 801784c:	612b      	str	r3, [r5, #16]
 801784e:	ee76 6a86 	vadd.f32	s13, s13, s12
 8017852:	428b      	cmp	r3, r1
 8017854:	edc5 6a07 	vstr	s13, [r5, #28]
 8017858:	db15      	blt.n	8017886 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 801785a:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 801785e:	ee76 6a26 	vadd.f32	s13, s12, s13
 8017862:	3201      	adds	r2, #1
 8017864:	edc5 6a07 	vstr	s13, [r5, #28]
 8017868:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 801786c:	602a      	str	r2, [r5, #0]
 801786e:	ee36 7a87 	vadd.f32	s14, s13, s14
 8017872:	1a5b      	subs	r3, r3, r1
 8017874:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8017878:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 801787c:	612b      	str	r3, [r5, #16]
 801787e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8017882:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8017886:	3f01      	subs	r7, #1
 8017888:	e757      	b.n	801773a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 801788a:	ad39      	add	r5, sp, #228	; 0xe4
 801788c:	ac19      	add	r4, sp, #100	; 0x64
 801788e:	e72d      	b.n	80176ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 8017890:	4613      	mov	r3, r2
 8017892:	e744      	b.n	801771e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 8017894:	4613      	mov	r3, r2
 8017896:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 801789a:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 801789c:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 80178a0:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 80178a4:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 80178a8:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 80178ac:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 80178b0:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 80178b4:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 80178b8:	993d      	ldr	r1, [sp, #244]	; 0xf4
 80178ba:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 80178be:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 80178c2:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 80178c6:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 80178ca:	960e      	str	r6, [sp, #56]	; 0x38
 80178cc:	469e      	mov	lr, r3
 80178ce:	461f      	mov	r7, r3
 80178d0:	f04f 0900 	mov.w	r9, #0
 80178d4:	2f00      	cmp	r7, #0
 80178d6:	d146      	bne.n	8017966 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 80178d8:	449c      	add	ip, r3
 80178da:	1ad7      	subs	r7, r2, r3
 80178dc:	f1b9 0f00 	cmp.w	r9, #0
 80178e0:	d009      	beq.n	80178f6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 80178e2:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 80178e6:	9039      	str	r0, [sp, #228]	; 0xe4
 80178e8:	913d      	str	r1, [sp, #244]	; 0xf4
 80178ea:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 80178ee:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 80178f2:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 80178f6:	991b      	ldr	r1, [sp, #108]	; 0x6c
 80178f8:	910e      	str	r1, [sp, #56]	; 0x38
 80178fa:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 80178fe:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8017902:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 8017906:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 801790a:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 801790e:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8017912:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8017916:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 801791a:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 801791e:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8017922:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 8017926:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 801792a:	f04f 0800 	mov.w	r8, #0
 801792e:	f1be 0f00 	cmp.w	lr, #0
 8017932:	d030      	beq.n	8017996 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 8017934:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8017936:	4431      	add	r1, r6
 8017938:	4549      	cmp	r1, r9
 801793a:	4450      	add	r0, sl
 801793c:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8017940:	ee37 7a04 	vadd.f32	s14, s14, s8
 8017944:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8017948:	db08      	blt.n	801795c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 801794a:	ee77 7a85 	vadd.f32	s15, s15, s10
 801794e:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8017952:	ee37 7a06 	vadd.f32	s14, s14, s12
 8017956:	3001      	adds	r0, #1
 8017958:	eba1 0109 	sub.w	r1, r1, r9
 801795c:	f10e 3eff 	add.w	lr, lr, #4294967295
 8017960:	f04f 0801 	mov.w	r8, #1
 8017964:	e7e3      	b.n	801792e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 8017966:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8017968:	4431      	add	r1, r6
 801796a:	4541      	cmp	r1, r8
 801796c:	4450      	add	r0, sl
 801796e:	ee37 7a24 	vadd.f32	s14, s14, s9
 8017972:	ee77 7a84 	vadd.f32	s15, s15, s8
 8017976:	ee76 6aa3 	vadd.f32	s13, s13, s7
 801797a:	db08      	blt.n	801798e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 801797c:	ee76 6a85 	vadd.f32	s13, s13, s10
 8017980:	ee37 7a25 	vadd.f32	s14, s14, s11
 8017984:	ee77 7a86 	vadd.f32	s15, s15, s12
 8017988:	3001      	adds	r0, #1
 801798a:	eba1 0108 	sub.w	r1, r1, r8
 801798e:	3f01      	subs	r7, #1
 8017990:	f04f 0901 	mov.w	r9, #1
 8017994:	e79e      	b.n	80178d4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 8017996:	449c      	add	ip, r3
 8017998:	1aff      	subs	r7, r7, r3
 801799a:	f1b8 0f00 	cmp.w	r8, #0
 801799e:	d009      	beq.n	80179b4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 80179a0:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 80179a4:	9019      	str	r0, [sp, #100]	; 0x64
 80179a6:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 80179aa:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 80179ae:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 80179b2:	911d      	str	r1, [sp, #116]	; 0x74
 80179b4:	1ad2      	subs	r2, r2, r3
 80179b6:	e6b5      	b.n	8017724 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 80179b8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80179ba:	681b      	ldr	r3, [r3, #0]
 80179bc:	b923      	cbnz	r3, 80179c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80179be:	4b04      	ldr	r3, [pc, #16]	; (80179d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 80179c0:	6818      	ldr	r0, [r3, #0]
 80179c2:	6803      	ldr	r3, [r0, #0]
 80179c4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80179c6:	4798      	blx	r3
 80179c8:	b05b      	add	sp, #364	; 0x16c
 80179ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80179ce:	bf00      	nop
 80179d0:	2001384c 	.word	0x2001384c

080179d4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 80179d4:	b570      	push	{r4, r5, r6, lr}
 80179d6:	4604      	mov	r4, r0
 80179d8:	f89d 601c 	ldrb.w	r6, [sp, #28]
 80179dc:	9805      	ldr	r0, [sp, #20]
 80179de:	6061      	str	r1, [r4, #4]
 80179e0:	2500      	movs	r5, #0
 80179e2:	f89d 1010 	ldrb.w	r1, [sp, #16]
 80179e6:	8263      	strh	r3, [r4, #18]
 80179e8:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80179ec:	8025      	strh	r5, [r4, #0]
 80179ee:	7221      	strb	r1, [r4, #8]
 80179f0:	7266      	strb	r6, [r4, #9]
 80179f2:	60e0      	str	r0, [r4, #12]
 80179f4:	8222      	strh	r2, [r4, #16]
 80179f6:	82a3      	strh	r3, [r4, #20]
 80179f8:	82e5      	strh	r5, [r4, #22]
 80179fa:	8325      	strh	r5, [r4, #24]
 80179fc:	8365      	strh	r5, [r4, #26]
 80179fe:	83a5      	strh	r5, [r4, #28]
 8017a00:	83e5      	strh	r5, [r4, #30]
 8017a02:	8425      	strh	r5, [r4, #32]
 8017a04:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 8017a08:	b32e      	cbz	r6, 8017a56 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8017a0a:	6803      	ldr	r3, [r0, #0]
 8017a0c:	695b      	ldr	r3, [r3, #20]
 8017a0e:	4798      	blx	r3
 8017a10:	4606      	mov	r6, r0
 8017a12:	b300      	cbz	r0, 8017a56 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8017a14:	68e0      	ldr	r0, [r4, #12]
 8017a16:	6803      	ldr	r3, [r0, #0]
 8017a18:	4631      	mov	r1, r6
 8017a1a:	68db      	ldr	r3, [r3, #12]
 8017a1c:	4798      	blx	r3
 8017a1e:	4605      	mov	r5, r0
 8017a20:	b1c8      	cbz	r0, 8017a56 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8017a22:	7b43      	ldrb	r3, [r0, #13]
 8017a24:	7a82      	ldrb	r2, [r0, #10]
 8017a26:	005b      	lsls	r3, r3, #1
 8017a28:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8017a2c:	4313      	orrs	r3, r2
 8017a2e:	8423      	strh	r3, [r4, #32]
 8017a30:	7a63      	ldrb	r3, [r4, #9]
 8017a32:	2b06      	cmp	r3, #6
 8017a34:	d10f      	bne.n	8017a56 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8017a36:	68e0      	ldr	r0, [r4, #12]
 8017a38:	6803      	ldr	r3, [r0, #0]
 8017a3a:	462a      	mov	r2, r5
 8017a3c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8017a3e:	4631      	mov	r1, r6
 8017a40:	4798      	blx	r3
 8017a42:	7b6b      	ldrb	r3, [r5, #13]
 8017a44:	005b      	lsls	r3, r3, #1
 8017a46:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8017a4a:	7aab      	ldrb	r3, [r5, #10]
 8017a4c:	4313      	orrs	r3, r2
 8017a4e:	4418      	add	r0, r3
 8017a50:	8c23      	ldrh	r3, [r4, #32]
 8017a52:	4418      	add	r0, r3
 8017a54:	8420      	strh	r0, [r4, #32]
 8017a56:	4620      	mov	r0, r4
 8017a58:	bd70      	pop	{r4, r5, r6, pc}

08017a5a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 8017a5a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017a5e:	2400      	movs	r4, #0
 8017a60:	b085      	sub	sp, #20
 8017a62:	4681      	mov	r9, r0
 8017a64:	4688      	mov	r8, r1
 8017a66:	4692      	mov	sl, r2
 8017a68:	469b      	mov	fp, r3
 8017a6a:	4627      	mov	r7, r4
 8017a6c:	4625      	mov	r5, r4
 8017a6e:	4626      	mov	r6, r4
 8017a70:	4554      	cmp	r4, sl
 8017a72:	da2a      	bge.n	8017aca <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8017a74:	2300      	movs	r3, #0
 8017a76:	9303      	str	r3, [sp, #12]
 8017a78:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8017a7c:	429d      	cmp	r5, r3
 8017a7e:	d004      	beq.n	8017a8a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 8017a80:	f242 030b 	movw	r3, #8203	; 0x200b
 8017a84:	429d      	cmp	r5, r3
 8017a86:	bf18      	it	ne
 8017a88:	462f      	movne	r7, r5
 8017a8a:	ab03      	add	r3, sp, #12
 8017a8c:	4642      	mov	r2, r8
 8017a8e:	4659      	mov	r1, fp
 8017a90:	4648      	mov	r0, r9
 8017a92:	f003 f9a3 	bl	801addc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8017a96:	4605      	mov	r5, r0
 8017a98:	b1b8      	cbz	r0, 8017aca <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8017a9a:	280a      	cmp	r0, #10
 8017a9c:	d015      	beq.n	8017aca <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8017a9e:	9a03      	ldr	r2, [sp, #12]
 8017aa0:	b18a      	cbz	r2, 8017ac6 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 8017aa2:	7b50      	ldrb	r0, [r2, #13]
 8017aa4:	7a93      	ldrb	r3, [r2, #10]
 8017aa6:	8895      	ldrh	r5, [r2, #4]
 8017aa8:	0040      	lsls	r0, r0, #1
 8017aaa:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8017aae:	4303      	orrs	r3, r0
 8017ab0:	9301      	str	r3, [sp, #4]
 8017ab2:	f8d8 3000 	ldr.w	r3, [r8]
 8017ab6:	4639      	mov	r1, r7
 8017ab8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8017aba:	4640      	mov	r0, r8
 8017abc:	4798      	blx	r3
 8017abe:	9b01      	ldr	r3, [sp, #4]
 8017ac0:	4418      	add	r0, r3
 8017ac2:	4406      	add	r6, r0
 8017ac4:	b2b6      	uxth	r6, r6
 8017ac6:	3401      	adds	r4, #1
 8017ac8:	e7d2      	b.n	8017a70 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 8017aca:	4630      	mov	r0, r6
 8017acc:	b005      	add	sp, #20
 8017ace:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08017ad2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 8017ad2:	2a02      	cmp	r2, #2
 8017ad4:	b530      	push	{r4, r5, lr}
 8017ad6:	d011      	beq.n	8017afc <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 8017ad8:	2a03      	cmp	r2, #3
 8017ada:	d01c      	beq.n	8017b16 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 8017adc:	2a01      	cmp	r2, #1
 8017ade:	d10c      	bne.n	8017afa <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8017ae0:	888b      	ldrh	r3, [r1, #4]
 8017ae2:	8801      	ldrh	r1, [r0, #0]
 8017ae4:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 8017ae8:	8844      	ldrh	r4, [r0, #2]
 8017aea:	8004      	strh	r4, [r0, #0]
 8017aec:	1a5b      	subs	r3, r3, r1
 8017aee:	1a9b      	subs	r3, r3, r2
 8017af0:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8017af4:	8043      	strh	r3, [r0, #2]
 8017af6:	8081      	strh	r1, [r0, #4]
 8017af8:	80c2      	strh	r2, [r0, #6]
 8017afa:	bd30      	pop	{r4, r5, pc}
 8017afc:	88cb      	ldrh	r3, [r1, #6]
 8017afe:	8842      	ldrh	r2, [r0, #2]
 8017b00:	1a9b      	subs	r3, r3, r2
 8017b02:	88c2      	ldrh	r2, [r0, #6]
 8017b04:	1a9b      	subs	r3, r3, r2
 8017b06:	888a      	ldrh	r2, [r1, #4]
 8017b08:	8801      	ldrh	r1, [r0, #0]
 8017b0a:	8043      	strh	r3, [r0, #2]
 8017b0c:	1a52      	subs	r2, r2, r1
 8017b0e:	8881      	ldrh	r1, [r0, #4]
 8017b10:	1a52      	subs	r2, r2, r1
 8017b12:	8002      	strh	r2, [r0, #0]
 8017b14:	e7f1      	b.n	8017afa <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8017b16:	88cb      	ldrh	r3, [r1, #6]
 8017b18:	8841      	ldrh	r1, [r0, #2]
 8017b1a:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8017b1e:	f9b0 5000 	ldrsh.w	r5, [r0]
 8017b22:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8017b26:	8045      	strh	r5, [r0, #2]
 8017b28:	1a5b      	subs	r3, r3, r1
 8017b2a:	1a9b      	subs	r3, r3, r2
 8017b2c:	8003      	strh	r3, [r0, #0]
 8017b2e:	8082      	strh	r2, [r0, #4]
 8017b30:	80c4      	strh	r4, [r0, #6]
 8017b32:	e7e2      	b.n	8017afa <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

08017b34 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 8017b34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017b38:	b09f      	sub	sp, #124	; 0x7c
 8017b3a:	9116      	str	r1, [sp, #88]	; 0x58
 8017b3c:	9317      	str	r3, [sp, #92]	; 0x5c
 8017b3e:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8017b40:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8017b42:	8809      	ldrh	r1, [r1, #0]
 8017b44:	889b      	ldrh	r3, [r3, #4]
 8017b46:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 8017b4a:	9212      	str	r2, [sp, #72]	; 0x48
 8017b4c:	440b      	add	r3, r1
 8017b4e:	b21b      	sxth	r3, r3
 8017b50:	9310      	str	r3, [sp, #64]	; 0x40
 8017b52:	f8d8 3000 	ldr.w	r3, [r8]
 8017b56:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 8017b5a:	7b19      	ldrb	r1, [r3, #12]
 8017b5c:	7adb      	ldrb	r3, [r3, #11]
 8017b5e:	9011      	str	r0, [sp, #68]	; 0x44
 8017b60:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 8017b64:	9114      	str	r1, [sp, #80]	; 0x50
 8017b66:	9315      	str	r3, [sp, #84]	; 0x54
 8017b68:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	; 0xa0
 8017b6c:	2a00      	cmp	r2, #0
 8017b6e:	d06a      	beq.n	8017c46 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 8017b70:	f898 3010 	ldrb.w	r3, [r8, #16]
 8017b74:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8017b76:	2b06      	cmp	r3, #6
 8017b78:	bf14      	ite	ne
 8017b7a:	2301      	movne	r3, #1
 8017b7c:	2302      	moveq	r3, #2
 8017b7e:	4413      	add	r3, r2
 8017b80:	f04f 0900 	mov.w	r9, #0
 8017b84:	930f      	str	r3, [sp, #60]	; 0x3c
 8017b86:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 8017b8a:	464c      	mov	r4, r9
 8017b8c:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8017b90:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 8017b94:	4293      	cmp	r3, r2
 8017b96:	f280 808f 	bge.w	8017cb8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8017b9a:	2300      	movs	r3, #0
 8017b9c:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 8017ba0:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 8017ba4:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8017ba8:	429c      	cmp	r4, r3
 8017baa:	d006      	beq.n	8017bba <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 8017bac:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017bae:	f242 020b 	movw	r2, #8203	; 0x200b
 8017bb2:	4294      	cmp	r4, r2
 8017bb4:	bf18      	it	ne
 8017bb6:	4623      	movne	r3, r4
 8017bb8:	930d      	str	r3, [sp, #52]	; 0x34
 8017bba:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017bbc:	992d      	ldr	r1, [sp, #180]	; 0xb4
 8017bbe:	f8d8 2000 	ldr.w	r2, [r8]
 8017bc2:	428b      	cmp	r3, r1
 8017bc4:	db41      	blt.n	8017c4a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 8017bc6:	6813      	ldr	r3, [r2, #0]
 8017bc8:	4610      	mov	r0, r2
 8017bca:	695b      	ldr	r3, [r3, #20]
 8017bcc:	4798      	blx	r3
 8017bce:	4604      	mov	r4, r0
 8017bd0:	f8d8 0000 	ldr.w	r0, [r8]
 8017bd4:	6803      	ldr	r3, [r0, #0]
 8017bd6:	aa1d      	add	r2, sp, #116	; 0x74
 8017bd8:	689d      	ldr	r5, [r3, #8]
 8017bda:	4621      	mov	r1, r4
 8017bdc:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8017be0:	47a8      	blx	r5
 8017be2:	901c      	str	r0, [sp, #112]	; 0x70
 8017be4:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8017be8:	429c      	cmp	r4, r3
 8017bea:	f000 80eb 	beq.w	8017dc4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8017bee:	f242 030b 	movw	r3, #8203	; 0x200b
 8017bf2:	429c      	cmp	r4, r3
 8017bf4:	f000 80e6 	beq.w	8017dc4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8017bf8:	2c00      	cmp	r4, #0
 8017bfa:	f000 80f8 	beq.w	8017dee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8017bfe:	2c0a      	cmp	r4, #10
 8017c00:	d060      	beq.n	8017cc4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8017c02:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8017c04:	b36a      	cbz	r2, 8017c62 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 8017c06:	8894      	ldrh	r4, [r2, #4]
 8017c08:	f1bb 0f00 	cmp.w	fp, #0
 8017c0c:	d03b      	beq.n	8017c86 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 8017c0e:	f892 900d 	ldrb.w	r9, [r2, #13]
 8017c12:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8017c16:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8017c1a:	f892 900a 	ldrb.w	r9, [r2, #10]
 8017c1e:	f1bb 0f01 	cmp.w	fp, #1
 8017c22:	ea49 0903 	orr.w	r9, r9, r3
 8017c26:	d134      	bne.n	8017c92 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 8017c28:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017c2a:	eba6 0609 	sub.w	r6, r6, r9
 8017c2e:	2b00      	cmp	r3, #0
 8017c30:	d14f      	bne.n	8017cd2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8017c32:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8017c34:	eb09 0306 	add.w	r3, r9, r6
 8017c38:	4413      	add	r3, r2
 8017c3a:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8017c3c:	f9b2 2000 	ldrsh.w	r2, [r2]
 8017c40:	4293      	cmp	r3, r2
 8017c42:	da51      	bge.n	8017ce8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8017c44:	e038      	b.n	8017cb8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8017c46:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8017c48:	e79a      	b.n	8017b80 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 8017c4a:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8017c4e:	9301      	str	r3, [sp, #4]
 8017c50:	ab1d      	add	r3, sp, #116	; 0x74
 8017c52:	9300      	str	r3, [sp, #0]
 8017c54:	4659      	mov	r1, fp
 8017c56:	ab1c      	add	r3, sp, #112	; 0x70
 8017c58:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8017c5a:	f003 f908 	bl	801ae6e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 8017c5e:	4604      	mov	r4, r0
 8017c60:	e7c0      	b.n	8017be4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 8017c62:	f8d8 0000 	ldr.w	r0, [r8]
 8017c66:	6803      	ldr	r3, [r0, #0]
 8017c68:	691b      	ldr	r3, [r3, #16]
 8017c6a:	4798      	blx	r3
 8017c6c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8017c70:	4298      	cmp	r0, r3
 8017c72:	f000 80a7 	beq.w	8017dc4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8017c76:	f242 030b 	movw	r3, #8203	; 0x200b
 8017c7a:	4298      	cmp	r0, r3
 8017c7c:	f000 80a2 	beq.w	8017dc4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8017c80:	f1bb 0f00 	cmp.w	fp, #0
 8017c84:	d100      	bne.n	8017c88 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 8017c86:	444e      	add	r6, r9
 8017c88:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8017c8a:	2a00      	cmp	r2, #0
 8017c8c:	d1bf      	bne.n	8017c0e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 8017c8e:	4691      	mov	r9, r2
 8017c90:	e098      	b.n	8017dc4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8017c92:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017c94:	2b00      	cmp	r3, #0
 8017c96:	f000 80ac 	beq.w	8017df2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2be>
 8017c9a:	f1bb 0f00 	cmp.w	fp, #0
 8017c9e:	d118      	bne.n	8017cd2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8017ca0:	f8d8 0000 	ldr.w	r0, [r8]
 8017ca4:	990d      	ldr	r1, [sp, #52]	; 0x34
 8017ca6:	6803      	ldr	r3, [r0, #0]
 8017ca8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8017caa:	4798      	blx	r3
 8017cac:	4406      	add	r6, r0
 8017cae:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8017cb0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8017cb2:	1af3      	subs	r3, r6, r3
 8017cb4:	4293      	cmp	r3, r2
 8017cb6:	dd17      	ble.n	8017ce8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8017cb8:	2c00      	cmp	r4, #0
 8017cba:	f000 8098 	beq.w	8017dee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8017cbe:	2c0a      	cmp	r4, #10
 8017cc0:	f040 8086 	bne.w	8017dd0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
 8017cc4:	240a      	movs	r4, #10
 8017cc6:	fab4 f084 	clz	r0, r4
 8017cca:	0940      	lsrs	r0, r0, #5
 8017ccc:	b01f      	add	sp, #124	; 0x7c
 8017cce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017cd2:	f8d8 0000 	ldr.w	r0, [r8]
 8017cd6:	990d      	ldr	r1, [sp, #52]	; 0x34
 8017cd8:	6803      	ldr	r3, [r0, #0]
 8017cda:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8017cdc:	4798      	blx	r3
 8017cde:	f1bb 0f01 	cmp.w	fp, #1
 8017ce2:	eba6 0600 	sub.w	r6, r6, r0
 8017ce6:	d0a4      	beq.n	8017c32 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 8017ce8:	981c      	ldr	r0, [sp, #112]	; 0x70
 8017cea:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8017cec:	f990 1009 	ldrsb.w	r1, [r0, #9]
 8017cf0:	f9b3 7000 	ldrsh.w	r7, [r3]
 8017cf4:	7b43      	ldrb	r3, [r0, #13]
 8017cf6:	015b      	lsls	r3, r3, #5
 8017cf8:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8017cfc:	7983      	ldrb	r3, [r0, #6]
 8017cfe:	4431      	add	r1, r6
 8017d00:	4313      	orrs	r3, r2
 8017d02:	440b      	add	r3, r1
 8017d04:	42bb      	cmp	r3, r7
 8017d06:	db5d      	blt.n	8017dc4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8017d08:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017d0a:	4299      	cmp	r1, r3
 8017d0c:	da5a      	bge.n	8017dc4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8017d0e:	f8d8 0000 	ldr.w	r0, [r8]
 8017d12:	6803      	ldr	r3, [r0, #0]
 8017d14:	42b7      	cmp	r7, r6
 8017d16:	bfc8      	it	gt
 8017d18:	1bbf      	subgt	r7, r7, r6
 8017d1a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8017d1c:	bfcc      	ite	gt
 8017d1e:	b2bf      	uxthgt	r7, r7
 8017d20:	2700      	movle	r7, #0
 8017d22:	4798      	blx	r3
 8017d24:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8017d26:	7b5a      	ldrb	r2, [r3, #13]
 8017d28:	00d1      	lsls	r1, r2, #3
 8017d2a:	f401 7580 	and.w	r5, r1, #256	; 0x100
 8017d2e:	7a19      	ldrb	r1, [r3, #8]
 8017d30:	4329      	orrs	r1, r5
 8017d32:	0655      	lsls	r5, r2, #25
 8017d34:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 8017d36:	bf44      	itt	mi
 8017d38:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 8017d3c:	b209      	sxthmi	r1, r1
 8017d3e:	1945      	adds	r5, r0, r5
 8017d40:	1a6d      	subs	r5, r5, r1
 8017d42:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8017d44:	b2ad      	uxth	r5, r5
 8017d46:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 8017d4a:	fa0f fa85 	sxth.w	sl, r5
 8017d4e:	4551      	cmp	r1, sl
 8017d50:	dd3c      	ble.n	8017dcc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 8017d52:	0112      	lsls	r2, r2, #4
 8017d54:	79d8      	ldrb	r0, [r3, #7]
 8017d56:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8017d5a:	4302      	orrs	r2, r0
 8017d5c:	4492      	add	sl, r2
 8017d5e:	4551      	cmp	r1, sl
 8017d60:	dc30      	bgt.n	8017dc4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8017d62:	1b4d      	subs	r5, r1, r5
 8017d64:	b22d      	sxth	r5, r5
 8017d66:	468a      	mov	sl, r1
 8017d68:	9319      	str	r3, [sp, #100]	; 0x64
 8017d6a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8017d6c:	f8d8 0000 	ldr.w	r0, [r8]
 8017d70:	681a      	ldr	r2, [r3, #0]
 8017d72:	6801      	ldr	r1, [r0, #0]
 8017d74:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 8017d76:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8017d78:	9313      	str	r3, [sp, #76]	; 0x4c
 8017d7a:	9218      	str	r2, [sp, #96]	; 0x60
 8017d7c:	6c09      	ldr	r1, [r1, #64]	; 0x40
 8017d7e:	4788      	blx	r1
 8017d80:	f898 1006 	ldrb.w	r1, [r8, #6]
 8017d84:	910b      	str	r1, [sp, #44]	; 0x2c
 8017d86:	f898 100e 	ldrb.w	r1, [r8, #14]
 8017d8a:	910a      	str	r1, [sp, #40]	; 0x28
 8017d8c:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 8017d90:	9109      	str	r1, [sp, #36]	; 0x24
 8017d92:	f8d8 1008 	ldr.w	r1, [r8, #8]
 8017d96:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8017d98:	9305      	str	r3, [sp, #20]
 8017d9a:	b2ad      	uxth	r5, r5
 8017d9c:	e9cd 0107 	strd	r0, r1, [sp, #28]
 8017da0:	e9cd 7502 	strd	r7, r5, [sp, #8]
 8017da4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8017da6:	9304      	str	r3, [sp, #16]
 8017da8:	4437      	add	r7, r6
 8017daa:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8017dac:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8017dae:	9206      	str	r2, [sp, #24]
 8017db0:	b23f      	sxth	r7, r7
 8017db2:	f8cd a004 	str.w	sl, [sp, #4]
 8017db6:	9700      	str	r7, [sp, #0]
 8017db8:	681a      	ldr	r2, [r3, #0]
 8017dba:	9916      	ldr	r1, [sp, #88]	; 0x58
 8017dbc:	685b      	ldr	r3, [r3, #4]
 8017dbe:	9811      	ldr	r0, [sp, #68]	; 0x44
 8017dc0:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8017dc2:	47a8      	blx	r5
 8017dc4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017dc6:	3301      	adds	r3, #1
 8017dc8:	930e      	str	r3, [sp, #56]	; 0x38
 8017dca:	e6e1      	b.n	8017b90 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 8017dcc:	2500      	movs	r5, #0
 8017dce:	e7cb      	b.n	8017d68 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 8017dd0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8017dd2:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8017dd4:	3501      	adds	r5, #1
 8017dd6:	429d      	cmp	r5, r3
 8017dd8:	f6bf af75 	bge.w	8017cc6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8017ddc:	4659      	mov	r1, fp
 8017dde:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8017de0:	f7f2 fba8 	bl	800a534 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8017de4:	4604      	mov	r4, r0
 8017de6:	b110      	cbz	r0, 8017dee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8017de8:	280a      	cmp	r0, #10
 8017dea:	d1f2      	bne.n	8017dd2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29e>
 8017dec:	e76a      	b.n	8017cc4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8017dee:	2400      	movs	r4, #0
 8017df0:	e769      	b.n	8017cc6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8017df2:	f1bb 0f00 	cmp.w	fp, #0
 8017df6:	f43f af5a 	beq.w	8017cae <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 8017dfa:	e775      	b.n	8017ce8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

08017dfc <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 8017dfc:	b530      	push	{r4, r5, lr}
 8017dfe:	8ac4      	ldrh	r4, [r0, #22]
 8017e00:	8b45      	ldrh	r5, [r0, #26]
 8017e02:	8343      	strh	r3, [r0, #26]
 8017e04:	442c      	add	r4, r5
 8017e06:	1ae4      	subs	r4, r4, r3
 8017e08:	82c4      	strh	r4, [r0, #22]
 8017e0a:	8b83      	ldrh	r3, [r0, #28]
 8017e0c:	8b04      	ldrh	r4, [r0, #24]
 8017e0e:	4422      	add	r2, r4
 8017e10:	440c      	add	r4, r1
 8017e12:	1a59      	subs	r1, r3, r1
 8017e14:	83c2      	strh	r2, [r0, #30]
 8017e16:	8304      	strh	r4, [r0, #24]
 8017e18:	8381      	strh	r1, [r0, #28]
 8017e1a:	bd30      	pop	{r4, r5, pc}

08017e1c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 8017e1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017e20:	4604      	mov	r4, r0
 8017e22:	8a47      	ldrh	r7, [r0, #18]
 8017e24:	68c0      	ldr	r0, [r0, #12]
 8017e26:	6803      	ldr	r3, [r0, #0]
 8017e28:	b085      	sub	sp, #20
 8017e2a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017e2c:	4798      	blx	r3
 8017e2e:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 8017e32:	7a63      	ldrb	r3, [r4, #9]
 8017e34:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 8017e38:	42b7      	cmp	r7, r6
 8017e3a:	f103 33ff 	add.w	r3, r3, #4294967295
 8017e3e:	bfac      	ite	ge
 8017e40:	f04f 0900 	movge.w	r9, #0
 8017e44:	f04f 0901 	movlt.w	r9, #1
 8017e48:	2b05      	cmp	r3, #5
 8017e4a:	d804      	bhi.n	8017e56 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3a>
 8017e4c:	e8df f003 	tbb	[pc, r3]
 8017e50:	470e0854 	.word	0x470e0854
 8017e54:	4c4c      	.short	0x4c4c
 8017e56:	2500      	movs	r5, #0
 8017e58:	46a9      	mov	r9, r5
 8017e5a:	462e      	mov	r6, r5
 8017e5c:	462f      	mov	r7, r5
 8017e5e:	e00d      	b.n	8017e7c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8017e60:	42b7      	cmp	r7, r6
 8017e62:	bfb4      	ite	lt
 8017e64:	2600      	movlt	r6, #0
 8017e66:	2601      	movge	r6, #1
 8017e68:	2500      	movs	r5, #0
 8017e6a:	e7f7      	b.n	8017e5c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 8017e6c:	42b7      	cmp	r7, r6
 8017e6e:	464d      	mov	r5, r9
 8017e70:	f04f 0900 	mov.w	r9, #0
 8017e74:	bfb4      	ite	lt
 8017e76:	2600      	movlt	r6, #0
 8017e78:	2601      	movge	r6, #1
 8017e7a:	464f      	mov	r7, r9
 8017e7c:	f04f 0800 	mov.w	r8, #0
 8017e80:	f8a4 8016 	strh.w	r8, [r4, #22]
 8017e84:	f8a4 8018 	strh.w	r8, [r4, #24]
 8017e88:	f8cd 8004 	str.w	r8, [sp, #4]
 8017e8c:	2300      	movs	r3, #0
 8017e8e:	9303      	str	r3, [sp, #12]
 8017e90:	8823      	ldrh	r3, [r4, #0]
 8017e92:	2b20      	cmp	r3, #32
 8017e94:	d034      	beq.n	8017f00 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe4>
 8017e96:	f242 010b 	movw	r1, #8203	; 0x200b
 8017e9a:	1a5a      	subs	r2, r3, r1
 8017e9c:	f1d2 0a00 	rsbs	sl, r2, #0
 8017ea0:	eb4a 0a02 	adc.w	sl, sl, r2
 8017ea4:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8017ea8:	4293      	cmp	r3, r2
 8017eaa:	d009      	beq.n	8017ec0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 8017eac:	428b      	cmp	r3, r1
 8017eae:	9a01      	ldr	r2, [sp, #4]
 8017eb0:	bf18      	it	ne
 8017eb2:	461a      	movne	r2, r3
 8017eb4:	9201      	str	r2, [sp, #4]
 8017eb6:	bf0c      	ite	eq
 8017eb8:	f04f 0a01 	moveq.w	sl, #1
 8017ebc:	f04f 0a00 	movne.w	sl, #0
 8017ec0:	ab03      	add	r3, sp, #12
 8017ec2:	68e2      	ldr	r2, [r4, #12]
 8017ec4:	7a21      	ldrb	r1, [r4, #8]
 8017ec6:	6860      	ldr	r0, [r4, #4]
 8017ec8:	f002 ff88 	bl	801addc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8017ecc:	8020      	strh	r0, [r4, #0]
 8017ece:	b9d8      	cbnz	r0, 8017f08 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xec>
 8017ed0:	8ba2      	ldrh	r2, [r4, #28]
 8017ed2:	2300      	movs	r3, #0
 8017ed4:	4611      	mov	r1, r2
 8017ed6:	4620      	mov	r0, r4
 8017ed8:	f7ff ff90 	bl	8017dfc <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8017edc:	e06e      	b.n	8017fbc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 8017ede:	2500      	movs	r5, #0
 8017ee0:	46a9      	mov	r9, r5
 8017ee2:	462e      	mov	r6, r5
 8017ee4:	2701      	movs	r7, #1
 8017ee6:	e7c9      	b.n	8017e7c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8017ee8:	42b7      	cmp	r7, r6
 8017eea:	f04f 0500 	mov.w	r5, #0
 8017eee:	bfb4      	ite	lt
 8017ef0:	2700      	movlt	r7, #0
 8017ef2:	2701      	movge	r7, #1
 8017ef4:	462e      	mov	r6, r5
 8017ef6:	e7c1      	b.n	8017e7c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8017ef8:	2500      	movs	r5, #0
 8017efa:	46a9      	mov	r9, r5
 8017efc:	2601      	movs	r6, #1
 8017efe:	e7ad      	b.n	8017e5c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 8017f00:	9301      	str	r3, [sp, #4]
 8017f02:	f04f 0a01 	mov.w	sl, #1
 8017f06:	e7db      	b.n	8017ec0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 8017f08:	8b63      	ldrh	r3, [r4, #26]
 8017f0a:	280a      	cmp	r0, #10
 8017f0c:	f103 0301 	add.w	r3, r3, #1
 8017f10:	8363      	strh	r3, [r4, #26]
 8017f12:	d0dd      	beq.n	8017ed0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb4>
 8017f14:	9a03      	ldr	r2, [sp, #12]
 8017f16:	bb62      	cbnz	r2, 8017f72 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x156>
 8017f18:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8017f1c:	4298      	cmp	r0, r3
 8017f1e:	d003      	beq.n	8017f28 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 8017f20:	f242 030b 	movw	r3, #8203	; 0x200b
 8017f24:	4298      	cmp	r0, r3
 8017f26:	d1b1      	bne.n	8017e8c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8017f28:	8823      	ldrh	r3, [r4, #0]
 8017f2a:	8ba1      	ldrh	r1, [r4, #28]
 8017f2c:	2b20      	cmp	r3, #32
 8017f2e:	d003      	beq.n	8017f38 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11c>
 8017f30:	f242 000b 	movw	r0, #8203	; 0x200b
 8017f34:	4283      	cmp	r3, r0
 8017f36:	d131      	bne.n	8017f9c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x180>
 8017f38:	f1ba 0f00 	cmp.w	sl, #0
 8017f3c:	bf0a      	itet	eq
 8017f3e:	4688      	moveq	r8, r1
 8017f40:	4650      	movne	r0, sl
 8017f42:	2001      	moveq	r0, #1
 8017f44:	440a      	add	r2, r1
 8017f46:	8b23      	ldrh	r3, [r4, #24]
 8017f48:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 8017f4c:	b292      	uxth	r2, r2
 8017f4e:	83a2      	strh	r2, [r4, #28]
 8017f50:	4413      	add	r3, r2
 8017f52:	f1b9 0f00 	cmp.w	r9, #0
 8017f56:	d102      	bne.n	8017f5e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x142>
 8017f58:	2d00      	cmp	r5, #0
 8017f5a:	d042      	beq.n	8017fe2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c6>
 8017f5c:	b300      	cbz	r0, 8017fa0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x184>
 8017f5e:	8c21      	ldrh	r1, [r4, #32]
 8017f60:	4419      	add	r1, r3
 8017f62:	458c      	cmp	ip, r1
 8017f64:	da37      	bge.n	8017fd6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 8017f66:	8ae1      	ldrh	r1, [r4, #22]
 8017f68:	2900      	cmp	r1, #0
 8017f6a:	d034      	beq.n	8017fd6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 8017f6c:	4563      	cmp	r3, ip
 8017f6e:	dd8d      	ble.n	8017e8c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8017f70:	e01d      	b.n	8017fae <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x192>
 8017f72:	8893      	ldrh	r3, [r2, #4]
 8017f74:	8023      	strh	r3, [r4, #0]
 8017f76:	f892 b00d 	ldrb.w	fp, [r2, #13]
 8017f7a:	9901      	ldr	r1, [sp, #4]
 8017f7c:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 8017f80:	f40b 7080 	and.w	r0, fp, #256	; 0x100
 8017f84:	f892 b00a 	ldrb.w	fp, [r2, #10]
 8017f88:	ea4b 0b00 	orr.w	fp, fp, r0
 8017f8c:	68e0      	ldr	r0, [r4, #12]
 8017f8e:	6803      	ldr	r3, [r0, #0]
 8017f90:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8017f92:	4798      	blx	r3
 8017f94:	eb0b 0200 	add.w	r2, fp, r0
 8017f98:	b292      	uxth	r2, r2
 8017f9a:	e7c5      	b.n	8017f28 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 8017f9c:	2000      	movs	r0, #0
 8017f9e:	e7d1      	b.n	8017f44 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x128>
 8017fa0:	4563      	cmp	r3, ip
 8017fa2:	f77f af73 	ble.w	8017e8c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8017fa6:	8ae3      	ldrh	r3, [r4, #22]
 8017fa8:	2b00      	cmp	r3, #0
 8017faa:	f43f af6f 	beq.w	8017e8c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8017fae:	2301      	movs	r3, #1
 8017fb0:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
 8017fb4:	8c22      	ldrh	r2, [r4, #32]
 8017fb6:	8be3      	ldrh	r3, [r4, #30]
 8017fb8:	4413      	add	r3, r2
 8017fba:	83e3      	strh	r3, [r4, #30]
 8017fbc:	68e0      	ldr	r0, [r4, #12]
 8017fbe:	6803      	ldr	r3, [r0, #0]
 8017fc0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017fc2:	4798      	blx	r3
 8017fc4:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 8017fc8:	4418      	add	r0, r3
 8017fca:	8a63      	ldrh	r3, [r4, #18]
 8017fcc:	1a18      	subs	r0, r3, r0
 8017fce:	8260      	strh	r0, [r4, #18]
 8017fd0:	b005      	add	sp, #20
 8017fd2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017fd6:	2300      	movs	r3, #0
 8017fd8:	4611      	mov	r1, r2
 8017fda:	4620      	mov	r0, r4
 8017fdc:	f7ff ff0e 	bl	8017dfc <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8017fe0:	e754      	b.n	8017e8c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8017fe2:	4563      	cmp	r3, ip
 8017fe4:	dd14      	ble.n	8018010 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f4>
 8017fe6:	b117      	cbz	r7, 8017fee <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d2>
 8017fe8:	2301      	movs	r3, #1
 8017fea:	460a      	mov	r2, r1
 8017fec:	e772      	b.n	8017ed4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 8017fee:	2e00      	cmp	r6, #0
 8017ff0:	f43f af4c 	beq.w	8017e8c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8017ff4:	2800      	cmp	r0, #0
 8017ff6:	f47f af49 	bne.w	8017e8c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8017ffa:	f1ba 0f00 	cmp.w	sl, #0
 8017ffe:	d002      	beq.n	8018006 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ea>
 8018000:	2301      	movs	r3, #1
 8018002:	4642      	mov	r2, r8
 8018004:	e767      	b.n	8017ed6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xba>
 8018006:	8ae3      	ldrh	r3, [r4, #22]
 8018008:	2b00      	cmp	r3, #0
 801800a:	f43f af3f 	beq.w	8017e8c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801800e:	e7d5      	b.n	8017fbc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 8018010:	2800      	cmp	r0, #0
 8018012:	f47f af3b 	bne.w	8017e8c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8018016:	f1ba 0f00 	cmp.w	sl, #0
 801801a:	f43f af37 	beq.w	8017e8c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801801e:	2301      	movs	r3, #1
 8018020:	4642      	mov	r2, r8
 8018022:	e7da      	b.n	8017fda <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1be>

08018024 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 8018024:	b5f0      	push	{r4, r5, r6, r7, lr}
 8018026:	4605      	mov	r5, r0
 8018028:	b08f      	sub	sp, #60	; 0x3c
 801802a:	4617      	mov	r7, r2
 801802c:	461c      	mov	r4, r3
 801802e:	460e      	mov	r6, r1
 8018030:	b1d1      	cbz	r1, 8018068 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 8018032:	681b      	ldr	r3, [r3, #0]
 8018034:	4620      	mov	r0, r4
 8018036:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8018038:	4798      	blx	r3
 801803a:	4240      	negs	r0, r0
 801803c:	b200      	sxth	r0, r0
 801803e:	e9cd 4001 	strd	r4, r0, [sp, #4]
 8018042:	9603      	str	r6, [sp, #12]
 8018044:	9700      	str	r7, [sp, #0]
 8018046:	f64f 73ff 	movw	r3, #65535	; 0xffff
 801804a:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 801804e:	4629      	mov	r1, r5
 8018050:	a805      	add	r0, sp, #20
 8018052:	f7ff fcbf 	bl	80179d4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8018056:	2401      	movs	r4, #1
 8018058:	a805      	add	r0, sp, #20
 801805a:	f7ff fedf 	bl	8017e1c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 801805e:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8018062:	b163      	cbz	r3, 801807e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 8018064:	3401      	adds	r4, #1
 8018066:	e7f7      	b.n	8018058 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 8018068:	f002 ff86 	bl	801af78 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801806c:	2401      	movs	r4, #1
 801806e:	280a      	cmp	r0, #10
 8018070:	4628      	mov	r0, r5
 8018072:	bf08      	it	eq
 8018074:	3401      	addeq	r4, #1
 8018076:	f002 ff7f 	bl	801af78 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801807a:	2800      	cmp	r0, #0
 801807c:	d1f7      	bne.n	801806e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 801807e:	b2a0      	uxth	r0, r4
 8018080:	b00f      	add	sp, #60	; 0x3c
 8018082:	bdf0      	pop	{r4, r5, r6, r7, pc}

08018084 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 8018084:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018088:	b0e3      	sub	sp, #396	; 0x18c
 801808a:	461c      	mov	r4, r3
 801808c:	9b6c      	ldr	r3, [sp, #432]	; 0x1b0
 801808e:	4683      	mov	fp, r0
 8018090:	4688      	mov	r8, r1
 8018092:	2b00      	cmp	r3, #0
 8018094:	f000 8112 	beq.w	80182bc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8018098:	6823      	ldr	r3, [r4, #0]
 801809a:	2b00      	cmp	r3, #0
 801809c:	f000 810e 	beq.w	80182bc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80180a0:	7ba3      	ldrb	r3, [r4, #14]
 80180a2:	2b00      	cmp	r3, #0
 80180a4:	f000 810a 	beq.w	80182bc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80180a8:	6810      	ldr	r0, [r2, #0]
 80180aa:	6851      	ldr	r1, [r2, #4]
 80180ac:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 80180b0:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 80180b4:	ad0a      	add	r5, sp, #40	; 0x28
 80180b6:	462b      	mov	r3, r5
 80180b8:	c303      	stmia	r3!, {r0, r1}
 80180ba:	2100      	movs	r1, #0
 80180bc:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 80180c0:	910c      	str	r1, [sp, #48]	; 0x30
 80180c2:	79a2      	ldrb	r2, [r4, #6]
 80180c4:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80180c8:	a90c      	add	r1, sp, #48	; 0x30
 80180ca:	4628      	mov	r0, r5
 80180cc:	f7ff fd01 	bl	8017ad2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 80180d0:	a90c      	add	r1, sp, #48	; 0x30
 80180d2:	4608      	mov	r0, r1
 80180d4:	79a2      	ldrb	r2, [r4, #6]
 80180d6:	f7ff fcfc 	bl	8017ad2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 80180da:	a817      	add	r0, sp, #92	; 0x5c
 80180dc:	f002 fb20 	bl	801a720 <_ZN8touchgfx12TextProviderC1Ev>
 80180e0:	6820      	ldr	r0, [r4, #0]
 80180e2:	6803      	ldr	r3, [r0, #0]
 80180e4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80180e6:	4798      	blx	r3
 80180e8:	4606      	mov	r6, r0
 80180ea:	6820      	ldr	r0, [r4, #0]
 80180ec:	6803      	ldr	r3, [r0, #0]
 80180ee:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80180f0:	4798      	blx	r3
 80180f2:	4633      	mov	r3, r6
 80180f4:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 80180f6:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 80180f8:	9000      	str	r0, [sp, #0]
 80180fa:	a817      	add	r0, sp, #92	; 0x5c
 80180fc:	f002 fb6b 	bl	801a7d6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8018100:	6820      	ldr	r0, [r4, #0]
 8018102:	f894 a004 	ldrb.w	sl, [r4, #4]
 8018106:	6803      	ldr	r3, [r0, #0]
 8018108:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801810a:	4798      	blx	r3
 801810c:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 8018110:	6823      	ldr	r3, [r4, #0]
 8018112:	4607      	mov	r7, r0
 8018114:	4406      	add	r6, r0
 8018116:	a830      	add	r0, sp, #192	; 0xc0
 8018118:	f893 9009 	ldrb.w	r9, [r3, #9]
 801811c:	f002 fb00 	bl	801a720 <_ZN8touchgfx12TextProviderC1Ev>
 8018120:	7c23      	ldrb	r3, [r4, #16]
 8018122:	b17b      	cbz	r3, 8018144 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 8018124:	6820      	ldr	r0, [r4, #0]
 8018126:	6803      	ldr	r3, [r0, #0]
 8018128:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801812a:	4798      	blx	r3
 801812c:	9009      	str	r0, [sp, #36]	; 0x24
 801812e:	6820      	ldr	r0, [r4, #0]
 8018130:	6802      	ldr	r2, [r0, #0]
 8018132:	6d12      	ldr	r2, [r2, #80]	; 0x50
 8018134:	4790      	blx	r2
 8018136:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018138:	9000      	str	r0, [sp, #0]
 801813a:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 801813c:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 801813e:	a830      	add	r0, sp, #192	; 0xc0
 8018140:	f002 fb49 	bl	801a7d6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8018144:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8018148:	7be2      	ldrb	r2, [r4, #15]
 801814a:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 801814e:	1a8a      	subs	r2, r1, r2
 8018150:	7c21      	ldrb	r1, [r4, #16]
 8018152:	9103      	str	r1, [sp, #12]
 8018154:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8018158:	9102      	str	r1, [sp, #8]
 801815a:	6821      	ldr	r1, [r4, #0]
 801815c:	9101      	str	r1, [sp, #4]
 801815e:	7961      	ldrb	r1, [r4, #5]
 8018160:	9100      	str	r1, [sp, #0]
 8018162:	b292      	uxth	r2, r2
 8018164:	a930      	add	r1, sp, #192	; 0xc0
 8018166:	a80e      	add	r0, sp, #56	; 0x38
 8018168:	f7ff fc34 	bl	80179d4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 801816c:	2e00      	cmp	r6, #0
 801816e:	dc5b      	bgt.n	8018228 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 8018170:	af17      	add	r7, sp, #92	; 0x5c
 8018172:	f04f 0900 	mov.w	r9, #0
 8018176:	7c23      	ldrb	r3, [r4, #16]
 8018178:	2b00      	cmp	r3, #0
 801817a:	f000 80b1 	beq.w	80182e0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 801817e:	a80e      	add	r0, sp, #56	; 0x38
 8018180:	f7ff fe4c 	bl	8017e1c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8018184:	f1ba 0f00 	cmp.w	sl, #0
 8018188:	f000 80a5 	beq.w	80182d6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 801818c:	7c23      	ldrb	r3, [r4, #16]
 801818e:	9309      	str	r3, [sp, #36]	; 0x24
 8018190:	2264      	movs	r2, #100	; 0x64
 8018192:	4639      	mov	r1, r7
 8018194:	a849      	add	r0, sp, #292	; 0x124
 8018196:	f015 feba 	bl	802df0e <memcpy>
 801819a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801819c:	2b00      	cmp	r3, #0
 801819e:	f000 80a7 	beq.w	80182f0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 80181a2:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 80181a6:	7922      	ldrb	r2, [r4, #4]
 80181a8:	2a01      	cmp	r2, #1
 80181aa:	f040 808a 	bne.w	80182c2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 80181ae:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	; 0x34
 80181b2:	1ac0      	subs	r0, r0, r3
 80181b4:	2302      	movs	r3, #2
 80181b6:	fb90 f0f3 	sdiv	r0, r0, r3
 80181ba:	b200      	sxth	r0, r0
 80181bc:	7c23      	ldrb	r3, [r4, #16]
 80181be:	2b00      	cmp	r3, #0
 80181c0:	f000 808b 	beq.w	80182da <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 80181c4:	f8bd 204e 	ldrh.w	r2, [sp, #78]	; 0x4e
 80181c8:	f89d 105a 	ldrb.w	r1, [sp, #90]	; 0x5a
 80181cc:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 80181d0:	e9cd 2105 	strd	r2, r1, [sp, #20]
 80181d4:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 80181d8:	4410      	add	r0, r2
 80181da:	b200      	sxth	r0, r0
 80181dc:	9000      	str	r0, [sp, #0]
 80181de:	e9cd 9703 	strd	r9, r7, [sp, #12]
 80181e2:	e9cd 5401 	strd	r5, r4, [sp, #4]
 80181e6:	4642      	mov	r2, r8
 80181e8:	2100      	movs	r1, #0
 80181ea:	4658      	mov	r0, fp
 80181ec:	f7ff fca2 	bl	8017b34 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 80181f0:	2800      	cmp	r0, #0
 80181f2:	d163      	bne.n	80182bc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80181f4:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 80181f8:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 80181fc:	b2b2      	uxth	r2, r6
 80181fe:	4413      	add	r3, r2
 8018200:	1a8a      	subs	r2, r1, r2
 8018202:	f8ad 2036 	strh.w	r2, [sp, #54]	; 0x36
 8018206:	f89d 205a 	ldrb.w	r2, [sp, #90]	; 0x5a
 801820a:	b21b      	sxth	r3, r3
 801820c:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8018210:	2a00      	cmp	r2, #0
 8018212:	d153      	bne.n	80182bc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8018214:	6822      	ldr	r2, [r4, #0]
 8018216:	8869      	ldrh	r1, [r5, #2]
 8018218:	7a12      	ldrb	r2, [r2, #8]
 801821a:	1a9b      	subs	r3, r3, r2
 801821c:	88ea      	ldrh	r2, [r5, #6]
 801821e:	440a      	add	r2, r1
 8018220:	b212      	sxth	r2, r2
 8018222:	4293      	cmp	r3, r2
 8018224:	dda7      	ble.n	8018176 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 8018226:	e049      	b.n	80182bc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8018228:	7c23      	ldrb	r3, [r4, #16]
 801822a:	444f      	add	r7, r9
 801822c:	b1c3      	cbz	r3, 8018260 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 801822e:	f64f 79ff 	movw	r9, #65535	; 0xffff
 8018232:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8018236:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801823a:	443b      	add	r3, r7
 801823c:	4293      	cmp	r3, r2
 801823e:	da97      	bge.n	8018170 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8018240:	a80e      	add	r0, sp, #56	; 0x38
 8018242:	f7ff fdeb 	bl	8017e1c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8018246:	f8bd 304e 	ldrh.w	r3, [sp, #78]	; 0x4e
 801824a:	3b01      	subs	r3, #1
 801824c:	b29b      	uxth	r3, r3
 801824e:	454b      	cmp	r3, r9
 8018250:	9309      	str	r3, [sp, #36]	; 0x24
 8018252:	d021      	beq.n	8018298 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 8018254:	7961      	ldrb	r1, [r4, #5]
 8018256:	a817      	add	r0, sp, #92	; 0x5c
 8018258:	f7f2 f96c 	bl	800a534 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801825c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801825e:	e7f4      	b.n	801824a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 8018260:	fa1f f986 	uxth.w	r9, r6
 8018264:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8018268:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801826c:	443b      	add	r3, r7
 801826e:	4293      	cmp	r3, r2
 8018270:	f6bf af7e 	bge.w	8018170 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8018274:	a817      	add	r0, sp, #92	; 0x5c
 8018276:	f002 fe7f 	bl	801af78 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801827a:	b1f8      	cbz	r0, 80182bc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 801827c:	280a      	cmp	r0, #10
 801827e:	d1f1      	bne.n	8018264 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8018280:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8018284:	444b      	add	r3, r9
 8018286:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801828a:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 801828e:	eba3 0309 	sub.w	r3, r3, r9
 8018292:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8018296:	e7e5      	b.n	8018264 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8018298:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 801829c:	b2b3      	uxth	r3, r6
 801829e:	441a      	add	r2, r3
 80182a0:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 80182a4:	f8bd 2036 	ldrh.w	r2, [sp, #54]	; 0x36
 80182a8:	1ad3      	subs	r3, r2, r3
 80182aa:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80182ae:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80182b2:	b11b      	cbz	r3, 80182bc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80182b4:	f89d 305a 	ldrb.w	r3, [sp, #90]	; 0x5a
 80182b8:	2b00      	cmp	r3, #0
 80182ba:	d0ba      	beq.n	8018232 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 80182bc:	b063      	add	sp, #396	; 0x18c
 80182be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80182c2:	2a02      	cmp	r2, #2
 80182c4:	d105      	bne.n	80182d2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 80182c6:	7be2      	ldrb	r2, [r4, #15]
 80182c8:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 80182cc:	1a80      	subs	r0, r0, r2
 80182ce:	1ac0      	subs	r0, r0, r3
 80182d0:	e773      	b.n	80181ba <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 80182d2:	2000      	movs	r0, #0
 80182d4:	e772      	b.n	80181bc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 80182d6:	7be0      	ldrb	r0, [r4, #15]
 80182d8:	e770      	b.n	80181bc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 80182da:	f647 72ff 	movw	r2, #32767	; 0x7fff
 80182de:	e773      	b.n	80181c8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 80182e0:	f1ba 0f00 	cmp.w	sl, #0
 80182e4:	d0f7      	beq.n	80182d6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 80182e6:	2264      	movs	r2, #100	; 0x64
 80182e8:	4639      	mov	r1, r7
 80182ea:	a849      	add	r0, sp, #292	; 0x124
 80182ec:	f015 fe0f 	bl	802df0e <memcpy>
 80182f0:	2300      	movs	r3, #0
 80182f2:	f647 72ff 	movw	r2, #32767	; 0x7fff
 80182f6:	6821      	ldr	r1, [r4, #0]
 80182f8:	a849      	add	r0, sp, #292	; 0x124
 80182fa:	f7ff fbae 	bl	8017a5a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 80182fe:	b203      	sxth	r3, r0
 8018300:	e751      	b.n	80181a6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

08018302 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 8018302:	2b03      	cmp	r3, #3
 8018304:	d818      	bhi.n	8018338 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 8018306:	e8df f003 	tbb	[pc, r3]
 801830a:	0602      	.short	0x0602
 801830c:	130d      	.short	0x130d
 801830e:	f9b0 2000 	ldrsh.w	r2, [r0]
 8018312:	1850      	adds	r0, r2, r1
 8018314:	4770      	bx	lr
 8018316:	8803      	ldrh	r3, [r0, #0]
 8018318:	8880      	ldrh	r0, [r0, #4]
 801831a:	4418      	add	r0, r3
 801831c:	b200      	sxth	r0, r0
 801831e:	1a80      	subs	r0, r0, r2
 8018320:	3801      	subs	r0, #1
 8018322:	4770      	bx	lr
 8018324:	8803      	ldrh	r3, [r0, #0]
 8018326:	8880      	ldrh	r0, [r0, #4]
 8018328:	4418      	add	r0, r3
 801832a:	b200      	sxth	r0, r0
 801832c:	1a40      	subs	r0, r0, r1
 801832e:	e7f7      	b.n	8018320 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 8018330:	f9b0 0000 	ldrsh.w	r0, [r0]
 8018334:	4410      	add	r0, r2
 8018336:	4770      	bx	lr
 8018338:	2000      	movs	r0, #0
 801833a:	4770      	bx	lr

0801833c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 801833c:	2b03      	cmp	r3, #3
 801833e:	d817      	bhi.n	8018370 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 8018340:	e8df f003 	tbb	[pc, r3]
 8018344:	10090602 	.word	0x10090602
 8018348:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 801834c:	1850      	adds	r0, r2, r1
 801834e:	4770      	bx	lr
 8018350:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8018354:	e7fa      	b.n	801834c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 8018356:	8843      	ldrh	r3, [r0, #2]
 8018358:	88c0      	ldrh	r0, [r0, #6]
 801835a:	4418      	add	r0, r3
 801835c:	b200      	sxth	r0, r0
 801835e:	1a80      	subs	r0, r0, r2
 8018360:	3801      	subs	r0, #1
 8018362:	4770      	bx	lr
 8018364:	8843      	ldrh	r3, [r0, #2]
 8018366:	88c0      	ldrh	r0, [r0, #6]
 8018368:	4418      	add	r0, r3
 801836a:	b200      	sxth	r0, r0
 801836c:	1a40      	subs	r0, r0, r1
 801836e:	e7f7      	b.n	8018360 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 8018370:	2000      	movs	r0, #0
 8018372:	4770      	bx	lr

08018374 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 8018374:	4b01      	ldr	r3, [pc, #4]	; (801837c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 8018376:	2200      	movs	r2, #0
 8018378:	601a      	str	r2, [r3, #0]
 801837a:	4770      	bx	lr
 801837c:	2001385c 	.word	0x2001385c

08018380 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 8018380:	4603      	mov	r3, r0
 8018382:	b1c8      	cbz	r0, 80183b8 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 8018384:	0c02      	lsrs	r2, r0, #16
 8018386:	0412      	lsls	r2, r2, #16
 8018388:	b9a2      	cbnz	r2, 80183b4 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 801838a:	0403      	lsls	r3, r0, #16
 801838c:	2010      	movs	r0, #16
 801838e:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8018392:	bf04      	itt	eq
 8018394:	021b      	lsleq	r3, r3, #8
 8018396:	3008      	addeq	r0, #8
 8018398:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 801839c:	bf04      	itt	eq
 801839e:	011b      	lsleq	r3, r3, #4
 80183a0:	3004      	addeq	r0, #4
 80183a2:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 80183a6:	bf04      	itt	eq
 80183a8:	009b      	lsleq	r3, r3, #2
 80183aa:	3002      	addeq	r0, #2
 80183ac:	2b00      	cmp	r3, #0
 80183ae:	db04      	blt.n	80183ba <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 80183b0:	3001      	adds	r0, #1
 80183b2:	4770      	bx	lr
 80183b4:	2000      	movs	r0, #0
 80183b6:	e7ea      	b.n	801838e <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 80183b8:	2020      	movs	r0, #32
 80183ba:	4770      	bx	lr

080183bc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 80183bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80183c0:	b087      	sub	sp, #28
 80183c2:	460d      	mov	r5, r1
 80183c4:	4616      	mov	r6, r2
 80183c6:	4698      	mov	r8, r3
 80183c8:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 80183cc:	4601      	mov	r1, r0
 80183ce:	b120      	cbz	r0, 80183da <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 80183d0:	b11a      	cbz	r2, 80183da <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 80183d2:	2d1f      	cmp	r5, #31
 80183d4:	d801      	bhi.n	80183da <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 80183d6:	2b1f      	cmp	r3, #31
 80183d8:	d904      	bls.n	80183e4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 80183da:	2000      	movs	r0, #0
 80183dc:	6038      	str	r0, [r7, #0]
 80183de:	b007      	add	sp, #28
 80183e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80183e4:	b97d      	cbnz	r5, 8018406 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 80183e6:	b143      	cbz	r3, 80183fa <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 80183e8:	4602      	mov	r2, r0
 80183ea:	e9cd 4700 	strd	r4, r7, [sp]
 80183ee:	462b      	mov	r3, r5
 80183f0:	4641      	mov	r1, r8
 80183f2:	4630      	mov	r0, r6
 80183f4:	f7ff ffe2 	bl	80183bc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80183f8:	e7f1      	b.n	80183de <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 80183fa:	f04f 33ff 	mov.w	r3, #4294967295
 80183fe:	603b      	str	r3, [r7, #0]
 8018400:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8018404:	e7eb      	b.n	80183de <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8018406:	fa32 fa05 	lsrs.w	sl, r2, r5
 801840a:	d106      	bne.n	801841a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 801840c:	4346      	muls	r6, r0
 801840e:	fbb6 f0f4 	udiv	r0, r6, r4
 8018412:	fb04 6610 	mls	r6, r4, r0, r6
 8018416:	603e      	str	r6, [r7, #0]
 8018418:	e7e1      	b.n	80183de <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 801841a:	2201      	movs	r2, #1
 801841c:	40aa      	lsls	r2, r5
 801841e:	3a01      	subs	r2, #1
 8018420:	4016      	ands	r6, r2
 8018422:	fa00 fb05 	lsl.w	fp, r0, r5
 8018426:	4630      	mov	r0, r6
 8018428:	fbbb f9f4 	udiv	r9, fp, r4
 801842c:	fb0a f309 	mul.w	r3, sl, r9
 8018430:	9303      	str	r3, [sp, #12]
 8018432:	f7ff ffa5 	bl	8018380 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8018436:	462b      	mov	r3, r5
 8018438:	460a      	mov	r2, r1
 801843a:	e9cd 4700 	strd	r4, r7, [sp]
 801843e:	4601      	mov	r1, r0
 8018440:	4630      	mov	r0, r6
 8018442:	f7ff ffbb 	bl	80183bc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8018446:	fb04 b919 	mls	r9, r4, r9, fp
 801844a:	4606      	mov	r6, r0
 801844c:	4648      	mov	r0, r9
 801844e:	eb05 0108 	add.w	r1, r5, r8
 8018452:	f7ff ff95 	bl	8018380 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8018456:	ab05      	add	r3, sp, #20
 8018458:	e9cd 4300 	strd	r4, r3, [sp]
 801845c:	464a      	mov	r2, r9
 801845e:	4603      	mov	r3, r0
 8018460:	4650      	mov	r0, sl
 8018462:	f7ff ffab 	bl	80183bc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8018466:	6839      	ldr	r1, [r7, #0]
 8018468:	9a05      	ldr	r2, [sp, #20]
 801846a:	9b03      	ldr	r3, [sp, #12]
 801846c:	4411      	add	r1, r2
 801846e:	fbb1 f2f4 	udiv	r2, r1, r4
 8018472:	18d3      	adds	r3, r2, r3
 8018474:	441e      	add	r6, r3
 8018476:	fb04 1412 	mls	r4, r4, r2, r1
 801847a:	4430      	add	r0, r6
 801847c:	603c      	str	r4, [r7, #0]
 801847e:	e7ae      	b.n	80183de <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

08018480 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 8018480:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8018484:	b085      	sub	sp, #20
 8018486:	f1b0 0900 	subs.w	r9, r0, #0
 801848a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801848c:	461d      	mov	r5, r3
 801848e:	bfbf      	itttt	lt
 8018490:	6823      	ldrlt	r3, [r4, #0]
 8018492:	425b      	neglt	r3, r3
 8018494:	f1c9 0900 	rsblt	r9, r9, #0
 8018498:	6023      	strlt	r3, [r4, #0]
 801849a:	bfb4      	ite	lt
 801849c:	f04f 36ff 	movlt.w	r6, #4294967295
 80184a0:	2601      	movge	r6, #1
 80184a2:	2a00      	cmp	r2, #0
 80184a4:	4617      	mov	r7, r2
 80184a6:	da04      	bge.n	80184b2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 80184a8:	6823      	ldr	r3, [r4, #0]
 80184aa:	425b      	negs	r3, r3
 80184ac:	4257      	negs	r7, r2
 80184ae:	4276      	negs	r6, r6
 80184b0:	6023      	str	r3, [r4, #0]
 80184b2:	2d00      	cmp	r5, #0
 80184b4:	4638      	mov	r0, r7
 80184b6:	bfba      	itte	lt
 80184b8:	426d      	neglt	r5, r5
 80184ba:	f04f 38ff 	movlt.w	r8, #4294967295
 80184be:	f04f 0801 	movge.w	r8, #1
 80184c2:	f7ff ff5d 	bl	8018380 <_ZN8touchgfx16TouchCalibration4clzuEm>
 80184c6:	ab03      	add	r3, sp, #12
 80184c8:	e9cd 5300 	strd	r5, r3, [sp]
 80184cc:	463a      	mov	r2, r7
 80184ce:	4603      	mov	r3, r0
 80184d0:	4648      	mov	r0, r9
 80184d2:	f7ff ff73 	bl	80183bc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80184d6:	6823      	ldr	r3, [r4, #0]
 80184d8:	9a03      	ldr	r2, [sp, #12]
 80184da:	4546      	cmp	r6, r8
 80184dc:	441a      	add	r2, r3
 80184de:	fb92 f3f5 	sdiv	r3, r2, r5
 80184e2:	4418      	add	r0, r3
 80184e4:	bf18      	it	ne
 80184e6:	4240      	negne	r0, r0
 80184e8:	fb05 2313 	mls	r3, r5, r3, r2
 80184ec:	1c72      	adds	r2, r6, #1
 80184ee:	6023      	str	r3, [r4, #0]
 80184f0:	d105      	bne.n	80184fe <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 80184f2:	2b00      	cmp	r3, #0
 80184f4:	f1c3 0200 	rsb	r2, r3, #0
 80184f8:	db0b      	blt.n	8018512 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 80184fa:	6022      	str	r2, [r4, #0]
 80184fc:	e006      	b.n	801850c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 80184fe:	2e01      	cmp	r6, #1
 8018500:	d104      	bne.n	801850c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8018502:	2b00      	cmp	r3, #0
 8018504:	da02      	bge.n	801850c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8018506:	442b      	add	r3, r5
 8018508:	3801      	subs	r0, #1
 801850a:	6023      	str	r3, [r4, #0]
 801850c:	b005      	add	sp, #20
 801850e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8018512:	3801      	subs	r0, #1
 8018514:	1b52      	subs	r2, r2, r5
 8018516:	e7f0      	b.n	80184fa <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

08018518 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 8018518:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801851c:	4c1c      	ldr	r4, [pc, #112]	; (8018590 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 801851e:	6807      	ldr	r7, [r0, #0]
 8018520:	69a3      	ldr	r3, [r4, #24]
 8018522:	4605      	mov	r5, r0
 8018524:	b92b      	cbnz	r3, 8018532 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 8018526:	6840      	ldr	r0, [r0, #4]
 8018528:	e9c5 7000 	strd	r7, r0, [r5]
 801852c:	b004      	add	sp, #16
 801852e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8018532:	68a2      	ldr	r2, [r4, #8]
 8018534:	6820      	ldr	r0, [r4, #0]
 8018536:	ae04      	add	r6, sp, #16
 8018538:	f04f 0802 	mov.w	r8, #2
 801853c:	fb93 f1f8 	sdiv	r1, r3, r8
 8018540:	440a      	add	r2, r1
 8018542:	f846 2d04 	str.w	r2, [r6, #-4]!
 8018546:	69e1      	ldr	r1, [r4, #28]
 8018548:	9600      	str	r6, [sp, #0]
 801854a:	463a      	mov	r2, r7
 801854c:	f7ff ff98 	bl	8018480 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8018550:	69a3      	ldr	r3, [r4, #24]
 8018552:	686a      	ldr	r2, [r5, #4]
 8018554:	6a21      	ldr	r1, [r4, #32]
 8018556:	9600      	str	r6, [sp, #0]
 8018558:	4607      	mov	r7, r0
 801855a:	6860      	ldr	r0, [r4, #4]
 801855c:	f7ff ff90 	bl	8018480 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8018560:	6962      	ldr	r2, [r4, #20]
 8018562:	69a3      	ldr	r3, [r4, #24]
 8018564:	fb93 f8f8 	sdiv	r8, r3, r8
 8018568:	4442      	add	r2, r8
 801856a:	9203      	str	r2, [sp, #12]
 801856c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 801856e:	682a      	ldr	r2, [r5, #0]
 8018570:	9600      	str	r6, [sp, #0]
 8018572:	4407      	add	r7, r0
 8018574:	68e0      	ldr	r0, [r4, #12]
 8018576:	f7ff ff83 	bl	8018480 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801857a:	9600      	str	r6, [sp, #0]
 801857c:	4680      	mov	r8, r0
 801857e:	69a3      	ldr	r3, [r4, #24]
 8018580:	686a      	ldr	r2, [r5, #4]
 8018582:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 8018584:	6920      	ldr	r0, [r4, #16]
 8018586:	f7ff ff7b 	bl	8018480 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801858a:	4440      	add	r0, r8
 801858c:	e7cc      	b.n	8018528 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 801858e:	bf00      	nop
 8018590:	20013860 	.word	0x20013860

08018594 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 8018594:	4b07      	ldr	r3, [pc, #28]	; (80185b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 8018596:	781b      	ldrb	r3, [r3, #0]
 8018598:	2b01      	cmp	r3, #1
 801859a:	d109      	bne.n	80185b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 801859c:	f9b1 3000 	ldrsh.w	r3, [r1]
 80185a0:	f9b0 2000 	ldrsh.w	r2, [r0]
 80185a4:	8003      	strh	r3, [r0, #0]
 80185a6:	4b04      	ldr	r3, [pc, #16]	; (80185b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 80185a8:	881b      	ldrh	r3, [r3, #0]
 80185aa:	3b01      	subs	r3, #1
 80185ac:	1a9b      	subs	r3, r3, r2
 80185ae:	800b      	strh	r3, [r1, #0]
 80185b0:	4770      	bx	lr
 80185b2:	bf00      	nop
 80185b4:	20013844 	.word	0x20013844
 80185b8:	20013840 	.word	0x20013840

080185bc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 80185bc:	b510      	push	{r4, lr}
 80185be:	4b07      	ldr	r3, [pc, #28]	; (80185dc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 80185c0:	781b      	ldrb	r3, [r3, #0]
 80185c2:	2b01      	cmp	r3, #1
 80185c4:	d108      	bne.n	80185d8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 80185c6:	4b06      	ldr	r3, [pc, #24]	; (80185e0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 80185c8:	880c      	ldrh	r4, [r1, #0]
 80185ca:	881b      	ldrh	r3, [r3, #0]
 80185cc:	f9b0 2000 	ldrsh.w	r2, [r0]
 80185d0:	3b01      	subs	r3, #1
 80185d2:	1b1b      	subs	r3, r3, r4
 80185d4:	8003      	strh	r3, [r0, #0]
 80185d6:	800a      	strh	r2, [r1, #0]
 80185d8:	bd10      	pop	{r4, pc}
 80185da:	bf00      	nop
 80185dc:	20013844 	.word	0x20013844
 80185e0:	20013840 	.word	0x20013840

080185e4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 80185e4:	b510      	push	{r4, lr}
 80185e6:	4b0a      	ldr	r3, [pc, #40]	; (8018610 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 80185e8:	781b      	ldrb	r3, [r3, #0]
 80185ea:	2b01      	cmp	r3, #1
 80185ec:	d10e      	bne.n	801860c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 80185ee:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 80185f2:	8843      	ldrh	r3, [r0, #2]
 80185f4:	f9b0 4000 	ldrsh.w	r4, [r0]
 80185f8:	8044      	strh	r4, [r0, #2]
 80185fa:	18ca      	adds	r2, r1, r3
 80185fc:	4b05      	ldr	r3, [pc, #20]	; (8018614 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 80185fe:	881b      	ldrh	r3, [r3, #0]
 8018600:	1a9b      	subs	r3, r3, r2
 8018602:	8003      	strh	r3, [r0, #0]
 8018604:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8018608:	80c3      	strh	r3, [r0, #6]
 801860a:	8081      	strh	r1, [r0, #4]
 801860c:	bd10      	pop	{r4, pc}
 801860e:	bf00      	nop
 8018610:	20013844 	.word	0x20013844
 8018614:	20013840 	.word	0x20013840

08018618 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 8018618:	4b08      	ldr	r3, [pc, #32]	; (801863c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 801861a:	781b      	ldrb	r3, [r3, #0]
 801861c:	2b01      	cmp	r3, #1
 801861e:	d10c      	bne.n	801863a <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 8018620:	8803      	ldrh	r3, [r0, #0]
 8018622:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 8018626:	8842      	ldrh	r2, [r0, #2]
 8018628:	8002      	strh	r2, [r0, #0]
 801862a:	185a      	adds	r2, r3, r1
 801862c:	4b04      	ldr	r3, [pc, #16]	; (8018640 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 801862e:	881b      	ldrh	r3, [r3, #0]
 8018630:	1a9b      	subs	r3, r3, r2
 8018632:	8043      	strh	r3, [r0, #2]
 8018634:	88c3      	ldrh	r3, [r0, #6]
 8018636:	8083      	strh	r3, [r0, #4]
 8018638:	80c1      	strh	r1, [r0, #6]
 801863a:	4770      	bx	lr
 801863c:	20013844 	.word	0x20013844
 8018640:	20013840 	.word	0x20013840

08018644 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8018644:	b510      	push	{r4, lr}
 8018646:	4b07      	ldr	r3, [pc, #28]	; (8018664 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 8018648:	781b      	ldrb	r3, [r3, #0]
 801864a:	2b01      	cmp	r3, #1
 801864c:	d108      	bne.n	8018660 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 801864e:	f9b1 3000 	ldrsh.w	r3, [r1]
 8018652:	f9b0 4000 	ldrsh.w	r4, [r0]
 8018656:	8003      	strh	r3, [r0, #0]
 8018658:	8893      	ldrh	r3, [r2, #4]
 801865a:	3b01      	subs	r3, #1
 801865c:	1b1b      	subs	r3, r3, r4
 801865e:	800b      	strh	r3, [r1, #0]
 8018660:	bd10      	pop	{r4, pc}
 8018662:	bf00      	nop
 8018664:	20013844 	.word	0x20013844

08018668 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
 8018668:	4b0b      	ldr	r3, [pc, #44]	; (8018698 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
 801866a:	781b      	ldrb	r3, [r3, #0]
 801866c:	2b01      	cmp	r3, #1
 801866e:	d111      	bne.n	8018694 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
 8018670:	680b      	ldr	r3, [r1, #0]
 8018672:	ed90 7a00 	vldr	s14, [r0]
 8018676:	6003      	str	r3, [r0, #0]
 8018678:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 801867c:	eddf 6a07 	vldr	s13, [pc, #28]	; 801869c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
 8018680:	ee07 3a90 	vmov	s15, r3
 8018684:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018688:	ee77 7ae6 	vsub.f32	s15, s15, s13
 801868c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8018690:	edc1 7a00 	vstr	s15, [r1]
 8018694:	4770      	bx	lr
 8018696:	bf00      	nop
 8018698:	20013844 	.word	0x20013844
 801869c:	38d1b717 	.word	0x38d1b717

080186a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 80186a0:	b510      	push	{r4, lr}
 80186a2:	4b0a      	ldr	r3, [pc, #40]	; (80186cc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 80186a4:	781b      	ldrb	r3, [r3, #0]
 80186a6:	2b01      	cmp	r3, #1
 80186a8:	460a      	mov	r2, r1
 80186aa:	d10d      	bne.n	80186c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 80186ac:	8881      	ldrh	r1, [r0, #4]
 80186ae:	8803      	ldrh	r3, [r0, #0]
 80186b0:	440b      	add	r3, r1
 80186b2:	4601      	mov	r1, r0
 80186b4:	3b01      	subs	r3, #1
 80186b6:	f821 3b02 	strh.w	r3, [r1], #2
 80186ba:	f7ff ffc3 	bl	8018644 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 80186be:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80186c2:	88c2      	ldrh	r2, [r0, #6]
 80186c4:	8082      	strh	r2, [r0, #4]
 80186c6:	80c3      	strh	r3, [r0, #6]
 80186c8:	bd10      	pop	{r4, pc}
 80186ca:	bf00      	nop
 80186cc:	20013844 	.word	0x20013844

080186d0 <_ZN8touchgfx11Application13requestRedrawEv>:
 80186d0:	4b06      	ldr	r3, [pc, #24]	; (80186ec <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 80186d2:	f9b3 2000 	ldrsh.w	r2, [r3]
 80186d6:	4b06      	ldr	r3, [pc, #24]	; (80186f0 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 80186d8:	f8a0 2134 	strh.w	r2, [r0, #308]	; 0x134
 80186dc:	f9b3 3000 	ldrsh.w	r3, [r3]
 80186e0:	f8a0 3136 	strh.w	r3, [r0, #310]	; 0x136
 80186e4:	2100      	movs	r1, #0
 80186e6:	f8c0 1130 	str.w	r1, [r0, #304]	; 0x130
 80186ea:	4770      	bx	lr
 80186ec:	20013840 	.word	0x20013840
 80186f0:	20013842 	.word	0x20013842

080186f4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 80186f4:	4b03      	ldr	r3, [pc, #12]	; (8018704 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 80186f6:	6818      	ldr	r0, [r3, #0]
 80186f8:	b110      	cbz	r0, 8018700 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 80186fa:	6803      	ldr	r3, [r0, #0]
 80186fc:	699b      	ldr	r3, [r3, #24]
 80186fe:	4718      	bx	r3
 8018700:	4770      	bx	lr
 8018702:	bf00      	nop
 8018704:	20013890 	.word	0x20013890

08018708 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 8018708:	4770      	bx	lr
	...

0801870c <_ZN8touchgfx11Application4drawEv>:
 801870c:	b507      	push	{r0, r1, r2, lr}
 801870e:	4b09      	ldr	r3, [pc, #36]	; (8018734 <_ZN8touchgfx11Application4drawEv+0x28>)
 8018710:	f9b3 2000 	ldrsh.w	r2, [r3]
 8018714:	4b08      	ldr	r3, [pc, #32]	; (8018738 <_ZN8touchgfx11Application4drawEv+0x2c>)
 8018716:	f8ad 2004 	strh.w	r2, [sp, #4]
 801871a:	f9b3 3000 	ldrsh.w	r3, [r3]
 801871e:	f8ad 3006 	strh.w	r3, [sp, #6]
 8018722:	6803      	ldr	r3, [r0, #0]
 8018724:	2100      	movs	r1, #0
 8018726:	9100      	str	r1, [sp, #0]
 8018728:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801872a:	4669      	mov	r1, sp
 801872c:	4798      	blx	r3
 801872e:	b003      	add	sp, #12
 8018730:	f85d fb04 	ldr.w	pc, [sp], #4
 8018734:	20013840 	.word	0x20013840
 8018738:	20013842 	.word	0x20013842

0801873c <_ZN8touchgfx11Application10invalidateEv>:
 801873c:	4b09      	ldr	r3, [pc, #36]	; (8018764 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 801873e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8018742:	4b09      	ldr	r3, [pc, #36]	; (8018768 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 8018744:	b082      	sub	sp, #8
 8018746:	f9b3 3000 	ldrsh.w	r3, [r3]
 801874a:	f8ad 2004 	strh.w	r2, [sp, #4]
 801874e:	2100      	movs	r1, #0
 8018750:	f8ad 3006 	strh.w	r3, [sp, #6]
 8018754:	9100      	str	r1, [sp, #0]
 8018756:	6803      	ldr	r3, [r0, #0]
 8018758:	aa02      	add	r2, sp, #8
 801875a:	e912 0006 	ldmdb	r2, {r1, r2}
 801875e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8018760:	b002      	add	sp, #8
 8018762:	4718      	bx	r3
 8018764:	20013840 	.word	0x20013840
 8018768:	20013842 	.word	0x20013842

0801876c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 801876c:	4b03      	ldr	r3, [pc, #12]	; (801877c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 801876e:	6818      	ldr	r0, [r3, #0]
 8018770:	b110      	cbz	r0, 8018778 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 8018772:	6803      	ldr	r3, [r0, #0]
 8018774:	69db      	ldr	r3, [r3, #28]
 8018776:	4718      	bx	r3
 8018778:	4770      	bx	lr
 801877a:	bf00      	nop
 801877c:	20013890 	.word	0x20013890

08018780 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 8018780:	4b03      	ldr	r3, [pc, #12]	; (8018790 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 8018782:	6818      	ldr	r0, [r3, #0]
 8018784:	b110      	cbz	r0, 801878c <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 8018786:	6803      	ldr	r3, [r0, #0]
 8018788:	6a1b      	ldr	r3, [r3, #32]
 801878a:	4718      	bx	r3
 801878c:	4770      	bx	lr
 801878e:	bf00      	nop
 8018790:	20013890 	.word	0x20013890

08018794 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 8018794:	2300      	movs	r3, #0
 8018796:	f8a0 30ec 	strh.w	r3, [r0, #236]	; 0xec
 801879a:	4770      	bx	lr

0801879c <_ZN8touchgfx11Application14handleKeyEventEh>:
 801879c:	4b03      	ldr	r3, [pc, #12]	; (80187ac <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 801879e:	6818      	ldr	r0, [r3, #0]
 80187a0:	b110      	cbz	r0, 80187a8 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 80187a2:	6803      	ldr	r3, [r0, #0]
 80187a4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80187a6:	4718      	bx	r3
 80187a8:	4770      	bx	lr
 80187aa:	bf00      	nop
 80187ac:	20013890 	.word	0x20013890

080187b0 <_ZN8touchgfx11ApplicationD1Ev>:
 80187b0:	4770      	bx	lr

080187b2 <_ZN8touchgfx11ApplicationD0Ev>:
 80187b2:	b510      	push	{r4, lr}
 80187b4:	f44f 719e 	mov.w	r1, #316	; 0x13c
 80187b8:	4604      	mov	r4, r0
 80187ba:	f014 f996 	bl	802caea <_ZdlPvj>
 80187be:	4620      	mov	r0, r4
 80187c0:	bd10      	pop	{r4, pc}

080187c2 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 80187c2:	b510      	push	{r4, lr}
 80187c4:	f9b1 4000 	ldrsh.w	r4, [r1]
 80187c8:	888a      	ldrh	r2, [r1, #4]
 80187ca:	f9b0 3000 	ldrsh.w	r3, [r0]
 80187ce:	4422      	add	r2, r4
 80187d0:	b212      	sxth	r2, r2
 80187d2:	4293      	cmp	r3, r2
 80187d4:	da15      	bge.n	8018802 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 80187d6:	8882      	ldrh	r2, [r0, #4]
 80187d8:	4413      	add	r3, r2
 80187da:	b21b      	sxth	r3, r3
 80187dc:	429c      	cmp	r4, r3
 80187de:	da10      	bge.n	8018802 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 80187e0:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 80187e4:	88c9      	ldrh	r1, [r1, #6]
 80187e6:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 80187ea:	4419      	add	r1, r3
 80187ec:	b209      	sxth	r1, r1
 80187ee:	428a      	cmp	r2, r1
 80187f0:	da07      	bge.n	8018802 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 80187f2:	88c0      	ldrh	r0, [r0, #6]
 80187f4:	4410      	add	r0, r2
 80187f6:	b200      	sxth	r0, r0
 80187f8:	4283      	cmp	r3, r0
 80187fa:	bfac      	ite	ge
 80187fc:	2000      	movge	r0, #0
 80187fe:	2001      	movlt	r0, #1
 8018800:	bd10      	pop	{r4, pc}
 8018802:	2000      	movs	r0, #0
 8018804:	e7fc      	b.n	8018800 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

08018806 <_ZN8touchgfx4Rect10restrictToEss>:
 8018806:	f9b0 3000 	ldrsh.w	r3, [r0]
 801880a:	2b00      	cmp	r3, #0
 801880c:	b510      	push	{r4, lr}
 801880e:	da04      	bge.n	801881a <_ZN8touchgfx4Rect10restrictToEss+0x14>
 8018810:	8884      	ldrh	r4, [r0, #4]
 8018812:	4423      	add	r3, r4
 8018814:	8083      	strh	r3, [r0, #4]
 8018816:	2300      	movs	r3, #0
 8018818:	8003      	strh	r3, [r0, #0]
 801881a:	f9b0 4000 	ldrsh.w	r4, [r0]
 801881e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8018822:	1b09      	subs	r1, r1, r4
 8018824:	428b      	cmp	r3, r1
 8018826:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 801882a:	bfc8      	it	gt
 801882c:	8081      	strhgt	r1, [r0, #4]
 801882e:	2b00      	cmp	r3, #0
 8018830:	da04      	bge.n	801883c <_ZN8touchgfx4Rect10restrictToEss+0x36>
 8018832:	88c1      	ldrh	r1, [r0, #6]
 8018834:	440b      	add	r3, r1
 8018836:	80c3      	strh	r3, [r0, #6]
 8018838:	2300      	movs	r3, #0
 801883a:	8043      	strh	r3, [r0, #2]
 801883c:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8018840:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8018844:	1a52      	subs	r2, r2, r1
 8018846:	4293      	cmp	r3, r2
 8018848:	bfc8      	it	gt
 801884a:	80c2      	strhgt	r2, [r0, #6]
 801884c:	bd10      	pop	{r4, pc}
	...

08018850 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 8018850:	b510      	push	{r4, lr}
 8018852:	4b10      	ldr	r3, [pc, #64]	; (8018894 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 8018854:	f9b3 2000 	ldrsh.w	r2, [r3]
 8018858:	4b0f      	ldr	r3, [pc, #60]	; (8018898 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 801885a:	460c      	mov	r4, r1
 801885c:	4620      	mov	r0, r4
 801885e:	f9b3 1000 	ldrsh.w	r1, [r3]
 8018862:	f7ff ffd0 	bl	8018806 <_ZN8touchgfx4Rect10restrictToEss>
 8018866:	4b0d      	ldr	r3, [pc, #52]	; (801889c <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 8018868:	6818      	ldr	r0, [r3, #0]
 801886a:	b190      	cbz	r0, 8018892 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 801886c:	6803      	ldr	r3, [r0, #0]
 801886e:	4621      	mov	r1, r4
 8018870:	689b      	ldr	r3, [r3, #8]
 8018872:	4798      	blx	r3
 8018874:	4b0a      	ldr	r3, [pc, #40]	; (80188a0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 8018876:	6818      	ldr	r0, [r3, #0]
 8018878:	b118      	cbz	r0, 8018882 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 801887a:	6803      	ldr	r3, [r0, #0]
 801887c:	4621      	mov	r1, r4
 801887e:	689b      	ldr	r3, [r3, #8]
 8018880:	4798      	blx	r3
 8018882:	4b08      	ldr	r3, [pc, #32]	; (80188a4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 8018884:	6818      	ldr	r0, [r3, #0]
 8018886:	6803      	ldr	r3, [r0, #0]
 8018888:	4621      	mov	r1, r4
 801888a:	69db      	ldr	r3, [r3, #28]
 801888c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018890:	4718      	bx	r3
 8018892:	bd10      	pop	{r4, pc}
 8018894:	20013842 	.word	0x20013842
 8018898:	20013840 	.word	0x20013840
 801889c:	20013890 	.word	0x20013890
 80188a0:	2001388c 	.word	0x2001388c
 80188a4:	2001384c 	.word	0x2001384c

080188a8 <_ZNK8touchgfx4Rect8includesERKS0_>:
 80188a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80188aa:	4606      	mov	r6, r0
 80188ac:	4608      	mov	r0, r1
 80188ae:	460f      	mov	r7, r1
 80188b0:	f7fa f957 	bl	8012b62 <_ZNK8touchgfx4Rect7isEmptyEv>
 80188b4:	b9e8      	cbnz	r0, 80188f2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80188b6:	f9b7 5000 	ldrsh.w	r5, [r7]
 80188ba:	f9b6 4000 	ldrsh.w	r4, [r6]
 80188be:	42a5      	cmp	r5, r4
 80188c0:	db17      	blt.n	80188f2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80188c2:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 80188c6:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 80188ca:	429a      	cmp	r2, r3
 80188cc:	db11      	blt.n	80188f2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80188ce:	88b9      	ldrh	r1, [r7, #4]
 80188d0:	440d      	add	r5, r1
 80188d2:	88b1      	ldrh	r1, [r6, #4]
 80188d4:	440c      	add	r4, r1
 80188d6:	b22d      	sxth	r5, r5
 80188d8:	b224      	sxth	r4, r4
 80188da:	42a5      	cmp	r5, r4
 80188dc:	dc09      	bgt.n	80188f2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80188de:	88f8      	ldrh	r0, [r7, #6]
 80188e0:	4410      	add	r0, r2
 80188e2:	88f2      	ldrh	r2, [r6, #6]
 80188e4:	4413      	add	r3, r2
 80188e6:	b200      	sxth	r0, r0
 80188e8:	b21b      	sxth	r3, r3
 80188ea:	4298      	cmp	r0, r3
 80188ec:	bfcc      	ite	gt
 80188ee:	2000      	movgt	r0, #0
 80188f0:	2001      	movle	r0, #1
 80188f2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080188f4 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 80188f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80188f6:	4604      	mov	r4, r0
 80188f8:	4608      	mov	r0, r1
 80188fa:	460d      	mov	r5, r1
 80188fc:	f7fa f931 	bl	8012b62 <_ZNK8touchgfx4Rect7isEmptyEv>
 8018900:	b978      	cbnz	r0, 8018922 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 8018902:	4620      	mov	r0, r4
 8018904:	f7fa f92d 	bl	8012b62 <_ZNK8touchgfx4Rect7isEmptyEv>
 8018908:	f9b5 6000 	ldrsh.w	r6, [r5]
 801890c:	b150      	cbz	r0, 8018924 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 801890e:	8026      	strh	r6, [r4, #0]
 8018910:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8018914:	8063      	strh	r3, [r4, #2]
 8018916:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 801891a:	80a3      	strh	r3, [r4, #4]
 801891c:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8018920:	80e3      	strh	r3, [r4, #6]
 8018922:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8018924:	f9b4 1000 	ldrsh.w	r1, [r4]
 8018928:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801892c:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 8018930:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 8018934:	88ed      	ldrh	r5, [r5, #6]
 8018936:	42b1      	cmp	r1, r6
 8018938:	460f      	mov	r7, r1
 801893a:	bfa8      	it	ge
 801893c:	4637      	movge	r7, r6
 801893e:	4293      	cmp	r3, r2
 8018940:	4618      	mov	r0, r3
 8018942:	4466      	add	r6, ip
 8018944:	bfa8      	it	ge
 8018946:	4610      	movge	r0, r2
 8018948:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 801894c:	8027      	strh	r7, [r4, #0]
 801894e:	442a      	add	r2, r5
 8018950:	88e5      	ldrh	r5, [r4, #6]
 8018952:	8060      	strh	r0, [r4, #2]
 8018954:	4461      	add	r1, ip
 8018956:	442b      	add	r3, r5
 8018958:	b236      	sxth	r6, r6
 801895a:	b209      	sxth	r1, r1
 801895c:	b212      	sxth	r2, r2
 801895e:	b21b      	sxth	r3, r3
 8018960:	428e      	cmp	r6, r1
 8018962:	bfac      	ite	ge
 8018964:	ebc7 0106 	rsbge	r1, r7, r6
 8018968:	ebc7 0101 	rsblt	r1, r7, r1
 801896c:	429a      	cmp	r2, r3
 801896e:	bfac      	ite	ge
 8018970:	ebc0 0202 	rsbge	r2, r0, r2
 8018974:	ebc0 0203 	rsblt	r2, r0, r3
 8018978:	80a1      	strh	r1, [r4, #4]
 801897a:	80e2      	strh	r2, [r4, #6]
 801897c:	e7d1      	b.n	8018922 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

08018980 <_ZN8touchgfx11Application11getInstanceEv>:
 8018980:	4b01      	ldr	r3, [pc, #4]	; (8018988 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 8018982:	6818      	ldr	r0, [r3, #0]
 8018984:	4770      	bx	lr
 8018986:	bf00      	nop
 8018988:	200138a0 	.word	0x200138a0

0801898c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>:
 801898c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801898e:	4b10      	ldr	r3, [pc, #64]	; (80189d0 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x44>)
 8018990:	781b      	ldrb	r3, [r3, #0]
 8018992:	4605      	mov	r5, r0
 8018994:	b1d3      	cbz	r3, 80189cc <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x40>
 8018996:	4b0f      	ldr	r3, [pc, #60]	; (80189d4 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x48>)
 8018998:	4f0f      	ldr	r7, [pc, #60]	; (80189d8 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x4c>)
 801899a:	881c      	ldrh	r4, [r3, #0]
 801899c:	f100 06ee 	add.w	r6, r0, #238	; 0xee
 80189a0:	f8b5 312e 	ldrh.w	r3, [r5, #302]	; 0x12e
 80189a4:	42a3      	cmp	r3, r4
 80189a6:	d90e      	bls.n	80189c6 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x3a>
 80189a8:	683b      	ldr	r3, [r7, #0]
 80189aa:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80189ae:	b10a      	cbz	r2, 80189b4 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x28>
 80189b0:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80189b2:	b900      	cbnz	r0, 80189b6 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x2a>
 80189b4:	6898      	ldr	r0, [r3, #8]
 80189b6:	6803      	ldr	r3, [r0, #0]
 80189b8:	eb06 01c4 	add.w	r1, r6, r4, lsl #3
 80189bc:	69db      	ldr	r3, [r3, #28]
 80189be:	3401      	adds	r4, #1
 80189c0:	4798      	blx	r3
 80189c2:	b2a4      	uxth	r4, r4
 80189c4:	e7ec      	b.n	80189a0 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x14>
 80189c6:	2300      	movs	r3, #0
 80189c8:	f8a5 312e 	strh.w	r3, [r5, #302]	; 0x12e
 80189cc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80189ce:	bf00      	nop
 80189d0:	2001384a 	.word	0x2001384a
 80189d4:	2000008c 	.word	0x2000008c
 80189d8:	2001384c 	.word	0x2001384c

080189dc <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 80189dc:	b510      	push	{r4, lr}
 80189de:	2300      	movs	r3, #0
 80189e0:	f8a0 30a4 	strh.w	r3, [r0, #164]	; 0xa4
 80189e4:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 80189e8:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 80189ec:	4604      	mov	r4, r0
 80189ee:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 80189f2:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	; 0xa6
 80189f6:	429a      	cmp	r2, r3
 80189f8:	d90e      	bls.n	8018a18 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 80189fa:	18e2      	adds	r2, r4, r3
 80189fc:	f892 2084 	ldrb.w	r2, [r2, #132]	; 0x84
 8018a00:	b122      	cbz	r2, 8018a0c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 8018a02:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8018a06:	6803      	ldr	r3, [r0, #0]
 8018a08:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8018a0a:	4798      	blx	r3
 8018a0c:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8018a10:	3301      	adds	r3, #1
 8018a12:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8018a16:	e7ea      	b.n	80189ee <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 8018a18:	bd10      	pop	{r4, pc}

08018a1a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>:
 8018a1a:	b530      	push	{r4, r5, lr}
 8018a1c:	f8b0 5080 	ldrh.w	r5, [r0, #128]	; 0x80
 8018a20:	2200      	movs	r2, #0
 8018a22:	b293      	uxth	r3, r2
 8018a24:	429d      	cmp	r5, r3
 8018a26:	d90e      	bls.n	8018a46 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8018a28:	f850 3022 	ldr.w	r3, [r0, r2, lsl #2]
 8018a2c:	428b      	cmp	r3, r1
 8018a2e:	d10b      	bne.n	8018a48 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8018a30:	1884      	adds	r4, r0, r2
 8018a32:	f894 3084 	ldrb.w	r3, [r4, #132]	; 0x84
 8018a36:	b13b      	cbz	r3, 8018a48 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8018a38:	3b01      	subs	r3, #1
 8018a3a:	b2db      	uxtb	r3, r3
 8018a3c:	f884 3084 	strb.w	r3, [r4, #132]	; 0x84
 8018a40:	b90b      	cbnz	r3, 8018a46 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8018a42:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
 8018a46:	bd30      	pop	{r4, r5, pc}
 8018a48:	3201      	adds	r2, #1
 8018a4a:	e7ea      	b.n	8018a22 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x8>

08018a4c <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 8018a4c:	2300      	movs	r3, #0
 8018a4e:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8018a52:	f100 0284 	add.w	r2, r0, #132	; 0x84
 8018a56:	30a4      	adds	r0, #164	; 0xa4
 8018a58:	f802 3b01 	strb.w	r3, [r2], #1
 8018a5c:	4282      	cmp	r2, r0
 8018a5e:	d1fb      	bne.n	8018a58 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 8018a60:	4770      	bx	lr
	...

08018a64 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 8018a64:	b570      	push	{r4, r5, r6, lr}
 8018a66:	4c0b      	ldr	r4, [pc, #44]	; (8018a94 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 8018a68:	4605      	mov	r5, r0
 8018a6a:	6820      	ldr	r0, [r4, #0]
 8018a6c:	460e      	mov	r6, r1
 8018a6e:	b110      	cbz	r0, 8018a76 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 8018a70:	6803      	ldr	r3, [r0, #0]
 8018a72:	695b      	ldr	r3, [r3, #20]
 8018a74:	4798      	blx	r3
 8018a76:	1d28      	adds	r0, r5, #4
 8018a78:	f7ff ffe8 	bl	8018a4c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8018a7c:	6026      	str	r6, [r4, #0]
 8018a7e:	6833      	ldr	r3, [r6, #0]
 8018a80:	4630      	mov	r0, r6
 8018a82:	68db      	ldr	r3, [r3, #12]
 8018a84:	4798      	blx	r3
 8018a86:	682b      	ldr	r3, [r5, #0]
 8018a88:	4628      	mov	r0, r5
 8018a8a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8018a8c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8018a90:	4718      	bx	r3
 8018a92:	bf00      	nop
 8018a94:	20013890 	.word	0x20013890

08018a98 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 8018a98:	2300      	movs	r3, #0
 8018a9a:	f8b0 c080 	ldrh.w	ip, [r0, #128]	; 0x80
 8018a9e:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	; 0xa4
 8018aa2:	b5f0      	push	{r4, r5, r6, r7, lr}
 8018aa4:	461a      	mov	r2, r3
 8018aa6:	461c      	mov	r4, r3
 8018aa8:	461d      	mov	r5, r3
 8018aaa:	459c      	cmp	ip, r3
 8018aac:	dd1a      	ble.n	8018ae4 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 8018aae:	18c6      	adds	r6, r0, r3
 8018ab0:	f896 6084 	ldrb.w	r6, [r6, #132]	; 0x84
 8018ab4:	b16e      	cbz	r6, 8018ad2 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 8018ab6:	429a      	cmp	r2, r3
 8018ab8:	d008      	beq.n	8018acc <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 8018aba:	fa1f fe82 	uxth.w	lr, r2
 8018abe:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 8018ac2:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 8018ac6:	1887      	adds	r7, r0, r2
 8018ac8:	f887 6084 	strb.w	r6, [r7, #132]	; 0x84
 8018acc:	3201      	adds	r2, #1
 8018ace:	3301      	adds	r3, #1
 8018ad0:	e7eb      	b.n	8018aaa <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 8018ad2:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	; 0xa6
 8018ad6:	4299      	cmp	r1, r3
 8018ad8:	bfa8      	it	ge
 8018ada:	3501      	addge	r5, #1
 8018adc:	429e      	cmp	r6, r3
 8018ade:	bfc8      	it	gt
 8018ae0:	3401      	addgt	r4, #1
 8018ae2:	e7f4      	b.n	8018ace <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 8018ae4:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	; 0xa6
 8018ae8:	1b49      	subs	r1, r1, r5
 8018aea:	1b1b      	subs	r3, r3, r4
 8018aec:	f8a0 10a4 	strh.w	r1, [r0, #164]	; 0xa4
 8018af0:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8018af4:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8018af8:	4293      	cmp	r3, r2
 8018afa:	dd03      	ble.n	8018b04 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 8018afc:	3b01      	subs	r3, #1
 8018afe:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8018b02:	e7f7      	b.n	8018af4 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 8018b04:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08018b08 <_ZN8touchgfx11Application15handleTickEventEv>:
 8018b08:	b570      	push	{r4, r5, r6, lr}
 8018b0a:	4d16      	ldr	r5, [pc, #88]	; (8018b64 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 8018b0c:	4604      	mov	r4, r0
 8018b0e:	6828      	ldr	r0, [r5, #0]
 8018b10:	b140      	cbz	r0, 8018b24 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8018b12:	7a03      	ldrb	r3, [r0, #8]
 8018b14:	b933      	cbnz	r3, 8018b24 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8018b16:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 8018b1a:	6803      	ldr	r3, [r0, #0]
 8018b1c:	689b      	ldr	r3, [r3, #8]
 8018b1e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8018b22:	4718      	bx	r3
 8018b24:	f894 3138 	ldrb.w	r3, [r4, #312]	; 0x138
 8018b28:	4e0f      	ldr	r6, [pc, #60]	; (8018b68 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 8018b2a:	b973      	cbnz	r3, 8018b4a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8018b2c:	b168      	cbz	r0, 8018b4a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8018b2e:	7a03      	ldrb	r3, [r0, #8]
 8018b30:	b15b      	cbz	r3, 8018b4a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8018b32:	6830      	ldr	r0, [r6, #0]
 8018b34:	b110      	cbz	r0, 8018b3c <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 8018b36:	6803      	ldr	r3, [r0, #0]
 8018b38:	691b      	ldr	r3, [r3, #16]
 8018b3a:	4798      	blx	r3
 8018b3c:	6828      	ldr	r0, [r5, #0]
 8018b3e:	6803      	ldr	r3, [r0, #0]
 8018b40:	68db      	ldr	r3, [r3, #12]
 8018b42:	4798      	blx	r3
 8018b44:	2301      	movs	r3, #1
 8018b46:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 8018b4a:	3404      	adds	r4, #4
 8018b4c:	4620      	mov	r0, r4
 8018b4e:	f7ff ff45 	bl	80189dc <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 8018b52:	4620      	mov	r0, r4
 8018b54:	f7ff ffa0 	bl	8018a98 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8018b58:	6830      	ldr	r0, [r6, #0]
 8018b5a:	b110      	cbz	r0, 8018b62 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 8018b5c:	6803      	ldr	r3, [r0, #0]
 8018b5e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8018b60:	e7dd      	b.n	8018b1e <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 8018b62:	bd70      	pop	{r4, r5, r6, pc}
 8018b64:	20013894 	.word	0x20013894
 8018b68:	20013890 	.word	0x20013890

08018b6c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>:
 8018b6c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8018b6e:	2300      	movs	r3, #0
 8018b70:	4604      	mov	r4, r0
 8018b72:	460d      	mov	r5, r1
 8018b74:	f8b0 1080 	ldrh.w	r1, [r0, #128]	; 0x80
 8018b78:	4618      	mov	r0, r3
 8018b7a:	b29a      	uxth	r2, r3
 8018b7c:	4291      	cmp	r1, r2
 8018b7e:	d911      	bls.n	8018ba4 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x38>
 8018b80:	f854 7023 	ldr.w	r7, [r4, r3, lsl #2]
 8018b84:	18e6      	adds	r6, r4, r3
 8018b86:	42af      	cmp	r7, r5
 8018b88:	f896 2084 	ldrb.w	r2, [r6, #132]	; 0x84
 8018b8c:	d105      	bne.n	8018b9a <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2e>
 8018b8e:	2aff      	cmp	r2, #255	; 0xff
 8018b90:	d002      	beq.n	8018b98 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8018b92:	3201      	adds	r2, #1
 8018b94:	f886 2084 	strb.w	r2, [r6, #132]	; 0x84
 8018b98:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8018b9a:	2a00      	cmp	r2, #0
 8018b9c:	bf08      	it	eq
 8018b9e:	2001      	moveq	r0, #1
 8018ba0:	3301      	adds	r3, #1
 8018ba2:	e7ea      	b.n	8018b7a <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0xe>
 8018ba4:	b120      	cbz	r0, 8018bb0 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 8018ba6:	2920      	cmp	r1, #32
 8018ba8:	d102      	bne.n	8018bb0 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 8018baa:	4620      	mov	r0, r4
 8018bac:	f7ff ff74 	bl	8018a98 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8018bb0:	f8b4 3080 	ldrh.w	r3, [r4, #128]	; 0x80
 8018bb4:	2b1f      	cmp	r3, #31
 8018bb6:	d8ef      	bhi.n	8018b98 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8018bb8:	18e2      	adds	r2, r4, r3
 8018bba:	2101      	movs	r1, #1
 8018bbc:	f882 1084 	strb.w	r1, [r2, #132]	; 0x84
 8018bc0:	185a      	adds	r2, r3, r1
 8018bc2:	f8a4 2080 	strh.w	r2, [r4, #128]	; 0x80
 8018bc6:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 8018bca:	e7e5      	b.n	8018b98 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>

08018bcc <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 8018bcc:	4603      	mov	r3, r0
 8018bce:	f100 0140 	add.w	r1, r0, #64	; 0x40
 8018bd2:	2200      	movs	r2, #0
 8018bd4:	801a      	strh	r2, [r3, #0]
 8018bd6:	805a      	strh	r2, [r3, #2]
 8018bd8:	809a      	strh	r2, [r3, #4]
 8018bda:	80da      	strh	r2, [r3, #6]
 8018bdc:	3308      	adds	r3, #8
 8018bde:	428b      	cmp	r3, r1
 8018be0:	d1f8      	bne.n	8018bd4 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 8018be2:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 8018be6:	4770      	bx	lr

08018be8 <_ZN8touchgfx11ApplicationC1Ev>:
 8018be8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8018bea:	4606      	mov	r6, r0
 8018bec:	4b1c      	ldr	r3, [pc, #112]	; (8018c60 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 8018bee:	f846 3b04 	str.w	r3, [r6], #4
 8018bf2:	4604      	mov	r4, r0
 8018bf4:	2500      	movs	r5, #0
 8018bf6:	22a8      	movs	r2, #168	; 0xa8
 8018bf8:	2100      	movs	r1, #0
 8018bfa:	4630      	mov	r0, r6
 8018bfc:	f015 f861 	bl	802dcc2 <memset>
 8018c00:	f8a4 5084 	strh.w	r5, [r4, #132]	; 0x84
 8018c04:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8018c08:	f7ff ffe0 	bl	8018bcc <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8018c0c:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8018c10:	f7ff ffdc 	bl	8018bcc <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8018c14:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 8018c18:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 8018c1c:	f8a4 5134 	strh.w	r5, [r4, #308]	; 0x134
 8018c20:	f8a4 5136 	strh.w	r5, [r4, #310]	; 0x136
 8018c24:	f884 5138 	strb.w	r5, [r4, #312]	; 0x138
 8018c28:	490e      	ldr	r1, [pc, #56]	; (8018c64 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 8018c2a:	480f      	ldr	r0, [pc, #60]	; (8018c68 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 8018c2c:	4f0f      	ldr	r7, [pc, #60]	; (8018c6c <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 8018c2e:	f010 fe27 	bl	8029880 <CRC_Lock>
 8018c32:	4b0f      	ldr	r3, [pc, #60]	; (8018c70 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 8018c34:	b158      	cbz	r0, 8018c4e <_ZN8touchgfx11ApplicationC1Ev+0x66>
 8018c36:	801d      	strh	r5, [r3, #0]
 8018c38:	4a0e      	ldr	r2, [pc, #56]	; (8018c74 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 8018c3a:	2300      	movs	r3, #0
 8018c3c:	6013      	str	r3, [r2, #0]
 8018c3e:	4a0e      	ldr	r2, [pc, #56]	; (8018c78 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 8018c40:	603b      	str	r3, [r7, #0]
 8018c42:	4630      	mov	r0, r6
 8018c44:	6013      	str	r3, [r2, #0]
 8018c46:	f7ff ff01 	bl	8018a4c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8018c4a:	4620      	mov	r0, r4
 8018c4c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8018c4e:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8018c52:	2002      	movs	r0, #2
 8018c54:	801a      	strh	r2, [r3, #0]
 8018c56:	6038      	str	r0, [r7, #0]
 8018c58:	f001 fb4a 	bl	801a2f0 <_ZN8touchgfx6Screen4drawEv>
 8018c5c:	e7ec      	b.n	8018c38 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 8018c5e:	bf00      	nop
 8018c60:	08031ce4 	.word	0x08031ce4
 8018c64:	b5e8b5cd 	.word	0xb5e8b5cd
 8018c68:	f407a5c2 	.word	0xf407a5c2
 8018c6c:	20013890 	.word	0x20013890
 8018c70:	2000008c 	.word	0x2000008c
 8018c74:	200138a0 	.word	0x200138a0
 8018c78:	20013894 	.word	0x20013894

08018c7c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 8018c7c:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 8018c80:	3b01      	subs	r3, #1
 8018c82:	b29b      	uxth	r3, r3
 8018c84:	428b      	cmp	r3, r1
 8018c86:	b510      	push	{r4, lr}
 8018c88:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 8018c8c:	d908      	bls.n	8018ca0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 8018c8e:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8018c92:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 8018c96:	681a      	ldr	r2, [r3, #0]
 8018c98:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 8018c9c:	685a      	ldr	r2, [r3, #4]
 8018c9e:	6062      	str	r2, [r4, #4]
 8018ca0:	bd10      	pop	{r4, pc}
	...

08018ca4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 8018ca4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018ca8:	4b8f      	ldr	r3, [pc, #572]	; (8018ee8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 8018caa:	b08f      	sub	sp, #60	; 0x3c
 8018cac:	ac0a      	add	r4, sp, #40	; 0x28
 8018cae:	e884 0006 	stmia.w	r4, {r1, r2}
 8018cb2:	f9b3 2000 	ldrsh.w	r2, [r3]
 8018cb6:	4b8d      	ldr	r3, [pc, #564]	; (8018eec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 8018cb8:	4683      	mov	fp, r0
 8018cba:	f9b3 1000 	ldrsh.w	r1, [r3]
 8018cbe:	4620      	mov	r0, r4
 8018cc0:	f7ff fda1 	bl	8018806 <_ZN8touchgfx4Rect10restrictToEss>
 8018cc4:	4620      	mov	r0, r4
 8018cc6:	f7f9 ff4c 	bl	8012b62 <_ZNK8touchgfx4Rect7isEmptyEv>
 8018cca:	2800      	cmp	r0, #0
 8018ccc:	d16a      	bne.n	8018da4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8018cce:	9403      	str	r4, [sp, #12]
 8018cd0:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8018cd4:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 8018cd8:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 8018cdc:	35a4      	adds	r5, #164	; 0xa4
 8018cde:	9301      	str	r3, [sp, #4]
 8018ce0:	b15c      	cbz	r4, 8018cfa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 8018ce2:	4629      	mov	r1, r5
 8018ce4:	9803      	ldr	r0, [sp, #12]
 8018ce6:	f7ff fddf 	bl	80188a8 <_ZNK8touchgfx4Rect8includesERKS0_>
 8018cea:	3c01      	subs	r4, #1
 8018cec:	b118      	cbz	r0, 8018cf6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 8018cee:	b2a1      	uxth	r1, r4
 8018cf0:	9801      	ldr	r0, [sp, #4]
 8018cf2:	f7ff ffc3 	bl	8018c7c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8018cf6:	3d08      	subs	r5, #8
 8018cf8:	e7f2      	b.n	8018ce0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 8018cfa:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	; 0xec
 8018cfe:	f8cd a010 	str.w	sl, [sp, #16]
 8018d02:	f10a 33ff 	add.w	r3, sl, #4294967295
 8018d06:	9302      	str	r3, [sp, #8]
 8018d08:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 8018d0c:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
 8018d10:	9306      	str	r3, [sp, #24]
 8018d12:	445c      	add	r4, fp
 8018d14:	2500      	movs	r5, #0
 8018d16:	4626      	mov	r6, r4
 8018d18:	f8cd a014 	str.w	sl, [sp, #20]
 8018d1c:	462f      	mov	r7, r5
 8018d1e:	9b05      	ldr	r3, [sp, #20]
 8018d20:	2b00      	cmp	r3, #0
 8018d22:	d073      	beq.n	8018e0c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 8018d24:	9903      	ldr	r1, [sp, #12]
 8018d26:	4630      	mov	r0, r6
 8018d28:	f7ff fd4b 	bl	80187c2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8018d2c:	b350      	cbz	r0, 8018d84 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8018d2e:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 8018d32:	f9b6 c000 	ldrsh.w	ip, [r6]
 8018d36:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	; 0x2a
 8018d3a:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 8018d3e:	45e6      	cmp	lr, ip
 8018d40:	db33      	blt.n	8018daa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8018d42:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8018d46:	88b3      	ldrh	r3, [r6, #4]
 8018d48:	4472      	add	r2, lr
 8018d4a:	4463      	add	r3, ip
 8018d4c:	b212      	sxth	r2, r2
 8018d4e:	b21b      	sxth	r3, r3
 8018d50:	429a      	cmp	r2, r3
 8018d52:	dc2a      	bgt.n	8018daa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8018d54:	88f3      	ldrh	r3, [r6, #6]
 8018d56:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8018d5a:	fa1f f289 	uxth.w	r2, r9
 8018d5e:	4413      	add	r3, r2
 8018d60:	b29b      	uxth	r3, r3
 8018d62:	45c8      	cmp	r8, r9
 8018d64:	fa1f fc88 	uxth.w	ip, r8
 8018d68:	fa0f fe83 	sxth.w	lr, r3
 8018d6c:	db0f      	blt.n	8018d8e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 8018d6e:	eba3 030c 	sub.w	r3, r3, ip
 8018d72:	1ac9      	subs	r1, r1, r3
 8018d74:	b209      	sxth	r1, r1
 8018d76:	2900      	cmp	r1, #0
 8018d78:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8018d7c:	dd12      	ble.n	8018da4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8018d7e:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 8018d82:	4605      	mov	r5, r0
 8018d84:	9b05      	ldr	r3, [sp, #20]
 8018d86:	3b01      	subs	r3, #1
 8018d88:	9305      	str	r3, [sp, #20]
 8018d8a:	3e08      	subs	r6, #8
 8018d8c:	e7c7      	b.n	8018d1e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 8018d8e:	4461      	add	r1, ip
 8018d90:	b209      	sxth	r1, r1
 8018d92:	4571      	cmp	r1, lr
 8018d94:	dc38      	bgt.n	8018e08 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8018d96:	eba2 020c 	sub.w	r2, r2, ip
 8018d9a:	b212      	sxth	r2, r2
 8018d9c:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8018da0:	2a00      	cmp	r2, #0
 8018da2:	dcee      	bgt.n	8018d82 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8018da4:	b00f      	add	sp, #60	; 0x3c
 8018da6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018daa:	45c8      	cmp	r8, r9
 8018dac:	db2c      	blt.n	8018e08 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8018dae:	88f3      	ldrh	r3, [r6, #6]
 8018db0:	4499      	add	r9, r3
 8018db2:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 8018db6:	4498      	add	r8, r3
 8018db8:	fa0f f989 	sxth.w	r9, r9
 8018dbc:	fa0f f888 	sxth.w	r8, r8
 8018dc0:	45c1      	cmp	r9, r8
 8018dc2:	db21      	blt.n	8018e08 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8018dc4:	88b3      	ldrh	r3, [r6, #4]
 8018dc6:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8018dca:	fa1f f28c 	uxth.w	r2, ip
 8018dce:	4413      	add	r3, r2
 8018dd0:	b29b      	uxth	r3, r3
 8018dd2:	45e6      	cmp	lr, ip
 8018dd4:	fa1f f88e 	uxth.w	r8, lr
 8018dd8:	fa0f f983 	sxth.w	r9, r3
 8018ddc:	db0a      	blt.n	8018df4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 8018dde:	eba3 0308 	sub.w	r3, r3, r8
 8018de2:	1ac9      	subs	r1, r1, r3
 8018de4:	b209      	sxth	r1, r1
 8018de6:	2900      	cmp	r1, #0
 8018de8:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 8018dec:	ddda      	ble.n	8018da4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8018dee:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8018df2:	e7c6      	b.n	8018d82 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8018df4:	4441      	add	r1, r8
 8018df6:	b209      	sxth	r1, r1
 8018df8:	4549      	cmp	r1, r9
 8018dfa:	dc05      	bgt.n	8018e08 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8018dfc:	eba2 0208 	sub.w	r2, r2, r8
 8018e00:	b212      	sxth	r2, r2
 8018e02:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 8018e06:	e7cb      	b.n	8018da0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 8018e08:	4607      	mov	r7, r0
 8018e0a:	e7bb      	b.n	8018d84 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8018e0c:	2d00      	cmp	r5, #0
 8018e0e:	d181      	bne.n	8018d14 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 8018e10:	2f00      	cmp	r7, #0
 8018e12:	f000 81dd 	beq.w	80191d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8018e16:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 8018e1a:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 8018e1e:	f8bd a02e 	ldrh.w	sl, [sp, #46]	; 0x2e
 8018e22:	b2b3      	uxth	r3, r6
 8018e24:	9305      	str	r3, [sp, #20]
 8018e26:	9a05      	ldr	r2, [sp, #20]
 8018e28:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8018e2c:	4413      	add	r3, r2
 8018e2e:	b2ba      	uxth	r2, r7
 8018e30:	4492      	add	sl, r2
 8018e32:	b29b      	uxth	r3, r3
 8018e34:	fa1f fa8a 	uxth.w	sl, sl
 8018e38:	fa0f f883 	sxth.w	r8, r3
 8018e3c:	fa0f f98a 	sxth.w	r9, sl
 8018e40:	e9cd 2307 	strd	r2, r3, [sp, #28]
 8018e44:	9b04      	ldr	r3, [sp, #16]
 8018e46:	2b00      	cmp	r3, #0
 8018e48:	d052      	beq.n	8018ef0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 8018e4a:	9903      	ldr	r1, [sp, #12]
 8018e4c:	4620      	mov	r0, r4
 8018e4e:	f7ff fcb8 	bl	80187c2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8018e52:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 8018e56:	b1c0      	cbz	r0, 8018e8a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8018e58:	f9b4 e000 	ldrsh.w	lr, [r4]
 8018e5c:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8018e60:	4576      	cmp	r6, lr
 8018e62:	dc22      	bgt.n	8018eaa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8018e64:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8018e68:	44f4      	add	ip, lr
 8018e6a:	fa0f fc8c 	sxth.w	ip, ip
 8018e6e:	45e0      	cmp	r8, ip
 8018e70:	db1b      	blt.n	8018eaa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8018e72:	428f      	cmp	r7, r1
 8018e74:	fa1f fc81 	uxth.w	ip, r1
 8018e78:	88e1      	ldrh	r1, [r4, #6]
 8018e7a:	dc0d      	bgt.n	8018e98 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 8018e7c:	ebaa 0c0c 	sub.w	ip, sl, ip
 8018e80:	eba1 010c 	sub.w	r1, r1, ip
 8018e84:	f8a4 9002 	strh.w	r9, [r4, #2]
 8018e88:	80e1      	strh	r1, [r4, #6]
 8018e8a:	4628      	mov	r0, r5
 8018e8c:	9904      	ldr	r1, [sp, #16]
 8018e8e:	3901      	subs	r1, #1
 8018e90:	9104      	str	r1, [sp, #16]
 8018e92:	3c08      	subs	r4, #8
 8018e94:	4605      	mov	r5, r0
 8018e96:	e7d3      	b.n	8018e40 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 8018e98:	4461      	add	r1, ip
 8018e9a:	b209      	sxth	r1, r1
 8018e9c:	4549      	cmp	r1, r9
 8018e9e:	dcf5      	bgt.n	8018e8c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8018ea0:	eba2 0c0c 	sub.w	ip, r2, ip
 8018ea4:	f8a4 c006 	strh.w	ip, [r4, #6]
 8018ea8:	e7ef      	b.n	8018e8a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8018eaa:	428f      	cmp	r7, r1
 8018eac:	dcee      	bgt.n	8018e8c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8018eae:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 8018eb2:	4461      	add	r1, ip
 8018eb4:	b209      	sxth	r1, r1
 8018eb6:	4589      	cmp	r9, r1
 8018eb8:	dbe8      	blt.n	8018e8c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8018eba:	4576      	cmp	r6, lr
 8018ebc:	fa1f fc8e 	uxth.w	ip, lr
 8018ec0:	88a1      	ldrh	r1, [r4, #4]
 8018ec2:	dc07      	bgt.n	8018ed4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 8018ec4:	eba3 0c0c 	sub.w	ip, r3, ip
 8018ec8:	eba1 010c 	sub.w	r1, r1, ip
 8018ecc:	f8a4 8000 	strh.w	r8, [r4]
 8018ed0:	80a1      	strh	r1, [r4, #4]
 8018ed2:	e7da      	b.n	8018e8a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8018ed4:	4461      	add	r1, ip
 8018ed6:	b209      	sxth	r1, r1
 8018ed8:	4588      	cmp	r8, r1
 8018eda:	dbd7      	blt.n	8018e8c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8018edc:	9905      	ldr	r1, [sp, #20]
 8018ede:	eba1 0c0c 	sub.w	ip, r1, ip
 8018ee2:	f8a4 c004 	strh.w	ip, [r4, #4]
 8018ee6:	e7d0      	b.n	8018e8a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8018ee8:	20013842 	.word	0x20013842
 8018eec:	20013840 	.word	0x20013840
 8018ef0:	2d00      	cmp	r5, #0
 8018ef2:	f000 816d 	beq.w	80191d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8018ef6:	9b06      	ldr	r3, [sp, #24]
 8018ef8:	445b      	add	r3, fp
 8018efa:	461c      	mov	r4, r3
 8018efc:	9b02      	ldr	r3, [sp, #8]
 8018efe:	3301      	adds	r3, #1
 8018f00:	f000 8166 	beq.w	80191d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8018f04:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
 8018f08:	4629      	mov	r1, r5
 8018f0a:	9803      	ldr	r0, [sp, #12]
 8018f0c:	f7ff fccc 	bl	80188a8 <_ZNK8touchgfx4Rect8includesERKS0_>
 8018f10:	b120      	cbz	r0, 8018f1c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 8018f12:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8018f16:	9801      	ldr	r0, [sp, #4]
 8018f18:	f7ff feb0 	bl	8018c7c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8018f1c:	9903      	ldr	r1, [sp, #12]
 8018f1e:	4628      	mov	r0, r5
 8018f20:	f7ff fc4f 	bl	80187c2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8018f24:	2800      	cmp	r0, #0
 8018f26:	f000 809c 	beq.w	8019062 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8018f2a:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	; 0xa4
 8018f2e:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8018f32:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8018f36:	9309      	str	r3, [sp, #36]	; 0x24
 8018f38:	fa1f f189 	uxth.w	r1, r9
 8018f3c:	eb01 0c03 	add.w	ip, r1, r3
 8018f40:	fa1f fa8c 	uxth.w	sl, ip
 8018f44:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 8018f48:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 8018f4c:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	; 0xa6
 8018f50:	b283      	uxth	r3, r0
 8018f52:	eb03 050c 	add.w	r5, r3, ip
 8018f56:	b2ad      	uxth	r5, r5
 8018f58:	9505      	str	r5, [sp, #20]
 8018f5a:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 8018f5e:	9504      	str	r5, [sp, #16]
 8018f60:	4548      	cmp	r0, r9
 8018f62:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	; 0xec
 8018f66:	f340 8099 	ble.w	801909c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 8018f6a:	1a5b      	subs	r3, r3, r1
 8018f6c:	b29b      	uxth	r3, r3
 8018f6e:	4596      	cmp	lr, r2
 8018f70:	fa0f f08a 	sxth.w	r0, sl
 8018f74:	b21e      	sxth	r6, r3
 8018f76:	dd2e      	ble.n	8018fd6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 8018f78:	9f02      	ldr	r7, [sp, #8]
 8018f7a:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 8018f7e:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 8018f82:	9f04      	ldr	r7, [sp, #16]
 8018f84:	1a3f      	subs	r7, r7, r0
 8018f86:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	; 0xb2
 8018f8a:	fa1f fe8e 	uxth.w	lr, lr
 8018f8e:	b292      	uxth	r2, r2
 8018f90:	ebae 0102 	sub.w	r1, lr, r2
 8018f94:	44a6      	add	lr, r4
 8018f96:	4402      	add	r2, r0
 8018f98:	b289      	uxth	r1, r1
 8018f9a:	fa0f fe8e 	sxth.w	lr, lr
 8018f9e:	b212      	sxth	r2, r2
 8018fa0:	b20d      	sxth	r5, r1
 8018fa2:	ebae 0202 	sub.w	r2, lr, r2
 8018fa6:	436f      	muls	r7, r5
 8018fa8:	4372      	muls	r2, r6
 8018faa:	4297      	cmp	r7, r2
 8018fac:	db09      	blt.n	8018fc2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 8018fae:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	; 0xac
 8018fb2:	f8a8 50b2 	strh.w	r5, [r8, #178]	; 0xb2
 8018fb6:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8018fba:	449c      	add	ip, r3
 8018fbc:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8018fc0:	e686      	b.n	8018cd0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8018fc2:	4421      	add	r1, r4
 8018fc4:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
 8018fc8:	f8a8 60b0 	strh.w	r6, [r8, #176]	; 0xb0
 8018fcc:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8018fd0:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8018fd4:	e67c      	b.n	8018cd0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8018fd6:	9f04      	ldr	r7, [sp, #16]
 8018fd8:	42b8      	cmp	r0, r7
 8018fda:	da27      	bge.n	801902c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 8018fdc:	9902      	ldr	r1, [sp, #8]
 8018fde:	f8bd 502e 	ldrh.w	r5, [sp, #46]	; 0x2e
 8018fe2:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 8018fe6:	eb05 010e 	add.w	r1, r5, lr
 8018fea:	fa1f f881 	uxth.w	r8, r1
 8018fee:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	; 0xb2
 8018ff2:	4411      	add	r1, r2
 8018ff4:	eba1 0108 	sub.w	r1, r1, r8
 8018ff8:	b289      	uxth	r1, r1
 8018ffa:	fa0f f988 	sxth.w	r9, r8
 8018ffe:	eba2 020e 	sub.w	r2, r2, lr
 8019002:	fa0f f881 	sxth.w	r8, r1
 8019006:	1a3f      	subs	r7, r7, r0
 8019008:	4372      	muls	r2, r6
 801900a:	fb08 f707 	mul.w	r7, r8, r7
 801900e:	42ba      	cmp	r2, r7
 8019010:	dc06      	bgt.n	8019020 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 8019012:	f8a4 90ae 	strh.w	r9, [r4, #174]	; 0xae
 8019016:	f8a4 80b2 	strh.w	r8, [r4, #178]	; 0xb2
 801901a:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	; 0xac
 801901e:	e7ca      	b.n	8018fb6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 8019020:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
 8019024:	4429      	add	r1, r5
 8019026:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 801902a:	e651      	b.n	8018cd0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801902c:	9805      	ldr	r0, [sp, #20]
 801902e:	ebaa 0000 	sub.w	r0, sl, r0
 8019032:	b280      	uxth	r0, r0
 8019034:	2d06      	cmp	r5, #6
 8019036:	fa0f fe80 	sxth.w	lr, r0
 801903a:	d817      	bhi.n	801906c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 801903c:	9b04      	ldr	r3, [sp, #16]
 801903e:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8019042:	1c6b      	adds	r3, r5, #1
 8019044:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	; 0xaa
 8019048:	f8a4 e0a8 	strh.w	lr, [r4, #168]	; 0xa8
 801904c:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 8019050:	9b01      	ldr	r3, [sp, #4]
 8019052:	9801      	ldr	r0, [sp, #4]
 8019054:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8019058:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 801905c:	805a      	strh	r2, [r3, #2]
 801905e:	809e      	strh	r6, [r3, #4]
 8019060:	80d9      	strh	r1, [r3, #6]
 8019062:	9b02      	ldr	r3, [sp, #8]
 8019064:	3b01      	subs	r3, #1
 8019066:	9302      	str	r3, [sp, #8]
 8019068:	3c08      	subs	r4, #8
 801906a:	e747      	b.n	8018efc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 801906c:	9a02      	ldr	r2, [sp, #8]
 801906e:	45b6      	cmp	lr, r6
 8019070:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8019074:	db0d      	blt.n	8019092 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 8019076:	449c      	add	ip, r3
 8019078:	fa1f fc8c 	uxth.w	ip, ip
 801907c:	445a      	add	r2, fp
 801907e:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8019082:	448c      	add	ip, r1
 8019084:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8019088:	f8a2 c0ac 	strh.w	ip, [r2, #172]	; 0xac
 801908c:	f8a2 e0b0 	strh.w	lr, [r2, #176]	; 0xb0
 8019090:	e61e      	b.n	8018cd0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8019092:	445a      	add	r2, fp
 8019094:	4484      	add	ip, r0
 8019096:	f8a2 60b0 	strh.w	r6, [r2, #176]	; 0xb0
 801909a:	e78f      	b.n	8018fbc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 801909c:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 80190a0:	fa1f f18e 	uxth.w	r1, lr
 80190a4:	eb01 0806 	add.w	r8, r1, r6
 80190a8:	b293      	uxth	r3, r2
 80190aa:	fa1f f888 	uxth.w	r8, r8
 80190ae:	9306      	str	r3, [sp, #24]
 80190b0:	fa0f f388 	sxth.w	r3, r8
 80190b4:	9307      	str	r3, [sp, #28]
 80190b6:	9f06      	ldr	r7, [sp, #24]
 80190b8:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 80190bc:	443b      	add	r3, r7
 80190be:	b29b      	uxth	r3, r3
 80190c0:	4596      	cmp	lr, r2
 80190c2:	9308      	str	r3, [sp, #32]
 80190c4:	da24      	bge.n	8019110 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 80190c6:	9905      	ldr	r1, [sp, #20]
 80190c8:	eba3 0308 	sub.w	r3, r3, r8
 80190cc:	ebaa 0401 	sub.w	r4, sl, r1
 80190d0:	b2a4      	uxth	r4, r4
 80190d2:	b29b      	uxth	r3, r3
 80190d4:	b225      	sxth	r5, r4
 80190d6:	b219      	sxth	r1, r3
 80190d8:	eba2 020e 	sub.w	r2, r2, lr
 80190dc:	eba9 0000 	sub.w	r0, r9, r0
 80190e0:	436a      	muls	r2, r5
 80190e2:	4348      	muls	r0, r1
 80190e4:	4282      	cmp	r2, r0
 80190e6:	9a02      	ldr	r2, [sp, #8]
 80190e8:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80190ec:	445a      	add	r2, fp
 80190ee:	dc06      	bgt.n	80190fe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 80190f0:	9b07      	ldr	r3, [sp, #28]
 80190f2:	f8a2 10b2 	strh.w	r1, [r2, #178]	; 0xb2
 80190f6:	f8a2 30ae 	strh.w	r3, [r2, #174]	; 0xae
 80190fa:	44a4      	add	ip, r4
 80190fc:	e75e      	b.n	8018fbc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 80190fe:	9904      	ldr	r1, [sp, #16]
 8019100:	f8a2 50b0 	strh.w	r5, [r2, #176]	; 0xb0
 8019104:	f8a2 10ac 	strh.w	r1, [r2, #172]	; 0xac
 8019108:	4433      	add	r3, r6
 801910a:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 801910e:	e5df      	b.n	8018cd0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8019110:	9f06      	ldr	r7, [sp, #24]
 8019112:	9b04      	ldr	r3, [sp, #16]
 8019114:	1bc9      	subs	r1, r1, r7
 8019116:	fa0f f78a 	sxth.w	r7, sl
 801911a:	b289      	uxth	r1, r1
 801911c:	429f      	cmp	r7, r3
 801911e:	fa0f fe81 	sxth.w	lr, r1
 8019122:	dd23      	ble.n	801916c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 8019124:	9a05      	ldr	r2, [sp, #20]
 8019126:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 801912a:	9d07      	ldr	r5, [sp, #28]
 801912c:	ebaa 0202 	sub.w	r2, sl, r2
 8019130:	b292      	uxth	r2, r2
 8019132:	eba5 0a03 	sub.w	sl, r5, r3
 8019136:	b214      	sxth	r4, r2
 8019138:	eba9 0000 	sub.w	r0, r9, r0
 801913c:	9b02      	ldr	r3, [sp, #8]
 801913e:	fb0e f000 	mul.w	r0, lr, r0
 8019142:	fb04 fa0a 	mul.w	sl, r4, sl
 8019146:	00db      	lsls	r3, r3, #3
 8019148:	4550      	cmp	r0, sl
 801914a:	445b      	add	r3, fp
 801914c:	db03      	blt.n	8019156 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 801914e:	f8a3 e0b2 	strh.w	lr, [r3, #178]	; 0xb2
 8019152:	4494      	add	ip, r2
 8019154:	e732      	b.n	8018fbc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8019156:	9a04      	ldr	r2, [sp, #16]
 8019158:	f8a3 20ac 	strh.w	r2, [r3, #172]	; 0xac
 801915c:	f8a3 40b0 	strh.w	r4, [r3, #176]	; 0xb0
 8019160:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	; 0xae
 8019164:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8019168:	4431      	add	r1, r6
 801916a:	e75c      	b.n	8019026 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 801916c:	9b08      	ldr	r3, [sp, #32]
 801916e:	eba3 0308 	sub.w	r3, r3, r8
 8019172:	b29b      	uxth	r3, r3
 8019174:	2d06      	cmp	r5, #6
 8019176:	b218      	sxth	r0, r3
 8019178:	d813      	bhi.n	80191a2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 801917a:	9b07      	ldr	r3, [sp, #28]
 801917c:	f8a4 30a6 	strh.w	r3, [r4, #166]	; 0xa6
 8019180:	1c6b      	adds	r3, r5, #1
 8019182:	f8a4 00aa 	strh.w	r0, [r4, #170]	; 0xaa
 8019186:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 801918a:	9b01      	ldr	r3, [sp, #4]
 801918c:	9901      	ldr	r1, [sp, #4]
 801918e:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8019192:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 8019196:	805a      	strh	r2, [r3, #2]
 8019198:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801919a:	809a      	strh	r2, [r3, #4]
 801919c:	f8a3 e006 	strh.w	lr, [r3, #6]
 80191a0:	e75f      	b.n	8019062 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 80191a2:	9c02      	ldr	r4, [sp, #8]
 80191a4:	4570      	cmp	r0, lr
 80191a6:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 80191aa:	db0d      	blt.n	80191c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 80191ac:	4431      	add	r1, r6
 80191ae:	9b06      	ldr	r3, [sp, #24]
 80191b0:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 80191b4:	b289      	uxth	r1, r1
 80191b6:	445c      	add	r4, fp
 80191b8:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80191bc:	4419      	add	r1, r3
 80191be:	f8a4 10ae 	strh.w	r1, [r4, #174]	; 0xae
 80191c2:	f8a4 00b2 	strh.w	r0, [r4, #178]	; 0xb2
 80191c6:	e583      	b.n	8018cd0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80191c8:	445c      	add	r4, fp
 80191ca:	f8a4 e0b2 	strh.w	lr, [r4, #178]	; 0xb2
 80191ce:	e79b      	b.n	8019108 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 80191d0:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 80191d4:	1e65      	subs	r5, r4, #1
 80191d6:	b2ad      	uxth	r5, r5
 80191d8:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 80191dc:	f64f 76ff 	movw	r6, #65535	; 0xffff
 80191e0:	42b5      	cmp	r5, r6
 80191e2:	d044      	beq.n	801926e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 80191e4:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 80191e8:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	; 0xa6
 80191ec:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 80191f0:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	; 0xa4
 80191f4:	4282      	cmp	r2, r0
 80191f6:	d11f      	bne.n	8019238 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 80191f8:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
 80191fc:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8019200:	459c      	cmp	ip, r3
 8019202:	d119      	bne.n	8019238 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8019204:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	; 0xa8
 8019208:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 801920c:	19d8      	adds	r0, r3, r7
 801920e:	b200      	sxth	r0, r0
 8019210:	4288      	cmp	r0, r1
 8019212:	d109      	bne.n	8019228 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 8019214:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 8019218:	4413      	add	r3, r2
 801921a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 801921e:	4629      	mov	r1, r5
 8019220:	9801      	ldr	r0, [sp, #4]
 8019222:	f7ff fd2b 	bl	8018c7c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8019226:	e003      	b.n	8019230 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8019228:	4411      	add	r1, r2
 801922a:	b209      	sxth	r1, r1
 801922c:	42b9      	cmp	r1, r7
 801922e:	d0f3      	beq.n	8019218 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 8019230:	3d01      	subs	r5, #1
 8019232:	b2ad      	uxth	r5, r5
 8019234:	3c08      	subs	r4, #8
 8019236:	e7d3      	b.n	80191e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 8019238:	42b9      	cmp	r1, r7
 801923a:	d1f9      	bne.n	8019230 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 801923c:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	; 0x2c
 8019240:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8019244:	4299      	cmp	r1, r3
 8019246:	d1f3      	bne.n	8019230 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8019248:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 801924c:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8019250:	181f      	adds	r7, r3, r0
 8019252:	b23f      	sxth	r7, r7
 8019254:	42ba      	cmp	r2, r7
 8019256:	d105      	bne.n	8019264 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 8019258:	f8ad 002a 	strh.w	r0, [sp, #42]	; 0x2a
 801925c:	440b      	add	r3, r1
 801925e:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8019262:	e7dc      	b.n	801921e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 8019264:	440a      	add	r2, r1
 8019266:	b212      	sxth	r2, r2
 8019268:	4290      	cmp	r0, r2
 801926a:	d1e1      	bne.n	8019230 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 801926c:	e7f6      	b.n	801925c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 801926e:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	; 0xec
 8019272:	2e07      	cmp	r6, #7
 8019274:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 8019278:	d812      	bhi.n	80192a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 801927a:	1c75      	adds	r5, r6, #1
 801927c:	f8ab 50ec 	strh.w	r5, [fp, #236]	; 0xec
 8019280:	9d01      	ldr	r5, [sp, #4]
 8019282:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8019286:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 801928a:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 801928e:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 8019292:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 8019296:	442c      	add	r4, r5
 8019298:	8061      	strh	r1, [r4, #2]
 801929a:	80a2      	strh	r2, [r4, #4]
 801929c:	80e3      	strh	r3, [r4, #6]
 801929e:	e581      	b.n	8018da4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80192a0:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 80192a4:	3e01      	subs	r6, #1
 80192a6:	445c      	add	r4, fp
 80192a8:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 80192ac:	f04f 37ff 	mov.w	r7, #4294967295
 80192b0:	2500      	movs	r5, #0
 80192b2:	9305      	str	r3, [sp, #20]
 80192b4:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 80192b8:	9302      	str	r3, [sp, #8]
 80192ba:	1e72      	subs	r2, r6, #1
 80192bc:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 80192c0:	9304      	str	r3, [sp, #16]
 80192c2:	4691      	mov	r9, r2
 80192c4:	f104 03a4 	add.w	r3, r4, #164	; 0xa4
 80192c8:	f1b9 3fff 	cmp.w	r9, #4294967295
 80192cc:	bf14      	ite	ne
 80192ce:	9905      	ldrne	r1, [sp, #20]
 80192d0:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 80192d4:	6818      	ldr	r0, [r3, #0]
 80192d6:	9207      	str	r2, [sp, #28]
 80192d8:	bf18      	it	ne
 80192da:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 80192de:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 80192e2:	f8be 1006 	ldrh.w	r1, [lr, #6]
 80192e6:	f8be 8004 	ldrh.w	r8, [lr, #4]
 80192ea:	9306      	str	r3, [sp, #24]
 80192ec:	fb18 f801 	smulbb	r8, r8, r1
 80192f0:	6859      	ldr	r1, [r3, #4]
 80192f2:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 80192f6:	4671      	mov	r1, lr
 80192f8:	a80c      	add	r0, sp, #48	; 0x30
 80192fa:	f7ff fafb 	bl	80188f4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 80192fe:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 8019302:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 8019306:	9b04      	ldr	r3, [sp, #16]
 8019308:	9a02      	ldr	r2, [sp, #8]
 801930a:	fb10 f001 	smulbb	r0, r0, r1
 801930e:	fb02 8803 	mla	r8, r2, r3, r8
 8019312:	eba0 0108 	sub.w	r1, r0, r8
 8019316:	f04f 0c08 	mov.w	ip, #8
 801931a:	fb90 f0fc 	sdiv	r0, r0, ip
 801931e:	4288      	cmp	r0, r1
 8019320:	dc20      	bgt.n	8019364 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 8019322:	4551      	cmp	r1, sl
 8019324:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8019328:	da03      	bge.n	8019332 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68e>
 801932a:	b1d9      	cbz	r1, 8019364 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 801932c:	468a      	mov	sl, r1
 801932e:	464f      	mov	r7, r9
 8019330:	4635      	mov	r5, r6
 8019332:	f109 39ff 	add.w	r9, r9, #4294967295
 8019336:	f119 0f02 	cmn.w	r9, #2
 801933a:	d1c5      	bne.n	80192c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 801933c:	4616      	mov	r6, r2
 801933e:	3201      	adds	r2, #1
 8019340:	f1a4 0408 	sub.w	r4, r4, #8
 8019344:	d1b6      	bne.n	80192b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 8019346:	9b01      	ldr	r3, [sp, #4]
 8019348:	b2ac      	uxth	r4, r5
 801934a:	00ed      	lsls	r5, r5, #3
 801934c:	1958      	adds	r0, r3, r5
 801934e:	1c7b      	adds	r3, r7, #1
 8019350:	d10b      	bne.n	801936a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>
 8019352:	4601      	mov	r1, r0
 8019354:	9803      	ldr	r0, [sp, #12]
 8019356:	f7ff facd 	bl	80188f4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801935a:	4621      	mov	r1, r4
 801935c:	9801      	ldr	r0, [sp, #4]
 801935e:	f7ff fc8d 	bl	8018c7c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8019362:	e4b5      	b.n	8018cd0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8019364:	464f      	mov	r7, r9
 8019366:	4635      	mov	r5, r6
 8019368:	e7ed      	b.n	8019346 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a2>
 801936a:	9b01      	ldr	r3, [sp, #4]
 801936c:	00ff      	lsls	r7, r7, #3
 801936e:	19d9      	adds	r1, r3, r7
 8019370:	f7ff fac0 	bl	80188f4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8019374:	9b03      	ldr	r3, [sp, #12]
 8019376:	cb03      	ldmia	r3!, {r0, r1}
 8019378:	445f      	add	r7, fp
 801937a:	445d      	add	r5, fp
 801937c:	f8c7 00ac 	str.w	r0, [r7, #172]	; 0xac
 8019380:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
 8019384:	f855 0fac 	ldr.w	r0, [r5, #172]!
 8019388:	9b03      	ldr	r3, [sp, #12]
 801938a:	6869      	ldr	r1, [r5, #4]
 801938c:	c303      	stmia	r3!, {r0, r1}
 801938e:	e7e4      	b.n	801935a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b6>

08019390 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 8019390:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019394:	f500 7698 	add.w	r6, r0, #304	; 0x130
 8019398:	b09b      	sub	sp, #108	; 0x6c
 801939a:	4604      	mov	r4, r0
 801939c:	4630      	mov	r0, r6
 801939e:	f7f9 fbe0 	bl	8012b62 <_ZNK8touchgfx4Rect7isEmptyEv>
 80193a2:	4605      	mov	r5, r0
 80193a4:	b948      	cbnz	r0, 80193ba <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 80193a6:	6823      	ldr	r3, [r4, #0]
 80193a8:	e896 0006 	ldmia.w	r6, {r1, r2}
 80193ac:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80193ae:	4620      	mov	r0, r4
 80193b0:	4798      	blx	r3
 80193b2:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 80193b6:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 80193ba:	4bc6      	ldr	r3, [pc, #792]	; (80196d4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 80193bc:	681b      	ldr	r3, [r3, #0]
 80193be:	2b00      	cmp	r3, #0
 80193c0:	d03f      	beq.n	8019442 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 80193c2:	4dc5      	ldr	r5, [pc, #788]	; (80196d8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 80193c4:	4628      	mov	r0, r5
 80193c6:	f7f9 fbcc 	bl	8012b62 <_ZNK8touchgfx4Rect7isEmptyEv>
 80193ca:	4606      	mov	r6, r0
 80193cc:	2800      	cmp	r0, #0
 80193ce:	d138      	bne.n	8019442 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 80193d0:	4628      	mov	r0, r5
 80193d2:	f7ff f907 	bl	80185e4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 80193d6:	6823      	ldr	r3, [r4, #0]
 80193d8:	6829      	ldr	r1, [r5, #0]
 80193da:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80193dc:	686a      	ldr	r2, [r5, #4]
 80193de:	4620      	mov	r0, r4
 80193e0:	4798      	blx	r3
 80193e2:	802e      	strh	r6, [r5, #0]
 80193e4:	806e      	strh	r6, [r5, #2]
 80193e6:	80ae      	strh	r6, [r5, #4]
 80193e8:	80ee      	strh	r6, [r5, #6]
 80193ea:	f10d 0824 	add.w	r8, sp, #36	; 0x24
 80193ee:	4dbb      	ldr	r5, [pc, #748]	; (80196dc <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 80193f0:	4640      	mov	r0, r8
 80193f2:	f7ff fbeb 	bl	8018bcc <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80193f6:	882e      	ldrh	r6, [r5, #0]
 80193f8:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 80193fc:	4633      	mov	r3, r6
 80193fe:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8019402:	42bb      	cmp	r3, r7
 8019404:	d224      	bcs.n	8019450 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8019406:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 801940a:	2907      	cmp	r1, #7
 801940c:	d816      	bhi.n	801943c <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 801940e:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 8019412:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 8019416:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 801941a:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 801941e:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 8019422:	1c4a      	adds	r2, r1, #1
 8019424:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 8019428:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 801942c:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 8019430:	f8a2 a002 	strh.w	sl, [r2, #2]
 8019434:	f8a2 e004 	strh.w	lr, [r2, #4]
 8019438:	f8a2 c006 	strh.w	ip, [r2, #6]
 801943c:	3301      	adds	r3, #1
 801943e:	b29b      	uxth	r3, r3
 8019440:	e7df      	b.n	8019402 <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 8019442:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8019446:	2b00      	cmp	r3, #0
 8019448:	d1cf      	bne.n	80193ea <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 801944a:	b01b      	add	sp, #108	; 0x6c
 801944c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019450:	f8b4 312e 	ldrh.w	r3, [r4, #302]	; 0x12e
 8019454:	42b3      	cmp	r3, r6
 8019456:	d90c      	bls.n	8019472 <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 8019458:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 801945c:	6822      	ldr	r2, [r4, #0]
 801945e:	f8d3 10ee 	ldr.w	r1, [r3, #238]	; 0xee
 8019462:	6c17      	ldr	r7, [r2, #64]	; 0x40
 8019464:	f8d3 20f2 	ldr.w	r2, [r3, #242]	; 0xf2
 8019468:	4620      	mov	r0, r4
 801946a:	3601      	adds	r6, #1
 801946c:	47b8      	blx	r7
 801946e:	b2b6      	uxth	r6, r6
 8019470:	e7ee      	b.n	8019450 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8019472:	4a9b      	ldr	r2, [pc, #620]	; (80196e0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8019474:	6813      	ldr	r3, [r2, #0]
 8019476:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 801947a:	2b01      	cmp	r3, #1
 801947c:	4691      	mov	r9, r2
 801947e:	f040 80e2 	bne.w	8019646 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b6>
 8019482:	8829      	ldrh	r1, [r5, #0]
 8019484:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 8019488:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 801948c:	33ae      	adds	r3, #174	; 0xae
 801948e:	2600      	movs	r6, #0
 8019490:	428f      	cmp	r7, r1
 8019492:	f103 0308 	add.w	r3, r3, #8
 8019496:	dd0a      	ble.n	80194ae <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 8019498:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 801949c:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 80194a0:	4402      	add	r2, r0
 80194a2:	b212      	sxth	r2, r2
 80194a4:	4296      	cmp	r6, r2
 80194a6:	bfb8      	it	lt
 80194a8:	4616      	movlt	r6, r2
 80194aa:	3101      	adds	r1, #1
 80194ac:	e7f0      	b.n	8019490 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 80194ae:	4b8d      	ldr	r3, [pc, #564]	; (80196e4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 80194b0:	f8df 922c 	ldr.w	r9, [pc, #556]	; 80196e0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>
 80194b4:	881b      	ldrh	r3, [r3, #0]
 80194b6:	2b0f      	cmp	r3, #15
 80194b8:	bf88      	it	hi
 80194ba:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 80194be:	f04f 0300 	mov.w	r3, #0
 80194c2:	e9cd 3305 	strd	r3, r3, [sp, #20]
 80194c6:	bf98      	it	ls
 80194c8:	f04f 0b01 	movls.w	fp, #1
 80194cc:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 80194d0:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 80194d4:	4b82      	ldr	r3, [pc, #520]	; (80196e0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 80194d6:	4438      	add	r0, r7
 80194d8:	b207      	sxth	r7, r0
 80194da:	6818      	ldr	r0, [r3, #0]
 80194dc:	42b7      	cmp	r7, r6
 80194de:	6803      	ldr	r3, [r0, #0]
 80194e0:	f280 8083 	bge.w	80195ea <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 80194e4:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 80194e8:	4798      	blx	r3
 80194ea:	eb07 030b 	add.w	r3, r7, fp
 80194ee:	4298      	cmp	r0, r3
 80194f0:	da07      	bge.n	8019502 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 80194f2:	42b0      	cmp	r0, r6
 80194f4:	da05      	bge.n	8019502 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 80194f6:	4287      	cmp	r7, r0
 80194f8:	dd6c      	ble.n	80195d4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 80194fa:	2f00      	cmp	r7, #0
 80194fc:	dd6a      	ble.n	80195d4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 80194fe:	4630      	mov	r0, r6
 8019500:	e004      	b.n	801950c <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
 8019502:	4287      	cmp	r7, r0
 8019504:	dcfb      	bgt.n	80194fe <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 8019506:	42b0      	cmp	r0, r6
 8019508:	bfa8      	it	ge
 801950a:	4630      	movge	r0, r6
 801950c:	4b76      	ldr	r3, [pc, #472]	; (80196e8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 801950e:	f8ad 7016 	strh.w	r7, [sp, #22]
 8019512:	1bc0      	subs	r0, r0, r7
 8019514:	f9b3 3000 	ldrsh.w	r3, [r3]
 8019518:	882f      	ldrh	r7, [r5, #0]
 801951a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801951e:	2200      	movs	r2, #0
 8019520:	f8ad 2014 	strh.w	r2, [sp, #20]
 8019524:	f8ad 001a 	strh.w	r0, [sp, #26]
 8019528:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 801952c:	42bb      	cmp	r3, r7
 801952e:	d9cd      	bls.n	80194cc <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8019530:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 8019534:	ab07      	add	r3, sp, #28
 8019536:	f852 0fac 	ldr.w	r0, [r2, #172]!
 801953a:	6851      	ldr	r1, [r2, #4]
 801953c:	c303      	stmia	r3!, {r0, r1}
 801953e:	a905      	add	r1, sp, #20
 8019540:	a807      	add	r0, sp, #28
 8019542:	f7ff f93e 	bl	80187c2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8019546:	2800      	cmp	r0, #0
 8019548:	d04c      	beq.n	80195e4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 801954a:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 801954e:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 8019552:	f8bd a020 	ldrh.w	sl, [sp, #32]
 8019556:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 801955a:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 801955e:	9302      	str	r3, [sp, #8]
 8019560:	4686      	mov	lr, r0
 8019562:	4290      	cmp	r0, r2
 8019564:	4450      	add	r0, sl
 8019566:	f8bd a018 	ldrh.w	sl, [sp, #24]
 801956a:	bfb8      	it	lt
 801956c:	4696      	movlt	lr, r2
 801956e:	4452      	add	r2, sl
 8019570:	4299      	cmp	r1, r3
 8019572:	b280      	uxth	r0, r0
 8019574:	b292      	uxth	r2, r2
 8019576:	468c      	mov	ip, r1
 8019578:	fa0f fa82 	sxth.w	sl, r2
 801957c:	bfb8      	it	lt
 801957e:	469c      	movlt	ip, r3
 8019580:	b203      	sxth	r3, r0
 8019582:	4553      	cmp	r3, sl
 8019584:	bfb8      	it	lt
 8019586:	4602      	movlt	r2, r0
 8019588:	eba2 020e 	sub.w	r2, r2, lr
 801958c:	f8ad 2020 	strh.w	r2, [sp, #32]
 8019590:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8019594:	9b02      	ldr	r3, [sp, #8]
 8019596:	f8ad e01c 	strh.w	lr, [sp, #28]
 801959a:	4411      	add	r1, r2
 801959c:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 80195a0:	f8ad c01e 	strh.w	ip, [sp, #30]
 80195a4:	4413      	add	r3, r2
 80195a6:	b289      	uxth	r1, r1
 80195a8:	b29b      	uxth	r3, r3
 80195aa:	b208      	sxth	r0, r1
 80195ac:	b21a      	sxth	r2, r3
 80195ae:	4290      	cmp	r0, r2
 80195b0:	bfb8      	it	lt
 80195b2:	460b      	movlt	r3, r1
 80195b4:	eba3 030c 	sub.w	r3, r3, ip
 80195b8:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 80195bc:	a807      	add	r0, sp, #28
 80195be:	f7f9 fad0 	bl	8012b62 <_ZNK8touchgfx4Rect7isEmptyEv>
 80195c2:	b920      	cbnz	r0, 80195ce <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 80195c4:	6823      	ldr	r3, [r4, #0]
 80195c6:	a907      	add	r1, sp, #28
 80195c8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80195ca:	4620      	mov	r0, r4
 80195cc:	4798      	blx	r3
 80195ce:	3701      	adds	r7, #1
 80195d0:	b2bf      	uxth	r7, r7
 80195d2:	e7a9      	b.n	8019528 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 80195d4:	f8d9 0000 	ldr.w	r0, [r9]
 80195d8:	6803      	ldr	r3, [r0, #0]
 80195da:	2101      	movs	r1, #1
 80195dc:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 80195e0:	4798      	blx	r3
 80195e2:	e773      	b.n	80194cc <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 80195e4:	e9cd 0007 	strd	r0, r0, [sp, #28]
 80195e8:	e7e8      	b.n	80195bc <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 80195ea:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80195ec:	4798      	blx	r3
 80195ee:	4b3f      	ldr	r3, [pc, #252]	; (80196ec <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 80195f0:	781b      	ldrb	r3, [r3, #0]
 80195f2:	2b00      	cmp	r3, #0
 80195f4:	f43f af29 	beq.w	801944a <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 80195f8:	2300      	movs	r3, #0
 80195fa:	f8a4 312e 	strh.w	r3, [r4, #302]	; 0x12e
 80195fe:	882b      	ldrh	r3, [r5, #0]
 8019600:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 8019604:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8019608:	42ab      	cmp	r3, r5
 801960a:	f4bf af1e 	bcs.w	801944a <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 801960e:	f8b4 112e 	ldrh.w	r1, [r4, #302]	; 0x12e
 8019612:	2907      	cmp	r1, #7
 8019614:	d814      	bhi.n	8019640 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b0>
 8019616:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 801961a:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 801961e:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 8019622:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 8019626:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 801962a:	1c4a      	adds	r2, r1, #1
 801962c:	f8a4 212e 	strh.w	r2, [r4, #302]	; 0x12e
 8019630:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 8019634:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 8019638:	f8a2 c002 	strh.w	ip, [r2, #2]
 801963c:	8097      	strh	r7, [r2, #4]
 801963e:	80d6      	strh	r6, [r2, #6]
 8019640:	3301      	adds	r3, #1
 8019642:	b29b      	uxth	r3, r3
 8019644:	e7e0      	b.n	8019608 <_ZN8touchgfx11Application15drawCachedAreasEv+0x278>
 8019646:	2b02      	cmp	r3, #2
 8019648:	f040 8133 	bne.w	80198b2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 801964c:	4b28      	ldr	r3, [pc, #160]	; (80196f0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 801964e:	781b      	ldrb	r3, [r3, #0]
 8019650:	2b01      	cmp	r3, #1
 8019652:	f104 0aac 	add.w	sl, r4, #172	; 0xac
 8019656:	f000 8098 	beq.w	801978a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 801965a:	882a      	ldrh	r2, [r5, #0]
 801965c:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	; 0xec
 8019660:	3201      	adds	r2, #1
 8019662:	b292      	uxth	r2, r2
 8019664:	2900      	cmp	r1, #0
 8019666:	d0c2      	beq.n	80195ee <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8019668:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	; 0xae
 801966c:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
 8019670:	441e      	add	r6, r3
 8019672:	b236      	sxth	r6, r6
 8019674:	4694      	mov	ip, r2
 8019676:	f04f 0900 	mov.w	r9, #0
 801967a:	fa1f f38c 	uxth.w	r3, ip
 801967e:	4299      	cmp	r1, r3
 8019680:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 8019684:	f240 80bf 	bls.w	8019806 <_ZN8touchgfx11Application15drawCachedAreasEv+0x476>
 8019688:	4427      	add	r7, r4
 801968a:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 801968e:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	; 0xae
 8019692:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	; 0xae
 8019696:	4283      	cmp	r3, r0
 8019698:	f340 80a1 	ble.w	80197de <_ZN8touchgfx11Application15drawCachedAreasEv+0x44e>
 801969c:	f8be 60b2 	ldrh.w	r6, [lr, #178]	; 0xb2
 80196a0:	4406      	add	r6, r0
 80196a2:	b236      	sxth	r6, r6
 80196a4:	429e      	cmp	r6, r3
 80196a6:	bfa8      	it	ge
 80196a8:	461e      	movge	r6, r3
 80196aa:	46e1      	mov	r9, ip
 80196ac:	f10c 0c01 	add.w	ip, ip, #1
 80196b0:	e7e3      	b.n	801967a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ea>
 80196b2:	d10a      	bne.n	80196ca <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 80196b4:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	; 0xb2
 80196b8:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	; 0xb2
 80196bc:	4562      	cmp	r2, ip
 80196be:	bfb8      	it	lt
 80196c0:	4662      	movlt	r2, ip
 80196c2:	4288      	cmp	r0, r1
 80196c4:	bfb8      	it	lt
 80196c6:	461f      	movlt	r7, r3
 80196c8:	e087      	b.n	80197da <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 80196ca:	428a      	cmp	r2, r1
 80196cc:	bfb8      	it	lt
 80196ce:	460a      	movlt	r2, r1
 80196d0:	e083      	b.n	80197da <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 80196d2:	bf00      	nop
 80196d4:	2001388c 	.word	0x2001388c
 80196d8:	20013898 	.word	0x20013898
 80196dc:	2000008c 	.word	0x2000008c
 80196e0:	2001384c 	.word	0x2001384c
 80196e4:	20013842 	.word	0x20013842
 80196e8:	20013840 	.word	0x20013840
 80196ec:	2001384a 	.word	0x2001384a
 80196f0:	20013844 	.word	0x20013844
 80196f4:	19a1      	adds	r1, r4, r6
 80196f6:	ab07      	add	r3, sp, #28
 80196f8:	f851 0fac 	ldr.w	r0, [r1, #172]!
 80196fc:	6849      	ldr	r1, [r1, #4]
 80196fe:	c303      	stmia	r3!, {r0, r1}
 8019700:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8019704:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8019708:	2b13      	cmp	r3, #19
 801970a:	bfd8      	it	le
 801970c:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 8019710:	f8ad 201c 	strh.w	r2, [sp, #28]
 8019714:	440b      	add	r3, r1
 8019716:	1a9b      	subs	r3, r3, r2
 8019718:	a807      	add	r0, sp, #28
 801971a:	f8ad 3020 	strh.w	r3, [sp, #32]
 801971e:	f7fe ff7b 	bl	8018618 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8019722:	a807      	add	r0, sp, #28
 8019724:	f7f9 fa1d 	bl	8012b62 <_ZNK8touchgfx4Rect7isEmptyEv>
 8019728:	bb78      	cbnz	r0, 801978a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 801972a:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 801972e:	f8d9 0000 	ldr.w	r0, [r9]
 8019732:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8019736:	f8d0 e000 	ldr.w	lr, [r0]
 801973a:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 801973e:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8019742:	f1bc 0f14 	cmp.w	ip, #20
 8019746:	bfa8      	it	ge
 8019748:	f04f 0c14 	movge.w	ip, #20
 801974c:	fa1f fc8c 	uxth.w	ip, ip
 8019750:	f8cd c000 	str.w	ip, [sp]
 8019754:	f8de b090 	ldr.w	fp, [lr, #144]	; 0x90
 8019758:	47d8      	blx	fp
 801975a:	4683      	mov	fp, r0
 801975c:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8019760:	a807      	add	r0, sp, #28
 8019762:	f7fe ff3f 	bl	80185e4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8019766:	6823      	ldr	r3, [r4, #0]
 8019768:	4426      	add	r6, r4
 801976a:	4620      	mov	r0, r4
 801976c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801976e:	a907      	add	r1, sp, #28
 8019770:	4798      	blx	r3
 8019772:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 8019776:	eba0 000b 	sub.w	r0, r0, fp
 801977a:	b200      	sxth	r0, r0
 801977c:	f8a6 00b0 	strh.w	r0, [r6, #176]	; 0xb0
 8019780:	b918      	cbnz	r0, 801978a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8019782:	b2b9      	uxth	r1, r7
 8019784:	4650      	mov	r0, sl
 8019786:	f7ff fa79 	bl	8018c7c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801978a:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	; 0xec
 801978e:	f1bb 0f00 	cmp.w	fp, #0
 8019792:	f43f af2c 	beq.w	80195ee <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8019796:	882b      	ldrh	r3, [r5, #0]
 8019798:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	; 0xac
 801979c:	3301      	adds	r3, #1
 801979e:	b29b      	uxth	r3, r3
 80197a0:	2700      	movs	r7, #0
 80197a2:	b299      	uxth	r1, r3
 80197a4:	458b      	cmp	fp, r1
 80197a6:	ea4f 06c7 	mov.w	r6, r7, lsl #3
 80197aa:	d9a3      	bls.n	80196f4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 80197ac:	4426      	add	r6, r4
 80197ae:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 80197b2:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	; 0xac
 80197b6:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 80197ba:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	; 0xac
 80197be:	4408      	add	r0, r1
 80197c0:	f8be 10b0 	ldrh.w	r1, [lr, #176]	; 0xb0
 80197c4:	4461      	add	r1, ip
 80197c6:	b200      	sxth	r0, r0
 80197c8:	b209      	sxth	r1, r1
 80197ca:	4288      	cmp	r0, r1
 80197cc:	f6bf af71 	bge.w	80196b2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x322>
 80197d0:	4584      	cmp	ip, r0
 80197d2:	4662      	mov	r2, ip
 80197d4:	461f      	mov	r7, r3
 80197d6:	bfb8      	it	lt
 80197d8:	4602      	movlt	r2, r0
 80197da:	3301      	adds	r3, #1
 80197dc:	e7e1      	b.n	80197a2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x412>
 80197de:	d10e      	bne.n	80197fe <_ZN8touchgfx11Application15drawCachedAreasEv+0x46e>
 80197e0:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	; 0xb0
 80197e4:	f8be e0b2 	ldrh.w	lr, [lr, #178]	; 0xb2
 80197e8:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	; 0xb0
 80197ec:	4473      	add	r3, lr
 80197ee:	b21b      	sxth	r3, r3
 80197f0:	429e      	cmp	r6, r3
 80197f2:	bfa8      	it	ge
 80197f4:	461e      	movge	r6, r3
 80197f6:	4287      	cmp	r7, r0
 80197f8:	bfb8      	it	lt
 80197fa:	46e1      	movlt	r9, ip
 80197fc:	e756      	b.n	80196ac <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 80197fe:	4286      	cmp	r6, r0
 8019800:	bfa8      	it	ge
 8019802:	4606      	movge	r6, r0
 8019804:	e752      	b.n	80196ac <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8019806:	eb0a 0007 	add.w	r0, sl, r7
 801980a:	4427      	add	r7, r4
 801980c:	e9cd 2102 	strd	r2, r1, [sp, #8]
 8019810:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	; 0xb2
 8019814:	f1bb 0f13 	cmp.w	fp, #19
 8019818:	bfde      	ittt	le
 801981a:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	; 0xae
 801981e:	445e      	addle	r6, fp
 8019820:	b236      	sxthle	r6, r6
 8019822:	f7f9 f99e 	bl	8012b62 <_ZNK8touchgfx4Rect7isEmptyEv>
 8019826:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 801982a:	2800      	cmp	r0, #0
 801982c:	f47f af1a 	bne.w	8019664 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d4>
 8019830:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	; 0xae
 8019834:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8019838:	482a      	ldr	r0, [pc, #168]	; (80198e4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x554>)
 801983a:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	; 0xac
 801983e:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	; 0xb0
 8019842:	6800      	ldr	r0, [r0, #0]
 8019844:	f8ad 101c 	strh.w	r1, [sp, #28]
 8019848:	1ab6      	subs	r6, r6, r2
 801984a:	2e14      	cmp	r6, #20
 801984c:	f8ad 201e 	strh.w	r2, [sp, #30]
 8019850:	f8ad 3020 	strh.w	r3, [sp, #32]
 8019854:	bfa8      	it	ge
 8019856:	2614      	movge	r6, #20
 8019858:	f8d0 c000 	ldr.w	ip, [r0]
 801985c:	b2b6      	uxth	r6, r6
 801985e:	fa1f fb8b 	uxth.w	fp, fp
 8019862:	455e      	cmp	r6, fp
 8019864:	bf94      	ite	ls
 8019866:	9600      	strls	r6, [sp, #0]
 8019868:	f8cd b000 	strhi.w	fp, [sp]
 801986c:	b292      	uxth	r2, r2
 801986e:	f8dc 6090 	ldr.w	r6, [ip, #144]	; 0x90
 8019872:	b29b      	uxth	r3, r3
 8019874:	b289      	uxth	r1, r1
 8019876:	47b0      	blx	r6
 8019878:	6823      	ldr	r3, [r4, #0]
 801987a:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 801987e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8019880:	a907      	add	r1, sp, #28
 8019882:	4620      	mov	r0, r4
 8019884:	4798      	blx	r3
 8019886:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 801988a:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	; 0xb2
 801988e:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	; 0xae
 8019892:	1a5b      	subs	r3, r3, r1
 8019894:	440a      	add	r2, r1
 8019896:	b21b      	sxth	r3, r3
 8019898:	f8a7 20ae 	strh.w	r2, [r7, #174]	; 0xae
 801989c:	f8a7 30b2 	strh.w	r3, [r7, #178]	; 0xb2
 80198a0:	2b00      	cmp	r3, #0
 80198a2:	f47f aeda 	bne.w	801965a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 80198a6:	fa1f f189 	uxth.w	r1, r9
 80198aa:	4650      	mov	r0, sl
 80198ac:	f7ff f9e6 	bl	8018c7c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80198b0:	e6d3      	b.n	801965a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 80198b2:	882e      	ldrh	r6, [r5, #0]
 80198b4:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 80198b8:	42b3      	cmp	r3, r6
 80198ba:	f67f ae98 	bls.w	80195ee <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 80198be:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 80198c2:	ab07      	add	r3, sp, #28
 80198c4:	f852 0fac 	ldr.w	r0, [r2, #172]!
 80198c8:	6851      	ldr	r1, [r2, #4]
 80198ca:	c303      	stmia	r3!, {r0, r1}
 80198cc:	a807      	add	r0, sp, #28
 80198ce:	f7f9 f948 	bl	8012b62 <_ZNK8touchgfx4Rect7isEmptyEv>
 80198d2:	b920      	cbnz	r0, 80198de <_ZN8touchgfx11Application15drawCachedAreasEv+0x54e>
 80198d4:	6823      	ldr	r3, [r4, #0]
 80198d6:	a907      	add	r1, sp, #28
 80198d8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80198da:	4620      	mov	r0, r4
 80198dc:	4798      	blx	r3
 80198de:	3601      	adds	r6, #1
 80198e0:	b2b6      	uxth	r6, r6
 80198e2:	e7e7      	b.n	80198b4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x524>
 80198e4:	2001384c 	.word	0x2001384c

080198e8 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 80198e8:	4b03      	ldr	r3, [pc, #12]	; (80198f8 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 80198ea:	2200      	movs	r2, #0
 80198ec:	801a      	strh	r2, [r3, #0]
 80198ee:	805a      	strh	r2, [r3, #2]
 80198f0:	809a      	strh	r2, [r3, #4]
 80198f2:	80da      	strh	r2, [r3, #6]
 80198f4:	4770      	bx	lr
 80198f6:	bf00      	nop
 80198f8:	20013898 	.word	0x20013898

080198fc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 80198fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019900:	4606      	mov	r6, r0
 8019902:	b09d      	sub	sp, #116	; 0x74
 8019904:	a803      	add	r0, sp, #12
 8019906:	4614      	mov	r4, r2
 8019908:	468a      	mov	sl, r1
 801990a:	461d      	mov	r5, r3
 801990c:	f000 ff08 	bl	801a720 <_ZN8touchgfx12TextProviderC1Ev>
 8019910:	6833      	ldr	r3, [r6, #0]
 8019912:	4630      	mov	r0, r6
 8019914:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8019916:	4798      	blx	r3
 8019918:	6833      	ldr	r3, [r6, #0]
 801991a:	4607      	mov	r7, r0
 801991c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801991e:	4630      	mov	r0, r6
 8019920:	4798      	blx	r3
 8019922:	462a      	mov	r2, r5
 8019924:	9000      	str	r0, [sp, #0]
 8019926:	4621      	mov	r1, r4
 8019928:	463b      	mov	r3, r7
 801992a:	a803      	add	r0, sp, #12
 801992c:	f000 ff53 	bl	801a7d6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8019930:	2500      	movs	r5, #0
 8019932:	462c      	mov	r4, r5
 8019934:	46a9      	mov	r9, r5
 8019936:	46a8      	mov	r8, r5
 8019938:	f242 0b0b 	movw	fp, #8203	; 0x200b
 801993c:	2300      	movs	r3, #0
 801993e:	9302      	str	r3, [sp, #8]
 8019940:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8019944:	429c      	cmp	r4, r3
 8019946:	d002      	beq.n	801994e <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8019948:	455c      	cmp	r4, fp
 801994a:	bf18      	it	ne
 801994c:	4625      	movne	r5, r4
 801994e:	ab02      	add	r3, sp, #8
 8019950:	4632      	mov	r2, r6
 8019952:	4651      	mov	r1, sl
 8019954:	a803      	add	r0, sp, #12
 8019956:	f001 fa41 	bl	801addc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801995a:	4604      	mov	r4, r0
 801995c:	b108      	cbz	r0, 8019962 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 801995e:	280a      	cmp	r0, #10
 8019960:	d10a      	bne.n	8019978 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 8019962:	45c1      	cmp	r9, r8
 8019964:	bf38      	it	cc
 8019966:	46c1      	movcc	r9, r8
 8019968:	f04f 0800 	mov.w	r8, #0
 801996c:	2c00      	cmp	r4, #0
 801996e:	d1e5      	bne.n	801993c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8019970:	4648      	mov	r0, r9
 8019972:	b01d      	add	sp, #116	; 0x74
 8019974:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019978:	9a02      	ldr	r2, [sp, #8]
 801997a:	2a00      	cmp	r2, #0
 801997c:	d0de      	beq.n	801993c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 801997e:	7b57      	ldrb	r7, [r2, #13]
 8019980:	6833      	ldr	r3, [r6, #0]
 8019982:	8894      	ldrh	r4, [r2, #4]
 8019984:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8019986:	007f      	lsls	r7, r7, #1
 8019988:	f407 7080 	and.w	r0, r7, #256	; 0x100
 801998c:	7a97      	ldrb	r7, [r2, #10]
 801998e:	4629      	mov	r1, r5
 8019990:	4307      	orrs	r7, r0
 8019992:	4630      	mov	r0, r6
 8019994:	4798      	blx	r3
 8019996:	4438      	add	r0, r7
 8019998:	4480      	add	r8, r0
 801999a:	fa1f f888 	uxth.w	r8, r8
 801999e:	e7e5      	b.n	801996c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

080199a0 <_ZNK8touchgfx4Font12getCharWidthEt>:
 80199a0:	b508      	push	{r3, lr}
 80199a2:	6803      	ldr	r3, [r0, #0]
 80199a4:	68db      	ldr	r3, [r3, #12]
 80199a6:	4798      	blx	r3
 80199a8:	b128      	cbz	r0, 80199b6 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 80199aa:	7b43      	ldrb	r3, [r0, #13]
 80199ac:	7a80      	ldrb	r0, [r0, #10]
 80199ae:	005b      	lsls	r3, r3, #1
 80199b0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80199b4:	4318      	orrs	r0, r3
 80199b6:	bd08      	pop	{r3, pc}

080199b8 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 80199b8:	b40e      	push	{r1, r2, r3}
 80199ba:	b5f0      	push	{r4, r5, r6, r7, lr}
 80199bc:	b09e      	sub	sp, #120	; 0x78
 80199be:	ab23      	add	r3, sp, #140	; 0x8c
 80199c0:	4605      	mov	r5, r0
 80199c2:	f853 4b04 	ldr.w	r4, [r3], #4
 80199c6:	9303      	str	r3, [sp, #12]
 80199c8:	a805      	add	r0, sp, #20
 80199ca:	f000 fea9 	bl	801a720 <_ZN8touchgfx12TextProviderC1Ev>
 80199ce:	682b      	ldr	r3, [r5, #0]
 80199d0:	4628      	mov	r0, r5
 80199d2:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80199d4:	4798      	blx	r3
 80199d6:	682b      	ldr	r3, [r5, #0]
 80199d8:	4606      	mov	r6, r0
 80199da:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80199dc:	4628      	mov	r0, r5
 80199de:	4798      	blx	r3
 80199e0:	4633      	mov	r3, r6
 80199e2:	ae1e      	add	r6, sp, #120	; 0x78
 80199e4:	4621      	mov	r1, r4
 80199e6:	9000      	str	r0, [sp, #0]
 80199e8:	9a03      	ldr	r2, [sp, #12]
 80199ea:	2400      	movs	r4, #0
 80199ec:	a805      	add	r0, sp, #20
 80199ee:	f000 fef2 	bl	801a7d6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80199f2:	f846 4d68 	str.w	r4, [r6, #-104]!
 80199f6:	462a      	mov	r2, r5
 80199f8:	4633      	mov	r3, r6
 80199fa:	4621      	mov	r1, r4
 80199fc:	a805      	add	r0, sp, #20
 80199fe:	f001 f9ed 	bl	801addc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8019a02:	b1f0      	cbz	r0, 8019a42 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 8019a04:	280a      	cmp	r0, #10
 8019a06:	d018      	beq.n	8019a3a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8019a08:	9f04      	ldr	r7, [sp, #16]
 8019a0a:	b1b7      	cbz	r7, 8019a3a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8019a0c:	7b78      	ldrb	r0, [r7, #13]
 8019a0e:	7a3b      	ldrb	r3, [r7, #8]
 8019a10:	88ea      	ldrh	r2, [r5, #6]
 8019a12:	00c1      	lsls	r1, r0, #3
 8019a14:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8019a18:	4319      	orrs	r1, r3
 8019a1a:	0643      	lsls	r3, r0, #25
 8019a1c:	bf44      	itt	mi
 8019a1e:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 8019a22:	b219      	sxthmi	r1, r3
 8019a24:	0100      	lsls	r0, r0, #4
 8019a26:	79fb      	ldrb	r3, [r7, #7]
 8019a28:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8019a2c:	4303      	orrs	r3, r0
 8019a2e:	4413      	add	r3, r2
 8019a30:	1a5b      	subs	r3, r3, r1
 8019a32:	b21b      	sxth	r3, r3
 8019a34:	429c      	cmp	r4, r3
 8019a36:	bfb8      	it	lt
 8019a38:	461c      	movlt	r4, r3
 8019a3a:	4633      	mov	r3, r6
 8019a3c:	462a      	mov	r2, r5
 8019a3e:	2100      	movs	r1, #0
 8019a40:	e7dc      	b.n	80199fc <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8019a42:	b2a0      	uxth	r0, r4
 8019a44:	b01e      	add	sp, #120	; 0x78
 8019a46:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8019a4a:	b003      	add	sp, #12
 8019a4c:	4770      	bx	lr

08019a4e <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 8019a4e:	7a43      	ldrb	r3, [r0, #9]
 8019a50:	8880      	ldrh	r0, [r0, #4]
 8019a52:	4418      	add	r0, r3
 8019a54:	b280      	uxth	r0, r0
 8019a56:	4770      	bx	lr

08019a58 <_ZNK8touchgfx4Font13getFontHeightEv>:
 8019a58:	6803      	ldr	r3, [r0, #0]
 8019a5a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8019a5c:	4718      	bx	r3

08019a5e <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 8019a5e:	b40e      	push	{r1, r2, r3}
 8019a60:	b570      	push	{r4, r5, r6, lr}
 8019a62:	b09d      	sub	sp, #116	; 0x74
 8019a64:	ab21      	add	r3, sp, #132	; 0x84
 8019a66:	4604      	mov	r4, r0
 8019a68:	f853 5b04 	ldr.w	r5, [r3], #4
 8019a6c:	9302      	str	r3, [sp, #8]
 8019a6e:	a803      	add	r0, sp, #12
 8019a70:	f000 fe56 	bl	801a720 <_ZN8touchgfx12TextProviderC1Ev>
 8019a74:	6823      	ldr	r3, [r4, #0]
 8019a76:	4620      	mov	r0, r4
 8019a78:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8019a7a:	4798      	blx	r3
 8019a7c:	6823      	ldr	r3, [r4, #0]
 8019a7e:	4606      	mov	r6, r0
 8019a80:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8019a82:	4620      	mov	r0, r4
 8019a84:	4798      	blx	r3
 8019a86:	4633      	mov	r3, r6
 8019a88:	9000      	str	r0, [sp, #0]
 8019a8a:	9a02      	ldr	r2, [sp, #8]
 8019a8c:	4629      	mov	r1, r5
 8019a8e:	a803      	add	r0, sp, #12
 8019a90:	f000 fea1 	bl	801a7d6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8019a94:	a803      	add	r0, sp, #12
 8019a96:	f001 fa6f 	bl	801af78 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8019a9a:	2401      	movs	r4, #1
 8019a9c:	b2a3      	uxth	r3, r4
 8019a9e:	b140      	cbz	r0, 8019ab2 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 8019aa0:	280a      	cmp	r0, #10
 8019aa2:	bf08      	it	eq
 8019aa4:	3301      	addeq	r3, #1
 8019aa6:	a803      	add	r0, sp, #12
 8019aa8:	bf08      	it	eq
 8019aaa:	b21c      	sxtheq	r4, r3
 8019aac:	f001 fa64 	bl	801af78 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8019ab0:	e7f4      	b.n	8019a9c <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 8019ab2:	4618      	mov	r0, r3
 8019ab4:	b01d      	add	sp, #116	; 0x74
 8019ab6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8019aba:	b003      	add	sp, #12
 8019abc:	4770      	bx	lr

08019abe <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 8019abe:	b40e      	push	{r1, r2, r3}
 8019ac0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8019ac2:	b09e      	sub	sp, #120	; 0x78
 8019ac4:	ab23      	add	r3, sp, #140	; 0x8c
 8019ac6:	4604      	mov	r4, r0
 8019ac8:	f853 5b04 	ldr.w	r5, [r3], #4
 8019acc:	9303      	str	r3, [sp, #12]
 8019ace:	a805      	add	r0, sp, #20
 8019ad0:	f000 fe26 	bl	801a720 <_ZN8touchgfx12TextProviderC1Ev>
 8019ad4:	6823      	ldr	r3, [r4, #0]
 8019ad6:	4620      	mov	r0, r4
 8019ad8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8019ada:	4798      	blx	r3
 8019adc:	6823      	ldr	r3, [r4, #0]
 8019ade:	4606      	mov	r6, r0
 8019ae0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8019ae2:	4620      	mov	r0, r4
 8019ae4:	4798      	blx	r3
 8019ae6:	4633      	mov	r3, r6
 8019ae8:	4629      	mov	r1, r5
 8019aea:	9000      	str	r0, [sp, #0]
 8019aec:	9a03      	ldr	r2, [sp, #12]
 8019aee:	a805      	add	r0, sp, #20
 8019af0:	ad1e      	add	r5, sp, #120	; 0x78
 8019af2:	f000 fe70 	bl	801a7d6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8019af6:	2100      	movs	r1, #0
 8019af8:	f845 1d68 	str.w	r1, [r5, #-104]!
 8019afc:	4622      	mov	r2, r4
 8019afe:	462b      	mov	r3, r5
 8019b00:	a805      	add	r0, sp, #20
 8019b02:	f001 f96b 	bl	801addc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8019b06:	f647 76ff 	movw	r6, #32767	; 0x7fff
 8019b0a:	b1d8      	cbz	r0, 8019b44 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 8019b0c:	280a      	cmp	r0, #10
 8019b0e:	d012      	beq.n	8019b36 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8019b10:	9804      	ldr	r0, [sp, #16]
 8019b12:	b180      	cbz	r0, 8019b36 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8019b14:	7b47      	ldrb	r7, [r0, #13]
 8019b16:	88e2      	ldrh	r2, [r4, #6]
 8019b18:	00fb      	lsls	r3, r7, #3
 8019b1a:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8019b1e:	7a03      	ldrb	r3, [r0, #8]
 8019b20:	430b      	orrs	r3, r1
 8019b22:	0679      	lsls	r1, r7, #25
 8019b24:	bf44      	itt	mi
 8019b26:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8019b2a:	b21b      	sxthmi	r3, r3
 8019b2c:	1ad3      	subs	r3, r2, r3
 8019b2e:	b21b      	sxth	r3, r3
 8019b30:	429e      	cmp	r6, r3
 8019b32:	bfa8      	it	ge
 8019b34:	461e      	movge	r6, r3
 8019b36:	462b      	mov	r3, r5
 8019b38:	4622      	mov	r2, r4
 8019b3a:	2100      	movs	r1, #0
 8019b3c:	a805      	add	r0, sp, #20
 8019b3e:	f001 f94d 	bl	801addc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8019b42:	e7e2      	b.n	8019b0a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 8019b44:	4630      	mov	r0, r6
 8019b46:	b01e      	add	sp, #120	; 0x78
 8019b48:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8019b4c:	b003      	add	sp, #12
 8019b4e:	4770      	bx	lr

08019b50 <_ZNK8touchgfx8Drawable10invalidateEv>:
 8019b50:	b513      	push	{r0, r1, r4, lr}
 8019b52:	6803      	ldr	r3, [r0, #0]
 8019b54:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8019b58:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8019b5c:	f8ad 1004 	strh.w	r1, [sp, #4]
 8019b60:	2400      	movs	r4, #0
 8019b62:	9400      	str	r4, [sp, #0]
 8019b64:	f8ad 2006 	strh.w	r2, [sp, #6]
 8019b68:	691b      	ldr	r3, [r3, #16]
 8019b6a:	4669      	mov	r1, sp
 8019b6c:	4798      	blx	r3
 8019b6e:	b002      	add	sp, #8
 8019b70:	bd10      	pop	{r4, pc}

08019b72 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 8019b72:	b538      	push	{r3, r4, r5, lr}
 8019b74:	680b      	ldr	r3, [r1, #0]
 8019b76:	460c      	mov	r4, r1
 8019b78:	68db      	ldr	r3, [r3, #12]
 8019b7a:	4605      	mov	r5, r0
 8019b7c:	4798      	blx	r3
 8019b7e:	6823      	ldr	r3, [r4, #0]
 8019b80:	4620      	mov	r0, r4
 8019b82:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8019b84:	4629      	mov	r1, r5
 8019b86:	4798      	blx	r3
 8019b88:	4628      	mov	r0, r5
 8019b8a:	bd38      	pop	{r3, r4, r5, pc}

08019b8c <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 8019b8c:	b410      	push	{r4}
 8019b8e:	880a      	ldrh	r2, [r1, #0]
 8019b90:	8884      	ldrh	r4, [r0, #4]
 8019b92:	4422      	add	r2, r4
 8019b94:	800a      	strh	r2, [r1, #0]
 8019b96:	88c4      	ldrh	r4, [r0, #6]
 8019b98:	884a      	ldrh	r2, [r1, #2]
 8019b9a:	4422      	add	r2, r4
 8019b9c:	804a      	strh	r2, [r1, #2]
 8019b9e:	6940      	ldr	r0, [r0, #20]
 8019ba0:	b120      	cbz	r0, 8019bac <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 8019ba2:	6803      	ldr	r3, [r0, #0]
 8019ba4:	f85d 4b04 	ldr.w	r4, [sp], #4
 8019ba8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8019baa:	4718      	bx	r3
 8019bac:	f85d 4b04 	ldr.w	r4, [sp], #4
 8019bb0:	4770      	bx	lr

08019bb2 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 8019bb2:	b570      	push	{r4, r5, r6, lr}
 8019bb4:	8882      	ldrh	r2, [r0, #4]
 8019bb6:	880b      	ldrh	r3, [r1, #0]
 8019bb8:	4413      	add	r3, r2
 8019bba:	800b      	strh	r3, [r1, #0]
 8019bbc:	88c2      	ldrh	r2, [r0, #6]
 8019bbe:	884b      	ldrh	r3, [r1, #2]
 8019bc0:	460c      	mov	r4, r1
 8019bc2:	4413      	add	r3, r2
 8019bc4:	804b      	strh	r3, [r1, #2]
 8019bc6:	4605      	mov	r5, r0
 8019bc8:	1d01      	adds	r1, r0, #4
 8019bca:	4620      	mov	r0, r4
 8019bcc:	f7f8 ff86 	bl	8012adc <_ZN8touchgfx4RectaNERKS0_>
 8019bd0:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8019bd4:	2b00      	cmp	r3, #0
 8019bd6:	dd0b      	ble.n	8019bf0 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8019bd8:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8019bdc:	2b00      	cmp	r3, #0
 8019bde:	dd07      	ble.n	8019bf0 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8019be0:	6968      	ldr	r0, [r5, #20]
 8019be2:	b128      	cbz	r0, 8019bf0 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8019be4:	6803      	ldr	r3, [r0, #0]
 8019be6:	4621      	mov	r1, r4
 8019be8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8019bea:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8019bee:	4718      	bx	r3
 8019bf0:	bd70      	pop	{r4, r5, r6, pc}
	...

08019bf4 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8019bf4:	b570      	push	{r4, r5, r6, lr}
 8019bf6:	8882      	ldrh	r2, [r0, #4]
 8019bf8:	880b      	ldrh	r3, [r1, #0]
 8019bfa:	4413      	add	r3, r2
 8019bfc:	800b      	strh	r3, [r1, #0]
 8019bfe:	88c2      	ldrh	r2, [r0, #6]
 8019c00:	884b      	ldrh	r3, [r1, #2]
 8019c02:	460c      	mov	r4, r1
 8019c04:	4413      	add	r3, r2
 8019c06:	804b      	strh	r3, [r1, #2]
 8019c08:	4605      	mov	r5, r0
 8019c0a:	1d01      	adds	r1, r0, #4
 8019c0c:	4620      	mov	r0, r4
 8019c0e:	f7f8 ff65 	bl	8012adc <_ZN8touchgfx4RectaNERKS0_>
 8019c12:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8019c16:	2b00      	cmp	r3, #0
 8019c18:	dd19      	ble.n	8019c4e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8019c1a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8019c1e:	2b00      	cmp	r3, #0
 8019c20:	dd15      	ble.n	8019c4e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8019c22:	6968      	ldr	r0, [r5, #20]
 8019c24:	b128      	cbz	r0, 8019c32 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 8019c26:	6803      	ldr	r3, [r0, #0]
 8019c28:	4621      	mov	r1, r4
 8019c2a:	691b      	ldr	r3, [r3, #16]
 8019c2c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8019c30:	4718      	bx	r3
 8019c32:	4b07      	ldr	r3, [pc, #28]	; (8019c50 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 8019c34:	681b      	ldr	r3, [r3, #0]
 8019c36:	3304      	adds	r3, #4
 8019c38:	429d      	cmp	r5, r3
 8019c3a:	d108      	bne.n	8019c4e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8019c3c:	f7fe fea0 	bl	8018980 <_ZN8touchgfx11Application11getInstanceEv>
 8019c40:	6803      	ldr	r3, [r0, #0]
 8019c42:	6821      	ldr	r1, [r4, #0]
 8019c44:	6862      	ldr	r2, [r4, #4]
 8019c46:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8019c48:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8019c4c:	4718      	bx	r3
 8019c4e:	bd70      	pop	{r4, r5, r6, pc}
 8019c50:	20013890 	.word	0x20013890

08019c54 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8019c54:	b570      	push	{r4, r5, r6, lr}
 8019c56:	4604      	mov	r4, r0
 8019c58:	4616      	mov	r6, r2
 8019c5a:	460d      	mov	r5, r1
 8019c5c:	b901      	cbnz	r1, 8019c60 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 8019c5e:	b192      	cbz	r2, 8019c86 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 8019c60:	6823      	ldr	r3, [r4, #0]
 8019c62:	4620      	mov	r0, r4
 8019c64:	699b      	ldr	r3, [r3, #24]
 8019c66:	4798      	blx	r3
 8019c68:	88e2      	ldrh	r2, [r4, #6]
 8019c6a:	88a1      	ldrh	r1, [r4, #4]
 8019c6c:	4432      	add	r2, r6
 8019c6e:	4429      	add	r1, r5
 8019c70:	4620      	mov	r0, r4
 8019c72:	b212      	sxth	r2, r2
 8019c74:	b209      	sxth	r1, r1
 8019c76:	f7e9 fcb1 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8019c7a:	6823      	ldr	r3, [r4, #0]
 8019c7c:	4620      	mov	r0, r4
 8019c7e:	699b      	ldr	r3, [r3, #24]
 8019c80:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8019c84:	4718      	bx	r3
 8019c86:	bd70      	pop	{r4, r5, r6, pc}

08019c88 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 8019c88:	b510      	push	{r4, lr}
 8019c8a:	4604      	mov	r4, r0
 8019c8c:	4608      	mov	r0, r1
 8019c8e:	2300      	movs	r3, #0
 8019c90:	8023      	strh	r3, [r4, #0]
 8019c92:	8063      	strh	r3, [r4, #2]
 8019c94:	6803      	ldr	r3, [r0, #0]
 8019c96:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8019c9a:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 8019c9e:	80a1      	strh	r1, [r4, #4]
 8019ca0:	80e2      	strh	r2, [r4, #6]
 8019ca2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8019ca4:	4621      	mov	r1, r4
 8019ca6:	4798      	blx	r3
 8019ca8:	4620      	mov	r0, r4
 8019caa:	bd10      	pop	{r4, pc}

08019cac <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 8019cac:	b530      	push	{r4, r5, lr}
 8019cae:	8083      	strh	r3, [r0, #4]
 8019cb0:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8019cb4:	80c3      	strh	r3, [r0, #6]
 8019cb6:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8019cba:	7203      	strb	r3, [r0, #8]
 8019cbc:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8019cc0:	f89d 5018 	ldrb.w	r5, [sp, #24]
 8019cc4:	7243      	strb	r3, [r0, #9]
 8019cc6:	7a83      	ldrb	r3, [r0, #10]
 8019cc8:	6141      	str	r1, [r0, #20]
 8019cca:	f365 0306 	bfi	r3, r5, #0, #7
 8019cce:	f89d 501c 	ldrb.w	r5, [sp, #28]
 8019cd2:	8302      	strh	r2, [r0, #24]
 8019cd4:	f365 13c7 	bfi	r3, r5, #7, #1
 8019cd8:	7283      	strb	r3, [r0, #10]
 8019cda:	f89d 3020 	ldrb.w	r3, [sp, #32]
 8019cde:	72c3      	strb	r3, [r0, #11]
 8019ce0:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
 8019ce4:	7303      	strb	r3, [r0, #12]
 8019ce6:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8019cea:	81c3      	strh	r3, [r0, #14]
 8019cec:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8019cf0:	8203      	strh	r3, [r0, #16]
 8019cf2:	4b01      	ldr	r3, [pc, #4]	; (8019cf8 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 8019cf4:	6003      	str	r3, [r0, #0]
 8019cf6:	bd30      	pop	{r4, r5, pc}
 8019cf8:	08031da0 	.word	0x08031da0

08019cfc <_ZNK8touchgfx9ConstFont4findEt>:
 8019cfc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8019cfe:	6944      	ldr	r4, [r0, #20]
 8019d00:	b3bc      	cbz	r4, 8019d72 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8019d02:	88a3      	ldrh	r3, [r4, #4]
 8019d04:	8b02      	ldrh	r2, [r0, #24]
 8019d06:	1acb      	subs	r3, r1, r3
 8019d08:	f102 32ff 	add.w	r2, r2, #4294967295
 8019d0c:	d431      	bmi.n	8019d72 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8019d0e:	4293      	cmp	r3, r2
 8019d10:	dd0c      	ble.n	8019d2c <_ZNK8touchgfx9ConstFont4findEt+0x30>
 8019d12:	230e      	movs	r3, #14
 8019d14:	fb03 4302 	mla	r3, r3, r2, r4
 8019d18:	889b      	ldrh	r3, [r3, #4]
 8019d1a:	1a5b      	subs	r3, r3, r1
 8019d1c:	1ad3      	subs	r3, r2, r3
 8019d1e:	429a      	cmp	r2, r3
 8019d20:	db27      	blt.n	8019d72 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8019d22:	2b00      	cmp	r3, #0
 8019d24:	bfbc      	itt	lt
 8019d26:	2302      	movlt	r3, #2
 8019d28:	fb92 f3f3 	sdivlt	r3, r2, r3
 8019d2c:	2500      	movs	r5, #0
 8019d2e:	260e      	movs	r6, #14
 8019d30:	4295      	cmp	r5, r2
 8019d32:	dc1e      	bgt.n	8019d72 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8019d34:	fb06 4003 	mla	r0, r6, r3, r4
 8019d38:	8887      	ldrh	r7, [r0, #4]
 8019d3a:	42b9      	cmp	r1, r7
 8019d3c:	d01a      	beq.n	8019d74 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 8019d3e:	d20d      	bcs.n	8019d5c <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8019d40:	1e5a      	subs	r2, r3, #1
 8019d42:	4295      	cmp	r5, r2
 8019d44:	dc15      	bgt.n	8019d72 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8019d46:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 8019d4a:	1a5b      	subs	r3, r3, r1
 8019d4c:	1ad3      	subs	r3, r2, r3
 8019d4e:	429a      	cmp	r2, r3
 8019d50:	db0f      	blt.n	8019d72 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8019d52:	429d      	cmp	r5, r3
 8019d54:	ddec      	ble.n	8019d30 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8019d56:	1953      	adds	r3, r2, r5
 8019d58:	105b      	asrs	r3, r3, #1
 8019d5a:	e7e9      	b.n	8019d30 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8019d5c:	1c5d      	adds	r5, r3, #1
 8019d5e:	42aa      	cmp	r2, r5
 8019d60:	db07      	blt.n	8019d72 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8019d62:	8a43      	ldrh	r3, [r0, #18]
 8019d64:	1acb      	subs	r3, r1, r3
 8019d66:	442b      	add	r3, r5
 8019d68:	429d      	cmp	r5, r3
 8019d6a:	dc02      	bgt.n	8019d72 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8019d6c:	429a      	cmp	r2, r3
 8019d6e:	dadf      	bge.n	8019d30 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8019d70:	e7f1      	b.n	8019d56 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 8019d72:	2000      	movs	r0, #0
 8019d74:	bdf0      	pop	{r4, r5, r6, r7, pc}

08019d76 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 8019d76:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8019d78:	4604      	mov	r4, r0
 8019d7a:	4617      	mov	r7, r2
 8019d7c:	461e      	mov	r6, r3
 8019d7e:	b911      	cbnz	r1, 8019d86 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 8019d80:	2500      	movs	r5, #0
 8019d82:	4628      	mov	r0, r5
 8019d84:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8019d86:	290a      	cmp	r1, #10
 8019d88:	d0fa      	beq.n	8019d80 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8019d8a:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8019d8e:	4291      	cmp	r1, r2
 8019d90:	d0f6      	beq.n	8019d80 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8019d92:	f242 020b 	movw	r2, #8203	; 0x200b
 8019d96:	4291      	cmp	r1, r2
 8019d98:	d0f2      	beq.n	8019d80 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8019d9a:	f7ff ffaf 	bl	8019cfc <_ZNK8touchgfx9ConstFont4findEt>
 8019d9e:	4605      	mov	r5, r0
 8019da0:	b950      	cbnz	r0, 8019db8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 8019da2:	6823      	ldr	r3, [r4, #0]
 8019da4:	4620      	mov	r0, r4
 8019da6:	691b      	ldr	r3, [r3, #16]
 8019da8:	4798      	blx	r3
 8019daa:	4601      	mov	r1, r0
 8019dac:	4620      	mov	r0, r4
 8019dae:	f7ff ffa5 	bl	8019cfc <_ZNK8touchgfx9ConstFont4findEt>
 8019db2:	4605      	mov	r5, r0
 8019db4:	2800      	cmp	r0, #0
 8019db6:	d0e3      	beq.n	8019d80 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8019db8:	6823      	ldr	r3, [r4, #0]
 8019dba:	4629      	mov	r1, r5
 8019dbc:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8019dbe:	4620      	mov	r0, r4
 8019dc0:	4798      	blx	r3
 8019dc2:	6038      	str	r0, [r7, #0]
 8019dc4:	6823      	ldr	r3, [r4, #0]
 8019dc6:	4620      	mov	r0, r4
 8019dc8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8019dca:	4798      	blx	r3
 8019dcc:	7030      	strb	r0, [r6, #0]
 8019dce:	e7d8      	b.n	8019d82 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

08019dd0 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
 8019dd0:	b538      	push	{r3, r4, r5, lr}
 8019dd2:	4605      	mov	r5, r0
 8019dd4:	f002 fb94 	bl	801c500 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8019dd8:	4604      	mov	r4, r0
 8019dda:	4628      	mov	r0, r5
 8019ddc:	f002 fad4 	bl	801c388 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8019de0:	2800      	cmp	r0, #0
 8019de2:	bf14      	ite	ne
 8019de4:	2002      	movne	r0, #2
 8019de6:	2000      	moveq	r0, #0
 8019de8:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 8019dec:	b280      	uxth	r0, r0
 8019dee:	bd38      	pop	{r3, r4, r5, pc}

08019df0 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
 8019df0:	b538      	push	{r3, r4, r5, lr}
 8019df2:	4605      	mov	r5, r0
 8019df4:	f002 fb84 	bl	801c500 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8019df8:	4604      	mov	r4, r0
 8019dfa:	4628      	mov	r0, r5
 8019dfc:	f002 fac4 	bl	801c388 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8019e00:	2800      	cmp	r0, #0
 8019e02:	bf14      	ite	ne
 8019e04:	2002      	movne	r0, #2
 8019e06:	2000      	moveq	r0, #0
 8019e08:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 8019e0c:	f040 0001 	orr.w	r0, r0, #1
 8019e10:	b280      	uxth	r0, r0
 8019e12:	bd38      	pop	{r3, r4, r5, pc}

08019e14 <_ZN8touchgfx4clzuEm>:
 8019e14:	4603      	mov	r3, r0
 8019e16:	b1c8      	cbz	r0, 8019e4c <_ZN8touchgfx4clzuEm+0x38>
 8019e18:	0c02      	lsrs	r2, r0, #16
 8019e1a:	0412      	lsls	r2, r2, #16
 8019e1c:	b9a2      	cbnz	r2, 8019e48 <_ZN8touchgfx4clzuEm+0x34>
 8019e1e:	0403      	lsls	r3, r0, #16
 8019e20:	2010      	movs	r0, #16
 8019e22:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8019e26:	bf04      	itt	eq
 8019e28:	021b      	lsleq	r3, r3, #8
 8019e2a:	3008      	addeq	r0, #8
 8019e2c:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8019e30:	bf04      	itt	eq
 8019e32:	011b      	lsleq	r3, r3, #4
 8019e34:	3004      	addeq	r0, #4
 8019e36:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8019e3a:	bf04      	itt	eq
 8019e3c:	009b      	lsleq	r3, r3, #2
 8019e3e:	3002      	addeq	r0, #2
 8019e40:	2b00      	cmp	r3, #0
 8019e42:	db04      	blt.n	8019e4e <_ZN8touchgfx4clzuEm+0x3a>
 8019e44:	3001      	adds	r0, #1
 8019e46:	4770      	bx	lr
 8019e48:	2000      	movs	r0, #0
 8019e4a:	e7ea      	b.n	8019e22 <_ZN8touchgfx4clzuEm+0xe>
 8019e4c:	2020      	movs	r0, #32
 8019e4e:	4770      	bx	lr

08019e50 <_ZN8touchgfx7muldivuEmmmRm>:
 8019e50:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8019e54:	460f      	mov	r7, r1
 8019e56:	4615      	mov	r5, r2
 8019e58:	461e      	mov	r6, r3
 8019e5a:	4601      	mov	r1, r0
 8019e5c:	b100      	cbz	r0, 8019e60 <_ZN8touchgfx7muldivuEmmmRm+0x10>
 8019e5e:	b927      	cbnz	r7, 8019e6a <_ZN8touchgfx7muldivuEmmmRm+0x1a>
 8019e60:	2000      	movs	r0, #0
 8019e62:	6030      	str	r0, [r6, #0]
 8019e64:	b002      	add	sp, #8
 8019e66:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8019e6a:	f7ff ffd3 	bl	8019e14 <_ZN8touchgfx4clzuEm>
 8019e6e:	b980      	cbnz	r0, 8019e92 <_ZN8touchgfx7muldivuEmmmRm+0x42>
 8019e70:	4638      	mov	r0, r7
 8019e72:	f7ff ffcf 	bl	8019e14 <_ZN8touchgfx4clzuEm>
 8019e76:	2800      	cmp	r0, #0
 8019e78:	dd05      	ble.n	8019e86 <_ZN8touchgfx7muldivuEmmmRm+0x36>
 8019e7a:	4633      	mov	r3, r6
 8019e7c:	462a      	mov	r2, r5
 8019e7e:	4638      	mov	r0, r7
 8019e80:	f7ff ffe6 	bl	8019e50 <_ZN8touchgfx7muldivuEmmmRm>
 8019e84:	e7ee      	b.n	8019e64 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8019e86:	f04f 33ff 	mov.w	r3, #4294967295
 8019e8a:	6033      	str	r3, [r6, #0]
 8019e8c:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8019e90:	e7e8      	b.n	8019e64 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8019e92:	fa37 f800 	lsrs.w	r8, r7, r0
 8019e96:	fb07 f301 	mul.w	r3, r7, r1
 8019e9a:	d105      	bne.n	8019ea8 <_ZN8touchgfx7muldivuEmmmRm+0x58>
 8019e9c:	fbb3 f0f5 	udiv	r0, r3, r5
 8019ea0:	fb05 3510 	mls	r5, r5, r0, r3
 8019ea4:	6035      	str	r5, [r6, #0]
 8019ea6:	e7dd      	b.n	8019e64 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8019ea8:	2301      	movs	r3, #1
 8019eaa:	fa01 fa00 	lsl.w	sl, r1, r0
 8019eae:	fa03 f000 	lsl.w	r0, r3, r0
 8019eb2:	3801      	subs	r0, #1
 8019eb4:	462a      	mov	r2, r5
 8019eb6:	4633      	mov	r3, r6
 8019eb8:	4038      	ands	r0, r7
 8019eba:	f7ff ffc9 	bl	8019e50 <_ZN8touchgfx7muldivuEmmmRm>
 8019ebe:	fbba f9f5 	udiv	r9, sl, r5
 8019ec2:	462a      	mov	r2, r5
 8019ec4:	4607      	mov	r7, r0
 8019ec6:	ab01      	add	r3, sp, #4
 8019ec8:	fb05 a119 	mls	r1, r5, r9, sl
 8019ecc:	4640      	mov	r0, r8
 8019ece:	f7ff ffbf 	bl	8019e50 <_ZN8touchgfx7muldivuEmmmRm>
 8019ed2:	9b01      	ldr	r3, [sp, #4]
 8019ed4:	6832      	ldr	r2, [r6, #0]
 8019ed6:	fb08 f409 	mul.w	r4, r8, r9
 8019eda:	441a      	add	r2, r3
 8019edc:	fbb2 f3f5 	udiv	r3, r2, r5
 8019ee0:	441c      	add	r4, r3
 8019ee2:	443c      	add	r4, r7
 8019ee4:	4420      	add	r0, r4
 8019ee6:	fb05 2513 	mls	r5, r5, r3, r2
 8019eea:	e7db      	b.n	8019ea4 <_ZN8touchgfx7muldivuEmmmRm+0x54>

08019eec <_ZN8touchgfx6muldivElllRl>:
 8019eec:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8019eee:	2800      	cmp	r0, #0
 8019ef0:	bfba      	itte	lt
 8019ef2:	4240      	neglt	r0, r0
 8019ef4:	f04f 34ff 	movlt.w	r4, #4294967295
 8019ef8:	2401      	movge	r4, #1
 8019efa:	2900      	cmp	r1, #0
 8019efc:	bfbc      	itt	lt
 8019efe:	4249      	neglt	r1, r1
 8019f00:	4264      	neglt	r4, r4
 8019f02:	2a00      	cmp	r2, #0
 8019f04:	bfb6      	itet	lt
 8019f06:	4265      	neglt	r5, r4
 8019f08:	4625      	movge	r5, r4
 8019f0a:	4252      	neglt	r2, r2
 8019f0c:	4288      	cmp	r0, r1
 8019f0e:	461e      	mov	r6, r3
 8019f10:	bfc2      	ittt	gt
 8019f12:	4603      	movgt	r3, r0
 8019f14:	4608      	movgt	r0, r1
 8019f16:	4619      	movgt	r1, r3
 8019f18:	ab01      	add	r3, sp, #4
 8019f1a:	f7ff ff99 	bl	8019e50 <_ZN8touchgfx7muldivuEmmmRm>
 8019f1e:	9b01      	ldr	r3, [sp, #4]
 8019f20:	4368      	muls	r0, r5
 8019f22:	435c      	muls	r4, r3
 8019f24:	6034      	str	r4, [r6, #0]
 8019f26:	b002      	add	sp, #8
 8019f28:	bd70      	pop	{r4, r5, r6, pc}

08019f2a <_ZN8touchgfx6muldivElll>:
 8019f2a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8019f2c:	4606      	mov	r6, r0
 8019f2e:	ab01      	add	r3, sp, #4
 8019f30:	460d      	mov	r5, r1
 8019f32:	4614      	mov	r4, r2
 8019f34:	f7ff ffda 	bl	8019eec <_ZN8touchgfx6muldivElllRl>
 8019f38:	2e00      	cmp	r6, #0
 8019f3a:	db20      	blt.n	8019f7e <_ZN8touchgfx6muldivElll+0x54>
 8019f3c:	bf14      	ite	ne
 8019f3e:	2301      	movne	r3, #1
 8019f40:	2300      	moveq	r3, #0
 8019f42:	2d00      	cmp	r5, #0
 8019f44:	db1e      	blt.n	8019f84 <_ZN8touchgfx6muldivElll+0x5a>
 8019f46:	bf14      	ite	ne
 8019f48:	2201      	movne	r2, #1
 8019f4a:	2200      	moveq	r2, #0
 8019f4c:	2c00      	cmp	r4, #0
 8019f4e:	fb03 f202 	mul.w	r2, r3, r2
 8019f52:	db1a      	blt.n	8019f8a <_ZN8touchgfx6muldivElll+0x60>
 8019f54:	bf14      	ite	ne
 8019f56:	2301      	movne	r3, #1
 8019f58:	2300      	moveq	r3, #0
 8019f5a:	4353      	muls	r3, r2
 8019f5c:	2b01      	cmp	r3, #1
 8019f5e:	d117      	bne.n	8019f90 <_ZN8touchgfx6muldivElll+0x66>
 8019f60:	9b01      	ldr	r3, [sp, #4]
 8019f62:	2c00      	cmp	r4, #0
 8019f64:	bfb8      	it	lt
 8019f66:	4264      	neglt	r4, r4
 8019f68:	2b00      	cmp	r3, #0
 8019f6a:	f104 0401 	add.w	r4, r4, #1
 8019f6e:	bfb8      	it	lt
 8019f70:	425b      	neglt	r3, r3
 8019f72:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 8019f76:	db00      	blt.n	8019f7a <_ZN8touchgfx6muldivElll+0x50>
 8019f78:	3001      	adds	r0, #1
 8019f7a:	b002      	add	sp, #8
 8019f7c:	bd70      	pop	{r4, r5, r6, pc}
 8019f7e:	f04f 33ff 	mov.w	r3, #4294967295
 8019f82:	e7de      	b.n	8019f42 <_ZN8touchgfx6muldivElll+0x18>
 8019f84:	f04f 32ff 	mov.w	r2, #4294967295
 8019f88:	e7e0      	b.n	8019f4c <_ZN8touchgfx6muldivElll+0x22>
 8019f8a:	f04f 33ff 	mov.w	r3, #4294967295
 8019f8e:	e7e4      	b.n	8019f5a <_ZN8touchgfx6muldivElll+0x30>
 8019f90:	3301      	adds	r3, #1
 8019f92:	d1f2      	bne.n	8019f7a <_ZN8touchgfx6muldivElll+0x50>
 8019f94:	9b01      	ldr	r3, [sp, #4]
 8019f96:	2c00      	cmp	r4, #0
 8019f98:	bfb8      	it	lt
 8019f9a:	4264      	neglt	r4, r4
 8019f9c:	2b00      	cmp	r3, #0
 8019f9e:	bfb8      	it	lt
 8019fa0:	425b      	neglt	r3, r3
 8019fa2:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 8019fa6:	bfc8      	it	gt
 8019fa8:	f100 30ff 	addgt.w	r0, r0, #4294967295
 8019fac:	e7e5      	b.n	8019f7a <_ZN8touchgfx6muldivElll+0x50>

08019fae <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 8019fae:	2000      	movs	r0, #0
 8019fb0:	4770      	bx	lr

08019fb2 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 8019fb2:	2001      	movs	r0, #1
 8019fb4:	4770      	bx	lr

08019fb6 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 8019fb6:	2002      	movs	r0, #2
 8019fb8:	4770      	bx	lr

08019fba <_ZN8touchgfx6ScreenD1Ev>:
 8019fba:	4770      	bx	lr

08019fbc <_ZN8touchgfx12GestureEventD1Ev>:
 8019fbc:	4770      	bx	lr

08019fbe <_ZN8touchgfx9DragEventD1Ev>:
 8019fbe:	4770      	bx	lr

08019fc0 <_ZN8touchgfx10ClickEventD1Ev>:
 8019fc0:	4770      	bx	lr

08019fc2 <_ZN8touchgfx10ClickEventD0Ev>:
 8019fc2:	b510      	push	{r4, lr}
 8019fc4:	210c      	movs	r1, #12
 8019fc6:	4604      	mov	r4, r0
 8019fc8:	f012 fd8f 	bl	802caea <_ZdlPvj>
 8019fcc:	4620      	mov	r0, r4
 8019fce:	bd10      	pop	{r4, pc}

08019fd0 <_ZN8touchgfx9DragEventD0Ev>:
 8019fd0:	b510      	push	{r4, lr}
 8019fd2:	2110      	movs	r1, #16
 8019fd4:	4604      	mov	r4, r0
 8019fd6:	f012 fd88 	bl	802caea <_ZdlPvj>
 8019fda:	4620      	mov	r0, r4
 8019fdc:	bd10      	pop	{r4, pc}

08019fde <_ZN8touchgfx12GestureEventD0Ev>:
 8019fde:	b510      	push	{r4, lr}
 8019fe0:	210c      	movs	r1, #12
 8019fe2:	4604      	mov	r4, r0
 8019fe4:	f012 fd81 	bl	802caea <_ZdlPvj>
 8019fe8:	4620      	mov	r0, r4
 8019fea:	bd10      	pop	{r4, pc}

08019fec <_ZN8touchgfx6ScreenD0Ev>:
 8019fec:	b510      	push	{r4, lr}
 8019fee:	213c      	movs	r1, #60	; 0x3c
 8019ff0:	4604      	mov	r4, r0
 8019ff2:	f012 fd7a 	bl	802caea <_ZdlPvj>
 8019ff6:	4620      	mov	r0, r4
 8019ff8:	bd10      	pop	{r4, pc}
	...

08019ffc <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 8019ffc:	b530      	push	{r4, r5, lr}
 8019ffe:	460d      	mov	r5, r1
 801a000:	6b01      	ldr	r1, [r0, #48]	; 0x30
 801a002:	b087      	sub	sp, #28
 801a004:	4604      	mov	r4, r0
 801a006:	b301      	cbz	r1, 801a04a <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 801a008:	a801      	add	r0, sp, #4
 801a00a:	f7ff fe3d 	bl	8019c88 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a00e:	892a      	ldrh	r2, [r5, #8]
 801a010:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 801a014:	7928      	ldrb	r0, [r5, #4]
 801a016:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 801a01a:	f88d 0010 	strb.w	r0, [sp, #16]
 801a01e:	1ad2      	subs	r2, r2, r3
 801a020:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 801a022:	6b20      	ldr	r0, [r4, #48]	; 0x30
 801a024:	f8ad 1012 	strh.w	r1, [sp, #18]
 801a028:	441a      	add	r2, r3
 801a02a:	896b      	ldrh	r3, [r5, #10]
 801a02c:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 801a030:	f8ad 2014 	strh.w	r2, [sp, #20]
 801a034:	1b5b      	subs	r3, r3, r5
 801a036:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 801a038:	442b      	add	r3, r5
 801a03a:	4d05      	ldr	r5, [pc, #20]	; (801a050 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 801a03c:	9503      	str	r5, [sp, #12]
 801a03e:	f8ad 3016 	strh.w	r3, [sp, #22]
 801a042:	6803      	ldr	r3, [r0, #0]
 801a044:	a903      	add	r1, sp, #12
 801a046:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801a048:	4798      	blx	r3
 801a04a:	b007      	add	sp, #28
 801a04c:	bd30      	pop	{r4, r5, pc}
 801a04e:	bf00      	nop
 801a050:	08031e28 	.word	0x08031e28

0801a054 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 801a054:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801a058:	6b03      	ldr	r3, [r0, #48]	; 0x30
 801a05a:	b08a      	sub	sp, #40	; 0x28
 801a05c:	4604      	mov	r4, r0
 801a05e:	460d      	mov	r5, r1
 801a060:	b113      	cbz	r3, 801a068 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 801a062:	790b      	ldrb	r3, [r1, #4]
 801a064:	2b00      	cmp	r3, #0
 801a066:	d044      	beq.n	801a0f2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801a068:	f104 0804 	add.w	r8, r4, #4
 801a06c:	4641      	mov	r1, r8
 801a06e:	a803      	add	r0, sp, #12
 801a070:	f7ff fe0a 	bl	8019c88 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a074:	792b      	ldrb	r3, [r5, #4]
 801a076:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801a07a:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 801a07e:	b983      	cbnz	r3, 801a0a2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 801a080:	892a      	ldrh	r2, [r5, #8]
 801a082:	88e9      	ldrh	r1, [r5, #6]
 801a084:	f104 0336 	add.w	r3, r4, #54	; 0x36
 801a088:	1b92      	subs	r2, r2, r6
 801a08a:	1bc9      	subs	r1, r1, r7
 801a08c:	9301      	str	r3, [sp, #4]
 801a08e:	f104 0334 	add.w	r3, r4, #52	; 0x34
 801a092:	9300      	str	r3, [sp, #0]
 801a094:	b212      	sxth	r2, r2
 801a096:	f104 0330 	add.w	r3, r4, #48	; 0x30
 801a09a:	b209      	sxth	r1, r1
 801a09c:	4640      	mov	r0, r8
 801a09e:	f7f8 fc39 	bl	8012914 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 801a0a2:	6b21      	ldr	r1, [r4, #48]	; 0x30
 801a0a4:	b329      	cbz	r1, 801a0f2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801a0a6:	a805      	add	r0, sp, #20
 801a0a8:	f7ff fdee 	bl	8019c88 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a0ac:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 801a0b0:	792b      	ldrb	r3, [r5, #4]
 801a0b2:	6b20      	ldr	r0, [r4, #48]	; 0x30
 801a0b4:	f88d 3020 	strb.w	r3, [sp, #32]
 801a0b8:	1abf      	subs	r7, r7, r2
 801a0ba:	88ea      	ldrh	r2, [r5, #6]
 801a0bc:	4417      	add	r7, r2
 801a0be:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 801a0c0:	4417      	add	r7, r2
 801a0c2:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 801a0c6:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 801a0ca:	1ab6      	subs	r6, r6, r2
 801a0cc:	892a      	ldrh	r2, [r5, #8]
 801a0ce:	4416      	add	r6, r2
 801a0d0:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 801a0d2:	4416      	add	r6, r2
 801a0d4:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 801a0d8:	4a07      	ldr	r2, [pc, #28]	; (801a0f8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 801a0da:	9207      	str	r2, [sp, #28]
 801a0dc:	2600      	movs	r6, #0
 801a0de:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 801a0e2:	6803      	ldr	r3, [r0, #0]
 801a0e4:	a907      	add	r1, sp, #28
 801a0e6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801a0e8:	4798      	blx	r3
 801a0ea:	792b      	ldrb	r3, [r5, #4]
 801a0ec:	b10b      	cbz	r3, 801a0f2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801a0ee:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 801a0f2:	b00a      	add	sp, #40	; 0x28
 801a0f4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801a0f8:	08031e00 	.word	0x08031e00

0801a0fc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 801a0fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801a100:	460c      	mov	r4, r1
 801a102:	6b01      	ldr	r1, [r0, #48]	; 0x30
 801a104:	b088      	sub	sp, #32
 801a106:	4605      	mov	r5, r0
 801a108:	2900      	cmp	r1, #0
 801a10a:	d06d      	beq.n	801a1e8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 801a10c:	4668      	mov	r0, sp
 801a10e:	f7ff fdbb 	bl	8019c88 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a112:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 801a114:	88e3      	ldrh	r3, [r4, #6]
 801a116:	f9bd 8000 	ldrsh.w	r8, [sp]
 801a11a:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 801a11e:	440b      	add	r3, r1
 801a120:	b21b      	sxth	r3, r3
 801a122:	4543      	cmp	r3, r8
 801a124:	db31      	blt.n	801a18a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801a126:	f8bd c004 	ldrh.w	ip, [sp, #4]
 801a12a:	44c4      	add	ip, r8
 801a12c:	fa0f fc8c 	sxth.w	ip, ip
 801a130:	4563      	cmp	r3, ip
 801a132:	da2a      	bge.n	801a18a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801a134:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 801a136:	8926      	ldrh	r6, [r4, #8]
 801a138:	4416      	add	r6, r2
 801a13a:	b236      	sxth	r6, r6
 801a13c:	42be      	cmp	r6, r7
 801a13e:	db24      	blt.n	801a18a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801a140:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 801a144:	4438      	add	r0, r7
 801a146:	b200      	sxth	r0, r0
 801a148:	4286      	cmp	r6, r0
 801a14a:	da1e      	bge.n	801a18a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801a14c:	8963      	ldrh	r3, [r4, #10]
 801a14e:	4419      	add	r1, r3
 801a150:	b209      	sxth	r1, r1
 801a152:	4541      	cmp	r1, r8
 801a154:	db08      	blt.n	801a168 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801a156:	4561      	cmp	r1, ip
 801a158:	da06      	bge.n	801a168 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801a15a:	89a3      	ldrh	r3, [r4, #12]
 801a15c:	441a      	add	r2, r3
 801a15e:	b212      	sxth	r2, r2
 801a160:	42ba      	cmp	r2, r7
 801a162:	db01      	blt.n	801a168 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801a164:	4282      	cmp	r2, r0
 801a166:	db10      	blt.n	801a18a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801a168:	4b21      	ldr	r3, [pc, #132]	; (801a1f0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 801a16a:	9304      	str	r3, [sp, #16]
 801a16c:	2302      	movs	r3, #2
 801a16e:	f88d 3014 	strb.w	r3, [sp, #20]
 801a172:	6b28      	ldr	r0, [r5, #48]	; 0x30
 801a174:	2300      	movs	r3, #0
 801a176:	f8ad 3016 	strh.w	r3, [sp, #22]
 801a17a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801a17e:	f8ad 301a 	strh.w	r3, [sp, #26]
 801a182:	6803      	ldr	r3, [r0, #0]
 801a184:	a904      	add	r1, sp, #16
 801a186:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801a188:	4798      	blx	r3
 801a18a:	1d29      	adds	r1, r5, #4
 801a18c:	a802      	add	r0, sp, #8
 801a18e:	f7ff fd7b 	bl	8019c88 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a192:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801a196:	88e0      	ldrh	r0, [r4, #6]
 801a198:	7921      	ldrb	r1, [r4, #4]
 801a19a:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 801a19e:	8922      	ldrh	r2, [r4, #8]
 801a1a0:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 801a1a2:	f88d 1014 	strb.w	r1, [sp, #20]
 801a1a6:	eba3 0808 	sub.w	r8, r3, r8
 801a1aa:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801a1ae:	1bdf      	subs	r7, r3, r7
 801a1b0:	b2bb      	uxth	r3, r7
 801a1b2:	fa1f f888 	uxth.w	r8, r8
 801a1b6:	8967      	ldrh	r7, [r4, #10]
 801a1b8:	89a4      	ldrh	r4, [r4, #12]
 801a1ba:	4440      	add	r0, r8
 801a1bc:	4460      	add	r0, ip
 801a1be:	441a      	add	r2, r3
 801a1c0:	44b8      	add	r8, r7
 801a1c2:	4423      	add	r3, r4
 801a1c4:	f8ad 0016 	strh.w	r0, [sp, #22]
 801a1c8:	4433      	add	r3, r6
 801a1ca:	4432      	add	r2, r6
 801a1cc:	44e0      	add	r8, ip
 801a1ce:	4c09      	ldr	r4, [pc, #36]	; (801a1f4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 801a1d0:	6b28      	ldr	r0, [r5, #48]	; 0x30
 801a1d2:	9404      	str	r4, [sp, #16]
 801a1d4:	f8ad 2018 	strh.w	r2, [sp, #24]
 801a1d8:	f8ad 801a 	strh.w	r8, [sp, #26]
 801a1dc:	f8ad 301c 	strh.w	r3, [sp, #28]
 801a1e0:	6803      	ldr	r3, [r0, #0]
 801a1e2:	a904      	add	r1, sp, #16
 801a1e4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801a1e6:	4798      	blx	r3
 801a1e8:	b008      	add	sp, #32
 801a1ea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801a1ee:	bf00      	nop
 801a1f0:	08031e00 	.word	0x08031e00
 801a1f4:	08031e14 	.word	0x08031e14

0801a1f8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 801a1f8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801a1fa:	4604      	mov	r4, r0
 801a1fc:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 801a200:	3201      	adds	r2, #1
 801a202:	d112      	bne.n	801a22a <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 801a204:	6803      	ldr	r3, [r0, #0]
 801a206:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 801a20a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801a20e:	f8ad 1004 	strh.w	r1, [sp, #4]
 801a212:	2500      	movs	r5, #0
 801a214:	9500      	str	r5, [sp, #0]
 801a216:	466d      	mov	r5, sp
 801a218:	4629      	mov	r1, r5
 801a21a:	f8ad 2006 	strh.w	r2, [sp, #6]
 801a21e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801a220:	4798      	blx	r3
 801a222:	e895 0003 	ldmia.w	r5, {r0, r1}
 801a226:	e884 0003 	stmia.w	r4, {r0, r1}
 801a22a:	4620      	mov	r0, r4
 801a22c:	b003      	add	sp, #12
 801a22e:	bd30      	pop	{r4, r5, pc}

0801a230 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 801a230:	b513      	push	{r0, r1, r4, lr}
 801a232:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 801a236:	3301      	adds	r3, #1
 801a238:	4604      	mov	r4, r0
 801a23a:	d109      	bne.n	801a250 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 801a23c:	4601      	mov	r1, r0
 801a23e:	4668      	mov	r0, sp
 801a240:	f7ff fd22 	bl	8019c88 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a244:	f8bd 3000 	ldrh.w	r3, [sp]
 801a248:	8423      	strh	r3, [r4, #32]
 801a24a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801a24e:	8463      	strh	r3, [r4, #34]	; 0x22
 801a250:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 801a254:	b002      	add	sp, #8
 801a256:	bd10      	pop	{r4, pc}

0801a258 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 801a258:	b513      	push	{r0, r1, r4, lr}
 801a25a:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 801a25e:	3301      	adds	r3, #1
 801a260:	4604      	mov	r4, r0
 801a262:	d109      	bne.n	801a278 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 801a264:	4601      	mov	r1, r0
 801a266:	4668      	mov	r0, sp
 801a268:	f7ff fd0e 	bl	8019c88 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a26c:	f8bd 3000 	ldrh.w	r3, [sp]
 801a270:	8423      	strh	r3, [r4, #32]
 801a272:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801a276:	8463      	strh	r3, [r4, #34]	; 0x22
 801a278:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 801a27c:	b002      	add	sp, #8
 801a27e:	bd10      	pop	{r4, pc}

0801a280 <_ZN8touchgfx6ScreenC1Ev>:
 801a280:	b570      	push	{r4, r5, r6, lr}
 801a282:	4605      	mov	r5, r0
 801a284:	4b16      	ldr	r3, [pc, #88]	; (801a2e0 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 801a286:	f845 3b04 	str.w	r3, [r5], #4
 801a28a:	2300      	movs	r3, #0
 801a28c:	8103      	strh	r3, [r0, #8]
 801a28e:	8143      	strh	r3, [r0, #10]
 801a290:	8183      	strh	r3, [r0, #12]
 801a292:	81c3      	strh	r3, [r0, #14]
 801a294:	8203      	strh	r3, [r0, #16]
 801a296:	8243      	strh	r3, [r0, #18]
 801a298:	8283      	strh	r3, [r0, #20]
 801a29a:	82c3      	strh	r3, [r0, #22]
 801a29c:	e9c0 3306 	strd	r3, r3, [r0, #24]
 801a2a0:	6203      	str	r3, [r0, #32]
 801a2a2:	8483      	strh	r3, [r0, #36]	; 0x24
 801a2a4:	84c3      	strh	r3, [r0, #38]	; 0x26
 801a2a6:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 801a2aa:	4a0e      	ldr	r2, [pc, #56]	; (801a2e4 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 801a2ac:	6343      	str	r3, [r0, #52]	; 0x34
 801a2ae:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 801a2b2:	4b0d      	ldr	r3, [pc, #52]	; (801a2e8 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 801a2b4:	6042      	str	r2, [r0, #4]
 801a2b6:	f9b3 6000 	ldrsh.w	r6, [r3]
 801a2ba:	6b93      	ldr	r3, [r2, #56]	; 0x38
 801a2bc:	4a0b      	ldr	r2, [pc, #44]	; (801a2ec <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 801a2be:	4604      	mov	r4, r0
 801a2c0:	2101      	movs	r1, #1
 801a2c2:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 801a2c6:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 801a2ca:	f9b2 1000 	ldrsh.w	r1, [r2]
 801a2ce:	4628      	mov	r0, r5
 801a2d0:	4798      	blx	r3
 801a2d2:	6863      	ldr	r3, [r4, #4]
 801a2d4:	4628      	mov	r0, r5
 801a2d6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801a2d8:	4631      	mov	r1, r6
 801a2da:	4798      	blx	r3
 801a2dc:	4620      	mov	r0, r4
 801a2de:	bd70      	pop	{r4, r5, r6, pc}
 801a2e0:	08031e3c 	.word	0x08031e3c
 801a2e4:	080314c0 	.word	0x080314c0
 801a2e8:	20013842 	.word	0x20013842
 801a2ec:	20013840 	.word	0x20013840

0801a2f0 <_ZN8touchgfx6Screen4drawEv>:
 801a2f0:	b507      	push	{r0, r1, r2, lr}
 801a2f2:	4b09      	ldr	r3, [pc, #36]	; (801a318 <_ZN8touchgfx6Screen4drawEv+0x28>)
 801a2f4:	f9b3 2000 	ldrsh.w	r2, [r3]
 801a2f8:	4b08      	ldr	r3, [pc, #32]	; (801a31c <_ZN8touchgfx6Screen4drawEv+0x2c>)
 801a2fa:	f8ad 2004 	strh.w	r2, [sp, #4]
 801a2fe:	f9b3 3000 	ldrsh.w	r3, [r3]
 801a302:	f8ad 3006 	strh.w	r3, [sp, #6]
 801a306:	6803      	ldr	r3, [r0, #0]
 801a308:	2100      	movs	r1, #0
 801a30a:	9100      	str	r1, [sp, #0]
 801a30c:	689b      	ldr	r3, [r3, #8]
 801a30e:	4669      	mov	r1, sp
 801a310:	4798      	blx	r3
 801a312:	b003      	add	sp, #12
 801a314:	f85d fb04 	ldr.w	pc, [sp], #4
 801a318:	20013840 	.word	0x20013840
 801a31c:	20013842 	.word	0x20013842

0801a320 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 801a320:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a324:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 801a328:	2b00      	cmp	r3, #0
 801a32a:	b089      	sub	sp, #36	; 0x24
 801a32c:	4680      	mov	r8, r0
 801a32e:	460c      	mov	r4, r1
 801a330:	4615      	mov	r5, r2
 801a332:	dd0e      	ble.n	801a352 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801a334:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 801a338:	2b00      	cmp	r3, #0
 801a33a:	dd0a      	ble.n	801a352 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801a33c:	4628      	mov	r0, r5
 801a33e:	f7ff ff5b 	bl	801a1f8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801a342:	4621      	mov	r1, r4
 801a344:	f7fe fa3d 	bl	80187c2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 801a348:	69eb      	ldr	r3, [r5, #28]
 801a34a:	b928      	cbnz	r0, 801a358 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 801a34c:	461d      	mov	r5, r3
 801a34e:	2b00      	cmp	r3, #0
 801a350:	d1f4      	bne.n	801a33c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 801a352:	b009      	add	sp, #36	; 0x24
 801a354:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a358:	ae04      	add	r6, sp, #16
 801a35a:	2b00      	cmp	r3, #0
 801a35c:	f000 80b5 	beq.w	801a4ca <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801a360:	682b      	ldr	r3, [r5, #0]
 801a362:	4629      	mov	r1, r5
 801a364:	68db      	ldr	r3, [r3, #12]
 801a366:	a802      	add	r0, sp, #8
 801a368:	4798      	blx	r3
 801a36a:	4628      	mov	r0, r5
 801a36c:	f7ff ff60 	bl	801a230 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 801a370:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 801a374:	4407      	add	r7, r0
 801a376:	4628      	mov	r0, r5
 801a378:	f7ff ff6e 	bl	801a258 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801a37c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801a380:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 801a384:	f8ad 2014 	strh.w	r2, [sp, #20]
 801a388:	4418      	add	r0, r3
 801a38a:	4621      	mov	r1, r4
 801a38c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 801a390:	f8ad 0012 	strh.w	r0, [sp, #18]
 801a394:	b23f      	sxth	r7, r7
 801a396:	4630      	mov	r0, r6
 801a398:	f8ad 3016 	strh.w	r3, [sp, #22]
 801a39c:	f8ad 7010 	strh.w	r7, [sp, #16]
 801a3a0:	f7f8 fb9c 	bl	8012adc <_ZN8touchgfx4RectaNERKS0_>
 801a3a4:	4628      	mov	r0, r5
 801a3a6:	f7ff ff27 	bl	801a1f8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801a3aa:	4602      	mov	r2, r0
 801a3ac:	e896 0003 	ldmia.w	r6, {r0, r1}
 801a3b0:	ab06      	add	r3, sp, #24
 801a3b2:	e883 0003 	stmia.w	r3, {r0, r1}
 801a3b6:	4611      	mov	r1, r2
 801a3b8:	4618      	mov	r0, r3
 801a3ba:	f7f8 fb8f 	bl	8012adc <_ZN8touchgfx4RectaNERKS0_>
 801a3be:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801a3c2:	f9b4 1000 	ldrsh.w	r1, [r4]
 801a3c6:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 801a3ca:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 801a3ce:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 801a3d2:	4299      	cmp	r1, r3
 801a3d4:	d10b      	bne.n	801a3ee <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801a3d6:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801a3da:	4552      	cmp	r2, sl
 801a3dc:	d107      	bne.n	801a3ee <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801a3de:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 801a3e2:	455a      	cmp	r2, fp
 801a3e4:	d103      	bne.n	801a3ee <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801a3e6:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 801a3ea:	454a      	cmp	r2, r9
 801a3ec:	d06d      	beq.n	801a4ca <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801a3ee:	f1bb 0f00 	cmp.w	fp, #0
 801a3f2:	dd65      	ble.n	801a4c0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 801a3f4:	f1b9 0f00 	cmp.w	r9, #0
 801a3f8:	dd62      	ble.n	801a4c0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 801a3fa:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801a3fe:	fa1f f08a 	uxth.w	r0, sl
 801a402:	4552      	cmp	r2, sl
 801a404:	9000      	str	r0, [sp, #0]
 801a406:	da12      	bge.n	801a42e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 801a408:	9301      	str	r3, [sp, #4]
 801a40a:	9b00      	ldr	r3, [sp, #0]
 801a40c:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801a410:	f8ad 2012 	strh.w	r2, [sp, #18]
 801a414:	1a9a      	subs	r2, r3, r2
 801a416:	f8ad 1010 	strh.w	r1, [sp, #16]
 801a41a:	f8ad 0014 	strh.w	r0, [sp, #20]
 801a41e:	f8ad 2016 	strh.w	r2, [sp, #22]
 801a422:	69ea      	ldr	r2, [r5, #28]
 801a424:	4631      	mov	r1, r6
 801a426:	4640      	mov	r0, r8
 801a428:	f7ff ff7a 	bl	801a320 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801a42c:	9b01      	ldr	r3, [sp, #4]
 801a42e:	f9b4 2000 	ldrsh.w	r2, [r4]
 801a432:	429a      	cmp	r2, r3
 801a434:	b29f      	uxth	r7, r3
 801a436:	da0d      	bge.n	801a454 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 801a438:	f8ad 2010 	strh.w	r2, [sp, #16]
 801a43c:	1aba      	subs	r2, r7, r2
 801a43e:	f8ad a012 	strh.w	sl, [sp, #18]
 801a442:	f8ad 2014 	strh.w	r2, [sp, #20]
 801a446:	f8ad 9016 	strh.w	r9, [sp, #22]
 801a44a:	69ea      	ldr	r2, [r5, #28]
 801a44c:	4631      	mov	r1, r6
 801a44e:	4640      	mov	r0, r8
 801a450:	f7ff ff66 	bl	801a320 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801a454:	8822      	ldrh	r2, [r4, #0]
 801a456:	88a3      	ldrh	r3, [r4, #4]
 801a458:	445f      	add	r7, fp
 801a45a:	4413      	add	r3, r2
 801a45c:	b29b      	uxth	r3, r3
 801a45e:	b2bf      	uxth	r7, r7
 801a460:	b23a      	sxth	r2, r7
 801a462:	b219      	sxth	r1, r3
 801a464:	4291      	cmp	r1, r2
 801a466:	dd0d      	ble.n	801a484 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 801a468:	1bdb      	subs	r3, r3, r7
 801a46a:	f8ad 2010 	strh.w	r2, [sp, #16]
 801a46e:	f8ad a012 	strh.w	sl, [sp, #18]
 801a472:	f8ad 3014 	strh.w	r3, [sp, #20]
 801a476:	f8ad 9016 	strh.w	r9, [sp, #22]
 801a47a:	69ea      	ldr	r2, [r5, #28]
 801a47c:	4631      	mov	r1, r6
 801a47e:	4640      	mov	r0, r8
 801a480:	f7ff ff4e 	bl	801a320 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801a484:	88e2      	ldrh	r2, [r4, #6]
 801a486:	8863      	ldrh	r3, [r4, #2]
 801a488:	4413      	add	r3, r2
 801a48a:	9a00      	ldr	r2, [sp, #0]
 801a48c:	444a      	add	r2, r9
 801a48e:	b29b      	uxth	r3, r3
 801a490:	fa1f f982 	uxth.w	r9, r2
 801a494:	fa0f f289 	sxth.w	r2, r9
 801a498:	b219      	sxth	r1, r3
 801a49a:	428a      	cmp	r2, r1
 801a49c:	da15      	bge.n	801a4ca <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801a49e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801a4a2:	f9b4 0000 	ldrsh.w	r0, [r4]
 801a4a6:	f8ad 1014 	strh.w	r1, [sp, #20]
 801a4aa:	eba3 0309 	sub.w	r3, r3, r9
 801a4ae:	f8ad 0010 	strh.w	r0, [sp, #16]
 801a4b2:	f8ad 2012 	strh.w	r2, [sp, #18]
 801a4b6:	f8ad 3016 	strh.w	r3, [sp, #22]
 801a4ba:	69ea      	ldr	r2, [r5, #28]
 801a4bc:	4631      	mov	r1, r6
 801a4be:	e001      	b.n	801a4c4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 801a4c0:	69ea      	ldr	r2, [r5, #28]
 801a4c2:	4621      	mov	r1, r4
 801a4c4:	4640      	mov	r0, r8
 801a4c6:	f7ff ff2b 	bl	801a320 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801a4ca:	4628      	mov	r0, r5
 801a4cc:	f7ff fe94 	bl	801a1f8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801a4d0:	6861      	ldr	r1, [r4, #4]
 801a4d2:	4602      	mov	r2, r0
 801a4d4:	6820      	ldr	r0, [r4, #0]
 801a4d6:	4633      	mov	r3, r6
 801a4d8:	c303      	stmia	r3!, {r0, r1}
 801a4da:	4611      	mov	r1, r2
 801a4dc:	4630      	mov	r0, r6
 801a4de:	f7f8 fafd 	bl	8012adc <_ZN8touchgfx4RectaNERKS0_>
 801a4e2:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 801a4e6:	2b00      	cmp	r3, #0
 801a4e8:	f77f af33 	ble.w	801a352 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801a4ec:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 801a4f0:	2b00      	cmp	r3, #0
 801a4f2:	f77f af2e 	ble.w	801a352 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801a4f6:	4628      	mov	r0, r5
 801a4f8:	f7ff fe9a 	bl	801a230 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 801a4fc:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 801a500:	1a18      	subs	r0, r3, r0
 801a502:	f8ad 0010 	strh.w	r0, [sp, #16]
 801a506:	4628      	mov	r0, r5
 801a508:	f7ff fea6 	bl	801a258 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801a50c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801a510:	1a18      	subs	r0, r3, r0
 801a512:	f8ad 0012 	strh.w	r0, [sp, #18]
 801a516:	682b      	ldr	r3, [r5, #0]
 801a518:	4631      	mov	r1, r6
 801a51a:	689b      	ldr	r3, [r3, #8]
 801a51c:	4628      	mov	r0, r5
 801a51e:	4798      	blx	r3
 801a520:	e717      	b.n	801a352 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

0801a522 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 801a522:	b570      	push	{r4, r5, r6, lr}
 801a524:	460c      	mov	r4, r1
 801a526:	b086      	sub	sp, #24
 801a528:	1d06      	adds	r6, r0, #4
 801a52a:	2300      	movs	r3, #0
 801a52c:	4631      	mov	r1, r6
 801a52e:	4605      	mov	r5, r0
 801a530:	a802      	add	r0, sp, #8
 801a532:	9301      	str	r3, [sp, #4]
 801a534:	f7ff fba8 	bl	8019c88 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a538:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801a53c:	8822      	ldrh	r2, [r4, #0]
 801a53e:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 801a542:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801a546:	f8ad 0014 	strh.w	r0, [sp, #20]
 801a54a:	1ad2      	subs	r2, r2, r3
 801a54c:	8863      	ldrh	r3, [r4, #2]
 801a54e:	f8ad 2010 	strh.w	r2, [sp, #16]
 801a552:	1a5b      	subs	r3, r3, r1
 801a554:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 801a558:	f8ad 1016 	strh.w	r1, [sp, #22]
 801a55c:	aa01      	add	r2, sp, #4
 801a55e:	a904      	add	r1, sp, #16
 801a560:	4630      	mov	r0, r6
 801a562:	f8ad 3012 	strh.w	r3, [sp, #18]
 801a566:	f7f8 fb91 	bl	8012c8c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 801a56a:	9a01      	ldr	r2, [sp, #4]
 801a56c:	b11a      	cbz	r2, 801a576 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 801a56e:	4621      	mov	r1, r4
 801a570:	4628      	mov	r0, r5
 801a572:	f7ff fed5 	bl	801a320 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801a576:	b006      	add	sp, #24
 801a578:	bd70      	pop	{r4, r5, r6, pc}

0801a57a <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 801a57a:	b530      	push	{r4, r5, lr}
 801a57c:	4602      	mov	r2, r0
 801a57e:	4604      	mov	r4, r0
 801a580:	f852 0f08 	ldr.w	r0, [r2, #8]!
 801a584:	b085      	sub	sp, #20
 801a586:	460d      	mov	r5, r1
 801a588:	6851      	ldr	r1, [r2, #4]
 801a58a:	466b      	mov	r3, sp
 801a58c:	c303      	stmia	r3!, {r0, r1}
 801a58e:	4629      	mov	r1, r5
 801a590:	4668      	mov	r0, sp
 801a592:	f7f8 faa3 	bl	8012adc <_ZN8touchgfx4RectaNERKS0_>
 801a596:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 801a59a:	b12b      	cbz	r3, 801a5a8 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 801a59c:	4669      	mov	r1, sp
 801a59e:	4620      	mov	r0, r4
 801a5a0:	f7ff ffbf 	bl	801a522 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 801a5a4:	b005      	add	sp, #20
 801a5a6:	bd30      	pop	{r4, r5, pc}
 801a5a8:	3404      	adds	r4, #4
 801a5aa:	4621      	mov	r1, r4
 801a5ac:	a802      	add	r0, sp, #8
 801a5ae:	f7ff fb6b 	bl	8019c88 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a5b2:	f8bd 3000 	ldrh.w	r3, [sp]
 801a5b6:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 801a5ba:	1a9b      	subs	r3, r3, r2
 801a5bc:	f8ad 3000 	strh.w	r3, [sp]
 801a5c0:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801a5c4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801a5c8:	4669      	mov	r1, sp
 801a5ca:	1a9b      	subs	r3, r3, r2
 801a5cc:	4620      	mov	r0, r4
 801a5ce:	f8ad 3002 	strh.w	r3, [sp, #2]
 801a5d2:	f7f8 fb22 	bl	8012c1a <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 801a5d6:	e7e5      	b.n	801a5a4 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

0801a5d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 801a5d8:	680a      	ldr	r2, [r1, #0]
 801a5da:	460b      	mov	r3, r1
 801a5dc:	6992      	ldr	r2, [r2, #24]
 801a5de:	1d01      	adds	r1, r0, #4
 801a5e0:	4618      	mov	r0, r3
 801a5e2:	4710      	bx	r2

0801a5e4 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst>:
 801a5e4:	4298      	cmp	r0, r3
 801a5e6:	d200      	bcs.n	801a5ea <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0x6>
 801a5e8:	b913      	cbnz	r3, 801a5f0 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0xc>
 801a5ea:	440a      	add	r2, r1
 801a5ec:	b210      	sxth	r0, r2
 801a5ee:	4770      	bx	lr
 801a5f0:	ee07 0a90 	vmov	s15, r0
 801a5f4:	eef8 6a67 	vcvt.f32.u32	s13, s15
 801a5f8:	ee07 3a90 	vmov	s15, r3
 801a5fc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801a600:	eddf 4a15 	vldr	s9, [pc, #84]	; 801a658 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0x74>
 801a604:	eddf 5a15 	vldr	s11, [pc, #84]	; 801a65c <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0x78>
 801a608:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 801a60c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a610:	ee37 7a66 	vsub.f32	s14, s14, s13
 801a614:	ee07 2a90 	vmov	s15, r2
 801a618:	eee7 5a24 	vfma.f32	s11, s14, s9
 801a61c:	ee27 5a07 	vmul.f32	s10, s14, s14
 801a620:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 801a624:	eee5 6a25 	vfma.f32	s13, s10, s11
 801a628:	ee07 1a90 	vmov	s15, r1
 801a62c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801a630:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 801a634:	eee6 7a26 	vfma.f32	s15, s12, s13
 801a638:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801a63c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a640:	bfcc      	ite	gt
 801a642:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 801a646:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 801a64a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801a64e:	ee17 3a90 	vmov	r3, s15
 801a652:	b218      	sxth	r0, r3
 801a654:	4770      	bx	lr
 801a656:	bf00      	nop
 801a658:	402ce6b0 	.word	0x402ce6b0
 801a65c:	3fd9cd60 	.word	0x3fd9cd60

0801a660 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 801a660:	4298      	cmp	r0, r3
 801a662:	d200      	bcs.n	801a666 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 801a664:	b913      	cbnz	r3, 801a66c <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 801a666:	440a      	add	r2, r1
 801a668:	b210      	sxth	r0, r2
 801a66a:	4770      	bx	lr
 801a66c:	ee07 0a90 	vmov	s15, r0
 801a670:	eef8 6a67 	vcvt.f32.u32	s13, s15
 801a674:	ee07 3a90 	vmov	s15, r3
 801a678:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801a67c:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 801a680:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a684:	ee37 7a66 	vsub.f32	s14, s14, s13
 801a688:	ee07 2a90 	vmov	s15, r2
 801a68c:	ee67 5a07 	vmul.f32	s11, s14, s14
 801a690:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 801a694:	eee5 6a87 	vfma.f32	s13, s11, s14
 801a698:	ee07 1a90 	vmov	s15, r1
 801a69c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801a6a0:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 801a6a4:	eee6 7a26 	vfma.f32	s15, s12, s13
 801a6a8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801a6ac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a6b0:	bfcc      	ite	gt
 801a6b2:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 801a6b6:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 801a6ba:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801a6be:	ee17 3a90 	vmov	r3, s15
 801a6c2:	b218      	sxth	r0, r3
 801a6c4:	4770      	bx	lr

0801a6c6 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>:
 801a6c6:	4298      	cmp	r0, r3
 801a6c8:	d200      	bcs.n	801a6cc <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x6>
 801a6ca:	b913      	cbnz	r3, 801a6d2 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0xc>
 801a6cc:	440a      	add	r2, r1
 801a6ce:	b210      	sxth	r0, r2
 801a6d0:	4770      	bx	lr
 801a6d2:	ee07 2a90 	vmov	s15, r2
 801a6d6:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 801a6da:	ee07 0a90 	vmov	s15, r0
 801a6de:	eef8 7a67 	vcvt.f32.u32	s15, s15
 801a6e2:	ee67 7a27 	vmul.f32	s15, s14, s15
 801a6e6:	ee07 3a10 	vmov	s14, r3
 801a6ea:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 801a6ee:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 801a6f2:	ee07 1a90 	vmov	s15, r1
 801a6f6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801a6fa:	ee77 7a27 	vadd.f32	s15, s14, s15
 801a6fe:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 801a702:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801a706:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a70a:	bfcc      	ite	gt
 801a70c:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 801a710:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 801a714:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801a718:	ee17 3a90 	vmov	r3, s15
 801a71c:	b218      	sxth	r0, r3
 801a71e:	4770      	bx	lr

0801a720 <_ZN8touchgfx12TextProviderC1Ev>:
 801a720:	b538      	push	{r3, r4, r5, lr}
 801a722:	2500      	movs	r5, #0
 801a724:	2302      	movs	r3, #2
 801a726:	4604      	mov	r4, r0
 801a728:	e9c0 5500 	strd	r5, r5, [r0]
 801a72c:	7403      	strb	r3, [r0, #16]
 801a72e:	6145      	str	r5, [r0, #20]
 801a730:	7605      	strb	r5, [r0, #24]
 801a732:	83c5      	strh	r5, [r0, #30]
 801a734:	8405      	strh	r5, [r0, #32]
 801a736:	86c5      	strh	r5, [r0, #54]	; 0x36
 801a738:	8705      	strh	r5, [r0, #56]	; 0x38
 801a73a:	87c5      	strh	r5, [r0, #62]	; 0x3e
 801a73c:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 801a740:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 801a744:	220e      	movs	r2, #14
 801a746:	4629      	mov	r1, r5
 801a748:	304c      	adds	r0, #76	; 0x4c
 801a74a:	f013 faba 	bl	802dcc2 <memset>
 801a74e:	2301      	movs	r3, #1
 801a750:	4620      	mov	r0, r4
 801a752:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 801a756:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801a75a:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 801a75e:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 801a762:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 801a766:	f7ef ff27 	bl	800a5b8 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 801a76a:	4620      	mov	r0, r4
 801a76c:	bd38      	pop	{r3, r4, r5, pc}

0801a76e <_ZN8touchgfx12TextProvider11endOfStringEv>:
 801a76e:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801a770:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801a774:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 801a776:	fab0 f080 	clz	r0, r0
 801a77a:	0940      	lsrs	r0, r0, #5
 801a77c:	4770      	bx	lr

0801a77e <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 801a77e:	b530      	push	{r4, r5, lr}
 801a780:	2500      	movs	r5, #0
 801a782:	2401      	movs	r4, #1
 801a784:	6843      	ldr	r3, [r0, #4]
 801a786:	b913      	cbnz	r3, 801a78e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 801a788:	6803      	ldr	r3, [r0, #0]
 801a78a:	b313      	cbz	r3, 801a7d2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 801a78c:	6043      	str	r3, [r0, #4]
 801a78e:	7e03      	ldrb	r3, [r0, #24]
 801a790:	b143      	cbz	r3, 801a7a4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 801a792:	6943      	ldr	r3, [r0, #20]
 801a794:	b12b      	cbz	r3, 801a7a2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 801a796:	881a      	ldrh	r2, [r3, #0]
 801a798:	b11a      	cbz	r2, 801a7a2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 801a79a:	1c9a      	adds	r2, r3, #2
 801a79c:	6142      	str	r2, [r0, #20]
 801a79e:	8818      	ldrh	r0, [r3, #0]
 801a7a0:	bd30      	pop	{r4, r5, pc}
 801a7a2:	7605      	strb	r5, [r0, #24]
 801a7a4:	6843      	ldr	r3, [r0, #4]
 801a7a6:	8819      	ldrh	r1, [r3, #0]
 801a7a8:	b199      	cbz	r1, 801a7d2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 801a7aa:	1c9a      	adds	r2, r3, #2
 801a7ac:	2902      	cmp	r1, #2
 801a7ae:	6042      	str	r2, [r0, #4]
 801a7b0:	d1f5      	bne.n	801a79e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 801a7b2:	7c03      	ldrb	r3, [r0, #16]
 801a7b4:	2b01      	cmp	r3, #1
 801a7b6:	d8e5      	bhi.n	801a784 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801a7b8:	1c5a      	adds	r2, r3, #1
 801a7ba:	3302      	adds	r3, #2
 801a7bc:	7402      	strb	r2, [r0, #16]
 801a7be:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 801a7c2:	6143      	str	r3, [r0, #20]
 801a7c4:	2b00      	cmp	r3, #0
 801a7c6:	d0dd      	beq.n	801a784 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801a7c8:	881b      	ldrh	r3, [r3, #0]
 801a7ca:	2b00      	cmp	r3, #0
 801a7cc:	d0da      	beq.n	801a784 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801a7ce:	7604      	strb	r4, [r0, #24]
 801a7d0:	e7d8      	b.n	801a784 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801a7d2:	2000      	movs	r0, #0
 801a7d4:	e7e4      	b.n	801a7a0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

0801a7d6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 801a7d6:	b430      	push	{r4, r5}
 801a7d8:	6001      	str	r1, [r0, #0]
 801a7da:	2100      	movs	r1, #0
 801a7dc:	6041      	str	r1, [r0, #4]
 801a7de:	6815      	ldr	r5, [r2, #0]
 801a7e0:	6085      	str	r5, [r0, #8]
 801a7e2:	6852      	ldr	r2, [r2, #4]
 801a7e4:	6443      	str	r3, [r0, #68]	; 0x44
 801a7e6:	9b02      	ldr	r3, [sp, #8]
 801a7e8:	60c2      	str	r2, [r0, #12]
 801a7ea:	7401      	strb	r1, [r0, #16]
 801a7ec:	6141      	str	r1, [r0, #20]
 801a7ee:	7601      	strb	r1, [r0, #24]
 801a7f0:	8701      	strh	r1, [r0, #56]	; 0x38
 801a7f2:	8401      	strh	r1, [r0, #32]
 801a7f4:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 801a7f8:	6483      	str	r3, [r0, #72]	; 0x48
 801a7fa:	bc30      	pop	{r4, r5}
 801a7fc:	f7ef bedc 	b.w	800a5b8 <_ZN8touchgfx12TextProvider18initializeInternalEv>

0801a800 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 801a800:	b408      	push	{r3}
 801a802:	b510      	push	{r4, lr}
 801a804:	b085      	sub	sp, #20
 801a806:	ac07      	add	r4, sp, #28
 801a808:	f854 3b04 	ldr.w	r3, [r4], #4
 801a80c:	9300      	str	r3, [sp, #0]
 801a80e:	4613      	mov	r3, r2
 801a810:	4622      	mov	r2, r4
 801a812:	9403      	str	r4, [sp, #12]
 801a814:	f7ff ffdf 	bl	801a7d6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801a818:	b005      	add	sp, #20
 801a81a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801a81e:	b001      	add	sp, #4
 801a820:	4770      	bx	lr

0801a822 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 801a822:	b5f0      	push	{r4, r5, r6, r7, lr}
 801a824:	4605      	mov	r5, r0
 801a826:	4608      	mov	r0, r1
 801a828:	b1e9      	cbz	r1, 801a866 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 801a82a:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 801a82e:	460b      	mov	r3, r1
 801a830:	f101 0708 	add.w	r7, r1, #8
 801a834:	4622      	mov	r2, r4
 801a836:	6818      	ldr	r0, [r3, #0]
 801a838:	6859      	ldr	r1, [r3, #4]
 801a83a:	4626      	mov	r6, r4
 801a83c:	c603      	stmia	r6!, {r0, r1}
 801a83e:	3308      	adds	r3, #8
 801a840:	42bb      	cmp	r3, r7
 801a842:	4634      	mov	r4, r6
 801a844:	d1f7      	bne.n	801a836 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 801a846:	6818      	ldr	r0, [r3, #0]
 801a848:	6030      	str	r0, [r6, #0]
 801a84a:	889b      	ldrh	r3, [r3, #4]
 801a84c:	80b3      	strh	r3, [r6, #4]
 801a84e:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 801a852:	015b      	lsls	r3, r3, #5
 801a854:	f403 7180 	and.w	r1, r3, #256	; 0x100
 801a858:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 801a85c:	430b      	orrs	r3, r1
 801a85e:	425b      	negs	r3, r3
 801a860:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 801a864:	4610      	mov	r0, r2
 801a866:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801a868 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 801a868:	b538      	push	{r3, r4, r5, lr}
 801a86a:	460c      	mov	r4, r1
 801a86c:	6811      	ldr	r1, [r2, #0]
 801a86e:	4610      	mov	r0, r2
 801a870:	68cd      	ldr	r5, [r1, #12]
 801a872:	4619      	mov	r1, r3
 801a874:	47a8      	blx	r5
 801a876:	2800      	cmp	r0, #0
 801a878:	bf08      	it	eq
 801a87a:	4620      	moveq	r0, r4
 801a87c:	bd38      	pop	{r3, r4, r5, pc}
	...

0801a880 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 801a880:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801a882:	4604      	mov	r4, r0
 801a884:	4615      	mov	r5, r2
 801a886:	4608      	mov	r0, r1
 801a888:	b93a      	cbnz	r2, 801a89a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 801a88a:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 801a88e:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 801a892:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 801a896:	4628      	mov	r0, r5
 801a898:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801a89a:	f892 c00d 	ldrb.w	ip, [r2, #13]
 801a89e:	8893      	ldrh	r3, [r2, #4]
 801a8a0:	ea4f 160c 	mov.w	r6, ip, lsl #4
 801a8a4:	f406 7280 	and.w	r2, r6, #256	; 0x100
 801a8a8:	79ee      	ldrb	r6, [r5, #7]
 801a8aa:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 801a8ae:	4316      	orrs	r6, r2
 801a8b0:	19da      	adds	r2, r3, r7
 801a8b2:	b291      	uxth	r1, r2
 801a8b4:	291d      	cmp	r1, #29
 801a8b6:	b2b7      	uxth	r7, r6
 801a8b8:	d87a      	bhi.n	801a9b0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 801a8ba:	2201      	movs	r2, #1
 801a8bc:	408a      	lsls	r2, r1
 801a8be:	4975      	ldr	r1, [pc, #468]	; (801aa94 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 801a8c0:	420a      	tst	r2, r1
 801a8c2:	ea4f 06e6 	mov.w	r6, r6, asr #3
 801a8c6:	d12d      	bne.n	801a924 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 801a8c8:	f412 7f60 	tst.w	r2, #896	; 0x380
 801a8cc:	d070      	beq.n	801a9b0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 801a8ce:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 801a8d2:	462b      	mov	r3, r5
 801a8d4:	f105 0e08 	add.w	lr, r5, #8
 801a8d8:	4615      	mov	r5, r2
 801a8da:	6818      	ldr	r0, [r3, #0]
 801a8dc:	6859      	ldr	r1, [r3, #4]
 801a8de:	4694      	mov	ip, r2
 801a8e0:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 801a8e4:	3308      	adds	r3, #8
 801a8e6:	4573      	cmp	r3, lr
 801a8e8:	4662      	mov	r2, ip
 801a8ea:	d1f6      	bne.n	801a8da <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 801a8ec:	6818      	ldr	r0, [r3, #0]
 801a8ee:	f8cc 0000 	str.w	r0, [ip]
 801a8f2:	889b      	ldrh	r3, [r3, #4]
 801a8f4:	f8ac 3004 	strh.w	r3, [ip, #4]
 801a8f8:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 801a8fc:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 801a900:	b2b3      	uxth	r3, r6
 801a902:	1aca      	subs	r2, r1, r3
 801a904:	b292      	uxth	r2, r2
 801a906:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 801a90a:	10d2      	asrs	r2, r2, #3
 801a90c:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 801a910:	f002 0260 	and.w	r2, r2, #96	; 0x60
 801a914:	4302      	orrs	r2, r0
 801a916:	1bcf      	subs	r7, r1, r7
 801a918:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 801a91c:	1afb      	subs	r3, r7, r3
 801a91e:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 801a922:	e7b8      	b.n	801a896 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 801a924:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 801a926:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801a92a:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 801a92c:	f640 6333 	movw	r3, #3635	; 0xe33
 801a930:	4299      	cmp	r1, r3
 801a932:	d110      	bne.n	801a956 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 801a934:	6803      	ldr	r3, [r0, #0]
 801a936:	68db      	ldr	r3, [r3, #12]
 801a938:	4798      	blx	r3
 801a93a:	7b41      	ldrb	r1, [r0, #13]
 801a93c:	00cb      	lsls	r3, r1, #3
 801a93e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801a942:	7a03      	ldrb	r3, [r0, #8]
 801a944:	0648      	lsls	r0, r1, #25
 801a946:	ea43 0302 	orr.w	r3, r3, r2
 801a94a:	bf44      	itt	mi
 801a94c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801a950:	b21b      	sxthmi	r3, r3
 801a952:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801a956:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 801a95a:	443b      	add	r3, r7
 801a95c:	4433      	add	r3, r6
 801a95e:	b29b      	uxth	r3, r3
 801a960:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 801a964:	462a      	mov	r2, r5
 801a966:	f105 0c08 	add.w	ip, r5, #8
 801a96a:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801a96e:	4635      	mov	r5, r6
 801a970:	6810      	ldr	r0, [r2, #0]
 801a972:	6851      	ldr	r1, [r2, #4]
 801a974:	4637      	mov	r7, r6
 801a976:	c703      	stmia	r7!, {r0, r1}
 801a978:	3208      	adds	r2, #8
 801a97a:	4562      	cmp	r2, ip
 801a97c:	463e      	mov	r6, r7
 801a97e:	d1f7      	bne.n	801a970 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 801a980:	6810      	ldr	r0, [r2, #0]
 801a982:	6038      	str	r0, [r7, #0]
 801a984:	8892      	ldrh	r2, [r2, #4]
 801a986:	80ba      	strh	r2, [r7, #4]
 801a988:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 801a98c:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 801a990:	10db      	asrs	r3, r3, #3
 801a992:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 801a996:	f003 0360 	and.w	r3, r3, #96	; 0x60
 801a99a:	4313      	orrs	r3, r2
 801a99c:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 801a9a0:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 801a9a4:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 801a9a8:	1a9b      	subs	r3, r3, r2
 801a9aa:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 801a9ae:	e772      	b.n	801a896 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 801a9b0:	f023 0204 	bic.w	r2, r3, #4
 801a9b4:	f640 611b 	movw	r1, #3611	; 0xe1b
 801a9b8:	428a      	cmp	r2, r1
 801a9ba:	d003      	beq.n	801a9c4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 801a9bc:	f640 621d 	movw	r2, #3613	; 0xe1d
 801a9c0:	4293      	cmp	r3, r2
 801a9c2:	d120      	bne.n	801aa06 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x186>
 801a9c4:	3b01      	subs	r3, #1
 801a9c6:	4602      	mov	r2, r0
 801a9c8:	b29b      	uxth	r3, r3
 801a9ca:	4629      	mov	r1, r5
 801a9cc:	4620      	mov	r0, r4
 801a9ce:	f7ff ff4b 	bl	801a868 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 801a9d2:	7b41      	ldrb	r1, [r0, #13]
 801a9d4:	00cb      	lsls	r3, r1, #3
 801a9d6:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801a9da:	7a03      	ldrb	r3, [r0, #8]
 801a9dc:	0649      	lsls	r1, r1, #25
 801a9de:	ea43 0302 	orr.w	r3, r3, r2
 801a9e2:	bf44      	itt	mi
 801a9e4:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801a9e8:	b21b      	sxthmi	r3, r3
 801a9ea:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801a9ee:	7b6b      	ldrb	r3, [r5, #13]
 801a9f0:	7aaa      	ldrb	r2, [r5, #10]
 801a9f2:	005b      	lsls	r3, r3, #1
 801a9f4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801a9f8:	4313      	orrs	r3, r2
 801a9fa:	115a      	asrs	r2, r3, #5
 801a9fc:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 801aa00:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 801aa04:	e036      	b.n	801aa74 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 801aa06:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 801aa0a:	f402 7180 	and.w	r1, r2, #256	; 0x100
 801aa0e:	7a2a      	ldrb	r2, [r5, #8]
 801aa10:	f01c 0f40 	tst.w	ip, #64	; 0x40
 801aa14:	ea42 0201 	orr.w	r2, r2, r1
 801aa18:	bf1c      	itt	ne
 801aa1a:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 801aa1e:	b212      	sxthne	r2, r2
 801aa20:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 801aa24:	f640 6109 	movw	r1, #3593	; 0xe09
 801aa28:	f023 0210 	bic.w	r2, r3, #16
 801aa2c:	428a      	cmp	r2, r1
 801aa2e:	d003      	beq.n	801aa38 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b8>
 801aa30:	f640 6213 	movw	r2, #3603	; 0xe13
 801aa34:	4293      	cmp	r3, r2
 801aa36:	d12a      	bne.n	801aa8e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 801aa38:	7b6e      	ldrb	r6, [r5, #13]
 801aa3a:	0076      	lsls	r6, r6, #1
 801aa3c:	f406 7280 	and.w	r2, r6, #256	; 0x100
 801aa40:	7aae      	ldrb	r6, [r5, #10]
 801aa42:	4316      	orrs	r6, r2
 801aa44:	f640 6213 	movw	r2, #3603	; 0xe13
 801aa48:	4293      	cmp	r3, r2
 801aa4a:	bf18      	it	ne
 801aa4c:	f103 33ff 	addne.w	r3, r3, #4294967295
 801aa50:	4602      	mov	r2, r0
 801aa52:	bf14      	ite	ne
 801aa54:	b29b      	uxthne	r3, r3
 801aa56:	f640 630c 	movweq	r3, #3596	; 0xe0c
 801aa5a:	4629      	mov	r1, r5
 801aa5c:	4620      	mov	r0, r4
 801aa5e:	f7ff ff03 	bl	801a868 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 801aa62:	7b43      	ldrb	r3, [r0, #13]
 801aa64:	7a82      	ldrb	r2, [r0, #10]
 801aa66:	005b      	lsls	r3, r3, #1
 801aa68:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801aa6c:	4313      	orrs	r3, r2
 801aa6e:	1af6      	subs	r6, r6, r3
 801aa70:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 801aa74:	7b69      	ldrb	r1, [r5, #13]
 801aa76:	00cb      	lsls	r3, r1, #3
 801aa78:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801aa7c:	7a2b      	ldrb	r3, [r5, #8]
 801aa7e:	4313      	orrs	r3, r2
 801aa80:	064a      	lsls	r2, r1, #25
 801aa82:	bf44      	itt	mi
 801aa84:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801aa88:	b21b      	sxthmi	r3, r3
 801aa8a:	1bdb      	subs	r3, r3, r7
 801aa8c:	e747      	b.n	801a91e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 801aa8e:	2300      	movs	r3, #0
 801aa90:	e7b6      	b.n	801aa00 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x180>
 801aa92:	bf00      	nop
 801aa94:	3fc00079 	.word	0x3fc00079

0801aa98 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 801aa98:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801aa9c:	4604      	mov	r4, r0
 801aa9e:	b942      	cbnz	r2, 801aab2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 801aaa0:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801aaa4:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 801aaa8:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 801aaac:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 801aab0:	e047      	b.n	801ab42 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 801aab2:	7b51      	ldrb	r1, [r2, #13]
 801aab4:	8893      	ldrh	r3, [r2, #4]
 801aab6:	010d      	lsls	r5, r1, #4
 801aab8:	f405 7080 	and.w	r0, r5, #256	; 0x100
 801aabc:	79d5      	ldrb	r5, [r2, #7]
 801aabe:	4305      	orrs	r5, r0
 801aac0:	2d04      	cmp	r5, #4
 801aac2:	bfcc      	ite	gt
 801aac4:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 801aac8:	f04f 0e01 	movle.w	lr, #1
 801aacc:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 801aad0:	f200 80ab 	bhi.w	801ac2a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 801aad4:	f240 60e7 	movw	r0, #1767	; 0x6e7
 801aad8:	4283      	cmp	r3, r0
 801aada:	d216      	bcs.n	801ab0a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801aadc:	f240 605b 	movw	r0, #1627	; 0x65b
 801aae0:	4283      	cmp	r3, r0
 801aae2:	d859      	bhi.n	801ab98 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 801aae4:	f240 6057 	movw	r0, #1623	; 0x657
 801aae8:	4283      	cmp	r3, r0
 801aaea:	d20e      	bcs.n	801ab0a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801aaec:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 801aaf0:	d24a      	bcs.n	801ab88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 801aaf2:	f240 604e 	movw	r0, #1614	; 0x64e
 801aaf6:	4283      	cmp	r3, r0
 801aaf8:	d207      	bcs.n	801ab0a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801aafa:	f240 601a 	movw	r0, #1562	; 0x61a
 801aafe:	4283      	cmp	r3, r0
 801ab00:	d02a      	beq.n	801ab58 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801ab02:	d821      	bhi.n	801ab48 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 801ab04:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 801ab08:	d35b      	bcc.n	801abc2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801ab0a:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 801ab0e:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801ab12:	f040 80d0 	bne.w	801acb6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 801ab16:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 801ab1a:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801ab1e:	f040 80ca 	bne.w	801acb6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 801ab22:	00cb      	lsls	r3, r1, #3
 801ab24:	f403 7080 	and.w	r0, r3, #256	; 0x100
 801ab28:	7a13      	ldrb	r3, [r2, #8]
 801ab2a:	0649      	lsls	r1, r1, #25
 801ab2c:	ea43 0300 	orr.w	r3, r3, r0
 801ab30:	bf44      	itt	mi
 801ab32:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801ab36:	b21b      	sxthmi	r3, r3
 801ab38:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801ab3c:	1b5d      	subs	r5, r3, r5
 801ab3e:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801ab42:	4610      	mov	r0, r2
 801ab44:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801ab48:	f240 604b 	movw	r0, #1611	; 0x64b
 801ab4c:	4283      	cmp	r3, r0
 801ab4e:	d338      	bcc.n	801abc2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801ab50:	f240 604c 	movw	r0, #1612	; 0x64c
 801ab54:	4283      	cmp	r3, r0
 801ab56:	d9d8      	bls.n	801ab0a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801ab58:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 801ab5c:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 801ab60:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801ab64:	f040 80f2 	bne.w	801ad4c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 801ab68:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801ab6c:	f040 80ee 	bne.w	801ad4c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 801ab70:	00cb      	lsls	r3, r1, #3
 801ab72:	f403 7080 	and.w	r0, r3, #256	; 0x100
 801ab76:	7a13      	ldrb	r3, [r2, #8]
 801ab78:	064e      	lsls	r6, r1, #25
 801ab7a:	ea43 0300 	orr.w	r3, r3, r0
 801ab7e:	bf44      	itt	mi
 801ab80:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801ab84:	b21b      	sxthmi	r3, r3
 801ab86:	e7d9      	b.n	801ab3c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 801ab88:	f240 6054 	movw	r0, #1620	; 0x654
 801ab8c:	4283      	cmp	r3, r0
 801ab8e:	d8e3      	bhi.n	801ab58 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801ab90:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 801ab94:	d9e0      	bls.n	801ab58 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801ab96:	e7b8      	b.n	801ab0a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801ab98:	f240 6074 	movw	r0, #1652	; 0x674
 801ab9c:	4283      	cmp	r3, r0
 801ab9e:	d0b4      	beq.n	801ab0a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801aba0:	d82d      	bhi.n	801abfe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 801aba2:	f240 605e 	movw	r0, #1630	; 0x65e
 801aba6:	4283      	cmp	r3, r0
 801aba8:	d804      	bhi.n	801abb4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 801abaa:	f240 605d 	movw	r0, #1629	; 0x65d
 801abae:	4283      	cmp	r3, r0
 801abb0:	d3d2      	bcc.n	801ab58 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801abb2:	e7aa      	b.n	801ab0a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801abb4:	f240 605f 	movw	r0, #1631	; 0x65f
 801abb8:	4283      	cmp	r3, r0
 801abba:	d0cd      	beq.n	801ab58 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801abbc:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 801abc0:	d0a3      	beq.n	801ab0a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801abc2:	00cb      	lsls	r3, r1, #3
 801abc4:	f403 7080 	and.w	r0, r3, #256	; 0x100
 801abc8:	7a13      	ldrb	r3, [r2, #8]
 801abca:	0649      	lsls	r1, r1, #25
 801abcc:	ea43 0300 	orr.w	r3, r3, r0
 801abd0:	bf44      	itt	mi
 801abd2:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801abd6:	b21b      	sxthmi	r3, r3
 801abd8:	1b5d      	subs	r5, r3, r5
 801abda:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801abde:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801abe2:	7b53      	ldrb	r3, [r2, #13]
 801abe4:	015b      	lsls	r3, r3, #5
 801abe6:	f403 7180 	and.w	r1, r3, #256	; 0x100
 801abea:	7993      	ldrb	r3, [r2, #6]
 801abec:	430b      	orrs	r3, r1
 801abee:	005b      	lsls	r3, r3, #1
 801abf0:	2105      	movs	r1, #5
 801abf2:	fb93 f3f1 	sdiv	r3, r3, r1
 801abf6:	f992 1009 	ldrsb.w	r1, [r2, #9]
 801abfa:	440b      	add	r3, r1
 801abfc:	e756      	b.n	801aaac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 801abfe:	f240 60e2 	movw	r0, #1762	; 0x6e2
 801ac02:	4283      	cmp	r3, r0
 801ac04:	d809      	bhi.n	801ac1a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 801ac06:	f240 60df 	movw	r0, #1759	; 0x6df
 801ac0a:	4283      	cmp	r3, r0
 801ac0c:	f4bf af7d 	bcs.w	801ab0a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801ac10:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 801ac14:	2b05      	cmp	r3, #5
 801ac16:	d8d4      	bhi.n	801abc2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801ac18:	e777      	b.n	801ab0a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801ac1a:	f240 60e3 	movw	r0, #1763	; 0x6e3
 801ac1e:	4283      	cmp	r3, r0
 801ac20:	d09a      	beq.n	801ab58 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801ac22:	f240 60e4 	movw	r0, #1764	; 0x6e4
 801ac26:	4283      	cmp	r3, r0
 801ac28:	e7ca      	b.n	801abc0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 801ac2a:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 801ac2e:	d22b      	bcs.n	801ac88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 801ac30:	f640 00ed 	movw	r0, #2285	; 0x8ed
 801ac34:	4283      	cmp	r3, r0
 801ac36:	d28f      	bcs.n	801ab58 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801ac38:	f640 00e5 	movw	r0, #2277	; 0x8e5
 801ac3c:	4283      	cmp	r3, r0
 801ac3e:	d816      	bhi.n	801ac6e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 801ac40:	f640 00e4 	movw	r0, #2276	; 0x8e4
 801ac44:	4283      	cmp	r3, r0
 801ac46:	f4bf af60 	bcs.w	801ab0a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801ac4a:	f240 60ec 	movw	r0, #1772	; 0x6ec
 801ac4e:	4283      	cmp	r3, r0
 801ac50:	d80a      	bhi.n	801ac68 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 801ac52:	f240 60eb 	movw	r0, #1771	; 0x6eb
 801ac56:	4283      	cmp	r3, r0
 801ac58:	f4bf af57 	bcs.w	801ab0a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801ac5c:	f240 60ea 	movw	r0, #1770	; 0x6ea
 801ac60:	4283      	cmp	r3, r0
 801ac62:	f43f af79 	beq.w	801ab58 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801ac66:	e7ac      	b.n	801abc2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801ac68:	f240 60ed 	movw	r0, #1773	; 0x6ed
 801ac6c:	e7f8      	b.n	801ac60 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 801ac6e:	f640 00e8 	movw	r0, #2280	; 0x8e8
 801ac72:	4283      	cmp	r3, r0
 801ac74:	d802      	bhi.n	801ac7c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 801ac76:	f640 00e7 	movw	r0, #2279	; 0x8e7
 801ac7a:	e798      	b.n	801abae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 801ac7c:	f640 00e9 	movw	r0, #2281	; 0x8e9
 801ac80:	4283      	cmp	r3, r0
 801ac82:	f47f af42 	bne.w	801ab0a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801ac86:	e767      	b.n	801ab58 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801ac88:	f640 00f6 	movw	r0, #2294	; 0x8f6
 801ac8c:	4283      	cmp	r3, r0
 801ac8e:	f43f af63 	beq.w	801ab58 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801ac92:	d802      	bhi.n	801ac9a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 801ac94:	f640 00f2 	movw	r0, #2290	; 0x8f2
 801ac98:	e7f2      	b.n	801ac80 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 801ac9a:	f640 00fa 	movw	r0, #2298	; 0x8fa
 801ac9e:	4283      	cmp	r3, r0
 801aca0:	d805      	bhi.n	801acae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 801aca2:	f640 00f9 	movw	r0, #2297	; 0x8f9
 801aca6:	4283      	cmp	r3, r0
 801aca8:	f4ff af2f 	bcc.w	801ab0a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801acac:	e754      	b.n	801ab58 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801acae:	f640 00fe 	movw	r0, #2302	; 0x8fe
 801acb2:	4283      	cmp	r3, r0
 801acb4:	e7af      	b.n	801ac16 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 801acb6:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 801acba:	4617      	mov	r7, r2
 801acbc:	f102 0808 	add.w	r8, r2, #8
 801acc0:	4666      	mov	r6, ip
 801acc2:	6838      	ldr	r0, [r7, #0]
 801acc4:	6879      	ldr	r1, [r7, #4]
 801acc6:	46e6      	mov	lr, ip
 801acc8:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 801accc:	3708      	adds	r7, #8
 801acce:	4547      	cmp	r7, r8
 801acd0:	46f4      	mov	ip, lr
 801acd2:	d1f6      	bne.n	801acc2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 801acd4:	6838      	ldr	r0, [r7, #0]
 801acd6:	f8ce 0000 	str.w	r0, [lr]
 801acda:	88b9      	ldrh	r1, [r7, #4]
 801acdc:	f8ae 1004 	strh.w	r1, [lr, #4]
 801ace0:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 801ace4:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801ace8:	d009      	beq.n	801acfe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 801acea:	7b51      	ldrb	r1, [r2, #13]
 801acec:	7992      	ldrb	r2, [r2, #6]
 801acee:	0149      	lsls	r1, r1, #5
 801acf0:	f401 7180 	and.w	r1, r1, #256	; 0x100
 801acf4:	4311      	orrs	r1, r2
 801acf6:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 801acfa:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 801acfe:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801ad02:	b2ad      	uxth	r5, r5
 801ad04:	d00d      	beq.n	801ad22 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 801ad06:	442b      	add	r3, r5
 801ad08:	b29b      	uxth	r3, r3
 801ad0a:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 801ad0e:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 801ad12:	10db      	asrs	r3, r3, #3
 801ad14:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 801ad18:	f003 0360 	and.w	r3, r3, #96	; 0x60
 801ad1c:	4313      	orrs	r3, r2
 801ad1e:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 801ad22:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 801ad26:	00cb      	lsls	r3, r1, #3
 801ad28:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801ad2c:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 801ad30:	064f      	lsls	r7, r1, #25
 801ad32:	ea43 0302 	orr.w	r3, r3, r2
 801ad36:	bf44      	itt	mi
 801ad38:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801ad3c:	b21b      	sxthmi	r3, r3
 801ad3e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801ad42:	1b5b      	subs	r3, r3, r5
 801ad44:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 801ad48:	4632      	mov	r2, r6
 801ad4a:	e6fa      	b.n	801ab42 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 801ad4c:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 801ad50:	4617      	mov	r7, r2
 801ad52:	f102 0908 	add.w	r9, r2, #8
 801ad56:	4666      	mov	r6, ip
 801ad58:	6838      	ldr	r0, [r7, #0]
 801ad5a:	6879      	ldr	r1, [r7, #4]
 801ad5c:	46e0      	mov	r8, ip
 801ad5e:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 801ad62:	3708      	adds	r7, #8
 801ad64:	454f      	cmp	r7, r9
 801ad66:	46c4      	mov	ip, r8
 801ad68:	d1f6      	bne.n	801ad58 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 801ad6a:	6838      	ldr	r0, [r7, #0]
 801ad6c:	f8c8 0000 	str.w	r0, [r8]
 801ad70:	88b9      	ldrh	r1, [r7, #4]
 801ad72:	f8a8 1004 	strh.w	r1, [r8, #4]
 801ad76:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 801ad7a:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801ad7e:	d009      	beq.n	801ad94 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 801ad80:	7b51      	ldrb	r1, [r2, #13]
 801ad82:	7992      	ldrb	r2, [r2, #6]
 801ad84:	0149      	lsls	r1, r1, #5
 801ad86:	f401 7180 	and.w	r1, r1, #256	; 0x100
 801ad8a:	4311      	orrs	r1, r2
 801ad8c:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 801ad90:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 801ad94:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801ad98:	d00e      	beq.n	801adb8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 801ad9a:	eba3 030e 	sub.w	r3, r3, lr
 801ad9e:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 801ada2:	b29b      	uxth	r3, r3
 801ada4:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 801ada8:	10db      	asrs	r3, r3, #3
 801adaa:	f003 0360 	and.w	r3, r3, #96	; 0x60
 801adae:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 801adb2:	4313      	orrs	r3, r2
 801adb4:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 801adb8:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 801adbc:	00cb      	lsls	r3, r1, #3
 801adbe:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801adc2:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 801adc6:	0648      	lsls	r0, r1, #25
 801adc8:	ea43 0302 	orr.w	r3, r3, r2
 801adcc:	bf44      	itt	mi
 801adce:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801add2:	b21b      	sxthmi	r3, r3
 801add4:	1b5d      	subs	r5, r3, r5
 801add6:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801adda:	e7b5      	b.n	801ad48 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

0801addc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 801addc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801ade0:	461e      	mov	r6, r3
 801ade2:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801ade4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801ade8:	4604      	mov	r4, r0
 801adea:	4617      	mov	r7, r2
 801adec:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 801adf0:	f7ef fba0 	bl	800a534 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801adf4:	4605      	mov	r5, r0
 801adf6:	b918      	cbnz	r0, 801ae00 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 801adf8:	6030      	str	r0, [r6, #0]
 801adfa:	4628      	mov	r0, r5
 801adfc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801ae00:	683b      	ldr	r3, [r7, #0]
 801ae02:	4601      	mov	r1, r0
 801ae04:	68db      	ldr	r3, [r3, #12]
 801ae06:	4638      	mov	r0, r7
 801ae08:	4798      	blx	r3
 801ae0a:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 801ae0e:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 801ae12:	4602      	mov	r2, r0
 801ae14:	6030      	str	r0, [r6, #0]
 801ae16:	d213      	bcs.n	801ae40 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 801ae18:	4643      	mov	r3, r8
 801ae1a:	4639      	mov	r1, r7
 801ae1c:	4620      	mov	r0, r4
 801ae1e:	f7ff fe3b 	bl	801aa98 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801ae22:	6030      	str	r0, [r6, #0]
 801ae24:	6833      	ldr	r3, [r6, #0]
 801ae26:	b143      	cbz	r3, 801ae3a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 801ae28:	7b5a      	ldrb	r2, [r3, #13]
 801ae2a:	7a9b      	ldrb	r3, [r3, #10]
 801ae2c:	0052      	lsls	r2, r2, #1
 801ae2e:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801ae32:	4313      	orrs	r3, r2
 801ae34:	bf0c      	ite	eq
 801ae36:	2301      	moveq	r3, #1
 801ae38:	2300      	movne	r3, #0
 801ae3a:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 801ae3e:	e7dc      	b.n	801adfa <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 801ae40:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 801ae44:	b29b      	uxth	r3, r3
 801ae46:	2b7f      	cmp	r3, #127	; 0x7f
 801ae48:	d804      	bhi.n	801ae54 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 801ae4a:	4639      	mov	r1, r7
 801ae4c:	4620      	mov	r0, r4
 801ae4e:	f7ff fd17 	bl	801a880 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801ae52:	e7e6      	b.n	801ae22 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 801ae54:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 801ae58:	2b00      	cmp	r3, #0
 801ae5a:	d0e3      	beq.n	801ae24 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 801ae5c:	f640 1302 	movw	r3, #2306	; 0x902
 801ae60:	429d      	cmp	r5, r3
 801ae62:	d1df      	bne.n	801ae24 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 801ae64:	4601      	mov	r1, r0
 801ae66:	4620      	mov	r0, r4
 801ae68:	f7ff fcdb 	bl	801a822 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 801ae6c:	e7d9      	b.n	801ae22 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

0801ae6e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 801ae6e:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801ae72:	461e      	mov	r6, r3
 801ae74:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801ae76:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801ae7a:	4604      	mov	r4, r0
 801ae7c:	4617      	mov	r7, r2
 801ae7e:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 801ae82:	f7ef fb57 	bl	800a534 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801ae86:	4605      	mov	r5, r0
 801ae88:	b918      	cbnz	r0, 801ae92 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 801ae8a:	6030      	str	r0, [r6, #0]
 801ae8c:	4628      	mov	r0, r5
 801ae8e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801ae92:	683b      	ldr	r3, [r7, #0]
 801ae94:	4601      	mov	r1, r0
 801ae96:	f8d3 9008 	ldr.w	r9, [r3, #8]
 801ae9a:	4638      	mov	r0, r7
 801ae9c:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 801aea0:	47c8      	blx	r9
 801aea2:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 801aea6:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 801aeaa:	4602      	mov	r2, r0
 801aeac:	6030      	str	r0, [r6, #0]
 801aeae:	d213      	bcs.n	801aed8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 801aeb0:	4643      	mov	r3, r8
 801aeb2:	4639      	mov	r1, r7
 801aeb4:	4620      	mov	r0, r4
 801aeb6:	f7ff fdef 	bl	801aa98 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801aeba:	6030      	str	r0, [r6, #0]
 801aebc:	6833      	ldr	r3, [r6, #0]
 801aebe:	b143      	cbz	r3, 801aed2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 801aec0:	7b5a      	ldrb	r2, [r3, #13]
 801aec2:	7a9b      	ldrb	r3, [r3, #10]
 801aec4:	0052      	lsls	r2, r2, #1
 801aec6:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801aeca:	4313      	orrs	r3, r2
 801aecc:	bf0c      	ite	eq
 801aece:	2301      	moveq	r3, #1
 801aed0:	2300      	movne	r3, #0
 801aed2:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 801aed6:	e7d9      	b.n	801ae8c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 801aed8:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 801aedc:	b29b      	uxth	r3, r3
 801aede:	2b7f      	cmp	r3, #127	; 0x7f
 801aee0:	d804      	bhi.n	801aeec <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 801aee2:	4639      	mov	r1, r7
 801aee4:	4620      	mov	r0, r4
 801aee6:	f7ff fccb 	bl	801a880 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801aeea:	e7e6      	b.n	801aeba <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 801aeec:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 801aef0:	2b00      	cmp	r3, #0
 801aef2:	d0e3      	beq.n	801aebc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 801aef4:	f640 1302 	movw	r3, #2306	; 0x902
 801aef8:	429d      	cmp	r5, r3
 801aefa:	d1df      	bne.n	801aebc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 801aefc:	4601      	mov	r1, r0
 801aefe:	4620      	mov	r0, r4
 801af00:	f7ff fc8f 	bl	801a822 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 801af04:	e7d9      	b.n	801aeba <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

0801af06 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 801af06:	b510      	push	{r4, lr}
 801af08:	4604      	mov	r4, r0
 801af0a:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 801af0e:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801af10:	b1f1      	cbz	r1, 801af50 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 801af12:	2b0a      	cmp	r3, #10
 801af14:	d02f      	beq.n	801af76 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 801af16:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 801af18:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 801af1c:	3901      	subs	r1, #1
 801af1e:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 801af20:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 801af24:	1c51      	adds	r1, r2, #1
 801af26:	b289      	uxth	r1, r1
 801af28:	2901      	cmp	r1, #1
 801af2a:	bf84      	itt	hi
 801af2c:	f102 32ff 	addhi.w	r2, r2, #4294967295
 801af30:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 801af32:	f103 0201 	add.w	r2, r3, #1
 801af36:	8722      	strh	r2, [r4, #56]	; 0x38
 801af38:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 801af3a:	bf98      	it	ls
 801af3c:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 801af3e:	4413      	add	r3, r2
 801af40:	b29b      	uxth	r3, r3
 801af42:	2b09      	cmp	r3, #9
 801af44:	bf88      	it	hi
 801af46:	3b0a      	subhi	r3, #10
 801af48:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801af4c:	8458      	strh	r0, [r3, #34]	; 0x22
 801af4e:	e7dc      	b.n	801af0a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 801af50:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801af52:	2b0a      	cmp	r3, #10
 801af54:	d00f      	beq.n	801af76 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 801af56:	4620      	mov	r0, r4
 801af58:	f7ff fc11 	bl	801a77e <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 801af5c:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801af5e:	1c5a      	adds	r2, r3, #1
 801af60:	8722      	strh	r2, [r4, #56]	; 0x38
 801af62:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 801af64:	4413      	add	r3, r2
 801af66:	b29b      	uxth	r3, r3
 801af68:	2b09      	cmp	r3, #9
 801af6a:	bf88      	it	hi
 801af6c:	3b0a      	subhi	r3, #10
 801af6e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801af72:	8458      	strh	r0, [r3, #34]	; 0x22
 801af74:	e7ec      	b.n	801af50 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 801af76:	bd10      	pop	{r4, pc}

0801af78 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 801af78:	b538      	push	{r3, r4, r5, lr}
 801af7a:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801af7c:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 801af80:	4604      	mov	r4, r0
 801af82:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 801af84:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 801af86:	3a01      	subs	r2, #1
 801af88:	8702      	strh	r2, [r0, #56]	; 0x38
 801af8a:	1c5a      	adds	r2, r3, #1
 801af8c:	b292      	uxth	r2, r2
 801af8e:	2a09      	cmp	r2, #9
 801af90:	bf86      	itte	hi
 801af92:	3b09      	subhi	r3, #9
 801af94:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 801af96:	86c2      	strhls	r2, [r0, #54]	; 0x36
 801af98:	f7ff ffb5 	bl	801af06 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 801af9c:	8c23      	ldrh	r3, [r4, #32]
 801af9e:	2b01      	cmp	r3, #1
 801afa0:	bf9c      	itt	ls
 801afa2:	3301      	addls	r3, #1
 801afa4:	8423      	strhls	r3, [r4, #32]
 801afa6:	8be3      	ldrh	r3, [r4, #30]
 801afa8:	b90b      	cbnz	r3, 801afae <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 801afaa:	2302      	movs	r3, #2
 801afac:	83e3      	strh	r3, [r4, #30]
 801afae:	8be3      	ldrh	r3, [r4, #30]
 801afb0:	3b01      	subs	r3, #1
 801afb2:	b29b      	uxth	r3, r3
 801afb4:	83e3      	strh	r3, [r4, #30]
 801afb6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801afba:	4628      	mov	r0, r5
 801afbc:	8365      	strh	r5, [r4, #26]
 801afbe:	bd38      	pop	{r3, r4, r5, pc}

0801afc0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 801afc0:	428a      	cmp	r2, r1
 801afc2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801afc6:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 801afc8:	d931      	bls.n	801b02e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 801afca:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 801afcc:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 801afd0:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 801afd4:	19ee      	adds	r6, r5, r7
 801afd6:	1a54      	subs	r4, r2, r1
 801afd8:	3e01      	subs	r6, #1
 801afda:	fa1f fe84 	uxth.w	lr, r4
 801afde:	b2b4      	uxth	r4, r6
 801afe0:	eba4 090e 	sub.w	r9, r4, lr
 801afe4:	fa1f f989 	uxth.w	r9, r9
 801afe8:	2c09      	cmp	r4, #9
 801afea:	4626      	mov	r6, r4
 801afec:	bf88      	it	hi
 801afee:	f1a4 060a 	subhi.w	r6, r4, #10
 801aff2:	f1bc 0f00 	cmp.w	ip, #0
 801aff6:	bf08      	it	eq
 801aff8:	f04f 0c02 	moveq.w	ip, #2
 801affc:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801b000:	f10c 3cff 	add.w	ip, ip, #4294967295
 801b004:	fa1f fc8c 	uxth.w	ip, ip
 801b008:	3c01      	subs	r4, #1
 801b00a:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 801b00e:	b2a4      	uxth	r4, r4
 801b010:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 801b014:	454c      	cmp	r4, r9
 801b016:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 801b01a:	d1e5      	bne.n	801afe8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 801b01c:	eba5 050e 	sub.w	r5, r5, lr
 801b020:	eb0e 0408 	add.w	r4, lr, r8
 801b024:	8705      	strh	r5, [r0, #56]	; 0x38
 801b026:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 801b02a:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 801b02e:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 801b030:	1a64      	subs	r4, r4, r1
 801b032:	4439      	add	r1, r7
 801b034:	b289      	uxth	r1, r1
 801b036:	2909      	cmp	r1, #9
 801b038:	bf88      	it	hi
 801b03a:	390a      	subhi	r1, #10
 801b03c:	8704      	strh	r4, [r0, #56]	; 0x38
 801b03e:	86c1      	strh	r1, [r0, #54]	; 0x36
 801b040:	250a      	movs	r5, #10
 801b042:	b18a      	cbz	r2, 801b068 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 801b044:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 801b046:	3a01      	subs	r2, #1
 801b048:	b292      	uxth	r2, r2
 801b04a:	3101      	adds	r1, #1
 801b04c:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 801b050:	8701      	strh	r1, [r0, #56]	; 0x38
 801b052:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 801b054:	b901      	cbnz	r1, 801b058 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 801b056:	86c5      	strh	r5, [r0, #54]	; 0x36
 801b058:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 801b05a:	3901      	subs	r1, #1
 801b05c:	b289      	uxth	r1, r1
 801b05e:	86c1      	strh	r1, [r0, #54]	; 0x36
 801b060:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 801b064:	844c      	strh	r4, [r1, #34]	; 0x22
 801b066:	e7ec      	b.n	801b042 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 801b068:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801b06c:	f7ff bf4b 	b.w	801af06 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

0801b070 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 801b070:	b570      	push	{r4, r5, r6, lr}
 801b072:	2500      	movs	r5, #0
 801b074:	4295      	cmp	r5, r2
 801b076:	d011      	beq.n	801b09c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 801b078:	8bc4      	ldrh	r4, [r0, #30]
 801b07a:	f831 6b02 	ldrh.w	r6, [r1], #2
 801b07e:	4414      	add	r4, r2
 801b080:	3c01      	subs	r4, #1
 801b082:	1b64      	subs	r4, r4, r5
 801b084:	b2a4      	uxth	r4, r4
 801b086:	2c01      	cmp	r4, #1
 801b088:	bf88      	it	hi
 801b08a:	3c02      	subhi	r4, #2
 801b08c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801b090:	8b64      	ldrh	r4, [r4, #26]
 801b092:	42b4      	cmp	r4, r6
 801b094:	d117      	bne.n	801b0c6 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 801b096:	3501      	adds	r5, #1
 801b098:	b2ad      	uxth	r5, r5
 801b09a:	e7eb      	b.n	801b074 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 801b09c:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801b0a0:	2400      	movs	r4, #0
 801b0a2:	4413      	add	r3, r2
 801b0a4:	b2a2      	uxth	r2, r4
 801b0a6:	429a      	cmp	r2, r3
 801b0a8:	da0f      	bge.n	801b0ca <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 801b0aa:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 801b0ac:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 801b0b0:	4432      	add	r2, r6
 801b0b2:	b292      	uxth	r2, r2
 801b0b4:	2a09      	cmp	r2, #9
 801b0b6:	bf88      	it	hi
 801b0b8:	3a0a      	subhi	r2, #10
 801b0ba:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801b0be:	3401      	adds	r4, #1
 801b0c0:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 801b0c2:	42aa      	cmp	r2, r5
 801b0c4:	d0ee      	beq.n	801b0a4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 801b0c6:	2000      	movs	r0, #0
 801b0c8:	bd70      	pop	{r4, r5, r6, pc}
 801b0ca:	2001      	movs	r0, #1
 801b0cc:	e7fc      	b.n	801b0c8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

0801b0ce <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 801b0ce:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b0d2:	4605      	mov	r5, r0
 801b0d4:	4616      	mov	r6, r2
 801b0d6:	1c8c      	adds	r4, r1, #2
 801b0d8:	8809      	ldrh	r1, [r1, #0]
 801b0da:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 801b0de:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 801b0e2:	42b3      	cmp	r3, r6
 801b0e4:	d124      	bne.n	801b130 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 801b0e6:	f3c1 2903 	ubfx	r9, r1, #8, #4
 801b0ea:	f3c1 1803 	ubfx	r8, r1, #4, #4
 801b0ee:	f001 070f 	and.w	r7, r1, #15
 801b0f2:	f8cd 8000 	str.w	r8, [sp]
 801b0f6:	464b      	mov	r3, r9
 801b0f8:	4652      	mov	r2, sl
 801b0fa:	4621      	mov	r1, r4
 801b0fc:	4628      	mov	r0, r5
 801b0fe:	f7ff ffb7 	bl	801b070 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 801b102:	4683      	mov	fp, r0
 801b104:	b168      	cbz	r0, 801b122 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 801b106:	eb0a 0109 	add.w	r1, sl, r9
 801b10a:	4441      	add	r1, r8
 801b10c:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 801b110:	463a      	mov	r2, r7
 801b112:	4649      	mov	r1, r9
 801b114:	4628      	mov	r0, r5
 801b116:	f7ff ff53 	bl	801afc0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 801b11a:	4658      	mov	r0, fp
 801b11c:	b003      	add	sp, #12
 801b11e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b122:	eb07 010a 	add.w	r1, r7, sl
 801b126:	4449      	add	r1, r9
 801b128:	4441      	add	r1, r8
 801b12a:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 801b12e:	e7d2      	b.n	801b0d6 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 801b130:	f04f 0b00 	mov.w	fp, #0
 801b134:	e7f1      	b.n	801b11a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0801b136 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 801b136:	b570      	push	{r4, r5, r6, lr}
 801b138:	8810      	ldrh	r0, [r2, #0]
 801b13a:	4298      	cmp	r0, r3
 801b13c:	d817      	bhi.n	801b16e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801b13e:	1e48      	subs	r0, r1, #1
 801b140:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 801b144:	4298      	cmp	r0, r3
 801b146:	d312      	bcc.n	801b16e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801b148:	2400      	movs	r4, #0
 801b14a:	428c      	cmp	r4, r1
 801b14c:	d20f      	bcs.n	801b16e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801b14e:	1860      	adds	r0, r4, r1
 801b150:	1040      	asrs	r0, r0, #1
 801b152:	0085      	lsls	r5, r0, #2
 801b154:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 801b158:	42b3      	cmp	r3, r6
 801b15a:	d902      	bls.n	801b162 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 801b15c:	3001      	adds	r0, #1
 801b15e:	b284      	uxth	r4, r0
 801b160:	e7f3      	b.n	801b14a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 801b162:	d201      	bcs.n	801b168 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 801b164:	b281      	uxth	r1, r0
 801b166:	e7f0      	b.n	801b14a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 801b168:	442a      	add	r2, r5
 801b16a:	8850      	ldrh	r0, [r2, #2]
 801b16c:	bd70      	pop	{r4, r5, r6, pc}
 801b16e:	2000      	movs	r0, #0
 801b170:	e7fc      	b.n	801b16c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

0801b172 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 801b172:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801b176:	6c45      	ldr	r5, [r0, #68]	; 0x44
 801b178:	886f      	ldrh	r7, [r5, #2]
 801b17a:	4604      	mov	r4, r0
 801b17c:	087f      	lsrs	r7, r7, #1
 801b17e:	260b      	movs	r6, #11
 801b180:	3e01      	subs	r6, #1
 801b182:	d013      	beq.n	801b1ac <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 801b184:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 801b186:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801b18a:	462a      	mov	r2, r5
 801b18c:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 801b190:	4639      	mov	r1, r7
 801b192:	4643      	mov	r3, r8
 801b194:	4620      	mov	r0, r4
 801b196:	f7ff ffce 	bl	801b136 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 801b19a:	b138      	cbz	r0, 801b1ac <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 801b19c:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 801b1a0:	4642      	mov	r2, r8
 801b1a2:	4620      	mov	r0, r4
 801b1a4:	f7ff ff93 	bl	801b0ce <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 801b1a8:	2800      	cmp	r0, #0
 801b1aa:	d1e9      	bne.n	801b180 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 801b1ac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801b1b0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 801b1b0:	b570      	push	{r4, r5, r6, lr}
 801b1b2:	694a      	ldr	r2, [r1, #20]
 801b1b4:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 801b1b6:	684b      	ldr	r3, [r1, #4]
 801b1b8:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 801b1ba:	1b54      	subs	r4, r2, r5
 801b1bc:	f000 8106 	beq.w	801b3cc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 801b1c0:	1b9b      	subs	r3, r3, r6
 801b1c2:	d003      	beq.n	801b1cc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 801b1c4:	4363      	muls	r3, r4
 801b1c6:	2210      	movs	r2, #16
 801b1c8:	fb93 f3f2 	sdiv	r3, r3, r2
 801b1cc:	680c      	ldr	r4, [r1, #0]
 801b1ce:	698a      	ldr	r2, [r1, #24]
 801b1d0:	1b65      	subs	r5, r4, r5
 801b1d2:	f000 80fd 	beq.w	801b3d0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 801b1d6:	1b92      	subs	r2, r2, r6
 801b1d8:	d003      	beq.n	801b1e2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 801b1da:	436a      	muls	r2, r5
 801b1dc:	2410      	movs	r4, #16
 801b1de:	fb92 f2f4 	sdiv	r2, r2, r4
 801b1e2:	1a9b      	subs	r3, r3, r2
 801b1e4:	ee07 3a90 	vmov	s15, r3
 801b1e8:	ed9f 4a88 	vldr	s8, [pc, #544]	; 801b40c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 801b1ec:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801b1f0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801b1f4:	ee67 7a84 	vmul.f32	s15, s15, s8
 801b1f8:	460a      	mov	r2, r1
 801b1fa:	ee87 3a27 	vdiv.f32	s6, s14, s15
 801b1fe:	4603      	mov	r3, r0
 801b200:	f100 040c 	add.w	r4, r0, #12
 801b204:	eeb1 6a43 	vneg.f32	s12, s6
 801b208:	edd2 7a02 	vldr	s15, [r2, #8]
 801b20c:	eec7 6a27 	vdiv.f32	s13, s14, s15
 801b210:	3214      	adds	r2, #20
 801b212:	ece3 6a01 	vstmia	r3!, {s13}
 801b216:	ed52 7a02 	vldr	s15, [r2, #-8]
 801b21a:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801b21e:	429c      	cmp	r4, r3
 801b220:	edc3 7a02 	vstr	s15, [r3, #8]
 801b224:	ed52 7a01 	vldr	s15, [r2, #-4]
 801b228:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801b22c:	edc3 7a05 	vstr	s15, [r3, #20]
 801b230:	d1ea      	bne.n	801b208 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 801b232:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801b234:	698b      	ldr	r3, [r1, #24]
 801b236:	edd0 4a02 	vldr	s9, [r0, #8]
 801b23a:	edd0 3a00 	vldr	s7, [r0]
 801b23e:	edd0 6a01 	vldr	s13, [r0, #4]
 801b242:	ed90 5a05 	vldr	s10, [r0, #20]
 801b246:	ed90 2a03 	vldr	s4, [r0, #12]
 801b24a:	edd0 5a04 	vldr	s11, [r0, #16]
 801b24e:	ed90 1a07 	vldr	s2, [r0, #28]
 801b252:	edd0 2a06 	vldr	s5, [r0, #24]
 801b256:	1a9b      	subs	r3, r3, r2
 801b258:	ee07 3a90 	vmov	s15, r3
 801b25c:	684b      	ldr	r3, [r1, #4]
 801b25e:	1a9b      	subs	r3, r3, r2
 801b260:	ee07 3a10 	vmov	s14, r3
 801b264:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801b268:	ee76 6ae4 	vsub.f32	s13, s13, s9
 801b26c:	ee67 7a84 	vmul.f32	s15, s15, s8
 801b270:	ee73 4ae4 	vsub.f32	s9, s7, s9
 801b274:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801b278:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 801b27c:	ee27 7a04 	vmul.f32	s14, s14, s8
 801b280:	ee75 5ac5 	vsub.f32	s11, s11, s10
 801b284:	eee6 7a87 	vfma.f32	s15, s13, s14
 801b288:	ee32 5a45 	vsub.f32	s10, s4, s10
 801b28c:	ee67 7a83 	vmul.f32	s15, s15, s6
 801b290:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 801b294:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801b296:	694a      	ldr	r2, [r1, #20]
 801b298:	1b13      	subs	r3, r2, r4
 801b29a:	ee07 3a10 	vmov	s14, r3
 801b29e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801b2a2:	680b      	ldr	r3, [r1, #0]
 801b2a4:	ee27 7a04 	vmul.f32	s14, s14, s8
 801b2a8:	1b1b      	subs	r3, r3, r4
 801b2aa:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 801b2ae:	ee07 3a10 	vmov	s14, r3
 801b2b2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801b2b6:	ee27 7a04 	vmul.f32	s14, s14, s8
 801b2ba:	eee6 4a87 	vfma.f32	s9, s13, s14
 801b2be:	ee64 4a86 	vmul.f32	s9, s9, s12
 801b2c2:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 801b2c6:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801b2c8:	698b      	ldr	r3, [r1, #24]
 801b2ca:	1a9b      	subs	r3, r3, r2
 801b2cc:	ee06 3a90 	vmov	s13, r3
 801b2d0:	684b      	ldr	r3, [r1, #4]
 801b2d2:	1a9b      	subs	r3, r3, r2
 801b2d4:	ee07 3a10 	vmov	s14, r3
 801b2d8:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801b2dc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801b2e0:	ee66 6a84 	vmul.f32	s13, s13, s8
 801b2e4:	ee27 7a04 	vmul.f32	s14, s14, s8
 801b2e8:	ee65 6a66 	vnmul.f32	s13, s10, s13
 801b2ec:	eee5 6a87 	vfma.f32	s13, s11, s14
 801b2f0:	ee66 6a83 	vmul.f32	s13, s13, s6
 801b2f4:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 801b2f8:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801b2fa:	694a      	ldr	r2, [r1, #20]
 801b2fc:	1b13      	subs	r3, r2, r4
 801b2fe:	ee07 3a10 	vmov	s14, r3
 801b302:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801b306:	680b      	ldr	r3, [r1, #0]
 801b308:	ee27 7a04 	vmul.f32	s14, s14, s8
 801b30c:	1b1b      	subs	r3, r3, r4
 801b30e:	ee25 5a47 	vnmul.f32	s10, s10, s14
 801b312:	ee07 3a10 	vmov	s14, r3
 801b316:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801b31a:	ee27 7a04 	vmul.f32	s14, s14, s8
 801b31e:	eea5 5a87 	vfma.f32	s10, s11, s14
 801b322:	edd0 5a08 	vldr	s11, [r0, #32]
 801b326:	ee25 5a06 	vmul.f32	s10, s10, s12
 801b32a:	ee31 1a65 	vsub.f32	s2, s2, s11
 801b32e:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 801b332:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801b334:	698b      	ldr	r3, [r1, #24]
 801b336:	1a9b      	subs	r3, r3, r2
 801b338:	ee07 3a10 	vmov	s14, r3
 801b33c:	684b      	ldr	r3, [r1, #4]
 801b33e:	1a9b      	subs	r3, r3, r2
 801b340:	ee01 3a90 	vmov	s3, r3
 801b344:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801b348:	ee72 5ae5 	vsub.f32	s11, s5, s11
 801b34c:	ee27 7a04 	vmul.f32	s14, s14, s8
 801b350:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 801b354:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 801b358:	ee61 1a84 	vmul.f32	s3, s3, s8
 801b35c:	eea1 7a21 	vfma.f32	s14, s2, s3
 801b360:	ee27 7a03 	vmul.f32	s14, s14, s6
 801b364:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 801b368:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801b36a:	694a      	ldr	r2, [r1, #20]
 801b36c:	1b13      	subs	r3, r2, r4
 801b36e:	ee03 3a10 	vmov	s6, r3
 801b372:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801b376:	680b      	ldr	r3, [r1, #0]
 801b378:	ee23 3a04 	vmul.f32	s6, s6, s8
 801b37c:	1b1b      	subs	r3, r3, r4
 801b37e:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 801b382:	ee03 3a10 	vmov	s6, r3
 801b386:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801b38a:	ee23 4a04 	vmul.f32	s8, s6, s8
 801b38e:	eee1 5a04 	vfma.f32	s11, s2, s8
 801b392:	ee25 6a86 	vmul.f32	s12, s11, s12
 801b396:	ee62 5a67 	vnmul.f32	s11, s4, s15
 801b39a:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 801b39e:	eee3 5aa6 	vfma.f32	s11, s7, s13
 801b3a2:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 801b3a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b3aa:	dd13      	ble.n	801b3d4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 801b3ac:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801b3b0:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 801b3b4:	63c3      	str	r3, [r0, #60]	; 0x3c
 801b3b6:	eee3 7a87 	vfma.f32	s15, s7, s14
 801b3ba:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801b3be:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b3c2:	dd15      	ble.n	801b3f0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 801b3c4:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801b3c8:	6403      	str	r3, [r0, #64]	; 0x40
 801b3ca:	bd70      	pop	{r4, r5, r6, pc}
 801b3cc:	4623      	mov	r3, r4
 801b3ce:	e6fd      	b.n	801b1cc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 801b3d0:	462a      	mov	r2, r5
 801b3d2:	e706      	b.n	801b1e2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 801b3d4:	d502      	bpl.n	801b3dc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 801b3d6:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801b3da:	e7e9      	b.n	801b3b0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 801b3dc:	ee22 2a64 	vnmul.f32	s4, s4, s9
 801b3e0:	eea3 2a85 	vfma.f32	s4, s7, s10
 801b3e4:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 801b3e8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b3ec:	dade      	bge.n	801b3ac <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 801b3ee:	e7f2      	b.n	801b3d6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 801b3f0:	d502      	bpl.n	801b3f8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 801b3f2:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801b3f6:	e7e7      	b.n	801b3c8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 801b3f8:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 801b3fc:	eee3 4a86 	vfma.f32	s9, s7, s12
 801b400:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 801b404:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b408:	dadc      	bge.n	801b3c4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 801b40a:	e7f2      	b.n	801b3f2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 801b40c:	3d800000 	.word	0x3d800000

0801b410 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 801b410:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801b414:	2714      	movs	r7, #20
 801b416:	435f      	muls	r7, r3
 801b418:	eb02 0c07 	add.w	ip, r2, r7
 801b41c:	f8dc 5004 	ldr.w	r5, [ip, #4]
 801b420:	f115 0e0f 	adds.w	lr, r5, #15
 801b424:	f100 80a2 	bmi.w	801b56c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 801b428:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 801b42c:	9c08      	ldr	r4, [sp, #32]
 801b42e:	f8c0 e014 	str.w	lr, [r0, #20]
 801b432:	2614      	movs	r6, #20
 801b434:	4366      	muls	r6, r4
 801b436:	eb02 0806 	add.w	r8, r2, r6
 801b43a:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801b43e:	f115 040f 	adds.w	r4, r5, #15
 801b442:	f100 809f 	bmi.w	801b584 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 801b446:	1124      	asrs	r4, r4, #4
 801b448:	eba4 040e 	sub.w	r4, r4, lr
 801b44c:	6184      	str	r4, [r0, #24]
 801b44e:	2c00      	cmp	r4, #0
 801b450:	f000 808a 	beq.w	801b568 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 801b454:	f8dc 9004 	ldr.w	r9, [ip, #4]
 801b458:	f8d8 4004 	ldr.w	r4, [r8, #4]
 801b45c:	5995      	ldr	r5, [r2, r6]
 801b45e:	eba4 0809 	sub.w	r8, r4, r9
 801b462:	59d4      	ldr	r4, [r2, r7]
 801b464:	eba5 0a04 	sub.w	sl, r5, r4
 801b468:	ea4f 150a 	mov.w	r5, sl, lsl #4
 801b46c:	fb0e fe05 	mul.w	lr, lr, r5
 801b470:	fb0a ee19 	mls	lr, sl, r9, lr
 801b474:	fb08 e404 	mla	r4, r8, r4, lr
 801b478:	ea4f 1608 	mov.w	r6, r8, lsl #4
 801b47c:	3c01      	subs	r4, #1
 801b47e:	19a4      	adds	r4, r4, r6
 801b480:	f100 808c 	bmi.w	801b59c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 801b484:	fb94 fef6 	sdiv	lr, r4, r6
 801b488:	f8c0 e000 	str.w	lr, [r0]
 801b48c:	fb06 441e 	mls	r4, r6, lr, r4
 801b490:	6104      	str	r4, [r0, #16]
 801b492:	2d00      	cmp	r5, #0
 801b494:	f2c0 8095 	blt.w	801b5c2 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 801b498:	fb95 f4f6 	sdiv	r4, r5, r6
 801b49c:	6044      	str	r4, [r0, #4]
 801b49e:	fb06 5514 	mls	r5, r6, r4, r5
 801b4a2:	6085      	str	r5, [r0, #8]
 801b4a4:	60c6      	str	r6, [r0, #12]
 801b4a6:	f8dc 4004 	ldr.w	r4, [ip, #4]
 801b4aa:	6945      	ldr	r5, [r0, #20]
 801b4ac:	59d2      	ldr	r2, [r2, r7]
 801b4ae:	eddf 6a4d 	vldr	s13, [pc, #308]	; 801b5e4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 801b4b2:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 801b4b6:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 801b4ba:	ee07 4a10 	vmov	s14, r4
 801b4be:	6804      	ldr	r4, [r0, #0]
 801b4c0:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 801b4c4:	ee07 2a90 	vmov	s15, r2
 801b4c8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801b4cc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801b4d0:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801b4d4:	ee27 7a26 	vmul.f32	s14, s14, s13
 801b4d8:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801b4dc:	edd3 6a00 	vldr	s13, [r3]
 801b4e0:	eee6 6a07 	vfma.f32	s13, s12, s14
 801b4e4:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 801b4e8:	eee6 6a27 	vfma.f32	s13, s12, s15
 801b4ec:	edc0 6a07 	vstr	s13, [r0, #28]
 801b4f0:	edd0 6a01 	vldr	s13, [r0, #4]
 801b4f4:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 801b4f8:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 801b4fc:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801b500:	eea6 6aa5 	vfma.f32	s12, s13, s11
 801b504:	ed80 6a08 	vstr	s12, [r0, #32]
 801b508:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 801b50a:	6242      	str	r2, [r0, #36]	; 0x24
 801b50c:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 801b510:	ed93 6a03 	vldr	s12, [r3, #12]
 801b514:	eea5 6a87 	vfma.f32	s12, s11, s14
 801b518:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 801b51c:	eea5 6aa7 	vfma.f32	s12, s11, s15
 801b520:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 801b524:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 801b528:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 801b52c:	eea6 6aa5 	vfma.f32	s12, s13, s11
 801b530:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 801b534:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801b536:	6302      	str	r2, [r0, #48]	; 0x30
 801b538:	ed93 6a06 	vldr	s12, [r3, #24]
 801b53c:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 801b540:	eea5 6a87 	vfma.f32	s12, s11, s14
 801b544:	eeb0 7a46 	vmov.f32	s14, s12
 801b548:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 801b54c:	eea6 7a27 	vfma.f32	s14, s12, s15
 801b550:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 801b554:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 801b558:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 801b55c:	eee6 7a87 	vfma.f32	s15, s13, s14
 801b560:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 801b564:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 801b566:	63c3      	str	r3, [r0, #60]	; 0x3c
 801b568:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801b56c:	f1c5 0501 	rsb	r5, r5, #1
 801b570:	f015 050f 	ands.w	r5, r5, #15
 801b574:	bf18      	it	ne
 801b576:	2501      	movne	r5, #1
 801b578:	2410      	movs	r4, #16
 801b57a:	fb9e fef4 	sdiv	lr, lr, r4
 801b57e:	ebae 0e05 	sub.w	lr, lr, r5
 801b582:	e753      	b.n	801b42c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 801b584:	f1c5 0501 	rsb	r5, r5, #1
 801b588:	f015 050f 	ands.w	r5, r5, #15
 801b58c:	bf18      	it	ne
 801b58e:	2501      	movne	r5, #1
 801b590:	f04f 0910 	mov.w	r9, #16
 801b594:	fb94 f4f9 	sdiv	r4, r4, r9
 801b598:	1b64      	subs	r4, r4, r5
 801b59a:	e755      	b.n	801b448 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 801b59c:	4264      	negs	r4, r4
 801b59e:	fb94 fef6 	sdiv	lr, r4, r6
 801b5a2:	f1ce 0800 	rsb	r8, lr, #0
 801b5a6:	fb06 441e 	mls	r4, r6, lr, r4
 801b5aa:	f8c0 8000 	str.w	r8, [r0]
 801b5ae:	6104      	str	r4, [r0, #16]
 801b5b0:	2c00      	cmp	r4, #0
 801b5b2:	f43f af6e 	beq.w	801b492 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 801b5b6:	ea6f 0e0e 	mvn.w	lr, lr
 801b5ba:	f8c0 e000 	str.w	lr, [r0]
 801b5be:	1b34      	subs	r4, r6, r4
 801b5c0:	e766      	b.n	801b490 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 801b5c2:	426d      	negs	r5, r5
 801b5c4:	fb95 f4f6 	sdiv	r4, r5, r6
 801b5c8:	f1c4 0e00 	rsb	lr, r4, #0
 801b5cc:	fb06 5514 	mls	r5, r6, r4, r5
 801b5d0:	f8c0 e004 	str.w	lr, [r0, #4]
 801b5d4:	6085      	str	r5, [r0, #8]
 801b5d6:	2d00      	cmp	r5, #0
 801b5d8:	f43f af64 	beq.w	801b4a4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 801b5dc:	43e4      	mvns	r4, r4
 801b5de:	6044      	str	r4, [r0, #4]
 801b5e0:	1b75      	subs	r5, r6, r5
 801b5e2:	e75e      	b.n	801b4a2 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 801b5e4:	3d800000 	.word	0x3d800000

0801b5e8 <_ZN8touchgfx7Unicode6strlenEPKt>:
 801b5e8:	4602      	mov	r2, r0
 801b5ea:	b148      	cbz	r0, 801b600 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 801b5ec:	2300      	movs	r3, #0
 801b5ee:	b298      	uxth	r0, r3
 801b5f0:	3301      	adds	r3, #1
 801b5f2:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 801b5f6:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 801b5fa:	2900      	cmp	r1, #0
 801b5fc:	d1f7      	bne.n	801b5ee <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 801b5fe:	4770      	bx	lr
 801b600:	4770      	bx	lr

0801b602 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 801b602:	b530      	push	{r4, r5, lr}
 801b604:	4604      	mov	r4, r0
 801b606:	b159      	cbz	r1, 801b620 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 801b608:	b148      	cbz	r0, 801b61e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 801b60a:	2300      	movs	r3, #0
 801b60c:	b298      	uxth	r0, r3
 801b60e:	4282      	cmp	r2, r0
 801b610:	d905      	bls.n	801b61e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 801b612:	5ccd      	ldrb	r5, [r1, r3]
 801b614:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 801b618:	3301      	adds	r3, #1
 801b61a:	2d00      	cmp	r5, #0
 801b61c:	d1f6      	bne.n	801b60c <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 801b61e:	bd30      	pop	{r4, r5, pc}
 801b620:	4608      	mov	r0, r1
 801b622:	e7fc      	b.n	801b61e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

0801b624 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
 801b624:	b5f0      	push	{r4, r5, r6, r7, lr}
 801b626:	b08b      	sub	sp, #44	; 0x2c
 801b628:	468c      	mov	ip, r1
 801b62a:	2100      	movs	r1, #0
 801b62c:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 801b630:	4604      	mov	r4, r0
 801b632:	261f      	movs	r6, #31
 801b634:	af01      	add	r7, sp, #4
 801b636:	fb94 fef3 	sdiv	lr, r4, r3
 801b63a:	fb03 441e 	mls	r4, r3, lr, r4
 801b63e:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 801b642:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 801b646:	b2ec      	uxtb	r4, r5
 801b648:	2d09      	cmp	r5, #9
 801b64a:	bfd4      	ite	le
 801b64c:	3430      	addle	r4, #48	; 0x30
 801b64e:	3457      	addgt	r4, #87	; 0x57
 801b650:	b2e4      	uxtb	r4, r4
 801b652:	55bc      	strb	r4, [r7, r6]
 801b654:	4674      	mov	r4, lr
 801b656:	1e71      	subs	r1, r6, #1
 801b658:	b974      	cbnz	r4, 801b678 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
 801b65a:	2800      	cmp	r0, #0
 801b65c:	da05      	bge.n	801b66a <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
 801b65e:	ab0a      	add	r3, sp, #40	; 0x28
 801b660:	4419      	add	r1, r3
 801b662:	232d      	movs	r3, #45	; 0x2d
 801b664:	f801 3c24 	strb.w	r3, [r1, #-36]
 801b668:	1eb1      	subs	r1, r6, #2
 801b66a:	3101      	adds	r1, #1
 801b66c:	4439      	add	r1, r7
 801b66e:	4660      	mov	r0, ip
 801b670:	f7ff ffc7 	bl	801b602 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 801b674:	b00b      	add	sp, #44	; 0x2c
 801b676:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801b678:	460e      	mov	r6, r1
 801b67a:	e7dc      	b.n	801b636 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

0801b67c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 801b67c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801b67e:	b08b      	sub	sp, #44	; 0x2c
 801b680:	468c      	mov	ip, r1
 801b682:	2100      	movs	r1, #0
 801b684:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 801b688:	ae01      	add	r6, sp, #4
 801b68a:	211f      	movs	r1, #31
 801b68c:	fbb0 f7f3 	udiv	r7, r0, r3
 801b690:	fb03 0517 	mls	r5, r3, r7, r0
 801b694:	b2ec      	uxtb	r4, r5
 801b696:	2d09      	cmp	r5, #9
 801b698:	bfd4      	ite	le
 801b69a:	3430      	addle	r4, #48	; 0x30
 801b69c:	3457      	addgt	r4, #87	; 0x57
 801b69e:	b2e4      	uxtb	r4, r4
 801b6a0:	558c      	strb	r4, [r1, r6]
 801b6a2:	4638      	mov	r0, r7
 801b6a4:	1e4c      	subs	r4, r1, #1
 801b6a6:	b92f      	cbnz	r7, 801b6b4 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
 801b6a8:	4431      	add	r1, r6
 801b6aa:	4660      	mov	r0, ip
 801b6ac:	f7ff ffa9 	bl	801b602 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 801b6b0:	b00b      	add	sp, #44	; 0x2c
 801b6b2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801b6b4:	4621      	mov	r1, r4
 801b6b6:	e7e9      	b.n	801b68c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

0801b6b8 <_ZN8touchgfx7Unicode4itoaElPtti>:
 801b6b8:	b410      	push	{r4}
 801b6ba:	b131      	cbz	r1, 801b6ca <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 801b6bc:	1e9c      	subs	r4, r3, #2
 801b6be:	2c22      	cmp	r4, #34	; 0x22
 801b6c0:	d803      	bhi.n	801b6ca <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 801b6c2:	f85d 4b04 	ldr.w	r4, [sp], #4
 801b6c6:	f7ff bfad 	b.w	801b624 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 801b6ca:	f85d 4b04 	ldr.w	r4, [sp], #4
 801b6ce:	4770      	bx	lr

0801b6d0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 801b6d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b6d4:	4691      	mov	r9, r2
 801b6d6:	b085      	sub	sp, #20
 801b6d8:	6802      	ldr	r2, [r0, #0]
 801b6da:	9201      	str	r2, [sp, #4]
 801b6dc:	4688      	mov	r8, r1
 801b6de:	4683      	mov	fp, r0
 801b6e0:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 801b6e4:	9103      	str	r1, [sp, #12]
 801b6e6:	4610      	mov	r0, r2
 801b6e8:	461c      	mov	r4, r3
 801b6ea:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 801b6ee:	9302      	str	r3, [sp, #8]
 801b6f0:	f7ff ff7a 	bl	801b5e8 <_ZN8touchgfx7Unicode6strlenEPKt>
 801b6f4:	f1b8 0f00 	cmp.w	r8, #0
 801b6f8:	bf0c      	ite	eq
 801b6fa:	4684      	moveq	ip, r0
 801b6fc:	f100 0c01 	addne.w	ip, r0, #1
 801b700:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 801b704:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 801b708:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801b70a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801b70c:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 801b710:	9903      	ldr	r1, [sp, #12]
 801b712:	fa1f fc8c 	uxth.w	ip, ip
 801b716:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 801b71a:	d041      	beq.n	801b7a0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 801b71c:	d834      	bhi.n	801b788 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 801b71e:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 801b722:	d059      	beq.n	801b7d8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 801b724:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 801b728:	d03a      	beq.n	801b7a0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 801b72a:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 801b72e:	d034      	beq.n	801b79a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 801b730:	2400      	movs	r4, #0
 801b732:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 801b736:	3a01      	subs	r2, #1
 801b738:	b169      	cbz	r1, 801b756 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801b73a:	9911      	ldr	r1, [sp, #68]	; 0x44
 801b73c:	458c      	cmp	ip, r1
 801b73e:	da09      	bge.n	801b754 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 801b740:	eba1 010c 	sub.w	r1, r1, ip
 801b744:	b289      	uxth	r1, r1
 801b746:	b933      	cbnz	r3, 801b756 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801b748:	2e00      	cmp	r6, #0
 801b74a:	d051      	beq.n	801b7f0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 801b74c:	2800      	cmp	r0, #0
 801b74e:	d04f      	beq.n	801b7f0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 801b750:	440c      	add	r4, r1
 801b752:	b2a4      	uxth	r4, r4
 801b754:	2100      	movs	r1, #0
 801b756:	682b      	ldr	r3, [r5, #0]
 801b758:	4293      	cmp	r3, r2
 801b75a:	da07      	bge.n	801b76c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 801b75c:	f1b8 0f00 	cmp.w	r8, #0
 801b760:	d004      	beq.n	801b76c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 801b762:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 801b766:	682b      	ldr	r3, [r5, #0]
 801b768:	3301      	adds	r3, #1
 801b76a:	602b      	str	r3, [r5, #0]
 801b76c:	2730      	movs	r7, #48	; 0x30
 801b76e:	2c00      	cmp	r4, #0
 801b770:	d04e      	beq.n	801b810 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801b772:	682e      	ldr	r6, [r5, #0]
 801b774:	3c01      	subs	r4, #1
 801b776:	42b2      	cmp	r2, r6
 801b778:	b2a4      	uxth	r4, r4
 801b77a:	dd49      	ble.n	801b810 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801b77c:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 801b780:	682b      	ldr	r3, [r5, #0]
 801b782:	3301      	adds	r3, #1
 801b784:	602b      	str	r3, [r5, #0]
 801b786:	e7f2      	b.n	801b76e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 801b788:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 801b78c:	d01d      	beq.n	801b7ca <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 801b78e:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 801b792:	d002      	beq.n	801b79a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 801b794:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 801b798:	e7c9      	b.n	801b72e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 801b79a:	4684      	mov	ip, r0
 801b79c:	f04f 0800 	mov.w	r8, #0
 801b7a0:	2c00      	cmp	r4, #0
 801b7a2:	d0c6      	beq.n	801b732 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801b7a4:	b947      	cbnz	r7, 801b7b8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 801b7a6:	2801      	cmp	r0, #1
 801b7a8:	d106      	bne.n	801b7b8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 801b7aa:	8814      	ldrh	r4, [r2, #0]
 801b7ac:	2c30      	cmp	r4, #48	; 0x30
 801b7ae:	bf02      	ittt	eq
 801b7b0:	3202      	addeq	r2, #2
 801b7b2:	f8cb 2000 	streq.w	r2, [fp]
 801b7b6:	4638      	moveq	r0, r7
 801b7b8:	45bc      	cmp	ip, r7
 801b7ba:	da14      	bge.n	801b7e6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 801b7bc:	b2bf      	uxth	r7, r7
 801b7be:	eba7 040c 	sub.w	r4, r7, ip
 801b7c2:	b2a4      	uxth	r4, r4
 801b7c4:	46bc      	mov	ip, r7
 801b7c6:	2600      	movs	r6, #0
 801b7c8:	e7b3      	b.n	801b732 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801b7ca:	4684      	mov	ip, r0
 801b7cc:	b16c      	cbz	r4, 801b7ea <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 801b7ce:	42b8      	cmp	r0, r7
 801b7d0:	dd00      	ble.n	801b7d4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 801b7d2:	b2b8      	uxth	r0, r7
 801b7d4:	2400      	movs	r4, #0
 801b7d6:	e003      	b.n	801b7e0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 801b7d8:	f04f 0c01 	mov.w	ip, #1
 801b7dc:	2400      	movs	r4, #0
 801b7de:	4660      	mov	r0, ip
 801b7e0:	4626      	mov	r6, r4
 801b7e2:	46a0      	mov	r8, r4
 801b7e4:	e7a5      	b.n	801b732 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801b7e6:	2400      	movs	r4, #0
 801b7e8:	e7ed      	b.n	801b7c6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 801b7ea:	4626      	mov	r6, r4
 801b7ec:	46a0      	mov	r8, r4
 801b7ee:	e7a0      	b.n	801b732 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801b7f0:	2900      	cmp	r1, #0
 801b7f2:	d0b0      	beq.n	801b756 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801b7f4:	2720      	movs	r7, #32
 801b7f6:	682e      	ldr	r6, [r5, #0]
 801b7f8:	2900      	cmp	r1, #0
 801b7fa:	d0ac      	beq.n	801b756 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801b7fc:	3901      	subs	r1, #1
 801b7fe:	4296      	cmp	r6, r2
 801b800:	b289      	uxth	r1, r1
 801b802:	daa7      	bge.n	801b754 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 801b804:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 801b808:	682b      	ldr	r3, [r5, #0]
 801b80a:	3301      	adds	r3, #1
 801b80c:	602b      	str	r3, [r5, #0]
 801b80e:	e7f2      	b.n	801b7f6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 801b810:	b188      	cbz	r0, 801b836 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 801b812:	682b      	ldr	r3, [r5, #0]
 801b814:	3801      	subs	r0, #1
 801b816:	429a      	cmp	r2, r3
 801b818:	b280      	uxth	r0, r0
 801b81a:	dd0c      	ble.n	801b836 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 801b81c:	f8db 3000 	ldr.w	r3, [fp]
 801b820:	1c9c      	adds	r4, r3, #2
 801b822:	f8cb 4000 	str.w	r4, [fp]
 801b826:	881c      	ldrh	r4, [r3, #0]
 801b828:	682b      	ldr	r3, [r5, #0]
 801b82a:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 801b82e:	682b      	ldr	r3, [r5, #0]
 801b830:	3301      	adds	r3, #1
 801b832:	602b      	str	r3, [r5, #0]
 801b834:	e7ec      	b.n	801b810 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801b836:	2620      	movs	r6, #32
 801b838:	b151      	cbz	r1, 801b850 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 801b83a:	6828      	ldr	r0, [r5, #0]
 801b83c:	3901      	subs	r1, #1
 801b83e:	4282      	cmp	r2, r0
 801b840:	b289      	uxth	r1, r1
 801b842:	dd05      	ble.n	801b850 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 801b844:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 801b848:	682b      	ldr	r3, [r5, #0]
 801b84a:	3301      	adds	r3, #1
 801b84c:	602b      	str	r3, [r5, #0]
 801b84e:	e7f3      	b.n	801b838 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 801b850:	b005      	add	sp, #20
 801b852:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b856 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 801b856:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801b85a:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 801b85e:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 801b862:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 801b866:	2400      	movs	r4, #0
 801b868:	8014      	strh	r4, [r2, #0]
 801b86a:	701c      	strb	r4, [r3, #0]
 801b86c:	f888 4000 	strb.w	r4, [r8]
 801b870:	f88c 4000 	strb.w	r4, [ip]
 801b874:	f88e 4000 	strb.w	r4, [lr]
 801b878:	703c      	strb	r4, [r7, #0]
 801b87a:	6804      	ldr	r4, [r0, #0]
 801b87c:	b1a4      	cbz	r4, 801b8a8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 801b87e:	8824      	ldrh	r4, [r4, #0]
 801b880:	f04f 0901 	mov.w	r9, #1
 801b884:	b314      	cbz	r4, 801b8cc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 801b886:	2c2b      	cmp	r4, #43	; 0x2b
 801b888:	d001      	beq.n	801b88e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 801b88a:	2c20      	cmp	r4, #32
 801b88c:	d110      	bne.n	801b8b0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 801b88e:	8014      	strh	r4, [r2, #0]
 801b890:	6804      	ldr	r4, [r0, #0]
 801b892:	b10c      	cbz	r4, 801b898 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 801b894:	3402      	adds	r4, #2
 801b896:	6004      	str	r4, [r0, #0]
 801b898:	680c      	ldr	r4, [r1, #0]
 801b89a:	b10c      	cbz	r4, 801b8a0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 801b89c:	3401      	adds	r4, #1
 801b89e:	600c      	str	r4, [r1, #0]
 801b8a0:	6804      	ldr	r4, [r0, #0]
 801b8a2:	b17c      	cbz	r4, 801b8c4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 801b8a4:	8824      	ldrh	r4, [r4, #0]
 801b8a6:	e7ed      	b.n	801b884 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 801b8a8:	680c      	ldr	r4, [r1, #0]
 801b8aa:	b17c      	cbz	r4, 801b8cc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 801b8ac:	7824      	ldrb	r4, [r4, #0]
 801b8ae:	e7e7      	b.n	801b880 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 801b8b0:	2c2d      	cmp	r4, #45	; 0x2d
 801b8b2:	d102      	bne.n	801b8ba <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 801b8b4:	f883 9000 	strb.w	r9, [r3]
 801b8b8:	e7ea      	b.n	801b890 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 801b8ba:	2c23      	cmp	r4, #35	; 0x23
 801b8bc:	d107      	bne.n	801b8ce <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 801b8be:	f888 9000 	strb.w	r9, [r8]
 801b8c2:	e7e5      	b.n	801b890 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 801b8c4:	680c      	ldr	r4, [r1, #0]
 801b8c6:	b10c      	cbz	r4, 801b8cc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 801b8c8:	7824      	ldrb	r4, [r4, #0]
 801b8ca:	e7db      	b.n	801b884 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 801b8cc:	2400      	movs	r4, #0
 801b8ce:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 801b8d2:	2b09      	cmp	r3, #9
 801b8d4:	d901      	bls.n	801b8da <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 801b8d6:	2c2a      	cmp	r4, #42	; 0x2a
 801b8d8:	d122      	bne.n	801b920 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801b8da:	2301      	movs	r3, #1
 801b8dc:	2c30      	cmp	r4, #48	; 0x30
 801b8de:	f88e 3000 	strb.w	r3, [lr]
 801b8e2:	d10d      	bne.n	801b900 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 801b8e4:	f88c 3000 	strb.w	r3, [ip]
 801b8e8:	6803      	ldr	r3, [r0, #0]
 801b8ea:	b10b      	cbz	r3, 801b8f0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 801b8ec:	3302      	adds	r3, #2
 801b8ee:	6003      	str	r3, [r0, #0]
 801b8f0:	680b      	ldr	r3, [r1, #0]
 801b8f2:	b10b      	cbz	r3, 801b8f8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 801b8f4:	3301      	adds	r3, #1
 801b8f6:	600b      	str	r3, [r1, #0]
 801b8f8:	6803      	ldr	r3, [r0, #0]
 801b8fa:	2b00      	cmp	r3, #0
 801b8fc:	d02f      	beq.n	801b95e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 801b8fe:	881c      	ldrh	r4, [r3, #0]
 801b900:	2c2a      	cmp	r4, #42	; 0x2a
 801b902:	d135      	bne.n	801b970 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 801b904:	f04f 33ff 	mov.w	r3, #4294967295
 801b908:	6033      	str	r3, [r6, #0]
 801b90a:	6803      	ldr	r3, [r0, #0]
 801b90c:	b10b      	cbz	r3, 801b912 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 801b90e:	3302      	adds	r3, #2
 801b910:	6003      	str	r3, [r0, #0]
 801b912:	680b      	ldr	r3, [r1, #0]
 801b914:	b10b      	cbz	r3, 801b91a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 801b916:	3301      	adds	r3, #1
 801b918:	600b      	str	r3, [r1, #0]
 801b91a:	6803      	ldr	r3, [r0, #0]
 801b91c:	b31b      	cbz	r3, 801b966 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 801b91e:	881c      	ldrh	r4, [r3, #0]
 801b920:	2c2e      	cmp	r4, #46	; 0x2e
 801b922:	d11a      	bne.n	801b95a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801b924:	2301      	movs	r3, #1
 801b926:	703b      	strb	r3, [r7, #0]
 801b928:	6803      	ldr	r3, [r0, #0]
 801b92a:	b10b      	cbz	r3, 801b930 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 801b92c:	3302      	adds	r3, #2
 801b92e:	6003      	str	r3, [r0, #0]
 801b930:	680b      	ldr	r3, [r1, #0]
 801b932:	b10b      	cbz	r3, 801b938 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 801b934:	3301      	adds	r3, #1
 801b936:	600b      	str	r3, [r1, #0]
 801b938:	6803      	ldr	r3, [r0, #0]
 801b93a:	2b00      	cmp	r3, #0
 801b93c:	d036      	beq.n	801b9ac <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 801b93e:	881b      	ldrh	r3, [r3, #0]
 801b940:	2b2a      	cmp	r3, #42	; 0x2a
 801b942:	d137      	bne.n	801b9b4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 801b944:	f04f 33ff 	mov.w	r3, #4294967295
 801b948:	602b      	str	r3, [r5, #0]
 801b94a:	6803      	ldr	r3, [r0, #0]
 801b94c:	b10b      	cbz	r3, 801b952 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 801b94e:	3302      	adds	r3, #2
 801b950:	6003      	str	r3, [r0, #0]
 801b952:	680b      	ldr	r3, [r1, #0]
 801b954:	b10b      	cbz	r3, 801b95a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801b956:	3301      	adds	r3, #1
 801b958:	600b      	str	r3, [r1, #0]
 801b95a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801b95e:	680c      	ldr	r4, [r1, #0]
 801b960:	b134      	cbz	r4, 801b970 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 801b962:	7824      	ldrb	r4, [r4, #0]
 801b964:	e7cc      	b.n	801b900 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 801b966:	680b      	ldr	r3, [r1, #0]
 801b968:	2b00      	cmp	r3, #0
 801b96a:	d0f6      	beq.n	801b95a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801b96c:	781c      	ldrb	r4, [r3, #0]
 801b96e:	e7d7      	b.n	801b920 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801b970:	2300      	movs	r3, #0
 801b972:	6033      	str	r3, [r6, #0]
 801b974:	220a      	movs	r2, #10
 801b976:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 801b97a:	fa1f f38c 	uxth.w	r3, ip
 801b97e:	2b09      	cmp	r3, #9
 801b980:	d8ce      	bhi.n	801b920 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801b982:	6833      	ldr	r3, [r6, #0]
 801b984:	fb02 c303 	mla	r3, r2, r3, ip
 801b988:	6033      	str	r3, [r6, #0]
 801b98a:	6803      	ldr	r3, [r0, #0]
 801b98c:	b10b      	cbz	r3, 801b992 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 801b98e:	3302      	adds	r3, #2
 801b990:	6003      	str	r3, [r0, #0]
 801b992:	680b      	ldr	r3, [r1, #0]
 801b994:	b10b      	cbz	r3, 801b99a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 801b996:	3301      	adds	r3, #1
 801b998:	600b      	str	r3, [r1, #0]
 801b99a:	6803      	ldr	r3, [r0, #0]
 801b99c:	b10b      	cbz	r3, 801b9a2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 801b99e:	881c      	ldrh	r4, [r3, #0]
 801b9a0:	e7e9      	b.n	801b976 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 801b9a2:	680c      	ldr	r4, [r1, #0]
 801b9a4:	2c00      	cmp	r4, #0
 801b9a6:	d0e6      	beq.n	801b976 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 801b9a8:	7824      	ldrb	r4, [r4, #0]
 801b9aa:	e7e4      	b.n	801b976 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 801b9ac:	680b      	ldr	r3, [r1, #0]
 801b9ae:	b10b      	cbz	r3, 801b9b4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 801b9b0:	781b      	ldrb	r3, [r3, #0]
 801b9b2:	e7c5      	b.n	801b940 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 801b9b4:	2200      	movs	r2, #0
 801b9b6:	602a      	str	r2, [r5, #0]
 801b9b8:	240a      	movs	r4, #10
 801b9ba:	3b30      	subs	r3, #48	; 0x30
 801b9bc:	b29e      	uxth	r6, r3
 801b9be:	2e09      	cmp	r6, #9
 801b9c0:	682a      	ldr	r2, [r5, #0]
 801b9c2:	d813      	bhi.n	801b9ec <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 801b9c4:	fb04 3302 	mla	r3, r4, r2, r3
 801b9c8:	602b      	str	r3, [r5, #0]
 801b9ca:	6803      	ldr	r3, [r0, #0]
 801b9cc:	b10b      	cbz	r3, 801b9d2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 801b9ce:	3302      	adds	r3, #2
 801b9d0:	6003      	str	r3, [r0, #0]
 801b9d2:	680b      	ldr	r3, [r1, #0]
 801b9d4:	b10b      	cbz	r3, 801b9da <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 801b9d6:	3301      	adds	r3, #1
 801b9d8:	600b      	str	r3, [r1, #0]
 801b9da:	6803      	ldr	r3, [r0, #0]
 801b9dc:	b10b      	cbz	r3, 801b9e2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 801b9de:	881b      	ldrh	r3, [r3, #0]
 801b9e0:	e7eb      	b.n	801b9ba <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 801b9e2:	680b      	ldr	r3, [r1, #0]
 801b9e4:	2b00      	cmp	r3, #0
 801b9e6:	d0e8      	beq.n	801b9ba <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 801b9e8:	781b      	ldrb	r3, [r3, #0]
 801b9ea:	e7e6      	b.n	801b9ba <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 801b9ec:	2a06      	cmp	r2, #6
 801b9ee:	bfa8      	it	ge
 801b9f0:	2206      	movge	r2, #6
 801b9f2:	602a      	str	r2, [r5, #0]
 801b9f4:	e7b1      	b.n	801b95a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

0801b9f6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 801b9f6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b9fa:	b0a3      	sub	sp, #140	; 0x8c
 801b9fc:	2600      	movs	r6, #0
 801b9fe:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 801ba02:	4607      	mov	r7, r0
 801ba04:	4688      	mov	r8, r1
 801ba06:	e9cd 3208 	strd	r3, r2, [sp, #32]
 801ba0a:	4631      	mov	r1, r6
 801ba0c:	2242      	movs	r2, #66	; 0x42
 801ba0e:	4648      	mov	r0, r9
 801ba10:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 801ba12:	960d      	str	r6, [sp, #52]	; 0x34
 801ba14:	f012 f955 	bl	802dcc2 <memset>
 801ba18:	b15f      	cbz	r7, 801ba32 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 801ba1a:	f108 3aff 	add.w	sl, r8, #4294967295
 801ba1e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801ba20:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ba22:	b152      	cbz	r2, 801ba3a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 801ba24:	8812      	ldrh	r2, [r2, #0]
 801ba26:	b10a      	cbz	r2, 801ba2c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 801ba28:	459a      	cmp	sl, r3
 801ba2a:	dc2e      	bgt.n	801ba8a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 801ba2c:	2200      	movs	r2, #0
 801ba2e:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 801ba32:	4638      	mov	r0, r7
 801ba34:	b023      	add	sp, #140	; 0x8c
 801ba36:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ba3a:	9a08      	ldr	r2, [sp, #32]
 801ba3c:	2a00      	cmp	r2, #0
 801ba3e:	d0f5      	beq.n	801ba2c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 801ba40:	7812      	ldrb	r2, [r2, #0]
 801ba42:	e7f0      	b.n	801ba26 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 801ba44:	2d00      	cmp	r5, #0
 801ba46:	d0ea      	beq.n	801ba1e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801ba48:	782a      	ldrb	r2, [r5, #0]
 801ba4a:	b142      	cbz	r2, 801ba5e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 801ba4c:	2a25      	cmp	r2, #37	; 0x25
 801ba4e:	d001      	beq.n	801ba54 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 801ba50:	459a      	cmp	sl, r3
 801ba52:	dc08      	bgt.n	801ba66 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 801ba54:	f1bb 0f00 	cmp.w	fp, #0
 801ba58:	d121      	bne.n	801ba9e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 801ba5a:	2d00      	cmp	r5, #0
 801ba5c:	d0df      	beq.n	801ba1e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801ba5e:	782a      	ldrb	r2, [r5, #0]
 801ba60:	f04f 0b00 	mov.w	fp, #0
 801ba64:	e01d      	b.n	801baa2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 801ba66:	f1bb 0f00 	cmp.w	fp, #0
 801ba6a:	d078      	beq.n	801bb5e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 801ba6c:	f8bb 2000 	ldrh.w	r2, [fp]
 801ba70:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 801ba74:	f1bb 0f00 	cmp.w	fp, #0
 801ba78:	d002      	beq.n	801ba80 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 801ba7a:	f10b 0202 	add.w	r2, fp, #2
 801ba7e:	9209      	str	r2, [sp, #36]	; 0x24
 801ba80:	b10d      	cbz	r5, 801ba86 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 801ba82:	3501      	adds	r5, #1
 801ba84:	9508      	str	r5, [sp, #32]
 801ba86:	3301      	adds	r3, #1
 801ba88:	930d      	str	r3, [sp, #52]	; 0x34
 801ba8a:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 801ba8e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ba90:	f1bb 0f00 	cmp.w	fp, #0
 801ba94:	d0d6      	beq.n	801ba44 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 801ba96:	f8bb 2000 	ldrh.w	r2, [fp]
 801ba9a:	2a00      	cmp	r2, #0
 801ba9c:	d1d6      	bne.n	801ba4c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 801ba9e:	f8bb 2000 	ldrh.w	r2, [fp]
 801baa2:	2a00      	cmp	r2, #0
 801baa4:	d0bb      	beq.n	801ba1e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801baa6:	459a      	cmp	sl, r3
 801baa8:	ddb9      	ble.n	801ba1e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801baaa:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 801baae:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 801bab2:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 801bab6:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 801baba:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 801babe:	960e      	str	r6, [sp, #56]	; 0x38
 801bac0:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 801bac4:	960f      	str	r6, [sp, #60]	; 0x3c
 801bac6:	f1bb 0f00 	cmp.w	fp, #0
 801baca:	d002      	beq.n	801bad2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 801bacc:	f10b 0302 	add.w	r3, fp, #2
 801bad0:	9309      	str	r3, [sp, #36]	; 0x24
 801bad2:	b10d      	cbz	r5, 801bad8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 801bad4:	1c6b      	adds	r3, r5, #1
 801bad6:	9308      	str	r3, [sp, #32]
 801bad8:	ab0f      	add	r3, sp, #60	; 0x3c
 801bada:	9305      	str	r3, [sp, #20]
 801badc:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 801bae0:	9304      	str	r3, [sp, #16]
 801bae2:	ab0e      	add	r3, sp, #56	; 0x38
 801bae4:	9303      	str	r3, [sp, #12]
 801bae6:	ab0c      	add	r3, sp, #48	; 0x30
 801bae8:	9302      	str	r3, [sp, #8]
 801baea:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 801baee:	9301      	str	r3, [sp, #4]
 801baf0:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 801baf4:	9300      	str	r3, [sp, #0]
 801baf6:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 801bafa:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 801bafe:	a908      	add	r1, sp, #32
 801bb00:	a809      	add	r0, sp, #36	; 0x24
 801bb02:	f7ff fea8 	bl	801b856 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 801bb06:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801bb08:	2b00      	cmp	r3, #0
 801bb0a:	bfbe      	ittt	lt
 801bb0c:	6823      	ldrlt	r3, [r4, #0]
 801bb0e:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 801bb12:	930e      	strlt	r3, [sp, #56]	; 0x38
 801bb14:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801bb16:	bfb8      	it	lt
 801bb18:	3404      	addlt	r4, #4
 801bb1a:	2b00      	cmp	r3, #0
 801bb1c:	bfb8      	it	lt
 801bb1e:	6823      	ldrlt	r3, [r4, #0]
 801bb20:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801bb24:	bfbe      	ittt	lt
 801bb26:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 801bb2a:	930f      	strlt	r3, [sp, #60]	; 0x3c
 801bb2c:	3404      	addlt	r4, #4
 801bb2e:	b1d9      	cbz	r1, 801bb68 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 801bb30:	880b      	ldrh	r3, [r1, #0]
 801bb32:	2b69      	cmp	r3, #105	; 0x69
 801bb34:	d01f      	beq.n	801bb76 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801bb36:	d82f      	bhi.n	801bb98 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 801bb38:	2b58      	cmp	r3, #88	; 0x58
 801bb3a:	d01c      	beq.n	801bb76 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801bb3c:	d818      	bhi.n	801bb70 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 801bb3e:	2b25      	cmp	r3, #37	; 0x25
 801bb40:	d034      	beq.n	801bbac <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 801bb42:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 801bb46:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801bb48:	f1bb 0f00 	cmp.w	fp, #0
 801bb4c:	f000 80b8 	beq.w	801bcc0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 801bb50:	f8bb 5000 	ldrh.w	r5, [fp]
 801bb54:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 801bb58:	3301      	adds	r3, #1
 801bb5a:	930d      	str	r3, [sp, #52]	; 0x34
 801bb5c:	e029      	b.n	801bbb2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 801bb5e:	b10d      	cbz	r5, 801bb64 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 801bb60:	782a      	ldrb	r2, [r5, #0]
 801bb62:	e785      	b.n	801ba70 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 801bb64:	462a      	mov	r2, r5
 801bb66:	e783      	b.n	801ba70 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 801bb68:	2a00      	cmp	r2, #0
 801bb6a:	d0ea      	beq.n	801bb42 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801bb6c:	7813      	ldrb	r3, [r2, #0]
 801bb6e:	e7e0      	b.n	801bb32 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 801bb70:	3b63      	subs	r3, #99	; 0x63
 801bb72:	2b01      	cmp	r3, #1
 801bb74:	d8e5      	bhi.n	801bb42 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801bb76:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 801bb7a:	b329      	cbz	r1, 801bbc8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 801bb7c:	880b      	ldrh	r3, [r1, #0]
 801bb7e:	2b69      	cmp	r3, #105	; 0x69
 801bb80:	d063      	beq.n	801bc4a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 801bb82:	d825      	bhi.n	801bbd0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 801bb84:	2b63      	cmp	r3, #99	; 0x63
 801bb86:	d038      	beq.n	801bbfa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 801bb88:	2b64      	cmp	r3, #100	; 0x64
 801bb8a:	d05e      	beq.n	801bc4a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 801bb8c:	2b58      	cmp	r3, #88	; 0x58
 801bb8e:	d07b      	beq.n	801bc88 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 801bb90:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 801bb94:	4625      	mov	r5, r4
 801bb96:	e036      	b.n	801bc06 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801bb98:	2b73      	cmp	r3, #115	; 0x73
 801bb9a:	d0ec      	beq.n	801bb76 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801bb9c:	d802      	bhi.n	801bba4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 801bb9e:	2b6f      	cmp	r3, #111	; 0x6f
 801bba0:	d1cf      	bne.n	801bb42 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801bba2:	e7e8      	b.n	801bb76 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801bba4:	2b75      	cmp	r3, #117	; 0x75
 801bba6:	d0e6      	beq.n	801bb76 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801bba8:	2b78      	cmp	r3, #120	; 0x78
 801bbaa:	e7f9      	b.n	801bba0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 801bbac:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801bbae:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 801bbb2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801bbb4:	b10b      	cbz	r3, 801bbba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 801bbb6:	3302      	adds	r3, #2
 801bbb8:	9309      	str	r3, [sp, #36]	; 0x24
 801bbba:	9b08      	ldr	r3, [sp, #32]
 801bbbc:	2b00      	cmp	r3, #0
 801bbbe:	f43f af2e 	beq.w	801ba1e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801bbc2:	3301      	adds	r3, #1
 801bbc4:	9308      	str	r3, [sp, #32]
 801bbc6:	e72a      	b.n	801ba1e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801bbc8:	2a00      	cmp	r2, #0
 801bbca:	d0e1      	beq.n	801bb90 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801bbcc:	7813      	ldrb	r3, [r2, #0]
 801bbce:	e7d6      	b.n	801bb7e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 801bbd0:	2b73      	cmp	r3, #115	; 0x73
 801bbd2:	d036      	beq.n	801bc42 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 801bbd4:	d807      	bhi.n	801bbe6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 801bbd6:	2b6f      	cmp	r3, #111	; 0x6f
 801bbd8:	d1da      	bne.n	801bb90 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801bbda:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801bbdc:	1d25      	adds	r5, r4, #4
 801bbde:	eba8 0202 	sub.w	r2, r8, r2
 801bbe2:	2308      	movs	r3, #8
 801bbe4:	e04a      	b.n	801bc7c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 801bbe6:	2b75      	cmp	r3, #117	; 0x75
 801bbe8:	d043      	beq.n	801bc72 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 801bbea:	2b78      	cmp	r3, #120	; 0x78
 801bbec:	d1d0      	bne.n	801bb90 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801bbee:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801bbf0:	1d25      	adds	r5, r4, #4
 801bbf2:	eba8 0202 	sub.w	r2, r8, r2
 801bbf6:	2310      	movs	r3, #16
 801bbf8:	e040      	b.n	801bc7c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 801bbfa:	6823      	ldr	r3, [r4, #0]
 801bbfc:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 801bc00:	1d25      	adds	r5, r4, #4
 801bc02:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 801bc06:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801bc08:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 801bc0c:	2b00      	cmp	r3, #0
 801bc0e:	d052      	beq.n	801bcb6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 801bc10:	881a      	ldrh	r2, [r3, #0]
 801bc12:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 801bc16:	a80d      	add	r0, sp, #52	; 0x34
 801bc18:	9005      	str	r0, [sp, #20]
 801bc1a:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 801bc1e:	9004      	str	r0, [sp, #16]
 801bc20:	980e      	ldr	r0, [sp, #56]	; 0x38
 801bc22:	9003      	str	r0, [sp, #12]
 801bc24:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 801bc28:	9002      	str	r0, [sp, #8]
 801bc2a:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801bc2c:	9001      	str	r0, [sp, #4]
 801bc2e:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 801bc32:	9000      	str	r0, [sp, #0]
 801bc34:	e9cd 8706 	strd	r8, r7, [sp, #24]
 801bc38:	a810      	add	r0, sp, #64	; 0x40
 801bc3a:	f7ff fd49 	bl	801b6d0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 801bc3e:	462c      	mov	r4, r5
 801bc40:	e7b7      	b.n	801bbb2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 801bc42:	6823      	ldr	r3, [r4, #0]
 801bc44:	1d25      	adds	r5, r4, #4
 801bc46:	9310      	str	r3, [sp, #64]	; 0x40
 801bc48:	e7dd      	b.n	801bc06 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801bc4a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801bc4c:	6820      	ldr	r0, [r4, #0]
 801bc4e:	eba8 0202 	sub.w	r2, r8, r2
 801bc52:	230a      	movs	r3, #10
 801bc54:	b292      	uxth	r2, r2
 801bc56:	4649      	mov	r1, r9
 801bc58:	f7ff fce4 	bl	801b624 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 801bc5c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 801bc60:	2b2d      	cmp	r3, #45	; 0x2d
 801bc62:	f104 0504 	add.w	r5, r4, #4
 801bc66:	d1ce      	bne.n	801bc06 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801bc68:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801bc6c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801bc6e:	3302      	adds	r3, #2
 801bc70:	e7e9      	b.n	801bc46 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 801bc72:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801bc74:	1d25      	adds	r5, r4, #4
 801bc76:	eba8 0202 	sub.w	r2, r8, r2
 801bc7a:	230a      	movs	r3, #10
 801bc7c:	b292      	uxth	r2, r2
 801bc7e:	4649      	mov	r1, r9
 801bc80:	6820      	ldr	r0, [r4, #0]
 801bc82:	f7ff fcfb 	bl	801b67c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 801bc86:	e7be      	b.n	801bc06 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801bc88:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801bc8a:	6820      	ldr	r0, [r4, #0]
 801bc8c:	eba8 0202 	sub.w	r2, r8, r2
 801bc90:	b292      	uxth	r2, r2
 801bc92:	2310      	movs	r3, #16
 801bc94:	4649      	mov	r1, r9
 801bc96:	f7ff fcf1 	bl	801b67c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 801bc9a:	1d25      	adds	r5, r4, #4
 801bc9c:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 801bca0:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 801bca4:	2b00      	cmp	r3, #0
 801bca6:	d0ae      	beq.n	801bc06 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801bca8:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 801bcac:	2919      	cmp	r1, #25
 801bcae:	d8f7      	bhi.n	801bca0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 801bcb0:	3b20      	subs	r3, #32
 801bcb2:	8013      	strh	r3, [r2, #0]
 801bcb4:	e7f4      	b.n	801bca0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 801bcb6:	9a08      	ldr	r2, [sp, #32]
 801bcb8:	2a00      	cmp	r2, #0
 801bcba:	d0aa      	beq.n	801bc12 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 801bcbc:	7812      	ldrb	r2, [r2, #0]
 801bcbe:	e7a8      	b.n	801bc12 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 801bcc0:	2d00      	cmp	r5, #0
 801bcc2:	f43f af47 	beq.w	801bb54 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 801bcc6:	782d      	ldrb	r5, [r5, #0]
 801bcc8:	e744      	b.n	801bb54 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

0801bcca <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 801bcca:	b507      	push	{r0, r1, r2, lr}
 801bccc:	9300      	str	r3, [sp, #0]
 801bcce:	4613      	mov	r3, r2
 801bcd0:	2200      	movs	r2, #0
 801bcd2:	f7ff fe90 	bl	801b9f6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 801bcd6:	b003      	add	sp, #12
 801bcd8:	f85d fb04 	ldr.w	pc, [sp], #4

0801bcdc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 801bcdc:	b40c      	push	{r2, r3}
 801bcde:	b507      	push	{r0, r1, r2, lr}
 801bce0:	ab04      	add	r3, sp, #16
 801bce2:	f853 2b04 	ldr.w	r2, [r3], #4
 801bce6:	9301      	str	r3, [sp, #4]
 801bce8:	f7ff ffef 	bl	801bcca <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 801bcec:	b003      	add	sp, #12
 801bcee:	f85d eb04 	ldr.w	lr, [sp], #4
 801bcf2:	b002      	add	sp, #8
 801bcf4:	4770      	bx	lr
	...

0801bcf8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>:
 801bcf8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bcfc:	b0c5      	sub	sp, #276	; 0x114
 801bcfe:	2400      	movs	r4, #0
 801bd00:	af11      	add	r7, sp, #68	; 0x44
 801bd02:	4606      	mov	r6, r0
 801bd04:	468a      	mov	sl, r1
 801bd06:	e9cd 3208 	strd	r3, r2, [sp, #32]
 801bd0a:	4621      	mov	r1, r4
 801bd0c:	22c8      	movs	r2, #200	; 0xc8
 801bd0e:	4638      	mov	r0, r7
 801bd10:	f8dd b138 	ldr.w	fp, [sp, #312]	; 0x138
 801bd14:	940d      	str	r4, [sp, #52]	; 0x34
 801bd16:	f011 ffd4 	bl	802dcc2 <memset>
 801bd1a:	b16e      	cbz	r6, 801bd38 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x40>
 801bd1c:	ed9f 5aa8 	vldr	s10, [pc, #672]	; 801bfc0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c8>
 801bd20:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801bd22:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801bd24:	b162      	cbz	r2, 801bd40 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x48>
 801bd26:	8812      	ldrh	r2, [r2, #0]
 801bd28:	b11a      	cbz	r2, 801bd32 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 801bd2a:	f10a 31ff 	add.w	r1, sl, #4294967295
 801bd2e:	4299      	cmp	r1, r3
 801bd30:	dc2e      	bgt.n	801bd90 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x98>
 801bd32:	2200      	movs	r2, #0
 801bd34:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 801bd38:	4630      	mov	r0, r6
 801bd3a:	b045      	add	sp, #276	; 0x114
 801bd3c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bd40:	9a08      	ldr	r2, [sp, #32]
 801bd42:	2a00      	cmp	r2, #0
 801bd44:	d0f5      	beq.n	801bd32 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 801bd46:	7812      	ldrb	r2, [r2, #0]
 801bd48:	e7ee      	b.n	801bd28 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x30>
 801bd4a:	2d00      	cmp	r5, #0
 801bd4c:	d0e8      	beq.n	801bd20 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801bd4e:	782a      	ldrb	r2, [r5, #0]
 801bd50:	b142      	cbz	r2, 801bd64 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x6c>
 801bd52:	2a25      	cmp	r2, #37	; 0x25
 801bd54:	d001      	beq.n	801bd5a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x62>
 801bd56:	4299      	cmp	r1, r3
 801bd58:	dc08      	bgt.n	801bd6c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x74>
 801bd5a:	f1b8 0f00 	cmp.w	r8, #0
 801bd5e:	d121      	bne.n	801bda4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xac>
 801bd60:	2d00      	cmp	r5, #0
 801bd62:	d0dd      	beq.n	801bd20 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801bd64:	782a      	ldrb	r2, [r5, #0]
 801bd66:	f04f 0800 	mov.w	r8, #0
 801bd6a:	e01d      	b.n	801bda8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xb0>
 801bd6c:	f1b8 0f00 	cmp.w	r8, #0
 801bd70:	d07f      	beq.n	801be72 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x17a>
 801bd72:	f8b8 2000 	ldrh.w	r2, [r8]
 801bd76:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 801bd7a:	f1b8 0f00 	cmp.w	r8, #0
 801bd7e:	d002      	beq.n	801bd86 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x8e>
 801bd80:	f108 0202 	add.w	r2, r8, #2
 801bd84:	9209      	str	r2, [sp, #36]	; 0x24
 801bd86:	b10d      	cbz	r5, 801bd8c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x94>
 801bd88:	3501      	adds	r5, #1
 801bd8a:	9508      	str	r5, [sp, #32]
 801bd8c:	3301      	adds	r3, #1
 801bd8e:	930d      	str	r3, [sp, #52]	; 0x34
 801bd90:	e9dd 5808 	ldrd	r5, r8, [sp, #32]
 801bd94:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801bd96:	f1b8 0f00 	cmp.w	r8, #0
 801bd9a:	d0d6      	beq.n	801bd4a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x52>
 801bd9c:	f8b8 2000 	ldrh.w	r2, [r8]
 801bda0:	2a00      	cmp	r2, #0
 801bda2:	d1d6      	bne.n	801bd52 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x5a>
 801bda4:	f8b8 2000 	ldrh.w	r2, [r8]
 801bda8:	2a00      	cmp	r2, #0
 801bdaa:	d0b9      	beq.n	801bd20 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801bdac:	4299      	cmp	r1, r3
 801bdae:	ddb7      	ble.n	801bd20 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801bdb0:	2300      	movs	r3, #0
 801bdb2:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801bdb6:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
 801bdba:	f88d 302e 	strb.w	r3, [sp, #46]	; 0x2e
 801bdbe:	f88d 302f 	strb.w	r3, [sp, #47]	; 0x2f
 801bdc2:	f88d 3030 	strb.w	r3, [sp, #48]	; 0x30
 801bdc6:	930e      	str	r3, [sp, #56]	; 0x38
 801bdc8:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
 801bdcc:	930f      	str	r3, [sp, #60]	; 0x3c
 801bdce:	f1b8 0f00 	cmp.w	r8, #0
 801bdd2:	d002      	beq.n	801bdda <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe2>
 801bdd4:	f108 0302 	add.w	r3, r8, #2
 801bdd8:	9309      	str	r3, [sp, #36]	; 0x24
 801bdda:	b10d      	cbz	r5, 801bde0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe8>
 801bddc:	1c6b      	adds	r3, r5, #1
 801bdde:	9308      	str	r3, [sp, #32]
 801bde0:	ab0f      	add	r3, sp, #60	; 0x3c
 801bde2:	9305      	str	r3, [sp, #20]
 801bde4:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 801bde8:	9304      	str	r3, [sp, #16]
 801bdea:	ab0e      	add	r3, sp, #56	; 0x38
 801bdec:	9303      	str	r3, [sp, #12]
 801bdee:	ab0c      	add	r3, sp, #48	; 0x30
 801bdf0:	9302      	str	r3, [sp, #8]
 801bdf2:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 801bdf6:	9301      	str	r3, [sp, #4]
 801bdf8:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 801bdfc:	9300      	str	r3, [sp, #0]
 801bdfe:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 801be02:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 801be06:	a908      	add	r1, sp, #32
 801be08:	a809      	add	r0, sp, #36	; 0x24
 801be0a:	f7ff fd24 	bl	801b856 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 801be0e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801be10:	2b00      	cmp	r3, #0
 801be12:	da0b      	bge.n	801be2c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x134>
 801be14:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 801be18:	edd3 7a00 	vldr	s15, [r3]
 801be1c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801be20:	3401      	adds	r4, #1
 801be22:	ee17 3a90 	vmov	r3, s15
 801be26:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801be2a:	930e      	str	r3, [sp, #56]	; 0x38
 801be2c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801be2e:	2b00      	cmp	r3, #0
 801be30:	da0b      	bge.n	801be4a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x152>
 801be32:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 801be36:	edd3 7a00 	vldr	s15, [r3]
 801be3a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801be3e:	3401      	adds	r4, #1
 801be40:	ee17 3a90 	vmov	r3, s15
 801be44:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801be48:	930f      	str	r3, [sp, #60]	; 0x3c
 801be4a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801be4c:	b1b3      	cbz	r3, 801be7c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x184>
 801be4e:	881a      	ldrh	r2, [r3, #0]
 801be50:	2a25      	cmp	r2, #37	; 0x25
 801be52:	d018      	beq.n	801be86 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x18e>
 801be54:	2a66      	cmp	r2, #102	; 0x66
 801be56:	d01c      	beq.n	801be92 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x19a>
 801be58:	e9cd 5808 	strd	r5, r8, [sp, #32]
 801be5c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801be5e:	f1b8 0f00 	cmp.w	r8, #0
 801be62:	f000 8121 	beq.w	801c0a8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3b0>
 801be66:	f8b8 5000 	ldrh.w	r5, [r8]
 801be6a:	f826 5013 	strh.w	r5, [r6, r3, lsl #1]
 801be6e:	3301      	adds	r3, #1
 801be70:	e00d      	b.n	801be8e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x196>
 801be72:	b10d      	cbz	r5, 801be78 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x180>
 801be74:	782a      	ldrb	r2, [r5, #0]
 801be76:	e77e      	b.n	801bd76 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 801be78:	462a      	mov	r2, r5
 801be7a:	e77c      	b.n	801bd76 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 801be7c:	9b08      	ldr	r3, [sp, #32]
 801be7e:	2b00      	cmp	r3, #0
 801be80:	d0ea      	beq.n	801be58 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x160>
 801be82:	781a      	ldrb	r2, [r3, #0]
 801be84:	e7e4      	b.n	801be50 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x158>
 801be86:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801be88:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 801be8c:	3302      	adds	r3, #2
 801be8e:	930d      	str	r3, [sp, #52]	; 0x34
 801be90:	e041      	b.n	801bf16 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x21e>
 801be92:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 801be96:	edd3 7a00 	vldr	s15, [r3]
 801be9a:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 801be9e:	9710      	str	r7, [sp, #64]	; 0x40
 801bea0:	3401      	adds	r4, #1
 801bea2:	b923      	cbnz	r3, 801beae <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1b6>
 801bea4:	2301      	movs	r3, #1
 801bea6:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
 801beaa:	2306      	movs	r3, #6
 801beac:	930f      	str	r3, [sp, #60]	; 0x3c
 801beae:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801beb2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801beb6:	bf48      	it	mi
 801beb8:	eef1 7a67 	vnegmi.f32	s15, s15
 801bebc:	eeb0 7ae7 	vabs.f32	s14, s15
 801bec0:	bf48      	it	mi
 801bec2:	232d      	movmi	r3, #45	; 0x2d
 801bec4:	eeb4 7a45 	vcmp.f32	s14, s10
 801bec8:	bf48      	it	mi
 801beca:	f8ad 3032 	strhmi.w	r3, [sp, #50]	; 0x32
 801bece:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bed2:	dd2b      	ble.n	801bf2c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x234>
 801bed4:	4b3b      	ldr	r3, [pc, #236]	; (801bfc4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2cc>)
 801bed6:	9311      	str	r3, [sp, #68]	; 0x44
 801bed8:	2366      	movs	r3, #102	; 0x66
 801beda:	9312      	str	r3, [sp, #72]	; 0x48
 801bedc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801bede:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 801bee2:	2b00      	cmp	r3, #0
 801bee4:	f000 80da 	beq.w	801c09c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a4>
 801bee8:	881a      	ldrh	r2, [r3, #0]
 801beea:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 801beee:	a80d      	add	r0, sp, #52	; 0x34
 801bef0:	9005      	str	r0, [sp, #20]
 801bef2:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 801bef6:	9004      	str	r0, [sp, #16]
 801bef8:	980e      	ldr	r0, [sp, #56]	; 0x38
 801befa:	9003      	str	r0, [sp, #12]
 801befc:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 801bf00:	9002      	str	r0, [sp, #8]
 801bf02:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801bf04:	9001      	str	r0, [sp, #4]
 801bf06:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 801bf0a:	9000      	str	r0, [sp, #0]
 801bf0c:	e9cd a606 	strd	sl, r6, [sp, #24]
 801bf10:	a810      	add	r0, sp, #64	; 0x40
 801bf12:	f7ff fbdd 	bl	801b6d0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 801bf16:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801bf18:	b10b      	cbz	r3, 801bf1e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x226>
 801bf1a:	3302      	adds	r3, #2
 801bf1c:	9309      	str	r3, [sp, #36]	; 0x24
 801bf1e:	9b08      	ldr	r3, [sp, #32]
 801bf20:	2b00      	cmp	r3, #0
 801bf22:	f43f aefd 	beq.w	801bd20 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801bf26:	3301      	adds	r3, #1
 801bf28:	9308      	str	r3, [sp, #32]
 801bf2a:	e6f9      	b.n	801bd20 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801bf2c:	eef4 7a67 	vcmp.f32	s15, s15
 801bf30:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bf34:	d63a      	bvs.n	801bfac <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2b4>
 801bf36:	f10d 0846 	add.w	r8, sp, #70	; 0x46
 801bf3a:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 801bf3e:	f8cd 8040 	str.w	r8, [sp, #64]	; 0x40
 801bf42:	eeb0 6a67 	vmov.f32	s12, s15
 801bf46:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801bf4a:	eef0 5a47 	vmov.f32	s11, s14
 801bf4e:	eeb4 6ac7 	vcmpe.f32	s12, s14
 801bf52:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bf56:	da2d      	bge.n	801bfb4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2bc>
 801bf58:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801bf5a:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 801bf5e:	2100      	movs	r1, #0
 801bf60:	eef0 4a46 	vmov.f32	s9, s12
 801bf64:	ebaa 0202 	sub.w	r2, sl, r2
 801bf68:	eef4 6ac6 	vcmpe.f32	s13, s12
 801bf6c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bf70:	b28d      	uxth	r5, r1
 801bf72:	db2c      	blt.n	801bfce <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 801bf74:	1a53      	subs	r3, r2, r1
 801bf76:	2b00      	cmp	r3, #0
 801bf78:	dd29      	ble.n	801bfce <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 801bf7a:	3101      	adds	r1, #1
 801bf7c:	2964      	cmp	r1, #100	; 0x64
 801bf7e:	d025      	beq.n	801bfcc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d4>
 801bf80:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 801bf84:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 801bf88:	ee17 3a10 	vmov	r3, s14
 801bf8c:	2b09      	cmp	r3, #9
 801bf8e:	bfa8      	it	ge
 801bf90:	2309      	movge	r3, #9
 801bf92:	ee07 3a10 	vmov	s14, r3
 801bf96:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801bf9a:	f103 0030 	add.w	r0, r3, #48	; 0x30
 801bf9e:	eee7 7a66 	vfms.f32	s15, s14, s13
 801bfa2:	f827 0011 	strh.w	r0, [r7, r1, lsl #1]
 801bfa6:	eec6 6aa5 	vdiv.f32	s13, s13, s11
 801bfaa:	e7dd      	b.n	801bf68 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x270>
 801bfac:	4b06      	ldr	r3, [pc, #24]	; (801bfc8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d0>)
 801bfae:	9311      	str	r3, [sp, #68]	; 0x44
 801bfb0:	236e      	movs	r3, #110	; 0x6e
 801bfb2:	e792      	b.n	801beda <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e2>
 801bfb4:	ee66 6a87 	vmul.f32	s13, s13, s14
 801bfb8:	ee86 6a07 	vdiv.f32	s12, s12, s14
 801bfbc:	e7c7      	b.n	801bf4e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x256>
 801bfbe:	bf00      	nop
 801bfc0:	7f7fffff 	.word	0x7f7fffff
 801bfc4:	006e0069 	.word	0x006e0069
 801bfc8:	0061006e 	.word	0x0061006e
 801bfcc:	2563      	movs	r5, #99	; 0x63
 801bfce:	2a63      	cmp	r2, #99	; 0x63
 801bfd0:	bfd4      	ite	le
 801bfd2:	ebc5 0202 	rsble	r2, r5, r2
 801bfd6:	f1c5 0263 	rsbgt	r2, r5, #99	; 0x63
 801bfda:	2a00      	cmp	r2, #0
 801bfdc:	dd43      	ble.n	801c066 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36e>
 801bfde:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801bfe0:	2b00      	cmp	r3, #0
 801bfe2:	dd40      	ble.n	801c066 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36e>
 801bfe4:	f04f 0901 	mov.w	r9, #1
 801bfe8:	210a      	movs	r1, #10
 801bfea:	f113 33ff 	adds.w	r3, r3, #4294967295
 801bfee:	d30c      	bcc.n	801c00a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x312>
 801bff0:	ee67 7aa5 	vmul.f32	s15, s15, s11
 801bff4:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 801bff8:	ee17 0a10 	vmov	r0, s14
 801bffc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801c000:	fb01 0909 	mla	r9, r1, r9, r0
 801c004:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801c008:	e7ef      	b.n	801bfea <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2f2>
 801c00a:	3501      	adds	r5, #1
 801c00c:	930f      	str	r3, [sp, #60]	; 0x3c
 801c00e:	b292      	uxth	r2, r2
 801c010:	230a      	movs	r3, #10
 801c012:	eb07 0145 	add.w	r1, r7, r5, lsl #1
 801c016:	4648      	mov	r0, r9
 801c018:	f7ff fb4e 	bl	801b6b8 <_ZN8touchgfx7Unicode4itoaElPtti>
 801c01c:	f1b9 0f01 	cmp.w	r9, #1
 801c020:	dc1f      	bgt.n	801c062 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36a>
 801c022:	f89d 302e 	ldrb.w	r3, [sp, #46]	; 0x2e
 801c026:	2b00      	cmp	r3, #0
 801c028:	bf0c      	ite	eq
 801c02a:	2300      	moveq	r3, #0
 801c02c:	232e      	movne	r3, #46	; 0x2e
 801c02e:	aa44      	add	r2, sp, #272	; 0x110
 801c030:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801c034:	eef4 7ae4 	vcmpe.f32	s15, s9
 801c038:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c03c:	f825 3ccc 	strh.w	r3, [r5, #-204]
 801c040:	f6ff af4c 	blt.w	801bedc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 801c044:	2300      	movs	r3, #0
 801c046:	f838 2b02 	ldrh.w	r2, [r8], #2
 801c04a:	1c59      	adds	r1, r3, #1
 801c04c:	b98a      	cbnz	r2, 801c072 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x37a>
 801c04e:	b29b      	uxth	r3, r3
 801c050:	2130      	movs	r1, #48	; 0x30
 801c052:	b983      	cbnz	r3, 801c076 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x37e>
 801c054:	2331      	movs	r3, #49	; 0x31
 801c056:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 801c05a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c05c:	3b02      	subs	r3, #2
 801c05e:	9310      	str	r3, [sp, #64]	; 0x40
 801c060:	e73c      	b.n	801bedc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 801c062:	232e      	movs	r3, #46	; 0x2e
 801c064:	e7e3      	b.n	801c02e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x336>
 801c066:	ab44      	add	r3, sp, #272	; 0x110
 801c068:	3501      	adds	r5, #1
 801c06a:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 801c06e:	2300      	movs	r3, #0
 801c070:	e7e0      	b.n	801c034 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x33c>
 801c072:	460b      	mov	r3, r1
 801c074:	e7e7      	b.n	801c046 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x34e>
 801c076:	f837 2013 	ldrh.w	r2, [r7, r3, lsl #1]
 801c07a:	f1a2 0030 	sub.w	r0, r2, #48	; 0x30
 801c07e:	2808      	cmp	r0, #8
 801c080:	d806      	bhi.n	801c090 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x398>
 801c082:	a944      	add	r1, sp, #272	; 0x110
 801c084:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 801c088:	3201      	adds	r2, #1
 801c08a:	f823 2ccc 	strh.w	r2, [r3, #-204]
 801c08e:	e725      	b.n	801bedc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 801c090:	2a39      	cmp	r2, #57	; 0x39
 801c092:	bf08      	it	eq
 801c094:	f827 1013 	strheq.w	r1, [r7, r3, lsl #1]
 801c098:	3b01      	subs	r3, #1
 801c09a:	e7da      	b.n	801c052 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x35a>
 801c09c:	9a08      	ldr	r2, [sp, #32]
 801c09e:	2a00      	cmp	r2, #0
 801c0a0:	f43f af23 	beq.w	801beea <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 801c0a4:	7812      	ldrb	r2, [r2, #0]
 801c0a6:	e720      	b.n	801beea <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 801c0a8:	2d00      	cmp	r5, #0
 801c0aa:	f43f aede 	beq.w	801be6a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>
 801c0ae:	782d      	ldrb	r5, [r5, #0]
 801c0b0:	e6db      	b.n	801be6a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>
 801c0b2:	bf00      	nop

0801c0b4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>:
 801c0b4:	b507      	push	{r0, r1, r2, lr}
 801c0b6:	9300      	str	r3, [sp, #0]
 801c0b8:	4613      	mov	r3, r2
 801c0ba:	2200      	movs	r2, #0
 801c0bc:	f7ff fe1c 	bl	801bcf8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>
 801c0c0:	b003      	add	sp, #12
 801c0c2:	f85d fb04 	ldr.w	pc, [sp], #4
	...

0801c0c8 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 801c0c8:	4b01      	ldr	r3, [pc, #4]	; (801c0d0 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 801c0ca:	6018      	str	r0, [r3, #0]
 801c0cc:	4770      	bx	lr
 801c0ce:	bf00      	nop
 801c0d0:	200138b4 	.word	0x200138b4

0801c0d4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 801c0d4:	4b06      	ldr	r3, [pc, #24]	; (801c0f0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 801c0d6:	881a      	ldrh	r2, [r3, #0]
 801c0d8:	4282      	cmp	r2, r0
 801c0da:	d807      	bhi.n	801c0ec <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 801c0dc:	4b05      	ldr	r3, [pc, #20]	; (801c0f4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 801c0de:	881b      	ldrh	r3, [r3, #0]
 801c0e0:	4413      	add	r3, r2
 801c0e2:	4298      	cmp	r0, r3
 801c0e4:	bfac      	ite	ge
 801c0e6:	2000      	movge	r0, #0
 801c0e8:	2001      	movlt	r0, #1
 801c0ea:	4770      	bx	lr
 801c0ec:	2000      	movs	r0, #0
 801c0ee:	4770      	bx	lr
 801c0f0:	200138d4 	.word	0x200138d4
 801c0f4:	200138d8 	.word	0x200138d8

0801c0f8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 801c0f8:	b508      	push	{r3, lr}
 801c0fa:	4601      	mov	r1, r0
 801c0fc:	f7ff ffea 	bl	801c0d4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 801c100:	b118      	cbz	r0, 801c10a <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 801c102:	4b02      	ldr	r3, [pc, #8]	; (801c10c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 801c104:	681b      	ldr	r3, [r3, #0]
 801c106:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 801c10a:	bd08      	pop	{r3, pc}
 801c10c:	200138b8 	.word	0x200138b8

0801c110 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 801c110:	b5f0      	push	{r4, r5, r6, r7, lr}
 801c112:	4c24      	ldr	r4, [pc, #144]	; (801c1a4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 801c114:	6823      	ldr	r3, [r4, #0]
 801c116:	2b00      	cmp	r3, #0
 801c118:	d042      	beq.n	801c1a0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 801c11a:	4a23      	ldr	r2, [pc, #140]	; (801c1a8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 801c11c:	4d23      	ldr	r5, [pc, #140]	; (801c1ac <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 801c11e:	8811      	ldrh	r1, [r2, #0]
 801c120:	f8b5 c000 	ldrh.w	ip, [r5]
 801c124:	4822      	ldr	r0, [pc, #136]	; (801c1b0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 801c126:	4461      	add	r1, ip
 801c128:	1c4a      	adds	r2, r1, #1
 801c12a:	f022 0201 	bic.w	r2, r2, #1
 801c12e:	008f      	lsls	r7, r1, #2
 801c130:	0412      	lsls	r2, r2, #16
 801c132:	19de      	adds	r6, r3, r7
 801c134:	0c12      	lsrs	r2, r2, #16
 801c136:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 801c13a:	6006      	str	r6, [r0, #0]
 801c13c:	4e1d      	ldr	r6, [pc, #116]	; (801c1b4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 801c13e:	19da      	adds	r2, r3, r7
 801c140:	6032      	str	r2, [r6, #0]
 801c142:	220e      	movs	r2, #14
 801c144:	fb02 f20c 	mul.w	r2, r2, ip
 801c148:	3203      	adds	r2, #3
 801c14a:	f022 0203 	bic.w	r2, r2, #3
 801c14e:	443a      	add	r2, r7
 801c150:	4f19      	ldr	r7, [pc, #100]	; (801c1b8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 801c152:	4413      	add	r3, r2
 801c154:	603b      	str	r3, [r7, #0]
 801c156:	4f19      	ldr	r7, [pc, #100]	; (801c1bc <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 801c158:	2300      	movs	r3, #0
 801c15a:	803b      	strh	r3, [r7, #0]
 801c15c:	4f18      	ldr	r7, [pc, #96]	; (801c1c0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 801c15e:	683f      	ldr	r7, [r7, #0]
 801c160:	1aba      	subs	r2, r7, r2
 801c162:	4f18      	ldr	r7, [pc, #96]	; (801c1c4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 801c164:	603a      	str	r2, [r7, #0]
 801c166:	4a18      	ldr	r2, [pc, #96]	; (801c1c8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 801c168:	469c      	mov	ip, r3
 801c16a:	8013      	strh	r3, [r2, #0]
 801c16c:	f64f 77ff 	movw	r7, #65535	; 0xffff
 801c170:	428b      	cmp	r3, r1
 801c172:	d10d      	bne.n	801c190 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 801c174:	882d      	ldrh	r5, [r5, #0]
 801c176:	6830      	ldr	r0, [r6, #0]
 801c178:	2300      	movs	r3, #0
 801c17a:	240e      	movs	r4, #14
 801c17c:	429d      	cmp	r5, r3
 801c17e:	d90f      	bls.n	801c1a0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 801c180:	fb04 0203 	mla	r2, r4, r3, r0
 801c184:	3301      	adds	r3, #1
 801c186:	7b11      	ldrb	r1, [r2, #12]
 801c188:	f36f 1145 	bfc	r1, #5, #1
 801c18c:	7311      	strb	r1, [r2, #12]
 801c18e:	e7f5      	b.n	801c17c <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 801c190:	6822      	ldr	r2, [r4, #0]
 801c192:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 801c196:	6802      	ldr	r2, [r0, #0]
 801c198:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 801c19c:	3301      	adds	r3, #1
 801c19e:	e7e7      	b.n	801c170 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 801c1a0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801c1a2:	bf00      	nop
 801c1a4:	200138b8 	.word	0x200138b8
 801c1a8:	200138d4 	.word	0x200138d4
 801c1ac:	200138d8 	.word	0x200138d8
 801c1b0:	200138cc 	.word	0x200138cc
 801c1b4:	200138bc 	.word	0x200138bc
 801c1b8:	200138c4 	.word	0x200138c4
 801c1bc:	200138d6 	.word	0x200138d6
 801c1c0:	200138c0 	.word	0x200138c0
 801c1c4:	200138d0 	.word	0x200138d0
 801c1c8:	200138c8 	.word	0x200138c8

0801c1cc <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 801c1cc:	4b06      	ldr	r3, [pc, #24]	; (801c1e8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 801c1ce:	681b      	ldr	r3, [r3, #0]
 801c1d0:	b943      	cbnz	r3, 801c1e4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 801c1d2:	b139      	cbz	r1, 801c1e4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 801c1d4:	4b05      	ldr	r3, [pc, #20]	; (801c1ec <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 801c1d6:	801a      	strh	r2, [r3, #0]
 801c1d8:	4b05      	ldr	r3, [pc, #20]	; (801c1f0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 801c1da:	6019      	str	r1, [r3, #0]
 801c1dc:	4b05      	ldr	r3, [pc, #20]	; (801c1f4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 801c1de:	6018      	str	r0, [r3, #0]
 801c1e0:	f7ff bf96 	b.w	801c110 <_ZN8touchgfx6Bitmap10clearCacheEv>
 801c1e4:	4770      	bx	lr
 801c1e6:	bf00      	nop
 801c1e8:	200138c4 	.word	0x200138c4
 801c1ec:	200138d8 	.word	0x200138d8
 801c1f0:	200138c0 	.word	0x200138c0
 801c1f4:	200138b8 	.word	0x200138b8

0801c1f8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 801c1f8:	b470      	push	{r4, r5, r6}
 801c1fa:	4c07      	ldr	r4, [pc, #28]	; (801c218 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 801c1fc:	6826      	ldr	r6, [r4, #0]
 801c1fe:	4605      	mov	r5, r0
 801c200:	4610      	mov	r0, r2
 801c202:	9a03      	ldr	r2, [sp, #12]
 801c204:	b936      	cbnz	r6, 801c214 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 801c206:	6025      	str	r5, [r4, #0]
 801c208:	4c04      	ldr	r4, [pc, #16]	; (801c21c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 801c20a:	8021      	strh	r1, [r4, #0]
 801c20c:	bc70      	pop	{r4, r5, r6}
 801c20e:	4619      	mov	r1, r3
 801c210:	f7ff bfdc 	b.w	801c1cc <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 801c214:	bc70      	pop	{r4, r5, r6}
 801c216:	4770      	bx	lr
 801c218:	200138dc 	.word	0x200138dc
 801c21c:	200138d4 	.word	0x200138d4

0801c220 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 801c220:	4a12      	ldr	r2, [pc, #72]	; (801c26c <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 801c222:	8803      	ldrh	r3, [r0, #0]
 801c224:	8812      	ldrh	r2, [r2, #0]
 801c226:	4293      	cmp	r3, r2
 801c228:	d207      	bcs.n	801c23a <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 801c22a:	4a11      	ldr	r2, [pc, #68]	; (801c270 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 801c22c:	6812      	ldr	r2, [r2, #0]
 801c22e:	2114      	movs	r1, #20
 801c230:	fb01 2303 	mla	r3, r1, r3, r2
 801c234:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 801c238:	4770      	bx	lr
 801c23a:	490e      	ldr	r1, [pc, #56]	; (801c274 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 801c23c:	8809      	ldrh	r1, [r1, #0]
 801c23e:	4411      	add	r1, r2
 801c240:	428b      	cmp	r3, r1
 801c242:	da04      	bge.n	801c24e <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 801c244:	1a9b      	subs	r3, r3, r2
 801c246:	4a0c      	ldr	r2, [pc, #48]	; (801c278 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 801c248:	210e      	movs	r1, #14
 801c24a:	6812      	ldr	r2, [r2, #0]
 801c24c:	e7f0      	b.n	801c230 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 801c24e:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801c252:	4293      	cmp	r3, r2
 801c254:	d108      	bne.n	801c268 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 801c256:	4b09      	ldr	r3, [pc, #36]	; (801c27c <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 801c258:	781b      	ldrb	r3, [r3, #0]
 801c25a:	b91b      	cbnz	r3, 801c264 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 801c25c:	4b08      	ldr	r3, [pc, #32]	; (801c280 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 801c25e:	f9b3 0000 	ldrsh.w	r0, [r3]
 801c262:	4770      	bx	lr
 801c264:	4b07      	ldr	r3, [pc, #28]	; (801c284 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 801c266:	e7fa      	b.n	801c25e <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 801c268:	2000      	movs	r0, #0
 801c26a:	4770      	bx	lr
 801c26c:	200138d4 	.word	0x200138d4
 801c270:	200138dc 	.word	0x200138dc
 801c274:	200138d8 	.word	0x200138d8
 801c278:	200138bc 	.word	0x200138bc
 801c27c:	20013844 	.word	0x20013844
 801c280:	20013846 	.word	0x20013846
 801c284:	20013848 	.word	0x20013848

0801c288 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 801c288:	4a12      	ldr	r2, [pc, #72]	; (801c2d4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 801c28a:	8803      	ldrh	r3, [r0, #0]
 801c28c:	8812      	ldrh	r2, [r2, #0]
 801c28e:	4293      	cmp	r3, r2
 801c290:	d207      	bcs.n	801c2a2 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 801c292:	4a11      	ldr	r2, [pc, #68]	; (801c2d8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 801c294:	6812      	ldr	r2, [r2, #0]
 801c296:	2114      	movs	r1, #20
 801c298:	fb01 2303 	mla	r3, r1, r3, r2
 801c29c:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 801c2a0:	4770      	bx	lr
 801c2a2:	490e      	ldr	r1, [pc, #56]	; (801c2dc <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 801c2a4:	8809      	ldrh	r1, [r1, #0]
 801c2a6:	4411      	add	r1, r2
 801c2a8:	428b      	cmp	r3, r1
 801c2aa:	da04      	bge.n	801c2b6 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 801c2ac:	1a9b      	subs	r3, r3, r2
 801c2ae:	4a0c      	ldr	r2, [pc, #48]	; (801c2e0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 801c2b0:	210e      	movs	r1, #14
 801c2b2:	6812      	ldr	r2, [r2, #0]
 801c2b4:	e7f0      	b.n	801c298 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 801c2b6:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801c2ba:	4293      	cmp	r3, r2
 801c2bc:	d108      	bne.n	801c2d0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 801c2be:	4b09      	ldr	r3, [pc, #36]	; (801c2e4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 801c2c0:	781b      	ldrb	r3, [r3, #0]
 801c2c2:	b91b      	cbnz	r3, 801c2cc <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 801c2c4:	4b08      	ldr	r3, [pc, #32]	; (801c2e8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 801c2c6:	f9b3 0000 	ldrsh.w	r0, [r3]
 801c2ca:	4770      	bx	lr
 801c2cc:	4b07      	ldr	r3, [pc, #28]	; (801c2ec <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 801c2ce:	e7fa      	b.n	801c2c6 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 801c2d0:	2000      	movs	r0, #0
 801c2d2:	4770      	bx	lr
 801c2d4:	200138d4 	.word	0x200138d4
 801c2d8:	200138dc 	.word	0x200138dc
 801c2dc:	200138d8 	.word	0x200138d8
 801c2e0:	200138bc 	.word	0x200138bc
 801c2e4:	20013844 	.word	0x20013844
 801c2e8:	20013848 	.word	0x20013848
 801c2ec:	20013846 	.word	0x20013846

0801c2f0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 801c2f0:	b510      	push	{r4, lr}
 801c2f2:	4a1f      	ldr	r2, [pc, #124]	; (801c370 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 801c2f4:	880b      	ldrh	r3, [r1, #0]
 801c2f6:	8812      	ldrh	r2, [r2, #0]
 801c2f8:	4293      	cmp	r3, r2
 801c2fa:	d213      	bcs.n	801c324 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 801c2fc:	4a1d      	ldr	r2, [pc, #116]	; (801c374 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 801c2fe:	6812      	ldr	r2, [r2, #0]
 801c300:	2114      	movs	r1, #20
 801c302:	fb01 2303 	mla	r3, r1, r3, r2
 801c306:	8a1a      	ldrh	r2, [r3, #16]
 801c308:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 801c30c:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 801c310:	8a5b      	ldrh	r3, [r3, #18]
 801c312:	8004      	strh	r4, [r0, #0]
 801c314:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801c318:	f3c3 030c 	ubfx	r3, r3, #0, #13
 801c31c:	8041      	strh	r1, [r0, #2]
 801c31e:	8082      	strh	r2, [r0, #4]
 801c320:	80c3      	strh	r3, [r0, #6]
 801c322:	e00e      	b.n	801c342 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 801c324:	4914      	ldr	r1, [pc, #80]	; (801c378 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 801c326:	8809      	ldrh	r1, [r1, #0]
 801c328:	4411      	add	r1, r2
 801c32a:	428b      	cmp	r3, r1
 801c32c:	da0a      	bge.n	801c344 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 801c32e:	1a9b      	subs	r3, r3, r2
 801c330:	4a12      	ldr	r2, [pc, #72]	; (801c37c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 801c332:	6812      	ldr	r2, [r2, #0]
 801c334:	210e      	movs	r1, #14
 801c336:	fb01 2303 	mla	r3, r1, r3, r2
 801c33a:	681a      	ldr	r2, [r3, #0]
 801c33c:	6002      	str	r2, [r0, #0]
 801c33e:	685a      	ldr	r2, [r3, #4]
 801c340:	6042      	str	r2, [r0, #4]
 801c342:	bd10      	pop	{r4, pc}
 801c344:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801c348:	4293      	cmp	r3, r2
 801c34a:	d10b      	bne.n	801c364 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 801c34c:	4b0c      	ldr	r3, [pc, #48]	; (801c380 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 801c34e:	f9b3 1000 	ldrsh.w	r1, [r3]
 801c352:	4b0c      	ldr	r3, [pc, #48]	; (801c384 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 801c354:	8081      	strh	r1, [r0, #4]
 801c356:	f9b3 2000 	ldrsh.w	r2, [r3]
 801c35a:	80c2      	strh	r2, [r0, #6]
 801c35c:	2300      	movs	r3, #0
 801c35e:	8003      	strh	r3, [r0, #0]
 801c360:	8043      	strh	r3, [r0, #2]
 801c362:	e7ee      	b.n	801c342 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 801c364:	2300      	movs	r3, #0
 801c366:	8003      	strh	r3, [r0, #0]
 801c368:	8043      	strh	r3, [r0, #2]
 801c36a:	8083      	strh	r3, [r0, #4]
 801c36c:	e7d8      	b.n	801c320 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 801c36e:	bf00      	nop
 801c370:	200138d4 	.word	0x200138d4
 801c374:	200138dc 	.word	0x200138dc
 801c378:	200138d8 	.word	0x200138d8
 801c37c:	200138bc 	.word	0x200138bc
 801c380:	20013840 	.word	0x20013840
 801c384:	20013842 	.word	0x20013842

0801c388 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 801c388:	4a17      	ldr	r2, [pc, #92]	; (801c3e8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 801c38a:	8803      	ldrh	r3, [r0, #0]
 801c38c:	8812      	ldrh	r2, [r2, #0]
 801c38e:	4293      	cmp	r3, r2
 801c390:	d213      	bcs.n	801c3ba <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 801c392:	4a16      	ldr	r2, [pc, #88]	; (801c3ec <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 801c394:	6812      	ldr	r2, [r2, #0]
 801c396:	2114      	movs	r1, #20
 801c398:	fb01 2303 	mla	r3, r1, r3, r2
 801c39c:	8a1a      	ldrh	r2, [r3, #16]
 801c39e:	8919      	ldrh	r1, [r3, #8]
 801c3a0:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801c3a4:	428a      	cmp	r2, r1
 801c3a6:	db1d      	blt.n	801c3e4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 801c3a8:	8a58      	ldrh	r0, [r3, #18]
 801c3aa:	f3c0 000c 	ubfx	r0, r0, #0, #13
 801c3ae:	895b      	ldrh	r3, [r3, #10]
 801c3b0:	4298      	cmp	r0, r3
 801c3b2:	bfac      	ite	ge
 801c3b4:	2000      	movge	r0, #0
 801c3b6:	2001      	movlt	r0, #1
 801c3b8:	4770      	bx	lr
 801c3ba:	490d      	ldr	r1, [pc, #52]	; (801c3f0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 801c3bc:	8809      	ldrh	r1, [r1, #0]
 801c3be:	4411      	add	r1, r2
 801c3c0:	428b      	cmp	r3, r1
 801c3c2:	da0d      	bge.n	801c3e0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 801c3c4:	1a9b      	subs	r3, r3, r2
 801c3c6:	4a0b      	ldr	r2, [pc, #44]	; (801c3f4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 801c3c8:	6812      	ldr	r2, [r2, #0]
 801c3ca:	210e      	movs	r1, #14
 801c3cc:	fb01 2303 	mla	r3, r1, r3, r2
 801c3d0:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 801c3d4:	891a      	ldrh	r2, [r3, #8]
 801c3d6:	4291      	cmp	r1, r2
 801c3d8:	db04      	blt.n	801c3e4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 801c3da:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 801c3de:	e7e6      	b.n	801c3ae <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 801c3e0:	2000      	movs	r0, #0
 801c3e2:	4770      	bx	lr
 801c3e4:	2001      	movs	r0, #1
 801c3e6:	4770      	bx	lr
 801c3e8:	200138d4 	.word	0x200138d4
 801c3ec:	200138dc 	.word	0x200138dc
 801c3f0:	200138d8 	.word	0x200138d8
 801c3f4:	200138bc 	.word	0x200138bc

0801c3f8 <_ZNK8touchgfx6Bitmap7getDataEv>:
 801c3f8:	4a12      	ldr	r2, [pc, #72]	; (801c444 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 801c3fa:	8803      	ldrh	r3, [r0, #0]
 801c3fc:	8811      	ldrh	r1, [r2, #0]
 801c3fe:	428b      	cmp	r3, r1
 801c400:	d20b      	bcs.n	801c41a <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 801c402:	4a11      	ldr	r2, [pc, #68]	; (801c448 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801c404:	6812      	ldr	r2, [r2, #0]
 801c406:	b112      	cbz	r2, 801c40e <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 801c408:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 801c40c:	b9c0      	cbnz	r0, 801c440 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 801c40e:	4a0f      	ldr	r2, [pc, #60]	; (801c44c <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 801c410:	6811      	ldr	r1, [r2, #0]
 801c412:	2214      	movs	r2, #20
 801c414:	4353      	muls	r3, r2
 801c416:	58c8      	ldr	r0, [r1, r3]
 801c418:	4770      	bx	lr
 801c41a:	4a0d      	ldr	r2, [pc, #52]	; (801c450 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 801c41c:	8812      	ldrh	r2, [r2, #0]
 801c41e:	440a      	add	r2, r1
 801c420:	4293      	cmp	r3, r2
 801c422:	da04      	bge.n	801c42e <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 801c424:	4a08      	ldr	r2, [pc, #32]	; (801c448 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801c426:	6812      	ldr	r2, [r2, #0]
 801c428:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 801c42c:	4770      	bx	lr
 801c42e:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801c432:	4293      	cmp	r3, r2
 801c434:	d103      	bne.n	801c43e <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 801c436:	4b07      	ldr	r3, [pc, #28]	; (801c454 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 801c438:	681b      	ldr	r3, [r3, #0]
 801c43a:	6c58      	ldr	r0, [r3, #68]	; 0x44
 801c43c:	4770      	bx	lr
 801c43e:	2000      	movs	r0, #0
 801c440:	4770      	bx	lr
 801c442:	bf00      	nop
 801c444:	200138d4 	.word	0x200138d4
 801c448:	200138b8 	.word	0x200138b8
 801c44c:	200138dc 	.word	0x200138dc
 801c450:	200138d8 	.word	0x200138d8
 801c454:	2001384c 	.word	0x2001384c

0801c458 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 801c458:	4b24      	ldr	r3, [pc, #144]	; (801c4ec <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 801c45a:	8802      	ldrh	r2, [r0, #0]
 801c45c:	8818      	ldrh	r0, [r3, #0]
 801c45e:	4282      	cmp	r2, r0
 801c460:	d221      	bcs.n	801c4a6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 801c462:	4b23      	ldr	r3, [pc, #140]	; (801c4f0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 801c464:	6819      	ldr	r1, [r3, #0]
 801c466:	2314      	movs	r3, #20
 801c468:	fb03 1302 	mla	r3, r3, r2, r1
 801c46c:	6858      	ldr	r0, [r3, #4]
 801c46e:	2800      	cmp	r0, #0
 801c470:	d03a      	beq.n	801c4e8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801c472:	4920      	ldr	r1, [pc, #128]	; (801c4f4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801c474:	6809      	ldr	r1, [r1, #0]
 801c476:	2900      	cmp	r1, #0
 801c478:	d036      	beq.n	801c4e8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801c47a:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 801c47e:	2900      	cmp	r1, #0
 801c480:	d032      	beq.n	801c4e8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801c482:	891a      	ldrh	r2, [r3, #8]
 801c484:	8958      	ldrh	r0, [r3, #10]
 801c486:	4350      	muls	r0, r2
 801c488:	7c5a      	ldrb	r2, [r3, #17]
 801c48a:	7cdb      	ldrb	r3, [r3, #19]
 801c48c:	0952      	lsrs	r2, r2, #5
 801c48e:	f3c3 1342 	ubfx	r3, r3, #5, #3
 801c492:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 801c496:	2b0b      	cmp	r3, #11
 801c498:	bf18      	it	ne
 801c49a:	0040      	lslne	r0, r0, #1
 801c49c:	3003      	adds	r0, #3
 801c49e:	f020 0003 	bic.w	r0, r0, #3
 801c4a2:	4408      	add	r0, r1
 801c4a4:	4770      	bx	lr
 801c4a6:	4b14      	ldr	r3, [pc, #80]	; (801c4f8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 801c4a8:	881b      	ldrh	r3, [r3, #0]
 801c4aa:	4403      	add	r3, r0
 801c4ac:	429a      	cmp	r2, r3
 801c4ae:	da1a      	bge.n	801c4e6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801c4b0:	4b12      	ldr	r3, [pc, #72]	; (801c4fc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 801c4b2:	681b      	ldr	r3, [r3, #0]
 801c4b4:	1a10      	subs	r0, r2, r0
 801c4b6:	210e      	movs	r1, #14
 801c4b8:	fb01 3000 	mla	r0, r1, r0, r3
 801c4bc:	7b03      	ldrb	r3, [r0, #12]
 801c4be:	f003 031f 	and.w	r3, r3, #31
 801c4c2:	2b0b      	cmp	r3, #11
 801c4c4:	d10b      	bne.n	801c4de <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 801c4c6:	8903      	ldrh	r3, [r0, #8]
 801c4c8:	8940      	ldrh	r0, [r0, #10]
 801c4ca:	4358      	muls	r0, r3
 801c4cc:	4b09      	ldr	r3, [pc, #36]	; (801c4f4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801c4ce:	6819      	ldr	r1, [r3, #0]
 801c4d0:	3003      	adds	r0, #3
 801c4d2:	f020 0303 	bic.w	r3, r0, #3
 801c4d6:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 801c4da:	4418      	add	r0, r3
 801c4dc:	4770      	bx	lr
 801c4de:	2b0d      	cmp	r3, #13
 801c4e0:	d101      	bne.n	801c4e6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801c4e2:	300d      	adds	r0, #13
 801c4e4:	4770      	bx	lr
 801c4e6:	2000      	movs	r0, #0
 801c4e8:	4770      	bx	lr
 801c4ea:	bf00      	nop
 801c4ec:	200138d4 	.word	0x200138d4
 801c4f0:	200138dc 	.word	0x200138dc
 801c4f4:	200138b8 	.word	0x200138b8
 801c4f8:	200138d8 	.word	0x200138d8
 801c4fc:	200138bc 	.word	0x200138bc

0801c500 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 801c500:	b510      	push	{r4, lr}
 801c502:	4a17      	ldr	r2, [pc, #92]	; (801c560 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 801c504:	8803      	ldrh	r3, [r0, #0]
 801c506:	8812      	ldrh	r2, [r2, #0]
 801c508:	4293      	cmp	r3, r2
 801c50a:	d20c      	bcs.n	801c526 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 801c50c:	4a15      	ldr	r2, [pc, #84]	; (801c564 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 801c50e:	6812      	ldr	r2, [r2, #0]
 801c510:	2114      	movs	r1, #20
 801c512:	fb01 2303 	mla	r3, r1, r3, r2
 801c516:	7c58      	ldrb	r0, [r3, #17]
 801c518:	0942      	lsrs	r2, r0, #5
 801c51a:	7cd8      	ldrb	r0, [r3, #19]
 801c51c:	f3c0 1042 	ubfx	r0, r0, #5, #3
 801c520:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 801c524:	bd10      	pop	{r4, pc}
 801c526:	4910      	ldr	r1, [pc, #64]	; (801c568 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 801c528:	8809      	ldrh	r1, [r1, #0]
 801c52a:	4411      	add	r1, r2
 801c52c:	428b      	cmp	r3, r1
 801c52e:	da09      	bge.n	801c544 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 801c530:	1a9b      	subs	r3, r3, r2
 801c532:	4a0e      	ldr	r2, [pc, #56]	; (801c56c <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 801c534:	6812      	ldr	r2, [r2, #0]
 801c536:	210e      	movs	r1, #14
 801c538:	fb01 2303 	mla	r3, r1, r3, r2
 801c53c:	7b18      	ldrb	r0, [r3, #12]
 801c53e:	f000 001f 	and.w	r0, r0, #31
 801c542:	e7ef      	b.n	801c524 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 801c544:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801c548:	4293      	cmp	r3, r2
 801c54a:	d106      	bne.n	801c55a <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 801c54c:	f7e8 ffac 	bl	80054a8 <_ZN8touchgfx3HAL3lcdEv>
 801c550:	6803      	ldr	r3, [r0, #0]
 801c552:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801c556:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c558:	4718      	bx	r3
 801c55a:	2000      	movs	r0, #0
 801c55c:	e7e2      	b.n	801c524 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 801c55e:	bf00      	nop
 801c560:	200138d4 	.word	0x200138d4
 801c564:	200138dc 	.word	0x200138dc
 801c568:	200138d8 	.word	0x200138d8
 801c56c:	200138bc 	.word	0x200138bc

0801c570 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 801c570:	2010      	movs	r0, #16
 801c572:	4770      	bx	lr

0801c574 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 801c574:	2000      	movs	r0, #0
 801c576:	4770      	bx	lr

0801c578 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 801c578:	4b02      	ldr	r3, [pc, #8]	; (801c584 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 801c57a:	8818      	ldrh	r0, [r3, #0]
 801c57c:	0040      	lsls	r0, r0, #1
 801c57e:	b280      	uxth	r0, r0
 801c580:	4770      	bx	lr
 801c582:	bf00      	nop
 801c584:	20013846 	.word	0x20013846

0801c588 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 801c588:	2bff      	cmp	r3, #255	; 0xff
 801c58a:	d050      	beq.n	801c62e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 801c58c:	2a0b      	cmp	r2, #11
 801c58e:	d04a      	beq.n	801c626 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 801c590:	d80e      	bhi.n	801c5b0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 801c592:	2a03      	cmp	r2, #3
 801c594:	d03f      	beq.n	801c616 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 801c596:	d804      	bhi.n	801c5a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 801c598:	2a01      	cmp	r2, #1
 801c59a:	d03e      	beq.n	801c61a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 801c59c:	d93f      	bls.n	801c61e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 801c59e:	6b80      	ldr	r0, [r0, #56]	; 0x38
 801c5a0:	4770      	bx	lr
 801c5a2:	2a09      	cmp	r2, #9
 801c5a4:	d03f      	beq.n	801c626 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 801c5a6:	d83c      	bhi.n	801c622 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 801c5a8:	2a08      	cmp	r2, #8
 801c5aa:	d03a      	beq.n	801c622 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 801c5ac:	2000      	movs	r0, #0
 801c5ae:	4770      	bx	lr
 801c5b0:	2a2f      	cmp	r2, #47	; 0x2f
 801c5b2:	d024      	beq.n	801c5fe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 801c5b4:	d80d      	bhi.n	801c5d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 801c5b6:	2a2d      	cmp	r2, #45	; 0x2d
 801c5b8:	d014      	beq.n	801c5e4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 801c5ba:	d826      	bhi.n	801c60a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 801c5bc:	2a2c      	cmp	r2, #44	; 0x2c
 801c5be:	d1f5      	bne.n	801c5ac <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c5c0:	684b      	ldr	r3, [r1, #4]
 801c5c2:	781b      	ldrb	r3, [r3, #0]
 801c5c4:	2b01      	cmp	r3, #1
 801c5c6:	d018      	beq.n	801c5fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 801c5c8:	d323      	bcc.n	801c612 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 801c5ca:	2b02      	cmp	r3, #2
 801c5cc:	d1ee      	bne.n	801c5ac <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c5ce:	6880      	ldr	r0, [r0, #8]
 801c5d0:	4770      	bx	lr
 801c5d2:	2a31      	cmp	r2, #49	; 0x31
 801c5d4:	d004      	beq.n	801c5e0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 801c5d6:	d328      	bcc.n	801c62a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 801c5d8:	2a32      	cmp	r2, #50	; 0x32
 801c5da:	d026      	beq.n	801c62a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 801c5dc:	2a33      	cmp	r2, #51	; 0x33
 801c5de:	d1e5      	bne.n	801c5ac <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c5e0:	6f00      	ldr	r0, [r0, #112]	; 0x70
 801c5e2:	4770      	bx	lr
 801c5e4:	684b      	ldr	r3, [r1, #4]
 801c5e6:	781b      	ldrb	r3, [r3, #0]
 801c5e8:	2b01      	cmp	r3, #1
 801c5ea:	d004      	beq.n	801c5f6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 801c5ec:	d30b      	bcc.n	801c606 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801c5ee:	2b02      	cmp	r3, #2
 801c5f0:	d1dc      	bne.n	801c5ac <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c5f2:	6900      	ldr	r0, [r0, #16]
 801c5f4:	4770      	bx	lr
 801c5f6:	6a00      	ldr	r0, [r0, #32]
 801c5f8:	4770      	bx	lr
 801c5fa:	6980      	ldr	r0, [r0, #24]
 801c5fc:	4770      	bx	lr
 801c5fe:	684b      	ldr	r3, [r1, #4]
 801c600:	781b      	ldrb	r3, [r3, #0]
 801c602:	2b00      	cmp	r3, #0
 801c604:	d1d2      	bne.n	801c5ac <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c606:	6b00      	ldr	r0, [r0, #48]	; 0x30
 801c608:	4770      	bx	lr
 801c60a:	684b      	ldr	r3, [r1, #4]
 801c60c:	781b      	ldrb	r3, [r3, #0]
 801c60e:	2b00      	cmp	r3, #0
 801c610:	d1cc      	bne.n	801c5ac <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c612:	6a80      	ldr	r0, [r0, #40]	; 0x28
 801c614:	4770      	bx	lr
 801c616:	6c80      	ldr	r0, [r0, #72]	; 0x48
 801c618:	4770      	bx	lr
 801c61a:	6d00      	ldr	r0, [r0, #80]	; 0x50
 801c61c:	4770      	bx	lr
 801c61e:	6c00      	ldr	r0, [r0, #64]	; 0x40
 801c620:	4770      	bx	lr
 801c622:	6d80      	ldr	r0, [r0, #88]	; 0x58
 801c624:	4770      	bx	lr
 801c626:	6e00      	ldr	r0, [r0, #96]	; 0x60
 801c628:	4770      	bx	lr
 801c62a:	6e80      	ldr	r0, [r0, #104]	; 0x68
 801c62c:	4770      	bx	lr
 801c62e:	2a0b      	cmp	r2, #11
 801c630:	d049      	beq.n	801c6c6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801c632:	d80e      	bhi.n	801c652 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 801c634:	2a03      	cmp	r2, #3
 801c636:	d040      	beq.n	801c6ba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 801c638:	d804      	bhi.n	801c644 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 801c63a:	2a01      	cmp	r2, #1
 801c63c:	d03f      	beq.n	801c6be <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 801c63e:	d940      	bls.n	801c6c2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 801c640:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 801c642:	4770      	bx	lr
 801c644:	2a09      	cmp	r2, #9
 801c646:	d03e      	beq.n	801c6c6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801c648:	d801      	bhi.n	801c64e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 801c64a:	2a08      	cmp	r2, #8
 801c64c:	d1ae      	bne.n	801c5ac <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c64e:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 801c650:	4770      	bx	lr
 801c652:	2a2f      	cmp	r2, #47	; 0x2f
 801c654:	d024      	beq.n	801c6a0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 801c656:	d80d      	bhi.n	801c674 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 801c658:	2a2d      	cmp	r2, #45	; 0x2d
 801c65a:	d014      	beq.n	801c686 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 801c65c:	d826      	bhi.n	801c6ac <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 801c65e:	2a2c      	cmp	r2, #44	; 0x2c
 801c660:	d1a4      	bne.n	801c5ac <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c662:	684b      	ldr	r3, [r1, #4]
 801c664:	781b      	ldrb	r3, [r3, #0]
 801c666:	2b01      	cmp	r3, #1
 801c668:	d018      	beq.n	801c69c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 801c66a:	d324      	bcc.n	801c6b6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 801c66c:	2b02      	cmp	r3, #2
 801c66e:	d19d      	bne.n	801c5ac <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c670:	68c0      	ldr	r0, [r0, #12]
 801c672:	4770      	bx	lr
 801c674:	2a31      	cmp	r2, #49	; 0x31
 801c676:	d004      	beq.n	801c682 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 801c678:	d327      	bcc.n	801c6ca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801c67a:	2a32      	cmp	r2, #50	; 0x32
 801c67c:	d025      	beq.n	801c6ca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801c67e:	2a33      	cmp	r2, #51	; 0x33
 801c680:	d194      	bne.n	801c5ac <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c682:	6f40      	ldr	r0, [r0, #116]	; 0x74
 801c684:	4770      	bx	lr
 801c686:	684b      	ldr	r3, [r1, #4]
 801c688:	781b      	ldrb	r3, [r3, #0]
 801c68a:	2b01      	cmp	r3, #1
 801c68c:	d004      	beq.n	801c698 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 801c68e:	d30b      	bcc.n	801c6a8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 801c690:	2b02      	cmp	r3, #2
 801c692:	d18b      	bne.n	801c5ac <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c694:	6940      	ldr	r0, [r0, #20]
 801c696:	4770      	bx	lr
 801c698:	6a40      	ldr	r0, [r0, #36]	; 0x24
 801c69a:	4770      	bx	lr
 801c69c:	69c0      	ldr	r0, [r0, #28]
 801c69e:	4770      	bx	lr
 801c6a0:	684b      	ldr	r3, [r1, #4]
 801c6a2:	781b      	ldrb	r3, [r3, #0]
 801c6a4:	2b00      	cmp	r3, #0
 801c6a6:	d181      	bne.n	801c5ac <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c6a8:	6b40      	ldr	r0, [r0, #52]	; 0x34
 801c6aa:	4770      	bx	lr
 801c6ac:	684b      	ldr	r3, [r1, #4]
 801c6ae:	781b      	ldrb	r3, [r3, #0]
 801c6b0:	2b00      	cmp	r3, #0
 801c6b2:	f47f af7b 	bne.w	801c5ac <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c6b6:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 801c6b8:	4770      	bx	lr
 801c6ba:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 801c6bc:	4770      	bx	lr
 801c6be:	6d40      	ldr	r0, [r0, #84]	; 0x54
 801c6c0:	4770      	bx	lr
 801c6c2:	6c40      	ldr	r0, [r0, #68]	; 0x44
 801c6c4:	4770      	bx	lr
 801c6c6:	6e40      	ldr	r0, [r0, #100]	; 0x64
 801c6c8:	4770      	bx	lr
 801c6ca:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 801c6cc:	4770      	bx	lr

0801c6ce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c6ce:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c6d2:	b087      	sub	sp, #28
 801c6d4:	9815      	ldr	r0, [sp, #84]	; 0x54
 801c6d6:	9205      	str	r2, [sp, #20]
 801c6d8:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801c6dc:	9202      	str	r2, [sp, #8]
 801c6de:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801c6e2:	9101      	str	r1, [sp, #4]
 801c6e4:	6841      	ldr	r1, [r0, #4]
 801c6e6:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801c6ea:	fb01 2404 	mla	r4, r1, r4, r2
 801c6ee:	6802      	ldr	r2, [r0, #0]
 801c6f0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801c6f4:	f8de 2000 	ldr.w	r2, [lr]
 801c6f8:	9203      	str	r2, [sp, #12]
 801c6fa:	f8de 2004 	ldr.w	r2, [lr, #4]
 801c6fe:	3204      	adds	r2, #4
 801c700:	9204      	str	r2, [sp, #16]
 801c702:	9a02      	ldr	r2, [sp, #8]
 801c704:	43d6      	mvns	r6, r2
 801c706:	b2f6      	uxtb	r6, r6
 801c708:	9a01      	ldr	r2, [sp, #4]
 801c70a:	2a00      	cmp	r2, #0
 801c70c:	dc03      	bgt.n	801c716 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801c70e:	9a05      	ldr	r2, [sp, #20]
 801c710:	2a00      	cmp	r2, #0
 801c712:	f340 8129 	ble.w	801c968 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801c716:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801c718:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801c71c:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801c720:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801c724:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801c726:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801c72a:	2b00      	cmp	r3, #0
 801c72c:	dd0e      	ble.n	801c74c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801c72e:	1408      	asrs	r0, r1, #16
 801c730:	d405      	bmi.n	801c73e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801c732:	4560      	cmp	r0, ip
 801c734:	da03      	bge.n	801c73e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801c736:	1410      	asrs	r0, r2, #16
 801c738:	d401      	bmi.n	801c73e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801c73a:	42b8      	cmp	r0, r7
 801c73c:	db07      	blt.n	801c74e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801c73e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801c740:	4401      	add	r1, r0
 801c742:	9814      	ldr	r0, [sp, #80]	; 0x50
 801c744:	3b01      	subs	r3, #1
 801c746:	4402      	add	r2, r0
 801c748:	3402      	adds	r4, #2
 801c74a:	e7ee      	b.n	801c72a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801c74c:	d071      	beq.n	801c832 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801c74e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801c750:	1e58      	subs	r0, r3, #1
 801c752:	fb05 1500 	mla	r5, r5, r0, r1
 801c756:	142d      	asrs	r5, r5, #16
 801c758:	d45f      	bmi.n	801c81a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801c75a:	4565      	cmp	r5, ip
 801c75c:	da5d      	bge.n	801c81a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801c75e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801c760:	fb05 2000 	mla	r0, r5, r0, r2
 801c764:	1400      	asrs	r0, r0, #16
 801c766:	d458      	bmi.n	801c81a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801c768:	42b8      	cmp	r0, r7
 801c76a:	da56      	bge.n	801c81a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801c76c:	f8bd b008 	ldrh.w	fp, [sp, #8]
 801c770:	4699      	mov	r9, r3
 801c772:	46a2      	mov	sl, r4
 801c774:	f1b9 0f00 	cmp.w	r9, #0
 801c778:	dd57      	ble.n	801c82a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 801c77a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801c77e:	9803      	ldr	r0, [sp, #12]
 801c780:	ea4f 4c22 	mov.w	ip, r2, asr #16
 801c784:	140d      	asrs	r5, r1, #16
 801c786:	fb07 000c 	mla	r0, r7, ip, r0
 801c78a:	f109 39ff 	add.w	r9, r9, #4294967295
 801c78e:	5d40      	ldrb	r0, [r0, r5]
 801c790:	9d04      	ldr	r5, [sp, #16]
 801c792:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801c796:	f8ba 5000 	ldrh.w	r5, [sl]
 801c79a:	122f      	asrs	r7, r5, #8
 801c79c:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801c7a0:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801c7a4:	fb17 f706 	smulbb	r7, r7, r6
 801c7a8:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801c7ac:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801c7b0:	00ed      	lsls	r5, r5, #3
 801c7b2:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801c7b6:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801c7ba:	10c7      	asrs	r7, r0, #3
 801c7bc:	b2ed      	uxtb	r5, r5
 801c7be:	00c0      	lsls	r0, r0, #3
 801c7c0:	fb18 f806 	smulbb	r8, r8, r6
 801c7c4:	fb15 f506 	smulbb	r5, r5, r6
 801c7c8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801c7cc:	b2c0      	uxtb	r0, r0
 801c7ce:	fa1f fc8c 	uxth.w	ip, ip
 801c7d2:	fb07 870b 	mla	r7, r7, fp, r8
 801c7d6:	fb00 500b 	mla	r0, r0, fp, r5
 801c7da:	b280      	uxth	r0, r0
 801c7dc:	b2bf      	uxth	r7, r7
 801c7de:	f10c 0501 	add.w	r5, ip, #1
 801c7e2:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801c7e6:	f107 0801 	add.w	r8, r7, #1
 801c7ea:	1c45      	adds	r5, r0, #1
 801c7ec:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801c7f0:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801c7f4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801c7f6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801c7fa:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801c7fe:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801c802:	ea45 0c0c 	orr.w	ip, r5, ip
 801c806:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801c80a:	4401      	add	r1, r0
 801c80c:	9814      	ldr	r0, [sp, #80]	; 0x50
 801c80e:	ea4c 0c08 	orr.w	ip, ip, r8
 801c812:	f82a cb02 	strh.w	ip, [sl], #2
 801c816:	4402      	add	r2, r0
 801c818:	e7ac      	b.n	801c774 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801c81a:	f8bd a008 	ldrh.w	sl, [sp, #8]
 801c81e:	f04f 0800 	mov.w	r8, #0
 801c822:	eb03 0008 	add.w	r0, r3, r8
 801c826:	2800      	cmp	r0, #0
 801c828:	dc41      	bgt.n	801c8ae <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801c82a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801c82e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c832:	9b01      	ldr	r3, [sp, #4]
 801c834:	2b00      	cmp	r3, #0
 801c836:	f340 8097 	ble.w	801c968 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801c83a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c83e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801c842:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801c846:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c848:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c84c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c850:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c854:	eef0 6a62 	vmov.f32	s13, s5
 801c858:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c85c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c860:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c864:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 801c868:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c86c:	eef0 6a43 	vmov.f32	s13, s6
 801c870:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c874:	ee12 2a90 	vmov	r2, s5
 801c878:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c87c:	fb92 f3f3 	sdiv	r3, r2, r3
 801c880:	ee13 2a10 	vmov	r2, s6
 801c884:	9313      	str	r3, [sp, #76]	; 0x4c
 801c886:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c888:	fb92 f3f3 	sdiv	r3, r2, r3
 801c88c:	9314      	str	r3, [sp, #80]	; 0x50
 801c88e:	9b01      	ldr	r3, [sp, #4]
 801c890:	9a05      	ldr	r2, [sp, #20]
 801c892:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c896:	3b01      	subs	r3, #1
 801c898:	9301      	str	r3, [sp, #4]
 801c89a:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801c89e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c8a0:	eeb0 3a67 	vmov.f32	s6, s15
 801c8a4:	bf08      	it	eq
 801c8a6:	4613      	moveq	r3, r2
 801c8a8:	eef0 2a47 	vmov.f32	s5, s14
 801c8ac:	e72c      	b.n	801c708 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801c8ae:	140f      	asrs	r7, r1, #16
 801c8b0:	d453      	bmi.n	801c95a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801c8b2:	f8de 5008 	ldr.w	r5, [lr, #8]
 801c8b6:	42bd      	cmp	r5, r7
 801c8b8:	dd4f      	ble.n	801c95a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801c8ba:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801c8be:	d44c      	bmi.n	801c95a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801c8c0:	f8de 000c 	ldr.w	r0, [lr, #12]
 801c8c4:	4560      	cmp	r0, ip
 801c8c6:	dd48      	ble.n	801c95a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801c8c8:	9803      	ldr	r0, [sp, #12]
 801c8ca:	b22d      	sxth	r5, r5
 801c8cc:	fb0c 0505 	mla	r5, ip, r5, r0
 801c8d0:	5de8      	ldrb	r0, [r5, r7]
 801c8d2:	9d04      	ldr	r5, [sp, #16]
 801c8d4:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801c8d8:	f06f 0501 	mvn.w	r5, #1
 801c8dc:	fb05 fb08 	mul.w	fp, r5, r8
 801c8e0:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801c8e4:	f834 500b 	ldrh.w	r5, [r4, fp]
 801c8e8:	122f      	asrs	r7, r5, #8
 801c8ea:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801c8ee:	fb17 f706 	smulbb	r7, r7, r6
 801c8f2:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801c8f6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801c8fa:	00ed      	lsls	r5, r5, #3
 801c8fc:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801c900:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801c904:	10c7      	asrs	r7, r0, #3
 801c906:	b2ed      	uxtb	r5, r5
 801c908:	00c0      	lsls	r0, r0, #3
 801c90a:	fb19 f906 	smulbb	r9, r9, r6
 801c90e:	fb15 f506 	smulbb	r5, r5, r6
 801c912:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801c916:	b2c0      	uxtb	r0, r0
 801c918:	fa1f fc8c 	uxth.w	ip, ip
 801c91c:	fb07 970a 	mla	r7, r7, sl, r9
 801c920:	fb00 500a 	mla	r0, r0, sl, r5
 801c924:	b2bf      	uxth	r7, r7
 801c926:	b280      	uxth	r0, r0
 801c928:	f10c 0501 	add.w	r5, ip, #1
 801c92c:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801c930:	f107 0901 	add.w	r9, r7, #1
 801c934:	1c45      	adds	r5, r0, #1
 801c936:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801c93a:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801c93e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801c942:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801c946:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801c94a:	ea45 0c0c 	orr.w	ip, r5, ip
 801c94e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801c952:	ea4c 0c09 	orr.w	ip, ip, r9
 801c956:	f824 c00b 	strh.w	ip, [r4, fp]
 801c95a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801c95c:	4401      	add	r1, r0
 801c95e:	9814      	ldr	r0, [sp, #80]	; 0x50
 801c960:	f108 38ff 	add.w	r8, r8, #4294967295
 801c964:	4402      	add	r2, r0
 801c966:	e75c      	b.n	801c822 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 801c968:	b007      	add	sp, #28
 801c96a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c96e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c96e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c972:	b085      	sub	sp, #20
 801c974:	4693      	mov	fp, r2
 801c976:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801c978:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801c97a:	6870      	ldr	r0, [r6, #4]
 801c97c:	9100      	str	r1, [sp, #0]
 801c97e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801c982:	fb00 2404 	mla	r4, r0, r4, r2
 801c986:	6832      	ldr	r2, [r6, #0]
 801c988:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801c98c:	682a      	ldr	r2, [r5, #0]
 801c98e:	9201      	str	r2, [sp, #4]
 801c990:	686a      	ldr	r2, [r5, #4]
 801c992:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801c996:	3204      	adds	r2, #4
 801c998:	9202      	str	r2, [sp, #8]
 801c99a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801c99e:	9a00      	ldr	r2, [sp, #0]
 801c9a0:	2a00      	cmp	r2, #0
 801c9a2:	dc03      	bgt.n	801c9ac <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801c9a4:	f1bb 0f00 	cmp.w	fp, #0
 801c9a8:	f340 80a0 	ble.w	801caec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801c9ac:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801c9ae:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801c9b2:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801c9b6:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801c9ba:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801c9bc:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801c9c0:	2b00      	cmp	r3, #0
 801c9c2:	dd0c      	ble.n	801c9de <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801c9c4:	1406      	asrs	r6, r0, #16
 801c9c6:	d405      	bmi.n	801c9d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801c9c8:	454e      	cmp	r6, r9
 801c9ca:	da03      	bge.n	801c9d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801c9cc:	1416      	asrs	r6, r2, #16
 801c9ce:	d401      	bmi.n	801c9d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801c9d0:	4546      	cmp	r6, r8
 801c9d2:	db05      	blt.n	801c9e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801c9d4:	4470      	add	r0, lr
 801c9d6:	4462      	add	r2, ip
 801c9d8:	3b01      	subs	r3, #1
 801c9da:	3402      	adds	r4, #2
 801c9dc:	e7f0      	b.n	801c9c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801c9de:	d00f      	beq.n	801ca00 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801c9e0:	1e5e      	subs	r6, r3, #1
 801c9e2:	fb0e 0706 	mla	r7, lr, r6, r0
 801c9e6:	143f      	asrs	r7, r7, #16
 801c9e8:	d541      	bpl.n	801ca6e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 801c9ea:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801c9ee:	4698      	mov	r8, r3
 801c9f0:	9603      	str	r6, [sp, #12]
 801c9f2:	f1b8 0f00 	cmp.w	r8, #0
 801c9f6:	dc59      	bgt.n	801caac <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801c9f8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801c9fc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ca00:	9b00      	ldr	r3, [sp, #0]
 801ca02:	2b00      	cmp	r3, #0
 801ca04:	dd72      	ble.n	801caec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801ca06:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ca0a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ca0e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801ca12:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ca14:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ca18:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ca1c:	eeb0 6a62 	vmov.f32	s12, s5
 801ca20:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ca24:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ca28:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ca2c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801ca30:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ca34:	eeb0 6a43 	vmov.f32	s12, s6
 801ca38:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ca3c:	ee12 2a90 	vmov	r2, s5
 801ca40:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ca44:	fb92 fef3 	sdiv	lr, r2, r3
 801ca48:	ee13 2a10 	vmov	r2, s6
 801ca4c:	fb92 fcf3 	sdiv	ip, r2, r3
 801ca50:	9b00      	ldr	r3, [sp, #0]
 801ca52:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ca56:	3b01      	subs	r3, #1
 801ca58:	9300      	str	r3, [sp, #0]
 801ca5a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801ca5e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ca60:	eeb0 3a67 	vmov.f32	s6, s15
 801ca64:	bf08      	it	eq
 801ca66:	465b      	moveq	r3, fp
 801ca68:	eef0 2a47 	vmov.f32	s5, s14
 801ca6c:	e797      	b.n	801c99e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801ca6e:	454f      	cmp	r7, r9
 801ca70:	dabb      	bge.n	801c9ea <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801ca72:	fb0c 2606 	mla	r6, ip, r6, r2
 801ca76:	1436      	asrs	r6, r6, #16
 801ca78:	d4b7      	bmi.n	801c9ea <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801ca7a:	4546      	cmp	r6, r8
 801ca7c:	dab5      	bge.n	801c9ea <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801ca7e:	461e      	mov	r6, r3
 801ca80:	46a0      	mov	r8, r4
 801ca82:	2e00      	cmp	r6, #0
 801ca84:	ddb8      	ble.n	801c9f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801ca86:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801ca8a:	9901      	ldr	r1, [sp, #4]
 801ca8c:	1417      	asrs	r7, r2, #16
 801ca8e:	ea4f 4920 	mov.w	r9, r0, asr #16
 801ca92:	fb0a 1707 	mla	r7, sl, r7, r1
 801ca96:	9902      	ldr	r1, [sp, #8]
 801ca98:	f817 7009 	ldrb.w	r7, [r7, r9]
 801ca9c:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801caa0:	f828 7b02 	strh.w	r7, [r8], #2
 801caa4:	4470      	add	r0, lr
 801caa6:	4462      	add	r2, ip
 801caa8:	3e01      	subs	r6, #1
 801caaa:	e7ea      	b.n	801ca82 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 801caac:	ea5f 4920 	movs.w	r9, r0, asr #16
 801cab0:	d417      	bmi.n	801cae2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801cab2:	68ae      	ldr	r6, [r5, #8]
 801cab4:	454e      	cmp	r6, r9
 801cab6:	dd14      	ble.n	801cae2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801cab8:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801cabc:	d411      	bmi.n	801cae2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801cabe:	68ef      	ldr	r7, [r5, #12]
 801cac0:	4557      	cmp	r7, sl
 801cac2:	dd0e      	ble.n	801cae2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801cac4:	9f01      	ldr	r7, [sp, #4]
 801cac6:	b236      	sxth	r6, r6
 801cac8:	fb0a 7606 	mla	r6, sl, r6, r7
 801cacc:	9f02      	ldr	r7, [sp, #8]
 801cace:	f816 6009 	ldrb.w	r6, [r6, r9]
 801cad2:	f06f 0101 	mvn.w	r1, #1
 801cad6:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801cada:	fb01 f608 	mul.w	r6, r1, r8
 801cade:	9903      	ldr	r1, [sp, #12]
 801cae0:	538f      	strh	r7, [r1, r6]
 801cae2:	4470      	add	r0, lr
 801cae4:	4462      	add	r2, ip
 801cae6:	f108 38ff 	add.w	r8, r8, #4294967295
 801caea:	e782      	b.n	801c9f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801caec:	b005      	add	sp, #20
 801caee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801caf2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801caf2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801caf6:	b087      	sub	sp, #28
 801caf8:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801cafa:	9205      	str	r2, [sp, #20]
 801cafc:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801cb00:	9203      	str	r2, [sp, #12]
 801cb02:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801cb06:	9102      	str	r1, [sp, #8]
 801cb08:	6861      	ldr	r1, [r4, #4]
 801cb0a:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 801cb0e:	fb01 2000 	mla	r0, r1, r0, r2
 801cb12:	6822      	ldr	r2, [r4, #0]
 801cb14:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 801cb18:	9200      	str	r2, [sp, #0]
 801cb1a:	f8dc 2000 	ldr.w	r2, [ip]
 801cb1e:	9204      	str	r2, [sp, #16]
 801cb20:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801cb24:	3204      	adds	r2, #4
 801cb26:	9201      	str	r2, [sp, #4]
 801cb28:	9a03      	ldr	r2, [sp, #12]
 801cb2a:	43d5      	mvns	r5, r2
 801cb2c:	b2ed      	uxtb	r5, r5
 801cb2e:	9a02      	ldr	r2, [sp, #8]
 801cb30:	2a00      	cmp	r2, #0
 801cb32:	dc03      	bgt.n	801cb3c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801cb34:	9a05      	ldr	r2, [sp, #20]
 801cb36:	2a00      	cmp	r2, #0
 801cb38:	f340 812c 	ble.w	801cd94 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801cb3c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801cb3e:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 801cb42:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 801cb46:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801cb4a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801cb4c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801cb50:	2b00      	cmp	r3, #0
 801cb52:	dd10      	ble.n	801cb76 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801cb54:	140c      	asrs	r4, r1, #16
 801cb56:	d405      	bmi.n	801cb64 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801cb58:	4574      	cmp	r4, lr
 801cb5a:	da03      	bge.n	801cb64 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801cb5c:	1414      	asrs	r4, r2, #16
 801cb5e:	d401      	bmi.n	801cb64 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801cb60:	42bc      	cmp	r4, r7
 801cb62:	db09      	blt.n	801cb78 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801cb64:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801cb66:	9800      	ldr	r0, [sp, #0]
 801cb68:	4421      	add	r1, r4
 801cb6a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801cb6c:	3002      	adds	r0, #2
 801cb6e:	4422      	add	r2, r4
 801cb70:	3b01      	subs	r3, #1
 801cb72:	9000      	str	r0, [sp, #0]
 801cb74:	e7ec      	b.n	801cb50 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801cb76:	d071      	beq.n	801cc5c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 801cb78:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801cb7a:	1e5c      	subs	r4, r3, #1
 801cb7c:	fb06 1604 	mla	r6, r6, r4, r1
 801cb80:	1436      	asrs	r6, r6, #16
 801cb82:	d45d      	bmi.n	801cc40 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801cb84:	4576      	cmp	r6, lr
 801cb86:	da5b      	bge.n	801cc40 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801cb88:	9e14      	ldr	r6, [sp, #80]	; 0x50
 801cb8a:	fb06 2404 	mla	r4, r6, r4, r2
 801cb8e:	1424      	asrs	r4, r4, #16
 801cb90:	d456      	bmi.n	801cc40 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801cb92:	42bc      	cmp	r4, r7
 801cb94:	da54      	bge.n	801cc40 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801cb96:	f8dd 9000 	ldr.w	r9, [sp]
 801cb9a:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 801cb9e:	4698      	mov	r8, r3
 801cba0:	f1b8 0f00 	cmp.w	r8, #0
 801cba4:	dd54      	ble.n	801cc50 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801cba6:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801cbaa:	9804      	ldr	r0, [sp, #16]
 801cbac:	1414      	asrs	r4, r2, #16
 801cbae:	fb07 0404 	mla	r4, r7, r4, r0
 801cbb2:	140e      	asrs	r6, r1, #16
 801cbb4:	9801      	ldr	r0, [sp, #4]
 801cbb6:	f814 e006 	ldrb.w	lr, [r4, r6]
 801cbba:	f8b9 4000 	ldrh.w	r4, [r9]
 801cbbe:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801cbc2:	eb00 0b0e 	add.w	fp, r0, lr
 801cbc6:	1227      	asrs	r7, r4, #8
 801cbc8:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801cbcc:	f89b b001 	ldrb.w	fp, [fp, #1]
 801cbd0:	f810 e00e 	ldrb.w	lr, [r0, lr]
 801cbd4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801cbd6:	fb16 f60a 	smulbb	r6, r6, sl
 801cbda:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801cbde:	fb07 6705 	mla	r7, r7, r5, r6
 801cbe2:	10e6      	asrs	r6, r4, #3
 801cbe4:	00e4      	lsls	r4, r4, #3
 801cbe6:	b2e4      	uxtb	r4, r4
 801cbe8:	fb1b fb0a 	smulbb	fp, fp, sl
 801cbec:	fb14 f405 	smulbb	r4, r4, r5
 801cbf0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801cbf4:	b2bf      	uxth	r7, r7
 801cbf6:	fb06 b605 	mla	r6, r6, r5, fp
 801cbfa:	fb0e 4e0a 	mla	lr, lr, sl, r4
 801cbfe:	b2b6      	uxth	r6, r6
 801cc00:	fa1f fe8e 	uxth.w	lr, lr
 801cc04:	1c7c      	adds	r4, r7, #1
 801cc06:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801cc0a:	f106 0b01 	add.w	fp, r6, #1
 801cc0e:	f10e 0401 	add.w	r4, lr, #1
 801cc12:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 801cc16:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801cc1a:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801cc1e:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801cc22:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801cc26:	4327      	orrs	r7, r4
 801cc28:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801cc2c:	4401      	add	r1, r0
 801cc2e:	9814      	ldr	r0, [sp, #80]	; 0x50
 801cc30:	ea47 070b 	orr.w	r7, r7, fp
 801cc34:	f829 7b02 	strh.w	r7, [r9], #2
 801cc38:	4402      	add	r2, r0
 801cc3a:	f108 38ff 	add.w	r8, r8, #4294967295
 801cc3e:	e7af      	b.n	801cba0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801cc40:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 801cc44:	f04f 0e00 	mov.w	lr, #0
 801cc48:	eb03 040e 	add.w	r4, r3, lr
 801cc4c:	2c00      	cmp	r4, #0
 801cc4e:	dc43      	bgt.n	801ccd8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801cc50:	9a00      	ldr	r2, [sp, #0]
 801cc52:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801cc56:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801cc5a:	9300      	str	r3, [sp, #0]
 801cc5c:	9b02      	ldr	r3, [sp, #8]
 801cc5e:	2b00      	cmp	r3, #0
 801cc60:	f340 8098 	ble.w	801cd94 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801cc64:	ee30 0a04 	vadd.f32	s0, s0, s8
 801cc68:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801cc6c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801cc70:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801cc72:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801cc76:	ee31 1a05 	vadd.f32	s2, s2, s10
 801cc7a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801cc7e:	eef0 6a62 	vmov.f32	s13, s5
 801cc82:	ee61 7a27 	vmul.f32	s15, s2, s15
 801cc86:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cc8a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801cc8e:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 801cc92:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801cc96:	eef0 6a43 	vmov.f32	s13, s6
 801cc9a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801cc9e:	ee12 2a90 	vmov	r2, s5
 801cca2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801cca6:	fb92 f3f3 	sdiv	r3, r2, r3
 801ccaa:	ee13 2a10 	vmov	r2, s6
 801ccae:	9313      	str	r3, [sp, #76]	; 0x4c
 801ccb0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ccb2:	fb92 f3f3 	sdiv	r3, r2, r3
 801ccb6:	9314      	str	r3, [sp, #80]	; 0x50
 801ccb8:	9b02      	ldr	r3, [sp, #8]
 801ccba:	9a05      	ldr	r2, [sp, #20]
 801ccbc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ccc0:	3b01      	subs	r3, #1
 801ccc2:	9302      	str	r3, [sp, #8]
 801ccc4:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801ccc8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ccca:	eeb0 3a67 	vmov.f32	s6, s15
 801ccce:	bf08      	it	eq
 801ccd0:	4613      	moveq	r3, r2
 801ccd2:	eef0 2a47 	vmov.f32	s5, s14
 801ccd6:	e72a      	b.n	801cb2e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801ccd8:	140f      	asrs	r7, r1, #16
 801ccda:	d454      	bmi.n	801cd86 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801ccdc:	f8dc 6008 	ldr.w	r6, [ip, #8]
 801cce0:	42be      	cmp	r6, r7
 801cce2:	dd50      	ble.n	801cd86 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801cce4:	ea5f 4822 	movs.w	r8, r2, asr #16
 801cce8:	d44d      	bmi.n	801cd86 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801ccea:	f8dc 400c 	ldr.w	r4, [ip, #12]
 801ccee:	4544      	cmp	r4, r8
 801ccf0:	dd49      	ble.n	801cd86 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801ccf2:	9c04      	ldr	r4, [sp, #16]
 801ccf4:	b236      	sxth	r6, r6
 801ccf6:	fb08 4606 	mla	r6, r8, r6, r4
 801ccfa:	f06f 0001 	mvn.w	r0, #1
 801ccfe:	f816 8007 	ldrb.w	r8, [r6, r7]
 801cd02:	9c01      	ldr	r4, [sp, #4]
 801cd04:	fb00 fa0e 	mul.w	sl, r0, lr
 801cd08:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801cd0c:	9800      	ldr	r0, [sp, #0]
 801cd0e:	eb04 0b08 	add.w	fp, r4, r8
 801cd12:	f830 400a 	ldrh.w	r4, [r0, sl]
 801cd16:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801cd1a:	9801      	ldr	r0, [sp, #4]
 801cd1c:	f89b b001 	ldrb.w	fp, [fp, #1]
 801cd20:	f810 8008 	ldrb.w	r8, [r0, r8]
 801cd24:	9800      	ldr	r0, [sp, #0]
 801cd26:	1227      	asrs	r7, r4, #8
 801cd28:	fb16 f609 	smulbb	r6, r6, r9
 801cd2c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801cd30:	fb07 6705 	mla	r7, r7, r5, r6
 801cd34:	10e6      	asrs	r6, r4, #3
 801cd36:	00e4      	lsls	r4, r4, #3
 801cd38:	b2e4      	uxtb	r4, r4
 801cd3a:	fb1b fb09 	smulbb	fp, fp, r9
 801cd3e:	fb14 f405 	smulbb	r4, r4, r5
 801cd42:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801cd46:	b2bf      	uxth	r7, r7
 801cd48:	fb06 b605 	mla	r6, r6, r5, fp
 801cd4c:	fb08 4809 	mla	r8, r8, r9, r4
 801cd50:	b2b6      	uxth	r6, r6
 801cd52:	fa1f f888 	uxth.w	r8, r8
 801cd56:	1c7c      	adds	r4, r7, #1
 801cd58:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801cd5c:	f106 0b01 	add.w	fp, r6, #1
 801cd60:	f108 0401 	add.w	r4, r8, #1
 801cd64:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 801cd68:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801cd6c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801cd70:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801cd74:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801cd78:	4327      	orrs	r7, r4
 801cd7a:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801cd7e:	ea47 070b 	orr.w	r7, r7, fp
 801cd82:	f820 700a 	strh.w	r7, [r0, sl]
 801cd86:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801cd88:	4401      	add	r1, r0
 801cd8a:	9814      	ldr	r0, [sp, #80]	; 0x50
 801cd8c:	f10e 3eff 	add.w	lr, lr, #4294967295
 801cd90:	4402      	add	r2, r0
 801cd92:	e759      	b.n	801cc48 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801cd94:	b007      	add	sp, #28
 801cd96:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801cd9c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801cd9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cda0:	b085      	sub	sp, #20
 801cda2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801cda6:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801cda8:	9203      	str	r2, [sp, #12]
 801cdaa:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801cdae:	6870      	ldr	r0, [r6, #4]
 801cdb0:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801cdb2:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 801cdb6:	686f      	ldr	r7, [r5, #4]
 801cdb8:	9101      	str	r1, [sp, #4]
 801cdba:	fb00 2404 	mla	r4, r0, r4, r2
 801cdbe:	6832      	ldr	r2, [r6, #0]
 801cdc0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801cdc4:	682a      	ldr	r2, [r5, #0]
 801cdc6:	9202      	str	r2, [sp, #8]
 801cdc8:	3704      	adds	r7, #4
 801cdca:	9a01      	ldr	r2, [sp, #4]
 801cdcc:	2a00      	cmp	r2, #0
 801cdce:	dc03      	bgt.n	801cdd8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801cdd0:	9a03      	ldr	r2, [sp, #12]
 801cdd2:	2a00      	cmp	r2, #0
 801cdd4:	f340 80cc 	ble.w	801cf70 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801cdd8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801cdda:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801cdde:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801cde2:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801cde6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801cde8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801cdec:	2b00      	cmp	r3, #0
 801cdee:	dd0d      	ble.n	801ce0c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801cdf0:	1406      	asrs	r6, r0, #16
 801cdf2:	d405      	bmi.n	801ce00 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801cdf4:	454e      	cmp	r6, r9
 801cdf6:	da03      	bge.n	801ce00 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801cdf8:	1416      	asrs	r6, r2, #16
 801cdfa:	d401      	bmi.n	801ce00 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801cdfc:	4546      	cmp	r6, r8
 801cdfe:	db06      	blt.n	801ce0e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801ce00:	9e12      	ldr	r6, [sp, #72]	; 0x48
 801ce02:	4460      	add	r0, ip
 801ce04:	4432      	add	r2, r6
 801ce06:	3b01      	subs	r3, #1
 801ce08:	3402      	adds	r4, #2
 801ce0a:	e7ef      	b.n	801cdec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 801ce0c:	d00f      	beq.n	801ce2e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801ce0e:	1e5e      	subs	r6, r3, #1
 801ce10:	fb0c 0e06 	mla	lr, ip, r6, r0
 801ce14:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 801ce18:	d543      	bpl.n	801cea2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801ce1a:	4698      	mov	r8, r3
 801ce1c:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 801ce20:	f1b8 0f00 	cmp.w	r8, #0
 801ce24:	dc71      	bgt.n	801cf0a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801ce26:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801ce2a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ce2e:	9b01      	ldr	r3, [sp, #4]
 801ce30:	2b00      	cmp	r3, #0
 801ce32:	f340 809d 	ble.w	801cf70 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801ce36:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ce3a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ce3e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801ce42:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ce44:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ce48:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ce4c:	eeb0 6a62 	vmov.f32	s12, s5
 801ce50:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ce54:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ce58:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ce5c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801ce60:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ce64:	eeb0 6a43 	vmov.f32	s12, s6
 801ce68:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ce6c:	ee12 2a90 	vmov	r2, s5
 801ce70:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ce74:	fb92 fcf3 	sdiv	ip, r2, r3
 801ce78:	ee13 2a10 	vmov	r2, s6
 801ce7c:	fb92 f3f3 	sdiv	r3, r2, r3
 801ce80:	9312      	str	r3, [sp, #72]	; 0x48
 801ce82:	9b01      	ldr	r3, [sp, #4]
 801ce84:	9a03      	ldr	r2, [sp, #12]
 801ce86:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ce8a:	3b01      	subs	r3, #1
 801ce8c:	9301      	str	r3, [sp, #4]
 801ce8e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801ce92:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ce94:	eeb0 3a67 	vmov.f32	s6, s15
 801ce98:	bf08      	it	eq
 801ce9a:	4613      	moveq	r3, r2
 801ce9c:	eef0 2a47 	vmov.f32	s5, s14
 801cea0:	e793      	b.n	801cdca <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801cea2:	45ce      	cmp	lr, r9
 801cea4:	dab9      	bge.n	801ce1a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801cea6:	9912      	ldr	r1, [sp, #72]	; 0x48
 801cea8:	fb01 2606 	mla	r6, r1, r6, r2
 801ceac:	1436      	asrs	r6, r6, #16
 801ceae:	d4b4      	bmi.n	801ce1a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801ceb0:	4546      	cmp	r6, r8
 801ceb2:	dab2      	bge.n	801ce1a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801ceb4:	4698      	mov	r8, r3
 801ceb6:	46a2      	mov	sl, r4
 801ceb8:	f1b8 0f00 	cmp.w	r8, #0
 801cebc:	ddb3      	ble.n	801ce26 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801cebe:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801cec2:	9902      	ldr	r1, [sp, #8]
 801cec4:	1416      	asrs	r6, r2, #16
 801cec6:	fb09 1606 	mla	r6, r9, r6, r1
 801ceca:	ea4f 4e20 	mov.w	lr, r0, asr #16
 801cece:	492a      	ldr	r1, [pc, #168]	; (801cf78 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 801ced0:	f816 e00e 	ldrb.w	lr, [r6, lr]
 801ced4:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801ced8:	eb07 0b0e 	add.w	fp, r7, lr
 801cedc:	4460      	add	r0, ip
 801cede:	f89b 6001 	ldrb.w	r6, [fp, #1]
 801cee2:	f89b 9002 	ldrb.w	r9, [fp, #2]
 801cee6:	00f6      	lsls	r6, r6, #3
 801cee8:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 801ceec:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801cef0:	ea49 0606 	orr.w	r6, r9, r6
 801cef4:	f817 900e 	ldrb.w	r9, [r7, lr]
 801cef8:	9912      	ldr	r1, [sp, #72]	; 0x48
 801cefa:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 801cefe:	f82a 6b02 	strh.w	r6, [sl], #2
 801cf02:	440a      	add	r2, r1
 801cf04:	f108 38ff 	add.w	r8, r8, #4294967295
 801cf08:	e7d6      	b.n	801ceb8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801cf0a:	ea5f 4920 	movs.w	r9, r0, asr #16
 801cf0e:	d429      	bmi.n	801cf64 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801cf10:	68ae      	ldr	r6, [r5, #8]
 801cf12:	454e      	cmp	r6, r9
 801cf14:	dd26      	ble.n	801cf64 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801cf16:	ea5f 4b22 	movs.w	fp, r2, asr #16
 801cf1a:	d423      	bmi.n	801cf64 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801cf1c:	68e9      	ldr	r1, [r5, #12]
 801cf1e:	4559      	cmp	r1, fp
 801cf20:	dd20      	ble.n	801cf64 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801cf22:	9902      	ldr	r1, [sp, #8]
 801cf24:	fa0f fe86 	sxth.w	lr, r6
 801cf28:	fb0b 1e0e 	mla	lr, fp, lr, r1
 801cf2c:	f06f 0101 	mvn.w	r1, #1
 801cf30:	f81e e009 	ldrb.w	lr, [lr, r9]
 801cf34:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801cf38:	eb07 060e 	add.w	r6, r7, lr
 801cf3c:	fb01 f908 	mul.w	r9, r1, r8
 801cf40:	f896 b002 	ldrb.w	fp, [r6, #2]
 801cf44:	7876      	ldrb	r6, [r6, #1]
 801cf46:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 801cf4a:	00f6      	lsls	r6, r6, #3
 801cf4c:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 801cf50:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801cf54:	ea4b 0606 	orr.w	r6, fp, r6
 801cf58:	f817 b00e 	ldrb.w	fp, [r7, lr]
 801cf5c:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 801cf60:	f82a 6009 	strh.w	r6, [sl, r9]
 801cf64:	9912      	ldr	r1, [sp, #72]	; 0x48
 801cf66:	4460      	add	r0, ip
 801cf68:	440a      	add	r2, r1
 801cf6a:	f108 38ff 	add.w	r8, r8, #4294967295
 801cf6e:	e757      	b.n	801ce20 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801cf70:	b005      	add	sp, #20
 801cf72:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cf76:	bf00      	nop
 801cf78:	fffff800 	.word	0xfffff800

0801cf7c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801cf7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cf80:	b087      	sub	sp, #28
 801cf82:	468b      	mov	fp, r1
 801cf84:	9815      	ldr	r0, [sp, #84]	; 0x54
 801cf86:	9204      	str	r2, [sp, #16]
 801cf88:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801cf8c:	9205      	str	r2, [sp, #20]
 801cf8e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801cf92:	6841      	ldr	r1, [r0, #4]
 801cf94:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 801cf98:	fb01 2404 	mla	r4, r1, r4, r2
 801cf9c:	6802      	ldr	r2, [r0, #0]
 801cf9e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801cfa2:	f8dc 2000 	ldr.w	r2, [ip]
 801cfa6:	9201      	str	r2, [sp, #4]
 801cfa8:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801cfac:	3204      	adds	r2, #4
 801cfae:	9202      	str	r2, [sp, #8]
 801cfb0:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801cfb4:	f1bb 0f00 	cmp.w	fp, #0
 801cfb8:	dc03      	bgt.n	801cfc2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801cfba:	9a04      	ldr	r2, [sp, #16]
 801cfbc:	2a00      	cmp	r2, #0
 801cfbe:	f340 8138 	ble.w	801d232 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801cfc2:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801cfc4:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801cfc8:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 801cfcc:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801cfd0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801cfd2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801cfd6:	2b00      	cmp	r3, #0
 801cfd8:	dd0e      	ble.n	801cff8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801cfda:	1402      	asrs	r2, r0, #16
 801cfdc:	d405      	bmi.n	801cfea <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801cfde:	42ba      	cmp	r2, r7
 801cfe0:	da03      	bge.n	801cfea <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801cfe2:	140a      	asrs	r2, r1, #16
 801cfe4:	d401      	bmi.n	801cfea <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801cfe6:	42b2      	cmp	r2, r6
 801cfe8:	db07      	blt.n	801cffa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801cfea:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801cfec:	4410      	add	r0, r2
 801cfee:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801cff0:	3b01      	subs	r3, #1
 801cff2:	4411      	add	r1, r2
 801cff4:	3402      	adds	r4, #2
 801cff6:	e7ee      	b.n	801cfd6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801cff8:	d019      	beq.n	801d02e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801cffa:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801cffc:	1e5a      	subs	r2, r3, #1
 801cffe:	fb05 0502 	mla	r5, r5, r2, r0
 801d002:	142d      	asrs	r5, r5, #16
 801d004:	d409      	bmi.n	801d01a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801d006:	42bd      	cmp	r5, r7
 801d008:	da07      	bge.n	801d01a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801d00a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801d00c:	fb05 1202 	mla	r2, r5, r2, r1
 801d010:	1412      	asrs	r2, r2, #16
 801d012:	d402      	bmi.n	801d01a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801d014:	42b2      	cmp	r2, r6
 801d016:	f2c0 80ac 	blt.w	801d172 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 801d01a:	f04f 0e00 	mov.w	lr, #0
 801d01e:	eb03 020e 	add.w	r2, r3, lr
 801d022:	2a00      	cmp	r2, #0
 801d024:	dc3e      	bgt.n	801d0a4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801d026:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801d02a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801d02e:	f1bb 0f00 	cmp.w	fp, #0
 801d032:	f340 80fe 	ble.w	801d232 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801d036:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d03a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d03e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801d042:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d044:	f1bb 0b01 	subs.w	fp, fp, #1
 801d048:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d04c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d050:	eeb0 6a62 	vmov.f32	s12, s5
 801d054:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d058:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d05c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d060:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801d064:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d068:	eeb0 6a43 	vmov.f32	s12, s6
 801d06c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d070:	ee12 2a90 	vmov	r2, s5
 801d074:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d078:	fb92 f3f3 	sdiv	r3, r2, r3
 801d07c:	ee13 2a10 	vmov	r2, s6
 801d080:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d084:	9313      	str	r3, [sp, #76]	; 0x4c
 801d086:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d088:	fb92 f3f3 	sdiv	r3, r2, r3
 801d08c:	9a04      	ldr	r2, [sp, #16]
 801d08e:	9314      	str	r3, [sp, #80]	; 0x50
 801d090:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801d094:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d096:	eeb0 3a67 	vmov.f32	s6, s15
 801d09a:	bf08      	it	eq
 801d09c:	4613      	moveq	r3, r2
 801d09e:	eef0 2a47 	vmov.f32	s5, s14
 801d0a2:	e787      	b.n	801cfb4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801d0a4:	1406      	asrs	r6, r0, #16
 801d0a6:	d45d      	bmi.n	801d164 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801d0a8:	f8dc 5008 	ldr.w	r5, [ip, #8]
 801d0ac:	42b5      	cmp	r5, r6
 801d0ae:	dd59      	ble.n	801d164 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801d0b0:	140f      	asrs	r7, r1, #16
 801d0b2:	d457      	bmi.n	801d164 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801d0b4:	f8dc 200c 	ldr.w	r2, [ip, #12]
 801d0b8:	42ba      	cmp	r2, r7
 801d0ba:	dd53      	ble.n	801d164 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801d0bc:	9a01      	ldr	r2, [sp, #4]
 801d0be:	b22d      	sxth	r5, r5
 801d0c0:	fb07 2505 	mla	r5, r7, r5, r2
 801d0c4:	5daa      	ldrb	r2, [r5, r6]
 801d0c6:	9d02      	ldr	r5, [sp, #8]
 801d0c8:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801d0cc:	0e2e      	lsrs	r6, r5, #24
 801d0ce:	d049      	beq.n	801d164 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801d0d0:	f06f 0201 	mvn.w	r2, #1
 801d0d4:	fb02 f20e 	mul.w	r2, r2, lr
 801d0d8:	9203      	str	r2, [sp, #12]
 801d0da:	f834 8002 	ldrh.w	r8, [r4, r2]
 801d0de:	9a05      	ldr	r2, [sp, #20]
 801d0e0:	4356      	muls	r6, r2
 801d0e2:	1c72      	adds	r2, r6, #1
 801d0e4:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801d0e8:	1212      	asrs	r2, r2, #8
 801d0ea:	fa1f f982 	uxth.w	r9, r2
 801d0ee:	ea4f 2728 	mov.w	r7, r8, asr #8
 801d0f2:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801d0f6:	43d2      	mvns	r2, r2
 801d0f8:	b2d2      	uxtb	r2, r2
 801d0fa:	fb16 f609 	smulbb	r6, r6, r9
 801d0fe:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d102:	fb07 6702 	mla	r7, r7, r2, r6
 801d106:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801d10a:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801d10e:	b2ed      	uxtb	r5, r5
 801d110:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801d114:	fa5f f888 	uxtb.w	r8, r8
 801d118:	fb15 f509 	smulbb	r5, r5, r9
 801d11c:	fb08 5502 	mla	r5, r8, r2, r5
 801d120:	b2bf      	uxth	r7, r7
 801d122:	fb1a fa09 	smulbb	sl, sl, r9
 801d126:	b2ad      	uxth	r5, r5
 801d128:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d12c:	fb06 a602 	mla	r6, r6, r2, sl
 801d130:	1c7a      	adds	r2, r7, #1
 801d132:	f105 0a01 	add.w	sl, r5, #1
 801d136:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801d13a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801d13e:	b2b6      	uxth	r6, r6
 801d140:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801d144:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801d148:	ea4a 0707 	orr.w	r7, sl, r7
 801d14c:	f106 0a01 	add.w	sl, r6, #1
 801d150:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801d154:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d158:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801d15c:	9a03      	ldr	r2, [sp, #12]
 801d15e:	ea47 070a 	orr.w	r7, r7, sl
 801d162:	52a7      	strh	r7, [r4, r2]
 801d164:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801d166:	4410      	add	r0, r2
 801d168:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801d16a:	f10e 3eff 	add.w	lr, lr, #4294967295
 801d16e:	4411      	add	r1, r2
 801d170:	e755      	b.n	801d01e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801d172:	f04f 0800 	mov.w	r8, #0
 801d176:	eba3 0208 	sub.w	r2, r3, r8
 801d17a:	2a00      	cmp	r2, #0
 801d17c:	f77f af53 	ble.w	801d026 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801d180:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 801d184:	9f01      	ldr	r7, [sp, #4]
 801d186:	140a      	asrs	r2, r1, #16
 801d188:	1405      	asrs	r5, r0, #16
 801d18a:	fb06 7202 	mla	r2, r6, r2, r7
 801d18e:	5d52      	ldrb	r2, [r2, r5]
 801d190:	9d02      	ldr	r5, [sp, #8]
 801d192:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801d196:	0e2e      	lsrs	r6, r5, #24
 801d198:	d044      	beq.n	801d224 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801d19a:	9a05      	ldr	r2, [sp, #20]
 801d19c:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801d1a0:	4356      	muls	r6, r2
 801d1a2:	1c72      	adds	r2, r6, #1
 801d1a4:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801d1a8:	1212      	asrs	r2, r2, #8
 801d1aa:	fa1f f982 	uxth.w	r9, r2
 801d1ae:	ea4f 272e 	mov.w	r7, lr, asr #8
 801d1b2:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801d1b6:	43d2      	mvns	r2, r2
 801d1b8:	b2d2      	uxtb	r2, r2
 801d1ba:	fb16 f609 	smulbb	r6, r6, r9
 801d1be:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d1c2:	fb07 6702 	mla	r7, r7, r2, r6
 801d1c6:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801d1ca:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801d1ce:	b2ed      	uxtb	r5, r5
 801d1d0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801d1d4:	fa5f fe8e 	uxtb.w	lr, lr
 801d1d8:	fb15 f509 	smulbb	r5, r5, r9
 801d1dc:	fb0e 5502 	mla	r5, lr, r2, r5
 801d1e0:	b2bf      	uxth	r7, r7
 801d1e2:	fb1a fa09 	smulbb	sl, sl, r9
 801d1e6:	b2ad      	uxth	r5, r5
 801d1e8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d1ec:	fb06 a602 	mla	r6, r6, r2, sl
 801d1f0:	1c7a      	adds	r2, r7, #1
 801d1f2:	f105 0a01 	add.w	sl, r5, #1
 801d1f6:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801d1fa:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801d1fe:	b2b6      	uxth	r6, r6
 801d200:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801d204:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801d208:	ea4a 0707 	orr.w	r7, sl, r7
 801d20c:	f106 0a01 	add.w	sl, r6, #1
 801d210:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801d214:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d218:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801d21c:	ea47 070a 	orr.w	r7, r7, sl
 801d220:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801d224:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801d226:	4410      	add	r0, r2
 801d228:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801d22a:	f108 0801 	add.w	r8, r8, #1
 801d22e:	4411      	add	r1, r2
 801d230:	e7a1      	b.n	801d176 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801d232:	b007      	add	sp, #28
 801d234:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801d238 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d238:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d23c:	b085      	sub	sp, #20
 801d23e:	468b      	mov	fp, r1
 801d240:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801d242:	9203      	str	r2, [sp, #12]
 801d244:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801d248:	6841      	ldr	r1, [r0, #4]
 801d24a:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801d24e:	fb01 2404 	mla	r4, r1, r4, r2
 801d252:	6802      	ldr	r2, [r0, #0]
 801d254:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801d258:	f8de 2000 	ldr.w	r2, [lr]
 801d25c:	9200      	str	r2, [sp, #0]
 801d25e:	f8de 2004 	ldr.w	r2, [lr, #4]
 801d262:	3204      	adds	r2, #4
 801d264:	9201      	str	r2, [sp, #4]
 801d266:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801d26a:	f1bb 0f00 	cmp.w	fp, #0
 801d26e:	dc03      	bgt.n	801d278 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801d270:	9a03      	ldr	r2, [sp, #12]
 801d272:	2a00      	cmp	r2, #0
 801d274:	f340 8153 	ble.w	801d51e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801d278:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801d27a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801d27e:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801d282:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801d286:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801d288:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801d28c:	2b00      	cmp	r3, #0
 801d28e:	dd0e      	ble.n	801d2ae <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801d290:	1408      	asrs	r0, r1, #16
 801d292:	d405      	bmi.n	801d2a0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801d294:	42b8      	cmp	r0, r7
 801d296:	da03      	bge.n	801d2a0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801d298:	1410      	asrs	r0, r2, #16
 801d29a:	d401      	bmi.n	801d2a0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801d29c:	42b0      	cmp	r0, r6
 801d29e:	db07      	blt.n	801d2b0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801d2a0:	9811      	ldr	r0, [sp, #68]	; 0x44
 801d2a2:	4401      	add	r1, r0
 801d2a4:	9812      	ldr	r0, [sp, #72]	; 0x48
 801d2a6:	3b01      	subs	r3, #1
 801d2a8:	4402      	add	r2, r0
 801d2aa:	3402      	adds	r4, #2
 801d2ac:	e7ee      	b.n	801d28c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801d2ae:	d017      	beq.n	801d2e0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801d2b0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801d2b2:	1e58      	subs	r0, r3, #1
 801d2b4:	fb05 1500 	mla	r5, r5, r0, r1
 801d2b8:	142d      	asrs	r5, r5, #16
 801d2ba:	d409      	bmi.n	801d2d0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801d2bc:	42bd      	cmp	r5, r7
 801d2be:	da07      	bge.n	801d2d0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801d2c0:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801d2c2:	fb05 2000 	mla	r0, r5, r0, r2
 801d2c6:	1400      	asrs	r0, r0, #16
 801d2c8:	d402      	bmi.n	801d2d0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801d2ca:	42b0      	cmp	r0, r6
 801d2cc:	f2c0 80bc 	blt.w	801d448 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 801d2d0:	2600      	movs	r6, #0
 801d2d2:	1998      	adds	r0, r3, r6
 801d2d4:	2800      	cmp	r0, #0
 801d2d6:	dc3e      	bgt.n	801d356 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 801d2d8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801d2dc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801d2e0:	f1bb 0f00 	cmp.w	fp, #0
 801d2e4:	f340 811b 	ble.w	801d51e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801d2e8:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d2ec:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d2f0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801d2f4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d2f6:	f1bb 0b01 	subs.w	fp, fp, #1
 801d2fa:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d2fe:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d302:	eeb0 6a62 	vmov.f32	s12, s5
 801d306:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d30a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d30e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d312:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801d316:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d31a:	eeb0 6a43 	vmov.f32	s12, s6
 801d31e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d322:	ee12 2a90 	vmov	r2, s5
 801d326:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d32a:	fb92 f3f3 	sdiv	r3, r2, r3
 801d32e:	ee13 2a10 	vmov	r2, s6
 801d332:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d336:	9311      	str	r3, [sp, #68]	; 0x44
 801d338:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d33a:	fb92 f3f3 	sdiv	r3, r2, r3
 801d33e:	9a03      	ldr	r2, [sp, #12]
 801d340:	9312      	str	r3, [sp, #72]	; 0x48
 801d342:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801d346:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d348:	eeb0 3a67 	vmov.f32	s6, s15
 801d34c:	bf08      	it	eq
 801d34e:	4613      	moveq	r3, r2
 801d350:	eef0 2a47 	vmov.f32	s5, s14
 801d354:	e789      	b.n	801d26a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801d356:	140f      	asrs	r7, r1, #16
 801d358:	d426      	bmi.n	801d3a8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801d35a:	f8de 5008 	ldr.w	r5, [lr, #8]
 801d35e:	42bd      	cmp	r5, r7
 801d360:	dd22      	ble.n	801d3a8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801d362:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801d366:	d41f      	bmi.n	801d3a8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801d368:	f8de 000c 	ldr.w	r0, [lr, #12]
 801d36c:	4560      	cmp	r0, ip
 801d36e:	dd1b      	ble.n	801d3a8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801d370:	9800      	ldr	r0, [sp, #0]
 801d372:	b22d      	sxth	r5, r5
 801d374:	fb0c 0505 	mla	r5, ip, r5, r0
 801d378:	5de8      	ldrb	r0, [r5, r7]
 801d37a:	9d01      	ldr	r5, [sp, #4]
 801d37c:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 801d380:	0e07      	lsrs	r7, r0, #24
 801d382:	2fff      	cmp	r7, #255	; 0xff
 801d384:	d116      	bne.n	801d3b4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801d386:	f06f 0501 	mvn.w	r5, #1
 801d38a:	fb05 f706 	mul.w	r7, r5, r6
 801d38e:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801d392:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801d396:	0945      	lsrs	r5, r0, #5
 801d398:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d39c:	ea4c 0505 	orr.w	r5, ip, r5
 801d3a0:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801d3a4:	4305      	orrs	r5, r0
 801d3a6:	53e5      	strh	r5, [r4, r7]
 801d3a8:	9811      	ldr	r0, [sp, #68]	; 0x44
 801d3aa:	4401      	add	r1, r0
 801d3ac:	9812      	ldr	r0, [sp, #72]	; 0x48
 801d3ae:	3e01      	subs	r6, #1
 801d3b0:	4402      	add	r2, r0
 801d3b2:	e78e      	b.n	801d2d2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801d3b4:	b2fd      	uxtb	r5, r7
 801d3b6:	2f00      	cmp	r7, #0
 801d3b8:	d0f6      	beq.n	801d3a8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801d3ba:	f06f 0701 	mvn.w	r7, #1
 801d3be:	4377      	muls	r7, r6
 801d3c0:	fa1f f985 	uxth.w	r9, r5
 801d3c4:	f834 8007 	ldrh.w	r8, [r4, r7]
 801d3c8:	9702      	str	r7, [sp, #8]
 801d3ca:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801d3ce:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801d3d2:	43ed      	mvns	r5, r5
 801d3d4:	b2ed      	uxtb	r5, r5
 801d3d6:	fb17 f709 	smulbb	r7, r7, r9
 801d3da:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d3de:	fb0c 7c05 	mla	ip, ip, r5, r7
 801d3e2:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801d3e6:	ea4f 07e8 	mov.w	r7, r8, asr #3
 801d3ea:	b2c0      	uxtb	r0, r0
 801d3ec:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801d3f0:	fa5f f888 	uxtb.w	r8, r8
 801d3f4:	fb10 f009 	smulbb	r0, r0, r9
 801d3f8:	fb08 0005 	mla	r0, r8, r5, r0
 801d3fc:	b280      	uxth	r0, r0
 801d3fe:	fa1f fc8c 	uxth.w	ip, ip
 801d402:	fb1a fa09 	smulbb	sl, sl, r9
 801d406:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801d40a:	fb07 a705 	mla	r7, r7, r5, sl
 801d40e:	f100 0a01 	add.w	sl, r0, #1
 801d412:	f10c 0501 	add.w	r5, ip, #1
 801d416:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801d41a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801d41e:	b2bf      	uxth	r7, r7
 801d420:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801d424:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801d428:	ea4a 0c0c 	orr.w	ip, sl, ip
 801d42c:	f107 0a01 	add.w	sl, r7, #1
 801d430:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801d434:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d438:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801d43c:	9802      	ldr	r0, [sp, #8]
 801d43e:	ea4c 0c0a 	orr.w	ip, ip, sl
 801d442:	f824 c000 	strh.w	ip, [r4, r0]
 801d446:	e7af      	b.n	801d3a8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801d448:	f04f 0800 	mov.w	r8, #0
 801d44c:	eba3 0008 	sub.w	r0, r3, r8
 801d450:	2800      	cmp	r0, #0
 801d452:	f77f af41 	ble.w	801d2d8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801d456:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801d45a:	9f00      	ldr	r7, [sp, #0]
 801d45c:	1410      	asrs	r0, r2, #16
 801d45e:	140d      	asrs	r5, r1, #16
 801d460:	fb06 7000 	mla	r0, r6, r0, r7
 801d464:	5d40      	ldrb	r0, [r0, r5]
 801d466:	9d01      	ldr	r5, [sp, #4]
 801d468:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801d46c:	0e2e      	lsrs	r6, r5, #24
 801d46e:	2eff      	cmp	r6, #255	; 0xff
 801d470:	d112      	bne.n	801d498 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 801d472:	482c      	ldr	r0, [pc, #176]	; (801d524 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 801d474:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801d478:	0968      	lsrs	r0, r5, #5
 801d47a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d47e:	4330      	orrs	r0, r6
 801d480:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801d484:	4328      	orrs	r0, r5
 801d486:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 801d48a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801d48c:	4401      	add	r1, r0
 801d48e:	9812      	ldr	r0, [sp, #72]	; 0x48
 801d490:	f108 0801 	add.w	r8, r8, #1
 801d494:	4402      	add	r2, r0
 801d496:	e7d9      	b.n	801d44c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801d498:	b2f0      	uxtb	r0, r6
 801d49a:	2e00      	cmp	r6, #0
 801d49c:	d0f5      	beq.n	801d48a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801d49e:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 801d4a2:	fa1f f980 	uxth.w	r9, r0
 801d4a6:	ea4f 272c 	mov.w	r7, ip, asr #8
 801d4aa:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801d4ae:	43c0      	mvns	r0, r0
 801d4b0:	b2c0      	uxtb	r0, r0
 801d4b2:	fb16 f609 	smulbb	r6, r6, r9
 801d4b6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d4ba:	fb07 6700 	mla	r7, r7, r0, r6
 801d4be:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801d4c2:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801d4c6:	b2ed      	uxtb	r5, r5
 801d4c8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801d4cc:	fa5f fc8c 	uxtb.w	ip, ip
 801d4d0:	fb15 f509 	smulbb	r5, r5, r9
 801d4d4:	fb0c 5500 	mla	r5, ip, r0, r5
 801d4d8:	b2bf      	uxth	r7, r7
 801d4da:	fb1a fa09 	smulbb	sl, sl, r9
 801d4de:	b2ad      	uxth	r5, r5
 801d4e0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d4e4:	fb06 a600 	mla	r6, r6, r0, sl
 801d4e8:	1c78      	adds	r0, r7, #1
 801d4ea:	f105 0a01 	add.w	sl, r5, #1
 801d4ee:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801d4f2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801d4f6:	b2b6      	uxth	r6, r6
 801d4f8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801d4fc:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801d500:	ea4a 0707 	orr.w	r7, sl, r7
 801d504:	f106 0a01 	add.w	sl, r6, #1
 801d508:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801d50c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d510:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801d514:	ea47 070a 	orr.w	r7, r7, sl
 801d518:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801d51c:	e7b5      	b.n	801d48a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801d51e:	b005      	add	sp, #20
 801d520:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d524:	fffff800 	.word	0xfffff800

0801d528 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d528:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d52c:	b087      	sub	sp, #28
 801d52e:	468b      	mov	fp, r1
 801d530:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801d532:	9204      	str	r2, [sp, #16]
 801d534:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801d538:	9205      	str	r2, [sp, #20]
 801d53a:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801d53e:	6861      	ldr	r1, [r4, #4]
 801d540:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801d544:	fb01 2000 	mla	r0, r1, r0, r2
 801d548:	6822      	ldr	r2, [r4, #0]
 801d54a:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801d54e:	f8de 2000 	ldr.w	r2, [lr]
 801d552:	9201      	str	r2, [sp, #4]
 801d554:	f8de 2004 	ldr.w	r2, [lr, #4]
 801d558:	9202      	str	r2, [sp, #8]
 801d55a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801d55e:	f1bb 0f00 	cmp.w	fp, #0
 801d562:	dc03      	bgt.n	801d56c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 801d564:	9a04      	ldr	r2, [sp, #16]
 801d566:	2a00      	cmp	r2, #0
 801d568:	f340 8142 	ble.w	801d7f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801d56c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801d56e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801d572:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801d576:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801d57a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801d57c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801d580:	2b00      	cmp	r3, #0
 801d582:	dd0e      	ble.n	801d5a2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801d584:	140c      	asrs	r4, r1, #16
 801d586:	d405      	bmi.n	801d594 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801d588:	42bc      	cmp	r4, r7
 801d58a:	da03      	bge.n	801d594 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801d58c:	1414      	asrs	r4, r2, #16
 801d58e:	d401      	bmi.n	801d594 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801d590:	42b4      	cmp	r4, r6
 801d592:	db07      	blt.n	801d5a4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801d594:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801d596:	4421      	add	r1, r4
 801d598:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801d59a:	3b01      	subs	r3, #1
 801d59c:	4422      	add	r2, r4
 801d59e:	3002      	adds	r0, #2
 801d5a0:	e7ee      	b.n	801d580 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801d5a2:	d019      	beq.n	801d5d8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801d5a4:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801d5a6:	1e5c      	subs	r4, r3, #1
 801d5a8:	fb05 1504 	mla	r5, r5, r4, r1
 801d5ac:	142d      	asrs	r5, r5, #16
 801d5ae:	d409      	bmi.n	801d5c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801d5b0:	42bd      	cmp	r5, r7
 801d5b2:	da07      	bge.n	801d5c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801d5b4:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801d5b6:	fb05 2404 	mla	r4, r5, r4, r2
 801d5ba:	1424      	asrs	r4, r4, #16
 801d5bc:	d402      	bmi.n	801d5c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801d5be:	42b4      	cmp	r4, r6
 801d5c0:	f2c0 80b1 	blt.w	801d726 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801d5c4:	f04f 0800 	mov.w	r8, #0
 801d5c8:	eb03 0408 	add.w	r4, r3, r8
 801d5cc:	2c00      	cmp	r4, #0
 801d5ce:	dc3e      	bgt.n	801d64e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801d5d0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801d5d4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d5d8:	f1bb 0f00 	cmp.w	fp, #0
 801d5dc:	f340 8108 	ble.w	801d7f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801d5e0:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d5e4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d5e8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801d5ec:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d5ee:	f1bb 0b01 	subs.w	fp, fp, #1
 801d5f2:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d5f6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d5fa:	eeb0 6a62 	vmov.f32	s12, s5
 801d5fe:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d602:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d606:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d60a:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801d60e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d612:	eeb0 6a43 	vmov.f32	s12, s6
 801d616:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d61a:	ee12 2a90 	vmov	r2, s5
 801d61e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d622:	fb92 f3f3 	sdiv	r3, r2, r3
 801d626:	ee13 2a10 	vmov	r2, s6
 801d62a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d62e:	9313      	str	r3, [sp, #76]	; 0x4c
 801d630:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d632:	fb92 f3f3 	sdiv	r3, r2, r3
 801d636:	9a04      	ldr	r2, [sp, #16]
 801d638:	9314      	str	r3, [sp, #80]	; 0x50
 801d63a:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801d63e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d640:	eeb0 3a67 	vmov.f32	s6, s15
 801d644:	bf08      	it	eq
 801d646:	4613      	moveq	r3, r2
 801d648:	eef0 2a47 	vmov.f32	s5, s14
 801d64c:	e787      	b.n	801d55e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 801d64e:	140e      	asrs	r6, r1, #16
 801d650:	d462      	bmi.n	801d718 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801d652:	f8de 5008 	ldr.w	r5, [lr, #8]
 801d656:	42b5      	cmp	r5, r6
 801d658:	dd5e      	ble.n	801d718 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801d65a:	1417      	asrs	r7, r2, #16
 801d65c:	d45c      	bmi.n	801d718 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801d65e:	f8de 400c 	ldr.w	r4, [lr, #12]
 801d662:	42bc      	cmp	r4, r7
 801d664:	dd58      	ble.n	801d718 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801d666:	b22d      	sxth	r5, r5
 801d668:	fb07 6505 	mla	r5, r7, r5, r6
 801d66c:	9c02      	ldr	r4, [sp, #8]
 801d66e:	5d66      	ldrb	r6, [r4, r5]
 801d670:	2e00      	cmp	r6, #0
 801d672:	d051      	beq.n	801d718 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801d674:	9c01      	ldr	r4, [sp, #4]
 801d676:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 801d67a:	f06f 0401 	mvn.w	r4, #1
 801d67e:	fb04 f408 	mul.w	r4, r4, r8
 801d682:	9403      	str	r4, [sp, #12]
 801d684:	5b05      	ldrh	r5, [r0, r4]
 801d686:	9c05      	ldr	r4, [sp, #20]
 801d688:	4366      	muls	r6, r4
 801d68a:	1c74      	adds	r4, r6, #1
 801d68c:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801d690:	1224      	asrs	r4, r4, #8
 801d692:	b2a7      	uxth	r7, r4
 801d694:	122e      	asrs	r6, r5, #8
 801d696:	43e4      	mvns	r4, r4
 801d698:	b2e4      	uxtb	r4, r4
 801d69a:	ea4f 2c29 	mov.w	ip, r9, asr #8
 801d69e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801d6a2:	fb16 f604 	smulbb	r6, r6, r4
 801d6a6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801d6aa:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d6ae:	00ed      	lsls	r5, r5, #3
 801d6b0:	fb0c 6c07 	mla	ip, ip, r7, r6
 801d6b4:	b2ed      	uxtb	r5, r5
 801d6b6:	ea4f 06e9 	mov.w	r6, r9, asr #3
 801d6ba:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801d6be:	fb15 f504 	smulbb	r5, r5, r4
 801d6c2:	fa5f f989 	uxtb.w	r9, r9
 801d6c6:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801d6ca:	fb09 5507 	mla	r5, r9, r7, r5
 801d6ce:	fb1a fa04 	smulbb	sl, sl, r4
 801d6d2:	fa1f fc8c 	uxth.w	ip, ip
 801d6d6:	b2ad      	uxth	r5, r5
 801d6d8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d6dc:	fb06 a607 	mla	r6, r6, r7, sl
 801d6e0:	f10c 0401 	add.w	r4, ip, #1
 801d6e4:	f105 0a01 	add.w	sl, r5, #1
 801d6e8:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801d6ec:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801d6f0:	b2b6      	uxth	r6, r6
 801d6f2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801d6f6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801d6fa:	ea4a 0c0c 	orr.w	ip, sl, ip
 801d6fe:	f106 0a01 	add.w	sl, r6, #1
 801d702:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801d706:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d70a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801d70e:	9c03      	ldr	r4, [sp, #12]
 801d710:	ea4c 0c0a 	orr.w	ip, ip, sl
 801d714:	f820 c004 	strh.w	ip, [r0, r4]
 801d718:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801d71a:	4421      	add	r1, r4
 801d71c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801d71e:	f108 38ff 	add.w	r8, r8, #4294967295
 801d722:	4422      	add	r2, r4
 801d724:	e750      	b.n	801d5c8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801d726:	f04f 0900 	mov.w	r9, #0
 801d72a:	eba3 0409 	sub.w	r4, r3, r9
 801d72e:	2c00      	cmp	r4, #0
 801d730:	f77f af4e 	ble.w	801d5d0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801d734:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801d738:	140d      	asrs	r5, r1, #16
 801d73a:	1414      	asrs	r4, r2, #16
 801d73c:	fb06 5404 	mla	r4, r6, r4, r5
 801d740:	9d02      	ldr	r5, [sp, #8]
 801d742:	5d2e      	ldrb	r6, [r5, r4]
 801d744:	2e00      	cmp	r6, #0
 801d746:	d04c      	beq.n	801d7e2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 801d748:	9d01      	ldr	r5, [sp, #4]
 801d74a:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 801d74e:	9c05      	ldr	r4, [sp, #20]
 801d750:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801d754:	4366      	muls	r6, r4
 801d756:	1c74      	adds	r4, r6, #1
 801d758:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801d75c:	1224      	asrs	r4, r4, #8
 801d75e:	b2a7      	uxth	r7, r4
 801d760:	122e      	asrs	r6, r5, #8
 801d762:	43e4      	mvns	r4, r4
 801d764:	b2e4      	uxtb	r4, r4
 801d766:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801d76a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801d76e:	fb16 f604 	smulbb	r6, r6, r4
 801d772:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801d776:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d77a:	00ed      	lsls	r5, r5, #3
 801d77c:	fb0c 6c07 	mla	ip, ip, r7, r6
 801d780:	b2ed      	uxtb	r5, r5
 801d782:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801d786:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801d78a:	fb15 f504 	smulbb	r5, r5, r4
 801d78e:	fa5f f888 	uxtb.w	r8, r8
 801d792:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801d796:	fb08 5507 	mla	r5, r8, r7, r5
 801d79a:	fb1a fa04 	smulbb	sl, sl, r4
 801d79e:	fa1f fc8c 	uxth.w	ip, ip
 801d7a2:	b2ad      	uxth	r5, r5
 801d7a4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d7a8:	fb06 a607 	mla	r6, r6, r7, sl
 801d7ac:	f10c 0401 	add.w	r4, ip, #1
 801d7b0:	f105 0a01 	add.w	sl, r5, #1
 801d7b4:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801d7b8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801d7bc:	b2b6      	uxth	r6, r6
 801d7be:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801d7c2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801d7c6:	ea4a 0c0c 	orr.w	ip, sl, ip
 801d7ca:	f106 0a01 	add.w	sl, r6, #1
 801d7ce:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801d7d2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d7d6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801d7da:	ea4c 0c0a 	orr.w	ip, ip, sl
 801d7de:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801d7e2:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801d7e4:	4421      	add	r1, r4
 801d7e6:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801d7e8:	f109 0901 	add.w	r9, r9, #1
 801d7ec:	4422      	add	r2, r4
 801d7ee:	e79c      	b.n	801d72a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 801d7f0:	b007      	add	sp, #28
 801d7f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801d7f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d7f6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d7fa:	b085      	sub	sp, #20
 801d7fc:	468b      	mov	fp, r1
 801d7fe:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801d800:	9203      	str	r2, [sp, #12]
 801d802:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 801d806:	6861      	ldr	r1, [r4, #4]
 801d808:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801d80c:	fb01 2000 	mla	r0, r1, r0, r2
 801d810:	6822      	ldr	r2, [r4, #0]
 801d812:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801d816:	f8d8 2000 	ldr.w	r2, [r8]
 801d81a:	9200      	str	r2, [sp, #0]
 801d81c:	f8d8 2004 	ldr.w	r2, [r8, #4]
 801d820:	9201      	str	r2, [sp, #4]
 801d822:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801d826:	f1bb 0f00 	cmp.w	fp, #0
 801d82a:	dc03      	bgt.n	801d834 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801d82c:	9a03      	ldr	r2, [sp, #12]
 801d82e:	2a00      	cmp	r2, #0
 801d830:	f340 8146 	ble.w	801dac0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801d834:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801d836:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801d83a:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801d83e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801d842:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801d844:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801d848:	2b00      	cmp	r3, #0
 801d84a:	dd0e      	ble.n	801d86a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801d84c:	140c      	asrs	r4, r1, #16
 801d84e:	d405      	bmi.n	801d85c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801d850:	42bc      	cmp	r4, r7
 801d852:	da03      	bge.n	801d85c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801d854:	1414      	asrs	r4, r2, #16
 801d856:	d401      	bmi.n	801d85c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801d858:	42b4      	cmp	r4, r6
 801d85a:	db07      	blt.n	801d86c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801d85c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801d85e:	4421      	add	r1, r4
 801d860:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801d862:	3b01      	subs	r3, #1
 801d864:	4422      	add	r2, r4
 801d866:	3002      	adds	r0, #2
 801d868:	e7ee      	b.n	801d848 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801d86a:	d017      	beq.n	801d89c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801d86c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801d86e:	1e5c      	subs	r4, r3, #1
 801d870:	fb05 1504 	mla	r5, r5, r4, r1
 801d874:	142d      	asrs	r5, r5, #16
 801d876:	d409      	bmi.n	801d88c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801d878:	42bd      	cmp	r5, r7
 801d87a:	da07      	bge.n	801d88c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801d87c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801d87e:	fb05 2404 	mla	r4, r5, r4, r2
 801d882:	1424      	asrs	r4, r4, #16
 801d884:	d402      	bmi.n	801d88c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801d886:	42b4      	cmp	r4, r6
 801d888:	f2c0 80b3 	blt.w	801d9f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801d88c:	2600      	movs	r6, #0
 801d88e:	199c      	adds	r4, r3, r6
 801d890:	2c00      	cmp	r4, #0
 801d892:	dc3e      	bgt.n	801d912 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801d894:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801d898:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d89c:	f1bb 0f00 	cmp.w	fp, #0
 801d8a0:	f340 810e 	ble.w	801dac0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801d8a4:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d8a8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d8ac:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801d8b0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d8b2:	f1bb 0b01 	subs.w	fp, fp, #1
 801d8b6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d8ba:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d8be:	eeb0 6a62 	vmov.f32	s12, s5
 801d8c2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d8c6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d8ca:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d8ce:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801d8d2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d8d6:	eeb0 6a43 	vmov.f32	s12, s6
 801d8da:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d8de:	ee12 2a90 	vmov	r2, s5
 801d8e2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d8e6:	fb92 f3f3 	sdiv	r3, r2, r3
 801d8ea:	ee13 2a10 	vmov	r2, s6
 801d8ee:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d8f2:	9311      	str	r3, [sp, #68]	; 0x44
 801d8f4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d8f6:	fb92 f3f3 	sdiv	r3, r2, r3
 801d8fa:	9a03      	ldr	r2, [sp, #12]
 801d8fc:	9312      	str	r3, [sp, #72]	; 0x48
 801d8fe:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801d902:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d904:	eeb0 3a67 	vmov.f32	s6, s15
 801d908:	bf08      	it	eq
 801d90a:	4613      	moveq	r3, r2
 801d90c:	eef0 2a47 	vmov.f32	s5, s14
 801d910:	e789      	b.n	801d826 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801d912:	140f      	asrs	r7, r1, #16
 801d914:	d418      	bmi.n	801d948 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801d916:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801d91a:	42bd      	cmp	r5, r7
 801d91c:	dd14      	ble.n	801d948 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801d91e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801d922:	d411      	bmi.n	801d948 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801d924:	f8d8 400c 	ldr.w	r4, [r8, #12]
 801d928:	4564      	cmp	r4, ip
 801d92a:	dd0d      	ble.n	801d948 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801d92c:	b22d      	sxth	r5, r5
 801d92e:	fb0c 7505 	mla	r5, ip, r5, r7
 801d932:	9c01      	ldr	r4, [sp, #4]
 801d934:	5d64      	ldrb	r4, [r4, r5]
 801d936:	2cff      	cmp	r4, #255	; 0xff
 801d938:	d10c      	bne.n	801d954 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801d93a:	9c00      	ldr	r4, [sp, #0]
 801d93c:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 801d940:	f06f 0401 	mvn.w	r4, #1
 801d944:	4374      	muls	r4, r6
 801d946:	5305      	strh	r5, [r0, r4]
 801d948:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801d94a:	4421      	add	r1, r4
 801d94c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801d94e:	3e01      	subs	r6, #1
 801d950:	4422      	add	r2, r4
 801d952:	e79c      	b.n	801d88e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801d954:	2c00      	cmp	r4, #0
 801d956:	d0f7      	beq.n	801d948 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801d958:	9f00      	ldr	r7, [sp, #0]
 801d95a:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 801d95e:	f06f 0501 	mvn.w	r5, #1
 801d962:	4375      	muls	r5, r6
 801d964:	9502      	str	r5, [sp, #8]
 801d966:	5b45      	ldrh	r5, [r0, r5]
 801d968:	fa1f fc84 	uxth.w	ip, r4
 801d96c:	122f      	asrs	r7, r5, #8
 801d96e:	43e4      	mvns	r4, r4
 801d970:	b2e4      	uxtb	r4, r4
 801d972:	ea4f 2e29 	mov.w	lr, r9, asr #8
 801d976:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d97a:	fb17 f704 	smulbb	r7, r7, r4
 801d97e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801d982:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801d986:	00ed      	lsls	r5, r5, #3
 801d988:	fb0e 7e0c 	mla	lr, lr, ip, r7
 801d98c:	b2ed      	uxtb	r5, r5
 801d98e:	ea4f 07e9 	mov.w	r7, r9, asr #3
 801d992:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801d996:	fb15 f504 	smulbb	r5, r5, r4
 801d99a:	fa5f f989 	uxtb.w	r9, r9
 801d99e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801d9a2:	fb09 550c 	mla	r5, r9, ip, r5
 801d9a6:	fb1a fa04 	smulbb	sl, sl, r4
 801d9aa:	fa1f fe8e 	uxth.w	lr, lr
 801d9ae:	b2ad      	uxth	r5, r5
 801d9b0:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801d9b4:	fb07 a70c 	mla	r7, r7, ip, sl
 801d9b8:	f10e 0401 	add.w	r4, lr, #1
 801d9bc:	f105 0a01 	add.w	sl, r5, #1
 801d9c0:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 801d9c4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801d9c8:	b2bf      	uxth	r7, r7
 801d9ca:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801d9ce:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801d9d2:	ea4a 0e0e 	orr.w	lr, sl, lr
 801d9d6:	f107 0a01 	add.w	sl, r7, #1
 801d9da:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801d9de:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d9e2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801d9e6:	9c02      	ldr	r4, [sp, #8]
 801d9e8:	ea4e 0e0a 	orr.w	lr, lr, sl
 801d9ec:	f820 e004 	strh.w	lr, [r0, r4]
 801d9f0:	e7aa      	b.n	801d948 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801d9f2:	f04f 0900 	mov.w	r9, #0
 801d9f6:	eba3 0409 	sub.w	r4, r3, r9
 801d9fa:	2c00      	cmp	r4, #0
 801d9fc:	f77f af4a 	ble.w	801d894 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801da00:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801da04:	1414      	asrs	r4, r2, #16
 801da06:	140d      	asrs	r5, r1, #16
 801da08:	fb06 5504 	mla	r5, r6, r4, r5
 801da0c:	9c01      	ldr	r4, [sp, #4]
 801da0e:	5d64      	ldrb	r4, [r4, r5]
 801da10:	2cff      	cmp	r4, #255	; 0xff
 801da12:	d10b      	bne.n	801da2c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801da14:	9c00      	ldr	r4, [sp, #0]
 801da16:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 801da1a:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 801da1e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801da20:	4421      	add	r1, r4
 801da22:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801da24:	f109 0901 	add.w	r9, r9, #1
 801da28:	4422      	add	r2, r4
 801da2a:	e7e4      	b.n	801d9f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801da2c:	2c00      	cmp	r4, #0
 801da2e:	d0f6      	beq.n	801da1e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801da30:	9e00      	ldr	r6, [sp, #0]
 801da32:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 801da36:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801da3a:	b2a7      	uxth	r7, r4
 801da3c:	122e      	asrs	r6, r5, #8
 801da3e:	43e4      	mvns	r4, r4
 801da40:	b2e4      	uxtb	r4, r4
 801da42:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801da46:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801da4a:	fb16 f604 	smulbb	r6, r6, r4
 801da4e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801da52:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801da56:	00ed      	lsls	r5, r5, #3
 801da58:	fb0c 6c07 	mla	ip, ip, r7, r6
 801da5c:	b2ed      	uxtb	r5, r5
 801da5e:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801da62:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801da66:	fb15 f504 	smulbb	r5, r5, r4
 801da6a:	fa5f fe8e 	uxtb.w	lr, lr
 801da6e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801da72:	fb0e 5507 	mla	r5, lr, r7, r5
 801da76:	fb1a fa04 	smulbb	sl, sl, r4
 801da7a:	fa1f fc8c 	uxth.w	ip, ip
 801da7e:	b2ad      	uxth	r5, r5
 801da80:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801da84:	fb06 a607 	mla	r6, r6, r7, sl
 801da88:	f10c 0401 	add.w	r4, ip, #1
 801da8c:	f105 0a01 	add.w	sl, r5, #1
 801da90:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801da94:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801da98:	b2b6      	uxth	r6, r6
 801da9a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801da9e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801daa2:	ea4a 0c0c 	orr.w	ip, sl, ip
 801daa6:	f106 0a01 	add.w	sl, r6, #1
 801daaa:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801daae:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801dab2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801dab6:	ea4c 0c0a 	orr.w	ip, ip, sl
 801daba:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801dabe:	e7ae      	b.n	801da1e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801dac0:	b005      	add	sp, #20
 801dac2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801dac6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801dac6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801daca:	b085      	sub	sp, #20
 801dacc:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801dace:	9203      	str	r2, [sp, #12]
 801dad0:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 801dad4:	9201      	str	r2, [sp, #4]
 801dad6:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801dada:	9100      	str	r1, [sp, #0]
 801dadc:	6841      	ldr	r1, [r0, #4]
 801dade:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801dae2:	fb01 2404 	mla	r4, r1, r4, r2
 801dae6:	6802      	ldr	r2, [r0, #0]
 801dae8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801daec:	f8de 2000 	ldr.w	r2, [lr]
 801daf0:	9202      	str	r2, [sp, #8]
 801daf2:	9a01      	ldr	r2, [sp, #4]
 801daf4:	43d6      	mvns	r6, r2
 801daf6:	b2f6      	uxtb	r6, r6
 801daf8:	9a00      	ldr	r2, [sp, #0]
 801dafa:	2a00      	cmp	r2, #0
 801dafc:	dc03      	bgt.n	801db06 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801dafe:	9a03      	ldr	r2, [sp, #12]
 801db00:	2a00      	cmp	r2, #0
 801db02:	f340 8124 	ble.w	801dd4e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801db06:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801db08:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801db0c:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801db10:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801db14:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801db16:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801db1a:	2b00      	cmp	r3, #0
 801db1c:	dd0e      	ble.n	801db3c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801db1e:	1408      	asrs	r0, r1, #16
 801db20:	d405      	bmi.n	801db2e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801db22:	4560      	cmp	r0, ip
 801db24:	da03      	bge.n	801db2e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801db26:	1410      	asrs	r0, r2, #16
 801db28:	d401      	bmi.n	801db2e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801db2a:	42b8      	cmp	r0, r7
 801db2c:	db07      	blt.n	801db3e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801db2e:	9811      	ldr	r0, [sp, #68]	; 0x44
 801db30:	4401      	add	r1, r0
 801db32:	9812      	ldr	r0, [sp, #72]	; 0x48
 801db34:	3b01      	subs	r3, #1
 801db36:	4402      	add	r2, r0
 801db38:	3402      	adds	r4, #2
 801db3a:	e7ee      	b.n	801db1a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801db3c:	d06e      	beq.n	801dc1c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801db3e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801db40:	1e58      	subs	r0, r3, #1
 801db42:	fb05 1500 	mla	r5, r5, r0, r1
 801db46:	142d      	asrs	r5, r5, #16
 801db48:	d45c      	bmi.n	801dc04 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801db4a:	4565      	cmp	r5, ip
 801db4c:	da5a      	bge.n	801dc04 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801db4e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801db50:	fb05 2000 	mla	r0, r5, r0, r2
 801db54:	1400      	asrs	r0, r0, #16
 801db56:	d455      	bmi.n	801dc04 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801db58:	42b8      	cmp	r0, r7
 801db5a:	da53      	bge.n	801dc04 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801db5c:	f8bd b004 	ldrh.w	fp, [sp, #4]
 801db60:	4699      	mov	r9, r3
 801db62:	46a2      	mov	sl, r4
 801db64:	f1b9 0f00 	cmp.w	r9, #0
 801db68:	dd54      	ble.n	801dc14 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801db6a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801db6e:	140d      	asrs	r5, r1, #16
 801db70:	1410      	asrs	r0, r2, #16
 801db72:	fb07 5000 	mla	r0, r7, r0, r5
 801db76:	9d02      	ldr	r5, [sp, #8]
 801db78:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801db7c:	f8ba 5000 	ldrh.w	r5, [sl]
 801db80:	122f      	asrs	r7, r5, #8
 801db82:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801db86:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801db8a:	fb17 f706 	smulbb	r7, r7, r6
 801db8e:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801db92:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801db96:	00ed      	lsls	r5, r5, #3
 801db98:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801db9c:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801dba0:	10c7      	asrs	r7, r0, #3
 801dba2:	b2ed      	uxtb	r5, r5
 801dba4:	00c0      	lsls	r0, r0, #3
 801dba6:	fb18 f806 	smulbb	r8, r8, r6
 801dbaa:	fb15 f506 	smulbb	r5, r5, r6
 801dbae:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801dbb2:	b2c0      	uxtb	r0, r0
 801dbb4:	fa1f fc8c 	uxth.w	ip, ip
 801dbb8:	fb07 870b 	mla	r7, r7, fp, r8
 801dbbc:	fb00 500b 	mla	r0, r0, fp, r5
 801dbc0:	b280      	uxth	r0, r0
 801dbc2:	b2bf      	uxth	r7, r7
 801dbc4:	f10c 0501 	add.w	r5, ip, #1
 801dbc8:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801dbcc:	f107 0801 	add.w	r8, r7, #1
 801dbd0:	1c45      	adds	r5, r0, #1
 801dbd2:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801dbd6:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801dbda:	9811      	ldr	r0, [sp, #68]	; 0x44
 801dbdc:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801dbe0:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801dbe4:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801dbe8:	ea45 0c0c 	orr.w	ip, r5, ip
 801dbec:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801dbf0:	4401      	add	r1, r0
 801dbf2:	9812      	ldr	r0, [sp, #72]	; 0x48
 801dbf4:	ea4c 0c08 	orr.w	ip, ip, r8
 801dbf8:	f82a cb02 	strh.w	ip, [sl], #2
 801dbfc:	4402      	add	r2, r0
 801dbfe:	f109 39ff 	add.w	r9, r9, #4294967295
 801dc02:	e7af      	b.n	801db64 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801dc04:	f8bd a004 	ldrh.w	sl, [sp, #4]
 801dc08:	f04f 0800 	mov.w	r8, #0
 801dc0c:	eb03 0008 	add.w	r0, r3, r8
 801dc10:	2800      	cmp	r0, #0
 801dc12:	dc41      	bgt.n	801dc98 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801dc14:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801dc18:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801dc1c:	9b00      	ldr	r3, [sp, #0]
 801dc1e:	2b00      	cmp	r3, #0
 801dc20:	f340 8095 	ble.w	801dd4e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801dc24:	ee30 0a04 	vadd.f32	s0, s0, s8
 801dc28:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801dc2c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801dc30:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801dc32:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801dc36:	ee31 1a05 	vadd.f32	s2, s2, s10
 801dc3a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801dc3e:	eef0 6a62 	vmov.f32	s13, s5
 801dc42:	ee61 7a27 	vmul.f32	s15, s2, s15
 801dc46:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801dc4a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801dc4e:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 801dc52:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801dc56:	eef0 6a43 	vmov.f32	s13, s6
 801dc5a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801dc5e:	ee12 2a90 	vmov	r2, s5
 801dc62:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801dc66:	fb92 f3f3 	sdiv	r3, r2, r3
 801dc6a:	ee13 2a10 	vmov	r2, s6
 801dc6e:	9311      	str	r3, [sp, #68]	; 0x44
 801dc70:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801dc72:	fb92 f3f3 	sdiv	r3, r2, r3
 801dc76:	9312      	str	r3, [sp, #72]	; 0x48
 801dc78:	9b00      	ldr	r3, [sp, #0]
 801dc7a:	9a03      	ldr	r2, [sp, #12]
 801dc7c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801dc80:	3b01      	subs	r3, #1
 801dc82:	9300      	str	r3, [sp, #0]
 801dc84:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 801dc88:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801dc8a:	eeb0 3a67 	vmov.f32	s6, s15
 801dc8e:	bf08      	it	eq
 801dc90:	4613      	moveq	r3, r2
 801dc92:	eef0 2a47 	vmov.f32	s5, s14
 801dc96:	e72f      	b.n	801daf8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801dc98:	140f      	asrs	r7, r1, #16
 801dc9a:	d451      	bmi.n	801dd40 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801dc9c:	f8de 5008 	ldr.w	r5, [lr, #8]
 801dca0:	42bd      	cmp	r5, r7
 801dca2:	dd4d      	ble.n	801dd40 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801dca4:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801dca8:	d44a      	bmi.n	801dd40 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801dcaa:	f8de 000c 	ldr.w	r0, [lr, #12]
 801dcae:	4560      	cmp	r0, ip
 801dcb0:	dd46      	ble.n	801dd40 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801dcb2:	b22d      	sxth	r5, r5
 801dcb4:	fb0c 7505 	mla	r5, ip, r5, r7
 801dcb8:	9802      	ldr	r0, [sp, #8]
 801dcba:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 801dcbe:	f06f 0501 	mvn.w	r5, #1
 801dcc2:	fb05 fb08 	mul.w	fp, r5, r8
 801dcc6:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801dcca:	f834 500b 	ldrh.w	r5, [r4, fp]
 801dcce:	122f      	asrs	r7, r5, #8
 801dcd0:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801dcd4:	fb17 f706 	smulbb	r7, r7, r6
 801dcd8:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801dcdc:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801dce0:	00ed      	lsls	r5, r5, #3
 801dce2:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801dce6:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801dcea:	10c7      	asrs	r7, r0, #3
 801dcec:	b2ed      	uxtb	r5, r5
 801dcee:	00c0      	lsls	r0, r0, #3
 801dcf0:	fb19 f906 	smulbb	r9, r9, r6
 801dcf4:	fb15 f506 	smulbb	r5, r5, r6
 801dcf8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801dcfc:	b2c0      	uxtb	r0, r0
 801dcfe:	fa1f fc8c 	uxth.w	ip, ip
 801dd02:	fb07 970a 	mla	r7, r7, sl, r9
 801dd06:	fb00 500a 	mla	r0, r0, sl, r5
 801dd0a:	b2bf      	uxth	r7, r7
 801dd0c:	b280      	uxth	r0, r0
 801dd0e:	f10c 0501 	add.w	r5, ip, #1
 801dd12:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801dd16:	f107 0901 	add.w	r9, r7, #1
 801dd1a:	1c45      	adds	r5, r0, #1
 801dd1c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801dd20:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801dd24:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801dd28:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801dd2c:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801dd30:	ea45 0c0c 	orr.w	ip, r5, ip
 801dd34:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801dd38:	ea4c 0c09 	orr.w	ip, ip, r9
 801dd3c:	f824 c00b 	strh.w	ip, [r4, fp]
 801dd40:	9811      	ldr	r0, [sp, #68]	; 0x44
 801dd42:	4401      	add	r1, r0
 801dd44:	9812      	ldr	r0, [sp, #72]	; 0x48
 801dd46:	f108 38ff 	add.w	r8, r8, #4294967295
 801dd4a:	4402      	add	r2, r0
 801dd4c:	e75e      	b.n	801dc0c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 801dd4e:	b005      	add	sp, #20
 801dd50:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801dd54 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801dd54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dd58:	b085      	sub	sp, #20
 801dd5a:	4693      	mov	fp, r2
 801dd5c:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801dd5e:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801dd60:	6870      	ldr	r0, [r6, #4]
 801dd62:	9101      	str	r1, [sp, #4]
 801dd64:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801dd68:	fb00 2404 	mla	r4, r0, r4, r2
 801dd6c:	6832      	ldr	r2, [r6, #0]
 801dd6e:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801dd72:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801dd76:	682a      	ldr	r2, [r5, #0]
 801dd78:	9202      	str	r2, [sp, #8]
 801dd7a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801dd7e:	9a01      	ldr	r2, [sp, #4]
 801dd80:	2a00      	cmp	r2, #0
 801dd82:	dc03      	bgt.n	801dd8c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801dd84:	f1bb 0f00 	cmp.w	fp, #0
 801dd88:	f340 809a 	ble.w	801dec0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801dd8c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801dd8e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801dd92:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801dd96:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801dd9a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801dd9c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801dda0:	2b00      	cmp	r3, #0
 801dda2:	dd0c      	ble.n	801ddbe <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801dda4:	1406      	asrs	r6, r0, #16
 801dda6:	d405      	bmi.n	801ddb4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801dda8:	454e      	cmp	r6, r9
 801ddaa:	da03      	bge.n	801ddb4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801ddac:	1416      	asrs	r6, r2, #16
 801ddae:	d401      	bmi.n	801ddb4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801ddb0:	4546      	cmp	r6, r8
 801ddb2:	db05      	blt.n	801ddc0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801ddb4:	4470      	add	r0, lr
 801ddb6:	4462      	add	r2, ip
 801ddb8:	3b01      	subs	r3, #1
 801ddba:	3402      	adds	r4, #2
 801ddbc:	e7f0      	b.n	801dda0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801ddbe:	d00f      	beq.n	801dde0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801ddc0:	1e5e      	subs	r6, r3, #1
 801ddc2:	fb0e 0706 	mla	r7, lr, r6, r0
 801ddc6:	143f      	asrs	r7, r7, #16
 801ddc8:	d541      	bpl.n	801de4e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 801ddca:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801ddce:	4698      	mov	r8, r3
 801ddd0:	9603      	str	r6, [sp, #12]
 801ddd2:	f1b8 0f00 	cmp.w	r8, #0
 801ddd6:	dc56      	bgt.n	801de86 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 801ddd8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801dddc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801dde0:	9b01      	ldr	r3, [sp, #4]
 801dde2:	2b00      	cmp	r3, #0
 801dde4:	dd6c      	ble.n	801dec0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801dde6:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ddea:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ddee:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801ddf2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ddf4:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ddf8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ddfc:	eeb0 6a62 	vmov.f32	s12, s5
 801de00:	ee61 7a27 	vmul.f32	s15, s2, s15
 801de04:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801de08:	ee77 2a62 	vsub.f32	s5, s14, s5
 801de0c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801de10:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801de14:	eeb0 6a43 	vmov.f32	s12, s6
 801de18:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801de1c:	ee12 2a90 	vmov	r2, s5
 801de20:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801de24:	fb92 fef3 	sdiv	lr, r2, r3
 801de28:	ee13 2a10 	vmov	r2, s6
 801de2c:	fb92 fcf3 	sdiv	ip, r2, r3
 801de30:	9b01      	ldr	r3, [sp, #4]
 801de32:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801de36:	3b01      	subs	r3, #1
 801de38:	9301      	str	r3, [sp, #4]
 801de3a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801de3e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801de40:	eeb0 3a67 	vmov.f32	s6, s15
 801de44:	bf08      	it	eq
 801de46:	465b      	moveq	r3, fp
 801de48:	eef0 2a47 	vmov.f32	s5, s14
 801de4c:	e797      	b.n	801dd7e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801de4e:	454f      	cmp	r7, r9
 801de50:	dabb      	bge.n	801ddca <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801de52:	fb0c 2606 	mla	r6, ip, r6, r2
 801de56:	1436      	asrs	r6, r6, #16
 801de58:	d4b7      	bmi.n	801ddca <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801de5a:	4546      	cmp	r6, r8
 801de5c:	dab5      	bge.n	801ddca <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801de5e:	461e      	mov	r6, r3
 801de60:	46a0      	mov	r8, r4
 801de62:	2e00      	cmp	r6, #0
 801de64:	ddb8      	ble.n	801ddd8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801de66:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801de6a:	9902      	ldr	r1, [sp, #8]
 801de6c:	1417      	asrs	r7, r2, #16
 801de6e:	ea4f 4920 	mov.w	r9, r0, asr #16
 801de72:	fb0a 9707 	mla	r7, sl, r7, r9
 801de76:	4470      	add	r0, lr
 801de78:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801de7c:	f828 7b02 	strh.w	r7, [r8], #2
 801de80:	4462      	add	r2, ip
 801de82:	3e01      	subs	r6, #1
 801de84:	e7ed      	b.n	801de62 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801de86:	ea5f 4920 	movs.w	r9, r0, asr #16
 801de8a:	d414      	bmi.n	801deb6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801de8c:	68ae      	ldr	r6, [r5, #8]
 801de8e:	454e      	cmp	r6, r9
 801de90:	dd11      	ble.n	801deb6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801de92:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801de96:	d40e      	bmi.n	801deb6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801de98:	68ef      	ldr	r7, [r5, #12]
 801de9a:	4557      	cmp	r7, sl
 801de9c:	dd0b      	ble.n	801deb6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801de9e:	b236      	sxth	r6, r6
 801dea0:	fb0a 9606 	mla	r6, sl, r6, r9
 801dea4:	9f02      	ldr	r7, [sp, #8]
 801dea6:	f06f 0101 	mvn.w	r1, #1
 801deaa:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801deae:	fb01 f608 	mul.w	r6, r1, r8
 801deb2:	9903      	ldr	r1, [sp, #12]
 801deb4:	538f      	strh	r7, [r1, r6]
 801deb6:	4470      	add	r0, lr
 801deb8:	4462      	add	r2, ip
 801deba:	f108 38ff 	add.w	r8, r8, #4294967295
 801debe:	e788      	b.n	801ddd2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801dec0:	b005      	add	sp, #20
 801dec2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801dec6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801dec6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801deca:	b087      	sub	sp, #28
 801decc:	468b      	mov	fp, r1
 801dece:	9815      	ldr	r0, [sp, #84]	; 0x54
 801ded0:	9203      	str	r2, [sp, #12]
 801ded2:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801ded6:	9204      	str	r2, [sp, #16]
 801ded8:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 801dedc:	6841      	ldr	r1, [r0, #4]
 801dede:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801dee2:	fb01 2505 	mla	r5, r1, r5, r2
 801dee6:	6802      	ldr	r2, [r0, #0]
 801dee8:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801deec:	f8d9 2000 	ldr.w	r2, [r9]
 801def0:	9201      	str	r2, [sp, #4]
 801def2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801def6:	f1bb 0f00 	cmp.w	fp, #0
 801defa:	dc03      	bgt.n	801df04 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801defc:	9a03      	ldr	r2, [sp, #12]
 801defe:	2a00      	cmp	r2, #0
 801df00:	f340 8159 	ble.w	801e1b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801df04:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801df06:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801df0a:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801df0e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801df12:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801df14:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801df18:	2b00      	cmp	r3, #0
 801df1a:	dd0e      	ble.n	801df3a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801df1c:	1402      	asrs	r2, r0, #16
 801df1e:	d405      	bmi.n	801df2c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801df20:	42ba      	cmp	r2, r7
 801df22:	da03      	bge.n	801df2c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801df24:	140a      	asrs	r2, r1, #16
 801df26:	d401      	bmi.n	801df2c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801df28:	42b2      	cmp	r2, r6
 801df2a:	db07      	blt.n	801df3c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801df2c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801df2e:	4410      	add	r0, r2
 801df30:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801df32:	3b01      	subs	r3, #1
 801df34:	4411      	add	r1, r2
 801df36:	3502      	adds	r5, #2
 801df38:	e7ee      	b.n	801df18 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801df3a:	d017      	beq.n	801df6c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801df3c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801df3e:	1e5a      	subs	r2, r3, #1
 801df40:	fb04 0402 	mla	r4, r4, r2, r0
 801df44:	1424      	asrs	r4, r4, #16
 801df46:	d409      	bmi.n	801df5c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801df48:	42bc      	cmp	r4, r7
 801df4a:	da07      	bge.n	801df5c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801df4c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801df4e:	fb04 1202 	mla	r2, r4, r2, r1
 801df52:	1412      	asrs	r2, r2, #16
 801df54:	d402      	bmi.n	801df5c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801df56:	42b2      	cmp	r2, r6
 801df58:	f2c0 80bf 	blt.w	801e0da <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801df5c:	2700      	movs	r7, #0
 801df5e:	19da      	adds	r2, r3, r7
 801df60:	2a00      	cmp	r2, #0
 801df62:	dc3e      	bgt.n	801dfe2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801df64:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801df68:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801df6c:	f1bb 0f00 	cmp.w	fp, #0
 801df70:	f340 8121 	ble.w	801e1b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801df74:	ee30 0a04 	vadd.f32	s0, s0, s8
 801df78:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801df7c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801df80:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801df82:	f1bb 0b01 	subs.w	fp, fp, #1
 801df86:	ee31 1a05 	vadd.f32	s2, s2, s10
 801df8a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801df8e:	eeb0 6a62 	vmov.f32	s12, s5
 801df92:	ee61 7a27 	vmul.f32	s15, s2, s15
 801df96:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801df9a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801df9e:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801dfa2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801dfa6:	eeb0 6a43 	vmov.f32	s12, s6
 801dfaa:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801dfae:	ee12 2a90 	vmov	r2, s5
 801dfb2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801dfb6:	fb92 f3f3 	sdiv	r3, r2, r3
 801dfba:	ee13 2a10 	vmov	r2, s6
 801dfbe:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801dfc2:	9313      	str	r3, [sp, #76]	; 0x4c
 801dfc4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801dfc6:	fb92 f3f3 	sdiv	r3, r2, r3
 801dfca:	9a03      	ldr	r2, [sp, #12]
 801dfcc:	9314      	str	r3, [sp, #80]	; 0x50
 801dfce:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801dfd2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801dfd4:	eeb0 3a67 	vmov.f32	s6, s15
 801dfd8:	bf08      	it	eq
 801dfda:	4613      	moveq	r3, r2
 801dfdc:	eef0 2a47 	vmov.f32	s5, s14
 801dfe0:	e789      	b.n	801def6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801dfe2:	1406      	asrs	r6, r0, #16
 801dfe4:	d42d      	bmi.n	801e042 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801dfe6:	f8d9 4008 	ldr.w	r4, [r9, #8]
 801dfea:	42b4      	cmp	r4, r6
 801dfec:	dd29      	ble.n	801e042 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801dfee:	ea5f 4c21 	movs.w	ip, r1, asr #16
 801dff2:	d426      	bmi.n	801e042 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801dff4:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801dff8:	4562      	cmp	r2, ip
 801dffa:	dd22      	ble.n	801e042 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801dffc:	b224      	sxth	r4, r4
 801dffe:	9a01      	ldr	r2, [sp, #4]
 801e000:	fb0c 6404 	mla	r4, ip, r4, r6
 801e004:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 801e008:	0e22      	lsrs	r2, r4, #24
 801e00a:	d01a      	beq.n	801e042 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801e00c:	9e04      	ldr	r6, [sp, #16]
 801e00e:	4372      	muls	r2, r6
 801e010:	1c56      	adds	r6, r2, #1
 801e012:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801e016:	1212      	asrs	r2, r2, #8
 801e018:	0a26      	lsrs	r6, r4, #8
 801e01a:	2aff      	cmp	r2, #255	; 0xff
 801e01c:	9605      	str	r6, [sp, #20]
 801e01e:	d116      	bne.n	801e04e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801e020:	f06f 0201 	mvn.w	r2, #1
 801e024:	fb02 fc07 	mul.w	ip, r2, r7
 801e028:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801e02c:	0962      	lsrs	r2, r4, #5
 801e02e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e032:	f026 0607 	bic.w	r6, r6, #7
 801e036:	4316      	orrs	r6, r2
 801e038:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801e03c:	4326      	orrs	r6, r4
 801e03e:	f825 600c 	strh.w	r6, [r5, ip]
 801e042:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801e044:	4410      	add	r0, r2
 801e046:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e048:	3f01      	subs	r7, #1
 801e04a:	4411      	add	r1, r2
 801e04c:	e787      	b.n	801df5e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801e04e:	f06f 0601 	mvn.w	r6, #1
 801e052:	437e      	muls	r6, r7
 801e054:	fa1f fa82 	uxth.w	sl, r2
 801e058:	f835 8006 	ldrh.w	r8, [r5, r6]
 801e05c:	9602      	str	r6, [sp, #8]
 801e05e:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801e062:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 801e066:	43d2      	mvns	r2, r2
 801e068:	b2d2      	uxtb	r2, r2
 801e06a:	fb1c fc0a 	smulbb	ip, ip, sl
 801e06e:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801e072:	fb0e ce02 	mla	lr, lr, r2, ip
 801e076:	b2e4      	uxtb	r4, r4
 801e078:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801e07c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801e080:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801e084:	fa5f f888 	uxtb.w	r8, r8
 801e088:	fb14 f40a 	smulbb	r4, r4, sl
 801e08c:	fb08 4402 	mla	r4, r8, r2, r4
 801e090:	fa1f fe8e 	uxth.w	lr, lr
 801e094:	fb16 f60a 	smulbb	r6, r6, sl
 801e098:	b2a4      	uxth	r4, r4
 801e09a:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801e09e:	fb0c 6c02 	mla	ip, ip, r2, r6
 801e0a2:	f10e 0201 	add.w	r2, lr, #1
 801e0a6:	1c66      	adds	r6, r4, #1
 801e0a8:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801e0ac:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801e0b0:	fa1f fc8c 	uxth.w	ip, ip
 801e0b4:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801e0b8:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801e0bc:	ea46 0e0e 	orr.w	lr, r6, lr
 801e0c0:	f10c 0601 	add.w	r6, ip, #1
 801e0c4:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801e0c8:	0976      	lsrs	r6, r6, #5
 801e0ca:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801e0ce:	9a02      	ldr	r2, [sp, #8]
 801e0d0:	ea4e 0e06 	orr.w	lr, lr, r6
 801e0d4:	f825 e002 	strh.w	lr, [r5, r2]
 801e0d8:	e7b3      	b.n	801e042 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801e0da:	f04f 0800 	mov.w	r8, #0
 801e0de:	eba3 0208 	sub.w	r2, r3, r8
 801e0e2:	2a00      	cmp	r2, #0
 801e0e4:	f77f af3e 	ble.w	801df64 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801e0e8:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 801e0ec:	1404      	asrs	r4, r0, #16
 801e0ee:	140a      	asrs	r2, r1, #16
 801e0f0:	fb06 4202 	mla	r2, r6, r2, r4
 801e0f4:	9c01      	ldr	r4, [sp, #4]
 801e0f6:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 801e0fa:	0e22      	lsrs	r2, r4, #24
 801e0fc:	d016      	beq.n	801e12c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801e0fe:	9e04      	ldr	r6, [sp, #16]
 801e100:	4372      	muls	r2, r6
 801e102:	1c56      	adds	r6, r2, #1
 801e104:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801e108:	1212      	asrs	r2, r2, #8
 801e10a:	2aff      	cmp	r2, #255	; 0xff
 801e10c:	ea4f 2614 	mov.w	r6, r4, lsr #8
 801e110:	d113      	bne.n	801e13a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801e112:	0962      	lsrs	r2, r4, #5
 801e114:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801e118:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e11c:	f026 0607 	bic.w	r6, r6, #7
 801e120:	4316      	orrs	r6, r2
 801e122:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801e126:	4326      	orrs	r6, r4
 801e128:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 801e12c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801e12e:	4410      	add	r0, r2
 801e130:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e132:	f108 0801 	add.w	r8, r8, #1
 801e136:	4411      	add	r1, r2
 801e138:	e7d1      	b.n	801e0de <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 801e13a:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 801e13e:	fa1f fa82 	uxth.w	sl, r2
 801e142:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801e146:	f3c4 4707 	ubfx	r7, r4, #16, #8
 801e14a:	43d2      	mvns	r2, r2
 801e14c:	b2d2      	uxtb	r2, r2
 801e14e:	fb17 f70a 	smulbb	r7, r7, sl
 801e152:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801e156:	fb0c 7c02 	mla	ip, ip, r2, r7
 801e15a:	b2e4      	uxtb	r4, r4
 801e15c:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801e160:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801e164:	fa5f fe8e 	uxtb.w	lr, lr
 801e168:	fb14 f40a 	smulbb	r4, r4, sl
 801e16c:	fb0e 4402 	mla	r4, lr, r2, r4
 801e170:	b2f6      	uxtb	r6, r6
 801e172:	fa1f fc8c 	uxth.w	ip, ip
 801e176:	fb16 f60a 	smulbb	r6, r6, sl
 801e17a:	b2a4      	uxth	r4, r4
 801e17c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801e180:	fb07 6702 	mla	r7, r7, r2, r6
 801e184:	f10c 0201 	add.w	r2, ip, #1
 801e188:	1c66      	adds	r6, r4, #1
 801e18a:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801e18e:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801e192:	b2bf      	uxth	r7, r7
 801e194:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801e198:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801e19c:	ea46 0c0c 	orr.w	ip, r6, ip
 801e1a0:	1c7e      	adds	r6, r7, #1
 801e1a2:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801e1a6:	0976      	lsrs	r6, r6, #5
 801e1a8:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801e1ac:	ea4c 0c06 	orr.w	ip, ip, r6
 801e1b0:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 801e1b4:	e7ba      	b.n	801e12c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801e1b6:	b007      	add	sp, #28
 801e1b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e1bc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e1bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e1c0:	b085      	sub	sp, #20
 801e1c2:	468b      	mov	fp, r1
 801e1c4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801e1c6:	9203      	str	r2, [sp, #12]
 801e1c8:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801e1cc:	6841      	ldr	r1, [r0, #4]
 801e1ce:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801e1d2:	fb01 2404 	mla	r4, r1, r4, r2
 801e1d6:	6802      	ldr	r2, [r0, #0]
 801e1d8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801e1dc:	f8d8 2000 	ldr.w	r2, [r8]
 801e1e0:	9201      	str	r2, [sp, #4]
 801e1e2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801e1e6:	f1bb 0f00 	cmp.w	fp, #0
 801e1ea:	dc03      	bgt.n	801e1f4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801e1ec:	9a03      	ldr	r2, [sp, #12]
 801e1ee:	2a00      	cmp	r2, #0
 801e1f0:	f340 814f 	ble.w	801e492 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801e1f4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801e1f6:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801e1fa:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801e1fe:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801e202:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801e204:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801e208:	2b00      	cmp	r3, #0
 801e20a:	dd0e      	ble.n	801e22a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801e20c:	1408      	asrs	r0, r1, #16
 801e20e:	d405      	bmi.n	801e21c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801e210:	42b8      	cmp	r0, r7
 801e212:	da03      	bge.n	801e21c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801e214:	1410      	asrs	r0, r2, #16
 801e216:	d401      	bmi.n	801e21c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801e218:	42b0      	cmp	r0, r6
 801e21a:	db07      	blt.n	801e22c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801e21c:	9811      	ldr	r0, [sp, #68]	; 0x44
 801e21e:	4401      	add	r1, r0
 801e220:	9812      	ldr	r0, [sp, #72]	; 0x48
 801e222:	3b01      	subs	r3, #1
 801e224:	4402      	add	r2, r0
 801e226:	3402      	adds	r4, #2
 801e228:	e7ee      	b.n	801e208 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801e22a:	d017      	beq.n	801e25c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801e22c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801e22e:	1e58      	subs	r0, r3, #1
 801e230:	fb05 1500 	mla	r5, r5, r0, r1
 801e234:	142d      	asrs	r5, r5, #16
 801e236:	d409      	bmi.n	801e24c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e238:	42bd      	cmp	r5, r7
 801e23a:	da07      	bge.n	801e24c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e23c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e23e:	fb05 2000 	mla	r0, r5, r0, r2
 801e242:	1400      	asrs	r0, r0, #16
 801e244:	d402      	bmi.n	801e24c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e246:	42b0      	cmp	r0, r6
 801e248:	f2c0 80ba 	blt.w	801e3c0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801e24c:	2600      	movs	r6, #0
 801e24e:	1998      	adds	r0, r3, r6
 801e250:	2800      	cmp	r0, #0
 801e252:	dc3e      	bgt.n	801e2d2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801e254:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801e258:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801e25c:	f1bb 0f00 	cmp.w	fp, #0
 801e260:	f340 8117 	ble.w	801e492 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801e264:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e268:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e26c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801e270:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e272:	f1bb 0b01 	subs.w	fp, fp, #1
 801e276:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e27a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e27e:	eeb0 6a62 	vmov.f32	s12, s5
 801e282:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e286:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e28a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e28e:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801e292:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e296:	eeb0 6a43 	vmov.f32	s12, s6
 801e29a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e29e:	ee12 2a90 	vmov	r2, s5
 801e2a2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e2a6:	fb92 f3f3 	sdiv	r3, r2, r3
 801e2aa:	ee13 2a10 	vmov	r2, s6
 801e2ae:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e2b2:	9311      	str	r3, [sp, #68]	; 0x44
 801e2b4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e2b6:	fb92 f3f3 	sdiv	r3, r2, r3
 801e2ba:	9a03      	ldr	r2, [sp, #12]
 801e2bc:	9312      	str	r3, [sp, #72]	; 0x48
 801e2be:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801e2c2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e2c4:	eeb0 3a67 	vmov.f32	s6, s15
 801e2c8:	bf08      	it	eq
 801e2ca:	4613      	moveq	r3, r2
 801e2cc:	eef0 2a47 	vmov.f32	s5, s14
 801e2d0:	e789      	b.n	801e1e6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801e2d2:	140f      	asrs	r7, r1, #16
 801e2d4:	d424      	bmi.n	801e320 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e2d6:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801e2da:	42bd      	cmp	r5, r7
 801e2dc:	dd20      	ble.n	801e320 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e2de:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801e2e2:	d41d      	bmi.n	801e320 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e2e4:	f8d8 000c 	ldr.w	r0, [r8, #12]
 801e2e8:	4560      	cmp	r0, ip
 801e2ea:	dd19      	ble.n	801e320 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e2ec:	b22d      	sxth	r5, r5
 801e2ee:	fb0c 7505 	mla	r5, ip, r5, r7
 801e2f2:	9801      	ldr	r0, [sp, #4]
 801e2f4:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 801e2f8:	0e07      	lsrs	r7, r0, #24
 801e2fa:	2fff      	cmp	r7, #255	; 0xff
 801e2fc:	d116      	bne.n	801e32c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801e2fe:	f06f 0501 	mvn.w	r5, #1
 801e302:	fb05 f706 	mul.w	r7, r5, r6
 801e306:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801e30a:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801e30e:	0945      	lsrs	r5, r0, #5
 801e310:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801e314:	ea4c 0505 	orr.w	r5, ip, r5
 801e318:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801e31c:	4305      	orrs	r5, r0
 801e31e:	53e5      	strh	r5, [r4, r7]
 801e320:	9811      	ldr	r0, [sp, #68]	; 0x44
 801e322:	4401      	add	r1, r0
 801e324:	9812      	ldr	r0, [sp, #72]	; 0x48
 801e326:	3e01      	subs	r6, #1
 801e328:	4402      	add	r2, r0
 801e32a:	e790      	b.n	801e24e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801e32c:	b2fd      	uxtb	r5, r7
 801e32e:	2f00      	cmp	r7, #0
 801e330:	d0f6      	beq.n	801e320 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e332:	f06f 0701 	mvn.w	r7, #1
 801e336:	4377      	muls	r7, r6
 801e338:	fa1f f985 	uxth.w	r9, r5
 801e33c:	f834 e007 	ldrh.w	lr, [r4, r7]
 801e340:	9702      	str	r7, [sp, #8]
 801e342:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801e346:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801e34a:	43ed      	mvns	r5, r5
 801e34c:	b2ed      	uxtb	r5, r5
 801e34e:	fb17 f709 	smulbb	r7, r7, r9
 801e352:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801e356:	fb0c 7c05 	mla	ip, ip, r5, r7
 801e35a:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801e35e:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801e362:	b2c0      	uxtb	r0, r0
 801e364:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801e368:	fa5f fe8e 	uxtb.w	lr, lr
 801e36c:	fb10 f009 	smulbb	r0, r0, r9
 801e370:	fb0e 0005 	mla	r0, lr, r5, r0
 801e374:	b280      	uxth	r0, r0
 801e376:	fa1f fc8c 	uxth.w	ip, ip
 801e37a:	fb1a fa09 	smulbb	sl, sl, r9
 801e37e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801e382:	fb07 a705 	mla	r7, r7, r5, sl
 801e386:	f100 0a01 	add.w	sl, r0, #1
 801e38a:	f10c 0501 	add.w	r5, ip, #1
 801e38e:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801e392:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801e396:	b2bf      	uxth	r7, r7
 801e398:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801e39c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801e3a0:	ea4a 0c0c 	orr.w	ip, sl, ip
 801e3a4:	f107 0a01 	add.w	sl, r7, #1
 801e3a8:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801e3ac:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801e3b0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801e3b4:	9802      	ldr	r0, [sp, #8]
 801e3b6:	ea4c 0c0a 	orr.w	ip, ip, sl
 801e3ba:	f824 c000 	strh.w	ip, [r4, r0]
 801e3be:	e7af      	b.n	801e320 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e3c0:	f04f 0e00 	mov.w	lr, #0
 801e3c4:	eba3 000e 	sub.w	r0, r3, lr
 801e3c8:	2800      	cmp	r0, #0
 801e3ca:	f77f af43 	ble.w	801e254 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801e3ce:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801e3d2:	140d      	asrs	r5, r1, #16
 801e3d4:	1410      	asrs	r0, r2, #16
 801e3d6:	fb06 5000 	mla	r0, r6, r0, r5
 801e3da:	9d01      	ldr	r5, [sp, #4]
 801e3dc:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801e3e0:	0e2e      	lsrs	r6, r5, #24
 801e3e2:	2eff      	cmp	r6, #255	; 0xff
 801e3e4:	d112      	bne.n	801e40c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 801e3e6:	482c      	ldr	r0, [pc, #176]	; (801e498 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 801e3e8:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801e3ec:	0968      	lsrs	r0, r5, #5
 801e3ee:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801e3f2:	4330      	orrs	r0, r6
 801e3f4:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801e3f8:	4328      	orrs	r0, r5
 801e3fa:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 801e3fe:	9811      	ldr	r0, [sp, #68]	; 0x44
 801e400:	4401      	add	r1, r0
 801e402:	9812      	ldr	r0, [sp, #72]	; 0x48
 801e404:	f10e 0e01 	add.w	lr, lr, #1
 801e408:	4402      	add	r2, r0
 801e40a:	e7db      	b.n	801e3c4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 801e40c:	b2f0      	uxtb	r0, r6
 801e40e:	2e00      	cmp	r6, #0
 801e410:	d0f5      	beq.n	801e3fe <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801e412:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801e416:	fa1f f980 	uxth.w	r9, r0
 801e41a:	ea4f 272c 	mov.w	r7, ip, asr #8
 801e41e:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801e422:	43c0      	mvns	r0, r0
 801e424:	b2c0      	uxtb	r0, r0
 801e426:	fb16 f609 	smulbb	r6, r6, r9
 801e42a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801e42e:	fb07 6700 	mla	r7, r7, r0, r6
 801e432:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801e436:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801e43a:	b2ed      	uxtb	r5, r5
 801e43c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801e440:	fa5f fc8c 	uxtb.w	ip, ip
 801e444:	fb15 f509 	smulbb	r5, r5, r9
 801e448:	fb0c 5500 	mla	r5, ip, r0, r5
 801e44c:	b2bf      	uxth	r7, r7
 801e44e:	fb1a fa09 	smulbb	sl, sl, r9
 801e452:	b2ad      	uxth	r5, r5
 801e454:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801e458:	fb06 a600 	mla	r6, r6, r0, sl
 801e45c:	1c78      	adds	r0, r7, #1
 801e45e:	f105 0a01 	add.w	sl, r5, #1
 801e462:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801e466:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801e46a:	b2b6      	uxth	r6, r6
 801e46c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801e470:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801e474:	ea4a 0707 	orr.w	r7, sl, r7
 801e478:	f106 0a01 	add.w	sl, r6, #1
 801e47c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801e480:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801e484:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801e488:	ea47 070a 	orr.w	r7, r7, sl
 801e48c:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 801e490:	e7b5      	b.n	801e3fe <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801e492:	b005      	add	sp, #20
 801e494:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e498:	fffff800 	.word	0xfffff800

0801e49c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e49c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e4a0:	b087      	sub	sp, #28
 801e4a2:	468b      	mov	fp, r1
 801e4a4:	9815      	ldr	r0, [sp, #84]	; 0x54
 801e4a6:	9203      	str	r2, [sp, #12]
 801e4a8:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801e4ac:	9204      	str	r2, [sp, #16]
 801e4ae:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801e4b2:	6841      	ldr	r1, [r0, #4]
 801e4b4:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801e4b8:	fb01 2404 	mla	r4, r1, r4, r2
 801e4bc:	6802      	ldr	r2, [r0, #0]
 801e4be:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801e4c2:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801e4c6:	3201      	adds	r2, #1
 801e4c8:	f022 0201 	bic.w	r2, r2, #1
 801e4cc:	9200      	str	r2, [sp, #0]
 801e4ce:	f8d9 2000 	ldr.w	r2, [r9]
 801e4d2:	9201      	str	r2, [sp, #4]
 801e4d4:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801e4d8:	f1bb 0f00 	cmp.w	fp, #0
 801e4dc:	dc03      	bgt.n	801e4e6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801e4de:	9a03      	ldr	r2, [sp, #12]
 801e4e0:	2a00      	cmp	r2, #0
 801e4e2:	f340 8169 	ble.w	801e7b8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801e4e6:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801e4e8:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801e4ec:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801e4f0:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801e4f4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801e4f6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801e4fa:	2b00      	cmp	r3, #0
 801e4fc:	dd0e      	ble.n	801e51c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801e4fe:	1402      	asrs	r2, r0, #16
 801e500:	d405      	bmi.n	801e50e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801e502:	42ba      	cmp	r2, r7
 801e504:	da03      	bge.n	801e50e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801e506:	140a      	asrs	r2, r1, #16
 801e508:	d401      	bmi.n	801e50e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801e50a:	42b2      	cmp	r2, r6
 801e50c:	db07      	blt.n	801e51e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801e50e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801e510:	4410      	add	r0, r2
 801e512:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e514:	3b01      	subs	r3, #1
 801e516:	4411      	add	r1, r2
 801e518:	3402      	adds	r4, #2
 801e51a:	e7ee      	b.n	801e4fa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801e51c:	d017      	beq.n	801e54e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801e51e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801e520:	1e5a      	subs	r2, r3, #1
 801e522:	fb05 0502 	mla	r5, r5, r2, r0
 801e526:	142d      	asrs	r5, r5, #16
 801e528:	d409      	bmi.n	801e53e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801e52a:	42bd      	cmp	r5, r7
 801e52c:	da07      	bge.n	801e53e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801e52e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801e530:	fb05 1202 	mla	r2, r5, r2, r1
 801e534:	1412      	asrs	r2, r2, #16
 801e536:	d402      	bmi.n	801e53e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801e538:	42b2      	cmp	r2, r6
 801e53a:	f2c0 80c7 	blt.w	801e6cc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 801e53e:	2700      	movs	r7, #0
 801e540:	19da      	adds	r2, r3, r7
 801e542:	2a00      	cmp	r2, #0
 801e544:	dc3e      	bgt.n	801e5c4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801e546:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801e54a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801e54e:	f1bb 0f00 	cmp.w	fp, #0
 801e552:	f340 8131 	ble.w	801e7b8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801e556:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e55a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e55e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801e562:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e564:	f1bb 0b01 	subs.w	fp, fp, #1
 801e568:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e56c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e570:	eeb0 6a62 	vmov.f32	s12, s5
 801e574:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e578:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e57c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e580:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801e584:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e588:	eeb0 6a43 	vmov.f32	s12, s6
 801e58c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e590:	ee12 2a90 	vmov	r2, s5
 801e594:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e598:	fb92 f3f3 	sdiv	r3, r2, r3
 801e59c:	ee13 2a10 	vmov	r2, s6
 801e5a0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e5a4:	9313      	str	r3, [sp, #76]	; 0x4c
 801e5a6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e5a8:	fb92 f3f3 	sdiv	r3, r2, r3
 801e5ac:	9a03      	ldr	r2, [sp, #12]
 801e5ae:	9314      	str	r3, [sp, #80]	; 0x50
 801e5b0:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801e5b4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e5b6:	eeb0 3a67 	vmov.f32	s6, s15
 801e5ba:	bf08      	it	eq
 801e5bc:	4613      	moveq	r3, r2
 801e5be:	eef0 2a47 	vmov.f32	s5, s14
 801e5c2:	e789      	b.n	801e4d8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801e5c4:	1405      	asrs	r5, r0, #16
 801e5c6:	d435      	bmi.n	801e634 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801e5c8:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801e5cc:	42aa      	cmp	r2, r5
 801e5ce:	dd31      	ble.n	801e634 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801e5d0:	140e      	asrs	r6, r1, #16
 801e5d2:	d42f      	bmi.n	801e634 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801e5d4:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801e5d8:	42b2      	cmp	r2, r6
 801e5da:	dd2b      	ble.n	801e634 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801e5dc:	9a00      	ldr	r2, [sp, #0]
 801e5de:	fb06 5502 	mla	r5, r6, r2, r5
 801e5e2:	086a      	lsrs	r2, r5, #1
 801e5e4:	9e01      	ldr	r6, [sp, #4]
 801e5e6:	5cb2      	ldrb	r2, [r6, r2]
 801e5e8:	07ee      	lsls	r6, r5, #31
 801e5ea:	bf54      	ite	pl
 801e5ec:	f002 020f 	andpl.w	r2, r2, #15
 801e5f0:	1112      	asrmi	r2, r2, #4
 801e5f2:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801e5f6:	b2d2      	uxtb	r2, r2
 801e5f8:	b1e2      	cbz	r2, 801e634 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801e5fa:	9d04      	ldr	r5, [sp, #16]
 801e5fc:	436a      	muls	r2, r5
 801e5fe:	1c55      	adds	r5, r2, #1
 801e600:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801e604:	4d6e      	ldr	r5, [pc, #440]	; (801e7c0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801e606:	682d      	ldr	r5, [r5, #0]
 801e608:	1212      	asrs	r2, r2, #8
 801e60a:	0a2e      	lsrs	r6, r5, #8
 801e60c:	2aff      	cmp	r2, #255	; 0xff
 801e60e:	9605      	str	r6, [sp, #20]
 801e610:	d116      	bne.n	801e640 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801e612:	f06f 0201 	mvn.w	r2, #1
 801e616:	fb02 fc07 	mul.w	ip, r2, r7
 801e61a:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801e61e:	096a      	lsrs	r2, r5, #5
 801e620:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e624:	f026 0607 	bic.w	r6, r6, #7
 801e628:	4316      	orrs	r6, r2
 801e62a:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801e62e:	432e      	orrs	r6, r5
 801e630:	f824 600c 	strh.w	r6, [r4, ip]
 801e634:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801e636:	4410      	add	r0, r2
 801e638:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e63a:	3f01      	subs	r7, #1
 801e63c:	4411      	add	r1, r2
 801e63e:	e77f      	b.n	801e540 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801e640:	f06f 0601 	mvn.w	r6, #1
 801e644:	437e      	muls	r6, r7
 801e646:	fa1f fa82 	uxth.w	sl, r2
 801e64a:	f834 8006 	ldrh.w	r8, [r4, r6]
 801e64e:	9602      	str	r6, [sp, #8]
 801e650:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801e654:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 801e658:	43d2      	mvns	r2, r2
 801e65a:	b2d2      	uxtb	r2, r2
 801e65c:	fb1c fc0a 	smulbb	ip, ip, sl
 801e660:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801e664:	fb0e ce02 	mla	lr, lr, r2, ip
 801e668:	b2ed      	uxtb	r5, r5
 801e66a:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801e66e:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801e672:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801e676:	fa5f f888 	uxtb.w	r8, r8
 801e67a:	fb15 f50a 	smulbb	r5, r5, sl
 801e67e:	fb08 5502 	mla	r5, r8, r2, r5
 801e682:	fa1f fe8e 	uxth.w	lr, lr
 801e686:	fb16 f60a 	smulbb	r6, r6, sl
 801e68a:	b2ad      	uxth	r5, r5
 801e68c:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801e690:	fb0c 6c02 	mla	ip, ip, r2, r6
 801e694:	f10e 0201 	add.w	r2, lr, #1
 801e698:	1c6e      	adds	r6, r5, #1
 801e69a:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801e69e:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 801e6a2:	fa1f fc8c 	uxth.w	ip, ip
 801e6a6:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801e6aa:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801e6ae:	ea46 0e0e 	orr.w	lr, r6, lr
 801e6b2:	f10c 0601 	add.w	r6, ip, #1
 801e6b6:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801e6ba:	0976      	lsrs	r6, r6, #5
 801e6bc:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801e6c0:	9a02      	ldr	r2, [sp, #8]
 801e6c2:	ea4e 0e06 	orr.w	lr, lr, r6
 801e6c6:	f824 e002 	strh.w	lr, [r4, r2]
 801e6ca:	e7b3      	b.n	801e634 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801e6cc:	f04f 0800 	mov.w	r8, #0
 801e6d0:	eba3 0208 	sub.w	r2, r3, r8
 801e6d4:	2a00      	cmp	r2, #0
 801e6d6:	f77f af36 	ble.w	801e546 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801e6da:	9e00      	ldr	r6, [sp, #0]
 801e6dc:	1402      	asrs	r2, r0, #16
 801e6de:	140d      	asrs	r5, r1, #16
 801e6e0:	fb06 2505 	mla	r5, r6, r5, r2
 801e6e4:	086a      	lsrs	r2, r5, #1
 801e6e6:	9e01      	ldr	r6, [sp, #4]
 801e6e8:	5cb2      	ldrb	r2, [r6, r2]
 801e6ea:	07ed      	lsls	r5, r5, #31
 801e6ec:	bf54      	ite	pl
 801e6ee:	f002 020f 	andpl.w	r2, r2, #15
 801e6f2:	1112      	asrmi	r2, r2, #4
 801e6f4:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801e6f8:	b2d2      	uxtb	r2, r2
 801e6fa:	b1c2      	cbz	r2, 801e72e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801e6fc:	9d04      	ldr	r5, [sp, #16]
 801e6fe:	436a      	muls	r2, r5
 801e700:	1c55      	adds	r5, r2, #1
 801e702:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801e706:	4d2e      	ldr	r5, [pc, #184]	; (801e7c0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801e708:	1212      	asrs	r2, r2, #8
 801e70a:	682e      	ldr	r6, [r5, #0]
 801e70c:	2aff      	cmp	r2, #255	; 0xff
 801e70e:	ea4f 2516 	mov.w	r5, r6, lsr #8
 801e712:	d113      	bne.n	801e73c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801e714:	0972      	lsrs	r2, r6, #5
 801e716:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801e71a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e71e:	f025 0507 	bic.w	r5, r5, #7
 801e722:	4315      	orrs	r5, r2
 801e724:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801e728:	4335      	orrs	r5, r6
 801e72a:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 801e72e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801e730:	4410      	add	r0, r2
 801e732:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e734:	f108 0801 	add.w	r8, r8, #1
 801e738:	4411      	add	r1, r2
 801e73a:	e7c9      	b.n	801e6d0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801e73c:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801e740:	fa1f fa82 	uxth.w	sl, r2
 801e744:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801e748:	f3c6 4707 	ubfx	r7, r6, #16, #8
 801e74c:	43d2      	mvns	r2, r2
 801e74e:	b2d2      	uxtb	r2, r2
 801e750:	fb17 f70a 	smulbb	r7, r7, sl
 801e754:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801e758:	fb0c 7c02 	mla	ip, ip, r2, r7
 801e75c:	b2f6      	uxtb	r6, r6
 801e75e:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801e762:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801e766:	fa5f fe8e 	uxtb.w	lr, lr
 801e76a:	fb16 f60a 	smulbb	r6, r6, sl
 801e76e:	fb0e 6602 	mla	r6, lr, r2, r6
 801e772:	b2ed      	uxtb	r5, r5
 801e774:	fa1f fc8c 	uxth.w	ip, ip
 801e778:	fb15 f50a 	smulbb	r5, r5, sl
 801e77c:	b2b6      	uxth	r6, r6
 801e77e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801e782:	fb07 5702 	mla	r7, r7, r2, r5
 801e786:	f10c 0201 	add.w	r2, ip, #1
 801e78a:	1c75      	adds	r5, r6, #1
 801e78c:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801e790:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801e794:	b2bf      	uxth	r7, r7
 801e796:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801e79a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801e79e:	ea45 0c0c 	orr.w	ip, r5, ip
 801e7a2:	1c7d      	adds	r5, r7, #1
 801e7a4:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 801e7a8:	096d      	lsrs	r5, r5, #5
 801e7aa:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801e7ae:	ea4c 0c05 	orr.w	ip, ip, r5
 801e7b2:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 801e7b6:	e7ba      	b.n	801e72e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801e7b8:	b007      	add	sp, #28
 801e7ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e7be:	bf00      	nop
 801e7c0:	2001385c 	.word	0x2001385c

0801e7c4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e7c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e7c8:	b087      	sub	sp, #28
 801e7ca:	f8df 830c 	ldr.w	r8, [pc, #780]	; 801ead8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801e7ce:	9815      	ldr	r0, [sp, #84]	; 0x54
 801e7d0:	9205      	str	r2, [sp, #20]
 801e7d2:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801e7d6:	9101      	str	r1, [sp, #4]
 801e7d8:	6841      	ldr	r1, [r0, #4]
 801e7da:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 801e7de:	fb01 2404 	mla	r4, r1, r4, r2
 801e7e2:	6802      	ldr	r2, [r0, #0]
 801e7e4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801e7e8:	f8db 2008 	ldr.w	r2, [fp, #8]
 801e7ec:	3201      	adds	r2, #1
 801e7ee:	f022 0201 	bic.w	r2, r2, #1
 801e7f2:	9202      	str	r2, [sp, #8]
 801e7f4:	f8db 2000 	ldr.w	r2, [fp]
 801e7f8:	9203      	str	r2, [sp, #12]
 801e7fa:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801e7fe:	9a01      	ldr	r2, [sp, #4]
 801e800:	2a00      	cmp	r2, #0
 801e802:	dc03      	bgt.n	801e80c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801e804:	9a05      	ldr	r2, [sp, #20]
 801e806:	2a00      	cmp	r2, #0
 801e808:	f340 8162 	ble.w	801ead0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801e80c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801e80e:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 801e812:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 801e816:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801e81a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801e81c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801e820:	2b00      	cmp	r3, #0
 801e822:	dd0e      	ble.n	801e842 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801e824:	1402      	asrs	r2, r0, #16
 801e826:	d405      	bmi.n	801e834 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801e828:	42ba      	cmp	r2, r7
 801e82a:	da03      	bge.n	801e834 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801e82c:	140a      	asrs	r2, r1, #16
 801e82e:	d401      	bmi.n	801e834 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801e830:	42b2      	cmp	r2, r6
 801e832:	db07      	blt.n	801e844 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801e834:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801e836:	4410      	add	r0, r2
 801e838:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e83a:	3b01      	subs	r3, #1
 801e83c:	4411      	add	r1, r2
 801e83e:	3402      	adds	r4, #2
 801e840:	e7ee      	b.n	801e820 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801e842:	d017      	beq.n	801e874 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801e844:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801e846:	1e5a      	subs	r2, r3, #1
 801e848:	fb05 0502 	mla	r5, r5, r2, r0
 801e84c:	142d      	asrs	r5, r5, #16
 801e84e:	d409      	bmi.n	801e864 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801e850:	42bd      	cmp	r5, r7
 801e852:	da07      	bge.n	801e864 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801e854:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801e856:	fb05 1202 	mla	r2, r5, r2, r1
 801e85a:	1412      	asrs	r2, r2, #16
 801e85c:	d402      	bmi.n	801e864 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801e85e:	42b2      	cmp	r2, r6
 801e860:	f2c0 80c3 	blt.w	801e9ea <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 801e864:	2500      	movs	r5, #0
 801e866:	195a      	adds	r2, r3, r5
 801e868:	2a00      	cmp	r2, #0
 801e86a:	dc3f      	bgt.n	801e8ec <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801e86c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801e870:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801e874:	9b01      	ldr	r3, [sp, #4]
 801e876:	2b00      	cmp	r3, #0
 801e878:	f340 812a 	ble.w	801ead0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801e87c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e880:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e884:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801e888:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e88a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e88e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e892:	eeb0 6a62 	vmov.f32	s12, s5
 801e896:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e89a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e89e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e8a2:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801e8a6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e8aa:	eeb0 6a43 	vmov.f32	s12, s6
 801e8ae:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e8b2:	ee12 2a90 	vmov	r2, s5
 801e8b6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e8ba:	fb92 f3f3 	sdiv	r3, r2, r3
 801e8be:	ee13 2a10 	vmov	r2, s6
 801e8c2:	9313      	str	r3, [sp, #76]	; 0x4c
 801e8c4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e8c6:	fb92 f3f3 	sdiv	r3, r2, r3
 801e8ca:	9314      	str	r3, [sp, #80]	; 0x50
 801e8cc:	9b01      	ldr	r3, [sp, #4]
 801e8ce:	9a05      	ldr	r2, [sp, #20]
 801e8d0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e8d4:	3b01      	subs	r3, #1
 801e8d6:	9301      	str	r3, [sp, #4]
 801e8d8:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801e8dc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e8de:	eeb0 3a67 	vmov.f32	s6, s15
 801e8e2:	bf08      	it	eq
 801e8e4:	4613      	moveq	r3, r2
 801e8e6:	eef0 2a47 	vmov.f32	s5, s14
 801e8ea:	e788      	b.n	801e7fe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801e8ec:	1406      	asrs	r6, r0, #16
 801e8ee:	d42c      	bmi.n	801e94a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801e8f0:	f8db 2008 	ldr.w	r2, [fp, #8]
 801e8f4:	42b2      	cmp	r2, r6
 801e8f6:	dd28      	ble.n	801e94a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801e8f8:	140f      	asrs	r7, r1, #16
 801e8fa:	d426      	bmi.n	801e94a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801e8fc:	f8db 200c 	ldr.w	r2, [fp, #12]
 801e900:	42ba      	cmp	r2, r7
 801e902:	dd22      	ble.n	801e94a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801e904:	9a02      	ldr	r2, [sp, #8]
 801e906:	fb07 6602 	mla	r6, r7, r2, r6
 801e90a:	0872      	lsrs	r2, r6, #1
 801e90c:	9f03      	ldr	r7, [sp, #12]
 801e90e:	5cba      	ldrb	r2, [r7, r2]
 801e910:	07f6      	lsls	r6, r6, #31
 801e912:	bf54      	ite	pl
 801e914:	f002 020f 	andpl.w	r2, r2, #15
 801e918:	1112      	asrmi	r2, r2, #4
 801e91a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801e91e:	b2d2      	uxtb	r2, r2
 801e920:	2aff      	cmp	r2, #255	; 0xff
 801e922:	d118      	bne.n	801e956 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 801e924:	f8d8 2000 	ldr.w	r2, [r8]
 801e928:	f06f 0601 	mvn.w	r6, #1
 801e92c:	fb06 f705 	mul.w	r7, r6, r5
 801e930:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 801e934:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 801e938:	0956      	lsrs	r6, r2, #5
 801e93a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801e93e:	ea4c 0606 	orr.w	r6, ip, r6
 801e942:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801e946:	4316      	orrs	r6, r2
 801e948:	53e6      	strh	r6, [r4, r7]
 801e94a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801e94c:	4410      	add	r0, r2
 801e94e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e950:	3d01      	subs	r5, #1
 801e952:	4411      	add	r1, r2
 801e954:	e787      	b.n	801e866 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801e956:	2a00      	cmp	r2, #0
 801e958:	d0f7      	beq.n	801e94a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801e95a:	f06f 0601 	mvn.w	r6, #1
 801e95e:	436e      	muls	r6, r5
 801e960:	f8d8 c000 	ldr.w	ip, [r8]
 801e964:	f834 e006 	ldrh.w	lr, [r4, r6]
 801e968:	9604      	str	r6, [sp, #16]
 801e96a:	fa1f f982 	uxth.w	r9, r2
 801e96e:	ea4f 272e 	mov.w	r7, lr, asr #8
 801e972:	f3cc 4607 	ubfx	r6, ip, #16, #8
 801e976:	43d2      	mvns	r2, r2
 801e978:	b2d2      	uxtb	r2, r2
 801e97a:	fb16 f609 	smulbb	r6, r6, r9
 801e97e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801e982:	fb07 6702 	mla	r7, r7, r2, r6
 801e986:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 801e98a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801e98e:	fa5f fc8c 	uxtb.w	ip, ip
 801e992:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801e996:	fa5f fe8e 	uxtb.w	lr, lr
 801e99a:	fb1c fc09 	smulbb	ip, ip, r9
 801e99e:	fb0e cc02 	mla	ip, lr, r2, ip
 801e9a2:	b2bf      	uxth	r7, r7
 801e9a4:	fb1a fa09 	smulbb	sl, sl, r9
 801e9a8:	fa1f fc8c 	uxth.w	ip, ip
 801e9ac:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801e9b0:	fb06 a602 	mla	r6, r6, r2, sl
 801e9b4:	1c7a      	adds	r2, r7, #1
 801e9b6:	f10c 0a01 	add.w	sl, ip, #1
 801e9ba:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801e9be:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 801e9c2:	b2b6      	uxth	r6, r6
 801e9c4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801e9c8:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801e9cc:	ea4a 0707 	orr.w	r7, sl, r7
 801e9d0:	f106 0a01 	add.w	sl, r6, #1
 801e9d4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801e9d8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801e9dc:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801e9e0:	9a04      	ldr	r2, [sp, #16]
 801e9e2:	ea47 070a 	orr.w	r7, r7, sl
 801e9e6:	52a7      	strh	r7, [r4, r2]
 801e9e8:	e7af      	b.n	801e94a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801e9ea:	f04f 0e00 	mov.w	lr, #0
 801e9ee:	eba3 020e 	sub.w	r2, r3, lr
 801e9f2:	2a00      	cmp	r2, #0
 801e9f4:	f77f af3a 	ble.w	801e86c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801e9f8:	9e02      	ldr	r6, [sp, #8]
 801e9fa:	1402      	asrs	r2, r0, #16
 801e9fc:	140d      	asrs	r5, r1, #16
 801e9fe:	fb06 2505 	mla	r5, r6, r5, r2
 801ea02:	086a      	lsrs	r2, r5, #1
 801ea04:	9e03      	ldr	r6, [sp, #12]
 801ea06:	5cb2      	ldrb	r2, [r6, r2]
 801ea08:	07ed      	lsls	r5, r5, #31
 801ea0a:	bf54      	ite	pl
 801ea0c:	f002 020f 	andpl.w	r2, r2, #15
 801ea10:	1112      	asrmi	r2, r2, #4
 801ea12:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801ea16:	b2d2      	uxtb	r2, r2
 801ea18:	2aff      	cmp	r2, #255	; 0xff
 801ea1a:	d115      	bne.n	801ea48 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 801ea1c:	f8d8 5000 	ldr.w	r5, [r8]
 801ea20:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 801ea24:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 801ea28:	096a      	lsrs	r2, r5, #5
 801ea2a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ea2e:	4332      	orrs	r2, r6
 801ea30:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801ea34:	432a      	orrs	r2, r5
 801ea36:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 801ea3a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801ea3c:	4410      	add	r0, r2
 801ea3e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ea40:	f10e 0e01 	add.w	lr, lr, #1
 801ea44:	4411      	add	r1, r2
 801ea46:	e7d2      	b.n	801e9ee <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801ea48:	2a00      	cmp	r2, #0
 801ea4a:	d0f6      	beq.n	801ea3a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801ea4c:	f8d8 7000 	ldr.w	r7, [r8]
 801ea50:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801ea54:	fa1f f982 	uxth.w	r9, r2
 801ea58:	ea4f 262c 	mov.w	r6, ip, asr #8
 801ea5c:	f3c7 4507 	ubfx	r5, r7, #16, #8
 801ea60:	43d2      	mvns	r2, r2
 801ea62:	b2d2      	uxtb	r2, r2
 801ea64:	fb15 f509 	smulbb	r5, r5, r9
 801ea68:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801ea6c:	fb06 5602 	mla	r6, r6, r2, r5
 801ea70:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 801ea74:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801ea78:	b2ff      	uxtb	r7, r7
 801ea7a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801ea7e:	fa5f fc8c 	uxtb.w	ip, ip
 801ea82:	fb17 f709 	smulbb	r7, r7, r9
 801ea86:	fb0c 7702 	mla	r7, ip, r2, r7
 801ea8a:	b2b6      	uxth	r6, r6
 801ea8c:	fb1a fa09 	smulbb	sl, sl, r9
 801ea90:	b2bf      	uxth	r7, r7
 801ea92:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801ea96:	fb05 a502 	mla	r5, r5, r2, sl
 801ea9a:	1c72      	adds	r2, r6, #1
 801ea9c:	f107 0a01 	add.w	sl, r7, #1
 801eaa0:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801eaa4:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801eaa8:	b2ad      	uxth	r5, r5
 801eaaa:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801eaae:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801eab2:	ea4a 0606 	orr.w	r6, sl, r6
 801eab6:	f105 0a01 	add.w	sl, r5, #1
 801eaba:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801eabe:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801eac2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801eac6:	ea46 060a 	orr.w	r6, r6, sl
 801eaca:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 801eace:	e7b4      	b.n	801ea3a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801ead0:	b007      	add	sp, #28
 801ead2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ead6:	bf00      	nop
 801ead8:	2001385c 	.word	0x2001385c

0801eadc <_ZN8touchgfx8LCD16bppD1Ev>:
 801eadc:	4770      	bx	lr

0801eade <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 801eade:	4770      	bx	lr

0801eae0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 801eae0:	4770      	bx	lr

0801eae2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 801eae2:	4770      	bx	lr

0801eae4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 801eae4:	4770      	bx	lr

0801eae6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 801eae6:	4770      	bx	lr

0801eae8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 801eae8:	4770      	bx	lr

0801eaea <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 801eaea:	4770      	bx	lr

0801eaec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801eaec:	4770      	bx	lr

0801eaee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801eaee:	4770      	bx	lr

0801eaf0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801eaf0:	4770      	bx	lr

0801eaf2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801eaf2:	4770      	bx	lr

0801eaf4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801eaf4:	4770      	bx	lr

0801eaf6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801eaf6:	4770      	bx	lr

0801eaf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801eaf8:	4770      	bx	lr

0801eafa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801eafa:	4770      	bx	lr

0801eafc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801eafc:	4770      	bx	lr

0801eafe <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801eafe:	4770      	bx	lr

0801eb00 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801eb00:	4770      	bx	lr

0801eb02 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 801eb02:	4770      	bx	lr

0801eb04 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801eb04:	4770      	bx	lr

0801eb06 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801eb06:	4770      	bx	lr

0801eb08 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801eb08:	4770      	bx	lr

0801eb0a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801eb0a:	4770      	bx	lr

0801eb0c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801eb0c:	4770      	bx	lr

0801eb0e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 801eb0e:	4770      	bx	lr

0801eb10 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801eb10:	4770      	bx	lr

0801eb12 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 801eb12:	4770      	bx	lr

0801eb14 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801eb14:	4770      	bx	lr

0801eb16 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801eb16:	4770      	bx	lr

0801eb18 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801eb18:	4770      	bx	lr

0801eb1a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801eb1a:	4770      	bx	lr

0801eb1c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 801eb1c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801eb20:	b088      	sub	sp, #32
 801eb22:	ac08      	add	r4, sp, #32
 801eb24:	4606      	mov	r6, r0
 801eb26:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 801eb2a:	4620      	mov	r0, r4
 801eb2c:	4688      	mov	r8, r1
 801eb2e:	4691      	mov	r9, r2
 801eb30:	f7fd fc62 	bl	801c3f8 <_ZNK8touchgfx6Bitmap7getDataEv>
 801eb34:	6833      	ldr	r3, [r6, #0]
 801eb36:	4605      	mov	r5, r0
 801eb38:	4620      	mov	r0, r4
 801eb3a:	699f      	ldr	r7, [r3, #24]
 801eb3c:	f7fd fb70 	bl	801c220 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801eb40:	4682      	mov	sl, r0
 801eb42:	4620      	mov	r0, r4
 801eb44:	f7fd fba0 	bl	801c288 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801eb48:	9500      	str	r5, [sp, #0]
 801eb4a:	e9cd a001 	strd	sl, r0, [sp, #4]
 801eb4e:	464b      	mov	r3, r9
 801eb50:	a806      	add	r0, sp, #24
 801eb52:	4642      	mov	r2, r8
 801eb54:	4631      	mov	r1, r6
 801eb56:	47b8      	blx	r7
 801eb58:	4628      	mov	r0, r5
 801eb5a:	b008      	add	sp, #32
 801eb5c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0801eb60 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 801eb60:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801eb64:	2300      	movs	r3, #0
 801eb66:	9300      	str	r3, [sp, #0]
 801eb68:	4b3d      	ldr	r3, [pc, #244]	; (801ec60 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 801eb6a:	781b      	ldrb	r3, [r3, #0]
 801eb6c:	2b00      	cmp	r3, #0
 801eb6e:	d137      	bne.n	801ebe0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 801eb70:	4a3c      	ldr	r2, [pc, #240]	; (801ec64 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801eb72:	f9b2 2000 	ldrsh.w	r2, [r2]
 801eb76:	f8ad 2004 	strh.w	r2, [sp, #4]
 801eb7a:	2b00      	cmp	r3, #0
 801eb7c:	d132      	bne.n	801ebe4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 801eb7e:	4b3a      	ldr	r3, [pc, #232]	; (801ec68 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801eb80:	f9b3 3000 	ldrsh.w	r3, [r3]
 801eb84:	6808      	ldr	r0, [r1, #0]
 801eb86:	6849      	ldr	r1, [r1, #4]
 801eb88:	f8ad 3006 	strh.w	r3, [sp, #6]
 801eb8c:	ac02      	add	r4, sp, #8
 801eb8e:	ab02      	add	r3, sp, #8
 801eb90:	c303      	stmia	r3!, {r0, r1}
 801eb92:	4669      	mov	r1, sp
 801eb94:	4620      	mov	r0, r4
 801eb96:	f7f9 fd83 	bl	80186a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801eb9a:	4668      	mov	r0, sp
 801eb9c:	f7f9 fd3c 	bl	8018618 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801eba0:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801eba4:	f8bd 2000 	ldrh.w	r2, [sp]
 801eba8:	4d30      	ldr	r5, [pc, #192]	; (801ec6c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 801ebaa:	4413      	add	r3, r2
 801ebac:	f8ad 3008 	strh.w	r3, [sp, #8]
 801ebb0:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801ebb4:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801ebb8:	6828      	ldr	r0, [r5, #0]
 801ebba:	4413      	add	r3, r2
 801ebbc:	f8ad 300a 	strh.w	r3, [sp, #10]
 801ebc0:	6803      	ldr	r3, [r0, #0]
 801ebc2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801ebc4:	4798      	blx	r3
 801ebc6:	f010 0f01 	tst.w	r0, #1
 801ebca:	462f      	mov	r7, r5
 801ebcc:	d00c      	beq.n	801ebe8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 801ebce:	6828      	ldr	r0, [r5, #0]
 801ebd0:	6803      	ldr	r3, [r0, #0]
 801ebd2:	e894 0006 	ldmia.w	r4, {r1, r2}
 801ebd6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801ebd8:	4798      	blx	r3
 801ebda:	b004      	add	sp, #16
 801ebdc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801ebe0:	4a21      	ldr	r2, [pc, #132]	; (801ec68 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801ebe2:	e7c6      	b.n	801eb72 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 801ebe4:	4b1f      	ldr	r3, [pc, #124]	; (801ec64 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801ebe6:	e7cb      	b.n	801eb80 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 801ebe8:	6838      	ldr	r0, [r7, #0]
 801ebea:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801ebee:	6803      	ldr	r3, [r0, #0]
 801ebf0:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 801ebf4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801ebf6:	4798      	blx	r3
 801ebf8:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 801ebfc:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801ec00:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 801ec04:	fb16 3602 	smlabb	r6, r6, r2, r3
 801ec08:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801ec0c:	6838      	ldr	r0, [r7, #0]
 801ec0e:	6803      	ldr	r3, [r0, #0]
 801ec10:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ec12:	4798      	blx	r3
 801ec14:	4a13      	ldr	r2, [pc, #76]	; (801ec64 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801ec16:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 801ec1a:	8813      	ldrh	r3, [r2, #0]
 801ec1c:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801ec20:	fb03 1404 	mla	r4, r3, r4, r1
 801ec24:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801ec28:	435d      	muls	r5, r3
 801ec2a:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801ec2e:	ea4f 0848 	mov.w	r8, r8, lsl #1
 801ec32:	4691      	mov	r9, r2
 801ec34:	6838      	ldr	r0, [r7, #0]
 801ec36:	42ac      	cmp	r4, r5
 801ec38:	6803      	ldr	r3, [r0, #0]
 801ec3a:	d20e      	bcs.n	801ec5a <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 801ec3c:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 801ec40:	4632      	mov	r2, r6
 801ec42:	4643      	mov	r3, r8
 801ec44:	4621      	mov	r1, r4
 801ec46:	47d0      	blx	sl
 801ec48:	f8b9 3000 	ldrh.w	r3, [r9]
 801ec4c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ec50:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801ec54:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801ec58:	e7ec      	b.n	801ec34 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 801ec5a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ec5c:	4798      	blx	r3
 801ec5e:	e7bc      	b.n	801ebda <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 801ec60:	20013844 	.word	0x20013844
 801ec64:	20013846 	.word	0x20013846
 801ec68:	20013848 	.word	0x20013848
 801ec6c:	2001384c 	.word	0x2001384c

0801ec70 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801ec70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ec74:	b08b      	sub	sp, #44	; 0x2c
 801ec76:	460f      	mov	r7, r1
 801ec78:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 801ec7c:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 801ec80:	4616      	mov	r6, r2
 801ec82:	f1bb 0f00 	cmp.w	fp, #0
 801ec86:	d04a      	beq.n	801ed1e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801ec88:	6810      	ldr	r0, [r2, #0]
 801ec8a:	6851      	ldr	r1, [r2, #4]
 801ec8c:	ad06      	add	r5, sp, #24
 801ec8e:	c503      	stmia	r5!, {r0, r1}
 801ec90:	6818      	ldr	r0, [r3, #0]
 801ec92:	6859      	ldr	r1, [r3, #4]
 801ec94:	ad08      	add	r5, sp, #32
 801ec96:	c503      	stmia	r5!, {r0, r1}
 801ec98:	a806      	add	r0, sp, #24
 801ec9a:	f7f9 fcbd 	bl	8018618 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ec9e:	4631      	mov	r1, r6
 801eca0:	a808      	add	r0, sp, #32
 801eca2:	f7f9 fcfd 	bl	80186a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801eca6:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801ecaa:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801ecae:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801ecb2:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 801ecb6:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 801ecba:	fb16 2103 	smlabb	r1, r6, r3, r2
 801ecbe:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801ecc2:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801ecc6:	4f5f      	ldr	r7, [pc, #380]	; (801ee44 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801ecc8:	440a      	add	r2, r1
 801ecca:	f8ad 2020 	strh.w	r2, [sp, #32]
 801ecce:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801ecd2:	6838      	ldr	r0, [r7, #0]
 801ecd4:	4413      	add	r3, r2
 801ecd6:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801ecda:	6803      	ldr	r3, [r0, #0]
 801ecdc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801ecde:	4798      	blx	r3
 801ece0:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801ece4:	46b9      	mov	r9, r7
 801ece6:	d11d      	bne.n	801ed24 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 801ece8:	b9fc      	cbnz	r4, 801ed2a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801ecea:	f010 0f01 	tst.w	r0, #1
 801ecee:	d01c      	beq.n	801ed2a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801ecf0:	f8d9 0000 	ldr.w	r0, [r9]
 801ecf4:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 801ecf8:	6801      	ldr	r1, [r0, #0]
 801ecfa:	f8cd b00c 	str.w	fp, [sp, #12]
 801ecfe:	2700      	movs	r7, #0
 801ed00:	e9cd 4704 	strd	r4, r7, [sp, #16]
 801ed04:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 801ed08:	9402      	str	r4, [sp, #8]
 801ed0a:	b2ad      	uxth	r5, r5
 801ed0c:	fa1f f488 	uxth.w	r4, r8
 801ed10:	9501      	str	r5, [sp, #4]
 801ed12:	9400      	str	r4, [sp, #0]
 801ed14:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 801ed16:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801ed1a:	4631      	mov	r1, r6
 801ed1c:	47a0      	blx	r4
 801ed1e:	b00b      	add	sp, #44	; 0x2c
 801ed20:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ed24:	f010 0f04 	tst.w	r0, #4
 801ed28:	e7e1      	b.n	801ecee <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 801ed2a:	f8d9 0000 	ldr.w	r0, [r9]
 801ed2e:	6803      	ldr	r3, [r0, #0]
 801ed30:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ed32:	4798      	blx	r3
 801ed34:	4b44      	ldr	r3, [pc, #272]	; (801ee48 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 801ed36:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 801ed3a:	881a      	ldrh	r2, [r3, #0]
 801ed3c:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801ed40:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801ed44:	fb02 1404 	mla	r4, r2, r4, r1
 801ed48:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801ed4c:	469a      	mov	sl, r3
 801ed4e:	fb05 f502 	mul.w	r5, r5, r2
 801ed52:	ea4f 0748 	mov.w	r7, r8, lsl #1
 801ed56:	d059      	beq.n	801ee0c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 801ed58:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 801ed5c:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801ed60:	fa1f f28b 	uxth.w	r2, fp
 801ed64:	fa1f f989 	uxth.w	r9, r9
 801ed68:	469e      	mov	lr, r3
 801ed6a:	42ac      	cmp	r4, r5
 801ed6c:	d264      	bcs.n	801ee38 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801ed6e:	eb04 0a07 	add.w	sl, r4, r7
 801ed72:	4554      	cmp	r4, sl
 801ed74:	d23d      	bcs.n	801edf2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 801ed76:	8821      	ldrh	r1, [r4, #0]
 801ed78:	f836 3b02 	ldrh.w	r3, [r6], #2
 801ed7c:	1208      	asrs	r0, r1, #8
 801ed7e:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801ed82:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801ed86:	fb10 f009 	smulbb	r0, r0, r9
 801ed8a:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801ed8e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ed92:	00c9      	lsls	r1, r1, #3
 801ed94:	fb0c 0c02 	mla	ip, ip, r2, r0
 801ed98:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801ed9c:	10d8      	asrs	r0, r3, #3
 801ed9e:	b2c9      	uxtb	r1, r1
 801eda0:	00db      	lsls	r3, r3, #3
 801eda2:	fa1f fc8c 	uxth.w	ip, ip
 801eda6:	fb1b fb09 	smulbb	fp, fp, r9
 801edaa:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801edae:	b2db      	uxtb	r3, r3
 801edb0:	fb11 f109 	smulbb	r1, r1, r9
 801edb4:	fb00 b002 	mla	r0, r0, r2, fp
 801edb8:	fb03 1302 	mla	r3, r3, r2, r1
 801edbc:	f10c 0b01 	add.w	fp, ip, #1
 801edc0:	b29b      	uxth	r3, r3
 801edc2:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 801edc6:	b280      	uxth	r0, r0
 801edc8:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 801edcc:	f103 0c01 	add.w	ip, r3, #1
 801edd0:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801edd4:	1c43      	adds	r3, r0, #1
 801edd6:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801edda:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801edde:	0940      	lsrs	r0, r0, #5
 801ede0:	ea4c 0c0b 	orr.w	ip, ip, fp
 801ede4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ede8:	ea4c 0c00 	orr.w	ip, ip, r0
 801edec:	f824 cb02 	strh.w	ip, [r4], #2
 801edf0:	e7bf      	b.n	801ed72 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 801edf2:	f8be 3000 	ldrh.w	r3, [lr]
 801edf6:	eba3 0308 	sub.w	r3, r3, r8
 801edfa:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801edfe:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801ee02:	eba3 0308 	sub.w	r3, r3, r8
 801ee06:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801ee0a:	e7ae      	b.n	801ed6a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 801ee0c:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801ee10:	f8d9 0000 	ldr.w	r0, [r9]
 801ee14:	42ac      	cmp	r4, r5
 801ee16:	6803      	ldr	r3, [r0, #0]
 801ee18:	d20e      	bcs.n	801ee38 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801ee1a:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 801ee1e:	4632      	mov	r2, r6
 801ee20:	463b      	mov	r3, r7
 801ee22:	4621      	mov	r1, r4
 801ee24:	47c0      	blx	r8
 801ee26:	f8ba 3000 	ldrh.w	r3, [sl]
 801ee2a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ee2e:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801ee32:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801ee36:	e7eb      	b.n	801ee10 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 801ee38:	4b02      	ldr	r3, [pc, #8]	; (801ee44 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801ee3a:	6818      	ldr	r0, [r3, #0]
 801ee3c:	6803      	ldr	r3, [r0, #0]
 801ee3e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ee40:	4798      	blx	r3
 801ee42:	e76c      	b.n	801ed1e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801ee44:	2001384c 	.word	0x2001384c
 801ee48:	20013846 	.word	0x20013846

0801ee4c <_ZN8touchgfx8LCD16bppD0Ev>:
 801ee4c:	b510      	push	{r4, lr}
 801ee4e:	2184      	movs	r1, #132	; 0x84
 801ee50:	4604      	mov	r4, r0
 801ee52:	f00d fe4a 	bl	802caea <_ZdlPvj>
 801ee56:	4620      	mov	r0, r4
 801ee58:	bd10      	pop	{r4, pc}

0801ee5a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 801ee5a:	b510      	push	{r4, lr}
 801ee5c:	2104      	movs	r1, #4
 801ee5e:	4604      	mov	r4, r0
 801ee60:	f00d fe43 	bl	802caea <_ZdlPvj>
 801ee64:	4620      	mov	r0, r4
 801ee66:	bd10      	pop	{r4, pc}

0801ee68 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 801ee68:	b510      	push	{r4, lr}
 801ee6a:	2104      	movs	r1, #4
 801ee6c:	4604      	mov	r4, r0
 801ee6e:	f00d fe3c 	bl	802caea <_ZdlPvj>
 801ee72:	4620      	mov	r0, r4
 801ee74:	bd10      	pop	{r4, pc}

0801ee76 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 801ee76:	b510      	push	{r4, lr}
 801ee78:	f640 0144 	movw	r1, #2116	; 0x844
 801ee7c:	4604      	mov	r4, r0
 801ee7e:	f00d fe34 	bl	802caea <_ZdlPvj>
 801ee82:	4620      	mov	r0, r4
 801ee84:	bd10      	pop	{r4, pc}

0801ee86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801ee86:	b510      	push	{r4, lr}
 801ee88:	2104      	movs	r1, #4
 801ee8a:	4604      	mov	r4, r0
 801ee8c:	f00d fe2d 	bl	802caea <_ZdlPvj>
 801ee90:	4620      	mov	r0, r4
 801ee92:	bd10      	pop	{r4, pc}

0801ee94 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801ee94:	b510      	push	{r4, lr}
 801ee96:	2104      	movs	r1, #4
 801ee98:	4604      	mov	r4, r0
 801ee9a:	f00d fe26 	bl	802caea <_ZdlPvj>
 801ee9e:	4620      	mov	r0, r4
 801eea0:	bd10      	pop	{r4, pc}

0801eea2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801eea2:	b510      	push	{r4, lr}
 801eea4:	2104      	movs	r1, #4
 801eea6:	4604      	mov	r4, r0
 801eea8:	f00d fe1f 	bl	802caea <_ZdlPvj>
 801eeac:	4620      	mov	r0, r4
 801eeae:	bd10      	pop	{r4, pc}

0801eeb0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801eeb0:	b510      	push	{r4, lr}
 801eeb2:	2104      	movs	r1, #4
 801eeb4:	4604      	mov	r4, r0
 801eeb6:	f00d fe18 	bl	802caea <_ZdlPvj>
 801eeba:	4620      	mov	r0, r4
 801eebc:	bd10      	pop	{r4, pc}

0801eebe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801eebe:	b510      	push	{r4, lr}
 801eec0:	2104      	movs	r1, #4
 801eec2:	4604      	mov	r4, r0
 801eec4:	f00d fe11 	bl	802caea <_ZdlPvj>
 801eec8:	4620      	mov	r0, r4
 801eeca:	bd10      	pop	{r4, pc}

0801eecc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801eecc:	b510      	push	{r4, lr}
 801eece:	2104      	movs	r1, #4
 801eed0:	4604      	mov	r4, r0
 801eed2:	f00d fe0a 	bl	802caea <_ZdlPvj>
 801eed6:	4620      	mov	r0, r4
 801eed8:	bd10      	pop	{r4, pc}

0801eeda <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801eeda:	b510      	push	{r4, lr}
 801eedc:	2104      	movs	r1, #4
 801eede:	4604      	mov	r4, r0
 801eee0:	f00d fe03 	bl	802caea <_ZdlPvj>
 801eee4:	4620      	mov	r0, r4
 801eee6:	bd10      	pop	{r4, pc}

0801eee8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 801eee8:	b510      	push	{r4, lr}
 801eeea:	2104      	movs	r1, #4
 801eeec:	4604      	mov	r4, r0
 801eeee:	f00d fdfc 	bl	802caea <_ZdlPvj>
 801eef2:	4620      	mov	r0, r4
 801eef4:	bd10      	pop	{r4, pc}

0801eef6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801eef6:	b510      	push	{r4, lr}
 801eef8:	2104      	movs	r1, #4
 801eefa:	4604      	mov	r4, r0
 801eefc:	f00d fdf5 	bl	802caea <_ZdlPvj>
 801ef00:	4620      	mov	r0, r4
 801ef02:	bd10      	pop	{r4, pc}

0801ef04 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801ef04:	b510      	push	{r4, lr}
 801ef06:	2104      	movs	r1, #4
 801ef08:	4604      	mov	r4, r0
 801ef0a:	f00d fdee 	bl	802caea <_ZdlPvj>
 801ef0e:	4620      	mov	r0, r4
 801ef10:	bd10      	pop	{r4, pc}

0801ef12 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801ef12:	b510      	push	{r4, lr}
 801ef14:	2104      	movs	r1, #4
 801ef16:	4604      	mov	r4, r0
 801ef18:	f00d fde7 	bl	802caea <_ZdlPvj>
 801ef1c:	4620      	mov	r0, r4
 801ef1e:	bd10      	pop	{r4, pc}

0801ef20 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801ef20:	b510      	push	{r4, lr}
 801ef22:	2104      	movs	r1, #4
 801ef24:	4604      	mov	r4, r0
 801ef26:	f00d fde0 	bl	802caea <_ZdlPvj>
 801ef2a:	4620      	mov	r0, r4
 801ef2c:	bd10      	pop	{r4, pc}

0801ef2e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801ef2e:	b510      	push	{r4, lr}
 801ef30:	2104      	movs	r1, #4
 801ef32:	4604      	mov	r4, r0
 801ef34:	f00d fdd9 	bl	802caea <_ZdlPvj>
 801ef38:	4620      	mov	r0, r4
 801ef3a:	bd10      	pop	{r4, pc}

0801ef3c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801ef3c:	b510      	push	{r4, lr}
 801ef3e:	2104      	movs	r1, #4
 801ef40:	4604      	mov	r4, r0
 801ef42:	f00d fdd2 	bl	802caea <_ZdlPvj>
 801ef46:	4620      	mov	r0, r4
 801ef48:	bd10      	pop	{r4, pc}

0801ef4a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801ef4a:	b510      	push	{r4, lr}
 801ef4c:	2104      	movs	r1, #4
 801ef4e:	4604      	mov	r4, r0
 801ef50:	f00d fdcb 	bl	802caea <_ZdlPvj>
 801ef54:	4620      	mov	r0, r4
 801ef56:	bd10      	pop	{r4, pc}

0801ef58 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801ef58:	b510      	push	{r4, lr}
 801ef5a:	2104      	movs	r1, #4
 801ef5c:	4604      	mov	r4, r0
 801ef5e:	f00d fdc4 	bl	802caea <_ZdlPvj>
 801ef62:	4620      	mov	r0, r4
 801ef64:	bd10      	pop	{r4, pc}

0801ef66 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801ef66:	b510      	push	{r4, lr}
 801ef68:	2104      	movs	r1, #4
 801ef6a:	4604      	mov	r4, r0
 801ef6c:	f00d fdbd 	bl	802caea <_ZdlPvj>
 801ef70:	4620      	mov	r0, r4
 801ef72:	bd10      	pop	{r4, pc}

0801ef74 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801ef74:	b510      	push	{r4, lr}
 801ef76:	2104      	movs	r1, #4
 801ef78:	4604      	mov	r4, r0
 801ef7a:	f00d fdb6 	bl	802caea <_ZdlPvj>
 801ef7e:	4620      	mov	r0, r4
 801ef80:	bd10      	pop	{r4, pc}

0801ef82 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801ef82:	b510      	push	{r4, lr}
 801ef84:	2104      	movs	r1, #4
 801ef86:	4604      	mov	r4, r0
 801ef88:	f00d fdaf 	bl	802caea <_ZdlPvj>
 801ef8c:	4620      	mov	r0, r4
 801ef8e:	bd10      	pop	{r4, pc}

0801ef90 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 801ef90:	b510      	push	{r4, lr}
 801ef92:	2104      	movs	r1, #4
 801ef94:	4604      	mov	r4, r0
 801ef96:	f00d fda8 	bl	802caea <_ZdlPvj>
 801ef9a:	4620      	mov	r0, r4
 801ef9c:	bd10      	pop	{r4, pc}

0801ef9e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801ef9e:	b510      	push	{r4, lr}
 801efa0:	2104      	movs	r1, #4
 801efa2:	4604      	mov	r4, r0
 801efa4:	f00d fda1 	bl	802caea <_ZdlPvj>
 801efa8:	4620      	mov	r0, r4
 801efaa:	bd10      	pop	{r4, pc}

0801efac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801efac:	b510      	push	{r4, lr}
 801efae:	2104      	movs	r1, #4
 801efb0:	4604      	mov	r4, r0
 801efb2:	f00d fd9a 	bl	802caea <_ZdlPvj>
 801efb6:	4620      	mov	r0, r4
 801efb8:	bd10      	pop	{r4, pc}

0801efba <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801efba:	b510      	push	{r4, lr}
 801efbc:	2104      	movs	r1, #4
 801efbe:	4604      	mov	r4, r0
 801efc0:	f00d fd93 	bl	802caea <_ZdlPvj>
 801efc4:	4620      	mov	r0, r4
 801efc6:	bd10      	pop	{r4, pc}

0801efc8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801efc8:	b510      	push	{r4, lr}
 801efca:	2104      	movs	r1, #4
 801efcc:	4604      	mov	r4, r0
 801efce:	f00d fd8c 	bl	802caea <_ZdlPvj>
 801efd2:	4620      	mov	r0, r4
 801efd4:	bd10      	pop	{r4, pc}

0801efd6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 801efd6:	b510      	push	{r4, lr}
 801efd8:	2104      	movs	r1, #4
 801efda:	4604      	mov	r4, r0
 801efdc:	f00d fd85 	bl	802caea <_ZdlPvj>
 801efe0:	4620      	mov	r0, r4
 801efe2:	bd10      	pop	{r4, pc}

0801efe4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 801efe4:	b510      	push	{r4, lr}
 801efe6:	2104      	movs	r1, #4
 801efe8:	4604      	mov	r4, r0
 801efea:	f00d fd7e 	bl	802caea <_ZdlPvj>
 801efee:	4620      	mov	r0, r4
 801eff0:	bd10      	pop	{r4, pc}

0801eff2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801eff2:	b510      	push	{r4, lr}
 801eff4:	2104      	movs	r1, #4
 801eff6:	4604      	mov	r4, r0
 801eff8:	f00d fd77 	bl	802caea <_ZdlPvj>
 801effc:	4620      	mov	r0, r4
 801effe:	bd10      	pop	{r4, pc}

0801f000 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 801f000:	b510      	push	{r4, lr}
 801f002:	2104      	movs	r1, #4
 801f004:	4604      	mov	r4, r0
 801f006:	f00d fd70 	bl	802caea <_ZdlPvj>
 801f00a:	4620      	mov	r0, r4
 801f00c:	bd10      	pop	{r4, pc}
	...

0801f010 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801f010:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f014:	b08f      	sub	sp, #60	; 0x3c
 801f016:	461c      	mov	r4, r3
 801f018:	9205      	str	r2, [sp, #20]
 801f01a:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801f01e:	9100      	str	r1, [sp, #0]
 801f020:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801f022:	9201      	str	r2, [sp, #4]
 801f024:	2a00      	cmp	r2, #0
 801f026:	f000 8115 	beq.w	801f254 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 801f02a:	6820      	ldr	r0, [r4, #0]
 801f02c:	6861      	ldr	r1, [r4, #4]
 801f02e:	aa0a      	add	r2, sp, #40	; 0x28
 801f030:	c203      	stmia	r2!, {r0, r1}
 801f032:	6818      	ldr	r0, [r3, #0]
 801f034:	6859      	ldr	r1, [r3, #4]
 801f036:	aa0c      	add	r2, sp, #48	; 0x30
 801f038:	c203      	stmia	r2!, {r0, r1}
 801f03a:	a80a      	add	r0, sp, #40	; 0x28
 801f03c:	f7f9 faec 	bl	8018618 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f040:	4621      	mov	r1, r4
 801f042:	a80c      	add	r0, sp, #48	; 0x30
 801f044:	f7f9 fb2c 	bl	80186a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f048:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801f04c:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801f050:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801f054:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801f058:	bfde      	ittt	le
 801f05a:	b2b3      	uxthle	r3, r6
 801f05c:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801f060:	fb92 f3f3 	sdivle	r3, r2, r3
 801f064:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801f068:	bfc8      	it	gt
 801f06a:	2301      	movgt	r3, #1
 801f06c:	fb92 f1f3 	sdiv	r1, r2, r3
 801f070:	fa1f fc81 	uxth.w	ip, r1
 801f074:	fb0c 2413 	mls	r4, ip, r3, r2
 801f078:	fb14 f406 	smulbb	r4, r4, r6
 801f07c:	441d      	add	r5, r3
 801f07e:	4404      	add	r4, r0
 801f080:	4661      	mov	r1, ip
 801f082:	3d01      	subs	r5, #1
 801f084:	b2a4      	uxth	r4, r4
 801f086:	fb95 f5f3 	sdiv	r5, r5, r3
 801f08a:	b131      	cbz	r1, 801f09a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 801f08c:	9b05      	ldr	r3, [sp, #20]
 801f08e:	9900      	ldr	r1, [sp, #0]
 801f090:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801f094:	ba1b      	rev	r3, r3
 801f096:	4419      	add	r1, r3
 801f098:	9100      	str	r1, [sp, #0]
 801f09a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801f09e:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
 801f0a2:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801f0a6:	4418      	add	r0, r3
 801f0a8:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801f0ac:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801f0b0:	441a      	add	r2, r3
 801f0b2:	4b6a      	ldr	r3, [pc, #424]	; (801f25c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801f0b4:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801f0b8:	6818      	ldr	r0, [r3, #0]
 801f0ba:	6803      	ldr	r3, [r0, #0]
 801f0bc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f0be:	4798      	blx	r3
 801f0c0:	4967      	ldr	r1, [pc, #412]	; (801f260 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 801f0c2:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801f0c6:	880b      	ldrh	r3, [r1, #0]
 801f0c8:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801f0cc:	9109      	str	r1, [sp, #36]	; 0x24
 801f0ce:	fb03 c202 	mla	r2, r3, r2, ip
 801f0d2:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801f0d6:	4373      	muls	r3, r6
 801f0d8:	b2ad      	uxth	r5, r5
 801f0da:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801f0de:	00ad      	lsls	r5, r5, #2
 801f0e0:	9306      	str	r3, [sp, #24]
 801f0e2:	1d2b      	adds	r3, r5, #4
 801f0e4:	9307      	str	r3, [sp, #28]
 801f0e6:	9b01      	ldr	r3, [sp, #4]
 801f0e8:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801f0ec:	9103      	str	r1, [sp, #12]
 801f0ee:	f1c3 02ff 	rsb	r2, r3, #255	; 0xff
 801f0f2:	2c00      	cmp	r4, #0
 801f0f4:	bf0c      	ite	eq
 801f0f6:	46c6      	moveq	lr, r8
 801f0f8:	f04f 0e00 	movne.w	lr, #0
 801f0fc:	2300      	movs	r3, #0
 801f0fe:	b292      	uxth	r2, r2
 801f100:	fa1f fe8e 	uxth.w	lr, lr
 801f104:	9302      	str	r3, [sp, #8]
 801f106:	9204      	str	r2, [sp, #16]
 801f108:	9a06      	ldr	r2, [sp, #24]
 801f10a:	4282      	cmp	r2, r0
 801f10c:	f240 809d 	bls.w	801f24a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 801f110:	b963      	cbnz	r3, 801f12c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801f112:	9b00      	ldr	r3, [sp, #0]
 801f114:	781a      	ldrb	r2, [r3, #0]
 801f116:	0993      	lsrs	r3, r2, #6
 801f118:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801f11c:	9202      	str	r2, [sp, #8]
 801f11e:	1e5a      	subs	r2, r3, #1
 801f120:	2a02      	cmp	r2, #2
 801f122:	d815      	bhi.n	801f150 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 801f124:	9a00      	ldr	r2, [sp, #0]
 801f126:	3201      	adds	r2, #1
 801f128:	9200      	str	r2, [sp, #0]
 801f12a:	b29b      	uxth	r3, r3
 801f12c:	b1b4      	cbz	r4, 801f15c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 801f12e:	429c      	cmp	r4, r3
 801f130:	bf95      	itete	ls
 801f132:	1b1c      	subls	r4, r3, r4
 801f134:	1ae4      	subhi	r4, r4, r3
 801f136:	fa1f fa84 	uxthls.w	sl, r4
 801f13a:	b2a4      	uxthhi	r4, r4
 801f13c:	bf87      	ittee	hi
 801f13e:	4671      	movhi	r1, lr
 801f140:	f04f 0a00 	movhi.w	sl, #0
 801f144:	fa1f f188 	uxthls.w	r1, r8
 801f148:	2400      	movls	r4, #0
 801f14a:	4653      	mov	r3, sl
 801f14c:	468e      	mov	lr, r1
 801f14e:	e7db      	b.n	801f108 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 801f150:	9a00      	ldr	r2, [sp, #0]
 801f152:	9b00      	ldr	r3, [sp, #0]
 801f154:	3202      	adds	r2, #2
 801f156:	785b      	ldrb	r3, [r3, #1]
 801f158:	9200      	str	r2, [sp, #0]
 801f15a:	e7e7      	b.n	801f12c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801f15c:	2202      	movs	r2, #2
 801f15e:	4615      	mov	r5, r2
 801f160:	9907      	ldr	r1, [sp, #28]
 801f162:	9a02      	ldr	r2, [sp, #8]
 801f164:	fb15 1202 	smlabb	r2, r5, r2, r1
 801f168:	9905      	ldr	r1, [sp, #20]
 801f16a:	4573      	cmp	r3, lr
 801f16c:	f831 c002 	ldrh.w	ip, [r1, r2]
 801f170:	9a01      	ldr	r2, [sp, #4]
 801f172:	bf2b      	itete	cs
 801f174:	eba3 0a0e 	subcs.w	sl, r3, lr
 801f178:	ebae 0103 	subcc.w	r1, lr, r3
 801f17c:	46f1      	movcs	r9, lr
 801f17e:	4699      	movcc	r9, r3
 801f180:	bf27      	ittee	cs
 801f182:	fa1f fa8a 	uxthcs.w	sl, sl
 801f186:	4621      	movcs	r1, r4
 801f188:	b289      	uxthcc	r1, r1
 801f18a:	46a2      	movcc	sl, r4
 801f18c:	2aff      	cmp	r2, #255	; 0xff
 801f18e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801f192:	d105      	bne.n	801f1a0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801f194:	4481      	add	r9, r0
 801f196:	4581      	cmp	r9, r0
 801f198:	d045      	beq.n	801f226 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801f19a:	f820 cb02 	strh.w	ip, [r0], #2
 801f19e:	e7fa      	b.n	801f196 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 801f1a0:	9d03      	ldr	r5, [sp, #12]
 801f1a2:	ea4f 222c 	mov.w	r2, ip, asr #8
 801f1a6:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801f1aa:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801f1ae:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801f1b2:	436a      	muls	r2, r5
 801f1b4:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801f1b8:	fa5f fc8c 	uxtb.w	ip, ip
 801f1bc:	9208      	str	r2, [sp, #32]
 801f1be:	fb0b fb05 	mul.w	fp, fp, r5
 801f1c2:	fb0c fc05 	mul.w	ip, ip, r5
 801f1c6:	4481      	add	r9, r0
 801f1c8:	4581      	cmp	r9, r0
 801f1ca:	d02c      	beq.n	801f226 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801f1cc:	8802      	ldrh	r2, [r0, #0]
 801f1ce:	9d04      	ldr	r5, [sp, #16]
 801f1d0:	9f04      	ldr	r7, [sp, #16]
 801f1d2:	1216      	asrs	r6, r2, #8
 801f1d4:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801f1d8:	fb16 f605 	smulbb	r6, r6, r5
 801f1dc:	9d08      	ldr	r5, [sp, #32]
 801f1de:	442e      	add	r6, r5
 801f1e0:	10d5      	asrs	r5, r2, #3
 801f1e2:	00d2      	lsls	r2, r2, #3
 801f1e4:	b2d2      	uxtb	r2, r2
 801f1e6:	fb12 f207 	smulbb	r2, r2, r7
 801f1ea:	b2b6      	uxth	r6, r6
 801f1ec:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801f1f0:	4462      	add	r2, ip
 801f1f2:	fb15 f507 	smulbb	r5, r5, r7
 801f1f6:	b292      	uxth	r2, r2
 801f1f8:	1c77      	adds	r7, r6, #1
 801f1fa:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 801f1fe:	1c57      	adds	r7, r2, #1
 801f200:	445d      	add	r5, fp
 801f202:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 801f206:	b2ad      	uxth	r5, r5
 801f208:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801f20c:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801f210:	4316      	orrs	r6, r2
 801f212:	1c6a      	adds	r2, r5, #1
 801f214:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801f218:	096d      	lsrs	r5, r5, #5
 801f21a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801f21e:	432e      	orrs	r6, r5
 801f220:	f820 6b02 	strh.w	r6, [r0], #2
 801f224:	e7d0      	b.n	801f1c8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 801f226:	4573      	cmp	r3, lr
 801f228:	d38f      	bcc.n	801f14a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801f22a:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801f22e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f230:	fa1f f188 	uxth.w	r1, r8
 801f234:	1a64      	subs	r4, r4, r1
 801f236:	881b      	ldrh	r3, [r3, #0]
 801f238:	b2a4      	uxth	r4, r4
 801f23a:	2c00      	cmp	r4, #0
 801f23c:	eba3 0308 	sub.w	r3, r3, r8
 801f240:	bf18      	it	ne
 801f242:	2100      	movne	r1, #0
 801f244:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f248:	e77f      	b.n	801f14a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801f24a:	4b04      	ldr	r3, [pc, #16]	; (801f25c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801f24c:	6818      	ldr	r0, [r3, #0]
 801f24e:	6803      	ldr	r3, [r0, #0]
 801f250:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f252:	4798      	blx	r3
 801f254:	b00f      	add	sp, #60	; 0x3c
 801f256:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f25a:	bf00      	nop
 801f25c:	2001384c 	.word	0x2001384c
 801f260:	20013846 	.word	0x20013846

0801f264 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801f264:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f268:	b09f      	sub	sp, #124	; 0x7c
 801f26a:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801f26e:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801f272:	9209      	str	r2, [sp, #36]	; 0x24
 801f274:	461d      	mov	r5, r3
 801f276:	4604      	mov	r4, r0
 801f278:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f27a:	2a00      	cmp	r2, #0
 801f27c:	f000 81eb 	beq.w	801f656 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 801f280:	6828      	ldr	r0, [r5, #0]
 801f282:	6869      	ldr	r1, [r5, #4]
 801f284:	aa1a      	add	r2, sp, #104	; 0x68
 801f286:	c203      	stmia	r2!, {r0, r1}
 801f288:	6818      	ldr	r0, [r3, #0]
 801f28a:	6859      	ldr	r1, [r3, #4]
 801f28c:	aa1c      	add	r2, sp, #112	; 0x70
 801f28e:	c203      	stmia	r2!, {r0, r1}
 801f290:	a81a      	add	r0, sp, #104	; 0x68
 801f292:	f7f9 f9c1 	bl	8018618 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f296:	4629      	mov	r1, r5
 801f298:	a81c      	add	r0, sp, #112	; 0x70
 801f29a:	f7f9 fa01 	bl	80186a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f29e:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801f2a2:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	; 0x6e
 801f2a6:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	; 0x76
 801f2aa:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801f2ae:	bfd7      	itett	le
 801f2b0:	b29a      	uxthle	r2, r3
 801f2b2:	2201      	movgt	r2, #1
 801f2b4:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801f2b8:	fb91 f2f2 	sdivle	r2, r1, r2
 801f2bc:	9202      	str	r2, [sp, #8]
 801f2be:	9802      	ldr	r0, [sp, #8]
 801f2c0:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801f2c4:	fb92 f0f0 	sdiv	r0, r2, r0
 801f2c8:	b280      	uxth	r0, r0
 801f2ca:	9010      	str	r0, [sp, #64]	; 0x40
 801f2cc:	9902      	ldr	r1, [sp, #8]
 801f2ce:	9802      	ldr	r0, [sp, #8]
 801f2d0:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801f2d2:	4488      	add	r8, r1
 801f2d4:	fb05 2510 	mls	r5, r5, r0, r2
 801f2d8:	fb15 f503 	smulbb	r5, r5, r3
 801f2dc:	f108 38ff 	add.w	r8, r8, #4294967295
 801f2e0:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801f2e4:	fb98 f8f1 	sdiv	r8, r8, r1
 801f2e8:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801f2ec:	440d      	add	r5, r1
 801f2ee:	4419      	add	r1, r3
 801f2f0:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801f2f4:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801f2f8:	441a      	add	r2, r3
 801f2fa:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801f2fe:	9304      	str	r3, [sp, #16]
 801f300:	4b95      	ldr	r3, [pc, #596]	; (801f558 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801f302:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801f306:	6818      	ldr	r0, [r3, #0]
 801f308:	6803      	ldr	r3, [r0, #0]
 801f30a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f30c:	4798      	blx	r3
 801f30e:	4b93      	ldr	r3, [pc, #588]	; (801f55c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801f310:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801f314:	881a      	ldrh	r2, [r3, #0]
 801f316:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801f31a:	9318      	str	r3, [sp, #96]	; 0x60
 801f31c:	fb02 7101 	mla	r1, r2, r1, r7
 801f320:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801f324:	4356      	muls	r6, r2
 801f326:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 801f32a:	f108 0801 	add.w	r8, r8, #1
 801f32e:	920a      	str	r2, [sp, #40]	; 0x28
 801f330:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801f332:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 801f336:	930f      	str	r3, [sp, #60]	; 0x3c
 801f338:	fa1f f888 	uxth.w	r8, r8
 801f33c:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 801f340:	f108 0204 	add.w	r2, r8, #4
 801f344:	9211      	str	r2, [sp, #68]	; 0x44
 801f346:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801f348:	4b85      	ldr	r3, [pc, #532]	; (801f560 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801f34a:	f1c2 02ff 	rsb	r2, r2, #255	; 0xff
 801f34e:	b2ad      	uxth	r5, r5
 801f350:	9215      	str	r2, [sp, #84]	; 0x54
 801f352:	2d00      	cmp	r5, #0
 801f354:	9a04      	ldr	r2, [sp, #16]
 801f356:	f04f 0100 	mov.w	r1, #0
 801f35a:	bf18      	it	ne
 801f35c:	2200      	movne	r2, #0
 801f35e:	1b1b      	subs	r3, r3, r4
 801f360:	b292      	uxth	r2, r2
 801f362:	910d      	str	r1, [sp, #52]	; 0x34
 801f364:	9319      	str	r3, [sp, #100]	; 0x64
 801f366:	9910      	ldr	r1, [sp, #64]	; 0x40
 801f368:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f36a:	fa11 f383 	uxtah	r3, r1, r3
 801f36e:	9914      	ldr	r1, [sp, #80]	; 0x50
 801f370:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801f374:	3304      	adds	r3, #4
 801f376:	9306      	str	r3, [sp, #24]
 801f378:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f37a:	4283      	cmp	r3, r0
 801f37c:	f240 8166 	bls.w	801f64c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 801f380:	9902      	ldr	r1, [sp, #8]
 801f382:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801f386:	fbb5 f3f3 	udiv	r3, r5, r3
 801f38a:	1acb      	subs	r3, r1, r3
 801f38c:	b29b      	uxth	r3, r3
 801f38e:	9316      	str	r3, [sp, #88]	; 0x58
 801f390:	9b06      	ldr	r3, [sp, #24]
 801f392:	9e06      	ldr	r6, [sp, #24]
 801f394:	7859      	ldrb	r1, [r3, #1]
 801f396:	789b      	ldrb	r3, [r3, #2]
 801f398:	7836      	ldrb	r6, [r6, #0]
 801f39a:	9612      	str	r6, [sp, #72]	; 0x48
 801f39c:	021b      	lsls	r3, r3, #8
 801f39e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 801f3a2:	9906      	ldr	r1, [sp, #24]
 801f3a4:	78c9      	ldrb	r1, [r1, #3]
 801f3a6:	430b      	orrs	r3, r1
 801f3a8:	9913      	ldr	r1, [sp, #76]	; 0x4c
 801f3aa:	3601      	adds	r6, #1
 801f3ac:	4419      	add	r1, r3
 801f3ae:	9605      	str	r6, [sp, #20]
 801f3b0:	1c4e      	adds	r6, r1, #1
 801f3b2:	9603      	str	r6, [sp, #12]
 801f3b4:	7849      	ldrb	r1, [r1, #1]
 801f3b6:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801f3b8:	0209      	lsls	r1, r1, #8
 801f3ba:	5cf3      	ldrb	r3, [r6, r3]
 801f3bc:	f401 71ff 	and.w	r1, r1, #510	; 0x1fe
 801f3c0:	4319      	orrs	r1, r3
 801f3c2:	b28b      	uxth	r3, r1
 801f3c4:	930c      	str	r3, [sp, #48]	; 0x30
 801f3c6:	2300      	movs	r3, #0
 801f3c8:	f04f 0a01 	mov.w	sl, #1
 801f3cc:	9307      	str	r3, [sp, #28]
 801f3ce:	469c      	mov	ip, r3
 801f3d0:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801f3d4:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801f3d8:	46d3      	mov	fp, sl
 801f3da:	4657      	mov	r7, sl
 801f3dc:	930e      	str	r3, [sp, #56]	; 0x38
 801f3de:	2d00      	cmp	r5, #0
 801f3e0:	d07e      	beq.n	801f4e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 801f3e2:	42af      	cmp	r7, r5
 801f3e4:	d26e      	bcs.n	801f4c4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 801f3e6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f3e8:	9201      	str	r2, [sp, #4]
 801f3ea:	1bed      	subs	r5, r5, r7
 801f3ec:	4283      	cmp	r3, r0
 801f3ee:	b2ad      	uxth	r5, r5
 801f3f0:	d802      	bhi.n	801f3f8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 801f3f2:	e073      	b.n	801f4dc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 801f3f4:	2b00      	cmp	r3, #0
 801f3f6:	d15f      	bne.n	801f4b8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 801f3f8:	9b03      	ldr	r3, [sp, #12]
 801f3fa:	785b      	ldrb	r3, [r3, #1]
 801f3fc:	f1cb 0207 	rsb	r2, fp, #7
 801f400:	4093      	lsls	r3, r2
 801f402:	005b      	lsls	r3, r3, #1
 801f404:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801f408:	9b03      	ldr	r3, [sp, #12]
 801f40a:	781b      	ldrb	r3, [r3, #0]
 801f40c:	fa43 f30b 	asr.w	r3, r3, fp
 801f410:	b2db      	uxtb	r3, r3
 801f412:	4313      	orrs	r3, r2
 801f414:	f10b 0201 	add.w	r2, fp, #1
 801f418:	fa5f fb82 	uxtb.w	fp, r2
 801f41c:	9a03      	ldr	r2, [sp, #12]
 801f41e:	f1bb 0f08 	cmp.w	fp, #8
 801f422:	bf15      	itete	ne
 801f424:	3201      	addne	r2, #1
 801f426:	3202      	addeq	r2, #2
 801f428:	9203      	strne	r2, [sp, #12]
 801f42a:	9203      	streq	r2, [sp, #12]
 801f42c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801f42e:	b29f      	uxth	r7, r3
 801f430:	bf08      	it	eq
 801f432:	f04f 0b00 	moveq.w	fp, #0
 801f436:	42ba      	cmp	r2, r7
 801f438:	d309      	bcc.n	801f44e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 801f43a:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801f43e:	2301      	movs	r3, #1
 801f440:	9a05      	ldr	r2, [sp, #20]
 801f442:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 801f446:	d30e      	bcc.n	801f466 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 801f448:	469a      	mov	sl, r3
 801f44a:	2600      	movs	r6, #0
 801f44c:	e035      	b.n	801f4ba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 801f44e:	9b05      	ldr	r3, [sp, #20]
 801f450:	429f      	cmp	r7, r3
 801f452:	d318      	bcc.n	801f486 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 801f454:	eb04 030a 	add.w	r3, r4, sl
 801f458:	f894 2804 	ldrb.w	r2, [r4, #2052]	; 0x804
 801f45c:	f883 2804 	strb.w	r2, [r3, #2052]	; 0x804
 801f460:	f10a 0301 	add.w	r3, sl, #1
 801f464:	b29b      	uxth	r3, r3
 801f466:	9a05      	ldr	r2, [sp, #20]
 801f468:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801f46c:	990c      	ldr	r1, [sp, #48]	; 0x30
 801f46e:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801f472:	7116      	strb	r6, [r2, #4]
 801f474:	f10a 0601 	add.w	r6, sl, #1
 801f478:	80d1      	strh	r1, [r2, #6]
 801f47a:	7156      	strb	r6, [r2, #5]
 801f47c:	9a05      	ldr	r2, [sp, #20]
 801f47e:	3201      	adds	r2, #1
 801f480:	b292      	uxth	r2, r2
 801f482:	9205      	str	r2, [sp, #20]
 801f484:	e7e0      	b.n	801f448 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 801f486:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 801f48a:	463a      	mov	r2, r7
 801f48c:	795b      	ldrb	r3, [r3, #5]
 801f48e:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801f492:	4426      	add	r6, r4
 801f494:	9919      	ldr	r1, [sp, #100]	; 0x64
 801f496:	eb01 0c06 	add.w	ip, r1, r6
 801f49a:	f1bc 0f00 	cmp.w	ip, #0
 801f49e:	dd07      	ble.n	801f4b0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 801f4a0:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801f4a4:	f892 c004 	ldrb.w	ip, [r2, #4]
 801f4a8:	f806 cd01 	strb.w	ip, [r6, #-1]!
 801f4ac:	88d2      	ldrh	r2, [r2, #6]
 801f4ae:	e7f1      	b.n	801f494 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 801f4b0:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801f4b4:	b29b      	uxth	r3, r3
 801f4b6:	e7c3      	b.n	801f440 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 801f4b8:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801f4ba:	970c      	str	r7, [sp, #48]	; 0x30
 801f4bc:	9a01      	ldr	r2, [sp, #4]
 801f4be:	46b4      	mov	ip, r6
 801f4c0:	461f      	mov	r7, r3
 801f4c2:	e78c      	b.n	801f3de <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 801f4c4:	1b7b      	subs	r3, r7, r5
 801f4c6:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801f4ca:	9201      	str	r2, [sp, #4]
 801f4cc:	eb0c 0605 	add.w	r6, ip, r5
 801f4d0:	b29b      	uxth	r3, r3
 801f4d2:	b2b6      	uxth	r6, r6
 801f4d4:	2500      	movs	r5, #0
 801f4d6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801f4d8:	4282      	cmp	r2, r0
 801f4da:	d88b      	bhi.n	801f3f4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801f4dc:	9a01      	ldr	r2, [sp, #4]
 801f4de:	e74b      	b.n	801f378 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 801f4e0:	4297      	cmp	r7, r2
 801f4e2:	d332      	bcc.n	801f54a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 801f4e4:	1abb      	subs	r3, r7, r2
 801f4e6:	b29b      	uxth	r3, r3
 801f4e8:	9208      	str	r2, [sp, #32]
 801f4ea:	9501      	str	r5, [sp, #4]
 801f4ec:	9909      	ldr	r1, [sp, #36]	; 0x24
 801f4ee:	29ff      	cmp	r1, #255	; 0xff
 801f4f0:	9908      	ldr	r1, [sp, #32]
 801f4f2:	eb0c 0601 	add.w	r6, ip, r1
 801f4f6:	d135      	bne.n	801f564 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 801f4f8:	f1a0 0e02 	sub.w	lr, r0, #2
 801f4fc:	b2b6      	uxth	r6, r6
 801f4fe:	45b4      	cmp	ip, r6
 801f500:	f040 808c 	bne.w	801f61c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 801f504:	9908      	ldr	r1, [sp, #32]
 801f506:	4297      	cmp	r7, r2
 801f508:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801f50c:	d3e2      	bcc.n	801f4d4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 801f50e:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801f510:	9904      	ldr	r1, [sp, #16]
 801f512:	8812      	ldrh	r2, [r2, #0]
 801f514:	1a52      	subs	r2, r2, r1
 801f516:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801f51a:	9a07      	ldr	r2, [sp, #28]
 801f51c:	9916      	ldr	r1, [sp, #88]	; 0x58
 801f51e:	3201      	adds	r2, #1
 801f520:	428a      	cmp	r2, r1
 801f522:	9207      	str	r2, [sp, #28]
 801f524:	f040 8087 	bne.w	801f636 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 801f528:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801f52c:	f8bd 7068 	ldrh.w	r7, [sp, #104]	; 0x68
 801f530:	9b04      	ldr	r3, [sp, #16]
 801f532:	1bed      	subs	r5, r5, r7
 801f534:	b2ad      	uxth	r5, r5
 801f536:	2d00      	cmp	r5, #0
 801f538:	bf08      	it	eq
 801f53a:	461a      	moveq	r2, r3
 801f53c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f53e:	bf18      	it	ne
 801f540:	2200      	movne	r2, #0
 801f542:	3301      	adds	r3, #1
 801f544:	930d      	str	r3, [sp, #52]	; 0x34
 801f546:	b292      	uxth	r2, r2
 801f548:	e70d      	b.n	801f366 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 801f54a:	1bd1      	subs	r1, r2, r7
 801f54c:	b28b      	uxth	r3, r1
 801f54e:	9301      	str	r3, [sp, #4]
 801f550:	9708      	str	r7, [sp, #32]
 801f552:	462b      	mov	r3, r5
 801f554:	e7ca      	b.n	801f4ec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 801f556:	bf00      	nop
 801f558:	2001384c 	.word	0x2001384c
 801f55c:	20013846 	.word	0x20013846
 801f560:	fffff7fb 	.word	0xfffff7fb
 801f564:	b2b6      	uxth	r6, r6
 801f566:	900b      	str	r0, [sp, #44]	; 0x2c
 801f568:	45b4      	cmp	ip, r6
 801f56a:	d0cb      	beq.n	801f504 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 801f56c:	f10c 0101 	add.w	r1, ip, #1
 801f570:	44a4      	add	ip, r4
 801f572:	9117      	str	r1, [sp, #92]	; 0x5c
 801f574:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801f578:	9911      	ldr	r1, [sp, #68]	; 0x44
 801f57a:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801f57e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801f580:	f8b1 c000 	ldrh.w	ip, [r1]
 801f584:	990e      	ldr	r1, [sp, #56]	; 0x38
 801f586:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 801f58a:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801f58e:	fb1e fe01 	smulbb	lr, lr, r1
 801f592:	ea4f 2825 	mov.w	r8, r5, asr #8
 801f596:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801f598:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801f59c:	fb08 e801 	mla	r8, r8, r1, lr
 801f5a0:	ea4f 09ec 	mov.w	r9, ip, asr #3
 801f5a4:	990e      	ldr	r1, [sp, #56]	; 0x38
 801f5a6:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801f5aa:	fb19 f901 	smulbb	r9, r9, r1
 801f5ae:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 801f5b2:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801f5b4:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801f5b8:	fb0e 9e01 	mla	lr, lr, r1, r9
 801f5bc:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801f5c0:	990e      	ldr	r1, [sp, #56]	; 0x38
 801f5c2:	fa5f fc8c 	uxtb.w	ip, ip
 801f5c6:	fb1c fc01 	smulbb	ip, ip, r1
 801f5ca:	00ed      	lsls	r5, r5, #3
 801f5cc:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801f5ce:	b2ed      	uxtb	r5, r5
 801f5d0:	fb05 c501 	mla	r5, r5, r1, ip
 801f5d4:	fa1f f888 	uxth.w	r8, r8
 801f5d8:	fa1f fe8e 	uxth.w	lr, lr
 801f5dc:	b2ad      	uxth	r5, r5
 801f5de:	f108 0c01 	add.w	ip, r8, #1
 801f5e2:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 801f5e6:	f10e 0901 	add.w	r9, lr, #1
 801f5ea:	f105 0c01 	add.w	ip, r5, #1
 801f5ee:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 801f5f2:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 801f5f6:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801f5fa:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801f5fe:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801f602:	ea4c 0808 	orr.w	r8, ip, r8
 801f606:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801f608:	f8bd c05c 	ldrh.w	ip, [sp, #92]	; 0x5c
 801f60c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801f610:	ea48 0809 	orr.w	r8, r8, r9
 801f614:	f821 8b02 	strh.w	r8, [r1], #2
 801f618:	910b      	str	r1, [sp, #44]	; 0x2c
 801f61a:	e7a5      	b.n	801f568 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 801f61c:	f10c 0801 	add.w	r8, ip, #1
 801f620:	44a4      	add	ip, r4
 801f622:	9911      	ldr	r1, [sp, #68]	; 0x44
 801f624:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801f628:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801f62c:	f82e 5f02 	strh.w	r5, [lr, #2]!
 801f630:	fa1f fc88 	uxth.w	ip, r8
 801f634:	e763      	b.n	801f4fe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 801f636:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801f63a:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801f63e:	1aad      	subs	r5, r5, r2
 801f640:	b2ad      	uxth	r5, r5
 801f642:	2d00      	cmp	r5, #0
 801f644:	bf18      	it	ne
 801f646:	2200      	movne	r2, #0
 801f648:	9201      	str	r2, [sp, #4]
 801f64a:	e744      	b.n	801f4d6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 801f64c:	4b03      	ldr	r3, [pc, #12]	; (801f65c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 801f64e:	6818      	ldr	r0, [r3, #0]
 801f650:	6803      	ldr	r3, [r0, #0]
 801f652:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f654:	4798      	blx	r3
 801f656:	b01f      	add	sp, #124	; 0x7c
 801f658:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f65c:	2001384c 	.word	0x2001384c

0801f660 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801f660:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f664:	b08f      	sub	sp, #60	; 0x3c
 801f666:	461c      	mov	r4, r3
 801f668:	9203      	str	r2, [sp, #12]
 801f66a:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801f66e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801f670:	9202      	str	r2, [sp, #8]
 801f672:	460f      	mov	r7, r1
 801f674:	2a00      	cmp	r2, #0
 801f676:	f000 8128 	beq.w	801f8ca <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 801f67a:	6820      	ldr	r0, [r4, #0]
 801f67c:	6861      	ldr	r1, [r4, #4]
 801f67e:	aa0a      	add	r2, sp, #40	; 0x28
 801f680:	c203      	stmia	r2!, {r0, r1}
 801f682:	6818      	ldr	r0, [r3, #0]
 801f684:	6859      	ldr	r1, [r3, #4]
 801f686:	aa0c      	add	r2, sp, #48	; 0x30
 801f688:	c203      	stmia	r2!, {r0, r1}
 801f68a:	a80a      	add	r0, sp, #40	; 0x28
 801f68c:	f7f8 ffc4 	bl	8018618 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f690:	4621      	mov	r1, r4
 801f692:	a80c      	add	r0, sp, #48	; 0x30
 801f694:	f7f9 f804 	bl	80186a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f698:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801f69c:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801f6a0:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801f6a4:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801f6a8:	bfde      	ittt	le
 801f6aa:	b2b3      	uxthle	r3, r6
 801f6ac:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801f6b0:	fb92 f3f3 	sdivle	r3, r2, r3
 801f6b4:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801f6b8:	bfc8      	it	gt
 801f6ba:	2301      	movgt	r3, #1
 801f6bc:	fb92 f1f3 	sdiv	r1, r2, r3
 801f6c0:	fa1f fc81 	uxth.w	ip, r1
 801f6c4:	fb0c 2413 	mls	r4, ip, r3, r2
 801f6c8:	fb14 f406 	smulbb	r4, r4, r6
 801f6cc:	441d      	add	r5, r3
 801f6ce:	4404      	add	r4, r0
 801f6d0:	4661      	mov	r1, ip
 801f6d2:	3d01      	subs	r5, #1
 801f6d4:	b2a4      	uxth	r4, r4
 801f6d6:	fb95 f5f3 	sdiv	r5, r5, r3
 801f6da:	b121      	cbz	r1, 801f6e6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 801f6dc:	9b03      	ldr	r3, [sp, #12]
 801f6de:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801f6e2:	ba1b      	rev	r3, r3
 801f6e4:	441f      	add	r7, r3
 801f6e6:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801f6ea:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801f6ee:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801f6f2:	4418      	add	r0, r3
 801f6f4:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801f6f8:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801f6fc:	441a      	add	r2, r3
 801f6fe:	4b74      	ldr	r3, [pc, #464]	; (801f8d0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801f700:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801f704:	6818      	ldr	r0, [r3, #0]
 801f706:	6803      	ldr	r3, [r0, #0]
 801f708:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f70a:	4798      	blx	r3
 801f70c:	4a71      	ldr	r2, [pc, #452]	; (801f8d4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 801f70e:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 801f712:	8813      	ldrh	r3, [r2, #0]
 801f714:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801f718:	9209      	str	r2, [sp, #36]	; 0x24
 801f71a:	fb03 c101 	mla	r1, r3, r1, ip
 801f71e:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801f722:	4373      	muls	r3, r6
 801f724:	b2ad      	uxth	r5, r5
 801f726:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801f72a:	00ad      	lsls	r5, r5, #2
 801f72c:	2c00      	cmp	r4, #0
 801f72e:	9304      	str	r3, [sp, #16]
 801f730:	f105 0304 	add.w	r3, r5, #4
 801f734:	9305      	str	r3, [sp, #20]
 801f736:	bf0c      	ite	eq
 801f738:	46c8      	moveq	r8, r9
 801f73a:	f04f 0800 	movne.w	r8, #0
 801f73e:	2300      	movs	r3, #0
 801f740:	fa1f f888 	uxth.w	r8, r8
 801f744:	9301      	str	r3, [sp, #4]
 801f746:	9a04      	ldr	r2, [sp, #16]
 801f748:	4282      	cmp	r2, r0
 801f74a:	f240 80b9 	bls.w	801f8c0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 801f74e:	b95b      	cbnz	r3, 801f768 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 801f750:	783a      	ldrb	r2, [r7, #0]
 801f752:	0993      	lsrs	r3, r2, #6
 801f754:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801f758:	9201      	str	r2, [sp, #4]
 801f75a:	1e5a      	subs	r2, r3, #1
 801f75c:	2a02      	cmp	r2, #2
 801f75e:	bf8d      	iteet	hi
 801f760:	787b      	ldrbhi	r3, [r7, #1]
 801f762:	3701      	addls	r7, #1
 801f764:	b29b      	uxthls	r3, r3
 801f766:	3702      	addhi	r7, #2
 801f768:	b184      	cbz	r4, 801f78c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 801f76a:	429c      	cmp	r4, r3
 801f76c:	bf95      	itete	ls
 801f76e:	1b1c      	subls	r4, r3, r4
 801f770:	1ae4      	subhi	r4, r4, r3
 801f772:	fa1f fa84 	uxthls.w	sl, r4
 801f776:	b2a4      	uxthhi	r4, r4
 801f778:	bf87      	ittee	hi
 801f77a:	46c4      	movhi	ip, r8
 801f77c:	f04f 0a00 	movhi.w	sl, #0
 801f780:	fa1f fc89 	uxthls.w	ip, r9
 801f784:	2400      	movls	r4, #0
 801f786:	4653      	mov	r3, sl
 801f788:	46e0      	mov	r8, ip
 801f78a:	e7dc      	b.n	801f746 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 801f78c:	2204      	movs	r2, #4
 801f78e:	4615      	mov	r5, r2
 801f790:	9905      	ldr	r1, [sp, #20]
 801f792:	9a01      	ldr	r2, [sp, #4]
 801f794:	fb15 1202 	smlabb	r2, r5, r2, r1
 801f798:	9903      	ldr	r1, [sp, #12]
 801f79a:	588a      	ldr	r2, [r1, r2]
 801f79c:	4543      	cmp	r3, r8
 801f79e:	bf27      	ittee	cs
 801f7a0:	eba3 0a08 	subcs.w	sl, r3, r8
 801f7a4:	46c6      	movcs	lr, r8
 801f7a6:	eba8 0c03 	subcc.w	ip, r8, r3
 801f7aa:	469e      	movcc	lr, r3
 801f7ac:	ea4f 6112 	mov.w	r1, r2, lsr #24
 801f7b0:	bf27      	ittee	cs
 801f7b2:	fa1f fa8a 	uxthcs.w	sl, sl
 801f7b6:	46a4      	movcs	ip, r4
 801f7b8:	fa1f fc8c 	uxthcc.w	ip, ip
 801f7bc:	46a2      	movcc	sl, r4
 801f7be:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 801f7c2:	2900      	cmp	r1, #0
 801f7c4:	d066      	beq.n	801f894 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 801f7c6:	29ff      	cmp	r1, #255	; 0xff
 801f7c8:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801f7cc:	d114      	bne.n	801f7f8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801f7ce:	9d02      	ldr	r5, [sp, #8]
 801f7d0:	2dff      	cmp	r5, #255	; 0xff
 801f7d2:	d111      	bne.n	801f7f8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801f7d4:	0951      	lsrs	r1, r2, #5
 801f7d6:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801f7da:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801f7de:	f026 0607 	bic.w	r6, r6, #7
 801f7e2:	430e      	orrs	r6, r1
 801f7e4:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f7e8:	4316      	orrs	r6, r2
 801f7ea:	b2b6      	uxth	r6, r6
 801f7ec:	4486      	add	lr, r0
 801f7ee:	4586      	cmp	lr, r0
 801f7f0:	d051      	beq.n	801f896 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801f7f2:	f820 6b02 	strh.w	r6, [r0], #2
 801f7f6:	e7fa      	b.n	801f7ee <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 801f7f8:	9d02      	ldr	r5, [sp, #8]
 801f7fa:	4369      	muls	r1, r5
 801f7fc:	1c4d      	adds	r5, r1, #1
 801f7fe:	eb05 2521 	add.w	r5, r5, r1, asr #8
 801f802:	122d      	asrs	r5, r5, #8
 801f804:	ea6f 0b05 	mvn.w	fp, r5
 801f808:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801f80c:	b2ad      	uxth	r5, r5
 801f80e:	b2f6      	uxtb	r6, r6
 801f810:	b2d2      	uxtb	r2, r2
 801f812:	fb11 f105 	smulbb	r1, r1, r5
 801f816:	fb16 f605 	smulbb	r6, r6, r5
 801f81a:	fb12 f205 	smulbb	r2, r2, r5
 801f81e:	b289      	uxth	r1, r1
 801f820:	b2b6      	uxth	r6, r6
 801f822:	b292      	uxth	r2, r2
 801f824:	9106      	str	r1, [sp, #24]
 801f826:	9607      	str	r6, [sp, #28]
 801f828:	9208      	str	r2, [sp, #32]
 801f82a:	4486      	add	lr, r0
 801f82c:	fa5f fb8b 	uxtb.w	fp, fp
 801f830:	4586      	cmp	lr, r0
 801f832:	d030      	beq.n	801f896 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801f834:	8802      	ldrh	r2, [r0, #0]
 801f836:	9906      	ldr	r1, [sp, #24]
 801f838:	1216      	asrs	r6, r2, #8
 801f83a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801f83e:	10d5      	asrs	r5, r2, #3
 801f840:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801f844:	fb06 160b 	mla	r6, r6, fp, r1
 801f848:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801f84c:	9907      	ldr	r1, [sp, #28]
 801f84e:	00d2      	lsls	r2, r2, #3
 801f850:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801f854:	fb05 150b 	mla	r5, r5, fp, r1
 801f858:	b2d2      	uxtb	r2, r2
 801f85a:	9908      	ldr	r1, [sp, #32]
 801f85c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801f860:	b2b6      	uxth	r6, r6
 801f862:	fb02 120b 	mla	r2, r2, fp, r1
 801f866:	b292      	uxth	r2, r2
 801f868:	1c71      	adds	r1, r6, #1
 801f86a:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 801f86e:	1c51      	adds	r1, r2, #1
 801f870:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801f874:	b2ad      	uxth	r5, r5
 801f876:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801f87a:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801f87e:	4316      	orrs	r6, r2
 801f880:	1c6a      	adds	r2, r5, #1
 801f882:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801f886:	096d      	lsrs	r5, r5, #5
 801f888:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801f88c:	432e      	orrs	r6, r5
 801f88e:	f820 6b02 	strh.w	r6, [r0], #2
 801f892:	e7cd      	b.n	801f830 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 801f894:	4470      	add	r0, lr
 801f896:	4543      	cmp	r3, r8
 801f898:	f4ff af75 	bcc.w	801f786 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801f89c:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801f8a0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f8a2:	fa1f fc89 	uxth.w	ip, r9
 801f8a6:	eba4 040c 	sub.w	r4, r4, ip
 801f8aa:	881b      	ldrh	r3, [r3, #0]
 801f8ac:	b2a4      	uxth	r4, r4
 801f8ae:	2c00      	cmp	r4, #0
 801f8b0:	eba3 0309 	sub.w	r3, r3, r9
 801f8b4:	bf18      	it	ne
 801f8b6:	f04f 0c00 	movne.w	ip, #0
 801f8ba:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f8be:	e762      	b.n	801f786 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801f8c0:	4b03      	ldr	r3, [pc, #12]	; (801f8d0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801f8c2:	6818      	ldr	r0, [r3, #0]
 801f8c4:	6803      	ldr	r3, [r0, #0]
 801f8c6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f8c8:	4798      	blx	r3
 801f8ca:	b00f      	add	sp, #60	; 0x3c
 801f8cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f8d0:	2001384c 	.word	0x2001384c
 801f8d4:	20013846 	.word	0x20013846

0801f8d8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801f8d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f8dc:	b093      	sub	sp, #76	; 0x4c
 801f8de:	461c      	mov	r4, r3
 801f8e0:	9205      	str	r2, [sp, #20]
 801f8e2:	f89d 2074 	ldrb.w	r2, [sp, #116]	; 0x74
 801f8e6:	9101      	str	r1, [sp, #4]
 801f8e8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801f8ea:	9202      	str	r2, [sp, #8]
 801f8ec:	2a00      	cmp	r2, #0
 801f8ee:	f000 812c 	beq.w	801fb4a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801f8f2:	6820      	ldr	r0, [r4, #0]
 801f8f4:	6861      	ldr	r1, [r4, #4]
 801f8f6:	aa0e      	add	r2, sp, #56	; 0x38
 801f8f8:	c203      	stmia	r2!, {r0, r1}
 801f8fa:	6818      	ldr	r0, [r3, #0]
 801f8fc:	6859      	ldr	r1, [r3, #4]
 801f8fe:	aa10      	add	r2, sp, #64	; 0x40
 801f900:	c203      	stmia	r2!, {r0, r1}
 801f902:	a80e      	add	r0, sp, #56	; 0x38
 801f904:	f7f8 fe88 	bl	8018618 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f908:	4621      	mov	r1, r4
 801f90a:	a810      	add	r0, sp, #64	; 0x40
 801f90c:	f7f8 fec8 	bl	80186a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f910:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801f914:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
 801f918:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 801f91c:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801f920:	bfde      	ittt	le
 801f922:	b2b3      	uxthle	r3, r6
 801f924:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801f928:	fb92 f3f3 	sdivle	r3, r2, r3
 801f92c:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801f930:	bfc8      	it	gt
 801f932:	2301      	movgt	r3, #1
 801f934:	fb92 f1f3 	sdiv	r1, r2, r3
 801f938:	fa1f fc81 	uxth.w	ip, r1
 801f93c:	fb0c 2413 	mls	r4, ip, r3, r2
 801f940:	fb14 f406 	smulbb	r4, r4, r6
 801f944:	441d      	add	r5, r3
 801f946:	4404      	add	r4, r0
 801f948:	4661      	mov	r1, ip
 801f94a:	3d01      	subs	r5, #1
 801f94c:	b2a4      	uxth	r4, r4
 801f94e:	fb95 f5f3 	sdiv	r5, r5, r3
 801f952:	b131      	cbz	r1, 801f962 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 801f954:	9b05      	ldr	r3, [sp, #20]
 801f956:	9901      	ldr	r1, [sp, #4]
 801f958:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801f95c:	ba1b      	rev	r3, r3
 801f95e:	4419      	add	r1, r3
 801f960:	9101      	str	r1, [sp, #4]
 801f962:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801f966:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801f96a:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	; 0x46
 801f96e:	4418      	add	r0, r3
 801f970:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 801f974:	f8ad 0040 	strh.w	r0, [sp, #64]	; 0x40
 801f978:	441a      	add	r2, r3
 801f97a:	4b75      	ldr	r3, [pc, #468]	; (801fb50 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801f97c:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 801f980:	6818      	ldr	r0, [r3, #0]
 801f982:	6803      	ldr	r3, [r0, #0]
 801f984:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f986:	4798      	blx	r3
 801f988:	4972      	ldr	r1, [pc, #456]	; (801fb54 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 801f98a:	f9bd c040 	ldrsh.w	ip, [sp, #64]	; 0x40
 801f98e:	880b      	ldrh	r3, [r1, #0]
 801f990:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801f994:	910d      	str	r1, [sp, #52]	; 0x34
 801f996:	fb03 c202 	mla	r2, r3, r2, ip
 801f99a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801f99e:	4373      	muls	r3, r6
 801f9a0:	b2ad      	uxth	r5, r5
 801f9a2:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801f9a6:	00ad      	lsls	r5, r5, #2
 801f9a8:	9308      	str	r3, [sp, #32]
 801f9aa:	1d2b      	adds	r3, r5, #4
 801f9ac:	9309      	str	r3, [sp, #36]	; 0x24
 801f9ae:	9b02      	ldr	r3, [sp, #8]
 801f9b0:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801f9b4:	9106      	str	r1, [sp, #24]
 801f9b6:	43da      	mvns	r2, r3
 801f9b8:	2c00      	cmp	r4, #0
 801f9ba:	bf0c      	ite	eq
 801f9bc:	46dc      	moveq	ip, fp
 801f9be:	f04f 0c00 	movne.w	ip, #0
 801f9c2:	2300      	movs	r3, #0
 801f9c4:	b2d2      	uxtb	r2, r2
 801f9c6:	fa1f fc8c 	uxth.w	ip, ip
 801f9ca:	9303      	str	r3, [sp, #12]
 801f9cc:	9207      	str	r2, [sp, #28]
 801f9ce:	9a08      	ldr	r2, [sp, #32]
 801f9d0:	4282      	cmp	r2, r0
 801f9d2:	f240 80b5 	bls.w	801fb40 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801f9d6:	b963      	cbnz	r3, 801f9f2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801f9d8:	9b01      	ldr	r3, [sp, #4]
 801f9da:	781a      	ldrb	r2, [r3, #0]
 801f9dc:	0993      	lsrs	r3, r2, #6
 801f9de:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801f9e2:	9203      	str	r2, [sp, #12]
 801f9e4:	1e5a      	subs	r2, r3, #1
 801f9e6:	2a02      	cmp	r2, #2
 801f9e8:	d815      	bhi.n	801fa16 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 801f9ea:	9a01      	ldr	r2, [sp, #4]
 801f9ec:	3201      	adds	r2, #1
 801f9ee:	9201      	str	r2, [sp, #4]
 801f9f0:	b29b      	uxth	r3, r3
 801f9f2:	b1b4      	cbz	r4, 801fa22 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 801f9f4:	429c      	cmp	r4, r3
 801f9f6:	bf95      	itete	ls
 801f9f8:	1b1c      	subls	r4, r3, r4
 801f9fa:	1ae4      	subhi	r4, r4, r3
 801f9fc:	fa1f f884 	uxthls.w	r8, r4
 801fa00:	b2a4      	uxthhi	r4, r4
 801fa02:	bf87      	ittee	hi
 801fa04:	4666      	movhi	r6, ip
 801fa06:	f04f 0800 	movhi.w	r8, #0
 801fa0a:	fa1f f68b 	uxthls.w	r6, fp
 801fa0e:	2400      	movls	r4, #0
 801fa10:	4643      	mov	r3, r8
 801fa12:	46b4      	mov	ip, r6
 801fa14:	e7db      	b.n	801f9ce <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 801fa16:	9a01      	ldr	r2, [sp, #4]
 801fa18:	9b01      	ldr	r3, [sp, #4]
 801fa1a:	3202      	adds	r2, #2
 801fa1c:	785b      	ldrb	r3, [r3, #1]
 801fa1e:	9201      	str	r2, [sp, #4]
 801fa20:	e7e7      	b.n	801f9f2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801fa22:	2203      	movs	r2, #3
 801fa24:	4615      	mov	r5, r2
 801fa26:	9909      	ldr	r1, [sp, #36]	; 0x24
 801fa28:	9a03      	ldr	r2, [sp, #12]
 801fa2a:	fb15 1202 	smlabb	r2, r5, r2, r1
 801fa2e:	9905      	ldr	r1, [sp, #20]
 801fa30:	4563      	cmp	r3, ip
 801fa32:	eb01 0502 	add.w	r5, r1, r2
 801fa36:	9902      	ldr	r1, [sp, #8]
 801fa38:	bf29      	itett	cs
 801fa3a:	eba3 080c 	subcs.w	r8, r3, ip
 801fa3e:	ebac 0603 	subcc.w	r6, ip, r3
 801fa42:	fa1f f888 	uxthcs.w	r8, r8
 801fa46:	46e1      	movcs	r9, ip
 801fa48:	bf2f      	iteee	cs
 801fa4a:	4626      	movcs	r6, r4
 801fa4c:	b2b6      	uxthcc	r6, r6
 801fa4e:	4699      	movcc	r9, r3
 801fa50:	46a0      	movcc	r8, r4
 801fa52:	29ff      	cmp	r1, #255	; 0xff
 801fa54:	d04a      	beq.n	801faec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 801fa56:	9f06      	ldr	r7, [sp, #24]
 801fa58:	78a9      	ldrb	r1, [r5, #2]
 801fa5a:	9004      	str	r0, [sp, #16]
 801fa5c:	4379      	muls	r1, r7
 801fa5e:	910a      	str	r1, [sp, #40]	; 0x28
 801fa60:	7869      	ldrb	r1, [r5, #1]
 801fa62:	4379      	muls	r1, r7
 801fa64:	910b      	str	r1, [sp, #44]	; 0x2c
 801fa66:	9905      	ldr	r1, [sp, #20]
 801fa68:	5c8a      	ldrb	r2, [r1, r2]
 801fa6a:	437a      	muls	r2, r7
 801fa6c:	920c      	str	r2, [sp, #48]	; 0x30
 801fa6e:	46ca      	mov	sl, r9
 801fa70:	f1ba 0f00 	cmp.w	sl, #0
 801fa74:	d03d      	beq.n	801faf2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 801fa76:	9a04      	ldr	r2, [sp, #16]
 801fa78:	9f07      	ldr	r7, [sp, #28]
 801fa7a:	8812      	ldrh	r2, [r2, #0]
 801fa7c:	1215      	asrs	r5, r2, #8
 801fa7e:	46be      	mov	lr, r7
 801fa80:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801fa84:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801fa86:	10d1      	asrs	r1, r2, #3
 801fa88:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801fa8c:	fb05 750e 	mla	r5, r5, lr, r7
 801fa90:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801fa94:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801fa96:	00d2      	lsls	r2, r2, #3
 801fa98:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801fa9c:	fb01 710e 	mla	r1, r1, lr, r7
 801faa0:	b2d2      	uxtb	r2, r2
 801faa2:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801faa4:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801faa8:	b2ad      	uxth	r5, r5
 801faaa:	fb02 720e 	mla	r2, r2, lr, r7
 801faae:	b292      	uxth	r2, r2
 801fab0:	f105 0e01 	add.w	lr, r5, #1
 801fab4:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801fab8:	f102 0e01 	add.w	lr, r2, #1
 801fabc:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801fac0:	b289      	uxth	r1, r1
 801fac2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801fac6:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801faca:	4315      	orrs	r5, r2
 801facc:	1c4a      	adds	r2, r1, #1
 801face:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801fad2:	0949      	lsrs	r1, r1, #5
 801fad4:	9a04      	ldr	r2, [sp, #16]
 801fad6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801fada:	430d      	orrs	r5, r1
 801fadc:	f822 5b02 	strh.w	r5, [r2], #2
 801fae0:	f10a 3aff 	add.w	sl, sl, #4294967295
 801fae4:	9204      	str	r2, [sp, #16]
 801fae6:	fa1f fa8a 	uxth.w	sl, sl
 801faea:	e7c1      	b.n	801fa70 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 801faec:	4649      	mov	r1, r9
 801faee:	4686      	mov	lr, r0
 801faf0:	b999      	cbnz	r1, 801fb1a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801faf2:	4563      	cmp	r3, ip
 801faf4:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 801faf8:	d38a      	bcc.n	801fa10 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801fafa:	f8bd 403c 	ldrh.w	r4, [sp, #60]	; 0x3c
 801fafe:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801fb00:	fa1f f68b 	uxth.w	r6, fp
 801fb04:	1ba4      	subs	r4, r4, r6
 801fb06:	881b      	ldrh	r3, [r3, #0]
 801fb08:	b2a4      	uxth	r4, r4
 801fb0a:	2c00      	cmp	r4, #0
 801fb0c:	eba3 030b 	sub.w	r3, r3, fp
 801fb10:	bf18      	it	ne
 801fb12:	2600      	movne	r6, #0
 801fb14:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801fb18:	e77a      	b.n	801fa10 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801fb1a:	78aa      	ldrb	r2, [r5, #2]
 801fb1c:	4f0e      	ldr	r7, [pc, #56]	; (801fb58 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 801fb1e:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 801fb22:	786a      	ldrb	r2, [r5, #1]
 801fb24:	00d2      	lsls	r2, r2, #3
 801fb26:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801fb2a:	ea4a 0202 	orr.w	r2, sl, r2
 801fb2e:	f895 a000 	ldrb.w	sl, [r5]
 801fb32:	3901      	subs	r1, #1
 801fb34:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 801fb38:	f82e 2b02 	strh.w	r2, [lr], #2
 801fb3c:	b289      	uxth	r1, r1
 801fb3e:	e7d7      	b.n	801faf0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 801fb40:	4b03      	ldr	r3, [pc, #12]	; (801fb50 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801fb42:	6818      	ldr	r0, [r3, #0]
 801fb44:	6803      	ldr	r3, [r0, #0]
 801fb46:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801fb48:	4798      	blx	r3
 801fb4a:	b013      	add	sp, #76	; 0x4c
 801fb4c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fb50:	2001384c 	.word	0x2001384c
 801fb54:	20013846 	.word	0x20013846
 801fb58:	fffff800 	.word	0xfffff800

0801fb5c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801fb5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fb60:	b09d      	sub	sp, #116	; 0x74
 801fb62:	e9cd 1211 	strd	r1, r2, [sp, #68]	; 0x44
 801fb66:	f89d 209c 	ldrb.w	r2, [sp, #156]	; 0x9c
 801fb6a:	920e      	str	r2, [sp, #56]	; 0x38
 801fb6c:	461c      	mov	r4, r3
 801fb6e:	4683      	mov	fp, r0
 801fb70:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801fb72:	2a00      	cmp	r2, #0
 801fb74:	f000 81e0 	beq.w	801ff38 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 801fb78:	6820      	ldr	r0, [r4, #0]
 801fb7a:	6861      	ldr	r1, [r4, #4]
 801fb7c:	aa18      	add	r2, sp, #96	; 0x60
 801fb7e:	c203      	stmia	r2!, {r0, r1}
 801fb80:	6818      	ldr	r0, [r3, #0]
 801fb82:	6859      	ldr	r1, [r3, #4]
 801fb84:	aa1a      	add	r2, sp, #104	; 0x68
 801fb86:	c203      	stmia	r2!, {r0, r1}
 801fb88:	a818      	add	r0, sp, #96	; 0x60
 801fb8a:	f7f8 fd45 	bl	8018618 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801fb8e:	4621      	mov	r1, r4
 801fb90:	a81a      	add	r0, sp, #104	; 0x68
 801fb92:	f7f8 fd85 	bl	80186a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801fb96:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	; 0x64
 801fb9a:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	; 0x66
 801fb9e:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801fba2:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801fba6:	bfd7      	itett	le
 801fba8:	b29a      	uxthle	r2, r3
 801fbaa:	2201      	movgt	r2, #1
 801fbac:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801fbb0:	fb91 f2f2 	sdivle	r2, r1, r2
 801fbb4:	9202      	str	r2, [sp, #8]
 801fbb6:	9802      	ldr	r0, [sp, #8]
 801fbb8:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	; 0x6a
 801fbbc:	fb92 f0f0 	sdiv	r0, r2, r0
 801fbc0:	b280      	uxth	r0, r0
 801fbc2:	900f      	str	r0, [sp, #60]	; 0x3c
 801fbc4:	9902      	ldr	r1, [sp, #8]
 801fbc6:	9802      	ldr	r0, [sp, #8]
 801fbc8:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801fbca:	440c      	add	r4, r1
 801fbcc:	fb05 2510 	mls	r5, r5, r0, r2
 801fbd0:	fb15 f503 	smulbb	r5, r5, r3
 801fbd4:	3c01      	subs	r4, #1
 801fbd6:	f8bd 3060 	ldrh.w	r3, [sp, #96]	; 0x60
 801fbda:	fb94 f4f1 	sdiv	r4, r4, r1
 801fbde:	f8bd 1068 	ldrh.w	r1, [sp, #104]	; 0x68
 801fbe2:	440d      	add	r5, r1
 801fbe4:	4419      	add	r1, r3
 801fbe6:	f8bd 3062 	ldrh.w	r3, [sp, #98]	; 0x62
 801fbea:	f8ad 1068 	strh.w	r1, [sp, #104]	; 0x68
 801fbee:	441a      	add	r2, r3
 801fbf0:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801fbf4:	9306      	str	r3, [sp, #24]
 801fbf6:	4bb3      	ldr	r3, [pc, #716]	; (801fec4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 801fbf8:	f8ad 206a 	strh.w	r2, [sp, #106]	; 0x6a
 801fbfc:	6818      	ldr	r0, [r3, #0]
 801fbfe:	6803      	ldr	r3, [r0, #0]
 801fc00:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801fc02:	4798      	blx	r3
 801fc04:	4bb0      	ldr	r3, [pc, #704]	; (801fec8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 801fc06:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	; 0x6a
 801fc0a:	881a      	ldrh	r2, [r3, #0]
 801fc0c:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	; 0x68
 801fc10:	9316      	str	r3, [sp, #88]	; 0x58
 801fc12:	fb02 7101 	mla	r1, r2, r1, r7
 801fc16:	3401      	adds	r4, #1
 801fc18:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 801fc1c:	b2a4      	uxth	r4, r4
 801fc1e:	4356      	muls	r6, r2
 801fc20:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 801fc24:	00a4      	lsls	r4, r4, #2
 801fc26:	920a      	str	r2, [sp, #40]	; 0x28
 801fc28:	1d22      	adds	r2, r4, #4
 801fc2a:	b2ad      	uxth	r5, r5
 801fc2c:	9213      	str	r2, [sp, #76]	; 0x4c
 801fc2e:	4ba7      	ldr	r3, [pc, #668]	; (801fecc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 801fc30:	9a06      	ldr	r2, [sp, #24]
 801fc32:	2d00      	cmp	r5, #0
 801fc34:	bf0c      	ite	eq
 801fc36:	4611      	moveq	r1, r2
 801fc38:	2100      	movne	r1, #0
 801fc3a:	2200      	movs	r2, #0
 801fc3c:	eba3 030b 	sub.w	r3, r3, fp
 801fc40:	b289      	uxth	r1, r1
 801fc42:	920d      	str	r2, [sp, #52]	; 0x34
 801fc44:	9317      	str	r3, [sp, #92]	; 0x5c
 801fc46:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801fc48:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801fc4a:	fa12 f383 	uxtah	r3, r2, r3
 801fc4e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801fc50:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801fc54:	3304      	adds	r3, #4
 801fc56:	9308      	str	r3, [sp, #32]
 801fc58:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fc5a:	4543      	cmp	r3, r8
 801fc5c:	f240 8167 	bls.w	801ff2e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 801fc60:	9a02      	ldr	r2, [sp, #8]
 801fc62:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 801fc66:	fbb5 f3f3 	udiv	r3, r5, r3
 801fc6a:	1ad3      	subs	r3, r2, r3
 801fc6c:	b29b      	uxth	r3, r3
 801fc6e:	9314      	str	r3, [sp, #80]	; 0x50
 801fc70:	9b08      	ldr	r3, [sp, #32]
 801fc72:	9808      	ldr	r0, [sp, #32]
 801fc74:	785a      	ldrb	r2, [r3, #1]
 801fc76:	789b      	ldrb	r3, [r3, #2]
 801fc78:	7800      	ldrb	r0, [r0, #0]
 801fc7a:	9010      	str	r0, [sp, #64]	; 0x40
 801fc7c:	021b      	lsls	r3, r3, #8
 801fc7e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801fc82:	9a08      	ldr	r2, [sp, #32]
 801fc84:	78d2      	ldrb	r2, [r2, #3]
 801fc86:	4313      	orrs	r3, r2
 801fc88:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801fc8a:	3001      	adds	r0, #1
 801fc8c:	441a      	add	r2, r3
 801fc8e:	9007      	str	r0, [sp, #28]
 801fc90:	1c50      	adds	r0, r2, #1
 801fc92:	9005      	str	r0, [sp, #20]
 801fc94:	7852      	ldrb	r2, [r2, #1]
 801fc96:	9811      	ldr	r0, [sp, #68]	; 0x44
 801fc98:	0212      	lsls	r2, r2, #8
 801fc9a:	5cc3      	ldrb	r3, [r0, r3]
 801fc9c:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801fca0:	431a      	orrs	r2, r3
 801fca2:	b293      	uxth	r3, r2
 801fca4:	930b      	str	r3, [sp, #44]	; 0x2c
 801fca6:	2300      	movs	r3, #0
 801fca8:	9309      	str	r3, [sp, #36]	; 0x24
 801fcaa:	2301      	movs	r3, #1
 801fcac:	9301      	str	r3, [sp, #4]
 801fcae:	9304      	str	r3, [sp, #16]
 801fcb0:	2300      	movs	r3, #0
 801fcb2:	f88b 2804 	strb.w	r2, [fp, #2052]	; 0x804
 801fcb6:	9303      	str	r3, [sp, #12]
 801fcb8:	f04f 0e01 	mov.w	lr, #1
 801fcbc:	2d00      	cmp	r5, #0
 801fcbe:	d07c      	beq.n	801fdba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 801fcc0:	45ae      	cmp	lr, r5
 801fcc2:	d26b      	bcs.n	801fd9c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 801fcc4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fcc6:	eba5 050e 	sub.w	r5, r5, lr
 801fcca:	4543      	cmp	r3, r8
 801fccc:	b2ad      	uxth	r5, r5
 801fcce:	460c      	mov	r4, r1
 801fcd0:	d802      	bhi.n	801fcd8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 801fcd2:	e070      	b.n	801fdb6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 801fcd4:	2b00      	cmp	r3, #0
 801fcd6:	d15c      	bne.n	801fd92 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801fcd8:	9b05      	ldr	r3, [sp, #20]
 801fcda:	9a04      	ldr	r2, [sp, #16]
 801fcdc:	785b      	ldrb	r3, [r3, #1]
 801fcde:	9904      	ldr	r1, [sp, #16]
 801fce0:	f1c2 0207 	rsb	r2, r2, #7
 801fce4:	4093      	lsls	r3, r2
 801fce6:	005b      	lsls	r3, r3, #1
 801fce8:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801fcec:	9b05      	ldr	r3, [sp, #20]
 801fcee:	781b      	ldrb	r3, [r3, #0]
 801fcf0:	410b      	asrs	r3, r1
 801fcf2:	3101      	adds	r1, #1
 801fcf4:	b2c9      	uxtb	r1, r1
 801fcf6:	2908      	cmp	r1, #8
 801fcf8:	9104      	str	r1, [sp, #16]
 801fcfa:	9905      	ldr	r1, [sp, #20]
 801fcfc:	bf0a      	itet	eq
 801fcfe:	3102      	addeq	r1, #2
 801fd00:	3101      	addne	r1, #1
 801fd02:	9105      	streq	r1, [sp, #20]
 801fd04:	b2db      	uxtb	r3, r3
 801fd06:	bf0a      	itet	eq
 801fd08:	2100      	moveq	r1, #0
 801fd0a:	9105      	strne	r1, [sp, #20]
 801fd0c:	9104      	streq	r1, [sp, #16]
 801fd0e:	4313      	orrs	r3, r2
 801fd10:	9910      	ldr	r1, [sp, #64]	; 0x40
 801fd12:	b29a      	uxth	r2, r3
 801fd14:	4291      	cmp	r1, r2
 801fd16:	d30a      	bcc.n	801fd2e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 801fd18:	f88b 3804 	strb.w	r3, [fp, #2052]	; 0x804
 801fd1c:	2301      	movs	r3, #1
 801fd1e:	9907      	ldr	r1, [sp, #28]
 801fd20:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801fd24:	d30f      	bcc.n	801fd46 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 801fd26:	2100      	movs	r1, #0
 801fd28:	9301      	str	r3, [sp, #4]
 801fd2a:	9103      	str	r1, [sp, #12]
 801fd2c:	e032      	b.n	801fd94 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 801fd2e:	9b07      	ldr	r3, [sp, #28]
 801fd30:	429a      	cmp	r2, r3
 801fd32:	d318      	bcc.n	801fd66 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 801fd34:	9b01      	ldr	r3, [sp, #4]
 801fd36:	f89b 1804 	ldrb.w	r1, [fp, #2052]	; 0x804
 801fd3a:	445b      	add	r3, fp
 801fd3c:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801fd40:	9b01      	ldr	r3, [sp, #4]
 801fd42:	3301      	adds	r3, #1
 801fd44:	b29b      	uxth	r3, r3
 801fd46:	9907      	ldr	r1, [sp, #28]
 801fd48:	f89b 0804 	ldrb.w	r0, [fp, #2052]	; 0x804
 801fd4c:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801fd50:	7108      	strb	r0, [r1, #4]
 801fd52:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801fd54:	80c8      	strh	r0, [r1, #6]
 801fd56:	9801      	ldr	r0, [sp, #4]
 801fd58:	3001      	adds	r0, #1
 801fd5a:	7148      	strb	r0, [r1, #5]
 801fd5c:	9907      	ldr	r1, [sp, #28]
 801fd5e:	3101      	adds	r1, #1
 801fd60:	b289      	uxth	r1, r1
 801fd62:	9107      	str	r1, [sp, #28]
 801fd64:	e7df      	b.n	801fd26 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 801fd66:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 801fd6a:	4611      	mov	r1, r2
 801fd6c:	795b      	ldrb	r3, [r3, #5]
 801fd6e:	f603 0004 	addw	r0, r3, #2052	; 0x804
 801fd72:	4458      	add	r0, fp
 801fd74:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 801fd76:	4406      	add	r6, r0
 801fd78:	2e00      	cmp	r6, #0
 801fd7a:	dd06      	ble.n	801fd8a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 801fd7c:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801fd80:	790e      	ldrb	r6, [r1, #4]
 801fd82:	f800 6d01 	strb.w	r6, [r0, #-1]!
 801fd86:	88c9      	ldrh	r1, [r1, #6]
 801fd88:	e7f4      	b.n	801fd74 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 801fd8a:	f88b 1804 	strb.w	r1, [fp, #2052]	; 0x804
 801fd8e:	b29b      	uxth	r3, r3
 801fd90:	e7c5      	b.n	801fd1e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 801fd92:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801fd94:	920b      	str	r2, [sp, #44]	; 0x2c
 801fd96:	4621      	mov	r1, r4
 801fd98:	469e      	mov	lr, r3
 801fd9a:	e78f      	b.n	801fcbc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 801fd9c:	9a03      	ldr	r2, [sp, #12]
 801fd9e:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801fda2:	442a      	add	r2, r5
 801fda4:	ebae 0305 	sub.w	r3, lr, r5
 801fda8:	b292      	uxth	r2, r2
 801fdaa:	b29b      	uxth	r3, r3
 801fdac:	9203      	str	r2, [sp, #12]
 801fdae:	2500      	movs	r5, #0
 801fdb0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801fdb2:	4542      	cmp	r2, r8
 801fdb4:	d88e      	bhi.n	801fcd4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 801fdb6:	4621      	mov	r1, r4
 801fdb8:	e74e      	b.n	801fc58 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 801fdba:	458e      	cmp	lr, r1
 801fdbc:	bf29      	itett	cs
 801fdbe:	ebae 0301 	subcs.w	r3, lr, r1
 801fdc2:	eba1 040e 	subcc.w	r4, r1, lr
 801fdc6:	b29b      	uxthcs	r3, r3
 801fdc8:	910c      	strcs	r1, [sp, #48]	; 0x30
 801fdca:	bf2f      	iteee	cs
 801fdcc:	462c      	movcs	r4, r5
 801fdce:	b2a4      	uxthcc	r4, r4
 801fdd0:	f8cd e030 	strcc.w	lr, [sp, #48]	; 0x30
 801fdd4:	462b      	movcc	r3, r5
 801fdd6:	f04f 0900 	mov.w	r9, #0
 801fdda:	9a03      	ldr	r2, [sp, #12]
 801fddc:	980c      	ldr	r0, [sp, #48]	; 0x30
 801fdde:	444a      	add	r2, r9
 801fde0:	4548      	cmp	r0, r9
 801fde2:	b292      	uxth	r2, r2
 801fde4:	d074      	beq.n	801fed0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 801fde6:	445a      	add	r2, fp
 801fde8:	2004      	movs	r0, #4
 801fdea:	4605      	mov	r5, r0
 801fdec:	f892 2804 	ldrb.w	r2, [r2, #2052]	; 0x804
 801fdf0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801fdf2:	fb15 0202 	smlabb	r2, r5, r2, r0
 801fdf6:	9812      	ldr	r0, [sp, #72]	; 0x48
 801fdf8:	5880      	ldr	r0, [r0, r2]
 801fdfa:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 801fdfe:	d014      	beq.n	801fe2a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801fe00:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801fe04:	ea4f 2510 	mov.w	r5, r0, lsr #8
 801fe08:	d112      	bne.n	801fe30 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801fe0a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801fe0c:	2aff      	cmp	r2, #255	; 0xff
 801fe0e:	d10f      	bne.n	801fe30 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801fe10:	0942      	lsrs	r2, r0, #5
 801fe12:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801fe16:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801fe1a:	f025 0507 	bic.w	r5, r5, #7
 801fe1e:	4315      	orrs	r5, r2
 801fe20:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801fe24:	4305      	orrs	r5, r0
 801fe26:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 801fe2a:	f109 0901 	add.w	r9, r9, #1
 801fe2e:	e7d4      	b.n	801fdda <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 801fe30:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 801fe34:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801fe38:	f006 02fc 	and.w	r2, r6, #252	; 0xfc
 801fe3c:	9215      	str	r2, [sp, #84]	; 0x54
 801fe3e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801fe40:	fb02 fa0a 	mul.w	sl, r2, sl
 801fe44:	f10a 0201 	add.w	r2, sl, #1
 801fe48:	eb02 222a 	add.w	r2, r2, sl, asr #8
 801fe4c:	ea4f 272c 	mov.w	r7, ip, asr #8
 801fe50:	1212      	asrs	r2, r2, #8
 801fe52:	fa1f fa82 	uxth.w	sl, r2
 801fe56:	f3c0 4607 	ubfx	r6, r0, #16, #8
 801fe5a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801fe5e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801fe62:	43d2      	mvns	r2, r2
 801fe64:	b2d2      	uxtb	r2, r2
 801fe66:	fb16 f60a 	smulbb	r6, r6, sl
 801fe6a:	fa5f fc8c 	uxtb.w	ip, ip
 801fe6e:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801fe72:	b2c0      	uxtb	r0, r0
 801fe74:	fb07 6702 	mla	r7, r7, r2, r6
 801fe78:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 801fe7c:	9e15      	ldr	r6, [sp, #84]	; 0x54
 801fe7e:	fb10 f00a 	smulbb	r0, r0, sl
 801fe82:	fb0c 0002 	mla	r0, ip, r2, r0
 801fe86:	b2ed      	uxtb	r5, r5
 801fe88:	b2bf      	uxth	r7, r7
 801fe8a:	fb15 f50a 	smulbb	r5, r5, sl
 801fe8e:	b280      	uxth	r0, r0
 801fe90:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801fe94:	fb06 5602 	mla	r6, r6, r2, r5
 801fe98:	1c7a      	adds	r2, r7, #1
 801fe9a:	1c45      	adds	r5, r0, #1
 801fe9c:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801fea0:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801fea4:	b2b6      	uxth	r6, r6
 801fea6:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801feaa:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801feae:	432f      	orrs	r7, r5
 801feb0:	1c75      	adds	r5, r6, #1
 801feb2:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801feb6:	096d      	lsrs	r5, r5, #5
 801feb8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801febc:	432f      	orrs	r7, r5
 801febe:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 801fec2:	e7b2      	b.n	801fe2a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801fec4:	2001384c 	.word	0x2001384c
 801fec8:	20013846 	.word	0x20013846
 801fecc:	fffff7fb 	.word	0xfffff7fb
 801fed0:	9203      	str	r2, [sp, #12]
 801fed2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801fed4:	458e      	cmp	lr, r1
 801fed6:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801feda:	f4ff af68 	bcc.w	801fdae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 801fede:	9a16      	ldr	r2, [sp, #88]	; 0x58
 801fee0:	9906      	ldr	r1, [sp, #24]
 801fee2:	8812      	ldrh	r2, [r2, #0]
 801fee4:	1a52      	subs	r2, r2, r1
 801fee6:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801feea:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801feec:	9914      	ldr	r1, [sp, #80]	; 0x50
 801feee:	3201      	adds	r2, #1
 801fef0:	428a      	cmp	r2, r1
 801fef2:	9209      	str	r2, [sp, #36]	; 0x24
 801fef4:	d111      	bne.n	801ff1a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 801fef6:	f8bd 5068 	ldrh.w	r5, [sp, #104]	; 0x68
 801fefa:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 801fefe:	9b06      	ldr	r3, [sp, #24]
 801ff00:	eba5 0509 	sub.w	r5, r5, r9
 801ff04:	b2ad      	uxth	r5, r5
 801ff06:	2d00      	cmp	r5, #0
 801ff08:	bf08      	it	eq
 801ff0a:	4619      	moveq	r1, r3
 801ff0c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ff0e:	bf18      	it	ne
 801ff10:	2100      	movne	r1, #0
 801ff12:	3301      	adds	r3, #1
 801ff14:	930d      	str	r3, [sp, #52]	; 0x34
 801ff16:	b289      	uxth	r1, r1
 801ff18:	e695      	b.n	801fc46 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 801ff1a:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801ff1e:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 801ff22:	1b2d      	subs	r5, r5, r4
 801ff24:	b2ad      	uxth	r5, r5
 801ff26:	2d00      	cmp	r5, #0
 801ff28:	bf18      	it	ne
 801ff2a:	2400      	movne	r4, #0
 801ff2c:	e740      	b.n	801fdb0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 801ff2e:	4b04      	ldr	r3, [pc, #16]	; (801ff40 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 801ff30:	6818      	ldr	r0, [r3, #0]
 801ff32:	6803      	ldr	r3, [r0, #0]
 801ff34:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ff36:	4798      	blx	r3
 801ff38:	b01d      	add	sp, #116	; 0x74
 801ff3a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ff3e:	bf00      	nop
 801ff40:	2001384c 	.word	0x2001384c

0801ff44 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801ff44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ff48:	b09f      	sub	sp, #124	; 0x7c
 801ff4a:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801ff4e:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801ff52:	920a      	str	r2, [sp, #40]	; 0x28
 801ff54:	461d      	mov	r5, r3
 801ff56:	4604      	mov	r4, r0
 801ff58:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ff5a:	2a00      	cmp	r2, #0
 801ff5c:	f000 81fa 	beq.w	8020354 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 801ff60:	6828      	ldr	r0, [r5, #0]
 801ff62:	6869      	ldr	r1, [r5, #4]
 801ff64:	aa1a      	add	r2, sp, #104	; 0x68
 801ff66:	c203      	stmia	r2!, {r0, r1}
 801ff68:	6818      	ldr	r0, [r3, #0]
 801ff6a:	6859      	ldr	r1, [r3, #4]
 801ff6c:	aa1c      	add	r2, sp, #112	; 0x70
 801ff6e:	c203      	stmia	r2!, {r0, r1}
 801ff70:	a81a      	add	r0, sp, #104	; 0x68
 801ff72:	f7f8 fb51 	bl	8018618 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ff76:	4629      	mov	r1, r5
 801ff78:	a81c      	add	r0, sp, #112	; 0x70
 801ff7a:	f7f8 fb91 	bl	80186a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ff7e:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801ff82:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801ff86:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	; 0x76
 801ff8a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801ff8e:	bfd7      	itett	le
 801ff90:	b29a      	uxthle	r2, r3
 801ff92:	2201      	movgt	r2, #1
 801ff94:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801ff98:	fb91 f2f2 	sdivle	r2, r1, r2
 801ff9c:	9201      	str	r2, [sp, #4]
 801ff9e:	9801      	ldr	r0, [sp, #4]
 801ffa0:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801ffa4:	fb92 f0f0 	sdiv	r0, r2, r0
 801ffa8:	b280      	uxth	r0, r0
 801ffaa:	9010      	str	r0, [sp, #64]	; 0x40
 801ffac:	9901      	ldr	r1, [sp, #4]
 801ffae:	9801      	ldr	r0, [sp, #4]
 801ffb0:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801ffb2:	440e      	add	r6, r1
 801ffb4:	fb05 2510 	mls	r5, r5, r0, r2
 801ffb8:	fb15 f503 	smulbb	r5, r5, r3
 801ffbc:	3e01      	subs	r6, #1
 801ffbe:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801ffc2:	fb96 f6f1 	sdiv	r6, r6, r1
 801ffc6:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801ffca:	440d      	add	r5, r1
 801ffcc:	4419      	add	r1, r3
 801ffce:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801ffd2:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801ffd6:	441a      	add	r2, r3
 801ffd8:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801ffdc:	9304      	str	r3, [sp, #16]
 801ffde:	4b96      	ldr	r3, [pc, #600]	; (8020238 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801ffe0:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801ffe4:	6818      	ldr	r0, [r3, #0]
 801ffe6:	6803      	ldr	r3, [r0, #0]
 801ffe8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ffea:	4798      	blx	r3
 801ffec:	4b93      	ldr	r3, [pc, #588]	; (802023c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801ffee:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801fff2:	881a      	ldrh	r2, [r3, #0]
 801fff4:	f9bd c070 	ldrsh.w	ip, [sp, #112]	; 0x70
 801fff8:	9318      	str	r3, [sp, #96]	; 0x60
 801fffa:	fb02 c101 	mla	r1, r2, r1, ip
 801fffe:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 8020002:	4357      	muls	r7, r2
 8020004:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 8020008:	3601      	adds	r6, #1
 802000a:	920b      	str	r2, [sp, #44]	; 0x2c
 802000c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 802000e:	4b8c      	ldr	r3, [pc, #560]	; (8020240 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 8020010:	b2b6      	uxth	r6, r6
 8020012:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 8020016:	1d32      	adds	r2, r6, #4
 8020018:	9206      	str	r2, [sp, #24]
 802001a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802001c:	43d2      	mvns	r2, r2
 802001e:	b2d2      	uxtb	r2, r2
 8020020:	b2ad      	uxth	r5, r5
 8020022:	9215      	str	r2, [sp, #84]	; 0x54
 8020024:	9a04      	ldr	r2, [sp, #16]
 8020026:	2d00      	cmp	r5, #0
 8020028:	bf0c      	ite	eq
 802002a:	4611      	moveq	r1, r2
 802002c:	2100      	movne	r1, #0
 802002e:	2200      	movs	r2, #0
 8020030:	1b1b      	subs	r3, r3, r4
 8020032:	b289      	uxth	r1, r1
 8020034:	920d      	str	r2, [sp, #52]	; 0x34
 8020036:	9319      	str	r3, [sp, #100]	; 0x64
 8020038:	9a10      	ldr	r2, [sp, #64]	; 0x40
 802003a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802003c:	fa12 f383 	uxtah	r3, r2, r3
 8020040:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8020042:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8020046:	3304      	adds	r3, #4
 8020048:	9307      	str	r3, [sp, #28]
 802004a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802004c:	455b      	cmp	r3, fp
 802004e:	f240 817c 	bls.w	802034a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 8020052:	9a01      	ldr	r2, [sp, #4]
 8020054:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 8020058:	fbb5 f3f3 	udiv	r3, r5, r3
 802005c:	1ad3      	subs	r3, r2, r3
 802005e:	b29b      	uxth	r3, r3
 8020060:	9316      	str	r3, [sp, #88]	; 0x58
 8020062:	9b07      	ldr	r3, [sp, #28]
 8020064:	9807      	ldr	r0, [sp, #28]
 8020066:	785a      	ldrb	r2, [r3, #1]
 8020068:	789b      	ldrb	r3, [r3, #2]
 802006a:	7800      	ldrb	r0, [r0, #0]
 802006c:	9011      	str	r0, [sp, #68]	; 0x44
 802006e:	021b      	lsls	r3, r3, #8
 8020070:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8020074:	9a07      	ldr	r2, [sp, #28]
 8020076:	78d2      	ldrb	r2, [r2, #3]
 8020078:	4313      	orrs	r3, r2
 802007a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 802007c:	3001      	adds	r0, #1
 802007e:	441a      	add	r2, r3
 8020080:	9005      	str	r0, [sp, #20]
 8020082:	1c50      	adds	r0, r2, #1
 8020084:	9003      	str	r0, [sp, #12]
 8020086:	7852      	ldrb	r2, [r2, #1]
 8020088:	9813      	ldr	r0, [sp, #76]	; 0x4c
 802008a:	0212      	lsls	r2, r2, #8
 802008c:	5cc3      	ldrb	r3, [r0, r3]
 802008e:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 8020092:	431a      	orrs	r2, r3
 8020094:	b293      	uxth	r3, r2
 8020096:	930c      	str	r3, [sp, #48]	; 0x30
 8020098:	2300      	movs	r3, #0
 802009a:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 802009e:	9308      	str	r3, [sp, #32]
 80200a0:	461a      	mov	r2, r3
 80200a2:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80200a6:	930e      	str	r3, [sp, #56]	; 0x38
 80200a8:	f04f 0801 	mov.w	r8, #1
 80200ac:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 80200b0:	f8cd 8008 	str.w	r8, [sp, #8]
 80200b4:	46c4      	mov	ip, r8
 80200b6:	930f      	str	r3, [sp, #60]	; 0x3c
 80200b8:	2d00      	cmp	r5, #0
 80200ba:	d07c      	beq.n	80201b6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 80200bc:	45ac      	cmp	ip, r5
 80200be:	d26c      	bcs.n	802019a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 80200c0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80200c2:	eba5 050c 	sub.w	r5, r5, ip
 80200c6:	455b      	cmp	r3, fp
 80200c8:	b2ad      	uxth	r5, r5
 80200ca:	4608      	mov	r0, r1
 80200cc:	d802      	bhi.n	80200d4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 80200ce:	e070      	b.n	80201b2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 80200d0:	2b00      	cmp	r3, #0
 80200d2:	d15c      	bne.n	802018e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 80200d4:	9b03      	ldr	r3, [sp, #12]
 80200d6:	9a02      	ldr	r2, [sp, #8]
 80200d8:	785b      	ldrb	r3, [r3, #1]
 80200da:	9902      	ldr	r1, [sp, #8]
 80200dc:	f1c2 0207 	rsb	r2, r2, #7
 80200e0:	4093      	lsls	r3, r2
 80200e2:	005b      	lsls	r3, r3, #1
 80200e4:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 80200e8:	9b03      	ldr	r3, [sp, #12]
 80200ea:	781b      	ldrb	r3, [r3, #0]
 80200ec:	410b      	asrs	r3, r1
 80200ee:	3101      	adds	r1, #1
 80200f0:	b2c9      	uxtb	r1, r1
 80200f2:	2908      	cmp	r1, #8
 80200f4:	9102      	str	r1, [sp, #8]
 80200f6:	9903      	ldr	r1, [sp, #12]
 80200f8:	bf0a      	itet	eq
 80200fa:	3102      	addeq	r1, #2
 80200fc:	3101      	addne	r1, #1
 80200fe:	9103      	streq	r1, [sp, #12]
 8020100:	b2db      	uxtb	r3, r3
 8020102:	bf0a      	itet	eq
 8020104:	2100      	moveq	r1, #0
 8020106:	9103      	strne	r1, [sp, #12]
 8020108:	9102      	streq	r1, [sp, #8]
 802010a:	4313      	orrs	r3, r2
 802010c:	9911      	ldr	r1, [sp, #68]	; 0x44
 802010e:	b29a      	uxth	r2, r3
 8020110:	4291      	cmp	r1, r2
 8020112:	d30a      	bcc.n	802012a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 8020114:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 8020118:	2301      	movs	r3, #1
 802011a:	9905      	ldr	r1, [sp, #20]
 802011c:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 8020120:	d30f      	bcc.n	8020142 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 8020122:	2100      	movs	r1, #0
 8020124:	4698      	mov	r8, r3
 8020126:	9100      	str	r1, [sp, #0]
 8020128:	e032      	b.n	8020190 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 802012a:	9b05      	ldr	r3, [sp, #20]
 802012c:	429a      	cmp	r2, r3
 802012e:	d318      	bcc.n	8020162 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 8020130:	eb04 0308 	add.w	r3, r4, r8
 8020134:	f894 1804 	ldrb.w	r1, [r4, #2052]	; 0x804
 8020138:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 802013c:	f108 0301 	add.w	r3, r8, #1
 8020140:	b29b      	uxth	r3, r3
 8020142:	9905      	ldr	r1, [sp, #20]
 8020144:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 8020148:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 802014c:	710e      	strb	r6, [r1, #4]
 802014e:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8020150:	80ce      	strh	r6, [r1, #6]
 8020152:	f108 0601 	add.w	r6, r8, #1
 8020156:	714e      	strb	r6, [r1, #5]
 8020158:	9905      	ldr	r1, [sp, #20]
 802015a:	3101      	adds	r1, #1
 802015c:	b289      	uxth	r1, r1
 802015e:	9105      	str	r1, [sp, #20]
 8020160:	e7df      	b.n	8020122 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 8020162:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8020166:	4611      	mov	r1, r2
 8020168:	795b      	ldrb	r3, [r3, #5]
 802016a:	f603 0604 	addw	r6, r3, #2052	; 0x804
 802016e:	4426      	add	r6, r4
 8020170:	9f19      	ldr	r7, [sp, #100]	; 0x64
 8020172:	4437      	add	r7, r6
 8020174:	2f00      	cmp	r7, #0
 8020176:	dd06      	ble.n	8020186 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 8020178:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 802017c:	790f      	ldrb	r7, [r1, #4]
 802017e:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8020182:	88c9      	ldrh	r1, [r1, #6]
 8020184:	e7f4      	b.n	8020170 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 8020186:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 802018a:	b29b      	uxth	r3, r3
 802018c:	e7c5      	b.n	802011a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 802018e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8020190:	920c      	str	r2, [sp, #48]	; 0x30
 8020192:	4601      	mov	r1, r0
 8020194:	9a00      	ldr	r2, [sp, #0]
 8020196:	469c      	mov	ip, r3
 8020198:	e78e      	b.n	80200b8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 802019a:	1957      	adds	r7, r2, r5
 802019c:	ebac 0305 	sub.w	r3, ip, r5
 80201a0:	b2ba      	uxth	r2, r7
 80201a2:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 80201a6:	9200      	str	r2, [sp, #0]
 80201a8:	b29b      	uxth	r3, r3
 80201aa:	2500      	movs	r5, #0
 80201ac:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80201ae:	455a      	cmp	r2, fp
 80201b0:	d88e      	bhi.n	80200d0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 80201b2:	4601      	mov	r1, r0
 80201b4:	e749      	b.n	802004a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 80201b6:	458c      	cmp	ip, r1
 80201b8:	bf2c      	ite	cs
 80201ba:	4628      	movcs	r0, r5
 80201bc:	462b      	movcc	r3, r5
 80201be:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80201c0:	bf27      	ittee	cs
 80201c2:	9109      	strcs	r1, [sp, #36]	; 0x24
 80201c4:	ebac 0301 	subcs.w	r3, ip, r1
 80201c8:	eba1 000c 	subcc.w	r0, r1, ip
 80201cc:	f8cd c024 	strcc.w	ip, [sp, #36]	; 0x24
 80201d0:	bf2c      	ite	cs
 80201d2:	b29b      	uxthcs	r3, r3
 80201d4:	b280      	uxthcc	r0, r0
 80201d6:	2dff      	cmp	r5, #255	; 0xff
 80201d8:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80201da:	eb02 0705 	add.w	r7, r2, r5
 80201de:	b2bd      	uxth	r5, r7
 80201e0:	9500      	str	r5, [sp, #0]
 80201e2:	d12f      	bne.n	8020244 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 80201e4:	465e      	mov	r6, fp
 80201e6:	9d00      	ldr	r5, [sp, #0]
 80201e8:	42aa      	cmp	r2, r5
 80201ea:	f040 8084 	bne.w	80202f6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 80201ee:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80201f0:	458c      	cmp	ip, r1
 80201f2:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 80201f6:	d3d8      	bcc.n	80201aa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 80201f8:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80201fa:	9904      	ldr	r1, [sp, #16]
 80201fc:	8812      	ldrh	r2, [r2, #0]
 80201fe:	1a52      	subs	r2, r2, r1
 8020200:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 8020204:	9a08      	ldr	r2, [sp, #32]
 8020206:	9916      	ldr	r1, [sp, #88]	; 0x58
 8020208:	3201      	adds	r2, #1
 802020a:	428a      	cmp	r2, r1
 802020c:	9208      	str	r2, [sp, #32]
 802020e:	f040 8092 	bne.w	8020336 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 8020212:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 8020216:	f8bd c068 	ldrh.w	ip, [sp, #104]	; 0x68
 802021a:	9b04      	ldr	r3, [sp, #16]
 802021c:	eba5 050c 	sub.w	r5, r5, ip
 8020220:	b2ad      	uxth	r5, r5
 8020222:	2d00      	cmp	r5, #0
 8020224:	bf08      	it	eq
 8020226:	4619      	moveq	r1, r3
 8020228:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802022a:	bf18      	it	ne
 802022c:	2100      	movne	r1, #0
 802022e:	3301      	adds	r3, #1
 8020230:	930d      	str	r3, [sp, #52]	; 0x34
 8020232:	b289      	uxth	r1, r1
 8020234:	e700      	b.n	8020038 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8020236:	bf00      	nop
 8020238:	2001384c 	.word	0x2001384c
 802023c:	20013846 	.word	0x20013846
 8020240:	fffff7fb 	.word	0xfffff7fb
 8020244:	46d9      	mov	r9, fp
 8020246:	9d00      	ldr	r5, [sp, #0]
 8020248:	42aa      	cmp	r2, r5
 802024a:	d0d0      	beq.n	80201ee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 802024c:	1c55      	adds	r5, r2, #1
 802024e:	4422      	add	r2, r4
 8020250:	9517      	str	r5, [sp, #92]	; 0x5c
 8020252:	f892 e804 	ldrb.w	lr, [r2, #2052]	; 0x804
 8020256:	9a06      	ldr	r2, [sp, #24]
 8020258:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 802025c:	4472      	add	r2, lr
 802025e:	9212      	str	r2, [sp, #72]	; 0x48
 8020260:	9f12      	ldr	r7, [sp, #72]	; 0x48
 8020262:	f8b9 2000 	ldrh.w	r2, [r9]
 8020266:	f897 a002 	ldrb.w	sl, [r7, #2]
 802026a:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 802026c:	1216      	asrs	r6, r2, #8
 802026e:	fb1a fa07 	smulbb	sl, sl, r7
 8020272:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8020276:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8020278:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 802027c:	fb06 a607 	mla	r6, r6, r7, sl
 8020280:	9f12      	ldr	r7, [sp, #72]	; 0x48
 8020282:	f897 a001 	ldrb.w	sl, [r7, #1]
 8020286:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 8020288:	10d5      	asrs	r5, r2, #3
 802028a:	fb1a fa07 	smulbb	sl, sl, r7
 802028e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8020292:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8020294:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8020298:	fb05 a507 	mla	r5, r5, r7, sl
 802029c:	9f06      	ldr	r7, [sp, #24]
 802029e:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80202a2:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 80202a4:	00d2      	lsls	r2, r2, #3
 80202a6:	fb1e fe07 	smulbb	lr, lr, r7
 80202aa:	b2d2      	uxtb	r2, r2
 80202ac:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 80202ae:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80202b2:	b2b6      	uxth	r6, r6
 80202b4:	fb02 e207 	mla	r2, r2, r7, lr
 80202b8:	b292      	uxth	r2, r2
 80202ba:	b2ad      	uxth	r5, r5
 80202bc:	f106 0a01 	add.w	sl, r6, #1
 80202c0:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 80202c4:	f102 0e01 	add.w	lr, r2, #1
 80202c8:	f105 0a01 	add.w	sl, r5, #1
 80202cc:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 80202d0:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80202d4:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 80202d8:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 80202dc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80202e0:	ea4e 0606 	orr.w	r6, lr, r6
 80202e4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80202e8:	ea46 060a 	orr.w	r6, r6, sl
 80202ec:	f829 6b02 	strh.w	r6, [r9], #2
 80202f0:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 80202f4:	e7a7      	b.n	8020246 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 80202f6:	f102 0e01 	add.w	lr, r2, #1
 80202fa:	4422      	add	r2, r4
 80202fc:	9f06      	ldr	r7, [sp, #24]
 80202fe:	f892 5804 	ldrb.w	r5, [r2, #2052]	; 0x804
 8020302:	9a06      	ldr	r2, [sp, #24]
 8020304:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8020308:	eb02 0a05 	add.w	sl, r2, r5
 802030c:	4a13      	ldr	r2, [pc, #76]	; (802035c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 802030e:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8020312:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 8020316:	f89a 2001 	ldrb.w	r2, [sl, #1]
 802031a:	00d2      	lsls	r2, r2, #3
 802031c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8020320:	ea49 0202 	orr.w	r2, r9, r2
 8020324:	f817 9005 	ldrb.w	r9, [r7, r5]
 8020328:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 802032c:	f826 2b02 	strh.w	r2, [r6], #2
 8020330:	fa1f f28e 	uxth.w	r2, lr
 8020334:	e757      	b.n	80201e6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 8020336:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 802033a:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 802033e:	1a2d      	subs	r5, r5, r0
 8020340:	b2ad      	uxth	r5, r5
 8020342:	2d00      	cmp	r5, #0
 8020344:	bf18      	it	ne
 8020346:	2000      	movne	r0, #0
 8020348:	e730      	b.n	80201ac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 802034a:	4b05      	ldr	r3, [pc, #20]	; (8020360 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 802034c:	6818      	ldr	r0, [r3, #0]
 802034e:	6803      	ldr	r3, [r0, #0]
 8020350:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8020352:	4798      	blx	r3
 8020354:	b01f      	add	sp, #124	; 0x7c
 8020356:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802035a:	bf00      	nop
 802035c:	fffff800 	.word	0xfffff800
 8020360:	2001384c 	.word	0x2001384c

08020364 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 8020364:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020368:	b091      	sub	sp, #68	; 0x44
 802036a:	469b      	mov	fp, r3
 802036c:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 8020370:	4616      	mov	r6, r2
 8020372:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 8020376:	f9b3 2000 	ldrsh.w	r2, [r3]
 802037a:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 802037e:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8020382:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8020386:	4604      	mov	r4, r0
 8020388:	460d      	mov	r5, r1
 802038a:	4640      	mov	r0, r8
 802038c:	4659      	mov	r1, fp
 802038e:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8020392:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 8020396:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 802039a:	f7f2 fb9f 	bl	8012adc <_ZN8touchgfx4RectaNERKS0_>
 802039e:	4631      	mov	r1, r6
 80203a0:	4640      	mov	r0, r8
 80203a2:	f7f2 fb9b 	bl	8012adc <_ZN8touchgfx4RectaNERKS0_>
 80203a6:	4b74      	ldr	r3, [pc, #464]	; (8020578 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 80203a8:	8818      	ldrh	r0, [r3, #0]
 80203aa:	4b74      	ldr	r3, [pc, #464]	; (802057c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 80203ac:	8819      	ldrh	r1, [r3, #0]
 80203ae:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 80203b2:	2b00      	cmp	r3, #0
 80203b4:	b202      	sxth	r2, r0
 80203b6:	b20e      	sxth	r6, r1
 80203b8:	da07      	bge.n	80203ca <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 80203ba:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 80203be:	4463      	add	r3, ip
 80203c0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80203c4:	2300      	movs	r3, #0
 80203c6:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80203ca:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 80203ce:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 80203d2:	1ad2      	subs	r2, r2, r3
 80203d4:	4594      	cmp	ip, r2
 80203d6:	bfc4      	itt	gt
 80203d8:	1ac2      	subgt	r2, r0, r3
 80203da:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 80203de:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 80203e2:	2a00      	cmp	r2, #0
 80203e4:	da07      	bge.n	80203f6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 80203e6:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 80203ea:	4462      	add	r2, ip
 80203ec:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 80203f0:	2200      	movs	r2, #0
 80203f2:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 80203f6:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 80203fa:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 80203fe:	eba6 060a 	sub.w	r6, r6, sl
 8020402:	42b2      	cmp	r2, r6
 8020404:	bfc4      	itt	gt
 8020406:	eba1 020a 	subgt.w	r2, r1, sl
 802040a:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 802040e:	4a5c      	ldr	r2, [pc, #368]	; (8020580 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 8020410:	7812      	ldrb	r2, [r2, #0]
 8020412:	b9a2      	cbnz	r2, 802043e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 8020414:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 8020418:	4286      	cmp	r6, r0
 802041a:	4640      	mov	r0, r8
 802041c:	9303      	str	r3, [sp, #12]
 802041e:	bf14      	ite	ne
 8020420:	2600      	movne	r6, #0
 8020422:	2601      	moveq	r6, #1
 8020424:	f7f2 fb9d 	bl	8012b62 <_ZNK8touchgfx4Rect7isEmptyEv>
 8020428:	9b03      	ldr	r3, [sp, #12]
 802042a:	b160      	cbz	r0, 8020446 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 802042c:	2300      	movs	r3, #0
 802042e:	8023      	strh	r3, [r4, #0]
 8020430:	8063      	strh	r3, [r4, #2]
 8020432:	80a3      	strh	r3, [r4, #4]
 8020434:	4620      	mov	r0, r4
 8020436:	80e3      	strh	r3, [r4, #6]
 8020438:	b011      	add	sp, #68	; 0x44
 802043a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802043e:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 8020442:	428e      	cmp	r6, r1
 8020444:	e7e9      	b.n	802041a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 8020446:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 802044a:	9205      	str	r2, [sp, #20]
 802044c:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 8020450:	9206      	str	r2, [sp, #24]
 8020452:	f8bb 2000 	ldrh.w	r2, [fp]
 8020456:	900e      	str	r0, [sp, #56]	; 0x38
 8020458:	1a9b      	subs	r3, r3, r2
 802045a:	b21b      	sxth	r3, r3
 802045c:	9303      	str	r3, [sp, #12]
 802045e:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8020462:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 8020466:	ebaa 0a03 	sub.w	sl, sl, r3
 802046a:	fa0f f38a 	sxth.w	r3, sl
 802046e:	9304      	str	r3, [sp, #16]
 8020470:	9b03      	ldr	r3, [sp, #12]
 8020472:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8020476:	9b04      	ldr	r3, [sp, #16]
 8020478:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 802047c:	9b05      	ldr	r3, [sp, #20]
 802047e:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8020482:	a90e      	add	r1, sp, #56	; 0x38
 8020484:	9b06      	ldr	r3, [sp, #24]
 8020486:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 802048a:	a80c      	add	r0, sp, #48	; 0x30
 802048c:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 8020490:	f7f8 f906 	bl	80186a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8020494:	4640      	mov	r0, r8
 8020496:	f7f8 f8bf 	bl	8018618 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802049a:	a80e      	add	r0, sp, #56	; 0x38
 802049c:	f7f8 f8bc 	bl	8018618 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80204a0:	4b38      	ldr	r3, [pc, #224]	; (8020584 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 80204a2:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 80204a6:	881b      	ldrh	r3, [r3, #0]
 80204a8:	9307      	str	r3, [sp, #28]
 80204aa:	682b      	ldr	r3, [r5, #0]
 80204ac:	f8df b0d8 	ldr.w	fp, [pc, #216]	; 8020588 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 80204b0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80204b2:	4628      	mov	r0, r5
 80204b4:	4798      	blx	r3
 80204b6:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 80204ba:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 80204be:	4681      	mov	r9, r0
 80204c0:	fb1a 3305 	smlabb	r3, sl, r5, r3
 80204c4:	f8db 0000 	ldr.w	r0, [fp]
 80204c8:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 80204ca:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 80204ce:	6803      	ldr	r3, [r0, #0]
 80204d0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80204d2:	4798      	blx	r3
 80204d4:	4607      	mov	r7, r0
 80204d6:	f8db 0000 	ldr.w	r0, [fp]
 80204da:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 80204de:	6803      	ldr	r3, [r0, #0]
 80204e0:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 80204e4:	9109      	str	r1, [sp, #36]	; 0x24
 80204e6:	9208      	str	r2, [sp, #32]
 80204e8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80204ea:	4798      	blx	r3
 80204ec:	f010 0f01 	tst.w	r0, #1
 80204f0:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 80204f4:	d012      	beq.n	802051c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 80204f6:	f8db 0000 	ldr.w	r0, [fp]
 80204fa:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 80204fe:	6803      	ldr	r3, [r0, #0]
 8020500:	9200      	str	r2, [sp, #0]
 8020502:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 8020504:	e898 0006 	ldmia.w	r8, {r1, r2}
 8020508:	462b      	mov	r3, r5
 802050a:	47b0      	blx	r6
 802050c:	9b03      	ldr	r3, [sp, #12]
 802050e:	8023      	strh	r3, [r4, #0]
 8020510:	9b04      	ldr	r3, [sp, #16]
 8020512:	8063      	strh	r3, [r4, #2]
 8020514:	9b05      	ldr	r3, [sp, #20]
 8020516:	80a3      	strh	r3, [r4, #4]
 8020518:	9b06      	ldr	r3, [sp, #24]
 802051a:	e78b      	b.n	8020434 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 802051c:	fb09 f202 	mul.w	r2, r9, r2
 8020520:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 8020524:	440f      	add	r7, r1
 8020526:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 802052a:	b166      	cbz	r6, 8020546 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 802052c:	9a07      	ldr	r2, [sp, #28]
 802052e:	4592      	cmp	sl, r2
 8020530:	d109      	bne.n	8020546 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 8020532:	f8db 0000 	ldr.w	r0, [fp]
 8020536:	6802      	ldr	r2, [r0, #0]
 8020538:	fb09 f303 	mul.w	r3, r9, r3
 802053c:	6b56      	ldr	r6, [r2, #52]	; 0x34
 802053e:	4629      	mov	r1, r5
 8020540:	463a      	mov	r2, r7
 8020542:	47b0      	blx	r6
 8020544:	e7e2      	b.n	802050c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 8020546:	fb0a f303 	mul.w	r3, sl, r3
 802054a:	f8df b03c 	ldr.w	fp, [pc, #60]	; 8020588 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 802054e:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 8020552:	ea4f 064a 	mov.w	r6, sl, lsl #1
 8020556:	4545      	cmp	r5, r8
 8020558:	d2d8      	bcs.n	802050c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 802055a:	f8db 0000 	ldr.w	r0, [fp]
 802055e:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8020562:	6802      	ldr	r2, [r0, #0]
 8020564:	4629      	mov	r1, r5
 8020566:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 802056a:	005b      	lsls	r3, r3, #1
 802056c:	463a      	mov	r2, r7
 802056e:	47d0      	blx	sl
 8020570:	444f      	add	r7, r9
 8020572:	4435      	add	r5, r6
 8020574:	e7ef      	b.n	8020556 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 8020576:	bf00      	nop
 8020578:	20013840 	.word	0x20013840
 802057c:	20013842 	.word	0x20013842
 8020580:	20013844 	.word	0x20013844
 8020584:	20013846 	.word	0x20013846
 8020588:	2001384c 	.word	0x2001384c

0802058c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 802058c:	b5f0      	push	{r4, r5, r6, r7, lr}
 802058e:	4606      	mov	r6, r0
 8020590:	b087      	sub	sp, #28
 8020592:	460c      	mov	r4, r1
 8020594:	4617      	mov	r7, r2
 8020596:	461d      	mov	r5, r3
 8020598:	b333      	cbz	r3, 80205e8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 802059a:	4608      	mov	r0, r1
 802059c:	f7f2 fae1 	bl	8012b62 <_ZNK8touchgfx4Rect7isEmptyEv>
 80205a0:	bb10      	cbnz	r0, 80205e8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 80205a2:	6820      	ldr	r0, [r4, #0]
 80205a4:	6861      	ldr	r1, [r4, #4]
 80205a6:	4c1c      	ldr	r4, [pc, #112]	; (8020618 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 80205a8:	ab04      	add	r3, sp, #16
 80205aa:	c303      	stmia	r3!, {r0, r1}
 80205ac:	a804      	add	r0, sp, #16
 80205ae:	f7f8 f833 	bl	8018618 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80205b2:	6820      	ldr	r0, [r4, #0]
 80205b4:	6803      	ldr	r3, [r0, #0]
 80205b6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80205b8:	4798      	blx	r3
 80205ba:	2dff      	cmp	r5, #255	; 0xff
 80205bc:	d016      	beq.n	80205ec <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 80205be:	f010 0f08 	tst.w	r0, #8
 80205c2:	6820      	ldr	r0, [r4, #0]
 80205c4:	d015      	beq.n	80205f2 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 80205c6:	2400      	movs	r4, #0
 80205c8:	6801      	ldr	r1, [r0, #0]
 80205ca:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80205ce:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80205d2:	e9cd 5402 	strd	r5, r4, [sp, #8]
 80205d6:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 80205da:	9401      	str	r4, [sp, #4]
 80205dc:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 80205e0:	9400      	str	r4, [sp, #0]
 80205e2:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 80205e4:	4639      	mov	r1, r7
 80205e6:	47a0      	blx	r4
 80205e8:	b007      	add	sp, #28
 80205ea:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80205ec:	f010 0f02 	tst.w	r0, #2
 80205f0:	e7e7      	b.n	80205c2 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 80205f2:	6803      	ldr	r3, [r0, #0]
 80205f4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80205f6:	4798      	blx	r3
 80205f8:	4b08      	ldr	r3, [pc, #32]	; (802061c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 80205fa:	881a      	ldrh	r2, [r3, #0]
 80205fc:	6833      	ldr	r3, [r6, #0]
 80205fe:	e9cd 7500 	strd	r7, r5, [sp]
 8020602:	4601      	mov	r1, r0
 8020604:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 8020606:	4630      	mov	r0, r6
 8020608:	ab04      	add	r3, sp, #16
 802060a:	47a8      	blx	r5
 802060c:	6820      	ldr	r0, [r4, #0]
 802060e:	6803      	ldr	r3, [r0, #0]
 8020610:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8020612:	4798      	blx	r3
 8020614:	e7e8      	b.n	80205e8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8020616:	bf00      	nop
 8020618:	2001384c 	.word	0x2001384c
 802061c:	20013846 	.word	0x20013846

08020620 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 8020620:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8020624:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 8020628:	9e08      	ldr	r6, [sp, #32]
 802062a:	4688      	mov	r8, r1
 802062c:	4614      	mov	r4, r2
 802062e:	461d      	mov	r5, r3
 8020630:	2f00      	cmp	r7, #0
 8020632:	f000 80a9 	beq.w	8020788 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8020636:	4618      	mov	r0, r3
 8020638:	f7f2 fa93 	bl	8012b62 <_ZNK8touchgfx4Rect7isEmptyEv>
 802063c:	2800      	cmp	r0, #0
 802063e:	f040 80a3 	bne.w	8020788 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8020642:	f9b5 1000 	ldrsh.w	r1, [r5]
 8020646:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 802064a:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 802064e:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 8020652:	fb04 1303 	mla	r3, r4, r3, r1
 8020656:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 802065a:	4365      	muls	r5, r4
 802065c:	2fff      	cmp	r7, #255	; 0xff
 802065e:	eba4 0200 	sub.w	r2, r4, r0
 8020662:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 8020666:	ea4f 2816 	mov.w	r8, r6, lsr #8
 802066a:	d04a      	beq.n	8020702 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 802066c:	b2bc      	uxth	r4, r7
 802066e:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 8020672:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 8020676:	fa5f f788 	uxtb.w	r7, r8
 802067a:	b2f3      	uxtb	r3, r6
 802067c:	0040      	lsls	r0, r0, #1
 802067e:	fb0e fe04 	mul.w	lr, lr, r4
 8020682:	4367      	muls	r7, r4
 8020684:	4363      	muls	r3, r4
 8020686:	ea4f 0842 	mov.w	r8, r2, lsl #1
 802068a:	fa1f fc8c 	uxth.w	ip, ip
 802068e:	42a9      	cmp	r1, r5
 8020690:	d27a      	bcs.n	8020788 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8020692:	eb01 0900 	add.w	r9, r1, r0
 8020696:	4549      	cmp	r1, r9
 8020698:	d231      	bcs.n	80206fe <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 802069a:	880a      	ldrh	r2, [r1, #0]
 802069c:	1214      	asrs	r4, r2, #8
 802069e:	10d6      	asrs	r6, r2, #3
 80206a0:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80206a4:	00d2      	lsls	r2, r2, #3
 80206a6:	b2d2      	uxtb	r2, r2
 80206a8:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80206ac:	fb14 f40c 	smulbb	r4, r4, ip
 80206b0:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80206b4:	4474      	add	r4, lr
 80206b6:	fb12 f20c 	smulbb	r2, r2, ip
 80206ba:	b2a4      	uxth	r4, r4
 80206bc:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80206c0:	441a      	add	r2, r3
 80206c2:	b292      	uxth	r2, r2
 80206c4:	f104 0a01 	add.w	sl, r4, #1
 80206c8:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 80206cc:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 80206d0:	fb16 f60c 	smulbb	r6, r6, ip
 80206d4:	f102 0a01 	add.w	sl, r2, #1
 80206d8:	443e      	add	r6, r7
 80206da:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 80206de:	b2b6      	uxth	r6, r6
 80206e0:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 80206e4:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80206e8:	4322      	orrs	r2, r4
 80206ea:	1c74      	adds	r4, r6, #1
 80206ec:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 80206f0:	0976      	lsrs	r6, r6, #5
 80206f2:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80206f6:	4332      	orrs	r2, r6
 80206f8:	f821 2b02 	strh.w	r2, [r1], #2
 80206fc:	e7cb      	b.n	8020696 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 80206fe:	4441      	add	r1, r8
 8020700:	e7c5      	b.n	802068e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 8020702:	4f22      	ldr	r7, [pc, #136]	; (802078c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 8020704:	0973      	lsrs	r3, r6, #5
 8020706:	ea08 0707 	and.w	r7, r8, r7
 802070a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802070e:	433b      	orrs	r3, r7
 8020710:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8020714:	4333      	orrs	r3, r6
 8020716:	07e7      	lsls	r7, r4, #31
 8020718:	b29b      	uxth	r3, r3
 802071a:	d50b      	bpl.n	8020734 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 802071c:	0040      	lsls	r0, r0, #1
 802071e:	0052      	lsls	r2, r2, #1
 8020720:	42a9      	cmp	r1, r5
 8020722:	d231      	bcs.n	8020788 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8020724:	180c      	adds	r4, r1, r0
 8020726:	42a1      	cmp	r1, r4
 8020728:	d202      	bcs.n	8020730 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 802072a:	f821 3b02 	strh.w	r3, [r1], #2
 802072e:	e7fa      	b.n	8020726 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 8020730:	4411      	add	r1, r2
 8020732:	e7f5      	b.n	8020720 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 8020734:	078e      	lsls	r6, r1, #30
 8020736:	d008      	beq.n	802074a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 8020738:	0066      	lsls	r6, r4, #1
 802073a:	460a      	mov	r2, r1
 802073c:	42aa      	cmp	r2, r5
 802073e:	d202      	bcs.n	8020746 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 8020740:	8013      	strh	r3, [r2, #0]
 8020742:	4432      	add	r2, r6
 8020744:	e7fa      	b.n	802073c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 8020746:	3102      	adds	r1, #2
 8020748:	3801      	subs	r0, #1
 802074a:	07c2      	lsls	r2, r0, #31
 802074c:	d50b      	bpl.n	8020766 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 802074e:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 8020752:	3a01      	subs	r2, #1
 8020754:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 8020758:	0066      	lsls	r6, r4, #1
 802075a:	42aa      	cmp	r2, r5
 802075c:	d202      	bcs.n	8020764 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 802075e:	8013      	strh	r3, [r2, #0]
 8020760:	4432      	add	r2, r6
 8020762:	e7fa      	b.n	802075a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 8020764:	3801      	subs	r0, #1
 8020766:	b178      	cbz	r0, 8020788 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8020768:	1040      	asrs	r0, r0, #1
 802076a:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 802076e:	0080      	lsls	r0, r0, #2
 8020770:	0064      	lsls	r4, r4, #1
 8020772:	42a9      	cmp	r1, r5
 8020774:	d208      	bcs.n	8020788 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8020776:	180e      	adds	r6, r1, r0
 8020778:	460a      	mov	r2, r1
 802077a:	42b2      	cmp	r2, r6
 802077c:	d202      	bcs.n	8020784 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 802077e:	f842 3b04 	str.w	r3, [r2], #4
 8020782:	e7fa      	b.n	802077a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 8020784:	4421      	add	r1, r4
 8020786:	e7f4      	b.n	8020772 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 8020788:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802078c:	00fff800 	.word	0x00fff800

08020790 <_ZN8touchgfx8LCD16bppC1Ev>:
 8020790:	2200      	movs	r2, #0
 8020792:	4912      	ldr	r1, [pc, #72]	; (80207dc <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 8020794:	6042      	str	r2, [r0, #4]
 8020796:	6001      	str	r1, [r0, #0]
 8020798:	e9c0 2202 	strd	r2, r2, [r0, #8]
 802079c:	e9c0 2204 	strd	r2, r2, [r0, #16]
 80207a0:	e9c0 2206 	strd	r2, r2, [r0, #24]
 80207a4:	e9c0 2208 	strd	r2, r2, [r0, #32]
 80207a8:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 80207ac:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 80207b0:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 80207b4:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 80207b8:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 80207bc:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 80207c0:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 80207c4:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 80207c8:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 80207cc:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 80207d0:	e9c0 221e 	strd	r2, r2, [r0, #120]	; 0x78
 80207d4:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 80207d8:	4770      	bx	lr
 80207da:	bf00      	nop
 80207dc:	080320f4 	.word	0x080320f4

080207e0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 80207e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80207e4:	460d      	mov	r5, r1
 80207e6:	b08d      	sub	sp, #52	; 0x34
 80207e8:	4604      	mov	r4, r0
 80207ea:	6808      	ldr	r0, [r1, #0]
 80207ec:	6849      	ldr	r1, [r1, #4]
 80207ee:	4699      	mov	r9, r3
 80207f0:	ab08      	add	r3, sp, #32
 80207f2:	c303      	stmia	r3!, {r0, r1}
 80207f4:	6810      	ldr	r0, [r2, #0]
 80207f6:	6851      	ldr	r1, [r2, #4]
 80207f8:	ab0a      	add	r3, sp, #40	; 0x28
 80207fa:	c303      	stmia	r3!, {r0, r1}
 80207fc:	a808      	add	r0, sp, #32
 80207fe:	f7f7 ff0b 	bl	8018618 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020802:	4629      	mov	r1, r5
 8020804:	a80a      	add	r0, sp, #40	; 0x28
 8020806:	f7f7 ff4b 	bl	80186a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802080a:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 802080e:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 8020812:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 8020816:	4d63      	ldr	r5, [pc, #396]	; (80209a4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8020818:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 802081c:	6828      	ldr	r0, [r5, #0]
 802081e:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 8020822:	fb11 2103 	smlabb	r1, r1, r3, r2
 8020826:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 802082a:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 802082e:	440a      	add	r2, r1
 8020830:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8020834:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8020838:	4413      	add	r3, r2
 802083a:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 802083e:	6803      	ldr	r3, [r0, #0]
 8020840:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8020842:	4798      	blx	r3
 8020844:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8020848:	d119      	bne.n	802087e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 802084a:	f010 0f20 	tst.w	r0, #32
 802084e:	6828      	ldr	r0, [r5, #0]
 8020850:	d018      	beq.n	8020884 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 8020852:	2500      	movs	r5, #0
 8020854:	6801      	ldr	r1, [r0, #0]
 8020856:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 802085a:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 802085e:	e9cd 9503 	strd	r9, r5, [sp, #12]
 8020862:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 8020866:	9502      	str	r5, [sp, #8]
 8020868:	b2b6      	uxth	r6, r6
 802086a:	fa1f f588 	uxth.w	r5, r8
 802086e:	9601      	str	r6, [sp, #4]
 8020870:	9500      	str	r5, [sp, #0]
 8020872:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 8020874:	4621      	mov	r1, r4
 8020876:	47a8      	blx	r5
 8020878:	b00d      	add	sp, #52	; 0x34
 802087a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802087e:	f010 0f40 	tst.w	r0, #64	; 0x40
 8020882:	e7e4      	b.n	802084e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 8020884:	6803      	ldr	r3, [r0, #0]
 8020886:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8020888:	4798      	blx	r3
 802088a:	4947      	ldr	r1, [pc, #284]	; (80209a8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 802088c:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8020890:	880b      	ldrh	r3, [r1, #0]
 8020892:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 8020896:	fb03 5202 	mla	r2, r3, r2, r5
 802089a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 802089e:	4373      	muls	r3, r6
 80208a0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80208a4:	9307      	str	r3, [sp, #28]
 80208a6:	ea4f 0348 	mov.w	r3, r8, lsl #1
 80208aa:	9306      	str	r3, [sp, #24]
 80208ac:	468a      	mov	sl, r1
 80208ae:	9b07      	ldr	r3, [sp, #28]
 80208b0:	4298      	cmp	r0, r3
 80208b2:	d270      	bcs.n	8020996 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 80208b4:	9b06      	ldr	r3, [sp, #24]
 80208b6:	4621      	mov	r1, r4
 80208b8:	eb00 0b03 	add.w	fp, r0, r3
 80208bc:	4558      	cmp	r0, fp
 80208be:	d25d      	bcs.n	802097c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 80208c0:	f851 4b04 	ldr.w	r4, [r1], #4
 80208c4:	0e23      	lsrs	r3, r4, #24
 80208c6:	d014      	beq.n	80208f2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 80208c8:	2bff      	cmp	r3, #255	; 0xff
 80208ca:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 80208ce:	d112      	bne.n	80208f6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 80208d0:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80208d4:	d10f      	bne.n	80208f6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 80208d6:	0963      	lsrs	r3, r4, #5
 80208d8:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 80208dc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80208e0:	f02c 0c07 	bic.w	ip, ip, #7
 80208e4:	ea43 0c0c 	orr.w	ip, r3, ip
 80208e8:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80208ec:	ea4c 0404 	orr.w	r4, ip, r4
 80208f0:	8004      	strh	r4, [r0, #0]
 80208f2:	3002      	adds	r0, #2
 80208f4:	e7e2      	b.n	80208bc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 80208f6:	fb09 f303 	mul.w	r3, r9, r3
 80208fa:	8807      	ldrh	r7, [r0, #0]
 80208fc:	1c5a      	adds	r2, r3, #1
 80208fe:	eb02 2223 	add.w	r2, r2, r3, asr #8
 8020902:	1212      	asrs	r2, r2, #8
 8020904:	123e      	asrs	r6, r7, #8
 8020906:	b293      	uxth	r3, r2
 8020908:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 802090c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8020910:	43d2      	mvns	r2, r2
 8020912:	b2d2      	uxtb	r2, r2
 8020914:	10fd      	asrs	r5, r7, #3
 8020916:	fb1e fe03 	smulbb	lr, lr, r3
 802091a:	00ff      	lsls	r7, r7, #3
 802091c:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8020920:	fb06 e602 	mla	r6, r6, r2, lr
 8020924:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8020928:	b2ff      	uxtb	r7, r7
 802092a:	fa5f fc8c 	uxtb.w	ip, ip
 802092e:	b2e4      	uxtb	r4, r4
 8020930:	b2b6      	uxth	r6, r6
 8020932:	fb1c fc03 	smulbb	ip, ip, r3
 8020936:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 802093a:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 802093e:	fb14 f403 	smulbb	r4, r4, r3
 8020942:	fb05 c502 	mla	r5, r5, r2, ip
 8020946:	f106 0e01 	add.w	lr, r6, #1
 802094a:	fb07 4702 	mla	r7, r7, r2, r4
 802094e:	b2ad      	uxth	r5, r5
 8020950:	b2bf      	uxth	r7, r7
 8020952:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 8020956:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 802095a:	f105 0c01 	add.w	ip, r5, #1
 802095e:	1c7e      	adds	r6, r7, #1
 8020960:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8020964:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8020968:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 802096c:	096d      	lsrs	r5, r5, #5
 802096e:	ea46 060e 	orr.w	r6, r6, lr
 8020972:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8020976:	432e      	orrs	r6, r5
 8020978:	8006      	strh	r6, [r0, #0]
 802097a:	e7ba      	b.n	80208f2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 802097c:	f8ba 3000 	ldrh.w	r3, [sl]
 8020980:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 8020984:	eba3 0308 	sub.w	r3, r3, r8
 8020988:	eba4 0408 	sub.w	r4, r4, r8
 802098c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8020990:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 8020994:	e78b      	b.n	80208ae <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 8020996:	4b03      	ldr	r3, [pc, #12]	; (80209a4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8020998:	6818      	ldr	r0, [r3, #0]
 802099a:	6803      	ldr	r3, [r0, #0]
 802099c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802099e:	4798      	blx	r3
 80209a0:	e76a      	b.n	8020878 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 80209a2:	bf00      	nop
 80209a4:	2001384c 	.word	0x2001384c
 80209a8:	20013846 	.word	0x20013846

080209ac <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 80209ac:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80209b0:	460c      	mov	r4, r1
 80209b2:	b085      	sub	sp, #20
 80209b4:	6810      	ldr	r0, [r2, #0]
 80209b6:	6851      	ldr	r1, [r2, #4]
 80209b8:	466d      	mov	r5, sp
 80209ba:	c503      	stmia	r5!, {r0, r1}
 80209bc:	6818      	ldr	r0, [r3, #0]
 80209be:	6859      	ldr	r1, [r3, #4]
 80209c0:	4616      	mov	r6, r2
 80209c2:	c503      	stmia	r5!, {r0, r1}
 80209c4:	4668      	mov	r0, sp
 80209c6:	f7f7 fe27 	bl	8018618 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80209ca:	4631      	mov	r1, r6
 80209cc:	a802      	add	r0, sp, #8
 80209ce:	f7f7 fe67 	bl	80186a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80209d2:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 80209d6:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 80209da:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 80209de:	4d28      	ldr	r5, [pc, #160]	; (8020a80 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 80209e0:	4e28      	ldr	r6, [pc, #160]	; (8020a84 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 80209e2:	6828      	ldr	r0, [r5, #0]
 80209e4:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 80209e8:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 80209ec:	fb11 2103 	smlabb	r1, r1, r3, r2
 80209f0:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 80209f4:	f8bd 1000 	ldrh.w	r1, [sp]
 80209f8:	440a      	add	r2, r1
 80209fa:	f8ad 2008 	strh.w	r2, [sp, #8]
 80209fe:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8020a02:	4413      	add	r3, r2
 8020a04:	f8ad 300a 	strh.w	r3, [sp, #10]
 8020a08:	6803      	ldr	r3, [r0, #0]
 8020a0a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8020a0c:	4798      	blx	r3
 8020a0e:	8833      	ldrh	r3, [r6, #0]
 8020a10:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 8020a14:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8020a18:	f8df e06c 	ldr.w	lr, [pc, #108]	; 8020a88 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 8020a1c:	fb03 1202 	mla	r2, r3, r2, r1
 8020a20:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8020a24:	fb08 f303 	mul.w	r3, r8, r3
 8020a28:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8020a2c:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 8020a30:	4298      	cmp	r0, r3
 8020a32:	d21d      	bcs.n	8020a70 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 8020a34:	eb00 080c 	add.w	r8, r0, ip
 8020a38:	4540      	cmp	r0, r8
 8020a3a:	d20f      	bcs.n	8020a5c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 8020a3c:	f854 1b04 	ldr.w	r1, [r4], #4
 8020a40:	ea4f 1951 	mov.w	r9, r1, lsr #5
 8020a44:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 8020a48:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8020a4c:	ea42 0209 	orr.w	r2, r2, r9
 8020a50:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8020a54:	430a      	orrs	r2, r1
 8020a56:	f820 2b02 	strh.w	r2, [r0], #2
 8020a5a:	e7ed      	b.n	8020a38 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 8020a5c:	8832      	ldrh	r2, [r6, #0]
 8020a5e:	1bd2      	subs	r2, r2, r7
 8020a60:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8020a64:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 8020a68:	1bd2      	subs	r2, r2, r7
 8020a6a:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 8020a6e:	e7df      	b.n	8020a30 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 8020a70:	6828      	ldr	r0, [r5, #0]
 8020a72:	6803      	ldr	r3, [r0, #0]
 8020a74:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8020a76:	4798      	blx	r3
 8020a78:	b005      	add	sp, #20
 8020a7a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8020a7e:	bf00      	nop
 8020a80:	2001384c 	.word	0x2001384c
 8020a84:	20013846 	.word	0x20013846
 8020a88:	fffff800 	.word	0xfffff800

08020a8c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 8020a8c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8020a90:	460e      	mov	r6, r1
 8020a92:	b08e      	sub	sp, #56	; 0x38
 8020a94:	4604      	mov	r4, r0
 8020a96:	6808      	ldr	r0, [r1, #0]
 8020a98:	6849      	ldr	r1, [r1, #4]
 8020a9a:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 8020c74 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 8020a9e:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 8020c78 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 8020aa2:	461d      	mov	r5, r3
 8020aa4:	ab0a      	add	r3, sp, #40	; 0x28
 8020aa6:	c303      	stmia	r3!, {r0, r1}
 8020aa8:	6810      	ldr	r0, [r2, #0]
 8020aaa:	6851      	ldr	r1, [r2, #4]
 8020aac:	ab0c      	add	r3, sp, #48	; 0x30
 8020aae:	c303      	stmia	r3!, {r0, r1}
 8020ab0:	a80a      	add	r0, sp, #40	; 0x28
 8020ab2:	f7f7 fdb1 	bl	8018618 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020ab6:	4631      	mov	r1, r6
 8020ab8:	a80c      	add	r0, sp, #48	; 0x30
 8020aba:	f7f7 fdf1 	bl	80186a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8020abe:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8020ac2:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8020ac6:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8020aca:	f8d8 0000 	ldr.w	r0, [r8]
 8020ace:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 8020ad2:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 8020ad6:	fb11 2103 	smlabb	r1, r1, r3, r2
 8020ada:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8020ade:	440c      	add	r4, r1
 8020ae0:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 8020ae4:	440a      	add	r2, r1
 8020ae6:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8020aea:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 8020aee:	4413      	add	r3, r2
 8020af0:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8020af4:	6803      	ldr	r3, [r0, #0]
 8020af6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8020af8:	4798      	blx	r3
 8020afa:	2dff      	cmp	r5, #255	; 0xff
 8020afc:	d124      	bne.n	8020b48 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 8020afe:	f010 0f01 	tst.w	r0, #1
 8020b02:	f8d8 0000 	ldr.w	r0, [r8]
 8020b06:	d022      	beq.n	8020b4e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 8020b08:	2100      	movs	r1, #0
 8020b0a:	f8d0 c000 	ldr.w	ip, [r0]
 8020b0e:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8020b12:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 8020b16:	e9cd 1107 	strd	r1, r1, [sp, #28]
 8020b1a:	f04f 0e01 	mov.w	lr, #1
 8020b1e:	f8cd e018 	str.w	lr, [sp, #24]
 8020b22:	f8b9 e000 	ldrh.w	lr, [r9]
 8020b26:	9503      	str	r5, [sp, #12]
 8020b28:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 8020b2c:	b2b6      	uxth	r6, r6
 8020b2e:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8020b32:	9102      	str	r1, [sp, #8]
 8020b34:	b2bf      	uxth	r7, r7
 8020b36:	9601      	str	r6, [sp, #4]
 8020b38:	9700      	str	r7, [sp, #0]
 8020b3a:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 8020b3e:	4621      	mov	r1, r4
 8020b40:	47a8      	blx	r5
 8020b42:	b00e      	add	sp, #56	; 0x38
 8020b44:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8020b48:	f010 0f04 	tst.w	r0, #4
 8020b4c:	e7d9      	b.n	8020b02 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 8020b4e:	6803      	ldr	r3, [r0, #0]
 8020b50:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8020b52:	4798      	blx	r3
 8020b54:	f8b9 3000 	ldrh.w	r3, [r9]
 8020b58:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 8020b5c:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 8020b60:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 8020b64:	fb03 1202 	mla	r2, r3, r2, r1
 8020b68:	ebac 0c07 	sub.w	ip, ip, r7
 8020b6c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8020b70:	435e      	muls	r6, r3
 8020b72:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 8020b76:	2dff      	cmp	r5, #255	; 0xff
 8020b78:	eba3 0707 	sub.w	r7, r3, r7
 8020b7c:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8020b80:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8020b84:	ea4f 0747 	mov.w	r7, r7, lsl #1
 8020b88:	d049      	beq.n	8020c1e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 8020b8a:	43eb      	mvns	r3, r5
 8020b8c:	fa1f f985 	uxth.w	r9, r5
 8020b90:	b2db      	uxtb	r3, r3
 8020b92:	42b0      	cmp	r0, r6
 8020b94:	d266      	bcs.n	8020c64 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8020b96:	eb00 0a0e 	add.w	sl, r0, lr
 8020b9a:	4550      	cmp	r0, sl
 8020b9c:	4621      	mov	r1, r4
 8020b9e:	f104 0403 	add.w	r4, r4, #3
 8020ba2:	d25b      	bcs.n	8020c5c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 8020ba4:	8802      	ldrh	r2, [r0, #0]
 8020ba6:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8020baa:	ea4f 2822 	mov.w	r8, r2, asr #8
 8020bae:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 8020bb2:	fb11 f109 	smulbb	r1, r1, r9
 8020bb6:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 8020bba:	10d5      	asrs	r5, r2, #3
 8020bbc:	fb08 1803 	mla	r8, r8, r3, r1
 8020bc0:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 8020bc4:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8020bc8:	fb11 f109 	smulbb	r1, r1, r9
 8020bcc:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8020bd0:	fb05 1503 	mla	r5, r5, r3, r1
 8020bd4:	00d2      	lsls	r2, r2, #3
 8020bd6:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8020bda:	b2d2      	uxtb	r2, r2
 8020bdc:	fb11 f109 	smulbb	r1, r1, r9
 8020be0:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8020be4:	fa1f f888 	uxth.w	r8, r8
 8020be8:	fb02 1203 	mla	r2, r2, r3, r1
 8020bec:	b292      	uxth	r2, r2
 8020bee:	f108 0101 	add.w	r1, r8, #1
 8020bf2:	b2ad      	uxth	r5, r5
 8020bf4:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 8020bf8:	1c51      	adds	r1, r2, #1
 8020bfa:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8020bfe:	1c69      	adds	r1, r5, #1
 8020c00:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8020c04:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 8020c08:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8020c0c:	096d      	lsrs	r5, r5, #5
 8020c0e:	ea42 0208 	orr.w	r2, r2, r8
 8020c12:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8020c16:	432a      	orrs	r2, r5
 8020c18:	f820 2b02 	strh.w	r2, [r0], #2
 8020c1c:	e7bd      	b.n	8020b9a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 8020c1e:	4a14      	ldr	r2, [pc, #80]	; (8020c70 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 8020c20:	42b0      	cmp	r0, r6
 8020c22:	d21f      	bcs.n	8020c64 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8020c24:	eb00 050e 	add.w	r5, r0, lr
 8020c28:	42a8      	cmp	r0, r5
 8020c2a:	4621      	mov	r1, r4
 8020c2c:	f104 0403 	add.w	r4, r4, #3
 8020c30:	d210      	bcs.n	8020c54 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 8020c32:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 8020c36:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8020c3a:	00db      	lsls	r3, r3, #3
 8020c3c:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 8020c40:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020c44:	430b      	orrs	r3, r1
 8020c46:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8020c4a:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 8020c4e:	f820 3b02 	strh.w	r3, [r0], #2
 8020c52:	e7e9      	b.n	8020c28 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 8020c54:	4438      	add	r0, r7
 8020c56:	eb01 040c 	add.w	r4, r1, ip
 8020c5a:	e7e1      	b.n	8020c20 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 8020c5c:	4438      	add	r0, r7
 8020c5e:	eb01 040c 	add.w	r4, r1, ip
 8020c62:	e796      	b.n	8020b92 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 8020c64:	4b03      	ldr	r3, [pc, #12]	; (8020c74 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 8020c66:	6818      	ldr	r0, [r3, #0]
 8020c68:	6803      	ldr	r3, [r0, #0]
 8020c6a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8020c6c:	4798      	blx	r3
 8020c6e:	e768      	b.n	8020b42 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 8020c70:	fffff800 	.word	0xfffff800
 8020c74:	2001384c 	.word	0x2001384c
 8020c78:	20013846 	.word	0x20013846

08020c7c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 8020c7c:	b4f0      	push	{r4, r5, r6, r7}
 8020c7e:	4616      	mov	r6, r2
 8020c80:	2e01      	cmp	r6, #1
 8020c82:	461c      	mov	r4, r3
 8020c84:	460d      	mov	r5, r1
 8020c86:	9a04      	ldr	r2, [sp, #16]
 8020c88:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8020c8c:	f89d 7018 	ldrb.w	r7, [sp, #24]
 8020c90:	d012      	beq.n	8020cb8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 8020c92:	d303      	bcc.n	8020c9c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 8020c94:	2e02      	cmp	r6, #2
 8020c96:	d00a      	beq.n	8020cae <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 8020c98:	bcf0      	pop	{r4, r5, r6, r7}
 8020c9a:	4770      	bx	lr
 8020c9c:	6805      	ldr	r5, [r0, #0]
 8020c9e:	e9cd 3704 	strd	r3, r7, [sp, #16]
 8020ca2:	68ed      	ldr	r5, [r5, #12]
 8020ca4:	4613      	mov	r3, r2
 8020ca6:	46ac      	mov	ip, r5
 8020ca8:	4622      	mov	r2, r4
 8020caa:	bcf0      	pop	{r4, r5, r6, r7}
 8020cac:	4760      	bx	ip
 8020cae:	4621      	mov	r1, r4
 8020cb0:	4628      	mov	r0, r5
 8020cb2:	bcf0      	pop	{r4, r5, r6, r7}
 8020cb4:	f7ff bd94 	b.w	80207e0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8020cb8:	4621      	mov	r1, r4
 8020cba:	4628      	mov	r0, r5
 8020cbc:	bcf0      	pop	{r4, r5, r6, r7}
 8020cbe:	f7ff bee5 	b.w	8020a8c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

08020cc4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 8020cc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020cc8:	4681      	mov	r9, r0
 8020cca:	b093      	sub	sp, #76	; 0x4c
 8020ccc:	6810      	ldr	r0, [r2, #0]
 8020cce:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 8020cd2:	4f6d      	ldr	r7, [pc, #436]	; (8020e88 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 8020cd4:	4688      	mov	r8, r1
 8020cd6:	6851      	ldr	r1, [r2, #4]
 8020cd8:	ac0e      	add	r4, sp, #56	; 0x38
 8020cda:	c403      	stmia	r4!, {r0, r1}
 8020cdc:	6818      	ldr	r0, [r3, #0]
 8020cde:	6859      	ldr	r1, [r3, #4]
 8020ce0:	ac10      	add	r4, sp, #64	; 0x40
 8020ce2:	4616      	mov	r6, r2
 8020ce4:	c403      	stmia	r4!, {r0, r1}
 8020ce6:	a80e      	add	r0, sp, #56	; 0x38
 8020ce8:	f7f7 fc96 	bl	8018618 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020cec:	4631      	mov	r1, r6
 8020cee:	a810      	add	r0, sp, #64	; 0x40
 8020cf0:	f7f7 fcd6 	bl	80186a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8020cf4:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8020cf8:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 8020cfc:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 8020d00:	4e62      	ldr	r6, [pc, #392]	; (8020e8c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8020d02:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 8020d06:	6830      	ldr	r0, [r6, #0]
 8020d08:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 8020d0c:	fb11 2103 	smlabb	r1, r1, r3, r2
 8020d10:	4489      	add	r9, r1
 8020d12:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 8020d16:	440a      	add	r2, r1
 8020d18:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8020d1c:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8020d20:	4413      	add	r3, r2
 8020d22:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8020d26:	6803      	ldr	r3, [r0, #0]
 8020d28:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8020d2a:	4798      	blx	r3
 8020d2c:	f010 0f80 	tst.w	r0, #128	; 0x80
 8020d30:	6830      	ldr	r0, [r6, #0]
 8020d32:	d01d      	beq.n	8020d70 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 8020d34:	2200      	movs	r2, #0
 8020d36:	6801      	ldr	r1, [r0, #0]
 8020d38:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8020d3c:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8020d40:	220b      	movs	r2, #11
 8020d42:	9207      	str	r2, [sp, #28]
 8020d44:	883a      	ldrh	r2, [r7, #0]
 8020d46:	9206      	str	r2, [sp, #24]
 8020d48:	2201      	movs	r2, #1
 8020d4a:	e9cd a204 	strd	sl, r2, [sp, #16]
 8020d4e:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 8020d52:	9203      	str	r2, [sp, #12]
 8020d54:	b2a4      	uxth	r4, r4
 8020d56:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 8020d5a:	9200      	str	r2, [sp, #0]
 8020d5c:	b2ad      	uxth	r5, r5
 8020d5e:	9502      	str	r5, [sp, #8]
 8020d60:	9401      	str	r4, [sp, #4]
 8020d62:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 8020d64:	4642      	mov	r2, r8
 8020d66:	4649      	mov	r1, r9
 8020d68:	47a0      	blx	r4
 8020d6a:	b013      	add	sp, #76	; 0x4c
 8020d6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020d70:	6803      	ldr	r3, [r0, #0]
 8020d72:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8020d74:	4798      	blx	r3
 8020d76:	883b      	ldrh	r3, [r7, #0]
 8020d78:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 8020d7c:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 8020d80:	fb03 1202 	mla	r2, r3, r2, r1
 8020d84:	435d      	muls	r5, r3
 8020d86:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8020d8a:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 8020d8e:	920c      	str	r2, [sp, #48]	; 0x30
 8020d90:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 8020d94:	1b12      	subs	r2, r2, r4
 8020d96:	920d      	str	r2, [sp, #52]	; 0x34
 8020d98:	0062      	lsls	r2, r4, #1
 8020d9a:	1b1c      	subs	r4, r3, r4
 8020d9c:	0063      	lsls	r3, r4, #1
 8020d9e:	920a      	str	r2, [sp, #40]	; 0x28
 8020da0:	930b      	str	r3, [sp, #44]	; 0x2c
 8020da2:	f04f 0e04 	mov.w	lr, #4
 8020da6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020da8:	4298      	cmp	r0, r3
 8020daa:	d266      	bcs.n	8020e7a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 8020dac:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020dae:	eb00 0b03 	add.w	fp, r0, r3
 8020db2:	4558      	cmp	r0, fp
 8020db4:	d25c      	bcs.n	8020e70 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 8020db6:	f819 3b01 	ldrb.w	r3, [r9], #1
 8020dba:	fb1e e303 	smlabb	r3, lr, r3, lr
 8020dbe:	f858 2003 	ldr.w	r2, [r8, r3]
 8020dc2:	0e11      	lsrs	r1, r2, #24
 8020dc4:	d012      	beq.n	8020dec <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8020dc6:	29ff      	cmp	r1, #255	; 0xff
 8020dc8:	ea4f 2712 	mov.w	r7, r2, lsr #8
 8020dcc:	d110      	bne.n	8020df0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8020dce:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8020dd2:	d10d      	bne.n	8020df0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8020dd4:	0953      	lsrs	r3, r2, #5
 8020dd6:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 8020dda:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020dde:	f027 0707 	bic.w	r7, r7, #7
 8020de2:	431f      	orrs	r7, r3
 8020de4:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8020de8:	433a      	orrs	r2, r7
 8020dea:	8002      	strh	r2, [r0, #0]
 8020dec:	3002      	adds	r0, #2
 8020dee:	e7e0      	b.n	8020db2 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 8020df0:	fb0a f101 	mul.w	r1, sl, r1
 8020df4:	8806      	ldrh	r6, [r0, #0]
 8020df6:	1c4b      	adds	r3, r1, #1
 8020df8:	eb03 2321 	add.w	r3, r3, r1, asr #8
 8020dfc:	1235      	asrs	r5, r6, #8
 8020dfe:	10f4      	asrs	r4, r6, #3
 8020e00:	121b      	asrs	r3, r3, #8
 8020e02:	00f6      	lsls	r6, r6, #3
 8020e04:	b299      	uxth	r1, r3
 8020e06:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 8020e0a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8020e0e:	b2f6      	uxtb	r6, r6
 8020e10:	43db      	mvns	r3, r3
 8020e12:	b2d2      	uxtb	r2, r2
 8020e14:	b2db      	uxtb	r3, r3
 8020e16:	fb1c fc01 	smulbb	ip, ip, r1
 8020e1a:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8020e1e:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8020e22:	fb12 f201 	smulbb	r2, r2, r1
 8020e26:	fb05 c503 	mla	r5, r5, r3, ip
 8020e2a:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8020e2e:	b2ff      	uxtb	r7, r7
 8020e30:	fb06 2203 	mla	r2, r6, r3, r2
 8020e34:	b2ad      	uxth	r5, r5
 8020e36:	fb17 f701 	smulbb	r7, r7, r1
 8020e3a:	b292      	uxth	r2, r2
 8020e3c:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 8020e40:	fb04 7403 	mla	r4, r4, r3, r7
 8020e44:	f105 0c01 	add.w	ip, r5, #1
 8020e48:	1c57      	adds	r7, r2, #1
 8020e4a:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8020e4e:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8020e52:	b2a4      	uxth	r4, r4
 8020e54:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8020e58:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8020e5c:	433d      	orrs	r5, r7
 8020e5e:	1c67      	adds	r7, r4, #1
 8020e60:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 8020e64:	0964      	lsrs	r4, r4, #5
 8020e66:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8020e6a:	4325      	orrs	r5, r4
 8020e6c:	8005      	strh	r5, [r0, #0]
 8020e6e:	e7bd      	b.n	8020dec <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8020e70:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020e72:	4418      	add	r0, r3
 8020e74:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8020e76:	4499      	add	r9, r3
 8020e78:	e795      	b.n	8020da6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 8020e7a:	4b04      	ldr	r3, [pc, #16]	; (8020e8c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8020e7c:	6818      	ldr	r0, [r3, #0]
 8020e7e:	6803      	ldr	r3, [r0, #0]
 8020e80:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8020e82:	4798      	blx	r3
 8020e84:	e771      	b.n	8020d6a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 8020e86:	bf00      	nop
 8020e88:	20013846 	.word	0x20013846
 8020e8c:	2001384c 	.word	0x2001384c

08020e90 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 8020e90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020e94:	b087      	sub	sp, #28
 8020e96:	4680      	mov	r8, r0
 8020e98:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 8020e9c:	460d      	mov	r5, r1
 8020e9e:	4614      	mov	r4, r2
 8020ea0:	2e00      	cmp	r6, #0
 8020ea2:	f000 80b9 	beq.w	8021018 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 8020ea6:	6810      	ldr	r0, [r2, #0]
 8020ea8:	6851      	ldr	r1, [r2, #4]
 8020eaa:	af02      	add	r7, sp, #8
 8020eac:	c703      	stmia	r7!, {r0, r1}
 8020eae:	6818      	ldr	r0, [r3, #0]
 8020eb0:	6859      	ldr	r1, [r3, #4]
 8020eb2:	af04      	add	r7, sp, #16
 8020eb4:	c703      	stmia	r7!, {r0, r1}
 8020eb6:	a802      	add	r0, sp, #8
 8020eb8:	f7f7 fbae 	bl	8018618 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020ebc:	4621      	mov	r1, r4
 8020ebe:	a804      	add	r0, sp, #16
 8020ec0:	f7f7 fbee 	bl	80186a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8020ec4:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8020ec8:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8020ecc:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 8020ed0:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 8020ed4:	fb14 2103 	smlabb	r1, r4, r3, r2
 8020ed8:	eb08 0401 	add.w	r4, r8, r1
 8020edc:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8020ee0:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8020ee4:	440a      	add	r2, r1
 8020ee6:	f8ad 2010 	strh.w	r2, [sp, #16]
 8020eea:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8020eee:	4413      	add	r3, r2
 8020ef0:	f8ad 3012 	strh.w	r3, [sp, #18]
 8020ef4:	4b4a      	ldr	r3, [pc, #296]	; (8021020 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8020ef6:	6818      	ldr	r0, [r3, #0]
 8020ef8:	6803      	ldr	r3, [r0, #0]
 8020efa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8020efc:	4798      	blx	r3
 8020efe:	4b49      	ldr	r3, [pc, #292]	; (8021024 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 8020f00:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 8020f04:	881a      	ldrh	r2, [r3, #0]
 8020f06:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 8020f0a:	2eff      	cmp	r6, #255	; 0xff
 8020f0c:	fb02 c101 	mla	r1, r2, r1, ip
 8020f10:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8020f14:	fb02 f207 	mul.w	r2, r2, r7
 8020f18:	f105 0104 	add.w	r1, r5, #4
 8020f1c:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 8020f20:	461d      	mov	r5, r3
 8020f22:	d05a      	beq.n	8020fda <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 8020f24:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 8020f28:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8020f2c:	b2b6      	uxth	r6, r6
 8020f2e:	fa1f fe8e 	uxth.w	lr, lr
 8020f32:	9301      	str	r3, [sp, #4]
 8020f34:	4282      	cmp	r2, r0
 8020f36:	d96a      	bls.n	802100e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8020f38:	eb00 0b0a 	add.w	fp, r0, sl
 8020f3c:	4583      	cmp	fp, r0
 8020f3e:	d940      	bls.n	8020fc2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 8020f40:	f814 3b01 	ldrb.w	r3, [r4], #1
 8020f44:	8805      	ldrh	r5, [r0, #0]
 8020f46:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8020f4a:	122f      	asrs	r7, r5, #8
 8020f4c:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8020f50:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8020f54:	fb17 f70e 	smulbb	r7, r7, lr
 8020f58:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8020f5c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8020f60:	00ed      	lsls	r5, r5, #3
 8020f62:	fb0c 7c06 	mla	ip, ip, r6, r7
 8020f66:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8020f6a:	10df      	asrs	r7, r3, #3
 8020f6c:	b2ed      	uxtb	r5, r5
 8020f6e:	00db      	lsls	r3, r3, #3
 8020f70:	fa1f fc8c 	uxth.w	ip, ip
 8020f74:	fb19 f90e 	smulbb	r9, r9, lr
 8020f78:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8020f7c:	b2db      	uxtb	r3, r3
 8020f7e:	fb15 f50e 	smulbb	r5, r5, lr
 8020f82:	fb07 9706 	mla	r7, r7, r6, r9
 8020f86:	fb03 5306 	mla	r3, r3, r6, r5
 8020f8a:	f10c 0901 	add.w	r9, ip, #1
 8020f8e:	b29b      	uxth	r3, r3
 8020f90:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8020f94:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 8020f98:	f103 0c01 	add.w	ip, r3, #1
 8020f9c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8020fa0:	b2bf      	uxth	r7, r7
 8020fa2:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8020fa6:	ea4c 0c09 	orr.w	ip, ip, r9
 8020faa:	f107 0901 	add.w	r9, r7, #1
 8020fae:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 8020fb2:	097f      	lsrs	r7, r7, #5
 8020fb4:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8020fb8:	ea4c 0c07 	orr.w	ip, ip, r7
 8020fbc:	f820 cb02 	strh.w	ip, [r0], #2
 8020fc0:	e7bc      	b.n	8020f3c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 8020fc2:	9b01      	ldr	r3, [sp, #4]
 8020fc4:	881b      	ldrh	r3, [r3, #0]
 8020fc6:	eba3 0308 	sub.w	r3, r3, r8
 8020fca:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8020fce:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8020fd2:	eba3 0308 	sub.w	r3, r3, r8
 8020fd6:	441c      	add	r4, r3
 8020fd8:	e7ac      	b.n	8020f34 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 8020fda:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8020fde:	4282      	cmp	r2, r0
 8020fe0:	d915      	bls.n	802100e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8020fe2:	eb00 060a 	add.w	r6, r0, sl
 8020fe6:	4286      	cmp	r6, r0
 8020fe8:	d906      	bls.n	8020ff8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 8020fea:	f814 3b01 	ldrb.w	r3, [r4], #1
 8020fee:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8020ff2:	f820 3b02 	strh.w	r3, [r0], #2
 8020ff6:	e7f6      	b.n	8020fe6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 8020ff8:	882b      	ldrh	r3, [r5, #0]
 8020ffa:	eba3 0308 	sub.w	r3, r3, r8
 8020ffe:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8021002:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8021006:	eba3 0308 	sub.w	r3, r3, r8
 802100a:	441c      	add	r4, r3
 802100c:	e7e7      	b.n	8020fde <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 802100e:	4b04      	ldr	r3, [pc, #16]	; (8021020 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8021010:	6818      	ldr	r0, [r3, #0]
 8021012:	6803      	ldr	r3, [r0, #0]
 8021014:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8021016:	4798      	blx	r3
 8021018:	b007      	add	sp, #28
 802101a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802101e:	bf00      	nop
 8021020:	2001384c 	.word	0x2001384c
 8021024:	20013846 	.word	0x20013846

08021028 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 8021028:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802102c:	b091      	sub	sp, #68	; 0x44
 802102e:	4680      	mov	r8, r0
 8021030:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 8021034:	460f      	mov	r7, r1
 8021036:	4614      	mov	r4, r2
 8021038:	2d00      	cmp	r5, #0
 802103a:	d051      	beq.n	80210e0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 802103c:	6810      	ldr	r0, [r2, #0]
 802103e:	6851      	ldr	r1, [r2, #4]
 8021040:	f8df 9200 	ldr.w	r9, [pc, #512]	; 8021244 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 8021044:	ae0c      	add	r6, sp, #48	; 0x30
 8021046:	c603      	stmia	r6!, {r0, r1}
 8021048:	6818      	ldr	r0, [r3, #0]
 802104a:	6859      	ldr	r1, [r3, #4]
 802104c:	ae0e      	add	r6, sp, #56	; 0x38
 802104e:	c603      	stmia	r6!, {r0, r1}
 8021050:	a80c      	add	r0, sp, #48	; 0x30
 8021052:	f7f7 fae1 	bl	8018618 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8021056:	4621      	mov	r1, r4
 8021058:	a80e      	add	r0, sp, #56	; 0x38
 802105a:	f7f7 fb21 	bl	80186a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802105e:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 8021062:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8021066:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 802106a:	f8d9 0000 	ldr.w	r0, [r9]
 802106e:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 8021072:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 8021076:	fb11 2103 	smlabb	r1, r1, r3, r2
 802107a:	eb08 0401 	add.w	r4, r8, r1
 802107e:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 8021082:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 8021248 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 8021086:	440a      	add	r2, r1
 8021088:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 802108c:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 8021090:	4413      	add	r3, r2
 8021092:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 8021096:	6803      	ldr	r3, [r0, #0]
 8021098:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 802109a:	4798      	blx	r3
 802109c:	f010 0f80 	tst.w	r0, #128	; 0x80
 80210a0:	f8d9 0000 	ldr.w	r0, [r9]
 80210a4:	d01f      	beq.n	80210e6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 80210a6:	2200      	movs	r2, #0
 80210a8:	6801      	ldr	r1, [r0, #0]
 80210aa:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80210ae:	e9cd 2208 	strd	r2, r2, [sp, #32]
 80210b2:	220b      	movs	r2, #11
 80210b4:	9207      	str	r2, [sp, #28]
 80210b6:	f8b8 2000 	ldrh.w	r2, [r8]
 80210ba:	9206      	str	r2, [sp, #24]
 80210bc:	2201      	movs	r2, #1
 80210be:	e9cd 5204 	strd	r5, r2, [sp, #16]
 80210c2:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 80210c6:	9203      	str	r2, [sp, #12]
 80210c8:	fa1f f28a 	uxth.w	r2, sl
 80210cc:	9202      	str	r2, [sp, #8]
 80210ce:	b2b6      	uxth	r6, r6
 80210d0:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 80210d4:	9200      	str	r2, [sp, #0]
 80210d6:	9601      	str	r6, [sp, #4]
 80210d8:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 80210da:	463a      	mov	r2, r7
 80210dc:	4621      	mov	r1, r4
 80210de:	47a8      	blx	r5
 80210e0:	b011      	add	sp, #68	; 0x44
 80210e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80210e6:	6803      	ldr	r3, [r0, #0]
 80210e8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80210ea:	4798      	blx	r3
 80210ec:	f8b8 2000 	ldrh.w	r2, [r8]
 80210f0:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 80210f4:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 80210f8:	2dff      	cmp	r5, #255	; 0xff
 80210fa:	fb02 1303 	mla	r3, r2, r3, r1
 80210fe:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8021102:	ea4f 0946 	mov.w	r9, r6, lsl #1
 8021106:	fb0a fa02 	mul.w	sl, sl, r2
 802110a:	d062      	beq.n	80211d2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 802110c:	ea6f 0c05 	mvn.w	ip, r5
 8021110:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 8021114:	930a      	str	r3, [sp, #40]	; 0x28
 8021116:	b2ad      	uxth	r5, r5
 8021118:	fa5f fc8c 	uxtb.w	ip, ip
 802111c:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 8021120:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021122:	4298      	cmp	r0, r3
 8021124:	f080 8085 	bcs.w	8021232 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8021128:	eb00 0b09 	add.w	fp, r0, r9
 802112c:	4558      	cmp	r0, fp
 802112e:	d246      	bcs.n	80211be <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 8021130:	f814 eb01 	ldrb.w	lr, [r4], #1
 8021134:	2303      	movs	r3, #3
 8021136:	2204      	movs	r2, #4
 8021138:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 802113c:	eb07 0a0e 	add.w	sl, r7, lr
 8021140:	8803      	ldrh	r3, [r0, #0]
 8021142:	f89a 8002 	ldrb.w	r8, [sl, #2]
 8021146:	f817 e00e 	ldrb.w	lr, [r7, lr]
 802114a:	1219      	asrs	r1, r3, #8
 802114c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8021150:	fb18 f805 	smulbb	r8, r8, r5
 8021154:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 8021158:	10da      	asrs	r2, r3, #3
 802115a:	fb01 810c 	mla	r1, r1, ip, r8
 802115e:	00db      	lsls	r3, r3, #3
 8021160:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8021164:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8021168:	b2db      	uxtb	r3, r3
 802116a:	fb18 f805 	smulbb	r8, r8, r5
 802116e:	fb1e fe05 	smulbb	lr, lr, r5
 8021172:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 8021176:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 802117a:	b289      	uxth	r1, r1
 802117c:	fb02 820c 	mla	r2, r2, ip, r8
 8021180:	fb03 e30c 	mla	r3, r3, ip, lr
 8021184:	b292      	uxth	r2, r2
 8021186:	b29b      	uxth	r3, r3
 8021188:	f101 0801 	add.w	r8, r1, #1
 802118c:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 8021190:	f103 0e01 	add.w	lr, r3, #1
 8021194:	f102 0801 	add.w	r8, r2, #1
 8021198:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 802119c:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 80211a0:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 80211a4:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 80211a8:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80211ac:	ea4e 0101 	orr.w	r1, lr, r1
 80211b0:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80211b4:	ea41 0108 	orr.w	r1, r1, r8
 80211b8:	f820 1b02 	strh.w	r1, [r0], #2
 80211bc:	e7b6      	b.n	802112c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 80211be:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80211c0:	881b      	ldrh	r3, [r3, #0]
 80211c2:	1b9b      	subs	r3, r3, r6
 80211c4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80211c8:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 80211cc:	1b9b      	subs	r3, r3, r6
 80211ce:	441c      	add	r4, r3
 80211d0:	e7a6      	b.n	8021120 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 80211d2:	491b      	ldr	r1, [pc, #108]	; (8021240 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 80211d4:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 80211d8:	2203      	movs	r2, #3
 80211da:	2504      	movs	r5, #4
 80211dc:	4550      	cmp	r0, sl
 80211de:	d228      	bcs.n	8021232 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 80211e0:	eb00 0c09 	add.w	ip, r0, r9
 80211e4:	4560      	cmp	r0, ip
 80211e6:	4623      	mov	r3, r4
 80211e8:	d219      	bcs.n	802121e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 80211ea:	f893 e000 	ldrb.w	lr, [r3]
 80211ee:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 80211f2:	eb07 0b0e 	add.w	fp, r7, lr
 80211f6:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80211fa:	f89b 3002 	ldrb.w	r3, [fp, #2]
 80211fe:	f89b b001 	ldrb.w	fp, [fp, #1]
 8021202:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 8021206:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 802120a:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 802120e:	ea43 030b 	orr.w	r3, r3, fp
 8021212:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 8021216:	3401      	adds	r4, #1
 8021218:	f820 3b02 	strh.w	r3, [r0], #2
 802121c:	e7e2      	b.n	80211e4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 802121e:	f8b8 3000 	ldrh.w	r3, [r8]
 8021222:	1b9b      	subs	r3, r3, r6
 8021224:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8021228:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 802122c:	1b9b      	subs	r3, r3, r6
 802122e:	441c      	add	r4, r3
 8021230:	e7d4      	b.n	80211dc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 8021232:	4b04      	ldr	r3, [pc, #16]	; (8021244 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 8021234:	6818      	ldr	r0, [r3, #0]
 8021236:	6803      	ldr	r3, [r0, #0]
 8021238:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802123a:	4798      	blx	r3
 802123c:	e750      	b.n	80210e0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 802123e:	bf00      	nop
 8021240:	fffff800 	.word	0xfffff800
 8021244:	2001384c 	.word	0x2001384c
 8021248:	20013846 	.word	0x20013846

0802124c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 802124c:	b4f0      	push	{r4, r5, r6, r7}
 802124e:	460c      	mov	r4, r1
 8021250:	4611      	mov	r1, r2
 8021252:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8021256:	780f      	ldrb	r7, [r1, #0]
 8021258:	784e      	ldrb	r6, [r1, #1]
 802125a:	2f01      	cmp	r7, #1
 802125c:	461a      	mov	r2, r3
 802125e:	9b04      	ldr	r3, [sp, #16]
 8021260:	d036      	beq.n	80212d0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x84>
 8021262:	d31e      	bcc.n	80212a2 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x56>
 8021264:	2f02      	cmp	r7, #2
 8021266:	d14a      	bne.n	80212fe <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 8021268:	2e03      	cmp	r6, #3
 802126a:	d848      	bhi.n	80212fe <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 802126c:	e8df f006 	tbb	[pc, r6]
 8021270:	16140702 	.word	0x16140702
 8021274:	9504      	str	r5, [sp, #16]
 8021276:	4620      	mov	r0, r4
 8021278:	bcf0      	pop	{r4, r5, r6, r7}
 802127a:	f7ff be09 	b.w	8020e90 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 802127e:	6f80      	ldr	r0, [r0, #120]	; 0x78
 8021280:	2800      	cmp	r0, #0
 8021282:	d03c      	beq.n	80212fe <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 8021284:	6806      	ldr	r6, [r0, #0]
 8021286:	e9cd 3504 	strd	r3, r5, [sp, #16]
 802128a:	68b5      	ldr	r5, [r6, #8]
 802128c:	4613      	mov	r3, r2
 802128e:	46ac      	mov	ip, r5
 8021290:	460a      	mov	r2, r1
 8021292:	4621      	mov	r1, r4
 8021294:	bcf0      	pop	{r4, r5, r6, r7}
 8021296:	4760      	bx	ip
 8021298:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 802129a:	e7f1      	b.n	8021280 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 802129c:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 80212a0:	e7ee      	b.n	8021280 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 80212a2:	2e03      	cmp	r6, #3
 80212a4:	d82b      	bhi.n	80212fe <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 80212a6:	e8df f006 	tbb	[pc, r6]
 80212aa:	0702      	.short	0x0702
 80212ac:	100e      	.short	0x100e
 80212ae:	9504      	str	r5, [sp, #16]
 80212b0:	4620      	mov	r0, r4
 80212b2:	bcf0      	pop	{r4, r5, r6, r7}
 80212b4:	f7ff bd06 	b.w	8020cc4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 80212b8:	6f80      	ldr	r0, [r0, #120]	; 0x78
 80212ba:	b300      	cbz	r0, 80212fe <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 80212bc:	6806      	ldr	r6, [r0, #0]
 80212be:	e9cd 3504 	strd	r3, r5, [sp, #16]
 80212c2:	68f5      	ldr	r5, [r6, #12]
 80212c4:	e7e2      	b.n	802128c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 80212c6:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 80212c8:	e7f7      	b.n	80212ba <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 80212ca:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 80212ce:	e7f4      	b.n	80212ba <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 80212d0:	2e03      	cmp	r6, #3
 80212d2:	d814      	bhi.n	80212fe <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 80212d4:	e8df f006 	tbb	[pc, r6]
 80212d8:	100e0702 	.word	0x100e0702
 80212dc:	9504      	str	r5, [sp, #16]
 80212de:	4620      	mov	r0, r4
 80212e0:	bcf0      	pop	{r4, r5, r6, r7}
 80212e2:	f7ff bea1 	b.w	8021028 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 80212e6:	6f80      	ldr	r0, [r0, #120]	; 0x78
 80212e8:	b148      	cbz	r0, 80212fe <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 80212ea:	6806      	ldr	r6, [r0, #0]
 80212ec:	e9cd 3504 	strd	r3, r5, [sp, #16]
 80212f0:	6935      	ldr	r5, [r6, #16]
 80212f2:	e7cb      	b.n	802128c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 80212f4:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 80212f6:	e7f7      	b.n	80212e8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 80212f8:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 80212fc:	e7f4      	b.n	80212e8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 80212fe:	bcf0      	pop	{r4, r5, r6, r7}
 8021300:	4770      	bx	lr
	...

08021304 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 8021304:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021308:	4604      	mov	r4, r0
 802130a:	b087      	sub	sp, #28
 802130c:	6810      	ldr	r0, [r2, #0]
 802130e:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 8021312:	f8df 9238 	ldr.w	r9, [pc, #568]	; 802154c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 8021316:	460e      	mov	r6, r1
 8021318:	6851      	ldr	r1, [r2, #4]
 802131a:	ad02      	add	r5, sp, #8
 802131c:	c503      	stmia	r5!, {r0, r1}
 802131e:	6818      	ldr	r0, [r3, #0]
 8021320:	6859      	ldr	r1, [r3, #4]
 8021322:	ad04      	add	r5, sp, #16
 8021324:	4617      	mov	r7, r2
 8021326:	c503      	stmia	r5!, {r0, r1}
 8021328:	a802      	add	r0, sp, #8
 802132a:	f7f7 f975 	bl	8018618 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802132e:	4639      	mov	r1, r7
 8021330:	a804      	add	r0, sp, #16
 8021332:	f7f7 f9b5 	bl	80186a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8021336:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 802133a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 802133e:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 8021342:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8021346:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 802134a:	fb11 2103 	smlabb	r1, r1, r3, r2
 802134e:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 8021352:	440e      	add	r6, r1
 8021354:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8021358:	440a      	add	r2, r1
 802135a:	f8ad 2010 	strh.w	r2, [sp, #16]
 802135e:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8021362:	4413      	add	r3, r2
 8021364:	f8ad 3012 	strh.w	r3, [sp, #18]
 8021368:	4b77      	ldr	r3, [pc, #476]	; (8021548 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 802136a:	6818      	ldr	r0, [r3, #0]
 802136c:	6803      	ldr	r3, [r0, #0]
 802136e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8021370:	4798      	blx	r3
 8021372:	f8b9 b000 	ldrh.w	fp, [r9]
 8021376:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 802137a:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 802137e:	fb0b 2303 	mla	r3, fp, r3, r2
 8021382:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8021386:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 802138a:	ea4f 0348 	mov.w	r3, r8, lsl #1
 802138e:	fb05 f50b 	mul.w	r5, r5, fp
 8021392:	9300      	str	r3, [sp, #0]
 8021394:	d069      	beq.n	802146a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 8021396:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 802139a:	4558      	cmp	r0, fp
 802139c:	f080 80cc 	bcs.w	8021538 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 80213a0:	9b00      	ldr	r3, [sp, #0]
 80213a2:	18c3      	adds	r3, r0, r3
 80213a4:	9301      	str	r3, [sp, #4]
 80213a6:	4631      	mov	r1, r6
 80213a8:	9b01      	ldr	r3, [sp, #4]
 80213aa:	4298      	cmp	r0, r3
 80213ac:	d24f      	bcs.n	802144e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 80213ae:	f811 2b01 	ldrb.w	r2, [r1], #1
 80213b2:	2a00      	cmp	r2, #0
 80213b4:	d048      	beq.n	8021448 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 80213b6:	fb0a f202 	mul.w	r2, sl, r2
 80213ba:	1c53      	adds	r3, r2, #1
 80213bc:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80213c0:	121b      	asrs	r3, r3, #8
 80213c2:	d041      	beq.n	8021448 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 80213c4:	8802      	ldrh	r2, [r0, #0]
 80213c6:	f8b4 c000 	ldrh.w	ip, [r4]
 80213ca:	b29e      	uxth	r6, r3
 80213cc:	1215      	asrs	r5, r2, #8
 80213ce:	43db      	mvns	r3, r3
 80213d0:	b2db      	uxtb	r3, r3
 80213d2:	ea4f 272c 	mov.w	r7, ip, asr #8
 80213d6:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80213da:	fb15 f503 	smulbb	r5, r5, r3
 80213de:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 80213e2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80213e6:	00d2      	lsls	r2, r2, #3
 80213e8:	fb07 5706 	mla	r7, r7, r6, r5
 80213ec:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 80213f0:	ea4f 05ec 	mov.w	r5, ip, asr #3
 80213f4:	b2d2      	uxtb	r2, r2
 80213f6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80213fa:	b2bf      	uxth	r7, r7
 80213fc:	fb1e fe03 	smulbb	lr, lr, r3
 8021400:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8021404:	fa5f fc8c 	uxtb.w	ip, ip
 8021408:	fb12 f203 	smulbb	r2, r2, r3
 802140c:	fb05 e506 	mla	r5, r5, r6, lr
 8021410:	fb0c 2c06 	mla	ip, ip, r6, r2
 8021414:	f107 0e01 	add.w	lr, r7, #1
 8021418:	fa1f fc8c 	uxth.w	ip, ip
 802141c:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 8021420:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 8021424:	f10c 0701 	add.w	r7, ip, #1
 8021428:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 802142c:	b2ad      	uxth	r5, r5
 802142e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8021432:	ea47 070e 	orr.w	r7, r7, lr
 8021436:	f105 0e01 	add.w	lr, r5, #1
 802143a:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 802143e:	096d      	lsrs	r5, r5, #5
 8021440:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8021444:	432f      	orrs	r7, r5
 8021446:	8007      	strh	r7, [r0, #0]
 8021448:	3002      	adds	r0, #2
 802144a:	3402      	adds	r4, #2
 802144c:	e7ac      	b.n	80213a8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 802144e:	f8b9 3000 	ldrh.w	r3, [r9]
 8021452:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8021456:	eba3 0308 	sub.w	r3, r3, r8
 802145a:	eba6 0608 	sub.w	r6, r6, r8
 802145e:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8021462:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8021466:	440e      	add	r6, r1
 8021468:	e797      	b.n	802139a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 802146a:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 802146e:	42a8      	cmp	r0, r5
 8021470:	d262      	bcs.n	8021538 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8021472:	9b00      	ldr	r3, [sp, #0]
 8021474:	4631      	mov	r1, r6
 8021476:	eb00 0b03 	add.w	fp, r0, r3
 802147a:	4558      	cmp	r0, fp
 802147c:	d24e      	bcs.n	802151c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 802147e:	f811 3b01 	ldrb.w	r3, [r1], #1
 8021482:	b12b      	cbz	r3, 8021490 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8021484:	2bff      	cmp	r3, #255	; 0xff
 8021486:	f8b4 e000 	ldrh.w	lr, [r4]
 802148a:	d104      	bne.n	8021496 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 802148c:	f8a0 e000 	strh.w	lr, [r0]
 8021490:	3002      	adds	r0, #2
 8021492:	3402      	adds	r4, #2
 8021494:	e7f1      	b.n	802147a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 8021496:	8802      	ldrh	r2, [r0, #0]
 8021498:	b29f      	uxth	r7, r3
 802149a:	1216      	asrs	r6, r2, #8
 802149c:	43db      	mvns	r3, r3
 802149e:	b2db      	uxtb	r3, r3
 80214a0:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80214a4:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80214a8:	fb16 f603 	smulbb	r6, r6, r3
 80214ac:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 80214b0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80214b4:	00d2      	lsls	r2, r2, #3
 80214b6:	fb0c 6c07 	mla	ip, ip, r7, r6
 80214ba:	b2d2      	uxtb	r2, r2
 80214bc:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80214c0:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80214c4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80214c8:	fb1a fa03 	smulbb	sl, sl, r3
 80214cc:	fa1f fc8c 	uxth.w	ip, ip
 80214d0:	fb12 f303 	smulbb	r3, r2, r3
 80214d4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80214d8:	fa5f fe8e 	uxtb.w	lr, lr
 80214dc:	fb06 a607 	mla	r6, r6, r7, sl
 80214e0:	f10c 0201 	add.w	r2, ip, #1
 80214e4:	fb0e 3307 	mla	r3, lr, r7, r3
 80214e8:	b2b6      	uxth	r6, r6
 80214ea:	b29b      	uxth	r3, r3
 80214ec:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 80214f0:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 80214f4:	f106 0a01 	add.w	sl, r6, #1
 80214f8:	f103 0c01 	add.w	ip, r3, #1
 80214fc:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8021500:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8021504:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8021508:	0976      	lsrs	r6, r6, #5
 802150a:	ea4c 0c02 	orr.w	ip, ip, r2
 802150e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8021512:	ea4c 0c06 	orr.w	ip, ip, r6
 8021516:	f8a0 c000 	strh.w	ip, [r0]
 802151a:	e7b9      	b.n	8021490 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 802151c:	f8b9 3000 	ldrh.w	r3, [r9]
 8021520:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8021524:	eba3 0308 	sub.w	r3, r3, r8
 8021528:	eba6 0608 	sub.w	r6, r6, r8
 802152c:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8021530:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8021534:	440e      	add	r6, r1
 8021536:	e79a      	b.n	802146e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 8021538:	4b03      	ldr	r3, [pc, #12]	; (8021548 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 802153a:	6818      	ldr	r0, [r3, #0]
 802153c:	6803      	ldr	r3, [r0, #0]
 802153e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8021540:	4798      	blx	r3
 8021542:	b007      	add	sp, #28
 8021544:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021548:	2001384c 	.word	0x2001384c
 802154c:	20013846 	.word	0x20013846

08021550 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 8021550:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021554:	b089      	sub	sp, #36	; 0x24
 8021556:	4682      	mov	sl, r0
 8021558:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 802155c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 802155e:	460f      	mov	r7, r1
 8021560:	4691      	mov	r9, r2
 8021562:	4698      	mov	r8, r3
 8021564:	2e00      	cmp	r6, #0
 8021566:	d03d      	beq.n	80215e4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8021568:	4608      	mov	r0, r1
 802156a:	f7fa fe59 	bl	801c220 <_ZNK8touchgfx6Bitmap8getWidthEv>
 802156e:	4605      	mov	r5, r0
 8021570:	4638      	mov	r0, r7
 8021572:	f7fa fe89 	bl	801c288 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8021576:	f8ad 000e 	strh.w	r0, [sp, #14]
 802157a:	4638      	mov	r0, r7
 802157c:	f8ad 9008 	strh.w	r9, [sp, #8]
 8021580:	f8ad 500c 	strh.w	r5, [sp, #12]
 8021584:	f8ad 800a 	strh.w	r8, [sp, #10]
 8021588:	f7fa ff36 	bl	801c3f8 <_ZNK8touchgfx6Bitmap7getDataEv>
 802158c:	4605      	mov	r5, r0
 802158e:	4638      	mov	r0, r7
 8021590:	f7fa ff62 	bl	801c458 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8021594:	4681      	mov	r9, r0
 8021596:	4638      	mov	r0, r7
 8021598:	f7fa ffb2 	bl	801c500 <_ZNK8touchgfx6Bitmap9getFormatEv>
 802159c:	280b      	cmp	r0, #11
 802159e:	d821      	bhi.n	80215e4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 80215a0:	e8df f000 	tbb	[pc, r0]
 80215a4:	2006aebe 	.word	0x2006aebe
 80215a8:	20202020 	.word	0x20202020
 80215ac:	b5202020 	.word	0xb5202020
 80215b0:	4bb0      	ldr	r3, [pc, #704]	; (8021874 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 80215b2:	6818      	ldr	r0, [r3, #0]
 80215b4:	6803      	ldr	r3, [r0, #0]
 80215b6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80215b8:	4798      	blx	r3
 80215ba:	2eff      	cmp	r6, #255	; 0xff
 80215bc:	d101      	bne.n	80215c2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 80215be:	0683      	lsls	r3, r0, #26
 80215c0:	d506      	bpl.n	80215d0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
 80215c2:	4633      	mov	r3, r6
 80215c4:	4622      	mov	r2, r4
 80215c6:	a902      	add	r1, sp, #8
 80215c8:	4628      	mov	r0, r5
 80215ca:	f7ff f909 	bl	80207e0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80215ce:	e009      	b.n	80215e4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 80215d0:	4638      	mov	r0, r7
 80215d2:	f7fa fed9 	bl	801c388 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 80215d6:	b940      	cbnz	r0, 80215ea <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 80215d8:	4623      	mov	r3, r4
 80215da:	aa02      	add	r2, sp, #8
 80215dc:	4629      	mov	r1, r5
 80215de:	4650      	mov	r0, sl
 80215e0:	f7ff f9e4 	bl	80209ac <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 80215e4:	b009      	add	sp, #36	; 0x24
 80215e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80215ea:	f10d 0818 	add.w	r8, sp, #24
 80215ee:	4639      	mov	r1, r7
 80215f0:	4640      	mov	r0, r8
 80215f2:	f7fa fe7d 	bl	801c2f0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80215f6:	e898 0003 	ldmia.w	r8, {r0, r1}
 80215fa:	af04      	add	r7, sp, #16
 80215fc:	e887 0003 	stmia.w	r7, {r0, r1}
 8021600:	4638      	mov	r0, r7
 8021602:	4621      	mov	r1, r4
 8021604:	f7f1 fa6a 	bl	8012adc <_ZN8touchgfx4RectaNERKS0_>
 8021608:	4638      	mov	r0, r7
 802160a:	f7f1 faaa 	bl	8012b62 <_ZNK8touchgfx4Rect7isEmptyEv>
 802160e:	2800      	cmp	r0, #0
 8021610:	d1d7      	bne.n	80215c2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 8021612:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8021616:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 802161a:	4293      	cmp	r3, r2
 802161c:	dd12      	ble.n	8021644 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
 802161e:	1a9b      	subs	r3, r3, r2
 8021620:	f9b4 0000 	ldrsh.w	r0, [r4]
 8021624:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8021628:	f8ad 0018 	strh.w	r0, [sp, #24]
 802162c:	f8ad 201a 	strh.w	r2, [sp, #26]
 8021630:	f8ad 101c 	strh.w	r1, [sp, #28]
 8021634:	f8ad 301e 	strh.w	r3, [sp, #30]
 8021638:	4642      	mov	r2, r8
 802163a:	4633      	mov	r3, r6
 802163c:	a902      	add	r1, sp, #8
 802163e:	4628      	mov	r0, r5
 8021640:	f7ff f8ce 	bl	80207e0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8021644:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8021648:	f9b4 2000 	ldrsh.w	r2, [r4]
 802164c:	4293      	cmp	r3, r2
 802164e:	dd12      	ble.n	8021676 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
 8021650:	1a9b      	subs	r3, r3, r2
 8021652:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8021656:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 802165a:	f8ad 2018 	strh.w	r2, [sp, #24]
 802165e:	f8ad 001a 	strh.w	r0, [sp, #26]
 8021662:	f8ad 301c 	strh.w	r3, [sp, #28]
 8021666:	f8ad 101e 	strh.w	r1, [sp, #30]
 802166a:	23ff      	movs	r3, #255	; 0xff
 802166c:	4642      	mov	r2, r8
 802166e:	a902      	add	r1, sp, #8
 8021670:	4628      	mov	r0, r5
 8021672:	f7ff f8b5 	bl	80207e0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8021676:	463b      	mov	r3, r7
 8021678:	aa02      	add	r2, sp, #8
 802167a:	4629      	mov	r1, r5
 802167c:	4650      	mov	r0, sl
 802167e:	f7ff f995 	bl	80209ac <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8021682:	88a2      	ldrh	r2, [r4, #4]
 8021684:	8823      	ldrh	r3, [r4, #0]
 8021686:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 802168a:	4413      	add	r3, r2
 802168c:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8021690:	440a      	add	r2, r1
 8021692:	b29b      	uxth	r3, r3
 8021694:	b292      	uxth	r2, r2
 8021696:	b211      	sxth	r1, r2
 8021698:	b218      	sxth	r0, r3
 802169a:	4288      	cmp	r0, r1
 802169c:	dd12      	ble.n	80216c4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 802169e:	1a9b      	subs	r3, r3, r2
 80216a0:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 80216a4:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 80216a8:	f8ad 1018 	strh.w	r1, [sp, #24]
 80216ac:	f8ad 301c 	strh.w	r3, [sp, #28]
 80216b0:	f8ad 001e 	strh.w	r0, [sp, #30]
 80216b4:	23ff      	movs	r3, #255	; 0xff
 80216b6:	4642      	mov	r2, r8
 80216b8:	a902      	add	r1, sp, #8
 80216ba:	4628      	mov	r0, r5
 80216bc:	f8ad 601a 	strh.w	r6, [sp, #26]
 80216c0:	f7ff f88e 	bl	80207e0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80216c4:	88e2      	ldrh	r2, [r4, #6]
 80216c6:	8863      	ldrh	r3, [r4, #2]
 80216c8:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 80216cc:	4413      	add	r3, r2
 80216ce:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 80216d2:	440a      	add	r2, r1
 80216d4:	b29b      	uxth	r3, r3
 80216d6:	b292      	uxth	r2, r2
 80216d8:	b211      	sxth	r1, r2
 80216da:	b218      	sxth	r0, r3
 80216dc:	4288      	cmp	r0, r1
 80216de:	dd81      	ble.n	80215e4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 80216e0:	1a9b      	subs	r3, r3, r2
 80216e2:	f9b4 6000 	ldrsh.w	r6, [r4]
 80216e6:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80216ea:	f8ad 301e 	strh.w	r3, [sp, #30]
 80216ee:	f8ad 6018 	strh.w	r6, [sp, #24]
 80216f2:	f8ad 101a 	strh.w	r1, [sp, #26]
 80216f6:	f8ad 001c 	strh.w	r0, [sp, #28]
 80216fa:	23ff      	movs	r3, #255	; 0xff
 80216fc:	4642      	mov	r2, r8
 80216fe:	e762      	b.n	80215c6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
 8021700:	4633      	mov	r3, r6
 8021702:	4622      	mov	r2, r4
 8021704:	a902      	add	r1, sp, #8
 8021706:	4628      	mov	r0, r5
 8021708:	f7ff f9c0 	bl	8020a8c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 802170c:	e76a      	b.n	80215e4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 802170e:	e9cd 4600 	strd	r4, r6, [sp]
 8021712:	ab02      	add	r3, sp, #8
 8021714:	464a      	mov	r2, r9
 8021716:	4629      	mov	r1, r5
 8021718:	4650      	mov	r0, sl
 802171a:	f7ff fd97 	bl	802124c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 802171e:	e761      	b.n	80215e4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8021720:	4638      	mov	r0, r7
 8021722:	f7fa fe31 	bl	801c388 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8021726:	b950      	cbnz	r0, 802173e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
 8021728:	e9cd 6000 	strd	r6, r0, [sp]
 802172c:	f8da 3000 	ldr.w	r3, [sl]
 8021730:	aa02      	add	r2, sp, #8
 8021732:	68de      	ldr	r6, [r3, #12]
 8021734:	4629      	mov	r1, r5
 8021736:	4623      	mov	r3, r4
 8021738:	4650      	mov	r0, sl
 802173a:	47b0      	blx	r6
 802173c:	e752      	b.n	80215e4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 802173e:	f10d 0818 	add.w	r8, sp, #24
 8021742:	4639      	mov	r1, r7
 8021744:	4640      	mov	r0, r8
 8021746:	f7fa fdd3 	bl	801c2f0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 802174a:	e898 0003 	ldmia.w	r8, {r0, r1}
 802174e:	af04      	add	r7, sp, #16
 8021750:	e887 0003 	stmia.w	r7, {r0, r1}
 8021754:	4638      	mov	r0, r7
 8021756:	4621      	mov	r1, r4
 8021758:	f7f1 f9c0 	bl	8012adc <_ZN8touchgfx4RectaNERKS0_>
 802175c:	4638      	mov	r0, r7
 802175e:	f7f1 fa00 	bl	8012b62 <_ZNK8touchgfx4Rect7isEmptyEv>
 8021762:	b138      	cbz	r0, 8021774 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 8021764:	9600      	str	r6, [sp, #0]
 8021766:	4623      	mov	r3, r4
 8021768:	aa02      	add	r2, sp, #8
 802176a:	4649      	mov	r1, r9
 802176c:	4628      	mov	r0, r5
 802176e:	f7ff fdc9 	bl	8021304 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8021772:	e737      	b.n	80215e4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8021774:	e9cd 6000 	strd	r6, r0, [sp]
 8021778:	f8da 3000 	ldr.w	r3, [sl]
 802177c:	aa02      	add	r2, sp, #8
 802177e:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 8021782:	4629      	mov	r1, r5
 8021784:	463b      	mov	r3, r7
 8021786:	4650      	mov	r0, sl
 8021788:	47d8      	blx	fp
 802178a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 802178e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8021792:	4293      	cmp	r3, r2
 8021794:	dd13      	ble.n	80217be <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
 8021796:	f9b4 0000 	ldrsh.w	r0, [r4]
 802179a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 802179e:	f8ad 0018 	strh.w	r0, [sp, #24]
 80217a2:	1a9b      	subs	r3, r3, r2
 80217a4:	f8ad 201a 	strh.w	r2, [sp, #26]
 80217a8:	f8ad 101c 	strh.w	r1, [sp, #28]
 80217ac:	f8ad 301e 	strh.w	r3, [sp, #30]
 80217b0:	9600      	str	r6, [sp, #0]
 80217b2:	4643      	mov	r3, r8
 80217b4:	aa02      	add	r2, sp, #8
 80217b6:	4649      	mov	r1, r9
 80217b8:	4628      	mov	r0, r5
 80217ba:	f7ff fda3 	bl	8021304 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80217be:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 80217c2:	f9b4 2000 	ldrsh.w	r2, [r4]
 80217c6:	4293      	cmp	r3, r2
 80217c8:	dd13      	ble.n	80217f2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
 80217ca:	1a9b      	subs	r3, r3, r2
 80217cc:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 80217d0:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 80217d4:	f8ad 2018 	strh.w	r2, [sp, #24]
 80217d8:	f8ad 001a 	strh.w	r0, [sp, #26]
 80217dc:	f8ad 301c 	strh.w	r3, [sp, #28]
 80217e0:	f8ad 101e 	strh.w	r1, [sp, #30]
 80217e4:	9600      	str	r6, [sp, #0]
 80217e6:	4643      	mov	r3, r8
 80217e8:	aa02      	add	r2, sp, #8
 80217ea:	4649      	mov	r1, r9
 80217ec:	4628      	mov	r0, r5
 80217ee:	f7ff fd89 	bl	8021304 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80217f2:	88a2      	ldrh	r2, [r4, #4]
 80217f4:	8823      	ldrh	r3, [r4, #0]
 80217f6:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 80217fa:	4413      	add	r3, r2
 80217fc:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8021800:	440a      	add	r2, r1
 8021802:	b29b      	uxth	r3, r3
 8021804:	b292      	uxth	r2, r2
 8021806:	b211      	sxth	r1, r2
 8021808:	b218      	sxth	r0, r3
 802180a:	4288      	cmp	r0, r1
 802180c:	dd13      	ble.n	8021836 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
 802180e:	1a9b      	subs	r3, r3, r2
 8021810:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8021814:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 8021818:	f8ad 1018 	strh.w	r1, [sp, #24]
 802181c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8021820:	f8ad 001e 	strh.w	r0, [sp, #30]
 8021824:	9600      	str	r6, [sp, #0]
 8021826:	4643      	mov	r3, r8
 8021828:	aa02      	add	r2, sp, #8
 802182a:	4649      	mov	r1, r9
 802182c:	4628      	mov	r0, r5
 802182e:	f8ad 701a 	strh.w	r7, [sp, #26]
 8021832:	f7ff fd67 	bl	8021304 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8021836:	88e2      	ldrh	r2, [r4, #6]
 8021838:	8863      	ldrh	r3, [r4, #2]
 802183a:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 802183e:	4413      	add	r3, r2
 8021840:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8021844:	440a      	add	r2, r1
 8021846:	b29b      	uxth	r3, r3
 8021848:	b292      	uxth	r2, r2
 802184a:	b211      	sxth	r1, r2
 802184c:	b218      	sxth	r0, r3
 802184e:	4288      	cmp	r0, r1
 8021850:	f77f aec8 	ble.w	80215e4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8021854:	f9b4 7000 	ldrsh.w	r7, [r4]
 8021858:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 802185c:	f8ad 7018 	strh.w	r7, [sp, #24]
 8021860:	1a9b      	subs	r3, r3, r2
 8021862:	f8ad 301e 	strh.w	r3, [sp, #30]
 8021866:	f8ad 101a 	strh.w	r1, [sp, #26]
 802186a:	f8ad 001c 	strh.w	r0, [sp, #28]
 802186e:	9600      	str	r6, [sp, #0]
 8021870:	4643      	mov	r3, r8
 8021872:	e779      	b.n	8021768 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
 8021874:	2001384c 	.word	0x2001384c

08021878 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 8021878:	b180      	cbz	r0, 802189c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 802187a:	2903      	cmp	r1, #3
 802187c:	d81c      	bhi.n	80218b8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 802187e:	e8df f001 	tbb	[pc, r1]
 8021882:	1d02      	.short	0x1d02
 8021884:	1f08      	.short	0x1f08
 8021886:	4b10      	ldr	r3, [pc, #64]	; (80218c8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8021888:	8818      	ldrh	r0, [r3, #0]
 802188a:	f3c0 000e 	ubfx	r0, r0, #0, #15
 802188e:	4240      	negs	r0, r0
 8021890:	4770      	bx	lr
 8021892:	4b0d      	ldr	r3, [pc, #52]	; (80218c8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8021894:	8818      	ldrh	r0, [r3, #0]
 8021896:	f3c0 000e 	ubfx	r0, r0, #0, #15
 802189a:	4770      	bx	lr
 802189c:	2903      	cmp	r1, #3
 802189e:	d80b      	bhi.n	80218b8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 80218a0:	a301      	add	r3, pc, #4	; (adr r3, 80218a8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 80218a2:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 80218a6:	bf00      	nop
 80218a8:	080218bd 	.word	0x080218bd
 80218ac:	08021893 	.word	0x08021893
 80218b0:	080218c1 	.word	0x080218c1
 80218b4:	08021887 	.word	0x08021887
 80218b8:	2000      	movs	r0, #0
 80218ba:	4770      	bx	lr
 80218bc:	2001      	movs	r0, #1
 80218be:	4770      	bx	lr
 80218c0:	f04f 30ff 	mov.w	r0, #4294967295
 80218c4:	4770      	bx	lr
 80218c6:	bf00      	nop
 80218c8:	20013846 	.word	0x20013846

080218cc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 80218cc:	b180      	cbz	r0, 80218f0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 80218ce:	2903      	cmp	r1, #3
 80218d0:	d81c      	bhi.n	802190c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 80218d2:	e8df f001 	tbb	[pc, r1]
 80218d6:	021d      	.short	0x021d
 80218d8:	071f      	.short	0x071f
 80218da:	4b10      	ldr	r3, [pc, #64]	; (802191c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 80218dc:	8818      	ldrh	r0, [r3, #0]
 80218de:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80218e2:	4770      	bx	lr
 80218e4:	4b0d      	ldr	r3, [pc, #52]	; (802191c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 80218e6:	8818      	ldrh	r0, [r3, #0]
 80218e8:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80218ec:	4240      	negs	r0, r0
 80218ee:	4770      	bx	lr
 80218f0:	2903      	cmp	r1, #3
 80218f2:	d80b      	bhi.n	802190c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 80218f4:	a301      	add	r3, pc, #4	; (adr r3, 80218fc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 80218f6:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 80218fa:	bf00      	nop
 80218fc:	080218db 	.word	0x080218db
 8021900:	08021915 	.word	0x08021915
 8021904:	080218e5 	.word	0x080218e5
 8021908:	08021911 	.word	0x08021911
 802190c:	2000      	movs	r0, #0
 802190e:	4770      	bx	lr
 8021910:	2001      	movs	r0, #1
 8021912:	4770      	bx	lr
 8021914:	f04f 30ff 	mov.w	r0, #4294967295
 8021918:	4770      	bx	lr
 802191a:	bf00      	nop
 802191c:	20013846 	.word	0x20013846

08021920 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8021920:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021924:	b099      	sub	sp, #100	; 0x64
 8021926:	910b      	str	r1, [sp, #44]	; 0x2c
 8021928:	a914      	add	r1, sp, #80	; 0x50
 802192a:	e881 000c 	stmia.w	r1, {r2, r3}
 802192e:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 8021932:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 8021936:	f891 900d 	ldrb.w	r9, [r1, #13]
 802193a:	9309      	str	r3, [sp, #36]	; 0x24
 802193c:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8021940:	9310      	str	r3, [sp, #64]	; 0x40
 8021942:	ea4f 1749 	mov.w	r7, r9, lsl #5
 8021946:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 802194a:	930c      	str	r3, [sp, #48]	; 0x30
 802194c:	f407 7380 	and.w	r3, r7, #256	; 0x100
 8021950:	798f      	ldrb	r7, [r1, #6]
 8021952:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 8021956:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 802195a:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 802195e:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 8021962:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 8021966:	431f      	orrs	r7, r3
 8021968:	f000 8195 	beq.w	8021c96 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 802196c:	ea4f 1909 	mov.w	r9, r9, lsl #4
 8021970:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8021974:	f891 9007 	ldrb.w	r9, [r1, #7]
 8021978:	ea59 0903 	orrs.w	r9, r9, r3
 802197c:	f000 818b 	beq.w	8021c96 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8021980:	f991 3009 	ldrsb.w	r3, [r1, #9]
 8021984:	b29b      	uxth	r3, r3
 8021986:	2d00      	cmp	r5, #0
 8021988:	f000 812e 	beq.w	8021be8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 802198c:	1aed      	subs	r5, r5, r3
 802198e:	b2ad      	uxth	r5, r5
 8021990:	042b      	lsls	r3, r5, #16
 8021992:	d502      	bpl.n	802199a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 8021994:	1b64      	subs	r4, r4, r5
 8021996:	b224      	sxth	r4, r4
 8021998:	2500      	movs	r5, #0
 802199a:	f9b2 1000 	ldrsh.w	r1, [r2]
 802199e:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80219a2:	428c      	cmp	r4, r1
 80219a4:	b28b      	uxth	r3, r1
 80219a6:	bfbf      	itttt	lt
 80219a8:	18ed      	addlt	r5, r5, r3
 80219aa:	1b2c      	sublt	r4, r5, r4
 80219ac:	b2a5      	uxthlt	r5, r4
 80219ae:	460c      	movlt	r4, r1
 80219b0:	8891      	ldrh	r1, [r2, #4]
 80219b2:	440b      	add	r3, r1
 80219b4:	b21b      	sxth	r3, r3
 80219b6:	930f      	str	r3, [sp, #60]	; 0x3c
 80219b8:	88d3      	ldrh	r3, [r2, #6]
 80219ba:	8852      	ldrh	r2, [r2, #2]
 80219bc:	4413      	add	r3, r2
 80219be:	b21b      	sxth	r3, r3
 80219c0:	930d      	str	r3, [sp, #52]	; 0x34
 80219c2:	4bbe      	ldr	r3, [pc, #760]	; (8021cbc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 80219c4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80219c6:	f893 b000 	ldrb.w	fp, [r3]
 80219ca:	f10b 3cff 	add.w	ip, fp, #4294967295
 80219ce:	f1dc 0300 	rsbs	r3, ip, #0
 80219d2:	eb43 030c 	adc.w	r3, r3, ip
 80219d6:	930e      	str	r3, [sp, #56]	; 0x38
 80219d8:	4621      	mov	r1, r4
 80219da:	4653      	mov	r3, sl
 80219dc:	a814      	add	r0, sp, #80	; 0x50
 80219de:	f7f6 fc90 	bl	8018302 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 80219e2:	4621      	mov	r1, r4
 80219e4:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 80219e8:	4653      	mov	r3, sl
 80219ea:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80219ec:	a814      	add	r0, sp, #80	; 0x50
 80219ee:	f7f6 fca5 	bl	801833c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 80219f2:	a918      	add	r1, sp, #96	; 0x60
 80219f4:	f821 0d02 	strh.w	r0, [r1, #-2]!
 80219f8:	a817      	add	r0, sp, #92	; 0x5c
 80219fa:	f7f6 fdcb 	bl	8018594 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 80219fe:	f1ba 0f00 	cmp.w	sl, #0
 8021a02:	f040 80f4 	bne.w	8021bee <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 8021a06:	f1bb 0f01 	cmp.w	fp, #1
 8021a0a:	f040 80f8 	bne.w	8021bfe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 8021a0e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8021a10:	2b00      	cmp	r3, #0
 8021a12:	f040 8145 	bne.w	8021ca0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 8021a16:	b2ba      	uxth	r2, r7
 8021a18:	b905      	cbnz	r5, 8021a1c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 8021a1a:	b16e      	cbz	r6, 8021a38 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 8021a1c:	fb06 5302 	mla	r3, r6, r2, r5
 8021a20:	9828      	ldr	r0, [sp, #160]	; 0xa0
 8021a22:	fb08 f303 	mul.w	r3, r8, r3
 8021a26:	4631      	mov	r1, r6
 8021a28:	f003 0607 	and.w	r6, r3, #7
 8021a2c:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 8021a30:	9328      	str	r3, [sp, #160]	; 0xa0
 8021a32:	eba9 0301 	sub.w	r3, r9, r1
 8021a36:	930a      	str	r3, [sp, #40]	; 0x28
 8021a38:	4651      	mov	r1, sl
 8021a3a:	980e      	ldr	r0, [sp, #56]	; 0x38
 8021a3c:	f7ff ff1c 	bl	8021878 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 8021a40:	4681      	mov	r9, r0
 8021a42:	980e      	ldr	r0, [sp, #56]	; 0x38
 8021a44:	f7ff ff42 	bl	80218cc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 8021a48:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8021a4a:	9909      	ldr	r1, [sp, #36]	; 0x24
 8021a4c:	eba3 0a01 	sub.w	sl, r3, r1
 8021a50:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021a52:	459a      	cmp	sl, r3
 8021a54:	bfa8      	it	ge
 8021a56:	469a      	movge	sl, r3
 8021a58:	f1ba 0f00 	cmp.w	sl, #0
 8021a5c:	4683      	mov	fp, r0
 8021a5e:	f340 811a 	ble.w	8021c96 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8021a62:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8021a64:	1b64      	subs	r4, r4, r5
 8021a66:	1b1c      	subs	r4, r3, r4
 8021a68:	42bc      	cmp	r4, r7
 8021a6a:	bfd4      	ite	le
 8021a6c:	ebc5 0504 	rsble	r5, r5, r4
 8021a70:	ebc5 0507 	rsbgt	r5, r5, r7
 8021a74:	2d00      	cmp	r5, #0
 8021a76:	f340 810e 	ble.w	8021c96 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8021a7a:	1b52      	subs	r2, r2, r5
 8021a7c:	fb08 f302 	mul.w	r3, r8, r2
 8021a80:	930f      	str	r3, [sp, #60]	; 0x3c
 8021a82:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8021a84:	2b00      	cmp	r3, #0
 8021a86:	f040 8116 	bne.w	8021cb6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 8021a8a:	4b8d      	ldr	r3, [pc, #564]	; (8021cc0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 8021a8c:	6818      	ldr	r0, [r3, #0]
 8021a8e:	6803      	ldr	r3, [r0, #0]
 8021a90:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8021a92:	4798      	blx	r3
 8021a94:	2301      	movs	r3, #1
 8021a96:	fa03 f308 	lsl.w	r3, r3, r8
 8021a9a:	4a8a      	ldr	r2, [pc, #552]	; (8021cc4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 8021a9c:	3b01      	subs	r3, #1
 8021a9e:	b2db      	uxtb	r3, r3
 8021aa0:	8811      	ldrh	r1, [r2, #0]
 8021aa2:	930e      	str	r3, [sp, #56]	; 0x38
 8021aa4:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 8021aa8:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 8021aac:	fb01 2303 	mla	r3, r1, r3, r2
 8021ab0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8021ab4:	930a      	str	r3, [sp, #40]	; 0x28
 8021ab6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8021ab8:	f3c3 4307 	ubfx	r3, r3, #16, #8
 8021abc:	9313      	str	r3, [sp, #76]	; 0x4c
 8021abe:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8021ac0:	0a19      	lsrs	r1, r3, #8
 8021ac2:	b2cb      	uxtb	r3, r1
 8021ac4:	9312      	str	r3, [sp, #72]	; 0x48
 8021ac6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8021ac8:	b2db      	uxtb	r3, r3
 8021aca:	9311      	str	r3, [sp, #68]	; 0x44
 8021acc:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8021ace:	095a      	lsrs	r2, r3, #5
 8021ad0:	4b7d      	ldr	r3, [pc, #500]	; (8021cc8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 8021ad2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021ad6:	400b      	ands	r3, r1
 8021ad8:	4313      	orrs	r3, r2
 8021ada:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8021adc:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8021ae0:	4313      	orrs	r3, r2
 8021ae2:	b29b      	uxth	r3, r3
 8021ae4:	9310      	str	r3, [sp, #64]	; 0x40
 8021ae6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021ae8:	781a      	ldrb	r2, [r3, #0]
 8021aea:	ea4f 0349 	mov.w	r3, r9, lsl #1
 8021aee:	4132      	asrs	r2, r6
 8021af0:	fb05 b919 	mls	r9, r5, r9, fp
 8021af4:	fb03 fb05 	mul.w	fp, r3, r5
 8021af8:	b2d2      	uxtb	r2, r2
 8021afa:	930d      	str	r3, [sp, #52]	; 0x34
 8021afc:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 8021b00:	f11a 3aff 	adds.w	sl, sl, #4294967295
 8021b04:	f0c0 80f5 	bcc.w	8021cf2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 8021b08:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 8021b0c:	46ae      	mov	lr, r5
 8021b0e:	f11e 3eff 	adds.w	lr, lr, #4294967295
 8021b12:	f0c0 80dd 	bcc.w	8021cd0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 8021b16:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8021b18:	4013      	ands	r3, r2
 8021b1a:	d055      	beq.n	8021bc8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 8021b1c:	20ff      	movs	r0, #255	; 0xff
 8021b1e:	990e      	ldr	r1, [sp, #56]	; 0x38
 8021b20:	fb90 f1f1 	sdiv	r1, r0, r1
 8021b24:	434b      	muls	r3, r1
 8021b26:	2bfe      	cmp	r3, #254	; 0xfe
 8021b28:	dd03      	ble.n	8021b32 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 8021b2a:	990c      	ldr	r1, [sp, #48]	; 0x30
 8021b2c:	4281      	cmp	r1, r0
 8021b2e:	f000 80cd 	beq.w	8021ccc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 8021b32:	990c      	ldr	r1, [sp, #48]	; 0x30
 8021b34:	f8bc 4000 	ldrh.w	r4, [ip]
 8021b38:	fb11 f303 	smulbb	r3, r1, r3
 8021b3c:	b29b      	uxth	r3, r3
 8021b3e:	1c59      	adds	r1, r3, #1
 8021b40:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8021b44:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8021b48:	b29f      	uxth	r7, r3
 8021b4a:	43db      	mvns	r3, r3
 8021b4c:	b2db      	uxtb	r3, r3
 8021b4e:	9309      	str	r3, [sp, #36]	; 0x24
 8021b50:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8021b52:	1220      	asrs	r0, r4, #8
 8021b54:	fb13 f907 	smulbb	r9, r3, r7
 8021b58:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8021b5c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021b5e:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 8021b62:	fb00 9003 	mla	r0, r0, r3, r9
 8021b66:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8021b68:	10e1      	asrs	r1, r4, #3
 8021b6a:	fb13 f907 	smulbb	r9, r3, r7
 8021b6e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8021b72:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021b74:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 8021b78:	fb01 9103 	mla	r1, r1, r3, r9
 8021b7c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8021b7e:	00e4      	lsls	r4, r4, #3
 8021b80:	fb13 f707 	smulbb	r7, r3, r7
 8021b84:	b2e4      	uxtb	r4, r4
 8021b86:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021b88:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8021b8c:	fb04 7403 	mla	r4, r4, r3, r7
 8021b90:	b280      	uxth	r0, r0
 8021b92:	b2a4      	uxth	r4, r4
 8021b94:	1c43      	adds	r3, r0, #1
 8021b96:	f104 0901 	add.w	r9, r4, #1
 8021b9a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8021b9e:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 8021ba2:	b289      	uxth	r1, r1
 8021ba4:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 8021ba8:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8021bac:	ea49 0000 	orr.w	r0, r9, r0
 8021bb0:	f101 0901 	add.w	r9, r1, #1
 8021bb4:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 8021bb8:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8021bbc:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8021bc0:	ea40 0009 	orr.w	r0, r0, r9
 8021bc4:	f8ac 0000 	strh.w	r0, [ip]
 8021bc8:	4446      	add	r6, r8
 8021bca:	b2b6      	uxth	r6, r6
 8021bcc:	2e07      	cmp	r6, #7
 8021bce:	bf81      	itttt	hi
 8021bd0:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 8021bd2:	785a      	ldrbhi	r2, [r3, #1]
 8021bd4:	3301      	addhi	r3, #1
 8021bd6:	9328      	strhi	r3, [sp, #160]	; 0xa0
 8021bd8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8021bda:	bf9a      	itte	ls
 8021bdc:	fa42 f208 	asrls.w	r2, r2, r8
 8021be0:	b2d2      	uxtbls	r2, r2
 8021be2:	2600      	movhi	r6, #0
 8021be4:	449c      	add	ip, r3
 8021be6:	e792      	b.n	8021b0e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 8021be8:	441c      	add	r4, r3
 8021bea:	b224      	sxth	r4, r4
 8021bec:	e6d5      	b.n	802199a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 8021bee:	f1ba 0f01 	cmp.w	sl, #1
 8021bf2:	f47f af0c 	bne.w	8021a0e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8021bf6:	f1bb 0f01 	cmp.w	fp, #1
 8021bfa:	f47f af08 	bne.w	8021a0e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8021bfe:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 8021cc0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 8021c02:	f8db 0000 	ldr.w	r0, [fp]
 8021c06:	6803      	ldr	r3, [r0, #0]
 8021c08:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8021c0a:	4798      	blx	r3
 8021c0c:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 8021c10:	465a      	mov	r2, fp
 8021c12:	d006      	beq.n	8021c22 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 8021c14:	f1b8 0f04 	cmp.w	r8, #4
 8021c18:	d140      	bne.n	8021c9c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 8021c1a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8021c1c:	3300      	adds	r3, #0
 8021c1e:	bf18      	it	ne
 8021c20:	2301      	movne	r3, #1
 8021c22:	0580      	lsls	r0, r0, #22
 8021c24:	d56e      	bpl.n	8021d04 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 8021c26:	f1b8 0f08 	cmp.w	r8, #8
 8021c2a:	d16b      	bne.n	8021d04 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 8021c2c:	2b00      	cmp	r3, #0
 8021c2e:	bf0c      	ite	eq
 8021c30:	f44f 7100 	moveq.w	r1, #512	; 0x200
 8021c34:	f44f 7180 	movne.w	r1, #256	; 0x100
 8021c38:	2d00      	cmp	r5, #0
 8021c3a:	f47f aee8 	bne.w	8021a0e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8021c3e:	2e00      	cmp	r6, #0
 8021c40:	f47f aee5 	bne.w	8021a0e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8021c44:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8021c46:	19e3      	adds	r3, r4, r7
 8021c48:	4283      	cmp	r3, r0
 8021c4a:	f73f aee0 	bgt.w	8021a0e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8021c4e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021c50:	980d      	ldr	r0, [sp, #52]	; 0x34
 8021c52:	444b      	add	r3, r9
 8021c54:	4283      	cmp	r3, r0
 8021c56:	f73f aeda 	bgt.w	8021a0e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8021c5a:	6810      	ldr	r0, [r2, #0]
 8021c5c:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 8021c60:	6804      	ldr	r4, [r0, #0]
 8021c62:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 8021c66:	b2bf      	uxth	r7, r7
 8021c68:	f1b8 0f08 	cmp.w	r8, #8
 8021c6c:	f04f 0500 	mov.w	r5, #0
 8021c70:	bf18      	it	ne
 8021c72:	3701      	addne	r7, #1
 8021c74:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8021c78:	990c      	ldr	r1, [sp, #48]	; 0x30
 8021c7a:	9104      	str	r1, [sp, #16]
 8021c7c:	bf18      	it	ne
 8021c7e:	f027 0701 	bicne.w	r7, r7, #1
 8021c82:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8021c84:	bf18      	it	ne
 8021c86:	b2bf      	uxthne	r7, r7
 8021c88:	e9cd 7102 	strd	r7, r1, [sp, #8]
 8021c8c:	e9cd 7900 	strd	r7, r9, [sp]
 8021c90:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8021c92:	6d64      	ldr	r4, [r4, #84]	; 0x54
 8021c94:	47a0      	blx	r4
 8021c96:	b019      	add	sp, #100	; 0x64
 8021c98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021c9c:	2300      	movs	r3, #0
 8021c9e:	e7c0      	b.n	8021c22 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 8021ca0:	2208      	movs	r2, #8
 8021ca2:	fb92 f3f8 	sdiv	r3, r2, r8
 8021ca6:	1e5a      	subs	r2, r3, #1
 8021ca8:	443a      	add	r2, r7
 8021caa:	fb92 f2f3 	sdiv	r2, r2, r3
 8021cae:	fb12 f203 	smulbb	r2, r2, r3
 8021cb2:	b292      	uxth	r2, r2
 8021cb4:	e6b0      	b.n	8021a18 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 8021cb6:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8021cb8:	e6ec      	b.n	8021a94 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 8021cba:	bf00      	nop
 8021cbc:	20013844 	.word	0x20013844
 8021cc0:	2001384c 	.word	0x2001384c
 8021cc4:	20013846 	.word	0x20013846
 8021cc8:	00fff800 	.word	0x00fff800
 8021ccc:	9810      	ldr	r0, [sp, #64]	; 0x40
 8021cce:	e779      	b.n	8021bc4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 8021cd0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8021cd2:	b153      	cbz	r3, 8021cea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 8021cd4:	441e      	add	r6, r3
 8021cd6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021cd8:	b2b6      	uxth	r6, r6
 8021cda:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 8021cde:	f006 0607 	and.w	r6, r6, #7
 8021ce2:	781a      	ldrb	r2, [r3, #0]
 8021ce4:	9328      	str	r3, [sp, #160]	; 0xa0
 8021ce6:	4132      	asrs	r2, r6
 8021ce8:	b2d2      	uxtb	r2, r2
 8021cea:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021cec:	445b      	add	r3, fp
 8021cee:	930a      	str	r3, [sp, #40]	; 0x28
 8021cf0:	e706      	b.n	8021b00 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 8021cf2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8021cf4:	2b00      	cmp	r3, #0
 8021cf6:	d1ce      	bne.n	8021c96 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8021cf8:	4b05      	ldr	r3, [pc, #20]	; (8021d10 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 8021cfa:	6818      	ldr	r0, [r3, #0]
 8021cfc:	6803      	ldr	r3, [r0, #0]
 8021cfe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8021d00:	4798      	blx	r3
 8021d02:	e7c8      	b.n	8021c96 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8021d04:	2b00      	cmp	r3, #0
 8021d06:	f43f ae82 	beq.w	8021a0e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8021d0a:	f44f 7180 	mov.w	r1, #256	; 0x100
 8021d0e:	e793      	b.n	8021c38 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 8021d10:	2001384c 	.word	0x2001384c

08021d14 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 8021d14:	b538      	push	{r3, r4, r5, lr}
 8021d16:	4c15      	ldr	r4, [pc, #84]	; (8021d6c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 8021d18:	7823      	ldrb	r3, [r4, #0]
 8021d1a:	f3bf 8f5b 	dmb	ish
 8021d1e:	07da      	lsls	r2, r3, #31
 8021d20:	4605      	mov	r5, r0
 8021d22:	d40b      	bmi.n	8021d3c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8021d24:	4620      	mov	r0, r4
 8021d26:	f00a fee2 	bl	802caee <__cxa_guard_acquire>
 8021d2a:	b138      	cbz	r0, 8021d3c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8021d2c:	4620      	mov	r0, r4
 8021d2e:	f00a feea 	bl	802cb06 <__cxa_guard_release>
 8021d32:	4a0f      	ldr	r2, [pc, #60]	; (8021d70 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8021d34:	490f      	ldr	r1, [pc, #60]	; (8021d74 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 8021d36:	4810      	ldr	r0, [pc, #64]	; (8021d78 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8021d38:	f00a fed2 	bl	802cae0 <__aeabi_atexit>
 8021d3c:	4c0f      	ldr	r4, [pc, #60]	; (8021d7c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 8021d3e:	7823      	ldrb	r3, [r4, #0]
 8021d40:	f3bf 8f5b 	dmb	ish
 8021d44:	07db      	lsls	r3, r3, #31
 8021d46:	d40b      	bmi.n	8021d60 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8021d48:	4620      	mov	r0, r4
 8021d4a:	f00a fed0 	bl	802caee <__cxa_guard_acquire>
 8021d4e:	b138      	cbz	r0, 8021d60 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8021d50:	4620      	mov	r0, r4
 8021d52:	f00a fed8 	bl	802cb06 <__cxa_guard_release>
 8021d56:	4a06      	ldr	r2, [pc, #24]	; (8021d70 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8021d58:	4909      	ldr	r1, [pc, #36]	; (8021d80 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 8021d5a:	480a      	ldr	r0, [pc, #40]	; (8021d84 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8021d5c:	f00a fec0 	bl	802cae0 <__aeabi_atexit>
 8021d60:	4b05      	ldr	r3, [pc, #20]	; (8021d78 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8021d62:	612b      	str	r3, [r5, #16]
 8021d64:	4b07      	ldr	r3, [pc, #28]	; (8021d84 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8021d66:	616b      	str	r3, [r5, #20]
 8021d68:	bd38      	pop	{r3, r4, r5, pc}
 8021d6a:	bf00      	nop
 8021d6c:	2001392c 	.word	0x2001392c
 8021d70:	20000000 	.word	0x20000000
 8021d74:	0801eb17 	.word	0x0801eb17
 8021d78:	200000d8 	.word	0x200000d8
 8021d7c:	20013930 	.word	0x20013930
 8021d80:	0801eb15 	.word	0x0801eb15
 8021d84:	200000dc 	.word	0x200000dc

08021d88 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 8021d88:	b538      	push	{r3, r4, r5, lr}
 8021d8a:	4c15      	ldr	r4, [pc, #84]	; (8021de0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 8021d8c:	7823      	ldrb	r3, [r4, #0]
 8021d8e:	f3bf 8f5b 	dmb	ish
 8021d92:	07da      	lsls	r2, r3, #31
 8021d94:	4605      	mov	r5, r0
 8021d96:	d40b      	bmi.n	8021db0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8021d98:	4620      	mov	r0, r4
 8021d9a:	f00a fea8 	bl	802caee <__cxa_guard_acquire>
 8021d9e:	b138      	cbz	r0, 8021db0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8021da0:	4620      	mov	r0, r4
 8021da2:	f00a feb0 	bl	802cb06 <__cxa_guard_release>
 8021da6:	4a0f      	ldr	r2, [pc, #60]	; (8021de4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8021da8:	490f      	ldr	r1, [pc, #60]	; (8021de8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 8021daa:	4810      	ldr	r0, [pc, #64]	; (8021dec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8021dac:	f00a fe98 	bl	802cae0 <__aeabi_atexit>
 8021db0:	4c0f      	ldr	r4, [pc, #60]	; (8021df0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 8021db2:	7823      	ldrb	r3, [r4, #0]
 8021db4:	f3bf 8f5b 	dmb	ish
 8021db8:	07db      	lsls	r3, r3, #31
 8021dba:	d40b      	bmi.n	8021dd4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8021dbc:	4620      	mov	r0, r4
 8021dbe:	f00a fe96 	bl	802caee <__cxa_guard_acquire>
 8021dc2:	b138      	cbz	r0, 8021dd4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8021dc4:	4620      	mov	r0, r4
 8021dc6:	f00a fe9e 	bl	802cb06 <__cxa_guard_release>
 8021dca:	4a06      	ldr	r2, [pc, #24]	; (8021de4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8021dcc:	4909      	ldr	r1, [pc, #36]	; (8021df4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 8021dce:	480a      	ldr	r0, [pc, #40]	; (8021df8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8021dd0:	f00a fe86 	bl	802cae0 <__aeabi_atexit>
 8021dd4:	4b05      	ldr	r3, [pc, #20]	; (8021dec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8021dd6:	60ab      	str	r3, [r5, #8]
 8021dd8:	4b07      	ldr	r3, [pc, #28]	; (8021df8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8021dda:	60eb      	str	r3, [r5, #12]
 8021ddc:	bd38      	pop	{r3, r4, r5, pc}
 8021dde:	bf00      	nop
 8021de0:	20013904 	.word	0x20013904
 8021de4:	20000000 	.word	0x20000000
 8021de8:	0801eb1b 	.word	0x0801eb1b
 8021dec:	200000b0 	.word	0x200000b0
 8021df0:	20013908 	.word	0x20013908
 8021df4:	0801eb19 	.word	0x0801eb19
 8021df8:	200000b4 	.word	0x200000b4

08021dfc <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 8021dfc:	b510      	push	{r4, lr}
 8021dfe:	4604      	mov	r4, r0
 8021e00:	f7ff ff88 	bl	8021d14 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 8021e04:	4620      	mov	r0, r4
 8021e06:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8021e0a:	f7ff bfbd 	b.w	8021d88 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

08021e10 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 8021e10:	b538      	push	{r3, r4, r5, lr}
 8021e12:	4c15      	ldr	r4, [pc, #84]	; (8021e68 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8021e14:	7823      	ldrb	r3, [r4, #0]
 8021e16:	f3bf 8f5b 	dmb	ish
 8021e1a:	07da      	lsls	r2, r3, #31
 8021e1c:	4605      	mov	r5, r0
 8021e1e:	d40b      	bmi.n	8021e38 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8021e20:	4620      	mov	r0, r4
 8021e22:	f00a fe64 	bl	802caee <__cxa_guard_acquire>
 8021e26:	b138      	cbz	r0, 8021e38 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8021e28:	4620      	mov	r0, r4
 8021e2a:	f00a fe6c 	bl	802cb06 <__cxa_guard_release>
 8021e2e:	4a0f      	ldr	r2, [pc, #60]	; (8021e6c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8021e30:	490f      	ldr	r1, [pc, #60]	; (8021e70 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 8021e32:	4810      	ldr	r0, [pc, #64]	; (8021e74 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8021e34:	f00a fe54 	bl	802cae0 <__aeabi_atexit>
 8021e38:	4c0f      	ldr	r4, [pc, #60]	; (8021e78 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 8021e3a:	7823      	ldrb	r3, [r4, #0]
 8021e3c:	f3bf 8f5b 	dmb	ish
 8021e40:	07db      	lsls	r3, r3, #31
 8021e42:	d40b      	bmi.n	8021e5c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8021e44:	4620      	mov	r0, r4
 8021e46:	f00a fe52 	bl	802caee <__cxa_guard_acquire>
 8021e4a:	b138      	cbz	r0, 8021e5c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8021e4c:	4620      	mov	r0, r4
 8021e4e:	f00a fe5a 	bl	802cb06 <__cxa_guard_release>
 8021e52:	4a06      	ldr	r2, [pc, #24]	; (8021e6c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8021e54:	4909      	ldr	r1, [pc, #36]	; (8021e7c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 8021e56:	480a      	ldr	r0, [pc, #40]	; (8021e80 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8021e58:	f00a fe42 	bl	802cae0 <__aeabi_atexit>
 8021e5c:	4b05      	ldr	r3, [pc, #20]	; (8021e74 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8021e5e:	622b      	str	r3, [r5, #32]
 8021e60:	4b07      	ldr	r3, [pc, #28]	; (8021e80 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8021e62:	626b      	str	r3, [r5, #36]	; 0x24
 8021e64:	bd38      	pop	{r3, r4, r5, pc}
 8021e66:	bf00      	nop
 8021e68:	20013934 	.word	0x20013934
 8021e6c:	20000000 	.word	0x20000000
 8021e70:	0801eb0f 	.word	0x0801eb0f
 8021e74:	200000e0 	.word	0x200000e0
 8021e78:	20013938 	.word	0x20013938
 8021e7c:	0801eb0d 	.word	0x0801eb0d
 8021e80:	200000e4 	.word	0x200000e4

08021e84 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8021e84:	b538      	push	{r3, r4, r5, lr}
 8021e86:	4c15      	ldr	r4, [pc, #84]	; (8021edc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8021e88:	7823      	ldrb	r3, [r4, #0]
 8021e8a:	f3bf 8f5b 	dmb	ish
 8021e8e:	07da      	lsls	r2, r3, #31
 8021e90:	4605      	mov	r5, r0
 8021e92:	d40b      	bmi.n	8021eac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8021e94:	4620      	mov	r0, r4
 8021e96:	f00a fe2a 	bl	802caee <__cxa_guard_acquire>
 8021e9a:	b138      	cbz	r0, 8021eac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8021e9c:	4620      	mov	r0, r4
 8021e9e:	f00a fe32 	bl	802cb06 <__cxa_guard_release>
 8021ea2:	4a0f      	ldr	r2, [pc, #60]	; (8021ee0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8021ea4:	490f      	ldr	r1, [pc, #60]	; (8021ee4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 8021ea6:	4810      	ldr	r0, [pc, #64]	; (8021ee8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8021ea8:	f00a fe1a 	bl	802cae0 <__aeabi_atexit>
 8021eac:	4c0f      	ldr	r4, [pc, #60]	; (8021eec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 8021eae:	7823      	ldrb	r3, [r4, #0]
 8021eb0:	f3bf 8f5b 	dmb	ish
 8021eb4:	07db      	lsls	r3, r3, #31
 8021eb6:	d40b      	bmi.n	8021ed0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8021eb8:	4620      	mov	r0, r4
 8021eba:	f00a fe18 	bl	802caee <__cxa_guard_acquire>
 8021ebe:	b138      	cbz	r0, 8021ed0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8021ec0:	4620      	mov	r0, r4
 8021ec2:	f00a fe20 	bl	802cb06 <__cxa_guard_release>
 8021ec6:	4a06      	ldr	r2, [pc, #24]	; (8021ee0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8021ec8:	4909      	ldr	r1, [pc, #36]	; (8021ef0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 8021eca:	480a      	ldr	r0, [pc, #40]	; (8021ef4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8021ecc:	f00a fe08 	bl	802cae0 <__aeabi_atexit>
 8021ed0:	4b05      	ldr	r3, [pc, #20]	; (8021ee8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8021ed2:	61ab      	str	r3, [r5, #24]
 8021ed4:	4b07      	ldr	r3, [pc, #28]	; (8021ef4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8021ed6:	61eb      	str	r3, [r5, #28]
 8021ed8:	bd38      	pop	{r3, r4, r5, pc}
 8021eda:	bf00      	nop
 8021edc:	2001390c 	.word	0x2001390c
 8021ee0:	20000000 	.word	0x20000000
 8021ee4:	0801eb13 	.word	0x0801eb13
 8021ee8:	200000b8 	.word	0x200000b8
 8021eec:	20013910 	.word	0x20013910
 8021ef0:	0801eb11 	.word	0x0801eb11
 8021ef4:	200000bc 	.word	0x200000bc

08021ef8 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 8021ef8:	b510      	push	{r4, lr}
 8021efa:	4604      	mov	r4, r0
 8021efc:	f7ff ff88 	bl	8021e10 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8021f00:	4620      	mov	r0, r4
 8021f02:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8021f06:	f7ff bfbd 	b.w	8021e84 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

08021f0c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 8021f0c:	b538      	push	{r3, r4, r5, lr}
 8021f0e:	4c15      	ldr	r4, [pc, #84]	; (8021f64 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8021f10:	7823      	ldrb	r3, [r4, #0]
 8021f12:	f3bf 8f5b 	dmb	ish
 8021f16:	07da      	lsls	r2, r3, #31
 8021f18:	4605      	mov	r5, r0
 8021f1a:	d40b      	bmi.n	8021f34 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8021f1c:	4620      	mov	r0, r4
 8021f1e:	f00a fde6 	bl	802caee <__cxa_guard_acquire>
 8021f22:	b138      	cbz	r0, 8021f34 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8021f24:	4620      	mov	r0, r4
 8021f26:	f00a fdee 	bl	802cb06 <__cxa_guard_release>
 8021f2a:	4a0f      	ldr	r2, [pc, #60]	; (8021f68 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8021f2c:	490f      	ldr	r1, [pc, #60]	; (8021f6c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 8021f2e:	4810      	ldr	r0, [pc, #64]	; (8021f70 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8021f30:	f00a fdd6 	bl	802cae0 <__aeabi_atexit>
 8021f34:	4c0f      	ldr	r4, [pc, #60]	; (8021f74 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 8021f36:	7823      	ldrb	r3, [r4, #0]
 8021f38:	f3bf 8f5b 	dmb	ish
 8021f3c:	07db      	lsls	r3, r3, #31
 8021f3e:	d40b      	bmi.n	8021f58 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8021f40:	4620      	mov	r0, r4
 8021f42:	f00a fdd4 	bl	802caee <__cxa_guard_acquire>
 8021f46:	b138      	cbz	r0, 8021f58 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8021f48:	4620      	mov	r0, r4
 8021f4a:	f00a fddc 	bl	802cb06 <__cxa_guard_release>
 8021f4e:	4a06      	ldr	r2, [pc, #24]	; (8021f68 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8021f50:	4909      	ldr	r1, [pc, #36]	; (8021f78 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 8021f52:	480a      	ldr	r0, [pc, #40]	; (8021f7c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8021f54:	f00a fdc4 	bl	802cae0 <__aeabi_atexit>
 8021f58:	4b05      	ldr	r3, [pc, #20]	; (8021f70 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8021f5a:	632b      	str	r3, [r5, #48]	; 0x30
 8021f5c:	4b07      	ldr	r3, [pc, #28]	; (8021f7c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8021f5e:	636b      	str	r3, [r5, #52]	; 0x34
 8021f60:	bd38      	pop	{r3, r4, r5, pc}
 8021f62:	bf00      	nop
 8021f64:	20013944 	.word	0x20013944
 8021f68:	20000000 	.word	0x20000000
 8021f6c:	0801eb07 	.word	0x0801eb07
 8021f70:	200000f0 	.word	0x200000f0
 8021f74:	20013948 	.word	0x20013948
 8021f78:	0801eb05 	.word	0x0801eb05
 8021f7c:	200000f4 	.word	0x200000f4

08021f80 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 8021f80:	b538      	push	{r3, r4, r5, lr}
 8021f82:	4c15      	ldr	r4, [pc, #84]	; (8021fd8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 8021f84:	7823      	ldrb	r3, [r4, #0]
 8021f86:	f3bf 8f5b 	dmb	ish
 8021f8a:	07da      	lsls	r2, r3, #31
 8021f8c:	4605      	mov	r5, r0
 8021f8e:	d40b      	bmi.n	8021fa8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8021f90:	4620      	mov	r0, r4
 8021f92:	f00a fdac 	bl	802caee <__cxa_guard_acquire>
 8021f96:	b138      	cbz	r0, 8021fa8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8021f98:	4620      	mov	r0, r4
 8021f9a:	f00a fdb4 	bl	802cb06 <__cxa_guard_release>
 8021f9e:	4a0f      	ldr	r2, [pc, #60]	; (8021fdc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8021fa0:	490f      	ldr	r1, [pc, #60]	; (8021fe0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 8021fa2:	4810      	ldr	r0, [pc, #64]	; (8021fe4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8021fa4:	f00a fd9c 	bl	802cae0 <__aeabi_atexit>
 8021fa8:	4c0f      	ldr	r4, [pc, #60]	; (8021fe8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 8021faa:	7823      	ldrb	r3, [r4, #0]
 8021fac:	f3bf 8f5b 	dmb	ish
 8021fb0:	07db      	lsls	r3, r3, #31
 8021fb2:	d40b      	bmi.n	8021fcc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8021fb4:	4620      	mov	r0, r4
 8021fb6:	f00a fd9a 	bl	802caee <__cxa_guard_acquire>
 8021fba:	b138      	cbz	r0, 8021fcc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8021fbc:	4620      	mov	r0, r4
 8021fbe:	f00a fda2 	bl	802cb06 <__cxa_guard_release>
 8021fc2:	4a06      	ldr	r2, [pc, #24]	; (8021fdc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8021fc4:	4909      	ldr	r1, [pc, #36]	; (8021fec <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 8021fc6:	480a      	ldr	r0, [pc, #40]	; (8021ff0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8021fc8:	f00a fd8a 	bl	802cae0 <__aeabi_atexit>
 8021fcc:	4b05      	ldr	r3, [pc, #20]	; (8021fe4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8021fce:	62ab      	str	r3, [r5, #40]	; 0x28
 8021fd0:	4b07      	ldr	r3, [pc, #28]	; (8021ff0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8021fd2:	62eb      	str	r3, [r5, #44]	; 0x2c
 8021fd4:	bd38      	pop	{r3, r4, r5, pc}
 8021fd6:	bf00      	nop
 8021fd8:	20013914 	.word	0x20013914
 8021fdc:	20000000 	.word	0x20000000
 8021fe0:	0801eb0b 	.word	0x0801eb0b
 8021fe4:	200000c0 	.word	0x200000c0
 8021fe8:	20013918 	.word	0x20013918
 8021fec:	0801eb09 	.word	0x0801eb09
 8021ff0:	200000c4 	.word	0x200000c4

08021ff4 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 8021ff4:	b510      	push	{r4, lr}
 8021ff6:	4604      	mov	r4, r0
 8021ff8:	f7ff ff88 	bl	8021f0c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 8021ffc:	4620      	mov	r0, r4
 8021ffe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8022002:	f7ff bfbd 	b.w	8021f80 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

08022008 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 8022008:	b538      	push	{r3, r4, r5, lr}
 802200a:	4c15      	ldr	r4, [pc, #84]	; (8022060 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 802200c:	7823      	ldrb	r3, [r4, #0]
 802200e:	f3bf 8f5b 	dmb	ish
 8022012:	07da      	lsls	r2, r3, #31
 8022014:	4605      	mov	r5, r0
 8022016:	d40b      	bmi.n	8022030 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8022018:	4620      	mov	r0, r4
 802201a:	f00a fd68 	bl	802caee <__cxa_guard_acquire>
 802201e:	b138      	cbz	r0, 8022030 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8022020:	4620      	mov	r0, r4
 8022022:	f00a fd70 	bl	802cb06 <__cxa_guard_release>
 8022026:	4a0f      	ldr	r2, [pc, #60]	; (8022064 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8022028:	490f      	ldr	r1, [pc, #60]	; (8022068 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 802202a:	4810      	ldr	r0, [pc, #64]	; (802206c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 802202c:	f00a fd58 	bl	802cae0 <__aeabi_atexit>
 8022030:	4c0f      	ldr	r4, [pc, #60]	; (8022070 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 8022032:	7823      	ldrb	r3, [r4, #0]
 8022034:	f3bf 8f5b 	dmb	ish
 8022038:	07db      	lsls	r3, r3, #31
 802203a:	d40b      	bmi.n	8022054 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 802203c:	4620      	mov	r0, r4
 802203e:	f00a fd56 	bl	802caee <__cxa_guard_acquire>
 8022042:	b138      	cbz	r0, 8022054 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8022044:	4620      	mov	r0, r4
 8022046:	f00a fd5e 	bl	802cb06 <__cxa_guard_release>
 802204a:	4a06      	ldr	r2, [pc, #24]	; (8022064 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 802204c:	4909      	ldr	r1, [pc, #36]	; (8022074 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 802204e:	480a      	ldr	r0, [pc, #40]	; (8022078 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8022050:	f00a fd46 	bl	802cae0 <__aeabi_atexit>
 8022054:	4b05      	ldr	r3, [pc, #20]	; (802206c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8022056:	652b      	str	r3, [r5, #80]	; 0x50
 8022058:	4b07      	ldr	r3, [pc, #28]	; (8022078 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 802205a:	656b      	str	r3, [r5, #84]	; 0x54
 802205c:	bd38      	pop	{r3, r4, r5, pc}
 802205e:	bf00      	nop
 8022060:	2001394c 	.word	0x2001394c
 8022064:	20000000 	.word	0x20000000
 8022068:	0801eaf7 	.word	0x0801eaf7
 802206c:	200000f8 	.word	0x200000f8
 8022070:	20013950 	.word	0x20013950
 8022074:	0801eaf5 	.word	0x0801eaf5
 8022078:	200000fc 	.word	0x200000fc

0802207c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 802207c:	b538      	push	{r3, r4, r5, lr}
 802207e:	4c15      	ldr	r4, [pc, #84]	; (80220d4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 8022080:	7823      	ldrb	r3, [r4, #0]
 8022082:	f3bf 8f5b 	dmb	ish
 8022086:	07da      	lsls	r2, r3, #31
 8022088:	4605      	mov	r5, r0
 802208a:	d40b      	bmi.n	80220a4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 802208c:	4620      	mov	r0, r4
 802208e:	f00a fd2e 	bl	802caee <__cxa_guard_acquire>
 8022092:	b138      	cbz	r0, 80220a4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8022094:	4620      	mov	r0, r4
 8022096:	f00a fd36 	bl	802cb06 <__cxa_guard_release>
 802209a:	4a0f      	ldr	r2, [pc, #60]	; (80220d8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 802209c:	490f      	ldr	r1, [pc, #60]	; (80220dc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 802209e:	4810      	ldr	r0, [pc, #64]	; (80220e0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 80220a0:	f00a fd1e 	bl	802cae0 <__aeabi_atexit>
 80220a4:	4c0f      	ldr	r4, [pc, #60]	; (80220e4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 80220a6:	7823      	ldrb	r3, [r4, #0]
 80220a8:	f3bf 8f5b 	dmb	ish
 80220ac:	07db      	lsls	r3, r3, #31
 80220ae:	d40b      	bmi.n	80220c8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 80220b0:	4620      	mov	r0, r4
 80220b2:	f00a fd1c 	bl	802caee <__cxa_guard_acquire>
 80220b6:	b138      	cbz	r0, 80220c8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 80220b8:	4620      	mov	r0, r4
 80220ba:	f00a fd24 	bl	802cb06 <__cxa_guard_release>
 80220be:	4a06      	ldr	r2, [pc, #24]	; (80220d8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 80220c0:	4909      	ldr	r1, [pc, #36]	; (80220e8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 80220c2:	480a      	ldr	r0, [pc, #40]	; (80220ec <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 80220c4:	f00a fd0c 	bl	802cae0 <__aeabi_atexit>
 80220c8:	4b05      	ldr	r3, [pc, #20]	; (80220e0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 80220ca:	64ab      	str	r3, [r5, #72]	; 0x48
 80220cc:	4b07      	ldr	r3, [pc, #28]	; (80220ec <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 80220ce:	64eb      	str	r3, [r5, #76]	; 0x4c
 80220d0:	bd38      	pop	{r3, r4, r5, pc}
 80220d2:	bf00      	nop
 80220d4:	20013954 	.word	0x20013954
 80220d8:	20000000 	.word	0x20000000
 80220dc:	0801eafb 	.word	0x0801eafb
 80220e0:	20000100 	.word	0x20000100
 80220e4:	20013958 	.word	0x20013958
 80220e8:	0801eaf9 	.word	0x0801eaf9
 80220ec:	20000104 	.word	0x20000104

080220f0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 80220f0:	b538      	push	{r3, r4, r5, lr}
 80220f2:	4c15      	ldr	r4, [pc, #84]	; (8022148 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 80220f4:	7823      	ldrb	r3, [r4, #0]
 80220f6:	f3bf 8f5b 	dmb	ish
 80220fa:	07da      	lsls	r2, r3, #31
 80220fc:	4605      	mov	r5, r0
 80220fe:	d40b      	bmi.n	8022118 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8022100:	4620      	mov	r0, r4
 8022102:	f00a fcf4 	bl	802caee <__cxa_guard_acquire>
 8022106:	b138      	cbz	r0, 8022118 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8022108:	4620      	mov	r0, r4
 802210a:	f00a fcfc 	bl	802cb06 <__cxa_guard_release>
 802210e:	4a0f      	ldr	r2, [pc, #60]	; (802214c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8022110:	490f      	ldr	r1, [pc, #60]	; (8022150 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 8022112:	4810      	ldr	r0, [pc, #64]	; (8022154 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8022114:	f00a fce4 	bl	802cae0 <__aeabi_atexit>
 8022118:	4c0f      	ldr	r4, [pc, #60]	; (8022158 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 802211a:	7823      	ldrb	r3, [r4, #0]
 802211c:	f3bf 8f5b 	dmb	ish
 8022120:	07db      	lsls	r3, r3, #31
 8022122:	d40b      	bmi.n	802213c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8022124:	4620      	mov	r0, r4
 8022126:	f00a fce2 	bl	802caee <__cxa_guard_acquire>
 802212a:	b138      	cbz	r0, 802213c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 802212c:	4620      	mov	r0, r4
 802212e:	f00a fcea 	bl	802cb06 <__cxa_guard_release>
 8022132:	4a06      	ldr	r2, [pc, #24]	; (802214c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8022134:	4909      	ldr	r1, [pc, #36]	; (802215c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 8022136:	480a      	ldr	r0, [pc, #40]	; (8022160 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8022138:	f00a fcd2 	bl	802cae0 <__aeabi_atexit>
 802213c:	4b05      	ldr	r3, [pc, #20]	; (8022154 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 802213e:	642b      	str	r3, [r5, #64]	; 0x40
 8022140:	4b07      	ldr	r3, [pc, #28]	; (8022160 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8022142:	646b      	str	r3, [r5, #68]	; 0x44
 8022144:	bd38      	pop	{r3, r4, r5, pc}
 8022146:	bf00      	nop
 8022148:	2001391c 	.word	0x2001391c
 802214c:	20000000 	.word	0x20000000
 8022150:	0801eaff 	.word	0x0801eaff
 8022154:	200000c8 	.word	0x200000c8
 8022158:	20013920 	.word	0x20013920
 802215c:	0801eafd 	.word	0x0801eafd
 8022160:	200000cc 	.word	0x200000cc

08022164 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 8022164:	b538      	push	{r3, r4, r5, lr}
 8022166:	4c15      	ldr	r4, [pc, #84]	; (80221bc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 8022168:	7823      	ldrb	r3, [r4, #0]
 802216a:	f3bf 8f5b 	dmb	ish
 802216e:	07da      	lsls	r2, r3, #31
 8022170:	4605      	mov	r5, r0
 8022172:	d40b      	bmi.n	802218c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8022174:	4620      	mov	r0, r4
 8022176:	f00a fcba 	bl	802caee <__cxa_guard_acquire>
 802217a:	b138      	cbz	r0, 802218c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 802217c:	4620      	mov	r0, r4
 802217e:	f00a fcc2 	bl	802cb06 <__cxa_guard_release>
 8022182:	4a0f      	ldr	r2, [pc, #60]	; (80221c0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8022184:	490f      	ldr	r1, [pc, #60]	; (80221c4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 8022186:	4810      	ldr	r0, [pc, #64]	; (80221c8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8022188:	f00a fcaa 	bl	802cae0 <__aeabi_atexit>
 802218c:	4c0f      	ldr	r4, [pc, #60]	; (80221cc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 802218e:	7823      	ldrb	r3, [r4, #0]
 8022190:	f3bf 8f5b 	dmb	ish
 8022194:	07db      	lsls	r3, r3, #31
 8022196:	d40b      	bmi.n	80221b0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8022198:	4620      	mov	r0, r4
 802219a:	f00a fca8 	bl	802caee <__cxa_guard_acquire>
 802219e:	b138      	cbz	r0, 80221b0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 80221a0:	4620      	mov	r0, r4
 80221a2:	f00a fcb0 	bl	802cb06 <__cxa_guard_release>
 80221a6:	4a06      	ldr	r2, [pc, #24]	; (80221c0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 80221a8:	4909      	ldr	r1, [pc, #36]	; (80221d0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 80221aa:	480a      	ldr	r0, [pc, #40]	; (80221d4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 80221ac:	f00a fc98 	bl	802cae0 <__aeabi_atexit>
 80221b0:	4b05      	ldr	r3, [pc, #20]	; (80221c8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 80221b2:	63ab      	str	r3, [r5, #56]	; 0x38
 80221b4:	4b07      	ldr	r3, [pc, #28]	; (80221d4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 80221b6:	63eb      	str	r3, [r5, #60]	; 0x3c
 80221b8:	bd38      	pop	{r3, r4, r5, pc}
 80221ba:	bf00      	nop
 80221bc:	2001393c 	.word	0x2001393c
 80221c0:	20000000 	.word	0x20000000
 80221c4:	0801eb03 	.word	0x0801eb03
 80221c8:	200000e8 	.word	0x200000e8
 80221cc:	20013940 	.word	0x20013940
 80221d0:	0801eb01 	.word	0x0801eb01
 80221d4:	200000ec 	.word	0x200000ec

080221d8 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 80221d8:	b510      	push	{r4, lr}
 80221da:	4604      	mov	r4, r0
 80221dc:	f7ff ff14 	bl	8022008 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 80221e0:	4620      	mov	r0, r4
 80221e2:	f7ff ff85 	bl	80220f0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 80221e6:	4620      	mov	r0, r4
 80221e8:	f7ff ff48 	bl	802207c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 80221ec:	4620      	mov	r0, r4
 80221ee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80221f2:	f7ff bfb7 	b.w	8022164 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

080221f8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 80221f8:	b538      	push	{r3, r4, r5, lr}
 80221fa:	4c15      	ldr	r4, [pc, #84]	; (8022250 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 80221fc:	7823      	ldrb	r3, [r4, #0]
 80221fe:	f3bf 8f5b 	dmb	ish
 8022202:	07da      	lsls	r2, r3, #31
 8022204:	4605      	mov	r5, r0
 8022206:	d40b      	bmi.n	8022220 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8022208:	4620      	mov	r0, r4
 802220a:	f00a fc70 	bl	802caee <__cxa_guard_acquire>
 802220e:	b138      	cbz	r0, 8022220 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8022210:	4620      	mov	r0, r4
 8022212:	f00a fc78 	bl	802cb06 <__cxa_guard_release>
 8022216:	4a0f      	ldr	r2, [pc, #60]	; (8022254 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8022218:	490f      	ldr	r1, [pc, #60]	; (8022258 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 802221a:	4810      	ldr	r0, [pc, #64]	; (802225c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 802221c:	f00a fc60 	bl	802cae0 <__aeabi_atexit>
 8022220:	4c0f      	ldr	r4, [pc, #60]	; (8022260 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 8022222:	7823      	ldrb	r3, [r4, #0]
 8022224:	f3bf 8f5b 	dmb	ish
 8022228:	07db      	lsls	r3, r3, #31
 802222a:	d40b      	bmi.n	8022244 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 802222c:	4620      	mov	r0, r4
 802222e:	f00a fc5e 	bl	802caee <__cxa_guard_acquire>
 8022232:	b138      	cbz	r0, 8022244 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8022234:	4620      	mov	r0, r4
 8022236:	f00a fc66 	bl	802cb06 <__cxa_guard_release>
 802223a:	4a06      	ldr	r2, [pc, #24]	; (8022254 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 802223c:	4909      	ldr	r1, [pc, #36]	; (8022264 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 802223e:	480a      	ldr	r0, [pc, #40]	; (8022268 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8022240:	f00a fc4e 	bl	802cae0 <__aeabi_atexit>
 8022244:	4b05      	ldr	r3, [pc, #20]	; (802225c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8022246:	662b      	str	r3, [r5, #96]	; 0x60
 8022248:	4b07      	ldr	r3, [pc, #28]	; (8022268 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 802224a:	666b      	str	r3, [r5, #100]	; 0x64
 802224c:	bd38      	pop	{r3, r4, r5, pc}
 802224e:	bf00      	nop
 8022250:	20013924 	.word	0x20013924
 8022254:	20000000 	.word	0x20000000
 8022258:	0801eaef 	.word	0x0801eaef
 802225c:	200000d0 	.word	0x200000d0
 8022260:	20013928 	.word	0x20013928
 8022264:	0801eaed 	.word	0x0801eaed
 8022268:	200000d4 	.word	0x200000d4

0802226c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 802226c:	b538      	push	{r3, r4, r5, lr}
 802226e:	4c15      	ldr	r4, [pc, #84]	; (80222c4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 8022270:	7823      	ldrb	r3, [r4, #0]
 8022272:	f3bf 8f5b 	dmb	ish
 8022276:	07da      	lsls	r2, r3, #31
 8022278:	4605      	mov	r5, r0
 802227a:	d40b      	bmi.n	8022294 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 802227c:	4620      	mov	r0, r4
 802227e:	f00a fc36 	bl	802caee <__cxa_guard_acquire>
 8022282:	b138      	cbz	r0, 8022294 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8022284:	4620      	mov	r0, r4
 8022286:	f00a fc3e 	bl	802cb06 <__cxa_guard_release>
 802228a:	4a0f      	ldr	r2, [pc, #60]	; (80222c8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 802228c:	490f      	ldr	r1, [pc, #60]	; (80222cc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 802228e:	4810      	ldr	r0, [pc, #64]	; (80222d0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8022290:	f00a fc26 	bl	802cae0 <__aeabi_atexit>
 8022294:	4c0f      	ldr	r4, [pc, #60]	; (80222d4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 8022296:	7823      	ldrb	r3, [r4, #0]
 8022298:	f3bf 8f5b 	dmb	ish
 802229c:	07db      	lsls	r3, r3, #31
 802229e:	d40b      	bmi.n	80222b8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 80222a0:	4620      	mov	r0, r4
 80222a2:	f00a fc24 	bl	802caee <__cxa_guard_acquire>
 80222a6:	b138      	cbz	r0, 80222b8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 80222a8:	4620      	mov	r0, r4
 80222aa:	f00a fc2c 	bl	802cb06 <__cxa_guard_release>
 80222ae:	4a06      	ldr	r2, [pc, #24]	; (80222c8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 80222b0:	4909      	ldr	r1, [pc, #36]	; (80222d8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 80222b2:	480a      	ldr	r0, [pc, #40]	; (80222dc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 80222b4:	f00a fc14 	bl	802cae0 <__aeabi_atexit>
 80222b8:	4b05      	ldr	r3, [pc, #20]	; (80222d0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 80222ba:	65ab      	str	r3, [r5, #88]	; 0x58
 80222bc:	4b07      	ldr	r3, [pc, #28]	; (80222dc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 80222be:	65eb      	str	r3, [r5, #92]	; 0x5c
 80222c0:	bd38      	pop	{r3, r4, r5, pc}
 80222c2:	bf00      	nop
 80222c4:	200138fc 	.word	0x200138fc
 80222c8:	20000000 	.word	0x20000000
 80222cc:	0801eaf3 	.word	0x0801eaf3
 80222d0:	200000a8 	.word	0x200000a8
 80222d4:	20013900 	.word	0x20013900
 80222d8:	0801eaf1 	.word	0x0801eaf1
 80222dc:	200000ac 	.word	0x200000ac

080222e0 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 80222e0:	b510      	push	{r4, lr}
 80222e2:	4604      	mov	r4, r0
 80222e4:	f7ff ff88 	bl	80221f8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 80222e8:	4620      	mov	r0, r4
 80222ea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80222ee:	f7ff bfbd 	b.w	802226c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

080222f4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 80222f4:	b538      	push	{r3, r4, r5, lr}
 80222f6:	4c15      	ldr	r4, [pc, #84]	; (802234c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 80222f8:	7823      	ldrb	r3, [r4, #0]
 80222fa:	f3bf 8f5b 	dmb	ish
 80222fe:	07da      	lsls	r2, r3, #31
 8022300:	4605      	mov	r5, r0
 8022302:	d40b      	bmi.n	802231c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8022304:	4620      	mov	r0, r4
 8022306:	f00a fbf2 	bl	802caee <__cxa_guard_acquire>
 802230a:	b138      	cbz	r0, 802231c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 802230c:	4620      	mov	r0, r4
 802230e:	f00a fbfa 	bl	802cb06 <__cxa_guard_release>
 8022312:	4a0f      	ldr	r2, [pc, #60]	; (8022350 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8022314:	490f      	ldr	r1, [pc, #60]	; (8022354 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 8022316:	4810      	ldr	r0, [pc, #64]	; (8022358 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8022318:	f00a fbe2 	bl	802cae0 <__aeabi_atexit>
 802231c:	4c0f      	ldr	r4, [pc, #60]	; (802235c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 802231e:	7823      	ldrb	r3, [r4, #0]
 8022320:	f3bf 8f5b 	dmb	ish
 8022324:	07db      	lsls	r3, r3, #31
 8022326:	d40b      	bmi.n	8022340 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8022328:	4620      	mov	r0, r4
 802232a:	f00a fbe0 	bl	802caee <__cxa_guard_acquire>
 802232e:	b138      	cbz	r0, 8022340 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8022330:	4620      	mov	r0, r4
 8022332:	f00a fbe8 	bl	802cb06 <__cxa_guard_release>
 8022336:	4a06      	ldr	r2, [pc, #24]	; (8022350 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8022338:	4909      	ldr	r1, [pc, #36]	; (8022360 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 802233a:	480a      	ldr	r0, [pc, #40]	; (8022364 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 802233c:	f00a fbd0 	bl	802cae0 <__aeabi_atexit>
 8022340:	4b05      	ldr	r3, [pc, #20]	; (8022358 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8022342:	672b      	str	r3, [r5, #112]	; 0x70
 8022344:	4b07      	ldr	r3, [pc, #28]	; (8022364 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8022346:	676b      	str	r3, [r5, #116]	; 0x74
 8022348:	bd38      	pop	{r3, r4, r5, pc}
 802234a:	bf00      	nop
 802234c:	200138f4 	.word	0x200138f4
 8022350:	20000000 	.word	0x20000000
 8022354:	0801eae7 	.word	0x0801eae7
 8022358:	200000a0 	.word	0x200000a0
 802235c:	200138f8 	.word	0x200138f8
 8022360:	0801eae5 	.word	0x0801eae5
 8022364:	200000a4 	.word	0x200000a4

08022368 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 8022368:	b538      	push	{r3, r4, r5, lr}
 802236a:	4c15      	ldr	r4, [pc, #84]	; (80223c0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 802236c:	7823      	ldrb	r3, [r4, #0]
 802236e:	f3bf 8f5b 	dmb	ish
 8022372:	07da      	lsls	r2, r3, #31
 8022374:	4605      	mov	r5, r0
 8022376:	d40b      	bmi.n	8022390 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8022378:	4620      	mov	r0, r4
 802237a:	f00a fbb8 	bl	802caee <__cxa_guard_acquire>
 802237e:	b138      	cbz	r0, 8022390 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8022380:	4620      	mov	r0, r4
 8022382:	f00a fbc0 	bl	802cb06 <__cxa_guard_release>
 8022386:	4a0f      	ldr	r2, [pc, #60]	; (80223c4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8022388:	490f      	ldr	r1, [pc, #60]	; (80223c8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 802238a:	4810      	ldr	r0, [pc, #64]	; (80223cc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 802238c:	f00a fba8 	bl	802cae0 <__aeabi_atexit>
 8022390:	4c0f      	ldr	r4, [pc, #60]	; (80223d0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 8022392:	7823      	ldrb	r3, [r4, #0]
 8022394:	f3bf 8f5b 	dmb	ish
 8022398:	07db      	lsls	r3, r3, #31
 802239a:	d40b      	bmi.n	80223b4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 802239c:	4620      	mov	r0, r4
 802239e:	f00a fba6 	bl	802caee <__cxa_guard_acquire>
 80223a2:	b138      	cbz	r0, 80223b4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 80223a4:	4620      	mov	r0, r4
 80223a6:	f00a fbae 	bl	802cb06 <__cxa_guard_release>
 80223aa:	4a06      	ldr	r2, [pc, #24]	; (80223c4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 80223ac:	4909      	ldr	r1, [pc, #36]	; (80223d4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 80223ae:	480a      	ldr	r0, [pc, #40]	; (80223d8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 80223b0:	f00a fb96 	bl	802cae0 <__aeabi_atexit>
 80223b4:	4b05      	ldr	r3, [pc, #20]	; (80223cc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 80223b6:	66ab      	str	r3, [r5, #104]	; 0x68
 80223b8:	4b07      	ldr	r3, [pc, #28]	; (80223d8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 80223ba:	66eb      	str	r3, [r5, #108]	; 0x6c
 80223bc:	bd38      	pop	{r3, r4, r5, pc}
 80223be:	bf00      	nop
 80223c0:	200138ec 	.word	0x200138ec
 80223c4:	20000000 	.word	0x20000000
 80223c8:	0801eaeb 	.word	0x0801eaeb
 80223cc:	20000098 	.word	0x20000098
 80223d0:	200138f0 	.word	0x200138f0
 80223d4:	0801eae9 	.word	0x0801eae9
 80223d8:	2000009c 	.word	0x2000009c

080223dc <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 80223dc:	b510      	push	{r4, lr}
 80223de:	4604      	mov	r4, r0
 80223e0:	f7ff ff88 	bl	80222f4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 80223e4:	4620      	mov	r0, r4
 80223e6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80223ea:	f7ff bfbd 	b.w	8022368 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

080223ee <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 80223ee:	b510      	push	{r4, lr}
 80223f0:	4604      	mov	r4, r0
 80223f2:	f7ff fff3 	bl	80223dc <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 80223f6:	4620      	mov	r0, r4
 80223f8:	f7ff ff72 	bl	80222e0 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 80223fc:	4620      	mov	r0, r4
 80223fe:	f7ff fdf9 	bl	8021ff4 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 8022402:	4620      	mov	r0, r4
 8022404:	f7ff fcfa 	bl	8021dfc <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 8022408:	4620      	mov	r0, r4
 802240a:	f7ff fd75 	bl	8021ef8 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 802240e:	4620      	mov	r0, r4
 8022410:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8022414:	f7ff bee0 	b.w	80221d8 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

08022418 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 8022418:	b538      	push	{r3, r4, r5, lr}
 802241a:	4c0b      	ldr	r4, [pc, #44]	; (8022448 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 802241c:	7823      	ldrb	r3, [r4, #0]
 802241e:	f3bf 8f5b 	dmb	ish
 8022422:	07db      	lsls	r3, r3, #31
 8022424:	4605      	mov	r5, r0
 8022426:	d40b      	bmi.n	8022440 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 8022428:	4620      	mov	r0, r4
 802242a:	f00a fb60 	bl	802caee <__cxa_guard_acquire>
 802242e:	b138      	cbz	r0, 8022440 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 8022430:	4620      	mov	r0, r4
 8022432:	f00a fb68 	bl	802cb06 <__cxa_guard_release>
 8022436:	4a05      	ldr	r2, [pc, #20]	; (802244c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 8022438:	4905      	ldr	r1, [pc, #20]	; (8022450 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 802243a:	4806      	ldr	r0, [pc, #24]	; (8022454 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 802243c:	f00a fb50 	bl	802cae0 <__aeabi_atexit>
 8022440:	4b04      	ldr	r3, [pc, #16]	; (8022454 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 8022442:	67ab      	str	r3, [r5, #120]	; 0x78
 8022444:	bd38      	pop	{r3, r4, r5, pc}
 8022446:	bf00      	nop
 8022448:	200138e0 	.word	0x200138e0
 802244c:	20000000 	.word	0x20000000
 8022450:	0801eae3 	.word	0x0801eae3
 8022454:	20000090 	.word	0x20000090

08022458 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 8022458:	b538      	push	{r3, r4, r5, lr}
 802245a:	4c0b      	ldr	r4, [pc, #44]	; (8022488 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 802245c:	7823      	ldrb	r3, [r4, #0]
 802245e:	f3bf 8f5b 	dmb	ish
 8022462:	07db      	lsls	r3, r3, #31
 8022464:	4605      	mov	r5, r0
 8022466:	d40b      	bmi.n	8022480 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 8022468:	4620      	mov	r0, r4
 802246a:	f00a fb40 	bl	802caee <__cxa_guard_acquire>
 802246e:	b138      	cbz	r0, 8022480 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 8022470:	4620      	mov	r0, r4
 8022472:	f00a fb48 	bl	802cb06 <__cxa_guard_release>
 8022476:	4a05      	ldr	r2, [pc, #20]	; (802248c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 8022478:	4905      	ldr	r1, [pc, #20]	; (8022490 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 802247a:	4806      	ldr	r0, [pc, #24]	; (8022494 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 802247c:	f00a fb30 	bl	802cae0 <__aeabi_atexit>
 8022480:	4b04      	ldr	r3, [pc, #16]	; (8022494 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 8022482:	67eb      	str	r3, [r5, #124]	; 0x7c
 8022484:	bd38      	pop	{r3, r4, r5, pc}
 8022486:	bf00      	nop
 8022488:	200138e4 	.word	0x200138e4
 802248c:	20000000 	.word	0x20000000
 8022490:	0801eae1 	.word	0x0801eae1
 8022494:	20000094 	.word	0x20000094

08022498 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 8022498:	b570      	push	{r4, r5, r6, lr}
 802249a:	4d0d      	ldr	r5, [pc, #52]	; (80224d0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 802249c:	4c0d      	ldr	r4, [pc, #52]	; (80224d4 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 802249e:	782b      	ldrb	r3, [r5, #0]
 80224a0:	f3bf 8f5b 	dmb	ish
 80224a4:	f013 0f01 	tst.w	r3, #1
 80224a8:	4606      	mov	r6, r0
 80224aa:	d10d      	bne.n	80224c8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 80224ac:	4628      	mov	r0, r5
 80224ae:	f00a fb1e 	bl	802caee <__cxa_guard_acquire>
 80224b2:	b148      	cbz	r0, 80224c8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 80224b4:	4b08      	ldr	r3, [pc, #32]	; (80224d8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 80224b6:	6023      	str	r3, [r4, #0]
 80224b8:	4628      	mov	r0, r5
 80224ba:	f00a fb24 	bl	802cb06 <__cxa_guard_release>
 80224be:	4a07      	ldr	r2, [pc, #28]	; (80224dc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 80224c0:	4907      	ldr	r1, [pc, #28]	; (80224e0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 80224c2:	4620      	mov	r0, r4
 80224c4:	f00a fb0c 	bl	802cae0 <__aeabi_atexit>
 80224c8:	f8c6 4080 	str.w	r4, [r6, #128]	; 0x80
 80224cc:	bd70      	pop	{r4, r5, r6, pc}
 80224ce:	bf00      	nop
 80224d0:	200138e8 	.word	0x200138e8
 80224d4:	2001395c 	.word	0x2001395c
 80224d8:	08031ea8 	.word	0x08031ea8
 80224dc:	20000000 	.word	0x20000000
 80224e0:	0801eadf 	.word	0x0801eadf

080224e4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 80224e4:	b510      	push	{r4, lr}
 80224e6:	4604      	mov	r4, r0
 80224e8:	f7ff ff96 	bl	8022418 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 80224ec:	4620      	mov	r0, r4
 80224ee:	f7ff ffb3 	bl	8022458 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 80224f2:	4620      	mov	r0, r4
 80224f4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80224f8:	f7ff bfce 	b.w	8022498 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

080224fc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 80224fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022500:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 8022504:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 8022508:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 802250c:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 8022510:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 8022514:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 8022518:	8808      	ldrh	r0, [r1, #0]
 802251a:	fb05 4c0e 	mla	ip, r5, lr, r4
 802251e:	2d00      	cmp	r5, #0
 8022520:	eb02 0a0c 	add.w	sl, r2, ip
 8022524:	f2c0 80b0 	blt.w	8022688 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 8022528:	45ab      	cmp	fp, r5
 802252a:	f340 80ad 	ble.w	8022688 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 802252e:	2c00      	cmp	r4, #0
 8022530:	f2c0 80a8 	blt.w	8022684 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 8022534:	45a6      	cmp	lr, r4
 8022536:	f340 80a5 	ble.w	8022684 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 802253a:	f812 200c 	ldrb.w	r2, [r2, ip]
 802253e:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 8022542:	1c62      	adds	r2, r4, #1
 8022544:	f100 80a3 	bmi.w	802268e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8022548:	4596      	cmp	lr, r2
 802254a:	f340 80a0 	ble.w	802268e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 802254e:	f1b9 0f00 	cmp.w	r9, #0
 8022552:	f000 809c 	beq.w	802268e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8022556:	f89a 2001 	ldrb.w	r2, [sl, #1]
 802255a:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 802255e:	3501      	adds	r5, #1
 8022560:	f100 8099 	bmi.w	8022696 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8022564:	45ab      	cmp	fp, r5
 8022566:	f340 8096 	ble.w	8022696 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 802256a:	2f00      	cmp	r7, #0
 802256c:	f000 8093 	beq.w	8022696 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8022570:	2c00      	cmp	r4, #0
 8022572:	f2c0 808e 	blt.w	8022692 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 8022576:	45a6      	cmp	lr, r4
 8022578:	f340 808b 	ble.w	8022692 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 802257c:	f81a 200e 	ldrb.w	r2, [sl, lr]
 8022580:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 8022584:	3401      	adds	r4, #1
 8022586:	f100 8089 	bmi.w	802269c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 802258a:	45a6      	cmp	lr, r4
 802258c:	f340 8086 	ble.w	802269c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8022590:	f1b9 0f00 	cmp.w	r9, #0
 8022594:	f000 8082 	beq.w	802269c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8022598:	44d6      	add	lr, sl
 802259a:	f89e 2001 	ldrb.w	r2, [lr, #1]
 802259e:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 80225a2:	ea4f 4408 	mov.w	r4, r8, lsl #16
 80225a6:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80225aa:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 80225ae:	fb19 fe07 	smulbb	lr, r9, r7
 80225b2:	ea44 0808 	orr.w	r8, r4, r8
 80225b6:	ea4f 440c 	mov.w	r4, ip, lsl #16
 80225ba:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 80225be:	f1c7 0210 	rsb	r2, r7, #16
 80225c2:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80225c6:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80225ca:	ea44 0c0c 	orr.w	ip, r4, ip
 80225ce:	eba2 0209 	sub.w	r2, r2, r9
 80225d2:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 80225d6:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 80225da:	fb04 f40c 	mul.w	r4, r4, ip
 80225de:	fb02 4808 	mla	r8, r2, r8, r4
 80225e2:	041a      	lsls	r2, r3, #16
 80225e4:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80225e8:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80225ec:	4313      	orrs	r3, r2
 80225ee:	042a      	lsls	r2, r5, #16
 80225f0:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80225f4:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80225f8:	fb0e 8303 	mla	r3, lr, r3, r8
 80225fc:	432a      	orrs	r2, r5
 80225fe:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 8022602:	fb07 3202 	mla	r2, r7, r2, r3
 8022606:	0d53      	lsrs	r3, r2, #21
 8022608:	0952      	lsrs	r2, r2, #5
 802260a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802260e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022612:	431a      	orrs	r2, r3
 8022614:	b293      	uxth	r3, r2
 8022616:	b2b4      	uxth	r4, r6
 8022618:	1202      	asrs	r2, r0, #8
 802261a:	43f6      	mvns	r6, r6
 802261c:	b2f6      	uxtb	r6, r6
 802261e:	121d      	asrs	r5, r3, #8
 8022620:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8022624:	fb12 f206 	smulbb	r2, r2, r6
 8022628:	10c7      	asrs	r7, r0, #3
 802262a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 802262e:	00c0      	lsls	r0, r0, #3
 8022630:	fb05 2504 	mla	r5, r5, r4, r2
 8022634:	b2c0      	uxtb	r0, r0
 8022636:	10da      	asrs	r2, r3, #3
 8022638:	00db      	lsls	r3, r3, #3
 802263a:	b2db      	uxtb	r3, r3
 802263c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8022640:	fb10 f006 	smulbb	r0, r0, r6
 8022644:	b2ad      	uxth	r5, r5
 8022646:	fb03 0004 	mla	r0, r3, r4, r0
 802264a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802264e:	fb17 f706 	smulbb	r7, r7, r6
 8022652:	b280      	uxth	r0, r0
 8022654:	1c6b      	adds	r3, r5, #1
 8022656:	fb02 7204 	mla	r2, r2, r4, r7
 802265a:	b292      	uxth	r2, r2
 802265c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8022660:	1c43      	adds	r3, r0, #1
 8022662:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8022666:	1c50      	adds	r0, r2, #1
 8022668:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 802266c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8022670:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8022674:	0952      	lsrs	r2, r2, #5
 8022676:	432b      	orrs	r3, r5
 8022678:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802267c:	4313      	orrs	r3, r2
 802267e:	800b      	strh	r3, [r1, #0]
 8022680:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022684:	4680      	mov	r8, r0
 8022686:	e75c      	b.n	8022542 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 8022688:	4684      	mov	ip, r0
 802268a:	4680      	mov	r8, r0
 802268c:	e767      	b.n	802255e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 802268e:	4684      	mov	ip, r0
 8022690:	e765      	b.n	802255e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 8022692:	4605      	mov	r5, r0
 8022694:	e776      	b.n	8022584 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 8022696:	4603      	mov	r3, r0
 8022698:	4605      	mov	r5, r0
 802269a:	e782      	b.n	80225a2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 802269c:	4603      	mov	r3, r0
 802269e:	e780      	b.n	80225a2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

080226a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80226a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80226a4:	b099      	sub	sp, #100	; 0x64
 80226a6:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 80226aa:	9215      	str	r2, [sp, #84]	; 0x54
 80226ac:	9309      	str	r3, [sp, #36]	; 0x24
 80226ae:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 80226b0:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 80226b4:	930d      	str	r3, [sp, #52]	; 0x34
 80226b6:	910c      	str	r1, [sp, #48]	; 0x30
 80226b8:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 80226bc:	9016      	str	r0, [sp, #88]	; 0x58
 80226be:	6850      	ldr	r0, [r2, #4]
 80226c0:	6812      	ldr	r2, [r2, #0]
 80226c2:	fb00 1303 	mla	r3, r0, r3, r1
 80226c6:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 80226ca:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80226cc:	681b      	ldr	r3, [r3, #0]
 80226ce:	930b      	str	r3, [sp, #44]	; 0x2c
 80226d0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80226d2:	685e      	ldr	r6, [r3, #4]
 80226d4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80226d6:	43db      	mvns	r3, r3
 80226d8:	b2db      	uxtb	r3, r3
 80226da:	3604      	adds	r6, #4
 80226dc:	930a      	str	r3, [sp, #40]	; 0x28
 80226de:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80226e0:	2b00      	cmp	r3, #0
 80226e2:	dc03      	bgt.n	80226ec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 80226e4:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80226e6:	2b00      	cmp	r3, #0
 80226e8:	f340 8225 	ble.w	8022b36 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 80226ec:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80226ee:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80226f2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80226f6:	1e48      	subs	r0, r1, #1
 80226f8:	1e57      	subs	r7, r2, #1
 80226fa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80226fc:	2b00      	cmp	r3, #0
 80226fe:	f340 80e3 	ble.w	80228c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8022702:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 8022706:	ea4f 4325 	mov.w	r3, r5, asr #16
 802270a:	d406      	bmi.n	802271a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802270c:	4584      	cmp	ip, r0
 802270e:	da04      	bge.n	802271a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8022710:	2b00      	cmp	r3, #0
 8022712:	db02      	blt.n	802271a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8022714:	42bb      	cmp	r3, r7
 8022716:	f2c0 80d8 	blt.w	80228ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 802271a:	f11c 0c01 	adds.w	ip, ip, #1
 802271e:	f100 80c9 	bmi.w	80228b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8022722:	4561      	cmp	r1, ip
 8022724:	f2c0 80c6 	blt.w	80228b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8022728:	3301      	adds	r3, #1
 802272a:	f100 80c3 	bmi.w	80228b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 802272e:	429a      	cmp	r2, r3
 8022730:	f2c0 80c0 	blt.w	80228b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8022734:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8022738:	4647      	mov	r7, r8
 802273a:	f1bb 0f00 	cmp.w	fp, #0
 802273e:	f340 80e3 	ble.w	8022908 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 8022742:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8022744:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8022746:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 802274a:	689b      	ldr	r3, [r3, #8]
 802274c:	ea5f 422a 	movs.w	r2, sl, asr #16
 8022750:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8022754:	f3ca 3003 	ubfx	r0, sl, #12, #4
 8022758:	f3c5 3103 	ubfx	r1, r5, #12, #4
 802275c:	f100 8121 	bmi.w	80229a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8022760:	f103 39ff 	add.w	r9, r3, #4294967295
 8022764:	454a      	cmp	r2, r9
 8022766:	f280 811c 	bge.w	80229a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 802276a:	f1bc 0f00 	cmp.w	ip, #0
 802276e:	f2c0 8118 	blt.w	80229a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8022772:	f10e 39ff 	add.w	r9, lr, #4294967295
 8022776:	45cc      	cmp	ip, r9
 8022778:	f280 8113 	bge.w	80229a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 802277c:	b21b      	sxth	r3, r3
 802277e:	fb0c 2203 	mla	r2, ip, r3, r2
 8022782:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022784:	eb04 0902 	add.w	r9, r4, r2
 8022788:	5ca2      	ldrb	r2, [r4, r2]
 802278a:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 802278e:	2800      	cmp	r0, #0
 8022790:	f000 80fe 	beq.w	8022990 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8022794:	f899 2001 	ldrb.w	r2, [r9, #1]
 8022798:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 802279c:	9211      	str	r2, [sp, #68]	; 0x44
 802279e:	b151      	cbz	r1, 80227b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80227a0:	eb09 0203 	add.w	r2, r9, r3
 80227a4:	f819 3003 	ldrb.w	r3, [r9, r3]
 80227a8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80227ac:	930f      	str	r3, [sp, #60]	; 0x3c
 80227ae:	7853      	ldrb	r3, [r2, #1]
 80227b0:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80227b4:	9312      	str	r3, [sp, #72]	; 0x48
 80227b6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80227b8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80227ba:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80227be:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80227c2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80227c6:	ea4c 0c03 	orr.w	ip, ip, r3
 80227ca:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80227cc:	041b      	lsls	r3, r3, #16
 80227ce:	fb10 f201 	smulbb	r2, r0, r1
 80227d2:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 80227d6:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80227da:	10d2      	asrs	r2, r2, #3
 80227dc:	4323      	orrs	r3, r4
 80227de:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 80227e2:	4353      	muls	r3, r2
 80227e4:	fb09 330c 	mla	r3, r9, ip, r3
 80227e8:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 80227ec:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80227f0:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80227f4:	ea4c 0e0e 	orr.w	lr, ip, lr
 80227f8:	f1c1 0c10 	rsb	ip, r1, #16
 80227fc:	ebac 0c00 	sub.w	ip, ip, r0
 8022800:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8022804:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8022808:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 802280a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 802280c:	0418      	lsls	r0, r3, #16
 802280e:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8022812:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8022816:	4318      	orrs	r0, r3
 8022818:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 802281c:	fb02 c200 	mla	r2, r2, r0, ip
 8022820:	0d53      	lsrs	r3, r2, #21
 8022822:	0952      	lsrs	r2, r2, #5
 8022824:	8838      	ldrh	r0, [r7, #0]
 8022826:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802282a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802282e:	431a      	orrs	r2, r3
 8022830:	b292      	uxth	r2, r2
 8022832:	1201      	asrs	r1, r0, #8
 8022834:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 8022838:	ea4f 2c22 	mov.w	ip, r2, asr #8
 802283c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8022840:	fb11 f104 	smulbb	r1, r1, r4
 8022844:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8022848:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 802284c:	00c0      	lsls	r0, r0, #3
 802284e:	fb0c 1c03 	mla	ip, ip, r3, r1
 8022852:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8022856:	10d1      	asrs	r1, r2, #3
 8022858:	b2c0      	uxtb	r0, r0
 802285a:	00d2      	lsls	r2, r2, #3
 802285c:	b2d2      	uxtb	r2, r2
 802285e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8022862:	fb1e fe04 	smulbb	lr, lr, r4
 8022866:	fb10 f004 	smulbb	r0, r0, r4
 802286a:	fa1f fc8c 	uxth.w	ip, ip
 802286e:	fb01 e103 	mla	r1, r1, r3, lr
 8022872:	fb02 0303 	mla	r3, r2, r3, r0
 8022876:	b29a      	uxth	r2, r3
 8022878:	f10c 0301 	add.w	r3, ip, #1
 802287c:	b289      	uxth	r1, r1
 802287e:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8022882:	1c53      	adds	r3, r2, #1
 8022884:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8022888:	1c4a      	adds	r2, r1, #1
 802288a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 802288e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8022892:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8022896:	0949      	lsrs	r1, r1, #5
 8022898:	ea43 030c 	orr.w	r3, r3, ip
 802289c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80228a0:	430b      	orrs	r3, r1
 80228a2:	803b      	strh	r3, [r7, #0]
 80228a4:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80228a6:	449a      	add	sl, r3
 80228a8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80228aa:	3702      	adds	r7, #2
 80228ac:	441d      	add	r5, r3
 80228ae:	f10b 3bff 	add.w	fp, fp, #4294967295
 80228b2:	e742      	b.n	802273a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80228b4:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80228b6:	449a      	add	sl, r3
 80228b8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80228ba:	441d      	add	r5, r3
 80228bc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80228be:	3b01      	subs	r3, #1
 80228c0:	9309      	str	r3, [sp, #36]	; 0x24
 80228c2:	f108 0802 	add.w	r8, r8, #2
 80228c6:	e718      	b.n	80226fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 80228c8:	d023      	beq.n	8022912 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 80228ca:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80228cc:	9825      	ldr	r0, [sp, #148]	; 0x94
 80228ce:	3b01      	subs	r3, #1
 80228d0:	fb00 a003 	mla	r0, r0, r3, sl
 80228d4:	1400      	asrs	r0, r0, #16
 80228d6:	f53f af2d 	bmi.w	8022734 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80228da:	3901      	subs	r1, #1
 80228dc:	4288      	cmp	r0, r1
 80228de:	f6bf af29 	bge.w	8022734 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80228e2:	9926      	ldr	r1, [sp, #152]	; 0x98
 80228e4:	fb01 5303 	mla	r3, r1, r3, r5
 80228e8:	141b      	asrs	r3, r3, #16
 80228ea:	f53f af23 	bmi.w	8022734 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80228ee:	3a01      	subs	r2, #1
 80228f0:	4293      	cmp	r3, r2
 80228f2:	f6bf af1f 	bge.w	8022734 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80228f6:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 80228fa:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 80228fe:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 8022902:	f1be 0f00 	cmp.w	lr, #0
 8022906:	dc6c      	bgt.n	80229e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8022908:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802290a:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 802290e:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8022912:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8022914:	2b00      	cmp	r3, #0
 8022916:	f340 810e 	ble.w	8022b36 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 802291a:	ee30 0a04 	vadd.f32	s0, s0, s8
 802291e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8022922:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022926:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8022928:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802292c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022930:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022934:	eef0 6a62 	vmov.f32	s13, s5
 8022938:	ee61 7a27 	vmul.f32	s15, s2, s15
 802293c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022940:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022944:	ee16 aa90 	vmov	sl, s13
 8022948:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802294c:	eef0 6a43 	vmov.f32	s13, s6
 8022950:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022954:	ee12 2a90 	vmov	r2, s5
 8022958:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802295c:	fb92 f3f3 	sdiv	r3, r2, r3
 8022960:	ee13 2a10 	vmov	r2, s6
 8022964:	9325      	str	r3, [sp, #148]	; 0x94
 8022966:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8022968:	fb92 f3f3 	sdiv	r3, r2, r3
 802296c:	9326      	str	r3, [sp, #152]	; 0x98
 802296e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8022970:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8022972:	3b01      	subs	r3, #1
 8022974:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022978:	930c      	str	r3, [sp, #48]	; 0x30
 802297a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 802297c:	bf08      	it	eq
 802297e:	4613      	moveq	r3, r2
 8022980:	ee16 5a90 	vmov	r5, s13
 8022984:	9309      	str	r3, [sp, #36]	; 0x24
 8022986:	eeb0 3a67 	vmov.f32	s6, s15
 802298a:	eef0 2a47 	vmov.f32	s5, s14
 802298e:	e6a6      	b.n	80226de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8022990:	2900      	cmp	r1, #0
 8022992:	f43f af10 	beq.w	80227b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8022996:	f819 3003 	ldrb.w	r3, [r9, r3]
 802299a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 802299e:	930f      	str	r3, [sp, #60]	; 0x3c
 80229a0:	e709      	b.n	80227b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80229a2:	f112 0901 	adds.w	r9, r2, #1
 80229a6:	f53f af7d 	bmi.w	80228a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80229aa:	454b      	cmp	r3, r9
 80229ac:	f6ff af7a 	blt.w	80228a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80229b0:	f11c 0901 	adds.w	r9, ip, #1
 80229b4:	f53f af76 	bmi.w	80228a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80229b8:	45ce      	cmp	lr, r9
 80229ba:	f6ff af73 	blt.w	80228a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80229be:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80229c0:	9202      	str	r2, [sp, #8]
 80229c2:	b21b      	sxth	r3, r3
 80229c4:	fa0f f28e 	sxth.w	r2, lr
 80229c8:	e9cd 1405 	strd	r1, r4, [sp, #20]
 80229cc:	e9cd c003 	strd	ip, r0, [sp, #12]
 80229d0:	9201      	str	r2, [sp, #4]
 80229d2:	9300      	str	r3, [sp, #0]
 80229d4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80229d6:	9816      	ldr	r0, [sp, #88]	; 0x58
 80229d8:	4633      	mov	r3, r6
 80229da:	4639      	mov	r1, r7
 80229dc:	f7ff fd8e 	bl	80224fc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 80229e0:	e760      	b.n	80228a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80229e2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80229e4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80229e6:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80229ea:	ea4f 422a 	mov.w	r2, sl, asr #16
 80229ee:	1429      	asrs	r1, r5, #16
 80229f0:	fb03 2101 	mla	r1, r3, r1, r2
 80229f4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80229f6:	440a      	add	r2, r1
 80229f8:	5c61      	ldrb	r1, [r4, r1]
 80229fa:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 80229fe:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8022a02:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 8022a06:	f1bc 0f00 	cmp.w	ip, #0
 8022a0a:	f000 808c 	beq.w	8022b26 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 8022a0e:	7857      	ldrb	r7, [r2, #1]
 8022a10:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 8022a14:	9413      	str	r4, [sp, #76]	; 0x4c
 8022a16:	b140      	cbz	r0, 8022a2a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8022a18:	18d7      	adds	r7, r2, r3
 8022a1a:	5cd3      	ldrb	r3, [r2, r3]
 8022a1c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8022a20:	9310      	str	r3, [sp, #64]	; 0x40
 8022a22:	787b      	ldrb	r3, [r7, #1]
 8022a24:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8022a28:	9314      	str	r3, [sp, #80]	; 0x50
 8022a2a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8022a2c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8022a2e:	fb1c f200 	smulbb	r2, ip, r0
 8022a32:	041f      	lsls	r7, r3, #16
 8022a34:	10d2      	asrs	r2, r2, #3
 8022a36:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8022a3a:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 8022a3e:	431f      	orrs	r7, r3
 8022a40:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 8022a44:	9317      	str	r3, [sp, #92]	; 0x5c
 8022a46:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8022a48:	041b      	lsls	r3, r3, #16
 8022a4a:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 8022a4e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8022a52:	ea43 030b 	orr.w	r3, r3, fp
 8022a56:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8022a58:	4353      	muls	r3, r2
 8022a5a:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8022a5e:	fb04 3707 	mla	r7, r4, r7, r3
 8022a62:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8022a66:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8022a6a:	ea43 0b01 	orr.w	fp, r3, r1
 8022a6e:	f1c0 0110 	rsb	r1, r0, #16
 8022a72:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8022a74:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8022a76:	eba1 0c0c 	sub.w	ip, r1, ip
 8022a7a:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8022a7e:	fb0c 770b 	mla	r7, ip, fp, r7
 8022a82:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8022a86:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 8022a8a:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8022a8e:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8022a92:	ea4c 0c0b 	orr.w	ip, ip, fp
 8022a96:	fb02 770c 	mla	r7, r2, ip, r7
 8022a9a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8022a9c:	0d79      	lsrs	r1, r7, #21
 8022a9e:	097f      	lsrs	r7, r7, #5
 8022aa0:	8812      	ldrh	r2, [r2, #0]
 8022aa2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022aa6:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8022aaa:	430f      	orrs	r7, r1
 8022aac:	b2bb      	uxth	r3, r7
 8022aae:	1211      	asrs	r1, r2, #8
 8022ab0:	1218      	asrs	r0, r3, #8
 8022ab2:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8022ab6:	fb11 f104 	smulbb	r1, r1, r4
 8022aba:	10d7      	asrs	r7, r2, #3
 8022abc:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8022ac0:	00d2      	lsls	r2, r2, #3
 8022ac2:	fb00 1009 	mla	r0, r0, r9, r1
 8022ac6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8022aca:	10d9      	asrs	r1, r3, #3
 8022acc:	b2d2      	uxtb	r2, r2
 8022ace:	00db      	lsls	r3, r3, #3
 8022ad0:	fb17 f704 	smulbb	r7, r7, r4
 8022ad4:	fb12 f204 	smulbb	r2, r2, r4
 8022ad8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8022adc:	b2db      	uxtb	r3, r3
 8022ade:	b280      	uxth	r0, r0
 8022ae0:	fb01 7109 	mla	r1, r1, r9, r7
 8022ae4:	fb03 2309 	mla	r3, r3, r9, r2
 8022ae8:	b29b      	uxth	r3, r3
 8022aea:	b289      	uxth	r1, r1
 8022aec:	1c42      	adds	r2, r0, #1
 8022aee:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8022af2:	1c4f      	adds	r7, r1, #1
 8022af4:	1c5a      	adds	r2, r3, #1
 8022af6:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8022afa:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8022afe:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8022b02:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8022b06:	0949      	lsrs	r1, r1, #5
 8022b08:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8022b0a:	4310      	orrs	r0, r2
 8022b0c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022b10:	4308      	orrs	r0, r1
 8022b12:	f823 0b02 	strh.w	r0, [r3], #2
 8022b16:	930e      	str	r3, [sp, #56]	; 0x38
 8022b18:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8022b1a:	449a      	add	sl, r3
 8022b1c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8022b1e:	f10e 3eff 	add.w	lr, lr, #4294967295
 8022b22:	441d      	add	r5, r3
 8022b24:	e6ed      	b.n	8022902 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 8022b26:	2800      	cmp	r0, #0
 8022b28:	f43f af7f 	beq.w	8022a2a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8022b2c:	5cd3      	ldrb	r3, [r2, r3]
 8022b2e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8022b32:	9310      	str	r3, [sp, #64]	; 0x40
 8022b34:	e779      	b.n	8022a2a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8022b36:	b019      	add	sp, #100	; 0x64
 8022b38:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08022b3c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8022b3c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8022b40:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 8022b44:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 8022b48:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 8022b4c:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8022b50:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 8022b54:	8808      	ldrh	r0, [r1, #0]
 8022b56:	fb08 470e 	mla	r7, r8, lr, r4
 8022b5a:	f1b8 0f00 	cmp.w	r8, #0
 8022b5e:	eb02 0907 	add.w	r9, r2, r7
 8022b62:	db67      	blt.n	8022c34 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8022b64:	45c2      	cmp	sl, r8
 8022b66:	dd65      	ble.n	8022c34 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8022b68:	2c00      	cmp	r4, #0
 8022b6a:	db61      	blt.n	8022c30 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8022b6c:	45a6      	cmp	lr, r4
 8022b6e:	dd5f      	ble.n	8022c30 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8022b70:	5dd2      	ldrb	r2, [r2, r7]
 8022b72:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 8022b76:	1c62      	adds	r2, r4, #1
 8022b78:	d45f      	bmi.n	8022c3a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8022b7a:	4596      	cmp	lr, r2
 8022b7c:	dd5d      	ble.n	8022c3a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8022b7e:	2d00      	cmp	r5, #0
 8022b80:	d05b      	beq.n	8022c3a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8022b82:	f899 2001 	ldrb.w	r2, [r9, #1]
 8022b86:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8022b8a:	f118 0801 	adds.w	r8, r8, #1
 8022b8e:	d458      	bmi.n	8022c42 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8022b90:	45c2      	cmp	sl, r8
 8022b92:	dd56      	ble.n	8022c42 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8022b94:	2e00      	cmp	r6, #0
 8022b96:	d054      	beq.n	8022c42 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8022b98:	2c00      	cmp	r4, #0
 8022b9a:	db50      	blt.n	8022c3e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8022b9c:	45a6      	cmp	lr, r4
 8022b9e:	dd4e      	ble.n	8022c3e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8022ba0:	f819 200e 	ldrb.w	r2, [r9, lr]
 8022ba4:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8022ba8:	3401      	adds	r4, #1
 8022baa:	d407      	bmi.n	8022bbc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8022bac:	45a6      	cmp	lr, r4
 8022bae:	dd05      	ble.n	8022bbc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8022bb0:	b125      	cbz	r5, 8022bbc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8022bb2:	44ce      	add	lr, r9
 8022bb4:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8022bb8:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8022bbc:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8022bc0:	fb15 f406 	smulbb	r4, r5, r6
 8022bc4:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8022bc8:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8022bcc:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8022bd0:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8022bd4:	ea43 0c0c 	orr.w	ip, r3, ip
 8022bd8:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8022bdc:	f1c6 0310 	rsb	r3, r6, #16
 8022be0:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8022be4:	1b5b      	subs	r3, r3, r5
 8022be6:	ea4e 0707 	orr.w	r7, lr, r7
 8022bea:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8022bee:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8022bf2:	437d      	muls	r5, r7
 8022bf4:	fb03 5c0c 	mla	ip, r3, ip, r5
 8022bf8:	0403      	lsls	r3, r0, #16
 8022bfa:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8022bfe:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022c02:	4318      	orrs	r0, r3
 8022c04:	0413      	lsls	r3, r2, #16
 8022c06:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8022c0a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022c0e:	4313      	orrs	r3, r2
 8022c10:	fb04 c000 	mla	r0, r4, r0, ip
 8022c14:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8022c18:	fb06 0003 	mla	r0, r6, r3, r0
 8022c1c:	0d43      	lsrs	r3, r0, #21
 8022c1e:	0940      	lsrs	r0, r0, #5
 8022c20:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022c24:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022c28:	4318      	orrs	r0, r3
 8022c2a:	8008      	strh	r0, [r1, #0]
 8022c2c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8022c30:	4684      	mov	ip, r0
 8022c32:	e7a0      	b.n	8022b76 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 8022c34:	4607      	mov	r7, r0
 8022c36:	4684      	mov	ip, r0
 8022c38:	e7a7      	b.n	8022b8a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 8022c3a:	4607      	mov	r7, r0
 8022c3c:	e7a5      	b.n	8022b8a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 8022c3e:	4602      	mov	r2, r0
 8022c40:	e7b2      	b.n	8022ba8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 8022c42:	4602      	mov	r2, r0
 8022c44:	e7ba      	b.n	8022bbc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

08022c46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022c46:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022c4a:	b093      	sub	sp, #76	; 0x4c
 8022c4c:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8022c50:	920f      	str	r2, [sp, #60]	; 0x3c
 8022c52:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8022c54:	9108      	str	r1, [sp, #32]
 8022c56:	9306      	str	r3, [sp, #24]
 8022c58:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8022c5c:	9010      	str	r0, [sp, #64]	; 0x40
 8022c5e:	6850      	ldr	r0, [r2, #4]
 8022c60:	6812      	ldr	r2, [r2, #0]
 8022c62:	fb00 1303 	mla	r3, r0, r3, r1
 8022c66:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8022c6a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022c6c:	681b      	ldr	r3, [r3, #0]
 8022c6e:	9307      	str	r3, [sp, #28]
 8022c70:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022c72:	685f      	ldr	r7, [r3, #4]
 8022c74:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8022c78:	3704      	adds	r7, #4
 8022c7a:	9b08      	ldr	r3, [sp, #32]
 8022c7c:	2b00      	cmp	r3, #0
 8022c7e:	dc03      	bgt.n	8022c88 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8022c80:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8022c82:	2b00      	cmp	r3, #0
 8022c84:	f340 81b2 	ble.w	8022fec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8022c88:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022c8a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022c8e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022c92:	1e48      	subs	r0, r1, #1
 8022c94:	f102 3cff 	add.w	ip, r2, #4294967295
 8022c98:	9b06      	ldr	r3, [sp, #24]
 8022c9a:	2b00      	cmp	r3, #0
 8022c9c:	f340 80a9 	ble.w	8022df2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 8022ca0:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8022ca4:	ea4f 4326 	mov.w	r3, r6, asr #16
 8022ca8:	d406      	bmi.n	8022cb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8022caa:	4586      	cmp	lr, r0
 8022cac:	da04      	bge.n	8022cb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8022cae:	2b00      	cmp	r3, #0
 8022cb0:	db02      	blt.n	8022cb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8022cb2:	4563      	cmp	r3, ip
 8022cb4:	f2c0 809e 	blt.w	8022df4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8022cb8:	f11e 0e01 	adds.w	lr, lr, #1
 8022cbc:	f100 808f 	bmi.w	8022dde <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8022cc0:	4571      	cmp	r1, lr
 8022cc2:	f2c0 808c 	blt.w	8022dde <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8022cc6:	3301      	adds	r3, #1
 8022cc8:	f100 8089 	bmi.w	8022dde <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8022ccc:	429a      	cmp	r2, r3
 8022cce:	f2c0 8086 	blt.w	8022dde <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8022cd2:	f8dd b018 	ldr.w	fp, [sp, #24]
 8022cd6:	46c8      	mov	r8, r9
 8022cd8:	f1bb 0f00 	cmp.w	fp, #0
 8022cdc:	f340 80a6 	ble.w	8022e2c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8022ce0:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8022ce2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022ce4:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8022ce8:	689b      	ldr	r3, [r3, #8]
 8022cea:	1422      	asrs	r2, r4, #16
 8022cec:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8022cf0:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8022cf4:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8022cf8:	f100 80e3 	bmi.w	8022ec2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8022cfc:	f103 3aff 	add.w	sl, r3, #4294967295
 8022d00:	4552      	cmp	r2, sl
 8022d02:	f280 80de 	bge.w	8022ec2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8022d06:	f1bc 0f00 	cmp.w	ip, #0
 8022d0a:	f2c0 80da 	blt.w	8022ec2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8022d0e:	f10e 3aff 	add.w	sl, lr, #4294967295
 8022d12:	45d4      	cmp	ip, sl
 8022d14:	f280 80d5 	bge.w	8022ec2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8022d18:	b21b      	sxth	r3, r3
 8022d1a:	fb0c 2203 	mla	r2, ip, r3, r2
 8022d1e:	9d07      	ldr	r5, [sp, #28]
 8022d20:	eb05 0a02 	add.w	sl, r5, r2
 8022d24:	5caa      	ldrb	r2, [r5, r2]
 8022d26:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 8022d2a:	2800      	cmp	r0, #0
 8022d2c:	f000 80c0 	beq.w	8022eb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 8022d30:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8022d34:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 8022d38:	920b      	str	r2, [sp, #44]	; 0x2c
 8022d3a:	b151      	cbz	r1, 8022d52 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8022d3c:	eb0a 0203 	add.w	r2, sl, r3
 8022d40:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8022d44:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8022d48:	9309      	str	r3, [sp, #36]	; 0x24
 8022d4a:	7853      	ldrb	r3, [r2, #1]
 8022d4c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8022d50:	930c      	str	r3, [sp, #48]	; 0x30
 8022d52:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8022d54:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8022d56:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8022d5a:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8022d5e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8022d62:	ea4c 0c03 	orr.w	ip, ip, r3
 8022d66:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8022d68:	041b      	lsls	r3, r3, #16
 8022d6a:	fb10 f201 	smulbb	r2, r0, r1
 8022d6e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8022d72:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8022d76:	10d2      	asrs	r2, r2, #3
 8022d78:	432b      	orrs	r3, r5
 8022d7a:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 8022d7e:	4353      	muls	r3, r2
 8022d80:	fb0a 330c 	mla	r3, sl, ip, r3
 8022d84:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8022d88:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8022d8c:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8022d90:	ea4c 0e0e 	orr.w	lr, ip, lr
 8022d94:	f1c1 0c10 	rsb	ip, r1, #16
 8022d98:	ebac 0c00 	sub.w	ip, ip, r0
 8022d9c:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8022da0:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8022da4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022da6:	0418      	lsls	r0, r3, #16
 8022da8:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8022dac:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8022db0:	4318      	orrs	r0, r3
 8022db2:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8022db6:	fb02 c200 	mla	r2, r2, r0, ip
 8022dba:	0d53      	lsrs	r3, r2, #21
 8022dbc:	0952      	lsrs	r2, r2, #5
 8022dbe:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022dc2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022dc6:	431a      	orrs	r2, r3
 8022dc8:	f8a8 2000 	strh.w	r2, [r8]
 8022dcc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8022dce:	441c      	add	r4, r3
 8022dd0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022dd2:	f108 0802 	add.w	r8, r8, #2
 8022dd6:	441e      	add	r6, r3
 8022dd8:	f10b 3bff 	add.w	fp, fp, #4294967295
 8022ddc:	e77c      	b.n	8022cd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8022dde:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8022de0:	441c      	add	r4, r3
 8022de2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022de4:	441e      	add	r6, r3
 8022de6:	9b06      	ldr	r3, [sp, #24]
 8022de8:	3b01      	subs	r3, #1
 8022dea:	9306      	str	r3, [sp, #24]
 8022dec:	f109 0902 	add.w	r9, r9, #2
 8022df0:	e752      	b.n	8022c98 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8022df2:	d020      	beq.n	8022e36 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8022df4:	9b06      	ldr	r3, [sp, #24]
 8022df6:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8022df8:	3b01      	subs	r3, #1
 8022dfa:	fb00 4003 	mla	r0, r0, r3, r4
 8022dfe:	1400      	asrs	r0, r0, #16
 8022e00:	f53f af67 	bmi.w	8022cd2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8022e04:	3901      	subs	r1, #1
 8022e06:	4288      	cmp	r0, r1
 8022e08:	f6bf af63 	bge.w	8022cd2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8022e0c:	9920      	ldr	r1, [sp, #128]	; 0x80
 8022e0e:	fb01 6303 	mla	r3, r1, r3, r6
 8022e12:	141b      	asrs	r3, r3, #16
 8022e14:	f53f af5d 	bmi.w	8022cd2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8022e18:	3a01      	subs	r2, #1
 8022e1a:	4293      	cmp	r3, r2
 8022e1c:	f6bf af59 	bge.w	8022cd2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8022e20:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8022e24:	46ca      	mov	sl, r9
 8022e26:	f1b8 0f00 	cmp.w	r8, #0
 8022e2a:	dc67      	bgt.n	8022efc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8022e2c:	9b06      	ldr	r3, [sp, #24]
 8022e2e:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8022e32:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8022e36:	9b08      	ldr	r3, [sp, #32]
 8022e38:	2b00      	cmp	r3, #0
 8022e3a:	f340 80d7 	ble.w	8022fec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8022e3e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022e42:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022e46:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8022e4a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022e4c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022e50:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022e54:	eeb0 6a62 	vmov.f32	s12, s5
 8022e58:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022e5c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8022e60:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022e64:	ee16 4a10 	vmov	r4, s12
 8022e68:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8022e6c:	eeb0 6a43 	vmov.f32	s12, s6
 8022e70:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022e74:	ee12 2a90 	vmov	r2, s5
 8022e78:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022e7c:	fb92 f3f3 	sdiv	r3, r2, r3
 8022e80:	ee13 2a10 	vmov	r2, s6
 8022e84:	931f      	str	r3, [sp, #124]	; 0x7c
 8022e86:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022e88:	fb92 f3f3 	sdiv	r3, r2, r3
 8022e8c:	9320      	str	r3, [sp, #128]	; 0x80
 8022e8e:	9b08      	ldr	r3, [sp, #32]
 8022e90:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8022e92:	3b01      	subs	r3, #1
 8022e94:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8022e98:	9308      	str	r3, [sp, #32]
 8022e9a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022e9c:	bf08      	it	eq
 8022e9e:	4613      	moveq	r3, r2
 8022ea0:	ee16 6a10 	vmov	r6, s12
 8022ea4:	9306      	str	r3, [sp, #24]
 8022ea6:	eeb0 3a67 	vmov.f32	s6, s15
 8022eaa:	eef0 2a47 	vmov.f32	s5, s14
 8022eae:	e6e4      	b.n	8022c7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8022eb0:	2900      	cmp	r1, #0
 8022eb2:	f43f af4e 	beq.w	8022d52 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8022eb6:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8022eba:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8022ebe:	9309      	str	r3, [sp, #36]	; 0x24
 8022ec0:	e747      	b.n	8022d52 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8022ec2:	f112 0a01 	adds.w	sl, r2, #1
 8022ec6:	d481      	bmi.n	8022dcc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8022ec8:	4553      	cmp	r3, sl
 8022eca:	f6ff af7f 	blt.w	8022dcc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8022ece:	f11c 0a01 	adds.w	sl, ip, #1
 8022ed2:	f53f af7b 	bmi.w	8022dcc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8022ed6:	45d6      	cmp	lr, sl
 8022ed8:	f6ff af78 	blt.w	8022dcc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8022edc:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 8022ee0:	b21b      	sxth	r3, r3
 8022ee2:	fa0f f28e 	sxth.w	r2, lr
 8022ee6:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8022eea:	9201      	str	r2, [sp, #4]
 8022eec:	9300      	str	r3, [sp, #0]
 8022eee:	9a07      	ldr	r2, [sp, #28]
 8022ef0:	9810      	ldr	r0, [sp, #64]	; 0x40
 8022ef2:	463b      	mov	r3, r7
 8022ef4:	4641      	mov	r1, r8
 8022ef6:	f7ff fe21 	bl	8022b3c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8022efa:	e767      	b.n	8022dcc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8022efc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022efe:	9d07      	ldr	r5, [sp, #28]
 8022f00:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8022f04:	1422      	asrs	r2, r4, #16
 8022f06:	1431      	asrs	r1, r6, #16
 8022f08:	fb03 2101 	mla	r1, r3, r1, r2
 8022f0c:	9a07      	ldr	r2, [sp, #28]
 8022f0e:	440a      	add	r2, r1
 8022f10:	5c69      	ldrb	r1, [r5, r1]
 8022f12:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 8022f16:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8022f1a:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 8022f1e:	f1be 0f00 	cmp.w	lr, #0
 8022f22:	d05c      	beq.n	8022fde <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8022f24:	f892 c001 	ldrb.w	ip, [r2, #1]
 8022f28:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 8022f2c:	950d      	str	r5, [sp, #52]	; 0x34
 8022f2e:	b150      	cbz	r0, 8022f46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8022f30:	eb02 0c03 	add.w	ip, r2, r3
 8022f34:	5cd3      	ldrb	r3, [r2, r3]
 8022f36:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8022f3a:	930a      	str	r3, [sp, #40]	; 0x28
 8022f3c:	f89c 3001 	ldrb.w	r3, [ip, #1]
 8022f40:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8022f44:	930e      	str	r3, [sp, #56]	; 0x38
 8022f46:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8022f48:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8022f4a:	fb1e f200 	smulbb	r2, lr, r0
 8022f4e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8022f52:	10d2      	asrs	r2, r2, #3
 8022f54:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8022f58:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8022f5c:	ea4c 0c03 	orr.w	ip, ip, r3
 8022f60:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 8022f64:	9311      	str	r3, [sp, #68]	; 0x44
 8022f66:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8022f68:	041b      	lsls	r3, r3, #16
 8022f6a:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 8022f6e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8022f72:	ea43 030b 	orr.w	r3, r3, fp
 8022f76:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8022f78:	4353      	muls	r3, r2
 8022f7a:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8022f7e:	fb05 3c0c 	mla	ip, r5, ip, r3
 8022f82:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8022f86:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8022f8a:	ea43 0b01 	orr.w	fp, r3, r1
 8022f8e:	f1c0 0110 	rsb	r1, r0, #16
 8022f92:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022f94:	eba1 0e0e 	sub.w	lr, r1, lr
 8022f98:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8022f9c:	fb0e cc0b 	mla	ip, lr, fp, ip
 8022fa0:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8022fa4:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 8022fa8:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022fac:	ea4b 0e0e 	orr.w	lr, fp, lr
 8022fb0:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8022fb4:	fb02 cc0e 	mla	ip, r2, lr, ip
 8022fb8:	ea4f 535c 	mov.w	r3, ip, lsr #21
 8022fbc:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8022fc0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022fc4:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8022fc8:	ea43 0c0c 	orr.w	ip, r3, ip
 8022fcc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8022fce:	f82a cb02 	strh.w	ip, [sl], #2
 8022fd2:	441c      	add	r4, r3
 8022fd4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022fd6:	f108 38ff 	add.w	r8, r8, #4294967295
 8022fda:	441e      	add	r6, r3
 8022fdc:	e723      	b.n	8022e26 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8022fde:	2800      	cmp	r0, #0
 8022fe0:	d0b1      	beq.n	8022f46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8022fe2:	5cd3      	ldrb	r3, [r2, r3]
 8022fe4:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8022fe8:	930a      	str	r3, [sp, #40]	; 0x28
 8022fea:	e7ac      	b.n	8022f46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8022fec:	b013      	add	sp, #76	; 0x4c
 8022fee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08022ff2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 8022ff2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022ff6:	880d      	ldrh	r5, [r1, #0]
 8022ff8:	b087      	sub	sp, #28
 8022ffa:	10ef      	asrs	r7, r5, #3
 8022ffc:	ea4f 2a25 	mov.w	sl, r5, asr #8
 8023000:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8023004:	00ed      	lsls	r5, r5, #3
 8023006:	9701      	str	r7, [sp, #4]
 8023008:	b2ed      	uxtb	r5, r5
 802300a:	9502      	str	r5, [sp, #8]
 802300c:	9d01      	ldr	r5, [sp, #4]
 802300e:	9103      	str	r1, [sp, #12]
 8023010:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 8023014:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 8023018:	9902      	ldr	r1, [sp, #8]
 802301a:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 802301e:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 8023022:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 8023026:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 802302a:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 802302e:	022d      	lsls	r5, r5, #8
 8023030:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 8023034:	fb06 0709 	mla	r7, r6, r9, r0
 8023038:	430d      	orrs	r5, r1
 802303a:	2e00      	cmp	r6, #0
 802303c:	eb02 0c07 	add.w	ip, r2, r7
 8023040:	9505      	str	r5, [sp, #20]
 8023042:	f2c0 80b6 	blt.w	80231b2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8023046:	45b3      	cmp	fp, r6
 8023048:	f340 80b3 	ble.w	80231b2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 802304c:	2800      	cmp	r0, #0
 802304e:	f2c0 80ae 	blt.w	80231ae <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8023052:	4581      	cmp	r9, r0
 8023054:	f340 80ab 	ble.w	80231ae <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8023058:	5dd7      	ldrb	r7, [r2, r7]
 802305a:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 802305e:	441f      	add	r7, r3
 8023060:	1c42      	adds	r2, r0, #1
 8023062:	f100 80a9 	bmi.w	80231b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8023066:	4591      	cmp	r9, r2
 8023068:	f340 80a6 	ble.w	80231b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 802306c:	2c00      	cmp	r4, #0
 802306e:	f000 80a3 	beq.w	80231b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8023072:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8023076:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 802307a:	441d      	add	r5, r3
 802307c:	3601      	adds	r6, #1
 802307e:	f100 809f 	bmi.w	80231c0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8023082:	45b3      	cmp	fp, r6
 8023084:	f340 809c 	ble.w	80231c0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8023088:	f1be 0f00 	cmp.w	lr, #0
 802308c:	f000 8098 	beq.w	80231c0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8023090:	2800      	cmp	r0, #0
 8023092:	f2c0 8093 	blt.w	80231bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8023096:	4581      	cmp	r9, r0
 8023098:	f340 8090 	ble.w	80231bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 802309c:	f81c 6009 	ldrb.w	r6, [ip, r9]
 80230a0:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 80230a4:	441e      	add	r6, r3
 80230a6:	3001      	adds	r0, #1
 80230a8:	f100 808d 	bmi.w	80231c6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 80230ac:	4581      	cmp	r9, r0
 80230ae:	f340 808a 	ble.w	80231c6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 80230b2:	2c00      	cmp	r4, #0
 80230b4:	f000 8087 	beq.w	80231c6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 80230b8:	44e1      	add	r9, ip
 80230ba:	f899 2001 	ldrb.w	r2, [r9, #1]
 80230be:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80230c2:	4413      	add	r3, r2
 80230c4:	b2a4      	uxth	r4, r4
 80230c6:	fa1f fe8e 	uxth.w	lr, lr
 80230ca:	fb04 fb0e 	mul.w	fp, r4, lr
 80230ce:	0124      	lsls	r4, r4, #4
 80230d0:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 80230d4:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 80230d8:	eba4 040b 	sub.w	r4, r4, fp
 80230dc:	fa1f f08e 	uxth.w	r0, lr
 80230e0:	b2a2      	uxth	r2, r4
 80230e2:	78ac      	ldrb	r4, [r5, #2]
 80230e4:	f897 c002 	ldrb.w	ip, [r7, #2]
 80230e8:	9901      	ldr	r1, [sp, #4]
 80230ea:	eba9 0900 	sub.w	r9, r9, r0
 80230ee:	fa1f f989 	uxth.w	r9, r9
 80230f2:	4354      	muls	r4, r2
 80230f4:	fb09 440c 	mla	r4, r9, ip, r4
 80230f8:	f896 c002 	ldrb.w	ip, [r6, #2]
 80230fc:	fb00 440c 	mla	r4, r0, ip, r4
 8023100:	f893 c002 	ldrb.w	ip, [r3, #2]
 8023104:	fa1f fe88 	uxth.w	lr, r8
 8023108:	ea6f 0808 	mvn.w	r8, r8
 802310c:	fa5f f888 	uxtb.w	r8, r8
 8023110:	fb0b 4c0c 	mla	ip, fp, ip, r4
 8023114:	fb1a fa08 	smulbb	sl, sl, r8
 8023118:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 802311c:	fb0c ac0e 	mla	ip, ip, lr, sl
 8023120:	f895 a001 	ldrb.w	sl, [r5, #1]
 8023124:	787c      	ldrb	r4, [r7, #1]
 8023126:	782d      	ldrb	r5, [r5, #0]
 8023128:	783f      	ldrb	r7, [r7, #0]
 802312a:	fb02 fa0a 	mul.w	sl, r2, sl
 802312e:	fb09 aa04 	mla	sl, r9, r4, sl
 8023132:	7874      	ldrb	r4, [r6, #1]
 8023134:	436a      	muls	r2, r5
 8023136:	7835      	ldrb	r5, [r6, #0]
 8023138:	fb00 aa04 	mla	sl, r0, r4, sl
 802313c:	fb09 2207 	mla	r2, r9, r7, r2
 8023140:	785c      	ldrb	r4, [r3, #1]
 8023142:	781b      	ldrb	r3, [r3, #0]
 8023144:	fb00 2005 	mla	r0, r0, r5, r2
 8023148:	fb0b a404 	mla	r4, fp, r4, sl
 802314c:	fb0b 0b03 	mla	fp, fp, r3, r0
 8023150:	9b02      	ldr	r3, [sp, #8]
 8023152:	fb11 fa08 	smulbb	sl, r1, r8
 8023156:	fa1f fc8c 	uxth.w	ip, ip
 802315a:	fb13 f808 	smulbb	r8, r3, r8
 802315e:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 8023162:	f3c4 2407 	ubfx	r4, r4, #8, #8
 8023166:	fb04 a40e 	mla	r4, r4, lr, sl
 802316a:	f10c 0301 	add.w	r3, ip, #1
 802316e:	fb0b 8e0e 	mla	lr, fp, lr, r8
 8023172:	fa1f fe8e 	uxth.w	lr, lr
 8023176:	b2a4      	uxth	r4, r4
 8023178:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 802317c:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 8023180:	f104 0a01 	add.w	sl, r4, #1
 8023184:	f10e 0c01 	add.w	ip, lr, #1
 8023188:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 802318c:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8023190:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8023194:	0964      	lsrs	r4, r4, #5
 8023196:	ea4c 0c03 	orr.w	ip, ip, r3
 802319a:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 802319e:	9b03      	ldr	r3, [sp, #12]
 80231a0:	ea4c 0c04 	orr.w	ip, ip, r4
 80231a4:	f8a3 c000 	strh.w	ip, [r3]
 80231a8:	b007      	add	sp, #28
 80231aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80231ae:	af05      	add	r7, sp, #20
 80231b0:	e756      	b.n	8023060 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 80231b2:	ad05      	add	r5, sp, #20
 80231b4:	462f      	mov	r7, r5
 80231b6:	e761      	b.n	802307c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 80231b8:	ad05      	add	r5, sp, #20
 80231ba:	e75f      	b.n	802307c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 80231bc:	ae05      	add	r6, sp, #20
 80231be:	e772      	b.n	80230a6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 80231c0:	ab05      	add	r3, sp, #20
 80231c2:	461e      	mov	r6, r3
 80231c4:	e77e      	b.n	80230c4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 80231c6:	ab05      	add	r3, sp, #20
 80231c8:	e77c      	b.n	80230c4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

080231ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80231ca:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80231ce:	b095      	sub	sp, #84	; 0x54
 80231d0:	9212      	str	r2, [sp, #72]	; 0x48
 80231d2:	9309      	str	r3, [sp, #36]	; 0x24
 80231d4:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 80231d6:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 80231da:	930f      	str	r3, [sp, #60]	; 0x3c
 80231dc:	910e      	str	r1, [sp, #56]	; 0x38
 80231de:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 80231e2:	9013      	str	r0, [sp, #76]	; 0x4c
 80231e4:	6850      	ldr	r0, [r2, #4]
 80231e6:	6812      	ldr	r2, [r2, #0]
 80231e8:	fb00 1303 	mla	r3, r0, r3, r1
 80231ec:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80231f0:	930a      	str	r3, [sp, #40]	; 0x28
 80231f2:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80231f4:	681b      	ldr	r3, [r3, #0]
 80231f6:	930d      	str	r3, [sp, #52]	; 0x34
 80231f8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80231fa:	685c      	ldr	r4, [r3, #4]
 80231fc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80231fe:	43db      	mvns	r3, r3
 8023200:	b2db      	uxtb	r3, r3
 8023202:	3404      	adds	r4, #4
 8023204:	930b      	str	r3, [sp, #44]	; 0x2c
 8023206:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8023208:	2b00      	cmp	r3, #0
 802320a:	dc03      	bgt.n	8023214 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 802320c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 802320e:	2b00      	cmp	r3, #0
 8023210:	f340 8255 	ble.w	80236be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 8023214:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8023216:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802321a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802321e:	1e48      	subs	r0, r1, #1
 8023220:	1e55      	subs	r5, r2, #1
 8023222:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023224:	2b00      	cmp	r3, #0
 8023226:	f340 80f9 	ble.w	802341c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 802322a:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 802322c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802322e:	1436      	asrs	r6, r6, #16
 8023230:	ea4f 4323 	mov.w	r3, r3, asr #16
 8023234:	d406      	bmi.n	8023244 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8023236:	4286      	cmp	r6, r0
 8023238:	da04      	bge.n	8023244 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802323a:	2b00      	cmp	r3, #0
 802323c:	db02      	blt.n	8023244 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802323e:	42ab      	cmp	r3, r5
 8023240:	f2c0 80ed 	blt.w	802341e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 8023244:	3601      	adds	r6, #1
 8023246:	f100 80da 	bmi.w	80233fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 802324a:	42b1      	cmp	r1, r6
 802324c:	f2c0 80d7 	blt.w	80233fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8023250:	3301      	adds	r3, #1
 8023252:	f100 80d4 	bmi.w	80233fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8023256:	429a      	cmp	r2, r3
 8023258:	f2c0 80d1 	blt.w	80233fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 802325c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802325e:	9311      	str	r3, [sp, #68]	; 0x44
 8023260:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023262:	930c      	str	r3, [sp, #48]	; 0x30
 8023264:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8023266:	2b00      	cmp	r3, #0
 8023268:	f340 80fa 	ble.w	8023460 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 802326c:	9826      	ldr	r0, [sp, #152]	; 0x98
 802326e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023270:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8023272:	68c6      	ldr	r6, [r0, #12]
 8023274:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8023276:	141d      	asrs	r5, r3, #16
 8023278:	f3c2 3103 	ubfx	r1, r2, #12, #4
 802327c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802327e:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8023280:	1400      	asrs	r0, r0, #16
 8023282:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8023286:	6892      	ldr	r2, [r2, #8]
 8023288:	f100 813e 	bmi.w	8023508 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 802328c:	1e57      	subs	r7, r2, #1
 802328e:	42b8      	cmp	r0, r7
 8023290:	f280 813a 	bge.w	8023508 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8023294:	2d00      	cmp	r5, #0
 8023296:	f2c0 8137 	blt.w	8023508 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 802329a:	1e77      	subs	r7, r6, #1
 802329c:	42bd      	cmp	r5, r7
 802329e:	f280 8133 	bge.w	8023508 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 80232a2:	b212      	sxth	r2, r2
 80232a4:	fb05 0002 	mla	r0, r5, r2, r0
 80232a8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80232aa:	f815 a000 	ldrb.w	sl, [r5, r0]
 80232ae:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 80232b2:	182e      	adds	r6, r5, r0
 80232b4:	eb04 050a 	add.w	r5, r4, sl
 80232b8:	2b00      	cmp	r3, #0
 80232ba:	f000 8117 	beq.w	80234ec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 80232be:	f896 c001 	ldrb.w	ip, [r6, #1]
 80232c2:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 80232c6:	44a4      	add	ip, r4
 80232c8:	2900      	cmp	r1, #0
 80232ca:	f000 8117 	beq.w	80234fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 80232ce:	18b0      	adds	r0, r6, r2
 80232d0:	5cb2      	ldrb	r2, [r6, r2]
 80232d2:	7840      	ldrb	r0, [r0, #1]
 80232d4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80232d8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80232dc:	4422      	add	r2, r4
 80232de:	4420      	add	r0, r4
 80232e0:	b29b      	uxth	r3, r3
 80232e2:	b289      	uxth	r1, r1
 80232e4:	fb03 f901 	mul.w	r9, r3, r1
 80232e8:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80232ec:	011b      	lsls	r3, r3, #4
 80232ee:	b289      	uxth	r1, r1
 80232f0:	f89c 7002 	ldrb.w	r7, [ip, #2]
 80232f4:	f895 b002 	ldrb.w	fp, [r5, #2]
 80232f8:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 80232fa:	f814 a00a 	ldrb.w	sl, [r4, sl]
 80232fe:	f8b6 e000 	ldrh.w	lr, [r6]
 8023302:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 8023306:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 802330a:	eba3 0309 	sub.w	r3, r3, r9
 802330e:	b29b      	uxth	r3, r3
 8023310:	eba8 0801 	sub.w	r8, r8, r1
 8023314:	fa1f f888 	uxth.w	r8, r8
 8023318:	435f      	muls	r7, r3
 802331a:	fb08 770b 	mla	r7, r8, fp, r7
 802331e:	f892 b002 	ldrb.w	fp, [r2, #2]
 8023322:	9310      	str	r3, [sp, #64]	; 0x40
 8023324:	fb01 770b 	mla	r7, r1, fp, r7
 8023328:	f890 b002 	ldrb.w	fp, [r0, #2]
 802332c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802332e:	fb09 770b 	mla	r7, r9, fp, r7
 8023332:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 8023336:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 802333a:	fb1b fb03 	smulbb	fp, fp, r3
 802333e:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8023342:	fb07 b706 	mla	r7, r7, r6, fp
 8023346:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8023348:	f895 b001 	ldrb.w	fp, [r5, #1]
 802334c:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8023350:	f89c c000 	ldrb.w	ip, [ip]
 8023354:	435d      	muls	r5, r3
 8023356:	fb08 550b 	mla	r5, r8, fp, r5
 802335a:	f892 b001 	ldrb.w	fp, [r2, #1]
 802335e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8023360:	fb01 550b 	mla	r5, r1, fp, r5
 8023364:	f890 b001 	ldrb.w	fp, [r0, #1]
 8023368:	fb09 550b 	mla	r5, r9, fp, r5
 802336c:	ea4f 0bee 	mov.w	fp, lr, asr #3
 8023370:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8023374:	fb1b fb03 	smulbb	fp, fp, r3
 8023378:	9b10      	ldr	r3, [sp, #64]	; 0x40
 802337a:	fb03 f30c 	mul.w	r3, r3, ip
 802337e:	f892 c000 	ldrb.w	ip, [r2]
 8023382:	fb08 330a 	mla	r3, r8, sl, r3
 8023386:	fb01 330c 	mla	r3, r1, ip, r3
 802338a:	f890 c000 	ldrb.w	ip, [r0]
 802338e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8023392:	fb09 3c0c 	mla	ip, r9, ip, r3
 8023396:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8023398:	fa5f fe8e 	uxtb.w	lr, lr
 802339c:	b2bf      	uxth	r7, r7
 802339e:	fb1e fe03 	smulbb	lr, lr, r3
 80233a2:	f3c5 2507 	ubfx	r5, r5, #8, #8
 80233a6:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 80233aa:	fb05 b506 	mla	r5, r5, r6, fp
 80233ae:	1c7b      	adds	r3, r7, #1
 80233b0:	fb0c e606 	mla	r6, ip, r6, lr
 80233b4:	b2ad      	uxth	r5, r5
 80233b6:	b2b6      	uxth	r6, r6
 80233b8:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 80233bc:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 80233c0:	f105 0b01 	add.w	fp, r5, #1
 80233c4:	1c77      	adds	r7, r6, #1
 80233c6:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 80233ca:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 80233ce:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80233d2:	096d      	lsrs	r5, r5, #5
 80233d4:	431f      	orrs	r7, r3
 80233d6:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80233da:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80233dc:	433d      	orrs	r5, r7
 80233de:	801d      	strh	r5, [r3, #0]
 80233e0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80233e2:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80233e4:	3302      	adds	r3, #2
 80233e6:	930c      	str	r3, [sp, #48]	; 0x30
 80233e8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80233ea:	4413      	add	r3, r2
 80233ec:	931f      	str	r3, [sp, #124]	; 0x7c
 80233ee:	9a22      	ldr	r2, [sp, #136]	; 0x88
 80233f0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80233f2:	4413      	add	r3, r2
 80233f4:	9320      	str	r3, [sp, #128]	; 0x80
 80233f6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80233f8:	3b01      	subs	r3, #1
 80233fa:	9311      	str	r3, [sp, #68]	; 0x44
 80233fc:	e732      	b.n	8023264 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80233fe:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8023400:	9e21      	ldr	r6, [sp, #132]	; 0x84
 8023402:	4433      	add	r3, r6
 8023404:	931f      	str	r3, [sp, #124]	; 0x7c
 8023406:	9e22      	ldr	r6, [sp, #136]	; 0x88
 8023408:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802340a:	4433      	add	r3, r6
 802340c:	9320      	str	r3, [sp, #128]	; 0x80
 802340e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023410:	3b01      	subs	r3, #1
 8023412:	9309      	str	r3, [sp, #36]	; 0x24
 8023414:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023416:	3302      	adds	r3, #2
 8023418:	930a      	str	r3, [sp, #40]	; 0x28
 802341a:	e702      	b.n	8023222 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 802341c:	d027      	beq.n	802346e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 802341e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023420:	9821      	ldr	r0, [sp, #132]	; 0x84
 8023422:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 8023424:	3b01      	subs	r3, #1
 8023426:	fb00 5003 	mla	r0, r0, r3, r5
 802342a:	1400      	asrs	r0, r0, #16
 802342c:	f53f af16 	bmi.w	802325c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8023430:	3901      	subs	r1, #1
 8023432:	4288      	cmp	r0, r1
 8023434:	f6bf af12 	bge.w	802325c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8023438:	9922      	ldr	r1, [sp, #136]	; 0x88
 802343a:	9820      	ldr	r0, [sp, #128]	; 0x80
 802343c:	fb01 0303 	mla	r3, r1, r3, r0
 8023440:	141b      	asrs	r3, r3, #16
 8023442:	f53f af0b 	bmi.w	802325c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8023446:	3a01      	subs	r2, #1
 8023448:	4293      	cmp	r3, r2
 802344a:	f6bf af07 	bge.w	802325c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802344e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023450:	9311      	str	r3, [sp, #68]	; 0x44
 8023452:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 8023456:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023458:	930c      	str	r3, [sp, #48]	; 0x30
 802345a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 802345c:	2b00      	cmp	r3, #0
 802345e:	dc70      	bgt.n	8023542 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8023460:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023462:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8023464:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8023468:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802346c:	930a      	str	r3, [sp, #40]	; 0x28
 802346e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8023470:	2b00      	cmp	r3, #0
 8023472:	f340 8124 	ble.w	80236be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 8023476:	ee30 0a04 	vadd.f32	s0, s0, s8
 802347a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802347e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023482:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8023484:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023488:	ee31 1a05 	vadd.f32	s2, s2, s10
 802348c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023490:	eef0 6a62 	vmov.f32	s13, s5
 8023494:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023498:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802349c:	ee77 2a62 	vsub.f32	s5, s14, s5
 80234a0:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 80234a4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80234a8:	eef0 6a43 	vmov.f32	s13, s6
 80234ac:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80234b0:	ee12 2a90 	vmov	r2, s5
 80234b4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80234b8:	fb92 f3f3 	sdiv	r3, r2, r3
 80234bc:	ee13 2a10 	vmov	r2, s6
 80234c0:	9321      	str	r3, [sp, #132]	; 0x84
 80234c2:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80234c4:	fb92 f3f3 	sdiv	r3, r2, r3
 80234c8:	9322      	str	r3, [sp, #136]	; 0x88
 80234ca:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80234cc:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80234ce:	3b01      	subs	r3, #1
 80234d0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80234d4:	930e      	str	r3, [sp, #56]	; 0x38
 80234d6:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80234d8:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 80234dc:	bf08      	it	eq
 80234de:	4613      	moveq	r3, r2
 80234e0:	9309      	str	r3, [sp, #36]	; 0x24
 80234e2:	eeb0 3a67 	vmov.f32	s6, s15
 80234e6:	eef0 2a47 	vmov.f32	s5, s14
 80234ea:	e68c      	b.n	8023206 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80234ec:	b149      	cbz	r1, 8023502 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 80234ee:	5cb2      	ldrb	r2, [r6, r2]
 80234f0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80234f4:	4422      	add	r2, r4
 80234f6:	4628      	mov	r0, r5
 80234f8:	46ac      	mov	ip, r5
 80234fa:	e6f1      	b.n	80232e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80234fc:	4628      	mov	r0, r5
 80234fe:	462a      	mov	r2, r5
 8023500:	e6ee      	b.n	80232e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8023502:	4628      	mov	r0, r5
 8023504:	462a      	mov	r2, r5
 8023506:	e7f7      	b.n	80234f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 8023508:	1c47      	adds	r7, r0, #1
 802350a:	f53f af69 	bmi.w	80233e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 802350e:	42ba      	cmp	r2, r7
 8023510:	f6ff af66 	blt.w	80233e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8023514:	1c6f      	adds	r7, r5, #1
 8023516:	f53f af63 	bmi.w	80233e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 802351a:	42be      	cmp	r6, r7
 802351c:	f6ff af60 	blt.w	80233e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8023520:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8023522:	9002      	str	r0, [sp, #8]
 8023524:	b236      	sxth	r6, r6
 8023526:	b212      	sxth	r2, r2
 8023528:	e9cd 1705 	strd	r1, r7, [sp, #20]
 802352c:	e9cd 5303 	strd	r5, r3, [sp, #12]
 8023530:	9200      	str	r2, [sp, #0]
 8023532:	9601      	str	r6, [sp, #4]
 8023534:	4623      	mov	r3, r4
 8023536:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 802353a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 802353c:	f7ff fd59 	bl	8022ff2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 8023540:	e74e      	b.n	80233e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8023542:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8023544:	9820      	ldr	r0, [sp, #128]	; 0x80
 8023546:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 8023548:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802354a:	f3c2 3103 	ubfx	r1, r2, #12, #4
 802354e:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8023550:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8023554:	142d      	asrs	r5, r5, #16
 8023556:	1400      	asrs	r0, r0, #16
 8023558:	fb02 5000 	mla	r0, r2, r0, r5
 802355c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802355e:	f815 9000 	ldrb.w	r9, [r5, r0]
 8023562:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8023566:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 802356a:	182e      	adds	r6, r5, r0
 802356c:	eb04 0509 	add.w	r5, r4, r9
 8023570:	2b00      	cmp	r3, #0
 8023572:	f000 8096 	beq.w	80236a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8023576:	7877      	ldrb	r7, [r6, #1]
 8023578:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 802357c:	4427      	add	r7, r4
 802357e:	2900      	cmp	r1, #0
 8023580:	f000 8097 	beq.w	80236b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 8023584:	18b0      	adds	r0, r6, r2
 8023586:	5cb2      	ldrb	r2, [r6, r2]
 8023588:	7840      	ldrb	r0, [r0, #1]
 802358a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802358e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8023592:	4422      	add	r2, r4
 8023594:	4420      	add	r0, r4
 8023596:	b29b      	uxth	r3, r3
 8023598:	b289      	uxth	r1, r1
 802359a:	fb03 f801 	mul.w	r8, r3, r1
 802359e:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 80235a0:	f895 b002 	ldrb.w	fp, [r5, #2]
 80235a4:	f8b6 c000 	ldrh.w	ip, [r6]
 80235a8:	78be      	ldrb	r6, [r7, #2]
 80235aa:	f814 9009 	ldrb.w	r9, [r4, r9]
 80235ae:	011b      	lsls	r3, r3, #4
 80235b0:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 80235b4:	b289      	uxth	r1, r1
 80235b6:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 80235ba:	eba3 0308 	sub.w	r3, r3, r8
 80235be:	b29b      	uxth	r3, r3
 80235c0:	ebae 0e01 	sub.w	lr, lr, r1
 80235c4:	fa1f fe8e 	uxth.w	lr, lr
 80235c8:	435e      	muls	r6, r3
 80235ca:	fb0e 660b 	mla	r6, lr, fp, r6
 80235ce:	f892 b002 	ldrb.w	fp, [r2, #2]
 80235d2:	9310      	str	r3, [sp, #64]	; 0x40
 80235d4:	fb01 660b 	mla	r6, r1, fp, r6
 80235d8:	f890 b002 	ldrb.w	fp, [r0, #2]
 80235dc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80235de:	fb08 660b 	mla	r6, r8, fp, r6
 80235e2:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 80235e6:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 80235ea:	fb1b fb03 	smulbb	fp, fp, r3
 80235ee:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80235f2:	fb06 b60a 	mla	r6, r6, sl, fp
 80235f6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80235f8:	f895 b001 	ldrb.w	fp, [r5, #1]
 80235fc:	787d      	ldrb	r5, [r7, #1]
 80235fe:	783f      	ldrb	r7, [r7, #0]
 8023600:	435d      	muls	r5, r3
 8023602:	fb0e 550b 	mla	r5, lr, fp, r5
 8023606:	f892 b001 	ldrb.w	fp, [r2, #1]
 802360a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802360c:	fb01 550b 	mla	r5, r1, fp, r5
 8023610:	f890 b001 	ldrb.w	fp, [r0, #1]
 8023614:	fb08 550b 	mla	r5, r8, fp, r5
 8023618:	ea4f 0bec 	mov.w	fp, ip, asr #3
 802361c:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8023620:	fb1b fb03 	smulbb	fp, fp, r3
 8023624:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8023626:	437b      	muls	r3, r7
 8023628:	7817      	ldrb	r7, [r2, #0]
 802362a:	fb0e 3309 	mla	r3, lr, r9, r3
 802362e:	fb01 3307 	mla	r3, r1, r7, r3
 8023632:	7807      	ldrb	r7, [r0, #0]
 8023634:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8023638:	fb08 3707 	mla	r7, r8, r7, r3
 802363c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802363e:	fa5f fc8c 	uxtb.w	ip, ip
 8023642:	fb1c fc03 	smulbb	ip, ip, r3
 8023646:	f3c5 2507 	ubfx	r5, r5, #8, #8
 802364a:	f3c7 2707 	ubfx	r7, r7, #8, #8
 802364e:	fb05 b50a 	mla	r5, r5, sl, fp
 8023652:	fb07 c70a 	mla	r7, r7, sl, ip
 8023656:	b2b6      	uxth	r6, r6
 8023658:	b2ad      	uxth	r5, r5
 802365a:	b2bf      	uxth	r7, r7
 802365c:	1c73      	adds	r3, r6, #1
 802365e:	1c7a      	adds	r2, r7, #1
 8023660:	f105 0b01 	add.w	fp, r5, #1
 8023664:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8023668:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 802366c:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8023670:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8023674:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8023678:	096d      	lsrs	r5, r5, #5
 802367a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802367c:	4316      	orrs	r6, r2
 802367e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8023682:	432e      	orrs	r6, r5
 8023684:	f823 6b02 	strh.w	r6, [r3], #2
 8023688:	9a21      	ldr	r2, [sp, #132]	; 0x84
 802368a:	930c      	str	r3, [sp, #48]	; 0x30
 802368c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802368e:	4413      	add	r3, r2
 8023690:	931f      	str	r3, [sp, #124]	; 0x7c
 8023692:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8023694:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023696:	4413      	add	r3, r2
 8023698:	9320      	str	r3, [sp, #128]	; 0x80
 802369a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 802369c:	3b01      	subs	r3, #1
 802369e:	9311      	str	r3, [sp, #68]	; 0x44
 80236a0:	e6db      	b.n	802345a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 80236a2:	b149      	cbz	r1, 80236b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 80236a4:	5cb2      	ldrb	r2, [r6, r2]
 80236a6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80236aa:	4422      	add	r2, r4
 80236ac:	4628      	mov	r0, r5
 80236ae:	462f      	mov	r7, r5
 80236b0:	e771      	b.n	8023596 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 80236b2:	4628      	mov	r0, r5
 80236b4:	462a      	mov	r2, r5
 80236b6:	e76e      	b.n	8023596 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 80236b8:	4628      	mov	r0, r5
 80236ba:	462a      	mov	r2, r5
 80236bc:	e7f7      	b.n	80236ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80236be:	b015      	add	sp, #84	; 0x54
 80236c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080236c4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 80236c4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80236c8:	880f      	ldrh	r7, [r1, #0]
 80236ca:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 80236ce:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 80236d2:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 80236d6:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 80236da:	023c      	lsls	r4, r7, #8
 80236dc:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 80236e0:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 80236e4:	017c      	lsls	r4, r7, #5
 80236e6:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 80236ea:	00ff      	lsls	r7, r7, #3
 80236ec:	ea4b 0404 	orr.w	r4, fp, r4
 80236f0:	b2ff      	uxtb	r7, r7
 80236f2:	fb05 ca0e 	mla	sl, r5, lr, ip
 80236f6:	4327      	orrs	r7, r4
 80236f8:	2d00      	cmp	r5, #0
 80236fa:	eb02 080a 	add.w	r8, r2, sl
 80236fe:	9701      	str	r7, [sp, #4]
 8023700:	db7e      	blt.n	8023800 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 8023702:	45a9      	cmp	r9, r5
 8023704:	dd7c      	ble.n	8023800 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 8023706:	f1bc 0f00 	cmp.w	ip, #0
 802370a:	db77      	blt.n	80237fc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 802370c:	45e6      	cmp	lr, ip
 802370e:	dd75      	ble.n	80237fc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8023710:	f812 700a 	ldrb.w	r7, [r2, sl]
 8023714:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8023718:	441f      	add	r7, r3
 802371a:	f11c 0201 	adds.w	r2, ip, #1
 802371e:	d472      	bmi.n	8023806 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8023720:	4596      	cmp	lr, r2
 8023722:	dd70      	ble.n	8023806 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8023724:	2800      	cmp	r0, #0
 8023726:	d06e      	beq.n	8023806 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8023728:	f898 4001 	ldrb.w	r4, [r8, #1]
 802372c:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8023730:	441c      	add	r4, r3
 8023732:	3501      	adds	r5, #1
 8023734:	d46b      	bmi.n	802380e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8023736:	45a9      	cmp	r9, r5
 8023738:	dd69      	ble.n	802380e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 802373a:	2e00      	cmp	r6, #0
 802373c:	d067      	beq.n	802380e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 802373e:	f1bc 0f00 	cmp.w	ip, #0
 8023742:	db62      	blt.n	802380a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8023744:	45e6      	cmp	lr, ip
 8023746:	dd60      	ble.n	802380a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8023748:	f818 500e 	ldrb.w	r5, [r8, lr]
 802374c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8023750:	441d      	add	r5, r3
 8023752:	f11c 0201 	adds.w	r2, ip, #1
 8023756:	d45d      	bmi.n	8023814 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8023758:	4596      	cmp	lr, r2
 802375a:	dd5b      	ble.n	8023814 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 802375c:	2800      	cmp	r0, #0
 802375e:	d059      	beq.n	8023814 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8023760:	44c6      	add	lr, r8
 8023762:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8023766:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802376a:	4413      	add	r3, r2
 802376c:	b280      	uxth	r0, r0
 802376e:	b2b2      	uxth	r2, r6
 8023770:	fb00 f602 	mul.w	r6, r0, r2
 8023774:	0100      	lsls	r0, r0, #4
 8023776:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 802377a:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 802377e:	1b80      	subs	r0, r0, r6
 8023780:	fa1f fc82 	uxth.w	ip, r2
 8023784:	b282      	uxth	r2, r0
 8023786:	78a0      	ldrb	r0, [r4, #2]
 8023788:	f897 e002 	ldrb.w	lr, [r7, #2]
 802378c:	f897 9000 	ldrb.w	r9, [r7]
 8023790:	787f      	ldrb	r7, [r7, #1]
 8023792:	eba8 080c 	sub.w	r8, r8, ip
 8023796:	fa1f f888 	uxth.w	r8, r8
 802379a:	4350      	muls	r0, r2
 802379c:	fb08 0e0e 	mla	lr, r8, lr, r0
 80237a0:	78a8      	ldrb	r0, [r5, #2]
 80237a2:	fb0c e000 	mla	r0, ip, r0, lr
 80237a6:	f893 e002 	ldrb.w	lr, [r3, #2]
 80237aa:	fb06 0e0e 	mla	lr, r6, lr, r0
 80237ae:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 80237b2:	f894 e000 	ldrb.w	lr, [r4]
 80237b6:	fb02 fe0e 	mul.w	lr, r2, lr
 80237ba:	fb08 e909 	mla	r9, r8, r9, lr
 80237be:	f895 e000 	ldrb.w	lr, [r5]
 80237c2:	fb0c 990e 	mla	r9, ip, lr, r9
 80237c6:	f893 e000 	ldrb.w	lr, [r3]
 80237ca:	785b      	ldrb	r3, [r3, #1]
 80237cc:	fb06 9e0e 	mla	lr, r6, lr, r9
 80237d0:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 80237d4:	ea4e 0e00 	orr.w	lr, lr, r0
 80237d8:	7860      	ldrb	r0, [r4, #1]
 80237da:	4350      	muls	r0, r2
 80237dc:	786a      	ldrb	r2, [r5, #1]
 80237de:	fb08 0007 	mla	r0, r8, r7, r0
 80237e2:	fb0c 0202 	mla	r2, ip, r2, r0
 80237e6:	fb06 2303 	mla	r3, r6, r3, r2
 80237ea:	095b      	lsrs	r3, r3, #5
 80237ec:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80237f0:	ea4e 0303 	orr.w	r3, lr, r3
 80237f4:	800b      	strh	r3, [r1, #0]
 80237f6:	b003      	add	sp, #12
 80237f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80237fc:	af01      	add	r7, sp, #4
 80237fe:	e78c      	b.n	802371a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 8023800:	ac01      	add	r4, sp, #4
 8023802:	4627      	mov	r7, r4
 8023804:	e795      	b.n	8023732 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8023806:	ac01      	add	r4, sp, #4
 8023808:	e793      	b.n	8023732 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 802380a:	ad01      	add	r5, sp, #4
 802380c:	e7a1      	b.n	8023752 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 802380e:	ab01      	add	r3, sp, #4
 8023810:	461d      	mov	r5, r3
 8023812:	e7ab      	b.n	802376c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 8023814:	ab01      	add	r3, sp, #4
 8023816:	e7a9      	b.n	802376c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

08023818 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023818:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802381c:	b08f      	sub	sp, #60	; 0x3c
 802381e:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 8023822:	920c      	str	r2, [sp, #48]	; 0x30
 8023824:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8023826:	910a      	str	r1, [sp, #40]	; 0x28
 8023828:	9306      	str	r3, [sp, #24]
 802382a:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 802382e:	900d      	str	r0, [sp, #52]	; 0x34
 8023830:	6850      	ldr	r0, [r2, #4]
 8023832:	6812      	ldr	r2, [r2, #0]
 8023834:	fb00 1303 	mla	r3, r0, r3, r1
 8023838:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802383c:	9307      	str	r3, [sp, #28]
 802383e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023840:	681b      	ldr	r3, [r3, #0]
 8023842:	9308      	str	r3, [sp, #32]
 8023844:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023846:	685c      	ldr	r4, [r3, #4]
 8023848:	3404      	adds	r4, #4
 802384a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802384c:	2b00      	cmp	r3, #0
 802384e:	dc03      	bgt.n	8023858 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8023850:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8023852:	2b00      	cmp	r3, #0
 8023854:	f340 81d6 	ble.w	8023c04 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8023858:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802385a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802385e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023862:	1e48      	subs	r0, r1, #1
 8023864:	1e56      	subs	r6, r2, #1
 8023866:	9b06      	ldr	r3, [sp, #24]
 8023868:	2b00      	cmp	r3, #0
 802386a:	f340 80b7 	ble.w	80239dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 802386e:	ea5f 472b 	movs.w	r7, fp, asr #16
 8023872:	ea4f 4325 	mov.w	r3, r5, asr #16
 8023876:	d406      	bmi.n	8023886 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8023878:	4287      	cmp	r7, r0
 802387a:	da04      	bge.n	8023886 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 802387c:	2b00      	cmp	r3, #0
 802387e:	db02      	blt.n	8023886 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8023880:	42b3      	cmp	r3, r6
 8023882:	f2c0 80ac 	blt.w	80239de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8023886:	3701      	adds	r7, #1
 8023888:	f100 809d 	bmi.w	80239c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 802388c:	42b9      	cmp	r1, r7
 802388e:	f2c0 809a 	blt.w	80239c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8023892:	3301      	adds	r3, #1
 8023894:	f100 8097 	bmi.w	80239c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8023898:	429a      	cmp	r2, r3
 802389a:	f2c0 8094 	blt.w	80239c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 802389e:	9b06      	ldr	r3, [sp, #24]
 80238a0:	930b      	str	r3, [sp, #44]	; 0x2c
 80238a2:	9b07      	ldr	r3, [sp, #28]
 80238a4:	9309      	str	r3, [sp, #36]	; 0x24
 80238a6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80238a8:	2b00      	cmp	r3, #0
 80238aa:	f340 80b5 	ble.w	8023a18 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80238ae:	9820      	ldr	r0, [sp, #128]	; 0x80
 80238b0:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80238b2:	68c7      	ldr	r7, [r0, #12]
 80238b4:	6892      	ldr	r2, [r2, #8]
 80238b6:	ea5f 402b 	movs.w	r0, fp, asr #16
 80238ba:	ea4f 4625 	mov.w	r6, r5, asr #16
 80238be:	f3cb 3303 	ubfx	r3, fp, #12, #4
 80238c2:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80238c6:	f100 80fb 	bmi.w	8023ac0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 80238ca:	f102 3cff 	add.w	ip, r2, #4294967295
 80238ce:	4560      	cmp	r0, ip
 80238d0:	f280 80f6 	bge.w	8023ac0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 80238d4:	2e00      	cmp	r6, #0
 80238d6:	f2c0 80f3 	blt.w	8023ac0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 80238da:	f107 3cff 	add.w	ip, r7, #4294967295
 80238de:	4566      	cmp	r6, ip
 80238e0:	f280 80ee 	bge.w	8023ac0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 80238e4:	b212      	sxth	r2, r2
 80238e6:	fb06 0002 	mla	r0, r6, r2, r0
 80238ea:	9e08      	ldr	r6, [sp, #32]
 80238ec:	1837      	adds	r7, r6, r0
 80238ee:	5c30      	ldrb	r0, [r6, r0]
 80238f0:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 80238f4:	eb04 0c08 	add.w	ip, r4, r8
 80238f8:	2b00      	cmp	r3, #0
 80238fa:	f000 80d3 	beq.w	8023aa4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80238fe:	787e      	ldrb	r6, [r7, #1]
 8023900:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8023904:	4426      	add	r6, r4
 8023906:	2900      	cmp	r1, #0
 8023908:	f000 80d4 	beq.w	8023ab4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 802390c:	18b8      	adds	r0, r7, r2
 802390e:	5cba      	ldrb	r2, [r7, r2]
 8023910:	7840      	ldrb	r0, [r0, #1]
 8023912:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8023916:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802391a:	4422      	add	r2, r4
 802391c:	4420      	add	r0, r4
 802391e:	b29b      	uxth	r3, r3
 8023920:	b289      	uxth	r1, r1
 8023922:	fb03 f901 	mul.w	r9, r3, r1
 8023926:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 802392a:	011b      	lsls	r3, r3, #4
 802392c:	b289      	uxth	r1, r1
 802392e:	78b7      	ldrb	r7, [r6, #2]
 8023930:	f89c a002 	ldrb.w	sl, [ip, #2]
 8023934:	f89c c001 	ldrb.w	ip, [ip, #1]
 8023938:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 802393c:	eba3 0309 	sub.w	r3, r3, r9
 8023940:	b29b      	uxth	r3, r3
 8023942:	ebae 0e01 	sub.w	lr, lr, r1
 8023946:	fa1f fe8e 	uxth.w	lr, lr
 802394a:	435f      	muls	r7, r3
 802394c:	fb0e 770a 	mla	r7, lr, sl, r7
 8023950:	f892 a002 	ldrb.w	sl, [r2, #2]
 8023954:	fb01 770a 	mla	r7, r1, sl, r7
 8023958:	f890 a002 	ldrb.w	sl, [r0, #2]
 802395c:	fb09 7a0a 	mla	sl, r9, sl, r7
 8023960:	f814 7008 	ldrb.w	r7, [r4, r8]
 8023964:	f896 8000 	ldrb.w	r8, [r6]
 8023968:	7876      	ldrb	r6, [r6, #1]
 802396a:	fb03 f808 	mul.w	r8, r3, r8
 802396e:	fb0e 8807 	mla	r8, lr, r7, r8
 8023972:	7817      	ldrb	r7, [r2, #0]
 8023974:	fb01 8807 	mla	r8, r1, r7, r8
 8023978:	7807      	ldrb	r7, [r0, #0]
 802397a:	fb09 8707 	mla	r7, r9, r7, r8
 802397e:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8023982:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8023986:	ea47 070a 	orr.w	r7, r7, sl
 802398a:	4373      	muls	r3, r6
 802398c:	f892 a001 	ldrb.w	sl, [r2, #1]
 8023990:	fb0e 330c 	mla	r3, lr, ip, r3
 8023994:	fb01 310a 	mla	r1, r1, sl, r3
 8023998:	f890 a001 	ldrb.w	sl, [r0, #1]
 802399c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802399e:	fb09 1a0a 	mla	sl, r9, sl, r1
 80239a2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80239a6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80239aa:	ea47 070a 	orr.w	r7, r7, sl
 80239ae:	801f      	strh	r7, [r3, #0]
 80239b0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80239b2:	3302      	adds	r3, #2
 80239b4:	9309      	str	r3, [sp, #36]	; 0x24
 80239b6:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80239b8:	449b      	add	fp, r3
 80239ba:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80239bc:	441d      	add	r5, r3
 80239be:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80239c0:	3b01      	subs	r3, #1
 80239c2:	930b      	str	r3, [sp, #44]	; 0x2c
 80239c4:	e76f      	b.n	80238a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80239c6:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80239c8:	449b      	add	fp, r3
 80239ca:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80239cc:	441d      	add	r5, r3
 80239ce:	9b06      	ldr	r3, [sp, #24]
 80239d0:	3b01      	subs	r3, #1
 80239d2:	9306      	str	r3, [sp, #24]
 80239d4:	9b07      	ldr	r3, [sp, #28]
 80239d6:	3302      	adds	r3, #2
 80239d8:	9307      	str	r3, [sp, #28]
 80239da:	e744      	b.n	8023866 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 80239dc:	d023      	beq.n	8023a26 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 80239de:	9b06      	ldr	r3, [sp, #24]
 80239e0:	981b      	ldr	r0, [sp, #108]	; 0x6c
 80239e2:	3b01      	subs	r3, #1
 80239e4:	fb00 b003 	mla	r0, r0, r3, fp
 80239e8:	1400      	asrs	r0, r0, #16
 80239ea:	f53f af58 	bmi.w	802389e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80239ee:	3901      	subs	r1, #1
 80239f0:	4288      	cmp	r0, r1
 80239f2:	f6bf af54 	bge.w	802389e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80239f6:	991c      	ldr	r1, [sp, #112]	; 0x70
 80239f8:	fb01 5303 	mla	r3, r1, r3, r5
 80239fc:	141b      	asrs	r3, r3, #16
 80239fe:	f53f af4e 	bmi.w	802389e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8023a02:	3a01      	subs	r2, #1
 8023a04:	4293      	cmp	r3, r2
 8023a06:	f6bf af4a 	bge.w	802389e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8023a0a:	9b06      	ldr	r3, [sp, #24]
 8023a0c:	9309      	str	r3, [sp, #36]	; 0x24
 8023a0e:	9b07      	ldr	r3, [sp, #28]
 8023a10:	930b      	str	r3, [sp, #44]	; 0x2c
 8023a12:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023a14:	2b00      	cmp	r3, #0
 8023a16:	dc70      	bgt.n	8023afa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 8023a18:	9b06      	ldr	r3, [sp, #24]
 8023a1a:	9a07      	ldr	r2, [sp, #28]
 8023a1c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8023a20:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8023a24:	9307      	str	r3, [sp, #28]
 8023a26:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023a28:	2b00      	cmp	r3, #0
 8023a2a:	f340 80eb 	ble.w	8023c04 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8023a2e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023a32:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8023a36:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023a3a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8023a3c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023a40:	ee31 1a05 	vadd.f32	s2, s2, s10
 8023a44:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023a48:	eef0 6a62 	vmov.f32	s13, s5
 8023a4c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023a50:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023a54:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023a58:	ee16 ba90 	vmov	fp, s13
 8023a5c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023a60:	eef0 6a43 	vmov.f32	s13, s6
 8023a64:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8023a68:	ee12 2a90 	vmov	r2, s5
 8023a6c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023a70:	fb92 f3f3 	sdiv	r3, r2, r3
 8023a74:	ee13 2a10 	vmov	r2, s6
 8023a78:	931b      	str	r3, [sp, #108]	; 0x6c
 8023a7a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8023a7c:	fb92 f3f3 	sdiv	r3, r2, r3
 8023a80:	931c      	str	r3, [sp, #112]	; 0x70
 8023a82:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023a84:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8023a86:	3b01      	subs	r3, #1
 8023a88:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023a8c:	930a      	str	r3, [sp, #40]	; 0x28
 8023a8e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8023a90:	bf08      	it	eq
 8023a92:	4613      	moveq	r3, r2
 8023a94:	ee16 5a90 	vmov	r5, s13
 8023a98:	9306      	str	r3, [sp, #24]
 8023a9a:	eeb0 3a67 	vmov.f32	s6, s15
 8023a9e:	eef0 2a47 	vmov.f32	s5, s14
 8023aa2:	e6d2      	b.n	802384a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8023aa4:	b149      	cbz	r1, 8023aba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8023aa6:	5cba      	ldrb	r2, [r7, r2]
 8023aa8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8023aac:	4422      	add	r2, r4
 8023aae:	4660      	mov	r0, ip
 8023ab0:	4666      	mov	r6, ip
 8023ab2:	e734      	b.n	802391e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8023ab4:	4660      	mov	r0, ip
 8023ab6:	4662      	mov	r2, ip
 8023ab8:	e731      	b.n	802391e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8023aba:	4660      	mov	r0, ip
 8023abc:	4662      	mov	r2, ip
 8023abe:	e7f7      	b.n	8023ab0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 8023ac0:	f110 0c01 	adds.w	ip, r0, #1
 8023ac4:	f53f af74 	bmi.w	80239b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8023ac8:	4562      	cmp	r2, ip
 8023aca:	f6ff af71 	blt.w	80239b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8023ace:	f116 0c01 	adds.w	ip, r6, #1
 8023ad2:	f53f af6d 	bmi.w	80239b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8023ad6:	4567      	cmp	r7, ip
 8023ad8:	f6ff af6a 	blt.w	80239b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8023adc:	b23f      	sxth	r7, r7
 8023ade:	b212      	sxth	r2, r2
 8023ae0:	e9cd 3104 	strd	r3, r1, [sp, #16]
 8023ae4:	e9cd 0602 	strd	r0, r6, [sp, #8]
 8023ae8:	9200      	str	r2, [sp, #0]
 8023aea:	9701      	str	r7, [sp, #4]
 8023aec:	4623      	mov	r3, r4
 8023aee:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8023af2:	980d      	ldr	r0, [sp, #52]	; 0x34
 8023af4:	f7ff fde6 	bl	80236c4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 8023af8:	e75a      	b.n	80239b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8023afa:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8023afc:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8023b00:	ea4f 462b 	mov.w	r6, fp, asr #16
 8023b04:	1428      	asrs	r0, r5, #16
 8023b06:	fb02 6000 	mla	r0, r2, r0, r6
 8023b0a:	9e08      	ldr	r6, [sp, #32]
 8023b0c:	f816 8000 	ldrb.w	r8, [r6, r0]
 8023b10:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8023b14:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8023b18:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8023b1c:	1837      	adds	r7, r6, r0
 8023b1e:	eb04 0c08 	add.w	ip, r4, r8
 8023b22:	2b00      	cmp	r3, #0
 8023b24:	d060      	beq.n	8023be8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 8023b26:	787e      	ldrb	r6, [r7, #1]
 8023b28:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8023b2c:	4426      	add	r6, r4
 8023b2e:	2900      	cmp	r1, #0
 8023b30:	d062      	beq.n	8023bf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 8023b32:	18b8      	adds	r0, r7, r2
 8023b34:	5cba      	ldrb	r2, [r7, r2]
 8023b36:	7840      	ldrb	r0, [r0, #1]
 8023b38:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8023b3c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8023b40:	4422      	add	r2, r4
 8023b42:	4420      	add	r0, r4
 8023b44:	b29b      	uxth	r3, r3
 8023b46:	b289      	uxth	r1, r1
 8023b48:	fb03 f901 	mul.w	r9, r3, r1
 8023b4c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8023b50:	011b      	lsls	r3, r3, #4
 8023b52:	b289      	uxth	r1, r1
 8023b54:	78b7      	ldrb	r7, [r6, #2]
 8023b56:	f89c a002 	ldrb.w	sl, [ip, #2]
 8023b5a:	f89c c001 	ldrb.w	ip, [ip, #1]
 8023b5e:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8023b62:	eba3 0309 	sub.w	r3, r3, r9
 8023b66:	b29b      	uxth	r3, r3
 8023b68:	ebae 0e01 	sub.w	lr, lr, r1
 8023b6c:	fa1f fe8e 	uxth.w	lr, lr
 8023b70:	435f      	muls	r7, r3
 8023b72:	fb0e 770a 	mla	r7, lr, sl, r7
 8023b76:	f892 a002 	ldrb.w	sl, [r2, #2]
 8023b7a:	fb01 770a 	mla	r7, r1, sl, r7
 8023b7e:	f890 a002 	ldrb.w	sl, [r0, #2]
 8023b82:	fb09 7a0a 	mla	sl, r9, sl, r7
 8023b86:	f814 7008 	ldrb.w	r7, [r4, r8]
 8023b8a:	f896 8000 	ldrb.w	r8, [r6]
 8023b8e:	7876      	ldrb	r6, [r6, #1]
 8023b90:	fb03 f808 	mul.w	r8, r3, r8
 8023b94:	fb0e 8807 	mla	r8, lr, r7, r8
 8023b98:	7817      	ldrb	r7, [r2, #0]
 8023b9a:	fb01 8807 	mla	r8, r1, r7, r8
 8023b9e:	7807      	ldrb	r7, [r0, #0]
 8023ba0:	fb09 8707 	mla	r7, r9, r7, r8
 8023ba4:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8023ba8:	4373      	muls	r3, r6
 8023baa:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8023bae:	7856      	ldrb	r6, [r2, #1]
 8023bb0:	ea47 070a 	orr.w	r7, r7, sl
 8023bb4:	fb0e 330c 	mla	r3, lr, ip, r3
 8023bb8:	f890 a001 	ldrb.w	sl, [r0, #1]
 8023bbc:	fb01 3306 	mla	r3, r1, r6, r3
 8023bc0:	fb09 3a0a 	mla	sl, r9, sl, r3
 8023bc4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8023bc8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8023bca:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8023bce:	ea47 070a 	orr.w	r7, r7, sl
 8023bd2:	f823 7b02 	strh.w	r7, [r3], #2
 8023bd6:	930b      	str	r3, [sp, #44]	; 0x2c
 8023bd8:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8023bda:	449b      	add	fp, r3
 8023bdc:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023bde:	441d      	add	r5, r3
 8023be0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023be2:	3b01      	subs	r3, #1
 8023be4:	9309      	str	r3, [sp, #36]	; 0x24
 8023be6:	e714      	b.n	8023a12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8023be8:	b149      	cbz	r1, 8023bfe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8023bea:	5cba      	ldrb	r2, [r7, r2]
 8023bec:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8023bf0:	4422      	add	r2, r4
 8023bf2:	4660      	mov	r0, ip
 8023bf4:	4666      	mov	r6, ip
 8023bf6:	e7a5      	b.n	8023b44 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8023bf8:	4660      	mov	r0, ip
 8023bfa:	4662      	mov	r2, ip
 8023bfc:	e7a2      	b.n	8023b44 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8023bfe:	4660      	mov	r0, ip
 8023c00:	4662      	mov	r2, ip
 8023c02:	e7f7      	b.n	8023bf4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 8023c04:	b00f      	add	sp, #60	; 0x3c
 8023c06:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08023c0a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 8023c0a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023c0e:	b085      	sub	sp, #20
 8023c10:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 8023c14:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8023c18:	9102      	str	r1, [sp, #8]
 8023c1a:	2c00      	cmp	r4, #0
 8023c1c:	fb04 710c 	mla	r1, r4, ip, r7
 8023c20:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8023c24:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 8023c28:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 8023c2c:	eb02 0e01 	add.w	lr, r2, r1
 8023c30:	f2c0 8122 	blt.w	8023e78 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 8023c34:	45a0      	cmp	r8, r4
 8023c36:	f340 811f 	ble.w	8023e78 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 8023c3a:	2f00      	cmp	r7, #0
 8023c3c:	f2c0 811a 	blt.w	8023e74 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 8023c40:	45bc      	cmp	ip, r7
 8023c42:	f340 8117 	ble.w	8023e74 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 8023c46:	5c52      	ldrb	r2, [r2, r1]
 8023c48:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8023c4c:	1c7a      	adds	r2, r7, #1
 8023c4e:	f100 8116 	bmi.w	8023e7e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 8023c52:	4594      	cmp	ip, r2
 8023c54:	f340 8113 	ble.w	8023e7e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 8023c58:	2e00      	cmp	r6, #0
 8023c5a:	f000 8112 	beq.w	8023e82 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 8023c5e:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8023c62:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8023c66:	3401      	adds	r4, #1
 8023c68:	f100 810f 	bmi.w	8023e8a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 8023c6c:	45a0      	cmp	r8, r4
 8023c6e:	f340 810c 	ble.w	8023e8a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 8023c72:	2800      	cmp	r0, #0
 8023c74:	f000 810c 	beq.w	8023e90 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 8023c78:	2f00      	cmp	r7, #0
 8023c7a:	f2c0 8104 	blt.w	8023e86 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8023c7e:	45bc      	cmp	ip, r7
 8023c80:	f340 8101 	ble.w	8023e86 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8023c84:	f81e 200c 	ldrb.w	r2, [lr, ip]
 8023c88:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 8023c8c:	3701      	adds	r7, #1
 8023c8e:	f100 8102 	bmi.w	8023e96 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8023c92:	45bc      	cmp	ip, r7
 8023c94:	f340 80ff 	ble.w	8023e96 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8023c98:	2e00      	cmp	r6, #0
 8023c9a:	f000 80fe 	beq.w	8023e9a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 8023c9e:	44f4      	add	ip, lr
 8023ca0:	f89c 2001 	ldrb.w	r2, [ip, #1]
 8023ca4:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8023ca8:	b2b6      	uxth	r6, r6
 8023caa:	b280      	uxth	r0, r0
 8023cac:	fb00 fe06 	mul.w	lr, r0, r6
 8023cb0:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8023cb4:	0136      	lsls	r6, r6, #4
 8023cb6:	eba6 070e 	sub.w	r7, r6, lr
 8023cba:	b280      	uxth	r0, r0
 8023cbc:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8023cc0:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8023cc4:	b2bf      	uxth	r7, r7
 8023cc6:	1a1b      	subs	r3, r3, r0
 8023cc8:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8023ccc:	b29b      	uxth	r3, r3
 8023cce:	fb0a f607 	mul.w	r6, sl, r7
 8023cd2:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8023cd6:	fb0b 6603 	mla	r6, fp, r3, r6
 8023cda:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8023cde:	fb00 6609 	mla	r6, r0, r9, r6
 8023ce2:	fb0e 6608 	mla	r6, lr, r8, r6
 8023ce6:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8023cea:	9600      	str	r6, [sp, #0]
 8023cec:	2e00      	cmp	r6, #0
 8023cee:	f000 80be 	beq.w	8023e6e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 8023cf2:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8023cf6:	fb0b fc0c 	mul.w	ip, fp, ip
 8023cfa:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8023cfe:	fb0b f505 	mul.w	r5, fp, r5
 8023d02:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8023d06:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8023d0a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8023d0e:	44dc      	add	ip, fp
 8023d10:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023d14:	9501      	str	r5, [sp, #4]
 8023d16:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8023d1a:	9503      	str	r5, [sp, #12]
 8023d1c:	9d01      	ldr	r5, [sp, #4]
 8023d1e:	9e02      	ldr	r6, [sp, #8]
 8023d20:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8023d24:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8023d28:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8023d2c:	fb0a fc0c 	mul.w	ip, sl, ip
 8023d30:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8023d34:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8023d38:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8023d3c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8023d40:	4465      	add	r5, ip
 8023d42:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8023d46:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8023d4a:	fb09 fc0c 	mul.w	ip, r9, ip
 8023d4e:	fb09 f904 	mul.w	r9, r9, r4
 8023d52:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8023d56:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8023d5a:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8023d5e:	fb08 f404 	mul.w	r4, r8, r4
 8023d62:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8023d66:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8023d6a:	fb08 f802 	mul.w	r8, r8, r2
 8023d6e:	fb0a fa01 	mul.w	sl, sl, r1
 8023d72:	0a22      	lsrs	r2, r4, #8
 8023d74:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8023d78:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8023d7c:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8023d80:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8023d84:	4414      	add	r4, r2
 8023d86:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8023d8a:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8023d8e:	0a2d      	lsrs	r5, r5, #8
 8023d90:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8023d94:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8023d98:	9a03      	ldr	r2, [sp, #12]
 8023d9a:	8836      	ldrh	r6, [r6, #0]
 8023d9c:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8023da0:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8023da4:	437d      	muls	r5, r7
 8023da6:	4461      	add	r1, ip
 8023da8:	0a24      	lsrs	r4, r4, #8
 8023daa:	fb02 5503 	mla	r5, r2, r3, r5
 8023dae:	0a09      	lsrs	r1, r1, #8
 8023db0:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8023db4:	fb04 540e 	mla	r4, r4, lr, r5
 8023db8:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8023dbc:	fb01 4100 	mla	r1, r1, r0, r4
 8023dc0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023dc4:	0a09      	lsrs	r1, r1, #8
 8023dc6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023dca:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8023dce:	fb07 f70a 	mul.w	r7, r7, sl
 8023dd2:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8023dd6:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8023dda:	fb03 7101 	mla	r1, r3, r1, r7
 8023dde:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023de2:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8023de6:	fb0e 1e08 	mla	lr, lr, r8, r1
 8023dea:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8023dee:	fb00 e101 	mla	r1, r0, r1, lr
 8023df2:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 8023df6:	9a00      	ldr	r2, [sp, #0]
 8023df8:	b287      	uxth	r7, r0
 8023dfa:	437a      	muls	r2, r7
 8023dfc:	0a09      	lsrs	r1, r1, #8
 8023dfe:	1c53      	adds	r3, r2, #1
 8023e00:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8023e04:	4321      	orrs	r1, r4
 8023e06:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8023e0a:	1235      	asrs	r5, r6, #8
 8023e0c:	0c0a      	lsrs	r2, r1, #16
 8023e0e:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8023e12:	b2db      	uxtb	r3, r3
 8023e14:	fb12 f207 	smulbb	r2, r2, r7
 8023e18:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8023e1c:	fb05 2503 	mla	r5, r5, r3, r2
 8023e20:	f3c1 2407 	ubfx	r4, r1, #8, #8
 8023e24:	10f2      	asrs	r2, r6, #3
 8023e26:	b2c8      	uxtb	r0, r1
 8023e28:	00f6      	lsls	r6, r6, #3
 8023e2a:	fb14 f407 	smulbb	r4, r4, r7
 8023e2e:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8023e32:	b2f6      	uxtb	r6, r6
 8023e34:	fb10 f007 	smulbb	r0, r0, r7
 8023e38:	fb02 4203 	mla	r2, r2, r3, r4
 8023e3c:	b2ad      	uxth	r5, r5
 8023e3e:	fb06 0303 	mla	r3, r6, r3, r0
 8023e42:	b299      	uxth	r1, r3
 8023e44:	b294      	uxth	r4, r2
 8023e46:	1c6b      	adds	r3, r5, #1
 8023e48:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8023e4c:	1c62      	adds	r2, r4, #1
 8023e4e:	1c4b      	adds	r3, r1, #1
 8023e50:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8023e54:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8023e58:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8023e5c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8023e60:	0952      	lsrs	r2, r2, #5
 8023e62:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023e66:	432b      	orrs	r3, r5
 8023e68:	4313      	orrs	r3, r2
 8023e6a:	9a02      	ldr	r2, [sp, #8]
 8023e6c:	8013      	strh	r3, [r2, #0]
 8023e6e:	b005      	add	sp, #20
 8023e70:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023e74:	2500      	movs	r5, #0
 8023e76:	e6e9      	b.n	8023c4c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 8023e78:	2100      	movs	r1, #0
 8023e7a:	460d      	mov	r5, r1
 8023e7c:	e6f3      	b.n	8023c66 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8023e7e:	2100      	movs	r1, #0
 8023e80:	e6f1      	b.n	8023c66 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8023e82:	4631      	mov	r1, r6
 8023e84:	e6ef      	b.n	8023c66 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8023e86:	2400      	movs	r4, #0
 8023e88:	e700      	b.n	8023c8c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 8023e8a:	2200      	movs	r2, #0
 8023e8c:	4614      	mov	r4, r2
 8023e8e:	e70b      	b.n	8023ca8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8023e90:	4602      	mov	r2, r0
 8023e92:	4604      	mov	r4, r0
 8023e94:	e708      	b.n	8023ca8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8023e96:	2200      	movs	r2, #0
 8023e98:	e706      	b.n	8023ca8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8023e9a:	4632      	mov	r2, r6
 8023e9c:	e704      	b.n	8023ca8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

08023e9e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023e9e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023ea2:	b09f      	sub	sp, #124	; 0x7c
 8023ea4:	921b      	str	r2, [sp, #108]	; 0x6c
 8023ea6:	9309      	str	r3, [sp, #36]	; 0x24
 8023ea8:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8023eaa:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 8023eae:	931c      	str	r3, [sp, #112]	; 0x70
 8023eb0:	9119      	str	r1, [sp, #100]	; 0x64
 8023eb2:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8023eb6:	901d      	str	r0, [sp, #116]	; 0x74
 8023eb8:	6850      	ldr	r0, [r2, #4]
 8023eba:	6812      	ldr	r2, [r2, #0]
 8023ebc:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 8023ebe:	fb00 1303 	mla	r3, r0, r3, r1
 8023ec2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8023ec6:	930c      	str	r3, [sp, #48]	; 0x30
 8023ec8:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8023eca:	681b      	ldr	r3, [r3, #0]
 8023ecc:	9312      	str	r3, [sp, #72]	; 0x48
 8023ece:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8023ed0:	685e      	ldr	r6, [r3, #4]
 8023ed2:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 8023ed6:	930d      	str	r3, [sp, #52]	; 0x34
 8023ed8:	3604      	adds	r6, #4
 8023eda:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8023edc:	2b00      	cmp	r3, #0
 8023ede:	dc03      	bgt.n	8023ee8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8023ee0:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8023ee2:	2b00      	cmp	r3, #0
 8023ee4:	f340 8388 	ble.w	80245f8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 8023ee8:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8023eea:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023eee:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023ef2:	1e48      	subs	r0, r1, #1
 8023ef4:	1e57      	subs	r7, r2, #1
 8023ef6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023ef8:	2b00      	cmp	r3, #0
 8023efa:	f340 8195 	ble.w	8024228 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8023efe:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8023f00:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8023f04:	ea4f 4325 	mov.w	r3, r5, asr #16
 8023f08:	d406      	bmi.n	8023f18 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8023f0a:	4584      	cmp	ip, r0
 8023f0c:	da04      	bge.n	8023f18 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8023f0e:	2b00      	cmp	r3, #0
 8023f10:	db02      	blt.n	8023f18 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8023f12:	42bb      	cmp	r3, r7
 8023f14:	f2c0 8189 	blt.w	802422a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 8023f18:	f11c 0c01 	adds.w	ip, ip, #1
 8023f1c:	f100 8177 	bmi.w	802420e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8023f20:	4561      	cmp	r1, ip
 8023f22:	f2c0 8174 	blt.w	802420e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8023f26:	3301      	adds	r3, #1
 8023f28:	f100 8171 	bmi.w	802420e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8023f2c:	429a      	cmp	r2, r3
 8023f2e:	f2c0 816e 	blt.w	802420e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8023f32:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023f34:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8023f36:	931a      	str	r3, [sp, #104]	; 0x68
 8023f38:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8023f3a:	2b00      	cmp	r3, #0
 8023f3c:	f340 8193 	ble.w	8024266 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 8023f40:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8023f42:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8023f46:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8023f48:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 8023f4c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8023f4e:	141b      	asrs	r3, r3, #16
 8023f50:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8023f54:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8023f58:	f100 81d6 	bmi.w	8024308 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8023f5c:	f100 38ff 	add.w	r8, r0, #4294967295
 8023f60:	4543      	cmp	r3, r8
 8023f62:	f280 81d1 	bge.w	8024308 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8023f66:	f1bc 0f00 	cmp.w	ip, #0
 8023f6a:	f2c0 81cd 	blt.w	8024308 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8023f6e:	f10e 38ff 	add.w	r8, lr, #4294967295
 8023f72:	45c4      	cmp	ip, r8
 8023f74:	f280 81c8 	bge.w	8024308 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8023f78:	b200      	sxth	r0, r0
 8023f7a:	fb0c 3300 	mla	r3, ip, r0, r3
 8023f7e:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8023f80:	eb04 0803 	add.w	r8, r4, r3
 8023f84:	5ce3      	ldrb	r3, [r4, r3]
 8023f86:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8023f8a:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8023f8e:	2a00      	cmp	r2, #0
 8023f90:	f000 81af 	beq.w	80242f2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8023f94:	f898 c001 	ldrb.w	ip, [r8, #1]
 8023f98:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8023f9c:	940e      	str	r4, [sp, #56]	; 0x38
 8023f9e:	0e24      	lsrs	r4, r4, #24
 8023fa0:	9415      	str	r4, [sp, #84]	; 0x54
 8023fa2:	b179      	cbz	r1, 8023fc4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8023fa4:	eb08 0c00 	add.w	ip, r8, r0
 8023fa8:	f818 0000 	ldrb.w	r0, [r8, r0]
 8023fac:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8023fb0:	900a      	str	r0, [sp, #40]	; 0x28
 8023fb2:	0e00      	lsrs	r0, r0, #24
 8023fb4:	9013      	str	r0, [sp, #76]	; 0x4c
 8023fb6:	f89c 0001 	ldrb.w	r0, [ip, #1]
 8023fba:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8023fbe:	900f      	str	r0, [sp, #60]	; 0x3c
 8023fc0:	0e00      	lsrs	r0, r0, #24
 8023fc2:	9016      	str	r0, [sp, #88]	; 0x58
 8023fc4:	b292      	uxth	r2, r2
 8023fc6:	b289      	uxth	r1, r1
 8023fc8:	fb02 f901 	mul.w	r9, r2, r1
 8023fcc:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8023fd0:	0112      	lsls	r2, r2, #4
 8023fd2:	eba2 0809 	sub.w	r8, r2, r9
 8023fd6:	b289      	uxth	r1, r1
 8023fd8:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8023fdc:	9815      	ldr	r0, [sp, #84]	; 0x54
 8023fde:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8023fe0:	fa1f f888 	uxth.w	r8, r8
 8023fe4:	1a52      	subs	r2, r2, r1
 8023fe6:	b292      	uxth	r2, r2
 8023fe8:	fb08 f000 	mul.w	r0, r8, r0
 8023fec:	fb02 000e 	mla	r0, r2, lr, r0
 8023ff0:	fb01 0004 	mla	r0, r1, r4, r0
 8023ff4:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8023ff6:	fb09 0004 	mla	r0, r9, r4, r0
 8023ffa:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8023ffe:	2800      	cmp	r0, #0
 8024000:	f000 80fa 	beq.w	80241f8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024004:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8024008:	d01b      	beq.n	8024042 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802400a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 802400e:	fb0e fa0a 	mul.w	sl, lr, sl
 8024012:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024016:	fb0e fe03 	mul.w	lr, lr, r3
 802401a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802401e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024022:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8024026:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 802402a:	4453      	add	r3, sl
 802402c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8024030:	0a1b      	lsrs	r3, r3, #8
 8024032:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024036:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802403a:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802403e:	ea43 030c 	orr.w	r3, r3, ip
 8024042:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8024044:	2cff      	cmp	r4, #255	; 0xff
 8024046:	d021      	beq.n	802408c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8024048:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802404a:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 802404e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8024050:	fb04 fb0b 	mul.w	fp, r4, fp
 8024054:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8024056:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 802405a:	9c15      	ldr	r4, [sp, #84]	; 0x54
 802405c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024060:	fb04 fa0a 	mul.w	sl, r4, sl
 8024064:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024068:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802406c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024070:	44de      	add	lr, fp
 8024072:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8024076:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802407a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802407e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024082:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024086:	ea4e 040a 	orr.w	r4, lr, sl
 802408a:	940e      	str	r4, [sp, #56]	; 0x38
 802408c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 802408e:	2cff      	cmp	r4, #255	; 0xff
 8024090:	d021      	beq.n	80240d6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8024092:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8024094:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8024098:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 802409a:	fb04 fb0b 	mul.w	fp, r4, fp
 802409e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80240a0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80240a4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80240a6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80240aa:	fb04 fa0a 	mul.w	sl, r4, sl
 80240ae:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80240b2:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80240b6:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80240ba:	44de      	add	lr, fp
 80240bc:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80240c0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80240c4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80240c8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80240cc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80240d0:	ea4e 040a 	orr.w	r4, lr, sl
 80240d4:	940a      	str	r4, [sp, #40]	; 0x28
 80240d6:	9c16      	ldr	r4, [sp, #88]	; 0x58
 80240d8:	2cff      	cmp	r4, #255	; 0xff
 80240da:	d021      	beq.n	8024120 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 80240dc:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80240de:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80240e2:	9c16      	ldr	r4, [sp, #88]	; 0x58
 80240e4:	fb04 fb0b 	mul.w	fp, r4, fp
 80240e8:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80240ea:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80240ee:	9c16      	ldr	r4, [sp, #88]	; 0x58
 80240f0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80240f4:	fb04 fa0a 	mul.w	sl, r4, sl
 80240f8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80240fc:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8024100:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024104:	44de      	add	lr, fp
 8024106:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802410a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802410e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024112:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024116:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802411a:	ea4e 040a 	orr.w	r4, lr, sl
 802411e:	940f      	str	r4, [sp, #60]	; 0x3c
 8024120:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8024122:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8024126:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8024128:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 802412c:	fb08 fc0c 	mul.w	ip, r8, ip
 8024130:	fb02 cc0e 	mla	ip, r2, lr, ip
 8024134:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8024138:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 802413a:	fb01 cc0e 	mla	ip, r1, lr, ip
 802413e:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8024142:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8024144:	fb09 cc0e 	mla	ip, r9, lr, ip
 8024148:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 802414c:	fb08 f80e 	mul.w	r8, r8, lr
 8024150:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024154:	fb02 8303 	mla	r3, r2, r3, r8
 8024158:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802415a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802415c:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8024160:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8024162:	fb01 330a 	mla	r3, r1, sl, r3
 8024166:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 802416a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 802416c:	fb09 3901 	mla	r9, r9, r1, r3
 8024170:	4342      	muls	r2, r0
 8024172:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024176:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802417a:	883b      	ldrh	r3, [r7, #0]
 802417c:	1c50      	adds	r0, r2, #1
 802417e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024182:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8024186:	ea4c 0c09 	orr.w	ip, ip, r9
 802418a:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 802418e:	1219      	asrs	r1, r3, #8
 8024190:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8024194:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8024198:	b2c0      	uxtb	r0, r0
 802419a:	fb12 f204 	smulbb	r2, r2, r4
 802419e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80241a2:	fb01 2100 	mla	r1, r1, r0, r2
 80241a6:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 80241aa:	10da      	asrs	r2, r3, #3
 80241ac:	fa5f fc8c 	uxtb.w	ip, ip
 80241b0:	00db      	lsls	r3, r3, #3
 80241b2:	fb1c fc04 	smulbb	ip, ip, r4
 80241b6:	b2db      	uxtb	r3, r3
 80241b8:	b289      	uxth	r1, r1
 80241ba:	fb03 c300 	mla	r3, r3, r0, ip
 80241be:	fa1f fc83 	uxth.w	ip, r3
 80241c2:	1c4b      	adds	r3, r1, #1
 80241c4:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80241c8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80241cc:	fb1e fe04 	smulbb	lr, lr, r4
 80241d0:	f10c 0301 	add.w	r3, ip, #1
 80241d4:	fb02 e200 	mla	r2, r2, r0, lr
 80241d8:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 80241dc:	b292      	uxth	r2, r2
 80241de:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 80241e2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80241e6:	430b      	orrs	r3, r1
 80241e8:	1c51      	adds	r1, r2, #1
 80241ea:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80241ee:	0952      	lsrs	r2, r2, #5
 80241f0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80241f4:	4313      	orrs	r3, r2
 80241f6:	803b      	strh	r3, [r7, #0]
 80241f8:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80241fa:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80241fc:	441a      	add	r2, r3
 80241fe:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024200:	9229      	str	r2, [sp, #164]	; 0xa4
 8024202:	441d      	add	r5, r3
 8024204:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8024206:	3b01      	subs	r3, #1
 8024208:	3702      	adds	r7, #2
 802420a:	931a      	str	r3, [sp, #104]	; 0x68
 802420c:	e694      	b.n	8023f38 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 802420e:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8024210:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8024212:	441c      	add	r4, r3
 8024214:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024216:	9429      	str	r4, [sp, #164]	; 0xa4
 8024218:	441d      	add	r5, r3
 802421a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802421c:	3b01      	subs	r3, #1
 802421e:	9309      	str	r3, [sp, #36]	; 0x24
 8024220:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8024222:	3302      	adds	r3, #2
 8024224:	930c      	str	r3, [sp, #48]	; 0x30
 8024226:	e666      	b.n	8023ef6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8024228:	d024      	beq.n	8024274 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 802422a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802422c:	982b      	ldr	r0, [sp, #172]	; 0xac
 802422e:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8024230:	3b01      	subs	r3, #1
 8024232:	fb00 4003 	mla	r0, r0, r3, r4
 8024236:	1400      	asrs	r0, r0, #16
 8024238:	f53f ae7b 	bmi.w	8023f32 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802423c:	3901      	subs	r1, #1
 802423e:	4288      	cmp	r0, r1
 8024240:	f6bf ae77 	bge.w	8023f32 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8024244:	992c      	ldr	r1, [sp, #176]	; 0xb0
 8024246:	fb01 5303 	mla	r3, r1, r3, r5
 802424a:	141b      	asrs	r3, r3, #16
 802424c:	f53f ae71 	bmi.w	8023f32 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8024250:	3a01      	subs	r2, #1
 8024252:	4293      	cmp	r3, r2
 8024254:	f6bf ae6d 	bge.w	8023f32 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8024258:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 802425c:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 8024260:	f1bb 0f00 	cmp.w	fp, #0
 8024264:	dc70      	bgt.n	8024348 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 8024266:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024268:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 802426c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802426e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8024272:	930c      	str	r3, [sp, #48]	; 0x30
 8024274:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8024276:	2b00      	cmp	r3, #0
 8024278:	f340 81be 	ble.w	80245f8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 802427c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8024280:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8024284:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8024288:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802428a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802428e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8024292:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8024296:	eef0 6a62 	vmov.f32	s13, s5
 802429a:	ee61 7a27 	vmul.f32	s15, s2, s15
 802429e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80242a2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80242a6:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 80242aa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80242ae:	eef0 6a43 	vmov.f32	s13, s6
 80242b2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80242b6:	ee12 2a90 	vmov	r2, s5
 80242ba:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80242be:	fb92 f3f3 	sdiv	r3, r2, r3
 80242c2:	ee13 2a10 	vmov	r2, s6
 80242c6:	932b      	str	r3, [sp, #172]	; 0xac
 80242c8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80242ca:	fb92 f3f3 	sdiv	r3, r2, r3
 80242ce:	932c      	str	r3, [sp, #176]	; 0xb0
 80242d0:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80242d2:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 80242d4:	3b01      	subs	r3, #1
 80242d6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80242da:	9319      	str	r3, [sp, #100]	; 0x64
 80242dc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80242de:	bf08      	it	eq
 80242e0:	4613      	moveq	r3, r2
 80242e2:	ee16 5a90 	vmov	r5, s13
 80242e6:	9309      	str	r3, [sp, #36]	; 0x24
 80242e8:	eeb0 3a67 	vmov.f32	s6, s15
 80242ec:	eef0 2a47 	vmov.f32	s5, s14
 80242f0:	e5f3      	b.n	8023eda <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80242f2:	2900      	cmp	r1, #0
 80242f4:	f43f ae66 	beq.w	8023fc4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 80242f8:	f818 0000 	ldrb.w	r0, [r8, r0]
 80242fc:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8024300:	900a      	str	r0, [sp, #40]	; 0x28
 8024302:	0e00      	lsrs	r0, r0, #24
 8024304:	9013      	str	r0, [sp, #76]	; 0x4c
 8024306:	e65d      	b.n	8023fc4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8024308:	f113 0801 	adds.w	r8, r3, #1
 802430c:	f53f af74 	bmi.w	80241f8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024310:	4540      	cmp	r0, r8
 8024312:	f6ff af71 	blt.w	80241f8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024316:	f11c 0801 	adds.w	r8, ip, #1
 802431a:	f53f af6d 	bmi.w	80241f8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 802431e:	45c6      	cmp	lr, r8
 8024320:	f6ff af6a 	blt.w	80241f8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024324:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 8024326:	9302      	str	r3, [sp, #8]
 8024328:	b200      	sxth	r0, r0
 802432a:	fa0f f38e 	sxth.w	r3, lr
 802432e:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8024332:	e9cd c203 	strd	ip, r2, [sp, #12]
 8024336:	9301      	str	r3, [sp, #4]
 8024338:	9000      	str	r0, [sp, #0]
 802433a:	4633      	mov	r3, r6
 802433c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 802433e:	981d      	ldr	r0, [sp, #116]	; 0x74
 8024340:	4639      	mov	r1, r7
 8024342:	f7ff fc62 	bl	8023c0a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 8024346:	e757      	b.n	80241f8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024348:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802434a:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 802434c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8024350:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8024352:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024356:	1427      	asrs	r7, r4, #16
 8024358:	142b      	asrs	r3, r5, #16
 802435a:	fb01 7303 	mla	r3, r1, r3, r7
 802435e:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8024360:	18e7      	adds	r7, r4, r3
 8024362:	5ce3      	ldrb	r3, [r4, r3]
 8024364:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8024368:	f3c5 3003 	ubfx	r0, r5, #12, #4
 802436c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8024370:	2a00      	cmp	r2, #0
 8024372:	f000 8137 	beq.w	80245e4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8024376:	f897 e001 	ldrb.w	lr, [r7, #1]
 802437a:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 802437e:	9410      	str	r4, [sp, #64]	; 0x40
 8024380:	0e24      	lsrs	r4, r4, #24
 8024382:	9417      	str	r4, [sp, #92]	; 0x5c
 8024384:	b170      	cbz	r0, 80243a4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8024386:	eb07 0e01 	add.w	lr, r7, r1
 802438a:	5c79      	ldrb	r1, [r7, r1]
 802438c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8024390:	910b      	str	r1, [sp, #44]	; 0x2c
 8024392:	0e09      	lsrs	r1, r1, #24
 8024394:	9114      	str	r1, [sp, #80]	; 0x50
 8024396:	f89e 1001 	ldrb.w	r1, [lr, #1]
 802439a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 802439e:	9111      	str	r1, [sp, #68]	; 0x44
 80243a0:	0e09      	lsrs	r1, r1, #24
 80243a2:	9118      	str	r1, [sp, #96]	; 0x60
 80243a4:	b292      	uxth	r2, r2
 80243a6:	b280      	uxth	r0, r0
 80243a8:	fb02 f800 	mul.w	r8, r2, r0
 80243ac:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80243b0:	0112      	lsls	r2, r2, #4
 80243b2:	eba2 0e08 	sub.w	lr, r2, r8
 80243b6:	b280      	uxth	r0, r0
 80243b8:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80243bc:	9917      	ldr	r1, [sp, #92]	; 0x5c
 80243be:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80243c0:	fa1f fe8e 	uxth.w	lr, lr
 80243c4:	1a12      	subs	r2, r2, r0
 80243c6:	b292      	uxth	r2, r2
 80243c8:	fb0e f101 	mul.w	r1, lr, r1
 80243cc:	fb02 110c 	mla	r1, r2, ip, r1
 80243d0:	fb00 1104 	mla	r1, r0, r4, r1
 80243d4:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80243d6:	fb08 1104 	mla	r1, r8, r4, r1
 80243da:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80243de:	2900      	cmp	r1, #0
 80243e0:	f000 80f5 	beq.w	80245ce <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 80243e4:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80243e8:	d019      	beq.n	802441e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 80243ea:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80243ee:	fb0c fa0a 	mul.w	sl, ip, sl
 80243f2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80243f6:	fb0c fc03 	mul.w	ip, ip, r3
 80243fa:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80243fe:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024402:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8024406:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 802440a:	4453      	add	r3, sl
 802440c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8024410:	0a1b      	lsrs	r3, r3, #8
 8024412:	0a3f      	lsrs	r7, r7, #8
 8024414:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024418:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 802441c:	433b      	orrs	r3, r7
 802441e:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8024420:	2cff      	cmp	r4, #255	; 0xff
 8024422:	d020      	beq.n	8024466 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 8024424:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8024426:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802442a:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 802442c:	4367      	muls	r7, r4
 802442e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8024430:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8024434:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8024436:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802443a:	fb04 fa0a 	mul.w	sl, r4, sl
 802443e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024442:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024446:	44bc      	add	ip, r7
 8024448:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802444c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024450:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024454:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024458:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802445c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024460:	ea4c 040a 	orr.w	r4, ip, sl
 8024464:	9410      	str	r4, [sp, #64]	; 0x40
 8024466:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8024468:	2cff      	cmp	r4, #255	; 0xff
 802446a:	d020      	beq.n	80244ae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 802446c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802446e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8024472:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8024474:	4367      	muls	r7, r4
 8024476:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8024478:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 802447c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 802447e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024482:	fb04 fa0a 	mul.w	sl, r4, sl
 8024486:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802448a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802448e:	44bc      	add	ip, r7
 8024490:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024494:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024498:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802449c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80244a0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80244a4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80244a8:	ea4c 040a 	orr.w	r4, ip, sl
 80244ac:	940b      	str	r4, [sp, #44]	; 0x2c
 80244ae:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80244b0:	2cff      	cmp	r4, #255	; 0xff
 80244b2:	d020      	beq.n	80244f6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 80244b4:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80244b6:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80244ba:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80244bc:	4367      	muls	r7, r4
 80244be:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80244c0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80244c4:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80244c6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80244ca:	fb04 fa0a 	mul.w	sl, r4, sl
 80244ce:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80244d2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80244d6:	44bc      	add	ip, r7
 80244d8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80244dc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80244e0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80244e4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80244e8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80244ec:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80244f0:	ea4c 040a 	orr.w	r4, ip, sl
 80244f4:	9411      	str	r4, [sp, #68]	; 0x44
 80244f6:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80244f8:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80244fc:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80244fe:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8024502:	fb0e f707 	mul.w	r7, lr, r7
 8024506:	fb02 770c 	mla	r7, r2, ip, r7
 802450a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802450e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8024510:	fb00 770c 	mla	r7, r0, ip, r7
 8024514:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8024518:	9c10      	ldr	r4, [sp, #64]	; 0x40
 802451a:	fb08 770c 	mla	r7, r8, ip, r7
 802451e:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8024522:	fb0e fe0c 	mul.w	lr, lr, ip
 8024526:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802452a:	fb02 e303 	mla	r3, r2, r3, lr
 802452e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8024530:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8024532:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8024536:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8024538:	fb00 330a 	mla	r3, r0, sl, r3
 802453c:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8024540:	fb08 3c0c 	mla	ip, r8, ip, r3
 8024544:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8024546:	f8b9 0000 	ldrh.w	r0, [r9]
 802454a:	434b      	muls	r3, r1
 802454c:	0a3f      	lsrs	r7, r7, #8
 802454e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024552:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8024556:	1c59      	adds	r1, r3, #1
 8024558:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 802455c:	ea47 070c 	orr.w	r7, r7, ip
 8024560:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8024564:	1202      	asrs	r2, r0, #8
 8024566:	0c3b      	lsrs	r3, r7, #16
 8024568:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 802456c:	b2c9      	uxtb	r1, r1
 802456e:	fb13 f304 	smulbb	r3, r3, r4
 8024572:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8024576:	fb02 3201 	mla	r2, r2, r1, r3
 802457a:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 802457e:	10c3      	asrs	r3, r0, #3
 8024580:	b2ff      	uxtb	r7, r7
 8024582:	00c0      	lsls	r0, r0, #3
 8024584:	b292      	uxth	r2, r2
 8024586:	fb1c fc04 	smulbb	ip, ip, r4
 802458a:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 802458e:	b2c0      	uxtb	r0, r0
 8024590:	fb17 f704 	smulbb	r7, r7, r4
 8024594:	fb03 c301 	mla	r3, r3, r1, ip
 8024598:	fb00 7001 	mla	r0, r0, r1, r7
 802459c:	f102 0c01 	add.w	ip, r2, #1
 80245a0:	b280      	uxth	r0, r0
 80245a2:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 80245a6:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 80245aa:	1c42      	adds	r2, r0, #1
 80245ac:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 80245b0:	b29b      	uxth	r3, r3
 80245b2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80245b6:	ea42 020c 	orr.w	r2, r2, ip
 80245ba:	f103 0c01 	add.w	ip, r3, #1
 80245be:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 80245c2:	095b      	lsrs	r3, r3, #5
 80245c4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80245c8:	431a      	orrs	r2, r3
 80245ca:	f8a9 2000 	strh.w	r2, [r9]
 80245ce:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80245d0:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80245d2:	441a      	add	r2, r3
 80245d4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80245d6:	9229      	str	r2, [sp, #164]	; 0xa4
 80245d8:	f109 0902 	add.w	r9, r9, #2
 80245dc:	441d      	add	r5, r3
 80245de:	f10b 3bff 	add.w	fp, fp, #4294967295
 80245e2:	e63d      	b.n	8024260 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 80245e4:	2800      	cmp	r0, #0
 80245e6:	f43f aedd 	beq.w	80243a4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 80245ea:	5c79      	ldrb	r1, [r7, r1]
 80245ec:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80245f0:	910b      	str	r1, [sp, #44]	; 0x2c
 80245f2:	0e09      	lsrs	r1, r1, #24
 80245f4:	9114      	str	r1, [sp, #80]	; 0x50
 80245f6:	e6d5      	b.n	80243a4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 80245f8:	b01f      	add	sp, #124	; 0x7c
 80245fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080245fe <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 80245fe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024602:	b089      	sub	sp, #36	; 0x24
 8024604:	9101      	str	r1, [sp, #4]
 8024606:	9801      	ldr	r0, [sp, #4]
 8024608:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 802460c:	8800      	ldrh	r0, [r0, #0]
 802460e:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 8024612:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 8024616:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 802461a:	1206      	asrs	r6, r0, #8
 802461c:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 8024620:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8024624:	9602      	str	r6, [sp, #8]
 8024626:	10c6      	asrs	r6, r0, #3
 8024628:	00c0      	lsls	r0, r0, #3
 802462a:	b2c0      	uxtb	r0, r0
 802462c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8024630:	9004      	str	r0, [sp, #16]
 8024632:	2f00      	cmp	r7, #0
 8024634:	fb07 100c 	mla	r0, r7, ip, r1
 8024638:	9603      	str	r6, [sp, #12]
 802463a:	eb02 0e00 	add.w	lr, r2, r0
 802463e:	f2c0 810a 	blt.w	8024856 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8024642:	45b8      	cmp	r8, r7
 8024644:	f340 8107 	ble.w	8024856 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8024648:	2900      	cmp	r1, #0
 802464a:	f2c0 8102 	blt.w	8024852 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 802464e:	458c      	cmp	ip, r1
 8024650:	f340 80ff 	ble.w	8024852 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8024654:	5c12      	ldrb	r2, [r2, r0]
 8024656:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 802465a:	1c4a      	adds	r2, r1, #1
 802465c:	f100 80fe 	bmi.w	802485c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8024660:	4594      	cmp	ip, r2
 8024662:	f340 80fb 	ble.w	802485c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8024666:	2d00      	cmp	r5, #0
 8024668:	f000 80fa 	beq.w	8024860 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 802466c:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8024670:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8024674:	3701      	adds	r7, #1
 8024676:	f100 80f7 	bmi.w	8024868 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 802467a:	45b8      	cmp	r8, r7
 802467c:	f340 80f4 	ble.w	8024868 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 8024680:	2c00      	cmp	r4, #0
 8024682:	f000 80f4 	beq.w	802486e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 8024686:	2900      	cmp	r1, #0
 8024688:	eb0e 020c 	add.w	r2, lr, ip
 802468c:	f2c0 80ea 	blt.w	8024864 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 8024690:	458c      	cmp	ip, r1
 8024692:	f340 80e7 	ble.w	8024864 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 8024696:	f81e 700c 	ldrb.w	r7, [lr, ip]
 802469a:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 802469e:	3101      	adds	r1, #1
 80246a0:	f100 80e8 	bmi.w	8024874 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 80246a4:	458c      	cmp	ip, r1
 80246a6:	f340 80e5 	ble.w	8024874 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 80246aa:	2d00      	cmp	r5, #0
 80246ac:	f000 80e4 	beq.w	8024878 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 80246b0:	7852      	ldrb	r2, [r2, #1]
 80246b2:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80246b6:	0e0b      	lsrs	r3, r1, #24
 80246b8:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 80246bc:	9300      	str	r3, [sp, #0]
 80246be:	b2a4      	uxth	r4, r4
 80246c0:	b2ab      	uxth	r3, r5
 80246c2:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 80246c6:	fb03 f904 	mul.w	r9, r3, r4
 80246ca:	fb0a f505 	mul.w	r5, sl, r5
 80246ce:	011b      	lsls	r3, r3, #4
 80246d0:	eba3 0e09 	sub.w	lr, r3, r9
 80246d4:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 80246d8:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 80246dc:	0a28      	lsrs	r0, r5, #8
 80246de:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 80246e2:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 80246e6:	4405      	add	r5, r0
 80246e8:	0a2d      	lsrs	r5, r5, #8
 80246ea:	fb0a f303 	mul.w	r3, sl, r3
 80246ee:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 80246f2:	9005      	str	r0, [sp, #20]
 80246f4:	f503 7080 	add.w	r0, r3, #256	; 0x100
 80246f8:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 80246fc:	0a1b      	lsrs	r3, r3, #8
 80246fe:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 8024702:	9306      	str	r3, [sp, #24]
 8024704:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 8024708:	fb0b f303 	mul.w	r3, fp, r3
 802470c:	0a1d      	lsrs	r5, r3, #8
 802470e:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8024712:	ea4f 6817 	mov.w	r8, r7, lsr #24
 8024716:	fb0b f606 	mul.w	r6, fp, r6
 802471a:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 802471e:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 8024722:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8024726:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 802472a:	fb08 f707 	mul.w	r7, r8, r7
 802472e:	441d      	add	r5, r3
 8024730:	f506 7380 	add.w	r3, r6, #256	; 0x100
 8024734:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8024738:	f507 7380 	add.w	r3, r7, #256	; 0x100
 802473c:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 8024740:	fb08 fc0c 	mul.w	ip, r8, ip
 8024744:	0a1b      	lsrs	r3, r3, #8
 8024746:	9307      	str	r3, [sp, #28]
 8024748:	ea4f 201c 	mov.w	r0, ip, lsr #8
 802474c:	0e0b      	lsrs	r3, r1, #24
 802474e:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 8024752:	435f      	muls	r7, r3
 8024754:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8024758:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 802475c:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 8024760:	4460      	add	r0, ip
 8024762:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024766:	b2a4      	uxth	r4, r4
 8024768:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802476c:	0a2d      	lsrs	r5, r5, #8
 802476e:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8024772:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024776:	fa1f fe8e 	uxth.w	lr, lr
 802477a:	4359      	muls	r1, r3
 802477c:	1b12      	subs	r2, r2, r4
 802477e:	9b05      	ldr	r3, [sp, #20]
 8024780:	44bc      	add	ip, r7
 8024782:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8024786:	b292      	uxth	r2, r2
 8024788:	fb05 f50e 	mul.w	r5, r5, lr
 802478c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024790:	fb03 5502 	mla	r5, r3, r2, r5
 8024794:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024798:	9b06      	ldr	r3, [sp, #24]
 802479a:	f501 7780 	add.w	r7, r1, #256	; 0x100
 802479e:	0a36      	lsrs	r6, r6, #8
 80247a0:	0a00      	lsrs	r0, r0, #8
 80247a2:	fb0c 5509 	mla	r5, ip, r9, r5
 80247a6:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 80247aa:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 80247ae:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80247b2:	fb00 5504 	mla	r5, r0, r4, r5
 80247b6:	fb0e f606 	mul.w	r6, lr, r6
 80247ba:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 80247be:	0a09      	lsrs	r1, r1, #8
 80247c0:	9b07      	ldr	r3, [sp, #28]
 80247c2:	fb02 6000 	mla	r0, r2, r0, r6
 80247c6:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80247ca:	fb09 0001 	mla	r0, r9, r1, r0
 80247ce:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80247d2:	fb0e fe0b 	mul.w	lr, lr, fp
 80247d6:	fb04 0003 	mla	r0, r4, r3, r0
 80247da:	fb02 e20a 	mla	r2, r2, sl, lr
 80247de:	9b00      	ldr	r3, [sp, #0]
 80247e0:	fb04 2408 	mla	r4, r4, r8, r2
 80247e4:	fb09 4903 	mla	r9, r9, r3, r4
 80247e8:	ea6f 2929 	mvn.w	r9, r9, asr #8
 80247ec:	9b02      	ldr	r3, [sp, #8]
 80247ee:	9a04      	ldr	r2, [sp, #16]
 80247f0:	fa5f f989 	uxtb.w	r9, r9
 80247f4:	fb03 f109 	mul.w	r1, r3, r9
 80247f8:	9b03      	ldr	r3, [sp, #12]
 80247fa:	0a2d      	lsrs	r5, r5, #8
 80247fc:	0a00      	lsrs	r0, r0, #8
 80247fe:	fb03 f309 	mul.w	r3, r3, r9
 8024802:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8024806:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 802480a:	4305      	orrs	r5, r0
 802480c:	fb02 f909 	mul.w	r9, r2, r9
 8024810:	1c58      	adds	r0, r3, #1
 8024812:	1c4a      	adds	r2, r1, #1
 8024814:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8024818:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 802481c:	0a2b      	lsrs	r3, r5, #8
 802481e:	0c2a      	lsrs	r2, r5, #16
 8024820:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8024824:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8024828:	00db      	lsls	r3, r3, #3
 802482a:	0212      	lsls	r2, r2, #8
 802482c:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8024830:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024834:	4313      	orrs	r3, r2
 8024836:	f109 0201 	add.w	r2, r9, #1
 802483a:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 802483e:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 8024842:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8024846:	431d      	orrs	r5, r3
 8024848:	9b01      	ldr	r3, [sp, #4]
 802484a:	801d      	strh	r5, [r3, #0]
 802484c:	b009      	add	sp, #36	; 0x24
 802484e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024852:	2000      	movs	r0, #0
 8024854:	e701      	b.n	802465a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 8024856:	2600      	movs	r6, #0
 8024858:	4630      	mov	r0, r6
 802485a:	e70b      	b.n	8024674 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 802485c:	2600      	movs	r6, #0
 802485e:	e709      	b.n	8024674 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8024860:	462e      	mov	r6, r5
 8024862:	e707      	b.n	8024674 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8024864:	2700      	movs	r7, #0
 8024866:	e71a      	b.n	802469e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 8024868:	2100      	movs	r1, #0
 802486a:	460f      	mov	r7, r1
 802486c:	e723      	b.n	80246b6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 802486e:	4621      	mov	r1, r4
 8024870:	4627      	mov	r7, r4
 8024872:	e720      	b.n	80246b6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8024874:	2100      	movs	r1, #0
 8024876:	e71e      	b.n	80246b6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8024878:	4629      	mov	r1, r5
 802487a:	e71c      	b.n	80246b6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

0802487c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802487c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024880:	b09b      	sub	sp, #108	; 0x6c
 8024882:	9218      	str	r2, [sp, #96]	; 0x60
 8024884:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8024886:	9116      	str	r1, [sp, #88]	; 0x58
 8024888:	9307      	str	r3, [sp, #28]
 802488a:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 802488e:	9019      	str	r0, [sp, #100]	; 0x64
 8024890:	6850      	ldr	r0, [r2, #4]
 8024892:	6812      	ldr	r2, [r2, #0]
 8024894:	9d26      	ldr	r5, [sp, #152]	; 0x98
 8024896:	fb00 1303 	mla	r3, r0, r3, r1
 802489a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802489e:	930a      	str	r3, [sp, #40]	; 0x28
 80248a0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80248a2:	681b      	ldr	r3, [r3, #0]
 80248a4:	930f      	str	r3, [sp, #60]	; 0x3c
 80248a6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80248a8:	685e      	ldr	r6, [r3, #4]
 80248aa:	3604      	adds	r6, #4
 80248ac:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80248ae:	2b00      	cmp	r3, #0
 80248b0:	dc03      	bgt.n	80248ba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80248b2:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80248b4:	2b00      	cmp	r3, #0
 80248b6:	f340 8373 	ble.w	8024fa0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 80248ba:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80248bc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80248c0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80248c4:	1e48      	subs	r0, r1, #1
 80248c6:	1e57      	subs	r7, r2, #1
 80248c8:	9b07      	ldr	r3, [sp, #28]
 80248ca:	2b00      	cmp	r3, #0
 80248cc:	f340 8190 	ble.w	8024bf0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 80248d0:	9c25      	ldr	r4, [sp, #148]	; 0x94
 80248d2:	ea5f 4c24 	movs.w	ip, r4, asr #16
 80248d6:	ea4f 4325 	mov.w	r3, r5, asr #16
 80248da:	d406      	bmi.n	80248ea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80248dc:	4584      	cmp	ip, r0
 80248de:	da04      	bge.n	80248ea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80248e0:	2b00      	cmp	r3, #0
 80248e2:	db02      	blt.n	80248ea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80248e4:	42bb      	cmp	r3, r7
 80248e6:	f2c0 8184 	blt.w	8024bf2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 80248ea:	f11c 0c01 	adds.w	ip, ip, #1
 80248ee:	f100 8172 	bmi.w	8024bd6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80248f2:	4561      	cmp	r1, ip
 80248f4:	f2c0 816f 	blt.w	8024bd6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80248f8:	3301      	adds	r3, #1
 80248fa:	f100 816c 	bmi.w	8024bd6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80248fe:	429a      	cmp	r2, r3
 8024900:	f2c0 8169 	blt.w	8024bd6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024904:	9b07      	ldr	r3, [sp, #28]
 8024906:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8024908:	9317      	str	r3, [sp, #92]	; 0x5c
 802490a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 802490c:	2b00      	cmp	r3, #0
 802490e:	f340 818e 	ble.w	8024c2e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 8024912:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8024914:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8024918:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802491a:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 802491e:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8024920:	141b      	asrs	r3, r3, #16
 8024922:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8024926:	f3c5 3003 	ubfx	r0, r5, #12, #4
 802492a:	f100 81d1 	bmi.w	8024cd0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 802492e:	f101 38ff 	add.w	r8, r1, #4294967295
 8024932:	4543      	cmp	r3, r8
 8024934:	f280 81cc 	bge.w	8024cd0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8024938:	f1bc 0f00 	cmp.w	ip, #0
 802493c:	f2c0 81c8 	blt.w	8024cd0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8024940:	f10e 38ff 	add.w	r8, lr, #4294967295
 8024944:	45c4      	cmp	ip, r8
 8024946:	f280 81c3 	bge.w	8024cd0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 802494a:	b209      	sxth	r1, r1
 802494c:	fb0c 3301 	mla	r3, ip, r1, r3
 8024950:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8024952:	eb04 0803 	add.w	r8, r4, r3
 8024956:	5ce3      	ldrb	r3, [r4, r3]
 8024958:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 802495c:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8024960:	2a00      	cmp	r2, #0
 8024962:	f000 81aa 	beq.w	8024cba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 8024966:	f898 c001 	ldrb.w	ip, [r8, #1]
 802496a:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 802496e:	940b      	str	r4, [sp, #44]	; 0x2c
 8024970:	0e24      	lsrs	r4, r4, #24
 8024972:	9412      	str	r4, [sp, #72]	; 0x48
 8024974:	b178      	cbz	r0, 8024996 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8024976:	eb08 0c01 	add.w	ip, r8, r1
 802497a:	f818 1001 	ldrb.w	r1, [r8, r1]
 802497e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8024982:	9108      	str	r1, [sp, #32]
 8024984:	0e09      	lsrs	r1, r1, #24
 8024986:	9110      	str	r1, [sp, #64]	; 0x40
 8024988:	f89c 1001 	ldrb.w	r1, [ip, #1]
 802498c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8024990:	910c      	str	r1, [sp, #48]	; 0x30
 8024992:	0e09      	lsrs	r1, r1, #24
 8024994:	9113      	str	r1, [sp, #76]	; 0x4c
 8024996:	b292      	uxth	r2, r2
 8024998:	b280      	uxth	r0, r0
 802499a:	fb02 f900 	mul.w	r9, r2, r0
 802499e:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 80249a2:	0112      	lsls	r2, r2, #4
 80249a4:	eba2 0809 	sub.w	r8, r2, r9
 80249a8:	b280      	uxth	r0, r0
 80249aa:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80249ae:	9912      	ldr	r1, [sp, #72]	; 0x48
 80249b0:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80249b2:	fa1f f888 	uxth.w	r8, r8
 80249b6:	1a12      	subs	r2, r2, r0
 80249b8:	b292      	uxth	r2, r2
 80249ba:	fb08 f101 	mul.w	r1, r8, r1
 80249be:	fb02 110e 	mla	r1, r2, lr, r1
 80249c2:	fb00 1104 	mla	r1, r0, r4, r1
 80249c6:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80249c8:	fb09 1104 	mla	r1, r9, r4, r1
 80249cc:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80249d0:	2900      	cmp	r1, #0
 80249d2:	f000 80f5 	beq.w	8024bc0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 80249d6:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80249da:	d01b      	beq.n	8024a14 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80249dc:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80249e0:	fb0e fa0a 	mul.w	sl, lr, sl
 80249e4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80249e8:	fb0e fe03 	mul.w	lr, lr, r3
 80249ec:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80249f0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80249f4:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80249f8:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 80249fc:	4453      	add	r3, sl
 80249fe:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8024a02:	0a1b      	lsrs	r3, r3, #8
 8024a04:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024a08:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024a0c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8024a10:	ea43 030c 	orr.w	r3, r3, ip
 8024a14:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8024a16:	2cff      	cmp	r4, #255	; 0xff
 8024a18:	d021      	beq.n	8024a5e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 8024a1a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8024a1c:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8024a20:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8024a22:	fb04 fb0b 	mul.w	fp, r4, fp
 8024a26:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8024a28:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8024a2c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8024a2e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024a32:	fb04 fa0a 	mul.w	sl, r4, sl
 8024a36:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024a3a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8024a3e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024a42:	44de      	add	lr, fp
 8024a44:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8024a48:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024a4c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024a50:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024a54:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024a58:	ea4e 040a 	orr.w	r4, lr, sl
 8024a5c:	940b      	str	r4, [sp, #44]	; 0x2c
 8024a5e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8024a60:	2cff      	cmp	r4, #255	; 0xff
 8024a62:	d021      	beq.n	8024aa8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 8024a64:	9c08      	ldr	r4, [sp, #32]
 8024a66:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8024a6a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8024a6c:	fb04 fb0b 	mul.w	fp, r4, fp
 8024a70:	9c08      	ldr	r4, [sp, #32]
 8024a72:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8024a76:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8024a78:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024a7c:	fb04 fa0a 	mul.w	sl, r4, sl
 8024a80:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024a84:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8024a88:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024a8c:	44de      	add	lr, fp
 8024a8e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8024a92:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024a96:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024a9a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024a9e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024aa2:	ea4e 040a 	orr.w	r4, lr, sl
 8024aa6:	9408      	str	r4, [sp, #32]
 8024aa8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8024aaa:	2cff      	cmp	r4, #255	; 0xff
 8024aac:	d021      	beq.n	8024af2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8024aae:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8024ab0:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8024ab4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8024ab6:	fb04 fb0b 	mul.w	fp, r4, fp
 8024aba:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8024abc:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8024ac0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8024ac2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024ac6:	fb04 fa0a 	mul.w	sl, r4, sl
 8024aca:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024ace:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8024ad2:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024ad6:	44de      	add	lr, fp
 8024ad8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8024adc:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024ae0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024ae4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024ae8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024aec:	ea4e 040a 	orr.w	r4, lr, sl
 8024af0:	940c      	str	r4, [sp, #48]	; 0x30
 8024af2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8024af4:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8024af8:	9c08      	ldr	r4, [sp, #32]
 8024afa:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8024afe:	fb08 fc0c 	mul.w	ip, r8, ip
 8024b02:	fb02 cc0e 	mla	ip, r2, lr, ip
 8024b06:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8024b0a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8024b0c:	fb00 cc0e 	mla	ip, r0, lr, ip
 8024b10:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8024b14:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8024b16:	fb09 cc0e 	mla	ip, r9, lr, ip
 8024b1a:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8024b1e:	fb08 f80e 	mul.w	r8, r8, lr
 8024b22:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024b26:	fb02 8303 	mla	r3, r2, r3, r8
 8024b2a:	9a08      	ldr	r2, [sp, #32]
 8024b2c:	f8b7 8000 	ldrh.w	r8, [r7]
 8024b30:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8024b34:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8024b36:	fb00 330a 	mla	r3, r0, sl, r3
 8024b3a:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 8024b3e:	fb09 3900 	mla	r9, r9, r0, r3
 8024b42:	43c9      	mvns	r1, r1
 8024b44:	ea4f 2228 	mov.w	r2, r8, asr #8
 8024b48:	fa5f fe81 	uxtb.w	lr, r1
 8024b4c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024b50:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8024b54:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8024b58:	fb02 f20e 	mul.w	r2, r2, lr
 8024b5c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024b60:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8024b64:	ea4c 0c09 	orr.w	ip, ip, r9
 8024b68:	1c53      	adds	r3, r2, #1
 8024b6a:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 8024b6e:	ea4f 00e8 	mov.w	r0, r8, asr #3
 8024b72:	ea4f 431c 	mov.w	r3, ip, lsr #16
 8024b76:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024b7a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8024b7e:	4a63      	ldr	r2, [pc, #396]	; (8024d0c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 8024b80:	fb00 f00e 	mul.w	r0, r0, lr
 8024b84:	b2db      	uxtb	r3, r3
 8024b86:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 8024b8a:	1c43      	adds	r3, r0, #1
 8024b8c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8024b90:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8024b94:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8024b98:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8024b9c:	b2c9      	uxtb	r1, r1
 8024b9e:	00db      	lsls	r3, r3, #3
 8024ba0:	fb01 f10e 	mul.w	r1, r1, lr
 8024ba4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024ba8:	4313      	orrs	r3, r2
 8024baa:	1c4a      	adds	r2, r1, #1
 8024bac:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8024bb0:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8024bb4:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8024bb8:	ea4c 0c03 	orr.w	ip, ip, r3
 8024bbc:	f8a7 c000 	strh.w	ip, [r7]
 8024bc0:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8024bc2:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8024bc4:	441a      	add	r2, r3
 8024bc6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024bc8:	9225      	str	r2, [sp, #148]	; 0x94
 8024bca:	441d      	add	r5, r3
 8024bcc:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8024bce:	3b01      	subs	r3, #1
 8024bd0:	3702      	adds	r7, #2
 8024bd2:	9317      	str	r3, [sp, #92]	; 0x5c
 8024bd4:	e699      	b.n	802490a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8024bd6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8024bd8:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8024bda:	441c      	add	r4, r3
 8024bdc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024bde:	9425      	str	r4, [sp, #148]	; 0x94
 8024be0:	441d      	add	r5, r3
 8024be2:	9b07      	ldr	r3, [sp, #28]
 8024be4:	3b01      	subs	r3, #1
 8024be6:	9307      	str	r3, [sp, #28]
 8024be8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8024bea:	3302      	adds	r3, #2
 8024bec:	930a      	str	r3, [sp, #40]	; 0x28
 8024bee:	e66b      	b.n	80248c8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8024bf0:	d024      	beq.n	8024c3c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 8024bf2:	9b07      	ldr	r3, [sp, #28]
 8024bf4:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8024bf6:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8024bf8:	3b01      	subs	r3, #1
 8024bfa:	fb00 4003 	mla	r0, r0, r3, r4
 8024bfe:	1400      	asrs	r0, r0, #16
 8024c00:	f53f ae80 	bmi.w	8024904 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8024c04:	3901      	subs	r1, #1
 8024c06:	4288      	cmp	r0, r1
 8024c08:	f6bf ae7c 	bge.w	8024904 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8024c0c:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8024c0e:	fb01 5303 	mla	r3, r1, r3, r5
 8024c12:	141b      	asrs	r3, r3, #16
 8024c14:	f53f ae76 	bmi.w	8024904 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8024c18:	3a01      	subs	r2, #1
 8024c1a:	4293      	cmp	r3, r2
 8024c1c:	f6bf ae72 	bge.w	8024904 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8024c20:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8024c24:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8024c28:	f1bb 0f00 	cmp.w	fp, #0
 8024c2c:	dc70      	bgt.n	8024d10 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 8024c2e:	9b07      	ldr	r3, [sp, #28]
 8024c30:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8024c34:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8024c36:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8024c3a:	930a      	str	r3, [sp, #40]	; 0x28
 8024c3c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8024c3e:	2b00      	cmp	r3, #0
 8024c40:	f340 81ae 	ble.w	8024fa0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8024c44:	ee30 0a04 	vadd.f32	s0, s0, s8
 8024c48:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8024c4c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8024c50:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024c52:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8024c56:	ee31 1a05 	vadd.f32	s2, s2, s10
 8024c5a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8024c5e:	eef0 6a62 	vmov.f32	s13, s5
 8024c62:	ee61 7a27 	vmul.f32	s15, s2, s15
 8024c66:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024c6a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8024c6e:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 8024c72:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8024c76:	eef0 6a43 	vmov.f32	s13, s6
 8024c7a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8024c7e:	ee12 2a90 	vmov	r2, s5
 8024c82:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8024c86:	fb92 f3f3 	sdiv	r3, r2, r3
 8024c8a:	ee13 2a10 	vmov	r2, s6
 8024c8e:	9327      	str	r3, [sp, #156]	; 0x9c
 8024c90:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024c92:	fb92 f3f3 	sdiv	r3, r2, r3
 8024c96:	9328      	str	r3, [sp, #160]	; 0xa0
 8024c98:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8024c9a:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8024c9c:	3b01      	subs	r3, #1
 8024c9e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024ca2:	9316      	str	r3, [sp, #88]	; 0x58
 8024ca4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024ca6:	bf08      	it	eq
 8024ca8:	4613      	moveq	r3, r2
 8024caa:	ee16 5a90 	vmov	r5, s13
 8024cae:	9307      	str	r3, [sp, #28]
 8024cb0:	eeb0 3a67 	vmov.f32	s6, s15
 8024cb4:	eef0 2a47 	vmov.f32	s5, s14
 8024cb8:	e5f8      	b.n	80248ac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8024cba:	2800      	cmp	r0, #0
 8024cbc:	f43f ae6b 	beq.w	8024996 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8024cc0:	f818 1001 	ldrb.w	r1, [r8, r1]
 8024cc4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8024cc8:	9108      	str	r1, [sp, #32]
 8024cca:	0e09      	lsrs	r1, r1, #24
 8024ccc:	9110      	str	r1, [sp, #64]	; 0x40
 8024cce:	e662      	b.n	8024996 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8024cd0:	f113 0801 	adds.w	r8, r3, #1
 8024cd4:	f53f af74 	bmi.w	8024bc0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8024cd8:	4541      	cmp	r1, r8
 8024cda:	f6ff af71 	blt.w	8024bc0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8024cde:	f11c 0801 	adds.w	r8, ip, #1
 8024ce2:	f53f af6d 	bmi.w	8024bc0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8024ce6:	45c6      	cmp	lr, r8
 8024ce8:	f6ff af6a 	blt.w	8024bc0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8024cec:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 8024cf0:	b209      	sxth	r1, r1
 8024cf2:	fa0f f38e 	sxth.w	r3, lr
 8024cf6:	e9cd 2004 	strd	r2, r0, [sp, #16]
 8024cfa:	9301      	str	r3, [sp, #4]
 8024cfc:	9100      	str	r1, [sp, #0]
 8024cfe:	4633      	mov	r3, r6
 8024d00:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8024d02:	9819      	ldr	r0, [sp, #100]	; 0x64
 8024d04:	4639      	mov	r1, r7
 8024d06:	f7ff fc7a 	bl	80245fe <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 8024d0a:	e759      	b.n	8024bc0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8024d0c:	fffff800 	.word	0xfffff800
 8024d10:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8024d12:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8024d14:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8024d18:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024d1a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024d1e:	1427      	asrs	r7, r4, #16
 8024d20:	142b      	asrs	r3, r5, #16
 8024d22:	fb01 7303 	mla	r3, r1, r3, r7
 8024d26:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8024d28:	18e7      	adds	r7, r4, r3
 8024d2a:	5ce3      	ldrb	r3, [r4, r3]
 8024d2c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8024d30:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8024d34:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8024d38:	2a00      	cmp	r2, #0
 8024d3a:	f000 8127 	beq.w	8024f8c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8024d3e:	f897 e001 	ldrb.w	lr, [r7, #1]
 8024d42:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8024d46:	940d      	str	r4, [sp, #52]	; 0x34
 8024d48:	0e24      	lsrs	r4, r4, #24
 8024d4a:	9414      	str	r4, [sp, #80]	; 0x50
 8024d4c:	b170      	cbz	r0, 8024d6c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8024d4e:	eb07 0e01 	add.w	lr, r7, r1
 8024d52:	5c79      	ldrb	r1, [r7, r1]
 8024d54:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8024d58:	9109      	str	r1, [sp, #36]	; 0x24
 8024d5a:	0e09      	lsrs	r1, r1, #24
 8024d5c:	9111      	str	r1, [sp, #68]	; 0x44
 8024d5e:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8024d62:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8024d66:	910e      	str	r1, [sp, #56]	; 0x38
 8024d68:	0e09      	lsrs	r1, r1, #24
 8024d6a:	9115      	str	r1, [sp, #84]	; 0x54
 8024d6c:	b292      	uxth	r2, r2
 8024d6e:	b280      	uxth	r0, r0
 8024d70:	fb02 f800 	mul.w	r8, r2, r0
 8024d74:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8024d78:	0112      	lsls	r2, r2, #4
 8024d7a:	eba2 0e08 	sub.w	lr, r2, r8
 8024d7e:	b280      	uxth	r0, r0
 8024d80:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8024d84:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8024d86:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8024d88:	fa1f fe8e 	uxth.w	lr, lr
 8024d8c:	1a09      	subs	r1, r1, r0
 8024d8e:	b289      	uxth	r1, r1
 8024d90:	fb0e f202 	mul.w	r2, lr, r2
 8024d94:	fb01 220c 	mla	r2, r1, ip, r2
 8024d98:	fb00 2204 	mla	r2, r0, r4, r2
 8024d9c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8024d9e:	fb08 2204 	mla	r2, r8, r4, r2
 8024da2:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8024da6:	2a00      	cmp	r2, #0
 8024da8:	f000 80e5 	beq.w	8024f76 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 8024dac:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8024db0:	d019      	beq.n	8024de6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 8024db2:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8024db6:	fb0c fa0a 	mul.w	sl, ip, sl
 8024dba:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024dbe:	fb0c fc03 	mul.w	ip, ip, r3
 8024dc2:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8024dc6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024dca:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8024dce:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8024dd2:	4453      	add	r3, sl
 8024dd4:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8024dd8:	0a1b      	lsrs	r3, r3, #8
 8024dda:	0a3f      	lsrs	r7, r7, #8
 8024ddc:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024de0:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8024de4:	433b      	orrs	r3, r7
 8024de6:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8024de8:	2cff      	cmp	r4, #255	; 0xff
 8024dea:	d020      	beq.n	8024e2e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 8024dec:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8024dee:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8024df2:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8024df4:	4367      	muls	r7, r4
 8024df6:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8024df8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8024dfc:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8024dfe:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024e02:	fb04 fa0a 	mul.w	sl, r4, sl
 8024e06:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024e0a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024e0e:	44bc      	add	ip, r7
 8024e10:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024e14:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024e18:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024e1c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024e20:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024e24:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024e28:	ea4c 040a 	orr.w	r4, ip, sl
 8024e2c:	940d      	str	r4, [sp, #52]	; 0x34
 8024e2e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8024e30:	2cff      	cmp	r4, #255	; 0xff
 8024e32:	d020      	beq.n	8024e76 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 8024e34:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8024e36:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8024e3a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8024e3c:	4367      	muls	r7, r4
 8024e3e:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8024e40:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8024e44:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8024e46:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024e4a:	fb04 fa0a 	mul.w	sl, r4, sl
 8024e4e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024e52:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024e56:	44bc      	add	ip, r7
 8024e58:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024e5c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024e60:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024e64:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024e68:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024e6c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024e70:	ea4c 040a 	orr.w	r4, ip, sl
 8024e74:	9409      	str	r4, [sp, #36]	; 0x24
 8024e76:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8024e78:	2cff      	cmp	r4, #255	; 0xff
 8024e7a:	d020      	beq.n	8024ebe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 8024e7c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8024e7e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8024e82:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8024e84:	4367      	muls	r7, r4
 8024e86:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8024e88:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8024e8c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8024e8e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024e92:	fb04 fa0a 	mul.w	sl, r4, sl
 8024e96:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024e9a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024e9e:	44bc      	add	ip, r7
 8024ea0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024ea4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024ea8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024eac:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024eb0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024eb4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024eb8:	ea4c 040a 	orr.w	r4, ip, sl
 8024ebc:	940e      	str	r4, [sp, #56]	; 0x38
 8024ebe:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8024ec0:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8024ec4:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8024ec6:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8024eca:	fb0e f707 	mul.w	r7, lr, r7
 8024ece:	fb01 770c 	mla	r7, r1, ip, r7
 8024ed2:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8024ed6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8024ed8:	fb00 770c 	mla	r7, r0, ip, r7
 8024edc:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8024ee0:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8024ee2:	fb08 770c 	mla	r7, r8, ip, r7
 8024ee6:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8024eea:	fb0e fe0c 	mul.w	lr, lr, ip
 8024eee:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024ef2:	fb01 e303 	mla	r3, r1, r3, lr
 8024ef6:	9909      	ldr	r1, [sp, #36]	; 0x24
 8024ef8:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8024efc:	990e      	ldr	r1, [sp, #56]	; 0x38
 8024efe:	fb00 330a 	mla	r3, r0, sl, r3
 8024f02:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8024f06:	fb08 3c0c 	mla	ip, r8, ip, r3
 8024f0a:	f8b9 3000 	ldrh.w	r3, [r9]
 8024f0e:	43d2      	mvns	r2, r2
 8024f10:	1218      	asrs	r0, r3, #8
 8024f12:	b2d2      	uxtb	r2, r2
 8024f14:	10d9      	asrs	r1, r3, #3
 8024f16:	0a3f      	lsrs	r7, r7, #8
 8024f18:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024f1c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8024f20:	00db      	lsls	r3, r3, #3
 8024f22:	4350      	muls	r0, r2
 8024f24:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8024f28:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8024f2c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8024f30:	b2db      	uxtb	r3, r3
 8024f32:	ea47 070c 	orr.w	r7, r7, ip
 8024f36:	4351      	muls	r1, r2
 8024f38:	4353      	muls	r3, r2
 8024f3a:	1c42      	adds	r2, r0, #1
 8024f3c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8024f40:	0c3a      	lsrs	r2, r7, #16
 8024f42:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8024f46:	4a18      	ldr	r2, [pc, #96]	; (8024fa8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 8024f48:	b2c0      	uxtb	r0, r0
 8024f4a:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 8024f4e:	1c4a      	adds	r2, r1, #1
 8024f50:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8024f54:	0a3a      	lsrs	r2, r7, #8
 8024f56:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8024f5a:	00c9      	lsls	r1, r1, #3
 8024f5c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8024f60:	4301      	orrs	r1, r0
 8024f62:	1c58      	adds	r0, r3, #1
 8024f64:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8024f68:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8024f6c:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 8024f70:	4308      	orrs	r0, r1
 8024f72:	f8a9 0000 	strh.w	r0, [r9]
 8024f76:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8024f78:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8024f7a:	441a      	add	r2, r3
 8024f7c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024f7e:	9225      	str	r2, [sp, #148]	; 0x94
 8024f80:	f109 0902 	add.w	r9, r9, #2
 8024f84:	441d      	add	r5, r3
 8024f86:	f10b 3bff 	add.w	fp, fp, #4294967295
 8024f8a:	e64d      	b.n	8024c28 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 8024f8c:	2800      	cmp	r0, #0
 8024f8e:	f43f aeed 	beq.w	8024d6c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8024f92:	5c79      	ldrb	r1, [r7, r1]
 8024f94:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8024f98:	9109      	str	r1, [sp, #36]	; 0x24
 8024f9a:	0e09      	lsrs	r1, r1, #24
 8024f9c:	9111      	str	r1, [sp, #68]	; 0x44
 8024f9e:	e6e5      	b.n	8024d6c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8024fa0:	b01b      	add	sp, #108	; 0x6c
 8024fa2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024fa6:	bf00      	nop
 8024fa8:	fffff800 	.word	0xfffff800

08024fac <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 8024fac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024fb0:	b085      	sub	sp, #20
 8024fb2:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 8024fb6:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8024fba:	9103      	str	r1, [sp, #12]
 8024fbc:	fb00 7406 	mla	r4, r0, r6, r7
 8024fc0:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 8024fc4:	2800      	cmp	r0, #0
 8024fc6:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 8024fca:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 8024fce:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8024fd2:	9501      	str	r5, [sp, #4]
 8024fd4:	eb03 0904 	add.w	r9, r3, r4
 8024fd8:	f2c0 8150 	blt.w	802527c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8024fdc:	4583      	cmp	fp, r0
 8024fde:	f340 814d 	ble.w	802527c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8024fe2:	2f00      	cmp	r7, #0
 8024fe4:	f2c0 8146 	blt.w	8025274 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8024fe8:	42be      	cmp	r6, r7
 8024fea:	f340 8143 	ble.w	8025274 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8024fee:	f813 c004 	ldrb.w	ip, [r3, r4]
 8024ff2:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 8024ff6:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8024ffa:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 8024ffe:	4355      	muls	r5, r2
 8025000:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8025004:	f64f 041f 	movw	r4, #63519	; 0xf81f
 8025008:	fb0c f203 	mul.w	r2, ip, r3
 802500c:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8025010:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8025014:	441d      	add	r5, r3
 8025016:	f102 0320 	add.w	r3, r2, #32
 802501a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802501e:	0a1b      	lsrs	r3, r3, #8
 8025020:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8025024:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8025028:	431c      	orrs	r4, r3
 802502a:	1c7b      	adds	r3, r7, #1
 802502c:	f100 812b 	bmi.w	8025286 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8025030:	429e      	cmp	r6, r3
 8025032:	f340 8128 	ble.w	8025286 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8025036:	2900      	cmp	r1, #0
 8025038:	f000 8128 	beq.w	802528c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 802503c:	9a01      	ldr	r2, [sp, #4]
 802503e:	f899 3001 	ldrb.w	r3, [r9, #1]
 8025042:	8855      	ldrh	r5, [r2, #2]
 8025044:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8025048:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 802504c:	fb08 f802 	mul.w	r8, r8, r2
 8025050:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8025054:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8025058:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 802505c:	435d      	muls	r5, r3
 802505e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8025062:	44d0      	add	r8, sl
 8025064:	f105 0a20 	add.w	sl, r5, #32
 8025068:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 802506c:	0a2d      	lsrs	r5, r5, #8
 802506e:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8025072:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8025076:	432a      	orrs	r2, r5
 8025078:	3001      	adds	r0, #1
 802507a:	f100 810d 	bmi.w	8025298 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 802507e:	4583      	cmp	fp, r0
 8025080:	f340 810a 	ble.w	8025298 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 8025084:	f1be 0f00 	cmp.w	lr, #0
 8025088:	f000 810b 	beq.w	80252a2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 802508c:	2f00      	cmp	r7, #0
 802508e:	f2c0 8100 	blt.w	8025292 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8025092:	42be      	cmp	r6, r7
 8025094:	f340 80fd 	ble.w	8025292 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8025098:	9801      	ldr	r0, [sp, #4]
 802509a:	f819 5006 	ldrb.w	r5, [r9, r6]
 802509e:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 80250a2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80250a6:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 80250aa:	fb0a fa00 	mul.w	sl, sl, r0
 80250ae:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 80250b2:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80250b6:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 80250ba:	fb05 f808 	mul.w	r8, r5, r8
 80250be:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 80250c2:	4482      	add	sl, r0
 80250c4:	f108 0020 	add.w	r0, r8, #32
 80250c8:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 80250cc:	0a00      	lsrs	r0, r0, #8
 80250ce:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 80250d2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80250d6:	ea4b 0b00 	orr.w	fp, fp, r0
 80250da:	3701      	adds	r7, #1
 80250dc:	f100 80e6 	bmi.w	80252ac <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 80250e0:	42be      	cmp	r6, r7
 80250e2:	f340 80e3 	ble.w	80252ac <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 80250e6:	2900      	cmp	r1, #0
 80250e8:	f000 80e3 	beq.w	80252b2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 80250ec:	3601      	adds	r6, #1
 80250ee:	9801      	ldr	r0, [sp, #4]
 80250f0:	f819 7006 	ldrb.w	r7, [r9, r6]
 80250f4:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 80250f8:	ea4f 09e7 	mov.w	r9, r7, asr #3
 80250fc:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 8025100:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025104:	fb09 f906 	mul.w	r9, r9, r6
 8025108:	fb07 f800 	mul.w	r8, r7, r0
 802510c:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8025110:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8025114:	f609 0901 	addw	r9, r9, #2049	; 0x801
 8025118:	44d1      	add	r9, sl
 802511a:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 802511e:	f108 0020 	add.w	r0, r8, #32
 8025122:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8025126:	0a00      	lsrs	r0, r0, #8
 8025128:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802512c:	4330      	orrs	r0, r6
 802512e:	b28e      	uxth	r6, r1
 8025130:	fa1f f98e 	uxth.w	r9, lr
 8025134:	fb06 f809 	mul.w	r8, r6, r9
 8025138:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 802513c:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8025140:	0136      	lsls	r6, r6, #4
 8025142:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025146:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 802514a:	9601      	str	r6, [sp, #4]
 802514c:	ea4a 0404 	orr.w	r4, sl, r4
 8025150:	fa1f f689 	uxth.w	r6, r9
 8025154:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8025158:	fb11 f90e 	smulbb	r9, r1, lr
 802515c:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8025160:	9602      	str	r6, [sp, #8]
 8025162:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025166:	4626      	mov	r6, r4
 8025168:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802516c:	f1ce 0410 	rsb	r4, lr, #16
 8025170:	1a64      	subs	r4, r4, r1
 8025172:	ea4a 0202 	orr.w	r2, sl, r2
 8025176:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 802517a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 802517e:	434a      	muls	r2, r1
 8025180:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8025184:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025188:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802518c:	fb04 2406 	mla	r4, r4, r6, r2
 8025190:	ea4a 0000 	orr.w	r0, sl, r0
 8025194:	fb09 4200 	mla	r2, r9, r0, r4
 8025198:	ea4f 440b 	mov.w	r4, fp, lsl #16
 802519c:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80251a0:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 80251a4:	ea44 0b0b 	orr.w	fp, r4, fp
 80251a8:	9c01      	ldr	r4, [sp, #4]
 80251aa:	9e02      	ldr	r6, [sp, #8]
 80251ac:	9903      	ldr	r1, [sp, #12]
 80251ae:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 80251b2:	1ba4      	subs	r4, r4, r6
 80251b4:	9e01      	ldr	r6, [sp, #4]
 80251b6:	8808      	ldrh	r0, [r1, #0]
 80251b8:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 80251bc:	eba6 0608 	sub.w	r6, r6, r8
 80251c0:	b2b6      	uxth	r6, r6
 80251c2:	b2a4      	uxth	r4, r4
 80251c4:	4373      	muls	r3, r6
 80251c6:	fb0c 3304 	mla	r3, ip, r4, r3
 80251ca:	9c02      	ldr	r4, [sp, #8]
 80251cc:	fb04 3505 	mla	r5, r4, r5, r3
 80251d0:	fb08 5707 	mla	r7, r8, r7, r5
 80251d4:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 80251d8:	b289      	uxth	r1, r1
 80251da:	fb0e 2e0b 	mla	lr, lr, fp, r2
 80251de:	f3c7 2707 	ubfx	r7, r7, #8, #8
 80251e2:	434f      	muls	r7, r1
 80251e4:	ea4f 525e 	mov.w	r2, lr, lsr #21
 80251e8:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80251ec:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80251f0:	1c7b      	adds	r3, r7, #1
 80251f2:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80251f6:	ea42 0e0e 	orr.w	lr, r2, lr
 80251fa:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 80251fe:	fa1f f28e 	uxth.w	r2, lr
 8025202:	1203      	asrs	r3, r0, #8
 8025204:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 8025208:	b2ff      	uxtb	r7, r7
 802520a:	1215      	asrs	r5, r2, #8
 802520c:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8025210:	fb13 f307 	smulbb	r3, r3, r7
 8025214:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8025218:	fb05 3501 	mla	r5, r5, r1, r3
 802521c:	10c3      	asrs	r3, r0, #3
 802521e:	10d4      	asrs	r4, r2, #3
 8025220:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8025224:	fb13 f307 	smulbb	r3, r3, r7
 8025228:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 802522c:	fb04 3401 	mla	r4, r4, r1, r3
 8025230:	00c3      	lsls	r3, r0, #3
 8025232:	00d2      	lsls	r2, r2, #3
 8025234:	b2db      	uxtb	r3, r3
 8025236:	fb13 f307 	smulbb	r3, r3, r7
 802523a:	b2d2      	uxtb	r2, r2
 802523c:	fb02 3101 	mla	r1, r2, r1, r3
 8025240:	b2ad      	uxth	r5, r5
 8025242:	b289      	uxth	r1, r1
 8025244:	b2a4      	uxth	r4, r4
 8025246:	1c6b      	adds	r3, r5, #1
 8025248:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802524c:	1c62      	adds	r2, r4, #1
 802524e:	1c4b      	adds	r3, r1, #1
 8025250:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8025254:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8025258:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 802525c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8025260:	0964      	lsrs	r4, r4, #5
 8025262:	432b      	orrs	r3, r5
 8025264:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8025268:	9a03      	ldr	r2, [sp, #12]
 802526a:	4323      	orrs	r3, r4
 802526c:	8013      	strh	r3, [r2, #0]
 802526e:	b005      	add	sp, #20
 8025270:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025274:	f04f 0c00 	mov.w	ip, #0
 8025278:	4664      	mov	r4, ip
 802527a:	e6d6      	b.n	802502a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 802527c:	2300      	movs	r3, #0
 802527e:	469c      	mov	ip, r3
 8025280:	461a      	mov	r2, r3
 8025282:	461c      	mov	r4, r3
 8025284:	e6f8      	b.n	8025078 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8025286:	2300      	movs	r3, #0
 8025288:	461a      	mov	r2, r3
 802528a:	e6f5      	b.n	8025078 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 802528c:	460b      	mov	r3, r1
 802528e:	460a      	mov	r2, r1
 8025290:	e6f2      	b.n	8025078 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8025292:	2500      	movs	r5, #0
 8025294:	46ab      	mov	fp, r5
 8025296:	e720      	b.n	80250da <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 8025298:	2700      	movs	r7, #0
 802529a:	463d      	mov	r5, r7
 802529c:	4638      	mov	r0, r7
 802529e:	46bb      	mov	fp, r7
 80252a0:	e745      	b.n	802512e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 80252a2:	4677      	mov	r7, lr
 80252a4:	4675      	mov	r5, lr
 80252a6:	4670      	mov	r0, lr
 80252a8:	46f3      	mov	fp, lr
 80252aa:	e740      	b.n	802512e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 80252ac:	2700      	movs	r7, #0
 80252ae:	4638      	mov	r0, r7
 80252b0:	e73d      	b.n	802512e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 80252b2:	460f      	mov	r7, r1
 80252b4:	4608      	mov	r0, r1
 80252b6:	e73a      	b.n	802512e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

080252b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80252b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80252bc:	b097      	sub	sp, #92	; 0x5c
 80252be:	9214      	str	r2, [sp, #80]	; 0x50
 80252c0:	9308      	str	r3, [sp, #32]
 80252c2:	9a25      	ldr	r2, [sp, #148]	; 0x94
 80252c4:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 80252c8:	9312      	str	r3, [sp, #72]	; 0x48
 80252ca:	9111      	str	r1, [sp, #68]	; 0x44
 80252cc:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 80252d0:	9015      	str	r0, [sp, #84]	; 0x54
 80252d2:	6850      	ldr	r0, [r2, #4]
 80252d4:	6812      	ldr	r2, [r2, #0]
 80252d6:	fb00 1303 	mla	r3, r0, r3, r1
 80252da:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80252de:	9309      	str	r3, [sp, #36]	; 0x24
 80252e0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80252e2:	681b      	ldr	r3, [r3, #0]
 80252e4:	930b      	str	r3, [sp, #44]	; 0x2c
 80252e6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80252e8:	685b      	ldr	r3, [r3, #4]
 80252ea:	930c      	str	r3, [sp, #48]	; 0x30
 80252ec:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80252f0:	930a      	str	r3, [sp, #40]	; 0x28
 80252f2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80252f4:	2b00      	cmp	r3, #0
 80252f6:	dc03      	bgt.n	8025300 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80252f8:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80252fa:	2b00      	cmp	r3, #0
 80252fc:	f340 83cb 	ble.w	8025a96 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8025300:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025302:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025306:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802530a:	1e48      	subs	r0, r1, #1
 802530c:	1e55      	subs	r5, r2, #1
 802530e:	9b08      	ldr	r3, [sp, #32]
 8025310:	2b00      	cmp	r3, #0
 8025312:	f340 81a3 	ble.w	802565c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 8025316:	9e21      	ldr	r6, [sp, #132]	; 0x84
 8025318:	9b22      	ldr	r3, [sp, #136]	; 0x88
 802531a:	1436      	asrs	r6, r6, #16
 802531c:	ea4f 4323 	mov.w	r3, r3, asr #16
 8025320:	d406      	bmi.n	8025330 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8025322:	4286      	cmp	r6, r0
 8025324:	da04      	bge.n	8025330 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8025326:	2b00      	cmp	r3, #0
 8025328:	db02      	blt.n	8025330 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802532a:	42ab      	cmp	r3, r5
 802532c:	f2c0 8197 	blt.w	802565e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8025330:	3601      	adds	r6, #1
 8025332:	f100 8184 	bmi.w	802563e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8025336:	42b1      	cmp	r1, r6
 8025338:	f2c0 8181 	blt.w	802563e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 802533c:	3301      	adds	r3, #1
 802533e:	f100 817e 	bmi.w	802563e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8025342:	429a      	cmp	r2, r3
 8025344:	f2c0 817b 	blt.w	802563e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8025348:	9b08      	ldr	r3, [sp, #32]
 802534a:	9f09      	ldr	r7, [sp, #36]	; 0x24
 802534c:	9313      	str	r3, [sp, #76]	; 0x4c
 802534e:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8025352:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8025354:	2b00      	cmp	r3, #0
 8025356:	f340 81a4 	ble.w	80256a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 802535a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 802535c:	9d21      	ldr	r5, [sp, #132]	; 0x84
 802535e:	1418      	asrs	r0, r3, #16
 8025360:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8025362:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8025366:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8025368:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 802536c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802536e:	142d      	asrs	r5, r5, #16
 8025370:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8025374:	f100 81f8 	bmi.w	8025768 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8025378:	f102 3eff 	add.w	lr, r2, #4294967295
 802537c:	4575      	cmp	r5, lr
 802537e:	f280 81f3 	bge.w	8025768 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8025382:	2800      	cmp	r0, #0
 8025384:	f2c0 81f0 	blt.w	8025768 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8025388:	f103 3eff 	add.w	lr, r3, #4294967295
 802538c:	4570      	cmp	r0, lr
 802538e:	f280 81eb 	bge.w	8025768 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8025392:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8025394:	b212      	sxth	r2, r2
 8025396:	fb00 5002 	mla	r0, r0, r2, r5
 802539a:	fa1f fe81 	uxth.w	lr, r1
 802539e:	eb03 0a00 	add.w	sl, r3, r0
 80253a2:	ea4f 150e 	mov.w	r5, lr, lsl #4
 80253a6:	f813 9000 	ldrb.w	r9, [r3, r0]
 80253aa:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80253ae:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 80253b2:	b29b      	uxth	r3, r3
 80253b4:	f1bc 0f00 	cmp.w	ip, #0
 80253b8:	f000 81b9 	beq.w	802572e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 80253bc:	f81a 4002 	ldrb.w	r4, [sl, r2]
 80253c0:	940d      	str	r4, [sp, #52]	; 0x34
 80253c2:	eb0a 0b02 	add.w	fp, sl, r2
 80253c6:	fa1f fa8c 	uxth.w	sl, ip
 80253ca:	fb0a fe0e 	mul.w	lr, sl, lr
 80253ce:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 80253d2:	fa1f fa8a 	uxth.w	sl, sl
 80253d6:	eba5 050e 	sub.w	r5, r5, lr
 80253da:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80253de:	940e      	str	r4, [sp, #56]	; 0x38
 80253e0:	eba3 030a 	sub.w	r3, r3, sl
 80253e4:	b2ad      	uxth	r5, r5
 80253e6:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80253e8:	b29b      	uxth	r3, r3
 80253ea:	fb08 f505 	mul.w	r5, r8, r5
 80253ee:	fb09 5303 	mla	r3, r9, r3, r5
 80253f2:	fb0a 3304 	mla	r3, sl, r4, r3
 80253f6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80253f8:	fb0e 3304 	mla	r3, lr, r4, r3
 80253fc:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025400:	2b00      	cmp	r3, #0
 8025402:	f000 810f 	beq.w	8025624 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8025406:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8025408:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 802540c:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8025410:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8025414:	f000 8190 	beq.w	8025738 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 8025418:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 802541c:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8025420:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025424:	fb09 f000 	mul.w	r0, r9, r0
 8025428:	fb0a fe0e 	mul.w	lr, sl, lr
 802542c:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8025430:	f100 0b20 	add.w	fp, r0, #32
 8025434:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8025438:	44ce      	add	lr, r9
 802543a:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 802543e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8025442:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8025446:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 802544a:	ea4e 0909 	orr.w	r9, lr, r9
 802544e:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8025452:	8868      	ldrh	r0, [r5, #2]
 8025454:	d019      	beq.n	802548a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8025456:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 802545a:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 802545e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025462:	fb08 f800 	mul.w	r8, r8, r0
 8025466:	fb0a fe0e 	mul.w	lr, sl, lr
 802546a:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 802546e:	f108 0b20 	add.w	fp, r8, #32
 8025472:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8025476:	4486      	add	lr, r0
 8025478:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 802547c:	0a00      	lsrs	r0, r0, #8
 802547e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8025482:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025486:	ea4e 0000 	orr.w	r0, lr, r0
 802548a:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 802548e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8025492:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8025496:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 802549a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802549e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80254a2:	ea4e 0909 	orr.w	r9, lr, r9
 80254a6:	ea4a 0000 	orr.w	r0, sl, r0
 80254aa:	f1bc 0f00 	cmp.w	ip, #0
 80254ae:	f000 8145 	beq.w	802573c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 80254b2:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 80254b6:	3a01      	subs	r2, #1
 80254b8:	0052      	lsls	r2, r2, #1
 80254ba:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80254bc:	3202      	adds	r2, #2
 80254be:	2cff      	cmp	r4, #255	; 0xff
 80254c0:	eb05 0e02 	add.w	lr, r5, r2
 80254c4:	5aaa      	ldrh	r2, [r5, r2]
 80254c6:	d018      	beq.n	80254fa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 80254c8:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 80254cc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80254d0:	fb04 fa02 	mul.w	sl, r4, r2
 80254d4:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80254d8:	fb08 f805 	mul.w	r8, r8, r5
 80254dc:	f10a 0520 	add.w	r5, sl, #32
 80254e0:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 80254e4:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 80254e8:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80254ec:	4442      	add	r2, r8
 80254ee:	0a2d      	lsrs	r5, r5, #8
 80254f0:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 80254f4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80254f8:	432a      	orrs	r2, r5
 80254fa:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80254fc:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8025500:	2cff      	cmp	r4, #255	; 0xff
 8025502:	d01a      	beq.n	802553a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8025504:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8025508:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 802550c:	fb04 fa05 	mul.w	sl, r4, r5
 8025510:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8025514:	fb08 f80e 	mul.w	r8, r8, lr
 8025518:	f10a 0e20 	add.w	lr, sl, #32
 802551c:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8025520:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8025524:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8025528:	4445      	add	r5, r8
 802552a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802552e:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8025532:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8025536:	ea45 050e 	orr.w	r5, r5, lr
 802553a:	fb1c fe01 	smulbb	lr, ip, r1
 802553e:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8025542:	f1cc 0810 	rsb	r8, ip, #16
 8025546:	eba8 0801 	sub.w	r8, r8, r1
 802554a:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 802554e:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8025552:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8025556:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 802555a:	4341      	muls	r1, r0
 802555c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025560:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8025564:	ea4a 0202 	orr.w	r2, sl, r2
 8025568:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 802556c:	fb09 1108 	mla	r1, r9, r8, r1
 8025570:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8025574:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8025578:	fb0c 1102 	mla	r1, ip, r2, r1
 802557c:	ea4b 0505 	orr.w	r5, fp, r5
 8025580:	fb0e 1e05 	mla	lr, lr, r5, r1
 8025584:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8025588:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 802558c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025590:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8025594:	ea42 0e0e 	orr.w	lr, r2, lr
 8025598:	fa1f f28e 	uxth.w	r2, lr
 802559c:	2bff      	cmp	r3, #255	; 0xff
 802559e:	d103      	bne.n	80255a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 80255a0:	9912      	ldr	r1, [sp, #72]	; 0x48
 80255a2:	29ff      	cmp	r1, #255	; 0xff
 80255a4:	f000 80de 	beq.w	8025764 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 80255a8:	990a      	ldr	r1, [sp, #40]	; 0x28
 80255aa:	8838      	ldrh	r0, [r7, #0]
 80255ac:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80255ae:	434b      	muls	r3, r1
 80255b0:	f103 0c01 	add.w	ip, r3, #1
 80255b4:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 80255b8:	ea6f 2323 	mvn.w	r3, r3, asr #8
 80255bc:	fa5f fc83 	uxtb.w	ip, r3
 80255c0:	1203      	asrs	r3, r0, #8
 80255c2:	1215      	asrs	r5, r2, #8
 80255c4:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80255c8:	fb13 f30c 	smulbb	r3, r3, ip
 80255cc:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80255d0:	fb05 3501 	mla	r5, r5, r1, r3
 80255d4:	10c3      	asrs	r3, r0, #3
 80255d6:	10d1      	asrs	r1, r2, #3
 80255d8:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80255dc:	fb13 f30c 	smulbb	r3, r3, ip
 80255e0:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80255e4:	fb01 3104 	mla	r1, r1, r4, r3
 80255e8:	00c3      	lsls	r3, r0, #3
 80255ea:	00d2      	lsls	r2, r2, #3
 80255ec:	b2db      	uxtb	r3, r3
 80255ee:	b2d2      	uxtb	r2, r2
 80255f0:	fb13 f30c 	smulbb	r3, r3, ip
 80255f4:	b2ad      	uxth	r5, r5
 80255f6:	fb02 3304 	mla	r3, r2, r4, r3
 80255fa:	b29a      	uxth	r2, r3
 80255fc:	1c6b      	adds	r3, r5, #1
 80255fe:	b289      	uxth	r1, r1
 8025600:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8025604:	1c53      	adds	r3, r2, #1
 8025606:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802560a:	1c4a      	adds	r2, r1, #1
 802560c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8025610:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8025614:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8025618:	0949      	lsrs	r1, r1, #5
 802561a:	432b      	orrs	r3, r5
 802561c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8025620:	430b      	orrs	r3, r1
 8025622:	803b      	strh	r3, [r7, #0]
 8025624:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8025626:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8025628:	4413      	add	r3, r2
 802562a:	9321      	str	r3, [sp, #132]	; 0x84
 802562c:	9a22      	ldr	r2, [sp, #136]	; 0x88
 802562e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025630:	441a      	add	r2, r3
 8025632:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8025634:	9222      	str	r2, [sp, #136]	; 0x88
 8025636:	3b01      	subs	r3, #1
 8025638:	3702      	adds	r7, #2
 802563a:	9313      	str	r3, [sp, #76]	; 0x4c
 802563c:	e689      	b.n	8025352 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 802563e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8025640:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 8025642:	9c22      	ldr	r4, [sp, #136]	; 0x88
 8025644:	4433      	add	r3, r6
 8025646:	9321      	str	r3, [sp, #132]	; 0x84
 8025648:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802564a:	441c      	add	r4, r3
 802564c:	9b08      	ldr	r3, [sp, #32]
 802564e:	9422      	str	r4, [sp, #136]	; 0x88
 8025650:	3b01      	subs	r3, #1
 8025652:	9308      	str	r3, [sp, #32]
 8025654:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025656:	3302      	adds	r3, #2
 8025658:	9309      	str	r3, [sp, #36]	; 0x24
 802565a:	e658      	b.n	802530e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 802565c:	d028      	beq.n	80256b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 802565e:	9b08      	ldr	r3, [sp, #32]
 8025660:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8025662:	9d21      	ldr	r5, [sp, #132]	; 0x84
 8025664:	3b01      	subs	r3, #1
 8025666:	fb00 5003 	mla	r0, r0, r3, r5
 802566a:	1400      	asrs	r0, r0, #16
 802566c:	f53f ae6c 	bmi.w	8025348 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8025670:	3901      	subs	r1, #1
 8025672:	4288      	cmp	r0, r1
 8025674:	f6bf ae68 	bge.w	8025348 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8025678:	9924      	ldr	r1, [sp, #144]	; 0x90
 802567a:	9822      	ldr	r0, [sp, #136]	; 0x88
 802567c:	fb01 0303 	mla	r3, r1, r3, r0
 8025680:	141b      	asrs	r3, r3, #16
 8025682:	f53f ae61 	bmi.w	8025348 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8025686:	3a01      	subs	r2, #1
 8025688:	4293      	cmp	r3, r2
 802568a:	f6bf ae5d 	bge.w	8025348 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802568e:	9b08      	ldr	r3, [sp, #32]
 8025690:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8025694:	9313      	str	r3, [sp, #76]	; 0x4c
 8025696:	f64f 061f 	movw	r6, #63519	; 0xf81f
 802569a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 802569c:	2b00      	cmp	r3, #0
 802569e:	f300 8082 	bgt.w	80257a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 80256a2:	9b08      	ldr	r3, [sp, #32]
 80256a4:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80256a8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80256aa:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80256ae:	9309      	str	r3, [sp, #36]	; 0x24
 80256b0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80256b2:	2b00      	cmp	r3, #0
 80256b4:	f340 81ef 	ble.w	8025a96 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 80256b8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80256bc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80256c0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80256c4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80256c6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80256ca:	ee31 1a05 	vadd.f32	s2, s2, s10
 80256ce:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80256d2:	eef0 6a62 	vmov.f32	s13, s5
 80256d6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80256da:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80256de:	ee77 2a62 	vsub.f32	s5, s14, s5
 80256e2:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 80256e6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80256ea:	eef0 6a43 	vmov.f32	s13, s6
 80256ee:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80256f2:	ee12 2a90 	vmov	r2, s5
 80256f6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80256fa:	fb92 f3f3 	sdiv	r3, r2, r3
 80256fe:	ee13 2a10 	vmov	r2, s6
 8025702:	9323      	str	r3, [sp, #140]	; 0x8c
 8025704:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8025706:	fb92 f3f3 	sdiv	r3, r2, r3
 802570a:	9324      	str	r3, [sp, #144]	; 0x90
 802570c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 802570e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8025710:	3b01      	subs	r3, #1
 8025712:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025716:	9311      	str	r3, [sp, #68]	; 0x44
 8025718:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802571a:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 802571e:	bf08      	it	eq
 8025720:	4613      	moveq	r3, r2
 8025722:	9308      	str	r3, [sp, #32]
 8025724:	eeb0 3a67 	vmov.f32	s6, s15
 8025728:	eef0 2a47 	vmov.f32	s5, s14
 802572c:	e5e1      	b.n	80252f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 802572e:	fb08 f505 	mul.w	r5, r8, r5
 8025732:	fb09 5303 	mla	r3, r9, r3, r5
 8025736:	e661      	b.n	80253fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 8025738:	4681      	mov	r9, r0
 802573a:	e688      	b.n	802544e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 802573c:	f1c1 0210 	rsb	r2, r1, #16
 8025740:	4341      	muls	r1, r0
 8025742:	fb09 1902 	mla	r9, r9, r2, r1
 8025746:	ea4f 0949 	mov.w	r9, r9, lsl #1
 802574a:	ea4f 5259 	mov.w	r2, r9, lsr #21
 802574e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8025752:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025756:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 802575a:	ea42 0909 	orr.w	r9, r2, r9
 802575e:	fa1f f289 	uxth.w	r2, r9
 8025762:	e71b      	b.n	802559c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8025764:	803a      	strh	r2, [r7, #0]
 8025766:	e75d      	b.n	8025624 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8025768:	f115 0e01 	adds.w	lr, r5, #1
 802576c:	f53f af5a 	bmi.w	8025624 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8025770:	4572      	cmp	r2, lr
 8025772:	f6ff af57 	blt.w	8025624 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8025776:	f110 0e01 	adds.w	lr, r0, #1
 802577a:	f53f af53 	bmi.w	8025624 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 802577e:	4573      	cmp	r3, lr
 8025780:	f6ff af50 	blt.w	8025624 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8025784:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8025786:	9502      	str	r5, [sp, #8]
 8025788:	b21b      	sxth	r3, r3
 802578a:	b212      	sxth	r2, r2
 802578c:	e9cd 0103 	strd	r0, r1, [sp, #12]
 8025790:	9301      	str	r3, [sp, #4]
 8025792:	9200      	str	r2, [sp, #0]
 8025794:	e9cd c405 	strd	ip, r4, [sp, #20]
 8025798:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 802579c:	4639      	mov	r1, r7
 802579e:	9815      	ldr	r0, [sp, #84]	; 0x54
 80257a0:	f7ff fc04 	bl	8024fac <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 80257a4:	e73e      	b.n	8025624 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80257a6:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80257a8:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80257ac:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80257ae:	f3c3 3503 	ubfx	r5, r3, #12, #4
 80257b2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80257b4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80257b8:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80257ba:	141f      	asrs	r7, r3, #16
 80257bc:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80257be:	141b      	asrs	r3, r3, #16
 80257c0:	fb01 3707 	mla	r7, r1, r7, r3
 80257c4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80257c6:	fa1f fc82 	uxth.w	ip, r2
 80257ca:	eb03 0a07 	add.w	sl, r3, r7
 80257ce:	ea4f 100c 	mov.w	r0, ip, lsl #4
 80257d2:	f813 9007 	ldrb.w	r9, [r3, r7]
 80257d6:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80257da:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 80257de:	b29b      	uxth	r3, r3
 80257e0:	2d00      	cmp	r5, #0
 80257e2:	f000 813d 	beq.w	8025a60 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 80257e6:	f81a 4001 	ldrb.w	r4, [sl, r1]
 80257ea:	940f      	str	r4, [sp, #60]	; 0x3c
 80257ec:	eb0a 0b01 	add.w	fp, sl, r1
 80257f0:	fa1f fa85 	uxth.w	sl, r5
 80257f4:	fb0a fc0c 	mul.w	ip, sl, ip
 80257f8:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 80257fc:	fa1f fa8a 	uxth.w	sl, sl
 8025800:	eba0 000c 	sub.w	r0, r0, ip
 8025804:	eba3 030a 	sub.w	r3, r3, sl
 8025808:	b280      	uxth	r0, r0
 802580a:	fb08 f000 	mul.w	r0, r8, r0
 802580e:	b29b      	uxth	r3, r3
 8025810:	fb09 0303 	mla	r3, r9, r3, r0
 8025814:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8025816:	f89b 4001 	ldrb.w	r4, [fp, #1]
 802581a:	9410      	str	r4, [sp, #64]	; 0x40
 802581c:	fb0a 3300 	mla	r3, sl, r0, r3
 8025820:	fb0c 3304 	mla	r3, ip, r4, r3
 8025824:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025828:	2b00      	cmp	r3, #0
 802582a:	f000 810b 	beq.w	8025a44 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 802582e:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8025830:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8025832:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8025836:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 802583a:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 802583e:	f000 8114 	beq.w	8025a6a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 8025842:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8025846:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 802584a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802584e:	fb09 f707 	mul.w	r7, r9, r7
 8025852:	fb0a fc0c 	mul.w	ip, sl, ip
 8025856:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 802585a:	f107 0b20 	add.w	fp, r7, #32
 802585e:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8025862:	44cc      	add	ip, r9
 8025864:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8025868:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802586c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8025870:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8025874:	ea4c 0909 	orr.w	r9, ip, r9
 8025878:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 802587c:	8847      	ldrh	r7, [r0, #2]
 802587e:	d019      	beq.n	80258b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 8025880:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8025884:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8025888:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802588c:	fb08 f807 	mul.w	r8, r8, r7
 8025890:	fb0a fc0c 	mul.w	ip, sl, ip
 8025894:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8025898:	f108 0b20 	add.w	fp, r8, #32
 802589c:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80258a0:	44bc      	add	ip, r7
 80258a2:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 80258a6:	0a3f      	lsrs	r7, r7, #8
 80258a8:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80258ac:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80258b0:	ea4c 0707 	orr.w	r7, ip, r7
 80258b4:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 80258b8:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 80258bc:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80258c0:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80258c4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80258c8:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80258cc:	ea4c 0909 	orr.w	r9, ip, r9
 80258d0:	ea4a 0707 	orr.w	r7, sl, r7
 80258d4:	2d00      	cmp	r5, #0
 80258d6:	f000 80ca 	beq.w	8025a6e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 80258da:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 80258de:	3901      	subs	r1, #1
 80258e0:	0049      	lsls	r1, r1, #1
 80258e2:	3102      	adds	r1, #2
 80258e4:	eb00 0c01 	add.w	ip, r0, r1
 80258e8:	5a41      	ldrh	r1, [r0, r1]
 80258ea:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80258ec:	28ff      	cmp	r0, #255	; 0xff
 80258ee:	d019      	beq.n	8025924 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 80258f0:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80258f2:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 80258f6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80258fa:	fb04 fa01 	mul.w	sl, r4, r1
 80258fe:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8025902:	fb08 f800 	mul.w	r8, r8, r0
 8025906:	f10a 0020 	add.w	r0, sl, #32
 802590a:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 802590e:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8025912:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8025916:	4441      	add	r1, r8
 8025918:	0a00      	lsrs	r0, r0, #8
 802591a:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 802591e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025922:	4301      	orrs	r1, r0
 8025924:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8025926:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 802592a:	2cff      	cmp	r4, #255	; 0xff
 802592c:	d01a      	beq.n	8025964 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 802592e:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8025932:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025936:	fb04 fa00 	mul.w	sl, r4, r0
 802593a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802593e:	fb08 f80c 	mul.w	r8, r8, ip
 8025942:	f10a 0c20 	add.w	ip, sl, #32
 8025946:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 802594a:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 802594e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8025952:	4440      	add	r0, r8
 8025954:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025958:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 802595c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8025960:	ea40 000c 	orr.w	r0, r0, ip
 8025964:	fb15 fc02 	smulbb	ip, r5, r2
 8025968:	ea4f 0cec 	mov.w	ip, ip, asr #3
 802596c:	f1c5 0810 	rsb	r8, r5, #16
 8025970:	eba8 0802 	sub.w	r8, r8, r2
 8025974:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8025978:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 802597c:	437a      	muls	r2, r7
 802597e:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8025982:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8025986:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802598a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802598e:	fb09 2208 	mla	r2, r9, r8, r2
 8025992:	ea4a 0101 	orr.w	r1, sl, r1
 8025996:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 802599a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802599e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80259a2:	fb05 2201 	mla	r2, r5, r1, r2
 80259a6:	ea4b 0000 	orr.w	r0, fp, r0
 80259aa:	fb0c 2200 	mla	r2, ip, r0, r2
 80259ae:	0d57      	lsrs	r7, r2, #21
 80259b0:	0952      	lsrs	r2, r2, #5
 80259b2:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80259b6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80259ba:	433a      	orrs	r2, r7
 80259bc:	2bff      	cmp	r3, #255	; 0xff
 80259be:	b292      	uxth	r2, r2
 80259c0:	d102      	bne.n	80259c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 80259c2:	9912      	ldr	r1, [sp, #72]	; 0x48
 80259c4:	29ff      	cmp	r1, #255	; 0xff
 80259c6:	d063      	beq.n	8025a90 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 80259c8:	980a      	ldr	r0, [sp, #40]	; 0x28
 80259ca:	f8be 1000 	ldrh.w	r1, [lr]
 80259ce:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80259d0:	4343      	muls	r3, r0
 80259d2:	1c58      	adds	r0, r3, #1
 80259d4:	eb00 2323 	add.w	r3, r0, r3, asr #8
 80259d8:	ea6f 2323 	mvn.w	r3, r3, asr #8
 80259dc:	1208      	asrs	r0, r1, #8
 80259de:	b2db      	uxtb	r3, r3
 80259e0:	1215      	asrs	r5, r2, #8
 80259e2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80259e6:	fb10 f003 	smulbb	r0, r0, r3
 80259ea:	10cf      	asrs	r7, r1, #3
 80259ec:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80259f0:	00c9      	lsls	r1, r1, #3
 80259f2:	fb05 0504 	mla	r5, r5, r4, r0
 80259f6:	b2c9      	uxtb	r1, r1
 80259f8:	10d0      	asrs	r0, r2, #3
 80259fa:	00d2      	lsls	r2, r2, #3
 80259fc:	fb11 f103 	smulbb	r1, r1, r3
 8025a00:	b2d2      	uxtb	r2, r2
 8025a02:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8025a06:	fb02 1204 	mla	r2, r2, r4, r1
 8025a0a:	fb17 f703 	smulbb	r7, r7, r3
 8025a0e:	b2ad      	uxth	r5, r5
 8025a10:	b292      	uxth	r2, r2
 8025a12:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8025a16:	fb00 7004 	mla	r0, r0, r4, r7
 8025a1a:	1c6b      	adds	r3, r5, #1
 8025a1c:	1c57      	adds	r7, r2, #1
 8025a1e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8025a22:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8025a26:	b280      	uxth	r0, r0
 8025a28:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8025a2c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8025a30:	433d      	orrs	r5, r7
 8025a32:	1c47      	adds	r7, r0, #1
 8025a34:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8025a38:	097f      	lsrs	r7, r7, #5
 8025a3a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8025a3e:	433d      	orrs	r5, r7
 8025a40:	f8ae 5000 	strh.w	r5, [lr]
 8025a44:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8025a46:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8025a48:	4413      	add	r3, r2
 8025a4a:	9321      	str	r3, [sp, #132]	; 0x84
 8025a4c:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8025a4e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025a50:	441a      	add	r2, r3
 8025a52:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8025a54:	9222      	str	r2, [sp, #136]	; 0x88
 8025a56:	3b01      	subs	r3, #1
 8025a58:	f10e 0e02 	add.w	lr, lr, #2
 8025a5c:	9313      	str	r3, [sp, #76]	; 0x4c
 8025a5e:	e61c      	b.n	802569a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 8025a60:	fb08 f000 	mul.w	r0, r8, r0
 8025a64:	fb09 0303 	mla	r3, r9, r3, r0
 8025a68:	e6dc      	b.n	8025824 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 8025a6a:	46b9      	mov	r9, r7
 8025a6c:	e704      	b.n	8025878 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 8025a6e:	f1c2 0110 	rsb	r1, r2, #16
 8025a72:	437a      	muls	r2, r7
 8025a74:	fb09 2901 	mla	r9, r9, r1, r2
 8025a78:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8025a7c:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8025a80:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8025a84:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025a88:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8025a8c:	4302      	orrs	r2, r0
 8025a8e:	e795      	b.n	80259bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 8025a90:	f8ae 2000 	strh.w	r2, [lr]
 8025a94:	e7d6      	b.n	8025a44 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8025a96:	b017      	add	sp, #92	; 0x5c
 8025a98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08025a9c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8025a9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025aa0:	b085      	sub	sp, #20
 8025aa2:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 8025aa6:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8025aaa:	9103      	str	r1, [sp, #12]
 8025aac:	fb00 7406 	mla	r4, r0, r6, r7
 8025ab0:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 8025ab4:	2800      	cmp	r0, #0
 8025ab6:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 8025aba:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 8025abe:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8025ac2:	9501      	str	r5, [sp, #4]
 8025ac4:	eb02 0904 	add.w	r9, r2, r4
 8025ac8:	f2c0 8141 	blt.w	8025d4e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8025acc:	4583      	cmp	fp, r0
 8025ace:	f340 813e 	ble.w	8025d4e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8025ad2:	2f00      	cmp	r7, #0
 8025ad4:	f2c0 8137 	blt.w	8025d46 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8025ad8:	42be      	cmp	r6, r7
 8025ada:	f340 8134 	ble.w	8025d46 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8025ade:	f812 c004 	ldrb.w	ip, [r2, r4]
 8025ae2:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 8025ae6:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8025aea:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 8025aee:	4355      	muls	r5, r2
 8025af0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8025af4:	f64f 041f 	movw	r4, #63519	; 0xf81f
 8025af8:	fb0c f203 	mul.w	r2, ip, r3
 8025afc:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8025b00:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8025b04:	441d      	add	r5, r3
 8025b06:	f102 0320 	add.w	r3, r2, #32
 8025b0a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8025b0e:	0a1b      	lsrs	r3, r3, #8
 8025b10:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8025b14:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8025b18:	431c      	orrs	r4, r3
 8025b1a:	1c7b      	adds	r3, r7, #1
 8025b1c:	f100 811c 	bmi.w	8025d58 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8025b20:	429e      	cmp	r6, r3
 8025b22:	f340 8119 	ble.w	8025d58 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8025b26:	2900      	cmp	r1, #0
 8025b28:	f000 8119 	beq.w	8025d5e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 8025b2c:	9a01      	ldr	r2, [sp, #4]
 8025b2e:	f899 3001 	ldrb.w	r3, [r9, #1]
 8025b32:	8855      	ldrh	r5, [r2, #2]
 8025b34:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8025b38:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 8025b3c:	fb08 f802 	mul.w	r8, r8, r2
 8025b40:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8025b44:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8025b48:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8025b4c:	435d      	muls	r5, r3
 8025b4e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8025b52:	44d0      	add	r8, sl
 8025b54:	f105 0a20 	add.w	sl, r5, #32
 8025b58:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8025b5c:	0a2d      	lsrs	r5, r5, #8
 8025b5e:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8025b62:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8025b66:	432a      	orrs	r2, r5
 8025b68:	3001      	adds	r0, #1
 8025b6a:	f100 80fe 	bmi.w	8025d6a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8025b6e:	4583      	cmp	fp, r0
 8025b70:	f340 80fb 	ble.w	8025d6a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8025b74:	f1be 0f00 	cmp.w	lr, #0
 8025b78:	f000 80fc 	beq.w	8025d74 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 8025b7c:	2f00      	cmp	r7, #0
 8025b7e:	f2c0 80f1 	blt.w	8025d64 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8025b82:	42be      	cmp	r6, r7
 8025b84:	f340 80ee 	ble.w	8025d64 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8025b88:	9801      	ldr	r0, [sp, #4]
 8025b8a:	f819 5006 	ldrb.w	r5, [r9, r6]
 8025b8e:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8025b92:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8025b96:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 8025b9a:	fb0a fa00 	mul.w	sl, sl, r0
 8025b9e:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8025ba2:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8025ba6:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8025baa:	fb05 f808 	mul.w	r8, r5, r8
 8025bae:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8025bb2:	4482      	add	sl, r0
 8025bb4:	f108 0020 	add.w	r0, r8, #32
 8025bb8:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8025bbc:	0a00      	lsrs	r0, r0, #8
 8025bbe:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8025bc2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025bc6:	ea4b 0b00 	orr.w	fp, fp, r0
 8025bca:	3701      	adds	r7, #1
 8025bcc:	f100 80d7 	bmi.w	8025d7e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8025bd0:	42be      	cmp	r6, r7
 8025bd2:	f340 80d4 	ble.w	8025d7e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8025bd6:	2900      	cmp	r1, #0
 8025bd8:	f000 80d4 	beq.w	8025d84 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 8025bdc:	3601      	adds	r6, #1
 8025bde:	9801      	ldr	r0, [sp, #4]
 8025be0:	f819 7006 	ldrb.w	r7, [r9, r6]
 8025be4:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8025be8:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8025bec:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 8025bf0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025bf4:	fb09 f906 	mul.w	r9, r9, r6
 8025bf8:	fb07 f800 	mul.w	r8, r7, r0
 8025bfc:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8025c00:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8025c04:	f609 0901 	addw	r9, r9, #2049	; 0x801
 8025c08:	44d1      	add	r9, sl
 8025c0a:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8025c0e:	f108 0020 	add.w	r0, r8, #32
 8025c12:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8025c16:	0a00      	lsrs	r0, r0, #8
 8025c18:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025c1c:	4330      	orrs	r0, r6
 8025c1e:	b28e      	uxth	r6, r1
 8025c20:	fa1f f98e 	uxth.w	r9, lr
 8025c24:	fb06 f809 	mul.w	r8, r6, r9
 8025c28:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8025c2c:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8025c30:	0136      	lsls	r6, r6, #4
 8025c32:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025c36:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8025c3a:	9601      	str	r6, [sp, #4]
 8025c3c:	ea4a 0404 	orr.w	r4, sl, r4
 8025c40:	fa1f f689 	uxth.w	r6, r9
 8025c44:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8025c48:	fb11 f90e 	smulbb	r9, r1, lr
 8025c4c:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8025c50:	9602      	str	r6, [sp, #8]
 8025c52:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025c56:	4626      	mov	r6, r4
 8025c58:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8025c5c:	f1ce 0410 	rsb	r4, lr, #16
 8025c60:	1a64      	subs	r4, r4, r1
 8025c62:	ea4a 0202 	orr.w	r2, sl, r2
 8025c66:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 8025c6a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8025c6e:	434a      	muls	r2, r1
 8025c70:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8025c74:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025c78:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8025c7c:	fb04 2406 	mla	r4, r4, r6, r2
 8025c80:	ea4a 0000 	orr.w	r0, sl, r0
 8025c84:	fb09 4200 	mla	r2, r9, r0, r4
 8025c88:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8025c8c:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8025c90:	9801      	ldr	r0, [sp, #4]
 8025c92:	9903      	ldr	r1, [sp, #12]
 8025c94:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8025c98:	ea44 0b0b 	orr.w	fp, r4, fp
 8025c9c:	9c02      	ldr	r4, [sp, #8]
 8025c9e:	8809      	ldrh	r1, [r1, #0]
 8025ca0:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 8025ca4:	1b00      	subs	r0, r0, r4
 8025ca6:	9c01      	ldr	r4, [sp, #4]
 8025ca8:	eba4 0608 	sub.w	r6, r4, r8
 8025cac:	b2b6      	uxth	r6, r6
 8025cae:	b280      	uxth	r0, r0
 8025cb0:	4373      	muls	r3, r6
 8025cb2:	fb0c 3300 	mla	r3, ip, r0, r3
 8025cb6:	9802      	ldr	r0, [sp, #8]
 8025cb8:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8025cbc:	fb00 3505 	mla	r5, r0, r5, r3
 8025cc0:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8025cc4:	fb08 5707 	mla	r7, r8, r7, r5
 8025cc8:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8025ccc:	120b      	asrs	r3, r1, #8
 8025cce:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8025cd2:	ea6f 2727 	mvn.w	r7, r7, asr #8
 8025cd6:	b2ff      	uxtb	r7, r7
 8025cd8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025cdc:	10c8      	asrs	r0, r1, #3
 8025cde:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8025ce2:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8025ce6:	00c9      	lsls	r1, r1, #3
 8025ce8:	437b      	muls	r3, r7
 8025cea:	ea42 0e0e 	orr.w	lr, r2, lr
 8025cee:	b2c9      	uxtb	r1, r1
 8025cf0:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8025cf4:	fa1f f28e 	uxth.w	r2, lr
 8025cf8:	4378      	muls	r0, r7
 8025cfa:	434f      	muls	r7, r1
 8025cfc:	1c59      	adds	r1, r3, #1
 8025cfe:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8025d02:	1213      	asrs	r3, r2, #8
 8025d04:	f023 0307 	bic.w	r3, r3, #7
 8025d08:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8025d0c:	1c41      	adds	r1, r0, #1
 8025d0e:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8025d12:	10d1      	asrs	r1, r2, #3
 8025d14:	f021 0103 	bic.w	r1, r1, #3
 8025d18:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8025d1c:	021b      	lsls	r3, r3, #8
 8025d1e:	00c9      	lsls	r1, r1, #3
 8025d20:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8025d24:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8025d28:	430b      	orrs	r3, r1
 8025d2a:	1c79      	adds	r1, r7, #1
 8025d2c:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 8025d30:	00d2      	lsls	r2, r2, #3
 8025d32:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8025d36:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8025d3a:	431a      	orrs	r2, r3
 8025d3c:	9b03      	ldr	r3, [sp, #12]
 8025d3e:	801a      	strh	r2, [r3, #0]
 8025d40:	b005      	add	sp, #20
 8025d42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025d46:	f04f 0c00 	mov.w	ip, #0
 8025d4a:	4664      	mov	r4, ip
 8025d4c:	e6e5      	b.n	8025b1a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 8025d4e:	2300      	movs	r3, #0
 8025d50:	469c      	mov	ip, r3
 8025d52:	461a      	mov	r2, r3
 8025d54:	461c      	mov	r4, r3
 8025d56:	e707      	b.n	8025b68 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8025d58:	2300      	movs	r3, #0
 8025d5a:	461a      	mov	r2, r3
 8025d5c:	e704      	b.n	8025b68 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8025d5e:	460b      	mov	r3, r1
 8025d60:	460a      	mov	r2, r1
 8025d62:	e701      	b.n	8025b68 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8025d64:	2500      	movs	r5, #0
 8025d66:	46ab      	mov	fp, r5
 8025d68:	e72f      	b.n	8025bca <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 8025d6a:	2700      	movs	r7, #0
 8025d6c:	463d      	mov	r5, r7
 8025d6e:	4638      	mov	r0, r7
 8025d70:	46bb      	mov	fp, r7
 8025d72:	e754      	b.n	8025c1e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8025d74:	4677      	mov	r7, lr
 8025d76:	4675      	mov	r5, lr
 8025d78:	4670      	mov	r0, lr
 8025d7a:	46f3      	mov	fp, lr
 8025d7c:	e74f      	b.n	8025c1e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8025d7e:	2700      	movs	r7, #0
 8025d80:	4638      	mov	r0, r7
 8025d82:	e74c      	b.n	8025c1e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8025d84:	460f      	mov	r7, r1
 8025d86:	4608      	mov	r0, r1
 8025d88:	e749      	b.n	8025c1e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

08025d8c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8025d8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025d90:	b093      	sub	sp, #76	; 0x4c
 8025d92:	9210      	str	r2, [sp, #64]	; 0x40
 8025d94:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8025d96:	910e      	str	r1, [sp, #56]	; 0x38
 8025d98:	9306      	str	r3, [sp, #24]
 8025d9a:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8025d9e:	9011      	str	r0, [sp, #68]	; 0x44
 8025da0:	6850      	ldr	r0, [r2, #4]
 8025da2:	6812      	ldr	r2, [r2, #0]
 8025da4:	fb00 1303 	mla	r3, r0, r3, r1
 8025da8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8025dac:	9307      	str	r3, [sp, #28]
 8025dae:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025db0:	681b      	ldr	r3, [r3, #0]
 8025db2:	9308      	str	r3, [sp, #32]
 8025db4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025db6:	685b      	ldr	r3, [r3, #4]
 8025db8:	9309      	str	r3, [sp, #36]	; 0x24
 8025dba:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8025dbc:	2b00      	cmp	r3, #0
 8025dbe:	dc03      	bgt.n	8025dc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8025dc0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8025dc2:	2b00      	cmp	r3, #0
 8025dc4:	f340 83b4 	ble.w	8026530 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8025dc8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025dca:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025dce:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8025dd2:	1e48      	subs	r0, r1, #1
 8025dd4:	1e55      	subs	r5, r2, #1
 8025dd6:	9b06      	ldr	r3, [sp, #24]
 8025dd8:	2b00      	cmp	r3, #0
 8025dda:	f340 8163 	ble.w	80260a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 8025dde:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 8025de0:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8025de2:	1436      	asrs	r6, r6, #16
 8025de4:	ea4f 4323 	mov.w	r3, r3, asr #16
 8025de8:	d406      	bmi.n	8025df8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8025dea:	4286      	cmp	r6, r0
 8025dec:	da04      	bge.n	8025df8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8025dee:	2b00      	cmp	r3, #0
 8025df0:	db02      	blt.n	8025df8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8025df2:	42ab      	cmp	r3, r5
 8025df4:	f2c0 8157 	blt.w	80260a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 8025df8:	3601      	adds	r6, #1
 8025dfa:	f100 8144 	bmi.w	8026086 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8025dfe:	42b1      	cmp	r1, r6
 8025e00:	f2c0 8141 	blt.w	8026086 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8025e04:	3301      	adds	r3, #1
 8025e06:	f100 813e 	bmi.w	8026086 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8025e0a:	429a      	cmp	r2, r3
 8025e0c:	f2c0 813b 	blt.w	8026086 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8025e10:	9b06      	ldr	r3, [sp, #24]
 8025e12:	9f07      	ldr	r7, [sp, #28]
 8025e14:	930f      	str	r3, [sp, #60]	; 0x3c
 8025e16:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8025e1a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8025e1c:	2b00      	cmp	r3, #0
 8025e1e:	f340 8164 	ble.w	80260ea <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 8025e22:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8025e24:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8025e26:	1418      	asrs	r0, r3, #16
 8025e28:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8025e2a:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8025e2e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8025e30:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8025e34:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025e36:	142d      	asrs	r5, r5, #16
 8025e38:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8025e3c:	f100 81ee 	bmi.w	802621c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8025e40:	f102 3eff 	add.w	lr, r2, #4294967295
 8025e44:	4575      	cmp	r5, lr
 8025e46:	f280 81e9 	bge.w	802621c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8025e4a:	2800      	cmp	r0, #0
 8025e4c:	f2c0 81e6 	blt.w	802621c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8025e50:	f103 3eff 	add.w	lr, r3, #4294967295
 8025e54:	4570      	cmp	r0, lr
 8025e56:	f280 81e1 	bge.w	802621c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8025e5a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025e5c:	b212      	sxth	r2, r2
 8025e5e:	fb00 5002 	mla	r0, r0, r2, r5
 8025e62:	fa1f fe81 	uxth.w	lr, r1
 8025e66:	eb03 0a00 	add.w	sl, r3, r0
 8025e6a:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8025e6e:	f813 9000 	ldrb.w	r9, [r3, r0]
 8025e72:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8025e76:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8025e7a:	b29b      	uxth	r3, r3
 8025e7c:	f1bc 0f00 	cmp.w	ip, #0
 8025e80:	f000 8179 	beq.w	8026176 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8025e84:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8025e88:	940a      	str	r4, [sp, #40]	; 0x28
 8025e8a:	eb0a 0b02 	add.w	fp, sl, r2
 8025e8e:	fa1f fa8c 	uxth.w	sl, ip
 8025e92:	fb0a fe0e 	mul.w	lr, sl, lr
 8025e96:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8025e9a:	fa1f fa8a 	uxth.w	sl, sl
 8025e9e:	eba5 050e 	sub.w	r5, r5, lr
 8025ea2:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8025ea6:	940b      	str	r4, [sp, #44]	; 0x2c
 8025ea8:	eba3 030a 	sub.w	r3, r3, sl
 8025eac:	b2ad      	uxth	r5, r5
 8025eae:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8025eb0:	b29b      	uxth	r3, r3
 8025eb2:	fb08 f505 	mul.w	r5, r8, r5
 8025eb6:	fb09 5303 	mla	r3, r9, r3, r5
 8025eba:	fb0a 3304 	mla	r3, sl, r4, r3
 8025ebe:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8025ec0:	fb0e 3304 	mla	r3, lr, r4, r3
 8025ec4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025ec8:	2b00      	cmp	r3, #0
 8025eca:	f000 80cf 	beq.w	802606c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8025ece:	9c08      	ldr	r4, [sp, #32]
 8025ed0:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8025ed4:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8025ed8:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8025edc:	f000 8150 	beq.w	8026180 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8025ee0:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8025ee4:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8025ee8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025eec:	fb09 f000 	mul.w	r0, r9, r0
 8025ef0:	fb0a fe0e 	mul.w	lr, sl, lr
 8025ef4:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8025ef8:	f100 0b20 	add.w	fp, r0, #32
 8025efc:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8025f00:	44ce      	add	lr, r9
 8025f02:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8025f06:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8025f0a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8025f0e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8025f12:	ea4e 0909 	orr.w	r9, lr, r9
 8025f16:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8025f1a:	8868      	ldrh	r0, [r5, #2]
 8025f1c:	d019      	beq.n	8025f52 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8025f1e:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8025f22:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8025f26:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025f2a:	fb08 f800 	mul.w	r8, r8, r0
 8025f2e:	fb0a fe0e 	mul.w	lr, sl, lr
 8025f32:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8025f36:	f108 0b20 	add.w	fp, r8, #32
 8025f3a:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8025f3e:	4486      	add	lr, r0
 8025f40:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8025f44:	0a00      	lsrs	r0, r0, #8
 8025f46:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8025f4a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025f4e:	ea4e 0000 	orr.w	r0, lr, r0
 8025f52:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8025f56:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8025f5a:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8025f5e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8025f62:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025f66:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8025f6a:	ea4e 0909 	orr.w	r9, lr, r9
 8025f6e:	ea4a 0000 	orr.w	r0, sl, r0
 8025f72:	f1bc 0f00 	cmp.w	ip, #0
 8025f76:	f000 8105 	beq.w	8026184 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8025f7a:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8025f7e:	3a01      	subs	r2, #1
 8025f80:	0052      	lsls	r2, r2, #1
 8025f82:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8025f84:	3202      	adds	r2, #2
 8025f86:	2cff      	cmp	r4, #255	; 0xff
 8025f88:	eb05 0e02 	add.w	lr, r5, r2
 8025f8c:	5aaa      	ldrh	r2, [r5, r2]
 8025f8e:	d018      	beq.n	8025fc2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8025f90:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8025f94:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025f98:	fb04 fa02 	mul.w	sl, r4, r2
 8025f9c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8025fa0:	fb08 f805 	mul.w	r8, r8, r5
 8025fa4:	f10a 0520 	add.w	r5, sl, #32
 8025fa8:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8025fac:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8025fb0:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8025fb4:	4442      	add	r2, r8
 8025fb6:	0a2d      	lsrs	r5, r5, #8
 8025fb8:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8025fbc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8025fc0:	432a      	orrs	r2, r5
 8025fc2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8025fc4:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8025fc8:	2cff      	cmp	r4, #255	; 0xff
 8025fca:	d01a      	beq.n	8026002 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8025fcc:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8025fd0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8025fd4:	fb04 fa05 	mul.w	sl, r4, r5
 8025fd8:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8025fdc:	fb08 f80e 	mul.w	r8, r8, lr
 8025fe0:	f10a 0e20 	add.w	lr, sl, #32
 8025fe4:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8025fe8:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8025fec:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8025ff0:	4445      	add	r5, r8
 8025ff2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8025ff6:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8025ffa:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8025ffe:	ea45 050e 	orr.w	r5, r5, lr
 8026002:	fb1c fe01 	smulbb	lr, ip, r1
 8026006:	ea4f 0eee 	mov.w	lr, lr, asr #3
 802600a:	f1cc 0810 	rsb	r8, ip, #16
 802600e:	eba8 0801 	sub.w	r8, r8, r1
 8026012:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8026016:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 802601a:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 802601e:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8026022:	4341      	muls	r1, r0
 8026024:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8026028:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802602c:	ea4a 0202 	orr.w	r2, sl, r2
 8026030:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8026034:	fb09 1108 	mla	r1, r9, r8, r1
 8026038:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802603c:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8026040:	fb0c 1102 	mla	r1, ip, r2, r1
 8026044:	ea4b 0505 	orr.w	r5, fp, r5
 8026048:	fb0e 1e05 	mla	lr, lr, r5, r1
 802604c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8026050:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8026054:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8026058:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 802605c:	ea42 0e0e 	orr.w	lr, r2, lr
 8026060:	fa1f f28e 	uxth.w	r2, lr
 8026064:	2bff      	cmp	r3, #255	; 0xff
 8026066:	f040 80a1 	bne.w	80261ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 802606a:	803a      	strh	r2, [r7, #0]
 802606c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802606e:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8026070:	4413      	add	r3, r2
 8026072:	931d      	str	r3, [sp, #116]	; 0x74
 8026074:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8026076:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026078:	441a      	add	r2, r3
 802607a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 802607c:	921e      	str	r2, [sp, #120]	; 0x78
 802607e:	3b01      	subs	r3, #1
 8026080:	3702      	adds	r7, #2
 8026082:	930f      	str	r3, [sp, #60]	; 0x3c
 8026084:	e6c9      	b.n	8025e1a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8026086:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8026088:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 802608a:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 802608c:	4433      	add	r3, r6
 802608e:	931d      	str	r3, [sp, #116]	; 0x74
 8026090:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026092:	441c      	add	r4, r3
 8026094:	9b06      	ldr	r3, [sp, #24]
 8026096:	941e      	str	r4, [sp, #120]	; 0x78
 8026098:	3b01      	subs	r3, #1
 802609a:	9306      	str	r3, [sp, #24]
 802609c:	9b07      	ldr	r3, [sp, #28]
 802609e:	3302      	adds	r3, #2
 80260a0:	9307      	str	r3, [sp, #28]
 80260a2:	e698      	b.n	8025dd6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80260a4:	d028      	beq.n	80260f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80260a6:	9b06      	ldr	r3, [sp, #24]
 80260a8:	981f      	ldr	r0, [sp, #124]	; 0x7c
 80260aa:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 80260ac:	3b01      	subs	r3, #1
 80260ae:	fb00 5003 	mla	r0, r0, r3, r5
 80260b2:	1400      	asrs	r0, r0, #16
 80260b4:	f53f aeac 	bmi.w	8025e10 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80260b8:	3901      	subs	r1, #1
 80260ba:	4288      	cmp	r0, r1
 80260bc:	f6bf aea8 	bge.w	8025e10 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80260c0:	9920      	ldr	r1, [sp, #128]	; 0x80
 80260c2:	981e      	ldr	r0, [sp, #120]	; 0x78
 80260c4:	fb01 0303 	mla	r3, r1, r3, r0
 80260c8:	141b      	asrs	r3, r3, #16
 80260ca:	f53f aea1 	bmi.w	8025e10 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80260ce:	3a01      	subs	r2, #1
 80260d0:	4293      	cmp	r3, r2
 80260d2:	f6bf ae9d 	bge.w	8025e10 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80260d6:	9b06      	ldr	r3, [sp, #24]
 80260d8:	f8dd e01c 	ldr.w	lr, [sp, #28]
 80260dc:	930f      	str	r3, [sp, #60]	; 0x3c
 80260de:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80260e2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80260e4:	2b00      	cmp	r3, #0
 80260e6:	f300 80b6 	bgt.w	8026256 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 80260ea:	9b06      	ldr	r3, [sp, #24]
 80260ec:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80260f0:	9b07      	ldr	r3, [sp, #28]
 80260f2:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80260f6:	9307      	str	r3, [sp, #28]
 80260f8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80260fa:	2b00      	cmp	r3, #0
 80260fc:	f340 8218 	ble.w	8026530 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8026100:	ee30 0a04 	vadd.f32	s0, s0, s8
 8026104:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8026108:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802610c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802610e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8026112:	ee31 1a05 	vadd.f32	s2, s2, s10
 8026116:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802611a:	eef0 6a62 	vmov.f32	s13, s5
 802611e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8026122:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026126:	ee77 2a62 	vsub.f32	s5, s14, s5
 802612a:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 802612e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8026132:	eef0 6a43 	vmov.f32	s13, s6
 8026136:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802613a:	ee12 2a90 	vmov	r2, s5
 802613e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8026142:	fb92 f3f3 	sdiv	r3, r2, r3
 8026146:	ee13 2a10 	vmov	r2, s6
 802614a:	931f      	str	r3, [sp, #124]	; 0x7c
 802614c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802614e:	fb92 f3f3 	sdiv	r3, r2, r3
 8026152:	9320      	str	r3, [sp, #128]	; 0x80
 8026154:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8026156:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8026158:	3b01      	subs	r3, #1
 802615a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802615e:	930e      	str	r3, [sp, #56]	; 0x38
 8026160:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8026162:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 8026166:	bf08      	it	eq
 8026168:	4613      	moveq	r3, r2
 802616a:	9306      	str	r3, [sp, #24]
 802616c:	eeb0 3a67 	vmov.f32	s6, s15
 8026170:	eef0 2a47 	vmov.f32	s5, s14
 8026174:	e621      	b.n	8025dba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8026176:	fb08 f505 	mul.w	r5, r8, r5
 802617a:	fb09 5303 	mla	r3, r9, r3, r5
 802617e:	e6a1      	b.n	8025ec4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 8026180:	4681      	mov	r9, r0
 8026182:	e6c8      	b.n	8025f16 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 8026184:	f1c1 0210 	rsb	r2, r1, #16
 8026188:	4341      	muls	r1, r0
 802618a:	fb09 1902 	mla	r9, r9, r2, r1
 802618e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8026192:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8026196:	ea4f 1959 	mov.w	r9, r9, lsr #5
 802619a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802619e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80261a2:	ea42 0909 	orr.w	r9, r2, r9
 80261a6:	fa1f f289 	uxth.w	r2, r9
 80261aa:	e75b      	b.n	8026064 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80261ac:	f8b7 c000 	ldrh.w	ip, [r7]
 80261b0:	43db      	mvns	r3, r3
 80261b2:	ea4f 202c 	mov.w	r0, ip, asr #8
 80261b6:	fa5f fe83 	uxtb.w	lr, r3
 80261ba:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80261be:	fb00 f00e 	mul.w	r0, r0, lr
 80261c2:	1c41      	adds	r1, r0, #1
 80261c4:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 80261c8:	1211      	asrs	r1, r2, #8
 80261ca:	ea4f 05ec 	mov.w	r5, ip, asr #3
 80261ce:	f021 0107 	bic.w	r1, r1, #7
 80261d2:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80261d6:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80261da:	48d7      	ldr	r0, [pc, #860]	; (8026538 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 80261dc:	fb05 f50e 	mul.w	r5, r5, lr
 80261e0:	b2c9      	uxtb	r1, r1
 80261e2:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 80261e6:	1c69      	adds	r1, r5, #1
 80261e8:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 80261ec:	10d1      	asrs	r1, r2, #3
 80261ee:	f021 0103 	bic.w	r1, r1, #3
 80261f2:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 80261f6:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 80261fa:	b2db      	uxtb	r3, r3
 80261fc:	00c9      	lsls	r1, r1, #3
 80261fe:	fb03 f30e 	mul.w	r3, r3, lr
 8026202:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8026206:	4301      	orrs	r1, r0
 8026208:	1c58      	adds	r0, r3, #1
 802620a:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 802620e:	00d2      	lsls	r2, r2, #3
 8026210:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8026214:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8026218:	430a      	orrs	r2, r1
 802621a:	e726      	b.n	802606a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 802621c:	f115 0e01 	adds.w	lr, r5, #1
 8026220:	f53f af24 	bmi.w	802606c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8026224:	4572      	cmp	r2, lr
 8026226:	f6ff af21 	blt.w	802606c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 802622a:	f110 0e01 	adds.w	lr, r0, #1
 802622e:	f53f af1d 	bmi.w	802606c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8026232:	4573      	cmp	r3, lr
 8026234:	f6ff af1a 	blt.w	802606c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8026238:	b21b      	sxth	r3, r3
 802623a:	b212      	sxth	r2, r2
 802623c:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 8026240:	e9cd 5002 	strd	r5, r0, [sp, #8]
 8026244:	9301      	str	r3, [sp, #4]
 8026246:	9200      	str	r2, [sp, #0]
 8026248:	4639      	mov	r1, r7
 802624a:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 802624e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8026250:	f7ff fc24 	bl	8025a9c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8026254:	e70a      	b.n	802606c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8026256:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8026258:	f3c3 3203 	ubfx	r2, r3, #12, #4
 802625c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 802625e:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8026262:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026264:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8026268:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 802626a:	141f      	asrs	r7, r3, #16
 802626c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802626e:	141b      	asrs	r3, r3, #16
 8026270:	fb01 3707 	mla	r7, r1, r7, r3
 8026274:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026276:	fa1f fc82 	uxth.w	ip, r2
 802627a:	eb03 0a07 	add.w	sl, r3, r7
 802627e:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8026282:	f813 9007 	ldrb.w	r9, [r3, r7]
 8026286:	f89a 8001 	ldrb.w	r8, [sl, #1]
 802628a:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 802628e:	b29b      	uxth	r3, r3
 8026290:	2d00      	cmp	r5, #0
 8026292:	f000 80fe 	beq.w	8026492 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 8026296:	f81a 4001 	ldrb.w	r4, [sl, r1]
 802629a:	940c      	str	r4, [sp, #48]	; 0x30
 802629c:	eb0a 0b01 	add.w	fp, sl, r1
 80262a0:	fa1f fa85 	uxth.w	sl, r5
 80262a4:	fb0a fc0c 	mul.w	ip, sl, ip
 80262a8:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 80262ac:	fa1f fa8a 	uxth.w	sl, sl
 80262b0:	eba0 000c 	sub.w	r0, r0, ip
 80262b4:	eba3 030a 	sub.w	r3, r3, sl
 80262b8:	b280      	uxth	r0, r0
 80262ba:	fb08 f000 	mul.w	r0, r8, r0
 80262be:	b29b      	uxth	r3, r3
 80262c0:	fb09 0303 	mla	r3, r9, r3, r0
 80262c4:	980c      	ldr	r0, [sp, #48]	; 0x30
 80262c6:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80262ca:	940d      	str	r4, [sp, #52]	; 0x34
 80262cc:	fb0a 3300 	mla	r3, sl, r0, r3
 80262d0:	fb0c 3304 	mla	r3, ip, r4, r3
 80262d4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80262d8:	2b00      	cmp	r3, #0
 80262da:	f000 80cc 	beq.w	8026476 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 80262de:	9808      	ldr	r0, [sp, #32]
 80262e0:	9c08      	ldr	r4, [sp, #32]
 80262e2:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80262e6:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 80262ea:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 80262ee:	f000 80d5 	beq.w	802649c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 80262f2:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80262f6:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80262fa:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80262fe:	fb09 f707 	mul.w	r7, r9, r7
 8026302:	fb0a fc0c 	mul.w	ip, sl, ip
 8026306:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 802630a:	f107 0b20 	add.w	fp, r7, #32
 802630e:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8026312:	44cc      	add	ip, r9
 8026314:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8026318:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802631c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8026320:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8026324:	ea4c 0909 	orr.w	r9, ip, r9
 8026328:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 802632c:	8847      	ldrh	r7, [r0, #2]
 802632e:	d019      	beq.n	8026364 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 8026330:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8026334:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8026338:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802633c:	fb08 f807 	mul.w	r8, r8, r7
 8026340:	fb0a fc0c 	mul.w	ip, sl, ip
 8026344:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8026348:	f108 0b20 	add.w	fp, r8, #32
 802634c:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8026350:	44bc      	add	ip, r7
 8026352:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8026356:	0a3f      	lsrs	r7, r7, #8
 8026358:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 802635c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8026360:	ea4c 0707 	orr.w	r7, ip, r7
 8026364:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8026368:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 802636c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8026370:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8026374:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8026378:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 802637c:	ea4c 0909 	orr.w	r9, ip, r9
 8026380:	ea4a 0707 	orr.w	r7, sl, r7
 8026384:	2d00      	cmp	r5, #0
 8026386:	f000 808b 	beq.w	80264a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 802638a:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 802638e:	3901      	subs	r1, #1
 8026390:	0049      	lsls	r1, r1, #1
 8026392:	3102      	adds	r1, #2
 8026394:	eb00 0c01 	add.w	ip, r0, r1
 8026398:	5a41      	ldrh	r1, [r0, r1]
 802639a:	980c      	ldr	r0, [sp, #48]	; 0x30
 802639c:	28ff      	cmp	r0, #255	; 0xff
 802639e:	d019      	beq.n	80263d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 80263a0:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80263a2:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 80263a6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80263aa:	fb04 fa01 	mul.w	sl, r4, r1
 80263ae:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80263b2:	fb08 f800 	mul.w	r8, r8, r0
 80263b6:	f10a 0020 	add.w	r0, sl, #32
 80263ba:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 80263be:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 80263c2:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80263c6:	4441      	add	r1, r8
 80263c8:	0a00      	lsrs	r0, r0, #8
 80263ca:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 80263ce:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80263d2:	4301      	orrs	r1, r0
 80263d4:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80263d6:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 80263da:	2cff      	cmp	r4, #255	; 0xff
 80263dc:	d01a      	beq.n	8026414 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 80263de:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 80263e2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80263e6:	fb04 fa00 	mul.w	sl, r4, r0
 80263ea:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80263ee:	fb08 f80c 	mul.w	r8, r8, ip
 80263f2:	f10a 0c20 	add.w	ip, sl, #32
 80263f6:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 80263fa:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 80263fe:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8026402:	4440      	add	r0, r8
 8026404:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8026408:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 802640c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8026410:	ea40 000c 	orr.w	r0, r0, ip
 8026414:	fb15 fc02 	smulbb	ip, r5, r2
 8026418:	ea4f 0cec 	mov.w	ip, ip, asr #3
 802641c:	f1c5 0810 	rsb	r8, r5, #16
 8026420:	eba8 0802 	sub.w	r8, r8, r2
 8026424:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8026428:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 802642c:	437a      	muls	r2, r7
 802642e:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8026432:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8026436:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802643a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802643e:	fb09 2208 	mla	r2, r9, r8, r2
 8026442:	ea4a 0101 	orr.w	r1, sl, r1
 8026446:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 802644a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802644e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8026452:	fb05 2201 	mla	r2, r5, r1, r2
 8026456:	ea4b 0000 	orr.w	r0, fp, r0
 802645a:	fb0c 2200 	mla	r2, ip, r0, r2
 802645e:	0d57      	lsrs	r7, r2, #21
 8026460:	0952      	lsrs	r2, r2, #5
 8026462:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8026466:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802646a:	433a      	orrs	r2, r7
 802646c:	2bff      	cmp	r3, #255	; 0xff
 802646e:	b292      	uxth	r2, r2
 8026470:	d127      	bne.n	80264c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 8026472:	f8ae 2000 	strh.w	r2, [lr]
 8026476:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8026478:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 802647a:	4413      	add	r3, r2
 802647c:	931d      	str	r3, [sp, #116]	; 0x74
 802647e:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8026480:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026482:	441a      	add	r2, r3
 8026484:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8026486:	921e      	str	r2, [sp, #120]	; 0x78
 8026488:	3b01      	subs	r3, #1
 802648a:	f10e 0e02 	add.w	lr, lr, #2
 802648e:	930f      	str	r3, [sp, #60]	; 0x3c
 8026490:	e627      	b.n	80260e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8026492:	fb08 f000 	mul.w	r0, r8, r0
 8026496:	fb09 0303 	mla	r3, r9, r3, r0
 802649a:	e71b      	b.n	80262d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 802649c:	46b9      	mov	r9, r7
 802649e:	e743      	b.n	8026328 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 80264a0:	f1c2 0110 	rsb	r1, r2, #16
 80264a4:	437a      	muls	r2, r7
 80264a6:	fb09 2901 	mla	r9, r9, r1, r2
 80264aa:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80264ae:	ea4f 5059 	mov.w	r0, r9, lsr #21
 80264b2:	ea4f 1259 	mov.w	r2, r9, lsr #5
 80264b6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80264ba:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80264be:	4302      	orrs	r2, r0
 80264c0:	e7d4      	b.n	802646c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 80264c2:	f8be 7000 	ldrh.w	r7, [lr]
 80264c6:	4c1c      	ldr	r4, [pc, #112]	; (8026538 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 80264c8:	43db      	mvns	r3, r3
 80264ca:	1238      	asrs	r0, r7, #8
 80264cc:	fa5f fc83 	uxtb.w	ip, r3
 80264d0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80264d4:	10fd      	asrs	r5, r7, #3
 80264d6:	fb00 f00c 	mul.w	r0, r0, ip
 80264da:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80264de:	fb05 f10c 	mul.w	r1, r5, ip
 80264e2:	1c45      	adds	r5, r0, #1
 80264e4:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 80264e8:	1215      	asrs	r5, r2, #8
 80264ea:	f025 0507 	bic.w	r5, r5, #7
 80264ee:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 80264f2:	1c4d      	adds	r5, r1, #1
 80264f4:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 80264f8:	10d1      	asrs	r1, r2, #3
 80264fa:	f021 0103 	bic.w	r1, r1, #3
 80264fe:	00fb      	lsls	r3, r7, #3
 8026500:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8026504:	b2db      	uxtb	r3, r3
 8026506:	b2c0      	uxtb	r0, r0
 8026508:	00c9      	lsls	r1, r1, #3
 802650a:	fb03 f30c 	mul.w	r3, r3, ip
 802650e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8026512:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 8026516:	4308      	orrs	r0, r1
 8026518:	1c59      	adds	r1, r3, #1
 802651a:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 802651e:	00d2      	lsls	r2, r2, #3
 8026520:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8026524:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8026528:	4318      	orrs	r0, r3
 802652a:	f8ae 0000 	strh.w	r0, [lr]
 802652e:	e7a2      	b.n	8026476 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 8026530:	b013      	add	sp, #76	; 0x4c
 8026532:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026536:	bf00      	nop
 8026538:	fffff800 	.word	0xfffff800

0802653c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 802653c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8026540:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 8026544:	fb05 4c03 	mla	ip, r5, r3, r4
 8026548:	2d00      	cmp	r5, #0
 802654a:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 802654e:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 8026552:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8026556:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 802655a:	8808      	ldrh	r0, [r1, #0]
 802655c:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 8026560:	f2c0 80a7 	blt.w	80266b2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8026564:	45aa      	cmp	sl, r5
 8026566:	f340 80a4 	ble.w	80266b2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 802656a:	2c00      	cmp	r4, #0
 802656c:	f2c0 809f 	blt.w	80266ae <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8026570:	42a3      	cmp	r3, r4
 8026572:	f340 809c 	ble.w	80266ae <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8026576:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 802657a:	1c62      	adds	r2, r4, #1
 802657c:	f100 809c 	bmi.w	80266b8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8026580:	4293      	cmp	r3, r2
 8026582:	f340 8099 	ble.w	80266b8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8026586:	f1b9 0f00 	cmp.w	r9, #0
 802658a:	f000 8095 	beq.w	80266b8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 802658e:	f8be c002 	ldrh.w	ip, [lr, #2]
 8026592:	3501      	adds	r5, #1
 8026594:	f100 8094 	bmi.w	80266c0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8026598:	45aa      	cmp	sl, r5
 802659a:	f340 8091 	ble.w	80266c0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 802659e:	2f00      	cmp	r7, #0
 80265a0:	f000 808e 	beq.w	80266c0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 80265a4:	2c00      	cmp	r4, #0
 80265a6:	f2c0 8089 	blt.w	80266bc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 80265aa:	42a3      	cmp	r3, r4
 80265ac:	f340 8086 	ble.w	80266bc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 80265b0:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 80265b4:	3401      	adds	r4, #1
 80265b6:	f100 8086 	bmi.w	80266c6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 80265ba:	42a3      	cmp	r3, r4
 80265bc:	f340 8083 	ble.w	80266c6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 80265c0:	f1b9 0f00 	cmp.w	r9, #0
 80265c4:	d07f      	beq.n	80266c6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 80265c6:	3301      	adds	r3, #1
 80265c8:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 80265cc:	ea4f 4408 	mov.w	r4, r8, lsl #16
 80265d0:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80265d4:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 80265d8:	fb19 fe07 	smulbb	lr, r9, r7
 80265dc:	ea44 0808 	orr.w	r8, r4, r8
 80265e0:	ea4f 440c 	mov.w	r4, ip, lsl #16
 80265e4:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 80265e8:	f1c7 0210 	rsb	r2, r7, #16
 80265ec:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80265f0:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80265f4:	ea44 0c0c 	orr.w	ip, r4, ip
 80265f8:	eba2 0209 	sub.w	r2, r2, r9
 80265fc:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8026600:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8026604:	fb04 f40c 	mul.w	r4, r4, ip
 8026608:	fb02 4808 	mla	r8, r2, r8, r4
 802660c:	041a      	lsls	r2, r3, #16
 802660e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8026612:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8026616:	4313      	orrs	r3, r2
 8026618:	042a      	lsls	r2, r5, #16
 802661a:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 802661e:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8026622:	fb0e 8303 	mla	r3, lr, r3, r8
 8026626:	432a      	orrs	r2, r5
 8026628:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 802662c:	fb07 3202 	mla	r2, r7, r2, r3
 8026630:	0d53      	lsrs	r3, r2, #21
 8026632:	0952      	lsrs	r2, r2, #5
 8026634:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8026638:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802663c:	431a      	orrs	r2, r3
 802663e:	b293      	uxth	r3, r2
 8026640:	b2b4      	uxth	r4, r6
 8026642:	1202      	asrs	r2, r0, #8
 8026644:	43f6      	mvns	r6, r6
 8026646:	b2f6      	uxtb	r6, r6
 8026648:	121d      	asrs	r5, r3, #8
 802664a:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 802664e:	fb12 f206 	smulbb	r2, r2, r6
 8026652:	10c7      	asrs	r7, r0, #3
 8026654:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8026658:	00c0      	lsls	r0, r0, #3
 802665a:	fb05 2504 	mla	r5, r5, r4, r2
 802665e:	b2c0      	uxtb	r0, r0
 8026660:	10da      	asrs	r2, r3, #3
 8026662:	00db      	lsls	r3, r3, #3
 8026664:	b2db      	uxtb	r3, r3
 8026666:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 802666a:	fb10 f006 	smulbb	r0, r0, r6
 802666e:	b2ad      	uxth	r5, r5
 8026670:	fb03 0004 	mla	r0, r3, r4, r0
 8026674:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8026678:	fb17 f706 	smulbb	r7, r7, r6
 802667c:	b280      	uxth	r0, r0
 802667e:	1c6b      	adds	r3, r5, #1
 8026680:	fb02 7204 	mla	r2, r2, r4, r7
 8026684:	b292      	uxth	r2, r2
 8026686:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802668a:	1c43      	adds	r3, r0, #1
 802668c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8026690:	1c50      	adds	r0, r2, #1
 8026692:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8026696:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 802669a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802669e:	0952      	lsrs	r2, r2, #5
 80266a0:	432b      	orrs	r3, r5
 80266a2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80266a6:	4313      	orrs	r3, r2
 80266a8:	800b      	strh	r3, [r1, #0]
 80266aa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80266ae:	4680      	mov	r8, r0
 80266b0:	e763      	b.n	802657a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 80266b2:	4684      	mov	ip, r0
 80266b4:	4680      	mov	r8, r0
 80266b6:	e76c      	b.n	8026592 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 80266b8:	4684      	mov	ip, r0
 80266ba:	e76a      	b.n	8026592 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 80266bc:	4605      	mov	r5, r0
 80266be:	e779      	b.n	80265b4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 80266c0:	4603      	mov	r3, r0
 80266c2:	4605      	mov	r5, r0
 80266c4:	e782      	b.n	80265cc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 80266c6:	4603      	mov	r3, r0
 80266c8:	e780      	b.n	80265cc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

080266ca <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80266ca:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80266ce:	b093      	sub	sp, #76	; 0x4c
 80266d0:	461d      	mov	r5, r3
 80266d2:	9210      	str	r2, [sp, #64]	; 0x40
 80266d4:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80266d6:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 80266da:	920b      	str	r2, [sp, #44]	; 0x2c
 80266dc:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 80266e0:	910a      	str	r1, [sp, #40]	; 0x28
 80266e2:	6859      	ldr	r1, [r3, #4]
 80266e4:	681b      	ldr	r3, [r3, #0]
 80266e6:	9011      	str	r0, [sp, #68]	; 0x44
 80266e8:	fb01 2707 	mla	r7, r1, r7, r2
 80266ec:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 80266f0:	9307      	str	r3, [sp, #28]
 80266f2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80266f4:	681b      	ldr	r3, [r3, #0]
 80266f6:	9309      	str	r3, [sp, #36]	; 0x24
 80266f8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80266fa:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 80266fe:	43db      	mvns	r3, r3
 8026700:	b2db      	uxtb	r3, r3
 8026702:	9308      	str	r3, [sp, #32]
 8026704:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8026706:	2b00      	cmp	r3, #0
 8026708:	dc03      	bgt.n	8026712 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 802670a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 802670c:	2b00      	cmp	r3, #0
 802670e:	f340 8203 	ble.w	8026b18 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8026712:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026714:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8026718:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802671c:	1e48      	subs	r0, r1, #1
 802671e:	f102 3cff 	add.w	ip, r2, #4294967295
 8026722:	2d00      	cmp	r5, #0
 8026724:	f340 80da 	ble.w	80268dc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8026728:	ea5f 4e24 	movs.w	lr, r4, asr #16
 802672c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8026730:	d406      	bmi.n	8026740 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8026732:	4586      	cmp	lr, r0
 8026734:	da04      	bge.n	8026740 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8026736:	2b00      	cmp	r3, #0
 8026738:	db02      	blt.n	8026740 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 802673a:	4563      	cmp	r3, ip
 802673c:	f2c0 80cf 	blt.w	80268de <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8026740:	f11e 0e01 	adds.w	lr, lr, #1
 8026744:	f100 80c1 	bmi.w	80268ca <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8026748:	4571      	cmp	r1, lr
 802674a:	f2c0 80be 	blt.w	80268ca <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 802674e:	3301      	adds	r3, #1
 8026750:	f100 80bb 	bmi.w	80268ca <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8026754:	429a      	cmp	r2, r3
 8026756:	f2c0 80b8 	blt.w	80268ca <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 802675a:	f8dd 801c 	ldr.w	r8, [sp, #28]
 802675e:	46a9      	mov	r9, r5
 8026760:	f1b9 0f00 	cmp.w	r9, #0
 8026764:	f340 80d8 	ble.w	8026918 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 8026768:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802676a:	1421      	asrs	r1, r4, #16
 802676c:	ea4f 4026 	mov.w	r0, r6, asr #16
 8026770:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8026774:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8026778:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 802677c:	f100 8111 	bmi.w	80269a2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8026780:	f10e 3aff 	add.w	sl, lr, #4294967295
 8026784:	4551      	cmp	r1, sl
 8026786:	f280 810c 	bge.w	80269a2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 802678a:	2800      	cmp	r0, #0
 802678c:	f2c0 8109 	blt.w	80269a2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8026790:	f103 3aff 	add.w	sl, r3, #4294967295
 8026794:	4550      	cmp	r0, sl
 8026796:	f280 8104 	bge.w	80269a2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 802679a:	fa0f f38e 	sxth.w	r3, lr
 802679e:	fb00 1103 	mla	r1, r0, r3, r1
 80267a2:	9809      	ldr	r0, [sp, #36]	; 0x24
 80267a4:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 80267a8:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 80267ac:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 80267b0:	f1bc 0f00 	cmp.w	ip, #0
 80267b4:	d007      	beq.n	80267c6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 80267b6:	005b      	lsls	r3, r3, #1
 80267b8:	eb0a 0003 	add.w	r0, sl, r3
 80267bc:	f83a 3003 	ldrh.w	r3, [sl, r3]
 80267c0:	930c      	str	r3, [sp, #48]	; 0x30
 80267c2:	8843      	ldrh	r3, [r0, #2]
 80267c4:	930d      	str	r3, [sp, #52]	; 0x34
 80267c6:	ea4f 400e 	mov.w	r0, lr, lsl #16
 80267ca:	fb12 f30c 	smulbb	r3, r2, ip
 80267ce:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80267d2:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80267d6:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80267da:	10db      	asrs	r3, r3, #3
 80267dc:	ea40 000e 	orr.w	r0, r0, lr
 80267e0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80267e4:	f1cc 0e10 	rsb	lr, ip, #16
 80267e8:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80267ec:	ebae 0e02 	sub.w	lr, lr, r2
 80267f0:	ea4a 0101 	orr.w	r1, sl, r1
 80267f4:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 80267f8:	4351      	muls	r1, r2
 80267fa:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80267fc:	9f08      	ldr	r7, [sp, #32]
 80267fe:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8026802:	fb0e 1e00 	mla	lr, lr, r0, r1
 8026806:	0410      	lsls	r0, r2, #16
 8026808:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 802680c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8026810:	4310      	orrs	r0, r2
 8026812:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8026814:	990c      	ldr	r1, [sp, #48]	; 0x30
 8026816:	0412      	lsls	r2, r2, #16
 8026818:	fb03 e000 	mla	r0, r3, r0, lr
 802681c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8026820:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8026824:	ea42 020e 	orr.w	r2, r2, lr
 8026828:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 802682c:	fb03 0302 	mla	r3, r3, r2, r0
 8026830:	0d5a      	lsrs	r2, r3, #21
 8026832:	095b      	lsrs	r3, r3, #5
 8026834:	f8b8 0000 	ldrh.w	r0, [r8]
 8026838:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802683c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8026840:	4313      	orrs	r3, r2
 8026842:	b29b      	uxth	r3, r3
 8026844:	1201      	asrs	r1, r0, #8
 8026846:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 802684a:	ea4f 2c23 	mov.w	ip, r3, asr #8
 802684e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8026852:	fb11 f107 	smulbb	r1, r1, r7
 8026856:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 802685a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 802685e:	00c0      	lsls	r0, r0, #3
 8026860:	fb0c 1c02 	mla	ip, ip, r2, r1
 8026864:	b2c0      	uxtb	r0, r0
 8026866:	10d9      	asrs	r1, r3, #3
 8026868:	00db      	lsls	r3, r3, #3
 802686a:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 802686e:	b2db      	uxtb	r3, r3
 8026870:	fb10 f007 	smulbb	r0, r0, r7
 8026874:	fa1f fc8c 	uxth.w	ip, ip
 8026878:	fb03 0302 	mla	r3, r3, r2, r0
 802687c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8026880:	fb1e fe07 	smulbb	lr, lr, r7
 8026884:	fb01 e102 	mla	r1, r1, r2, lr
 8026888:	b29a      	uxth	r2, r3
 802688a:	f10c 0301 	add.w	r3, ip, #1
 802688e:	b289      	uxth	r1, r1
 8026890:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8026894:	1c53      	adds	r3, r2, #1
 8026896:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802689a:	1c4a      	adds	r2, r1, #1
 802689c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80268a0:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80268a4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80268a8:	0949      	lsrs	r1, r1, #5
 80268aa:	ea43 030c 	orr.w	r3, r3, ip
 80268ae:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80268b2:	430b      	orrs	r3, r1
 80268b4:	f8a8 3000 	strh.w	r3, [r8]
 80268b8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80268ba:	441c      	add	r4, r3
 80268bc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80268be:	f108 0802 	add.w	r8, r8, #2
 80268c2:	441e      	add	r6, r3
 80268c4:	f109 39ff 	add.w	r9, r9, #4294967295
 80268c8:	e74a      	b.n	8026760 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80268ca:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80268cc:	441c      	add	r4, r3
 80268ce:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80268d0:	441e      	add	r6, r3
 80268d2:	9b07      	ldr	r3, [sp, #28]
 80268d4:	3302      	adds	r3, #2
 80268d6:	3d01      	subs	r5, #1
 80268d8:	9307      	str	r3, [sp, #28]
 80268da:	e722      	b.n	8026722 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80268dc:	d022      	beq.n	8026924 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 80268de:	981f      	ldr	r0, [sp, #124]	; 0x7c
 80268e0:	1e6b      	subs	r3, r5, #1
 80268e2:	fb00 4003 	mla	r0, r0, r3, r4
 80268e6:	1400      	asrs	r0, r0, #16
 80268e8:	f53f af37 	bmi.w	802675a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80268ec:	3901      	subs	r1, #1
 80268ee:	4288      	cmp	r0, r1
 80268f0:	f6bf af33 	bge.w	802675a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80268f4:	9920      	ldr	r1, [sp, #128]	; 0x80
 80268f6:	fb01 6303 	mla	r3, r1, r3, r6
 80268fa:	141b      	asrs	r3, r3, #16
 80268fc:	f53f af2d 	bmi.w	802675a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8026900:	3a01      	subs	r2, #1
 8026902:	4293      	cmp	r3, r2
 8026904:	f6bf af29 	bge.w	802675a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8026908:	f8dd 901c 	ldr.w	r9, [sp, #28]
 802690c:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 8026910:	46a8      	mov	r8, r5
 8026912:	f1b8 0f00 	cmp.w	r8, #0
 8026916:	dc5e      	bgt.n	80269d6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8026918:	9b07      	ldr	r3, [sp, #28]
 802691a:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 802691e:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8026922:	9307      	str	r3, [sp, #28]
 8026924:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8026926:	2b00      	cmp	r3, #0
 8026928:	f340 80f6 	ble.w	8026b18 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 802692c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8026930:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8026934:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8026938:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802693a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802693e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8026942:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8026946:	eef0 6a62 	vmov.f32	s13, s5
 802694a:	ee61 7a27 	vmul.f32	s15, s2, s15
 802694e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026952:	ee77 2a62 	vsub.f32	s5, s14, s5
 8026956:	ee16 4a90 	vmov	r4, s13
 802695a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802695e:	eef0 6a43 	vmov.f32	s13, s6
 8026962:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8026966:	ee12 2a90 	vmov	r2, s5
 802696a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802696e:	fb92 f3f3 	sdiv	r3, r2, r3
 8026972:	ee13 2a10 	vmov	r2, s6
 8026976:	931f      	str	r3, [sp, #124]	; 0x7c
 8026978:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802697a:	fb92 f3f3 	sdiv	r3, r2, r3
 802697e:	9320      	str	r3, [sp, #128]	; 0x80
 8026980:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8026982:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8026984:	3b01      	subs	r3, #1
 8026986:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802698a:	930a      	str	r3, [sp, #40]	; 0x28
 802698c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802698e:	ee16 6a90 	vmov	r6, s13
 8026992:	bf14      	ite	ne
 8026994:	461d      	movne	r5, r3
 8026996:	4615      	moveq	r5, r2
 8026998:	eeb0 3a67 	vmov.f32	s6, s15
 802699c:	eef0 2a47 	vmov.f32	s5, s14
 80269a0:	e6b0      	b.n	8026704 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80269a2:	f111 0a01 	adds.w	sl, r1, #1
 80269a6:	d487      	bmi.n	80268b8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80269a8:	45d6      	cmp	lr, sl
 80269aa:	db85      	blt.n	80268b8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80269ac:	f110 0a01 	adds.w	sl, r0, #1
 80269b0:	d482      	bmi.n	80268b8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80269b2:	4553      	cmp	r3, sl
 80269b4:	db80      	blt.n	80268b8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80269b6:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 80269b8:	9101      	str	r1, [sp, #4]
 80269ba:	b21b      	sxth	r3, r3
 80269bc:	e9cd 0202 	strd	r0, r2, [sp, #8]
 80269c0:	9300      	str	r3, [sp, #0]
 80269c2:	e9cd c704 	strd	ip, r7, [sp, #16]
 80269c6:	fa0f f38e 	sxth.w	r3, lr
 80269ca:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80269cc:	9811      	ldr	r0, [sp, #68]	; 0x44
 80269ce:	4641      	mov	r1, r8
 80269d0:	f7ff fdb4 	bl	802653c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 80269d4:	e770      	b.n	80268b8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80269d6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80269d8:	9f09      	ldr	r7, [sp, #36]	; 0x24
 80269da:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80269de:	1430      	asrs	r0, r6, #16
 80269e0:	1423      	asrs	r3, r4, #16
 80269e2:	fb01 3000 	mla	r0, r1, r0, r3
 80269e6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80269e8:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 80269ec:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 80269f0:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 80269f4:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80269f8:	8858      	ldrh	r0, [r3, #2]
 80269fa:	f1be 0f00 	cmp.w	lr, #0
 80269fe:	d00b      	beq.n	8026a18 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 8026a00:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8026a04:	3901      	subs	r1, #1
 8026a06:	0049      	lsls	r1, r1, #1
 8026a08:	3102      	adds	r1, #2
 8026a0a:	eb03 0b01 	add.w	fp, r3, r1
 8026a0e:	5a5b      	ldrh	r3, [r3, r1]
 8026a10:	930e      	str	r3, [sp, #56]	; 0x38
 8026a12:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8026a16:	930f      	str	r3, [sp, #60]	; 0x3c
 8026a18:	ea4f 410c 	mov.w	r1, ip, lsl #16
 8026a1c:	fb12 f30e 	smulbb	r3, r2, lr
 8026a20:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8026a24:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8026a28:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 8026a2c:	10db      	asrs	r3, r3, #3
 8026a2e:	ea41 010c 	orr.w	r1, r1, ip
 8026a32:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8026a36:	f1ce 0c10 	rsb	ip, lr, #16
 8026a3a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8026a3e:	ebac 0c02 	sub.w	ip, ip, r2
 8026a42:	ea4b 0000 	orr.w	r0, fp, r0
 8026a46:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8026a4a:	4350      	muls	r0, r2
 8026a4c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8026a4e:	9f08      	ldr	r7, [sp, #32]
 8026a50:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8026a54:	fb0c 0c01 	mla	ip, ip, r1, r0
 8026a58:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8026a5c:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 8026a60:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8026a62:	980e      	ldr	r0, [sp, #56]	; 0x38
 8026a64:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8026a68:	0412      	lsls	r2, r2, #16
 8026a6a:	ea4b 0101 	orr.w	r1, fp, r1
 8026a6e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8026a72:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8026a76:	fb03 c101 	mla	r1, r3, r1, ip
 8026a7a:	4302      	orrs	r2, r0
 8026a7c:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8026a80:	fb03 1202 	mla	r2, r3, r2, r1
 8026a84:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 8026a88:	0952      	lsrs	r2, r2, #5
 8026a8a:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 8026a8e:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8026a92:	f8b9 2000 	ldrh.w	r2, [r9]
 8026a96:	ea4b 0303 	orr.w	r3, fp, r3
 8026a9a:	b29b      	uxth	r3, r3
 8026a9c:	1211      	asrs	r1, r2, #8
 8026a9e:	1218      	asrs	r0, r3, #8
 8026aa0:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8026aa4:	fb11 f107 	smulbb	r1, r1, r7
 8026aa8:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8026aac:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8026ab0:	00d2      	lsls	r2, r2, #3
 8026ab2:	fb00 100a 	mla	r0, r0, sl, r1
 8026ab6:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8026aba:	10d9      	asrs	r1, r3, #3
 8026abc:	b2d2      	uxtb	r2, r2
 8026abe:	00db      	lsls	r3, r3, #3
 8026ac0:	fb1c fc07 	smulbb	ip, ip, r7
 8026ac4:	fb12 f207 	smulbb	r2, r2, r7
 8026ac8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8026acc:	b2db      	uxtb	r3, r3
 8026ace:	b280      	uxth	r0, r0
 8026ad0:	fb01 c10a 	mla	r1, r1, sl, ip
 8026ad4:	fb03 230a 	mla	r3, r3, sl, r2
 8026ad8:	b29b      	uxth	r3, r3
 8026ada:	b289      	uxth	r1, r1
 8026adc:	1c42      	adds	r2, r0, #1
 8026ade:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8026ae2:	f101 0c01 	add.w	ip, r1, #1
 8026ae6:	1c5a      	adds	r2, r3, #1
 8026ae8:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8026aec:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8026af0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8026af2:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8026af6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8026afa:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8026afe:	4310      	orrs	r0, r2
 8026b00:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8026b04:	441c      	add	r4, r3
 8026b06:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026b08:	ea40 000c 	orr.w	r0, r0, ip
 8026b0c:	f829 0b02 	strh.w	r0, [r9], #2
 8026b10:	441e      	add	r6, r3
 8026b12:	f108 38ff 	add.w	r8, r8, #4294967295
 8026b16:	e6fc      	b.n	8026912 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 8026b18:	b013      	add	sp, #76	; 0x4c
 8026b1a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08026b1e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 8026b1e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8026b22:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 8026b26:	fb0e 4703 	mla	r7, lr, r3, r4
 8026b2a:	f1be 0f00 	cmp.w	lr, #0
 8026b2e:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 8026b32:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 8026b36:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 8026b3a:	8808      	ldrh	r0, [r1, #0]
 8026b3c:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 8026b40:	db60      	blt.n	8026c04 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8026b42:	45f1      	cmp	r9, lr
 8026b44:	dd5e      	ble.n	8026c04 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8026b46:	2c00      	cmp	r4, #0
 8026b48:	db5a      	blt.n	8026c00 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8026b4a:	42a3      	cmp	r3, r4
 8026b4c:	dd58      	ble.n	8026c00 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8026b4e:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 8026b52:	1c62      	adds	r2, r4, #1
 8026b54:	d459      	bmi.n	8026c0a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8026b56:	4293      	cmp	r3, r2
 8026b58:	dd57      	ble.n	8026c0a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8026b5a:	2d00      	cmp	r5, #0
 8026b5c:	d055      	beq.n	8026c0a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8026b5e:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 8026b62:	f11e 0e01 	adds.w	lr, lr, #1
 8026b66:	d454      	bmi.n	8026c12 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8026b68:	45f1      	cmp	r9, lr
 8026b6a:	dd52      	ble.n	8026c12 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8026b6c:	2e00      	cmp	r6, #0
 8026b6e:	d050      	beq.n	8026c12 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8026b70:	2c00      	cmp	r4, #0
 8026b72:	db4c      	blt.n	8026c0e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8026b74:	42a3      	cmp	r3, r4
 8026b76:	dd4a      	ble.n	8026c0e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8026b78:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 8026b7c:	3401      	adds	r4, #1
 8026b7e:	d405      	bmi.n	8026b8c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8026b80:	42a3      	cmp	r3, r4
 8026b82:	dd03      	ble.n	8026b8c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8026b84:	b115      	cbz	r5, 8026b8c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8026b86:	3301      	adds	r3, #1
 8026b88:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 8026b8c:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8026b90:	fb15 f406 	smulbb	r4, r5, r6
 8026b94:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8026b98:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8026b9c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8026ba0:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8026ba4:	ea43 0c0c 	orr.w	ip, r3, ip
 8026ba8:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8026bac:	f1c6 0310 	rsb	r3, r6, #16
 8026bb0:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8026bb4:	1b5b      	subs	r3, r3, r5
 8026bb6:	ea4e 0707 	orr.w	r7, lr, r7
 8026bba:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8026bbe:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8026bc2:	437d      	muls	r5, r7
 8026bc4:	fb03 5c0c 	mla	ip, r3, ip, r5
 8026bc8:	0403      	lsls	r3, r0, #16
 8026bca:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8026bce:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8026bd2:	4318      	orrs	r0, r3
 8026bd4:	0413      	lsls	r3, r2, #16
 8026bd6:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8026bda:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8026bde:	4313      	orrs	r3, r2
 8026be0:	fb04 c000 	mla	r0, r4, r0, ip
 8026be4:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8026be8:	fb06 0003 	mla	r0, r6, r3, r0
 8026bec:	0d43      	lsrs	r3, r0, #21
 8026bee:	0940      	lsrs	r0, r0, #5
 8026bf0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8026bf4:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8026bf8:	4318      	orrs	r0, r3
 8026bfa:	8008      	strh	r0, [r1, #0]
 8026bfc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8026c00:	4684      	mov	ip, r0
 8026c02:	e7a6      	b.n	8026b52 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 8026c04:	4607      	mov	r7, r0
 8026c06:	4684      	mov	ip, r0
 8026c08:	e7ab      	b.n	8026b62 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8026c0a:	4607      	mov	r7, r0
 8026c0c:	e7a9      	b.n	8026b62 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8026c0e:	4602      	mov	r2, r0
 8026c10:	e7b4      	b.n	8026b7c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 8026c12:	4602      	mov	r2, r0
 8026c14:	e7ba      	b.n	8026b8c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

08026c16 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8026c16:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026c1a:	b08f      	sub	sp, #60	; 0x3c
 8026c1c:	461d      	mov	r5, r3
 8026c1e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8026c20:	920c      	str	r2, [sp, #48]	; 0x30
 8026c22:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 8026c26:	9107      	str	r1, [sp, #28]
 8026c28:	6859      	ldr	r1, [r3, #4]
 8026c2a:	681b      	ldr	r3, [r3, #0]
 8026c2c:	900d      	str	r0, [sp, #52]	; 0x34
 8026c2e:	fb01 2707 	mla	r7, r1, r7, r2
 8026c32:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 8026c36:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026c38:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 8026c3c:	f8d3 8000 	ldr.w	r8, [r3]
 8026c40:	9b07      	ldr	r3, [sp, #28]
 8026c42:	2b00      	cmp	r3, #0
 8026c44:	dc03      	bgt.n	8026c4e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8026c46:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8026c48:	2b00      	cmp	r3, #0
 8026c4a:	f340 8181 	ble.w	8026f50 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8026c4e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026c50:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8026c54:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8026c58:	1e48      	subs	r0, r1, #1
 8026c5a:	f102 3cff 	add.w	ip, r2, #4294967295
 8026c5e:	2d00      	cmp	r5, #0
 8026c60:	f340 809b 	ble.w	8026d9a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 8026c64:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8026c68:	ea4f 4326 	mov.w	r3, r6, asr #16
 8026c6c:	d406      	bmi.n	8026c7c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8026c6e:	4586      	cmp	lr, r0
 8026c70:	da04      	bge.n	8026c7c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8026c72:	2b00      	cmp	r3, #0
 8026c74:	db02      	blt.n	8026c7c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8026c76:	4563      	cmp	r3, ip
 8026c78:	f2c0 8090 	blt.w	8026d9c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8026c7c:	f11e 0e01 	adds.w	lr, lr, #1
 8026c80:	f100 8084 	bmi.w	8026d8c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8026c84:	4571      	cmp	r1, lr
 8026c86:	f2c0 8081 	blt.w	8026d8c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8026c8a:	3301      	adds	r3, #1
 8026c8c:	d47e      	bmi.n	8026d8c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8026c8e:	429a      	cmp	r2, r3
 8026c90:	db7c      	blt.n	8026d8c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8026c92:	46aa      	mov	sl, r5
 8026c94:	46b9      	mov	r9, r7
 8026c96:	f1ba 0f00 	cmp.w	sl, #0
 8026c9a:	f340 8099 	ble.w	8026dd0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8026c9e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026ca0:	1421      	asrs	r1, r4, #16
 8026ca2:	ea4f 4026 	mov.w	r0, r6, asr #16
 8026ca6:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8026caa:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8026cae:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8026cb2:	f100 80d0 	bmi.w	8026e56 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8026cb6:	f10e 3bff 	add.w	fp, lr, #4294967295
 8026cba:	4559      	cmp	r1, fp
 8026cbc:	f280 80cb 	bge.w	8026e56 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8026cc0:	2800      	cmp	r0, #0
 8026cc2:	f2c0 80c8 	blt.w	8026e56 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8026cc6:	f103 3bff 	add.w	fp, r3, #4294967295
 8026cca:	4558      	cmp	r0, fp
 8026ccc:	f280 80c3 	bge.w	8026e56 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8026cd0:	fa0f fe8e 	sxth.w	lr, lr
 8026cd4:	fb00 110e 	mla	r1, r0, lr, r1
 8026cd8:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8026cdc:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 8026ce0:	8841      	ldrh	r1, [r0, #2]
 8026ce2:	f1bc 0f00 	cmp.w	ip, #0
 8026ce6:	d00b      	beq.n	8026d00 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 8026ce8:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 8026cec:	3b01      	subs	r3, #1
 8026cee:	005b      	lsls	r3, r3, #1
 8026cf0:	3302      	adds	r3, #2
 8026cf2:	eb00 0e03 	add.w	lr, r0, r3
 8026cf6:	5ac3      	ldrh	r3, [r0, r3]
 8026cf8:	9308      	str	r3, [sp, #32]
 8026cfa:	f8be 3002 	ldrh.w	r3, [lr, #2]
 8026cfe:	9309      	str	r3, [sp, #36]	; 0x24
 8026d00:	ea4f 400b 	mov.w	r0, fp, lsl #16
 8026d04:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8026d08:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8026d0c:	ea40 000b 	orr.w	r0, r0, fp
 8026d10:	fb12 f30c 	smulbb	r3, r2, ip
 8026d14:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8026d18:	10db      	asrs	r3, r3, #3
 8026d1a:	f1cc 0e10 	rsb	lr, ip, #16
 8026d1e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8026d22:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8026d26:	ebae 0e02 	sub.w	lr, lr, r2
 8026d2a:	ea4b 0101 	orr.w	r1, fp, r1
 8026d2e:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8026d32:	4351      	muls	r1, r2
 8026d34:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8026d36:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8026d3a:	fb0e 1e00 	mla	lr, lr, r0, r1
 8026d3e:	0410      	lsls	r0, r2, #16
 8026d40:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8026d44:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8026d48:	4310      	orrs	r0, r2
 8026d4a:	9a08      	ldr	r2, [sp, #32]
 8026d4c:	9908      	ldr	r1, [sp, #32]
 8026d4e:	0412      	lsls	r2, r2, #16
 8026d50:	fb03 e000 	mla	r0, r3, r0, lr
 8026d54:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8026d58:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8026d5c:	ea42 020e 	orr.w	r2, r2, lr
 8026d60:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8026d64:	fb03 0302 	mla	r3, r3, r2, r0
 8026d68:	0d5a      	lsrs	r2, r3, #21
 8026d6a:	095b      	lsrs	r3, r3, #5
 8026d6c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8026d70:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8026d74:	4313      	orrs	r3, r2
 8026d76:	f8a9 3000 	strh.w	r3, [r9]
 8026d7a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8026d7c:	441c      	add	r4, r3
 8026d7e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8026d80:	f109 0902 	add.w	r9, r9, #2
 8026d84:	441e      	add	r6, r3
 8026d86:	f10a 3aff 	add.w	sl, sl, #4294967295
 8026d8a:	e784      	b.n	8026c96 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8026d8c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8026d8e:	441c      	add	r4, r3
 8026d90:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8026d92:	3d01      	subs	r5, #1
 8026d94:	441e      	add	r6, r3
 8026d96:	3702      	adds	r7, #2
 8026d98:	e761      	b.n	8026c5e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8026d9a:	d01d      	beq.n	8026dd8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8026d9c:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8026d9e:	1e6b      	subs	r3, r5, #1
 8026da0:	fb00 4003 	mla	r0, r0, r3, r4
 8026da4:	1400      	asrs	r0, r0, #16
 8026da6:	f53f af74 	bmi.w	8026c92 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8026daa:	3901      	subs	r1, #1
 8026dac:	4288      	cmp	r0, r1
 8026dae:	f6bf af70 	bge.w	8026c92 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8026db2:	991c      	ldr	r1, [sp, #112]	; 0x70
 8026db4:	fb01 6303 	mla	r3, r1, r3, r6
 8026db8:	141b      	asrs	r3, r3, #16
 8026dba:	f53f af6a 	bmi.w	8026c92 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8026dbe:	3a01      	subs	r2, #1
 8026dc0:	4293      	cmp	r3, r2
 8026dc2:	f6bf af66 	bge.w	8026c92 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8026dc6:	46a9      	mov	r9, r5
 8026dc8:	46ba      	mov	sl, r7
 8026dca:	f1b9 0f00 	cmp.w	r9, #0
 8026dce:	dc5a      	bgt.n	8026e86 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 8026dd0:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8026dd4:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 8026dd8:	9b07      	ldr	r3, [sp, #28]
 8026dda:	2b00      	cmp	r3, #0
 8026ddc:	f340 80b8 	ble.w	8026f50 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8026de0:	ee30 0a04 	vadd.f32	s0, s0, s8
 8026de4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8026de8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8026dec:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8026dee:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8026df2:	ee31 1a05 	vadd.f32	s2, s2, s10
 8026df6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8026dfa:	eef0 6a62 	vmov.f32	s13, s5
 8026dfe:	ee61 7a27 	vmul.f32	s15, s2, s15
 8026e02:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026e06:	ee77 2a62 	vsub.f32	s5, s14, s5
 8026e0a:	ee16 4a90 	vmov	r4, s13
 8026e0e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8026e12:	eef0 6a43 	vmov.f32	s13, s6
 8026e16:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8026e1a:	ee12 2a90 	vmov	r2, s5
 8026e1e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8026e22:	fb92 f3f3 	sdiv	r3, r2, r3
 8026e26:	ee13 2a10 	vmov	r2, s6
 8026e2a:	931b      	str	r3, [sp, #108]	; 0x6c
 8026e2c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8026e2e:	fb92 f3f3 	sdiv	r3, r2, r3
 8026e32:	931c      	str	r3, [sp, #112]	; 0x70
 8026e34:	9b07      	ldr	r3, [sp, #28]
 8026e36:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8026e38:	3b01      	subs	r3, #1
 8026e3a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026e3e:	9307      	str	r3, [sp, #28]
 8026e40:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8026e42:	ee16 6a90 	vmov	r6, s13
 8026e46:	bf14      	ite	ne
 8026e48:	461d      	movne	r5, r3
 8026e4a:	4615      	moveq	r5, r2
 8026e4c:	eeb0 3a67 	vmov.f32	s6, s15
 8026e50:	eef0 2a47 	vmov.f32	s5, s14
 8026e54:	e6f4      	b.n	8026c40 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8026e56:	f111 0b01 	adds.w	fp, r1, #1
 8026e5a:	d48e      	bmi.n	8026d7a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8026e5c:	45de      	cmp	lr, fp
 8026e5e:	db8c      	blt.n	8026d7a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8026e60:	f110 0b01 	adds.w	fp, r0, #1
 8026e64:	d489      	bmi.n	8026d7a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8026e66:	455b      	cmp	r3, fp
 8026e68:	db87      	blt.n	8026d7a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8026e6a:	b21b      	sxth	r3, r3
 8026e6c:	e9cd 1001 	strd	r1, r0, [sp, #4]
 8026e70:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 8026e74:	9300      	str	r3, [sp, #0]
 8026e76:	4642      	mov	r2, r8
 8026e78:	fa0f f38e 	sxth.w	r3, lr
 8026e7c:	4649      	mov	r1, r9
 8026e7e:	980d      	ldr	r0, [sp, #52]	; 0x34
 8026e80:	f7ff fe4d 	bl	8026b1e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 8026e84:	e779      	b.n	8026d7a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8026e86:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026e88:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8026e8c:	1420      	asrs	r0, r4, #16
 8026e8e:	1431      	asrs	r1, r6, #16
 8026e90:	fb03 0101 	mla	r1, r3, r1, r0
 8026e94:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8026e98:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8026e9c:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 8026ea0:	8841      	ldrh	r1, [r0, #2]
 8026ea2:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8026ea6:	f1be 0f00 	cmp.w	lr, #0
 8026eaa:	d00b      	beq.n	8026ec4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8026eac:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8026eb0:	3b01      	subs	r3, #1
 8026eb2:	005b      	lsls	r3, r3, #1
 8026eb4:	3302      	adds	r3, #2
 8026eb6:	eb00 0b03 	add.w	fp, r0, r3
 8026eba:	5ac3      	ldrh	r3, [r0, r3]
 8026ebc:	930a      	str	r3, [sp, #40]	; 0x28
 8026ebe:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8026ec2:	930b      	str	r3, [sp, #44]	; 0x2c
 8026ec4:	ea4f 400c 	mov.w	r0, ip, lsl #16
 8026ec8:	fb12 f30e 	smulbb	r3, r2, lr
 8026ecc:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8026ed0:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8026ed4:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8026ed8:	10db      	asrs	r3, r3, #3
 8026eda:	ea40 000c 	orr.w	r0, r0, ip
 8026ede:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8026ee2:	f1ce 0c10 	rsb	ip, lr, #16
 8026ee6:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8026eea:	ebac 0c02 	sub.w	ip, ip, r2
 8026eee:	ea4b 0101 	orr.w	r1, fp, r1
 8026ef2:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8026ef6:	4351      	muls	r1, r2
 8026ef8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8026efa:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8026efe:	fb0c 1c00 	mla	ip, ip, r0, r1
 8026f02:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8026f06:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 8026f0a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8026f0c:	990a      	ldr	r1, [sp, #40]	; 0x28
 8026f0e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8026f12:	0412      	lsls	r2, r2, #16
 8026f14:	ea4b 0000 	orr.w	r0, fp, r0
 8026f18:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8026f1c:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 8026f20:	fb03 c000 	mla	r0, r3, r0, ip
 8026f24:	ea42 0b0b 	orr.w	fp, r2, fp
 8026f28:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8026f2c:	fb03 000b 	mla	r0, r3, fp, r0
 8026f30:	0d43      	lsrs	r3, r0, #21
 8026f32:	0940      	lsrs	r0, r0, #5
 8026f34:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8026f38:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8026f3c:	4318      	orrs	r0, r3
 8026f3e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8026f40:	f82a 0b02 	strh.w	r0, [sl], #2
 8026f44:	441c      	add	r4, r3
 8026f46:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8026f48:	f109 39ff 	add.w	r9, r9, #4294967295
 8026f4c:	441e      	add	r6, r3
 8026f4e:	e73c      	b.n	8026dca <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8026f50:	b00f      	add	sp, #60	; 0x3c
 8026f52:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08026f56 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 8026f56:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026f5a:	b085      	sub	sp, #20
 8026f5c:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 8026f60:	9102      	str	r1, [sp, #8]
 8026f62:	2c00      	cmp	r4, #0
 8026f64:	fb04 7103 	mla	r1, r4, r3, r7
 8026f68:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8026f6c:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8026f70:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8026f74:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8026f78:	f2c0 811b 	blt.w	80271b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8026f7c:	45a6      	cmp	lr, r4
 8026f7e:	f340 8118 	ble.w	80271b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8026f82:	2f00      	cmp	r7, #0
 8026f84:	f2c0 8113 	blt.w	80271ae <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8026f88:	42bb      	cmp	r3, r7
 8026f8a:	f340 8110 	ble.w	80271ae <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8026f8e:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8026f92:	1c7a      	adds	r2, r7, #1
 8026f94:	f100 8110 	bmi.w	80271b8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8026f98:	4293      	cmp	r3, r2
 8026f9a:	f340 810d 	ble.w	80271b8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8026f9e:	2e00      	cmp	r6, #0
 8026fa0:	f000 810c 	beq.w	80271bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 8026fa4:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8026fa8:	3401      	adds	r4, #1
 8026faa:	f100 810b 	bmi.w	80271c4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8026fae:	45a6      	cmp	lr, r4
 8026fb0:	f340 8108 	ble.w	80271c4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8026fb4:	2800      	cmp	r0, #0
 8026fb6:	f000 8108 	beq.w	80271ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 8026fba:	2f00      	cmp	r7, #0
 8026fbc:	f2c0 8100 	blt.w	80271c0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8026fc0:	42bb      	cmp	r3, r7
 8026fc2:	f340 80fd 	ble.w	80271c0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8026fc6:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8026fca:	3701      	adds	r7, #1
 8026fcc:	f100 8100 	bmi.w	80271d0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8026fd0:	42bb      	cmp	r3, r7
 8026fd2:	f340 80fd 	ble.w	80271d0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8026fd6:	2e00      	cmp	r6, #0
 8026fd8:	f000 80fc 	beq.w	80271d4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 8026fdc:	3301      	adds	r3, #1
 8026fde:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 8026fe2:	b2b6      	uxth	r6, r6
 8026fe4:	b280      	uxth	r0, r0
 8026fe6:	fb00 fe06 	mul.w	lr, r0, r6
 8026fea:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8026fee:	0136      	lsls	r6, r6, #4
 8026ff0:	eba6 070e 	sub.w	r7, r6, lr
 8026ff4:	b280      	uxth	r0, r0
 8026ff6:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8026ffa:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8026ffe:	b2bf      	uxth	r7, r7
 8027000:	1a1b      	subs	r3, r3, r0
 8027002:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8027006:	b29b      	uxth	r3, r3
 8027008:	fb0a f607 	mul.w	r6, sl, r7
 802700c:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8027010:	fb0b 6603 	mla	r6, fp, r3, r6
 8027014:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8027018:	fb00 6609 	mla	r6, r0, r9, r6
 802701c:	fb0e 6608 	mla	r6, lr, r8, r6
 8027020:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8027024:	9600      	str	r6, [sp, #0]
 8027026:	2e00      	cmp	r6, #0
 8027028:	f000 80be 	beq.w	80271a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 802702c:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8027030:	fb0b fc0c 	mul.w	ip, fp, ip
 8027034:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8027038:	fb0b f505 	mul.w	r5, fp, r5
 802703c:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8027040:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8027044:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8027048:	44dc      	add	ip, fp
 802704a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802704e:	9501      	str	r5, [sp, #4]
 8027050:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8027054:	9503      	str	r5, [sp, #12]
 8027056:	9d01      	ldr	r5, [sp, #4]
 8027058:	9e02      	ldr	r6, [sp, #8]
 802705a:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 802705e:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8027062:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8027066:	fb0a fc0c 	mul.w	ip, sl, ip
 802706a:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 802706e:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8027072:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8027076:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 802707a:	4465      	add	r5, ip
 802707c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8027080:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8027084:	fb09 fc0c 	mul.w	ip, r9, ip
 8027088:	fb09 f904 	mul.w	r9, r9, r4
 802708c:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8027090:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8027094:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8027098:	fb08 f404 	mul.w	r4, r8, r4
 802709c:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80270a0:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80270a4:	fb08 f802 	mul.w	r8, r8, r2
 80270a8:	fb0a fa01 	mul.w	sl, sl, r1
 80270ac:	0a22      	lsrs	r2, r4, #8
 80270ae:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 80270b2:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80270b6:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 80270ba:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 80270be:	4414      	add	r4, r2
 80270c0:	ea4f 211c 	mov.w	r1, ip, lsr #8
 80270c4:	f508 7280 	add.w	r2, r8, #256	; 0x100
 80270c8:	0a2d      	lsrs	r5, r5, #8
 80270ca:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 80270ce:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80270d2:	9a03      	ldr	r2, [sp, #12]
 80270d4:	8836      	ldrh	r6, [r6, #0]
 80270d6:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 80270da:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80270de:	437d      	muls	r5, r7
 80270e0:	4461      	add	r1, ip
 80270e2:	0a24      	lsrs	r4, r4, #8
 80270e4:	fb02 5503 	mla	r5, r2, r3, r5
 80270e8:	0a09      	lsrs	r1, r1, #8
 80270ea:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80270ee:	fb04 540e 	mla	r4, r4, lr, r5
 80270f2:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 80270f6:	fb01 4100 	mla	r1, r1, r0, r4
 80270fa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80270fe:	0a09      	lsrs	r1, r1, #8
 8027100:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8027104:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8027108:	fb07 f70a 	mul.w	r7, r7, sl
 802710c:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8027110:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8027114:	fb03 7101 	mla	r1, r3, r1, r7
 8027118:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802711c:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8027120:	fb0e 1e08 	mla	lr, lr, r8, r1
 8027124:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8027128:	fb00 e101 	mla	r1, r0, r1, lr
 802712c:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 8027130:	9a00      	ldr	r2, [sp, #0]
 8027132:	b287      	uxth	r7, r0
 8027134:	437a      	muls	r2, r7
 8027136:	0a09      	lsrs	r1, r1, #8
 8027138:	1c53      	adds	r3, r2, #1
 802713a:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 802713e:	4321      	orrs	r1, r4
 8027140:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8027144:	1235      	asrs	r5, r6, #8
 8027146:	0c0a      	lsrs	r2, r1, #16
 8027148:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 802714c:	b2db      	uxtb	r3, r3
 802714e:	fb12 f207 	smulbb	r2, r2, r7
 8027152:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8027156:	fb05 2503 	mla	r5, r5, r3, r2
 802715a:	f3c1 2407 	ubfx	r4, r1, #8, #8
 802715e:	10f2      	asrs	r2, r6, #3
 8027160:	b2c8      	uxtb	r0, r1
 8027162:	00f6      	lsls	r6, r6, #3
 8027164:	fb14 f407 	smulbb	r4, r4, r7
 8027168:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802716c:	b2f6      	uxtb	r6, r6
 802716e:	fb10 f007 	smulbb	r0, r0, r7
 8027172:	fb02 4203 	mla	r2, r2, r3, r4
 8027176:	b2ad      	uxth	r5, r5
 8027178:	fb06 0303 	mla	r3, r6, r3, r0
 802717c:	b299      	uxth	r1, r3
 802717e:	b294      	uxth	r4, r2
 8027180:	1c6b      	adds	r3, r5, #1
 8027182:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8027186:	1c62      	adds	r2, r4, #1
 8027188:	1c4b      	adds	r3, r1, #1
 802718a:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 802718e:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8027192:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8027196:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802719a:	0952      	lsrs	r2, r2, #5
 802719c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80271a0:	432b      	orrs	r3, r5
 80271a2:	4313      	orrs	r3, r2
 80271a4:	9a02      	ldr	r2, [sp, #8]
 80271a6:	8013      	strh	r3, [r2, #0]
 80271a8:	b005      	add	sp, #20
 80271aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80271ae:	2500      	movs	r5, #0
 80271b0:	e6ef      	b.n	8026f92 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 80271b2:	2100      	movs	r1, #0
 80271b4:	460d      	mov	r5, r1
 80271b6:	e6f7      	b.n	8026fa8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 80271b8:	2100      	movs	r1, #0
 80271ba:	e6f5      	b.n	8026fa8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 80271bc:	4631      	mov	r1, r6
 80271be:	e6f3      	b.n	8026fa8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 80271c0:	2400      	movs	r4, #0
 80271c2:	e702      	b.n	8026fca <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 80271c4:	2200      	movs	r2, #0
 80271c6:	4614      	mov	r4, r2
 80271c8:	e70b      	b.n	8026fe2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 80271ca:	4602      	mov	r2, r0
 80271cc:	4604      	mov	r4, r0
 80271ce:	e708      	b.n	8026fe2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 80271d0:	2200      	movs	r2, #0
 80271d2:	e706      	b.n	8026fe2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 80271d4:	4632      	mov	r2, r6
 80271d6:	e704      	b.n	8026fe2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

080271d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80271d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80271dc:	b09d      	sub	sp, #116	; 0x74
 80271de:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 80271e2:	9219      	str	r2, [sp, #100]	; 0x64
 80271e4:	9307      	str	r3, [sp, #28]
 80271e6:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80271e8:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 80271ec:	931a      	str	r3, [sp, #104]	; 0x68
 80271ee:	9117      	str	r1, [sp, #92]	; 0x5c
 80271f0:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 80271f4:	901b      	str	r0, [sp, #108]	; 0x6c
 80271f6:	6850      	ldr	r0, [r2, #4]
 80271f8:	6812      	ldr	r2, [r2, #0]
 80271fa:	fb00 1303 	mla	r3, r0, r3, r1
 80271fe:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8027202:	930a      	str	r3, [sp, #40]	; 0x28
 8027204:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8027206:	681b      	ldr	r3, [r3, #0]
 8027208:	9310      	str	r3, [sp, #64]	; 0x40
 802720a:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 802720e:	930b      	str	r3, [sp, #44]	; 0x2c
 8027210:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8027212:	2b00      	cmp	r3, #0
 8027214:	dc03      	bgt.n	802721e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8027216:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8027218:	2b00      	cmp	r3, #0
 802721a:	f340 8375 	ble.w	8027908 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 802721e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8027220:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8027224:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8027228:	1e48      	subs	r0, r1, #1
 802722a:	1e57      	subs	r7, r2, #1
 802722c:	9b07      	ldr	r3, [sp, #28]
 802722e:	2b00      	cmp	r3, #0
 8027230:	f340 818e 	ble.w	8027550 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8027234:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8027238:	ea4f 4326 	mov.w	r3, r6, asr #16
 802723c:	d406      	bmi.n	802724c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 802723e:	4584      	cmp	ip, r0
 8027240:	da04      	bge.n	802724c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8027242:	2b00      	cmp	r3, #0
 8027244:	db02      	blt.n	802724c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8027246:	42bb      	cmp	r3, r7
 8027248:	f2c0 8183 	blt.w	8027552 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 802724c:	f11c 0c01 	adds.w	ip, ip, #1
 8027250:	f100 8173 	bmi.w	802753a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8027254:	4561      	cmp	r1, ip
 8027256:	f2c0 8170 	blt.w	802753a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 802725a:	3301      	adds	r3, #1
 802725c:	f100 816d 	bmi.w	802753a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8027260:	429a      	cmp	r2, r3
 8027262:	f2c0 816a 	blt.w	802753a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8027266:	9b07      	ldr	r3, [sp, #28]
 8027268:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 802726a:	9318      	str	r3, [sp, #96]	; 0x60
 802726c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802726e:	2b00      	cmp	r3, #0
 8027270:	f340 818c 	ble.w	802758c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 8027274:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8027276:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8027278:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 802727c:	689b      	ldr	r3, [r3, #8]
 802727e:	1422      	asrs	r2, r4, #16
 8027280:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8027284:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8027288:	f3c6 3103 	ubfx	r1, r6, #12, #4
 802728c:	f100 81cd 	bmi.w	802762a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8027290:	f103 38ff 	add.w	r8, r3, #4294967295
 8027294:	4542      	cmp	r2, r8
 8027296:	f280 81c8 	bge.w	802762a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 802729a:	f1bc 0f00 	cmp.w	ip, #0
 802729e:	f2c0 81c4 	blt.w	802762a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80272a2:	f10e 38ff 	add.w	r8, lr, #4294967295
 80272a6:	45c4      	cmp	ip, r8
 80272a8:	f280 81bf 	bge.w	802762a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80272ac:	b21b      	sxth	r3, r3
 80272ae:	fb0c 2203 	mla	r2, ip, r3, r2
 80272b2:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80272b4:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 80272b8:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 80272bc:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 80272c0:	2800      	cmp	r0, #0
 80272c2:	f000 81a9 	beq.w	8027618 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 80272c6:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80272ca:	950c      	str	r5, [sp, #48]	; 0x30
 80272cc:	0e2d      	lsrs	r5, r5, #24
 80272ce:	9513      	str	r5, [sp, #76]	; 0x4c
 80272d0:	b181      	cbz	r1, 80272f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80272d2:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80272d6:	3b01      	subs	r3, #1
 80272d8:	009b      	lsls	r3, r3, #2
 80272da:	3304      	adds	r3, #4
 80272dc:	eb08 0c03 	add.w	ip, r8, r3
 80272e0:	f858 3003 	ldr.w	r3, [r8, r3]
 80272e4:	9308      	str	r3, [sp, #32]
 80272e6:	0e1b      	lsrs	r3, r3, #24
 80272e8:	9311      	str	r3, [sp, #68]	; 0x44
 80272ea:	f8dc 3004 	ldr.w	r3, [ip, #4]
 80272ee:	930d      	str	r3, [sp, #52]	; 0x34
 80272f0:	0e1b      	lsrs	r3, r3, #24
 80272f2:	9314      	str	r3, [sp, #80]	; 0x50
 80272f4:	b280      	uxth	r0, r0
 80272f6:	b289      	uxth	r1, r1
 80272f8:	fb00 f901 	mul.w	r9, r0, r1
 80272fc:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8027300:	0100      	lsls	r0, r0, #4
 8027302:	eba0 0809 	sub.w	r8, r0, r9
 8027306:	b289      	uxth	r1, r1
 8027308:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 802730c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 802730e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8027310:	fa1f f888 	uxth.w	r8, r8
 8027314:	1a5b      	subs	r3, r3, r1
 8027316:	b29b      	uxth	r3, r3
 8027318:	fb08 f000 	mul.w	r0, r8, r0
 802731c:	fb03 000e 	mla	r0, r3, lr, r0
 8027320:	fb01 0005 	mla	r0, r1, r5, r0
 8027324:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8027326:	fb09 0005 	mla	r0, r9, r5, r0
 802732a:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802732e:	2800      	cmp	r0, #0
 8027330:	f000 80fa 	beq.w	8027528 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8027334:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8027338:	d01b      	beq.n	8027372 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 802733a:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 802733e:	fb0e fa0a 	mul.w	sl, lr, sl
 8027342:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8027346:	fb0e fe02 	mul.w	lr, lr, r2
 802734a:	ea4f 221a 	mov.w	r2, sl, lsr #8
 802734e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8027352:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8027356:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 802735a:	4452      	add	r2, sl
 802735c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8027360:	0a12      	lsrs	r2, r2, #8
 8027362:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027366:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802736a:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802736e:	ea42 020c 	orr.w	r2, r2, ip
 8027372:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8027374:	2dff      	cmp	r5, #255	; 0xff
 8027376:	d021      	beq.n	80273bc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8027378:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802737a:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 802737e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8027380:	fb05 fb0b 	mul.w	fp, r5, fp
 8027384:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8027386:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802738a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 802738c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8027390:	fb05 fa0a 	mul.w	sl, r5, sl
 8027394:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027398:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802739c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80273a0:	44de      	add	lr, fp
 80273a2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80273a6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80273aa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80273ae:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80273b2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80273b6:	ea4e 050a 	orr.w	r5, lr, sl
 80273ba:	950c      	str	r5, [sp, #48]	; 0x30
 80273bc:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80273be:	2dff      	cmp	r5, #255	; 0xff
 80273c0:	d021      	beq.n	8027406 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 80273c2:	9d08      	ldr	r5, [sp, #32]
 80273c4:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80273c8:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80273ca:	fb05 fb0b 	mul.w	fp, r5, fp
 80273ce:	9d08      	ldr	r5, [sp, #32]
 80273d0:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80273d4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80273d6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80273da:	fb05 fa0a 	mul.w	sl, r5, sl
 80273de:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80273e2:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80273e6:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80273ea:	44de      	add	lr, fp
 80273ec:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80273f0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80273f4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80273f8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80273fc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8027400:	ea4e 050a 	orr.w	r5, lr, sl
 8027404:	9508      	str	r5, [sp, #32]
 8027406:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8027408:	2dff      	cmp	r5, #255	; 0xff
 802740a:	d021      	beq.n	8027450 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 802740c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802740e:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8027412:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8027414:	fb05 fb0b 	mul.w	fp, r5, fp
 8027418:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802741a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802741e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8027420:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8027424:	fb05 fa0a 	mul.w	sl, r5, sl
 8027428:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802742c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8027430:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8027434:	44de      	add	lr, fp
 8027436:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802743a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802743e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027442:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027446:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802744a:	ea4e 050a 	orr.w	r5, lr, sl
 802744e:	950d      	str	r5, [sp, #52]	; 0x34
 8027450:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8027452:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8027456:	9d08      	ldr	r5, [sp, #32]
 8027458:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 802745c:	fb08 fc0c 	mul.w	ip, r8, ip
 8027460:	fb03 cc0e 	mla	ip, r3, lr, ip
 8027464:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8027468:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802746a:	fb01 cc0e 	mla	ip, r1, lr, ip
 802746e:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8027472:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8027474:	fb09 cc0e 	mla	ip, r9, lr, ip
 8027478:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 802747c:	fb08 f80e 	mul.w	r8, r8, lr
 8027480:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8027484:	fb03 8202 	mla	r2, r3, r2, r8
 8027488:	9b08      	ldr	r3, [sp, #32]
 802748a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 802748c:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 8027490:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8027492:	fb01 220a 	mla	r2, r1, sl, r2
 8027496:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 802749a:	fb09 2901 	mla	r9, r9, r1, r2
 802749e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80274a0:	883b      	ldrh	r3, [r7, #0]
 80274a2:	4342      	muls	r2, r0
 80274a4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80274a8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80274ac:	1c50      	adds	r0, r2, #1
 80274ae:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80274b2:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80274b6:	ea4c 0c09 	orr.w	ip, ip, r9
 80274ba:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 80274be:	1219      	asrs	r1, r3, #8
 80274c0:	ea4f 421c 	mov.w	r2, ip, lsr #16
 80274c4:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 80274c8:	b2c0      	uxtb	r0, r0
 80274ca:	fb12 f205 	smulbb	r2, r2, r5
 80274ce:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80274d2:	fb01 2100 	mla	r1, r1, r0, r2
 80274d6:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 80274da:	10da      	asrs	r2, r3, #3
 80274dc:	fa5f fc8c 	uxtb.w	ip, ip
 80274e0:	00db      	lsls	r3, r3, #3
 80274e2:	fb1c fc05 	smulbb	ip, ip, r5
 80274e6:	b2db      	uxtb	r3, r3
 80274e8:	b289      	uxth	r1, r1
 80274ea:	fb03 c300 	mla	r3, r3, r0, ip
 80274ee:	fa1f fc83 	uxth.w	ip, r3
 80274f2:	1c4b      	adds	r3, r1, #1
 80274f4:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80274f8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80274fc:	fb1e fe05 	smulbb	lr, lr, r5
 8027500:	f10c 0301 	add.w	r3, ip, #1
 8027504:	fb02 e200 	mla	r2, r2, r0, lr
 8027508:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 802750c:	b292      	uxth	r2, r2
 802750e:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8027512:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8027516:	430b      	orrs	r3, r1
 8027518:	1c51      	adds	r1, r2, #1
 802751a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802751e:	0952      	lsrs	r2, r2, #5
 8027520:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8027524:	4313      	orrs	r3, r2
 8027526:	803b      	strh	r3, [r7, #0]
 8027528:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802752a:	441c      	add	r4, r3
 802752c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 802752e:	441e      	add	r6, r3
 8027530:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8027532:	3b01      	subs	r3, #1
 8027534:	3702      	adds	r7, #2
 8027536:	9318      	str	r3, [sp, #96]	; 0x60
 8027538:	e698      	b.n	802726c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802753a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802753c:	441c      	add	r4, r3
 802753e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8027540:	441e      	add	r6, r3
 8027542:	9b07      	ldr	r3, [sp, #28]
 8027544:	3b01      	subs	r3, #1
 8027546:	9307      	str	r3, [sp, #28]
 8027548:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802754a:	3302      	adds	r3, #2
 802754c:	930a      	str	r3, [sp, #40]	; 0x28
 802754e:	e66d      	b.n	802722c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8027550:	d023      	beq.n	802759a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8027552:	9b07      	ldr	r3, [sp, #28]
 8027554:	9829      	ldr	r0, [sp, #164]	; 0xa4
 8027556:	3b01      	subs	r3, #1
 8027558:	fb00 4003 	mla	r0, r0, r3, r4
 802755c:	1400      	asrs	r0, r0, #16
 802755e:	f53f ae82 	bmi.w	8027266 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8027562:	3901      	subs	r1, #1
 8027564:	4288      	cmp	r0, r1
 8027566:	f6bf ae7e 	bge.w	8027266 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802756a:	992a      	ldr	r1, [sp, #168]	; 0xa8
 802756c:	fb01 6303 	mla	r3, r1, r3, r6
 8027570:	141b      	asrs	r3, r3, #16
 8027572:	f53f ae78 	bmi.w	8027266 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8027576:	3a01      	subs	r2, #1
 8027578:	4293      	cmp	r3, r2
 802757a:	f6bf ae74 	bge.w	8027266 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802757e:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8027582:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8027586:	f1bb 0f00 	cmp.w	fp, #0
 802758a:	dc6c      	bgt.n	8027666 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 802758c:	9b07      	ldr	r3, [sp, #28]
 802758e:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8027592:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8027594:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8027598:	930a      	str	r3, [sp, #40]	; 0x28
 802759a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 802759c:	2b00      	cmp	r3, #0
 802759e:	f340 81b3 	ble.w	8027908 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 80275a2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80275a6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80275aa:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80275ae:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80275b0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80275b4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80275b8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80275bc:	eef0 6a62 	vmov.f32	s13, s5
 80275c0:	ee61 7a27 	vmul.f32	s15, s2, s15
 80275c4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80275c8:	ee77 2a62 	vsub.f32	s5, s14, s5
 80275cc:	ee16 4a90 	vmov	r4, s13
 80275d0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80275d4:	eef0 6a43 	vmov.f32	s13, s6
 80275d8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80275dc:	ee12 2a90 	vmov	r2, s5
 80275e0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80275e4:	fb92 f3f3 	sdiv	r3, r2, r3
 80275e8:	ee13 2a10 	vmov	r2, s6
 80275ec:	9329      	str	r3, [sp, #164]	; 0xa4
 80275ee:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80275f0:	fb92 f3f3 	sdiv	r3, r2, r3
 80275f4:	932a      	str	r3, [sp, #168]	; 0xa8
 80275f6:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80275f8:	9a19      	ldr	r2, [sp, #100]	; 0x64
 80275fa:	3b01      	subs	r3, #1
 80275fc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8027600:	9317      	str	r3, [sp, #92]	; 0x5c
 8027602:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8027604:	bf08      	it	eq
 8027606:	4613      	moveq	r3, r2
 8027608:	ee16 6a90 	vmov	r6, s13
 802760c:	9307      	str	r3, [sp, #28]
 802760e:	eeb0 3a67 	vmov.f32	s6, s15
 8027612:	eef0 2a47 	vmov.f32	s5, s14
 8027616:	e5fb      	b.n	8027210 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8027618:	2900      	cmp	r1, #0
 802761a:	f43f ae6b 	beq.w	80272f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 802761e:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8027622:	9308      	str	r3, [sp, #32]
 8027624:	0e1b      	lsrs	r3, r3, #24
 8027626:	9311      	str	r3, [sp, #68]	; 0x44
 8027628:	e664      	b.n	80272f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 802762a:	f112 0801 	adds.w	r8, r2, #1
 802762e:	f53f af7b 	bmi.w	8027528 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8027632:	4543      	cmp	r3, r8
 8027634:	f6ff af78 	blt.w	8027528 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8027638:	f11c 0801 	adds.w	r8, ip, #1
 802763c:	f53f af74 	bmi.w	8027528 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8027640:	45c6      	cmp	lr, r8
 8027642:	f6ff af71 	blt.w	8027528 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8027646:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8027648:	9201      	str	r2, [sp, #4]
 802764a:	fa0f f28e 	sxth.w	r2, lr
 802764e:	e9cd 1504 	strd	r1, r5, [sp, #16]
 8027652:	e9cd c002 	strd	ip, r0, [sp, #8]
 8027656:	9200      	str	r2, [sp, #0]
 8027658:	b21b      	sxth	r3, r3
 802765a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 802765c:	981b      	ldr	r0, [sp, #108]	; 0x6c
 802765e:	4639      	mov	r1, r7
 8027660:	f7ff fc79 	bl	8026f56 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 8027664:	e760      	b.n	8027528 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8027666:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8027668:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802766a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802766e:	1427      	asrs	r7, r4, #16
 8027670:	1433      	asrs	r3, r6, #16
 8027672:	fb01 7303 	mla	r3, r1, r3, r7
 8027676:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 802767a:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 802767e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8027682:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8027686:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 802768a:	2a00      	cmp	r2, #0
 802768c:	f000 8133 	beq.w	80278f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 8027690:	687d      	ldr	r5, [r7, #4]
 8027692:	950e      	str	r5, [sp, #56]	; 0x38
 8027694:	0e2d      	lsrs	r5, r5, #24
 8027696:	9515      	str	r5, [sp, #84]	; 0x54
 8027698:	b178      	cbz	r0, 80276ba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 802769a:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 802769e:	3901      	subs	r1, #1
 80276a0:	0089      	lsls	r1, r1, #2
 80276a2:	3104      	adds	r1, #4
 80276a4:	eb07 0e01 	add.w	lr, r7, r1
 80276a8:	5879      	ldr	r1, [r7, r1]
 80276aa:	9109      	str	r1, [sp, #36]	; 0x24
 80276ac:	0e09      	lsrs	r1, r1, #24
 80276ae:	9112      	str	r1, [sp, #72]	; 0x48
 80276b0:	f8de 1004 	ldr.w	r1, [lr, #4]
 80276b4:	910f      	str	r1, [sp, #60]	; 0x3c
 80276b6:	0e09      	lsrs	r1, r1, #24
 80276b8:	9116      	str	r1, [sp, #88]	; 0x58
 80276ba:	b292      	uxth	r2, r2
 80276bc:	b280      	uxth	r0, r0
 80276be:	fb02 f800 	mul.w	r8, r2, r0
 80276c2:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80276c6:	0112      	lsls	r2, r2, #4
 80276c8:	eba2 0e08 	sub.w	lr, r2, r8
 80276cc:	b280      	uxth	r0, r0
 80276ce:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80276d2:	9915      	ldr	r1, [sp, #84]	; 0x54
 80276d4:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80276d6:	fa1f fe8e 	uxth.w	lr, lr
 80276da:	1a12      	subs	r2, r2, r0
 80276dc:	b292      	uxth	r2, r2
 80276de:	fb0e f101 	mul.w	r1, lr, r1
 80276e2:	fb02 110c 	mla	r1, r2, ip, r1
 80276e6:	fb00 1105 	mla	r1, r0, r5, r1
 80276ea:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80276ec:	fb08 1105 	mla	r1, r8, r5, r1
 80276f0:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80276f4:	2900      	cmp	r1, #0
 80276f6:	f000 80f5 	beq.w	80278e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 80276fa:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80276fe:	d019      	beq.n	8027734 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 8027700:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8027704:	fb0c fa0a 	mul.w	sl, ip, sl
 8027708:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802770c:	fb0c fc03 	mul.w	ip, ip, r3
 8027710:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8027714:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8027718:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802771c:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8027720:	4453      	add	r3, sl
 8027722:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8027726:	0a1b      	lsrs	r3, r3, #8
 8027728:	0a3f      	lsrs	r7, r7, #8
 802772a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802772e:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8027732:	433b      	orrs	r3, r7
 8027734:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8027736:	2dff      	cmp	r5, #255	; 0xff
 8027738:	d020      	beq.n	802777c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 802773a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802773c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8027740:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8027742:	436f      	muls	r7, r5
 8027744:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8027746:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802774a:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802774c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8027750:	fb05 fa0a 	mul.w	sl, r5, sl
 8027754:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8027758:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802775c:	44bc      	add	ip, r7
 802775e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8027762:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8027766:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802776a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802776e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8027772:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8027776:	ea4c 050a 	orr.w	r5, ip, sl
 802777a:	950e      	str	r5, [sp, #56]	; 0x38
 802777c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 802777e:	2dff      	cmp	r5, #255	; 0xff
 8027780:	d020      	beq.n	80277c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 8027782:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8027784:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8027788:	9d12      	ldr	r5, [sp, #72]	; 0x48
 802778a:	436f      	muls	r7, r5
 802778c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 802778e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8027792:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8027794:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8027798:	fb05 fa0a 	mul.w	sl, r5, sl
 802779c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80277a0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80277a4:	44bc      	add	ip, r7
 80277a6:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80277aa:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80277ae:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80277b2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80277b6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80277ba:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80277be:	ea4c 050a 	orr.w	r5, ip, sl
 80277c2:	9509      	str	r5, [sp, #36]	; 0x24
 80277c4:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80277c6:	2dff      	cmp	r5, #255	; 0xff
 80277c8:	d020      	beq.n	802780c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 80277ca:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80277cc:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80277d0:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80277d2:	436f      	muls	r7, r5
 80277d4:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80277d6:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80277da:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80277dc:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80277e0:	fb05 fa0a 	mul.w	sl, r5, sl
 80277e4:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80277e8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80277ec:	44bc      	add	ip, r7
 80277ee:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80277f2:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80277f6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80277fa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80277fe:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8027802:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8027806:	ea4c 050a 	orr.w	r5, ip, sl
 802780a:	950f      	str	r5, [sp, #60]	; 0x3c
 802780c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802780e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8027812:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8027814:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8027818:	fb0e f707 	mul.w	r7, lr, r7
 802781c:	fb02 770c 	mla	r7, r2, ip, r7
 8027820:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8027824:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8027826:	fb00 770c 	mla	r7, r0, ip, r7
 802782a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802782e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8027830:	fb08 770c 	mla	r7, r8, ip, r7
 8027834:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8027838:	fb0e fe0c 	mul.w	lr, lr, ip
 802783c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8027840:	fb02 e303 	mla	r3, r2, r3, lr
 8027844:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8027846:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8027848:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 802784c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802784e:	fb00 330a 	mla	r3, r0, sl, r3
 8027852:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8027856:	fb08 3c0c 	mla	ip, r8, ip, r3
 802785a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802785c:	f8b9 0000 	ldrh.w	r0, [r9]
 8027860:	4359      	muls	r1, r3
 8027862:	0a3f      	lsrs	r7, r7, #8
 8027864:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027868:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802786c:	1c4b      	adds	r3, r1, #1
 802786e:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8027872:	ea47 070c 	orr.w	r7, r7, ip
 8027876:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 802787a:	1202      	asrs	r2, r0, #8
 802787c:	0c3b      	lsrs	r3, r7, #16
 802787e:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8027882:	b2c9      	uxtb	r1, r1
 8027884:	fb13 f305 	smulbb	r3, r3, r5
 8027888:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 802788c:	fb02 3201 	mla	r2, r2, r1, r3
 8027890:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8027894:	10c3      	asrs	r3, r0, #3
 8027896:	b2ff      	uxtb	r7, r7
 8027898:	00c0      	lsls	r0, r0, #3
 802789a:	b2c0      	uxtb	r0, r0
 802789c:	fb17 f705 	smulbb	r7, r7, r5
 80278a0:	fb00 7001 	mla	r0, r0, r1, r7
 80278a4:	b292      	uxth	r2, r2
 80278a6:	fb1c fc05 	smulbb	ip, ip, r5
 80278aa:	b280      	uxth	r0, r0
 80278ac:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80278b0:	fb03 c301 	mla	r3, r3, r1, ip
 80278b4:	1c51      	adds	r1, r2, #1
 80278b6:	f100 0c01 	add.w	ip, r0, #1
 80278ba:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80278be:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 80278c2:	b29b      	uxth	r3, r3
 80278c4:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80278c8:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 80278cc:	ea4c 0202 	orr.w	r2, ip, r2
 80278d0:	f103 0c01 	add.w	ip, r3, #1
 80278d4:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 80278d8:	095b      	lsrs	r3, r3, #5
 80278da:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80278de:	431a      	orrs	r2, r3
 80278e0:	f8a9 2000 	strh.w	r2, [r9]
 80278e4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80278e6:	441c      	add	r4, r3
 80278e8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80278ea:	f109 0902 	add.w	r9, r9, #2
 80278ee:	441e      	add	r6, r3
 80278f0:	f10b 3bff 	add.w	fp, fp, #4294967295
 80278f4:	e647      	b.n	8027586 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 80278f6:	2800      	cmp	r0, #0
 80278f8:	f43f aedf 	beq.w	80276ba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 80278fc:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 8027900:	9109      	str	r1, [sp, #36]	; 0x24
 8027902:	0e09      	lsrs	r1, r1, #24
 8027904:	9112      	str	r1, [sp, #72]	; 0x48
 8027906:	e6d8      	b.n	80276ba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8027908:	b01d      	add	sp, #116	; 0x74
 802790a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802790e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 802790e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027912:	b085      	sub	sp, #20
 8027914:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 8027918:	9102      	str	r1, [sp, #8]
 802791a:	2c00      	cmp	r4, #0
 802791c:	fb04 7103 	mla	r1, r4, r3, r7
 8027920:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8027924:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8027928:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 802792c:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8027930:	f2c0 810c 	blt.w	8027b4c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8027934:	45a6      	cmp	lr, r4
 8027936:	f340 8109 	ble.w	8027b4c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 802793a:	2f00      	cmp	r7, #0
 802793c:	f2c0 8104 	blt.w	8027b48 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8027940:	42bb      	cmp	r3, r7
 8027942:	f340 8101 	ble.w	8027b48 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8027946:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 802794a:	1c7a      	adds	r2, r7, #1
 802794c:	f100 8101 	bmi.w	8027b52 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8027950:	4293      	cmp	r3, r2
 8027952:	f340 80fe 	ble.w	8027b52 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8027956:	2e00      	cmp	r6, #0
 8027958:	f000 80fd 	beq.w	8027b56 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 802795c:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8027960:	3401      	adds	r4, #1
 8027962:	f100 80fc 	bmi.w	8027b5e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8027966:	45a6      	cmp	lr, r4
 8027968:	f340 80f9 	ble.w	8027b5e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 802796c:	2800      	cmp	r0, #0
 802796e:	f000 80f9 	beq.w	8027b64 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 8027972:	2f00      	cmp	r7, #0
 8027974:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 8027978:	f2c0 80ef 	blt.w	8027b5a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 802797c:	42bb      	cmp	r3, r7
 802797e:	f340 80ec 	ble.w	8027b5a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8027982:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8027986:	3701      	adds	r7, #1
 8027988:	f100 80ef 	bmi.w	8027b6a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 802798c:	42bb      	cmp	r3, r7
 802798e:	f340 80ec 	ble.w	8027b6a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8027992:	2e00      	cmp	r6, #0
 8027994:	f000 80eb 	beq.w	8027b6e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 8027998:	6852      	ldr	r2, [r2, #4]
 802799a:	b2b6      	uxth	r6, r6
 802799c:	b280      	uxth	r0, r0
 802799e:	fb00 fe06 	mul.w	lr, r0, r6
 80279a2:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 80279a6:	0136      	lsls	r6, r6, #4
 80279a8:	eba6 070e 	sub.w	r7, r6, lr
 80279ac:	b280      	uxth	r0, r0
 80279ae:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 80279b2:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 80279b6:	b2bf      	uxth	r7, r7
 80279b8:	1a1b      	subs	r3, r3, r0
 80279ba:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 80279be:	b29b      	uxth	r3, r3
 80279c0:	fb07 f60a 	mul.w	r6, r7, sl
 80279c4:	ea4f 6914 	mov.w	r9, r4, lsr #24
 80279c8:	fb0b 6603 	mla	r6, fp, r3, r6
 80279cc:	ea4f 6812 	mov.w	r8, r2, lsr #24
 80279d0:	fb00 6609 	mla	r6, r0, r9, r6
 80279d4:	fb0e 6608 	mla	r6, lr, r8, r6
 80279d8:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80279dc:	9600      	str	r6, [sp, #0]
 80279de:	2e00      	cmp	r6, #0
 80279e0:	f000 80af 	beq.w	8027b42 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 80279e4:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80279e8:	fb0b fc0c 	mul.w	ip, fp, ip
 80279ec:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 80279f0:	fb0b f505 	mul.w	r5, fp, r5
 80279f4:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 80279f8:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 80279fc:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8027a00:	44dc      	add	ip, fp
 8027a02:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027a06:	9501      	str	r5, [sp, #4]
 8027a08:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8027a0c:	9503      	str	r5, [sp, #12]
 8027a0e:	9d01      	ldr	r5, [sp, #4]
 8027a10:	9e02      	ldr	r6, [sp, #8]
 8027a12:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8027a16:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8027a1a:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8027a1e:	fb0a fc0c 	mul.w	ip, sl, ip
 8027a22:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8027a26:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8027a2a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8027a2e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8027a32:	4465      	add	r5, ip
 8027a34:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8027a38:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8027a3c:	fb09 fc0c 	mul.w	ip, r9, ip
 8027a40:	fb09 f904 	mul.w	r9, r9, r4
 8027a44:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8027a48:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8027a4c:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8027a50:	fb08 f404 	mul.w	r4, r8, r4
 8027a54:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8027a58:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8027a5c:	fb08 f802 	mul.w	r8, r8, r2
 8027a60:	fb0a fa01 	mul.w	sl, sl, r1
 8027a64:	0a22      	lsrs	r2, r4, #8
 8027a66:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8027a6a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8027a6e:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8027a72:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8027a76:	4414      	add	r4, r2
 8027a78:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8027a7c:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8027a80:	0a2d      	lsrs	r5, r5, #8
 8027a82:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8027a86:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8027a8a:	9a03      	ldr	r2, [sp, #12]
 8027a8c:	8836      	ldrh	r6, [r6, #0]
 8027a8e:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8027a92:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8027a96:	437d      	muls	r5, r7
 8027a98:	4461      	add	r1, ip
 8027a9a:	0a24      	lsrs	r4, r4, #8
 8027a9c:	fb02 5503 	mla	r5, r2, r3, r5
 8027aa0:	0a09      	lsrs	r1, r1, #8
 8027aa2:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8027aa6:	fb04 540e 	mla	r4, r4, lr, r5
 8027aaa:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8027aae:	fb01 4100 	mla	r1, r1, r0, r4
 8027ab2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027ab6:	0a09      	lsrs	r1, r1, #8
 8027ab8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8027abc:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8027ac0:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8027ac4:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8027ac8:	fb07 f70a 	mul.w	r7, r7, sl
 8027acc:	fb03 7101 	mla	r1, r3, r1, r7
 8027ad0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8027ad4:	9b00      	ldr	r3, [sp, #0]
 8027ad6:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8027ada:	fb0e 1e08 	mla	lr, lr, r8, r1
 8027ade:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8027ae2:	fb00 e101 	mla	r1, r0, r1, lr
 8027ae6:	43da      	mvns	r2, r3
 8027ae8:	1233      	asrs	r3, r6, #8
 8027aea:	b2d2      	uxtb	r2, r2
 8027aec:	10f0      	asrs	r0, r6, #3
 8027aee:	0a09      	lsrs	r1, r1, #8
 8027af0:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8027af4:	00f6      	lsls	r6, r6, #3
 8027af6:	4353      	muls	r3, r2
 8027af8:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8027afc:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8027b00:	b2f6      	uxtb	r6, r6
 8027b02:	4321      	orrs	r1, r4
 8027b04:	4350      	muls	r0, r2
 8027b06:	4356      	muls	r6, r2
 8027b08:	1c5a      	adds	r2, r3, #1
 8027b0a:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8027b0e:	0c0b      	lsrs	r3, r1, #16
 8027b10:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8027b14:	1c42      	adds	r2, r0, #1
 8027b16:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8027b1a:	0a0a      	lsrs	r2, r1, #8
 8027b1c:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8027b20:	021b      	lsls	r3, r3, #8
 8027b22:	00d2      	lsls	r2, r2, #3
 8027b24:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8027b28:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8027b2c:	4313      	orrs	r3, r2
 8027b2e:	1c72      	adds	r2, r6, #1
 8027b30:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8027b34:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 8027b38:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8027b3c:	4319      	orrs	r1, r3
 8027b3e:	9b02      	ldr	r3, [sp, #8]
 8027b40:	8019      	strh	r1, [r3, #0]
 8027b42:	b005      	add	sp, #20
 8027b44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027b48:	2500      	movs	r5, #0
 8027b4a:	e6fe      	b.n	802794a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 8027b4c:	2100      	movs	r1, #0
 8027b4e:	460d      	mov	r5, r1
 8027b50:	e706      	b.n	8027960 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8027b52:	2100      	movs	r1, #0
 8027b54:	e704      	b.n	8027960 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8027b56:	4631      	mov	r1, r6
 8027b58:	e702      	b.n	8027960 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8027b5a:	2400      	movs	r4, #0
 8027b5c:	e713      	b.n	8027986 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 8027b5e:	2200      	movs	r2, #0
 8027b60:	4614      	mov	r4, r2
 8027b62:	e71a      	b.n	802799a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8027b64:	4602      	mov	r2, r0
 8027b66:	4604      	mov	r4, r0
 8027b68:	e717      	b.n	802799a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8027b6a:	2200      	movs	r2, #0
 8027b6c:	e715      	b.n	802799a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8027b6e:	4632      	mov	r2, r6
 8027b70:	e713      	b.n	802799a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

08027b74 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8027b74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027b78:	b09b      	sub	sp, #108	; 0x6c
 8027b7a:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 8027b7e:	9218      	str	r2, [sp, #96]	; 0x60
 8027b80:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8027b82:	9116      	str	r1, [sp, #88]	; 0x58
 8027b84:	9307      	str	r3, [sp, #28]
 8027b86:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8027b8a:	9019      	str	r0, [sp, #100]	; 0x64
 8027b8c:	6850      	ldr	r0, [r2, #4]
 8027b8e:	6812      	ldr	r2, [r2, #0]
 8027b90:	fb00 1303 	mla	r3, r0, r3, r1
 8027b94:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8027b98:	930a      	str	r3, [sp, #40]	; 0x28
 8027b9a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8027b9c:	681b      	ldr	r3, [r3, #0]
 8027b9e:	930f      	str	r3, [sp, #60]	; 0x3c
 8027ba0:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8027ba2:	2b00      	cmp	r3, #0
 8027ba4:	dc03      	bgt.n	8027bae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8027ba6:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8027ba8:	2b00      	cmp	r3, #0
 8027baa:	f340 8386 	ble.w	80282ba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8027bae:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8027bb0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8027bb4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8027bb8:	1e48      	subs	r0, r1, #1
 8027bba:	1e57      	subs	r7, r2, #1
 8027bbc:	9b07      	ldr	r3, [sp, #28]
 8027bbe:	2b00      	cmp	r3, #0
 8027bc0:	f340 8166 	ble.w	8027e90 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8027bc4:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8027bc8:	ea4f 4326 	mov.w	r3, r6, asr #16
 8027bcc:	d406      	bmi.n	8027bdc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8027bce:	4584      	cmp	ip, r0
 8027bd0:	da04      	bge.n	8027bdc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8027bd2:	2b00      	cmp	r3, #0
 8027bd4:	db02      	blt.n	8027bdc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8027bd6:	42bb      	cmp	r3, r7
 8027bd8:	f2c0 815b 	blt.w	8027e92 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8027bdc:	f11c 0c01 	adds.w	ip, ip, #1
 8027be0:	f100 814b 	bmi.w	8027e7a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8027be4:	4561      	cmp	r1, ip
 8027be6:	f2c0 8148 	blt.w	8027e7a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8027bea:	3301      	adds	r3, #1
 8027bec:	f100 8145 	bmi.w	8027e7a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8027bf0:	429a      	cmp	r2, r3
 8027bf2:	f2c0 8142 	blt.w	8027e7a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8027bf6:	9b07      	ldr	r3, [sp, #28]
 8027bf8:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8027bfa:	9317      	str	r3, [sp, #92]	; 0x5c
 8027bfc:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8027bfe:	2b00      	cmp	r3, #0
 8027c00:	f340 8165 	ble.w	8027ece <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8027c04:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8027c06:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8027c08:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8027c0c:	689b      	ldr	r3, [r3, #8]
 8027c0e:	1422      	asrs	r2, r4, #16
 8027c10:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8027c14:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8027c18:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8027c1c:	f100 81d5 	bmi.w	8027fca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8027c20:	f103 38ff 	add.w	r8, r3, #4294967295
 8027c24:	4542      	cmp	r2, r8
 8027c26:	f280 81d0 	bge.w	8027fca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8027c2a:	f1bc 0f00 	cmp.w	ip, #0
 8027c2e:	f2c0 81cc 	blt.w	8027fca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8027c32:	f10e 38ff 	add.w	r8, lr, #4294967295
 8027c36:	45c4      	cmp	ip, r8
 8027c38:	f280 81c7 	bge.w	8027fca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8027c3c:	b21b      	sxth	r3, r3
 8027c3e:	fb0c 2203 	mla	r2, ip, r3, r2
 8027c42:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8027c44:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8027c48:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8027c4c:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8027c50:	2900      	cmp	r1, #0
 8027c52:	f000 8182 	beq.w	8027f5a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8027c56:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8027c5a:	950b      	str	r5, [sp, #44]	; 0x2c
 8027c5c:	0e2d      	lsrs	r5, r5, #24
 8027c5e:	9512      	str	r5, [sp, #72]	; 0x48
 8027c60:	b180      	cbz	r0, 8027c84 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8027c62:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8027c66:	3b01      	subs	r3, #1
 8027c68:	009b      	lsls	r3, r3, #2
 8027c6a:	3304      	adds	r3, #4
 8027c6c:	eb08 0c03 	add.w	ip, r8, r3
 8027c70:	f858 3003 	ldr.w	r3, [r8, r3]
 8027c74:	9308      	str	r3, [sp, #32]
 8027c76:	0e1b      	lsrs	r3, r3, #24
 8027c78:	9310      	str	r3, [sp, #64]	; 0x40
 8027c7a:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8027c7e:	930c      	str	r3, [sp, #48]	; 0x30
 8027c80:	0e1b      	lsrs	r3, r3, #24
 8027c82:	9313      	str	r3, [sp, #76]	; 0x4c
 8027c84:	b289      	uxth	r1, r1
 8027c86:	b280      	uxth	r0, r0
 8027c88:	fb01 f900 	mul.w	r9, r1, r0
 8027c8c:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8027c90:	0109      	lsls	r1, r1, #4
 8027c92:	eba1 0809 	sub.w	r8, r1, r9
 8027c96:	b280      	uxth	r0, r0
 8027c98:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 8027c9c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8027c9e:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8027ca0:	fa1f f888 	uxth.w	r8, r8
 8027ca4:	1a09      	subs	r1, r1, r0
 8027ca6:	b289      	uxth	r1, r1
 8027ca8:	fb08 f303 	mul.w	r3, r8, r3
 8027cac:	fb01 330e 	mla	r3, r1, lr, r3
 8027cb0:	fb00 3305 	mla	r3, r0, r5, r3
 8027cb4:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8027cb6:	fb09 3305 	mla	r3, r9, r5, r3
 8027cba:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8027cbe:	2b00      	cmp	r3, #0
 8027cc0:	f000 80d2 	beq.w	8027e68 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8027cc4:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8027cc8:	d01b      	beq.n	8027d02 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 8027cca:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8027cce:	fb0e fa0a 	mul.w	sl, lr, sl
 8027cd2:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8027cd6:	fb0e fe02 	mul.w	lr, lr, r2
 8027cda:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8027cde:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8027ce2:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8027ce6:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8027cea:	4452      	add	r2, sl
 8027cec:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8027cf0:	0a12      	lsrs	r2, r2, #8
 8027cf2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027cf6:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8027cfa:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8027cfe:	ea42 020c 	orr.w	r2, r2, ip
 8027d02:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8027d04:	2dff      	cmp	r5, #255	; 0xff
 8027d06:	d021      	beq.n	8027d4c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 8027d08:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8027d0a:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8027d0e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8027d10:	fb05 fb0b 	mul.w	fp, r5, fp
 8027d14:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8027d16:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8027d1a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8027d1c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8027d20:	fb05 fa0a 	mul.w	sl, r5, sl
 8027d24:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027d28:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8027d2c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8027d30:	44de      	add	lr, fp
 8027d32:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8027d36:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8027d3a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027d3e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027d42:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8027d46:	ea4e 050a 	orr.w	r5, lr, sl
 8027d4a:	950b      	str	r5, [sp, #44]	; 0x2c
 8027d4c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8027d4e:	2dff      	cmp	r5, #255	; 0xff
 8027d50:	d021      	beq.n	8027d96 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8027d52:	9d08      	ldr	r5, [sp, #32]
 8027d54:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8027d58:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8027d5a:	fb05 fb0b 	mul.w	fp, r5, fp
 8027d5e:	9d08      	ldr	r5, [sp, #32]
 8027d60:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8027d64:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8027d66:	fb05 fa0e 	mul.w	sl, r5, lr
 8027d6a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8027d6e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027d72:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8027d76:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8027d7a:	44de      	add	lr, fp
 8027d7c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8027d80:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8027d84:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027d88:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027d8c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8027d90:	ea4e 050a 	orr.w	r5, lr, sl
 8027d94:	9508      	str	r5, [sp, #32]
 8027d96:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8027d98:	2dff      	cmp	r5, #255	; 0xff
 8027d9a:	d021      	beq.n	8027de0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 8027d9c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8027d9e:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8027da2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8027da4:	fb05 fb0b 	mul.w	fp, r5, fp
 8027da8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8027daa:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8027dae:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8027db0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8027db4:	fb05 fa0a 	mul.w	sl, r5, sl
 8027db8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027dbc:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8027dc0:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8027dc4:	44de      	add	lr, fp
 8027dc6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8027dca:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8027dce:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027dd2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027dd6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8027dda:	ea4e 050a 	orr.w	r5, lr, sl
 8027dde:	950c      	str	r5, [sp, #48]	; 0x30
 8027de0:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8027de2:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8027de6:	9d08      	ldr	r5, [sp, #32]
 8027de8:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8027dec:	fb08 fc0c 	mul.w	ip, r8, ip
 8027df0:	fb01 cc0e 	mla	ip, r1, lr, ip
 8027df4:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8027df8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8027dfa:	fb00 cc0e 	mla	ip, r0, lr, ip
 8027dfe:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8027e02:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8027e04:	fb09 cc0e 	mla	ip, r9, lr, ip
 8027e08:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8027e0c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8027e10:	fb08 f80e 	mul.w	r8, r8, lr
 8027e14:	fb01 8202 	mla	r2, r1, r2, r8
 8027e18:	9908      	ldr	r1, [sp, #32]
 8027e1a:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8027e1e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8027e20:	fb00 220a 	mla	r2, r0, sl, r2
 8027e24:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 8027e28:	fb09 2900 	mla	r9, r9, r0, r2
 8027e2c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027e30:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8027e34:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8027e38:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8027e3c:	ea4c 0c09 	orr.w	ip, ip, r9
 8027e40:	2bff      	cmp	r3, #255	; 0xff
 8027e42:	ea4f 221c 	mov.w	r2, ip, lsr #8
 8027e46:	f040 8091 	bne.w	8027f6c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8027e4a:	ea4f 135c 	mov.w	r3, ip, lsr #5
 8027e4e:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 8027e52:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8027e56:	f022 0207 	bic.w	r2, r2, #7
 8027e5a:	431a      	orrs	r2, r3
 8027e5c:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8027e60:	ea4c 0c02 	orr.w	ip, ip, r2
 8027e64:	f8a7 c000 	strh.w	ip, [r7]
 8027e68:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8027e6a:	441c      	add	r4, r3
 8027e6c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8027e6e:	441e      	add	r6, r3
 8027e70:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8027e72:	3b01      	subs	r3, #1
 8027e74:	3702      	adds	r7, #2
 8027e76:	9317      	str	r3, [sp, #92]	; 0x5c
 8027e78:	e6c0      	b.n	8027bfc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8027e7a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8027e7c:	441c      	add	r4, r3
 8027e7e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8027e80:	441e      	add	r6, r3
 8027e82:	9b07      	ldr	r3, [sp, #28]
 8027e84:	3b01      	subs	r3, #1
 8027e86:	9307      	str	r3, [sp, #28]
 8027e88:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8027e8a:	3302      	adds	r3, #2
 8027e8c:	930a      	str	r3, [sp, #40]	; 0x28
 8027e8e:	e695      	b.n	8027bbc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8027e90:	d024      	beq.n	8027edc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8027e92:	9b07      	ldr	r3, [sp, #28]
 8027e94:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8027e96:	3b01      	subs	r3, #1
 8027e98:	fb00 4003 	mla	r0, r0, r3, r4
 8027e9c:	1400      	asrs	r0, r0, #16
 8027e9e:	f53f aeaa 	bmi.w	8027bf6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8027ea2:	3901      	subs	r1, #1
 8027ea4:	4288      	cmp	r0, r1
 8027ea6:	f6bf aea6 	bge.w	8027bf6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8027eaa:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8027eac:	fb01 6303 	mla	r3, r1, r3, r6
 8027eb0:	141b      	asrs	r3, r3, #16
 8027eb2:	f53f aea0 	bmi.w	8027bf6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8027eb6:	3a01      	subs	r2, #1
 8027eb8:	4293      	cmp	r3, r2
 8027eba:	f6bf ae9c 	bge.w	8027bf6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8027ebe:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8027ec2:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 8027ec6:	f1bb 0f00 	cmp.w	fp, #0
 8027eca:	f300 809a 	bgt.w	8028002 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8027ece:	9b07      	ldr	r3, [sp, #28]
 8027ed0:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8027ed4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8027ed6:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8027eda:	930a      	str	r3, [sp, #40]	; 0x28
 8027edc:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8027ede:	2b00      	cmp	r3, #0
 8027ee0:	f340 81eb 	ble.w	80282ba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8027ee4:	ee30 0a04 	vadd.f32	s0, s0, s8
 8027ee8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8027eec:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8027ef0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8027ef2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8027ef6:	ee31 1a05 	vadd.f32	s2, s2, s10
 8027efa:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8027efe:	eef0 6a62 	vmov.f32	s13, s5
 8027f02:	ee61 7a27 	vmul.f32	s15, s2, s15
 8027f06:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8027f0a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8027f0e:	ee16 4a90 	vmov	r4, s13
 8027f12:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8027f16:	eef0 6a43 	vmov.f32	s13, s6
 8027f1a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8027f1e:	ee12 2a90 	vmov	r2, s5
 8027f22:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8027f26:	fb92 f3f3 	sdiv	r3, r2, r3
 8027f2a:	ee13 2a10 	vmov	r2, s6
 8027f2e:	9327      	str	r3, [sp, #156]	; 0x9c
 8027f30:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8027f32:	fb92 f3f3 	sdiv	r3, r2, r3
 8027f36:	9328      	str	r3, [sp, #160]	; 0xa0
 8027f38:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8027f3a:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8027f3c:	3b01      	subs	r3, #1
 8027f3e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8027f42:	9316      	str	r3, [sp, #88]	; 0x58
 8027f44:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8027f46:	bf08      	it	eq
 8027f48:	4613      	moveq	r3, r2
 8027f4a:	ee16 6a90 	vmov	r6, s13
 8027f4e:	9307      	str	r3, [sp, #28]
 8027f50:	eeb0 3a67 	vmov.f32	s6, s15
 8027f54:	eef0 2a47 	vmov.f32	s5, s14
 8027f58:	e622      	b.n	8027ba0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 8027f5a:	2800      	cmp	r0, #0
 8027f5c:	f43f ae92 	beq.w	8027c84 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8027f60:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8027f64:	9308      	str	r3, [sp, #32]
 8027f66:	0e1b      	lsrs	r3, r3, #24
 8027f68:	9310      	str	r3, [sp, #64]	; 0x40
 8027f6a:	e68b      	b.n	8027c84 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8027f6c:	8839      	ldrh	r1, [r7, #0]
 8027f6e:	4dd4      	ldr	r5, [pc, #848]	; (80282c0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 8027f70:	43db      	mvns	r3, r3
 8027f72:	ea4f 2e21 	mov.w	lr, r1, asr #8
 8027f76:	fa5f f883 	uxtb.w	r8, r3
 8027f7a:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8027f7e:	fb0e fe08 	mul.w	lr, lr, r8
 8027f82:	10c8      	asrs	r0, r1, #3
 8027f84:	00cb      	lsls	r3, r1, #3
 8027f86:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8027f8a:	f10e 0101 	add.w	r1, lr, #1
 8027f8e:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 8027f92:	fb00 f008 	mul.w	r0, r0, r8
 8027f96:	ea4f 411c 	mov.w	r1, ip, lsr #16
 8027f9a:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 8027f9e:	f100 0e01 	add.w	lr, r0, #1
 8027fa2:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 8027fa6:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8027faa:	b2db      	uxtb	r3, r3
 8027fac:	b2c9      	uxtb	r1, r1
 8027fae:	00d2      	lsls	r2, r2, #3
 8027fb0:	fb03 f308 	mul.w	r3, r3, r8
 8027fb4:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 8027fb8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8027fbc:	430a      	orrs	r2, r1
 8027fbe:	1c59      	adds	r1, r3, #1
 8027fc0:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8027fc4:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8027fc8:	e748      	b.n	8027e5c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 8027fca:	f112 0801 	adds.w	r8, r2, #1
 8027fce:	f53f af4b 	bmi.w	8027e68 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8027fd2:	4543      	cmp	r3, r8
 8027fd4:	f6ff af48 	blt.w	8027e68 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8027fd8:	f11c 0801 	adds.w	r8, ip, #1
 8027fdc:	f53f af44 	bmi.w	8027e68 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8027fe0:	45c6      	cmp	lr, r8
 8027fe2:	f6ff af41 	blt.w	8027e68 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8027fe6:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 8027fea:	fa0f f28e 	sxth.w	r2, lr
 8027fee:	e9cd 1003 	strd	r1, r0, [sp, #12]
 8027ff2:	9200      	str	r2, [sp, #0]
 8027ff4:	b21b      	sxth	r3, r3
 8027ff6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8027ff8:	9819      	ldr	r0, [sp, #100]	; 0x64
 8027ffa:	4639      	mov	r1, r7
 8027ffc:	f7ff fc87 	bl	802790e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 8028000:	e732      	b.n	8027e68 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8028002:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8028004:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8028006:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 802800a:	1421      	asrs	r1, r4, #16
 802800c:	1433      	asrs	r3, r6, #16
 802800e:	fb07 1303 	mla	r3, r7, r3, r1
 8028012:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8028014:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8028018:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 802801c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8028020:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8028024:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8028028:	2a00      	cmp	r2, #0
 802802a:	f000 8107 	beq.w	802823c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 802802e:	684d      	ldr	r5, [r1, #4]
 8028030:	950d      	str	r5, [sp, #52]	; 0x34
 8028032:	0e2d      	lsrs	r5, r5, #24
 8028034:	9514      	str	r5, [sp, #80]	; 0x50
 8028036:	b178      	cbz	r0, 8028058 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8028038:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 802803c:	3f01      	subs	r7, #1
 802803e:	00bf      	lsls	r7, r7, #2
 8028040:	3704      	adds	r7, #4
 8028042:	eb01 0e07 	add.w	lr, r1, r7
 8028046:	59c9      	ldr	r1, [r1, r7]
 8028048:	9109      	str	r1, [sp, #36]	; 0x24
 802804a:	0e09      	lsrs	r1, r1, #24
 802804c:	9111      	str	r1, [sp, #68]	; 0x44
 802804e:	f8de 1004 	ldr.w	r1, [lr, #4]
 8028052:	910e      	str	r1, [sp, #56]	; 0x38
 8028054:	0e09      	lsrs	r1, r1, #24
 8028056:	9115      	str	r1, [sp, #84]	; 0x54
 8028058:	b292      	uxth	r2, r2
 802805a:	b280      	uxth	r0, r0
 802805c:	fb02 f900 	mul.w	r9, r2, r0
 8028060:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8028064:	0112      	lsls	r2, r2, #4
 8028066:	eba2 0e09 	sub.w	lr, r2, r9
 802806a:	b280      	uxth	r0, r0
 802806c:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8028070:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8028072:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8028074:	fa1f fe8e 	uxth.w	lr, lr
 8028078:	1a09      	subs	r1, r1, r0
 802807a:	b289      	uxth	r1, r1
 802807c:	fb0e f202 	mul.w	r2, lr, r2
 8028080:	fb01 220c 	mla	r2, r1, ip, r2
 8028084:	fb00 2205 	mla	r2, r0, r5, r2
 8028088:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802808a:	fb09 2205 	mla	r2, r9, r5, r2
 802808e:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8028092:	2a00      	cmp	r2, #0
 8028094:	f000 80c9 	beq.w	802822a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 8028098:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 802809c:	d019      	beq.n	80280d2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 802809e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80280a2:	fb0c fa0a 	mul.w	sl, ip, sl
 80280a6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80280aa:	fb0c fc03 	mul.w	ip, ip, r3
 80280ae:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80280b2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80280b6:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80280ba:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 80280be:	4453      	add	r3, sl
 80280c0:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80280c4:	0a1b      	lsrs	r3, r3, #8
 80280c6:	0a3f      	lsrs	r7, r7, #8
 80280c8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80280cc:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80280d0:	433b      	orrs	r3, r7
 80280d2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80280d4:	2dff      	cmp	r5, #255	; 0xff
 80280d6:	d020      	beq.n	802811a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 80280d8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80280da:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80280de:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80280e0:	436f      	muls	r7, r5
 80280e2:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80280e4:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80280e8:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80280ea:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80280ee:	fb05 fa0a 	mul.w	sl, r5, sl
 80280f2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80280f6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80280fa:	44bc      	add	ip, r7
 80280fc:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8028100:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8028104:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8028108:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802810c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8028110:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8028114:	ea4c 050a 	orr.w	r5, ip, sl
 8028118:	950d      	str	r5, [sp, #52]	; 0x34
 802811a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802811c:	2dff      	cmp	r5, #255	; 0xff
 802811e:	d020      	beq.n	8028162 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 8028120:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8028122:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8028126:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8028128:	436f      	muls	r7, r5
 802812a:	9d09      	ldr	r5, [sp, #36]	; 0x24
 802812c:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8028130:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8028132:	fb05 fa0c 	mul.w	sl, r5, ip
 8028136:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802813a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802813e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8028142:	44bc      	add	ip, r7
 8028144:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8028148:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802814c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8028150:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8028154:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8028158:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802815c:	ea4c 050a 	orr.w	r5, ip, sl
 8028160:	9509      	str	r5, [sp, #36]	; 0x24
 8028162:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8028164:	2dff      	cmp	r5, #255	; 0xff
 8028166:	d020      	beq.n	80281aa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 8028168:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802816a:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802816e:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8028170:	436f      	muls	r7, r5
 8028172:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8028174:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8028178:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802817a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802817e:	fb05 fa0a 	mul.w	sl, r5, sl
 8028182:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8028186:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802818a:	44bc      	add	ip, r7
 802818c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8028190:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8028194:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8028198:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802819c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80281a0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80281a4:	ea4c 050a 	orr.w	r5, ip, sl
 80281a8:	950e      	str	r5, [sp, #56]	; 0x38
 80281aa:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80281ac:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80281b0:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80281b2:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80281b6:	fb0e f707 	mul.w	r7, lr, r7
 80281ba:	fb01 770c 	mla	r7, r1, ip, r7
 80281be:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80281c2:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80281c4:	fb00 770c 	mla	r7, r0, ip, r7
 80281c8:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80281cc:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80281ce:	fb09 770c 	mla	r7, r9, ip, r7
 80281d2:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 80281d6:	fb0e fe0c 	mul.w	lr, lr, ip
 80281da:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80281de:	fb01 e303 	mla	r3, r1, r3, lr
 80281e2:	9909      	ldr	r1, [sp, #36]	; 0x24
 80281e4:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 80281e8:	990e      	ldr	r1, [sp, #56]	; 0x38
 80281ea:	fb00 330a 	mla	r3, r0, sl, r3
 80281ee:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 80281f2:	fb09 3c0c 	mla	ip, r9, ip, r3
 80281f6:	0a3f      	lsrs	r7, r7, #8
 80281f8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80281fc:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8028200:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8028204:	ea47 070c 	orr.w	r7, r7, ip
 8028208:	2aff      	cmp	r2, #255	; 0xff
 802820a:	ea4f 2317 	mov.w	r3, r7, lsr #8
 802820e:	d11e      	bne.n	802824e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 8028210:	097a      	lsrs	r2, r7, #5
 8028212:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 8028216:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802821a:	f023 0307 	bic.w	r3, r3, #7
 802821e:	4313      	orrs	r3, r2
 8028220:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8028224:	431f      	orrs	r7, r3
 8028226:	f8a8 7000 	strh.w	r7, [r8]
 802822a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 802822c:	441c      	add	r4, r3
 802822e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8028230:	f108 0802 	add.w	r8, r8, #2
 8028234:	441e      	add	r6, r3
 8028236:	f10b 3bff 	add.w	fp, fp, #4294967295
 802823a:	e644      	b.n	8027ec6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 802823c:	2800      	cmp	r0, #0
 802823e:	f43f af0b 	beq.w	8028058 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8028242:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 8028246:	9109      	str	r1, [sp, #36]	; 0x24
 8028248:	0e09      	lsrs	r1, r1, #24
 802824a:	9111      	str	r1, [sp, #68]	; 0x44
 802824c:	e704      	b.n	8028058 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 802824e:	f8b8 1000 	ldrh.w	r1, [r8]
 8028252:	43d2      	mvns	r2, r2
 8028254:	ea4f 2c21 	mov.w	ip, r1, asr #8
 8028258:	fa5f fe82 	uxtb.w	lr, r2
 802825c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8028260:	fb0c fc0e 	mul.w	ip, ip, lr
 8028264:	10c8      	asrs	r0, r1, #3
 8028266:	00ca      	lsls	r2, r1, #3
 8028268:	f10c 0101 	add.w	r1, ip, #1
 802826c:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8028270:	0c39      	lsrs	r1, r7, #16
 8028272:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8028276:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802827a:	4911      	ldr	r1, [pc, #68]	; (80282c0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 802827c:	fb00 f00e 	mul.w	r0, r0, lr
 8028280:	fa5f fc8c 	uxtb.w	ip, ip
 8028284:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 8028288:	b2d2      	uxtb	r2, r2
 802828a:	1c41      	adds	r1, r0, #1
 802828c:	fb02 f20e 	mul.w	r2, r2, lr
 8028290:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8028294:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8028298:	1c51      	adds	r1, r2, #1
 802829a:	00c0      	lsls	r0, r0, #3
 802829c:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80282a0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80282a4:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 80282a8:	ea4c 0c00 	orr.w	ip, ip, r0
 80282ac:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 80282b0:	ea47 0c0c 	orr.w	ip, r7, ip
 80282b4:	f8a8 c000 	strh.w	ip, [r8]
 80282b8:	e7b7      	b.n	802822a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 80282ba:	b01b      	add	sp, #108	; 0x6c
 80282bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80282c0:	fffff800 	.word	0xfffff800

080282c4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 80282c4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80282c8:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 80282cc:	2d00      	cmp	r5, #0
 80282ce:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 80282d2:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 80282d6:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 80282da:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 80282de:	fb05 0e03 	mla	lr, r5, r3, r0
 80282e2:	f2c0 808c 	blt.w	80283fe <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 80282e6:	45a9      	cmp	r9, r5
 80282e8:	f340 8089 	ble.w	80283fe <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 80282ec:	2800      	cmp	r0, #0
 80282ee:	f2c0 8084 	blt.w	80283fa <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 80282f2:	4580      	cmp	r8, r0
 80282f4:	f340 8081 	ble.w	80283fa <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 80282f8:	ea4f 045e 	mov.w	r4, lr, lsr #1
 80282fc:	f01e 0f01 	tst.w	lr, #1
 8028300:	5d16      	ldrb	r6, [r2, r4]
 8028302:	bf0c      	ite	eq
 8028304:	f006 060f 	andeq.w	r6, r6, #15
 8028308:	1136      	asrne	r6, r6, #4
 802830a:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 802830e:	b2f6      	uxtb	r6, r6
 8028310:	1c44      	adds	r4, r0, #1
 8028312:	d477      	bmi.n	8028404 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8028314:	45a0      	cmp	r8, r4
 8028316:	dd75      	ble.n	8028404 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8028318:	2f00      	cmp	r7, #0
 802831a:	d075      	beq.n	8028408 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 802831c:	f10e 0a01 	add.w	sl, lr, #1
 8028320:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8028324:	f01a 0f01 	tst.w	sl, #1
 8028328:	5d14      	ldrb	r4, [r2, r4]
 802832a:	bf0c      	ite	eq
 802832c:	f004 040f 	andeq.w	r4, r4, #15
 8028330:	1124      	asrne	r4, r4, #4
 8028332:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8028336:	b2e4      	uxtb	r4, r4
 8028338:	3501      	adds	r5, #1
 802833a:	d469      	bmi.n	8028410 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 802833c:	45a9      	cmp	r9, r5
 802833e:	dd67      	ble.n	8028410 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 8028340:	f1bc 0f00 	cmp.w	ip, #0
 8028344:	d067      	beq.n	8028416 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 8028346:	2800      	cmp	r0, #0
 8028348:	db60      	blt.n	802840c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 802834a:	4580      	cmp	r8, r0
 802834c:	dd5e      	ble.n	802840c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 802834e:	eb03 090e 	add.w	r9, r3, lr
 8028352:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8028356:	f019 0f01 	tst.w	r9, #1
 802835a:	5d55      	ldrb	r5, [r2, r5]
 802835c:	bf0c      	ite	eq
 802835e:	f005 050f 	andeq.w	r5, r5, #15
 8028362:	112d      	asrne	r5, r5, #4
 8028364:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8028368:	b2ed      	uxtb	r5, r5
 802836a:	3001      	adds	r0, #1
 802836c:	d456      	bmi.n	802841c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 802836e:	4580      	cmp	r8, r0
 8028370:	dd54      	ble.n	802841c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 8028372:	2f00      	cmp	r7, #0
 8028374:	d054      	beq.n	8028420 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 8028376:	3301      	adds	r3, #1
 8028378:	449e      	add	lr, r3
 802837a:	ea4f 035e 	mov.w	r3, lr, lsr #1
 802837e:	f01e 0f01 	tst.w	lr, #1
 8028382:	5cd0      	ldrb	r0, [r2, r3]
 8028384:	bf0c      	ite	eq
 8028386:	f000 000f 	andeq.w	r0, r0, #15
 802838a:	1100      	asrne	r0, r0, #4
 802838c:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8028390:	b2c3      	uxtb	r3, r0
 8028392:	b2ba      	uxth	r2, r7
 8028394:	fa1f fc8c 	uxth.w	ip, ip
 8028398:	fb02 f00c 	mul.w	r0, r2, ip
 802839c:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 80283a0:	0112      	lsls	r2, r2, #4
 80283a2:	fa1f fc8c 	uxth.w	ip, ip
 80283a6:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 80283aa:	1a12      	subs	r2, r2, r0
 80283ac:	eba7 070c 	sub.w	r7, r7, ip
 80283b0:	b292      	uxth	r2, r2
 80283b2:	b2bf      	uxth	r7, r7
 80283b4:	4362      	muls	r2, r4
 80283b6:	fb06 2207 	mla	r2, r6, r7, r2
 80283ba:	fb0c 2505 	mla	r5, ip, r5, r2
 80283be:	fb00 5303 	mla	r3, r0, r3, r5
 80283c2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80283c6:	b1b3      	cbz	r3, 80283f6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 80283c8:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 80283cc:	435a      	muls	r2, r3
 80283ce:	1c53      	adds	r3, r2, #1
 80283d0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80283d4:	4a2d      	ldr	r2, [pc, #180]	; (802848c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 80283d6:	121b      	asrs	r3, r3, #8
 80283d8:	6812      	ldr	r2, [r2, #0]
 80283da:	2bff      	cmp	r3, #255	; 0xff
 80283dc:	ea4f 2612 	mov.w	r6, r2, lsr #8
 80283e0:	d120      	bne.n	8028424 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 80283e2:	4b2b      	ldr	r3, [pc, #172]	; (8028490 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 80283e4:	0950      	lsrs	r0, r2, #5
 80283e6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80283ea:	4033      	ands	r3, r6
 80283ec:	4318      	orrs	r0, r3
 80283ee:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80283f2:	4302      	orrs	r2, r0
 80283f4:	800a      	strh	r2, [r1, #0]
 80283f6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80283fa:	2600      	movs	r6, #0
 80283fc:	e788      	b.n	8028310 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 80283fe:	2400      	movs	r4, #0
 8028400:	4626      	mov	r6, r4
 8028402:	e799      	b.n	8028338 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8028404:	2400      	movs	r4, #0
 8028406:	e797      	b.n	8028338 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8028408:	463c      	mov	r4, r7
 802840a:	e795      	b.n	8028338 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 802840c:	2500      	movs	r5, #0
 802840e:	e7ac      	b.n	802836a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 8028410:	2300      	movs	r3, #0
 8028412:	461d      	mov	r5, r3
 8028414:	e7bd      	b.n	8028392 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8028416:	4663      	mov	r3, ip
 8028418:	4665      	mov	r5, ip
 802841a:	e7ba      	b.n	8028392 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 802841c:	2300      	movs	r3, #0
 802841e:	e7b8      	b.n	8028392 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8028420:	463b      	mov	r3, r7
 8028422:	e7b6      	b.n	8028392 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8028424:	880d      	ldrh	r5, [r1, #0]
 8028426:	b29f      	uxth	r7, r3
 8028428:	122c      	asrs	r4, r5, #8
 802842a:	f3c2 4007 	ubfx	r0, r2, #16, #8
 802842e:	43db      	mvns	r3, r3
 8028430:	b2db      	uxtb	r3, r3
 8028432:	fb10 f007 	smulbb	r0, r0, r7
 8028436:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 802843a:	fb04 0403 	mla	r4, r4, r3, r0
 802843e:	b2f6      	uxtb	r6, r6
 8028440:	10e8      	asrs	r0, r5, #3
 8028442:	b2d2      	uxtb	r2, r2
 8028444:	00ed      	lsls	r5, r5, #3
 8028446:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802844a:	fb12 f207 	smulbb	r2, r2, r7
 802844e:	fb16 f607 	smulbb	r6, r6, r7
 8028452:	b2ed      	uxtb	r5, r5
 8028454:	b2a4      	uxth	r4, r4
 8028456:	fb00 6603 	mla	r6, r0, r3, r6
 802845a:	fb05 2303 	mla	r3, r5, r3, r2
 802845e:	b29a      	uxth	r2, r3
 8028460:	1c63      	adds	r3, r4, #1
 8028462:	b2b0      	uxth	r0, r6
 8028464:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8028468:	1c53      	adds	r3, r2, #1
 802846a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802846e:	1c42      	adds	r2, r0, #1
 8028470:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8028474:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8028478:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802847c:	0940      	lsrs	r0, r0, #5
 802847e:	4323      	orrs	r3, r4
 8028480:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8028484:	4303      	orrs	r3, r0
 8028486:	800b      	strh	r3, [r1, #0]
 8028488:	e7b5      	b.n	80283f6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 802848a:	bf00      	nop
 802848c:	2001385c 	.word	0x2001385c
 8028490:	00fff800 	.word	0x00fff800

08028494 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8028494:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028498:	b097      	sub	sp, #92	; 0x5c
 802849a:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 802849e:	9214      	str	r2, [sp, #80]	; 0x50
 80284a0:	9309      	str	r3, [sp, #36]	; 0x24
 80284a2:	9a25      	ldr	r2, [sp, #148]	; 0x94
 80284a4:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 80284a8:	910d      	str	r1, [sp, #52]	; 0x34
 80284aa:	930f      	str	r3, [sp, #60]	; 0x3c
 80284ac:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 80284b0:	9015      	str	r0, [sp, #84]	; 0x54
 80284b2:	6850      	ldr	r0, [r2, #4]
 80284b4:	6812      	ldr	r2, [r2, #0]
 80284b6:	fb00 1303 	mla	r3, r0, r3, r1
 80284ba:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 80284be:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80284c0:	689b      	ldr	r3, [r3, #8]
 80284c2:	3301      	adds	r3, #1
 80284c4:	f023 0301 	bic.w	r3, r3, #1
 80284c8:	930a      	str	r3, [sp, #40]	; 0x28
 80284ca:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80284cc:	681f      	ldr	r7, [r3, #0]
 80284ce:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80284d0:	2b00      	cmp	r3, #0
 80284d2:	dc03      	bgt.n	80284dc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80284d4:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80284d6:	2b00      	cmp	r3, #0
 80284d8:	f340 8287 	ble.w	80289ea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 80284dc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80284de:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80284e2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80284e6:	1e48      	subs	r0, r1, #1
 80284e8:	f102 3cff 	add.w	ip, r2, #4294967295
 80284ec:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80284ee:	2b00      	cmp	r3, #0
 80284f0:	f340 80c4 	ble.w	802867c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80284f4:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80284f8:	ea4f 4326 	mov.w	r3, r6, asr #16
 80284fc:	d406      	bmi.n	802850c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80284fe:	4586      	cmp	lr, r0
 8028500:	da04      	bge.n	802850c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8028502:	2b00      	cmp	r3, #0
 8028504:	db02      	blt.n	802850c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8028506:	4563      	cmp	r3, ip
 8028508:	f2c0 80b9 	blt.w	802867e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 802850c:	f11e 0e01 	adds.w	lr, lr, #1
 8028510:	f100 80aa 	bmi.w	8028668 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8028514:	4571      	cmp	r1, lr
 8028516:	f2c0 80a7 	blt.w	8028668 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 802851a:	3301      	adds	r3, #1
 802851c:	f100 80a4 	bmi.w	8028668 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8028520:	429a      	cmp	r2, r3
 8028522:	f2c0 80a1 	blt.w	8028668 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8028526:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8028528:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 802852c:	930e      	str	r3, [sp, #56]	; 0x38
 802852e:	46c8      	mov	r8, r9
 8028530:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8028532:	2b00      	cmp	r3, #0
 8028534:	f340 80c3 	ble.w	80286be <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8028538:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802853a:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 802853e:	1423      	asrs	r3, r4, #16
 8028540:	ea4f 4026 	mov.w	r0, r6, asr #16
 8028544:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8028548:	f3c6 3103 	ubfx	r1, r6, #12, #4
 802854c:	f100 814d 	bmi.w	80287ea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8028550:	f10c 3bff 	add.w	fp, ip, #4294967295
 8028554:	455b      	cmp	r3, fp
 8028556:	f280 8148 	bge.w	80287ea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802855a:	2800      	cmp	r0, #0
 802855c:	f2c0 8145 	blt.w	80287ea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8028560:	f10e 3bff 	add.w	fp, lr, #4294967295
 8028564:	4558      	cmp	r0, fp
 8028566:	f280 8140 	bge.w	80287ea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802856a:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 802856c:	fb00 3305 	mla	r3, r0, r5, r3
 8028570:	0858      	lsrs	r0, r3, #1
 8028572:	07dd      	lsls	r5, r3, #31
 8028574:	f817 c000 	ldrb.w	ip, [r7, r0]
 8028578:	bf54      	ite	pl
 802857a:	f00c 0c0f 	andpl.w	ip, ip, #15
 802857e:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8028582:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8028586:	fa5f fc8c 	uxtb.w	ip, ip
 802858a:	2a00      	cmp	r2, #0
 802858c:	f000 80db 	beq.w	8028746 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 8028590:	1c58      	adds	r0, r3, #1
 8028592:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8028596:	07c0      	lsls	r0, r0, #31
 8028598:	f817 e00e 	ldrb.w	lr, [r7, lr]
 802859c:	bf54      	ite	pl
 802859e:	f00e 0e0f 	andpl.w	lr, lr, #15
 80285a2:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 80285a6:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 80285aa:	fa5f f08e 	uxtb.w	r0, lr
 80285ae:	9010      	str	r0, [sp, #64]	; 0x40
 80285b0:	b1c9      	cbz	r1, 80285e6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80285b2:	4453      	add	r3, sl
 80285b4:	0858      	lsrs	r0, r3, #1
 80285b6:	07dd      	lsls	r5, r3, #31
 80285b8:	5c38      	ldrb	r0, [r7, r0]
 80285ba:	bf54      	ite	pl
 80285bc:	f000 000f 	andpl.w	r0, r0, #15
 80285c0:	1100      	asrmi	r0, r0, #4
 80285c2:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80285c6:	3301      	adds	r3, #1
 80285c8:	b2c0      	uxtb	r0, r0
 80285ca:	900b      	str	r0, [sp, #44]	; 0x2c
 80285cc:	0858      	lsrs	r0, r3, #1
 80285ce:	07dd      	lsls	r5, r3, #31
 80285d0:	f817 e000 	ldrb.w	lr, [r7, r0]
 80285d4:	bf54      	ite	pl
 80285d6:	f00e 030f 	andpl.w	r3, lr, #15
 80285da:	ea4f 132e 	movmi.w	r3, lr, asr #4
 80285de:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80285e2:	b2db      	uxtb	r3, r3
 80285e4:	9311      	str	r3, [sp, #68]	; 0x44
 80285e6:	b292      	uxth	r2, r2
 80285e8:	b289      	uxth	r1, r1
 80285ea:	fb02 f301 	mul.w	r3, r2, r1
 80285ee:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 80285f2:	0112      	lsls	r2, r2, #4
 80285f4:	b289      	uxth	r1, r1
 80285f6:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 80285fa:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80285fc:	1ad2      	subs	r2, r2, r3
 80285fe:	1a40      	subs	r0, r0, r1
 8028600:	b292      	uxth	r2, r2
 8028602:	436a      	muls	r2, r5
 8028604:	b280      	uxth	r0, r0
 8028606:	fb0c 2c00 	mla	ip, ip, r0, r2
 802860a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802860c:	fb01 c102 	mla	r1, r1, r2, ip
 8028610:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8028612:	fb03 1302 	mla	r3, r3, r2, r1
 8028616:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802861a:	b1db      	cbz	r3, 8028654 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802861c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802861e:	4353      	muls	r3, r2
 8028620:	1c5a      	adds	r2, r3, #1
 8028622:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8028626:	4ac6      	ldr	r2, [pc, #792]	; (8028940 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8028628:	121b      	asrs	r3, r3, #8
 802862a:	6812      	ldr	r2, [r2, #0]
 802862c:	2bff      	cmp	r3, #255	; 0xff
 802862e:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8028632:	f040 8099 	bne.w	8028768 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 8028636:	0953      	lsrs	r3, r2, #5
 8028638:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 802863c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8028640:	f02c 0c07 	bic.w	ip, ip, #7
 8028644:	ea43 0c0c 	orr.w	ip, r3, ip
 8028648:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802864c:	ea4c 0202 	orr.w	r2, ip, r2
 8028650:	f8a8 2000 	strh.w	r2, [r8]
 8028654:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8028656:	441c      	add	r4, r3
 8028658:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802865a:	441e      	add	r6, r3
 802865c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802865e:	3b01      	subs	r3, #1
 8028660:	f108 0802 	add.w	r8, r8, #2
 8028664:	930e      	str	r3, [sp, #56]	; 0x38
 8028666:	e763      	b.n	8028530 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8028668:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 802866a:	441c      	add	r4, r3
 802866c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802866e:	441e      	add	r6, r3
 8028670:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8028672:	3b01      	subs	r3, #1
 8028674:	9309      	str	r3, [sp, #36]	; 0x24
 8028676:	f109 0902 	add.w	r9, r9, #2
 802867a:	e737      	b.n	80284ec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 802867c:	d024      	beq.n	80286c8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 802867e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8028680:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8028682:	3b01      	subs	r3, #1
 8028684:	fb00 4003 	mla	r0, r0, r3, r4
 8028688:	1400      	asrs	r0, r0, #16
 802868a:	f53f af4c 	bmi.w	8028526 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802868e:	3901      	subs	r1, #1
 8028690:	4288      	cmp	r0, r1
 8028692:	f6bf af48 	bge.w	8028526 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8028696:	9924      	ldr	r1, [sp, #144]	; 0x90
 8028698:	fb01 6303 	mla	r3, r1, r3, r6
 802869c:	141b      	asrs	r3, r3, #16
 802869e:	f53f af42 	bmi.w	8028526 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80286a2:	3a01      	subs	r2, #1
 80286a4:	4293      	cmp	r3, r2
 80286a6:	f6bf af3e 	bge.w	8028526 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80286aa:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 80286ae:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 80286b2:	930e      	str	r3, [sp, #56]	; 0x38
 80286b4:	46c8      	mov	r8, r9
 80286b6:	f1bb 0f00 	cmp.w	fp, #0
 80286ba:	f300 80b7 	bgt.w	802882c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 80286be:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80286c0:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80286c4:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 80286c8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80286ca:	2b00      	cmp	r3, #0
 80286cc:	f340 818d 	ble.w	80289ea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 80286d0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80286d4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80286d8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80286dc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80286de:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80286e2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80286e6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80286ea:	eef0 6a62 	vmov.f32	s13, s5
 80286ee:	ee61 7a27 	vmul.f32	s15, s2, s15
 80286f2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80286f6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80286fa:	ee16 4a90 	vmov	r4, s13
 80286fe:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8028702:	eef0 6a43 	vmov.f32	s13, s6
 8028706:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802870a:	ee12 2a90 	vmov	r2, s5
 802870e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8028712:	fb92 f3f3 	sdiv	r3, r2, r3
 8028716:	ee13 2a10 	vmov	r2, s6
 802871a:	9323      	str	r3, [sp, #140]	; 0x8c
 802871c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802871e:	fb92 f3f3 	sdiv	r3, r2, r3
 8028722:	9324      	str	r3, [sp, #144]	; 0x90
 8028724:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8028726:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8028728:	3b01      	subs	r3, #1
 802872a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802872e:	930d      	str	r3, [sp, #52]	; 0x34
 8028730:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8028732:	bf08      	it	eq
 8028734:	4613      	moveq	r3, r2
 8028736:	ee16 6a90 	vmov	r6, s13
 802873a:	9309      	str	r3, [sp, #36]	; 0x24
 802873c:	eeb0 3a67 	vmov.f32	s6, s15
 8028740:	eef0 2a47 	vmov.f32	s5, s14
 8028744:	e6c3      	b.n	80284ce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8028746:	2900      	cmp	r1, #0
 8028748:	f43f af4d 	beq.w	80285e6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 802874c:	eb0a 0003 	add.w	r0, sl, r3
 8028750:	0843      	lsrs	r3, r0, #1
 8028752:	07c0      	lsls	r0, r0, #31
 8028754:	5cfb      	ldrb	r3, [r7, r3]
 8028756:	bf54      	ite	pl
 8028758:	f003 030f 	andpl.w	r3, r3, #15
 802875c:	111b      	asrmi	r3, r3, #4
 802875e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8028762:	b2db      	uxtb	r3, r3
 8028764:	930b      	str	r3, [sp, #44]	; 0x2c
 8028766:	e73e      	b.n	80285e6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8028768:	f8b8 e000 	ldrh.w	lr, [r8]
 802876c:	fa1f fb83 	uxth.w	fp, r3
 8028770:	ea4f 202e 	mov.w	r0, lr, asr #8
 8028774:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8028778:	43db      	mvns	r3, r3
 802877a:	b2db      	uxtb	r3, r3
 802877c:	fb11 f10b 	smulbb	r1, r1, fp
 8028780:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8028784:	fb00 1003 	mla	r0, r0, r3, r1
 8028788:	fa5f fc8c 	uxtb.w	ip, ip
 802878c:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8028790:	b2d2      	uxtb	r2, r2
 8028792:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8028796:	b280      	uxth	r0, r0
 8028798:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 802879c:	fb1c fc0b 	smulbb	ip, ip, fp
 80287a0:	fa5f fe8e 	uxtb.w	lr, lr
 80287a4:	fb12 fb0b 	smulbb	fp, r2, fp
 80287a8:	fb01 cc03 	mla	ip, r1, r3, ip
 80287ac:	fb0e bb03 	mla	fp, lr, r3, fp
 80287b0:	1c43      	adds	r3, r0, #1
 80287b2:	fa1f fc8c 	uxth.w	ip, ip
 80287b6:	fa1f fb8b 	uxth.w	fp, fp
 80287ba:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80287be:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 80287c2:	f10c 0101 	add.w	r1, ip, #1
 80287c6:	f10b 0001 	add.w	r0, fp, #1
 80287ca:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 80287ce:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80287d2:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80287d6:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80287da:	4318      	orrs	r0, r3
 80287dc:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80287e0:	ea40 000c 	orr.w	r0, r0, ip
 80287e4:	f8a8 0000 	strh.w	r0, [r8]
 80287e8:	e734      	b.n	8028654 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80287ea:	f113 0b01 	adds.w	fp, r3, #1
 80287ee:	f53f af31 	bmi.w	8028654 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80287f2:	45dc      	cmp	ip, fp
 80287f4:	f6ff af2e 	blt.w	8028654 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80287f8:	f110 0b01 	adds.w	fp, r0, #1
 80287fc:	f53f af2a 	bmi.w	8028654 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8028800:	45de      	cmp	lr, fp
 8028802:	f6ff af27 	blt.w	8028654 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8028806:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8028808:	9302      	str	r3, [sp, #8]
 802880a:	fa0f f38e 	sxth.w	r3, lr
 802880e:	9301      	str	r3, [sp, #4]
 8028810:	fa0f f38c 	sxth.w	r3, ip
 8028814:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8028818:	e9cd 1505 	strd	r1, r5, [sp, #20]
 802881c:	9300      	str	r3, [sp, #0]
 802881e:	463a      	mov	r2, r7
 8028820:	4653      	mov	r3, sl
 8028822:	4641      	mov	r1, r8
 8028824:	9815      	ldr	r0, [sp, #84]	; 0x54
 8028826:	f7ff fd4d 	bl	80282c4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 802882a:	e713      	b.n	8028654 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802882c:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 802882e:	1422      	asrs	r2, r4, #16
 8028830:	1433      	asrs	r3, r6, #16
 8028832:	fb05 2303 	mla	r3, r5, r3, r2
 8028836:	085a      	lsrs	r2, r3, #1
 8028838:	07dd      	lsls	r5, r3, #31
 802883a:	5cba      	ldrb	r2, [r7, r2]
 802883c:	bf54      	ite	pl
 802883e:	f002 020f 	andpl.w	r2, r2, #15
 8028842:	1112      	asrmi	r2, r2, #4
 8028844:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8028848:	f3c4 3103 	ubfx	r1, r4, #12, #4
 802884c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8028850:	b2d2      	uxtb	r2, r2
 8028852:	2900      	cmp	r1, #0
 8028854:	d076      	beq.n	8028944 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8028856:	f103 0e01 	add.w	lr, r3, #1
 802885a:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 802885e:	f01e 0f01 	tst.w	lr, #1
 8028862:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8028866:	bf0c      	ite	eq
 8028868:	f00c 0c0f 	andeq.w	ip, ip, #15
 802886c:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 8028870:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8028874:	fa5f f58c 	uxtb.w	r5, ip
 8028878:	9512      	str	r5, [sp, #72]	; 0x48
 802887a:	b300      	cbz	r0, 80288be <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 802887c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802887e:	442b      	add	r3, r5
 8028880:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8028884:	07dd      	lsls	r5, r3, #31
 8028886:	f817 c00c 	ldrb.w	ip, [r7, ip]
 802888a:	bf54      	ite	pl
 802888c:	f00c 0c0f 	andpl.w	ip, ip, #15
 8028890:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8028894:	3301      	adds	r3, #1
 8028896:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 802889a:	fa5f f58c 	uxtb.w	r5, ip
 802889e:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 80288a2:	950c      	str	r5, [sp, #48]	; 0x30
 80288a4:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80288a8:	07dd      	lsls	r5, r3, #31
 80288aa:	bf54      	ite	pl
 80288ac:	f00c 0c0f 	andpl.w	ip, ip, #15
 80288b0:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80288b4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80288b8:	fa5f f38c 	uxtb.w	r3, ip
 80288bc:	9313      	str	r3, [sp, #76]	; 0x4c
 80288be:	b289      	uxth	r1, r1
 80288c0:	b280      	uxth	r0, r0
 80288c2:	fb01 f300 	mul.w	r3, r1, r0
 80288c6:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 80288ca:	0109      	lsls	r1, r1, #4
 80288cc:	b280      	uxth	r0, r0
 80288ce:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 80288d2:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80288d4:	1ac9      	subs	r1, r1, r3
 80288d6:	ebac 0c00 	sub.w	ip, ip, r0
 80288da:	b289      	uxth	r1, r1
 80288dc:	4369      	muls	r1, r5
 80288de:	fa1f fc8c 	uxth.w	ip, ip
 80288e2:	fb02 120c 	mla	r2, r2, ip, r1
 80288e6:	990c      	ldr	r1, [sp, #48]	; 0x30
 80288e8:	fb00 2001 	mla	r0, r0, r1, r2
 80288ec:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80288ee:	fb03 0302 	mla	r3, r3, r2, r0
 80288f2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80288f6:	b1d3      	cbz	r3, 802892e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 80288f8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80288fa:	4353      	muls	r3, r2
 80288fc:	1c5a      	adds	r2, r3, #1
 80288fe:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8028902:	4a0f      	ldr	r2, [pc, #60]	; (8028940 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8028904:	121b      	asrs	r3, r3, #8
 8028906:	6812      	ldr	r2, [r2, #0]
 8028908:	2bff      	cmp	r3, #255	; 0xff
 802890a:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 802890e:	d12d      	bne.n	802896c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8028910:	0953      	lsrs	r3, r2, #5
 8028912:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8028916:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802891a:	f02c 0c07 	bic.w	ip, ip, #7
 802891e:	ea43 0c0c 	orr.w	ip, r3, ip
 8028922:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8028926:	ea4c 0202 	orr.w	r2, ip, r2
 802892a:	f8a8 2000 	strh.w	r2, [r8]
 802892e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8028930:	441c      	add	r4, r3
 8028932:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8028934:	f108 0802 	add.w	r8, r8, #2
 8028938:	441e      	add	r6, r3
 802893a:	f10b 3bff 	add.w	fp, fp, #4294967295
 802893e:	e6ba      	b.n	80286b6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8028940:	2001385c 	.word	0x2001385c
 8028944:	2800      	cmp	r0, #0
 8028946:	d0ba      	beq.n	80288be <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8028948:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802894a:	442b      	add	r3, r5
 802894c:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8028950:	07db      	lsls	r3, r3, #31
 8028952:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8028956:	bf54      	ite	pl
 8028958:	f00c 0c0f 	andpl.w	ip, ip, #15
 802895c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8028960:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8028964:	fa5f f38c 	uxtb.w	r3, ip
 8028968:	930c      	str	r3, [sp, #48]	; 0x30
 802896a:	e7a8      	b.n	80288be <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 802896c:	f8b8 e000 	ldrh.w	lr, [r8]
 8028970:	fa1f fa83 	uxth.w	sl, r3
 8028974:	ea4f 202e 	mov.w	r0, lr, asr #8
 8028978:	f3c2 4107 	ubfx	r1, r2, #16, #8
 802897c:	43db      	mvns	r3, r3
 802897e:	b2db      	uxtb	r3, r3
 8028980:	fb11 f10a 	smulbb	r1, r1, sl
 8028984:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8028988:	fb00 1003 	mla	r0, r0, r3, r1
 802898c:	b2d2      	uxtb	r2, r2
 802898e:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8028992:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8028996:	fa5f fe8e 	uxtb.w	lr, lr
 802899a:	fb12 f20a 	smulbb	r2, r2, sl
 802899e:	fb0e 2203 	mla	r2, lr, r3, r2
 80289a2:	fa5f fc8c 	uxtb.w	ip, ip
 80289a6:	b280      	uxth	r0, r0
 80289a8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80289ac:	b292      	uxth	r2, r2
 80289ae:	fb1c fc0a 	smulbb	ip, ip, sl
 80289b2:	fb01 cc03 	mla	ip, r1, r3, ip
 80289b6:	1c43      	adds	r3, r0, #1
 80289b8:	1c51      	adds	r1, r2, #1
 80289ba:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80289be:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 80289c2:	fa1f fc8c 	uxth.w	ip, ip
 80289c6:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 80289ca:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 80289ce:	4308      	orrs	r0, r1
 80289d0:	f10c 0101 	add.w	r1, ip, #1
 80289d4:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80289d8:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80289dc:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80289e0:	ea40 000c 	orr.w	r0, r0, ip
 80289e4:	f8a8 0000 	strh.w	r0, [r8]
 80289e8:	e7a1      	b.n	802892e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 80289ea:	b017      	add	sp, #92	; 0x5c
 80289ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080289f0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 80289f0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80289f4:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 80289f8:	2d00      	cmp	r5, #0
 80289fa:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 80289fe:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8028a02:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8028a06:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8028a0a:	fb05 0e03 	mla	lr, r5, r3, r0
 8028a0e:	f2c0 80b0 	blt.w	8028b72 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8028a12:	45a9      	cmp	r9, r5
 8028a14:	f340 80ad 	ble.w	8028b72 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8028a18:	2800      	cmp	r0, #0
 8028a1a:	f2c0 80a8 	blt.w	8028b6e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8028a1e:	4580      	cmp	r8, r0
 8028a20:	f340 80a5 	ble.w	8028b6e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8028a24:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8028a28:	f01e 0f01 	tst.w	lr, #1
 8028a2c:	5d16      	ldrb	r6, [r2, r4]
 8028a2e:	bf0c      	ite	eq
 8028a30:	f006 060f 	andeq.w	r6, r6, #15
 8028a34:	1136      	asrne	r6, r6, #4
 8028a36:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8028a3a:	b2f6      	uxtb	r6, r6
 8028a3c:	1c44      	adds	r4, r0, #1
 8028a3e:	f100 809b 	bmi.w	8028b78 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8028a42:	45a0      	cmp	r8, r4
 8028a44:	f340 8098 	ble.w	8028b78 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8028a48:	2f00      	cmp	r7, #0
 8028a4a:	f000 8097 	beq.w	8028b7c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 8028a4e:	f10e 0a01 	add.w	sl, lr, #1
 8028a52:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8028a56:	f01a 0f01 	tst.w	sl, #1
 8028a5a:	5d14      	ldrb	r4, [r2, r4]
 8028a5c:	bf0c      	ite	eq
 8028a5e:	f004 040f 	andeq.w	r4, r4, #15
 8028a62:	1124      	asrne	r4, r4, #4
 8028a64:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8028a68:	b2e4      	uxtb	r4, r4
 8028a6a:	3501      	adds	r5, #1
 8028a6c:	f100 808a 	bmi.w	8028b84 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8028a70:	45a9      	cmp	r9, r5
 8028a72:	f340 8087 	ble.w	8028b84 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8028a76:	f1bc 0f00 	cmp.w	ip, #0
 8028a7a:	f000 8086 	beq.w	8028b8a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 8028a7e:	2800      	cmp	r0, #0
 8028a80:	db7e      	blt.n	8028b80 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8028a82:	4580      	cmp	r8, r0
 8028a84:	dd7c      	ble.n	8028b80 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8028a86:	eb03 090e 	add.w	r9, r3, lr
 8028a8a:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8028a8e:	f019 0f01 	tst.w	r9, #1
 8028a92:	5d55      	ldrb	r5, [r2, r5]
 8028a94:	bf0c      	ite	eq
 8028a96:	f005 050f 	andeq.w	r5, r5, #15
 8028a9a:	112d      	asrne	r5, r5, #4
 8028a9c:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8028aa0:	b2ed      	uxtb	r5, r5
 8028aa2:	3001      	adds	r0, #1
 8028aa4:	d474      	bmi.n	8028b90 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8028aa6:	4580      	cmp	r8, r0
 8028aa8:	dd72      	ble.n	8028b90 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8028aaa:	2f00      	cmp	r7, #0
 8028aac:	d072      	beq.n	8028b94 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 8028aae:	3301      	adds	r3, #1
 8028ab0:	449e      	add	lr, r3
 8028ab2:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8028ab6:	f01e 0f01 	tst.w	lr, #1
 8028aba:	5cd0      	ldrb	r0, [r2, r3]
 8028abc:	bf0c      	ite	eq
 8028abe:	f000 000f 	andeq.w	r0, r0, #15
 8028ac2:	1100      	asrne	r0, r0, #4
 8028ac4:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8028ac8:	b2c3      	uxtb	r3, r0
 8028aca:	b2ba      	uxth	r2, r7
 8028acc:	fa1f fc8c 	uxth.w	ip, ip
 8028ad0:	fb02 f00c 	mul.w	r0, r2, ip
 8028ad4:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8028ad8:	0112      	lsls	r2, r2, #4
 8028ada:	fa1f fc8c 	uxth.w	ip, ip
 8028ade:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8028ae2:	1a12      	subs	r2, r2, r0
 8028ae4:	eba7 070c 	sub.w	r7, r7, ip
 8028ae8:	b292      	uxth	r2, r2
 8028aea:	b2bf      	uxth	r7, r7
 8028aec:	4362      	muls	r2, r4
 8028aee:	fb06 2207 	mla	r2, r6, r7, r2
 8028af2:	fb0c 2505 	mla	r5, ip, r5, r2
 8028af6:	fb00 5303 	mla	r3, r0, r3, r5
 8028afa:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8028afe:	b3a3      	cbz	r3, 8028b6a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 8028b00:	4a25      	ldr	r2, [pc, #148]	; (8028b98 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 8028b02:	880e      	ldrh	r6, [r1, #0]
 8028b04:	6815      	ldr	r5, [r2, #0]
 8028b06:	1234      	asrs	r4, r6, #8
 8028b08:	b29a      	uxth	r2, r3
 8028b0a:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8028b0e:	43db      	mvns	r3, r3
 8028b10:	b2db      	uxtb	r3, r3
 8028b12:	fb10 f002 	smulbb	r0, r0, r2
 8028b16:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8028b1a:	fb04 0403 	mla	r4, r4, r3, r0
 8028b1e:	f3c5 2707 	ubfx	r7, r5, #8, #8
 8028b22:	10f0      	asrs	r0, r6, #3
 8028b24:	b2ed      	uxtb	r5, r5
 8028b26:	00f6      	lsls	r6, r6, #3
 8028b28:	fb17 f702 	smulbb	r7, r7, r2
 8028b2c:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8028b30:	fb15 f202 	smulbb	r2, r5, r2
 8028b34:	b2f6      	uxtb	r6, r6
 8028b36:	b2a4      	uxth	r4, r4
 8028b38:	fb00 7003 	mla	r0, r0, r3, r7
 8028b3c:	fb06 2303 	mla	r3, r6, r3, r2
 8028b40:	b29a      	uxth	r2, r3
 8028b42:	1c63      	adds	r3, r4, #1
 8028b44:	b280      	uxth	r0, r0
 8028b46:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8028b4a:	1c53      	adds	r3, r2, #1
 8028b4c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8028b50:	1c42      	adds	r2, r0, #1
 8028b52:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8028b56:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8028b5a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8028b5e:	0940      	lsrs	r0, r0, #5
 8028b60:	4323      	orrs	r3, r4
 8028b62:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8028b66:	4303      	orrs	r3, r0
 8028b68:	800b      	strh	r3, [r1, #0]
 8028b6a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8028b6e:	2600      	movs	r6, #0
 8028b70:	e764      	b.n	8028a3c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 8028b72:	2400      	movs	r4, #0
 8028b74:	4626      	mov	r6, r4
 8028b76:	e778      	b.n	8028a6a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8028b78:	2400      	movs	r4, #0
 8028b7a:	e776      	b.n	8028a6a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8028b7c:	463c      	mov	r4, r7
 8028b7e:	e774      	b.n	8028a6a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8028b80:	2500      	movs	r5, #0
 8028b82:	e78e      	b.n	8028aa2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 8028b84:	2300      	movs	r3, #0
 8028b86:	461d      	mov	r5, r3
 8028b88:	e79f      	b.n	8028aca <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8028b8a:	4663      	mov	r3, ip
 8028b8c:	4665      	mov	r5, ip
 8028b8e:	e79c      	b.n	8028aca <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8028b90:	2300      	movs	r3, #0
 8028b92:	e79a      	b.n	8028aca <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8028b94:	463b      	mov	r3, r7
 8028b96:	e798      	b.n	8028aca <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8028b98:	2001385c 	.word	0x2001385c

08028b9c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8028b9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028ba0:	b093      	sub	sp, #76	; 0x4c
 8028ba2:	461d      	mov	r5, r3
 8028ba4:	920c      	str	r2, [sp, #48]	; 0x30
 8028ba6:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8028ba8:	9107      	str	r1, [sp, #28]
 8028baa:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8028bae:	9011      	str	r0, [sp, #68]	; 0x44
 8028bb0:	6850      	ldr	r0, [r2, #4]
 8028bb2:	6812      	ldr	r2, [r2, #0]
 8028bb4:	fb00 1303 	mla	r3, r0, r3, r1
 8028bb8:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8028bbc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8028bbe:	689b      	ldr	r3, [r3, #8]
 8028bc0:	3301      	adds	r3, #1
 8028bc2:	f023 0301 	bic.w	r3, r3, #1
 8028bc6:	9306      	str	r3, [sp, #24]
 8028bc8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8028bca:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8028bce:	681f      	ldr	r7, [r3, #0]
 8028bd0:	9b07      	ldr	r3, [sp, #28]
 8028bd2:	2b00      	cmp	r3, #0
 8028bd4:	dc03      	bgt.n	8028bde <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8028bd6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8028bd8:	2b00      	cmp	r3, #0
 8028bda:	f340 8267 	ble.w	80290ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8028bde:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8028be0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8028be4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8028be8:	1e48      	subs	r0, r1, #1
 8028bea:	f102 3cff 	add.w	ip, r2, #4294967295
 8028bee:	2d00      	cmp	r5, #0
 8028bf0:	f340 80b8 	ble.w	8028d64 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8028bf4:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8028bf8:	ea4f 4326 	mov.w	r3, r6, asr #16
 8028bfc:	d406      	bmi.n	8028c0c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8028bfe:	4586      	cmp	lr, r0
 8028c00:	da04      	bge.n	8028c0c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8028c02:	2b00      	cmp	r3, #0
 8028c04:	db02      	blt.n	8028c0c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8028c06:	4563      	cmp	r3, ip
 8028c08:	f2c0 80ad 	blt.w	8028d66 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 8028c0c:	f11e 0e01 	adds.w	lr, lr, #1
 8028c10:	f100 80a0 	bmi.w	8028d54 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8028c14:	4571      	cmp	r1, lr
 8028c16:	f2c0 809d 	blt.w	8028d54 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8028c1a:	3301      	adds	r3, #1
 8028c1c:	f100 809a 	bmi.w	8028d54 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8028c20:	429a      	cmp	r2, r3
 8028c22:	f2c0 8097 	blt.w	8028d54 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8028c26:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 8028c2a:	9509      	str	r5, [sp, #36]	; 0x24
 8028c2c:	46c8      	mov	r8, r9
 8028c2e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8028c30:	2b00      	cmp	r3, #0
 8028c32:	f340 80b6 	ble.w	8028da2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 8028c36:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8028c3a:	9308      	str	r3, [sp, #32]
 8028c3c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8028c3e:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8028c42:	1423      	asrs	r3, r4, #16
 8028c44:	ea4f 4026 	mov.w	r0, r6, asr #16
 8028c48:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8028c4c:	f100 813e 	bmi.w	8028ecc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8028c50:	f10c 3bff 	add.w	fp, ip, #4294967295
 8028c54:	455b      	cmp	r3, fp
 8028c56:	f280 8139 	bge.w	8028ecc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8028c5a:	2800      	cmp	r0, #0
 8028c5c:	f2c0 8136 	blt.w	8028ecc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8028c60:	f10e 3bff 	add.w	fp, lr, #4294967295
 8028c64:	4558      	cmp	r0, fp
 8028c66:	f280 8131 	bge.w	8028ecc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8028c6a:	9a06      	ldr	r2, [sp, #24]
 8028c6c:	fb00 3302 	mla	r3, r0, r2, r3
 8028c70:	0858      	lsrs	r0, r3, #1
 8028c72:	07da      	lsls	r2, r3, #31
 8028c74:	f817 c000 	ldrb.w	ip, [r7, r0]
 8028c78:	9a08      	ldr	r2, [sp, #32]
 8028c7a:	bf54      	ite	pl
 8028c7c:	f00c 0c0f 	andpl.w	ip, ip, #15
 8028c80:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8028c84:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8028c88:	fa5f fc8c 	uxtb.w	ip, ip
 8028c8c:	2a00      	cmp	r2, #0
 8028c8e:	f000 80cb 	beq.w	8028e28 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8028c92:	1c58      	adds	r0, r3, #1
 8028c94:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8028c98:	07c0      	lsls	r0, r0, #31
 8028c9a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8028c9e:	bf54      	ite	pl
 8028ca0:	f00e 0e0f 	andpl.w	lr, lr, #15
 8028ca4:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8028ca8:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8028cac:	fa5f fe8e 	uxtb.w	lr, lr
 8028cb0:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 8028cb4:	b1b9      	cbz	r1, 8028ce6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8028cb6:	4453      	add	r3, sl
 8028cb8:	0858      	lsrs	r0, r3, #1
 8028cba:	07da      	lsls	r2, r3, #31
 8028cbc:	5c38      	ldrb	r0, [r7, r0]
 8028cbe:	bf54      	ite	pl
 8028cc0:	f000 000f 	andpl.w	r0, r0, #15
 8028cc4:	1100      	asrmi	r0, r0, #4
 8028cc6:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8028cca:	b2c0      	uxtb	r0, r0
 8028ccc:	900a      	str	r0, [sp, #40]	; 0x28
 8028cce:	1c58      	adds	r0, r3, #1
 8028cd0:	0843      	lsrs	r3, r0, #1
 8028cd2:	07c2      	lsls	r2, r0, #31
 8028cd4:	5cfb      	ldrb	r3, [r7, r3]
 8028cd6:	bf54      	ite	pl
 8028cd8:	f003 030f 	andpl.w	r3, r3, #15
 8028cdc:	111b      	asrmi	r3, r3, #4
 8028cde:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8028ce2:	b2db      	uxtb	r3, r3
 8028ce4:	930e      	str	r3, [sp, #56]	; 0x38
 8028ce6:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8028cea:	b289      	uxth	r1, r1
 8028cec:	fb02 f301 	mul.w	r3, r2, r1
 8028cf0:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8028cf4:	0112      	lsls	r2, r2, #4
 8028cf6:	b289      	uxth	r1, r1
 8028cf8:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8028cfc:	1a40      	subs	r0, r0, r1
 8028cfe:	fa1f fe80 	uxth.w	lr, r0
 8028d02:	1ad2      	subs	r2, r2, r3
 8028d04:	980d      	ldr	r0, [sp, #52]	; 0x34
 8028d06:	b292      	uxth	r2, r2
 8028d08:	4342      	muls	r2, r0
 8028d0a:	fb0c 2c0e 	mla	ip, ip, lr, r2
 8028d0e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8028d10:	fb01 c102 	mla	r1, r1, r2, ip
 8028d14:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8028d16:	fb03 1302 	mla	r3, r3, r2, r1
 8028d1a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8028d1e:	2bff      	cmp	r3, #255	; 0xff
 8028d20:	f040 8093 	bne.w	8028e4a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8028d24:	4bbe      	ldr	r3, [pc, #760]	; (8029020 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8028d26:	681a      	ldr	r2, [r3, #0]
 8028d28:	4bbe      	ldr	r3, [pc, #760]	; (8029024 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8028d2a:	0951      	lsrs	r1, r2, #5
 8028d2c:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8028d30:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8028d34:	430b      	orrs	r3, r1
 8028d36:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8028d3a:	4313      	orrs	r3, r2
 8028d3c:	f8a8 3000 	strh.w	r3, [r8]
 8028d40:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8028d42:	441c      	add	r4, r3
 8028d44:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8028d46:	441e      	add	r6, r3
 8028d48:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8028d4a:	3b01      	subs	r3, #1
 8028d4c:	f108 0802 	add.w	r8, r8, #2
 8028d50:	9309      	str	r3, [sp, #36]	; 0x24
 8028d52:	e76c      	b.n	8028c2e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8028d54:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8028d56:	441c      	add	r4, r3
 8028d58:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8028d5a:	3d01      	subs	r5, #1
 8028d5c:	441e      	add	r6, r3
 8028d5e:	f109 0902 	add.w	r9, r9, #2
 8028d62:	e744      	b.n	8028bee <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8028d64:	d021      	beq.n	8028daa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8028d66:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8028d68:	1e6b      	subs	r3, r5, #1
 8028d6a:	fb00 4003 	mla	r0, r0, r3, r4
 8028d6e:	1400      	asrs	r0, r0, #16
 8028d70:	f53f af59 	bmi.w	8028c26 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8028d74:	3901      	subs	r1, #1
 8028d76:	4288      	cmp	r0, r1
 8028d78:	f6bf af55 	bge.w	8028c26 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8028d7c:	9920      	ldr	r1, [sp, #128]	; 0x80
 8028d7e:	fb01 6303 	mla	r3, r1, r3, r6
 8028d82:	141b      	asrs	r3, r3, #16
 8028d84:	f53f af4f 	bmi.w	8028c26 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8028d88:	3a01      	subs	r2, #1
 8028d8a:	4293      	cmp	r3, r2
 8028d8c:	f6bf af4b 	bge.w	8028c26 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8028d90:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8028d94:	9308      	str	r3, [sp, #32]
 8028d96:	46a8      	mov	r8, r5
 8028d98:	46ce      	mov	lr, r9
 8028d9a:	f1b8 0f00 	cmp.w	r8, #0
 8028d9e:	f300 80b5 	bgt.w	8028f0c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8028da2:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8028da6:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8028daa:	9b07      	ldr	r3, [sp, #28]
 8028dac:	2b00      	cmp	r3, #0
 8028dae:	f340 817d 	ble.w	80290ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8028db2:	ee30 0a04 	vadd.f32	s0, s0, s8
 8028db6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8028dba:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8028dbe:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8028dc0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8028dc4:	ee31 1a05 	vadd.f32	s2, s2, s10
 8028dc8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8028dcc:	eef0 6a62 	vmov.f32	s13, s5
 8028dd0:	ee61 7a27 	vmul.f32	s15, s2, s15
 8028dd4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8028dd8:	ee77 2a62 	vsub.f32	s5, s14, s5
 8028ddc:	ee16 4a90 	vmov	r4, s13
 8028de0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8028de4:	eef0 6a43 	vmov.f32	s13, s6
 8028de8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8028dec:	ee12 2a90 	vmov	r2, s5
 8028df0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8028df4:	fb92 f3f3 	sdiv	r3, r2, r3
 8028df8:	ee13 2a10 	vmov	r2, s6
 8028dfc:	931f      	str	r3, [sp, #124]	; 0x7c
 8028dfe:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8028e00:	fb92 f3f3 	sdiv	r3, r2, r3
 8028e04:	9320      	str	r3, [sp, #128]	; 0x80
 8028e06:	9b07      	ldr	r3, [sp, #28]
 8028e08:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8028e0a:	3b01      	subs	r3, #1
 8028e0c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8028e10:	9307      	str	r3, [sp, #28]
 8028e12:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8028e14:	ee16 6a90 	vmov	r6, s13
 8028e18:	bf14      	ite	ne
 8028e1a:	461d      	movne	r5, r3
 8028e1c:	4615      	moveq	r5, r2
 8028e1e:	eeb0 3a67 	vmov.f32	s6, s15
 8028e22:	eef0 2a47 	vmov.f32	s5, s14
 8028e26:	e6d3      	b.n	8028bd0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8028e28:	2900      	cmp	r1, #0
 8028e2a:	f43f af5c 	beq.w	8028ce6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8028e2e:	eb0a 0003 	add.w	r0, sl, r3
 8028e32:	0843      	lsrs	r3, r0, #1
 8028e34:	07c0      	lsls	r0, r0, #31
 8028e36:	5cfb      	ldrb	r3, [r7, r3]
 8028e38:	bf54      	ite	pl
 8028e3a:	f003 030f 	andpl.w	r3, r3, #15
 8028e3e:	111b      	asrmi	r3, r3, #4
 8028e40:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8028e44:	b2db      	uxtb	r3, r3
 8028e46:	930a      	str	r3, [sp, #40]	; 0x28
 8028e48:	e74d      	b.n	8028ce6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8028e4a:	2b00      	cmp	r3, #0
 8028e4c:	f43f af78 	beq.w	8028d40 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8028e50:	4a73      	ldr	r2, [pc, #460]	; (8029020 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8028e52:	f8b8 c000 	ldrh.w	ip, [r8]
 8028e56:	6810      	ldr	r0, [r2, #0]
 8028e58:	fa1f fe83 	uxth.w	lr, r3
 8028e5c:	ea4f 212c 	mov.w	r1, ip, asr #8
 8028e60:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8028e64:	43db      	mvns	r3, r3
 8028e66:	b2db      	uxtb	r3, r3
 8028e68:	fb12 f20e 	smulbb	r2, r2, lr
 8028e6c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8028e70:	fb01 2103 	mla	r1, r1, r3, r2
 8028e74:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8028e78:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8028e7c:	b2c0      	uxtb	r0, r0
 8028e7e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8028e82:	fb1b fb0e 	smulbb	fp, fp, lr
 8028e86:	b289      	uxth	r1, r1
 8028e88:	fb10 fe0e 	smulbb	lr, r0, lr
 8028e8c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8028e90:	fa5f fc8c 	uxtb.w	ip, ip
 8028e94:	fb02 b203 	mla	r2, r2, r3, fp
 8028e98:	1c48      	adds	r0, r1, #1
 8028e9a:	fb0c e303 	mla	r3, ip, r3, lr
 8028e9e:	b292      	uxth	r2, r2
 8028ea0:	b29b      	uxth	r3, r3
 8028ea2:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 8028ea6:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 8028eaa:	f102 0b01 	add.w	fp, r2, #1
 8028eae:	1c59      	adds	r1, r3, #1
 8028eb0:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8028eb4:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8028eb8:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8028ebc:	0952      	lsrs	r2, r2, #5
 8028ebe:	4301      	orrs	r1, r0
 8028ec0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8028ec4:	4311      	orrs	r1, r2
 8028ec6:	f8a8 1000 	strh.w	r1, [r8]
 8028eca:	e739      	b.n	8028d40 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8028ecc:	f113 0b01 	adds.w	fp, r3, #1
 8028ed0:	f53f af36 	bmi.w	8028d40 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8028ed4:	45dc      	cmp	ip, fp
 8028ed6:	f6ff af33 	blt.w	8028d40 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8028eda:	f110 0b01 	adds.w	fp, r0, #1
 8028ede:	f53f af2f 	bmi.w	8028d40 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8028ee2:	45de      	cmp	lr, fp
 8028ee4:	f6ff af2c 	blt.w	8028d40 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8028ee8:	9a08      	ldr	r2, [sp, #32]
 8028eea:	9302      	str	r3, [sp, #8]
 8028eec:	fa0f f38e 	sxth.w	r3, lr
 8028ef0:	9301      	str	r3, [sp, #4]
 8028ef2:	fa0f f38c 	sxth.w	r3, ip
 8028ef6:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8028efa:	9105      	str	r1, [sp, #20]
 8028efc:	9300      	str	r3, [sp, #0]
 8028efe:	463a      	mov	r2, r7
 8028f00:	4653      	mov	r3, sl
 8028f02:	4641      	mov	r1, r8
 8028f04:	9811      	ldr	r0, [sp, #68]	; 0x44
 8028f06:	f7ff fd73 	bl	80289f0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 8028f0a:	e719      	b.n	8028d40 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8028f0c:	9906      	ldr	r1, [sp, #24]
 8028f0e:	1422      	asrs	r2, r4, #16
 8028f10:	1433      	asrs	r3, r6, #16
 8028f12:	fb01 2303 	mla	r3, r1, r3, r2
 8028f16:	085a      	lsrs	r2, r3, #1
 8028f18:	07d9      	lsls	r1, r3, #31
 8028f1a:	5cba      	ldrb	r2, [r7, r2]
 8028f1c:	bf54      	ite	pl
 8028f1e:	f002 020f 	andpl.w	r2, r2, #15
 8028f22:	1112      	asrmi	r2, r2, #4
 8028f24:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8028f28:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8028f2c:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8028f30:	b2d2      	uxtb	r2, r2
 8028f32:	2800      	cmp	r0, #0
 8028f34:	d062      	beq.n	8028ffc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 8028f36:	f103 0a01 	add.w	sl, r3, #1
 8028f3a:	ea4f 015a 	mov.w	r1, sl, lsr #1
 8028f3e:	f01a 0f01 	tst.w	sl, #1
 8028f42:	5c79      	ldrb	r1, [r7, r1]
 8028f44:	bf0c      	ite	eq
 8028f46:	f001 010f 	andeq.w	r1, r1, #15
 8028f4a:	1109      	asrne	r1, r1, #4
 8028f4c:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8028f50:	b2c9      	uxtb	r1, r1
 8028f52:	910f      	str	r1, [sp, #60]	; 0x3c
 8028f54:	f1bc 0f00 	cmp.w	ip, #0
 8028f58:	d019      	beq.n	8028f8e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8028f5a:	9908      	ldr	r1, [sp, #32]
 8028f5c:	440b      	add	r3, r1
 8028f5e:	0859      	lsrs	r1, r3, #1
 8028f60:	f013 0f01 	tst.w	r3, #1
 8028f64:	5c79      	ldrb	r1, [r7, r1]
 8028f66:	bf0c      	ite	eq
 8028f68:	f001 010f 	andeq.w	r1, r1, #15
 8028f6c:	1109      	asrne	r1, r1, #4
 8028f6e:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8028f72:	b2c9      	uxtb	r1, r1
 8028f74:	3301      	adds	r3, #1
 8028f76:	910b      	str	r1, [sp, #44]	; 0x2c
 8028f78:	0859      	lsrs	r1, r3, #1
 8028f7a:	07db      	lsls	r3, r3, #31
 8028f7c:	5c79      	ldrb	r1, [r7, r1]
 8028f7e:	bf54      	ite	pl
 8028f80:	f001 010f 	andpl.w	r1, r1, #15
 8028f84:	1109      	asrmi	r1, r1, #4
 8028f86:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8028f8a:	b2c9      	uxtb	r1, r1
 8028f8c:	9110      	str	r1, [sp, #64]	; 0x40
 8028f8e:	b280      	uxth	r0, r0
 8028f90:	fa1f fc8c 	uxth.w	ip, ip
 8028f94:	fb00 f30c 	mul.w	r3, r0, ip
 8028f98:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 8028f9c:	0100      	lsls	r0, r0, #4
 8028f9e:	fa1f fc8c 	uxth.w	ip, ip
 8028fa2:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 8028fa6:	eba1 010c 	sub.w	r1, r1, ip
 8028faa:	fa1f fa81 	uxth.w	sl, r1
 8028fae:	1ac0      	subs	r0, r0, r3
 8028fb0:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8028fb2:	b280      	uxth	r0, r0
 8028fb4:	4348      	muls	r0, r1
 8028fb6:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8028fb8:	fb02 020a 	mla	r2, r2, sl, r0
 8028fbc:	fb0c 2c01 	mla	ip, ip, r1, r2
 8028fc0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8028fc2:	fb03 c302 	mla	r3, r3, r2, ip
 8028fc6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8028fca:	2bff      	cmp	r3, #255	; 0xff
 8028fcc:	d12c      	bne.n	8029028 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 8028fce:	4b14      	ldr	r3, [pc, #80]	; (8029020 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8028fd0:	681a      	ldr	r2, [r3, #0]
 8028fd2:	4b14      	ldr	r3, [pc, #80]	; (8029024 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8028fd4:	0951      	lsrs	r1, r2, #5
 8028fd6:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8028fda:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8028fde:	430b      	orrs	r3, r1
 8028fe0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8028fe4:	4313      	orrs	r3, r2
 8028fe6:	f8ae 3000 	strh.w	r3, [lr]
 8028fea:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8028fec:	441c      	add	r4, r3
 8028fee:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8028ff0:	f10e 0e02 	add.w	lr, lr, #2
 8028ff4:	441e      	add	r6, r3
 8028ff6:	f108 38ff 	add.w	r8, r8, #4294967295
 8028ffa:	e6ce      	b.n	8028d9a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8028ffc:	f1bc 0f00 	cmp.w	ip, #0
 8029000:	d0c5      	beq.n	8028f8e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8029002:	9908      	ldr	r1, [sp, #32]
 8029004:	440b      	add	r3, r1
 8029006:	0859      	lsrs	r1, r3, #1
 8029008:	07db      	lsls	r3, r3, #31
 802900a:	5c79      	ldrb	r1, [r7, r1]
 802900c:	bf54      	ite	pl
 802900e:	f001 010f 	andpl.w	r1, r1, #15
 8029012:	1109      	asrmi	r1, r1, #4
 8029014:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8029018:	b2c9      	uxtb	r1, r1
 802901a:	910b      	str	r1, [sp, #44]	; 0x2c
 802901c:	e7b7      	b.n	8028f8e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802901e:	bf00      	nop
 8029020:	2001385c 	.word	0x2001385c
 8029024:	fffff800 	.word	0xfffff800
 8029028:	2b00      	cmp	r3, #0
 802902a:	d0de      	beq.n	8028fea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 802902c:	4a21      	ldr	r2, [pc, #132]	; (80290b4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 802902e:	f8be c000 	ldrh.w	ip, [lr]
 8029032:	6810      	ldr	r0, [r2, #0]
 8029034:	fa1f fa83 	uxth.w	sl, r3
 8029038:	ea4f 212c 	mov.w	r1, ip, asr #8
 802903c:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8029040:	43db      	mvns	r3, r3
 8029042:	b2db      	uxtb	r3, r3
 8029044:	fb12 f20a 	smulbb	r2, r2, sl
 8029048:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 802904c:	fb01 2103 	mla	r1, r1, r3, r2
 8029050:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8029054:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8029058:	b2c0      	uxtb	r0, r0
 802905a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 802905e:	fa5f fc8c 	uxtb.w	ip, ip
 8029062:	fb10 f00a 	smulbb	r0, r0, sl
 8029066:	fb0c 0003 	mla	r0, ip, r3, r0
 802906a:	b289      	uxth	r1, r1
 802906c:	fb1b fb0a 	smulbb	fp, fp, sl
 8029070:	b280      	uxth	r0, r0
 8029072:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8029076:	fb02 b203 	mla	r2, r2, r3, fp
 802907a:	1c4b      	adds	r3, r1, #1
 802907c:	f100 0b01 	add.w	fp, r0, #1
 8029080:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8029084:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 8029088:	b292      	uxth	r2, r2
 802908a:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 802908e:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8029092:	ea4b 0101 	orr.w	r1, fp, r1
 8029096:	f102 0b01 	add.w	fp, r2, #1
 802909a:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 802909e:	0952      	lsrs	r2, r2, #5
 80290a0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80290a4:	4311      	orrs	r1, r2
 80290a6:	f8ae 1000 	strh.w	r1, [lr]
 80290aa:	e79e      	b.n	8028fea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 80290ac:	b013      	add	sp, #76	; 0x4c
 80290ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80290b2:	bf00      	nop
 80290b4:	2001385c 	.word	0x2001385c

080290b8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 80290b8:	b570      	push	{r4, r5, r6, lr}
 80290ba:	1208      	asrs	r0, r1, #8
 80290bc:	b29e      	uxth	r6, r3
 80290be:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 80290c2:	1213      	asrs	r3, r2, #8
 80290c4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80290c8:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80290cc:	fb13 f305 	smulbb	r3, r3, r5
 80290d0:	fb10 f006 	smulbb	r0, r0, r6
 80290d4:	4418      	add	r0, r3
 80290d6:	10cc      	asrs	r4, r1, #3
 80290d8:	10d3      	asrs	r3, r2, #3
 80290da:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 80290de:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80290e2:	fb13 f305 	smulbb	r3, r3, r5
 80290e6:	fb14 f406 	smulbb	r4, r4, r6
 80290ea:	00c9      	lsls	r1, r1, #3
 80290ec:	00d2      	lsls	r2, r2, #3
 80290ee:	441c      	add	r4, r3
 80290f0:	b2d2      	uxtb	r2, r2
 80290f2:	b2cb      	uxtb	r3, r1
 80290f4:	fb12 f205 	smulbb	r2, r2, r5
 80290f8:	b280      	uxth	r0, r0
 80290fa:	fb13 f306 	smulbb	r3, r3, r6
 80290fe:	4413      	add	r3, r2
 8029100:	1c42      	adds	r2, r0, #1
 8029102:	b29b      	uxth	r3, r3
 8029104:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8029108:	f400 4278 	and.w	r2, r0, #63488	; 0xf800
 802910c:	1c58      	adds	r0, r3, #1
 802910e:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8029112:	b2a4      	uxth	r4, r4
 8029114:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8029118:	4310      	orrs	r0, r2
 802911a:	1c62      	adds	r2, r4, #1
 802911c:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8029120:	0964      	lsrs	r4, r4, #5
 8029122:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8029126:	4320      	orrs	r0, r4
 8029128:	bd70      	pop	{r4, r5, r6, pc}
	...

0802912c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 802912c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029130:	b08f      	sub	sp, #60	; 0x3c
 8029132:	461c      	mov	r4, r3
 8029134:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 8029138:	9004      	str	r0, [sp, #16]
 802913a:	460d      	mov	r5, r1
 802913c:	4616      	mov	r6, r2
 802913e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8029140:	2f00      	cmp	r7, #0
 8029142:	f000 80f6 	beq.w	8029332 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 8029146:	6820      	ldr	r0, [r4, #0]
 8029148:	6861      	ldr	r1, [r4, #4]
 802914a:	aa0a      	add	r2, sp, #40	; 0x28
 802914c:	c203      	stmia	r2!, {r0, r1}
 802914e:	6818      	ldr	r0, [r3, #0]
 8029150:	6859      	ldr	r1, [r3, #4]
 8029152:	aa0c      	add	r2, sp, #48	; 0x30
 8029154:	c203      	stmia	r2!, {r0, r1}
 8029156:	a80a      	add	r0, sp, #40	; 0x28
 8029158:	f7ef fa5e 	bl	8018618 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802915c:	4621      	mov	r1, r4
 802915e:	a80c      	add	r0, sp, #48	; 0x30
 8029160:	f7ef fa9e 	bl	80186a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8029164:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8029168:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 802916c:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 8029170:	f002 0301 	and.w	r3, r2, #1
 8029174:	9306      	str	r3, [sp, #24]
 8029176:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 802917a:	f003 0101 	and.w	r1, r3, #1
 802917e:	9105      	str	r1, [sp, #20]
 8029180:	9805      	ldr	r0, [sp, #20]
 8029182:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 8029186:	4403      	add	r3, r0
 8029188:	fb01 2303 	mla	r3, r1, r3, r2
 802918c:	f04f 0802 	mov.w	r8, #2
 8029190:	fb93 f3f8 	sdiv	r3, r3, r8
 8029194:	441d      	add	r5, r3
 8029196:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 802919a:	441a      	add	r2, r3
 802919c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 80291a0:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 80291a4:	4419      	add	r1, r3
 80291a6:	4b64      	ldr	r3, [pc, #400]	; (8029338 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 80291a8:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 80291ac:	6818      	ldr	r0, [r3, #0]
 80291ae:	6803      	ldr	r3, [r0, #0]
 80291b0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80291b2:	4798      	blx	r3
 80291b4:	4a61      	ldr	r2, [pc, #388]	; (802933c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 80291b6:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 80291ba:	8813      	ldrh	r3, [r2, #0]
 80291bc:	f9bd a030 	ldrsh.w	sl, [sp, #48]	; 0x30
 80291c0:	2fff      	cmp	r7, #255	; 0xff
 80291c2:	fb03 a404 	mla	r4, r3, r4, sl
 80291c6:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80291ca:	f106 0604 	add.w	r6, r6, #4
 80291ce:	4611      	mov	r1, r2
 80291d0:	fb03 fb0b 	mul.w	fp, r3, fp
 80291d4:	d06b      	beq.n	80292ae <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 80291d6:	f1c7 03ff 	rsb	r3, r7, #255	; 0xff
 80291da:	9303      	str	r3, [sp, #12]
 80291dc:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 80291e0:	e9cd 3207 	strd	r3, r2, [sp, #28]
 80291e4:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 80291e8:	9b07      	ldr	r3, [sp, #28]
 80291ea:	42a3      	cmp	r3, r4
 80291ec:	f240 809c 	bls.w	8029328 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 80291f0:	9b06      	ldr	r3, [sp, #24]
 80291f2:	2b00      	cmp	r3, #0
 80291f4:	d039      	beq.n	802926a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 80291f6:	782b      	ldrb	r3, [r5, #0]
 80291f8:	8822      	ldrh	r2, [r4, #0]
 80291fa:	9804      	ldr	r0, [sp, #16]
 80291fc:	f003 030f 	and.w	r3, r3, #15
 8029200:	f105 0801 	add.w	r8, r5, #1
 8029204:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8029208:	9b03      	ldr	r3, [sp, #12]
 802920a:	9300      	str	r3, [sp, #0]
 802920c:	463b      	mov	r3, r7
 802920e:	f7ff ff53 	bl	80290b8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8029212:	f824 0b02 	strh.w	r0, [r4], #2
 8029216:	f109 3bff 	add.w	fp, r9, #4294967295
 802921a:	f1bb 0f01 	cmp.w	fp, #1
 802921e:	46a2      	mov	sl, r4
 8029220:	f104 0404 	add.w	r4, r4, #4
 8029224:	dd24      	ble.n	8029270 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 8029226:	f898 3000 	ldrb.w	r3, [r8]
 802922a:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 802922e:	9804      	ldr	r0, [sp, #16]
 8029230:	091b      	lsrs	r3, r3, #4
 8029232:	f1ab 0b02 	sub.w	fp, fp, #2
 8029236:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802923a:	9b03      	ldr	r3, [sp, #12]
 802923c:	9300      	str	r3, [sp, #0]
 802923e:	463b      	mov	r3, r7
 8029240:	f7ff ff3a 	bl	80290b8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8029244:	f824 0c04 	strh.w	r0, [r4, #-4]
 8029248:	f818 3b01 	ldrb.w	r3, [r8], #1
 802924c:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8029250:	9804      	ldr	r0, [sp, #16]
 8029252:	f003 030f 	and.w	r3, r3, #15
 8029256:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802925a:	9b03      	ldr	r3, [sp, #12]
 802925c:	9300      	str	r3, [sp, #0]
 802925e:	463b      	mov	r3, r7
 8029260:	f7ff ff2a 	bl	80290b8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8029264:	f824 0c02 	strh.w	r0, [r4, #-2]
 8029268:	e7d7      	b.n	802921a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 802926a:	46a8      	mov	r8, r5
 802926c:	46cb      	mov	fp, r9
 802926e:	e7d4      	b.n	802921a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 8029270:	d10e      	bne.n	8029290 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 8029272:	f898 3000 	ldrb.w	r3, [r8]
 8029276:	f8ba 2000 	ldrh.w	r2, [sl]
 802927a:	9804      	ldr	r0, [sp, #16]
 802927c:	091b      	lsrs	r3, r3, #4
 802927e:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8029282:	9b03      	ldr	r3, [sp, #12]
 8029284:	9300      	str	r3, [sp, #0]
 8029286:	463b      	mov	r3, r7
 8029288:	f7ff ff16 	bl	80290b8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 802928c:	f82a 0b02 	strh.w	r0, [sl], #2
 8029290:	9b08      	ldr	r3, [sp, #32]
 8029292:	9a05      	ldr	r2, [sp, #20]
 8029294:	881c      	ldrh	r4, [r3, #0]
 8029296:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 802929a:	eba4 0409 	sub.w	r4, r4, r9
 802929e:	4413      	add	r3, r2
 80292a0:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 80292a4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80292a6:	fb93 f3f2 	sdiv	r3, r3, r2
 80292aa:	441d      	add	r5, r3
 80292ac:	e79c      	b.n	80291e8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 80292ae:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 80292b2:	45a3      	cmp	fp, r4
 80292b4:	d938      	bls.n	8029328 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 80292b6:	9b06      	ldr	r3, [sp, #24]
 80292b8:	b1f3      	cbz	r3, 80292f8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 80292ba:	782b      	ldrb	r3, [r5, #0]
 80292bc:	f003 030f 	and.w	r3, r3, #15
 80292c0:	1c6a      	adds	r2, r5, #1
 80292c2:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80292c6:	8023      	strh	r3, [r4, #0]
 80292c8:	f109 30ff 	add.w	r0, r9, #4294967295
 80292cc:	3402      	adds	r4, #2
 80292ce:	2801      	cmp	r0, #1
 80292d0:	4623      	mov	r3, r4
 80292d2:	f104 0404 	add.w	r4, r4, #4
 80292d6:	dd12      	ble.n	80292fe <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 80292d8:	7813      	ldrb	r3, [r2, #0]
 80292da:	091b      	lsrs	r3, r3, #4
 80292dc:	3802      	subs	r0, #2
 80292de:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80292e2:	f824 3c04 	strh.w	r3, [r4, #-4]
 80292e6:	f812 3b01 	ldrb.w	r3, [r2], #1
 80292ea:	f003 030f 	and.w	r3, r3, #15
 80292ee:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80292f2:	f824 3c02 	strh.w	r3, [r4, #-2]
 80292f6:	e7ea      	b.n	80292ce <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 80292f8:	462a      	mov	r2, r5
 80292fa:	4648      	mov	r0, r9
 80292fc:	e7e7      	b.n	80292ce <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 80292fe:	d106      	bne.n	802930e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 8029300:	7812      	ldrb	r2, [r2, #0]
 8029302:	0912      	lsrs	r2, r2, #4
 8029304:	3302      	adds	r3, #2
 8029306:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 802930a:	f823 2c02 	strh.w	r2, [r3, #-2]
 802930e:	880c      	ldrh	r4, [r1, #0]
 8029310:	9a05      	ldr	r2, [sp, #20]
 8029312:	eba4 0409 	sub.w	r4, r4, r9
 8029316:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 802931a:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 802931e:	4413      	add	r3, r2
 8029320:	fb93 f3f8 	sdiv	r3, r3, r8
 8029324:	441d      	add	r5, r3
 8029326:	e7c4      	b.n	80292b2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 8029328:	4b03      	ldr	r3, [pc, #12]	; (8029338 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 802932a:	6818      	ldr	r0, [r3, #0]
 802932c:	6803      	ldr	r3, [r0, #0]
 802932e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8029330:	4798      	blx	r3
 8029332:	b00f      	add	sp, #60	; 0x3c
 8029334:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8029338:	2001384c 	.word	0x2001384c
 802933c:	20013846 	.word	0x20013846

08029340 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 8029340:	b5f0      	push	{r4, r5, r6, r7, lr}
 8029342:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8029346:	2dff      	cmp	r5, #255	; 0xff
 8029348:	ea4f 2711 	mov.w	r7, r1, lsr #8
 802934c:	d10c      	bne.n	8029368 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 802934e:	2bff      	cmp	r3, #255	; 0xff
 8029350:	d10a      	bne.n	8029368 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 8029352:	4b25      	ldr	r3, [pc, #148]	; (80293e8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 8029354:	0948      	lsrs	r0, r1, #5
 8029356:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802935a:	403b      	ands	r3, r7
 802935c:	4318      	orrs	r0, r3
 802935e:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8029362:	4308      	orrs	r0, r1
 8029364:	b280      	uxth	r0, r0
 8029366:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8029368:	fb15 f503 	smulbb	r5, r5, r3
 802936c:	b2ab      	uxth	r3, r5
 802936e:	1c5d      	adds	r5, r3, #1
 8029370:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 8029374:	1214      	asrs	r4, r2, #8
 8029376:	f3c5 2507 	ubfx	r5, r5, #8, #8
 802937a:	fa1f fc85 	uxth.w	ip, r5
 802937e:	10d6      	asrs	r6, r2, #3
 8029380:	00d0      	lsls	r0, r2, #3
 8029382:	43ed      	mvns	r5, r5
 8029384:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8029388:	f3c1 4207 	ubfx	r2, r1, #16, #8
 802938c:	b2eb      	uxtb	r3, r5
 802938e:	b2c0      	uxtb	r0, r0
 8029390:	fb12 f20c 	smulbb	r2, r2, ip
 8029394:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8029398:	fb04 2403 	mla	r4, r4, r3, r2
 802939c:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 80293a0:	b2c8      	uxtb	r0, r1
 80293a2:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80293a6:	b2fd      	uxtb	r5, r7
 80293a8:	fb10 f00c 	smulbb	r0, r0, ip
 80293ac:	b2a4      	uxth	r4, r4
 80293ae:	fb02 0003 	mla	r0, r2, r3, r0
 80293b2:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 80293b6:	fb15 f50c 	smulbb	r5, r5, ip
 80293ba:	fb06 5503 	mla	r5, r6, r3, r5
 80293be:	b283      	uxth	r3, r0
 80293c0:	1c60      	adds	r0, r4, #1
 80293c2:	b2ad      	uxth	r5, r5
 80293c4:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 80293c8:	1c58      	adds	r0, r3, #1
 80293ca:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80293ce:	1c6b      	adds	r3, r5, #1
 80293d0:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80293d4:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 80293d8:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80293dc:	096d      	lsrs	r5, r5, #5
 80293de:	4320      	orrs	r0, r4
 80293e0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80293e4:	4328      	orrs	r0, r5
 80293e6:	e7be      	b.n	8029366 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 80293e8:	00fff800 	.word	0x00fff800

080293ec <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 80293ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80293f0:	461c      	mov	r4, r3
 80293f2:	b08d      	sub	sp, #52	; 0x34
 80293f4:	460d      	mov	r5, r1
 80293f6:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80293f8:	6861      	ldr	r1, [r4, #4]
 80293fa:	f89d 905c 	ldrb.w	r9, [sp, #92]	; 0x5c
 80293fe:	4680      	mov	r8, r0
 8029400:	6820      	ldr	r0, [r4, #0]
 8029402:	4616      	mov	r6, r2
 8029404:	aa08      	add	r2, sp, #32
 8029406:	c203      	stmia	r2!, {r0, r1}
 8029408:	6818      	ldr	r0, [r3, #0]
 802940a:	6859      	ldr	r1, [r3, #4]
 802940c:	aa0a      	add	r2, sp, #40	; 0x28
 802940e:	c203      	stmia	r2!, {r0, r1}
 8029410:	a808      	add	r0, sp, #32
 8029412:	f7ef f901 	bl	8018618 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8029416:	4621      	mov	r1, r4
 8029418:	a80a      	add	r0, sp, #40	; 0x28
 802941a:	f7ef f941 	bl	80186a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802941e:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8029422:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
 8029426:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 802942a:	f002 0301 	and.w	r3, r2, #1
 802942e:	9303      	str	r3, [sp, #12]
 8029430:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8029434:	f003 0101 	and.w	r1, r3, #1
 8029438:	9102      	str	r1, [sp, #8]
 802943a:	9802      	ldr	r0, [sp, #8]
 802943c:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8029440:	4403      	add	r3, r0
 8029442:	fb01 2303 	mla	r3, r1, r3, r2
 8029446:	f04f 0a02 	mov.w	sl, #2
 802944a:	fb93 f3fa 	sdiv	r3, r3, sl
 802944e:	441d      	add	r5, r3
 8029450:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8029454:	441a      	add	r2, r3
 8029456:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 802945a:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 802945e:	4a3f      	ldr	r2, [pc, #252]	; (802955c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 8029460:	9205      	str	r2, [sp, #20]
 8029462:	4419      	add	r1, r3
 8029464:	6810      	ldr	r0, [r2, #0]
 8029466:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
 802946a:	6803      	ldr	r3, [r0, #0]
 802946c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 802946e:	4798      	blx	r3
 8029470:	4b3b      	ldr	r3, [pc, #236]	; (8029560 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 8029472:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
 8029476:	8819      	ldrh	r1, [r3, #0]
 8029478:	f9bd c028 	ldrsh.w	ip, [sp, #40]	; 0x28
 802947c:	fb01 c404 	mla	r4, r1, r4, ip
 8029480:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8029484:	434f      	muls	r7, r1
 8029486:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 802948a:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 802948e:	3604      	adds	r6, #4
 8029490:	9204      	str	r2, [sp, #16]
 8029492:	9b04      	ldr	r3, [sp, #16]
 8029494:	429c      	cmp	r4, r3
 8029496:	d258      	bcs.n	802954a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 8029498:	9b03      	ldr	r3, [sp, #12]
 802949a:	2b00      	cmp	r3, #0
 802949c:	d034      	beq.n	8029508 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 802949e:	782b      	ldrb	r3, [r5, #0]
 80294a0:	f003 030f 	and.w	r3, r3, #15
 80294a4:	1c6f      	adds	r7, r5, #1
 80294a6:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80294aa:	0e0b      	lsrs	r3, r1, #24
 80294ac:	d006      	beq.n	80294bc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 80294ae:	8822      	ldrh	r2, [r4, #0]
 80294b0:	9300      	str	r3, [sp, #0]
 80294b2:	4640      	mov	r0, r8
 80294b4:	464b      	mov	r3, r9
 80294b6:	f7ff ff43 	bl	8029340 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80294ba:	8020      	strh	r0, [r4, #0]
 80294bc:	3402      	adds	r4, #2
 80294be:	f10b 3aff 	add.w	sl, fp, #4294967295
 80294c2:	f1ba 0f01 	cmp.w	sl, #1
 80294c6:	dd22      	ble.n	802950e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 80294c8:	783b      	ldrb	r3, [r7, #0]
 80294ca:	091b      	lsrs	r3, r3, #4
 80294cc:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80294d0:	0e0b      	lsrs	r3, r1, #24
 80294d2:	d006      	beq.n	80294e2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 80294d4:	8822      	ldrh	r2, [r4, #0]
 80294d6:	9300      	str	r3, [sp, #0]
 80294d8:	4640      	mov	r0, r8
 80294da:	464b      	mov	r3, r9
 80294dc:	f7ff ff30 	bl	8029340 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80294e0:	8020      	strh	r0, [r4, #0]
 80294e2:	f817 3b01 	ldrb.w	r3, [r7], #1
 80294e6:	f003 030f 	and.w	r3, r3, #15
 80294ea:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80294ee:	0e0b      	lsrs	r3, r1, #24
 80294f0:	d006      	beq.n	8029500 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 80294f2:	8862      	ldrh	r2, [r4, #2]
 80294f4:	9300      	str	r3, [sp, #0]
 80294f6:	4640      	mov	r0, r8
 80294f8:	464b      	mov	r3, r9
 80294fa:	f7ff ff21 	bl	8029340 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80294fe:	8060      	strh	r0, [r4, #2]
 8029500:	3404      	adds	r4, #4
 8029502:	f1aa 0a02 	sub.w	sl, sl, #2
 8029506:	e7dc      	b.n	80294c2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8029508:	462f      	mov	r7, r5
 802950a:	46da      	mov	sl, fp
 802950c:	e7d9      	b.n	80294c2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 802950e:	d10d      	bne.n	802952c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 8029510:	783b      	ldrb	r3, [r7, #0]
 8029512:	091b      	lsrs	r3, r3, #4
 8029514:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8029518:	0e0b      	lsrs	r3, r1, #24
 802951a:	d006      	beq.n	802952a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 802951c:	8822      	ldrh	r2, [r4, #0]
 802951e:	9300      	str	r3, [sp, #0]
 8029520:	4640      	mov	r0, r8
 8029522:	464b      	mov	r3, r9
 8029524:	f7ff ff0c 	bl	8029340 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8029528:	8020      	strh	r0, [r4, #0]
 802952a:	3402      	adds	r4, #2
 802952c:	9b06      	ldr	r3, [sp, #24]
 802952e:	9a02      	ldr	r2, [sp, #8]
 8029530:	881b      	ldrh	r3, [r3, #0]
 8029532:	eba3 030b 	sub.w	r3, r3, fp
 8029536:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 802953a:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 802953e:	4413      	add	r3, r2
 8029540:	9a07      	ldr	r2, [sp, #28]
 8029542:	fb93 f3f2 	sdiv	r3, r3, r2
 8029546:	441d      	add	r5, r3
 8029548:	e7a3      	b.n	8029492 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 802954a:	9b05      	ldr	r3, [sp, #20]
 802954c:	6818      	ldr	r0, [r3, #0]
 802954e:	6803      	ldr	r3, [r0, #0]
 8029550:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8029552:	4798      	blx	r3
 8029554:	b00d      	add	sp, #52	; 0x34
 8029556:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802955a:	bf00      	nop
 802955c:	2001384c 	.word	0x2001384c
 8029560:	20013846 	.word	0x20013846

08029564 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 8029564:	b570      	push	{r4, r5, r6, lr}
 8029566:	1214      	asrs	r4, r2, #8
 8029568:	788d      	ldrb	r5, [r1, #2]
 802956a:	f89d 6010 	ldrb.w	r6, [sp, #16]
 802956e:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8029572:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8029576:	fb15 f503 	smulbb	r5, r5, r3
 802957a:	fb04 5506 	mla	r5, r4, r6, r5
 802957e:	10d0      	asrs	r0, r2, #3
 8029580:	784c      	ldrb	r4, [r1, #1]
 8029582:	7809      	ldrb	r1, [r1, #0]
 8029584:	00d2      	lsls	r2, r2, #3
 8029586:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802958a:	b2d2      	uxtb	r2, r2
 802958c:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 8029590:	fb14 f403 	smulbb	r4, r4, r3
 8029594:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8029598:	fb11 f303 	smulbb	r3, r1, r3
 802959c:	fb00 4406 	mla	r4, r0, r6, r4
 80295a0:	fb02 3306 	mla	r3, r2, r6, r3
 80295a4:	b2ad      	uxth	r5, r5
 80295a6:	b29b      	uxth	r3, r3
 80295a8:	b2a4      	uxth	r4, r4
 80295aa:	1c68      	adds	r0, r5, #1
 80295ac:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 80295b0:	1c62      	adds	r2, r4, #1
 80295b2:	1c58      	adds	r0, r3, #1
 80295b4:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80295b8:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 80295bc:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80295c0:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80295c4:	0964      	lsrs	r4, r4, #5
 80295c6:	4328      	orrs	r0, r5
 80295c8:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80295cc:	4320      	orrs	r0, r4
 80295ce:	bd70      	pop	{r4, r5, r6, pc}

080295d0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 80295d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80295d4:	b08f      	sub	sp, #60	; 0x3c
 80295d6:	461c      	mov	r4, r3
 80295d8:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 80295dc:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80295de:	4682      	mov	sl, r0
 80295e0:	460e      	mov	r6, r1
 80295e2:	4615      	mov	r5, r2
 80295e4:	2f00      	cmp	r7, #0
 80295e6:	f000 8142 	beq.w	802986e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 80295ea:	6820      	ldr	r0, [r4, #0]
 80295ec:	6861      	ldr	r1, [r4, #4]
 80295ee:	aa0a      	add	r2, sp, #40	; 0x28
 80295f0:	c203      	stmia	r2!, {r0, r1}
 80295f2:	6818      	ldr	r0, [r3, #0]
 80295f4:	6859      	ldr	r1, [r3, #4]
 80295f6:	aa0c      	add	r2, sp, #48	; 0x30
 80295f8:	c203      	stmia	r2!, {r0, r1}
 80295fa:	a80a      	add	r0, sp, #40	; 0x28
 80295fc:	f7ef f80c 	bl	8018618 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8029600:	4621      	mov	r1, r4
 8029602:	a80c      	add	r0, sp, #48	; 0x30
 8029604:	f7ef f84c 	bl	80186a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8029608:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 802960c:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 8029610:	f002 0301 	and.w	r3, r2, #1
 8029614:	9306      	str	r3, [sp, #24]
 8029616:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 802961a:	f003 0101 	and.w	r1, r3, #1
 802961e:	9105      	str	r1, [sp, #20]
 8029620:	9805      	ldr	r0, [sp, #20]
 8029622:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 8029626:	4403      	add	r3, r0
 8029628:	fb01 2303 	mla	r3, r1, r3, r2
 802962c:	f04f 0802 	mov.w	r8, #2
 8029630:	fb93 f3f8 	sdiv	r3, r3, r8
 8029634:	441e      	add	r6, r3
 8029636:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 802963a:	441a      	add	r2, r3
 802963c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8029640:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8029644:	4419      	add	r1, r3
 8029646:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 802964a:	9303      	str	r3, [sp, #12]
 802964c:	4b89      	ldr	r3, [pc, #548]	; (8029874 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 802964e:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 8029652:	6818      	ldr	r0, [r3, #0]
 8029654:	6803      	ldr	r3, [r0, #0]
 8029656:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8029658:	4798      	blx	r3
 802965a:	4a87      	ldr	r2, [pc, #540]	; (8029878 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 802965c:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 8029660:	8813      	ldrh	r3, [r2, #0]
 8029662:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	; 0x30
 8029666:	2fff      	cmp	r7, #255	; 0xff
 8029668:	fb03 9404 	mla	r4, r3, r4, r9
 802966c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8029670:	f105 0504 	add.w	r5, r5, #4
 8029674:	4694      	mov	ip, r2
 8029676:	fb03 f30b 	mul.w	r3, r3, fp
 802967a:	d071      	beq.n	8029760 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 802967c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8029680:	43f9      	mvns	r1, r7
 8029682:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8029686:	b2c9      	uxtb	r1, r1
 8029688:	9104      	str	r1, [sp, #16]
 802968a:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 802968e:	9b07      	ldr	r3, [sp, #28]
 8029690:	42a3      	cmp	r3, r4
 8029692:	f240 80e7 	bls.w	8029864 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8029696:	9b06      	ldr	r3, [sp, #24]
 8029698:	2b00      	cmp	r3, #0
 802969a:	d03d      	beq.n	8029718 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 802969c:	7831      	ldrb	r1, [r6, #0]
 802969e:	9b04      	ldr	r3, [sp, #16]
 80296a0:	8822      	ldrh	r2, [r4, #0]
 80296a2:	9300      	str	r3, [sp, #0]
 80296a4:	f001 010f 	and.w	r1, r1, #15
 80296a8:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80296ac:	463b      	mov	r3, r7
 80296ae:	4429      	add	r1, r5
 80296b0:	4650      	mov	r0, sl
 80296b2:	f7ff ff57 	bl	8029564 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80296b6:	9b03      	ldr	r3, [sp, #12]
 80296b8:	f824 0b02 	strh.w	r0, [r4], #2
 80296bc:	f106 0801 	add.w	r8, r6, #1
 80296c0:	f103 3bff 	add.w	fp, r3, #4294967295
 80296c4:	f1bb 0f01 	cmp.w	fp, #1
 80296c8:	46a1      	mov	r9, r4
 80296ca:	f104 0404 	add.w	r4, r4, #4
 80296ce:	dd27      	ble.n	8029720 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 80296d0:	f898 1000 	ldrb.w	r1, [r8]
 80296d4:	9b04      	ldr	r3, [sp, #16]
 80296d6:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 80296da:	9300      	str	r3, [sp, #0]
 80296dc:	0909      	lsrs	r1, r1, #4
 80296de:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80296e2:	463b      	mov	r3, r7
 80296e4:	4429      	add	r1, r5
 80296e6:	4650      	mov	r0, sl
 80296e8:	f7ff ff3c 	bl	8029564 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80296ec:	f824 0c04 	strh.w	r0, [r4, #-4]
 80296f0:	f818 1b01 	ldrb.w	r1, [r8], #1
 80296f4:	9b04      	ldr	r3, [sp, #16]
 80296f6:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 80296fa:	9300      	str	r3, [sp, #0]
 80296fc:	f001 010f 	and.w	r1, r1, #15
 8029700:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8029704:	463b      	mov	r3, r7
 8029706:	4429      	add	r1, r5
 8029708:	4650      	mov	r0, sl
 802970a:	f7ff ff2b 	bl	8029564 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 802970e:	f1ab 0b02 	sub.w	fp, fp, #2
 8029712:	f824 0c02 	strh.w	r0, [r4, #-2]
 8029716:	e7d5      	b.n	80296c4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8029718:	46b0      	mov	r8, r6
 802971a:	f8dd b00c 	ldr.w	fp, [sp, #12]
 802971e:	e7d1      	b.n	80296c4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8029720:	d10f      	bne.n	8029742 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 8029722:	f898 1000 	ldrb.w	r1, [r8]
 8029726:	9b04      	ldr	r3, [sp, #16]
 8029728:	f8b9 2000 	ldrh.w	r2, [r9]
 802972c:	9300      	str	r3, [sp, #0]
 802972e:	0909      	lsrs	r1, r1, #4
 8029730:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8029734:	463b      	mov	r3, r7
 8029736:	4429      	add	r1, r5
 8029738:	4650      	mov	r0, sl
 802973a:	f7ff ff13 	bl	8029564 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 802973e:	f829 0b02 	strh.w	r0, [r9], #2
 8029742:	9b08      	ldr	r3, [sp, #32]
 8029744:	9a05      	ldr	r2, [sp, #20]
 8029746:	881c      	ldrh	r4, [r3, #0]
 8029748:	9b03      	ldr	r3, [sp, #12]
 802974a:	1ae4      	subs	r4, r4, r3
 802974c:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8029750:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8029754:	4413      	add	r3, r2
 8029756:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8029758:	fb93 f3f2 	sdiv	r3, r3, r2
 802975c:	441e      	add	r6, r3
 802975e:	e796      	b.n	802968e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 8029760:	4f46      	ldr	r7, [pc, #280]	; (802987c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 8029762:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8029766:	42a3      	cmp	r3, r4
 8029768:	d97c      	bls.n	8029864 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 802976a:	9a06      	ldr	r2, [sp, #24]
 802976c:	2a00      	cmp	r2, #0
 802976e:	d054      	beq.n	802981a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 8029770:	7830      	ldrb	r0, [r6, #0]
 8029772:	f000 000f 	and.w	r0, r0, #15
 8029776:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802977a:	eb05 0e00 	add.w	lr, r5, r0
 802977e:	5c28      	ldrb	r0, [r5, r0]
 8029780:	f89e 2002 	ldrb.w	r2, [lr, #2]
 8029784:	f89e e001 	ldrb.w	lr, [lr, #1]
 8029788:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 802978c:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8029790:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8029794:	ea42 020e 	orr.w	r2, r2, lr
 8029798:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 802979c:	f824 2b02 	strh.w	r2, [r4], #2
 80297a0:	9a03      	ldr	r2, [sp, #12]
 80297a2:	1c71      	adds	r1, r6, #1
 80297a4:	f102 3eff 	add.w	lr, r2, #4294967295
 80297a8:	f1be 0f01 	cmp.w	lr, #1
 80297ac:	4620      	mov	r0, r4
 80297ae:	f104 0404 	add.w	r4, r4, #4
 80297b2:	dd36      	ble.n	8029822 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 80297b4:	7808      	ldrb	r0, [r1, #0]
 80297b6:	0900      	lsrs	r0, r0, #4
 80297b8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80297bc:	eb05 0a00 	add.w	sl, r5, r0
 80297c0:	f1ae 0e02 	sub.w	lr, lr, #2
 80297c4:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80297c8:	f89a 9002 	ldrb.w	r9, [sl, #2]
 80297cc:	00d2      	lsls	r2, r2, #3
 80297ce:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 80297d2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80297d6:	ea49 0202 	orr.w	r2, r9, r2
 80297da:	f815 9000 	ldrb.w	r9, [r5, r0]
 80297de:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 80297e2:	f824 2c04 	strh.w	r2, [r4, #-4]
 80297e6:	f811 0b01 	ldrb.w	r0, [r1], #1
 80297ea:	f000 000f 	and.w	r0, r0, #15
 80297ee:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80297f2:	eb05 0a00 	add.w	sl, r5, r0
 80297f6:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80297fa:	f89a 9002 	ldrb.w	r9, [sl, #2]
 80297fe:	00d2      	lsls	r2, r2, #3
 8029800:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8029804:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8029808:	ea49 0202 	orr.w	r2, r9, r2
 802980c:	f815 9000 	ldrb.w	r9, [r5, r0]
 8029810:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8029814:	f824 2c02 	strh.w	r2, [r4, #-2]
 8029818:	e7c6      	b.n	80297a8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 802981a:	4631      	mov	r1, r6
 802981c:	f8dd e00c 	ldr.w	lr, [sp, #12]
 8029820:	e7c2      	b.n	80297a8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8029822:	d111      	bne.n	8029848 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 8029824:	7809      	ldrb	r1, [r1, #0]
 8029826:	0909      	lsrs	r1, r1, #4
 8029828:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802982c:	186c      	adds	r4, r5, r1
 802982e:	5c69      	ldrb	r1, [r5, r1]
 8029830:	78a2      	ldrb	r2, [r4, #2]
 8029832:	7864      	ldrb	r4, [r4, #1]
 8029834:	00e4      	lsls	r4, r4, #3
 8029836:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 802983a:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 802983e:	4322      	orrs	r2, r4
 8029840:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 8029844:	f820 2b02 	strh.w	r2, [r0], #2
 8029848:	9a03      	ldr	r2, [sp, #12]
 802984a:	f8bc 4000 	ldrh.w	r4, [ip]
 802984e:	9905      	ldr	r1, [sp, #20]
 8029850:	1aa4      	subs	r4, r4, r2
 8029852:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8029856:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 802985a:	440a      	add	r2, r1
 802985c:	fb92 f2f8 	sdiv	r2, r2, r8
 8029860:	4416      	add	r6, r2
 8029862:	e780      	b.n	8029766 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 8029864:	4b03      	ldr	r3, [pc, #12]	; (8029874 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8029866:	6818      	ldr	r0, [r3, #0]
 8029868:	6803      	ldr	r3, [r0, #0]
 802986a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802986c:	4798      	blx	r3
 802986e:	b00f      	add	sp, #60	; 0x3c
 8029870:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8029874:	2001384c 	.word	0x2001384c
 8029878:	20013846 	.word	0x20013846
 802987c:	fffff800 	.word	0xfffff800

08029880 <CRC_Lock>:
 8029880:	b530      	push	{r4, r5, lr}
 8029882:	4a20      	ldr	r2, [pc, #128]	; (8029904 <CRC_Lock+0x84>)
 8029884:	6813      	ldr	r3, [r2, #0]
 8029886:	f023 0301 	bic.w	r3, r3, #1
 802988a:	6013      	str	r3, [r2, #0]
 802988c:	4b1e      	ldr	r3, [pc, #120]	; (8029908 <CRC_Lock+0x88>)
 802988e:	681a      	ldr	r2, [r3, #0]
 8029890:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 8029894:	4022      	ands	r2, r4
 8029896:	f24c 2540 	movw	r5, #49728	; 0xc240
 802989a:	42aa      	cmp	r2, r5
 802989c:	d005      	beq.n	80298aa <CRC_Lock+0x2a>
 802989e:	681b      	ldr	r3, [r3, #0]
 80298a0:	f24c 2270 	movw	r2, #49776	; 0xc270
 80298a4:	4023      	ands	r3, r4
 80298a6:	4293      	cmp	r3, r2
 80298a8:	d124      	bne.n	80298f4 <CRC_Lock+0x74>
 80298aa:	4b18      	ldr	r3, [pc, #96]	; (802990c <CRC_Lock+0x8c>)
 80298ac:	681b      	ldr	r3, [r3, #0]
 80298ae:	bb0b      	cbnz	r3, 80298f4 <CRC_Lock+0x74>
 80298b0:	4b17      	ldr	r3, [pc, #92]	; (8029910 <CRC_Lock+0x90>)
 80298b2:	681a      	ldr	r2, [r3, #0]
 80298b4:	f3c2 020b 	ubfx	r2, r2, #0, #12
 80298b8:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 80298bc:	d00d      	beq.n	80298da <CRC_Lock+0x5a>
 80298be:	681a      	ldr	r2, [r3, #0]
 80298c0:	f240 4483 	movw	r4, #1155	; 0x483
 80298c4:	f3c2 020b 	ubfx	r2, r2, #0, #12
 80298c8:	42a2      	cmp	r2, r4
 80298ca:	d006      	beq.n	80298da <CRC_Lock+0x5a>
 80298cc:	681b      	ldr	r3, [r3, #0]
 80298ce:	f240 4285 	movw	r2, #1157	; 0x485
 80298d2:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80298d6:	4293      	cmp	r3, r2
 80298d8:	d10c      	bne.n	80298f4 <CRC_Lock+0x74>
 80298da:	4b0e      	ldr	r3, [pc, #56]	; (8029914 <CRC_Lock+0x94>)
 80298dc:	2201      	movs	r2, #1
 80298de:	601a      	str	r2, [r3, #0]
 80298e0:	681a      	ldr	r2, [r3, #0]
 80298e2:	2a00      	cmp	r2, #0
 80298e4:	d1fc      	bne.n	80298e0 <CRC_Lock+0x60>
 80298e6:	4b0c      	ldr	r3, [pc, #48]	; (8029918 <CRC_Lock+0x98>)
 80298e8:	6018      	str	r0, [r3, #0]
 80298ea:	6818      	ldr	r0, [r3, #0]
 80298ec:	1a43      	subs	r3, r0, r1
 80298ee:	4258      	negs	r0, r3
 80298f0:	4158      	adcs	r0, r3
 80298f2:	bd30      	pop	{r4, r5, pc}
 80298f4:	4b09      	ldr	r3, [pc, #36]	; (802991c <CRC_Lock+0x9c>)
 80298f6:	2201      	movs	r2, #1
 80298f8:	601a      	str	r2, [r3, #0]
 80298fa:	681a      	ldr	r2, [r3, #0]
 80298fc:	2a00      	cmp	r2, #0
 80298fe:	d1fc      	bne.n	80298fa <CRC_Lock+0x7a>
 8029900:	4b07      	ldr	r3, [pc, #28]	; (8029920 <CRC_Lock+0xa0>)
 8029902:	e7f1      	b.n	80298e8 <CRC_Lock+0x68>
 8029904:	e0002000 	.word	0xe0002000
 8029908:	e000ed00 	.word	0xe000ed00
 802990c:	e0042000 	.word	0xe0042000
 8029910:	5c001000 	.word	0x5c001000
 8029914:	58024c08 	.word	0x58024c08
 8029918:	58024c00 	.word	0x58024c00
 802991c:	40023008 	.word	0x40023008
 8029920:	40023000 	.word	0x40023000

08029924 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8029924:	6101      	str	r1, [r0, #16]
 8029926:	4770      	bx	lr

08029928 <_ZN8touchgfx8Gestures4tickEv>:
 8029928:	7b83      	ldrb	r3, [r0, #14]
 802992a:	b14b      	cbz	r3, 8029940 <_ZN8touchgfx8Gestures4tickEv+0x18>
 802992c:	8903      	ldrh	r3, [r0, #8]
 802992e:	3301      	adds	r3, #1
 8029930:	b29b      	uxth	r3, r3
 8029932:	2b07      	cmp	r3, #7
 8029934:	8103      	strh	r3, [r0, #8]
 8029936:	bf81      	itttt	hi
 8029938:	2300      	movhi	r3, #0
 802993a:	8143      	strhhi	r3, [r0, #10]
 802993c:	8183      	strhhi	r3, [r0, #12]
 802993e:	7383      	strbhi	r3, [r0, #14]
 8029940:	4770      	bx	lr
	...

08029944 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8029944:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8029948:	4698      	mov	r8, r3
 802994a:	8883      	ldrh	r3, [r0, #4]
 802994c:	f8ad 3006 	strh.w	r3, [sp, #6]
 8029950:	eba8 0303 	sub.w	r3, r8, r3
 8029954:	b21b      	sxth	r3, r3
 8029956:	4604      	mov	r4, r0
 8029958:	2b00      	cmp	r3, #0
 802995a:	4617      	mov	r7, r2
 802995c:	4a18      	ldr	r2, [pc, #96]	; (80299c0 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 802995e:	9200      	str	r2, [sp, #0]
 8029960:	bfb8      	it	lt
 8029962:	425b      	neglt	r3, r3
 8029964:	8aa2      	ldrh	r2, [r4, #20]
 8029966:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 802996a:	f8ad 800a 	strh.w	r8, [sp, #10]
 802996e:	b21b      	sxth	r3, r3
 8029970:	460e      	mov	r6, r1
 8029972:	4293      	cmp	r3, r2
 8029974:	88c1      	ldrh	r1, [r0, #6]
 8029976:	f8ad 1008 	strh.w	r1, [sp, #8]
 802997a:	f04f 0000 	mov.w	r0, #0
 802997e:	f88d 0004 	strb.w	r0, [sp, #4]
 8029982:	f8ad 500c 	strh.w	r5, [sp, #12]
 8029986:	dc07      	bgt.n	8029998 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 8029988:	1a69      	subs	r1, r5, r1
 802998a:	b209      	sxth	r1, r1
 802998c:	2900      	cmp	r1, #0
 802998e:	bfb8      	it	lt
 8029990:	4249      	neglt	r1, r1
 8029992:	b209      	sxth	r1, r1
 8029994:	428a      	cmp	r2, r1
 8029996:	da10      	bge.n	80299ba <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 8029998:	6920      	ldr	r0, [r4, #16]
 802999a:	6803      	ldr	r3, [r0, #0]
 802999c:	4669      	mov	r1, sp
 802999e:	685b      	ldr	r3, [r3, #4]
 80299a0:	4798      	blx	r3
 80299a2:	eba8 0606 	sub.w	r6, r8, r6
 80299a6:	2300      	movs	r3, #0
 80299a8:	1bef      	subs	r7, r5, r7
 80299aa:	2001      	movs	r0, #1
 80299ac:	8123      	strh	r3, [r4, #8]
 80299ae:	8166      	strh	r6, [r4, #10]
 80299b0:	81a7      	strh	r7, [r4, #12]
 80299b2:	f8a4 8004 	strh.w	r8, [r4, #4]
 80299b6:	80e5      	strh	r5, [r4, #6]
 80299b8:	73a0      	strb	r0, [r4, #14]
 80299ba:	b004      	add	sp, #16
 80299bc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80299c0:	08031e14 	.word	0x08031e14

080299c4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 80299c4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80299c6:	461e      	mov	r6, r3
 80299c8:	1e4b      	subs	r3, r1, #1
 80299ca:	2b01      	cmp	r3, #1
 80299cc:	b085      	sub	sp, #20
 80299ce:	4604      	mov	r4, r0
 80299d0:	460d      	mov	r5, r1
 80299d2:	4617      	mov	r7, r2
 80299d4:	d84b      	bhi.n	8029a6e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 80299d6:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80299da:	1cd3      	adds	r3, r2, #3
 80299dc:	b29b      	uxth	r3, r3
 80299de:	2b06      	cmp	r3, #6
 80299e0:	d916      	bls.n	8029a10 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 80299e2:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 8029a84 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 80299e6:	f8cd c004 	str.w	ip, [sp, #4]
 80299ea:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80299ee:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80299f2:	6900      	ldr	r0, [r0, #16]
 80299f4:	f8ad 100c 	strh.w	r1, [sp, #12]
 80299f8:	f04f 0c00 	mov.w	ip, #0
 80299fc:	f88d c008 	strb.w	ip, [sp, #8]
 8029a00:	f8ad 200a 	strh.w	r2, [sp, #10]
 8029a04:	f8ad 300e 	strh.w	r3, [sp, #14]
 8029a08:	6803      	ldr	r3, [r0, #0]
 8029a0a:	a901      	add	r1, sp, #4
 8029a0c:	689b      	ldr	r3, [r3, #8]
 8029a0e:	4798      	blx	r3
 8029a10:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8029a14:	1cd3      	adds	r3, r2, #3
 8029a16:	b29b      	uxth	r3, r3
 8029a18:	2b06      	cmp	r3, #6
 8029a1a:	d916      	bls.n	8029a4a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8029a1c:	f8df c064 	ldr.w	ip, [pc, #100]	; 8029a84 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8029a20:	f8cd c004 	str.w	ip, [sp, #4]
 8029a24:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8029a28:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8029a2c:	6920      	ldr	r0, [r4, #16]
 8029a2e:	f8ad 100c 	strh.w	r1, [sp, #12]
 8029a32:	f04f 0c01 	mov.w	ip, #1
 8029a36:	f88d c008 	strb.w	ip, [sp, #8]
 8029a3a:	f8ad 200a 	strh.w	r2, [sp, #10]
 8029a3e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8029a42:	6803      	ldr	r3, [r0, #0]
 8029a44:	a901      	add	r1, sp, #4
 8029a46:	689b      	ldr	r3, [r3, #8]
 8029a48:	4798      	blx	r3
 8029a4a:	4b0d      	ldr	r3, [pc, #52]	; (8029a80 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 8029a4c:	9301      	str	r3, [sp, #4]
 8029a4e:	6920      	ldr	r0, [r4, #16]
 8029a50:	f88d 5008 	strb.w	r5, [sp, #8]
 8029a54:	2300      	movs	r3, #0
 8029a56:	f8ad 700a 	strh.w	r7, [sp, #10]
 8029a5a:	f8ad 600c 	strh.w	r6, [sp, #12]
 8029a5e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8029a62:	6803      	ldr	r3, [r0, #0]
 8029a64:	a901      	add	r1, sp, #4
 8029a66:	681b      	ldr	r3, [r3, #0]
 8029a68:	4798      	blx	r3
 8029a6a:	b005      	add	sp, #20
 8029a6c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8029a6e:	2900      	cmp	r1, #0
 8029a70:	d1eb      	bne.n	8029a4a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8029a72:	80a2      	strh	r2, [r4, #4]
 8029a74:	80c6      	strh	r6, [r0, #6]
 8029a76:	60a1      	str	r1, [r4, #8]
 8029a78:	81a1      	strh	r1, [r4, #12]
 8029a7a:	73a1      	strb	r1, [r4, #14]
 8029a7c:	e7e5      	b.n	8029a4a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8029a7e:	bf00      	nop
 8029a80:	08031e00 	.word	0x08031e00
 8029a84:	08031e28 	.word	0x08031e28

08029a88 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>:
 8029a88:	10c9      	asrs	r1, r1, #3
 8029a8a:	2900      	cmp	r1, #0
 8029a8c:	bfb8      	it	lt
 8029a8e:	4249      	neglt	r1, r1
 8029a90:	2801      	cmp	r0, #1
 8029a92:	d108      	bne.n	8029aa6 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8029a94:	f3c1 0008 	ubfx	r0, r1, #0, #9
 8029a98:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 8029a9c:	4601      	mov	r1, r0
 8029a9e:	dd02      	ble.n	8029aa6 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8029aa0:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
 8029aa4:	4770      	bx	lr
 8029aa6:	29ff      	cmp	r1, #255	; 0xff
 8029aa8:	bfa8      	it	ge
 8029aaa:	21ff      	movge	r1, #255	; 0xff
 8029aac:	4608      	mov	r0, r1
 8029aae:	4770      	bx	lr

08029ab0 <_ZN8touchgfx10Rasterizer6lineToEii>:
 8029ab0:	b410      	push	{r4}
 8029ab2:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8029ab6:	429c      	cmp	r4, r3
 8029ab8:	d803      	bhi.n	8029ac2 <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 8029aba:	f85d 4b04 	ldr.w	r4, [sp], #4
 8029abe:	f7ed b8b1 	b.w	8016c24 <_ZN8touchgfx7Outline6lineToEii>
 8029ac2:	f85d 4b04 	ldr.w	r4, [sp], #4
 8029ac6:	4770      	bx	lr

08029ac8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 8029ac8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029acc:	b08b      	sub	sp, #44	; 0x2c
 8029ace:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8029ad2:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8029ad6:	9308      	str	r3, [sp, #32]
 8029ad8:	4606      	mov	r6, r0
 8029ada:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8029ade:	9309      	str	r3, [sp, #36]	; 0x24
 8029ae0:	468a      	mov	sl, r1
 8029ae2:	f7ed fa0c 	bl	8016efe <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 8029ae6:	68b5      	ldr	r5, [r6, #8]
 8029ae8:	4604      	mov	r4, r0
 8029aea:	2d00      	cmp	r5, #0
 8029aec:	d044      	beq.n	8029b78 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8029aee:	6873      	ldr	r3, [r6, #4]
 8029af0:	42ab      	cmp	r3, r5
 8029af2:	d33d      	bcc.n	8029b70 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 8029af4:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8029af8:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	; 0x34
 8029afc:	eb02 0b03 	add.w	fp, r2, r3
 8029b00:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 8029b04:	fb02 1203 	mla	r2, r2, r3, r1
 8029b08:	9205      	str	r2, [sp, #20]
 8029b0a:	1e6a      	subs	r2, r5, #1
 8029b0c:	9204      	str	r2, [sp, #16]
 8029b0e:	f04f 0800 	mov.w	r8, #0
 8029b12:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 8029b16:	f9b4 7000 	ldrsh.w	r7, [r4]
 8029b1a:	454b      	cmp	r3, r9
 8029b1c:	463a      	mov	r2, r7
 8029b1e:	d008      	beq.n	8029b32 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 8029b20:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	; 0x34
 8029b24:	eb03 0b09 	add.w	fp, r3, r9
 8029b28:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 8029b2c:	fb03 1309 	mla	r3, r3, r9, r1
 8029b30:	9305      	str	r3, [sp, #20]
 8029b32:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8029b36:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8029b3a:	4498      	add	r8, r3
 8029b3c:	9b04      	ldr	r3, [sp, #16]
 8029b3e:	3b01      	subs	r3, #1
 8029b40:	9304      	str	r3, [sp, #16]
 8029b42:	9b04      	ldr	r3, [sp, #16]
 8029b44:	3301      	adds	r3, #1
 8029b46:	d015      	beq.n	8029b74 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 8029b48:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 8029b4c:	42bb      	cmp	r3, r7
 8029b4e:	d117      	bne.n	8029b80 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 8029b50:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 8029b54:	9b04      	ldr	r3, [sp, #16]
 8029b56:	4548      	cmp	r0, r9
 8029b58:	f103 33ff 	add.w	r3, r3, #4294967295
 8029b5c:	d17f      	bne.n	8029c5e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 8029b5e:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 8029b62:	4401      	add	r1, r0
 8029b64:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8029b68:	4480      	add	r8, r0
 8029b6a:	e7e9      	b.n	8029b40 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 8029b6c:	461f      	mov	r7, r3
 8029b6e:	e044      	b.n	8029bfa <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 8029b70:	2000      	movs	r0, #0
 8029b72:	e002      	b.n	8029b7a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 8029b74:	2900      	cmp	r1, #0
 8029b76:	d16f      	bne.n	8029c58 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 8029b78:	2001      	movs	r0, #1
 8029b7a:	b00b      	add	sp, #44	; 0x2c
 8029b7c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8029b80:	2900      	cmp	r1, #0
 8029b82:	d030      	beq.n	8029be6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 8029b84:	2f00      	cmp	r7, #0
 8029b86:	db29      	blt.n	8029bdc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8029b88:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 8029b8c:	42bb      	cmp	r3, r7
 8029b8e:	dd25      	ble.n	8029bdc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8029b90:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 8029b94:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8029b98:	f7ff ff76 	bl	8029a88 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 8029b9c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8029b9e:	fb10 f003 	smulbb	r0, r0, r3
 8029ba2:	b280      	uxth	r0, r0
 8029ba4:	1c41      	adds	r1, r0, #1
 8029ba6:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8029baa:	1209      	asrs	r1, r1, #8
 8029bac:	f011 0fff 	tst.w	r1, #255	; 0xff
 8029bb0:	d014      	beq.n	8029bdc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8029bb2:	9808      	ldr	r0, [sp, #32]
 8029bb4:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8029bb6:	b2c9      	uxtb	r1, r1
 8029bb8:	b2ba      	uxth	r2, r7
 8029bba:	9102      	str	r1, [sp, #8]
 8029bbc:	2101      	movs	r1, #1
 8029bbe:	4413      	add	r3, r2
 8029bc0:	9101      	str	r1, [sp, #4]
 8029bc2:	4402      	add	r2, r0
 8029bc4:	fa0f f18b 	sxth.w	r1, fp
 8029bc8:	f8da 0000 	ldr.w	r0, [sl]
 8029bcc:	9100      	str	r1, [sp, #0]
 8029bce:	6941      	ldr	r1, [r0, #20]
 8029bd0:	b21b      	sxth	r3, r3
 8029bd2:	460d      	mov	r5, r1
 8029bd4:	b212      	sxth	r2, r2
 8029bd6:	9905      	ldr	r1, [sp, #20]
 8029bd8:	4650      	mov	r0, sl
 8029bda:	47a8      	blx	r5
 8029bdc:	9b04      	ldr	r3, [sp, #16]
 8029bde:	3301      	adds	r3, #1
 8029be0:	f107 0201 	add.w	r2, r7, #1
 8029be4:	d0c8      	beq.n	8029b78 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8029be6:	f9b4 7000 	ldrsh.w	r7, [r4]
 8029bea:	1abb      	subs	r3, r7, r2
 8029bec:	2b00      	cmp	r3, #0
 8029bee:	dd31      	ble.n	8029c54 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8029bf0:	2a00      	cmp	r2, #0
 8029bf2:	dabb      	bge.n	8029b6c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 8029bf4:	2f00      	cmp	r7, #0
 8029bf6:	dd2d      	ble.n	8029c54 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8029bf8:	2200      	movs	r2, #0
 8029bfa:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 8029bfe:	19d1      	adds	r1, r2, r7
 8029c00:	4299      	cmp	r1, r3
 8029c02:	db02      	blt.n	8029c0a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 8029c04:	1a9f      	subs	r7, r3, r2
 8029c06:	2f00      	cmp	r7, #0
 8029c08:	dd24      	ble.n	8029c54 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8029c0a:	ea4f 1188 	mov.w	r1, r8, lsl #6
 8029c0e:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8029c12:	f7ff ff39 	bl	8029a88 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 8029c16:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8029c18:	fb10 f003 	smulbb	r0, r0, r3
 8029c1c:	b280      	uxth	r0, r0
 8029c1e:	1c41      	adds	r1, r0, #1
 8029c20:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8029c24:	1209      	asrs	r1, r1, #8
 8029c26:	f011 0fff 	tst.w	r1, #255	; 0xff
 8029c2a:	d013      	beq.n	8029c54 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8029c2c:	9808      	ldr	r0, [sp, #32]
 8029c2e:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8029c30:	b292      	uxth	r2, r2
 8029c32:	b2c9      	uxtb	r1, r1
 8029c34:	4413      	add	r3, r2
 8029c36:	9102      	str	r1, [sp, #8]
 8029c38:	4402      	add	r2, r0
 8029c3a:	b23f      	sxth	r7, r7
 8029c3c:	f8da 0000 	ldr.w	r0, [sl]
 8029c40:	9701      	str	r7, [sp, #4]
 8029c42:	fa0f f18b 	sxth.w	r1, fp
 8029c46:	9100      	str	r1, [sp, #0]
 8029c48:	6947      	ldr	r7, [r0, #20]
 8029c4a:	9905      	ldr	r1, [sp, #20]
 8029c4c:	b21b      	sxth	r3, r3
 8029c4e:	b212      	sxth	r2, r2
 8029c50:	4650      	mov	r0, sl
 8029c52:	47b8      	blx	r7
 8029c54:	464b      	mov	r3, r9
 8029c56:	e75c      	b.n	8029b12 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 8029c58:	2f00      	cmp	r7, #0
 8029c5a:	da95      	bge.n	8029b88 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 8029c5c:	e78c      	b.n	8029b78 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8029c5e:	2900      	cmp	r1, #0
 8029c60:	d0f8      	beq.n	8029c54 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8029c62:	e78f      	b.n	8029b84 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

08029c64 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
 8029c64:	4b4b      	ldr	r3, [pc, #300]	; (8029d94 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x130>)
 8029c66:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8029c6a:	2500      	movs	r5, #0
 8029c6c:	f100 0620 	add.w	r6, r0, #32
 8029c70:	4604      	mov	r4, r0
 8029c72:	e9c0 3100 	strd	r3, r1, [r0]
 8029c76:	e9c0 5502 	strd	r5, r5, [r0, #8]
 8029c7a:	e9c0 5504 	strd	r5, r5, [r0, #16]
 8029c7e:	e9c0 5506 	strd	r5, r5, [r0, #24]
 8029c82:	f100 0718 	add.w	r7, r0, #24
 8029c86:	4630      	mov	r0, r6
 8029c88:	4690      	mov	r8, r2
 8029c8a:	f7ec fb03 	bl	8016294 <_ZN8touchgfx7OutlineC1Ev>
 8029c8e:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
 8029c92:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 8029c96:	f884 5050 	strb.w	r5, [r4, #80]	; 0x50
 8029c9a:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
 8029c9e:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 8029ca2:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 8029ca6:	f884 5058 	strb.w	r5, [r4, #88]	; 0x58
 8029caa:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
 8029cae:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 8029cb2:	f9b8 2000 	ldrsh.w	r2, [r8]
 8029cb6:	f8b8 0004 	ldrh.w	r0, [r8, #4]
 8029cba:	f8d4 c004 	ldr.w	ip, [r4, #4]
 8029cbe:	9500      	str	r5, [sp, #0]
 8029cc0:	4410      	add	r0, r2
 8029cc2:	b280      	uxth	r0, r0
 8029cc4:	fa0f fa80 	sxth.w	sl, r0
 8029cc8:	45aa      	cmp	sl, r5
 8029cca:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
 8029cce:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
 8029cd2:	dd5c      	ble.n	8029d8e <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8029cd4:	4591      	cmp	r9, r2
 8029cd6:	dd5a      	ble.n	8029d8e <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8029cd8:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
 8029cdc:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8029ce0:	440b      	add	r3, r1
 8029ce2:	b29b      	uxth	r3, r3
 8029ce4:	b21d      	sxth	r5, r3
 8029ce6:	2d00      	cmp	r5, #0
 8029ce8:	dd51      	ble.n	8029d8e <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8029cea:	458e      	cmp	lr, r1
 8029cec:	dd4f      	ble.n	8029d8e <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8029cee:	45d1      	cmp	r9, sl
 8029cf0:	bfb8      	it	lt
 8029cf2:	fa1f f089 	uxthlt.w	r0, r9
 8029cf6:	45ae      	cmp	lr, r5
 8029cf8:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 8029cfc:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 8029d00:	bfb8      	it	lt
 8029d02:	fa1f f38e 	uxthlt.w	r3, lr
 8029d06:	1a80      	subs	r0, r0, r2
 8029d08:	1a5b      	subs	r3, r3, r1
 8029d0a:	f8ad 0004 	strh.w	r0, [sp, #4]
 8029d0e:	f8ad 3006 	strh.w	r3, [sp, #6]
 8029d12:	f8ad 2000 	strh.w	r2, [sp]
 8029d16:	f8ad 1002 	strh.w	r1, [sp, #2]
 8029d1a:	466d      	mov	r5, sp
 8029d1c:	e895 0003 	ldmia.w	r5, {r0, r1}
 8029d20:	e887 0003 	stmia.w	r7, {r0, r1}
 8029d24:	f8dc 3000 	ldr.w	r3, [ip]
 8029d28:	4660      	mov	r0, ip
 8029d2a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8029d2c:	4639      	mov	r1, r7
 8029d2e:	4798      	blx	r3
 8029d30:	6861      	ldr	r1, [r4, #4]
 8029d32:	4628      	mov	r0, r5
 8029d34:	3104      	adds	r1, #4
 8029d36:	f7ee fcb3 	bl	80186a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8029d3a:	4638      	mov	r0, r7
 8029d3c:	f7ee fc6c 	bl	8018618 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8029d40:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8029d44:	f8bd 2000 	ldrh.w	r2, [sp]
 8029d48:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 8029d4c:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
 8029d50:	4630      	mov	r0, r6
 8029d52:	f7ec fa83 	bl	801625c <_ZN8touchgfx7Outline5resetEv>
 8029d56:	f9bd 3000 	ldrsh.w	r3, [sp]
 8029d5a:	f9b4 201e 	ldrsh.w	r2, [r4, #30]
 8029d5e:	015b      	lsls	r3, r3, #5
 8029d60:	60a3      	str	r3, [r4, #8]
 8029d62:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8029d66:	015b      	lsls	r3, r3, #5
 8029d68:	60e3      	str	r3, [r4, #12]
 8029d6a:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8029d6e:	015b      	lsls	r3, r3, #5
 8029d70:	6123      	str	r3, [r4, #16]
 8029d72:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8029d76:	015b      	lsls	r3, r3, #5
 8029d78:	6163      	str	r3, [r4, #20]
 8029d7a:	f9b4 301c 	ldrsh.w	r3, [r4, #28]
 8029d7e:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 8029d82:	4620      	mov	r0, r4
 8029d84:	e9c4 3212 	strd	r3, r2, [r4, #72]	; 0x48
 8029d88:	b002      	add	sp, #8
 8029d8a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8029d8e:	2300      	movs	r3, #0
 8029d90:	9301      	str	r3, [sp, #4]
 8029d92:	e7c2      	b.n	8029d1a <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xb6>
 8029d94:	0803214c 	.word	0x0803214c

08029d98 <_ZN8touchgfx6Canvas5closeEv>:
 8029d98:	b538      	push	{r3, r4, r5, lr}
 8029d9a:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 8029d9e:	4604      	mov	r4, r0
 8029da0:	b193      	cbz	r3, 8029dc8 <_ZN8touchgfx6Canvas5closeEv+0x30>
 8029da2:	f890 3064 	ldrb.w	r3, [r0, #100]	; 0x64
 8029da6:	f890 2065 	ldrb.w	r2, [r0, #101]	; 0x65
 8029daa:	4213      	tst	r3, r2
 8029dac:	d10c      	bne.n	8029dc8 <_ZN8touchgfx6Canvas5closeEv+0x30>
 8029dae:	f100 0520 	add.w	r5, r0, #32
 8029db2:	b123      	cbz	r3, 8029dbe <_ZN8touchgfx6Canvas5closeEv+0x26>
 8029db4:	e9d0 1217 	ldrd	r1, r2, [r0, #92]	; 0x5c
 8029db8:	4628      	mov	r0, r5
 8029dba:	f7ff fe79 	bl	8029ab0 <_ZN8touchgfx10Rasterizer6lineToEii>
 8029dbe:	e9d4 121a 	ldrd	r1, r2, [r4, #104]	; 0x68
 8029dc2:	4628      	mov	r0, r5
 8029dc4:	f7ff fe74 	bl	8029ab0 <_ZN8touchgfx10Rasterizer6lineToEii>
 8029dc8:	2300      	movs	r3, #0
 8029dca:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8029dce:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
 8029dd2:	4298      	cmp	r0, r3
 8029dd4:	bf34      	ite	cc
 8029dd6:	2000      	movcc	r0, #0
 8029dd8:	2001      	movcs	r0, #1
 8029dda:	bd38      	pop	{r3, r4, r5, pc}

08029ddc <_ZN8touchgfx6Canvas6renderEh>:
 8029ddc:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8029de0:	4604      	mov	r4, r0
 8029de2:	6840      	ldr	r0, [r0, #4]
 8029de4:	6803      	ldr	r3, [r0, #0]
 8029de6:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8029de8:	460d      	mov	r5, r1
 8029dea:	4798      	blx	r3
 8029dec:	fb10 f105 	smulbb	r1, r0, r5
 8029df0:	b289      	uxth	r1, r1
 8029df2:	1c4d      	adds	r5, r1, #1
 8029df4:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8029df8:	122d      	asrs	r5, r5, #8
 8029dfa:	f000 809d 	beq.w	8029f38 <_ZN8touchgfx6Canvas6renderEh+0x15c>
 8029dfe:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
 8029e02:	2b00      	cmp	r3, #0
 8029e04:	f000 8098 	beq.w	8029f38 <_ZN8touchgfx6Canvas6renderEh+0x15c>
 8029e08:	4620      	mov	r0, r4
 8029e0a:	f7ff ffc5 	bl	8029d98 <_ZN8touchgfx6Canvas5closeEv>
 8029e0e:	4607      	mov	r7, r0
 8029e10:	2800      	cmp	r0, #0
 8029e12:	d048      	beq.n	8029ea6 <_ZN8touchgfx6Canvas6renderEh+0xca>
 8029e14:	6863      	ldr	r3, [r4, #4]
 8029e16:	4e49      	ldr	r6, [pc, #292]	; (8029f3c <_ZN8touchgfx6Canvas6renderEh+0x160>)
 8029e18:	6a98      	ldr	r0, [r3, #40]	; 0x28
 8029e1a:	6837      	ldr	r7, [r6, #0]
 8029e1c:	6803      	ldr	r3, [r0, #0]
 8029e1e:	689b      	ldr	r3, [r3, #8]
 8029e20:	4798      	blx	r3
 8029e22:	4601      	mov	r1, r0
 8029e24:	4638      	mov	r0, r7
 8029e26:	f7ea f9bb 	bl	80141a0 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 8029e2a:	4607      	mov	r7, r0
 8029e2c:	f7db fb3c 	bl	80054a8 <_ZN8touchgfx3HAL3lcdEv>
 8029e30:	6803      	ldr	r3, [r0, #0]
 8029e32:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8029e34:	4798      	blx	r3
 8029e36:	4680      	mov	r8, r0
 8029e38:	f7db fb36 	bl	80054a8 <_ZN8touchgfx3HAL3lcdEv>
 8029e3c:	6803      	ldr	r3, [r0, #0]
 8029e3e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8029e40:	4798      	blx	r3
 8029e42:	280b      	cmp	r0, #11
 8029e44:	d85d      	bhi.n	8029f02 <_ZN8touchgfx6Canvas6renderEh+0x126>
 8029e46:	e8df f000 	tbb	[pc, r0]
 8029e4a:	5e53      	.short	0x5e53
 8029e4c:	325c066e 	.word	0x325c066e
 8029e50:	67676742 	.word	0x67676742
 8029e54:	6767      	.short	0x6767
 8029e56:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8029e5a:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8029e5e:	2208      	movs	r2, #8
 8029e60:	fb91 f2f2 	sdiv	r2, r1, r2
 8029e64:	fb08 2303 	mla	r3, r8, r3, r2
 8029e68:	441f      	add	r7, r3
 8029e6a:	424b      	negs	r3, r1
 8029e6c:	f003 0307 	and.w	r3, r3, #7
 8029e70:	f001 0107 	and.w	r1, r1, #7
 8029e74:	bf58      	it	pl
 8029e76:	4259      	negpl	r1, r3
 8029e78:	b2c9      	uxtb	r1, r1
 8029e7a:	b2ed      	uxtb	r5, r5
 8029e7c:	e9cd 1500 	strd	r1, r5, [sp]
 8029e80:	6860      	ldr	r0, [r4, #4]
 8029e82:	463a      	mov	r2, r7
 8029e84:	6a81      	ldr	r1, [r0, #40]	; 0x28
 8029e86:	fa0f f388 	sxth.w	r3, r8
 8029e8a:	f104 0020 	add.w	r0, r4, #32
 8029e8e:	f7ff fe1b 	bl	8029ac8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 8029e92:	6863      	ldr	r3, [r4, #4]
 8029e94:	4607      	mov	r7, r0
 8029e96:	6a98      	ldr	r0, [r3, #40]	; 0x28
 8029e98:	6803      	ldr	r3, [r0, #0]
 8029e9a:	691b      	ldr	r3, [r3, #16]
 8029e9c:	4798      	blx	r3
 8029e9e:	6830      	ldr	r0, [r6, #0]
 8029ea0:	6803      	ldr	r3, [r0, #0]
 8029ea2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8029ea4:	4798      	blx	r3
 8029ea6:	4638      	mov	r0, r7
 8029ea8:	b002      	add	sp, #8
 8029eaa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8029eae:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8029eb2:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8029eb6:	2204      	movs	r2, #4
 8029eb8:	fb91 f2f2 	sdiv	r2, r1, r2
 8029ebc:	fb08 2303 	mla	r3, r8, r3, r2
 8029ec0:	441f      	add	r7, r3
 8029ec2:	424b      	negs	r3, r1
 8029ec4:	f003 0303 	and.w	r3, r3, #3
 8029ec8:	f001 0103 	and.w	r1, r1, #3
 8029ecc:	e7d2      	b.n	8029e74 <_ZN8touchgfx6Canvas6renderEh+0x98>
 8029ece:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8029ed2:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8029ed6:	2900      	cmp	r1, #0
 8029ed8:	f04f 0202 	mov.w	r2, #2
 8029edc:	fb91 f2f2 	sdiv	r2, r1, r2
 8029ee0:	f001 0101 	and.w	r1, r1, #1
 8029ee4:	fb08 2303 	mla	r3, r8, r3, r2
 8029ee8:	441f      	add	r7, r3
 8029eea:	bfb8      	it	lt
 8029eec:	4249      	neglt	r1, r1
 8029eee:	e7c3      	b.n	8029e78 <_ZN8touchgfx6Canvas6renderEh+0x9c>
 8029ef0:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8029ef4:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8029ef8:	fb08 f303 	mul.w	r3, r8, r3
 8029efc:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8029f00:	441f      	add	r7, r3
 8029f02:	2100      	movs	r1, #0
 8029f04:	e7b9      	b.n	8029e7a <_ZN8touchgfx6Canvas6renderEh+0x9e>
 8029f06:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8029f0a:	fb08 f203 	mul.w	r2, r8, r3
 8029f0e:	8b23      	ldrh	r3, [r4, #24]
 8029f10:	2103      	movs	r1, #3
 8029f12:	fb13 2301 	smlabb	r3, r3, r1, r2
 8029f16:	e7f3      	b.n	8029f00 <_ZN8touchgfx6Canvas6renderEh+0x124>
 8029f18:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8029f1c:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8029f20:	fb08 2303 	mla	r3, r8, r3, r2
 8029f24:	e7ec      	b.n	8029f00 <_ZN8touchgfx6Canvas6renderEh+0x124>
 8029f26:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8029f2a:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8029f2e:	fb08 f303 	mul.w	r3, r8, r3
 8029f32:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8029f36:	e7e3      	b.n	8029f00 <_ZN8touchgfx6Canvas6renderEh+0x124>
 8029f38:	2701      	movs	r7, #1
 8029f3a:	e7b4      	b.n	8029ea6 <_ZN8touchgfx6Canvas6renderEh+0xca>
 8029f3c:	2001384c 	.word	0x2001384c

08029f40 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 8029f40:	b510      	push	{r4, lr}
 8029f42:	4b07      	ldr	r3, [pc, #28]	; (8029f60 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
 8029f44:	781b      	ldrb	r3, [r3, #0]
 8029f46:	2b01      	cmp	r3, #1
 8029f48:	d108      	bne.n	8029f5c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
 8029f4a:	6843      	ldr	r3, [r0, #4]
 8029f4c:	6814      	ldr	r4, [r2, #0]
 8029f4e:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8029f52:	680b      	ldr	r3, [r1, #0]
 8029f54:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 8029f58:	6013      	str	r3, [r2, #0]
 8029f5a:	600c      	str	r4, [r1, #0]
 8029f5c:	bd10      	pop	{r4, pc}
 8029f5e:	bf00      	nop
 8029f60:	20013844 	.word	0x20013844

08029f64 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 8029f64:	b513      	push	{r0, r1, r4, lr}
 8029f66:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 8029f6a:	4604      	mov	r4, r0
 8029f6c:	e9cd 2100 	strd	r2, r1, [sp]
 8029f70:	b9a3      	cbnz	r3, 8029f9c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 8029f72:	466a      	mov	r2, sp
 8029f74:	a901      	add	r1, sp, #4
 8029f76:	4620      	mov	r0, r4
 8029f78:	f7ff ffe2 	bl	8029f40 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8029f7c:	68a3      	ldr	r3, [r4, #8]
 8029f7e:	9901      	ldr	r1, [sp, #4]
 8029f80:	9a00      	ldr	r2, [sp, #0]
 8029f82:	1ac9      	subs	r1, r1, r3
 8029f84:	68e3      	ldr	r3, [r4, #12]
 8029f86:	9101      	str	r1, [sp, #4]
 8029f88:	1ad2      	subs	r2, r2, r3
 8029f8a:	2a00      	cmp	r2, #0
 8029f8c:	9200      	str	r2, [sp, #0]
 8029f8e:	da0b      	bge.n	8029fa8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 8029f90:	2301      	movs	r3, #1
 8029f92:	2900      	cmp	r1, #0
 8029f94:	da0e      	bge.n	8029fb4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 8029f96:	f043 0304 	orr.w	r3, r3, #4
 8029f9a:	e013      	b.n	8029fc4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 8029f9c:	f7ff fefc 	bl	8029d98 <_ZN8touchgfx6Canvas5closeEv>
 8029fa0:	2800      	cmp	r0, #0
 8029fa2:	d1e6      	bne.n	8029f72 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 8029fa4:	b002      	add	sp, #8
 8029fa6:	bd10      	pop	{r4, pc}
 8029fa8:	6963      	ldr	r3, [r4, #20]
 8029faa:	429a      	cmp	r2, r3
 8029fac:	bfac      	ite	ge
 8029fae:	2302      	movge	r3, #2
 8029fb0:	2300      	movlt	r3, #0
 8029fb2:	e7ee      	b.n	8029f92 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 8029fb4:	6920      	ldr	r0, [r4, #16]
 8029fb6:	4281      	cmp	r1, r0
 8029fb8:	bfac      	ite	ge
 8029fba:	2008      	movge	r0, #8
 8029fbc:	2000      	movlt	r0, #0
 8029fbe:	4318      	orrs	r0, r3
 8029fc0:	b2c3      	uxtb	r3, r0
 8029fc2:	b158      	cbz	r0, 8029fdc <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 8029fc4:	2200      	movs	r2, #0
 8029fc6:	f884 2058 	strb.w	r2, [r4, #88]	; 0x58
 8029fca:	9901      	ldr	r1, [sp, #4]
 8029fcc:	9a00      	ldr	r2, [sp, #0]
 8029fce:	66a1      	str	r1, [r4, #104]	; 0x68
 8029fd0:	66e2      	str	r2, [r4, #108]	; 0x6c
 8029fd2:	e9c4 1217 	strd	r1, r2, [r4, #92]	; 0x5c
 8029fd6:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 8029fda:	e7e3      	b.n	8029fa4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 8029fdc:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 8029fe0:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 8029fe4:	4298      	cmp	r0, r3
 8029fe6:	d803      	bhi.n	8029ff0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 8029fe8:	f104 0020 	add.w	r0, r4, #32
 8029fec:	f7ec fe34 	bl	8016c58 <_ZN8touchgfx7Outline6moveToEii>
 8029ff0:	2301      	movs	r3, #1
 8029ff2:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8029ff6:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8029ffa:	2300      	movs	r3, #0
 8029ffc:	e7e5      	b.n	8029fca <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

08029ffe <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 8029ffe:	b573      	push	{r0, r1, r4, r5, r6, lr}
 802a000:	ab02      	add	r3, sp, #8
 802a002:	4604      	mov	r4, r0
 802a004:	f843 2d08 	str.w	r2, [r3, #-8]!
 802a008:	9101      	str	r1, [sp, #4]
 802a00a:	461a      	mov	r2, r3
 802a00c:	a901      	add	r1, sp, #4
 802a00e:	f7ff ff97 	bl	8029f40 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 802a012:	68a3      	ldr	r3, [r4, #8]
 802a014:	9901      	ldr	r1, [sp, #4]
 802a016:	9a00      	ldr	r2, [sp, #0]
 802a018:	1ac9      	subs	r1, r1, r3
 802a01a:	68e3      	ldr	r3, [r4, #12]
 802a01c:	9101      	str	r1, [sp, #4]
 802a01e:	1ad2      	subs	r2, r2, r3
 802a020:	2a00      	cmp	r2, #0
 802a022:	9200      	str	r2, [sp, #0]
 802a024:	db1c      	blt.n	802a060 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 802a026:	6963      	ldr	r3, [r4, #20]
 802a028:	429a      	cmp	r2, r3
 802a02a:	bfac      	ite	ge
 802a02c:	2002      	movge	r0, #2
 802a02e:	2000      	movlt	r0, #0
 802a030:	2900      	cmp	r1, #0
 802a032:	db17      	blt.n	802a064 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 802a034:	6923      	ldr	r3, [r4, #16]
 802a036:	4299      	cmp	r1, r3
 802a038:	bfac      	ite	ge
 802a03a:	2308      	movge	r3, #8
 802a03c:	2300      	movlt	r3, #0
 802a03e:	4303      	orrs	r3, r0
 802a040:	f894 0064 	ldrb.w	r0, [r4, #100]	; 0x64
 802a044:	b2dd      	uxtb	r5, r3
 802a046:	b978      	cbnz	r0, 802a068 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 802a048:	f104 0020 	add.w	r0, r4, #32
 802a04c:	f7ff fd30 	bl	8029ab0 <_ZN8touchgfx10Rasterizer6lineToEii>
 802a050:	9b01      	ldr	r3, [sp, #4]
 802a052:	65e3      	str	r3, [r4, #92]	; 0x5c
 802a054:	9b00      	ldr	r3, [sp, #0]
 802a056:	6623      	str	r3, [r4, #96]	; 0x60
 802a058:	f884 5064 	strb.w	r5, [r4, #100]	; 0x64
 802a05c:	b002      	add	sp, #8
 802a05e:	bd70      	pop	{r4, r5, r6, pc}
 802a060:	2001      	movs	r0, #1
 802a062:	e7e5      	b.n	802a030 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 802a064:	2304      	movs	r3, #4
 802a066:	e7ea      	b.n	802a03e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 802a068:	b113      	cbz	r3, 802a070 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 802a06a:	ea10 0305 	ands.w	r3, r0, r5
 802a06e:	d11c      	bne.n	802a0aa <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
 802a070:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
 802a074:	f104 0620 	add.w	r6, r4, #32
 802a078:	e9d4 1217 	ldrd	r1, r2, [r4, #92]	; 0x5c
 802a07c:	b98b      	cbnz	r3, 802a0a2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
 802a07e:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 802a082:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 802a086:	4298      	cmp	r0, r3
 802a088:	d802      	bhi.n	802a090 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 802a08a:	4630      	mov	r0, r6
 802a08c:	f7ec fde4 	bl	8016c58 <_ZN8touchgfx7Outline6moveToEii>
 802a090:	2301      	movs	r3, #1
 802a092:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 802a096:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 802a09a:	e9dd 2100 	ldrd	r2, r1, [sp]
 802a09e:	4630      	mov	r0, r6
 802a0a0:	e7d4      	b.n	802a04c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 802a0a2:	4630      	mov	r0, r6
 802a0a4:	f7ff fd04 	bl	8029ab0 <_ZN8touchgfx10Rasterizer6lineToEii>
 802a0a8:	e7f7      	b.n	802a09a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
 802a0aa:	461d      	mov	r5, r3
 802a0ac:	e7d0      	b.n	802a050 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

0802a0b0 <_ZN8touchgfx6CanvasD1Ev>:
 802a0b0:	b510      	push	{r4, lr}
 802a0b2:	4b04      	ldr	r3, [pc, #16]	; (802a0c4 <_ZN8touchgfx6CanvasD1Ev+0x14>)
 802a0b4:	4604      	mov	r4, r0
 802a0b6:	f840 3b20 	str.w	r3, [r0], #32
 802a0ba:	f7ec f8c7 	bl	801624c <_ZN8touchgfx7OutlineD1Ev>
 802a0be:	4620      	mov	r0, r4
 802a0c0:	bd10      	pop	{r4, pc}
 802a0c2:	bf00      	nop
 802a0c4:	0803214c 	.word	0x0803214c

0802a0c8 <_ZN8touchgfx6CanvasD0Ev>:
 802a0c8:	b510      	push	{r4, lr}
 802a0ca:	4604      	mov	r4, r0
 802a0cc:	f7ff fff0 	bl	802a0b0 <_ZN8touchgfx6CanvasD1Ev>
 802a0d0:	4620      	mov	r0, r4
 802a0d2:	2170      	movs	r1, #112	; 0x70
 802a0d4:	f002 fd09 	bl	802caea <_ZdlPvj>
 802a0d8:	4620      	mov	r0, r4
 802a0da:	bd10      	pop	{r4, pc}

0802a0dc <_ZN8touchgfx6CircleD1Ev>:
 802a0dc:	4770      	bx	lr

0802a0de <_ZN8touchgfx6CircleD0Ev>:
 802a0de:	b510      	push	{r4, lr}
 802a0e0:	2148      	movs	r1, #72	; 0x48
 802a0e2:	4604      	mov	r4, r0
 802a0e4:	f002 fd01 	bl	802caea <_ZdlPvj>
 802a0e8:	4620      	mov	r0, r4
 802a0ea:	bd10      	pop	{r4, pc}

0802a0ec <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>:
 802a0ec:	b508      	push	{r3, lr}
 802a0ee:	f5c0 6034 	rsb	r0, r0, #2880	; 0xb40
 802a0f2:	f7ea fbab 	bl	801484c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a0f6:	bd08      	pop	{r3, pc}

0802a0f8 <_ZN8touchgfx6CircleC1Ev>:
 802a0f8:	b510      	push	{r4, lr}
 802a0fa:	4604      	mov	r4, r0
 802a0fc:	f7ea fa42 	bl	8014584 <_ZN8touchgfx12CanvasWidgetC1Ev>
 802a100:	4b08      	ldr	r3, [pc, #32]	; (802a124 <_ZN8touchgfx6CircleC1Ev+0x2c>)
 802a102:	6023      	str	r3, [r4, #0]
 802a104:	f44f 5234 	mov.w	r2, #11520	; 0x2d00
 802a108:	2300      	movs	r3, #0
 802a10a:	e9c4 230f 	strd	r2, r3, [r4, #60]	; 0x3c
 802a10e:	f24b 4205 	movw	r2, #46085	; 0xb405
 802a112:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 802a116:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 802a11a:	f8a4 2044 	strh.w	r2, [r4, #68]	; 0x44
 802a11e:	60a3      	str	r3, [r4, #8]
 802a120:	4620      	mov	r0, r4
 802a122:	bd10      	pop	{r4, pc}
 802a124:	08032160 	.word	0x08032160

0802a128 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>:
 802a128:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a12c:	428a      	cmp	r2, r1
 802a12e:	4680      	mov	r8, r0
 802a130:	4610      	mov	r0, r2
 802a132:	4699      	mov	r9, r3
 802a134:	bfa6      	itte	ge
 802a136:	460a      	movge	r2, r1
 802a138:	4603      	movge	r3, r0
 802a13a:	460b      	movlt	r3, r1
 802a13c:	1a99      	subs	r1, r3, r2
 802a13e:	b085      	sub	sp, #20
 802a140:	f5b1 5f34 	cmp.w	r1, #11520	; 0x2d00
 802a144:	f8d8 4040 	ldr.w	r4, [r8, #64]	; 0x40
 802a148:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802a14a:	bfa4      	itt	ge
 802a14c:	f44f 5334 	movge.w	r3, #11520	; 0x2d00
 802a150:	2200      	movge	r2, #0
 802a152:	e9dd 760e 	ldrd	r7, r6, [sp, #56]	; 0x38
 802a156:	9300      	str	r3, [sp, #0]
 802a158:	f108 0a34 	add.w	sl, r8, #52	; 0x34
 802a15c:	f102 0b01 	add.w	fp, r2, #1
 802a160:	2c00      	cmp	r4, #0
 802a162:	f040 80af 	bne.w	802a2c4 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x19c>
 802a166:	4610      	mov	r0, r2
 802a168:	9201      	str	r2, [sp, #4]
 802a16a:	f7ea fb6f 	bl	801484c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a16e:	a903      	add	r1, sp, #12
 802a170:	9003      	str	r0, [sp, #12]
 802a172:	4650      	mov	r0, sl
 802a174:	f7ea fa32 	bl	80145dc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a178:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 802a17c:	9a01      	ldr	r2, [sp, #4]
 802a17e:	4408      	add	r0, r1
 802a180:	f8d9 1000 	ldr.w	r1, [r9]
 802a184:	4281      	cmp	r1, r0
 802a186:	bfc8      	it	gt
 802a188:	f8c9 0000 	strgt.w	r0, [r9]
 802a18c:	6839      	ldr	r1, [r7, #0]
 802a18e:	4288      	cmp	r0, r1
 802a190:	bfc8      	it	gt
 802a192:	6038      	strgt	r0, [r7, #0]
 802a194:	4610      	mov	r0, r2
 802a196:	f7ff ffa9 	bl	802a0ec <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a19a:	a903      	add	r1, sp, #12
 802a19c:	9003      	str	r0, [sp, #12]
 802a19e:	4650      	mov	r0, sl
 802a1a0:	f7ea fa1c 	bl	80145dc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a1a4:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 802a1a8:	1a10      	subs	r0, r2, r0
 802a1aa:	6832      	ldr	r2, [r6, #0]
 802a1ac:	4282      	cmp	r2, r0
 802a1ae:	bfc8      	it	gt
 802a1b0:	6030      	strgt	r0, [r6, #0]
 802a1b2:	682a      	ldr	r2, [r5, #0]
 802a1b4:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 802a1b8:	4290      	cmp	r0, r2
 802a1ba:	fb9b f2f1 	sdiv	r2, fp, r1
 802a1be:	fb01 b212 	mls	r2, r1, r2, fp
 802a1c2:	eba1 0202 	sub.w	r2, r1, r2
 802a1c6:	bfc8      	it	gt
 802a1c8:	6028      	strgt	r0, [r5, #0]
 802a1ca:	fb92 f0f1 	sdiv	r0, r2, r1
 802a1ce:	fb01 2210 	mls	r2, r1, r0, r2
 802a1d2:	4493      	add	fp, r2
 802a1d4:	9b00      	ldr	r3, [sp, #0]
 802a1d6:	455b      	cmp	r3, fp
 802a1d8:	db2a      	blt.n	802a230 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x108>
 802a1da:	4658      	mov	r0, fp
 802a1dc:	f7ea fb36 	bl	801484c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a1e0:	a903      	add	r1, sp, #12
 802a1e2:	9003      	str	r0, [sp, #12]
 802a1e4:	4650      	mov	r0, sl
 802a1e6:	f7ea f9f9 	bl	80145dc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a1ea:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 802a1ee:	4410      	add	r0, r2
 802a1f0:	f8d9 2000 	ldr.w	r2, [r9]
 802a1f4:	4282      	cmp	r2, r0
 802a1f6:	bfc8      	it	gt
 802a1f8:	f8c9 0000 	strgt.w	r0, [r9]
 802a1fc:	683a      	ldr	r2, [r7, #0]
 802a1fe:	4290      	cmp	r0, r2
 802a200:	bfc8      	it	gt
 802a202:	6038      	strgt	r0, [r7, #0]
 802a204:	4658      	mov	r0, fp
 802a206:	f7ff ff71 	bl	802a0ec <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a20a:	a903      	add	r1, sp, #12
 802a20c:	9003      	str	r0, [sp, #12]
 802a20e:	4650      	mov	r0, sl
 802a210:	f7ea f9e4 	bl	80145dc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a214:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 802a218:	1a10      	subs	r0, r2, r0
 802a21a:	6832      	ldr	r2, [r6, #0]
 802a21c:	4282      	cmp	r2, r0
 802a21e:	bfc8      	it	gt
 802a220:	6030      	strgt	r0, [r6, #0]
 802a222:	682a      	ldr	r2, [r5, #0]
 802a224:	4290      	cmp	r0, r2
 802a226:	bfc8      	it	gt
 802a228:	6028      	strgt	r0, [r5, #0]
 802a22a:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 802a22e:	e7d1      	b.n	802a1d4 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xac>
 802a230:	9b00      	ldr	r3, [sp, #0]
 802a232:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 802a236:	455b      	cmp	r3, fp
 802a238:	dd27      	ble.n	802a28a <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x162>
 802a23a:	4618      	mov	r0, r3
 802a23c:	f7ea fb06 	bl	801484c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a240:	a903      	add	r1, sp, #12
 802a242:	9003      	str	r0, [sp, #12]
 802a244:	4650      	mov	r0, sl
 802a246:	f7ea f9c9 	bl	80145dc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a24a:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 802a24e:	4410      	add	r0, r2
 802a250:	f8d9 2000 	ldr.w	r2, [r9]
 802a254:	4282      	cmp	r2, r0
 802a256:	bfc8      	it	gt
 802a258:	f8c9 0000 	strgt.w	r0, [r9]
 802a25c:	683a      	ldr	r2, [r7, #0]
 802a25e:	4290      	cmp	r0, r2
 802a260:	bfc8      	it	gt
 802a262:	6038      	strgt	r0, [r7, #0]
 802a264:	9800      	ldr	r0, [sp, #0]
 802a266:	f7ff ff41 	bl	802a0ec <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a26a:	a903      	add	r1, sp, #12
 802a26c:	9003      	str	r0, [sp, #12]
 802a26e:	4650      	mov	r0, sl
 802a270:	f7ea f9b4 	bl	80145dc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a274:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 802a278:	1a10      	subs	r0, r2, r0
 802a27a:	6832      	ldr	r2, [r6, #0]
 802a27c:	4282      	cmp	r2, r0
 802a27e:	bfc8      	it	gt
 802a280:	6030      	strgt	r0, [r6, #0]
 802a282:	682a      	ldr	r2, [r5, #0]
 802a284:	4290      	cmp	r0, r2
 802a286:	bfc8      	it	gt
 802a288:	6028      	strgt	r0, [r5, #0]
 802a28a:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 802a28e:	f8d9 1000 	ldr.w	r1, [r9]
 802a292:	4291      	cmp	r1, r2
 802a294:	bfc8      	it	gt
 802a296:	f8c9 2000 	strgt.w	r2, [r9]
 802a29a:	683a      	ldr	r2, [r7, #0]
 802a29c:	f8d8 302c 	ldr.w	r3, [r8, #44]	; 0x2c
 802a2a0:	429a      	cmp	r2, r3
 802a2a2:	bfb8      	it	lt
 802a2a4:	603b      	strlt	r3, [r7, #0]
 802a2a6:	6832      	ldr	r2, [r6, #0]
 802a2a8:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 802a2ac:	429a      	cmp	r2, r3
 802a2ae:	bfc8      	it	gt
 802a2b0:	6033      	strgt	r3, [r6, #0]
 802a2b2:	682a      	ldr	r2, [r5, #0]
 802a2b4:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 802a2b8:	429a      	cmp	r2, r3
 802a2ba:	da00      	bge.n	802a2be <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 802a2bc:	602b      	str	r3, [r5, #0]
 802a2be:	b005      	add	sp, #20
 802a2c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802a2c4:	2002      	movs	r0, #2
 802a2c6:	3401      	adds	r4, #1
 802a2c8:	fb94 f4f0 	sdiv	r4, r4, r0
 802a2cc:	4610      	mov	r0, r2
 802a2ce:	9201      	str	r2, [sp, #4]
 802a2d0:	f7ea fabc 	bl	801484c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a2d4:	a903      	add	r1, sp, #12
 802a2d6:	9003      	str	r0, [sp, #12]
 802a2d8:	4650      	mov	r0, sl
 802a2da:	f7ea f97f 	bl	80145dc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a2de:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 802a2e2:	9a01      	ldr	r2, [sp, #4]
 802a2e4:	4408      	add	r0, r1
 802a2e6:	f8d9 1000 	ldr.w	r1, [r9]
 802a2ea:	1b03      	subs	r3, r0, r4
 802a2ec:	4299      	cmp	r1, r3
 802a2ee:	bfc8      	it	gt
 802a2f0:	f8c9 3000 	strgt.w	r3, [r9]
 802a2f4:	6839      	ldr	r1, [r7, #0]
 802a2f6:	428b      	cmp	r3, r1
 802a2f8:	bfc8      	it	gt
 802a2fa:	603b      	strgt	r3, [r7, #0]
 802a2fc:	f8d9 1000 	ldr.w	r1, [r9]
 802a300:	4420      	add	r0, r4
 802a302:	4281      	cmp	r1, r0
 802a304:	bfc8      	it	gt
 802a306:	f8c9 0000 	strgt.w	r0, [r9]
 802a30a:	6839      	ldr	r1, [r7, #0]
 802a30c:	4288      	cmp	r0, r1
 802a30e:	bfc8      	it	gt
 802a310:	6038      	strgt	r0, [r7, #0]
 802a312:	4610      	mov	r0, r2
 802a314:	f7ff feea 	bl	802a0ec <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a318:	a903      	add	r1, sp, #12
 802a31a:	9003      	str	r0, [sp, #12]
 802a31c:	4650      	mov	r0, sl
 802a31e:	f7ea f95d 	bl	80145dc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a322:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 802a326:	1a10      	subs	r0, r2, r0
 802a328:	6832      	ldr	r2, [r6, #0]
 802a32a:	1b01      	subs	r1, r0, r4
 802a32c:	428a      	cmp	r2, r1
 802a32e:	bfc8      	it	gt
 802a330:	6031      	strgt	r1, [r6, #0]
 802a332:	682a      	ldr	r2, [r5, #0]
 802a334:	4291      	cmp	r1, r2
 802a336:	bfc8      	it	gt
 802a338:	6029      	strgt	r1, [r5, #0]
 802a33a:	6832      	ldr	r2, [r6, #0]
 802a33c:	4420      	add	r0, r4
 802a33e:	4282      	cmp	r2, r0
 802a340:	bfc8      	it	gt
 802a342:	6030      	strgt	r0, [r6, #0]
 802a344:	682a      	ldr	r2, [r5, #0]
 802a346:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 802a34a:	4290      	cmp	r0, r2
 802a34c:	fb9b f2f1 	sdiv	r2, fp, r1
 802a350:	fb01 b212 	mls	r2, r1, r2, fp
 802a354:	eba1 0202 	sub.w	r2, r1, r2
 802a358:	bfc8      	it	gt
 802a35a:	6028      	strgt	r0, [r5, #0]
 802a35c:	fb92 f0f1 	sdiv	r0, r2, r1
 802a360:	fb01 2210 	mls	r2, r1, r0, r2
 802a364:	4493      	add	fp, r2
 802a366:	9b00      	ldr	r3, [sp, #0]
 802a368:	455b      	cmp	r3, fp
 802a36a:	db40      	blt.n	802a3ee <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x2c6>
 802a36c:	4658      	mov	r0, fp
 802a36e:	f7ea fa6d 	bl	801484c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a372:	a903      	add	r1, sp, #12
 802a374:	9003      	str	r0, [sp, #12]
 802a376:	4650      	mov	r0, sl
 802a378:	f7ea f930 	bl	80145dc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a37c:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 802a380:	4410      	add	r0, r2
 802a382:	f8d9 2000 	ldr.w	r2, [r9]
 802a386:	1b01      	subs	r1, r0, r4
 802a388:	428a      	cmp	r2, r1
 802a38a:	bfc8      	it	gt
 802a38c:	f8c9 1000 	strgt.w	r1, [r9]
 802a390:	683a      	ldr	r2, [r7, #0]
 802a392:	4291      	cmp	r1, r2
 802a394:	bfc8      	it	gt
 802a396:	6039      	strgt	r1, [r7, #0]
 802a398:	f8d9 2000 	ldr.w	r2, [r9]
 802a39c:	4420      	add	r0, r4
 802a39e:	4282      	cmp	r2, r0
 802a3a0:	bfc8      	it	gt
 802a3a2:	f8c9 0000 	strgt.w	r0, [r9]
 802a3a6:	683a      	ldr	r2, [r7, #0]
 802a3a8:	4290      	cmp	r0, r2
 802a3aa:	bfc8      	it	gt
 802a3ac:	6038      	strgt	r0, [r7, #0]
 802a3ae:	4658      	mov	r0, fp
 802a3b0:	f7ff fe9c 	bl	802a0ec <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a3b4:	a903      	add	r1, sp, #12
 802a3b6:	9003      	str	r0, [sp, #12]
 802a3b8:	4650      	mov	r0, sl
 802a3ba:	f7ea f90f 	bl	80145dc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a3be:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 802a3c2:	1a10      	subs	r0, r2, r0
 802a3c4:	6832      	ldr	r2, [r6, #0]
 802a3c6:	1b01      	subs	r1, r0, r4
 802a3c8:	428a      	cmp	r2, r1
 802a3ca:	bfc8      	it	gt
 802a3cc:	6031      	strgt	r1, [r6, #0]
 802a3ce:	682a      	ldr	r2, [r5, #0]
 802a3d0:	4291      	cmp	r1, r2
 802a3d2:	bfc8      	it	gt
 802a3d4:	6029      	strgt	r1, [r5, #0]
 802a3d6:	6832      	ldr	r2, [r6, #0]
 802a3d8:	4420      	add	r0, r4
 802a3da:	4282      	cmp	r2, r0
 802a3dc:	bfc8      	it	gt
 802a3de:	6030      	strgt	r0, [r6, #0]
 802a3e0:	682a      	ldr	r2, [r5, #0]
 802a3e2:	4290      	cmp	r0, r2
 802a3e4:	bfc8      	it	gt
 802a3e6:	6028      	strgt	r0, [r5, #0]
 802a3e8:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 802a3ec:	e7bb      	b.n	802a366 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x23e>
 802a3ee:	9b00      	ldr	r3, [sp, #0]
 802a3f0:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 802a3f4:	455b      	cmp	r3, fp
 802a3f6:	f77f af62 	ble.w	802a2be <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 802a3fa:	4618      	mov	r0, r3
 802a3fc:	f7ea fa26 	bl	801484c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a400:	a903      	add	r1, sp, #12
 802a402:	9003      	str	r0, [sp, #12]
 802a404:	4650      	mov	r0, sl
 802a406:	f7ea f8e9 	bl	80145dc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a40a:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 802a40e:	4410      	add	r0, r2
 802a410:	f8d9 2000 	ldr.w	r2, [r9]
 802a414:	1b01      	subs	r1, r0, r4
 802a416:	428a      	cmp	r2, r1
 802a418:	bfc8      	it	gt
 802a41a:	f8c9 1000 	strgt.w	r1, [r9]
 802a41e:	683a      	ldr	r2, [r7, #0]
 802a420:	4291      	cmp	r1, r2
 802a422:	bfc8      	it	gt
 802a424:	6039      	strgt	r1, [r7, #0]
 802a426:	f8d9 2000 	ldr.w	r2, [r9]
 802a42a:	4420      	add	r0, r4
 802a42c:	4282      	cmp	r2, r0
 802a42e:	bfc8      	it	gt
 802a430:	f8c9 0000 	strgt.w	r0, [r9]
 802a434:	683b      	ldr	r3, [r7, #0]
 802a436:	4298      	cmp	r0, r3
 802a438:	bfc8      	it	gt
 802a43a:	6038      	strgt	r0, [r7, #0]
 802a43c:	9800      	ldr	r0, [sp, #0]
 802a43e:	f7ff fe55 	bl	802a0ec <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a442:	a903      	add	r1, sp, #12
 802a444:	9003      	str	r0, [sp, #12]
 802a446:	4650      	mov	r0, sl
 802a448:	f7ea f8c8 	bl	80145dc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a44c:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 802a450:	6832      	ldr	r2, [r6, #0]
 802a452:	1a18      	subs	r0, r3, r0
 802a454:	1b03      	subs	r3, r0, r4
 802a456:	429a      	cmp	r2, r3
 802a458:	bfc8      	it	gt
 802a45a:	6033      	strgt	r3, [r6, #0]
 802a45c:	682a      	ldr	r2, [r5, #0]
 802a45e:	4293      	cmp	r3, r2
 802a460:	bfc8      	it	gt
 802a462:	602b      	strgt	r3, [r5, #0]
 802a464:	6833      	ldr	r3, [r6, #0]
 802a466:	4404      	add	r4, r0
 802a468:	42a3      	cmp	r3, r4
 802a46a:	bfc8      	it	gt
 802a46c:	6034      	strgt	r4, [r6, #0]
 802a46e:	682b      	ldr	r3, [r5, #0]
 802a470:	429c      	cmp	r4, r3
 802a472:	bfc8      	it	gt
 802a474:	602c      	strgt	r4, [r5, #0]
 802a476:	e722      	b.n	802a2be <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>

0802a478 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>:
 802a478:	b530      	push	{r4, r5, lr}
 802a47a:	4604      	mov	r4, r0
 802a47c:	4608      	mov	r0, r1
 802a47e:	4611      	mov	r1, r2
 802a480:	461a      	mov	r2, r3
 802a482:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 802a486:	b089      	sub	sp, #36	; 0x24
 802a488:	015b      	lsls	r3, r3, #5
 802a48a:	9304      	str	r3, [sp, #16]
 802a48c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 802a490:	2500      	movs	r5, #0
 802a492:	015b      	lsls	r3, r3, #5
 802a494:	e9cd 3506 	strd	r3, r5, [sp, #24]
 802a498:	ab07      	add	r3, sp, #28
 802a49a:	9302      	str	r3, [sp, #8]
 802a49c:	ab06      	add	r3, sp, #24
 802a49e:	9301      	str	r3, [sp, #4]
 802a4a0:	ab05      	add	r3, sp, #20
 802a4a2:	9300      	str	r3, [sp, #0]
 802a4a4:	ab04      	add	r3, sp, #16
 802a4a6:	9505      	str	r5, [sp, #20]
 802a4a8:	f7ff fe3e 	bl	802a128 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>
 802a4ac:	2520      	movs	r5, #32
 802a4ae:	9a04      	ldr	r2, [sp, #16]
 802a4b0:	9805      	ldr	r0, [sp, #20]
 802a4b2:	fb92 f2f5 	sdiv	r2, r2, r5
 802a4b6:	fb90 f0f5 	sdiv	r0, r0, r5
 802a4ba:	b292      	uxth	r2, r2
 802a4bc:	3002      	adds	r0, #2
 802a4be:	1a80      	subs	r0, r0, r2
 802a4c0:	9b06      	ldr	r3, [sp, #24]
 802a4c2:	9907      	ldr	r1, [sp, #28]
 802a4c4:	fb93 f3f5 	sdiv	r3, r3, r5
 802a4c8:	fb91 f1f5 	sdiv	r1, r1, r5
 802a4cc:	b29b      	uxth	r3, r3
 802a4ce:	3102      	adds	r1, #2
 802a4d0:	1ac9      	subs	r1, r1, r3
 802a4d2:	3a01      	subs	r2, #1
 802a4d4:	3b01      	subs	r3, #1
 802a4d6:	80a0      	strh	r0, [r4, #4]
 802a4d8:	4620      	mov	r0, r4
 802a4da:	8022      	strh	r2, [r4, #0]
 802a4dc:	8063      	strh	r3, [r4, #2]
 802a4de:	80e1      	strh	r1, [r4, #6]
 802a4e0:	b009      	add	sp, #36	; 0x24
 802a4e2:	bd30      	pop	{r4, r5, pc}

0802a4e4 <_ZNK8touchgfx6Circle14getMinimalRectEv>:
 802a4e4:	b510      	push	{r4, lr}
 802a4e6:	e9d1 230e 	ldrd	r2, r3, [r1, #56]	; 0x38
 802a4ea:	4604      	mov	r4, r0
 802a4ec:	f7ff ffc4 	bl	802a478 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 802a4f0:	4620      	mov	r0, r4
 802a4f2:	bd10      	pop	{r4, pc}

0802a4f4 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>:
 802a4f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802a4f6:	e9d1 540e 	ldrd	r5, r4, [r1, #56]	; 0x38
 802a4fa:	4606      	mov	r6, r0
 802a4fc:	f891 0044 	ldrb.w	r0, [r1, #68]	; 0x44
 802a500:	6813      	ldr	r3, [r2, #0]
 802a502:	42a5      	cmp	r5, r4
 802a504:	ea4f 1040 	mov.w	r0, r0, lsl #5
 802a508:	da2b      	bge.n	802a562 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x6e>
 802a50a:	42a3      	cmp	r3, r4
 802a50c:	dd14      	ble.n	802a538 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x44>
 802a50e:	b168      	cbz	r0, 802a52c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 802a510:	4267      	negs	r7, r4
 802a512:	fb97 f2f0 	sdiv	r2, r7, r0
 802a516:	fb00 7212 	mls	r2, r0, r2, r7
 802a51a:	1a82      	subs	r2, r0, r2
 802a51c:	fb92 f7f0 	sdiv	r7, r2, r0
 802a520:	fb00 2017 	mls	r0, r0, r7, r2
 802a524:	1a24      	subs	r4, r4, r0
 802a526:	42ac      	cmp	r4, r5
 802a528:	bfb8      	it	lt
 802a52a:	462c      	movlt	r4, r5
 802a52c:	4630      	mov	r0, r6
 802a52e:	4622      	mov	r2, r4
 802a530:	f7ff ffa2 	bl	802a478 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 802a534:	4630      	mov	r0, r6
 802a536:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802a538:	42ab      	cmp	r3, r5
 802a53a:	dd0e      	ble.n	802a55a <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 802a53c:	b168      	cbz	r0, 802a55a <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 802a53e:	425f      	negs	r7, r3
 802a540:	fb97 f2f0 	sdiv	r2, r7, r0
 802a544:	fb00 7212 	mls	r2, r0, r2, r7
 802a548:	1a82      	subs	r2, r0, r2
 802a54a:	fb92 f7f0 	sdiv	r7, r2, r0
 802a54e:	fb00 2017 	mls	r0, r0, r7, r2
 802a552:	1a1b      	subs	r3, r3, r0
 802a554:	42ab      	cmp	r3, r5
 802a556:	bfb8      	it	lt
 802a558:	462b      	movlt	r3, r5
 802a55a:	4622      	mov	r2, r4
 802a55c:	461c      	mov	r4, r3
 802a55e:	4613      	mov	r3, r2
 802a560:	e7e4      	b.n	802a52c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 802a562:	42a3      	cmp	r3, r4
 802a564:	da10      	bge.n	802a588 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x94>
 802a566:	b148      	cbz	r0, 802a57c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x88>
 802a568:	fb94 f2f0 	sdiv	r2, r4, r0
 802a56c:	fb00 4212 	mls	r2, r0, r2, r4
 802a570:	1a82      	subs	r2, r0, r2
 802a572:	fb92 f7f0 	sdiv	r7, r2, r0
 802a576:	fb00 2017 	mls	r0, r0, r7, r2
 802a57a:	4404      	add	r4, r0
 802a57c:	42a5      	cmp	r5, r4
 802a57e:	bfa8      	it	ge
 802a580:	4625      	movge	r5, r4
 802a582:	461c      	mov	r4, r3
 802a584:	462b      	mov	r3, r5
 802a586:	e7d1      	b.n	802a52c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 802a588:	42ab      	cmp	r3, r5
 802a58a:	dacf      	bge.n	802a52c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 802a58c:	2800      	cmp	r0, #0
 802a58e:	d0cd      	beq.n	802a52c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 802a590:	fb93 f2f0 	sdiv	r2, r3, r0
 802a594:	fb00 3212 	mls	r2, r0, r2, r3
 802a598:	1a82      	subs	r2, r0, r2
 802a59a:	fb92 f7f0 	sdiv	r7, r2, r0
 802a59e:	fb00 2017 	mls	r0, r0, r7, r2
 802a5a2:	4403      	add	r3, r0
 802a5a4:	42ab      	cmp	r3, r5
 802a5a6:	bfa8      	it	ge
 802a5a8:	462b      	movge	r3, r5
 802a5aa:	e7bf      	b.n	802a52c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>

0802a5ac <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE>:
 802a5ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a5b0:	e9d0 560e 	ldrd	r5, r6, [r0, #56]	; 0x38
 802a5b4:	42ae      	cmp	r6, r5
 802a5b6:	bfa2      	ittt	ge
 802a5b8:	4633      	movge	r3, r6
 802a5ba:	462e      	movge	r6, r5
 802a5bc:	461d      	movge	r5, r3
 802a5be:	1bab      	subs	r3, r5, r6
 802a5c0:	468b      	mov	fp, r1
 802a5c2:	6c01      	ldr	r1, [r0, #64]	; 0x40
 802a5c4:	f9b0 902c 	ldrsh.w	r9, [r0, #44]	; 0x2c
 802a5c8:	f9b0 a030 	ldrsh.w	sl, [r0, #48]	; 0x30
 802a5cc:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 802a5d0:	f04f 0220 	mov.w	r2, #32
 802a5d4:	b0ab      	sub	sp, #172	; 0xac
 802a5d6:	4604      	mov	r4, r0
 802a5d8:	bfa4      	itt	ge
 802a5da:	f44f 5534 	movge.w	r5, #11520	; 0x2d00
 802a5de:	2600      	movge	r6, #0
 802a5e0:	fb99 f9f2 	sdiv	r9, r9, r2
 802a5e4:	fb9a faf2 	sdiv	sl, sl, r2
 802a5e8:	6b43      	ldr	r3, [r0, #52]	; 0x34
 802a5ea:	2900      	cmp	r1, #0
 802a5ec:	f000 80f5 	beq.w	802a7da <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x22e>
 802a5f0:	f9bb 0000 	ldrsh.w	r0, [fp]
 802a5f4:	f9bb 2002 	ldrsh.w	r2, [fp, #2]
 802a5f8:	eba9 0700 	sub.w	r7, r9, r0
 802a5fc:	ea87 7ce7 	eor.w	ip, r7, r7, asr #31
 802a600:	ebac 7ce7 	sub.w	ip, ip, r7, asr #31
 802a604:	f8bb 7004 	ldrh.w	r7, [fp, #4]
 802a608:	ebaa 0802 	sub.w	r8, sl, r2
 802a60c:	4407      	add	r7, r0
 802a60e:	ea88 70e8 	eor.w	r0, r8, r8, asr #31
 802a612:	eba0 70e8 	sub.w	r0, r0, r8, asr #31
 802a616:	f8bb 8006 	ldrh.w	r8, [fp, #6]
 802a61a:	b23f      	sxth	r7, r7
 802a61c:	4490      	add	r8, r2
 802a61e:	eba9 0707 	sub.w	r7, r9, r7
 802a622:	fa0f f888 	sxth.w	r8, r8
 802a626:	ebaa 0808 	sub.w	r8, sl, r8
 802a62a:	2f00      	cmp	r7, #0
 802a62c:	bfb8      	it	lt
 802a62e:	427f      	neglt	r7, r7
 802a630:	f1b8 0f00 	cmp.w	r8, #0
 802a634:	bfb8      	it	lt
 802a636:	f1c8 0800 	rsblt	r8, r8, #0
 802a63a:	45bc      	cmp	ip, r7
 802a63c:	bfcc      	ite	gt
 802a63e:	f10c 0701 	addgt.w	r7, ip, #1
 802a642:	3701      	addle	r7, #1
 802a644:	4540      	cmp	r0, r8
 802a646:	bfc8      	it	gt
 802a648:	f100 0801 	addgt.w	r8, r0, #1
 802a64c:	f894 0044 	ldrb.w	r0, [r4, #68]	; 0x44
 802a650:	f100 0001 	add.w	r0, r0, #1
 802a654:	ea4f 0060 	mov.w	r0, r0, asr #1
 802a658:	f04f 0202 	mov.w	r2, #2
 802a65c:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 802a660:	fb91 f1f2 	sdiv	r1, r1, r2
 802a664:	eba3 0301 	sub.w	r3, r3, r1
 802a668:	bfd8      	it	le
 802a66a:	f108 0801 	addle.w	r8, r8, #1
 802a66e:	9201      	str	r2, [sp, #4]
 802a670:	930d      	str	r3, [sp, #52]	; 0x34
 802a672:	f7ea f8cb 	bl	801480c <_ZN8touchgfx7CWRUtil4sineEi>
 802a676:	a92a      	add	r1, sp, #168	; 0xa8
 802a678:	fb08 f808 	mul.w	r8, r8, r8
 802a67c:	f841 0d70 	str.w	r0, [r1, #-112]!
 802a680:	a80d      	add	r0, sp, #52	; 0x34
 802a682:	f7e9 ffab 	bl	80145dc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a686:	fb07 8707 	mla	r7, r7, r7, r8
 802a68a:	f04f 0c20 	mov.w	ip, #32
 802a68e:	fb90 f0fc 	sdiv	r0, r0, ip
 802a692:	4340      	muls	r0, r0
 802a694:	4287      	cmp	r7, r0
 802a696:	9a01      	ldr	r2, [sp, #4]
 802a698:	da04      	bge.n	802a6a4 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf8>
 802a69a:	2401      	movs	r4, #1
 802a69c:	4620      	mov	r0, r4
 802a69e:	b02b      	add	sp, #172	; 0xac
 802a6a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802a6a4:	6b60      	ldr	r0, [r4, #52]	; 0x34
 802a6a6:	6c21      	ldr	r1, [r4, #64]	; 0x40
 802a6a8:	fb91 f3f2 	sdiv	r3, r1, r2
 802a6ac:	4403      	add	r3, r0
 802a6ae:	fb93 f3fc 	sdiv	r3, r3, ip
 802a6b2:	f9bb 1000 	ldrsh.w	r1, [fp]
 802a6b6:	f8bb 2004 	ldrh.w	r2, [fp, #4]
 802a6ba:	440a      	add	r2, r1
 802a6bc:	b212      	sxth	r2, r2
 802a6be:	454a      	cmp	r2, r9
 802a6c0:	bfa8      	it	ge
 802a6c2:	464a      	movge	r2, r9
 802a6c4:	428a      	cmp	r2, r1
 802a6c6:	bfac      	ite	ge
 802a6c8:	eba9 0902 	subge.w	r9, r9, r2
 802a6cc:	eba9 0901 	sublt.w	r9, r9, r1
 802a6d0:	f8bb 2006 	ldrh.w	r2, [fp, #6]
 802a6d4:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 802a6d8:	440a      	add	r2, r1
 802a6da:	b212      	sxth	r2, r2
 802a6dc:	4552      	cmp	r2, sl
 802a6de:	bfa8      	it	ge
 802a6e0:	4652      	movge	r2, sl
 802a6e2:	428a      	cmp	r2, r1
 802a6e4:	bfac      	ite	ge
 802a6e6:	ebaa 0a02 	subge.w	sl, sl, r2
 802a6ea:	ebaa 0a01 	sublt.w	sl, sl, r1
 802a6ee:	3301      	adds	r3, #1
 802a6f0:	fb0a fa0a 	mul.w	sl, sl, sl
 802a6f4:	fb09 a909 	mla	r9, r9, r9, sl
 802a6f8:	435b      	muls	r3, r3
 802a6fa:	4599      	cmp	r9, r3
 802a6fc:	dccd      	bgt.n	802a69a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xee>
 802a6fe:	465a      	mov	r2, fp
 802a700:	4621      	mov	r1, r4
 802a702:	a80e      	add	r0, sp, #56	; 0x38
 802a704:	f7ff faae 	bl	8029c64 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 802a708:	6b62      	ldr	r2, [r4, #52]	; 0x34
 802a70a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 802a70c:	9209      	str	r2, [sp, #36]	; 0x24
 802a70e:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
 802a712:	930a      	str	r3, [sp, #40]	; 0x28
 802a714:	dd07      	ble.n	802a726 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x17a>
 802a716:	2102      	movs	r1, #2
 802a718:	fb93 f3f1 	sdiv	r3, r3, r1
 802a71c:	4413      	add	r3, r2
 802a71e:	930a      	str	r3, [sp, #40]	; 0x28
 802a720:	fb93 f3f1 	sdiv	r3, r3, r1
 802a724:	9309      	str	r3, [sp, #36]	; 0x24
 802a726:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 802a72a:	4630      	mov	r0, r6
 802a72c:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 802a730:	930b      	str	r3, [sp, #44]	; 0x2c
 802a732:	f894 7044 	ldrb.w	r7, [r4, #68]	; 0x44
 802a736:	f7ea f889 	bl	801484c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a73a:	f10d 09a8 	add.w	r9, sp, #168	; 0xa8
 802a73e:	f04f 0a02 	mov.w	sl, #2
 802a742:	f849 0d74 	str.w	r0, [r9, #-116]!
 802a746:	a80b      	add	r0, sp, #44	; 0x2c
 802a748:	4649      	mov	r1, r9
 802a74a:	f7e9 ff47 	bl	80145dc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a74e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 802a750:	fb90 f0fa 	sdiv	r0, r0, sl
 802a754:	eb00 0b03 	add.w	fp, r0, r3
 802a758:	4630      	mov	r0, r6
 802a75a:	f7ff fcc7 	bl	802a0ec <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a75e:	f10d 08a8 	add.w	r8, sp, #168	; 0xa8
 802a762:	017f      	lsls	r7, r7, #5
 802a764:	f848 0d78 	str.w	r0, [r8, #-120]!
 802a768:	a80b      	add	r0, sp, #44	; 0x2c
 802a76a:	4641      	mov	r1, r8
 802a76c:	f7e9 ff36 	bl	80145dc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a770:	6b22      	ldr	r2, [r4, #48]	; 0x30
 802a772:	fb90 f0fa 	sdiv	r0, r0, sl
 802a776:	4659      	mov	r1, fp
 802a778:	1a12      	subs	r2, r2, r0
 802a77a:	a80e      	add	r0, sp, #56	; 0x38
 802a77c:	f7ff fbf2 	bl	8029f64 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 802a780:	f106 0a20 	add.w	sl, r6, #32
 802a784:	bb67      	cbnz	r7, 802a7e0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x234>
 802a786:	46b3      	mov	fp, r6
 802a788:	45aa      	cmp	sl, r5
 802a78a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802a78c:	dc33      	bgt.n	802a7f6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x24a>
 802a78e:	9909      	ldr	r1, [sp, #36]	; 0x24
 802a790:	4650      	mov	r0, sl
 802a792:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 802a796:	920b      	str	r2, [sp, #44]	; 0x2c
 802a798:	f7ea f858 	bl	801484c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a79c:	4641      	mov	r1, r8
 802a79e:	900c      	str	r0, [sp, #48]	; 0x30
 802a7a0:	a80b      	add	r0, sp, #44	; 0x2c
 802a7a2:	f7e9 ff1b 	bl	80145dc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a7a6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 802a7a8:	2302      	movs	r3, #2
 802a7aa:	fb90 f0f3 	sdiv	r0, r0, r3
 802a7ae:	eb00 0b02 	add.w	fp, r0, r2
 802a7b2:	4650      	mov	r0, sl
 802a7b4:	f7ff fc9a 	bl	802a0ec <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a7b8:	4649      	mov	r1, r9
 802a7ba:	900d      	str	r0, [sp, #52]	; 0x34
 802a7bc:	a80b      	add	r0, sp, #44	; 0x2c
 802a7be:	f7e9 ff0d 	bl	80145dc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a7c2:	6b22      	ldr	r2, [r4, #48]	; 0x30
 802a7c4:	2302      	movs	r3, #2
 802a7c6:	4659      	mov	r1, fp
 802a7c8:	fb90 f0f3 	sdiv	r0, r0, r3
 802a7cc:	1a12      	subs	r2, r2, r0
 802a7ce:	a80e      	add	r0, sp, #56	; 0x38
 802a7d0:	46d3      	mov	fp, sl
 802a7d2:	f7ff fc14 	bl	8029ffe <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802a7d6:	44ba      	add	sl, r7
 802a7d8:	e7d6      	b.n	802a788 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1dc>
 802a7da:	fb93 f3f2 	sdiv	r3, r3, r2
 802a7de:	e768      	b.n	802a6b2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x106>
 802a7e0:	fb9a f2f7 	sdiv	r2, sl, r7
 802a7e4:	fb07 a212 	mls	r2, r7, r2, sl
 802a7e8:	1aba      	subs	r2, r7, r2
 802a7ea:	fb92 f1f7 	sdiv	r1, r2, r7
 802a7ee:	fb07 2211 	mls	r2, r7, r1, r2
 802a7f2:	4492      	add	sl, r2
 802a7f4:	e7c7      	b.n	802a786 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1da>
 802a7f6:	45ab      	cmp	fp, r5
 802a7f8:	da23      	bge.n	802a842 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x296>
 802a7fa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802a7fc:	4628      	mov	r0, r5
 802a7fe:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 802a802:	920b      	str	r2, [sp, #44]	; 0x2c
 802a804:	f7ea f822 	bl	801484c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a808:	4641      	mov	r1, r8
 802a80a:	900c      	str	r0, [sp, #48]	; 0x30
 802a80c:	a80b      	add	r0, sp, #44	; 0x2c
 802a80e:	f7e9 fee5 	bl	80145dc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a812:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 802a814:	f04f 0a02 	mov.w	sl, #2
 802a818:	fb90 f0fa 	sdiv	r0, r0, sl
 802a81c:	4403      	add	r3, r0
 802a81e:	4628      	mov	r0, r5
 802a820:	9301      	str	r3, [sp, #4]
 802a822:	f7ff fc63 	bl	802a0ec <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a826:	4649      	mov	r1, r9
 802a828:	900d      	str	r0, [sp, #52]	; 0x34
 802a82a:	a80b      	add	r0, sp, #44	; 0x2c
 802a82c:	f7e9 fed6 	bl	80145dc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a830:	6b22      	ldr	r2, [r4, #48]	; 0x30
 802a832:	9b01      	ldr	r3, [sp, #4]
 802a834:	fb90 f0fa 	sdiv	r0, r0, sl
 802a838:	4619      	mov	r1, r3
 802a83a:	1a12      	subs	r2, r2, r0
 802a83c:	a80e      	add	r0, sp, #56	; 0x38
 802a83e:	f7ff fbde 	bl	8029ffe <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802a842:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802a844:	b99b      	cbnz	r3, 802a86e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c2>
 802a846:	1bad      	subs	r5, r5, r6
 802a848:	f5b5 5f34 	cmp.w	r5, #11520	; 0x2d00
 802a84c:	da04      	bge.n	802a858 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 802a84e:	e9d4 120b 	ldrd	r1, r2, [r4, #44]	; 0x2c
 802a852:	a80e      	add	r0, sp, #56	; 0x38
 802a854:	f7ff fbd3 	bl	8029ffe <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802a858:	21ff      	movs	r1, #255	; 0xff
 802a85a:	a80e      	add	r0, sp, #56	; 0x38
 802a85c:	f7ff fabe 	bl	8029ddc <_ZN8touchgfx6Canvas6renderEh>
 802a860:	4604      	mov	r4, r0
 802a862:	4b8a      	ldr	r3, [pc, #552]	; (802aa8c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4e0>)
 802a864:	930e      	str	r3, [sp, #56]	; 0x38
 802a866:	a816      	add	r0, sp, #88	; 0x58
 802a868:	f7eb fcf0 	bl	801624c <_ZN8touchgfx7OutlineD1Ev>
 802a86c:	e716      	b.n	802a69c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf0>
 802a86e:	e9dd 2317 	ldrd	r2, r3, [sp, #92]	; 0x5c
 802a872:	429a      	cmp	r2, r3
 802a874:	f0c0 8107 	bcc.w	802aa86 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4da>
 802a878:	1bab      	subs	r3, r5, r6
 802a87a:	f894 a045 	ldrb.w	sl, [r4, #69]	; 0x45
 802a87e:	9301      	str	r3, [sp, #4]
 802a880:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 802a884:	ea4f 1a4a 	mov.w	sl, sl, lsl #5
 802a888:	da43      	bge.n	802a912 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 802a88a:	4628      	mov	r0, r5
 802a88c:	f7e9 ffde 	bl	801484c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a890:	4649      	mov	r1, r9
 802a892:	900d      	str	r0, [sp, #52]	; 0x34
 802a894:	a809      	add	r0, sp, #36	; 0x24
 802a896:	f7e9 fea1 	bl	80145dc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a89a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 802a89c:	18c3      	adds	r3, r0, r3
 802a89e:	4628      	mov	r0, r5
 802a8a0:	9303      	str	r3, [sp, #12]
 802a8a2:	f7ff fc23 	bl	802a0ec <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a8a6:	4649      	mov	r1, r9
 802a8a8:	900d      	str	r0, [sp, #52]	; 0x34
 802a8aa:	a809      	add	r0, sp, #36	; 0x24
 802a8ac:	f7e9 fe96 	bl	80145dc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a8b0:	6b23      	ldr	r3, [r4, #48]	; 0x30
 802a8b2:	f505 52b4 	add.w	r2, r5, #5760	; 0x1680
 802a8b6:	1a1b      	subs	r3, r3, r0
 802a8b8:	9302      	str	r3, [sp, #8]
 802a8ba:	9204      	str	r2, [sp, #16]
 802a8bc:	eb0a 0305 	add.w	r3, sl, r5
 802a8c0:	9a04      	ldr	r2, [sp, #16]
 802a8c2:	4293      	cmp	r3, r2
 802a8c4:	da25      	bge.n	802a912 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 802a8c6:	4618      	mov	r0, r3
 802a8c8:	9306      	str	r3, [sp, #24]
 802a8ca:	f7e9 ffbf 	bl	801484c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a8ce:	4649      	mov	r1, r9
 802a8d0:	900d      	str	r0, [sp, #52]	; 0x34
 802a8d2:	a80a      	add	r0, sp, #40	; 0x28
 802a8d4:	f7e9 fe82 	bl	80145dc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a8d8:	9b03      	ldr	r3, [sp, #12]
 802a8da:	2202      	movs	r2, #2
 802a8dc:	fb90 f0f2 	sdiv	r0, r0, r2
 802a8e0:	18c3      	adds	r3, r0, r3
 802a8e2:	9305      	str	r3, [sp, #20]
 802a8e4:	9b06      	ldr	r3, [sp, #24]
 802a8e6:	9207      	str	r2, [sp, #28]
 802a8e8:	4618      	mov	r0, r3
 802a8ea:	f7ff fbff 	bl	802a0ec <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a8ee:	a92a      	add	r1, sp, #168	; 0xa8
 802a8f0:	f841 0d78 	str.w	r0, [r1, #-120]!
 802a8f4:	a80a      	add	r0, sp, #40	; 0x28
 802a8f6:	f7e9 fe71 	bl	80145dc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a8fa:	9b02      	ldr	r3, [sp, #8]
 802a8fc:	9a07      	ldr	r2, [sp, #28]
 802a8fe:	9905      	ldr	r1, [sp, #20]
 802a900:	fb90 f2f2 	sdiv	r2, r0, r2
 802a904:	a80e      	add	r0, sp, #56	; 0x38
 802a906:	1a9a      	subs	r2, r3, r2
 802a908:	f7ff fb79 	bl	8029ffe <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802a90c:	9b06      	ldr	r3, [sp, #24]
 802a90e:	4453      	add	r3, sl
 802a910:	e7d6      	b.n	802a8c0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x314>
 802a912:	45ab      	cmp	fp, r5
 802a914:	da25      	bge.n	802a962 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3b6>
 802a916:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 802a91a:	4628      	mov	r0, r5
 802a91c:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 802a920:	930b      	str	r3, [sp, #44]	; 0x2c
 802a922:	f7e9 ff93 	bl	801484c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a926:	4641      	mov	r1, r8
 802a928:	900c      	str	r0, [sp, #48]	; 0x30
 802a92a:	a80b      	add	r0, sp, #44	; 0x2c
 802a92c:	f7e9 fe56 	bl	80145dc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a930:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 802a932:	2202      	movs	r2, #2
 802a934:	fb90 f0f2 	sdiv	r0, r0, r2
 802a938:	eb00 0903 	add.w	r9, r0, r3
 802a93c:	4628      	mov	r0, r5
 802a93e:	9202      	str	r2, [sp, #8]
 802a940:	f7ff fbd4 	bl	802a0ec <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a944:	a92a      	add	r1, sp, #168	; 0xa8
 802a946:	f841 0d74 	str.w	r0, [r1, #-116]!
 802a94a:	a80b      	add	r0, sp, #44	; 0x2c
 802a94c:	f7e9 fe46 	bl	80145dc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a950:	6b23      	ldr	r3, [r4, #48]	; 0x30
 802a952:	9a02      	ldr	r2, [sp, #8]
 802a954:	fb90 f2f2 	sdiv	r2, r0, r2
 802a958:	4649      	mov	r1, r9
 802a95a:	1a9a      	subs	r2, r3, r2
 802a95c:	a80e      	add	r0, sp, #56	; 0x38
 802a95e:	f7ff fb4e 	bl	8029ffe <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802a962:	46d9      	mov	r9, fp
 802a964:	2502      	movs	r5, #2
 802a966:	45b1      	cmp	r9, r6
 802a968:	db25      	blt.n	802a9b6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x40a>
 802a96a:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 802a96e:	4648      	mov	r0, r9
 802a970:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 802a974:	930b      	str	r3, [sp, #44]	; 0x2c
 802a976:	f7e9 ff69 	bl	801484c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a97a:	4641      	mov	r1, r8
 802a97c:	900c      	str	r0, [sp, #48]	; 0x30
 802a97e:	a80b      	add	r0, sp, #44	; 0x2c
 802a980:	f7e9 fe2c 	bl	80145dc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a984:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 802a986:	fb90 f0f5 	sdiv	r0, r0, r5
 802a98a:	eb00 0b03 	add.w	fp, r0, r3
 802a98e:	4648      	mov	r0, r9
 802a990:	f7ff fbac 	bl	802a0ec <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a994:	a90d      	add	r1, sp, #52	; 0x34
 802a996:	900d      	str	r0, [sp, #52]	; 0x34
 802a998:	a80b      	add	r0, sp, #44	; 0x2c
 802a99a:	f7e9 fe1f 	bl	80145dc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a99e:	6b22      	ldr	r2, [r4, #48]	; 0x30
 802a9a0:	fb90 f0f5 	sdiv	r0, r0, r5
 802a9a4:	4659      	mov	r1, fp
 802a9a6:	1a12      	subs	r2, r2, r0
 802a9a8:	a80e      	add	r0, sp, #56	; 0x38
 802a9aa:	46cb      	mov	fp, r9
 802a9ac:	f7ff fb27 	bl	8029ffe <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802a9b0:	eba9 0907 	sub.w	r9, r9, r7
 802a9b4:	e7d7      	b.n	802a966 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3ba>
 802a9b6:	455e      	cmp	r6, fp
 802a9b8:	da22      	bge.n	802aa00 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x454>
 802a9ba:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 802a9be:	4630      	mov	r0, r6
 802a9c0:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 802a9c4:	930b      	str	r3, [sp, #44]	; 0x2c
 802a9c6:	f7e9 ff41 	bl	801484c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a9ca:	4641      	mov	r1, r8
 802a9cc:	900c      	str	r0, [sp, #48]	; 0x30
 802a9ce:	a80b      	add	r0, sp, #44	; 0x2c
 802a9d0:	f7e9 fe04 	bl	80145dc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a9d4:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 802a9d6:	2502      	movs	r5, #2
 802a9d8:	fb90 f0f5 	sdiv	r0, r0, r5
 802a9dc:	4407      	add	r7, r0
 802a9de:	4630      	mov	r0, r6
 802a9e0:	f7ff fb84 	bl	802a0ec <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a9e4:	a92a      	add	r1, sp, #168	; 0xa8
 802a9e6:	f841 0d74 	str.w	r0, [r1, #-116]!
 802a9ea:	a80b      	add	r0, sp, #44	; 0x2c
 802a9ec:	f7e9 fdf6 	bl	80145dc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a9f0:	6b22      	ldr	r2, [r4, #48]	; 0x30
 802a9f2:	fb90 f0f5 	sdiv	r0, r0, r5
 802a9f6:	4639      	mov	r1, r7
 802a9f8:	1a12      	subs	r2, r2, r0
 802a9fa:	a80e      	add	r0, sp, #56	; 0x38
 802a9fc:	f7ff faff 	bl	8029ffe <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802aa00:	9b01      	ldr	r3, [sp, #4]
 802aa02:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 802aa06:	f6bf af27 	bge.w	802a858 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 802aa0a:	4630      	mov	r0, r6
 802aa0c:	f7e9 ff1e 	bl	801484c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802aa10:	ad2a      	add	r5, sp, #168	; 0xa8
 802aa12:	f04f 0b02 	mov.w	fp, #2
 802aa16:	f845 0d74 	str.w	r0, [r5, #-116]!
 802aa1a:	a809      	add	r0, sp, #36	; 0x24
 802aa1c:	4629      	mov	r1, r5
 802aa1e:	f7e9 fddd 	bl	80145dc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802aa22:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 802aa24:	eb00 0903 	add.w	r9, r0, r3
 802aa28:	4630      	mov	r0, r6
 802aa2a:	f7ff fb5f 	bl	802a0ec <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802aa2e:	4629      	mov	r1, r5
 802aa30:	900d      	str	r0, [sp, #52]	; 0x34
 802aa32:	a809      	add	r0, sp, #36	; 0x24
 802aa34:	f7e9 fdd2 	bl	80145dc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802aa38:	6b23      	ldr	r3, [r4, #48]	; 0x30
 802aa3a:	f5a6 54b4 	sub.w	r4, r6, #5760	; 0x1680
 802aa3e:	eba3 0800 	sub.w	r8, r3, r0
 802aa42:	4454      	add	r4, sl
 802aa44:	42a6      	cmp	r6, r4
 802aa46:	f77f af07 	ble.w	802a858 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 802aa4a:	4620      	mov	r0, r4
 802aa4c:	f7e9 fefe 	bl	801484c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802aa50:	4629      	mov	r1, r5
 802aa52:	900d      	str	r0, [sp, #52]	; 0x34
 802aa54:	a80a      	add	r0, sp, #40	; 0x28
 802aa56:	f7e9 fdc1 	bl	80145dc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802aa5a:	fb90 f0fb 	sdiv	r0, r0, fp
 802aa5e:	eb00 0709 	add.w	r7, r0, r9
 802aa62:	4620      	mov	r0, r4
 802aa64:	f7ff fb42 	bl	802a0ec <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802aa68:	a90c      	add	r1, sp, #48	; 0x30
 802aa6a:	900c      	str	r0, [sp, #48]	; 0x30
 802aa6c:	a80a      	add	r0, sp, #40	; 0x28
 802aa6e:	f7e9 fdb5 	bl	80145dc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802aa72:	4639      	mov	r1, r7
 802aa74:	fb90 f2fb 	sdiv	r2, r0, fp
 802aa78:	a80e      	add	r0, sp, #56	; 0x38
 802aa7a:	eba8 0202 	sub.w	r2, r8, r2
 802aa7e:	f7ff fabe 	bl	8029ffe <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802aa82:	4454      	add	r4, sl
 802aa84:	e7de      	b.n	802aa44 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x498>
 802aa86:	2400      	movs	r4, #0
 802aa88:	e6eb      	b.n	802a862 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2b6>
 802aa8a:	bf00      	nop
 802aa8c:	0803214c 	.word	0x0803214c

0802aa90 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 802aa90:	b570      	push	{r4, r5, r6, lr}
 802aa92:	790b      	ldrb	r3, [r1, #4]
 802aa94:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 802aa98:	2b00      	cmp	r3, #0
 802aa9a:	bf0c      	ite	eq
 802aa9c:	2301      	moveq	r3, #1
 802aa9e:	2300      	movne	r3, #0
 802aaa0:	4604      	mov	r4, r0
 802aaa2:	460e      	mov	r6, r1
 802aaa4:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 802aaa8:	d109      	bne.n	802aabe <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 802aaaa:	b14d      	cbz	r5, 802aac0 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 802aaac:	7933      	ldrb	r3, [r6, #4]
 802aaae:	2b01      	cmp	r3, #1
 802aab0:	d10c      	bne.n	802aacc <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 802aab2:	6823      	ldr	r3, [r4, #0]
 802aab4:	4620      	mov	r0, r4
 802aab6:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 802aab8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 802aabc:	4718      	bx	r3
 802aabe:	b12d      	cbz	r5, 802aacc <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 802aac0:	6823      	ldr	r3, [r4, #0]
 802aac2:	4620      	mov	r0, r4
 802aac4:	695b      	ldr	r3, [r3, #20]
 802aac6:	4798      	blx	r3
 802aac8:	2d00      	cmp	r5, #0
 802aaca:	d1ef      	bne.n	802aaac <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 802aacc:	bd70      	pop	{r4, r5, r6, pc}

0802aace <_ZN8touchgfx13TextureMapper21setRenderingAlgorithmENS0_18RenderingAlgorithmE>:
 802aace:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 802aad2:	4770      	bx	lr

0802aad4 <_ZNK8touchgfx13TextureMapper21getRenderingAlgorithmEv>:
 802aad4:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
 802aad8:	4770      	bx	lr

0802aada <_ZN8touchgfx13TextureMapper9setXAngleEf>:
 802aada:	6802      	ldr	r2, [r0, #0]
 802aadc:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 802aae0:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 802aae2:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 802aae6:	4710      	bx	r2

0802aae8 <_ZN8touchgfx13TextureMapper9setYAngleEf>:
 802aae8:	6802      	ldr	r2, [r0, #0]
 802aaea:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 802aaee:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 802aaf0:	eef0 0a40 	vmov.f32	s1, s0
 802aaf4:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 802aaf8:	4710      	bx	r2

0802aafa <_ZN8touchgfx13TextureMapper9setZAngleEf>:
 802aafa:	6802      	ldr	r2, [r0, #0]
 802aafc:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 802ab00:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 802ab02:	eeb0 1a40 	vmov.f32	s2, s0
 802ab06:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 802ab0a:	4710      	bx	r2

0802ab0c <_ZN8touchgfx13TextureMapper12updateXAngleEf>:
 802ab0c:	6802      	ldr	r2, [r0, #0]
 802ab0e:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 802ab12:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 802ab14:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 802ab18:	4710      	bx	r2

0802ab1a <_ZN8touchgfx13TextureMapper12updateYAngleEf>:
 802ab1a:	6802      	ldr	r2, [r0, #0]
 802ab1c:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 802ab20:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 802ab22:	eef0 0a40 	vmov.f32	s1, s0
 802ab26:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 802ab2a:	4710      	bx	r2

0802ab2c <_ZN8touchgfx13TextureMapper12updateZAngleEf>:
 802ab2c:	6802      	ldr	r2, [r0, #0]
 802ab2e:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 802ab32:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 802ab34:	eeb0 1a40 	vmov.f32	s2, s0
 802ab38:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 802ab3c:	4710      	bx	r2

0802ab3e <_ZNK8touchgfx13TextureMapper9getXAngleEv>:
 802ab3e:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 802ab42:	4770      	bx	lr

0802ab44 <_ZNK8touchgfx13TextureMapper9getYAngleEv>:
 802ab44:	ed90 0a0e 	vldr	s0, [r0, #56]	; 0x38
 802ab48:	4770      	bx	lr

0802ab4a <_ZNK8touchgfx13TextureMapper9getZAngleEv>:
 802ab4a:	ed90 0a0f 	vldr	s0, [r0, #60]	; 0x3c
 802ab4e:	4770      	bx	lr

0802ab50 <_ZNK8touchgfx13TextureMapper8getScaleEv>:
 802ab50:	ed90 0a10 	vldr	s0, [r0, #64]	; 0x40
 802ab54:	4770      	bx	lr

0802ab56 <_ZNK8touchgfx13TextureMapper9getOrigoXEv>:
 802ab56:	ed90 0a11 	vldr	s0, [r0, #68]	; 0x44
 802ab5a:	4770      	bx	lr

0802ab5c <_ZNK8touchgfx13TextureMapper9getOrigoYEv>:
 802ab5c:	ed90 0a12 	vldr	s0, [r0, #72]	; 0x48
 802ab60:	4770      	bx	lr

0802ab62 <_ZNK8touchgfx13TextureMapper9getOrigoZEv>:
 802ab62:	ed90 0a13 	vldr	s0, [r0, #76]	; 0x4c
 802ab66:	4770      	bx	lr

0802ab68 <_ZNK8touchgfx13TextureMapper10getCameraXEv>:
 802ab68:	ed90 0a14 	vldr	s0, [r0, #80]	; 0x50
 802ab6c:	4770      	bx	lr

0802ab6e <_ZNK8touchgfx13TextureMapper10getCameraYEv>:
 802ab6e:	ed90 0a15 	vldr	s0, [r0, #84]	; 0x54
 802ab72:	4770      	bx	lr

0802ab74 <_ZNK8touchgfx13TextureMapper17getCameraDistanceEv>:
 802ab74:	ed90 0a16 	vldr	s0, [r0, #88]	; 0x58
 802ab78:	4770      	bx	lr

0802ab7a <_ZN8touchgfx13TextureMapper17setBitmapPositionEii>:
 802ab7a:	ee07 2a90 	vmov	s15, r2
 802ab7e:	6803      	ldr	r3, [r0, #0]
 802ab80:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 802ab84:	ee07 1a90 	vmov	s15, r1
 802ab88:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 802ab8c:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 802ab90:	4718      	bx	r3

0802ab92 <_ZNK8touchgfx13TextureMapper18getBitmapPositionXEv>:
 802ab92:	ed90 0a0b 	vldr	s0, [r0, #44]	; 0x2c
 802ab96:	4770      	bx	lr

0802ab98 <_ZNK8touchgfx13TextureMapper18getBitmapPositionYEv>:
 802ab98:	ed90 0a0c 	vldr	s0, [r0, #48]	; 0x30
 802ab9c:	4770      	bx	lr

0802ab9e <_ZNK8touchgfx13TextureMapper5getX0Ev>:
 802ab9e:	ed90 0a17 	vldr	s0, [r0, #92]	; 0x5c
 802aba2:	4770      	bx	lr

0802aba4 <_ZNK8touchgfx13TextureMapper5getX1Ev>:
 802aba4:	ed90 0a1a 	vldr	s0, [r0, #104]	; 0x68
 802aba8:	4770      	bx	lr

0802abaa <_ZNK8touchgfx13TextureMapper5getX2Ev>:
 802abaa:	ed90 0a1d 	vldr	s0, [r0, #116]	; 0x74
 802abae:	4770      	bx	lr

0802abb0 <_ZNK8touchgfx13TextureMapper5getX3Ev>:
 802abb0:	ed90 0a20 	vldr	s0, [r0, #128]	; 0x80
 802abb4:	4770      	bx	lr

0802abb6 <_ZNK8touchgfx13TextureMapper5getY0Ev>:
 802abb6:	ed90 0a18 	vldr	s0, [r0, #96]	; 0x60
 802abba:	4770      	bx	lr

0802abbc <_ZNK8touchgfx13TextureMapper5getY1Ev>:
 802abbc:	ed90 0a1b 	vldr	s0, [r0, #108]	; 0x6c
 802abc0:	4770      	bx	lr

0802abc2 <_ZNK8touchgfx13TextureMapper5getY2Ev>:
 802abc2:	ed90 0a1e 	vldr	s0, [r0, #120]	; 0x78
 802abc6:	4770      	bx	lr

0802abc8 <_ZNK8touchgfx13TextureMapper5getY3Ev>:
 802abc8:	ed90 0a21 	vldr	s0, [r0, #132]	; 0x84
 802abcc:	4770      	bx	lr

0802abce <_ZNK8touchgfx13TextureMapper5getZ0Ev>:
 802abce:	ed90 0a19 	vldr	s0, [r0, #100]	; 0x64
 802abd2:	4770      	bx	lr

0802abd4 <_ZNK8touchgfx13TextureMapper5getZ1Ev>:
 802abd4:	ed90 0a1c 	vldr	s0, [r0, #112]	; 0x70
 802abd8:	4770      	bx	lr

0802abda <_ZNK8touchgfx13TextureMapper5getZ2Ev>:
 802abda:	ed90 0a1f 	vldr	s0, [r0, #124]	; 0x7c
 802abde:	4770      	bx	lr

0802abe0 <_ZNK8touchgfx13TextureMapper5getZ3Ev>:
 802abe0:	ed90 0a22 	vldr	s0, [r0, #136]	; 0x88
 802abe4:	4770      	bx	lr

0802abe6 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>:
 802abe6:	b510      	push	{r4, lr}
 802abe8:	ed2d 8b04 	vpush	{d8-d9}
 802abec:	6803      	ldr	r3, [r0, #0]
 802abee:	4604      	mov	r4, r0
 802abf0:	699b      	ldr	r3, [r3, #24]
 802abf2:	eeb0 8a40 	vmov.f32	s16, s0
 802abf6:	eef0 8a60 	vmov.f32	s17, s1
 802abfa:	eeb0 9a41 	vmov.f32	s18, s2
 802abfe:	4798      	blx	r3
 802ac00:	6823      	ldr	r3, [r4, #0]
 802ac02:	4620      	mov	r0, r4
 802ac04:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 802ac06:	eeb0 1a49 	vmov.f32	s2, s18
 802ac0a:	eef0 0a68 	vmov.f32	s1, s17
 802ac0e:	eeb0 0a48 	vmov.f32	s0, s16
 802ac12:	4798      	blx	r3
 802ac14:	ecbd 8b04 	vpop	{d8-d9}
 802ac18:	6823      	ldr	r3, [r4, #0]
 802ac1a:	4620      	mov	r0, r4
 802ac1c:	699b      	ldr	r3, [r3, #24]
 802ac1e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802ac22:	4718      	bx	r3

0802ac24 <_ZN8touchgfx13TextureMapper11updateScaleEf>:
 802ac24:	b510      	push	{r4, lr}
 802ac26:	ed2d 8b02 	vpush	{d8}
 802ac2a:	6803      	ldr	r3, [r0, #0]
 802ac2c:	4604      	mov	r4, r0
 802ac2e:	699b      	ldr	r3, [r3, #24]
 802ac30:	eeb0 8a40 	vmov.f32	s16, s0
 802ac34:	4798      	blx	r3
 802ac36:	6823      	ldr	r3, [r4, #0]
 802ac38:	4620      	mov	r0, r4
 802ac3a:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 802ac3e:	eeb0 0a48 	vmov.f32	s0, s16
 802ac42:	4798      	blx	r3
 802ac44:	ecbd 8b02 	vpop	{d8}
 802ac48:	6823      	ldr	r3, [r4, #0]
 802ac4a:	4620      	mov	r0, r4
 802ac4c:	699b      	ldr	r3, [r3, #24]
 802ac4e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802ac52:	4718      	bx	r3

0802ac54 <_ZNK8touchgfx13TextureMapper12getSolidRectEv>:
 802ac54:	2200      	movs	r2, #0
 802ac56:	8002      	strh	r2, [r0, #0]
 802ac58:	8042      	strh	r2, [r0, #2]
 802ac5a:	8082      	strh	r2, [r0, #4]
 802ac5c:	80c2      	strh	r2, [r0, #6]
 802ac5e:	4770      	bx	lr

0802ac60 <_ZN8touchgfx13TextureMapperD1Ev>:
 802ac60:	4770      	bx	lr

0802ac62 <_ZN8touchgfx13TextureMapperD0Ev>:
 802ac62:	b510      	push	{r4, lr}
 802ac64:	2190      	movs	r1, #144	; 0x90
 802ac66:	4604      	mov	r4, r0
 802ac68:	f001 ff3f 	bl	802caea <_ZdlPvj>
 802ac6c:	4620      	mov	r0, r4
 802ac6e:	bd10      	pop	{r4, pc}

0802ac70 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>:
 802ac70:	b538      	push	{r3, r4, r5, lr}
 802ac72:	2500      	movs	r5, #0
 802ac74:	e9c0 5505 	strd	r5, r5, [r0, #20]
 802ac78:	2301      	movs	r3, #1
 802ac7a:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
 802ac7e:	4b1f      	ldr	r3, [pc, #124]	; (802acfc <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x8c>)
 802ac80:	8085      	strh	r5, [r0, #4]
 802ac82:	80c5      	strh	r5, [r0, #6]
 802ac84:	8105      	strh	r5, [r0, #8]
 802ac86:	8145      	strh	r5, [r0, #10]
 802ac88:	8185      	strh	r5, [r0, #12]
 802ac8a:	81c5      	strh	r5, [r0, #14]
 802ac8c:	8205      	strh	r5, [r0, #16]
 802ac8e:	8245      	strh	r5, [r0, #18]
 802ac90:	61c5      	str	r5, [r0, #28]
 802ac92:	8405      	strh	r5, [r0, #32]
 802ac94:	8445      	strh	r5, [r0, #34]	; 0x22
 802ac96:	f880 5024 	strb.w	r5, [r0, #36]	; 0x24
 802ac9a:	6003      	str	r3, [r0, #0]
 802ac9c:	880b      	ldrh	r3, [r1, #0]
 802ac9e:	84c3      	strh	r3, [r0, #38]	; 0x26
 802aca0:	23ff      	movs	r3, #255	; 0xff
 802aca2:	4604      	mov	r4, r0
 802aca4:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 802aca8:	f7eb f96b 	bl	8015f82 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 802acac:	4b14      	ldr	r3, [pc, #80]	; (802ad00 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x90>)
 802acae:	6023      	str	r3, [r4, #0]
 802acb0:	2300      	movs	r3, #0
 802acb2:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 802acb6:	4913      	ldr	r1, [pc, #76]	; (802ad04 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x94>)
 802acb8:	62e3      	str	r3, [r4, #44]	; 0x2c
 802acba:	6323      	str	r3, [r4, #48]	; 0x30
 802acbc:	6363      	str	r3, [r4, #52]	; 0x34
 802acbe:	63a3      	str	r3, [r4, #56]	; 0x38
 802acc0:	63e3      	str	r3, [r4, #60]	; 0x3c
 802acc2:	6463      	str	r3, [r4, #68]	; 0x44
 802acc4:	64a3      	str	r3, [r4, #72]	; 0x48
 802acc6:	6523      	str	r3, [r4, #80]	; 0x50
 802acc8:	6563      	str	r3, [r4, #84]	; 0x54
 802acca:	65e3      	str	r3, [r4, #92]	; 0x5c
 802accc:	6623      	str	r3, [r4, #96]	; 0x60
 802acce:	66a3      	str	r3, [r4, #104]	; 0x68
 802acd0:	66e3      	str	r3, [r4, #108]	; 0x6c
 802acd2:	6763      	str	r3, [r4, #116]	; 0x74
 802acd4:	67a3      	str	r3, [r4, #120]	; 0x78
 802acd6:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
 802acda:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
 802acde:	230c      	movs	r3, #12
 802ace0:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
 802ace4:	6422      	str	r2, [r4, #64]	; 0x40
 802ace6:	64e1      	str	r1, [r4, #76]	; 0x4c
 802ace8:	65a1      	str	r1, [r4, #88]	; 0x58
 802acea:	6662      	str	r2, [r4, #100]	; 0x64
 802acec:	6722      	str	r2, [r4, #112]	; 0x70
 802acee:	67e2      	str	r2, [r4, #124]	; 0x7c
 802acf0:	f8c4 2088 	str.w	r2, [r4, #136]	; 0x88
 802acf4:	f8a4 308c 	strh.w	r3, [r4, #140]	; 0x8c
 802acf8:	4620      	mov	r0, r4
 802acfa:	bd38      	pop	{r3, r4, r5, pc}
 802acfc:	08031bf4 	.word	0x08031bf4
 802ad00:	080321d8 	.word	0x080321d8
 802ad04:	447a0000 	.word	0x447a0000

0802ad08 <_ZN8touchgfx13TextureMapper19applyTransformationEv>:
 802ad08:	b570      	push	{r4, r5, r6, lr}
 802ad0a:	ed2d 8b04 	vpush	{d8-d9}
 802ad0e:	f5ad 7d50 	sub.w	sp, sp, #832	; 0x340
 802ad12:	add0      	add	r5, sp, #832	; 0x340
 802ad14:	8cc3      	ldrh	r3, [r0, #38]	; 0x26
 802ad16:	f825 3d40 	strh.w	r3, [r5, #-64]!
 802ad1a:	4604      	mov	r4, r0
 802ad1c:	4628      	mov	r0, r5
 802ad1e:	f7f1 fa7f 	bl	801c220 <_ZNK8touchgfx6Bitmap8getWidthEv>
 802ad22:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 802ad24:	f8ad 3300 	strh.w	r3, [sp, #768]	; 0x300
 802ad28:	4606      	mov	r6, r0
 802ad2a:	4628      	mov	r0, r5
 802ad2c:	f7f1 faac 	bl	801c288 <_ZNK8touchgfx6Bitmap9getHeightEv>
 802ad30:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 802ad34:	ed94 6a0b 	vldr	s12, [r4, #44]	; 0x2c
 802ad38:	6da3      	ldr	r3, [r4, #88]	; 0x58
 802ad3a:	ed94 9a11 	vldr	s18, [r4, #68]	; 0x44
 802ad3e:	9312      	str	r3, [sp, #72]	; 0x48
 802ad40:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802ad44:	1c72      	adds	r2, r6, #1
 802ad46:	3001      	adds	r0, #1
 802ad48:	ee76 5ac7 	vsub.f32	s11, s13, s14
 802ad4c:	ee07 2a90 	vmov	s15, r2
 802ad50:	ee06 0a90 	vmov	s13, r0
 802ad54:	ee36 6a47 	vsub.f32	s12, s12, s14
 802ad58:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802ad5c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 802ad60:	ee77 7a86 	vadd.f32	s15, s15, s12
 802ad64:	ee76 6aa5 	vadd.f32	s13, s13, s11
 802ad68:	9316      	str	r3, [sp, #88]	; 0x58
 802ad6a:	931a      	str	r3, [sp, #104]	; 0x68
 802ad6c:	931e      	str	r3, [sp, #120]	; 0x78
 802ad6e:	2300      	movs	r3, #0
 802ad70:	9320      	str	r3, [sp, #128]	; 0x80
 802ad72:	9321      	str	r3, [sp, #132]	; 0x84
 802ad74:	9322      	str	r3, [sp, #136]	; 0x88
 802ad76:	9324      	str	r3, [sp, #144]	; 0x90
 802ad78:	9325      	str	r3, [sp, #148]	; 0x94
 802ad7a:	9326      	str	r3, [sp, #152]	; 0x98
 802ad7c:	9328      	str	r3, [sp, #160]	; 0xa0
 802ad7e:	9329      	str	r3, [sp, #164]	; 0xa4
 802ad80:	932a      	str	r3, [sp, #168]	; 0xa8
 802ad82:	932c      	str	r3, [sp, #176]	; 0xb0
 802ad84:	932d      	str	r3, [sp, #180]	; 0xb4
 802ad86:	932e      	str	r3, [sp, #184]	; 0xb8
 802ad88:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 802ad8c:	edcd 5a11 	vstr	s11, [sp, #68]	; 0x44
 802ad90:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 802ad94:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 802ad98:	edcd 5a15 	vstr	s11, [sp, #84]	; 0x54
 802ad9c:	ed8d 7a17 	vstr	s14, [sp, #92]	; 0x5c
 802ada0:	edcd 7a18 	vstr	s15, [sp, #96]	; 0x60
 802ada4:	edcd 6a19 	vstr	s13, [sp, #100]	; 0x64
 802ada8:	ed8d 7a1b 	vstr	s14, [sp, #108]	; 0x6c
 802adac:	ed8d 6a1c 	vstr	s12, [sp, #112]	; 0x70
 802adb0:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 802adb4:	ed8d 7a1f 	vstr	s14, [sp, #124]	; 0x7c
 802adb8:	a830      	add	r0, sp, #192	; 0xc0
 802adba:	edd4 8a12 	vldr	s17, [r4, #72]	; 0x48
 802adbe:	ed94 8a13 	vldr	s16, [r4, #76]	; 0x4c
 802adc2:	f000 fc43 	bl	802b64c <_ZN8touchgfx9Matrix4x4C1Ev>
 802adc6:	eeb1 0a49 	vneg.f32	s0, s18
 802adca:	a830      	add	r0, sp, #192	; 0xc0
 802adcc:	f000 fd12 	bl	802b7f4 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 802add0:	eeb1 0a68 	vneg.f32	s0, s17
 802add4:	f000 fd1c 	bl	802b810 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 802add8:	eeb1 0a48 	vneg.f32	s0, s16
 802addc:	f000 fd27 	bl	802b82e <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 802ade0:	a840      	add	r0, sp, #256	; 0x100
 802ade2:	f000 fc33 	bl	802b64c <_ZN8touchgfx9Matrix4x4C1Ev>
 802ade6:	ed94 0a0d 	vldr	s0, [r4, #52]	; 0x34
 802adea:	a840      	add	r0, sp, #256	; 0x100
 802adec:	f000 fc86 	bl	802b6fc <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>
 802adf0:	ed94 0a0e 	vldr	s0, [r4, #56]	; 0x38
 802adf4:	f000 fcac 	bl	802b750 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>
 802adf8:	ed94 0a0f 	vldr	s0, [r4, #60]	; 0x3c
 802adfc:	f000 fcd1 	bl	802b7a2 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>
 802ae00:	a850      	add	r0, sp, #320	; 0x140
 802ae02:	f000 fc23 	bl	802b64c <_ZN8touchgfx9Matrix4x4C1Ev>
 802ae06:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 802ae0a:	a850      	add	r0, sp, #320	; 0x140
 802ae0c:	f000 fd1e 	bl	802b84c <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>
 802ae10:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 802ae14:	f000 fd26 	bl	802b864 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>
 802ae18:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 802ae1c:	f000 fd2f 	bl	802b87e <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>
 802ae20:	a860      	add	r0, sp, #384	; 0x180
 802ae22:	f000 fc13 	bl	802b64c <_ZN8touchgfx9Matrix4x4C1Ev>
 802ae26:	eeb0 0a49 	vmov.f32	s0, s18
 802ae2a:	a860      	add	r0, sp, #384	; 0x180
 802ae2c:	f000 fce2 	bl	802b7f4 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 802ae30:	eeb0 0a68 	vmov.f32	s0, s17
 802ae34:	f000 fcec 	bl	802b810 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 802ae38:	eeb0 0a48 	vmov.f32	s0, s16
 802ae3c:	f000 fcf7 	bl	802b82e <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 802ae40:	aa50      	add	r2, sp, #320	; 0x140
 802ae42:	a960      	add	r1, sp, #384	; 0x180
 802ae44:	a8b0      	add	r0, sp, #704	; 0x2c0
 802ae46:	f000 fc1b 	bl	802b680 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 802ae4a:	4628      	mov	r0, r5
 802ae4c:	aa40      	add	r2, sp, #256	; 0x100
 802ae4e:	a9b0      	add	r1, sp, #704	; 0x2c0
 802ae50:	f000 fc16 	bl	802b680 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 802ae54:	4629      	mov	r1, r5
 802ae56:	aa30      	add	r2, sp, #192	; 0xc0
 802ae58:	a870      	add	r0, sp, #448	; 0x1c0
 802ae5a:	f000 fc11 	bl	802b680 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 802ae5e:	a880      	add	r0, sp, #512	; 0x200
 802ae60:	f000 fbf4 	bl	802b64c <_ZN8touchgfx9Matrix4x4C1Ev>
 802ae64:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 802ae68:	a880      	add	r0, sp, #512	; 0x200
 802ae6a:	eeb1 0a40 	vneg.f32	s0, s0
 802ae6e:	f000 fcc1 	bl	802b7f4 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 802ae72:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 802ae76:	a880      	add	r0, sp, #512	; 0x200
 802ae78:	eeb1 0a40 	vneg.f32	s0, s0
 802ae7c:	f000 fcc8 	bl	802b810 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 802ae80:	a890      	add	r0, sp, #576	; 0x240
 802ae82:	f000 fbe3 	bl	802b64c <_ZN8touchgfx9Matrix4x4C1Ev>
 802ae86:	ed94 0a16 	vldr	s0, [r4, #88]	; 0x58
 802ae8a:	a890      	add	r0, sp, #576	; 0x240
 802ae8c:	f000 fc26 	bl	802b6dc <_ZN8touchgfx9Matrix4x415setViewDistanceEf>
 802ae90:	a8a0      	add	r0, sp, #640	; 0x280
 802ae92:	f000 fbdb 	bl	802b64c <_ZN8touchgfx9Matrix4x4C1Ev>
 802ae96:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 802ae9a:	a8a0      	add	r0, sp, #640	; 0x280
 802ae9c:	f000 fcaa 	bl	802b7f4 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 802aea0:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 802aea4:	f000 fcb4 	bl	802b810 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 802aea8:	aa90      	add	r2, sp, #576	; 0x240
 802aeaa:	a9a0      	add	r1, sp, #640	; 0x280
 802aeac:	a8b0      	add	r0, sp, #704	; 0x2c0
 802aeae:	f000 fbe7 	bl	802b680 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 802aeb2:	4628      	mov	r0, r5
 802aeb4:	aa80      	add	r2, sp, #512	; 0x200
 802aeb6:	a9b0      	add	r1, sp, #704	; 0x2c0
 802aeb8:	f000 fbe2 	bl	802b680 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 802aebc:	4629      	mov	r1, r5
 802aebe:	aa70      	add	r2, sp, #448	; 0x1c0
 802aec0:	4668      	mov	r0, sp
 802aec2:	466d      	mov	r5, sp
 802aec4:	f000 fbdc 	bl	802b680 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 802aec8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 802aeca:	ae70      	add	r6, sp, #448	; 0x1c0
 802aecc:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 802aece:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 802aed0:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 802aed2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 802aed4:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 802aed6:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 802aeda:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
 802aede:	2500      	movs	r5, #0
 802aee0:	0129      	lsls	r1, r5, #4
 802aee2:	ab20      	add	r3, sp, #128	; 0x80
 802aee4:	185e      	adds	r6, r3, r1
 802aee6:	ab10      	add	r3, sp, #64	; 0x40
 802aee8:	4419      	add	r1, r3
 802aeea:	a870      	add	r0, sp, #448	; 0x1c0
 802aeec:	f000 fb7e 	bl	802b5ec <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>
 802aef0:	3501      	adds	r5, #1
 802aef2:	2d04      	cmp	r5, #4
 802aef4:	ed86 0a00 	vstr	s0, [r6]
 802aef8:	edc6 0a01 	vstr	s1, [r6, #4]
 802aefc:	ed86 1a02 	vstr	s2, [r6, #8]
 802af00:	edc6 1a03 	vstr	s3, [r6, #12]
 802af04:	d1ec      	bne.n	802aee0 <_ZN8touchgfx13TextureMapper19applyTransformationEv+0x1d8>
 802af06:	edd4 7a16 	vldr	s15, [r4, #88]	; 0x58
 802af0a:	eddd 6a20 	vldr	s13, [sp, #128]	; 0x80
 802af0e:	ed9d 7a22 	vldr	s14, [sp, #136]	; 0x88
 802af12:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802af16:	ed84 7a19 	vstr	s14, [r4, #100]	; 0x64
 802af1a:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802af1e:	eddd 6a21 	vldr	s13, [sp, #132]	; 0x84
 802af22:	ed84 6a17 	vstr	s12, [r4, #92]	; 0x5c
 802af26:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802af2a:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802af2e:	eddd 6a24 	vldr	s13, [sp, #144]	; 0x90
 802af32:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 802af36:	ed84 6a18 	vstr	s12, [r4, #96]	; 0x60
 802af3a:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802af3e:	ed84 7a1c 	vstr	s14, [r4, #112]	; 0x70
 802af42:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802af46:	eddd 6a25 	vldr	s13, [sp, #148]	; 0x94
 802af4a:	ed84 6a1a 	vstr	s12, [r4, #104]	; 0x68
 802af4e:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802af52:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802af56:	eddd 6a28 	vldr	s13, [sp, #160]	; 0xa0
 802af5a:	ed9d 7a2a 	vldr	s14, [sp, #168]	; 0xa8
 802af5e:	ed84 6a1b 	vstr	s12, [r4, #108]	; 0x6c
 802af62:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802af66:	ed84 7a1f 	vstr	s14, [r4, #124]	; 0x7c
 802af6a:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802af6e:	eddd 6a29 	vldr	s13, [sp, #164]	; 0xa4
 802af72:	ed84 6a1d 	vstr	s12, [r4, #116]	; 0x74
 802af76:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802af7a:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802af7e:	eddd 6a2c 	vldr	s13, [sp, #176]	; 0xb0
 802af82:	ed9d 7a2e 	vldr	s14, [sp, #184]	; 0xb8
 802af86:	ed84 6a1e 	vstr	s12, [r4, #120]	; 0x78
 802af8a:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802af8e:	ed84 7a22 	vstr	s14, [r4, #136]	; 0x88
 802af92:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802af96:	eddd 6a2d 	vldr	s13, [sp, #180]	; 0xb4
 802af9a:	ed84 6a20 	vstr	s12, [r4, #128]	; 0x80
 802af9e:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802afa2:	eec7 6a87 	vdiv.f32	s13, s15, s14
 802afa6:	edc4 6a21 	vstr	s13, [r4, #132]	; 0x84
 802afaa:	f50d 7d50 	add.w	sp, sp, #832	; 0x340
 802afae:	ecbd 8b04 	vpop	{d8-d9}
 802afb2:	bd70      	pop	{r4, r5, r6, pc}

0802afb4 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>:
 802afb4:	b510      	push	{r4, lr}
 802afb6:	4604      	mov	r4, r0
 802afb8:	f7ea ffe3 	bl	8015f82 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 802afbc:	4620      	mov	r0, r4
 802afbe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802afc2:	f7ff bea1 	b.w	802ad08 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802afc6 <_ZN8touchgfx13TextureMapper9setAnglesEfff>:
 802afc6:	ed80 0a0d 	vstr	s0, [r0, #52]	; 0x34
 802afca:	edc0 0a0e 	vstr	s1, [r0, #56]	; 0x38
 802afce:	ed80 1a0f 	vstr	s2, [r0, #60]	; 0x3c
 802afd2:	f7ff be99 	b.w	802ad08 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802afd6 <_ZN8touchgfx13TextureMapper8setScaleEf>:
 802afd6:	ed80 0a10 	vstr	s0, [r0, #64]	; 0x40
 802afda:	f7ff be95 	b.w	802ad08 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802afde <_ZN8touchgfx13TextureMapper17setBitmapPositionEff>:
 802afde:	ed80 0a0b 	vstr	s0, [r0, #44]	; 0x2c
 802afe2:	edc0 0a0c 	vstr	s1, [r0, #48]	; 0x30
 802afe6:	f7ff be8f 	b.w	802ad08 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802afea <_ZN8touchgfx13TextureMapper17setCameraDistanceEf>:
 802afea:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 802afee:	eeb4 0ae7 	vcmpe.f32	s0, s15
 802aff2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802aff6:	bfd8      	it	le
 802aff8:	eeb0 0a67 	vmovle.f32	s0, s15
 802affc:	ed80 0a16 	vstr	s0, [r0, #88]	; 0x58
 802b000:	f7ff be82 	b.w	802ad08 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802b004 <_ZN8touchgfx13TextureMapper9setCameraEff>:
 802b004:	ed80 0a14 	vstr	s0, [r0, #80]	; 0x50
 802b008:	edc0 0a15 	vstr	s1, [r0, #84]	; 0x54
 802b00c:	f7ff be7c 	b.w	802ad08 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802b010 <_ZN8touchgfx13TextureMapper8setOrigoEff>:
 802b010:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 802b014:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 802b018:	f7ff be76 	b.w	802ad08 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802b01c <_ZN8touchgfx13TextureMapper8setOrigoEfff>:
 802b01c:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 802b020:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 802b024:	ed80 1a13 	vstr	s2, [r0, #76]	; 0x4c
 802b028:	f7ff be6e 	b.w	802ad08 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802b02c <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>:
 802b02c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802b030:	ed2d 8b04 	vpush	{d8-d9}
 802b034:	edd1 9a1a 	vldr	s19, [r1, #104]	; 0x68
 802b038:	ed91 8a17 	vldr	s16, [r1, #92]	; 0x5c
 802b03c:	ed91 9a1d 	vldr	s18, [r1, #116]	; 0x74
 802b040:	edd1 8a20 	vldr	s17, [r1, #128]	; 0x80
 802b044:	eeb4 8ae9 	vcmpe.f32	s16, s19
 802b048:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b04c:	bf54      	ite	pl
 802b04e:	eeb0 0a69 	vmovpl.f32	s0, s19
 802b052:	eeb0 0a48 	vmovmi.f32	s0, s16
 802b056:	eeb4 9ac0 	vcmpe.f32	s18, s0
 802b05a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b05e:	bfd8      	it	le
 802b060:	eeb0 0a49 	vmovle.f32	s0, s18
 802b064:	eef4 8ac0 	vcmpe.f32	s17, s0
 802b068:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b06c:	bfd8      	it	le
 802b06e:	eeb0 0a68 	vmovle.f32	s0, s17
 802b072:	460c      	mov	r4, r1
 802b074:	4607      	mov	r7, r0
 802b076:	f001 ff2b 	bl	802ced0 <floorf>
 802b07a:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802b07e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b082:	bf58      	it	pl
 802b084:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 802b088:	eeb4 8ae9 	vcmpe.f32	s16, s19
 802b08c:	bf56      	itet	pl
 802b08e:	ee10 3a10 	vmovpl	r3, s0
 802b092:	2600      	movmi	r6, #0
 802b094:	b21e      	sxthpl	r6, r3
 802b096:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b09a:	bfd8      	it	le
 802b09c:	eeb0 8a69 	vmovle.f32	s16, s19
 802b0a0:	eeb4 9ac8 	vcmpe.f32	s18, s16
 802b0a4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b0a8:	bf58      	it	pl
 802b0aa:	eeb0 8a49 	vmovpl.f32	s16, s18
 802b0ae:	eef4 8ac8 	vcmpe.f32	s17, s16
 802b0b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b0b6:	bf54      	ite	pl
 802b0b8:	eeb0 0a68 	vmovpl.f32	s0, s17
 802b0bc:	eeb0 0a48 	vmovmi.f32	s0, s16
 802b0c0:	f001 fec4 	bl	802ce4c <ceilf>
 802b0c4:	f9b4 8008 	ldrsh.w	r8, [r4, #8]
 802b0c8:	edd4 9a1b 	vldr	s19, [r4, #108]	; 0x6c
 802b0cc:	ed94 8a18 	vldr	s16, [r4, #96]	; 0x60
 802b0d0:	ed94 9a1e 	vldr	s18, [r4, #120]	; 0x78
 802b0d4:	edd4 8a21 	vldr	s17, [r4, #132]	; 0x84
 802b0d8:	ee07 8a90 	vmov	s15, r8
 802b0dc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802b0e0:	eeb4 0ae7 	vcmpe.f32	s0, s15
 802b0e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b0e8:	bfd8      	it	le
 802b0ea:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 802b0ee:	eeb4 8ae9 	vcmpe.f32	s16, s19
 802b0f2:	bfdc      	itt	le
 802b0f4:	ee10 3a10 	vmovle	r3, s0
 802b0f8:	fa0f f883 	sxthle.w	r8, r3
 802b0fc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b100:	bf54      	ite	pl
 802b102:	eeb0 0a69 	vmovpl.f32	s0, s19
 802b106:	eeb0 0a48 	vmovmi.f32	s0, s16
 802b10a:	eeb4 9ac0 	vcmpe.f32	s18, s0
 802b10e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b112:	bfd8      	it	le
 802b114:	eeb0 0a49 	vmovle.f32	s0, s18
 802b118:	eef4 8ac0 	vcmpe.f32	s17, s0
 802b11c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b120:	bfd8      	it	le
 802b122:	eeb0 0a68 	vmovle.f32	s0, s17
 802b126:	f001 fed3 	bl	802ced0 <floorf>
 802b12a:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802b12e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b132:	bf58      	it	pl
 802b134:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 802b138:	eeb4 8ae9 	vcmpe.f32	s16, s19
 802b13c:	bf56      	itet	pl
 802b13e:	ee10 3a10 	vmovpl	r3, s0
 802b142:	2500      	movmi	r5, #0
 802b144:	b21d      	sxthpl	r5, r3
 802b146:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b14a:	bfd8      	it	le
 802b14c:	eeb0 8a69 	vmovle.f32	s16, s19
 802b150:	eeb4 9ac8 	vcmpe.f32	s18, s16
 802b154:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b158:	bf58      	it	pl
 802b15a:	eeb0 8a49 	vmovpl.f32	s16, s18
 802b15e:	eef4 8ac8 	vcmpe.f32	s17, s16
 802b162:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b166:	bf54      	ite	pl
 802b168:	eeb0 0a68 	vmovpl.f32	s0, s17
 802b16c:	eeb0 0a48 	vmovmi.f32	s0, s16
 802b170:	f001 fe6c 	bl	802ce4c <ceilf>
 802b174:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 802b178:	803e      	strh	r6, [r7, #0]
 802b17a:	ee07 3a90 	vmov	s15, r3
 802b17e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802b182:	807d      	strh	r5, [r7, #2]
 802b184:	eeb4 0ae7 	vcmpe.f32	s0, s15
 802b188:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b18c:	bfd8      	it	le
 802b18e:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 802b192:	eba8 0606 	sub.w	r6, r8, r6
 802b196:	bfdc      	itt	le
 802b198:	ee10 3a10 	vmovle	r3, s0
 802b19c:	b21b      	sxthle	r3, r3
 802b19e:	1b5d      	subs	r5, r3, r5
 802b1a0:	80be      	strh	r6, [r7, #4]
 802b1a2:	80fd      	strh	r5, [r7, #6]
 802b1a4:	ecbd 8b04 	vpop	{d8-d9}
 802b1a8:	4638      	mov	r0, r7
 802b1aa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0802b1ae <_ZNK8touchgfx13TextureMapper17invalidateContentEv>:
 802b1ae:	b513      	push	{r0, r1, r4, lr}
 802b1b0:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 802b1b4:	4604      	mov	r4, r0
 802b1b6:	b143      	cbz	r3, 802b1ca <_ZNK8touchgfx13TextureMapper17invalidateContentEv+0x1c>
 802b1b8:	4601      	mov	r1, r0
 802b1ba:	4668      	mov	r0, sp
 802b1bc:	f7ff ff36 	bl	802b02c <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>
 802b1c0:	6823      	ldr	r3, [r4, #0]
 802b1c2:	4669      	mov	r1, sp
 802b1c4:	691b      	ldr	r3, [r3, #16]
 802b1c6:	4620      	mov	r0, r4
 802b1c8:	4798      	blx	r3
 802b1ca:	b002      	add	sp, #8
 802b1cc:	bd10      	pop	{r4, pc}

0802b1ce <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>:
 802b1ce:	4603      	mov	r3, r0
 802b1d0:	3026      	adds	r0, #38	; 0x26
 802b1d2:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 802b1d6:	b90b      	cbnz	r3, 802b1dc <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv+0xe>
 802b1d8:	f7ee bdfa 	b.w	8019dd0 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
 802b1dc:	f7ee be08 	b.w	8019df0 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>

0802b1e0 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
 802b1e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802b1e4:	ed2d 8b04 	vpush	{d8-d9}
 802b1e8:	4604      	mov	r4, r0
 802b1ea:	469b      	mov	fp, r3
 802b1ec:	f9b0 c008 	ldrsh.w	ip, [r0, #8]
 802b1f0:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 802b1f4:	f9b1 6000 	ldrsh.w	r6, [r1]
 802b1f8:	8888      	ldrh	r0, [r1, #4]
 802b1fa:	b0b3      	sub	sp, #204	; 0xcc
 802b1fc:	4430      	add	r0, r6
 802b1fe:	b280      	uxth	r0, r0
 802b200:	9206      	str	r2, [sp, #24]
 802b202:	fa0f fe80 	sxth.w	lr, r0
 802b206:	2200      	movs	r2, #0
 802b208:	4596      	cmp	lr, r2
 802b20a:	f8dd a100 	ldr.w	sl, [sp, #256]	; 0x100
 802b20e:	f8dd 9104 	ldr.w	r9, [sp, #260]	; 0x104
 802b212:	f8dd 8108 	ldr.w	r8, [sp, #264]	; 0x108
 802b216:	9f43      	ldr	r7, [sp, #268]	; 0x10c
 802b218:	9211      	str	r2, [sp, #68]	; 0x44
 802b21a:	f340 8129 	ble.w	802b470 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 802b21e:	45b4      	cmp	ip, r6
 802b220:	f340 8126 	ble.w	802b470 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 802b224:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 802b228:	88ca      	ldrh	r2, [r1, #6]
 802b22a:	442a      	add	r2, r5
 802b22c:	b292      	uxth	r2, r2
 802b22e:	b211      	sxth	r1, r2
 802b230:	2900      	cmp	r1, #0
 802b232:	f340 811d 	ble.w	802b470 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 802b236:	42ab      	cmp	r3, r5
 802b238:	f340 811a 	ble.w	802b470 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 802b23c:	45f4      	cmp	ip, lr
 802b23e:	bfb8      	it	lt
 802b240:	fa1f f08c 	uxthlt.w	r0, ip
 802b244:	428b      	cmp	r3, r1
 802b246:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 802b24a:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 802b24e:	bfb8      	it	lt
 802b250:	b29a      	uxthlt	r2, r3
 802b252:	1b80      	subs	r0, r0, r6
 802b254:	1b52      	subs	r2, r2, r5
 802b256:	f8ad 0048 	strh.w	r0, [sp, #72]	; 0x48
 802b25a:	f8ad 204a 	strh.w	r2, [sp, #74]	; 0x4a
 802b25e:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 802b262:	f8ad 5046 	strh.w	r5, [sp, #70]	; 0x46
 802b266:	ab11      	add	r3, sp, #68	; 0x44
 802b268:	e893 0003 	ldmia.w	r3, {r0, r1}
 802b26c:	6822      	ldr	r2, [r4, #0]
 802b26e:	9307      	str	r3, [sp, #28]
 802b270:	ad13      	add	r5, sp, #76	; 0x4c
 802b272:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 802b274:	e885 0003 	stmia.w	r5, {r0, r1}
 802b278:	4629      	mov	r1, r5
 802b27a:	4620      	mov	r0, r4
 802b27c:	4790      	blx	r2
 802b27e:	4621      	mov	r1, r4
 802b280:	a815      	add	r0, sp, #84	; 0x54
 802b282:	f7ee fd01 	bl	8019c88 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 802b286:	a815      	add	r0, sp, #84	; 0x54
 802b288:	f7ed f9c6 	bl	8018618 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802b28c:	9b07      	ldr	r3, [sp, #28]
 802b28e:	1d26      	adds	r6, r4, #4
 802b290:	4618      	mov	r0, r3
 802b292:	4631      	mov	r1, r6
 802b294:	f7ed fa04 	bl	80186a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802b298:	4628      	mov	r0, r5
 802b29a:	f104 0526 	add.w	r5, r4, #38	; 0x26
 802b29e:	f7ed f9bb 	bl	8018618 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802b2a2:	4628      	mov	r0, r5
 802b2a4:	f7f1 f8a8 	bl	801c3f8 <_ZNK8touchgfx6Bitmap7getDataEv>
 802b2a8:	9007      	str	r0, [sp, #28]
 802b2aa:	2800      	cmp	r0, #0
 802b2ac:	f000 80db 	beq.w	802b466 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x286>
 802b2b0:	f8db 2000 	ldr.w	r2, [fp]
 802b2b4:	9209      	str	r2, [sp, #36]	; 0x24
 802b2b6:	f8db 2004 	ldr.w	r2, [fp, #4]
 802b2ba:	920a      	str	r2, [sp, #40]	; 0x28
 802b2bc:	f8db 2008 	ldr.w	r2, [fp, #8]
 802b2c0:	920b      	str	r2, [sp, #44]	; 0x2c
 802b2c2:	f8db 200c 	ldr.w	r2, [fp, #12]
 802b2c6:	920c      	str	r2, [sp, #48]	; 0x30
 802b2c8:	f8da 2000 	ldr.w	r2, [sl]
 802b2cc:	920d      	str	r2, [sp, #52]	; 0x34
 802b2ce:	f8da 2004 	ldr.w	r2, [sl, #4]
 802b2d2:	920e      	str	r2, [sp, #56]	; 0x38
 802b2d4:	f8da 2008 	ldr.w	r2, [sl, #8]
 802b2d8:	920f      	str	r2, [sp, #60]	; 0x3c
 802b2da:	f8da 200c 	ldr.w	r2, [sl, #12]
 802b2de:	9210      	str	r2, [sp, #64]	; 0x40
 802b2e0:	a90d      	add	r1, sp, #52	; 0x34
 802b2e2:	4632      	mov	r2, r6
 802b2e4:	a809      	add	r0, sp, #36	; 0x24
 802b2e6:	f7ed f9bf 	bl	8018668 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 802b2ea:	4632      	mov	r2, r6
 802b2ec:	a90e      	add	r1, sp, #56	; 0x38
 802b2ee:	a80a      	add	r0, sp, #40	; 0x28
 802b2f0:	f7ed f9ba 	bl	8018668 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 802b2f4:	4632      	mov	r2, r6
 802b2f6:	a90f      	add	r1, sp, #60	; 0x3c
 802b2f8:	a80b      	add	r0, sp, #44	; 0x2c
 802b2fa:	f7ed f9b5 	bl	8018668 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 802b2fe:	4632      	mov	r2, r6
 802b300:	a910      	add	r1, sp, #64	; 0x40
 802b302:	a80c      	add	r0, sp, #48	; 0x30
 802b304:	f7ed f9b0 	bl	8018668 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 802b308:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
 802b30c:	edd7 4a00 	vldr	s9, [r7]
 802b310:	edd7 5a01 	vldr	s11, [r7, #4]
 802b314:	ed98 4a00 	vldr	s8, [r8]
 802b318:	ed98 5a01 	vldr	s10, [r8, #4]
 802b31c:	ed99 9a00 	vldr	s18, [r9]
 802b320:	ed99 8a01 	vldr	s16, [r9, #4]
 802b324:	edd9 8a02 	vldr	s17, [r9, #8]
 802b328:	f8d9 e00c 	ldr.w	lr, [r9, #12]
 802b32c:	f8d8 c00c 	ldr.w	ip, [r8, #12]
 802b330:	ed8d 4a21 	vstr	s8, [sp, #132]	; 0x84
 802b334:	eef0 6a67 	vmov.f32	s13, s15
 802b338:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
 802b33c:	edcd 4a22 	vstr	s9, [sp, #136]	; 0x88
 802b340:	eeb0 7a67 	vmov.f32	s14, s15
 802b344:	eddd 7a0e 	vldr	s15, [sp, #56]	; 0x38
 802b348:	ed8d 5a26 	vstr	s10, [sp, #152]	; 0x98
 802b34c:	eeb0 6a67 	vmov.f32	s12, s15
 802b350:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 802b354:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
 802b358:	edcd 5a27 	vstr	s11, [sp, #156]	; 0x9c
 802b35c:	ee16 6a10 	vmov	r6, s12
 802b360:	eeb0 6a67 	vmov.f32	s12, s15
 802b364:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 802b368:	eddd 7a0f 	vldr	s15, [sp, #60]	; 0x3c
 802b36c:	f8d7 a008 	ldr.w	sl, [r7, #8]
 802b370:	f8d8 b008 	ldr.w	fp, [r8, #8]
 802b374:	68ff      	ldr	r7, [r7, #12]
 802b376:	9624      	str	r6, [sp, #144]	; 0x90
 802b378:	ee16 0a10 	vmov	r0, s12
 802b37c:	eeb0 6a67 	vmov.f32	s12, s15
 802b380:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 802b384:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
 802b388:	ed8d 9a20 	vstr	s18, [sp, #128]	; 0x80
 802b38c:	ee16 1a10 	vmov	r1, s12
 802b390:	eeb0 6a67 	vmov.f32	s12, s15
 802b394:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 802b398:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
 802b39c:	ee16 2a10 	vmov	r2, s12
 802b3a0:	ed9d 6a09 	vldr	s12, [sp, #36]	; 0x24
 802b3a4:	eddd 7a10 	vldr	s15, [sp, #64]	; 0x40
 802b3a8:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 802b3ac:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 802b3b0:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 802b3b4:	e9cd 0128 	strd	r0, r1, [sp, #160]	; 0xa0
 802b3b8:	ed8d 6a1e 	vstr	s12, [sp, #120]	; 0x78
 802b3bc:	ed8d 7a23 	vstr	s14, [sp, #140]	; 0x8c
 802b3c0:	ed8d 8a25 	vstr	s16, [sp, #148]	; 0x94
 802b3c4:	edcd 8a2a 	vstr	s17, [sp, #168]	; 0xa8
 802b3c8:	922d      	str	r2, [sp, #180]	; 0xb4
 802b3ca:	4a2b      	ldr	r2, [pc, #172]	; (802b478 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x298>)
 802b3cc:	9b06      	ldr	r3, [sp, #24]
 802b3ce:	8812      	ldrh	r2, [r2, #0]
 802b3d0:	9317      	str	r3, [sp, #92]	; 0x5c
 802b3d2:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
 802b3d6:	9b07      	ldr	r3, [sp, #28]
 802b3d8:	edcd 7a2e 	vstr	s15, [sp, #184]	; 0xb8
 802b3dc:	4628      	mov	r0, r5
 802b3de:	f8cd e0bc 	str.w	lr, [sp, #188]	; 0xbc
 802b3e2:	f8cd c0c0 	str.w	ip, [sp, #192]	; 0xc0
 802b3e6:	9218      	str	r2, [sp, #96]	; 0x60
 802b3e8:	9319      	str	r3, [sp, #100]	; 0x64
 802b3ea:	f8cd b0ac 	str.w	fp, [sp, #172]	; 0xac
 802b3ee:	f8cd a0b0 	str.w	sl, [sp, #176]	; 0xb0
 802b3f2:	9731      	str	r7, [sp, #196]	; 0xc4
 802b3f4:	f7f1 f830 	bl	801c458 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 802b3f8:	901a      	str	r0, [sp, #104]	; 0x68
 802b3fa:	4628      	mov	r0, r5
 802b3fc:	f7f0 ff10 	bl	801c220 <_ZNK8touchgfx6Bitmap8getWidthEv>
 802b400:	901b      	str	r0, [sp, #108]	; 0x6c
 802b402:	4628      	mov	r0, r5
 802b404:	f7f0 ff40 	bl	801c288 <_ZNK8touchgfx6Bitmap9getHeightEv>
 802b408:	901c      	str	r0, [sp, #112]	; 0x70
 802b40a:	4628      	mov	r0, r5
 802b40c:	f7f0 ff08 	bl	801c220 <_ZNK8touchgfx6Bitmap8getWidthEv>
 802b410:	eeb4 9a48 	vcmp.f32	s18, s16
 802b414:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b418:	901d      	str	r0, [sp, #116]	; 0x74
 802b41a:	f8b4 608c 	ldrh.w	r6, [r4, #140]	; 0x8c
 802b41e:	d107      	bne.n	802b430 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x250>
 802b420:	eeb4 8a68 	vcmp.f32	s16, s17
 802b424:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b428:	f64f 73ff 	movw	r3, #65535	; 0xffff
 802b42c:	bf08      	it	eq
 802b42e:	461e      	moveq	r6, r3
 802b430:	4b12      	ldr	r3, [pc, #72]	; (802b47c <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x29c>)
 802b432:	681b      	ldr	r3, [r3, #0]
 802b434:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 802b438:	b10a      	cbz	r2, 802b43e <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x25e>
 802b43a:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 802b43c:	b905      	cbnz	r5, 802b440 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x260>
 802b43e:	689d      	ldr	r5, [r3, #8]
 802b440:	682b      	ldr	r3, [r5, #0]
 802b442:	4620      	mov	r0, r4
 802b444:	6c1f      	ldr	r7, [r3, #64]	; 0x40
 802b446:	f7ff fec2 	bl	802b1ce <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>
 802b44a:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 802b44e:	9604      	str	r6, [sp, #16]
 802b450:	e9cd 0302 	strd	r0, r3, [sp, #8]
 802b454:	ab13      	add	r3, sp, #76	; 0x4c
 802b456:	9301      	str	r3, [sp, #4]
 802b458:	ab15      	add	r3, sp, #84	; 0x54
 802b45a:	9300      	str	r3, [sp, #0]
 802b45c:	aa1e      	add	r2, sp, #120	; 0x78
 802b45e:	ab19      	add	r3, sp, #100	; 0x64
 802b460:	a917      	add	r1, sp, #92	; 0x5c
 802b462:	4628      	mov	r0, r5
 802b464:	47b8      	blx	r7
 802b466:	b033      	add	sp, #204	; 0xcc
 802b468:	ecbd 8b04 	vpop	{d8-d9}
 802b46c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802b470:	2300      	movs	r3, #0
 802b472:	9312      	str	r3, [sp, #72]	; 0x48
 802b474:	e6f7      	b.n	802b266 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x86>
 802b476:	bf00      	nop
 802b478:	20013846 	.word	0x20013846
 802b47c:	2001384c 	.word	0x2001384c

0802b480 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE>:
 802b480:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802b484:	ed2d 8b02 	vpush	{d8}
 802b488:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 802b48c:	b098      	sub	sp, #96	; 0x60
 802b48e:	4604      	mov	r4, r0
 802b490:	4688      	mov	r8, r1
 802b492:	2b00      	cmp	r3, #0
 802b494:	d077      	beq.n	802b586 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x106>
 802b496:	f100 0526 	add.w	r5, r0, #38	; 0x26
 802b49a:	4628      	mov	r0, r5
 802b49c:	f7f0 fec0 	bl	801c220 <_ZNK8touchgfx6Bitmap8getWidthEv>
 802b4a0:	ee07 0a90 	vmov	s15, r0
 802b4a4:	4628      	mov	r0, r5
 802b4a6:	eeb8 8ae7 	vcvt.f32.s32	s16, s15
 802b4aa:	f7f0 feed 	bl	801c288 <_ZNK8touchgfx6Bitmap9getHeightEv>
 802b4ae:	4b4e      	ldr	r3, [pc, #312]	; (802b5e8 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x168>)
 802b4b0:	781b      	ldrb	r3, [r3, #0]
 802b4b2:	ee07 0a90 	vmov	s15, r0
 802b4b6:	2b01      	cmp	r3, #1
 802b4b8:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 802b4bc:	eeff 7a00 	vmov.f32	s15, #240	; 0xbf800000 -1.0
 802b4c0:	d066      	beq.n	802b590 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x110>
 802b4c2:	eeb0 6a47 	vmov.f32	s12, s14
 802b4c6:	ee17 3a10 	vmov	r3, s14
 802b4ca:	eeb0 4a48 	vmov.f32	s8, s16
 802b4ce:	eeb0 7a48 	vmov.f32	s14, s16
 802b4d2:	eef0 4a67 	vmov.f32	s9, s15
 802b4d6:	eeb0 8a67 	vmov.f32	s16, s15
 802b4da:	ed94 5a17 	vldr	s10, [r4, #92]	; 0x5c
 802b4de:	edd4 5a18 	vldr	s11, [r4, #96]	; 0x60
 802b4e2:	ed94 3a1b 	vldr	s6, [r4, #108]	; 0x6c
 802b4e6:	edd4 2a1d 	vldr	s5, [r4, #116]	; 0x74
 802b4ea:	ed94 2a1a 	vldr	s4, [r4, #104]	; 0x68
 802b4ee:	edd4 3a1e 	vldr	s7, [r4, #120]	; 0x78
 802b4f2:	6f25      	ldr	r5, [r4, #112]	; 0x70
 802b4f4:	6e66      	ldr	r6, [r4, #100]	; 0x64
 802b4f6:	6fe2      	ldr	r2, [r4, #124]	; 0x7c
 802b4f8:	f8d4 c080 	ldr.w	ip, [r4, #128]	; 0x80
 802b4fc:	f8d4 7084 	ldr.w	r7, [r4, #132]	; 0x84
 802b500:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 802b504:	ee73 1a65 	vsub.f32	s3, s6, s11
 802b508:	ee72 6ac5 	vsub.f32	s13, s5, s10
 802b50c:	ee32 1a45 	vsub.f32	s2, s4, s10
 802b510:	ee66 6ae1 	vnmul.f32	s13, s13, s3
 802b514:	ee73 1ae5 	vsub.f32	s3, s7, s11
 802b518:	eee1 6a21 	vfma.f32	s13, s2, s3
 802b51c:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 802b520:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b524:	dd3d      	ble.n	802b5a2 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x122>
 802b526:	ed8d 5a04 	vstr	s10, [sp, #16]
 802b52a:	ed8d 2a05 	vstr	s4, [sp, #20]
 802b52e:	edcd 2a06 	vstr	s5, [sp, #24]
 802b532:	f8cd c01c 	str.w	ip, [sp, #28]
 802b536:	edcd 5a08 	vstr	s11, [sp, #32]
 802b53a:	ed8d 3a09 	vstr	s6, [sp, #36]	; 0x24
 802b53e:	edcd 3a0a 	vstr	s7, [sp, #40]	; 0x28
 802b542:	970b      	str	r7, [sp, #44]	; 0x2c
 802b544:	960c      	str	r6, [sp, #48]	; 0x30
 802b546:	950d      	str	r5, [sp, #52]	; 0x34
 802b548:	920e      	str	r2, [sp, #56]	; 0x38
 802b54a:	900f      	str	r0, [sp, #60]	; 0x3c
 802b54c:	edcd 7a10 	vstr	s15, [sp, #64]	; 0x40
 802b550:	ed8d 4a11 	vstr	s8, [sp, #68]	; 0x44
 802b554:	ed8d 7a12 	vstr	s14, [sp, #72]	; 0x48
 802b558:	edcd 4a13 	vstr	s9, [sp, #76]	; 0x4c
 802b55c:	ed8d 8a14 	vstr	s16, [sp, #80]	; 0x50
 802b560:	edcd 7a15 	vstr	s15, [sp, #84]	; 0x54
 802b564:	9316      	str	r3, [sp, #88]	; 0x58
 802b566:	ed8d 6a17 	vstr	s12, [sp, #92]	; 0x5c
 802b56a:	ab14      	add	r3, sp, #80	; 0x50
 802b56c:	9303      	str	r3, [sp, #12]
 802b56e:	ab10      	add	r3, sp, #64	; 0x40
 802b570:	9302      	str	r3, [sp, #8]
 802b572:	ab0c      	add	r3, sp, #48	; 0x30
 802b574:	9301      	str	r3, [sp, #4]
 802b576:	ab08      	add	r3, sp, #32
 802b578:	9300      	str	r3, [sp, #0]
 802b57a:	2200      	movs	r2, #0
 802b57c:	ab04      	add	r3, sp, #16
 802b57e:	4641      	mov	r1, r8
 802b580:	4620      	mov	r0, r4
 802b582:	f7ff fe2d 	bl	802b1e0 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
 802b586:	b018      	add	sp, #96	; 0x60
 802b588:	ecbd 8b02 	vpop	{d8}
 802b58c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802b590:	eeb0 6a48 	vmov.f32	s12, s16
 802b594:	eef0 4a47 	vmov.f32	s9, s14
 802b598:	ee17 3a90 	vmov	r3, s15
 802b59c:	eeb0 4a67 	vmov.f32	s8, s15
 802b5a0:	e79b      	b.n	802b4da <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x5a>
 802b5a2:	ed8d 5a05 	vstr	s10, [sp, #20]
 802b5a6:	ed8d 2a04 	vstr	s4, [sp, #16]
 802b5aa:	f8cd c018 	str.w	ip, [sp, #24]
 802b5ae:	edcd 2a07 	vstr	s5, [sp, #28]
 802b5b2:	edcd 5a09 	vstr	s11, [sp, #36]	; 0x24
 802b5b6:	ed8d 3a08 	vstr	s6, [sp, #32]
 802b5ba:	970a      	str	r7, [sp, #40]	; 0x28
 802b5bc:	edcd 3a0b 	vstr	s7, [sp, #44]	; 0x2c
 802b5c0:	960d      	str	r6, [sp, #52]	; 0x34
 802b5c2:	950c      	str	r5, [sp, #48]	; 0x30
 802b5c4:	900e      	str	r0, [sp, #56]	; 0x38
 802b5c6:	920f      	str	r2, [sp, #60]	; 0x3c
 802b5c8:	edcd 7a11 	vstr	s15, [sp, #68]	; 0x44
 802b5cc:	ed8d 4a10 	vstr	s8, [sp, #64]	; 0x40
 802b5d0:	edcd 4a12 	vstr	s9, [sp, #72]	; 0x48
 802b5d4:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 802b5d8:	ed8d 8a15 	vstr	s16, [sp, #84]	; 0x54
 802b5dc:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 802b5e0:	ed8d 6a16 	vstr	s12, [sp, #88]	; 0x58
 802b5e4:	9317      	str	r3, [sp, #92]	; 0x5c
 802b5e6:	e7c0      	b.n	802b56a <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0xea>
 802b5e8:	20013844 	.word	0x20013844

0802b5ec <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>:
 802b5ec:	b5f0      	push	{r4, r5, r6, r7, lr}
 802b5ee:	b08d      	sub	sp, #52	; 0x34
 802b5f0:	2300      	movs	r3, #0
 802b5f2:	9304      	str	r3, [sp, #16]
 802b5f4:	9305      	str	r3, [sp, #20]
 802b5f6:	9306      	str	r3, [sp, #24]
 802b5f8:	aa04      	add	r2, sp, #16
 802b5fa:	f04f 537e 	mov.w	r3, #1065353216	; 0x3f800000
 802b5fe:	9307      	str	r3, [sp, #28]
 802b600:	f100 0640 	add.w	r6, r0, #64	; 0x40
 802b604:	4613      	mov	r3, r2
 802b606:	f101 0710 	add.w	r7, r1, #16
 802b60a:	eddf 7a0f 	vldr	s15, [pc, #60]	; 802b648 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x5c>
 802b60e:	460c      	mov	r4, r1
 802b610:	4605      	mov	r5, r0
 802b612:	ecb4 7a01 	vldmia	r4!, {s14}
 802b616:	ecf5 6a01 	vldmia	r5!, {s13}
 802b61a:	42bc      	cmp	r4, r7
 802b61c:	eee6 7a87 	vfma.f32	s15, s13, s14
 802b620:	d1f7      	bne.n	802b612 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x26>
 802b622:	3010      	adds	r0, #16
 802b624:	42b0      	cmp	r0, r6
 802b626:	ece2 7a01 	vstmia	r2!, {s15}
 802b62a:	d1ee      	bne.n	802b60a <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x1e>
 802b62c:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 802b62e:	ac0c      	add	r4, sp, #48	; 0x30
 802b630:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
 802b634:	ed9d 0a08 	vldr	s0, [sp, #32]
 802b638:	eddd 0a09 	vldr	s1, [sp, #36]	; 0x24
 802b63c:	ed9d 1a0a 	vldr	s2, [sp, #40]	; 0x28
 802b640:	eddd 1a0b 	vldr	s3, [sp, #44]	; 0x2c
 802b644:	b00d      	add	sp, #52	; 0x34
 802b646:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802b648:	00000000 	.word	0x00000000

0802b64c <_ZN8touchgfx9Matrix4x4C1Ev>:
 802b64c:	ed9f 7a0b 	vldr	s14, [pc, #44]	; 802b67c <_ZN8touchgfx9Matrix4x4C1Ev+0x30>
 802b650:	2300      	movs	r3, #0
 802b652:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 802b656:	eb00 1103 	add.w	r1, r0, r3, lsl #4
 802b65a:	2200      	movs	r2, #0
 802b65c:	4293      	cmp	r3, r2
 802b65e:	f102 0201 	add.w	r2, r2, #1
 802b662:	bf14      	ite	ne
 802b664:	eef0 6a47 	vmovne.f32	s13, s14
 802b668:	eef0 6a67 	vmoveq.f32	s13, s15
 802b66c:	2a04      	cmp	r2, #4
 802b66e:	ece1 6a01 	vstmia	r1!, {s13}
 802b672:	d1f3      	bne.n	802b65c <_ZN8touchgfx9Matrix4x4C1Ev+0x10>
 802b674:	3301      	adds	r3, #1
 802b676:	2b04      	cmp	r3, #4
 802b678:	d1ed      	bne.n	802b656 <_ZN8touchgfx9Matrix4x4C1Ev+0xa>
 802b67a:	4770      	bx	lr
 802b67c:	00000000 	.word	0x00000000

0802b680 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>:
 802b680:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802b684:	460c      	mov	r4, r1
 802b686:	4605      	mov	r5, r0
 802b688:	4690      	mov	r8, r2
 802b68a:	f7ff ffdf 	bl	802b64c <_ZN8touchgfx9Matrix4x4C1Ev>
 802b68e:	4628      	mov	r0, r5
 802b690:	4621      	mov	r1, r4
 802b692:	f104 0c40 	add.w	ip, r4, #64	; 0x40
 802b696:	2300      	movs	r3, #0
 802b698:	eddf 7a0f 	vldr	s15, [pc, #60]	; 802b6d8 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x58>
 802b69c:	eb08 0603 	add.w	r6, r8, r3
 802b6a0:	460f      	mov	r7, r1
 802b6a2:	2400      	movs	r4, #0
 802b6a4:	4632      	mov	r2, r6
 802b6a6:	ecf7 6a01 	vldmia	r7!, {s13}
 802b6aa:	ed92 7a00 	vldr	s14, [r2]
 802b6ae:	3401      	adds	r4, #1
 802b6b0:	2c04      	cmp	r4, #4
 802b6b2:	f106 0610 	add.w	r6, r6, #16
 802b6b6:	eee6 7a87 	vfma.f32	s15, s13, s14
 802b6ba:	d1f3      	bne.n	802b6a4 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x24>
 802b6bc:	18c2      	adds	r2, r0, r3
 802b6be:	3304      	adds	r3, #4
 802b6c0:	2b10      	cmp	r3, #16
 802b6c2:	edc2 7a00 	vstr	s15, [r2]
 802b6c6:	d1e7      	bne.n	802b698 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x18>
 802b6c8:	3110      	adds	r1, #16
 802b6ca:	4561      	cmp	r1, ip
 802b6cc:	f100 0010 	add.w	r0, r0, #16
 802b6d0:	d1e1      	bne.n	802b696 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x16>
 802b6d2:	4628      	mov	r0, r5
 802b6d4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802b6d8:	00000000 	.word	0x00000000

0802b6dc <_ZN8touchgfx9Matrix4x415setViewDistanceEf>:
 802b6dc:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 802b6e0:	ee87 0a80 	vdiv.f32	s0, s15, s0
 802b6e4:	f100 0320 	add.w	r3, r0, #32
 802b6e8:	3030      	adds	r0, #48	; 0x30
 802b6ea:	ecf3 7a01 	vldmia	r3!, {s15}
 802b6ee:	ee60 7a27 	vmul.f32	s15, s0, s15
 802b6f2:	4283      	cmp	r3, r0
 802b6f4:	edc3 7a03 	vstr	s15, [r3, #12]
 802b6f8:	d1f7      	bne.n	802b6ea <_ZN8touchgfx9Matrix4x415setViewDistanceEf+0xe>
 802b6fa:	4770      	bx	lr

0802b6fc <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>:
 802b6fc:	b510      	push	{r4, lr}
 802b6fe:	ed2d 8b02 	vpush	{d8}
 802b702:	4604      	mov	r4, r0
 802b704:	eef0 8a40 	vmov.f32	s17, s0
 802b708:	f001 fb56 	bl	802cdb8 <sinf>
 802b70c:	eeb0 8a40 	vmov.f32	s16, s0
 802b710:	eeb0 0a68 	vmov.f32	s0, s17
 802b714:	f001 fb04 	bl	802cd20 <cosf>
 802b718:	f104 0310 	add.w	r3, r4, #16
 802b71c:	f104 0220 	add.w	r2, r4, #32
 802b720:	eeb1 6a48 	vneg.f32	s12, s16
 802b724:	edd3 7a04 	vldr	s15, [r3, #16]
 802b728:	edd3 6a00 	vldr	s13, [r3]
 802b72c:	ee26 7a27 	vmul.f32	s14, s12, s15
 802b730:	ee67 7a80 	vmul.f32	s15, s15, s0
 802b734:	eea6 7a80 	vfma.f32	s14, s13, s0
 802b738:	eee6 7a88 	vfma.f32	s15, s13, s16
 802b73c:	eca3 7a01 	vstmia	r3!, {s14}
 802b740:	429a      	cmp	r2, r3
 802b742:	edc3 7a03 	vstr	s15, [r3, #12]
 802b746:	d1ed      	bne.n	802b724 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf+0x28>
 802b748:	ecbd 8b02 	vpop	{d8}
 802b74c:	4620      	mov	r0, r4
 802b74e:	bd10      	pop	{r4, pc}

0802b750 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>:
 802b750:	b510      	push	{r4, lr}
 802b752:	ed2d 8b02 	vpush	{d8}
 802b756:	4604      	mov	r4, r0
 802b758:	eef0 8a40 	vmov.f32	s17, s0
 802b75c:	f001 fb2c 	bl	802cdb8 <sinf>
 802b760:	eeb0 8a40 	vmov.f32	s16, s0
 802b764:	eeb0 0a68 	vmov.f32	s0, s17
 802b768:	f001 fada 	bl	802cd20 <cosf>
 802b76c:	4623      	mov	r3, r4
 802b76e:	f104 0210 	add.w	r2, r4, #16
 802b772:	eeb1 6a48 	vneg.f32	s12, s16
 802b776:	edd3 7a08 	vldr	s15, [r3, #32]
 802b77a:	edd3 6a00 	vldr	s13, [r3]
 802b77e:	ee27 7a88 	vmul.f32	s14, s15, s16
 802b782:	ee67 7a80 	vmul.f32	s15, s15, s0
 802b786:	eea6 7a80 	vfma.f32	s14, s13, s0
 802b78a:	eee6 7a26 	vfma.f32	s15, s12, s13
 802b78e:	eca3 7a01 	vstmia	r3!, {s14}
 802b792:	429a      	cmp	r2, r3
 802b794:	edc3 7a07 	vstr	s15, [r3, #28]
 802b798:	d1ed      	bne.n	802b776 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf+0x26>
 802b79a:	ecbd 8b02 	vpop	{d8}
 802b79e:	4620      	mov	r0, r4
 802b7a0:	bd10      	pop	{r4, pc}

0802b7a2 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>:
 802b7a2:	b510      	push	{r4, lr}
 802b7a4:	ed2d 8b02 	vpush	{d8}
 802b7a8:	4604      	mov	r4, r0
 802b7aa:	eef0 8a40 	vmov.f32	s17, s0
 802b7ae:	f001 fb03 	bl	802cdb8 <sinf>
 802b7b2:	eeb0 8a40 	vmov.f32	s16, s0
 802b7b6:	eeb0 0a68 	vmov.f32	s0, s17
 802b7ba:	f001 fab1 	bl	802cd20 <cosf>
 802b7be:	4623      	mov	r3, r4
 802b7c0:	f104 0210 	add.w	r2, r4, #16
 802b7c4:	eeb1 6a48 	vneg.f32	s12, s16
 802b7c8:	edd3 7a04 	vldr	s15, [r3, #16]
 802b7cc:	edd3 6a00 	vldr	s13, [r3]
 802b7d0:	ee26 7a27 	vmul.f32	s14, s12, s15
 802b7d4:	ee67 7a80 	vmul.f32	s15, s15, s0
 802b7d8:	eea6 7a80 	vfma.f32	s14, s13, s0
 802b7dc:	eee6 7a88 	vfma.f32	s15, s13, s16
 802b7e0:	eca3 7a01 	vstmia	r3!, {s14}
 802b7e4:	429a      	cmp	r2, r3
 802b7e6:	edc3 7a03 	vstr	s15, [r3, #12]
 802b7ea:	d1ed      	bne.n	802b7c8 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf+0x26>
 802b7ec:	ecbd 8b02 	vpop	{d8}
 802b7f0:	4620      	mov	r0, r4
 802b7f2:	bd10      	pop	{r4, pc}

0802b7f4 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>:
 802b7f4:	4603      	mov	r3, r0
 802b7f6:	f100 0210 	add.w	r2, r0, #16
 802b7fa:	ed93 7a0c 	vldr	s14, [r3, #48]	; 0x30
 802b7fe:	edd3 7a00 	vldr	s15, [r3]
 802b802:	eee7 7a00 	vfma.f32	s15, s14, s0
 802b806:	ece3 7a01 	vstmia	r3!, {s15}
 802b80a:	4293      	cmp	r3, r2
 802b80c:	d1f5      	bne.n	802b7fa <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf+0x6>
 802b80e:	4770      	bx	lr

0802b810 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>:
 802b810:	f100 0310 	add.w	r3, r0, #16
 802b814:	f100 0220 	add.w	r2, r0, #32
 802b818:	ed93 7a08 	vldr	s14, [r3, #32]
 802b81c:	edd3 7a00 	vldr	s15, [r3]
 802b820:	eee7 7a00 	vfma.f32	s15, s14, s0
 802b824:	ece3 7a01 	vstmia	r3!, {s15}
 802b828:	4293      	cmp	r3, r2
 802b82a:	d1f5      	bne.n	802b818 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf+0x8>
 802b82c:	4770      	bx	lr

0802b82e <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>:
 802b82e:	f100 0320 	add.w	r3, r0, #32
 802b832:	f100 0230 	add.w	r2, r0, #48	; 0x30
 802b836:	ed93 7a04 	vldr	s14, [r3, #16]
 802b83a:	edd3 7a00 	vldr	s15, [r3]
 802b83e:	eee7 7a00 	vfma.f32	s15, s14, s0
 802b842:	ece3 7a01 	vstmia	r3!, {s15}
 802b846:	4293      	cmp	r3, r2
 802b848:	d1f5      	bne.n	802b836 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf+0x8>
 802b84a:	4770      	bx	lr

0802b84c <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>:
 802b84c:	4603      	mov	r3, r0
 802b84e:	f100 0210 	add.w	r2, r0, #16
 802b852:	edd3 7a00 	vldr	s15, [r3]
 802b856:	ee67 7a80 	vmul.f32	s15, s15, s0
 802b85a:	ece3 7a01 	vstmia	r3!, {s15}
 802b85e:	4293      	cmp	r3, r2
 802b860:	d1f7      	bne.n	802b852 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf+0x6>
 802b862:	4770      	bx	lr

0802b864 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>:
 802b864:	f100 0310 	add.w	r3, r0, #16
 802b868:	f100 0220 	add.w	r2, r0, #32
 802b86c:	edd3 7a00 	vldr	s15, [r3]
 802b870:	ee67 7a80 	vmul.f32	s15, s15, s0
 802b874:	ece3 7a01 	vstmia	r3!, {s15}
 802b878:	4293      	cmp	r3, r2
 802b87a:	d1f7      	bne.n	802b86c <_ZN8touchgfx9Matrix4x417concatenateYScaleEf+0x8>
 802b87c:	4770      	bx	lr

0802b87e <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>:
 802b87e:	f100 0320 	add.w	r3, r0, #32
 802b882:	f100 0230 	add.w	r2, r0, #48	; 0x30
 802b886:	edd3 7a00 	vldr	s15, [r3]
 802b88a:	ee67 7a80 	vmul.f32	s15, s15, s0
 802b88e:	ece3 7a01 	vstmia	r3!, {s15}
 802b892:	4293      	cmp	r3, r2
 802b894:	d1f7      	bne.n	802b886 <_ZN8touchgfx9Matrix4x417concatenateZScaleEf+0x8>
 802b896:	4770      	bx	lr

0802b898 <arm_max_f32>:
 802b898:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802b89c:	1e4f      	subs	r7, r1, #1
 802b89e:	ea5f 0897 	movs.w	r8, r7, lsr #2
 802b8a2:	f100 0e04 	add.w	lr, r0, #4
 802b8a6:	edd0 7a00 	vldr	s15, [r0]
 802b8aa:	d058      	beq.n	802b95e <arm_max_f32+0xc6>
 802b8ac:	3014      	adds	r0, #20
 802b8ae:	46c4      	mov	ip, r8
 802b8b0:	2604      	movs	r6, #4
 802b8b2:	2400      	movs	r4, #0
 802b8b4:	ed10 6a04 	vldr	s12, [r0, #-16]
 802b8b8:	ed50 6a03 	vldr	s13, [r0, #-12]
 802b8bc:	ed10 7a02 	vldr	s14, [r0, #-8]
 802b8c0:	ed50 5a01 	vldr	s11, [r0, #-4]
 802b8c4:	eeb4 6ae7 	vcmpe.f32	s12, s15
 802b8c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b8cc:	bfc8      	it	gt
 802b8ce:	eef0 7a46 	vmovgt.f32	s15, s12
 802b8d2:	f1a6 0503 	sub.w	r5, r6, #3
 802b8d6:	eef4 7ae6 	vcmpe.f32	s15, s13
 802b8da:	bfc8      	it	gt
 802b8dc:	462c      	movgt	r4, r5
 802b8de:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b8e2:	bf48      	it	mi
 802b8e4:	eef0 7a66 	vmovmi.f32	s15, s13
 802b8e8:	f1a6 0502 	sub.w	r5, r6, #2
 802b8ec:	eef4 7ac7 	vcmpe.f32	s15, s14
 802b8f0:	bf48      	it	mi
 802b8f2:	462c      	movmi	r4, r5
 802b8f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b8f8:	bf48      	it	mi
 802b8fa:	eef0 7a47 	vmovmi.f32	s15, s14
 802b8fe:	f106 35ff 	add.w	r5, r6, #4294967295
 802b902:	eef4 7ae5 	vcmpe.f32	s15, s11
 802b906:	bf48      	it	mi
 802b908:	462c      	movmi	r4, r5
 802b90a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b90e:	bf48      	it	mi
 802b910:	4634      	movmi	r4, r6
 802b912:	bf48      	it	mi
 802b914:	eef0 7a65 	vmovmi.f32	s15, s11
 802b918:	f1bc 0c01 	subs.w	ip, ip, #1
 802b91c:	f106 0604 	add.w	r6, r6, #4
 802b920:	f100 0010 	add.w	r0, r0, #16
 802b924:	d1c6      	bne.n	802b8b4 <arm_max_f32+0x1c>
 802b926:	eb0e 1e08 	add.w	lr, lr, r8, lsl #4
 802b92a:	f017 0003 	ands.w	r0, r7, #3
 802b92e:	d018      	beq.n	802b962 <arm_max_f32+0xca>
 802b930:	1a08      	subs	r0, r1, r0
 802b932:	ecbe 7a01 	vldmia	lr!, {s14}
 802b936:	eeb4 7ae7 	vcmpe.f32	s14, s15
 802b93a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b93e:	bfc8      	it	gt
 802b940:	4604      	movgt	r4, r0
 802b942:	f100 0001 	add.w	r0, r0, #1
 802b946:	bfd8      	it	le
 802b948:	eeb0 7a67 	vmovle.f32	s14, s15
 802b94c:	4288      	cmp	r0, r1
 802b94e:	eef0 7a47 	vmov.f32	s15, s14
 802b952:	d1ee      	bne.n	802b932 <arm_max_f32+0x9a>
 802b954:	ed82 7a00 	vstr	s14, [r2]
 802b958:	601c      	str	r4, [r3, #0]
 802b95a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802b95e:	4644      	mov	r4, r8
 802b960:	e7e3      	b.n	802b92a <arm_max_f32+0x92>
 802b962:	eeb0 7a67 	vmov.f32	s14, s15
 802b966:	e7f5      	b.n	802b954 <arm_max_f32+0xbc>

0802b968 <arm_rfft_fast_init_f32>:
 802b968:	084b      	lsrs	r3, r1, #1
 802b96a:	2b80      	cmp	r3, #128	; 0x80
 802b96c:	b410      	push	{r4}
 802b96e:	8201      	strh	r1, [r0, #16]
 802b970:	8003      	strh	r3, [r0, #0]
 802b972:	d047      	beq.n	802ba04 <arm_rfft_fast_init_f32+0x9c>
 802b974:	d917      	bls.n	802b9a6 <arm_rfft_fast_init_f32+0x3e>
 802b976:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 802b97a:	d03d      	beq.n	802b9f8 <arm_rfft_fast_init_f32+0x90>
 802b97c:	d929      	bls.n	802b9d2 <arm_rfft_fast_init_f32+0x6a>
 802b97e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 802b982:	d020      	beq.n	802b9c6 <arm_rfft_fast_init_f32+0x5e>
 802b984:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 802b988:	d113      	bne.n	802b9b2 <arm_rfft_fast_init_f32+0x4a>
 802b98a:	4921      	ldr	r1, [pc, #132]	; (802ba10 <arm_rfft_fast_init_f32+0xa8>)
 802b98c:	4a21      	ldr	r2, [pc, #132]	; (802ba14 <arm_rfft_fast_init_f32+0xac>)
 802b98e:	4b22      	ldr	r3, [pc, #136]	; (802ba18 <arm_rfft_fast_init_f32+0xb0>)
 802b990:	f44f 646e 	mov.w	r4, #3808	; 0xee0
 802b994:	8184      	strh	r4, [r0, #12]
 802b996:	6081      	str	r1, [r0, #8]
 802b998:	6042      	str	r2, [r0, #4]
 802b99a:	6143      	str	r3, [r0, #20]
 802b99c:	2000      	movs	r0, #0
 802b99e:	b240      	sxtb	r0, r0
 802b9a0:	f85d 4b04 	ldr.w	r4, [sp], #4
 802b9a4:	4770      	bx	lr
 802b9a6:	2b20      	cmp	r3, #32
 802b9a8:	d01c      	beq.n	802b9e4 <arm_rfft_fast_init_f32+0x7c>
 802b9aa:	2b40      	cmp	r3, #64	; 0x40
 802b9ac:	d006      	beq.n	802b9bc <arm_rfft_fast_init_f32+0x54>
 802b9ae:	2b10      	cmp	r3, #16
 802b9b0:	d01d      	beq.n	802b9ee <arm_rfft_fast_init_f32+0x86>
 802b9b2:	20ff      	movs	r0, #255	; 0xff
 802b9b4:	b240      	sxtb	r0, r0
 802b9b6:	f85d 4b04 	ldr.w	r4, [sp], #4
 802b9ba:	4770      	bx	lr
 802b9bc:	2438      	movs	r4, #56	; 0x38
 802b9be:	4917      	ldr	r1, [pc, #92]	; (802ba1c <arm_rfft_fast_init_f32+0xb4>)
 802b9c0:	4a17      	ldr	r2, [pc, #92]	; (802ba20 <arm_rfft_fast_init_f32+0xb8>)
 802b9c2:	4b18      	ldr	r3, [pc, #96]	; (802ba24 <arm_rfft_fast_init_f32+0xbc>)
 802b9c4:	e7e6      	b.n	802b994 <arm_rfft_fast_init_f32+0x2c>
 802b9c6:	f44f 64e1 	mov.w	r4, #1800	; 0x708
 802b9ca:	4917      	ldr	r1, [pc, #92]	; (802ba28 <arm_rfft_fast_init_f32+0xc0>)
 802b9cc:	4a17      	ldr	r2, [pc, #92]	; (802ba2c <arm_rfft_fast_init_f32+0xc4>)
 802b9ce:	4b18      	ldr	r3, [pc, #96]	; (802ba30 <arm_rfft_fast_init_f32+0xc8>)
 802b9d0:	e7e0      	b.n	802b994 <arm_rfft_fast_init_f32+0x2c>
 802b9d2:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 802b9d6:	d1ec      	bne.n	802b9b2 <arm_rfft_fast_init_f32+0x4a>
 802b9d8:	f44f 74dc 	mov.w	r4, #440	; 0x1b8
 802b9dc:	4915      	ldr	r1, [pc, #84]	; (802ba34 <arm_rfft_fast_init_f32+0xcc>)
 802b9de:	4a16      	ldr	r2, [pc, #88]	; (802ba38 <arm_rfft_fast_init_f32+0xd0>)
 802b9e0:	4b16      	ldr	r3, [pc, #88]	; (802ba3c <arm_rfft_fast_init_f32+0xd4>)
 802b9e2:	e7d7      	b.n	802b994 <arm_rfft_fast_init_f32+0x2c>
 802b9e4:	2430      	movs	r4, #48	; 0x30
 802b9e6:	4916      	ldr	r1, [pc, #88]	; (802ba40 <arm_rfft_fast_init_f32+0xd8>)
 802b9e8:	4a16      	ldr	r2, [pc, #88]	; (802ba44 <arm_rfft_fast_init_f32+0xdc>)
 802b9ea:	4b17      	ldr	r3, [pc, #92]	; (802ba48 <arm_rfft_fast_init_f32+0xe0>)
 802b9ec:	e7d2      	b.n	802b994 <arm_rfft_fast_init_f32+0x2c>
 802b9ee:	2414      	movs	r4, #20
 802b9f0:	4916      	ldr	r1, [pc, #88]	; (802ba4c <arm_rfft_fast_init_f32+0xe4>)
 802b9f2:	4a17      	ldr	r2, [pc, #92]	; (802ba50 <arm_rfft_fast_init_f32+0xe8>)
 802b9f4:	4b17      	ldr	r3, [pc, #92]	; (802ba54 <arm_rfft_fast_init_f32+0xec>)
 802b9f6:	e7cd      	b.n	802b994 <arm_rfft_fast_init_f32+0x2c>
 802b9f8:	f44f 74e0 	mov.w	r4, #448	; 0x1c0
 802b9fc:	4916      	ldr	r1, [pc, #88]	; (802ba58 <arm_rfft_fast_init_f32+0xf0>)
 802b9fe:	4a17      	ldr	r2, [pc, #92]	; (802ba5c <arm_rfft_fast_init_f32+0xf4>)
 802ba00:	4b17      	ldr	r3, [pc, #92]	; (802ba60 <arm_rfft_fast_init_f32+0xf8>)
 802ba02:	e7c7      	b.n	802b994 <arm_rfft_fast_init_f32+0x2c>
 802ba04:	24d0      	movs	r4, #208	; 0xd0
 802ba06:	4917      	ldr	r1, [pc, #92]	; (802ba64 <arm_rfft_fast_init_f32+0xfc>)
 802ba08:	4a17      	ldr	r2, [pc, #92]	; (802ba68 <arm_rfft_fast_init_f32+0x100>)
 802ba0a:	4b18      	ldr	r3, [pc, #96]	; (802ba6c <arm_rfft_fast_init_f32+0x104>)
 802ba0c:	e7c2      	b.n	802b994 <arm_rfft_fast_init_f32+0x2c>
 802ba0e:	bf00      	nop
 802ba10:	080410ec 	.word	0x080410ec
 802ba14:	080322e4 	.word	0x080322e4
 802ba18:	08038454 	.word	0x08038454
 802ba1c:	080363e4 	.word	0x080363e4
 802ba20:	08042eac 	.word	0x08042eac
 802ba24:	0804539c 	.word	0x0804539c
 802ba28:	0803edd4 	.word	0x0803edd4
 802ba2c:	0803ccd4 	.word	0x0803ccd4
 802ba30:	08036454 	.word	0x08036454
 802ba34:	0804502c 	.word	0x0804502c
 802ba38:	0803c454 	.word	0x0803c454
 802ba3c:	080430ac 	.word	0x080430ac
 802ba40:	0803fc8c 	.word	0x0803fc8c
 802ba44:	0803ecd4 	.word	0x0803ecd4
 802ba48:	080362e4 	.word	0x080362e4
 802ba4c:	0803fbe4 	.word	0x0803fbe4
 802ba50:	0803cc54 	.word	0x0803cc54
 802ba54:	0803fc0c 	.word	0x0803fc0c
 802ba58:	080438ac 	.word	0x080438ac
 802ba5c:	080400ec 	.word	0x080400ec
 802ba60:	08043c2c 	.word	0x08043c2c
 802ba64:	0804559c 	.word	0x0804559c
 802ba68:	0803fcec 	.word	0x0803fcec
 802ba6c:	08044c2c 	.word	0x08044c2c

0802ba70 <arm_rfft_fast_f32>:
 802ba70:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802ba74:	8a06      	ldrh	r6, [r0, #16]
 802ba76:	0876      	lsrs	r6, r6, #1
 802ba78:	4607      	mov	r7, r0
 802ba7a:	4615      	mov	r5, r2
 802ba7c:	8006      	strh	r6, [r0, #0]
 802ba7e:	460c      	mov	r4, r1
 802ba80:	2b00      	cmp	r3, #0
 802ba82:	d15c      	bne.n	802bb3e <arm_rfft_fast_f32+0xce>
 802ba84:	461a      	mov	r2, r3
 802ba86:	2301      	movs	r3, #1
 802ba88:	f000 fbe6 	bl	802c258 <arm_cfft_f32>
 802ba8c:	edd4 7a00 	vldr	s15, [r4]
 802ba90:	ed94 7a01 	vldr	s14, [r4, #4]
 802ba94:	883e      	ldrh	r6, [r7, #0]
 802ba96:	6978      	ldr	r0, [r7, #20]
 802ba98:	ee37 7a07 	vadd.f32	s14, s14, s14
 802ba9c:	ee77 7aa7 	vadd.f32	s15, s15, s15
 802baa0:	eef6 3a00 	vmov.f32	s7, #96	; 0x3f000000  0.5
 802baa4:	ee77 6a87 	vadd.f32	s13, s15, s14
 802baa8:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802baac:	3e01      	subs	r6, #1
 802baae:	ee26 7aa3 	vmul.f32	s14, s13, s7
 802bab2:	ee67 7aa3 	vmul.f32	s15, s15, s7
 802bab6:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 802baba:	ed85 7a00 	vstr	s14, [r5]
 802babe:	edc5 7a01 	vstr	s15, [r5, #4]
 802bac2:	3010      	adds	r0, #16
 802bac4:	f105 0210 	add.w	r2, r5, #16
 802bac8:	3b08      	subs	r3, #8
 802baca:	f104 0110 	add.w	r1, r4, #16
 802bace:	ed51 4a02 	vldr	s9, [r1, #-8]
 802bad2:	ed93 5a02 	vldr	s10, [r3, #8]
 802bad6:	ed11 7a01 	vldr	s14, [r1, #-4]
 802bada:	ed10 6a02 	vldr	s12, [r0, #-8]
 802bade:	edd3 5a03 	vldr	s11, [r3, #12]
 802bae2:	ed50 6a01 	vldr	s13, [r0, #-4]
 802bae6:	ee75 7a64 	vsub.f32	s15, s10, s9
 802baea:	ee35 4a87 	vadd.f32	s8, s11, s14
 802baee:	ee35 5a24 	vadd.f32	s10, s10, s9
 802baf2:	ee77 5a65 	vsub.f32	s11, s14, s11
 802baf6:	ee66 4a27 	vmul.f32	s9, s12, s15
 802bafa:	ee26 7aa7 	vmul.f32	s14, s13, s15
 802bafe:	ee34 5a85 	vadd.f32	s10, s9, s10
 802bb02:	ee26 6a04 	vmul.f32	s12, s12, s8
 802bb06:	ee66 6a84 	vmul.f32	s13, s13, s8
 802bb0a:	ee77 7a25 	vadd.f32	s15, s14, s11
 802bb0e:	ee76 6a85 	vadd.f32	s13, s13, s10
 802bb12:	ee77 7ac6 	vsub.f32	s15, s15, s12
 802bb16:	ee66 6aa3 	vmul.f32	s13, s13, s7
 802bb1a:	ee67 7aa3 	vmul.f32	s15, s15, s7
 802bb1e:	3e01      	subs	r6, #1
 802bb20:	ed42 6a02 	vstr	s13, [r2, #-8]
 802bb24:	ed42 7a01 	vstr	s15, [r2, #-4]
 802bb28:	f1a3 0308 	sub.w	r3, r3, #8
 802bb2c:	f101 0108 	add.w	r1, r1, #8
 802bb30:	f100 0008 	add.w	r0, r0, #8
 802bb34:	f102 0208 	add.w	r2, r2, #8
 802bb38:	d1c9      	bne.n	802bace <arm_rfft_fast_f32+0x5e>
 802bb3a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802bb3e:	edd1 7a00 	vldr	s15, [r1]
 802bb42:	edd1 6a01 	vldr	s13, [r1, #4]
 802bb46:	6941      	ldr	r1, [r0, #20]
 802bb48:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802bb4c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802bb50:	eef6 3a00 	vmov.f32	s7, #96	; 0x3f000000  0.5
 802bb54:	ee27 7a23 	vmul.f32	s14, s14, s7
 802bb58:	ee67 7aa3 	vmul.f32	s15, s15, s7
 802bb5c:	3e01      	subs	r6, #1
 802bb5e:	ed82 7a00 	vstr	s14, [r2]
 802bb62:	edc2 7a01 	vstr	s15, [r2, #4]
 802bb66:	00f0      	lsls	r0, r6, #3
 802bb68:	b3ee      	cbz	r6, 802bbe6 <arm_rfft_fast_f32+0x176>
 802bb6a:	3808      	subs	r0, #8
 802bb6c:	f101 0e10 	add.w	lr, r1, #16
 802bb70:	4420      	add	r0, r4
 802bb72:	f104 0110 	add.w	r1, r4, #16
 802bb76:	f102 0c10 	add.w	ip, r2, #16
 802bb7a:	ed90 7a02 	vldr	s14, [r0, #8]
 802bb7e:	ed51 6a02 	vldr	s13, [r1, #-8]
 802bb82:	ed1e 6a02 	vldr	s12, [lr, #-8]
 802bb86:	ed90 4a03 	vldr	s8, [r0, #12]
 802bb8a:	ed11 5a01 	vldr	s10, [r1, #-4]
 802bb8e:	ed5e 5a01 	vldr	s11, [lr, #-4]
 802bb92:	ee76 7ac7 	vsub.f32	s15, s13, s14
 802bb96:	ee74 4a05 	vadd.f32	s9, s8, s10
 802bb9a:	ee26 3a27 	vmul.f32	s6, s12, s15
 802bb9e:	ee77 6a26 	vadd.f32	s13, s14, s13
 802bba2:	ee35 5a44 	vsub.f32	s10, s10, s8
 802bba6:	ee25 7aa7 	vmul.f32	s14, s11, s15
 802bbaa:	ee76 6ac3 	vsub.f32	s13, s13, s6
 802bbae:	ee77 7a05 	vadd.f32	s15, s14, s10
 802bbb2:	ee26 6a24 	vmul.f32	s12, s12, s9
 802bbb6:	ee65 5aa4 	vmul.f32	s11, s11, s9
 802bbba:	ee77 7ac6 	vsub.f32	s15, s15, s12
 802bbbe:	ee36 7ae5 	vsub.f32	s14, s13, s11
 802bbc2:	ee67 7aa3 	vmul.f32	s15, s15, s7
 802bbc6:	ee27 7a23 	vmul.f32	s14, s14, s7
 802bbca:	3e01      	subs	r6, #1
 802bbcc:	ed0c 7a02 	vstr	s14, [ip, #-8]
 802bbd0:	ed4c 7a01 	vstr	s15, [ip, #-4]
 802bbd4:	f1a0 0008 	sub.w	r0, r0, #8
 802bbd8:	f101 0108 	add.w	r1, r1, #8
 802bbdc:	f10e 0e08 	add.w	lr, lr, #8
 802bbe0:	f10c 0c08 	add.w	ip, ip, #8
 802bbe4:	d1c9      	bne.n	802bb7a <arm_rfft_fast_f32+0x10a>
 802bbe6:	4638      	mov	r0, r7
 802bbe8:	4629      	mov	r1, r5
 802bbea:	461a      	mov	r2, r3
 802bbec:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802bbf0:	2301      	movs	r3, #1
 802bbf2:	f000 bb31 	b.w	802c258 <arm_cfft_f32>
 802bbf6:	bf00      	nop

0802bbf8 <arm_cfft_radix8by2_f32>:
 802bbf8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802bbfc:	ed2d 8b08 	vpush	{d8-d11}
 802bc00:	f8b0 e000 	ldrh.w	lr, [r0]
 802bc04:	6842      	ldr	r2, [r0, #4]
 802bc06:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 802bc0a:	eb01 088e 	add.w	r8, r1, lr, lsl #2
 802bc0e:	ea5f 0ede 	movs.w	lr, lr, lsr #3
 802bc12:	4607      	mov	r7, r0
 802bc14:	ea4f 038c 	mov.w	r3, ip, lsl #2
 802bc18:	f000 80af 	beq.w	802bd7a <arm_cfft_radix8by2_f32+0x182>
 802bc1c:	3310      	adds	r3, #16
 802bc1e:	18ce      	adds	r6, r1, r3
 802bc20:	3210      	adds	r2, #16
 802bc22:	4443      	add	r3, r8
 802bc24:	f101 0510 	add.w	r5, r1, #16
 802bc28:	f108 0410 	add.w	r4, r8, #16
 802bc2c:	ed54 1a04 	vldr	s3, [r4, #-16]
 802bc30:	ed13 4a04 	vldr	s8, [r3, #-16]
 802bc34:	ed53 3a03 	vldr	s7, [r3, #-12]
 802bc38:	ed53 5a02 	vldr	s11, [r3, #-8]
 802bc3c:	ed13 5a01 	vldr	s10, [r3, #-4]
 802bc40:	ed54 6a03 	vldr	s13, [r4, #-12]
 802bc44:	ed14 0a02 	vldr	s0, [r4, #-8]
 802bc48:	ed16 2a04 	vldr	s4, [r6, #-16]
 802bc4c:	ed56 2a03 	vldr	s5, [r6, #-12]
 802bc50:	ed15 6a03 	vldr	s12, [r5, #-12]
 802bc54:	ed15 7a01 	vldr	s14, [r5, #-4]
 802bc58:	ed15 3a04 	vldr	s6, [r5, #-16]
 802bc5c:	ed54 7a01 	vldr	s15, [r4, #-4]
 802bc60:	ed56 0a02 	vldr	s1, [r6, #-8]
 802bc64:	ed16 1a01 	vldr	s2, [r6, #-4]
 802bc68:	ed55 4a02 	vldr	s9, [r5, #-8]
 802bc6c:	ee73 ba21 	vadd.f32	s23, s6, s3
 802bc70:	ee36 ba26 	vadd.f32	s22, s12, s13
 802bc74:	ee37 aa27 	vadd.f32	s20, s14, s15
 802bc78:	ee72 9a04 	vadd.f32	s19, s4, s8
 802bc7c:	ee32 9aa3 	vadd.f32	s18, s5, s7
 802bc80:	ee31 8a05 	vadd.f32	s16, s2, s10
 802bc84:	ee74 aa80 	vadd.f32	s21, s9, s0
 802bc88:	ee70 8aa5 	vadd.f32	s17, s1, s11
 802bc8c:	ed45 ba04 	vstr	s23, [r5, #-16]
 802bc90:	ed05 ba03 	vstr	s22, [r5, #-12]
 802bc94:	ed45 aa02 	vstr	s21, [r5, #-8]
 802bc98:	ed05 aa01 	vstr	s20, [r5, #-4]
 802bc9c:	ed06 8a01 	vstr	s16, [r6, #-4]
 802bca0:	ed46 9a04 	vstr	s19, [r6, #-16]
 802bca4:	ed06 9a03 	vstr	s18, [r6, #-12]
 802bca8:	ed46 8a02 	vstr	s17, [r6, #-8]
 802bcac:	ee76 6a66 	vsub.f32	s13, s12, s13
 802bcb0:	ee73 3ae2 	vsub.f32	s7, s7, s5
 802bcb4:	ed12 6a03 	vldr	s12, [r2, #-12]
 802bcb8:	ed52 2a04 	vldr	s5, [r2, #-16]
 802bcbc:	ee33 3a61 	vsub.f32	s6, s6, s3
 802bcc0:	ee34 4a42 	vsub.f32	s8, s8, s4
 802bcc4:	ee26 8a86 	vmul.f32	s16, s13, s12
 802bcc8:	ee24 2a06 	vmul.f32	s4, s8, s12
 802bccc:	ee63 1a22 	vmul.f32	s3, s6, s5
 802bcd0:	ee24 4a22 	vmul.f32	s8, s8, s5
 802bcd4:	ee23 3a06 	vmul.f32	s6, s6, s12
 802bcd8:	ee66 6aa2 	vmul.f32	s13, s13, s5
 802bcdc:	ee23 6a86 	vmul.f32	s12, s7, s12
 802bce0:	ee63 3aa2 	vmul.f32	s7, s7, s5
 802bce4:	ee36 6a04 	vadd.f32	s12, s12, s8
 802bce8:	ee76 6ac3 	vsub.f32	s13, s13, s6
 802bcec:	ee72 3a63 	vsub.f32	s7, s4, s7
 802bcf0:	ee71 2a88 	vadd.f32	s5, s3, s16
 802bcf4:	ed44 6a03 	vstr	s13, [r4, #-12]
 802bcf8:	ed44 2a04 	vstr	s5, [r4, #-16]
 802bcfc:	ed43 3a04 	vstr	s7, [r3, #-16]
 802bd00:	ed03 6a03 	vstr	s12, [r3, #-12]
 802bd04:	ee77 7a67 	vsub.f32	s15, s14, s15
 802bd08:	ee75 6ae0 	vsub.f32	s13, s11, s1
 802bd0c:	ed12 7a01 	vldr	s14, [r2, #-4]
 802bd10:	ed52 5a02 	vldr	s11, [r2, #-8]
 802bd14:	ee35 6a41 	vsub.f32	s12, s10, s2
 802bd18:	ee74 4ac0 	vsub.f32	s9, s9, s0
 802bd1c:	ee67 3a87 	vmul.f32	s7, s15, s14
 802bd20:	ee26 5a87 	vmul.f32	s10, s13, s14
 802bd24:	ee24 4aa5 	vmul.f32	s8, s9, s11
 802bd28:	ee67 7aa5 	vmul.f32	s15, s15, s11
 802bd2c:	ee64 4a87 	vmul.f32	s9, s9, s14
 802bd30:	ee66 6aa5 	vmul.f32	s13, s13, s11
 802bd34:	ee26 7a07 	vmul.f32	s14, s12, s14
 802bd38:	ee26 6a25 	vmul.f32	s12, s12, s11
 802bd3c:	ee77 7ae4 	vsub.f32	s15, s15, s9
 802bd40:	ee74 5a23 	vadd.f32	s11, s8, s7
 802bd44:	ee35 6a46 	vsub.f32	s12, s10, s12
 802bd48:	ee37 7a26 	vadd.f32	s14, s14, s13
 802bd4c:	f1be 0e01 	subs.w	lr, lr, #1
 802bd50:	ed44 5a02 	vstr	s11, [r4, #-8]
 802bd54:	f105 0510 	add.w	r5, r5, #16
 802bd58:	ed44 7a01 	vstr	s15, [r4, #-4]
 802bd5c:	f106 0610 	add.w	r6, r6, #16
 802bd60:	ed03 6a02 	vstr	s12, [r3, #-8]
 802bd64:	ed03 7a01 	vstr	s14, [r3, #-4]
 802bd68:	f102 0210 	add.w	r2, r2, #16
 802bd6c:	f104 0410 	add.w	r4, r4, #16
 802bd70:	f103 0310 	add.w	r3, r3, #16
 802bd74:	f47f af5a 	bne.w	802bc2c <arm_cfft_radix8by2_f32+0x34>
 802bd78:	687a      	ldr	r2, [r7, #4]
 802bd7a:	fa1f f48c 	uxth.w	r4, ip
 802bd7e:	4608      	mov	r0, r1
 802bd80:	2302      	movs	r3, #2
 802bd82:	4621      	mov	r1, r4
 802bd84:	f000 fbca 	bl	802c51c <arm_radix8_butterfly_f32>
 802bd88:	ecbd 8b08 	vpop	{d8-d11}
 802bd8c:	4640      	mov	r0, r8
 802bd8e:	4621      	mov	r1, r4
 802bd90:	687a      	ldr	r2, [r7, #4]
 802bd92:	2302      	movs	r3, #2
 802bd94:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802bd98:	f000 bbc0 	b.w	802c51c <arm_radix8_butterfly_f32>

0802bd9c <arm_cfft_radix8by4_f32>:
 802bd9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802bda0:	ed2d 8b0a 	vpush	{d8-d12}
 802bda4:	8802      	ldrh	r2, [r0, #0]
 802bda6:	ed91 6a00 	vldr	s12, [r1]
 802bdaa:	b08f      	sub	sp, #60	; 0x3c
 802bdac:	460f      	mov	r7, r1
 802bdae:	0852      	lsrs	r2, r2, #1
 802bdb0:	0093      	lsls	r3, r2, #2
 802bdb2:	900c      	str	r0, [sp, #48]	; 0x30
 802bdb4:	9103      	str	r1, [sp, #12]
 802bdb6:	6841      	ldr	r1, [r0, #4]
 802bdb8:	ed97 7a01 	vldr	s14, [r7, #4]
 802bdbc:	4638      	mov	r0, r7
 802bdbe:	4418      	add	r0, r3
 802bdc0:	4606      	mov	r6, r0
 802bdc2:	9009      	str	r0, [sp, #36]	; 0x24
 802bdc4:	4418      	add	r0, r3
 802bdc6:	edd0 6a00 	vldr	s13, [r0]
 802bdca:	edd6 3a00 	vldr	s7, [r6]
 802bdce:	edd6 2a01 	vldr	s5, [r6, #4]
 802bdd2:	edd0 7a01 	vldr	s15, [r0, #4]
 802bdd6:	900a      	str	r0, [sp, #40]	; 0x28
 802bdd8:	ee76 5a26 	vadd.f32	s11, s12, s13
 802bddc:	4604      	mov	r4, r0
 802bdde:	4625      	mov	r5, r4
 802bde0:	441c      	add	r4, r3
 802bde2:	ed94 4a00 	vldr	s8, [r4]
 802bde6:	ed94 5a01 	vldr	s10, [r4, #4]
 802bdea:	9401      	str	r4, [sp, #4]
 802bdec:	ee75 4aa3 	vadd.f32	s9, s11, s7
 802bdf0:	4630      	mov	r0, r6
 802bdf2:	ee74 4a24 	vadd.f32	s9, s8, s9
 802bdf6:	463e      	mov	r6, r7
 802bdf8:	ee14 ea90 	vmov	lr, s9
 802bdfc:	ee76 6a66 	vsub.f32	s13, s12, s13
 802be00:	f846 eb08 	str.w	lr, [r6], #8
 802be04:	ee37 6a27 	vadd.f32	s12, s14, s15
 802be08:	edd0 4a01 	vldr	s9, [r0, #4]
 802be0c:	9604      	str	r6, [sp, #16]
 802be0e:	ee77 7a67 	vsub.f32	s15, s14, s15
 802be12:	9e01      	ldr	r6, [sp, #4]
 802be14:	ee32 3aa6 	vadd.f32	s6, s5, s13
 802be18:	ed96 2a01 	vldr	s4, [r6, #4]
 802be1c:	ee36 7a24 	vadd.f32	s14, s12, s9
 802be20:	ee75 5ae3 	vsub.f32	s11, s11, s7
 802be24:	ee77 4ae3 	vsub.f32	s9, s15, s7
 802be28:	ee36 6a62 	vsub.f32	s12, s12, s5
 802be2c:	ee77 7aa3 	vadd.f32	s15, s15, s7
 802be30:	ee76 6ae2 	vsub.f32	s13, s13, s5
 802be34:	ee73 3a45 	vsub.f32	s7, s6, s10
 802be38:	4604      	mov	r4, r0
 802be3a:	ee36 6a45 	vsub.f32	s12, s12, s10
 802be3e:	ee75 6a26 	vadd.f32	s13, s10, s13
 802be42:	46a3      	mov	fp, r4
 802be44:	ee37 7a02 	vadd.f32	s14, s14, s4
 802be48:	ee34 5a84 	vadd.f32	s10, s9, s8
 802be4c:	ee13 8a90 	vmov	r8, s7
 802be50:	46a4      	mov	ip, r4
 802be52:	ee75 5ac4 	vsub.f32	s11, s11, s8
 802be56:	ed87 7a01 	vstr	s14, [r7, #4]
 802be5a:	f84b 8b08 	str.w	r8, [fp], #8
 802be5e:	f1ac 0704 	sub.w	r7, ip, #4
 802be62:	ed8c 5a01 	vstr	s10, [ip, #4]
 802be66:	f101 0c08 	add.w	ip, r1, #8
 802be6a:	462c      	mov	r4, r5
 802be6c:	f8cd c014 	str.w	ip, [sp, #20]
 802be70:	ee15 ca90 	vmov	ip, s11
 802be74:	f844 cb08 	str.w	ip, [r4], #8
 802be78:	9407      	str	r4, [sp, #28]
 802be7a:	f101 0410 	add.w	r4, r1, #16
 802be7e:	ed85 6a01 	vstr	s12, [r5, #4]
 802be82:	0852      	lsrs	r2, r2, #1
 802be84:	9402      	str	r4, [sp, #8]
 802be86:	462c      	mov	r4, r5
 802be88:	f101 0518 	add.w	r5, r1, #24
 802be8c:	920b      	str	r2, [sp, #44]	; 0x2c
 802be8e:	46b2      	mov	sl, r6
 802be90:	9506      	str	r5, [sp, #24]
 802be92:	ee77 7ac4 	vsub.f32	s15, s15, s8
 802be96:	3a02      	subs	r2, #2
 802be98:	ee16 5a90 	vmov	r5, s13
 802be9c:	46b6      	mov	lr, r6
 802be9e:	4630      	mov	r0, r6
 802bea0:	0852      	lsrs	r2, r2, #1
 802bea2:	f84a 5b08 	str.w	r5, [sl], #8
 802bea6:	f1a0 0604 	sub.w	r6, r0, #4
 802beaa:	edce 7a01 	vstr	s15, [lr, #4]
 802beae:	9208      	str	r2, [sp, #32]
 802beb0:	f000 8130 	beq.w	802c114 <arm_cfft_radix8by4_f32+0x378>
 802beb4:	4691      	mov	r9, r2
 802beb6:	9a03      	ldr	r2, [sp, #12]
 802beb8:	f8dd 8008 	ldr.w	r8, [sp, #8]
 802bebc:	f8cd a034 	str.w	sl, [sp, #52]	; 0x34
 802bec0:	3b08      	subs	r3, #8
 802bec2:	f102 0510 	add.w	r5, r2, #16
 802bec6:	f101 0c20 	add.w	ip, r1, #32
 802beca:	f1a4 020c 	sub.w	r2, r4, #12
 802bece:	f101 0e30 	add.w	lr, r1, #48	; 0x30
 802bed2:	4433      	add	r3, r6
 802bed4:	3410      	adds	r4, #16
 802bed6:	4650      	mov	r0, sl
 802bed8:	4659      	mov	r1, fp
 802beda:	ed55 3a02 	vldr	s7, [r5, #-8]
 802bede:	ed14 5a02 	vldr	s10, [r4, #-8]
 802bee2:	ed91 7a00 	vldr	s14, [r1]
 802bee6:	edd0 7a00 	vldr	s15, [r0]
 802beea:	ed15 4a01 	vldr	s8, [r5, #-4]
 802beee:	ed54 5a01 	vldr	s11, [r4, #-4]
 802bef2:	edd0 6a01 	vldr	s13, [r0, #4]
 802bef6:	ed91 6a01 	vldr	s12, [r1, #4]
 802befa:	ee33 8a85 	vadd.f32	s16, s7, s10
 802befe:	ee34 0a25 	vadd.f32	s0, s8, s11
 802bf02:	ee78 4a07 	vadd.f32	s9, s16, s14
 802bf06:	ee74 5a65 	vsub.f32	s11, s8, s11
 802bf0a:	ee77 4aa4 	vadd.f32	s9, s15, s9
 802bf0e:	ee33 5ac5 	vsub.f32	s10, s7, s10
 802bf12:	ed45 4a02 	vstr	s9, [r5, #-8]
 802bf16:	edd1 4a01 	vldr	s9, [r1, #4]
 802bf1a:	ed90 4a01 	vldr	s8, [r0, #4]
 802bf1e:	ee70 4a24 	vadd.f32	s9, s0, s9
 802bf22:	ee76 aa05 	vadd.f32	s21, s12, s10
 802bf26:	ee74 4a84 	vadd.f32	s9, s9, s8
 802bf2a:	ee35 aac7 	vsub.f32	s20, s11, s14
 802bf2e:	ed45 4a01 	vstr	s9, [r5, #-4]
 802bf32:	edd6 1a00 	vldr	s3, [r6]
 802bf36:	edd7 0a00 	vldr	s1, [r7]
 802bf3a:	ed92 4a02 	vldr	s8, [r2, #8]
 802bf3e:	edd3 3a02 	vldr	s7, [r3, #8]
 802bf42:	ed93 2a01 	vldr	s4, [r3, #4]
 802bf46:	ed16 1a01 	vldr	s2, [r6, #-4]
 802bf4a:	edd2 2a01 	vldr	s5, [r2, #4]
 802bf4e:	ed57 9a01 	vldr	s19, [r7, #-4]
 802bf52:	ee70 4aa1 	vadd.f32	s9, s1, s3
 802bf56:	ee39 3a81 	vadd.f32	s6, s19, s2
 802bf5a:	ee74 8a84 	vadd.f32	s17, s9, s8
 802bf5e:	ee70 1ae1 	vsub.f32	s3, s1, s3
 802bf62:	ee73 8aa8 	vadd.f32	s17, s7, s17
 802bf66:	ee7a aae6 	vsub.f32	s21, s21, s13
 802bf6a:	ee18 aa90 	vmov	sl, s17
 802bf6e:	f847 a908 	str.w	sl, [r7], #-8
 802bf72:	edd2 8a01 	vldr	s17, [r2, #4]
 802bf76:	ed93 9a01 	vldr	s18, [r3, #4]
 802bf7a:	ee73 8a28 	vadd.f32	s17, s6, s17
 802bf7e:	ee3a aa27 	vadd.f32	s20, s20, s15
 802bf82:	ee78 8a89 	vadd.f32	s17, s17, s18
 802bf86:	ee74 0a63 	vsub.f32	s1, s8, s7
 802bf8a:	edc7 8a01 	vstr	s17, [r7, #4]
 802bf8e:	ed18 ba02 	vldr	s22, [r8, #-8]
 802bf92:	ed58 8a01 	vldr	s17, [r8, #-4]
 802bf96:	ee39 1ac1 	vsub.f32	s2, s19, s2
 802bf9a:	ee6a ba28 	vmul.f32	s23, s20, s17
 802bf9e:	ee2a ca8b 	vmul.f32	s24, s21, s22
 802bfa2:	ee71 9ae2 	vsub.f32	s19, s3, s5
 802bfa6:	ee30 9a81 	vadd.f32	s18, s1, s2
 802bfaa:	ee79 9a82 	vadd.f32	s19, s19, s4
 802bfae:	ee3c ca2b 	vadd.f32	s24, s24, s23
 802bfb2:	ee6a aaa8 	vmul.f32	s21, s21, s17
 802bfb6:	ee69 baa8 	vmul.f32	s23, s19, s17
 802bfba:	ee2a aa0b 	vmul.f32	s20, s20, s22
 802bfbe:	ee69 9a8b 	vmul.f32	s19, s19, s22
 802bfc2:	ee69 8a28 	vmul.f32	s17, s18, s17
 802bfc6:	ee29 ba0b 	vmul.f32	s22, s18, s22
 802bfca:	ee1c aa10 	vmov	sl, s24
 802bfce:	ee78 8aa9 	vadd.f32	s17, s17, s19
 802bfd2:	f841 ab08 	str.w	sl, [r1], #8
 802bfd6:	ee3a aa6a 	vsub.f32	s20, s20, s21
 802bfda:	ee3b bacb 	vsub.f32	s22, s23, s22
 802bfde:	ee34 4ac4 	vsub.f32	s8, s9, s8
 802bfe2:	ee33 3a62 	vsub.f32	s6, s6, s5
 802bfe6:	ed01 aa01 	vstr	s20, [r1, #-4]
 802bfea:	edc2 8a01 	vstr	s17, [r2, #4]
 802bfee:	ed82 ba02 	vstr	s22, [r2, #8]
 802bff2:	ed5c 4a04 	vldr	s9, [ip, #-16]
 802bff6:	ee74 3a63 	vsub.f32	s7, s8, s7
 802bffa:	ee38 8a47 	vsub.f32	s16, s16, s14
 802bffe:	ed1c 4a03 	vldr	s8, [ip, #-12]
 802c002:	ee30 0a46 	vsub.f32	s0, s0, s12
 802c006:	ee33 3a42 	vsub.f32	s6, s6, s4
 802c00a:	ee38 8a67 	vsub.f32	s16, s16, s15
 802c00e:	ee30 0a66 	vsub.f32	s0, s0, s13
 802c012:	ee23 9ae4 	vnmul.f32	s18, s7, s9
 802c016:	ee63 8a04 	vmul.f32	s17, s6, s8
 802c01a:	ee28 aa24 	vmul.f32	s20, s16, s9
 802c01e:	ee60 9a04 	vmul.f32	s19, s0, s8
 802c022:	ee28 8a04 	vmul.f32	s16, s16, s8
 802c026:	ee20 0a24 	vmul.f32	s0, s0, s9
 802c02a:	ee63 3a84 	vmul.f32	s7, s7, s8
 802c02e:	ee39 4a68 	vsub.f32	s8, s18, s17
 802c032:	ee7a 9a29 	vadd.f32	s19, s20, s19
 802c036:	ee14 aa10 	vmov	sl, s8
 802c03a:	ee30 0a48 	vsub.f32	s0, s0, s16
 802c03e:	ee63 4a24 	vmul.f32	s9, s6, s9
 802c042:	ed44 9a02 	vstr	s19, [r4, #-8]
 802c046:	ee73 3ae4 	vsub.f32	s7, s7, s9
 802c04a:	ed04 0a01 	vstr	s0, [r4, #-4]
 802c04e:	f846 a908 	str.w	sl, [r6], #-8
 802c052:	ee35 6a46 	vsub.f32	s12, s10, s12
 802c056:	ee35 7a87 	vadd.f32	s14, s11, s14
 802c05a:	edc6 3a01 	vstr	s7, [r6, #4]
 802c05e:	ee76 6a86 	vadd.f32	s13, s13, s12
 802c062:	ee77 7a67 	vsub.f32	s15, s14, s15
 802c066:	ed1e 6a05 	vldr	s12, [lr, #-20]	; 0xffffffec
 802c06a:	ed1e 7a06 	vldr	s14, [lr, #-24]	; 0xffffffe8
 802c06e:	ee67 5a86 	vmul.f32	s11, s15, s12
 802c072:	ee26 5a87 	vmul.f32	s10, s13, s14
 802c076:	ee72 2a62 	vsub.f32	s5, s4, s5
 802c07a:	ee30 1ac1 	vsub.f32	s2, s1, s2
 802c07e:	ee72 2ae1 	vsub.f32	s5, s5, s3
 802c082:	ee75 5a25 	vadd.f32	s11, s10, s11
 802c086:	ee62 0a86 	vmul.f32	s1, s5, s12
 802c08a:	ee66 6a86 	vmul.f32	s13, s13, s12
 802c08e:	ee67 7a87 	vmul.f32	s15, s15, s14
 802c092:	ee21 6a06 	vmul.f32	s12, s2, s12
 802c096:	ee62 2a87 	vmul.f32	s5, s5, s14
 802c09a:	ee21 1a07 	vmul.f32	s2, s2, s14
 802c09e:	ee15 aa90 	vmov	sl, s11
 802c0a2:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802c0a6:	f840 ab08 	str.w	sl, [r0], #8
 802c0aa:	ee30 1ac1 	vsub.f32	s2, s1, s2
 802c0ae:	ee76 2a22 	vadd.f32	s5, s12, s5
 802c0b2:	f1b9 0901 	subs.w	r9, r9, #1
 802c0b6:	ed40 7a01 	vstr	s15, [r0, #-4]
 802c0ba:	f105 0508 	add.w	r5, r5, #8
 802c0be:	ed83 1a02 	vstr	s2, [r3, #8]
 802c0c2:	edc3 2a01 	vstr	s5, [r3, #4]
 802c0c6:	f108 0808 	add.w	r8, r8, #8
 802c0ca:	f1a2 0208 	sub.w	r2, r2, #8
 802c0ce:	f10c 0c10 	add.w	ip, ip, #16
 802c0d2:	f104 0408 	add.w	r4, r4, #8
 802c0d6:	f10e 0e18 	add.w	lr, lr, #24
 802c0da:	f1a3 0308 	sub.w	r3, r3, #8
 802c0de:	f47f aefc 	bne.w	802beda <arm_cfft_radix8by4_f32+0x13e>
 802c0e2:	9908      	ldr	r1, [sp, #32]
 802c0e4:	9802      	ldr	r0, [sp, #8]
 802c0e6:	f8dd a034 	ldr.w	sl, [sp, #52]	; 0x34
 802c0ea:	00cb      	lsls	r3, r1, #3
 802c0ec:	eb01 0241 	add.w	r2, r1, r1, lsl #1
 802c0f0:	eb00 1101 	add.w	r1, r0, r1, lsl #4
 802c0f4:	9102      	str	r1, [sp, #8]
 802c0f6:	9904      	ldr	r1, [sp, #16]
 802c0f8:	4419      	add	r1, r3
 802c0fa:	9104      	str	r1, [sp, #16]
 802c0fc:	9905      	ldr	r1, [sp, #20]
 802c0fe:	4419      	add	r1, r3
 802c100:	9105      	str	r1, [sp, #20]
 802c102:	9907      	ldr	r1, [sp, #28]
 802c104:	449b      	add	fp, r3
 802c106:	4419      	add	r1, r3
 802c108:	449a      	add	sl, r3
 802c10a:	9b06      	ldr	r3, [sp, #24]
 802c10c:	9107      	str	r1, [sp, #28]
 802c10e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 802c112:	9306      	str	r3, [sp, #24]
 802c114:	9a04      	ldr	r2, [sp, #16]
 802c116:	9807      	ldr	r0, [sp, #28]
 802c118:	edd2 3a00 	vldr	s7, [r2]
 802c11c:	ed90 4a00 	vldr	s8, [r0]
 802c120:	eddb 7a00 	vldr	s15, [fp]
 802c124:	ed9a 3a00 	vldr	s6, [sl]
 802c128:	edd2 4a01 	vldr	s9, [r2, #4]
 802c12c:	ed90 7a01 	vldr	s14, [r0, #4]
 802c130:	ed9b 2a01 	vldr	s4, [fp, #4]
 802c134:	edda 5a01 	vldr	s11, [sl, #4]
 802c138:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 802c13c:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 802c13e:	ee73 6a84 	vadd.f32	s13, s7, s8
 802c142:	ee34 6a87 	vadd.f32	s12, s9, s14
 802c146:	ee36 5aa7 	vadd.f32	s10, s13, s15
 802c14a:	ee34 7ac7 	vsub.f32	s14, s9, s14
 802c14e:	ee33 5a05 	vadd.f32	s10, s6, s10
 802c152:	ee33 4ac4 	vsub.f32	s8, s7, s8
 802c156:	ed82 5a00 	vstr	s10, [r2]
 802c15a:	ed9b 5a01 	vldr	s10, [fp, #4]
 802c15e:	edda 4a01 	vldr	s9, [sl, #4]
 802c162:	ee36 5a05 	vadd.f32	s10, s12, s10
 802c166:	ee72 3a04 	vadd.f32	s7, s4, s8
 802c16a:	ee35 5a24 	vadd.f32	s10, s10, s9
 802c16e:	ee77 4a67 	vsub.f32	s9, s14, s15
 802c172:	ed82 5a01 	vstr	s10, [r2, #4]
 802c176:	9a05      	ldr	r2, [sp, #20]
 802c178:	ee34 5a83 	vadd.f32	s10, s9, s6
 802c17c:	edd2 1a00 	vldr	s3, [r2]
 802c180:	edd2 2a01 	vldr	s5, [r2, #4]
 802c184:	9a02      	ldr	r2, [sp, #8]
 802c186:	ee73 3ae5 	vsub.f32	s7, s7, s11
 802c18a:	ee36 6a42 	vsub.f32	s12, s12, s4
 802c18e:	ee63 4aa1 	vmul.f32	s9, s7, s3
 802c192:	ee63 3aa2 	vmul.f32	s7, s7, s5
 802c196:	ee65 2a22 	vmul.f32	s5, s10, s5
 802c19a:	ee25 5a21 	vmul.f32	s10, s10, s3
 802c19e:	ee74 2aa2 	vadd.f32	s5, s9, s5
 802c1a2:	ee35 5a63 	vsub.f32	s10, s10, s7
 802c1a6:	ee76 6ae7 	vsub.f32	s13, s13, s15
 802c1aa:	edcb 2a00 	vstr	s5, [fp]
 802c1ae:	ed8b 5a01 	vstr	s10, [fp, #4]
 802c1b2:	edd2 3a01 	vldr	s7, [r2, #4]
 802c1b6:	ed92 5a00 	vldr	s10, [r2]
 802c1ba:	9a06      	ldr	r2, [sp, #24]
 802c1bc:	ee76 6ac3 	vsub.f32	s13, s13, s6
 802c1c0:	ee36 6a65 	vsub.f32	s12, s12, s11
 802c1c4:	ee66 4a85 	vmul.f32	s9, s13, s10
 802c1c8:	ee26 5a05 	vmul.f32	s10, s12, s10
 802c1cc:	ee66 6aa3 	vmul.f32	s13, s13, s7
 802c1d0:	ee26 6a23 	vmul.f32	s12, s12, s7
 802c1d4:	ee75 6a66 	vsub.f32	s13, s10, s13
 802c1d8:	ee34 6a86 	vadd.f32	s12, s9, s12
 802c1dc:	ee34 4a42 	vsub.f32	s8, s8, s4
 802c1e0:	ee37 7a27 	vadd.f32	s14, s14, s15
 802c1e4:	edc0 6a01 	vstr	s13, [r0, #4]
 802c1e8:	ed80 6a00 	vstr	s12, [r0]
 802c1ec:	ed92 6a01 	vldr	s12, [r2, #4]
 802c1f0:	9803      	ldr	r0, [sp, #12]
 802c1f2:	ee77 7a43 	vsub.f32	s15, s14, s6
 802c1f6:	ee75 5a84 	vadd.f32	s11, s11, s8
 802c1fa:	ed92 7a00 	vldr	s14, [r2]
 802c1fe:	ee65 6a87 	vmul.f32	s13, s11, s14
 802c202:	ee27 7a87 	vmul.f32	s14, s15, s14
 802c206:	ee65 5a86 	vmul.f32	s11, s11, s12
 802c20a:	ee67 7a86 	vmul.f32	s15, s15, s12
 802c20e:	ee77 5a65 	vsub.f32	s11, s14, s11
 802c212:	ee76 7aa7 	vadd.f32	s15, s13, s15
 802c216:	edca 5a01 	vstr	s11, [sl, #4]
 802c21a:	edca 7a00 	vstr	s15, [sl]
 802c21e:	6872      	ldr	r2, [r6, #4]
 802c220:	4621      	mov	r1, r4
 802c222:	2304      	movs	r3, #4
 802c224:	f000 f97a 	bl	802c51c <arm_radix8_butterfly_f32>
 802c228:	9809      	ldr	r0, [sp, #36]	; 0x24
 802c22a:	6872      	ldr	r2, [r6, #4]
 802c22c:	4621      	mov	r1, r4
 802c22e:	2304      	movs	r3, #4
 802c230:	f000 f974 	bl	802c51c <arm_radix8_butterfly_f32>
 802c234:	980a      	ldr	r0, [sp, #40]	; 0x28
 802c236:	6872      	ldr	r2, [r6, #4]
 802c238:	4621      	mov	r1, r4
 802c23a:	2304      	movs	r3, #4
 802c23c:	f000 f96e 	bl	802c51c <arm_radix8_butterfly_f32>
 802c240:	9801      	ldr	r0, [sp, #4]
 802c242:	6872      	ldr	r2, [r6, #4]
 802c244:	4621      	mov	r1, r4
 802c246:	2304      	movs	r3, #4
 802c248:	b00f      	add	sp, #60	; 0x3c
 802c24a:	ecbd 8b0a 	vpop	{d8-d12}
 802c24e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802c252:	f000 b963 	b.w	802c51c <arm_radix8_butterfly_f32>
 802c256:	bf00      	nop

0802c258 <arm_cfft_f32>:
 802c258:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802c25c:	2a01      	cmp	r2, #1
 802c25e:	4606      	mov	r6, r0
 802c260:	4617      	mov	r7, r2
 802c262:	460c      	mov	r4, r1
 802c264:	4698      	mov	r8, r3
 802c266:	8805      	ldrh	r5, [r0, #0]
 802c268:	d054      	beq.n	802c314 <arm_cfft_f32+0xbc>
 802c26a:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 802c26e:	d04c      	beq.n	802c30a <arm_cfft_f32+0xb2>
 802c270:	d916      	bls.n	802c2a0 <arm_cfft_f32+0x48>
 802c272:	f5b5 6f80 	cmp.w	r5, #1024	; 0x400
 802c276:	d01a      	beq.n	802c2ae <arm_cfft_f32+0x56>
 802c278:	d95c      	bls.n	802c334 <arm_cfft_f32+0xdc>
 802c27a:	f5b5 6f00 	cmp.w	r5, #2048	; 0x800
 802c27e:	d044      	beq.n	802c30a <arm_cfft_f32+0xb2>
 802c280:	f5b5 5f80 	cmp.w	r5, #4096	; 0x1000
 802c284:	d105      	bne.n	802c292 <arm_cfft_f32+0x3a>
 802c286:	4620      	mov	r0, r4
 802c288:	4629      	mov	r1, r5
 802c28a:	6872      	ldr	r2, [r6, #4]
 802c28c:	2301      	movs	r3, #1
 802c28e:	f000 f945 	bl	802c51c <arm_radix8_butterfly_f32>
 802c292:	f1b8 0f00 	cmp.w	r8, #0
 802c296:	d111      	bne.n	802c2bc <arm_cfft_f32+0x64>
 802c298:	2f01      	cmp	r7, #1
 802c29a:	d016      	beq.n	802c2ca <arm_cfft_f32+0x72>
 802c29c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802c2a0:	2d20      	cmp	r5, #32
 802c2a2:	d032      	beq.n	802c30a <arm_cfft_f32+0xb2>
 802c2a4:	d94a      	bls.n	802c33c <arm_cfft_f32+0xe4>
 802c2a6:	2d40      	cmp	r5, #64	; 0x40
 802c2a8:	d0ed      	beq.n	802c286 <arm_cfft_f32+0x2e>
 802c2aa:	2d80      	cmp	r5, #128	; 0x80
 802c2ac:	d1f1      	bne.n	802c292 <arm_cfft_f32+0x3a>
 802c2ae:	4630      	mov	r0, r6
 802c2b0:	4621      	mov	r1, r4
 802c2b2:	f7ff fca1 	bl	802bbf8 <arm_cfft_radix8by2_f32>
 802c2b6:	f1b8 0f00 	cmp.w	r8, #0
 802c2ba:	d0ed      	beq.n	802c298 <arm_cfft_f32+0x40>
 802c2bc:	4620      	mov	r0, r4
 802c2be:	89b1      	ldrh	r1, [r6, #12]
 802c2c0:	68b2      	ldr	r2, [r6, #8]
 802c2c2:	f7d3 ff95 	bl	80001f0 <arm_bitreversal_32>
 802c2c6:	2f01      	cmp	r7, #1
 802c2c8:	d1e8      	bne.n	802c29c <arm_cfft_f32+0x44>
 802c2ca:	ee07 5a90 	vmov	s15, r5
 802c2ce:	eef8 6a67 	vcvt.f32.u32	s13, s15
 802c2d2:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 802c2d6:	eec7 6aa6 	vdiv.f32	s13, s15, s13
 802c2da:	2d00      	cmp	r5, #0
 802c2dc:	d0de      	beq.n	802c29c <arm_cfft_f32+0x44>
 802c2de:	f104 0108 	add.w	r1, r4, #8
 802c2e2:	2300      	movs	r3, #0
 802c2e4:	3301      	adds	r3, #1
 802c2e6:	429d      	cmp	r5, r3
 802c2e8:	f101 0108 	add.w	r1, r1, #8
 802c2ec:	ed11 7a04 	vldr	s14, [r1, #-16]
 802c2f0:	ed51 7a03 	vldr	s15, [r1, #-12]
 802c2f4:	ee27 7a26 	vmul.f32	s14, s14, s13
 802c2f8:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 802c2fc:	ed01 7a04 	vstr	s14, [r1, #-16]
 802c300:	ed41 7a03 	vstr	s15, [r1, #-12]
 802c304:	d1ee      	bne.n	802c2e4 <arm_cfft_f32+0x8c>
 802c306:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802c30a:	4630      	mov	r0, r6
 802c30c:	4621      	mov	r1, r4
 802c30e:	f7ff fd45 	bl	802bd9c <arm_cfft_radix8by4_f32>
 802c312:	e7be      	b.n	802c292 <arm_cfft_f32+0x3a>
 802c314:	b1ad      	cbz	r5, 802c342 <arm_cfft_f32+0xea>
 802c316:	f101 030c 	add.w	r3, r1, #12
 802c31a:	2200      	movs	r2, #0
 802c31c:	ed53 7a02 	vldr	s15, [r3, #-8]
 802c320:	3201      	adds	r2, #1
 802c322:	eef1 7a67 	vneg.f32	s15, s15
 802c326:	4295      	cmp	r5, r2
 802c328:	ed43 7a02 	vstr	s15, [r3, #-8]
 802c32c:	f103 0308 	add.w	r3, r3, #8
 802c330:	d1f4      	bne.n	802c31c <arm_cfft_f32+0xc4>
 802c332:	e79a      	b.n	802c26a <arm_cfft_f32+0x12>
 802c334:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 802c338:	d0a5      	beq.n	802c286 <arm_cfft_f32+0x2e>
 802c33a:	e7aa      	b.n	802c292 <arm_cfft_f32+0x3a>
 802c33c:	2d10      	cmp	r5, #16
 802c33e:	d0b6      	beq.n	802c2ae <arm_cfft_f32+0x56>
 802c340:	e7a7      	b.n	802c292 <arm_cfft_f32+0x3a>
 802c342:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 802c346:	d894      	bhi.n	802c272 <arm_cfft_f32+0x1a>
 802c348:	e7aa      	b.n	802c2a0 <arm_cfft_f32+0x48>
 802c34a:	bf00      	nop

0802c34c <arm_cmplx_mag_f32>:
 802c34c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802c350:	ea5f 0892 	movs.w	r8, r2, lsr #2
 802c354:	b084      	sub	sp, #16
 802c356:	d07f      	beq.n	802c458 <arm_cmplx_mag_f32+0x10c>
 802c358:	2700      	movs	r7, #0
 802c35a:	f100 0420 	add.w	r4, r0, #32
 802c35e:	f101 0510 	add.w	r5, r1, #16
 802c362:	4646      	mov	r6, r8
 802c364:	e05a      	b.n	802c41c <arm_cmplx_mag_f32+0xd0>
 802c366:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802c36a:	eeb4 0a40 	vcmp.f32	s0, s0
 802c36e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802c372:	f040 80a4 	bne.w	802c4be <arm_cmplx_mag_f32+0x172>
 802c376:	ed05 0a04 	vstr	s0, [r5, #-16]
 802c37a:	ed54 7a06 	vldr	s15, [r4, #-24]	; 0xffffffe8
 802c37e:	ed14 0a05 	vldr	s0, [r4, #-20]	; 0xffffffec
 802c382:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802c386:	ee20 0a00 	vmul.f32	s0, s0, s0
 802c38a:	ee77 7a80 	vadd.f32	s15, s15, s0
 802c38e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802c392:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802c396:	f2c0 808f 	blt.w	802c4b8 <arm_cmplx_mag_f32+0x16c>
 802c39a:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802c39e:	eeb4 0a40 	vcmp.f32	s0, s0
 802c3a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802c3a6:	f040 80af 	bne.w	802c508 <arm_cmplx_mag_f32+0x1bc>
 802c3aa:	ed05 0a03 	vstr	s0, [r5, #-12]
 802c3ae:	ed54 7a04 	vldr	s15, [r4, #-16]
 802c3b2:	ed14 0a03 	vldr	s0, [r4, #-12]
 802c3b6:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802c3ba:	ee20 0a00 	vmul.f32	s0, s0, s0
 802c3be:	ee77 7a80 	vadd.f32	s15, s15, s0
 802c3c2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802c3c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802c3ca:	db72      	blt.n	802c4b2 <arm_cmplx_mag_f32+0x166>
 802c3cc:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802c3d0:	eeb4 0a40 	vcmp.f32	s0, s0
 802c3d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802c3d8:	f040 808c 	bne.w	802c4f4 <arm_cmplx_mag_f32+0x1a8>
 802c3dc:	ed05 0a02 	vstr	s0, [r5, #-8]
 802c3e0:	ed54 7a02 	vldr	s15, [r4, #-8]
 802c3e4:	ed14 0a01 	vldr	s0, [r4, #-4]
 802c3e8:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802c3ec:	ee20 0a00 	vmul.f32	s0, s0, s0
 802c3f0:	ee77 7a80 	vadd.f32	s15, s15, s0
 802c3f4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802c3f8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802c3fc:	db20      	blt.n	802c440 <arm_cmplx_mag_f32+0xf4>
 802c3fe:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802c402:	eeb4 0a40 	vcmp.f32	s0, s0
 802c406:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802c40a:	d169      	bne.n	802c4e0 <arm_cmplx_mag_f32+0x194>
 802c40c:	3e01      	subs	r6, #1
 802c40e:	ed05 0a01 	vstr	s0, [r5, #-4]
 802c412:	f104 0420 	add.w	r4, r4, #32
 802c416:	f105 0510 	add.w	r5, r5, #16
 802c41a:	d019      	beq.n	802c450 <arm_cmplx_mag_f32+0x104>
 802c41c:	ed54 7a08 	vldr	s15, [r4, #-32]	; 0xffffffe0
 802c420:	ed14 0a07 	vldr	s0, [r4, #-28]	; 0xffffffe4
 802c424:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802c428:	ee20 0a00 	vmul.f32	s0, s0, s0
 802c42c:	ee77 7a80 	vadd.f32	s15, s15, s0
 802c430:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802c434:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802c438:	da95      	bge.n	802c366 <arm_cmplx_mag_f32+0x1a>
 802c43a:	f845 7c10 	str.w	r7, [r5, #-16]
 802c43e:	e79c      	b.n	802c37a <arm_cmplx_mag_f32+0x2e>
 802c440:	3e01      	subs	r6, #1
 802c442:	f845 7c04 	str.w	r7, [r5, #-4]
 802c446:	f104 0420 	add.w	r4, r4, #32
 802c44a:	f105 0510 	add.w	r5, r5, #16
 802c44e:	d1e5      	bne.n	802c41c <arm_cmplx_mag_f32+0xd0>
 802c450:	eb00 1048 	add.w	r0, r0, r8, lsl #5
 802c454:	eb01 1108 	add.w	r1, r1, r8, lsl #4
 802c458:	f012 0503 	ands.w	r5, r2, #3
 802c45c:	d026      	beq.n	802c4ac <arm_cmplx_mag_f32+0x160>
 802c45e:	2600      	movs	r6, #0
 802c460:	f100 0408 	add.w	r4, r0, #8
 802c464:	e00c      	b.n	802c480 <arm_cmplx_mag_f32+0x134>
 802c466:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802c46a:	eeb4 0a40 	vcmp.f32	s0, s0
 802c46e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802c472:	d12e      	bne.n	802c4d2 <arm_cmplx_mag_f32+0x186>
 802c474:	3d01      	subs	r5, #1
 802c476:	ed01 0a01 	vstr	s0, [r1, #-4]
 802c47a:	f104 0408 	add.w	r4, r4, #8
 802c47e:	d015      	beq.n	802c4ac <arm_cmplx_mag_f32+0x160>
 802c480:	ed54 7a02 	vldr	s15, [r4, #-8]
 802c484:	ed14 0a01 	vldr	s0, [r4, #-4]
 802c488:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802c48c:	ee20 0a00 	vmul.f32	s0, s0, s0
 802c490:	3104      	adds	r1, #4
 802c492:	ee77 7a80 	vadd.f32	s15, s15, s0
 802c496:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802c49a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802c49e:	dae2      	bge.n	802c466 <arm_cmplx_mag_f32+0x11a>
 802c4a0:	3d01      	subs	r5, #1
 802c4a2:	f841 6c04 	str.w	r6, [r1, #-4]
 802c4a6:	f104 0408 	add.w	r4, r4, #8
 802c4aa:	d1e9      	bne.n	802c480 <arm_cmplx_mag_f32+0x134>
 802c4ac:	b004      	add	sp, #16
 802c4ae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802c4b2:	f845 7c08 	str.w	r7, [r5, #-8]
 802c4b6:	e793      	b.n	802c3e0 <arm_cmplx_mag_f32+0x94>
 802c4b8:	f845 7c0c 	str.w	r7, [r5, #-12]
 802c4bc:	e777      	b.n	802c3ae <arm_cmplx_mag_f32+0x62>
 802c4be:	eeb0 0a67 	vmov.f32	s0, s15
 802c4c2:	9203      	str	r2, [sp, #12]
 802c4c4:	9102      	str	r1, [sp, #8]
 802c4c6:	9001      	str	r0, [sp, #4]
 802c4c8:	f000 fb38 	bl	802cb3c <sqrtf>
 802c4cc:	a801      	add	r0, sp, #4
 802c4ce:	c807      	ldmia	r0, {r0, r1, r2}
 802c4d0:	e751      	b.n	802c376 <arm_cmplx_mag_f32+0x2a>
 802c4d2:	eeb0 0a67 	vmov.f32	s0, s15
 802c4d6:	9101      	str	r1, [sp, #4]
 802c4d8:	f000 fb30 	bl	802cb3c <sqrtf>
 802c4dc:	9901      	ldr	r1, [sp, #4]
 802c4de:	e7c9      	b.n	802c474 <arm_cmplx_mag_f32+0x128>
 802c4e0:	eeb0 0a67 	vmov.f32	s0, s15
 802c4e4:	9203      	str	r2, [sp, #12]
 802c4e6:	9102      	str	r1, [sp, #8]
 802c4e8:	9001      	str	r0, [sp, #4]
 802c4ea:	f000 fb27 	bl	802cb3c <sqrtf>
 802c4ee:	a801      	add	r0, sp, #4
 802c4f0:	c807      	ldmia	r0, {r0, r1, r2}
 802c4f2:	e78b      	b.n	802c40c <arm_cmplx_mag_f32+0xc0>
 802c4f4:	eeb0 0a67 	vmov.f32	s0, s15
 802c4f8:	9203      	str	r2, [sp, #12]
 802c4fa:	9102      	str	r1, [sp, #8]
 802c4fc:	9001      	str	r0, [sp, #4]
 802c4fe:	f000 fb1d 	bl	802cb3c <sqrtf>
 802c502:	a801      	add	r0, sp, #4
 802c504:	c807      	ldmia	r0, {r0, r1, r2}
 802c506:	e769      	b.n	802c3dc <arm_cmplx_mag_f32+0x90>
 802c508:	eeb0 0a67 	vmov.f32	s0, s15
 802c50c:	9203      	str	r2, [sp, #12]
 802c50e:	9102      	str	r1, [sp, #8]
 802c510:	9001      	str	r0, [sp, #4]
 802c512:	f000 fb13 	bl	802cb3c <sqrtf>
 802c516:	a801      	add	r0, sp, #4
 802c518:	c807      	ldmia	r0, {r0, r1, r2}
 802c51a:	e746      	b.n	802c3aa <arm_cmplx_mag_f32+0x5e>

0802c51c <arm_radix8_butterfly_f32>:
 802c51c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802c520:	ed2d 8b10 	vpush	{d8-d15}
 802c524:	b09d      	sub	sp, #116	; 0x74
 802c526:	461c      	mov	r4, r3
 802c528:	ed9f bac8 	vldr	s22, [pc, #800]	; 802c84c <arm_radix8_butterfly_f32+0x330>
 802c52c:	921a      	str	r2, [sp, #104]	; 0x68
 802c52e:	1d03      	adds	r3, r0, #4
 802c530:	4682      	mov	sl, r0
 802c532:	4689      	mov	r9, r1
 802c534:	468b      	mov	fp, r1
 802c536:	931b      	str	r3, [sp, #108]	; 0x6c
 802c538:	9400      	str	r4, [sp, #0]
 802c53a:	469e      	mov	lr, r3
 802c53c:	ea4f 03db 	mov.w	r3, fp, lsr #3
 802c540:	005a      	lsls	r2, r3, #1
 802c542:	18d6      	adds	r6, r2, r3
 802c544:	18f5      	adds	r5, r6, r3
 802c546:	9203      	str	r2, [sp, #12]
 802c548:	195a      	adds	r2, r3, r5
 802c54a:	18d0      	adds	r0, r2, r3
 802c54c:	00df      	lsls	r7, r3, #3
 802c54e:	1819      	adds	r1, r3, r0
 802c550:	463c      	mov	r4, r7
 802c552:	9701      	str	r7, [sp, #4]
 802c554:	4457      	add	r7, sl
 802c556:	930c      	str	r3, [sp, #48]	; 0x30
 802c558:	eb0a 02c2 	add.w	r2, sl, r2, lsl #3
 802c55c:	011b      	lsls	r3, r3, #4
 802c55e:	eb0a 01c1 	add.w	r1, sl, r1, lsl #3
 802c562:	eb07 0c04 	add.w	ip, r7, r4
 802c566:	9c00      	ldr	r4, [sp, #0]
 802c568:	9302      	str	r3, [sp, #8]
 802c56a:	eb0a 06c6 	add.w	r6, sl, r6, lsl #3
 802c56e:	eb0a 05c5 	add.w	r5, sl, r5, lsl #3
 802c572:	3204      	adds	r2, #4
 802c574:	3104      	adds	r1, #4
 802c576:	eb0a 00c0 	add.w	r0, sl, r0, lsl #3
 802c57a:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 802c57e:	f04f 0800 	mov.w	r8, #0
 802c582:	eddc 7a00 	vldr	s15, [ip]
 802c586:	edd7 6a00 	vldr	s13, [r7]
 802c58a:	edd6 3a00 	vldr	s7, [r6]
 802c58e:	ed5e aa01 	vldr	s21, [lr, #-4]
 802c592:	edd5 4a00 	vldr	s9, [r5]
 802c596:	ed90 2a00 	vldr	s4, [r0]
 802c59a:	ed12 7a01 	vldr	s14, [r2, #-4]
 802c59e:	ed51 0a01 	vldr	s1, [r1, #-4]
 802c5a2:	ee77 8a82 	vadd.f32	s17, s15, s4
 802c5a6:	ee33 4aa0 	vadd.f32	s8, s7, s1
 802c5aa:	ee76 1a87 	vadd.f32	s3, s13, s14
 802c5ae:	ee3a 3aa4 	vadd.f32	s6, s21, s9
 802c5b2:	ee31 6a84 	vadd.f32	s12, s3, s8
 802c5b6:	ee33 5a28 	vadd.f32	s10, s6, s17
 802c5ba:	ee36 7ac7 	vsub.f32	s14, s13, s14
 802c5be:	ee75 6a06 	vadd.f32	s13, s10, s12
 802c5c2:	ee35 5a46 	vsub.f32	s10, s10, s12
 802c5c6:	ed4e 6a01 	vstr	s13, [lr, #-4]
 802c5ca:	ed85 5a00 	vstr	s10, [r5]
 802c5ce:	ed96 1a01 	vldr	s2, [r6, #4]
 802c5d2:	edd7 5a01 	vldr	s11, [r7, #4]
 802c5d6:	ed92 aa00 	vldr	s20, [r2]
 802c5da:	ed91 6a00 	vldr	s12, [r1]
 802c5de:	ed9e 9a00 	vldr	s18, [lr]
 802c5e2:	ed95 5a01 	vldr	s10, [r5, #4]
 802c5e6:	eddc 6a01 	vldr	s13, [ip, #4]
 802c5ea:	edd0 9a01 	vldr	s19, [r0, #4]
 802c5ee:	ee73 0ae0 	vsub.f32	s1, s7, s1
 802c5f2:	ee71 2a46 	vsub.f32	s5, s2, s12
 802c5f6:	ee75 3aca 	vsub.f32	s7, s11, s20
 802c5fa:	ee37 0a60 	vsub.f32	s0, s14, s1
 802c5fe:	ee33 8aa2 	vadd.f32	s16, s7, s5
 802c602:	ee37 7a20 	vadd.f32	s14, s14, s1
 802c606:	ee73 2ae2 	vsub.f32	s5, s7, s5
 802c60a:	ee37 2ac2 	vsub.f32	s4, s15, s4
 802c60e:	ee79 3a05 	vadd.f32	s7, s18, s10
 802c612:	ee60 0a0b 	vmul.f32	s1, s0, s22
 802c616:	ee39 5a45 	vsub.f32	s10, s18, s10
 802c61a:	ee7a 4ae4 	vsub.f32	s9, s21, s9
 802c61e:	ee36 9aa9 	vadd.f32	s18, s13, s19
 802c622:	ee75 5a8a 	vadd.f32	s11, s11, s20
 802c626:	ee31 6a06 	vadd.f32	s12, s2, s12
 802c62a:	ee76 6ae9 	vsub.f32	s13, s13, s19
 802c62e:	ee28 8a0b 	vmul.f32	s16, s16, s22
 802c632:	ee62 2a8b 	vmul.f32	s5, s5, s22
 802c636:	ee67 7a0b 	vmul.f32	s15, s14, s22
 802c63a:	ee33 3a68 	vsub.f32	s6, s6, s17
 802c63e:	ee36 0a88 	vadd.f32	s0, s13, s16
 802c642:	ee75 8a86 	vadd.f32	s17, s11, s12
 802c646:	ee36 7ac8 	vsub.f32	s14, s13, s16
 802c64a:	ee71 1ac4 	vsub.f32	s3, s3, s8
 802c64e:	ee75 6a62 	vsub.f32	s13, s10, s5
 802c652:	ee33 4ac9 	vsub.f32	s8, s7, s18
 802c656:	ee35 6ac6 	vsub.f32	s12, s11, s12
 802c65a:	ee33 1a89 	vadd.f32	s2, s7, s18
 802c65e:	ee74 5ae0 	vsub.f32	s11, s9, s1
 802c662:	ee74 3aa0 	vadd.f32	s7, s9, s1
 802c666:	ee75 4a22 	vadd.f32	s9, s10, s5
 802c66a:	ee32 5a27 	vadd.f32	s10, s4, s15
 802c66e:	ee72 7a67 	vsub.f32	s15, s4, s15
 802c672:	ee33 8a06 	vadd.f32	s16, s6, s12
 802c676:	ee75 2a87 	vadd.f32	s5, s11, s14
 802c67a:	ee31 9a28 	vadd.f32	s18, s2, s17
 802c67e:	ee33 6a46 	vsub.f32	s12, s6, s12
 802c682:	ee74 0a61 	vsub.f32	s1, s8, s3
 802c686:	ee33 2a80 	vadd.f32	s4, s7, s0
 802c68a:	ee35 7ac7 	vsub.f32	s14, s11, s14
 802c68e:	ee34 3ac5 	vsub.f32	s6, s9, s10
 802c692:	ee76 5ae7 	vsub.f32	s11, s13, s15
 802c696:	ee31 1a68 	vsub.f32	s2, s2, s17
 802c69a:	ee34 4a21 	vadd.f32	s8, s8, s3
 802c69e:	ee73 3ac0 	vsub.f32	s7, s7, s0
 802c6a2:	ee74 4a85 	vadd.f32	s9, s9, s10
 802c6a6:	ee76 6aa7 	vadd.f32	s13, s13, s15
 802c6aa:	44d8      	add	r8, fp
 802c6ac:	45c1      	cmp	r9, r8
 802c6ae:	ed8e 9a00 	vstr	s18, [lr]
 802c6b2:	ed85 1a01 	vstr	s2, [r5, #4]
 802c6b6:	449e      	add	lr, r3
 802c6b8:	ed8c 8a00 	vstr	s16, [ip]
 802c6bc:	441d      	add	r5, r3
 802c6be:	ed80 6a00 	vstr	s12, [r0]
 802c6c2:	edcc 0a01 	vstr	s1, [ip, #4]
 802c6c6:	ed80 4a01 	vstr	s8, [r0, #4]
 802c6ca:	449c      	add	ip, r3
 802c6cc:	ed87 2a00 	vstr	s4, [r7]
 802c6d0:	4418      	add	r0, r3
 802c6d2:	ed41 3a01 	vstr	s7, [r1, #-4]
 802c6d6:	ed42 2a01 	vstr	s5, [r2, #-4]
 802c6da:	ed86 7a00 	vstr	s14, [r6]
 802c6de:	ed87 3a01 	vstr	s6, [r7, #4]
 802c6e2:	edc1 4a00 	vstr	s9, [r1]
 802c6e6:	441f      	add	r7, r3
 802c6e8:	edc2 5a00 	vstr	s11, [r2]
 802c6ec:	4419      	add	r1, r3
 802c6ee:	edc6 6a01 	vstr	s13, [r6, #4]
 802c6f2:	441a      	add	r2, r3
 802c6f4:	441e      	add	r6, r3
 802c6f6:	f63f af44 	bhi.w	802c582 <arm_radix8_butterfly_f32+0x66>
 802c6fa:	990c      	ldr	r1, [sp, #48]	; 0x30
 802c6fc:	2907      	cmp	r1, #7
 802c6fe:	4620      	mov	r0, r4
 802c700:	f240 81e9 	bls.w	802cad6 <arm_radix8_butterfly_f32+0x5ba>
 802c704:	eb04 0744 	add.w	r7, r4, r4, lsl #1
 802c708:	193e      	adds	r6, r7, r4
 802c70a:	1935      	adds	r5, r6, r4
 802c70c:	9c03      	ldr	r4, [sp, #12]
 802c70e:	9000      	str	r0, [sp, #0]
 802c710:	4622      	mov	r2, r4
 802c712:	3201      	adds	r2, #1
 802c714:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 802c718:	9900      	ldr	r1, [sp, #0]
 802c71a:	1828      	adds	r0, r5, r0
 802c71c:	eb00 0e01 	add.w	lr, r0, r1
 802c720:	990c      	ldr	r1, [sp, #48]	; 0x30
 802c722:	440a      	add	r2, r1
 802c724:	eb04 0c01 	add.w	ip, r4, r1
 802c728:	ea4f 04ce 	mov.w	r4, lr, lsl #3
 802c72c:	eb0a 0ec2 	add.w	lr, sl, r2, lsl #3
 802c730:	9a00      	ldr	r2, [sp, #0]
 802c732:	940f      	str	r4, [sp, #60]	; 0x3c
 802c734:	00ed      	lsls	r5, r5, #3
 802c736:	9511      	str	r5, [sp, #68]	; 0x44
 802c738:	00d5      	lsls	r5, r2, #3
 802c73a:	950d      	str	r5, [sp, #52]	; 0x34
 802c73c:	9d01      	ldr	r5, [sp, #4]
 802c73e:	3508      	adds	r5, #8
 802c740:	9516      	str	r5, [sp, #88]	; 0x58
 802c742:	9d02      	ldr	r5, [sp, #8]
 802c744:	3508      	adds	r5, #8
 802c746:	0114      	lsls	r4, r2, #4
 802c748:	9517      	str	r5, [sp, #92]	; 0x5c
 802c74a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802c74c:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 802c74e:	940e      	str	r4, [sp, #56]	; 0x38
 802c750:	00c0      	lsls	r0, r0, #3
 802c752:	9010      	str	r0, [sp, #64]	; 0x40
 802c754:	18aa      	adds	r2, r5, r2
 802c756:	9207      	str	r2, [sp, #28]
 802c758:	9a10      	ldr	r2, [sp, #64]	; 0x40
 802c75a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 802c75c:	18aa      	adds	r2, r5, r2
 802c75e:	9208      	str	r2, [sp, #32]
 802c760:	9a11      	ldr	r2, [sp, #68]	; 0x44
 802c762:	18aa      	adds	r2, r5, r2
 802c764:	9209      	str	r2, [sp, #36]	; 0x24
 802c766:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 802c76a:	f10e 0204 	add.w	r2, lr, #4
 802c76e:	920a      	str	r2, [sp, #40]	; 0x28
 802c770:	00c9      	lsls	r1, r1, #3
 802c772:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 802c774:	310c      	adds	r1, #12
 802c776:	00f6      	lsls	r6, r6, #3
 802c778:	ea4f 00cc 	mov.w	r0, ip, lsl #3
 802c77c:	9114      	str	r1, [sp, #80]	; 0x50
 802c77e:	18a9      	adds	r1, r5, r2
 802c780:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 802c782:	9612      	str	r6, [sp, #72]	; 0x48
 802c784:	00ff      	lsls	r7, r7, #3
 802c786:	19ae      	adds	r6, r5, r6
 802c788:	3008      	adds	r0, #8
 802c78a:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
 802c78e:	9606      	str	r6, [sp, #24]
 802c790:	9019      	str	r0, [sp, #100]	; 0x64
 802c792:	18aa      	adds	r2, r5, r2
 802c794:	0164      	lsls	r4, r4, #5
 802c796:	19ee      	adds	r6, r5, r7
 802c798:	f10c 000c 	add.w	r0, ip, #12
 802c79c:	9713      	str	r7, [sp, #76]	; 0x4c
 802c79e:	9604      	str	r6, [sp, #16]
 802c7a0:	9015      	str	r0, [sp, #84]	; 0x54
 802c7a2:	9103      	str	r1, [sp, #12]
 802c7a4:	9205      	str	r2, [sp, #20]
 802c7a6:	f104 0208 	add.w	r2, r4, #8
 802c7aa:	9218      	str	r2, [sp, #96]	; 0x60
 802c7ac:	f04f 0801 	mov.w	r8, #1
 802c7b0:	2200      	movs	r2, #0
 802c7b2:	f102 0108 	add.w	r1, r2, #8
 802c7b6:	460f      	mov	r7, r1
 802c7b8:	910b      	str	r1, [sp, #44]	; 0x2c
 802c7ba:	9918      	ldr	r1, [sp, #96]	; 0x60
 802c7bc:	188e      	adds	r6, r1, r2
 802c7be:	9916      	ldr	r1, [sp, #88]	; 0x58
 802c7c0:	188d      	adds	r5, r1, r2
 802c7c2:	9917      	ldr	r1, [sp, #92]	; 0x5c
 802c7c4:	188c      	adds	r4, r1, r2
 802c7c6:	9919      	ldr	r1, [sp, #100]	; 0x64
 802c7c8:	1888      	adds	r0, r1, r2
 802c7ca:	9914      	ldr	r1, [sp, #80]	; 0x50
 802c7cc:	eb01 0c02 	add.w	ip, r1, r2
 802c7d0:	9915      	ldr	r1, [sp, #84]	; 0x54
 802c7d2:	440a      	add	r2, r1
 802c7d4:	9903      	ldr	r1, [sp, #12]
 802c7d6:	edd1 fa00 	vldr	s31, [r1]
 802c7da:	9905      	ldr	r1, [sp, #20]
 802c7dc:	ed91 fa00 	vldr	s30, [r1]
 802c7e0:	9904      	ldr	r1, [sp, #16]
 802c7e2:	edd1 ea00 	vldr	s29, [r1]
 802c7e6:	9906      	ldr	r1, [sp, #24]
 802c7e8:	ed91 ea00 	vldr	s28, [r1]
 802c7ec:	9909      	ldr	r1, [sp, #36]	; 0x24
 802c7ee:	edd1 da00 	vldr	s27, [r1]
 802c7f2:	9908      	ldr	r1, [sp, #32]
 802c7f4:	ed91 da00 	vldr	s26, [r1]
 802c7f8:	9907      	ldr	r1, [sp, #28]
 802c7fa:	edd1 ca00 	vldr	s25, [r1]
 802c7fe:	9903      	ldr	r1, [sp, #12]
 802c800:	ed91 ca01 	vldr	s24, [r1, #4]
 802c804:	9905      	ldr	r1, [sp, #20]
 802c806:	edd1 ba01 	vldr	s23, [r1, #4]
 802c80a:	9904      	ldr	r1, [sp, #16]
 802c80c:	edd1 aa01 	vldr	s21, [r1, #4]
 802c810:	9906      	ldr	r1, [sp, #24]
 802c812:	ed91 aa01 	vldr	s20, [r1, #4]
 802c816:	9909      	ldr	r1, [sp, #36]	; 0x24
 802c818:	edd1 7a01 	vldr	s15, [r1, #4]
 802c81c:	9908      	ldr	r1, [sp, #32]
 802c81e:	edcd 7a00 	vstr	s15, [sp]
 802c822:	edd1 7a01 	vldr	s15, [r1, #4]
 802c826:	9907      	ldr	r1, [sp, #28]
 802c828:	edcd 7a01 	vstr	s15, [sp, #4]
 802c82c:	edd1 7a01 	vldr	s15, [r1, #4]
 802c830:	eb0a 0e07 	add.w	lr, sl, r7
 802c834:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 802c836:	edcd 7a02 	vstr	s15, [sp, #8]
 802c83a:	eb0c 010a 	add.w	r1, ip, sl
 802c83e:	4456      	add	r6, sl
 802c840:	4455      	add	r5, sl
 802c842:	4454      	add	r4, sl
 802c844:	4450      	add	r0, sl
 802c846:	4452      	add	r2, sl
 802c848:	46c4      	mov	ip, r8
 802c84a:	e001      	b.n	802c850 <arm_radix8_butterfly_f32+0x334>
 802c84c:	3f3504f3 	.word	0x3f3504f3
 802c850:	ed96 5a00 	vldr	s10, [r6]
 802c854:	ed52 9a01 	vldr	s19, [r2, #-4]
 802c858:	ed11 6a01 	vldr	s12, [r1, #-4]
 802c85c:	edd0 7a00 	vldr	s15, [r0]
 802c860:	ed17 7a01 	vldr	s14, [r7, #-4]
 802c864:	edde 3a00 	vldr	s7, [lr]
 802c868:	ed94 3a00 	vldr	s6, [r4]
 802c86c:	ed95 2a00 	vldr	s4, [r5]
 802c870:	ed9e 0a01 	vldr	s0, [lr, #4]
 802c874:	ee33 8a85 	vadd.f32	s16, s7, s10
 802c878:	ee32 1a06 	vadd.f32	s2, s4, s12
 802c87c:	ee33 4a29 	vadd.f32	s8, s6, s19
 802c880:	ee77 4a87 	vadd.f32	s9, s15, s14
 802c884:	ee78 1a04 	vadd.f32	s3, s16, s8
 802c888:	ee71 6a24 	vadd.f32	s13, s2, s9
 802c88c:	ee32 2a46 	vsub.f32	s4, s4, s12
 802c890:	ee31 6aa6 	vadd.f32	s12, s3, s13
 802c894:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802c898:	ed8e 6a00 	vstr	s12, [lr]
 802c89c:	edd0 8a01 	vldr	s17, [r0, #4]
 802c8a0:	ed95 9a01 	vldr	s18, [r5, #4]
 802c8a4:	edd1 2a00 	vldr	s5, [r1]
 802c8a8:	ed97 7a00 	vldr	s14, [r7]
 802c8ac:	edd4 0a01 	vldr	s1, [r4, #4]
 802c8b0:	ed96 6a01 	vldr	s12, [r6, #4]
 802c8b4:	edd2 5a00 	vldr	s11, [r2]
 802c8b8:	ee73 3ac5 	vsub.f32	s7, s7, s10
 802c8bc:	ee33 3a69 	vsub.f32	s6, s6, s19
 802c8c0:	ee39 5a62 	vsub.f32	s10, s18, s5
 802c8c4:	ee78 9ac7 	vsub.f32	s19, s17, s14
 802c8c8:	ee38 4a44 	vsub.f32	s8, s16, s8
 802c8cc:	ee38 7a87 	vadd.f32	s14, s17, s14
 802c8d0:	ee30 8aa5 	vadd.f32	s16, s1, s11
 802c8d4:	ee79 2a22 	vadd.f32	s5, s18, s5
 802c8d8:	ee75 8a69 	vsub.f32	s17, s10, s19
 802c8dc:	ee32 9a27 	vadd.f32	s18, s4, s15
 802c8e0:	ee35 5a29 	vadd.f32	s10, s10, s19
 802c8e4:	ee72 7a67 	vsub.f32	s15, s4, s15
 802c8e8:	ee30 2a06 	vadd.f32	s4, s0, s12
 802c8ec:	ee69 9a0b 	vmul.f32	s19, s18, s22
 802c8f0:	ee70 5ae5 	vsub.f32	s11, s1, s11
 802c8f4:	ee32 9a08 	vadd.f32	s18, s4, s16
 802c8f8:	ee68 8a8b 	vmul.f32	s17, s17, s22
 802c8fc:	ee32 2a48 	vsub.f32	s4, s4, s16
 802c900:	ee71 4a64 	vsub.f32	s9, s2, s9
 802c904:	ee25 5a0b 	vmul.f32	s10, s10, s22
 802c908:	ee32 1a87 	vadd.f32	s2, s5, s14
 802c90c:	ee67 7a8b 	vmul.f32	s15, s15, s22
 802c910:	ee72 2ac7 	vsub.f32	s5, s5, s14
 802c914:	ee30 6a46 	vsub.f32	s12, s0, s12
 802c918:	ee73 0a29 	vadd.f32	s1, s6, s19
 802c91c:	ee36 0a28 	vadd.f32	s0, s12, s17
 802c920:	ee33 3a69 	vsub.f32	s6, s6, s19
 802c924:	ee32 7a64 	vsub.f32	s14, s4, s9
 802c928:	ee73 9aa7 	vadd.f32	s19, s7, s15
 802c92c:	ee36 6a68 	vsub.f32	s12, s12, s17
 802c930:	ee73 7ae7 	vsub.f32	s15, s7, s15
 802c934:	ee75 8a85 	vadd.f32	s17, s11, s10
 802c938:	ee74 3a22 	vadd.f32	s7, s8, s5
 802c93c:	ee35 5ac5 	vsub.f32	s10, s11, s10
 802c940:	ee71 6ae6 	vsub.f32	s13, s3, s13
 802c944:	ee79 1a41 	vsub.f32	s3, s18, s2
 802c948:	ee39 8aa8 	vadd.f32	s16, s19, s17
 802c94c:	ee76 5a43 	vsub.f32	s11, s12, s6
 802c950:	ee74 2a62 	vsub.f32	s5, s8, s5
 802c954:	ee72 4a24 	vadd.f32	s9, s4, s9
 802c958:	ee30 4a60 	vsub.f32	s8, s0, s1
 802c95c:	ee79 8ae8 	vsub.f32	s17, s19, s17
 802c960:	ee30 0a20 	vadd.f32	s0, s0, s1
 802c964:	ee77 9a85 	vadd.f32	s19, s15, s10
 802c968:	ee36 6a03 	vadd.f32	s12, s12, s6
 802c96c:	ee77 7ac5 	vsub.f32	s15, s15, s10
 802c970:	ee2e 2a21 	vmul.f32	s4, s28, s3
 802c974:	ee2e 5a26 	vmul.f32	s10, s28, s13
 802c978:	ee6f 0a23 	vmul.f32	s1, s30, s7
 802c97c:	ee2a 3a21 	vmul.f32	s6, s20, s3
 802c980:	ee39 1a01 	vadd.f32	s2, s18, s2
 802c984:	ee6a 6a26 	vmul.f32	s13, s20, s13
 802c988:	ee2b 9a87 	vmul.f32	s18, s23, s14
 802c98c:	ee6b 3aa3 	vmul.f32	s7, s23, s7
 802c990:	ee2f 7a07 	vmul.f32	s14, s30, s14
 802c994:	ee6f 1a84 	vmul.f32	s3, s31, s8
 802c998:	ee35 3a03 	vadd.f32	s6, s10, s6
 802c99c:	ee72 6a66 	vsub.f32	s13, s4, s13
 802c9a0:	ee2c 5a04 	vmul.f32	s10, s24, s8
 802c9a4:	ee2f 2a88 	vmul.f32	s4, s31, s16
 802c9a8:	ed9d 4a02 	vldr	s8, [sp, #8]
 802c9ac:	ed8e 1a01 	vstr	s2, [lr, #4]
 802c9b0:	ee77 3a63 	vsub.f32	s7, s14, s7
 802c9b4:	ee2c 8a08 	vmul.f32	s16, s24, s16
 802c9b8:	ed9d 7a01 	vldr	s14, [sp, #4]
 802c9bc:	ed86 3a00 	vstr	s6, [r6]
 802c9c0:	ee30 9a89 	vadd.f32	s18, s1, s18
 802c9c4:	ee32 2a05 	vadd.f32	s4, s4, s10
 802c9c8:	ee6d 0a22 	vmul.f32	s1, s26, s5
 802c9cc:	ee31 8ac8 	vsub.f32	s16, s3, s16
 802c9d0:	ee67 2a22 	vmul.f32	s5, s14, s5
 802c9d4:	ee64 1a00 	vmul.f32	s3, s8, s0
 802c9d8:	ee27 7a24 	vmul.f32	s14, s14, s9
 802c9dc:	ee2c 5aa8 	vmul.f32	s10, s25, s17
 802c9e0:	ee6d 4a24 	vmul.f32	s9, s26, s9
 802c9e4:	ee64 8a28 	vmul.f32	s17, s8, s17
 802c9e8:	ed9d 4a00 	vldr	s8, [sp]
 802c9ec:	edc6 6a01 	vstr	s13, [r6, #4]
 802c9f0:	ee74 2ae2 	vsub.f32	s5, s9, s5
 802c9f4:	ee6d 4aa9 	vmul.f32	s9, s27, s19
 802c9f8:	ee64 9a29 	vmul.f32	s19, s8, s19
 802c9fc:	ee24 4a25 	vmul.f32	s8, s8, s11
 802ca00:	ee30 7a87 	vadd.f32	s14, s1, s14
 802ca04:	ee74 4a84 	vadd.f32	s9, s9, s8
 802ca08:	ee6e 0aa7 	vmul.f32	s1, s29, s15
 802ca0c:	ee2a 4a86 	vmul.f32	s8, s21, s12
 802ca10:	ee2c 0a80 	vmul.f32	s0, s25, s0
 802ca14:	ee6d 5aa5 	vmul.f32	s11, s27, s11
 802ca18:	ee6a 7aa7 	vmul.f32	s15, s21, s15
 802ca1c:	ee2e 6a86 	vmul.f32	s12, s29, s12
 802ca20:	ee75 1a21 	vadd.f32	s3, s10, s3
 802ca24:	ee30 0a68 	vsub.f32	s0, s0, s17
 802ca28:	ee75 9ae9 	vsub.f32	s19, s11, s19
 802ca2c:	ee70 0a84 	vadd.f32	s1, s1, s8
 802ca30:	ee36 6a67 	vsub.f32	s12, s12, s15
 802ca34:	44dc      	add	ip, fp
 802ca36:	45e1      	cmp	r9, ip
 802ca38:	ed84 9a00 	vstr	s18, [r4]
 802ca3c:	edc4 3a01 	vstr	s7, [r4, #4]
 802ca40:	449e      	add	lr, r3
 802ca42:	ed02 7a01 	vstr	s14, [r2, #-4]
 802ca46:	edc2 2a00 	vstr	s5, [r2]
 802ca4a:	441e      	add	r6, r3
 802ca4c:	ed85 2a00 	vstr	s4, [r5]
 802ca50:	ed85 8a01 	vstr	s16, [r5, #4]
 802ca54:	441c      	add	r4, r3
 802ca56:	ed47 1a01 	vstr	s3, [r7, #-4]
 802ca5a:	ed87 0a00 	vstr	s0, [r7]
 802ca5e:	441a      	add	r2, r3
 802ca60:	ed41 4a01 	vstr	s9, [r1, #-4]
 802ca64:	edc1 9a00 	vstr	s19, [r1]
 802ca68:	441d      	add	r5, r3
 802ca6a:	edc0 0a00 	vstr	s1, [r0]
 802ca6e:	441f      	add	r7, r3
 802ca70:	ed80 6a01 	vstr	s12, [r0, #4]
 802ca74:	4419      	add	r1, r3
 802ca76:	4418      	add	r0, r3
 802ca78:	f63f aeea 	bhi.w	802c850 <arm_radix8_butterfly_f32+0x334>
 802ca7c:	9a03      	ldr	r2, [sp, #12]
 802ca7e:	990d      	ldr	r1, [sp, #52]	; 0x34
 802ca80:	440a      	add	r2, r1
 802ca82:	9203      	str	r2, [sp, #12]
 802ca84:	990e      	ldr	r1, [sp, #56]	; 0x38
 802ca86:	9a05      	ldr	r2, [sp, #20]
 802ca88:	440a      	add	r2, r1
 802ca8a:	9205      	str	r2, [sp, #20]
 802ca8c:	9913      	ldr	r1, [sp, #76]	; 0x4c
 802ca8e:	9a04      	ldr	r2, [sp, #16]
 802ca90:	440a      	add	r2, r1
 802ca92:	9204      	str	r2, [sp, #16]
 802ca94:	9912      	ldr	r1, [sp, #72]	; 0x48
 802ca96:	9a06      	ldr	r2, [sp, #24]
 802ca98:	440a      	add	r2, r1
 802ca9a:	9206      	str	r2, [sp, #24]
 802ca9c:	9911      	ldr	r1, [sp, #68]	; 0x44
 802ca9e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802caa0:	440a      	add	r2, r1
 802caa2:	9209      	str	r2, [sp, #36]	; 0x24
 802caa4:	9910      	ldr	r1, [sp, #64]	; 0x40
 802caa6:	9a08      	ldr	r2, [sp, #32]
 802caa8:	440a      	add	r2, r1
 802caaa:	9208      	str	r2, [sp, #32]
 802caac:	990f      	ldr	r1, [sp, #60]	; 0x3c
 802caae:	9a07      	ldr	r2, [sp, #28]
 802cab0:	440a      	add	r2, r1
 802cab2:	9207      	str	r2, [sp, #28]
 802cab4:	990c      	ldr	r1, [sp, #48]	; 0x30
 802cab6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802cab8:	f108 0801 	add.w	r8, r8, #1
 802cabc:	3208      	adds	r2, #8
 802cabe:	4588      	cmp	r8, r1
 802cac0:	920a      	str	r2, [sp, #40]	; 0x28
 802cac2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802cac4:	f47f ae75 	bne.w	802c7b2 <arm_radix8_butterfly_f32+0x296>
 802cac8:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 802cacc:	9300      	str	r3, [sp, #0]
 802cace:	46c3      	mov	fp, r8
 802cad0:	f8dd e06c 	ldr.w	lr, [sp, #108]	; 0x6c
 802cad4:	e532      	b.n	802c53c <arm_radix8_butterfly_f32+0x20>
 802cad6:	b01d      	add	sp, #116	; 0x74
 802cad8:	ecbd 8b10 	vpop	{d8-d15}
 802cadc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802cae0 <__aeabi_atexit>:
 802cae0:	460b      	mov	r3, r1
 802cae2:	4601      	mov	r1, r0
 802cae4:	4618      	mov	r0, r3
 802cae6:	f000 bfc7 	b.w	802da78 <__cxa_atexit>

0802caea <_ZdlPvj>:
 802caea:	f000 b812 	b.w	802cb12 <_ZdlPv>

0802caee <__cxa_guard_acquire>:
 802caee:	6803      	ldr	r3, [r0, #0]
 802caf0:	07db      	lsls	r3, r3, #31
 802caf2:	d406      	bmi.n	802cb02 <__cxa_guard_acquire+0x14>
 802caf4:	7843      	ldrb	r3, [r0, #1]
 802caf6:	b103      	cbz	r3, 802cafa <__cxa_guard_acquire+0xc>
 802caf8:	deff      	udf	#255	; 0xff
 802cafa:	2301      	movs	r3, #1
 802cafc:	7043      	strb	r3, [r0, #1]
 802cafe:	4618      	mov	r0, r3
 802cb00:	4770      	bx	lr
 802cb02:	2000      	movs	r0, #0
 802cb04:	4770      	bx	lr

0802cb06 <__cxa_guard_release>:
 802cb06:	2301      	movs	r3, #1
 802cb08:	6003      	str	r3, [r0, #0]
 802cb0a:	4770      	bx	lr

0802cb0c <__cxa_pure_virtual>:
 802cb0c:	b508      	push	{r3, lr}
 802cb0e:	f000 f80f 	bl	802cb30 <_ZSt9terminatev>

0802cb12 <_ZdlPv>:
 802cb12:	f000 befd 	b.w	802d910 <free>

0802cb16 <_ZN10__cxxabiv111__terminateEPFvvE>:
 802cb16:	b508      	push	{r3, lr}
 802cb18:	4780      	blx	r0
 802cb1a:	f000 fec5 	bl	802d8a8 <abort>
	...

0802cb20 <_ZSt13get_terminatev>:
 802cb20:	4b02      	ldr	r3, [pc, #8]	; (802cb2c <_ZSt13get_terminatev+0xc>)
 802cb22:	6818      	ldr	r0, [r3, #0]
 802cb24:	f3bf 8f5b 	dmb	ish
 802cb28:	4770      	bx	lr
 802cb2a:	bf00      	nop
 802cb2c:	20000108 	.word	0x20000108

0802cb30 <_ZSt9terminatev>:
 802cb30:	b508      	push	{r3, lr}
 802cb32:	f7ff fff5 	bl	802cb20 <_ZSt13get_terminatev>
 802cb36:	f7ff ffee 	bl	802cb16 <_ZN10__cxxabiv111__terminateEPFvvE>
	...

0802cb3c <sqrtf>:
 802cb3c:	b508      	push	{r3, lr}
 802cb3e:	ed2d 8b02 	vpush	{d8}
 802cb42:	eeb0 8a40 	vmov.f32	s16, s0
 802cb46:	f000 f97d 	bl	802ce44 <__ieee754_sqrtf>
 802cb4a:	eeb4 8a48 	vcmp.f32	s16, s16
 802cb4e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802cb52:	d60c      	bvs.n	802cb6e <sqrtf+0x32>
 802cb54:	eddf 8a07 	vldr	s17, [pc, #28]	; 802cb74 <sqrtf+0x38>
 802cb58:	eeb4 8ae8 	vcmpe.f32	s16, s17
 802cb5c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802cb60:	d505      	bpl.n	802cb6e <sqrtf+0x32>
 802cb62:	f001 f9a7 	bl	802deb4 <__errno>
 802cb66:	ee88 0aa8 	vdiv.f32	s0, s17, s17
 802cb6a:	2321      	movs	r3, #33	; 0x21
 802cb6c:	6003      	str	r3, [r0, #0]
 802cb6e:	ecbd 8b02 	vpop	{d8}
 802cb72:	bd08      	pop	{r3, pc}
 802cb74:	00000000 	.word	0x00000000

0802cb78 <atanf>:
 802cb78:	b538      	push	{r3, r4, r5, lr}
 802cb7a:	ee10 5a10 	vmov	r5, s0
 802cb7e:	f025 4400 	bic.w	r4, r5, #2147483648	; 0x80000000
 802cb82:	f1b4 4fa1 	cmp.w	r4, #1350565888	; 0x50800000
 802cb86:	eef0 7a40 	vmov.f32	s15, s0
 802cb8a:	db10      	blt.n	802cbae <atanf+0x36>
 802cb8c:	f1b4 4fff 	cmp.w	r4, #2139095040	; 0x7f800000
 802cb90:	dd04      	ble.n	802cb9c <atanf+0x24>
 802cb92:	ee70 7a00 	vadd.f32	s15, s0, s0
 802cb96:	eeb0 0a67 	vmov.f32	s0, s15
 802cb9a:	bd38      	pop	{r3, r4, r5, pc}
 802cb9c:	eddf 7a4d 	vldr	s15, [pc, #308]	; 802ccd4 <atanf+0x15c>
 802cba0:	ed9f 7a4d 	vldr	s14, [pc, #308]	; 802ccd8 <atanf+0x160>
 802cba4:	2d00      	cmp	r5, #0
 802cba6:	bfd8      	it	le
 802cba8:	eef0 7a47 	vmovle.f32	s15, s14
 802cbac:	e7f3      	b.n	802cb96 <atanf+0x1e>
 802cbae:	4b4b      	ldr	r3, [pc, #300]	; (802ccdc <atanf+0x164>)
 802cbb0:	429c      	cmp	r4, r3
 802cbb2:	dc10      	bgt.n	802cbd6 <atanf+0x5e>
 802cbb4:	f1b4 5f44 	cmp.w	r4, #822083584	; 0x31000000
 802cbb8:	da0a      	bge.n	802cbd0 <atanf+0x58>
 802cbba:	ed9f 7a49 	vldr	s14, [pc, #292]	; 802cce0 <atanf+0x168>
 802cbbe:	ee30 7a07 	vadd.f32	s14, s0, s14
 802cbc2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 802cbc6:	eeb4 7ae6 	vcmpe.f32	s14, s13
 802cbca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802cbce:	dce2      	bgt.n	802cb96 <atanf+0x1e>
 802cbd0:	f04f 33ff 	mov.w	r3, #4294967295
 802cbd4:	e013      	b.n	802cbfe <atanf+0x86>
 802cbd6:	f000 f8e7 	bl	802cda8 <fabsf>
 802cbda:	4b42      	ldr	r3, [pc, #264]	; (802cce4 <atanf+0x16c>)
 802cbdc:	429c      	cmp	r4, r3
 802cbde:	dc4f      	bgt.n	802cc80 <atanf+0x108>
 802cbe0:	f5a3 03d0 	sub.w	r3, r3, #6815744	; 0x680000
 802cbe4:	429c      	cmp	r4, r3
 802cbe6:	dc41      	bgt.n	802cc6c <atanf+0xf4>
 802cbe8:	eef0 7a00 	vmov.f32	s15, #0	; 0x40000000  2.0
 802cbec:	eebf 7a00 	vmov.f32	s14, #240	; 0xbf800000 -1.0
 802cbf0:	eea0 7a27 	vfma.f32	s14, s0, s15
 802cbf4:	2300      	movs	r3, #0
 802cbf6:	ee30 0a27 	vadd.f32	s0, s0, s15
 802cbfa:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802cbfe:	1c5a      	adds	r2, r3, #1
 802cc00:	ee27 6aa7 	vmul.f32	s12, s15, s15
 802cc04:	ed9f 7a38 	vldr	s14, [pc, #224]	; 802cce8 <atanf+0x170>
 802cc08:	eddf 5a38 	vldr	s11, [pc, #224]	; 802ccec <atanf+0x174>
 802cc0c:	ed9f 5a38 	vldr	s10, [pc, #224]	; 802ccf0 <atanf+0x178>
 802cc10:	ee66 6a06 	vmul.f32	s13, s12, s12
 802cc14:	eee6 5a87 	vfma.f32	s11, s13, s14
 802cc18:	ed9f 7a36 	vldr	s14, [pc, #216]	; 802ccf4 <atanf+0x17c>
 802cc1c:	eea5 7aa6 	vfma.f32	s14, s11, s13
 802cc20:	eddf 5a35 	vldr	s11, [pc, #212]	; 802ccf8 <atanf+0x180>
 802cc24:	eee7 5a26 	vfma.f32	s11, s14, s13
 802cc28:	ed9f 7a34 	vldr	s14, [pc, #208]	; 802ccfc <atanf+0x184>
 802cc2c:	eea5 7aa6 	vfma.f32	s14, s11, s13
 802cc30:	eddf 5a33 	vldr	s11, [pc, #204]	; 802cd00 <atanf+0x188>
 802cc34:	eee7 5a26 	vfma.f32	s11, s14, s13
 802cc38:	ed9f 7a32 	vldr	s14, [pc, #200]	; 802cd04 <atanf+0x18c>
 802cc3c:	eea6 5a87 	vfma.f32	s10, s13, s14
 802cc40:	ed9f 7a31 	vldr	s14, [pc, #196]	; 802cd08 <atanf+0x190>
 802cc44:	eea5 7a26 	vfma.f32	s14, s10, s13
 802cc48:	ed9f 5a30 	vldr	s10, [pc, #192]	; 802cd0c <atanf+0x194>
 802cc4c:	eea7 5a26 	vfma.f32	s10, s14, s13
 802cc50:	ed9f 7a2f 	vldr	s14, [pc, #188]	; 802cd10 <atanf+0x198>
 802cc54:	eea5 7a26 	vfma.f32	s14, s10, s13
 802cc58:	ee27 7a26 	vmul.f32	s14, s14, s13
 802cc5c:	eea5 7a86 	vfma.f32	s14, s11, s12
 802cc60:	ee27 7a87 	vmul.f32	s14, s15, s14
 802cc64:	d121      	bne.n	802ccaa <atanf+0x132>
 802cc66:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802cc6a:	e794      	b.n	802cb96 <atanf+0x1e>
 802cc6c:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 802cc70:	ee30 7a67 	vsub.f32	s14, s0, s15
 802cc74:	ee30 0a27 	vadd.f32	s0, s0, s15
 802cc78:	2301      	movs	r3, #1
 802cc7a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802cc7e:	e7be      	b.n	802cbfe <atanf+0x86>
 802cc80:	4b24      	ldr	r3, [pc, #144]	; (802cd14 <atanf+0x19c>)
 802cc82:	429c      	cmp	r4, r3
 802cc84:	dc0b      	bgt.n	802cc9e <atanf+0x126>
 802cc86:	eef7 7a08 	vmov.f32	s15, #120	; 0x3fc00000  1.5
 802cc8a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802cc8e:	eea0 7a27 	vfma.f32	s14, s0, s15
 802cc92:	2302      	movs	r3, #2
 802cc94:	ee70 6a67 	vsub.f32	s13, s0, s15
 802cc98:	eec6 7a87 	vdiv.f32	s15, s13, s14
 802cc9c:	e7af      	b.n	802cbfe <atanf+0x86>
 802cc9e:	eebf 7a00 	vmov.f32	s14, #240	; 0xbf800000 -1.0
 802cca2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802cca6:	2303      	movs	r3, #3
 802cca8:	e7a9      	b.n	802cbfe <atanf+0x86>
 802ccaa:	4a1b      	ldr	r2, [pc, #108]	; (802cd18 <atanf+0x1a0>)
 802ccac:	491b      	ldr	r1, [pc, #108]	; (802cd1c <atanf+0x1a4>)
 802ccae:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 802ccb2:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 802ccb6:	edd3 6a00 	vldr	s13, [r3]
 802ccba:	ee37 7a66 	vsub.f32	s14, s14, s13
 802ccbe:	2d00      	cmp	r5, #0
 802ccc0:	ee37 7a67 	vsub.f32	s14, s14, s15
 802ccc4:	edd2 7a00 	vldr	s15, [r2]
 802ccc8:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802cccc:	bfb8      	it	lt
 802ccce:	eef1 7a67 	vneglt.f32	s15, s15
 802ccd2:	e760      	b.n	802cb96 <atanf+0x1e>
 802ccd4:	3fc90fdb 	.word	0x3fc90fdb
 802ccd8:	bfc90fdb 	.word	0xbfc90fdb
 802ccdc:	3edfffff 	.word	0x3edfffff
 802cce0:	7149f2ca 	.word	0x7149f2ca
 802cce4:	3f97ffff 	.word	0x3f97ffff
 802cce8:	3c8569d7 	.word	0x3c8569d7
 802ccec:	3d4bda59 	.word	0x3d4bda59
 802ccf0:	bd6ef16b 	.word	0xbd6ef16b
 802ccf4:	3d886b35 	.word	0x3d886b35
 802ccf8:	3dba2e6e 	.word	0x3dba2e6e
 802ccfc:	3e124925 	.word	0x3e124925
 802cd00:	3eaaaaab 	.word	0x3eaaaaab
 802cd04:	bd15a221 	.word	0xbd15a221
 802cd08:	bd9d8795 	.word	0xbd9d8795
 802cd0c:	bde38e38 	.word	0xbde38e38
 802cd10:	be4ccccd 	.word	0xbe4ccccd
 802cd14:	401bffff 	.word	0x401bffff
 802cd18:	0804573c 	.word	0x0804573c
 802cd1c:	0804574c 	.word	0x0804574c

0802cd20 <cosf>:
 802cd20:	ee10 3a10 	vmov	r3, s0
 802cd24:	b507      	push	{r0, r1, r2, lr}
 802cd26:	4a1e      	ldr	r2, [pc, #120]	; (802cda0 <cosf+0x80>)
 802cd28:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802cd2c:	4293      	cmp	r3, r2
 802cd2e:	dc06      	bgt.n	802cd3e <cosf+0x1e>
 802cd30:	eddf 0a1c 	vldr	s1, [pc, #112]	; 802cda4 <cosf+0x84>
 802cd34:	b003      	add	sp, #12
 802cd36:	f85d eb04 	ldr.w	lr, [sp], #4
 802cd3a:	f000 b90b 	b.w	802cf54 <__kernel_cosf>
 802cd3e:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 802cd42:	db04      	blt.n	802cd4e <cosf+0x2e>
 802cd44:	ee30 0a40 	vsub.f32	s0, s0, s0
 802cd48:	b003      	add	sp, #12
 802cd4a:	f85d fb04 	ldr.w	pc, [sp], #4
 802cd4e:	4668      	mov	r0, sp
 802cd50:	f000 f9a6 	bl	802d0a0 <__ieee754_rem_pio2f>
 802cd54:	f000 0003 	and.w	r0, r0, #3
 802cd58:	2801      	cmp	r0, #1
 802cd5a:	d009      	beq.n	802cd70 <cosf+0x50>
 802cd5c:	2802      	cmp	r0, #2
 802cd5e:	d010      	beq.n	802cd82 <cosf+0x62>
 802cd60:	b9b0      	cbnz	r0, 802cd90 <cosf+0x70>
 802cd62:	eddd 0a01 	vldr	s1, [sp, #4]
 802cd66:	ed9d 0a00 	vldr	s0, [sp]
 802cd6a:	f000 f8f3 	bl	802cf54 <__kernel_cosf>
 802cd6e:	e7eb      	b.n	802cd48 <cosf+0x28>
 802cd70:	eddd 0a01 	vldr	s1, [sp, #4]
 802cd74:	ed9d 0a00 	vldr	s0, [sp]
 802cd78:	f000 f94a 	bl	802d010 <__kernel_sinf>
 802cd7c:	eeb1 0a40 	vneg.f32	s0, s0
 802cd80:	e7e2      	b.n	802cd48 <cosf+0x28>
 802cd82:	eddd 0a01 	vldr	s1, [sp, #4]
 802cd86:	ed9d 0a00 	vldr	s0, [sp]
 802cd8a:	f000 f8e3 	bl	802cf54 <__kernel_cosf>
 802cd8e:	e7f5      	b.n	802cd7c <cosf+0x5c>
 802cd90:	eddd 0a01 	vldr	s1, [sp, #4]
 802cd94:	ed9d 0a00 	vldr	s0, [sp]
 802cd98:	2001      	movs	r0, #1
 802cd9a:	f000 f939 	bl	802d010 <__kernel_sinf>
 802cd9e:	e7d3      	b.n	802cd48 <cosf+0x28>
 802cda0:	3f490fd8 	.word	0x3f490fd8
 802cda4:	00000000 	.word	0x00000000

0802cda8 <fabsf>:
 802cda8:	ee10 3a10 	vmov	r3, s0
 802cdac:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802cdb0:	ee00 3a10 	vmov	s0, r3
 802cdb4:	4770      	bx	lr
	...

0802cdb8 <sinf>:
 802cdb8:	ee10 3a10 	vmov	r3, s0
 802cdbc:	b507      	push	{r0, r1, r2, lr}
 802cdbe:	4a1f      	ldr	r2, [pc, #124]	; (802ce3c <sinf+0x84>)
 802cdc0:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802cdc4:	4293      	cmp	r3, r2
 802cdc6:	dc07      	bgt.n	802cdd8 <sinf+0x20>
 802cdc8:	eddf 0a1d 	vldr	s1, [pc, #116]	; 802ce40 <sinf+0x88>
 802cdcc:	2000      	movs	r0, #0
 802cdce:	b003      	add	sp, #12
 802cdd0:	f85d eb04 	ldr.w	lr, [sp], #4
 802cdd4:	f000 b91c 	b.w	802d010 <__kernel_sinf>
 802cdd8:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 802cddc:	db04      	blt.n	802cde8 <sinf+0x30>
 802cdde:	ee30 0a40 	vsub.f32	s0, s0, s0
 802cde2:	b003      	add	sp, #12
 802cde4:	f85d fb04 	ldr.w	pc, [sp], #4
 802cde8:	4668      	mov	r0, sp
 802cdea:	f000 f959 	bl	802d0a0 <__ieee754_rem_pio2f>
 802cdee:	f000 0003 	and.w	r0, r0, #3
 802cdf2:	2801      	cmp	r0, #1
 802cdf4:	d00a      	beq.n	802ce0c <sinf+0x54>
 802cdf6:	2802      	cmp	r0, #2
 802cdf8:	d00f      	beq.n	802ce1a <sinf+0x62>
 802cdfa:	b9c0      	cbnz	r0, 802ce2e <sinf+0x76>
 802cdfc:	eddd 0a01 	vldr	s1, [sp, #4]
 802ce00:	ed9d 0a00 	vldr	s0, [sp]
 802ce04:	2001      	movs	r0, #1
 802ce06:	f000 f903 	bl	802d010 <__kernel_sinf>
 802ce0a:	e7ea      	b.n	802cde2 <sinf+0x2a>
 802ce0c:	eddd 0a01 	vldr	s1, [sp, #4]
 802ce10:	ed9d 0a00 	vldr	s0, [sp]
 802ce14:	f000 f89e 	bl	802cf54 <__kernel_cosf>
 802ce18:	e7e3      	b.n	802cde2 <sinf+0x2a>
 802ce1a:	eddd 0a01 	vldr	s1, [sp, #4]
 802ce1e:	ed9d 0a00 	vldr	s0, [sp]
 802ce22:	2001      	movs	r0, #1
 802ce24:	f000 f8f4 	bl	802d010 <__kernel_sinf>
 802ce28:	eeb1 0a40 	vneg.f32	s0, s0
 802ce2c:	e7d9      	b.n	802cde2 <sinf+0x2a>
 802ce2e:	eddd 0a01 	vldr	s1, [sp, #4]
 802ce32:	ed9d 0a00 	vldr	s0, [sp]
 802ce36:	f000 f88d 	bl	802cf54 <__kernel_cosf>
 802ce3a:	e7f5      	b.n	802ce28 <sinf+0x70>
 802ce3c:	3f490fd8 	.word	0x3f490fd8
 802ce40:	00000000 	.word	0x00000000

0802ce44 <__ieee754_sqrtf>:
 802ce44:	eeb1 0ac0 	vsqrt.f32	s0, s0
 802ce48:	4770      	bx	lr
	...

0802ce4c <ceilf>:
 802ce4c:	ee10 3a10 	vmov	r3, s0
 802ce50:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802ce54:	3a7f      	subs	r2, #127	; 0x7f
 802ce56:	2a16      	cmp	r2, #22
 802ce58:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 802ce5c:	dc2a      	bgt.n	802ceb4 <ceilf+0x68>
 802ce5e:	2a00      	cmp	r2, #0
 802ce60:	da11      	bge.n	802ce86 <ceilf+0x3a>
 802ce62:	eddf 7a19 	vldr	s15, [pc, #100]	; 802cec8 <ceilf+0x7c>
 802ce66:	ee30 0a27 	vadd.f32	s0, s0, s15
 802ce6a:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802ce6e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802ce72:	dd05      	ble.n	802ce80 <ceilf+0x34>
 802ce74:	2b00      	cmp	r3, #0
 802ce76:	db23      	blt.n	802cec0 <ceilf+0x74>
 802ce78:	2900      	cmp	r1, #0
 802ce7a:	bf18      	it	ne
 802ce7c:	f04f 537e 	movne.w	r3, #1065353216	; 0x3f800000
 802ce80:	ee00 3a10 	vmov	s0, r3
 802ce84:	4770      	bx	lr
 802ce86:	4911      	ldr	r1, [pc, #68]	; (802cecc <ceilf+0x80>)
 802ce88:	4111      	asrs	r1, r2
 802ce8a:	420b      	tst	r3, r1
 802ce8c:	d0fa      	beq.n	802ce84 <ceilf+0x38>
 802ce8e:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802cec8 <ceilf+0x7c>
 802ce92:	ee30 0a27 	vadd.f32	s0, s0, s15
 802ce96:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802ce9a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802ce9e:	ddef      	ble.n	802ce80 <ceilf+0x34>
 802cea0:	2b00      	cmp	r3, #0
 802cea2:	bfc2      	ittt	gt
 802cea4:	f44f 0000 	movgt.w	r0, #8388608	; 0x800000
 802cea8:	fa40 f202 	asrgt.w	r2, r0, r2
 802ceac:	189b      	addgt	r3, r3, r2
 802ceae:	ea23 0301 	bic.w	r3, r3, r1
 802ceb2:	e7e5      	b.n	802ce80 <ceilf+0x34>
 802ceb4:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 802ceb8:	d3e4      	bcc.n	802ce84 <ceilf+0x38>
 802ceba:	ee30 0a00 	vadd.f32	s0, s0, s0
 802cebe:	4770      	bx	lr
 802cec0:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 802cec4:	e7dc      	b.n	802ce80 <ceilf+0x34>
 802cec6:	bf00      	nop
 802cec8:	7149f2ca 	.word	0x7149f2ca
 802cecc:	007fffff 	.word	0x007fffff

0802ced0 <floorf>:
 802ced0:	ee10 3a10 	vmov	r3, s0
 802ced4:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802ced8:	3a7f      	subs	r2, #127	; 0x7f
 802ceda:	2a16      	cmp	r2, #22
 802cedc:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 802cee0:	dc2a      	bgt.n	802cf38 <floorf+0x68>
 802cee2:	2a00      	cmp	r2, #0
 802cee4:	da11      	bge.n	802cf0a <floorf+0x3a>
 802cee6:	eddf 7a18 	vldr	s15, [pc, #96]	; 802cf48 <floorf+0x78>
 802ceea:	ee30 0a27 	vadd.f32	s0, s0, s15
 802ceee:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802cef2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802cef6:	dd05      	ble.n	802cf04 <floorf+0x34>
 802cef8:	2b00      	cmp	r3, #0
 802cefa:	da23      	bge.n	802cf44 <floorf+0x74>
 802cefc:	4a13      	ldr	r2, [pc, #76]	; (802cf4c <floorf+0x7c>)
 802cefe:	2900      	cmp	r1, #0
 802cf00:	bf18      	it	ne
 802cf02:	4613      	movne	r3, r2
 802cf04:	ee00 3a10 	vmov	s0, r3
 802cf08:	4770      	bx	lr
 802cf0a:	4911      	ldr	r1, [pc, #68]	; (802cf50 <floorf+0x80>)
 802cf0c:	4111      	asrs	r1, r2
 802cf0e:	420b      	tst	r3, r1
 802cf10:	d0fa      	beq.n	802cf08 <floorf+0x38>
 802cf12:	eddf 7a0d 	vldr	s15, [pc, #52]	; 802cf48 <floorf+0x78>
 802cf16:	ee30 0a27 	vadd.f32	s0, s0, s15
 802cf1a:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802cf1e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802cf22:	ddef      	ble.n	802cf04 <floorf+0x34>
 802cf24:	2b00      	cmp	r3, #0
 802cf26:	bfbe      	ittt	lt
 802cf28:	f44f 0000 	movlt.w	r0, #8388608	; 0x800000
 802cf2c:	fa40 f202 	asrlt.w	r2, r0, r2
 802cf30:	189b      	addlt	r3, r3, r2
 802cf32:	ea23 0301 	bic.w	r3, r3, r1
 802cf36:	e7e5      	b.n	802cf04 <floorf+0x34>
 802cf38:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 802cf3c:	d3e4      	bcc.n	802cf08 <floorf+0x38>
 802cf3e:	ee30 0a00 	vadd.f32	s0, s0, s0
 802cf42:	4770      	bx	lr
 802cf44:	2300      	movs	r3, #0
 802cf46:	e7dd      	b.n	802cf04 <floorf+0x34>
 802cf48:	7149f2ca 	.word	0x7149f2ca
 802cf4c:	bf800000 	.word	0xbf800000
 802cf50:	007fffff 	.word	0x007fffff

0802cf54 <__kernel_cosf>:
 802cf54:	ee10 3a10 	vmov	r3, s0
 802cf58:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802cf5c:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 802cf60:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 802cf64:	da05      	bge.n	802cf72 <__kernel_cosf+0x1e>
 802cf66:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 802cf6a:	ee17 2a90 	vmov	r2, s15
 802cf6e:	2a00      	cmp	r2, #0
 802cf70:	d03b      	beq.n	802cfea <__kernel_cosf+0x96>
 802cf72:	ee20 7a00 	vmul.f32	s14, s0, s0
 802cf76:	eddf 7a1e 	vldr	s15, [pc, #120]	; 802cff0 <__kernel_cosf+0x9c>
 802cf7a:	ed9f 6a1e 	vldr	s12, [pc, #120]	; 802cff4 <__kernel_cosf+0xa0>
 802cf7e:	4a1e      	ldr	r2, [pc, #120]	; (802cff8 <__kernel_cosf+0xa4>)
 802cf80:	eea7 6a27 	vfma.f32	s12, s14, s15
 802cf84:	4293      	cmp	r3, r2
 802cf86:	eddf 7a1d 	vldr	s15, [pc, #116]	; 802cffc <__kernel_cosf+0xa8>
 802cf8a:	eee6 7a07 	vfma.f32	s15, s12, s14
 802cf8e:	ed9f 6a1c 	vldr	s12, [pc, #112]	; 802d000 <__kernel_cosf+0xac>
 802cf92:	eea7 6a87 	vfma.f32	s12, s15, s14
 802cf96:	eddf 7a1b 	vldr	s15, [pc, #108]	; 802d004 <__kernel_cosf+0xb0>
 802cf9a:	eee6 7a07 	vfma.f32	s15, s12, s14
 802cf9e:	ed9f 6a1a 	vldr	s12, [pc, #104]	; 802d008 <__kernel_cosf+0xb4>
 802cfa2:	eea7 6a87 	vfma.f32	s12, s15, s14
 802cfa6:	ee60 0ac0 	vnmul.f32	s1, s1, s0
 802cfaa:	ee26 6a07 	vmul.f32	s12, s12, s14
 802cfae:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802cfb2:	eee7 0a06 	vfma.f32	s1, s14, s12
 802cfb6:	ee67 7a27 	vmul.f32	s15, s14, s15
 802cfba:	dc04      	bgt.n	802cfc6 <__kernel_cosf+0x72>
 802cfbc:	ee77 7ae0 	vsub.f32	s15, s15, s1
 802cfc0:	ee36 0ae7 	vsub.f32	s0, s13, s15
 802cfc4:	4770      	bx	lr
 802cfc6:	4a11      	ldr	r2, [pc, #68]	; (802d00c <__kernel_cosf+0xb8>)
 802cfc8:	4293      	cmp	r3, r2
 802cfca:	bfda      	itte	le
 802cfcc:	f103 437f 	addle.w	r3, r3, #4278190080	; 0xff000000
 802cfd0:	ee07 3a10 	vmovle	s14, r3
 802cfd4:	eeb5 7a02 	vmovgt.f32	s14, #82	; 0x3e900000  0.2812500
 802cfd8:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802cfdc:	ee36 0ac7 	vsub.f32	s0, s13, s14
 802cfe0:	ee77 7ae0 	vsub.f32	s15, s15, s1
 802cfe4:	ee30 0a67 	vsub.f32	s0, s0, s15
 802cfe8:	4770      	bx	lr
 802cfea:	eeb0 0a66 	vmov.f32	s0, s13
 802cfee:	4770      	bx	lr
 802cff0:	ad47d74e 	.word	0xad47d74e
 802cff4:	310f74f6 	.word	0x310f74f6
 802cff8:	3e999999 	.word	0x3e999999
 802cffc:	b493f27c 	.word	0xb493f27c
 802d000:	37d00d01 	.word	0x37d00d01
 802d004:	bab60b61 	.word	0xbab60b61
 802d008:	3d2aaaab 	.word	0x3d2aaaab
 802d00c:	3f480000 	.word	0x3f480000

0802d010 <__kernel_sinf>:
 802d010:	ee10 3a10 	vmov	r3, s0
 802d014:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802d018:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 802d01c:	da04      	bge.n	802d028 <__kernel_sinf+0x18>
 802d01e:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 802d022:	ee17 3a90 	vmov	r3, s15
 802d026:	b35b      	cbz	r3, 802d080 <__kernel_sinf+0x70>
 802d028:	ee20 7a00 	vmul.f32	s14, s0, s0
 802d02c:	eddf 7a15 	vldr	s15, [pc, #84]	; 802d084 <__kernel_sinf+0x74>
 802d030:	ed9f 6a15 	vldr	s12, [pc, #84]	; 802d088 <__kernel_sinf+0x78>
 802d034:	eea7 6a27 	vfma.f32	s12, s14, s15
 802d038:	eddf 7a14 	vldr	s15, [pc, #80]	; 802d08c <__kernel_sinf+0x7c>
 802d03c:	eee6 7a07 	vfma.f32	s15, s12, s14
 802d040:	ed9f 6a13 	vldr	s12, [pc, #76]	; 802d090 <__kernel_sinf+0x80>
 802d044:	eea7 6a87 	vfma.f32	s12, s15, s14
 802d048:	eddf 7a12 	vldr	s15, [pc, #72]	; 802d094 <__kernel_sinf+0x84>
 802d04c:	ee60 6a07 	vmul.f32	s13, s0, s14
 802d050:	eee6 7a07 	vfma.f32	s15, s12, s14
 802d054:	b930      	cbnz	r0, 802d064 <__kernel_sinf+0x54>
 802d056:	ed9f 6a10 	vldr	s12, [pc, #64]	; 802d098 <__kernel_sinf+0x88>
 802d05a:	eea7 6a27 	vfma.f32	s12, s14, s15
 802d05e:	eea6 0a26 	vfma.f32	s0, s12, s13
 802d062:	4770      	bx	lr
 802d064:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 802d068:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 802d06c:	eee0 7a86 	vfma.f32	s15, s1, s12
 802d070:	eed7 0a87 	vfnms.f32	s1, s15, s14
 802d074:	eddf 7a09 	vldr	s15, [pc, #36]	; 802d09c <__kernel_sinf+0x8c>
 802d078:	eee6 0aa7 	vfma.f32	s1, s13, s15
 802d07c:	ee30 0a60 	vsub.f32	s0, s0, s1
 802d080:	4770      	bx	lr
 802d082:	bf00      	nop
 802d084:	2f2ec9d3 	.word	0x2f2ec9d3
 802d088:	b2d72f34 	.word	0xb2d72f34
 802d08c:	3638ef1b 	.word	0x3638ef1b
 802d090:	b9500d01 	.word	0xb9500d01
 802d094:	3c088889 	.word	0x3c088889
 802d098:	be2aaaab 	.word	0xbe2aaaab
 802d09c:	3e2aaaab 	.word	0x3e2aaaab

0802d0a0 <__ieee754_rem_pio2f>:
 802d0a0:	b5f0      	push	{r4, r5, r6, r7, lr}
 802d0a2:	ee10 6a10 	vmov	r6, s0
 802d0a6:	4b86      	ldr	r3, [pc, #536]	; (802d2c0 <__ieee754_rem_pio2f+0x220>)
 802d0a8:	f026 4500 	bic.w	r5, r6, #2147483648	; 0x80000000
 802d0ac:	429d      	cmp	r5, r3
 802d0ae:	b087      	sub	sp, #28
 802d0b0:	4604      	mov	r4, r0
 802d0b2:	dc05      	bgt.n	802d0c0 <__ieee754_rem_pio2f+0x20>
 802d0b4:	2300      	movs	r3, #0
 802d0b6:	ed80 0a00 	vstr	s0, [r0]
 802d0ba:	6043      	str	r3, [r0, #4]
 802d0bc:	2000      	movs	r0, #0
 802d0be:	e020      	b.n	802d102 <__ieee754_rem_pio2f+0x62>
 802d0c0:	4b80      	ldr	r3, [pc, #512]	; (802d2c4 <__ieee754_rem_pio2f+0x224>)
 802d0c2:	429d      	cmp	r5, r3
 802d0c4:	dc38      	bgt.n	802d138 <__ieee754_rem_pio2f+0x98>
 802d0c6:	2e00      	cmp	r6, #0
 802d0c8:	ed9f 7a7f 	vldr	s14, [pc, #508]	; 802d2c8 <__ieee754_rem_pio2f+0x228>
 802d0cc:	4b7f      	ldr	r3, [pc, #508]	; (802d2cc <__ieee754_rem_pio2f+0x22c>)
 802d0ce:	f025 050f 	bic.w	r5, r5, #15
 802d0d2:	dd18      	ble.n	802d106 <__ieee754_rem_pio2f+0x66>
 802d0d4:	429d      	cmp	r5, r3
 802d0d6:	ee70 7a47 	vsub.f32	s15, s0, s14
 802d0da:	bf09      	itett	eq
 802d0dc:	ed9f 7a7c 	vldreq	s14, [pc, #496]	; 802d2d0 <__ieee754_rem_pio2f+0x230>
 802d0e0:	ed9f 7a7c 	vldrne	s14, [pc, #496]	; 802d2d4 <__ieee754_rem_pio2f+0x234>
 802d0e4:	ee77 7ac7 	vsubeq.f32	s15, s15, s14
 802d0e8:	ed9f 7a7b 	vldreq	s14, [pc, #492]	; 802d2d8 <__ieee754_rem_pio2f+0x238>
 802d0ec:	ee77 6ac7 	vsub.f32	s13, s15, s14
 802d0f0:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802d0f4:	edc0 6a00 	vstr	s13, [r0]
 802d0f8:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802d0fc:	edc0 7a01 	vstr	s15, [r0, #4]
 802d100:	2001      	movs	r0, #1
 802d102:	b007      	add	sp, #28
 802d104:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802d106:	429d      	cmp	r5, r3
 802d108:	ee70 7a07 	vadd.f32	s15, s0, s14
 802d10c:	bf09      	itett	eq
 802d10e:	ed9f 7a70 	vldreq	s14, [pc, #448]	; 802d2d0 <__ieee754_rem_pio2f+0x230>
 802d112:	ed9f 7a70 	vldrne	s14, [pc, #448]	; 802d2d4 <__ieee754_rem_pio2f+0x234>
 802d116:	ee77 7a87 	vaddeq.f32	s15, s15, s14
 802d11a:	ed9f 7a6f 	vldreq	s14, [pc, #444]	; 802d2d8 <__ieee754_rem_pio2f+0x238>
 802d11e:	ee77 6a87 	vadd.f32	s13, s15, s14
 802d122:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802d126:	edc0 6a00 	vstr	s13, [r0]
 802d12a:	ee77 7a87 	vadd.f32	s15, s15, s14
 802d12e:	edc0 7a01 	vstr	s15, [r0, #4]
 802d132:	f04f 30ff 	mov.w	r0, #4294967295
 802d136:	e7e4      	b.n	802d102 <__ieee754_rem_pio2f+0x62>
 802d138:	4b68      	ldr	r3, [pc, #416]	; (802d2dc <__ieee754_rem_pio2f+0x23c>)
 802d13a:	429d      	cmp	r5, r3
 802d13c:	dc71      	bgt.n	802d222 <__ieee754_rem_pio2f+0x182>
 802d13e:	f7ff fe33 	bl	802cda8 <fabsf>
 802d142:	ed9f 7a67 	vldr	s14, [pc, #412]	; 802d2e0 <__ieee754_rem_pio2f+0x240>
 802d146:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802d14a:	eee0 7a07 	vfma.f32	s15, s0, s14
 802d14e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802d152:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 802d156:	ee17 0a90 	vmov	r0, s15
 802d15a:	eddf 7a5b 	vldr	s15, [pc, #364]	; 802d2c8 <__ieee754_rem_pio2f+0x228>
 802d15e:	eea7 0a67 	vfms.f32	s0, s14, s15
 802d162:	281f      	cmp	r0, #31
 802d164:	eddf 7a5b 	vldr	s15, [pc, #364]	; 802d2d4 <__ieee754_rem_pio2f+0x234>
 802d168:	ee67 7a27 	vmul.f32	s15, s14, s15
 802d16c:	eeb1 6a47 	vneg.f32	s12, s14
 802d170:	ee70 6a67 	vsub.f32	s13, s0, s15
 802d174:	ee16 2a90 	vmov	r2, s13
 802d178:	dc1c      	bgt.n	802d1b4 <__ieee754_rem_pio2f+0x114>
 802d17a:	495a      	ldr	r1, [pc, #360]	; (802d2e4 <__ieee754_rem_pio2f+0x244>)
 802d17c:	1e47      	subs	r7, r0, #1
 802d17e:	f025 03ff 	bic.w	r3, r5, #255	; 0xff
 802d182:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 802d186:	428b      	cmp	r3, r1
 802d188:	d014      	beq.n	802d1b4 <__ieee754_rem_pio2f+0x114>
 802d18a:	6022      	str	r2, [r4, #0]
 802d18c:	ed94 7a00 	vldr	s14, [r4]
 802d190:	ee30 0a47 	vsub.f32	s0, s0, s14
 802d194:	2e00      	cmp	r6, #0
 802d196:	ee30 0a67 	vsub.f32	s0, s0, s15
 802d19a:	ed84 0a01 	vstr	s0, [r4, #4]
 802d19e:	dab0      	bge.n	802d102 <__ieee754_rem_pio2f+0x62>
 802d1a0:	eeb1 7a47 	vneg.f32	s14, s14
 802d1a4:	eeb1 0a40 	vneg.f32	s0, s0
 802d1a8:	ed84 7a00 	vstr	s14, [r4]
 802d1ac:	ed84 0a01 	vstr	s0, [r4, #4]
 802d1b0:	4240      	negs	r0, r0
 802d1b2:	e7a6      	b.n	802d102 <__ieee754_rem_pio2f+0x62>
 802d1b4:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 802d1b8:	ebc1 51d5 	rsb	r1, r1, r5, lsr #23
 802d1bc:	2908      	cmp	r1, #8
 802d1be:	ea4f 53e5 	mov.w	r3, r5, asr #23
 802d1c2:	dde2      	ble.n	802d18a <__ieee754_rem_pio2f+0xea>
 802d1c4:	eddf 5a42 	vldr	s11, [pc, #264]	; 802d2d0 <__ieee754_rem_pio2f+0x230>
 802d1c8:	eef0 6a40 	vmov.f32	s13, s0
 802d1cc:	eee6 6a25 	vfma.f32	s13, s12, s11
 802d1d0:	ee70 7a66 	vsub.f32	s15, s0, s13
 802d1d4:	eee6 7a25 	vfma.f32	s15, s12, s11
 802d1d8:	eddf 5a3f 	vldr	s11, [pc, #252]	; 802d2d8 <__ieee754_rem_pio2f+0x238>
 802d1dc:	eed7 7a25 	vfnms.f32	s15, s14, s11
 802d1e0:	ee76 5ae7 	vsub.f32	s11, s13, s15
 802d1e4:	ee15 2a90 	vmov	r2, s11
 802d1e8:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 802d1ec:	1a5b      	subs	r3, r3, r1
 802d1ee:	2b19      	cmp	r3, #25
 802d1f0:	dc04      	bgt.n	802d1fc <__ieee754_rem_pio2f+0x15c>
 802d1f2:	edc4 5a00 	vstr	s11, [r4]
 802d1f6:	eeb0 0a66 	vmov.f32	s0, s13
 802d1fa:	e7c7      	b.n	802d18c <__ieee754_rem_pio2f+0xec>
 802d1fc:	eddf 5a3a 	vldr	s11, [pc, #232]	; 802d2e8 <__ieee754_rem_pio2f+0x248>
 802d200:	eeb0 0a66 	vmov.f32	s0, s13
 802d204:	eea6 0a25 	vfma.f32	s0, s12, s11
 802d208:	ee76 7ac0 	vsub.f32	s15, s13, s0
 802d20c:	eddf 6a37 	vldr	s13, [pc, #220]	; 802d2ec <__ieee754_rem_pio2f+0x24c>
 802d210:	eee6 7a25 	vfma.f32	s15, s12, s11
 802d214:	eed7 7a26 	vfnms.f32	s15, s14, s13
 802d218:	ee30 7a67 	vsub.f32	s14, s0, s15
 802d21c:	ed84 7a00 	vstr	s14, [r4]
 802d220:	e7b4      	b.n	802d18c <__ieee754_rem_pio2f+0xec>
 802d222:	f1b5 4fff 	cmp.w	r5, #2139095040	; 0x7f800000
 802d226:	db06      	blt.n	802d236 <__ieee754_rem_pio2f+0x196>
 802d228:	ee70 7a40 	vsub.f32	s15, s0, s0
 802d22c:	edc0 7a01 	vstr	s15, [r0, #4]
 802d230:	edc0 7a00 	vstr	s15, [r0]
 802d234:	e742      	b.n	802d0bc <__ieee754_rem_pio2f+0x1c>
 802d236:	15ea      	asrs	r2, r5, #23
 802d238:	3a86      	subs	r2, #134	; 0x86
 802d23a:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 802d23e:	ee07 3a90 	vmov	s15, r3
 802d242:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 802d246:	eddf 6a2a 	vldr	s13, [pc, #168]	; 802d2f0 <__ieee754_rem_pio2f+0x250>
 802d24a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 802d24e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802d252:	ed8d 7a03 	vstr	s14, [sp, #12]
 802d256:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802d25a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 802d25e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 802d262:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802d266:	ed8d 7a04 	vstr	s14, [sp, #16]
 802d26a:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802d26e:	eef5 7a40 	vcmp.f32	s15, #0.0
 802d272:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d276:	edcd 7a05 	vstr	s15, [sp, #20]
 802d27a:	d11e      	bne.n	802d2ba <__ieee754_rem_pio2f+0x21a>
 802d27c:	eeb5 7a40 	vcmp.f32	s14, #0.0
 802d280:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d284:	bf14      	ite	ne
 802d286:	2302      	movne	r3, #2
 802d288:	2301      	moveq	r3, #1
 802d28a:	491a      	ldr	r1, [pc, #104]	; (802d2f4 <__ieee754_rem_pio2f+0x254>)
 802d28c:	9101      	str	r1, [sp, #4]
 802d28e:	2102      	movs	r1, #2
 802d290:	9100      	str	r1, [sp, #0]
 802d292:	a803      	add	r0, sp, #12
 802d294:	4621      	mov	r1, r4
 802d296:	f000 f895 	bl	802d3c4 <__kernel_rem_pio2f>
 802d29a:	2e00      	cmp	r6, #0
 802d29c:	f6bf af31 	bge.w	802d102 <__ieee754_rem_pio2f+0x62>
 802d2a0:	edd4 7a00 	vldr	s15, [r4]
 802d2a4:	eef1 7a67 	vneg.f32	s15, s15
 802d2a8:	edc4 7a00 	vstr	s15, [r4]
 802d2ac:	edd4 7a01 	vldr	s15, [r4, #4]
 802d2b0:	eef1 7a67 	vneg.f32	s15, s15
 802d2b4:	edc4 7a01 	vstr	s15, [r4, #4]
 802d2b8:	e77a      	b.n	802d1b0 <__ieee754_rem_pio2f+0x110>
 802d2ba:	2303      	movs	r3, #3
 802d2bc:	e7e5      	b.n	802d28a <__ieee754_rem_pio2f+0x1ea>
 802d2be:	bf00      	nop
 802d2c0:	3f490fd8 	.word	0x3f490fd8
 802d2c4:	4016cbe3 	.word	0x4016cbe3
 802d2c8:	3fc90f80 	.word	0x3fc90f80
 802d2cc:	3fc90fd0 	.word	0x3fc90fd0
 802d2d0:	37354400 	.word	0x37354400
 802d2d4:	37354443 	.word	0x37354443
 802d2d8:	2e85a308 	.word	0x2e85a308
 802d2dc:	43490f80 	.word	0x43490f80
 802d2e0:	3f22f984 	.word	0x3f22f984
 802d2e4:	0804575c 	.word	0x0804575c
 802d2e8:	2e85a300 	.word	0x2e85a300
 802d2ec:	248d3132 	.word	0x248d3132
 802d2f0:	43800000 	.word	0x43800000
 802d2f4:	080457dc 	.word	0x080457dc

0802d2f8 <scalbnf>:
 802d2f8:	ee10 3a10 	vmov	r3, s0
 802d2fc:	f033 4200 	bics.w	r2, r3, #2147483648	; 0x80000000
 802d300:	d02b      	beq.n	802d35a <scalbnf+0x62>
 802d302:	f1b2 4fff 	cmp.w	r2, #2139095040	; 0x7f800000
 802d306:	d302      	bcc.n	802d30e <scalbnf+0x16>
 802d308:	ee30 0a00 	vadd.f32	s0, s0, s0
 802d30c:	4770      	bx	lr
 802d30e:	f013 4fff 	tst.w	r3, #2139095040	; 0x7f800000
 802d312:	d123      	bne.n	802d35c <scalbnf+0x64>
 802d314:	4b24      	ldr	r3, [pc, #144]	; (802d3a8 <scalbnf+0xb0>)
 802d316:	eddf 7a25 	vldr	s15, [pc, #148]	; 802d3ac <scalbnf+0xb4>
 802d31a:	4298      	cmp	r0, r3
 802d31c:	ee20 0a27 	vmul.f32	s0, s0, s15
 802d320:	db17      	blt.n	802d352 <scalbnf+0x5a>
 802d322:	ee10 3a10 	vmov	r3, s0
 802d326:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802d32a:	3a19      	subs	r2, #25
 802d32c:	f24c 3150 	movw	r1, #50000	; 0xc350
 802d330:	4288      	cmp	r0, r1
 802d332:	dd15      	ble.n	802d360 <scalbnf+0x68>
 802d334:	eddf 7a1e 	vldr	s15, [pc, #120]	; 802d3b0 <scalbnf+0xb8>
 802d338:	eddf 6a1e 	vldr	s13, [pc, #120]	; 802d3b4 <scalbnf+0xbc>
 802d33c:	ee10 3a10 	vmov	r3, s0
 802d340:	eeb0 7a67 	vmov.f32	s14, s15
 802d344:	2b00      	cmp	r3, #0
 802d346:	bfb8      	it	lt
 802d348:	eef0 7a66 	vmovlt.f32	s15, s13
 802d34c:	ee27 0a87 	vmul.f32	s0, s15, s14
 802d350:	4770      	bx	lr
 802d352:	eddf 7a19 	vldr	s15, [pc, #100]	; 802d3b8 <scalbnf+0xc0>
 802d356:	ee27 0a80 	vmul.f32	s0, s15, s0
 802d35a:	4770      	bx	lr
 802d35c:	0dd2      	lsrs	r2, r2, #23
 802d35e:	e7e5      	b.n	802d32c <scalbnf+0x34>
 802d360:	4410      	add	r0, r2
 802d362:	28fe      	cmp	r0, #254	; 0xfe
 802d364:	dce6      	bgt.n	802d334 <scalbnf+0x3c>
 802d366:	2800      	cmp	r0, #0
 802d368:	dd06      	ble.n	802d378 <scalbnf+0x80>
 802d36a:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 802d36e:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 802d372:	ee00 3a10 	vmov	s0, r3
 802d376:	4770      	bx	lr
 802d378:	f110 0f16 	cmn.w	r0, #22
 802d37c:	da09      	bge.n	802d392 <scalbnf+0x9a>
 802d37e:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802d3b8 <scalbnf+0xc0>
 802d382:	eddf 6a0e 	vldr	s13, [pc, #56]	; 802d3bc <scalbnf+0xc4>
 802d386:	ee10 3a10 	vmov	r3, s0
 802d38a:	eeb0 7a67 	vmov.f32	s14, s15
 802d38e:	2b00      	cmp	r3, #0
 802d390:	e7d9      	b.n	802d346 <scalbnf+0x4e>
 802d392:	3019      	adds	r0, #25
 802d394:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 802d398:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 802d39c:	ed9f 0a08 	vldr	s0, [pc, #32]	; 802d3c0 <scalbnf+0xc8>
 802d3a0:	ee07 3a90 	vmov	s15, r3
 802d3a4:	e7d7      	b.n	802d356 <scalbnf+0x5e>
 802d3a6:	bf00      	nop
 802d3a8:	ffff3cb0 	.word	0xffff3cb0
 802d3ac:	4c000000 	.word	0x4c000000
 802d3b0:	7149f2ca 	.word	0x7149f2ca
 802d3b4:	f149f2ca 	.word	0xf149f2ca
 802d3b8:	0da24260 	.word	0x0da24260
 802d3bc:	8da24260 	.word	0x8da24260
 802d3c0:	33000000 	.word	0x33000000

0802d3c4 <__kernel_rem_pio2f>:
 802d3c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802d3c8:	ed2d 8b04 	vpush	{d8-d9}
 802d3cc:	b0d9      	sub	sp, #356	; 0x164
 802d3ce:	4688      	mov	r8, r1
 802d3d0:	9002      	str	r0, [sp, #8]
 802d3d2:	49b8      	ldr	r1, [pc, #736]	; (802d6b4 <__kernel_rem_pio2f+0x2f0>)
 802d3d4:	9866      	ldr	r0, [sp, #408]	; 0x198
 802d3d6:	9301      	str	r3, [sp, #4]
 802d3d8:	f851 a020 	ldr.w	sl, [r1, r0, lsl #2]
 802d3dc:	9901      	ldr	r1, [sp, #4]
 802d3de:	9b67      	ldr	r3, [sp, #412]	; 0x19c
 802d3e0:	f101 3bff 	add.w	fp, r1, #4294967295
 802d3e4:	1d11      	adds	r1, r2, #4
 802d3e6:	db25      	blt.n	802d434 <__kernel_rem_pio2f+0x70>
 802d3e8:	1ed0      	subs	r0, r2, #3
 802d3ea:	bf48      	it	mi
 802d3ec:	1d10      	addmi	r0, r2, #4
 802d3ee:	10c0      	asrs	r0, r0, #3
 802d3f0:	1c45      	adds	r5, r0, #1
 802d3f2:	00e9      	lsls	r1, r5, #3
 802d3f4:	eba0 070b 	sub.w	r7, r0, fp
 802d3f8:	ed9f 7ab2 	vldr	s14, [pc, #712]	; 802d6c4 <__kernel_rem_pio2f+0x300>
 802d3fc:	9103      	str	r1, [sp, #12]
 802d3fe:	eba2 05c5 	sub.w	r5, r2, r5, lsl #3
 802d402:	eb0a 0c0b 	add.w	ip, sl, fp
 802d406:	ae1c      	add	r6, sp, #112	; 0x70
 802d408:	eb03 0e87 	add.w	lr, r3, r7, lsl #2
 802d40c:	2400      	movs	r4, #0
 802d40e:	4564      	cmp	r4, ip
 802d410:	dd12      	ble.n	802d438 <__kernel_rem_pio2f+0x74>
 802d412:	9901      	ldr	r1, [sp, #4]
 802d414:	ac1c      	add	r4, sp, #112	; 0x70
 802d416:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 802d41a:	f50d 7988 	add.w	r9, sp, #272	; 0x110
 802d41e:	f04f 0c00 	mov.w	ip, #0
 802d422:	45d4      	cmp	ip, sl
 802d424:	dc27      	bgt.n	802d476 <__kernel_rem_pio2f+0xb2>
 802d426:	f8dd e008 	ldr.w	lr, [sp, #8]
 802d42a:	eddf 7aa6 	vldr	s15, [pc, #664]	; 802d6c4 <__kernel_rem_pio2f+0x300>
 802d42e:	4627      	mov	r7, r4
 802d430:	2600      	movs	r6, #0
 802d432:	e016      	b.n	802d462 <__kernel_rem_pio2f+0x9e>
 802d434:	2000      	movs	r0, #0
 802d436:	e7db      	b.n	802d3f0 <__kernel_rem_pio2f+0x2c>
 802d438:	42e7      	cmn	r7, r4
 802d43a:	bf5d      	ittte	pl
 802d43c:	f85e 1024 	ldrpl.w	r1, [lr, r4, lsl #2]
 802d440:	ee07 1a90 	vmovpl	s15, r1
 802d444:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 802d448:	eef0 7a47 	vmovmi.f32	s15, s14
 802d44c:	ece6 7a01 	vstmia	r6!, {s15}
 802d450:	3401      	adds	r4, #1
 802d452:	e7dc      	b.n	802d40e <__kernel_rem_pio2f+0x4a>
 802d454:	ecfe 6a01 	vldmia	lr!, {s13}
 802d458:	ed97 7a00 	vldr	s14, [r7]
 802d45c:	eee6 7a87 	vfma.f32	s15, s13, s14
 802d460:	3601      	adds	r6, #1
 802d462:	455e      	cmp	r6, fp
 802d464:	f1a7 0704 	sub.w	r7, r7, #4
 802d468:	ddf4      	ble.n	802d454 <__kernel_rem_pio2f+0x90>
 802d46a:	ece9 7a01 	vstmia	r9!, {s15}
 802d46e:	f10c 0c01 	add.w	ip, ip, #1
 802d472:	3404      	adds	r4, #4
 802d474:	e7d5      	b.n	802d422 <__kernel_rem_pio2f+0x5e>
 802d476:	a908      	add	r1, sp, #32
 802d478:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 802d47c:	eb03 0380 	add.w	r3, r3, r0, lsl #2
 802d480:	eddf 8a8f 	vldr	s17, [pc, #572]	; 802d6c0 <__kernel_rem_pio2f+0x2fc>
 802d484:	ed9f 9a8d 	vldr	s18, [pc, #564]	; 802d6bc <__kernel_rem_pio2f+0x2f8>
 802d488:	9105      	str	r1, [sp, #20]
 802d48a:	9304      	str	r3, [sp, #16]
 802d48c:	4656      	mov	r6, sl
 802d48e:	00b3      	lsls	r3, r6, #2
 802d490:	9306      	str	r3, [sp, #24]
 802d492:	ab58      	add	r3, sp, #352	; 0x160
 802d494:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 802d498:	ac08      	add	r4, sp, #32
 802d49a:	ab44      	add	r3, sp, #272	; 0x110
 802d49c:	ed10 0a14 	vldr	s0, [r0, #-80]	; 0xffffffb0
 802d4a0:	46a4      	mov	ip, r4
 802d4a2:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 802d4a6:	4637      	mov	r7, r6
 802d4a8:	2f00      	cmp	r7, #0
 802d4aa:	f1a0 0004 	sub.w	r0, r0, #4
 802d4ae:	dc4a      	bgt.n	802d546 <__kernel_rem_pio2f+0x182>
 802d4b0:	4628      	mov	r0, r5
 802d4b2:	9207      	str	r2, [sp, #28]
 802d4b4:	f7ff ff20 	bl	802d2f8 <scalbnf>
 802d4b8:	eeb0 8a40 	vmov.f32	s16, s0
 802d4bc:	eeb4 0a00 	vmov.f32	s0, #64	; 0x3e000000  0.125
 802d4c0:	ee28 0a00 	vmul.f32	s0, s16, s0
 802d4c4:	f7ff fd04 	bl	802ced0 <floorf>
 802d4c8:	eef2 7a00 	vmov.f32	s15, #32	; 0x41000000  8.0
 802d4cc:	eea0 8a67 	vfms.f32	s16, s0, s15
 802d4d0:	2d00      	cmp	r5, #0
 802d4d2:	9a07      	ldr	r2, [sp, #28]
 802d4d4:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 802d4d8:	ee17 9a90 	vmov	r9, s15
 802d4dc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802d4e0:	ee38 8a67 	vsub.f32	s16, s16, s15
 802d4e4:	dd41      	ble.n	802d56a <__kernel_rem_pio2f+0x1a6>
 802d4e6:	f106 3cff 	add.w	ip, r6, #4294967295
 802d4ea:	ab08      	add	r3, sp, #32
 802d4ec:	f1c5 0e08 	rsb	lr, r5, #8
 802d4f0:	f853 702c 	ldr.w	r7, [r3, ip, lsl #2]
 802d4f4:	fa47 f00e 	asr.w	r0, r7, lr
 802d4f8:	4481      	add	r9, r0
 802d4fa:	fa00 f00e 	lsl.w	r0, r0, lr
 802d4fe:	1a3f      	subs	r7, r7, r0
 802d500:	f1c5 0007 	rsb	r0, r5, #7
 802d504:	f843 702c 	str.w	r7, [r3, ip, lsl #2]
 802d508:	4107      	asrs	r7, r0
 802d50a:	2f00      	cmp	r7, #0
 802d50c:	dd3c      	ble.n	802d588 <__kernel_rem_pio2f+0x1c4>
 802d50e:	f04f 0e00 	mov.w	lr, #0
 802d512:	f109 0901 	add.w	r9, r9, #1
 802d516:	4671      	mov	r1, lr
 802d518:	4576      	cmp	r6, lr
 802d51a:	dc67      	bgt.n	802d5ec <__kernel_rem_pio2f+0x228>
 802d51c:	2d00      	cmp	r5, #0
 802d51e:	dd03      	ble.n	802d528 <__kernel_rem_pio2f+0x164>
 802d520:	2d01      	cmp	r5, #1
 802d522:	d074      	beq.n	802d60e <__kernel_rem_pio2f+0x24a>
 802d524:	2d02      	cmp	r5, #2
 802d526:	d07b      	beq.n	802d620 <__kernel_rem_pio2f+0x25c>
 802d528:	2f02      	cmp	r7, #2
 802d52a:	d12d      	bne.n	802d588 <__kernel_rem_pio2f+0x1c4>
 802d52c:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 802d530:	ee30 8a48 	vsub.f32	s16, s0, s16
 802d534:	b341      	cbz	r1, 802d588 <__kernel_rem_pio2f+0x1c4>
 802d536:	4628      	mov	r0, r5
 802d538:	9207      	str	r2, [sp, #28]
 802d53a:	f7ff fedd 	bl	802d2f8 <scalbnf>
 802d53e:	9a07      	ldr	r2, [sp, #28]
 802d540:	ee38 8a40 	vsub.f32	s16, s16, s0
 802d544:	e020      	b.n	802d588 <__kernel_rem_pio2f+0x1c4>
 802d546:	ee60 7a28 	vmul.f32	s15, s0, s17
 802d54a:	3f01      	subs	r7, #1
 802d54c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802d550:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802d554:	eea7 0ac9 	vfms.f32	s0, s15, s18
 802d558:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802d55c:	ecac 0a01 	vstmia	ip!, {s0}
 802d560:	ed90 0a00 	vldr	s0, [r0]
 802d564:	ee37 0a80 	vadd.f32	s0, s15, s0
 802d568:	e79e      	b.n	802d4a8 <__kernel_rem_pio2f+0xe4>
 802d56a:	d105      	bne.n	802d578 <__kernel_rem_pio2f+0x1b4>
 802d56c:	1e70      	subs	r0, r6, #1
 802d56e:	ab08      	add	r3, sp, #32
 802d570:	f853 7020 	ldr.w	r7, [r3, r0, lsl #2]
 802d574:	11ff      	asrs	r7, r7, #7
 802d576:	e7c8      	b.n	802d50a <__kernel_rem_pio2f+0x146>
 802d578:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802d57c:	eeb4 8ae7 	vcmpe.f32	s16, s15
 802d580:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d584:	da30      	bge.n	802d5e8 <__kernel_rem_pio2f+0x224>
 802d586:	2700      	movs	r7, #0
 802d588:	eeb5 8a40 	vcmp.f32	s16, #0.0
 802d58c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d590:	f040 809a 	bne.w	802d6c8 <__kernel_rem_pio2f+0x304>
 802d594:	1e74      	subs	r4, r6, #1
 802d596:	46a4      	mov	ip, r4
 802d598:	2100      	movs	r1, #0
 802d59a:	45d4      	cmp	ip, sl
 802d59c:	da47      	bge.n	802d62e <__kernel_rem_pio2f+0x26a>
 802d59e:	2900      	cmp	r1, #0
 802d5a0:	d063      	beq.n	802d66a <__kernel_rem_pio2f+0x2a6>
 802d5a2:	ab08      	add	r3, sp, #32
 802d5a4:	3d08      	subs	r5, #8
 802d5a6:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 802d5aa:	2b00      	cmp	r3, #0
 802d5ac:	d07f      	beq.n	802d6ae <__kernel_rem_pio2f+0x2ea>
 802d5ae:	4628      	mov	r0, r5
 802d5b0:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 802d5b4:	f7ff fea0 	bl	802d2f8 <scalbnf>
 802d5b8:	1c63      	adds	r3, r4, #1
 802d5ba:	aa44      	add	r2, sp, #272	; 0x110
 802d5bc:	ed9f 7a40 	vldr	s14, [pc, #256]	; 802d6c0 <__kernel_rem_pio2f+0x2fc>
 802d5c0:	0099      	lsls	r1, r3, #2
 802d5c2:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 802d5c6:	4623      	mov	r3, r4
 802d5c8:	2b00      	cmp	r3, #0
 802d5ca:	f280 80ad 	bge.w	802d728 <__kernel_rem_pio2f+0x364>
 802d5ce:	4623      	mov	r3, r4
 802d5d0:	2b00      	cmp	r3, #0
 802d5d2:	f2c0 80cb 	blt.w	802d76c <__kernel_rem_pio2f+0x3a8>
 802d5d6:	aa44      	add	r2, sp, #272	; 0x110
 802d5d8:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 802d5dc:	4e36      	ldr	r6, [pc, #216]	; (802d6b8 <__kernel_rem_pio2f+0x2f4>)
 802d5de:	eddf 7a39 	vldr	s15, [pc, #228]	; 802d6c4 <__kernel_rem_pio2f+0x300>
 802d5e2:	2000      	movs	r0, #0
 802d5e4:	1ae2      	subs	r2, r4, r3
 802d5e6:	e0b6      	b.n	802d756 <__kernel_rem_pio2f+0x392>
 802d5e8:	2702      	movs	r7, #2
 802d5ea:	e790      	b.n	802d50e <__kernel_rem_pio2f+0x14a>
 802d5ec:	6820      	ldr	r0, [r4, #0]
 802d5ee:	b949      	cbnz	r1, 802d604 <__kernel_rem_pio2f+0x240>
 802d5f0:	b118      	cbz	r0, 802d5fa <__kernel_rem_pio2f+0x236>
 802d5f2:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 802d5f6:	6020      	str	r0, [r4, #0]
 802d5f8:	2001      	movs	r0, #1
 802d5fa:	f10e 0e01 	add.w	lr, lr, #1
 802d5fe:	3404      	adds	r4, #4
 802d600:	4601      	mov	r1, r0
 802d602:	e789      	b.n	802d518 <__kernel_rem_pio2f+0x154>
 802d604:	f1c0 00ff 	rsb	r0, r0, #255	; 0xff
 802d608:	6020      	str	r0, [r4, #0]
 802d60a:	4608      	mov	r0, r1
 802d60c:	e7f5      	b.n	802d5fa <__kernel_rem_pio2f+0x236>
 802d60e:	1e74      	subs	r4, r6, #1
 802d610:	ab08      	add	r3, sp, #32
 802d612:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 802d616:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 802d61a:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 802d61e:	e783      	b.n	802d528 <__kernel_rem_pio2f+0x164>
 802d620:	1e74      	subs	r4, r6, #1
 802d622:	ab08      	add	r3, sp, #32
 802d624:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 802d628:	f000 003f 	and.w	r0, r0, #63	; 0x3f
 802d62c:	e7f5      	b.n	802d61a <__kernel_rem_pio2f+0x256>
 802d62e:	ab08      	add	r3, sp, #32
 802d630:	f853 002c 	ldr.w	r0, [r3, ip, lsl #2]
 802d634:	f10c 3cff 	add.w	ip, ip, #4294967295
 802d638:	4301      	orrs	r1, r0
 802d63a:	e7ae      	b.n	802d59a <__kernel_rem_pio2f+0x1d6>
 802d63c:	3001      	adds	r0, #1
 802d63e:	f854 7d04 	ldr.w	r7, [r4, #-4]!
 802d642:	2f00      	cmp	r7, #0
 802d644:	d0fa      	beq.n	802d63c <__kernel_rem_pio2f+0x278>
 802d646:	9b06      	ldr	r3, [sp, #24]
 802d648:	f503 73b0 	add.w	r3, r3, #352	; 0x160
 802d64c:	eb0d 0403 	add.w	r4, sp, r3
 802d650:	9b01      	ldr	r3, [sp, #4]
 802d652:	18f7      	adds	r7, r6, r3
 802d654:	ab1c      	add	r3, sp, #112	; 0x70
 802d656:	f106 0c01 	add.w	ip, r6, #1
 802d65a:	3c4c      	subs	r4, #76	; 0x4c
 802d65c:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 802d660:	4430      	add	r0, r6
 802d662:	4560      	cmp	r0, ip
 802d664:	da04      	bge.n	802d670 <__kernel_rem_pio2f+0x2ac>
 802d666:	4606      	mov	r6, r0
 802d668:	e711      	b.n	802d48e <__kernel_rem_pio2f+0xca>
 802d66a:	9c05      	ldr	r4, [sp, #20]
 802d66c:	2001      	movs	r0, #1
 802d66e:	e7e6      	b.n	802d63e <__kernel_rem_pio2f+0x27a>
 802d670:	9b04      	ldr	r3, [sp, #16]
 802d672:	f8dd e008 	ldr.w	lr, [sp, #8]
 802d676:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 802d67a:	9306      	str	r3, [sp, #24]
 802d67c:	ee07 3a90 	vmov	s15, r3
 802d680:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802d684:	2600      	movs	r6, #0
 802d686:	ece7 7a01 	vstmia	r7!, {s15}
 802d68a:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802d6c4 <__kernel_rem_pio2f+0x300>
 802d68e:	46b9      	mov	r9, r7
 802d690:	455e      	cmp	r6, fp
 802d692:	dd04      	ble.n	802d69e <__kernel_rem_pio2f+0x2da>
 802d694:	ece4 7a01 	vstmia	r4!, {s15}
 802d698:	f10c 0c01 	add.w	ip, ip, #1
 802d69c:	e7e1      	b.n	802d662 <__kernel_rem_pio2f+0x29e>
 802d69e:	ecfe 6a01 	vldmia	lr!, {s13}
 802d6a2:	ed39 7a01 	vldmdb	r9!, {s14}
 802d6a6:	3601      	adds	r6, #1
 802d6a8:	eee6 7a87 	vfma.f32	s15, s13, s14
 802d6ac:	e7f0      	b.n	802d690 <__kernel_rem_pio2f+0x2cc>
 802d6ae:	3c01      	subs	r4, #1
 802d6b0:	e777      	b.n	802d5a2 <__kernel_rem_pio2f+0x1de>
 802d6b2:	bf00      	nop
 802d6b4:	08045b20 	.word	0x08045b20
 802d6b8:	08045af4 	.word	0x08045af4
 802d6bc:	43800000 	.word	0x43800000
 802d6c0:	3b800000 	.word	0x3b800000
 802d6c4:	00000000 	.word	0x00000000
 802d6c8:	9b03      	ldr	r3, [sp, #12]
 802d6ca:	eeb0 0a48 	vmov.f32	s0, s16
 802d6ce:	1a98      	subs	r0, r3, r2
 802d6d0:	f7ff fe12 	bl	802d2f8 <scalbnf>
 802d6d4:	ed1f 7a07 	vldr	s14, [pc, #-28]	; 802d6bc <__kernel_rem_pio2f+0x2f8>
 802d6d8:	eeb4 0ac7 	vcmpe.f32	s0, s14
 802d6dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d6e0:	db19      	blt.n	802d716 <__kernel_rem_pio2f+0x352>
 802d6e2:	ed5f 7a09 	vldr	s15, [pc, #-36]	; 802d6c0 <__kernel_rem_pio2f+0x2fc>
 802d6e6:	ee60 7a27 	vmul.f32	s15, s0, s15
 802d6ea:	aa08      	add	r2, sp, #32
 802d6ec:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802d6f0:	1c74      	adds	r4, r6, #1
 802d6f2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802d6f6:	3508      	adds	r5, #8
 802d6f8:	eea7 0ac7 	vfms.f32	s0, s15, s14
 802d6fc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802d700:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802d704:	ee10 3a10 	vmov	r3, s0
 802d708:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 802d70c:	ee17 3a90 	vmov	r3, s15
 802d710:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 802d714:	e74b      	b.n	802d5ae <__kernel_rem_pio2f+0x1ea>
 802d716:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802d71a:	aa08      	add	r2, sp, #32
 802d71c:	ee10 3a10 	vmov	r3, s0
 802d720:	4634      	mov	r4, r6
 802d722:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 802d726:	e742      	b.n	802d5ae <__kernel_rem_pio2f+0x1ea>
 802d728:	a808      	add	r0, sp, #32
 802d72a:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 802d72e:	9001      	str	r0, [sp, #4]
 802d730:	ee07 0a90 	vmov	s15, r0
 802d734:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802d738:	3b01      	subs	r3, #1
 802d73a:	ee67 7a80 	vmul.f32	s15, s15, s0
 802d73e:	ee20 0a07 	vmul.f32	s0, s0, s14
 802d742:	ed62 7a01 	vstmdb	r2!, {s15}
 802d746:	e73f      	b.n	802d5c8 <__kernel_rem_pio2f+0x204>
 802d748:	ecf6 6a01 	vldmia	r6!, {s13}
 802d74c:	ecb5 7a01 	vldmia	r5!, {s14}
 802d750:	eee6 7a87 	vfma.f32	s15, s13, s14
 802d754:	3001      	adds	r0, #1
 802d756:	4550      	cmp	r0, sl
 802d758:	dc01      	bgt.n	802d75e <__kernel_rem_pio2f+0x39a>
 802d75a:	4290      	cmp	r0, r2
 802d75c:	ddf4      	ble.n	802d748 <__kernel_rem_pio2f+0x384>
 802d75e:	a858      	add	r0, sp, #352	; 0x160
 802d760:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 802d764:	ed42 7a28 	vstr	s15, [r2, #-160]	; 0xffffff60
 802d768:	3b01      	subs	r3, #1
 802d76a:	e731      	b.n	802d5d0 <__kernel_rem_pio2f+0x20c>
 802d76c:	9b66      	ldr	r3, [sp, #408]	; 0x198
 802d76e:	2b02      	cmp	r3, #2
 802d770:	dc09      	bgt.n	802d786 <__kernel_rem_pio2f+0x3c2>
 802d772:	2b00      	cmp	r3, #0
 802d774:	dc2b      	bgt.n	802d7ce <__kernel_rem_pio2f+0x40a>
 802d776:	d044      	beq.n	802d802 <__kernel_rem_pio2f+0x43e>
 802d778:	f009 0007 	and.w	r0, r9, #7
 802d77c:	b059      	add	sp, #356	; 0x164
 802d77e:	ecbd 8b04 	vpop	{d8-d9}
 802d782:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802d786:	9b66      	ldr	r3, [sp, #408]	; 0x198
 802d788:	2b03      	cmp	r3, #3
 802d78a:	d1f5      	bne.n	802d778 <__kernel_rem_pio2f+0x3b4>
 802d78c:	aa30      	add	r2, sp, #192	; 0xc0
 802d78e:	1f0b      	subs	r3, r1, #4
 802d790:	4413      	add	r3, r2
 802d792:	461a      	mov	r2, r3
 802d794:	4620      	mov	r0, r4
 802d796:	2800      	cmp	r0, #0
 802d798:	f1a2 0204 	sub.w	r2, r2, #4
 802d79c:	dc52      	bgt.n	802d844 <__kernel_rem_pio2f+0x480>
 802d79e:	4622      	mov	r2, r4
 802d7a0:	2a01      	cmp	r2, #1
 802d7a2:	f1a3 0304 	sub.w	r3, r3, #4
 802d7a6:	dc5d      	bgt.n	802d864 <__kernel_rem_pio2f+0x4a0>
 802d7a8:	ab30      	add	r3, sp, #192	; 0xc0
 802d7aa:	ed5f 7a3a 	vldr	s15, [pc, #-232]	; 802d6c4 <__kernel_rem_pio2f+0x300>
 802d7ae:	440b      	add	r3, r1
 802d7b0:	2c01      	cmp	r4, #1
 802d7b2:	dc67      	bgt.n	802d884 <__kernel_rem_pio2f+0x4c0>
 802d7b4:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 802d7b8:	ed9d 7a31 	vldr	s14, [sp, #196]	; 0xc4
 802d7bc:	2f00      	cmp	r7, #0
 802d7be:	d167      	bne.n	802d890 <__kernel_rem_pio2f+0x4cc>
 802d7c0:	edc8 6a00 	vstr	s13, [r8]
 802d7c4:	ed88 7a01 	vstr	s14, [r8, #4]
 802d7c8:	edc8 7a02 	vstr	s15, [r8, #8]
 802d7cc:	e7d4      	b.n	802d778 <__kernel_rem_pio2f+0x3b4>
 802d7ce:	ab30      	add	r3, sp, #192	; 0xc0
 802d7d0:	ed1f 7a44 	vldr	s14, [pc, #-272]	; 802d6c4 <__kernel_rem_pio2f+0x300>
 802d7d4:	440b      	add	r3, r1
 802d7d6:	4622      	mov	r2, r4
 802d7d8:	2a00      	cmp	r2, #0
 802d7da:	da24      	bge.n	802d826 <__kernel_rem_pio2f+0x462>
 802d7dc:	b34f      	cbz	r7, 802d832 <__kernel_rem_pio2f+0x46e>
 802d7de:	eef1 7a47 	vneg.f32	s15, s14
 802d7e2:	edc8 7a00 	vstr	s15, [r8]
 802d7e6:	eddd 7a30 	vldr	s15, [sp, #192]	; 0xc0
 802d7ea:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802d7ee:	aa31      	add	r2, sp, #196	; 0xc4
 802d7f0:	2301      	movs	r3, #1
 802d7f2:	429c      	cmp	r4, r3
 802d7f4:	da20      	bge.n	802d838 <__kernel_rem_pio2f+0x474>
 802d7f6:	b10f      	cbz	r7, 802d7fc <__kernel_rem_pio2f+0x438>
 802d7f8:	eef1 7a67 	vneg.f32	s15, s15
 802d7fc:	edc8 7a01 	vstr	s15, [r8, #4]
 802d800:	e7ba      	b.n	802d778 <__kernel_rem_pio2f+0x3b4>
 802d802:	ab30      	add	r3, sp, #192	; 0xc0
 802d804:	ed5f 7a51 	vldr	s15, [pc, #-324]	; 802d6c4 <__kernel_rem_pio2f+0x300>
 802d808:	440b      	add	r3, r1
 802d80a:	2c00      	cmp	r4, #0
 802d80c:	da05      	bge.n	802d81a <__kernel_rem_pio2f+0x456>
 802d80e:	b10f      	cbz	r7, 802d814 <__kernel_rem_pio2f+0x450>
 802d810:	eef1 7a67 	vneg.f32	s15, s15
 802d814:	edc8 7a00 	vstr	s15, [r8]
 802d818:	e7ae      	b.n	802d778 <__kernel_rem_pio2f+0x3b4>
 802d81a:	ed33 7a01 	vldmdb	r3!, {s14}
 802d81e:	3c01      	subs	r4, #1
 802d820:	ee77 7a87 	vadd.f32	s15, s15, s14
 802d824:	e7f1      	b.n	802d80a <__kernel_rem_pio2f+0x446>
 802d826:	ed73 7a01 	vldmdb	r3!, {s15}
 802d82a:	3a01      	subs	r2, #1
 802d82c:	ee37 7a27 	vadd.f32	s14, s14, s15
 802d830:	e7d2      	b.n	802d7d8 <__kernel_rem_pio2f+0x414>
 802d832:	eef0 7a47 	vmov.f32	s15, s14
 802d836:	e7d4      	b.n	802d7e2 <__kernel_rem_pio2f+0x41e>
 802d838:	ecb2 7a01 	vldmia	r2!, {s14}
 802d83c:	3301      	adds	r3, #1
 802d83e:	ee77 7a87 	vadd.f32	s15, s15, s14
 802d842:	e7d6      	b.n	802d7f2 <__kernel_rem_pio2f+0x42e>
 802d844:	edd2 7a00 	vldr	s15, [r2]
 802d848:	edd2 6a01 	vldr	s13, [r2, #4]
 802d84c:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802d850:	3801      	subs	r0, #1
 802d852:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802d856:	ed82 7a00 	vstr	s14, [r2]
 802d85a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802d85e:	edc2 7a01 	vstr	s15, [r2, #4]
 802d862:	e798      	b.n	802d796 <__kernel_rem_pio2f+0x3d2>
 802d864:	edd3 7a00 	vldr	s15, [r3]
 802d868:	edd3 6a01 	vldr	s13, [r3, #4]
 802d86c:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802d870:	3a01      	subs	r2, #1
 802d872:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802d876:	ed83 7a00 	vstr	s14, [r3]
 802d87a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802d87e:	edc3 7a01 	vstr	s15, [r3, #4]
 802d882:	e78d      	b.n	802d7a0 <__kernel_rem_pio2f+0x3dc>
 802d884:	ed33 7a01 	vldmdb	r3!, {s14}
 802d888:	3c01      	subs	r4, #1
 802d88a:	ee77 7a87 	vadd.f32	s15, s15, s14
 802d88e:	e78f      	b.n	802d7b0 <__kernel_rem_pio2f+0x3ec>
 802d890:	eef1 6a66 	vneg.f32	s13, s13
 802d894:	eeb1 7a47 	vneg.f32	s14, s14
 802d898:	edc8 6a00 	vstr	s13, [r8]
 802d89c:	ed88 7a01 	vstr	s14, [r8, #4]
 802d8a0:	eef1 7a67 	vneg.f32	s15, s15
 802d8a4:	e790      	b.n	802d7c8 <__kernel_rem_pio2f+0x404>
 802d8a6:	bf00      	nop

0802d8a8 <abort>:
 802d8a8:	b508      	push	{r3, lr}
 802d8aa:	2006      	movs	r0, #6
 802d8ac:	f000 fa3a 	bl	802dd24 <raise>
 802d8b0:	2001      	movs	r0, #1
 802d8b2:	f7d4 ffa9 	bl	8002808 <_exit>
	...

0802d8b8 <__assert_func>:
 802d8b8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 802d8ba:	4614      	mov	r4, r2
 802d8bc:	461a      	mov	r2, r3
 802d8be:	4b09      	ldr	r3, [pc, #36]	; (802d8e4 <__assert_func+0x2c>)
 802d8c0:	681b      	ldr	r3, [r3, #0]
 802d8c2:	4605      	mov	r5, r0
 802d8c4:	68d8      	ldr	r0, [r3, #12]
 802d8c6:	b14c      	cbz	r4, 802d8dc <__assert_func+0x24>
 802d8c8:	4b07      	ldr	r3, [pc, #28]	; (802d8e8 <__assert_func+0x30>)
 802d8ca:	9100      	str	r1, [sp, #0]
 802d8cc:	e9cd 3401 	strd	r3, r4, [sp, #4]
 802d8d0:	4906      	ldr	r1, [pc, #24]	; (802d8ec <__assert_func+0x34>)
 802d8d2:	462b      	mov	r3, r5
 802d8d4:	f000 f982 	bl	802dbdc <fiprintf>
 802d8d8:	f7ff ffe6 	bl	802d8a8 <abort>
 802d8dc:	4b04      	ldr	r3, [pc, #16]	; (802d8f0 <__assert_func+0x38>)
 802d8de:	461c      	mov	r4, r3
 802d8e0:	e7f3      	b.n	802d8ca <__assert_func+0x12>
 802d8e2:	bf00      	nop
 802d8e4:	20000164 	.word	0x20000164
 802d8e8:	08045b2c 	.word	0x08045b2c
 802d8ec:	08045b39 	.word	0x08045b39
 802d8f0:	08045b67 	.word	0x08045b67

0802d8f4 <atexit>:
 802d8f4:	2300      	movs	r3, #0
 802d8f6:	4601      	mov	r1, r0
 802d8f8:	461a      	mov	r2, r3
 802d8fa:	4618      	mov	r0, r3
 802d8fc:	f000 bb16 	b.w	802df2c <__register_exitproc>

0802d900 <malloc>:
 802d900:	4b02      	ldr	r3, [pc, #8]	; (802d90c <malloc+0xc>)
 802d902:	4601      	mov	r1, r0
 802d904:	6818      	ldr	r0, [r3, #0]
 802d906:	f000 b82b 	b.w	802d960 <_malloc_r>
 802d90a:	bf00      	nop
 802d90c:	20000164 	.word	0x20000164

0802d910 <free>:
 802d910:	4b02      	ldr	r3, [pc, #8]	; (802d91c <free+0xc>)
 802d912:	4601      	mov	r1, r0
 802d914:	6818      	ldr	r0, [r3, #0]
 802d916:	f000 bb67 	b.w	802dfe8 <_free_r>
 802d91a:	bf00      	nop
 802d91c:	20000164 	.word	0x20000164

0802d920 <sbrk_aligned>:
 802d920:	b570      	push	{r4, r5, r6, lr}
 802d922:	4e0e      	ldr	r6, [pc, #56]	; (802d95c <sbrk_aligned+0x3c>)
 802d924:	460c      	mov	r4, r1
 802d926:	6831      	ldr	r1, [r6, #0]
 802d928:	4605      	mov	r5, r0
 802d92a:	b911      	cbnz	r1, 802d932 <sbrk_aligned+0x12>
 802d92c:	f000 faa0 	bl	802de70 <_sbrk_r>
 802d930:	6030      	str	r0, [r6, #0]
 802d932:	4621      	mov	r1, r4
 802d934:	4628      	mov	r0, r5
 802d936:	f000 fa9b 	bl	802de70 <_sbrk_r>
 802d93a:	1c43      	adds	r3, r0, #1
 802d93c:	d00a      	beq.n	802d954 <sbrk_aligned+0x34>
 802d93e:	1cc4      	adds	r4, r0, #3
 802d940:	f024 0403 	bic.w	r4, r4, #3
 802d944:	42a0      	cmp	r0, r4
 802d946:	d007      	beq.n	802d958 <sbrk_aligned+0x38>
 802d948:	1a21      	subs	r1, r4, r0
 802d94a:	4628      	mov	r0, r5
 802d94c:	f000 fa90 	bl	802de70 <_sbrk_r>
 802d950:	3001      	adds	r0, #1
 802d952:	d101      	bne.n	802d958 <sbrk_aligned+0x38>
 802d954:	f04f 34ff 	mov.w	r4, #4294967295
 802d958:	4620      	mov	r0, r4
 802d95a:	bd70      	pop	{r4, r5, r6, pc}
 802d95c:	200141a4 	.word	0x200141a4

0802d960 <_malloc_r>:
 802d960:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802d964:	1ccd      	adds	r5, r1, #3
 802d966:	f025 0503 	bic.w	r5, r5, #3
 802d96a:	3508      	adds	r5, #8
 802d96c:	2d0c      	cmp	r5, #12
 802d96e:	bf38      	it	cc
 802d970:	250c      	movcc	r5, #12
 802d972:	2d00      	cmp	r5, #0
 802d974:	4607      	mov	r7, r0
 802d976:	db01      	blt.n	802d97c <_malloc_r+0x1c>
 802d978:	42a9      	cmp	r1, r5
 802d97a:	d905      	bls.n	802d988 <_malloc_r+0x28>
 802d97c:	230c      	movs	r3, #12
 802d97e:	603b      	str	r3, [r7, #0]
 802d980:	2600      	movs	r6, #0
 802d982:	4630      	mov	r0, r6
 802d984:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802d988:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 802da5c <_malloc_r+0xfc>
 802d98c:	f000 f868 	bl	802da60 <__malloc_lock>
 802d990:	f8d8 3000 	ldr.w	r3, [r8]
 802d994:	461c      	mov	r4, r3
 802d996:	bb5c      	cbnz	r4, 802d9f0 <_malloc_r+0x90>
 802d998:	4629      	mov	r1, r5
 802d99a:	4638      	mov	r0, r7
 802d99c:	f7ff ffc0 	bl	802d920 <sbrk_aligned>
 802d9a0:	1c43      	adds	r3, r0, #1
 802d9a2:	4604      	mov	r4, r0
 802d9a4:	d155      	bne.n	802da52 <_malloc_r+0xf2>
 802d9a6:	f8d8 4000 	ldr.w	r4, [r8]
 802d9aa:	4626      	mov	r6, r4
 802d9ac:	2e00      	cmp	r6, #0
 802d9ae:	d145      	bne.n	802da3c <_malloc_r+0xdc>
 802d9b0:	2c00      	cmp	r4, #0
 802d9b2:	d048      	beq.n	802da46 <_malloc_r+0xe6>
 802d9b4:	6823      	ldr	r3, [r4, #0]
 802d9b6:	4631      	mov	r1, r6
 802d9b8:	4638      	mov	r0, r7
 802d9ba:	eb04 0903 	add.w	r9, r4, r3
 802d9be:	f000 fa57 	bl	802de70 <_sbrk_r>
 802d9c2:	4581      	cmp	r9, r0
 802d9c4:	d13f      	bne.n	802da46 <_malloc_r+0xe6>
 802d9c6:	6821      	ldr	r1, [r4, #0]
 802d9c8:	1a6d      	subs	r5, r5, r1
 802d9ca:	4629      	mov	r1, r5
 802d9cc:	4638      	mov	r0, r7
 802d9ce:	f7ff ffa7 	bl	802d920 <sbrk_aligned>
 802d9d2:	3001      	adds	r0, #1
 802d9d4:	d037      	beq.n	802da46 <_malloc_r+0xe6>
 802d9d6:	6823      	ldr	r3, [r4, #0]
 802d9d8:	442b      	add	r3, r5
 802d9da:	6023      	str	r3, [r4, #0]
 802d9dc:	f8d8 3000 	ldr.w	r3, [r8]
 802d9e0:	2b00      	cmp	r3, #0
 802d9e2:	d038      	beq.n	802da56 <_malloc_r+0xf6>
 802d9e4:	685a      	ldr	r2, [r3, #4]
 802d9e6:	42a2      	cmp	r2, r4
 802d9e8:	d12b      	bne.n	802da42 <_malloc_r+0xe2>
 802d9ea:	2200      	movs	r2, #0
 802d9ec:	605a      	str	r2, [r3, #4]
 802d9ee:	e00f      	b.n	802da10 <_malloc_r+0xb0>
 802d9f0:	6822      	ldr	r2, [r4, #0]
 802d9f2:	1b52      	subs	r2, r2, r5
 802d9f4:	d41f      	bmi.n	802da36 <_malloc_r+0xd6>
 802d9f6:	2a0b      	cmp	r2, #11
 802d9f8:	d917      	bls.n	802da2a <_malloc_r+0xca>
 802d9fa:	1961      	adds	r1, r4, r5
 802d9fc:	42a3      	cmp	r3, r4
 802d9fe:	6025      	str	r5, [r4, #0]
 802da00:	bf18      	it	ne
 802da02:	6059      	strne	r1, [r3, #4]
 802da04:	6863      	ldr	r3, [r4, #4]
 802da06:	bf08      	it	eq
 802da08:	f8c8 1000 	streq.w	r1, [r8]
 802da0c:	5162      	str	r2, [r4, r5]
 802da0e:	604b      	str	r3, [r1, #4]
 802da10:	4638      	mov	r0, r7
 802da12:	f104 060b 	add.w	r6, r4, #11
 802da16:	f000 f829 	bl	802da6c <__malloc_unlock>
 802da1a:	f026 0607 	bic.w	r6, r6, #7
 802da1e:	1d23      	adds	r3, r4, #4
 802da20:	1af2      	subs	r2, r6, r3
 802da22:	d0ae      	beq.n	802d982 <_malloc_r+0x22>
 802da24:	1b9b      	subs	r3, r3, r6
 802da26:	50a3      	str	r3, [r4, r2]
 802da28:	e7ab      	b.n	802d982 <_malloc_r+0x22>
 802da2a:	42a3      	cmp	r3, r4
 802da2c:	6862      	ldr	r2, [r4, #4]
 802da2e:	d1dd      	bne.n	802d9ec <_malloc_r+0x8c>
 802da30:	f8c8 2000 	str.w	r2, [r8]
 802da34:	e7ec      	b.n	802da10 <_malloc_r+0xb0>
 802da36:	4623      	mov	r3, r4
 802da38:	6864      	ldr	r4, [r4, #4]
 802da3a:	e7ac      	b.n	802d996 <_malloc_r+0x36>
 802da3c:	4634      	mov	r4, r6
 802da3e:	6876      	ldr	r6, [r6, #4]
 802da40:	e7b4      	b.n	802d9ac <_malloc_r+0x4c>
 802da42:	4613      	mov	r3, r2
 802da44:	e7cc      	b.n	802d9e0 <_malloc_r+0x80>
 802da46:	230c      	movs	r3, #12
 802da48:	603b      	str	r3, [r7, #0]
 802da4a:	4638      	mov	r0, r7
 802da4c:	f000 f80e 	bl	802da6c <__malloc_unlock>
 802da50:	e797      	b.n	802d982 <_malloc_r+0x22>
 802da52:	6025      	str	r5, [r4, #0]
 802da54:	e7dc      	b.n	802da10 <_malloc_r+0xb0>
 802da56:	605b      	str	r3, [r3, #4]
 802da58:	deff      	udf	#255	; 0xff
 802da5a:	bf00      	nop
 802da5c:	200141a0 	.word	0x200141a0

0802da60 <__malloc_lock>:
 802da60:	4801      	ldr	r0, [pc, #4]	; (802da68 <__malloc_lock+0x8>)
 802da62:	f000 ba52 	b.w	802df0a <__retarget_lock_acquire_recursive>
 802da66:	bf00      	nop
 802da68:	200142e9 	.word	0x200142e9

0802da6c <__malloc_unlock>:
 802da6c:	4801      	ldr	r0, [pc, #4]	; (802da74 <__malloc_unlock+0x8>)
 802da6e:	f000 ba4d 	b.w	802df0c <__retarget_lock_release_recursive>
 802da72:	bf00      	nop
 802da74:	200142e9 	.word	0x200142e9

0802da78 <__cxa_atexit>:
 802da78:	b510      	push	{r4, lr}
 802da7a:	4c05      	ldr	r4, [pc, #20]	; (802da90 <__cxa_atexit+0x18>)
 802da7c:	4613      	mov	r3, r2
 802da7e:	b12c      	cbz	r4, 802da8c <__cxa_atexit+0x14>
 802da80:	460a      	mov	r2, r1
 802da82:	4601      	mov	r1, r0
 802da84:	2002      	movs	r0, #2
 802da86:	f000 fa51 	bl	802df2c <__register_exitproc>
 802da8a:	bd10      	pop	{r4, pc}
 802da8c:	4620      	mov	r0, r4
 802da8e:	e7fc      	b.n	802da8a <__cxa_atexit+0x12>
 802da90:	0802df2d 	.word	0x0802df2d

0802da94 <std>:
 802da94:	2300      	movs	r3, #0
 802da96:	b510      	push	{r4, lr}
 802da98:	4604      	mov	r4, r0
 802da9a:	e9c0 3300 	strd	r3, r3, [r0]
 802da9e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 802daa2:	6083      	str	r3, [r0, #8]
 802daa4:	8181      	strh	r1, [r0, #12]
 802daa6:	6643      	str	r3, [r0, #100]	; 0x64
 802daa8:	81c2      	strh	r2, [r0, #14]
 802daaa:	6183      	str	r3, [r0, #24]
 802daac:	4619      	mov	r1, r3
 802daae:	2208      	movs	r2, #8
 802dab0:	305c      	adds	r0, #92	; 0x5c
 802dab2:	f000 f906 	bl	802dcc2 <memset>
 802dab6:	4b0d      	ldr	r3, [pc, #52]	; (802daec <std+0x58>)
 802dab8:	6263      	str	r3, [r4, #36]	; 0x24
 802daba:	4b0d      	ldr	r3, [pc, #52]	; (802daf0 <std+0x5c>)
 802dabc:	62a3      	str	r3, [r4, #40]	; 0x28
 802dabe:	4b0d      	ldr	r3, [pc, #52]	; (802daf4 <std+0x60>)
 802dac0:	62e3      	str	r3, [r4, #44]	; 0x2c
 802dac2:	4b0d      	ldr	r3, [pc, #52]	; (802daf8 <std+0x64>)
 802dac4:	6323      	str	r3, [r4, #48]	; 0x30
 802dac6:	4b0d      	ldr	r3, [pc, #52]	; (802dafc <std+0x68>)
 802dac8:	6224      	str	r4, [r4, #32]
 802daca:	429c      	cmp	r4, r3
 802dacc:	d006      	beq.n	802dadc <std+0x48>
 802dace:	f103 0268 	add.w	r2, r3, #104	; 0x68
 802dad2:	4294      	cmp	r4, r2
 802dad4:	d002      	beq.n	802dadc <std+0x48>
 802dad6:	33d0      	adds	r3, #208	; 0xd0
 802dad8:	429c      	cmp	r4, r3
 802dada:	d105      	bne.n	802dae8 <std+0x54>
 802dadc:	f104 0058 	add.w	r0, r4, #88	; 0x58
 802dae0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802dae4:	f000 ba10 	b.w	802df08 <__retarget_lock_init_recursive>
 802dae8:	bd10      	pop	{r4, pc}
 802daea:	bf00      	nop
 802daec:	0802dc3d 	.word	0x0802dc3d
 802daf0:	0802dc5f 	.word	0x0802dc5f
 802daf4:	0802dc97 	.word	0x0802dc97
 802daf8:	0802dcbb 	.word	0x0802dcbb
 802dafc:	200141a8 	.word	0x200141a8

0802db00 <stdio_exit_handler>:
 802db00:	4a02      	ldr	r2, [pc, #8]	; (802db0c <stdio_exit_handler+0xc>)
 802db02:	4903      	ldr	r1, [pc, #12]	; (802db10 <stdio_exit_handler+0x10>)
 802db04:	4803      	ldr	r0, [pc, #12]	; (802db14 <stdio_exit_handler+0x14>)
 802db06:	f000 b87b 	b.w	802dc00 <_fwalk_sglue>
 802db0a:	bf00      	nop
 802db0c:	2000010c 	.word	0x2000010c
 802db10:	0802e735 	.word	0x0802e735
 802db14:	20000118 	.word	0x20000118

0802db18 <cleanup_stdio>:
 802db18:	6841      	ldr	r1, [r0, #4]
 802db1a:	4b0c      	ldr	r3, [pc, #48]	; (802db4c <cleanup_stdio+0x34>)
 802db1c:	4299      	cmp	r1, r3
 802db1e:	b510      	push	{r4, lr}
 802db20:	4604      	mov	r4, r0
 802db22:	d001      	beq.n	802db28 <cleanup_stdio+0x10>
 802db24:	f000 fe06 	bl	802e734 <_fflush_r>
 802db28:	68a1      	ldr	r1, [r4, #8]
 802db2a:	4b09      	ldr	r3, [pc, #36]	; (802db50 <cleanup_stdio+0x38>)
 802db2c:	4299      	cmp	r1, r3
 802db2e:	d002      	beq.n	802db36 <cleanup_stdio+0x1e>
 802db30:	4620      	mov	r0, r4
 802db32:	f000 fdff 	bl	802e734 <_fflush_r>
 802db36:	68e1      	ldr	r1, [r4, #12]
 802db38:	4b06      	ldr	r3, [pc, #24]	; (802db54 <cleanup_stdio+0x3c>)
 802db3a:	4299      	cmp	r1, r3
 802db3c:	d004      	beq.n	802db48 <cleanup_stdio+0x30>
 802db3e:	4620      	mov	r0, r4
 802db40:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802db44:	f000 bdf6 	b.w	802e734 <_fflush_r>
 802db48:	bd10      	pop	{r4, pc}
 802db4a:	bf00      	nop
 802db4c:	200141a8 	.word	0x200141a8
 802db50:	20014210 	.word	0x20014210
 802db54:	20014278 	.word	0x20014278

0802db58 <global_stdio_init.part.0>:
 802db58:	b510      	push	{r4, lr}
 802db5a:	4b0b      	ldr	r3, [pc, #44]	; (802db88 <global_stdio_init.part.0+0x30>)
 802db5c:	4c0b      	ldr	r4, [pc, #44]	; (802db8c <global_stdio_init.part.0+0x34>)
 802db5e:	4a0c      	ldr	r2, [pc, #48]	; (802db90 <global_stdio_init.part.0+0x38>)
 802db60:	601a      	str	r2, [r3, #0]
 802db62:	4620      	mov	r0, r4
 802db64:	2200      	movs	r2, #0
 802db66:	2104      	movs	r1, #4
 802db68:	f7ff ff94 	bl	802da94 <std>
 802db6c:	f104 0068 	add.w	r0, r4, #104	; 0x68
 802db70:	2201      	movs	r2, #1
 802db72:	2109      	movs	r1, #9
 802db74:	f7ff ff8e 	bl	802da94 <std>
 802db78:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 802db7c:	2202      	movs	r2, #2
 802db7e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802db82:	2112      	movs	r1, #18
 802db84:	f7ff bf86 	b.w	802da94 <std>
 802db88:	200142e0 	.word	0x200142e0
 802db8c:	200141a8 	.word	0x200141a8
 802db90:	0802db01 	.word	0x0802db01

0802db94 <__sfp_lock_acquire>:
 802db94:	4801      	ldr	r0, [pc, #4]	; (802db9c <__sfp_lock_acquire+0x8>)
 802db96:	f000 b9b8 	b.w	802df0a <__retarget_lock_acquire_recursive>
 802db9a:	bf00      	nop
 802db9c:	200142ea 	.word	0x200142ea

0802dba0 <__sfp_lock_release>:
 802dba0:	4801      	ldr	r0, [pc, #4]	; (802dba8 <__sfp_lock_release+0x8>)
 802dba2:	f000 b9b3 	b.w	802df0c <__retarget_lock_release_recursive>
 802dba6:	bf00      	nop
 802dba8:	200142ea 	.word	0x200142ea

0802dbac <__sinit>:
 802dbac:	b510      	push	{r4, lr}
 802dbae:	4604      	mov	r4, r0
 802dbb0:	f7ff fff0 	bl	802db94 <__sfp_lock_acquire>
 802dbb4:	6a23      	ldr	r3, [r4, #32]
 802dbb6:	b11b      	cbz	r3, 802dbc0 <__sinit+0x14>
 802dbb8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802dbbc:	f7ff bff0 	b.w	802dba0 <__sfp_lock_release>
 802dbc0:	4b04      	ldr	r3, [pc, #16]	; (802dbd4 <__sinit+0x28>)
 802dbc2:	6223      	str	r3, [r4, #32]
 802dbc4:	4b04      	ldr	r3, [pc, #16]	; (802dbd8 <__sinit+0x2c>)
 802dbc6:	681b      	ldr	r3, [r3, #0]
 802dbc8:	2b00      	cmp	r3, #0
 802dbca:	d1f5      	bne.n	802dbb8 <__sinit+0xc>
 802dbcc:	f7ff ffc4 	bl	802db58 <global_stdio_init.part.0>
 802dbd0:	e7f2      	b.n	802dbb8 <__sinit+0xc>
 802dbd2:	bf00      	nop
 802dbd4:	0802db19 	.word	0x0802db19
 802dbd8:	200142e0 	.word	0x200142e0

0802dbdc <fiprintf>:
 802dbdc:	b40e      	push	{r1, r2, r3}
 802dbde:	b503      	push	{r0, r1, lr}
 802dbe0:	4601      	mov	r1, r0
 802dbe2:	ab03      	add	r3, sp, #12
 802dbe4:	4805      	ldr	r0, [pc, #20]	; (802dbfc <fiprintf+0x20>)
 802dbe6:	f853 2b04 	ldr.w	r2, [r3], #4
 802dbea:	6800      	ldr	r0, [r0, #0]
 802dbec:	9301      	str	r3, [sp, #4]
 802dbee:	f000 fa71 	bl	802e0d4 <_vfiprintf_r>
 802dbf2:	b002      	add	sp, #8
 802dbf4:	f85d eb04 	ldr.w	lr, [sp], #4
 802dbf8:	b003      	add	sp, #12
 802dbfa:	4770      	bx	lr
 802dbfc:	20000164 	.word	0x20000164

0802dc00 <_fwalk_sglue>:
 802dc00:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802dc04:	4607      	mov	r7, r0
 802dc06:	4688      	mov	r8, r1
 802dc08:	4614      	mov	r4, r2
 802dc0a:	2600      	movs	r6, #0
 802dc0c:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 802dc10:	f1b9 0901 	subs.w	r9, r9, #1
 802dc14:	d505      	bpl.n	802dc22 <_fwalk_sglue+0x22>
 802dc16:	6824      	ldr	r4, [r4, #0]
 802dc18:	2c00      	cmp	r4, #0
 802dc1a:	d1f7      	bne.n	802dc0c <_fwalk_sglue+0xc>
 802dc1c:	4630      	mov	r0, r6
 802dc1e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802dc22:	89ab      	ldrh	r3, [r5, #12]
 802dc24:	2b01      	cmp	r3, #1
 802dc26:	d907      	bls.n	802dc38 <_fwalk_sglue+0x38>
 802dc28:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 802dc2c:	3301      	adds	r3, #1
 802dc2e:	d003      	beq.n	802dc38 <_fwalk_sglue+0x38>
 802dc30:	4629      	mov	r1, r5
 802dc32:	4638      	mov	r0, r7
 802dc34:	47c0      	blx	r8
 802dc36:	4306      	orrs	r6, r0
 802dc38:	3568      	adds	r5, #104	; 0x68
 802dc3a:	e7e9      	b.n	802dc10 <_fwalk_sglue+0x10>

0802dc3c <__sread>:
 802dc3c:	b510      	push	{r4, lr}
 802dc3e:	460c      	mov	r4, r1
 802dc40:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802dc44:	f000 f8ee 	bl	802de24 <_read_r>
 802dc48:	2800      	cmp	r0, #0
 802dc4a:	bfab      	itete	ge
 802dc4c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 802dc4e:	89a3      	ldrhlt	r3, [r4, #12]
 802dc50:	181b      	addge	r3, r3, r0
 802dc52:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 802dc56:	bfac      	ite	ge
 802dc58:	6563      	strge	r3, [r4, #84]	; 0x54
 802dc5a:	81a3      	strhlt	r3, [r4, #12]
 802dc5c:	bd10      	pop	{r4, pc}

0802dc5e <__swrite>:
 802dc5e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802dc62:	461f      	mov	r7, r3
 802dc64:	898b      	ldrh	r3, [r1, #12]
 802dc66:	05db      	lsls	r3, r3, #23
 802dc68:	4605      	mov	r5, r0
 802dc6a:	460c      	mov	r4, r1
 802dc6c:	4616      	mov	r6, r2
 802dc6e:	d505      	bpl.n	802dc7c <__swrite+0x1e>
 802dc70:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802dc74:	2302      	movs	r3, #2
 802dc76:	2200      	movs	r2, #0
 802dc78:	f000 f8c2 	bl	802de00 <_lseek_r>
 802dc7c:	89a3      	ldrh	r3, [r4, #12]
 802dc7e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802dc82:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 802dc86:	81a3      	strh	r3, [r4, #12]
 802dc88:	4632      	mov	r2, r6
 802dc8a:	463b      	mov	r3, r7
 802dc8c:	4628      	mov	r0, r5
 802dc8e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802dc92:	f000 b8fd 	b.w	802de90 <_write_r>

0802dc96 <__sseek>:
 802dc96:	b510      	push	{r4, lr}
 802dc98:	460c      	mov	r4, r1
 802dc9a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802dc9e:	f000 f8af 	bl	802de00 <_lseek_r>
 802dca2:	1c43      	adds	r3, r0, #1
 802dca4:	89a3      	ldrh	r3, [r4, #12]
 802dca6:	bf15      	itete	ne
 802dca8:	6560      	strne	r0, [r4, #84]	; 0x54
 802dcaa:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 802dcae:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 802dcb2:	81a3      	strheq	r3, [r4, #12]
 802dcb4:	bf18      	it	ne
 802dcb6:	81a3      	strhne	r3, [r4, #12]
 802dcb8:	bd10      	pop	{r4, pc}

0802dcba <__sclose>:
 802dcba:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802dcbe:	f000 b839 	b.w	802dd34 <_close_r>

0802dcc2 <memset>:
 802dcc2:	4402      	add	r2, r0
 802dcc4:	4603      	mov	r3, r0
 802dcc6:	4293      	cmp	r3, r2
 802dcc8:	d100      	bne.n	802dccc <memset+0xa>
 802dcca:	4770      	bx	lr
 802dccc:	f803 1b01 	strb.w	r1, [r3], #1
 802dcd0:	e7f9      	b.n	802dcc6 <memset+0x4>

0802dcd2 <_raise_r>:
 802dcd2:	291f      	cmp	r1, #31
 802dcd4:	b538      	push	{r3, r4, r5, lr}
 802dcd6:	4604      	mov	r4, r0
 802dcd8:	460d      	mov	r5, r1
 802dcda:	d904      	bls.n	802dce6 <_raise_r+0x14>
 802dcdc:	2316      	movs	r3, #22
 802dcde:	6003      	str	r3, [r0, #0]
 802dce0:	f04f 30ff 	mov.w	r0, #4294967295
 802dce4:	bd38      	pop	{r3, r4, r5, pc}
 802dce6:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 802dce8:	b112      	cbz	r2, 802dcf0 <_raise_r+0x1e>
 802dcea:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 802dcee:	b94b      	cbnz	r3, 802dd04 <_raise_r+0x32>
 802dcf0:	4620      	mov	r0, r4
 802dcf2:	f000 f8bb 	bl	802de6c <_getpid_r>
 802dcf6:	462a      	mov	r2, r5
 802dcf8:	4601      	mov	r1, r0
 802dcfa:	4620      	mov	r0, r4
 802dcfc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802dd00:	f000 b8a2 	b.w	802de48 <_kill_r>
 802dd04:	2b01      	cmp	r3, #1
 802dd06:	d00a      	beq.n	802dd1e <_raise_r+0x4c>
 802dd08:	1c59      	adds	r1, r3, #1
 802dd0a:	d103      	bne.n	802dd14 <_raise_r+0x42>
 802dd0c:	2316      	movs	r3, #22
 802dd0e:	6003      	str	r3, [r0, #0]
 802dd10:	2001      	movs	r0, #1
 802dd12:	e7e7      	b.n	802dce4 <_raise_r+0x12>
 802dd14:	2400      	movs	r4, #0
 802dd16:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 802dd1a:	4628      	mov	r0, r5
 802dd1c:	4798      	blx	r3
 802dd1e:	2000      	movs	r0, #0
 802dd20:	e7e0      	b.n	802dce4 <_raise_r+0x12>
	...

0802dd24 <raise>:
 802dd24:	4b02      	ldr	r3, [pc, #8]	; (802dd30 <raise+0xc>)
 802dd26:	4601      	mov	r1, r0
 802dd28:	6818      	ldr	r0, [r3, #0]
 802dd2a:	f7ff bfd2 	b.w	802dcd2 <_raise_r>
 802dd2e:	bf00      	nop
 802dd30:	20000164 	.word	0x20000164

0802dd34 <_close_r>:
 802dd34:	b538      	push	{r3, r4, r5, lr}
 802dd36:	4d06      	ldr	r5, [pc, #24]	; (802dd50 <_close_r+0x1c>)
 802dd38:	2300      	movs	r3, #0
 802dd3a:	4604      	mov	r4, r0
 802dd3c:	4608      	mov	r0, r1
 802dd3e:	602b      	str	r3, [r5, #0]
 802dd40:	f7d4 fd84 	bl	800284c <_close>
 802dd44:	1c43      	adds	r3, r0, #1
 802dd46:	d102      	bne.n	802dd4e <_close_r+0x1a>
 802dd48:	682b      	ldr	r3, [r5, #0]
 802dd4a:	b103      	cbz	r3, 802dd4e <_close_r+0x1a>
 802dd4c:	6023      	str	r3, [r4, #0]
 802dd4e:	bd38      	pop	{r3, r4, r5, pc}
 802dd50:	200142e4 	.word	0x200142e4

0802dd54 <_reclaim_reent>:
 802dd54:	4b29      	ldr	r3, [pc, #164]	; (802ddfc <_reclaim_reent+0xa8>)
 802dd56:	681b      	ldr	r3, [r3, #0]
 802dd58:	4283      	cmp	r3, r0
 802dd5a:	b570      	push	{r4, r5, r6, lr}
 802dd5c:	4604      	mov	r4, r0
 802dd5e:	d04b      	beq.n	802ddf8 <_reclaim_reent+0xa4>
 802dd60:	69c3      	ldr	r3, [r0, #28]
 802dd62:	b143      	cbz	r3, 802dd76 <_reclaim_reent+0x22>
 802dd64:	68db      	ldr	r3, [r3, #12]
 802dd66:	2b00      	cmp	r3, #0
 802dd68:	d144      	bne.n	802ddf4 <_reclaim_reent+0xa0>
 802dd6a:	69e3      	ldr	r3, [r4, #28]
 802dd6c:	6819      	ldr	r1, [r3, #0]
 802dd6e:	b111      	cbz	r1, 802dd76 <_reclaim_reent+0x22>
 802dd70:	4620      	mov	r0, r4
 802dd72:	f000 f939 	bl	802dfe8 <_free_r>
 802dd76:	6961      	ldr	r1, [r4, #20]
 802dd78:	b111      	cbz	r1, 802dd80 <_reclaim_reent+0x2c>
 802dd7a:	4620      	mov	r0, r4
 802dd7c:	f000 f934 	bl	802dfe8 <_free_r>
 802dd80:	69e1      	ldr	r1, [r4, #28]
 802dd82:	b111      	cbz	r1, 802dd8a <_reclaim_reent+0x36>
 802dd84:	4620      	mov	r0, r4
 802dd86:	f000 f92f 	bl	802dfe8 <_free_r>
 802dd8a:	6b21      	ldr	r1, [r4, #48]	; 0x30
 802dd8c:	b111      	cbz	r1, 802dd94 <_reclaim_reent+0x40>
 802dd8e:	4620      	mov	r0, r4
 802dd90:	f000 f92a 	bl	802dfe8 <_free_r>
 802dd94:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802dd96:	b111      	cbz	r1, 802dd9e <_reclaim_reent+0x4a>
 802dd98:	4620      	mov	r0, r4
 802dd9a:	f000 f925 	bl	802dfe8 <_free_r>
 802dd9e:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 802dda0:	b111      	cbz	r1, 802dda8 <_reclaim_reent+0x54>
 802dda2:	4620      	mov	r0, r4
 802dda4:	f000 f920 	bl	802dfe8 <_free_r>
 802dda8:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 802ddaa:	b111      	cbz	r1, 802ddb2 <_reclaim_reent+0x5e>
 802ddac:	4620      	mov	r0, r4
 802ddae:	f000 f91b 	bl	802dfe8 <_free_r>
 802ddb2:	6c61      	ldr	r1, [r4, #68]	; 0x44
 802ddb4:	b111      	cbz	r1, 802ddbc <_reclaim_reent+0x68>
 802ddb6:	4620      	mov	r0, r4
 802ddb8:	f000 f916 	bl	802dfe8 <_free_r>
 802ddbc:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 802ddbe:	b111      	cbz	r1, 802ddc6 <_reclaim_reent+0x72>
 802ddc0:	4620      	mov	r0, r4
 802ddc2:	f000 f911 	bl	802dfe8 <_free_r>
 802ddc6:	6a23      	ldr	r3, [r4, #32]
 802ddc8:	b1b3      	cbz	r3, 802ddf8 <_reclaim_reent+0xa4>
 802ddca:	4620      	mov	r0, r4
 802ddcc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 802ddd0:	4718      	bx	r3
 802ddd2:	5949      	ldr	r1, [r1, r5]
 802ddd4:	b941      	cbnz	r1, 802dde8 <_reclaim_reent+0x94>
 802ddd6:	3504      	adds	r5, #4
 802ddd8:	69e3      	ldr	r3, [r4, #28]
 802ddda:	2d80      	cmp	r5, #128	; 0x80
 802dddc:	68d9      	ldr	r1, [r3, #12]
 802ddde:	d1f8      	bne.n	802ddd2 <_reclaim_reent+0x7e>
 802dde0:	4620      	mov	r0, r4
 802dde2:	f000 f901 	bl	802dfe8 <_free_r>
 802dde6:	e7c0      	b.n	802dd6a <_reclaim_reent+0x16>
 802dde8:	680e      	ldr	r6, [r1, #0]
 802ddea:	4620      	mov	r0, r4
 802ddec:	f000 f8fc 	bl	802dfe8 <_free_r>
 802ddf0:	4631      	mov	r1, r6
 802ddf2:	e7ef      	b.n	802ddd4 <_reclaim_reent+0x80>
 802ddf4:	2500      	movs	r5, #0
 802ddf6:	e7ef      	b.n	802ddd8 <_reclaim_reent+0x84>
 802ddf8:	bd70      	pop	{r4, r5, r6, pc}
 802ddfa:	bf00      	nop
 802ddfc:	20000164 	.word	0x20000164

0802de00 <_lseek_r>:
 802de00:	b538      	push	{r3, r4, r5, lr}
 802de02:	4d07      	ldr	r5, [pc, #28]	; (802de20 <_lseek_r+0x20>)
 802de04:	4604      	mov	r4, r0
 802de06:	4608      	mov	r0, r1
 802de08:	4611      	mov	r1, r2
 802de0a:	2200      	movs	r2, #0
 802de0c:	602a      	str	r2, [r5, #0]
 802de0e:	461a      	mov	r2, r3
 802de10:	f7d4 fd28 	bl	8002864 <_lseek>
 802de14:	1c43      	adds	r3, r0, #1
 802de16:	d102      	bne.n	802de1e <_lseek_r+0x1e>
 802de18:	682b      	ldr	r3, [r5, #0]
 802de1a:	b103      	cbz	r3, 802de1e <_lseek_r+0x1e>
 802de1c:	6023      	str	r3, [r4, #0]
 802de1e:	bd38      	pop	{r3, r4, r5, pc}
 802de20:	200142e4 	.word	0x200142e4

0802de24 <_read_r>:
 802de24:	b538      	push	{r3, r4, r5, lr}
 802de26:	4d07      	ldr	r5, [pc, #28]	; (802de44 <_read_r+0x20>)
 802de28:	4604      	mov	r4, r0
 802de2a:	4608      	mov	r0, r1
 802de2c:	4611      	mov	r1, r2
 802de2e:	2200      	movs	r2, #0
 802de30:	602a      	str	r2, [r5, #0]
 802de32:	461a      	mov	r2, r3
 802de34:	f7d4 fcee 	bl	8002814 <_read>
 802de38:	1c43      	adds	r3, r0, #1
 802de3a:	d102      	bne.n	802de42 <_read_r+0x1e>
 802de3c:	682b      	ldr	r3, [r5, #0]
 802de3e:	b103      	cbz	r3, 802de42 <_read_r+0x1e>
 802de40:	6023      	str	r3, [r4, #0]
 802de42:	bd38      	pop	{r3, r4, r5, pc}
 802de44:	200142e4 	.word	0x200142e4

0802de48 <_kill_r>:
 802de48:	b538      	push	{r3, r4, r5, lr}
 802de4a:	4d07      	ldr	r5, [pc, #28]	; (802de68 <_kill_r+0x20>)
 802de4c:	2300      	movs	r3, #0
 802de4e:	4604      	mov	r4, r0
 802de50:	4608      	mov	r0, r1
 802de52:	4611      	mov	r1, r2
 802de54:	602b      	str	r3, [r5, #0]
 802de56:	f7d4 fccf 	bl	80027f8 <_kill>
 802de5a:	1c43      	adds	r3, r0, #1
 802de5c:	d102      	bne.n	802de64 <_kill_r+0x1c>
 802de5e:	682b      	ldr	r3, [r5, #0]
 802de60:	b103      	cbz	r3, 802de64 <_kill_r+0x1c>
 802de62:	6023      	str	r3, [r4, #0]
 802de64:	bd38      	pop	{r3, r4, r5, pc}
 802de66:	bf00      	nop
 802de68:	200142e4 	.word	0x200142e4

0802de6c <_getpid_r>:
 802de6c:	f7d4 bcc2 	b.w	80027f4 <_getpid>

0802de70 <_sbrk_r>:
 802de70:	b538      	push	{r3, r4, r5, lr}
 802de72:	4d06      	ldr	r5, [pc, #24]	; (802de8c <_sbrk_r+0x1c>)
 802de74:	2300      	movs	r3, #0
 802de76:	4604      	mov	r4, r0
 802de78:	4608      	mov	r0, r1
 802de7a:	602b      	str	r3, [r5, #0]
 802de7c:	f7d4 fcf4 	bl	8002868 <_sbrk>
 802de80:	1c43      	adds	r3, r0, #1
 802de82:	d102      	bne.n	802de8a <_sbrk_r+0x1a>
 802de84:	682b      	ldr	r3, [r5, #0]
 802de86:	b103      	cbz	r3, 802de8a <_sbrk_r+0x1a>
 802de88:	6023      	str	r3, [r4, #0]
 802de8a:	bd38      	pop	{r3, r4, r5, pc}
 802de8c:	200142e4 	.word	0x200142e4

0802de90 <_write_r>:
 802de90:	b538      	push	{r3, r4, r5, lr}
 802de92:	4d07      	ldr	r5, [pc, #28]	; (802deb0 <_write_r+0x20>)
 802de94:	4604      	mov	r4, r0
 802de96:	4608      	mov	r0, r1
 802de98:	4611      	mov	r1, r2
 802de9a:	2200      	movs	r2, #0
 802de9c:	602a      	str	r2, [r5, #0]
 802de9e:	461a      	mov	r2, r3
 802dea0:	f7d4 fcc6 	bl	8002830 <_write>
 802dea4:	1c43      	adds	r3, r0, #1
 802dea6:	d102      	bne.n	802deae <_write_r+0x1e>
 802dea8:	682b      	ldr	r3, [r5, #0]
 802deaa:	b103      	cbz	r3, 802deae <_write_r+0x1e>
 802deac:	6023      	str	r3, [r4, #0]
 802deae:	bd38      	pop	{r3, r4, r5, pc}
 802deb0:	200142e4 	.word	0x200142e4

0802deb4 <__errno>:
 802deb4:	4b01      	ldr	r3, [pc, #4]	; (802debc <__errno+0x8>)
 802deb6:	6818      	ldr	r0, [r3, #0]
 802deb8:	4770      	bx	lr
 802deba:	bf00      	nop
 802debc:	20000164 	.word	0x20000164

0802dec0 <__libc_init_array>:
 802dec0:	b570      	push	{r4, r5, r6, lr}
 802dec2:	4d0d      	ldr	r5, [pc, #52]	; (802def8 <__libc_init_array+0x38>)
 802dec4:	4c0d      	ldr	r4, [pc, #52]	; (802defc <__libc_init_array+0x3c>)
 802dec6:	1b64      	subs	r4, r4, r5
 802dec8:	10a4      	asrs	r4, r4, #2
 802deca:	2600      	movs	r6, #0
 802decc:	42a6      	cmp	r6, r4
 802dece:	d109      	bne.n	802dee4 <__libc_init_array+0x24>
 802ded0:	4d0b      	ldr	r5, [pc, #44]	; (802df00 <__libc_init_array+0x40>)
 802ded2:	4c0c      	ldr	r4, [pc, #48]	; (802df04 <__libc_init_array+0x44>)
 802ded4:	f000 fd70 	bl	802e9b8 <_init>
 802ded8:	1b64      	subs	r4, r4, r5
 802deda:	10a4      	asrs	r4, r4, #2
 802dedc:	2600      	movs	r6, #0
 802dede:	42a6      	cmp	r6, r4
 802dee0:	d105      	bne.n	802deee <__libc_init_array+0x2e>
 802dee2:	bd70      	pop	{r4, r5, r6, pc}
 802dee4:	f855 3b04 	ldr.w	r3, [r5], #4
 802dee8:	4798      	blx	r3
 802deea:	3601      	adds	r6, #1
 802deec:	e7ee      	b.n	802decc <__libc_init_array+0xc>
 802deee:	f855 3b04 	ldr.w	r3, [r5], #4
 802def2:	4798      	blx	r3
 802def4:	3601      	adds	r6, #1
 802def6:	e7f2      	b.n	802dede <__libc_init_array+0x1e>
 802def8:	080cf310 	.word	0x080cf310
 802defc:	080cf310 	.word	0x080cf310
 802df00:	080cf310 	.word	0x080cf310
 802df04:	080cf324 	.word	0x080cf324

0802df08 <__retarget_lock_init_recursive>:
 802df08:	4770      	bx	lr

0802df0a <__retarget_lock_acquire_recursive>:
 802df0a:	4770      	bx	lr

0802df0c <__retarget_lock_release_recursive>:
 802df0c:	4770      	bx	lr

0802df0e <memcpy>:
 802df0e:	440a      	add	r2, r1
 802df10:	4291      	cmp	r1, r2
 802df12:	f100 33ff 	add.w	r3, r0, #4294967295
 802df16:	d100      	bne.n	802df1a <memcpy+0xc>
 802df18:	4770      	bx	lr
 802df1a:	b510      	push	{r4, lr}
 802df1c:	f811 4b01 	ldrb.w	r4, [r1], #1
 802df20:	f803 4f01 	strb.w	r4, [r3, #1]!
 802df24:	4291      	cmp	r1, r2
 802df26:	d1f9      	bne.n	802df1c <memcpy+0xe>
 802df28:	bd10      	pop	{r4, pc}
	...

0802df2c <__register_exitproc>:
 802df2c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802df30:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 802dfe4 <__register_exitproc+0xb8>
 802df34:	4606      	mov	r6, r0
 802df36:	f8d8 0000 	ldr.w	r0, [r8]
 802df3a:	461f      	mov	r7, r3
 802df3c:	460d      	mov	r5, r1
 802df3e:	4691      	mov	r9, r2
 802df40:	f7ff ffe3 	bl	802df0a <__retarget_lock_acquire_recursive>
 802df44:	4b23      	ldr	r3, [pc, #140]	; (802dfd4 <__register_exitproc+0xa8>)
 802df46:	681c      	ldr	r4, [r3, #0]
 802df48:	b934      	cbnz	r4, 802df58 <__register_exitproc+0x2c>
 802df4a:	4c23      	ldr	r4, [pc, #140]	; (802dfd8 <__register_exitproc+0xac>)
 802df4c:	601c      	str	r4, [r3, #0]
 802df4e:	4b23      	ldr	r3, [pc, #140]	; (802dfdc <__register_exitproc+0xb0>)
 802df50:	b113      	cbz	r3, 802df58 <__register_exitproc+0x2c>
 802df52:	681b      	ldr	r3, [r3, #0]
 802df54:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 802df58:	6863      	ldr	r3, [r4, #4]
 802df5a:	2b1f      	cmp	r3, #31
 802df5c:	dd07      	ble.n	802df6e <__register_exitproc+0x42>
 802df5e:	f8d8 0000 	ldr.w	r0, [r8]
 802df62:	f7ff ffd3 	bl	802df0c <__retarget_lock_release_recursive>
 802df66:	f04f 30ff 	mov.w	r0, #4294967295
 802df6a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802df6e:	b32e      	cbz	r6, 802dfbc <__register_exitproc+0x90>
 802df70:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 802df74:	b968      	cbnz	r0, 802df92 <__register_exitproc+0x66>
 802df76:	4b1a      	ldr	r3, [pc, #104]	; (802dfe0 <__register_exitproc+0xb4>)
 802df78:	2b00      	cmp	r3, #0
 802df7a:	d0f0      	beq.n	802df5e <__register_exitproc+0x32>
 802df7c:	f44f 7084 	mov.w	r0, #264	; 0x108
 802df80:	f7ff fcbe 	bl	802d900 <malloc>
 802df84:	2800      	cmp	r0, #0
 802df86:	d0ea      	beq.n	802df5e <__register_exitproc+0x32>
 802df88:	2300      	movs	r3, #0
 802df8a:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 802df8e:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 802df92:	6863      	ldr	r3, [r4, #4]
 802df94:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 802df98:	2201      	movs	r2, #1
 802df9a:	409a      	lsls	r2, r3
 802df9c:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 802dfa0:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 802dfa4:	4313      	orrs	r3, r2
 802dfa6:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 802dfaa:	2e02      	cmp	r6, #2
 802dfac:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 802dfb0:	bf02      	ittt	eq
 802dfb2:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 802dfb6:	4313      	orreq	r3, r2
 802dfb8:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 802dfbc:	6863      	ldr	r3, [r4, #4]
 802dfbe:	f8d8 0000 	ldr.w	r0, [r8]
 802dfc2:	1c5a      	adds	r2, r3, #1
 802dfc4:	3302      	adds	r3, #2
 802dfc6:	6062      	str	r2, [r4, #4]
 802dfc8:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 802dfcc:	f7ff ff9e 	bl	802df0c <__retarget_lock_release_recursive>
 802dfd0:	2000      	movs	r0, #0
 802dfd2:	e7ca      	b.n	802df6a <__register_exitproc+0x3e>
 802dfd4:	20014378 	.word	0x20014378
 802dfd8:	200142ec 	.word	0x200142ec
 802dfdc:	08045b68 	.word	0x08045b68
 802dfe0:	0802d901 	.word	0x0802d901
 802dfe4:	20000168 	.word	0x20000168

0802dfe8 <_free_r>:
 802dfe8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 802dfea:	2900      	cmp	r1, #0
 802dfec:	d044      	beq.n	802e078 <_free_r+0x90>
 802dfee:	f851 3c04 	ldr.w	r3, [r1, #-4]
 802dff2:	9001      	str	r0, [sp, #4]
 802dff4:	2b00      	cmp	r3, #0
 802dff6:	f1a1 0404 	sub.w	r4, r1, #4
 802dffa:	bfb8      	it	lt
 802dffc:	18e4      	addlt	r4, r4, r3
 802dffe:	f7ff fd2f 	bl	802da60 <__malloc_lock>
 802e002:	4a1e      	ldr	r2, [pc, #120]	; (802e07c <_free_r+0x94>)
 802e004:	9801      	ldr	r0, [sp, #4]
 802e006:	6813      	ldr	r3, [r2, #0]
 802e008:	b933      	cbnz	r3, 802e018 <_free_r+0x30>
 802e00a:	6063      	str	r3, [r4, #4]
 802e00c:	6014      	str	r4, [r2, #0]
 802e00e:	b003      	add	sp, #12
 802e010:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 802e014:	f7ff bd2a 	b.w	802da6c <__malloc_unlock>
 802e018:	42a3      	cmp	r3, r4
 802e01a:	d908      	bls.n	802e02e <_free_r+0x46>
 802e01c:	6825      	ldr	r5, [r4, #0]
 802e01e:	1961      	adds	r1, r4, r5
 802e020:	428b      	cmp	r3, r1
 802e022:	bf01      	itttt	eq
 802e024:	6819      	ldreq	r1, [r3, #0]
 802e026:	685b      	ldreq	r3, [r3, #4]
 802e028:	1949      	addeq	r1, r1, r5
 802e02a:	6021      	streq	r1, [r4, #0]
 802e02c:	e7ed      	b.n	802e00a <_free_r+0x22>
 802e02e:	461a      	mov	r2, r3
 802e030:	685b      	ldr	r3, [r3, #4]
 802e032:	b10b      	cbz	r3, 802e038 <_free_r+0x50>
 802e034:	42a3      	cmp	r3, r4
 802e036:	d9fa      	bls.n	802e02e <_free_r+0x46>
 802e038:	6811      	ldr	r1, [r2, #0]
 802e03a:	1855      	adds	r5, r2, r1
 802e03c:	42a5      	cmp	r5, r4
 802e03e:	d10b      	bne.n	802e058 <_free_r+0x70>
 802e040:	6824      	ldr	r4, [r4, #0]
 802e042:	4421      	add	r1, r4
 802e044:	1854      	adds	r4, r2, r1
 802e046:	42a3      	cmp	r3, r4
 802e048:	6011      	str	r1, [r2, #0]
 802e04a:	d1e0      	bne.n	802e00e <_free_r+0x26>
 802e04c:	681c      	ldr	r4, [r3, #0]
 802e04e:	685b      	ldr	r3, [r3, #4]
 802e050:	6053      	str	r3, [r2, #4]
 802e052:	440c      	add	r4, r1
 802e054:	6014      	str	r4, [r2, #0]
 802e056:	e7da      	b.n	802e00e <_free_r+0x26>
 802e058:	d902      	bls.n	802e060 <_free_r+0x78>
 802e05a:	230c      	movs	r3, #12
 802e05c:	6003      	str	r3, [r0, #0]
 802e05e:	e7d6      	b.n	802e00e <_free_r+0x26>
 802e060:	6825      	ldr	r5, [r4, #0]
 802e062:	1961      	adds	r1, r4, r5
 802e064:	428b      	cmp	r3, r1
 802e066:	bf04      	itt	eq
 802e068:	6819      	ldreq	r1, [r3, #0]
 802e06a:	685b      	ldreq	r3, [r3, #4]
 802e06c:	6063      	str	r3, [r4, #4]
 802e06e:	bf04      	itt	eq
 802e070:	1949      	addeq	r1, r1, r5
 802e072:	6021      	streq	r1, [r4, #0]
 802e074:	6054      	str	r4, [r2, #4]
 802e076:	e7ca      	b.n	802e00e <_free_r+0x26>
 802e078:	b003      	add	sp, #12
 802e07a:	bd30      	pop	{r4, r5, pc}
 802e07c:	200141a0 	.word	0x200141a0

0802e080 <__sfputc_r>:
 802e080:	6893      	ldr	r3, [r2, #8]
 802e082:	3b01      	subs	r3, #1
 802e084:	2b00      	cmp	r3, #0
 802e086:	b410      	push	{r4}
 802e088:	6093      	str	r3, [r2, #8]
 802e08a:	da08      	bge.n	802e09e <__sfputc_r+0x1e>
 802e08c:	6994      	ldr	r4, [r2, #24]
 802e08e:	42a3      	cmp	r3, r4
 802e090:	db01      	blt.n	802e096 <__sfputc_r+0x16>
 802e092:	290a      	cmp	r1, #10
 802e094:	d103      	bne.n	802e09e <__sfputc_r+0x1e>
 802e096:	f85d 4b04 	ldr.w	r4, [sp], #4
 802e09a:	f000 bb73 	b.w	802e784 <__swbuf_r>
 802e09e:	6813      	ldr	r3, [r2, #0]
 802e0a0:	1c58      	adds	r0, r3, #1
 802e0a2:	6010      	str	r0, [r2, #0]
 802e0a4:	7019      	strb	r1, [r3, #0]
 802e0a6:	4608      	mov	r0, r1
 802e0a8:	f85d 4b04 	ldr.w	r4, [sp], #4
 802e0ac:	4770      	bx	lr

0802e0ae <__sfputs_r>:
 802e0ae:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802e0b0:	4606      	mov	r6, r0
 802e0b2:	460f      	mov	r7, r1
 802e0b4:	4614      	mov	r4, r2
 802e0b6:	18d5      	adds	r5, r2, r3
 802e0b8:	42ac      	cmp	r4, r5
 802e0ba:	d101      	bne.n	802e0c0 <__sfputs_r+0x12>
 802e0bc:	2000      	movs	r0, #0
 802e0be:	e007      	b.n	802e0d0 <__sfputs_r+0x22>
 802e0c0:	f814 1b01 	ldrb.w	r1, [r4], #1
 802e0c4:	463a      	mov	r2, r7
 802e0c6:	4630      	mov	r0, r6
 802e0c8:	f7ff ffda 	bl	802e080 <__sfputc_r>
 802e0cc:	1c43      	adds	r3, r0, #1
 802e0ce:	d1f3      	bne.n	802e0b8 <__sfputs_r+0xa>
 802e0d0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0802e0d4 <_vfiprintf_r>:
 802e0d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802e0d8:	460d      	mov	r5, r1
 802e0da:	b09d      	sub	sp, #116	; 0x74
 802e0dc:	4614      	mov	r4, r2
 802e0de:	4698      	mov	r8, r3
 802e0e0:	4606      	mov	r6, r0
 802e0e2:	b118      	cbz	r0, 802e0ec <_vfiprintf_r+0x18>
 802e0e4:	6a03      	ldr	r3, [r0, #32]
 802e0e6:	b90b      	cbnz	r3, 802e0ec <_vfiprintf_r+0x18>
 802e0e8:	f7ff fd60 	bl	802dbac <__sinit>
 802e0ec:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802e0ee:	07d9      	lsls	r1, r3, #31
 802e0f0:	d405      	bmi.n	802e0fe <_vfiprintf_r+0x2a>
 802e0f2:	89ab      	ldrh	r3, [r5, #12]
 802e0f4:	059a      	lsls	r2, r3, #22
 802e0f6:	d402      	bmi.n	802e0fe <_vfiprintf_r+0x2a>
 802e0f8:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802e0fa:	f7ff ff06 	bl	802df0a <__retarget_lock_acquire_recursive>
 802e0fe:	89ab      	ldrh	r3, [r5, #12]
 802e100:	071b      	lsls	r3, r3, #28
 802e102:	d501      	bpl.n	802e108 <_vfiprintf_r+0x34>
 802e104:	692b      	ldr	r3, [r5, #16]
 802e106:	b99b      	cbnz	r3, 802e130 <_vfiprintf_r+0x5c>
 802e108:	4629      	mov	r1, r5
 802e10a:	4630      	mov	r0, r6
 802e10c:	f000 fb78 	bl	802e800 <__swsetup_r>
 802e110:	b170      	cbz	r0, 802e130 <_vfiprintf_r+0x5c>
 802e112:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802e114:	07dc      	lsls	r4, r3, #31
 802e116:	d504      	bpl.n	802e122 <_vfiprintf_r+0x4e>
 802e118:	f04f 30ff 	mov.w	r0, #4294967295
 802e11c:	b01d      	add	sp, #116	; 0x74
 802e11e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802e122:	89ab      	ldrh	r3, [r5, #12]
 802e124:	0598      	lsls	r0, r3, #22
 802e126:	d4f7      	bmi.n	802e118 <_vfiprintf_r+0x44>
 802e128:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802e12a:	f7ff feef 	bl	802df0c <__retarget_lock_release_recursive>
 802e12e:	e7f3      	b.n	802e118 <_vfiprintf_r+0x44>
 802e130:	2300      	movs	r3, #0
 802e132:	9309      	str	r3, [sp, #36]	; 0x24
 802e134:	2320      	movs	r3, #32
 802e136:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 802e13a:	f8cd 800c 	str.w	r8, [sp, #12]
 802e13e:	2330      	movs	r3, #48	; 0x30
 802e140:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 802e2f4 <_vfiprintf_r+0x220>
 802e144:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 802e148:	f04f 0901 	mov.w	r9, #1
 802e14c:	4623      	mov	r3, r4
 802e14e:	469a      	mov	sl, r3
 802e150:	f813 2b01 	ldrb.w	r2, [r3], #1
 802e154:	b10a      	cbz	r2, 802e15a <_vfiprintf_r+0x86>
 802e156:	2a25      	cmp	r2, #37	; 0x25
 802e158:	d1f9      	bne.n	802e14e <_vfiprintf_r+0x7a>
 802e15a:	ebba 0b04 	subs.w	fp, sl, r4
 802e15e:	d00b      	beq.n	802e178 <_vfiprintf_r+0xa4>
 802e160:	465b      	mov	r3, fp
 802e162:	4622      	mov	r2, r4
 802e164:	4629      	mov	r1, r5
 802e166:	4630      	mov	r0, r6
 802e168:	f7ff ffa1 	bl	802e0ae <__sfputs_r>
 802e16c:	3001      	adds	r0, #1
 802e16e:	f000 80a9 	beq.w	802e2c4 <_vfiprintf_r+0x1f0>
 802e172:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802e174:	445a      	add	r2, fp
 802e176:	9209      	str	r2, [sp, #36]	; 0x24
 802e178:	f89a 3000 	ldrb.w	r3, [sl]
 802e17c:	2b00      	cmp	r3, #0
 802e17e:	f000 80a1 	beq.w	802e2c4 <_vfiprintf_r+0x1f0>
 802e182:	2300      	movs	r3, #0
 802e184:	f04f 32ff 	mov.w	r2, #4294967295
 802e188:	e9cd 2305 	strd	r2, r3, [sp, #20]
 802e18c:	f10a 0a01 	add.w	sl, sl, #1
 802e190:	9304      	str	r3, [sp, #16]
 802e192:	9307      	str	r3, [sp, #28]
 802e194:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 802e198:	931a      	str	r3, [sp, #104]	; 0x68
 802e19a:	4654      	mov	r4, sl
 802e19c:	2205      	movs	r2, #5
 802e19e:	f814 1b01 	ldrb.w	r1, [r4], #1
 802e1a2:	4854      	ldr	r0, [pc, #336]	; (802e2f4 <_vfiprintf_r+0x220>)
 802e1a4:	f7d2 f884 	bl	80002b0 <memchr>
 802e1a8:	9a04      	ldr	r2, [sp, #16]
 802e1aa:	b9d8      	cbnz	r0, 802e1e4 <_vfiprintf_r+0x110>
 802e1ac:	06d1      	lsls	r1, r2, #27
 802e1ae:	bf44      	itt	mi
 802e1b0:	2320      	movmi	r3, #32
 802e1b2:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802e1b6:	0713      	lsls	r3, r2, #28
 802e1b8:	bf44      	itt	mi
 802e1ba:	232b      	movmi	r3, #43	; 0x2b
 802e1bc:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802e1c0:	f89a 3000 	ldrb.w	r3, [sl]
 802e1c4:	2b2a      	cmp	r3, #42	; 0x2a
 802e1c6:	d015      	beq.n	802e1f4 <_vfiprintf_r+0x120>
 802e1c8:	9a07      	ldr	r2, [sp, #28]
 802e1ca:	4654      	mov	r4, sl
 802e1cc:	2000      	movs	r0, #0
 802e1ce:	f04f 0c0a 	mov.w	ip, #10
 802e1d2:	4621      	mov	r1, r4
 802e1d4:	f811 3b01 	ldrb.w	r3, [r1], #1
 802e1d8:	3b30      	subs	r3, #48	; 0x30
 802e1da:	2b09      	cmp	r3, #9
 802e1dc:	d94d      	bls.n	802e27a <_vfiprintf_r+0x1a6>
 802e1de:	b1b0      	cbz	r0, 802e20e <_vfiprintf_r+0x13a>
 802e1e0:	9207      	str	r2, [sp, #28]
 802e1e2:	e014      	b.n	802e20e <_vfiprintf_r+0x13a>
 802e1e4:	eba0 0308 	sub.w	r3, r0, r8
 802e1e8:	fa09 f303 	lsl.w	r3, r9, r3
 802e1ec:	4313      	orrs	r3, r2
 802e1ee:	9304      	str	r3, [sp, #16]
 802e1f0:	46a2      	mov	sl, r4
 802e1f2:	e7d2      	b.n	802e19a <_vfiprintf_r+0xc6>
 802e1f4:	9b03      	ldr	r3, [sp, #12]
 802e1f6:	1d19      	adds	r1, r3, #4
 802e1f8:	681b      	ldr	r3, [r3, #0]
 802e1fa:	9103      	str	r1, [sp, #12]
 802e1fc:	2b00      	cmp	r3, #0
 802e1fe:	bfbb      	ittet	lt
 802e200:	425b      	neglt	r3, r3
 802e202:	f042 0202 	orrlt.w	r2, r2, #2
 802e206:	9307      	strge	r3, [sp, #28]
 802e208:	9307      	strlt	r3, [sp, #28]
 802e20a:	bfb8      	it	lt
 802e20c:	9204      	strlt	r2, [sp, #16]
 802e20e:	7823      	ldrb	r3, [r4, #0]
 802e210:	2b2e      	cmp	r3, #46	; 0x2e
 802e212:	d10c      	bne.n	802e22e <_vfiprintf_r+0x15a>
 802e214:	7863      	ldrb	r3, [r4, #1]
 802e216:	2b2a      	cmp	r3, #42	; 0x2a
 802e218:	d134      	bne.n	802e284 <_vfiprintf_r+0x1b0>
 802e21a:	9b03      	ldr	r3, [sp, #12]
 802e21c:	1d1a      	adds	r2, r3, #4
 802e21e:	681b      	ldr	r3, [r3, #0]
 802e220:	9203      	str	r2, [sp, #12]
 802e222:	2b00      	cmp	r3, #0
 802e224:	bfb8      	it	lt
 802e226:	f04f 33ff 	movlt.w	r3, #4294967295
 802e22a:	3402      	adds	r4, #2
 802e22c:	9305      	str	r3, [sp, #20]
 802e22e:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 802e304 <_vfiprintf_r+0x230>
 802e232:	7821      	ldrb	r1, [r4, #0]
 802e234:	2203      	movs	r2, #3
 802e236:	4650      	mov	r0, sl
 802e238:	f7d2 f83a 	bl	80002b0 <memchr>
 802e23c:	b138      	cbz	r0, 802e24e <_vfiprintf_r+0x17a>
 802e23e:	9b04      	ldr	r3, [sp, #16]
 802e240:	eba0 000a 	sub.w	r0, r0, sl
 802e244:	2240      	movs	r2, #64	; 0x40
 802e246:	4082      	lsls	r2, r0
 802e248:	4313      	orrs	r3, r2
 802e24a:	3401      	adds	r4, #1
 802e24c:	9304      	str	r3, [sp, #16]
 802e24e:	f814 1b01 	ldrb.w	r1, [r4], #1
 802e252:	4829      	ldr	r0, [pc, #164]	; (802e2f8 <_vfiprintf_r+0x224>)
 802e254:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 802e258:	2206      	movs	r2, #6
 802e25a:	f7d2 f829 	bl	80002b0 <memchr>
 802e25e:	2800      	cmp	r0, #0
 802e260:	d03f      	beq.n	802e2e2 <_vfiprintf_r+0x20e>
 802e262:	4b26      	ldr	r3, [pc, #152]	; (802e2fc <_vfiprintf_r+0x228>)
 802e264:	bb1b      	cbnz	r3, 802e2ae <_vfiprintf_r+0x1da>
 802e266:	9b03      	ldr	r3, [sp, #12]
 802e268:	3307      	adds	r3, #7
 802e26a:	f023 0307 	bic.w	r3, r3, #7
 802e26e:	3308      	adds	r3, #8
 802e270:	9303      	str	r3, [sp, #12]
 802e272:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802e274:	443b      	add	r3, r7
 802e276:	9309      	str	r3, [sp, #36]	; 0x24
 802e278:	e768      	b.n	802e14c <_vfiprintf_r+0x78>
 802e27a:	fb0c 3202 	mla	r2, ip, r2, r3
 802e27e:	460c      	mov	r4, r1
 802e280:	2001      	movs	r0, #1
 802e282:	e7a6      	b.n	802e1d2 <_vfiprintf_r+0xfe>
 802e284:	2300      	movs	r3, #0
 802e286:	3401      	adds	r4, #1
 802e288:	9305      	str	r3, [sp, #20]
 802e28a:	4619      	mov	r1, r3
 802e28c:	f04f 0c0a 	mov.w	ip, #10
 802e290:	4620      	mov	r0, r4
 802e292:	f810 2b01 	ldrb.w	r2, [r0], #1
 802e296:	3a30      	subs	r2, #48	; 0x30
 802e298:	2a09      	cmp	r2, #9
 802e29a:	d903      	bls.n	802e2a4 <_vfiprintf_r+0x1d0>
 802e29c:	2b00      	cmp	r3, #0
 802e29e:	d0c6      	beq.n	802e22e <_vfiprintf_r+0x15a>
 802e2a0:	9105      	str	r1, [sp, #20]
 802e2a2:	e7c4      	b.n	802e22e <_vfiprintf_r+0x15a>
 802e2a4:	fb0c 2101 	mla	r1, ip, r1, r2
 802e2a8:	4604      	mov	r4, r0
 802e2aa:	2301      	movs	r3, #1
 802e2ac:	e7f0      	b.n	802e290 <_vfiprintf_r+0x1bc>
 802e2ae:	ab03      	add	r3, sp, #12
 802e2b0:	9300      	str	r3, [sp, #0]
 802e2b2:	462a      	mov	r2, r5
 802e2b4:	4b12      	ldr	r3, [pc, #72]	; (802e300 <_vfiprintf_r+0x22c>)
 802e2b6:	a904      	add	r1, sp, #16
 802e2b8:	4630      	mov	r0, r6
 802e2ba:	f3af 8000 	nop.w
 802e2be:	4607      	mov	r7, r0
 802e2c0:	1c78      	adds	r0, r7, #1
 802e2c2:	d1d6      	bne.n	802e272 <_vfiprintf_r+0x19e>
 802e2c4:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802e2c6:	07d9      	lsls	r1, r3, #31
 802e2c8:	d405      	bmi.n	802e2d6 <_vfiprintf_r+0x202>
 802e2ca:	89ab      	ldrh	r3, [r5, #12]
 802e2cc:	059a      	lsls	r2, r3, #22
 802e2ce:	d402      	bmi.n	802e2d6 <_vfiprintf_r+0x202>
 802e2d0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802e2d2:	f7ff fe1b 	bl	802df0c <__retarget_lock_release_recursive>
 802e2d6:	89ab      	ldrh	r3, [r5, #12]
 802e2d8:	065b      	lsls	r3, r3, #25
 802e2da:	f53f af1d 	bmi.w	802e118 <_vfiprintf_r+0x44>
 802e2de:	9809      	ldr	r0, [sp, #36]	; 0x24
 802e2e0:	e71c      	b.n	802e11c <_vfiprintf_r+0x48>
 802e2e2:	ab03      	add	r3, sp, #12
 802e2e4:	9300      	str	r3, [sp, #0]
 802e2e6:	462a      	mov	r2, r5
 802e2e8:	4b05      	ldr	r3, [pc, #20]	; (802e300 <_vfiprintf_r+0x22c>)
 802e2ea:	a904      	add	r1, sp, #16
 802e2ec:	4630      	mov	r0, r6
 802e2ee:	f000 f879 	bl	802e3e4 <_printf_i>
 802e2f2:	e7e4      	b.n	802e2be <_vfiprintf_r+0x1ea>
 802e2f4:	08045b6c 	.word	0x08045b6c
 802e2f8:	08045b76 	.word	0x08045b76
 802e2fc:	00000000 	.word	0x00000000
 802e300:	0802e0af 	.word	0x0802e0af
 802e304:	08045b72 	.word	0x08045b72

0802e308 <_printf_common>:
 802e308:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802e30c:	4616      	mov	r6, r2
 802e30e:	4699      	mov	r9, r3
 802e310:	688a      	ldr	r2, [r1, #8]
 802e312:	690b      	ldr	r3, [r1, #16]
 802e314:	f8dd 8020 	ldr.w	r8, [sp, #32]
 802e318:	4293      	cmp	r3, r2
 802e31a:	bfb8      	it	lt
 802e31c:	4613      	movlt	r3, r2
 802e31e:	6033      	str	r3, [r6, #0]
 802e320:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 802e324:	4607      	mov	r7, r0
 802e326:	460c      	mov	r4, r1
 802e328:	b10a      	cbz	r2, 802e32e <_printf_common+0x26>
 802e32a:	3301      	adds	r3, #1
 802e32c:	6033      	str	r3, [r6, #0]
 802e32e:	6823      	ldr	r3, [r4, #0]
 802e330:	0699      	lsls	r1, r3, #26
 802e332:	bf42      	ittt	mi
 802e334:	6833      	ldrmi	r3, [r6, #0]
 802e336:	3302      	addmi	r3, #2
 802e338:	6033      	strmi	r3, [r6, #0]
 802e33a:	6825      	ldr	r5, [r4, #0]
 802e33c:	f015 0506 	ands.w	r5, r5, #6
 802e340:	d106      	bne.n	802e350 <_printf_common+0x48>
 802e342:	f104 0a19 	add.w	sl, r4, #25
 802e346:	68e3      	ldr	r3, [r4, #12]
 802e348:	6832      	ldr	r2, [r6, #0]
 802e34a:	1a9b      	subs	r3, r3, r2
 802e34c:	42ab      	cmp	r3, r5
 802e34e:	dc26      	bgt.n	802e39e <_printf_common+0x96>
 802e350:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 802e354:	1e13      	subs	r3, r2, #0
 802e356:	6822      	ldr	r2, [r4, #0]
 802e358:	bf18      	it	ne
 802e35a:	2301      	movne	r3, #1
 802e35c:	0692      	lsls	r2, r2, #26
 802e35e:	d42b      	bmi.n	802e3b8 <_printf_common+0xb0>
 802e360:	f104 0243 	add.w	r2, r4, #67	; 0x43
 802e364:	4649      	mov	r1, r9
 802e366:	4638      	mov	r0, r7
 802e368:	47c0      	blx	r8
 802e36a:	3001      	adds	r0, #1
 802e36c:	d01e      	beq.n	802e3ac <_printf_common+0xa4>
 802e36e:	6823      	ldr	r3, [r4, #0]
 802e370:	6922      	ldr	r2, [r4, #16]
 802e372:	f003 0306 	and.w	r3, r3, #6
 802e376:	2b04      	cmp	r3, #4
 802e378:	bf02      	ittt	eq
 802e37a:	68e5      	ldreq	r5, [r4, #12]
 802e37c:	6833      	ldreq	r3, [r6, #0]
 802e37e:	1aed      	subeq	r5, r5, r3
 802e380:	68a3      	ldr	r3, [r4, #8]
 802e382:	bf0c      	ite	eq
 802e384:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 802e388:	2500      	movne	r5, #0
 802e38a:	4293      	cmp	r3, r2
 802e38c:	bfc4      	itt	gt
 802e38e:	1a9b      	subgt	r3, r3, r2
 802e390:	18ed      	addgt	r5, r5, r3
 802e392:	2600      	movs	r6, #0
 802e394:	341a      	adds	r4, #26
 802e396:	42b5      	cmp	r5, r6
 802e398:	d11a      	bne.n	802e3d0 <_printf_common+0xc8>
 802e39a:	2000      	movs	r0, #0
 802e39c:	e008      	b.n	802e3b0 <_printf_common+0xa8>
 802e39e:	2301      	movs	r3, #1
 802e3a0:	4652      	mov	r2, sl
 802e3a2:	4649      	mov	r1, r9
 802e3a4:	4638      	mov	r0, r7
 802e3a6:	47c0      	blx	r8
 802e3a8:	3001      	adds	r0, #1
 802e3aa:	d103      	bne.n	802e3b4 <_printf_common+0xac>
 802e3ac:	f04f 30ff 	mov.w	r0, #4294967295
 802e3b0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802e3b4:	3501      	adds	r5, #1
 802e3b6:	e7c6      	b.n	802e346 <_printf_common+0x3e>
 802e3b8:	18e1      	adds	r1, r4, r3
 802e3ba:	1c5a      	adds	r2, r3, #1
 802e3bc:	2030      	movs	r0, #48	; 0x30
 802e3be:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 802e3c2:	4422      	add	r2, r4
 802e3c4:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 802e3c8:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 802e3cc:	3302      	adds	r3, #2
 802e3ce:	e7c7      	b.n	802e360 <_printf_common+0x58>
 802e3d0:	2301      	movs	r3, #1
 802e3d2:	4622      	mov	r2, r4
 802e3d4:	4649      	mov	r1, r9
 802e3d6:	4638      	mov	r0, r7
 802e3d8:	47c0      	blx	r8
 802e3da:	3001      	adds	r0, #1
 802e3dc:	d0e6      	beq.n	802e3ac <_printf_common+0xa4>
 802e3de:	3601      	adds	r6, #1
 802e3e0:	e7d9      	b.n	802e396 <_printf_common+0x8e>
	...

0802e3e4 <_printf_i>:
 802e3e4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 802e3e8:	7e0f      	ldrb	r7, [r1, #24]
 802e3ea:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802e3ec:	2f78      	cmp	r7, #120	; 0x78
 802e3ee:	4691      	mov	r9, r2
 802e3f0:	4680      	mov	r8, r0
 802e3f2:	460c      	mov	r4, r1
 802e3f4:	469a      	mov	sl, r3
 802e3f6:	f101 0243 	add.w	r2, r1, #67	; 0x43
 802e3fa:	d807      	bhi.n	802e40c <_printf_i+0x28>
 802e3fc:	2f62      	cmp	r7, #98	; 0x62
 802e3fe:	d80a      	bhi.n	802e416 <_printf_i+0x32>
 802e400:	2f00      	cmp	r7, #0
 802e402:	f000 80d4 	beq.w	802e5ae <_printf_i+0x1ca>
 802e406:	2f58      	cmp	r7, #88	; 0x58
 802e408:	f000 80c0 	beq.w	802e58c <_printf_i+0x1a8>
 802e40c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802e410:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 802e414:	e03a      	b.n	802e48c <_printf_i+0xa8>
 802e416:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 802e41a:	2b15      	cmp	r3, #21
 802e41c:	d8f6      	bhi.n	802e40c <_printf_i+0x28>
 802e41e:	a101      	add	r1, pc, #4	; (adr r1, 802e424 <_printf_i+0x40>)
 802e420:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 802e424:	0802e47d 	.word	0x0802e47d
 802e428:	0802e491 	.word	0x0802e491
 802e42c:	0802e40d 	.word	0x0802e40d
 802e430:	0802e40d 	.word	0x0802e40d
 802e434:	0802e40d 	.word	0x0802e40d
 802e438:	0802e40d 	.word	0x0802e40d
 802e43c:	0802e491 	.word	0x0802e491
 802e440:	0802e40d 	.word	0x0802e40d
 802e444:	0802e40d 	.word	0x0802e40d
 802e448:	0802e40d 	.word	0x0802e40d
 802e44c:	0802e40d 	.word	0x0802e40d
 802e450:	0802e595 	.word	0x0802e595
 802e454:	0802e4bd 	.word	0x0802e4bd
 802e458:	0802e54f 	.word	0x0802e54f
 802e45c:	0802e40d 	.word	0x0802e40d
 802e460:	0802e40d 	.word	0x0802e40d
 802e464:	0802e5b7 	.word	0x0802e5b7
 802e468:	0802e40d 	.word	0x0802e40d
 802e46c:	0802e4bd 	.word	0x0802e4bd
 802e470:	0802e40d 	.word	0x0802e40d
 802e474:	0802e40d 	.word	0x0802e40d
 802e478:	0802e557 	.word	0x0802e557
 802e47c:	682b      	ldr	r3, [r5, #0]
 802e47e:	1d1a      	adds	r2, r3, #4
 802e480:	681b      	ldr	r3, [r3, #0]
 802e482:	602a      	str	r2, [r5, #0]
 802e484:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802e488:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 802e48c:	2301      	movs	r3, #1
 802e48e:	e09f      	b.n	802e5d0 <_printf_i+0x1ec>
 802e490:	6820      	ldr	r0, [r4, #0]
 802e492:	682b      	ldr	r3, [r5, #0]
 802e494:	0607      	lsls	r7, r0, #24
 802e496:	f103 0104 	add.w	r1, r3, #4
 802e49a:	6029      	str	r1, [r5, #0]
 802e49c:	d501      	bpl.n	802e4a2 <_printf_i+0xbe>
 802e49e:	681e      	ldr	r6, [r3, #0]
 802e4a0:	e003      	b.n	802e4aa <_printf_i+0xc6>
 802e4a2:	0646      	lsls	r6, r0, #25
 802e4a4:	d5fb      	bpl.n	802e49e <_printf_i+0xba>
 802e4a6:	f9b3 6000 	ldrsh.w	r6, [r3]
 802e4aa:	2e00      	cmp	r6, #0
 802e4ac:	da03      	bge.n	802e4b6 <_printf_i+0xd2>
 802e4ae:	232d      	movs	r3, #45	; 0x2d
 802e4b0:	4276      	negs	r6, r6
 802e4b2:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802e4b6:	485a      	ldr	r0, [pc, #360]	; (802e620 <_printf_i+0x23c>)
 802e4b8:	230a      	movs	r3, #10
 802e4ba:	e012      	b.n	802e4e2 <_printf_i+0xfe>
 802e4bc:	682b      	ldr	r3, [r5, #0]
 802e4be:	6820      	ldr	r0, [r4, #0]
 802e4c0:	1d19      	adds	r1, r3, #4
 802e4c2:	6029      	str	r1, [r5, #0]
 802e4c4:	0605      	lsls	r5, r0, #24
 802e4c6:	d501      	bpl.n	802e4cc <_printf_i+0xe8>
 802e4c8:	681e      	ldr	r6, [r3, #0]
 802e4ca:	e002      	b.n	802e4d2 <_printf_i+0xee>
 802e4cc:	0641      	lsls	r1, r0, #25
 802e4ce:	d5fb      	bpl.n	802e4c8 <_printf_i+0xe4>
 802e4d0:	881e      	ldrh	r6, [r3, #0]
 802e4d2:	4853      	ldr	r0, [pc, #332]	; (802e620 <_printf_i+0x23c>)
 802e4d4:	2f6f      	cmp	r7, #111	; 0x6f
 802e4d6:	bf0c      	ite	eq
 802e4d8:	2308      	moveq	r3, #8
 802e4da:	230a      	movne	r3, #10
 802e4dc:	2100      	movs	r1, #0
 802e4de:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 802e4e2:	6865      	ldr	r5, [r4, #4]
 802e4e4:	60a5      	str	r5, [r4, #8]
 802e4e6:	2d00      	cmp	r5, #0
 802e4e8:	bfa2      	ittt	ge
 802e4ea:	6821      	ldrge	r1, [r4, #0]
 802e4ec:	f021 0104 	bicge.w	r1, r1, #4
 802e4f0:	6021      	strge	r1, [r4, #0]
 802e4f2:	b90e      	cbnz	r6, 802e4f8 <_printf_i+0x114>
 802e4f4:	2d00      	cmp	r5, #0
 802e4f6:	d04b      	beq.n	802e590 <_printf_i+0x1ac>
 802e4f8:	4615      	mov	r5, r2
 802e4fa:	fbb6 f1f3 	udiv	r1, r6, r3
 802e4fe:	fb03 6711 	mls	r7, r3, r1, r6
 802e502:	5dc7      	ldrb	r7, [r0, r7]
 802e504:	f805 7d01 	strb.w	r7, [r5, #-1]!
 802e508:	4637      	mov	r7, r6
 802e50a:	42bb      	cmp	r3, r7
 802e50c:	460e      	mov	r6, r1
 802e50e:	d9f4      	bls.n	802e4fa <_printf_i+0x116>
 802e510:	2b08      	cmp	r3, #8
 802e512:	d10b      	bne.n	802e52c <_printf_i+0x148>
 802e514:	6823      	ldr	r3, [r4, #0]
 802e516:	07de      	lsls	r6, r3, #31
 802e518:	d508      	bpl.n	802e52c <_printf_i+0x148>
 802e51a:	6923      	ldr	r3, [r4, #16]
 802e51c:	6861      	ldr	r1, [r4, #4]
 802e51e:	4299      	cmp	r1, r3
 802e520:	bfde      	ittt	le
 802e522:	2330      	movle	r3, #48	; 0x30
 802e524:	f805 3c01 	strble.w	r3, [r5, #-1]
 802e528:	f105 35ff 	addle.w	r5, r5, #4294967295
 802e52c:	1b52      	subs	r2, r2, r5
 802e52e:	6122      	str	r2, [r4, #16]
 802e530:	f8cd a000 	str.w	sl, [sp]
 802e534:	464b      	mov	r3, r9
 802e536:	aa03      	add	r2, sp, #12
 802e538:	4621      	mov	r1, r4
 802e53a:	4640      	mov	r0, r8
 802e53c:	f7ff fee4 	bl	802e308 <_printf_common>
 802e540:	3001      	adds	r0, #1
 802e542:	d14a      	bne.n	802e5da <_printf_i+0x1f6>
 802e544:	f04f 30ff 	mov.w	r0, #4294967295
 802e548:	b004      	add	sp, #16
 802e54a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802e54e:	6823      	ldr	r3, [r4, #0]
 802e550:	f043 0320 	orr.w	r3, r3, #32
 802e554:	6023      	str	r3, [r4, #0]
 802e556:	4833      	ldr	r0, [pc, #204]	; (802e624 <_printf_i+0x240>)
 802e558:	2778      	movs	r7, #120	; 0x78
 802e55a:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 802e55e:	6823      	ldr	r3, [r4, #0]
 802e560:	6829      	ldr	r1, [r5, #0]
 802e562:	061f      	lsls	r7, r3, #24
 802e564:	f851 6b04 	ldr.w	r6, [r1], #4
 802e568:	d402      	bmi.n	802e570 <_printf_i+0x18c>
 802e56a:	065f      	lsls	r7, r3, #25
 802e56c:	bf48      	it	mi
 802e56e:	b2b6      	uxthmi	r6, r6
 802e570:	07df      	lsls	r7, r3, #31
 802e572:	bf48      	it	mi
 802e574:	f043 0320 	orrmi.w	r3, r3, #32
 802e578:	6029      	str	r1, [r5, #0]
 802e57a:	bf48      	it	mi
 802e57c:	6023      	strmi	r3, [r4, #0]
 802e57e:	b91e      	cbnz	r6, 802e588 <_printf_i+0x1a4>
 802e580:	6823      	ldr	r3, [r4, #0]
 802e582:	f023 0320 	bic.w	r3, r3, #32
 802e586:	6023      	str	r3, [r4, #0]
 802e588:	2310      	movs	r3, #16
 802e58a:	e7a7      	b.n	802e4dc <_printf_i+0xf8>
 802e58c:	4824      	ldr	r0, [pc, #144]	; (802e620 <_printf_i+0x23c>)
 802e58e:	e7e4      	b.n	802e55a <_printf_i+0x176>
 802e590:	4615      	mov	r5, r2
 802e592:	e7bd      	b.n	802e510 <_printf_i+0x12c>
 802e594:	682b      	ldr	r3, [r5, #0]
 802e596:	6826      	ldr	r6, [r4, #0]
 802e598:	6961      	ldr	r1, [r4, #20]
 802e59a:	1d18      	adds	r0, r3, #4
 802e59c:	6028      	str	r0, [r5, #0]
 802e59e:	0635      	lsls	r5, r6, #24
 802e5a0:	681b      	ldr	r3, [r3, #0]
 802e5a2:	d501      	bpl.n	802e5a8 <_printf_i+0x1c4>
 802e5a4:	6019      	str	r1, [r3, #0]
 802e5a6:	e002      	b.n	802e5ae <_printf_i+0x1ca>
 802e5a8:	0670      	lsls	r0, r6, #25
 802e5aa:	d5fb      	bpl.n	802e5a4 <_printf_i+0x1c0>
 802e5ac:	8019      	strh	r1, [r3, #0]
 802e5ae:	2300      	movs	r3, #0
 802e5b0:	6123      	str	r3, [r4, #16]
 802e5b2:	4615      	mov	r5, r2
 802e5b4:	e7bc      	b.n	802e530 <_printf_i+0x14c>
 802e5b6:	682b      	ldr	r3, [r5, #0]
 802e5b8:	1d1a      	adds	r2, r3, #4
 802e5ba:	602a      	str	r2, [r5, #0]
 802e5bc:	681d      	ldr	r5, [r3, #0]
 802e5be:	6862      	ldr	r2, [r4, #4]
 802e5c0:	2100      	movs	r1, #0
 802e5c2:	4628      	mov	r0, r5
 802e5c4:	f7d1 fe74 	bl	80002b0 <memchr>
 802e5c8:	b108      	cbz	r0, 802e5ce <_printf_i+0x1ea>
 802e5ca:	1b40      	subs	r0, r0, r5
 802e5cc:	6060      	str	r0, [r4, #4]
 802e5ce:	6863      	ldr	r3, [r4, #4]
 802e5d0:	6123      	str	r3, [r4, #16]
 802e5d2:	2300      	movs	r3, #0
 802e5d4:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802e5d8:	e7aa      	b.n	802e530 <_printf_i+0x14c>
 802e5da:	6923      	ldr	r3, [r4, #16]
 802e5dc:	462a      	mov	r2, r5
 802e5de:	4649      	mov	r1, r9
 802e5e0:	4640      	mov	r0, r8
 802e5e2:	47d0      	blx	sl
 802e5e4:	3001      	adds	r0, #1
 802e5e6:	d0ad      	beq.n	802e544 <_printf_i+0x160>
 802e5e8:	6823      	ldr	r3, [r4, #0]
 802e5ea:	079b      	lsls	r3, r3, #30
 802e5ec:	d413      	bmi.n	802e616 <_printf_i+0x232>
 802e5ee:	68e0      	ldr	r0, [r4, #12]
 802e5f0:	9b03      	ldr	r3, [sp, #12]
 802e5f2:	4298      	cmp	r0, r3
 802e5f4:	bfb8      	it	lt
 802e5f6:	4618      	movlt	r0, r3
 802e5f8:	e7a6      	b.n	802e548 <_printf_i+0x164>
 802e5fa:	2301      	movs	r3, #1
 802e5fc:	4632      	mov	r2, r6
 802e5fe:	4649      	mov	r1, r9
 802e600:	4640      	mov	r0, r8
 802e602:	47d0      	blx	sl
 802e604:	3001      	adds	r0, #1
 802e606:	d09d      	beq.n	802e544 <_printf_i+0x160>
 802e608:	3501      	adds	r5, #1
 802e60a:	68e3      	ldr	r3, [r4, #12]
 802e60c:	9903      	ldr	r1, [sp, #12]
 802e60e:	1a5b      	subs	r3, r3, r1
 802e610:	42ab      	cmp	r3, r5
 802e612:	dcf2      	bgt.n	802e5fa <_printf_i+0x216>
 802e614:	e7eb      	b.n	802e5ee <_printf_i+0x20a>
 802e616:	2500      	movs	r5, #0
 802e618:	f104 0619 	add.w	r6, r4, #25
 802e61c:	e7f5      	b.n	802e60a <_printf_i+0x226>
 802e61e:	bf00      	nop
 802e620:	08045b7d 	.word	0x08045b7d
 802e624:	08045b8e 	.word	0x08045b8e

0802e628 <__sflush_r>:
 802e628:	898a      	ldrh	r2, [r1, #12]
 802e62a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802e62e:	4605      	mov	r5, r0
 802e630:	0710      	lsls	r0, r2, #28
 802e632:	460c      	mov	r4, r1
 802e634:	d458      	bmi.n	802e6e8 <__sflush_r+0xc0>
 802e636:	684b      	ldr	r3, [r1, #4]
 802e638:	2b00      	cmp	r3, #0
 802e63a:	dc05      	bgt.n	802e648 <__sflush_r+0x20>
 802e63c:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 802e63e:	2b00      	cmp	r3, #0
 802e640:	dc02      	bgt.n	802e648 <__sflush_r+0x20>
 802e642:	2000      	movs	r0, #0
 802e644:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802e648:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802e64a:	2e00      	cmp	r6, #0
 802e64c:	d0f9      	beq.n	802e642 <__sflush_r+0x1a>
 802e64e:	2300      	movs	r3, #0
 802e650:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 802e654:	682f      	ldr	r7, [r5, #0]
 802e656:	6a21      	ldr	r1, [r4, #32]
 802e658:	602b      	str	r3, [r5, #0]
 802e65a:	d032      	beq.n	802e6c2 <__sflush_r+0x9a>
 802e65c:	6d60      	ldr	r0, [r4, #84]	; 0x54
 802e65e:	89a3      	ldrh	r3, [r4, #12]
 802e660:	075a      	lsls	r2, r3, #29
 802e662:	d505      	bpl.n	802e670 <__sflush_r+0x48>
 802e664:	6863      	ldr	r3, [r4, #4]
 802e666:	1ac0      	subs	r0, r0, r3
 802e668:	6b63      	ldr	r3, [r4, #52]	; 0x34
 802e66a:	b10b      	cbz	r3, 802e670 <__sflush_r+0x48>
 802e66c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 802e66e:	1ac0      	subs	r0, r0, r3
 802e670:	2300      	movs	r3, #0
 802e672:	4602      	mov	r2, r0
 802e674:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802e676:	6a21      	ldr	r1, [r4, #32]
 802e678:	4628      	mov	r0, r5
 802e67a:	47b0      	blx	r6
 802e67c:	1c43      	adds	r3, r0, #1
 802e67e:	89a3      	ldrh	r3, [r4, #12]
 802e680:	d106      	bne.n	802e690 <__sflush_r+0x68>
 802e682:	6829      	ldr	r1, [r5, #0]
 802e684:	291d      	cmp	r1, #29
 802e686:	d82b      	bhi.n	802e6e0 <__sflush_r+0xb8>
 802e688:	4a29      	ldr	r2, [pc, #164]	; (802e730 <__sflush_r+0x108>)
 802e68a:	410a      	asrs	r2, r1
 802e68c:	07d6      	lsls	r6, r2, #31
 802e68e:	d427      	bmi.n	802e6e0 <__sflush_r+0xb8>
 802e690:	2200      	movs	r2, #0
 802e692:	6062      	str	r2, [r4, #4]
 802e694:	04d9      	lsls	r1, r3, #19
 802e696:	6922      	ldr	r2, [r4, #16]
 802e698:	6022      	str	r2, [r4, #0]
 802e69a:	d504      	bpl.n	802e6a6 <__sflush_r+0x7e>
 802e69c:	1c42      	adds	r2, r0, #1
 802e69e:	d101      	bne.n	802e6a4 <__sflush_r+0x7c>
 802e6a0:	682b      	ldr	r3, [r5, #0]
 802e6a2:	b903      	cbnz	r3, 802e6a6 <__sflush_r+0x7e>
 802e6a4:	6560      	str	r0, [r4, #84]	; 0x54
 802e6a6:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802e6a8:	602f      	str	r7, [r5, #0]
 802e6aa:	2900      	cmp	r1, #0
 802e6ac:	d0c9      	beq.n	802e642 <__sflush_r+0x1a>
 802e6ae:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802e6b2:	4299      	cmp	r1, r3
 802e6b4:	d002      	beq.n	802e6bc <__sflush_r+0x94>
 802e6b6:	4628      	mov	r0, r5
 802e6b8:	f7ff fc96 	bl	802dfe8 <_free_r>
 802e6bc:	2000      	movs	r0, #0
 802e6be:	6360      	str	r0, [r4, #52]	; 0x34
 802e6c0:	e7c0      	b.n	802e644 <__sflush_r+0x1c>
 802e6c2:	2301      	movs	r3, #1
 802e6c4:	4628      	mov	r0, r5
 802e6c6:	47b0      	blx	r6
 802e6c8:	1c41      	adds	r1, r0, #1
 802e6ca:	d1c8      	bne.n	802e65e <__sflush_r+0x36>
 802e6cc:	682b      	ldr	r3, [r5, #0]
 802e6ce:	2b00      	cmp	r3, #0
 802e6d0:	d0c5      	beq.n	802e65e <__sflush_r+0x36>
 802e6d2:	2b1d      	cmp	r3, #29
 802e6d4:	d001      	beq.n	802e6da <__sflush_r+0xb2>
 802e6d6:	2b16      	cmp	r3, #22
 802e6d8:	d101      	bne.n	802e6de <__sflush_r+0xb6>
 802e6da:	602f      	str	r7, [r5, #0]
 802e6dc:	e7b1      	b.n	802e642 <__sflush_r+0x1a>
 802e6de:	89a3      	ldrh	r3, [r4, #12]
 802e6e0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802e6e4:	81a3      	strh	r3, [r4, #12]
 802e6e6:	e7ad      	b.n	802e644 <__sflush_r+0x1c>
 802e6e8:	690f      	ldr	r7, [r1, #16]
 802e6ea:	2f00      	cmp	r7, #0
 802e6ec:	d0a9      	beq.n	802e642 <__sflush_r+0x1a>
 802e6ee:	0793      	lsls	r3, r2, #30
 802e6f0:	680e      	ldr	r6, [r1, #0]
 802e6f2:	bf08      	it	eq
 802e6f4:	694b      	ldreq	r3, [r1, #20]
 802e6f6:	600f      	str	r7, [r1, #0]
 802e6f8:	bf18      	it	ne
 802e6fa:	2300      	movne	r3, #0
 802e6fc:	eba6 0807 	sub.w	r8, r6, r7
 802e700:	608b      	str	r3, [r1, #8]
 802e702:	f1b8 0f00 	cmp.w	r8, #0
 802e706:	dd9c      	ble.n	802e642 <__sflush_r+0x1a>
 802e708:	6a21      	ldr	r1, [r4, #32]
 802e70a:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 802e70c:	4643      	mov	r3, r8
 802e70e:	463a      	mov	r2, r7
 802e710:	4628      	mov	r0, r5
 802e712:	47b0      	blx	r6
 802e714:	2800      	cmp	r0, #0
 802e716:	dc06      	bgt.n	802e726 <__sflush_r+0xfe>
 802e718:	89a3      	ldrh	r3, [r4, #12]
 802e71a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802e71e:	81a3      	strh	r3, [r4, #12]
 802e720:	f04f 30ff 	mov.w	r0, #4294967295
 802e724:	e78e      	b.n	802e644 <__sflush_r+0x1c>
 802e726:	4407      	add	r7, r0
 802e728:	eba8 0800 	sub.w	r8, r8, r0
 802e72c:	e7e9      	b.n	802e702 <__sflush_r+0xda>
 802e72e:	bf00      	nop
 802e730:	dfbffffe 	.word	0xdfbffffe

0802e734 <_fflush_r>:
 802e734:	b538      	push	{r3, r4, r5, lr}
 802e736:	690b      	ldr	r3, [r1, #16]
 802e738:	4605      	mov	r5, r0
 802e73a:	460c      	mov	r4, r1
 802e73c:	b913      	cbnz	r3, 802e744 <_fflush_r+0x10>
 802e73e:	2500      	movs	r5, #0
 802e740:	4628      	mov	r0, r5
 802e742:	bd38      	pop	{r3, r4, r5, pc}
 802e744:	b118      	cbz	r0, 802e74e <_fflush_r+0x1a>
 802e746:	6a03      	ldr	r3, [r0, #32]
 802e748:	b90b      	cbnz	r3, 802e74e <_fflush_r+0x1a>
 802e74a:	f7ff fa2f 	bl	802dbac <__sinit>
 802e74e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802e752:	2b00      	cmp	r3, #0
 802e754:	d0f3      	beq.n	802e73e <_fflush_r+0xa>
 802e756:	6e62      	ldr	r2, [r4, #100]	; 0x64
 802e758:	07d0      	lsls	r0, r2, #31
 802e75a:	d404      	bmi.n	802e766 <_fflush_r+0x32>
 802e75c:	0599      	lsls	r1, r3, #22
 802e75e:	d402      	bmi.n	802e766 <_fflush_r+0x32>
 802e760:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802e762:	f7ff fbd2 	bl	802df0a <__retarget_lock_acquire_recursive>
 802e766:	4628      	mov	r0, r5
 802e768:	4621      	mov	r1, r4
 802e76a:	f7ff ff5d 	bl	802e628 <__sflush_r>
 802e76e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 802e770:	07da      	lsls	r2, r3, #31
 802e772:	4605      	mov	r5, r0
 802e774:	d4e4      	bmi.n	802e740 <_fflush_r+0xc>
 802e776:	89a3      	ldrh	r3, [r4, #12]
 802e778:	059b      	lsls	r3, r3, #22
 802e77a:	d4e1      	bmi.n	802e740 <_fflush_r+0xc>
 802e77c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802e77e:	f7ff fbc5 	bl	802df0c <__retarget_lock_release_recursive>
 802e782:	e7dd      	b.n	802e740 <_fflush_r+0xc>

0802e784 <__swbuf_r>:
 802e784:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802e786:	460e      	mov	r6, r1
 802e788:	4614      	mov	r4, r2
 802e78a:	4605      	mov	r5, r0
 802e78c:	b118      	cbz	r0, 802e796 <__swbuf_r+0x12>
 802e78e:	6a03      	ldr	r3, [r0, #32]
 802e790:	b90b      	cbnz	r3, 802e796 <__swbuf_r+0x12>
 802e792:	f7ff fa0b 	bl	802dbac <__sinit>
 802e796:	69a3      	ldr	r3, [r4, #24]
 802e798:	60a3      	str	r3, [r4, #8]
 802e79a:	89a3      	ldrh	r3, [r4, #12]
 802e79c:	071a      	lsls	r2, r3, #28
 802e79e:	d525      	bpl.n	802e7ec <__swbuf_r+0x68>
 802e7a0:	6923      	ldr	r3, [r4, #16]
 802e7a2:	b31b      	cbz	r3, 802e7ec <__swbuf_r+0x68>
 802e7a4:	6823      	ldr	r3, [r4, #0]
 802e7a6:	6922      	ldr	r2, [r4, #16]
 802e7a8:	1a98      	subs	r0, r3, r2
 802e7aa:	6963      	ldr	r3, [r4, #20]
 802e7ac:	b2f6      	uxtb	r6, r6
 802e7ae:	4283      	cmp	r3, r0
 802e7b0:	4637      	mov	r7, r6
 802e7b2:	dc04      	bgt.n	802e7be <__swbuf_r+0x3a>
 802e7b4:	4621      	mov	r1, r4
 802e7b6:	4628      	mov	r0, r5
 802e7b8:	f7ff ffbc 	bl	802e734 <_fflush_r>
 802e7bc:	b9e0      	cbnz	r0, 802e7f8 <__swbuf_r+0x74>
 802e7be:	68a3      	ldr	r3, [r4, #8]
 802e7c0:	3b01      	subs	r3, #1
 802e7c2:	60a3      	str	r3, [r4, #8]
 802e7c4:	6823      	ldr	r3, [r4, #0]
 802e7c6:	1c5a      	adds	r2, r3, #1
 802e7c8:	6022      	str	r2, [r4, #0]
 802e7ca:	701e      	strb	r6, [r3, #0]
 802e7cc:	6962      	ldr	r2, [r4, #20]
 802e7ce:	1c43      	adds	r3, r0, #1
 802e7d0:	429a      	cmp	r2, r3
 802e7d2:	d004      	beq.n	802e7de <__swbuf_r+0x5a>
 802e7d4:	89a3      	ldrh	r3, [r4, #12]
 802e7d6:	07db      	lsls	r3, r3, #31
 802e7d8:	d506      	bpl.n	802e7e8 <__swbuf_r+0x64>
 802e7da:	2e0a      	cmp	r6, #10
 802e7dc:	d104      	bne.n	802e7e8 <__swbuf_r+0x64>
 802e7de:	4621      	mov	r1, r4
 802e7e0:	4628      	mov	r0, r5
 802e7e2:	f7ff ffa7 	bl	802e734 <_fflush_r>
 802e7e6:	b938      	cbnz	r0, 802e7f8 <__swbuf_r+0x74>
 802e7e8:	4638      	mov	r0, r7
 802e7ea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802e7ec:	4621      	mov	r1, r4
 802e7ee:	4628      	mov	r0, r5
 802e7f0:	f000 f806 	bl	802e800 <__swsetup_r>
 802e7f4:	2800      	cmp	r0, #0
 802e7f6:	d0d5      	beq.n	802e7a4 <__swbuf_r+0x20>
 802e7f8:	f04f 37ff 	mov.w	r7, #4294967295
 802e7fc:	e7f4      	b.n	802e7e8 <__swbuf_r+0x64>
	...

0802e800 <__swsetup_r>:
 802e800:	b538      	push	{r3, r4, r5, lr}
 802e802:	4b2a      	ldr	r3, [pc, #168]	; (802e8ac <__swsetup_r+0xac>)
 802e804:	4605      	mov	r5, r0
 802e806:	6818      	ldr	r0, [r3, #0]
 802e808:	460c      	mov	r4, r1
 802e80a:	b118      	cbz	r0, 802e814 <__swsetup_r+0x14>
 802e80c:	6a03      	ldr	r3, [r0, #32]
 802e80e:	b90b      	cbnz	r3, 802e814 <__swsetup_r+0x14>
 802e810:	f7ff f9cc 	bl	802dbac <__sinit>
 802e814:	89a3      	ldrh	r3, [r4, #12]
 802e816:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802e81a:	0718      	lsls	r0, r3, #28
 802e81c:	d422      	bmi.n	802e864 <__swsetup_r+0x64>
 802e81e:	06d9      	lsls	r1, r3, #27
 802e820:	d407      	bmi.n	802e832 <__swsetup_r+0x32>
 802e822:	2309      	movs	r3, #9
 802e824:	602b      	str	r3, [r5, #0]
 802e826:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 802e82a:	81a3      	strh	r3, [r4, #12]
 802e82c:	f04f 30ff 	mov.w	r0, #4294967295
 802e830:	e034      	b.n	802e89c <__swsetup_r+0x9c>
 802e832:	0758      	lsls	r0, r3, #29
 802e834:	d512      	bpl.n	802e85c <__swsetup_r+0x5c>
 802e836:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802e838:	b141      	cbz	r1, 802e84c <__swsetup_r+0x4c>
 802e83a:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802e83e:	4299      	cmp	r1, r3
 802e840:	d002      	beq.n	802e848 <__swsetup_r+0x48>
 802e842:	4628      	mov	r0, r5
 802e844:	f7ff fbd0 	bl	802dfe8 <_free_r>
 802e848:	2300      	movs	r3, #0
 802e84a:	6363      	str	r3, [r4, #52]	; 0x34
 802e84c:	89a3      	ldrh	r3, [r4, #12]
 802e84e:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 802e852:	81a3      	strh	r3, [r4, #12]
 802e854:	2300      	movs	r3, #0
 802e856:	6063      	str	r3, [r4, #4]
 802e858:	6923      	ldr	r3, [r4, #16]
 802e85a:	6023      	str	r3, [r4, #0]
 802e85c:	89a3      	ldrh	r3, [r4, #12]
 802e85e:	f043 0308 	orr.w	r3, r3, #8
 802e862:	81a3      	strh	r3, [r4, #12]
 802e864:	6923      	ldr	r3, [r4, #16]
 802e866:	b94b      	cbnz	r3, 802e87c <__swsetup_r+0x7c>
 802e868:	89a3      	ldrh	r3, [r4, #12]
 802e86a:	f403 7320 	and.w	r3, r3, #640	; 0x280
 802e86e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 802e872:	d003      	beq.n	802e87c <__swsetup_r+0x7c>
 802e874:	4621      	mov	r1, r4
 802e876:	4628      	mov	r0, r5
 802e878:	f000 f840 	bl	802e8fc <__smakebuf_r>
 802e87c:	89a0      	ldrh	r0, [r4, #12]
 802e87e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802e882:	f010 0301 	ands.w	r3, r0, #1
 802e886:	d00a      	beq.n	802e89e <__swsetup_r+0x9e>
 802e888:	2300      	movs	r3, #0
 802e88a:	60a3      	str	r3, [r4, #8]
 802e88c:	6963      	ldr	r3, [r4, #20]
 802e88e:	425b      	negs	r3, r3
 802e890:	61a3      	str	r3, [r4, #24]
 802e892:	6923      	ldr	r3, [r4, #16]
 802e894:	b943      	cbnz	r3, 802e8a8 <__swsetup_r+0xa8>
 802e896:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 802e89a:	d1c4      	bne.n	802e826 <__swsetup_r+0x26>
 802e89c:	bd38      	pop	{r3, r4, r5, pc}
 802e89e:	0781      	lsls	r1, r0, #30
 802e8a0:	bf58      	it	pl
 802e8a2:	6963      	ldrpl	r3, [r4, #20]
 802e8a4:	60a3      	str	r3, [r4, #8]
 802e8a6:	e7f4      	b.n	802e892 <__swsetup_r+0x92>
 802e8a8:	2000      	movs	r0, #0
 802e8aa:	e7f7      	b.n	802e89c <__swsetup_r+0x9c>
 802e8ac:	20000164 	.word	0x20000164

0802e8b0 <__swhatbuf_r>:
 802e8b0:	b570      	push	{r4, r5, r6, lr}
 802e8b2:	460c      	mov	r4, r1
 802e8b4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802e8b8:	2900      	cmp	r1, #0
 802e8ba:	b096      	sub	sp, #88	; 0x58
 802e8bc:	4615      	mov	r5, r2
 802e8be:	461e      	mov	r6, r3
 802e8c0:	da0d      	bge.n	802e8de <__swhatbuf_r+0x2e>
 802e8c2:	89a3      	ldrh	r3, [r4, #12]
 802e8c4:	f013 0f80 	tst.w	r3, #128	; 0x80
 802e8c8:	f04f 0100 	mov.w	r1, #0
 802e8cc:	bf0c      	ite	eq
 802e8ce:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 802e8d2:	2340      	movne	r3, #64	; 0x40
 802e8d4:	2000      	movs	r0, #0
 802e8d6:	6031      	str	r1, [r6, #0]
 802e8d8:	602b      	str	r3, [r5, #0]
 802e8da:	b016      	add	sp, #88	; 0x58
 802e8dc:	bd70      	pop	{r4, r5, r6, pc}
 802e8de:	466a      	mov	r2, sp
 802e8e0:	f000 f848 	bl	802e974 <_fstat_r>
 802e8e4:	2800      	cmp	r0, #0
 802e8e6:	dbec      	blt.n	802e8c2 <__swhatbuf_r+0x12>
 802e8e8:	9901      	ldr	r1, [sp, #4]
 802e8ea:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 802e8ee:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 802e8f2:	4259      	negs	r1, r3
 802e8f4:	4159      	adcs	r1, r3
 802e8f6:	f44f 6380 	mov.w	r3, #1024	; 0x400
 802e8fa:	e7eb      	b.n	802e8d4 <__swhatbuf_r+0x24>

0802e8fc <__smakebuf_r>:
 802e8fc:	898b      	ldrh	r3, [r1, #12]
 802e8fe:	b573      	push	{r0, r1, r4, r5, r6, lr}
 802e900:	079d      	lsls	r5, r3, #30
 802e902:	4606      	mov	r6, r0
 802e904:	460c      	mov	r4, r1
 802e906:	d507      	bpl.n	802e918 <__smakebuf_r+0x1c>
 802e908:	f104 0347 	add.w	r3, r4, #71	; 0x47
 802e90c:	6023      	str	r3, [r4, #0]
 802e90e:	6123      	str	r3, [r4, #16]
 802e910:	2301      	movs	r3, #1
 802e912:	6163      	str	r3, [r4, #20]
 802e914:	b002      	add	sp, #8
 802e916:	bd70      	pop	{r4, r5, r6, pc}
 802e918:	ab01      	add	r3, sp, #4
 802e91a:	466a      	mov	r2, sp
 802e91c:	f7ff ffc8 	bl	802e8b0 <__swhatbuf_r>
 802e920:	9900      	ldr	r1, [sp, #0]
 802e922:	4605      	mov	r5, r0
 802e924:	4630      	mov	r0, r6
 802e926:	f7ff f81b 	bl	802d960 <_malloc_r>
 802e92a:	b948      	cbnz	r0, 802e940 <__smakebuf_r+0x44>
 802e92c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802e930:	059a      	lsls	r2, r3, #22
 802e932:	d4ef      	bmi.n	802e914 <__smakebuf_r+0x18>
 802e934:	f023 0303 	bic.w	r3, r3, #3
 802e938:	f043 0302 	orr.w	r3, r3, #2
 802e93c:	81a3      	strh	r3, [r4, #12]
 802e93e:	e7e3      	b.n	802e908 <__smakebuf_r+0xc>
 802e940:	89a3      	ldrh	r3, [r4, #12]
 802e942:	6020      	str	r0, [r4, #0]
 802e944:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 802e948:	81a3      	strh	r3, [r4, #12]
 802e94a:	9b00      	ldr	r3, [sp, #0]
 802e94c:	6163      	str	r3, [r4, #20]
 802e94e:	9b01      	ldr	r3, [sp, #4]
 802e950:	6120      	str	r0, [r4, #16]
 802e952:	b15b      	cbz	r3, 802e96c <__smakebuf_r+0x70>
 802e954:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802e958:	4630      	mov	r0, r6
 802e95a:	f000 f81d 	bl	802e998 <_isatty_r>
 802e95e:	b128      	cbz	r0, 802e96c <__smakebuf_r+0x70>
 802e960:	89a3      	ldrh	r3, [r4, #12]
 802e962:	f023 0303 	bic.w	r3, r3, #3
 802e966:	f043 0301 	orr.w	r3, r3, #1
 802e96a:	81a3      	strh	r3, [r4, #12]
 802e96c:	89a3      	ldrh	r3, [r4, #12]
 802e96e:	431d      	orrs	r5, r3
 802e970:	81a5      	strh	r5, [r4, #12]
 802e972:	e7cf      	b.n	802e914 <__smakebuf_r+0x18>

0802e974 <_fstat_r>:
 802e974:	b538      	push	{r3, r4, r5, lr}
 802e976:	4d07      	ldr	r5, [pc, #28]	; (802e994 <_fstat_r+0x20>)
 802e978:	2300      	movs	r3, #0
 802e97a:	4604      	mov	r4, r0
 802e97c:	4608      	mov	r0, r1
 802e97e:	4611      	mov	r1, r2
 802e980:	602b      	str	r3, [r5, #0]
 802e982:	f7d3 ff67 	bl	8002854 <_fstat>
 802e986:	1c43      	adds	r3, r0, #1
 802e988:	d102      	bne.n	802e990 <_fstat_r+0x1c>
 802e98a:	682b      	ldr	r3, [r5, #0]
 802e98c:	b103      	cbz	r3, 802e990 <_fstat_r+0x1c>
 802e98e:	6023      	str	r3, [r4, #0]
 802e990:	bd38      	pop	{r3, r4, r5, pc}
 802e992:	bf00      	nop
 802e994:	200142e4 	.word	0x200142e4

0802e998 <_isatty_r>:
 802e998:	b538      	push	{r3, r4, r5, lr}
 802e99a:	4d06      	ldr	r5, [pc, #24]	; (802e9b4 <_isatty_r+0x1c>)
 802e99c:	2300      	movs	r3, #0
 802e99e:	4604      	mov	r4, r0
 802e9a0:	4608      	mov	r0, r1
 802e9a2:	602b      	str	r3, [r5, #0]
 802e9a4:	f7d3 ff5c 	bl	8002860 <_isatty>
 802e9a8:	1c43      	adds	r3, r0, #1
 802e9aa:	d102      	bne.n	802e9b2 <_isatty_r+0x1a>
 802e9ac:	682b      	ldr	r3, [r5, #0]
 802e9ae:	b103      	cbz	r3, 802e9b2 <_isatty_r+0x1a>
 802e9b0:	6023      	str	r3, [r4, #0]
 802e9b2:	bd38      	pop	{r3, r4, r5, pc}
 802e9b4:	200142e4 	.word	0x200142e4

0802e9b8 <_init>:
 802e9b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802e9ba:	bf00      	nop
 802e9bc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802e9be:	bc08      	pop	{r3}
 802e9c0:	469e      	mov	lr, r3
 802e9c2:	4770      	bx	lr

0802e9c4 <_fini>:
 802e9c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802e9c6:	bf00      	nop
 802e9c8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802e9ca:	bc08      	pop	{r3}
 802e9cc:	469e      	mov	lr, r3
 802e9ce:	4770      	bx	lr
